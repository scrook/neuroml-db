// Cell: cNAC187_L4_DBC_efeb05a196_0_0
/*
{
  "id" : "cNAC187_L4_DBC_efeb05a196_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.29752, -10.9202, 0.0, 2.7473", "-3.02947, -9.86122, 0.0, 4.90547", "-2.76143, -8.80223, 0.0, 7.1195", "-2.49339, -7.74324, 0.0, 9.06693", "-2.22534, -6.68425, 0.0, 10.5477", "-1.9573, -5.62526, 0.0, 11.7638", "-1.68926, -4.56627, 0.0, 12.6703", "-1.42121, -3.50728, 0.0, 13.5724", "-1.15317, -2.44829, 0.0, 13.9606", "-0.885125, -1.3893, 0.0, 14.249", "-0.617082, -0.330312, 0.0, 14.4914", "-0.349039, 0.728678, 0.0, 14.572", "-0.0809953, 1.78767, 0.0, 14.5168", "0.187048, 2.84666, 0.0, 14.1167", "0.455092, 3.90565, 0.0, 13.6161", "0.723135, 4.96464, 0.0, 12.8986", "0.991178, 6.02363, 0.0, 12.0703", "1.25922, 7.08262, 0.0, 10.8368", "1.52727, 8.14161, 0.0, 9.27498", "1.79531, 9.2006, 0.0, 7.02436", "2.06335, 10.2596, 0.0, 4.05122" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.851454, 10.3756, 1.7, 1.62", "0.851454, 10.3756, 1.7, 1.62", "0.777731, 11.9648, 1.65217, 0.96", "0.714546, 13.3268, 1.61117, 1.25", "0.626392, 15.2271, 1.55398, 1.55", "0.543889, 17.0056, 1.50045, 1.84", "0.46074, 18.798, 1.44651, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.23855, -9.6529, -9.03, 1.18", "-1.82488, -9.7594, -9.10269, 1.18", "-0.803491, -10.1371, -9.29841, 1.18", "0.91336, -10.9781, -9.67716, 1.03", "1.79356, -11.4826, -9.89052, 0.96", "2.55416, -11.8264, -10.0453, 0.81", "1.69464, -12.0486, -10.0603, 0.74", "1.0658, -12.4815, -10.1882, 0.74", "0.23253, -13.05, -10.4094, 0.96", "-0.785791, -13.6896, -10.7146, 1.18", "-2.25716, -14.5206, -11.2012, 0.88", "-3.49325, -15.153, -11.6664, 0.96", "-4.78342, -15.7577, -12.1695, 1.25", "-5.6819, -16.1615, -12.5473, 1.99", "-6.56272, -16.5603, -12.9629, 2.95", "-7.41828, -16.9865, -13.4531, 3.54", "-8.14047, -17.4017, -13.9823, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.90855, -11.9489, 1.23, 0.81", "-1.75045, -12.8469, 1.1946, 0.81", "-1.49078, -13.9464, 1.15141, 0.96", "-1.18602, -15.0444, 1.11029, 1.18", "-0.857404, -16.1076, 1.07285, 1.18", "-0.465586, -17.286, 1.06872, 0.81", "-0.21451, -18.006, 1.0917, 1.03", "0.167844, -19.0149, 1.19262, 1.47", "0.434378, -19.7375, 1.32272, 2.06", "0.642987, -20.3891, 1.48998, 2.14", "0.92182, -21.6005, 1.88479, 1.33", "1.08528, -23.1519, 2.4676, 0.96", "1.02995, -24.5333, 3.02038, 0.96", "0.818669, -25.5203, 3.42575, 1.18", "0.562699, -26.2498, 3.72995, 1.99", "0.153434, -27.1504, 4.09958, 2.88", "-0.387892, -28.1731, 4.49353, 3.02", "-1.14653, -29.5476, 4.9795, 1.77", "-2.18312, -31.5733, 5.60124, 0.81", "-2.6948, -32.754, 5.92165, 0.81", "-2.97151, -33.5937, 6.11873, 0.81", "-3.19142, -34.6139, 6.33385, 0.81", "-3.32167, -35.726, 6.56412, 0.81", "-3.35077, -36.66, 6.75132, 1.03", "-3.33428, -37.5824, 6.92521, 1.25", "-3.25536, -39.3018, 7.23429, 0.81", "-3.18677, -40.6722, 7.49238, 1.03", "-3.15226, -41.7664, 7.72005, 1.62", "-3.16641, -42.669, 7.93361, 2.73", "-3.25716, -43.9416, 8.26942, 4.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.51145, 6.49085, 5.69, 0.59", "7.4733, 7.02941, 5.48907, 0.44", "8.41055, 7.61453, 5.57565, 0.44", "9.19429, 8.12914, 5.86026, 0.44", "10.0337, 8.67783, 6.32764, 0.37", "10.6604, 9.06752, 6.7487, 1.03", "11.6452, 9.64862, 7.50367, 1.33", "12.685, 10.2372, 8.53996, 1.47", "13.3984, 10.6059, 9.39916, 1.25", "14.175, 10.9088, 10.4595, 0.29", "14.6749, 11.0002, 11.194, 0.22", "15.06, 10.9889, 11.7304, 0.22", "15.306, 10.9011, 12.0115, 0.22", "15.5993, 10.7619, 12.3117, 0.22", "16.0567, 10.5557, 12.7577, 1.03", "17.0277, 10.1928, 13.733, 2.21", "17.5655, 10.1021, 14.2817, 3.02", "19.2656, 10.2736, 16.0548, 0.29", "20.0478, 10.5889, 16.9165, 0.29", "20.4879, 10.8924, 17.4161, 0.44", "20.916, 11.307, 17.9238, 0.66", "21.5756, 12.1327, 18.7334, 1.11", "22.1806, 12.9916, 19.5088, 0.52", "22.6618, 13.7421, 20.0795, 0.22", "22.97, 14.0756, 20.3951, 0.22", "23.2726, 14.1823, 20.6784, 0.22", "23.5675, 14.0653, 20.931, 0.22", "24.2431, 13.6192, 21.4792, 0.66", "24.9261, 13.1278, 22.0038, 1.7", "25.6035, 12.6427, 22.5435, 2.21", "26.243, 12.2362, 23.1028, 1.7", "27.124, 11.8516, 23.9997, 0.29", "27.9341, 11.7335, 25.0192, 0.22", "28.2636, 11.8271, 25.5532, 0.22", "28.5925, 12.1635, 26.3901, 0.22", "28.7737, 12.6577, 27.3067, 0.96", "28.859, 13.5448, 28.7448, 0.74", "28.8128, 14.1769, 29.746, 0.74", "28.7463, 14.5267, 30.3416, 0.74", "28.6769, 14.9974, 31.3207, 0.74", "28.7059, 15.2654, 31.9682, 0.74", "28.7743, 15.3316, 32.195, 0.74", "29.2679, 15.4705, 32.9301, 0.74", "29.7867, 15.577, 33.5161, 1.18", "30.6992, 15.7415, 34.4582, 0.44", "31.5309, 15.895, 35.2284, 1.25", "32.6848, 16.1375, 36.2317, 2.73", "33.9178, 16.4413, 37.2847, 3.54", "34.6084, 16.6386, 37.8526, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.64855, 7.1161, 5.52, 0.88", "-5.05383, 7.56471, 5.7092, 0.74", "-5.68721, 8.21363, 6.07977, 0.22", "-6.10265, 8.60937, 6.35335, 0.22", "-6.65033, 9.08816, 6.7155, 0.44", "-7.1051, 9.4451, 7.00878, 0.44", "-7.69696, 9.83812, 7.38571, 0.22", "-8.3169, 10.1451, 7.79419, 0.22", "-8.63366, 10.2601, 7.99857, 0.22", "-9.07786, 10.3821, 8.27103, 0.96", "-9.7709, 10.5255, 8.70315, 1.47", "-11.0108, 10.7396, 9.54431, 0.15", "-11.5651, 10.8319, 9.90885, 0.15", "-11.9612, 10.9164, 10.133, 0.15", "-12.5547, 11.056, 10.4431, 0.88", "-13.6096, 11.3251, 10.9768, 0.37", "-14.7419, 11.6398, 11.5392, 1.55", "-15.6516, 11.922, 11.9841, 2.95", "-17.9814, 12.6915, 13.1026, 0.07", "-18.4166, 12.8337, 13.3074, 0.88", "-19.321, 13.1251, 13.7026, 0.07", "-20.1702, 13.3931, 14.0065, 0.22", "-20.7575, 13.5754, 14.191, 0.22", "-22.0631, 13.9546, 14.583, 0.15", "-22.4679, 14.0546, 14.6991, 0.96", "-23.0504, 14.1842, 14.8364, 1.84", "-25.1346, 14.5829, 15.205, 0.15", "-25.5975, 14.6477, 15.2703, 0.66", "-26.3308, 14.7206, 15.3617, 1.18", "-28.1133, 14.8349, 15.5649, 0.15", "-28.7762, 14.8506, 15.6292, 1.33", "-29.661, 14.8366, 15.7066, 2.51", "-32.1535, 14.6931, 15.9006, 0.15", "-32.5568, 14.6587, 15.9154, 0.52", "-33.2937, 14.5748, 15.9088, 0.81", "-34.4486, 14.4173, 15.8399, 0.15", "-35.0333, 14.3328, 15.797, 0.15", "-35.4797, 14.2702, 15.7517, 0.66", "-36.847, 14.0982, 15.5683, 1.84", "-38.1949, 13.9741, 15.4052, 0.22", "-38.882, 13.9329, 15.3411, 0.37", "-39.1796, 13.9241, 15.322, 0.88", "-40.2939, 13.9118, 15.3057, 0.15", "-40.9048, 13.9219, 15.3245, 0.15", "-41.5731, 13.9537, 15.3865, 0.74", "-43.5485, 14.0872, 15.7078, 0.07", "-43.9199, 14.1205, 15.7853, 0.52", "-45.1902, 14.2736, 16.1031, 0.15", "-45.79, 14.3642, 16.2807, 0.96", "-46.5396, 14.4938, 16.5278, 1.92", "-48.1562, 14.8592, 17.0981, 0.15", "-48.8298, 15.0535, 17.3431, 0.22", "-49.6321, 15.3116, 17.6148, 0.07", "-50.1632, 15.5166, 17.7749, 1.03", "-50.7149, 15.7497, 17.9285, 1.77", "-52.3848, 16.5089, 18.3435, 0.07", "-53.0678, 16.8459, 18.4963, 0.07", "-53.5368, 17.0758, 18.6109, 0.74", "-54.8115, 17.7083, 18.9336, 0.07", "-55.2048, 17.9006, 19.0348, 0.52", "-56.2729, 18.3491, 19.334, 0.07", "-56.9277, 18.5555, 19.5359, 0.22", "-57.6458, 18.6995, 19.7619, 0.15", "-57.9423, 18.7174, 19.8524, 0.96", "-58.6606, 18.6636, 20.06, 1.92", "-60.1238, 18.4432, 20.4525, 0.07", "-60.8376, 18.2851, 20.6161, 0.29", "-61.6229, 18.1165, 20.7555, 0.07", "-62.3932, 17.9979, 20.8545, 0.07", "-62.6961, 17.9709, 20.8887, 0.07", "-62.985, 17.9593, 20.9141, 0.44", "-63.598, 17.9701, 20.9474, 0.74", "-65.1113, 18.0168, 21.0178, 0.07", "-66.3119, 18.0566, 21.0789, 0.15", "-67.1453, 18.0795, 21.1226, 0.96", "-68.171, 18.0633, 21.1875, 0.07", "-68.9948, 18.0122, 21.2451, 0.59", "-69.7834, 17.9128, 21.3087, 0.15", "-70.1558, 17.838, 21.3416, 0.74", "-70.717, 17.6953, 21.3918, 1.18", "-72.4718, 17.206, 21.4858, 0.15", "-73.053, 17.0459, 21.5026, 0.81", "-73.9337, 16.8067, 21.5022, 0.15", "-74.4516, 16.6683, 21.4899, 0.22", "-75.7896, 16.3118, 21.4325, 0.07", "-76.6201, 16.09, 21.3829, 1.03", "-77.2028, 15.9443, 21.3366, 1.84", "-79.1442, 15.5271, 21.1864, 0.07", "-79.534, 15.4642, 21.1578, 0.22", "-81.3695, 15.2699, 21.0555, 0.07", "-81.6066, 15.2539, 21.048, 0.66", "-82.1341, 15.2305, 21.0592, 1.25", "-83.0238, 15.2118, 21.0938, 0.15", "-83.7424, 15.2321, 21.136, 0.74", "-84.9174, 15.2606, 21.2477, 0.07", "-85.7047, 15.2762, 21.3501, 0.07", "-86.5115, 15.2794, 21.4671, 0.07", "-86.6712, 15.2822, 21.4968, 0.07", "-87.3246, 15.3161, 21.6425, 0.74", "-88.5733, 15.416, 21.9996, 0.07", "-88.9203, 15.4647, 22.1195, 1.11", "-89.6523, 15.5916, 22.4095, 1.62", "-90.9709, 15.7557, 22.9916, 0.07", "-91.6546, 15.8121, 23.3125, 0.81", "-92.7349, 15.8535, 23.8406, 0.15", "-93.6071, 15.8393, 24.2958, 0.15", "-94.5144, 15.7706, 24.7879, 1.11", "-96.5463, 15.4848, 25.9126, 0.15", "-97.0123, 15.3922, 26.1668, 1.03", "-97.863, 15.197, 26.6236, 1.84", "-99.3201, 14.8216, 27.3626, 0.22", "-99.5819, 14.7465, 27.4958, 0.22", "-100.114, 14.5918, 27.7693, 0.07", "-100.503, 14.4822, 27.977, 0.59", "-101.314, 14.2474, 28.4341, 0.07", "-101.843, 14.0823, 28.7398, 0.29", "-102.373, 13.8891, 29.047, 0.07", "-102.979, 13.6348, 29.4035, 0.37", "-103.837, 13.233, 29.9129, 0.07", "-104.455, 12.9063, 30.2828, 0.66", "-105.136, 12.4472, 30.6672, 0.07", "-105.75, 11.9539, 30.9974, 0.96", "-106.792, 10.9426, 31.5171, 0.07", "-107.345, 10.2566, 31.7591, 0.07", "-107.7, 9.68122, 31.8827, 1.03", "-108.598, 7.62378, 32.1302, 0.15", "-108.819, 6.95056, 32.1638, 0.15", "-109.038, 6.07629, 32.163, 1.11", "-109.305, 4.62268, 32.1103, 0.15", "-109.493, 3.37999, 32.0415, 1.84", "-109.834, 0.953683, 31.8891, 0.15", "-109.905, 0.420057, 31.8566, 0.59", "-110.032, -0.407773, 31.8338, 1.03", "-110.371, -2.21574, 31.8835, 0.15", "-110.506, -2.80634, 31.962, 0.52", "-110.798, -3.91973, 32.2079, 0.15", "-110.973, -4.57384, 32.4153, 0.66", "-111.21, -5.57758, 32.8182, 0.15", "-111.415, -6.71448, 33.3533, 1.62", "-111.576, -8.34615, 34.2116, 0.07", "-111.586, -8.95027, 34.5257, 0.29", "-111.521, -10.0554, 35.0512, 0.07", "-111.444, -10.6572, 35.2877, 0.96", "-111.291, -11.6244, 35.5225, 2.21", "-111.148, -12.4729, 35.6257, 1.33", "-110.987, -13.6751, 35.6514, 0.07", "-110.893, -14.7546, 35.6156, 0.07", "-110.864, -15.5797, 35.5513, 1.03", "-110.832, -17.5481, 35.3566, 0.07", "-110.844, -18.1826, 35.2844, 0.88", "-110.909, -19.7199, 35.0988, 0.07", "-110.935, -20.2793, 35.0276, 0.66", "-110.952, -20.6612, 34.9849, 1.25", "-111.015, -21.8511, 34.8764, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.06335, 10.2596, 0.0, 0.615565", "5.74396, 24.801, 0.0, 0.615565", "9.42458, 39.3425, 0.0, 0.615565" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.46074, 18.798, 1.44651, 0.37", "1.24955, 19.6271, 1.91681, 0.37", "1.49797, 19.8588, 2.07236, 0.37", "1.96122, 20.3052, 2.41033, 0.37", "2.51482, 20.9669, 2.90756, 0.22", "2.65164, 21.2177, 3.10449, 0.22", "2.67446, 21.514, 3.37382, 0.22", "2.58046, 21.6907, 3.58558, 0.22", "2.37773, 21.9722, 3.91157, 0.22", "2.02055, 22.4417, 4.46485, 0.22", "1.79713, 22.7439, 4.82827, 0.22", "1.45297, 23.3017, 5.47047, 0.66", "1.15176, 23.9624, 6.20202, 1.03", "0.860476, 24.798, 7.15146, 0.22", "0.711961, 25.3763, 7.86257, 0.22", "0.655541, 25.7828, 8.42307, 0.88", "0.641789, 26.1999, 9.06554, 1.47", "0.698385, 26.8522, 10.2145, 0.15", "0.791154, 27.3731, 11.1521, 0.15", "0.902682, 27.9085, 12.0712, 0.15", "0.9489, 28.4292, 12.8746, 0.15", "0.91763, 28.9489, 13.6454, 0.15", "0.747867, 29.5683, 14.5286, 0.15", "0.256531, 30.5217, 15.7351, 0.96", "-0.101628, 31.0601, 16.348, 2.06", "-0.808199, 31.9239, 17.2126, 0.22", "-1.11205, 32.2775, 17.5277, 0.22", "-1.41724, 32.5971, 17.8142, 0.22", "-1.89115, 33.0327, 18.2738, 0.22", "-2.41742, 33.4641, 18.8955, 0.22", "-2.74876, 33.7349, 19.3262, 1.33", "-3.19316, 34.2714, 20.1035, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.46074, 18.798, 1.44651, 1.25", "-0.038927, 20.0101, 1.33767, 1.25", "-0.639634, 21.5777, 1.30179, 0.81", "-1.07491, 22.917, 1.39009, 0.81", "-1.40735, 24.2095, 1.56728, 1.11", "-1.62196, 25.4115, 1.80344, 1.4", "-1.70284, 26.4389, 2.05896, 0.59", "-1.60774, 27.4184, 2.46032, 0.59", "-1.25265, 28.571, 3.10088, 0.52", "-0.914509, 29.262, 3.54382, 0.59", "-0.509847, 29.9578, 4.02346, 0.59", "0.023302, 30.8727, 4.67271, 0.44", "0.298331, 31.4384, 5.06511, 0.44", "0.366564, 31.7609, 5.24793, 0.44", "0.304196, 32.3394, 5.53237, 0.52", "0.043247, 33.2154, 5.98947, 0.66", "-0.24404, 33.9372, 6.38906, 0.29", "-0.474508, 34.468, 6.71369, 0.29", "-0.725337, 35.1507, 7.13657, 0.37", "-0.993456, 36.0359, 7.67303, 0.88", "-1.24482, 36.9509, 8.21933, 1.62", "-1.44513, 37.7961, 8.71092, 2.43", "-1.6317, 38.7541, 9.25583, 2.43", "-1.87721, 40.3526, 10.1379, 0.22", "-1.9602, 41.1061, 10.5441, 0.52", "-2.01885, 41.8669, 10.9174, 0.22", "-2.03708, 42.2706, 11.0827, 0.22", "-2.04583, 42.7884, 11.2581, 0.22", "-2.04626, 43.4185, 11.4081, 0.22", "-2.04877, 43.8394, 11.4822, 0.22", "-2.05545, 44.1157, 11.5194, 0.22", "-2.12262, 45.1013, 11.5871, 0.37", "-2.21806, 45.9397, 11.5959, 0.37", "-2.33746, 46.7403, 11.5633, 0.52", "-2.46426, 47.55, 11.5053, 0.96", "-2.59736, 48.5192, 11.3983, 0.96", "-2.74482, 49.9996, 11.1546, 0.44", "-2.76437, 50.9636, 10.9407, 0.44", "-2.75334, 51.9637, 10.679, 1.47", "-2.72823, 53.007, 10.3751, 2.8", "-2.70277, 53.9705, 10.064, 3.61", "-2.6776, 54.9696, 9.70196, 3.02", "-2.61123, 57.308, 8.75358, 0.22", "-2.60016, 58.0222, 8.43968, 0.29", "-2.59655, 58.4106, 8.26512, 0.29", "-2.6038, 59.1687, 7.90756, 0.22", "-2.63473, 60.078, 7.47332, 0.52", "-2.68105, 60.8352, 7.10557, 1.33", "-2.76332, 61.7839, 6.57584, 2.43", "-2.75141, 62.662, 6.08018, 2.43" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.14047, -17.4017, -13.9823, 0.44", "-10.2325, -18.6726, -15.176, 0.44", "-10.3394, -19.1114, -15.5441, 0.44", "-10.4082, -19.573, -15.9514, 0.44", "-10.5222, -20.0671, -16.3999, 0.44", "-10.7204, -20.6348, -16.9451, 0.59", "-11.0754, -21.3997, -17.758, 0.74", "-11.304, -21.9216, -18.3872, 1.11", "-11.6278, -22.4898, -19.1833, 1.47", "-12.0226, -22.9895, -20.0258, 1.47", "-12.6858, -23.5624, -21.2413, 0.59", "-13.2552, -23.845, -22.1426, 0.52", "-13.6987, -23.9161, -22.7571, 0.52", "-14.2196, -23.8872, -23.3777, 0.44", "-14.8095, -23.7784, -23.9238, 0.44", "-15.1276, -23.7066, -24.1615, 0.44", "-15.9296, -23.5555, -24.6298, 0.96", "-16.6905, -23.4462, -25.018, 0.96", "-17.5881, -23.3692, -25.4323, 1.4", "-18.7415, -23.3342, -25.9289, 2.36", "-19.684, -23.3536, -26.3142, 3.32", "-20.7881, -23.3964, -26.7824, 3.61" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.14047, -17.4017, -13.9823, 0.29", "-7.81299, -19.2688, -14.6845, 0.29", "-7.66491, -19.9053, -14.9387, 0.29", "-7.46879, -20.7382, -15.2921, 0.29", "-7.32046, -21.4315, -15.622, 0.81", "-7.17595, -22.1754, -16.011, 1.11", "-7.00327, -23.2439, -16.6433, 0.22", "-6.8435, -24.0181, -17.2134, 0.22", "-6.80283, -24.4596, -17.6044, 0.22", "-6.81373, -25.0588, -18.2125, 0.22", "-6.8084, -25.3931, -18.4726, 0.37", "-6.76972, -26.0392, -18.9055, 0.37", "-6.71283, -26.5672, -19.2027, 0.81", "-6.60102, -27.3344, -19.557, 1.7", "-6.44247, -28.4099, -20.0211, 2.29", "-6.08317, -30.7559, -20.9553, 0.29", "-5.95197, -31.5549, -21.2368, 0.96", "-5.85374, -32.0914, -21.4008, 0.96", "-5.58777, -33.3369, -21.7433, 0.15", "-5.37803, -34.1308, -21.9142, 0.15", "-5.21851, -34.6652, -22.0075, 0.59", "-4.84509, -35.6908, -22.1409, 0.29", "-4.57665, -36.3455, -22.1904, 1.4", "-4.14586, -37.3248, -22.2325, 2.73", "-3.08562, -39.5913, -22.2467, 0.15", "-2.91953, -39.9377, -22.2425, 0.74", "-2.61499, -40.5655, -22.2496, 0.74", "-2.12347, -41.5274, -22.2869, 0.15", "-1.67099, -42.3944, -22.3343, 0.15", "-1.28838, -43.1496, -22.3888, 0.15", "-0.957601, -43.8232, -22.4739, 1.25", "-0.506588, -44.834, -22.6603, 0.22", "-0.261676, -45.527, -22.8375, 0.22", "-0.184574, -45.886, -22.9466, 0.22", "-0.153402, -46.4064, -23.0959, 0.22", "-0.185358, -47.3575, -23.3402, 0.44", "-0.265376, -48.2549, -23.5451, 1.62", "-0.365562, -49.2177, -23.7475, 3.02", "-0.472026, -50.3824, -23.9795, 3.02", "-0.649843, -52.9883, -24.5002, 0.29", "-0.688278, -53.9455, -24.6828, 0.81", "-0.696839, -54.7789, -24.8251, 1.03", "-0.678302, -55.6452, -24.9676, 0.37", "-0.646786, -56.3166, -25.0586, 1.18", "-0.53112, -57.6712, -25.2163, 0.22", "-0.449883, -58.1876, -25.2623, 0.74", "-0.354414, -58.6111, -25.2819, 0.74", "-0.221132, -59.0634, -25.276, 0.15", "0.168501, -60.2877, -25.1779, 0.44", "0.289233, -60.5925, -25.1381, 0.44", "0.717507, -61.5253, -24.9933, 0.22", "0.9718, -62.0738, -24.925, 1.11", "1.15843, -62.5389, -24.8829, 1.62", "1.43141, -63.3163, -24.8339, 1.62", "1.92753, -65.1033, -24.8161, 0.22", "2.08003, -66.0093, -24.8167, 0.96", "2.09235, -66.9489, -24.826, 1.18", "1.88668, -68.6113, -24.8797, 0.15", "1.78073, -69.1686, -24.9056, 0.22", "1.39295, -70.4533, -24.9999, 0.07", "1.09449, -71.017, -25.0699, 0.22", "0.293771, -72.1243, -25.2394, 0.07", "-0.0702786, -72.4928, -25.3113, 0.15", "0.501756, -82.4205, -27.7326, 0.15", "-0.381486, -92.3955, -29.8572, 0.15", "0.906276, -102.383, -31.6988, 0.15", "3.00888, -112.07, -34.2012, 0.15", "5.13217, -121.417, -37.7149, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.25716, -43.9416, 8.26942, 1.99", "-3.72857, -45.7272, 8.24928, 1.99", "-4.2871, -48.2025, 8.22887, 0.59", "-4.55753, -49.6158, 8.21983, 0.59", "-4.81633, -51.3117, 8.22845, 0.59", "-4.90637, -52.1431, 8.23918, 1.11", "-4.99975, -53.657, 8.28706, 2.58", "-4.96513, -54.4014, 8.32302, 2.88", "-4.88316, -55.0457, 8.37106, 2.65", "-4.75708, -56.0329, 8.4819, 1.55", "-4.5933, -57.4212, 8.68948, 0.74", "-4.48602, -58.7444, 8.90601, 0.44", "-4.4546, -59.9021, 9.10658, 0.29", "-4.48326, -60.7978, 9.27287, 0.29", "-4.57957, -61.9396, 9.50764, 0.29", "-4.60962, -62.3011, 9.58512, 0.29", "-4.67271, -62.9685, 9.73323, 0.44", "-4.74904, -63.6288, 9.87028, 1.11", "-4.83628, -64.3751, 10.0349, 2.36", "-4.98268, -65.9282, 10.3734, 2.73", "-5.15405, -68.8233, 10.9995, 0.44", "-5.17892, -69.3937, 11.1341, 0.44", "-5.22102, -70.4943, 11.4141, 0.59", "-5.25106, -71.5533, 11.7013, 0.29", "-5.265, -72.2159, 11.885, 0.29", "-5.24069, -72.834, 12.0476, 0.29", "-5.16562, -73.4756, 12.2414, 0.29", "-5.0581, -73.9718, 12.4116, 0.88", "-4.84359, -74.6673, 12.674, 1.84", "-4.59622, -75.3306, 12.9348, 2.14", "-3.85146, -77.2255, 13.7291, 0.44", "-3.52648, -78.0739, 14.0954, 0.66", "-3.1403, -79.0798, 14.5667, 0.29", "-2.99591, -79.4409, 14.7638, 0.29", "-2.85291, -79.8151, 15.0119, 0.29", "-2.78415, -80.0538, 15.2111, 0.29", "-2.81264, -80.3064, 15.4381, 0.29", "-2.97531, -80.8572, 15.7044, 0.29", "-3.10063, -81.2767, 15.8283, 0.29", "-3.2314, -81.7763, 15.9443, 0.29", "-3.42595, -82.5745, 16.1018, 1.18", "-3.60122, -83.393, 16.2755, 2.43", "-3.76875, -84.3427, 16.4952, 2.88", "-3.96713, -85.8127, 16.8682, 1.55", "-4.12616, -87.6823, 17.4184, 0.52", "-4.17468, -88.8663, 17.8278, 0.29", "-4.18955, -89.8116, 18.2015, 0.29", "-4.17932, -90.5818, 18.5374, 0.66", "-4.15503, -91.2069, 18.8263, 0.96", "-4.10041, -92.0294, 19.1727, 0.22", "-4.04689, -92.8063, 19.4033, 0.22", "-4.00643, -93.6402, 19.5252, 0.29", "-3.97168, -94.4029, 19.5557, 0.59", "-3.93224, -95.6171, 19.5406, 1.33", "-3.89945, -96.9839, 19.4837, 2.21", "-3.87069, -98.0734, 19.4201, 3.24", "-3.78585, -99.9883, 19.2967, 1.77", "-3.69438, -101.588, 19.2072, 0.44", "-3.62836, -102.719, 19.1563, 0.37", "-3.56567, -103.999, 19.1175, 0.37", "-3.53231, -104.831, 19.109, 0.88", "-3.52592, -105.211, 19.108, 1.77", "-3.55613, -106.426, 19.101, 3.1", "-3.72785, -108.307, 19.0844, 1.33", "-3.94326, -109.595, 19.0693, 0.74", "-4.32364, -111.097, 19.0474, 0.22", "-4.52393, -111.709, 19.037, 0.22", "-4.69281, -112.149, 19.03, 0.52", "-5.17306, -113.196, 19.0157, 0.81", "-5.76919, -114.326, 19.0433, 0.29", "-5.95015, -114.669, 19.0611, 0.37", "-6.33563, -115.479, 19.1159, 0.37", "-6.70847, -116.453, 19.2613, 0.44", "-7.05127, -117.575, 19.5118, 0.81", "-7.35286, -118.91, 19.895, 0.81", "-7.52656, -119.955, 20.2401, 0.81", "-7.73806, -121.292, 20.718, 0.37", "-7.99776, -122.904, 21.3678, 0.37", "-8.11942, -123.718, 21.7431, 1.18", "-8.19787, -124.506, 22.1594, 2.8", "-8.2172, -125.176, 22.5536, 3.32" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-3.25716, -43.9416, 8.26942, 0.66", "-1.64567, -45.323, 9.24062, 0.66", "-0.606751, -46.3489, 9.86958, 0.44", "0.106434, -47.1707, 10.3018, 0.88", "0.580378, -47.8099, 10.5908, 0.44", "0.95844, -48.4064, 10.8129, 0.22", "1.31281, -49.078, 11.022, 0.22", "1.50786, -49.7911, 11.1284, 0.22", "1.61965, -50.4552, 11.1991, 0.22", "1.66467, -51.0546, 11.2693, 0.59", "1.6884, -51.931, 11.4169, 1.7", "1.6825, -53.085, 11.6561, 1.47", "1.65485, -55.0803, 12.1401, 0.44", "1.6663, -56.1488, 12.4264, 0.29", "1.67655, -56.8285, 12.6155, 0.22", "1.7008, -57.5939, 12.8184, 0.22", "1.72885, -58.1349, 12.9631, 0.96", "1.81706, -59.179, 13.2175, 2.51", "1.96385, -60.342, 13.4962, 3.39", "2.15106, -61.4419, 13.7367, 3.1", "2.48493, -62.9135, 14.0739, 1.03", "2.85283, -64.322, 14.412, 0.29", "3.14589, -65.3242, 14.6871, 0.22", "3.35064, -65.973, 14.888, 0.22", "3.46705, -66.3428, 15.0164, 0.22", "3.64416, -66.8818, 15.2167, 0.29", "3.83441, -67.4819, 15.4281, 0.22", "4.02661, -68.2096, 15.5788, 0.29", "4.1171, -68.5922, 15.6254, 0.81", "4.37373, -69.7237, 15.6867, 1.55", "4.57997, -70.6502, 15.699, 2.29", "4.76832, -71.467, 15.6885, 2.06", "5.21047, -73.1822, 15.6724, 0.22", "5.3867, -73.7527, 15.6905, 0.22", "5.53969, -74.1653, 15.7328, 0.22", "5.61977, -74.3478, 15.7686, 0.22", "5.89319, -74.909, 15.9374, 0.81", "6.31512, -75.7403, 16.2432, 1.84", "6.71869, -76.5862, 16.6057, 2.8", "7.11365, -77.5733, 17.0622, 1.77", "7.40227, -78.4874, 17.4824, 0.81", "7.71131, -79.6682, 18.0244, 0.22", "7.87036, -80.3511, 18.3291, 0.29", "7.99863, -81.0266, 18.6252, 0.29", "8.13493, -82.2255, 19.1462, 0.59", "8.17272, -83.3262, 19.6421, 1.47", "8.14763, -83.8856, 19.9136, 1.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "34.6084, 16.6386, 37.8526, 0.22", "35.5418, 17.0607, 39.2212, 0.22", "36.1714, 17.3454, 40.1445, 0.22", "37.0524, 17.7438, 41.4363, 1.47", "37.3961, 17.8993, 41.9402, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "34.6084, 16.6386, 37.8526, 0.29", "36.1017, 15.6923, 38.9347, 0.29", "36.9881, 15.0271, 39.568, 0.15", "37.3515, 14.7538, 39.8053, 0.22", "38.0835, 14.2107, 40.247, 0.22", "38.9528, 13.5434, 40.7699, 0.22", "39.6327, 13.0321, 41.1508, 0.22", "40.5656, 12.3024, 41.6317, 0.22", "41.4926, 11.5728, 42.0741, 0.22", "42.4623, 10.8572, 42.4909, 0.22", "43.6702, 10.0702, 42.9158, 0.15", "44.7814, 9.43272, 43.2198, 0.15", "45.3321, 9.15187, 43.3446, 0.15", "46.0023, 8.8084, 43.4754, 0.66", "46.6763, 8.45183, 43.5866, 1.25", "47.7847, 7.87614, 43.7259, 0.15", "48.347, 7.59308, 43.7827, 0.15", "49.2755, 7.1318, 43.8591, 0.88", "50.5567, 6.50899, 43.9435, 0.15", "51.0917, 6.25872, 43.9692, 0.44", "51.7907, 5.93442, 44.0121, 1.18", "53.2218, 5.27298, 44.1313, 0.07", "54.2768, 4.81594, 44.2351, 0.07", "55.1022, 4.46044, 44.348, 1.47", "55.5797, 4.26753, 44.4342, 1.47", "57.1303, 3.6228, 44.7645, 0.15", "57.7981, 3.32001, 44.9483, 1.11", "58.3412, 3.04581, 45.1321, 1.47", "59.999, 2.12241, 45.7907, 0.07", "60.8732, 1.56126, 46.1782, 0.15", "61.4936, 1.11181, 46.4791, 0.22", "62.3416, 0.426493, 46.9545, 0.07", "62.8317, 0.0123399, 47.2609, 1.18", "63.4021, -0.464574, 47.6375, 1.77", "64.7111, -1.53907, 48.5129, 0.07", "65.4596, -2.04412, 48.9508, 0.15", "66.8311, -2.73208, 49.6586, 0.74", "67.9185, -3.08772, 50.137, 0.15", "68.6108, -3.19309, 50.4012, 0.81", "69.3254, -3.1939, 50.6383, 2.14", "71.9108, -2.81178, 51.3591, 0.15", "72.8132, -2.57182, 51.5947, 0.15", "73.5314, -2.30832, 51.7818, 0.37", "74.8346, -1.72808, 52.1905, 0.07", "75.3489, -1.46334, 52.407, 0.88", "75.8035, -1.18172, 52.6544, 1.25", "76.9434, -0.279185, 53.5491, 0.07", "77.4833, 0.226259, 54.0975, 1.11", "77.927, 0.713564, 54.6872, 1.55", "78.4957, 1.35504, 55.6331, 0.07", "78.7588, 1.6374, 56.1286, 0.74", "79.2304, 2.13878, 57.1427, 0.15", "79.5987, 2.53907, 58.0345, 0.81", "79.9948, 2.95256, 59.0273, 1.25", "80.642, 3.56248, 60.6526, 0.22", "80.9239, 3.78859, 61.3632, 0.22", "81.0808, 3.87559, 61.7281, 0.22", "81.4604, 3.99074, 62.4967, 0.15", "81.8461, 4.04023, 63.2107, 0.81", "82.7395, 4.00541, 64.6397, 0.22", "83.4829, 3.92288, 65.6959, 0.22", "84.1516, 3.7862, 66.5211, 1.62", "84.9131, 3.57354, 67.3669, 0.15", "85.4831, 3.3889, 67.938, 0.96", "86.9255, 2.92717, 69.1632, 0.07", "87.8748, 2.64661, 69.8731, 0.59", "89.1477, 2.33401, 70.7854, 0.07", "90.0661, 2.15317, 71.4506, 0.07", "90.6466, 2.05852, 71.8733, 1.25", "92.4419, 1.87704, 73.1482, 0.07", "93.3755, 1.85585, 73.7679, 0.81", "94.8604, 1.93694, 74.7218, 0.07", "95.3177, 2.01188, 75.0198, 0.07", "95.8782, 2.15838, 75.395, 1.03", "97.0546, 2.53106, 76.2065, 0.07", "98.1353, 2.98816, 76.9797, 0.07", "99.2976, 3.55446, 77.7771, 0.07", "100.017, 3.9746, 78.2468, 0.66", "100.517, 4.28445, 78.5847, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.42458, 39.3425, 0.0, 0.181551", "13.1052, 53.8839, 0.0, 0.181551", "16.7858, 68.4253, 0.0, 0.181551" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-3.19316, 34.2714, 20.1035, 0.22", "-4.63593, 34.8563, 21.4821, 0.22", "-5.17448, 35.1874, 22.0114, 0.22", "-5.57687, 35.5757, 22.5184, 0.15", "-5.89258, 35.9759, 23.0279, 0.15", "-6.10616, 36.2838, 23.3825, 0.15", "-6.43594, 36.9191, 24.0422, 0.66", "-6.68244, 37.502, 24.6043, 0.22", "-7.0828, 38.4011, 25.4942, 0.22", "-7.39802, 39.1003, 26.2023, 1.62", "-7.77314, 39.9478, 27.1015, 3.1", "-8.78296, 42.0682, 29.4959, 0.29", "-9.20969, 42.8676, 30.4682, 0.22", "-9.41995, 43.2182, 30.9009, 0.22", "-9.47849, 43.313, 31.0129, 0.22", "-9.73175, 43.7219, 31.5005, 0.22", "-10.0055, 44.1415, 32.0561, 0.22", "-10.4504, 44.6328, 32.8021, 0.22", "-10.8955, 45.2067, 33.588, 0.88", "-11.1375, 45.5416, 33.9993, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-3.19316, 34.2714, 20.1035, 0.22", "-0.994341, 35.0055, 20.3676, 0.22", "0.0241819, 35.3455, 20.4899, 0.37", "0.90903, 35.641, 20.5961, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-2.75141, 62.662, 6.08018, 0.15", "-3.47503, 64.4915, 6.00757, 0.15", "-3.85509, 65.4587, 6.01661, 0.81", "-4.1508, 66.2003, 5.99265, 1.18", "-4.7707, 67.7367, 5.91397, 0.22", "-5.08784, 68.5717, 5.86454, 0.81", "-5.27553, 69.1091, 5.8462, 0.81", "-5.60745, 70.2871, 5.90225, 0.07", "-5.89316, 71.5489, 5.98998, 0.07", "-6.01054, 72.2153, 6.03531, 0.96", "-6.15909, 73.2555, 6.08947, 1.92", "-6.37205, 74.6565, 6.17988, 0.22", "-6.4709, 75.4055, 6.25552, 0.22", "-6.54751, 76.0838, 6.3484, 0.22", "-6.61462, 76.7219, 6.46894, 0.81", "-6.70671, 77.4871, 6.617, 1.11", "-6.97037, 79.1549, 6.92161, 0.15", "-7.18921, 80.3874, 7.10278, 0.15", "-7.28561, 80.9128, 7.16942, 0.74", "-7.44826, 81.9981, 7.29485, 1.92", "-7.50326, 82.5051, 7.34474, 2.88", "-7.58095, 83.6141, 7.46249, 1.84", "-7.63408, 85.3501, 7.66597, 0.22", "-7.65317, 86.4794, 7.80281, 0.59", "-7.64685, 87.2456, 7.89286, 0.59", "-7.61453, 88.2313, 7.98863, 0.22", "-7.55159, 89.3287, 8.06464, 0.22", "-7.49521, 90.1356, 8.08261, 0.22", "-7.49322, 90.9737, 8.03606, 0.15", "-7.58997, 92.0278, 7.88158, 0.15", "-7.73428, 92.8627, 7.67995, 0.88", "-7.96895, 93.929, 7.33396, 1.77", "-8.16454, 94.7222, 7.03827, 1.77", "-8.64001, 96.2801, 6.43723, 0.15", "-8.90609, 97.0387, 6.15093, 0.37", "-9.15912, 97.7308, 5.91622, 0.96", "-9.45997, 98.5706, 5.70173, 1.77", "-9.91715, 99.941, 5.46947, 0.29", "-10.3201, 101.355, 5.33087, 0.15", "-10.3985, 101.731, 5.31682, 0.52", "-10.5696, 102.554, 5.30978, 1.18", "-10.869, 103.919, 5.33559, 0.15", "-11.0519, 104.751, 5.3665, 0.15", "-11.1867, 105.495, 5.41546, 1.03", "-11.3357, 106.929, 5.56851, 2.8" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-2.75141, 62.662, 6.08018, 0.22", "-2.44687, 63.8044, 6.6482, 0.22", "-2.16957, 64.8998, 7.21352, 0.22", "-1.95164, 65.7412, 7.64344, 0.96", "-1.77218, 66.3563, 7.95361, 1.18", "-1.4044, 67.4463, 8.48359, 0.15", "-1.14325, 68.1005, 8.80188, 0.15", "-0.926742, 68.5506, 9.00391, 0.15", "-0.672677, 69.0625, 9.19001, 0.15", "-0.413025, 69.6525, 9.33693, 0.15", "-0.137441, 70.3527, 9.4401, 1.33", "0.193828, 71.2629, 9.48497, 2.73", "0.448312, 72.1087, 9.48143, 3.1", "0.96319, 74.5466, 9.36458, 0.22", "1.12045, 75.6474, 9.284, 0.15", "1.18668, 76.4074, 9.2168, 0.52", "1.22622, 77.1113, 9.14767, 0.74", "1.27936, 78.5574, 8.99328, 0.22", "1.31126, 79.403, 8.91711, 1.18", "1.35248, 80.1676, 8.8775, 2.58", "1.49432, 82.0596, 8.88001, 0.22", "1.56043, 82.8474, 8.90609, 0.22", "1.62639, 83.675, 8.94704, 0.81", "1.72407, 85.0229, 9.02938, 2.51", "1.85047, 87.3408, 9.19084, 0.22", "1.866, 88.3309, 9.26338, 0.29", "1.81957, 89.4271, 9.34266, 0.15", "1.7271, 90.5397, 9.41602, 0.15", "1.61293, 91.4154, 9.46565, 1.03", "1.46542, 92.1681, 9.49666, 1.99", "1.22029, 92.9958, 9.51046, 1.99", "0.536268, 94.8384, 9.50019, 0.15", "0.201505, 95.5947, 9.47957, 0.15", "-0.120973, 96.2469, 9.43953, 0.15", "-0.388744, 96.7301, 9.39374, 0.44", "-1.181, 97.9658, 9.23901, 0.15", "-1.85849, 98.8793, 9.09616, 1.47", "-2.48567, 99.5858, 8.9648, 2.51", "-3.55879, 100.673, 8.75258, 0.37", "-4.16518, 101.243, 8.6297, 0.22", "-4.71768, 101.711, 8.51288, 0.07", "-5.25165, 102.1, 8.41258, 0.29", "-6.26947, 102.736, 8.2586, 0.07", "-7.1396, 103.245, 8.14987, 0.44", "-8.35387, 103.91, 8.01389, 0.07", "-9.35297, 104.451, 7.88726, 0.15", "-10.0184, 104.804, 7.75449, 0.74", "-10.9015, 105.252, 7.56407, 1.84", "-12.2987, 105.906, 7.2352, 0.15", "-13.0589, 106.241, 7.04379, 0.59", "-13.6642, 106.498, 6.88211, 0.29", "-14.9964, 107.093, 6.4466, 1.03" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-20.7881, -23.3964, -26.7824, 1.47", "-22.3735, -23.8679, -27.1611, 1.47", "-23.991, -24.4643, -27.7959, 0.52", "-24.7463, -24.8218, -28.19, 0.52", "-25.4717, -25.1651, -28.5685, 1.11", "-26.2745, -25.5451, -28.9874, 2.21", "-27.013, -25.8946, -29.3728, 1.11", "-28.223, -26.65, -30.2536, 0.44", "-28.8974, -27.241, -30.9123, 1.47", "-37.8343, -31.1585, -33.2628, 1.47" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-20.7881, -23.3964, -26.7824, 0.22", "-20.7315, -25.5855, -27.6175, 0.22", "-20.7292, -26.3086, -27.9053, 0.22", "-20.7307, -27.1825, -28.2437, 0.96", "-20.7222, -28.4444, -28.7615, 0.22", "-20.6974, -29.3047, -29.1482, 0.22", "-20.6779, -29.981, -29.4522, 0.81", "-20.6629, -30.6779, -29.7894, 1.92", "-20.6395, -31.5149, -30.1918, 0.81", "-20.5889, -32.57, -30.7565, 0.15", "-20.5246, -33.3589, -31.2387, 0.66", "-19.7285, -41.8534, -36.7783, 0.66", "-19.9477, -51.2707, -40.7204, 0.66", "-20.4554, -60.2913, -45.4418, 0.66", "-22.174, -69.7193, -48.9691, 0.66", "-24.8045, -78.9091, -52.5325, 0.66", "-25.5371, -88.8287, -54.9418, 0.66", "-25.1938, -99.0417, -55.7189, 0.66", "-25.4756, -109.256, -54.9282, 0.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.2172, -125.176, 22.5536, 0.37", "-6.95447, -126.822, 23.2161, 0.37", "-6.32224, -127.909, 23.6433, 0.22", "-6.0404, -128.551, 23.8992, 0.22", "-5.77154, -129.346, 24.2198, 0.22", "-5.57154, -130.075, 24.5029, 0.29", "-5.38724, -130.996, 24.8225, 0.29", "-5.38829, -131.783, 25.054, 0.22", "-5.44797, -132.543, 25.2605, 0.81", "-5.52032, -133.27, 25.4567, 1.77", "-5.59076, -134.011, 25.649, 2.43", "-5.67235, -135.489, 25.9869, 0.96", "-5.72247, -137.563, 26.4364, 0.22", "-5.75413, -138.374, 26.6067, 1.18", "-5.82538, -139.291, 26.7948, 1.7", "-5.8709, -139.682, 26.8748, 1.7", "-6.07367, -140.947, 27.166, 0.74", "-6.30771, -142.173, 27.4671, 0.29", "-6.54751, -143.335, 27.741, 0.29", "-6.70817, -144.212, 27.9585, 0.29", "-6.85861, -144.929, 28.1393, 0.66", "-7.04225, -145.743, 28.3595, 1.47", "-7.21272, -146.468, 28.5772, 2.73", "-7.32134, -147.14, 28.781, 2.88", "-7.32642, -148.868, 29.3302, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.2172, -125.176, 22.5536, 0.22", "-10.0613, -126.041, 22.8141, 0.22", "-11.0326, -126.514, 22.9148, 0.22", "-11.4683, -126.766, 22.945, 0.22", "-11.7986, -126.982, 22.9616, 0.22", "-12.313, -127.341, 22.9973, 0.29", "-12.7044, -127.615, 23.0268, 0.96", "-13.5276, -128.211, 23.0322, 1.84", "-14.6997, -129.072, 22.9722, 0.22", "-15.3967, -129.571, 22.9225, 0.22", "-16.1708, -130.062, 22.8566, 0.96", "-17.1186, -130.548, 22.7803, 0.22", "-18.0568, -130.848, 22.698, 0.22", "-18.4254, -130.899, 22.6635, 0.22", "-19.2149, -130.915, 22.5983, 0.22", "-20.1704, -130.918, 22.5321, 0.29", "-20.8356, -130.947, 22.4955, 1.25", "-22.0182, -131.068, 22.4762, 2.88", "-22.515, -131.138, 22.4833, 2.73", "-24.5225, -131.565, 22.5085, 0.29", "-25.3065, -131.806, 22.5163, 0.66", "-26.3504, -132.191, 22.5202, 0.29", "-26.9659, -132.429, 22.5045, 0.22", "-27.7805, -132.733, 22.4726, 0.22", "-28.6217, -133.006, 22.4156, 0.22", "-29.9266, -133.345, 22.2844, 0.22", "-30.5072, -133.436, 22.2002, 0.37", "-31.506, -133.541, 22.0316, 0.37", "-32.424, -133.601, 21.854, 0.66", "-33.0309, -133.618, 21.7247, 1.62", "-33.739, -133.553, 21.5538, 2.51", "-34.9611, -133.283, 21.2165, 2.73" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.14763, -83.8856, 19.9136, 3.24", "8.31456, -85.1254, 19.9633, 3.24", "8.48409, -86.1943, 20.0012, 3.24", "8.87433, -88.3757, 20.0712, 0.22", "9.14684, -89.7672, 20.1115, 0.29", "9.3018, -90.5092, 20.1311, 0.22", "9.50173, -91.4106, 20.1525, 0.22", "9.64353, -91.9728, 20.1529, 0.22", "9.76019, -92.3964, 20.1537, 0.22", "9.95152, -93.0755, 20.1557, 0.74", "10.0658, -93.5441, 20.1574, 0.74", "10.1812, -94.3487, 20.1815, 0.22", "10.2247, -95.0581, 20.2267, 0.22", "10.279, -96.044, 20.2862, 0.22", "10.3241, -96.6897, 20.2921, 0.22", "10.4096, -97.5913, 20.267, 0.22", "10.5443, -98.5244, 20.2143, 1.33", "10.7697, -99.73, 20.1095, 3.02", "11.1555, -101.274, 19.932, 0.88", "11.587, -102.747, 19.7639, 0.22", "11.8209, -103.493, 19.6856, 0.22", "12.1474, -104.501, 19.5943, 0.22", "12.3387, -105.117, 19.5584, 1.18", "12.689, -106.34, 19.5698, 2.06", "13.1125, -108.06, 19.7564, 0.22", "13.2547, -108.873, 19.9275, 0.52", "13.3376, -109.572, 20.1127, 0.52", "13.4614, -110.894, 20.5194, 0.22", "13.512, -111.473, 20.7177, 0.22", "13.6143, -112.77, 21.2004, 1.99", "13.8275, -114.979, 22.0353, 0.29", "13.8913, -115.696, 22.3032, 0.22", "13.9944, -116.907, 22.7424, 0.22", "14.0526, -117.521, 22.9465, 1.03", "14.1234, -118.246, 23.1669, 2.14", "14.1982, -118.93, 23.3608, 2.06", "14.3916, -120.632, 23.8217, 0.22", "14.4528, -121.386, 24.0171, 0.66", "14.5359, -122.961, 24.4057, 0.22", "14.5779, -123.977, 24.6384, 0.22", "14.6087, -124.643, 24.7645, 0.66", "14.664, -125.643, 24.9229, 0.22", "14.727, -126.544, 25.0407, 1.55", "14.7767, -127.287, 25.1256, 2.8", "14.8287, -128.036, 25.1937, 2.58", "15.0649, -130.555, 25.332, 0.22", "15.1184, -131.337, 25.3772, 0.22", "15.1505, -132.012, 25.4072, 0.59", "15.1749, -132.618, 25.4388, 0.29", "15.1964, -133.402, 25.4836, 1.03", "15.2145, -134.342, 25.5288, 2.06", "15.1985, -136.236, 25.5898, 0.15", "15.1971, -136.714, 25.5931, 0.15", "15.2142, -137.768, 25.5728, 0.29", "15.2338, -138.484, 25.5523, 0.15", "15.2619, -139.302, 25.5224, 0.15", "15.3003, -139.994, 25.5074, 0.96", "15.3599, -140.716, 25.4896, 2.06", "15.4272, -141.705, 25.502, 2.14", "15.529, -144.043, 25.6024, 0.22", "15.5346, -144.797, 25.6803, 0.22", "15.5191, -145.84, 25.8435, 0.22", "15.5107, -146.147, 25.9065, 0.59", "15.4743, -146.911, 26.0927, 1.4", "15.4325, -147.71, 26.3077, 0.66", "15.3617, -149.352, 26.7847, 0.22", "15.2994, -150.154, 26.9975, 0.22", "15.2393, -150.759, 27.1378, 0.22", "15.18, -151.417, 27.2801, 1.03", "15.1202, -152.41, 27.4676, 2.21", "15.0636, -154.521, 27.8389, 0.15", "15.0789, -155.791, 28.0267, 0.15", "15.0921, -156.311, 28.1001, 0.81", "15.114, -157.053, 28.2, 1.33", "15.1452, -158.164, 28.349, 0.22", "15.1733, -159.28, 28.4921, 0.22", "15.1949, -159.972, 28.5733, 0.88", "15.2162, -160.583, 28.6555, 0.66", "15.2627, -161.961, 28.8775, 0.15", "15.3052, -162.974, 29.0596, 0.15", "15.3309, -163.353, 29.1335, 0.74", "15.4073, -164.118, 29.2826, 1.18", "15.6131, -165.659, 29.5972, 0.22", "15.7801, -166.548, 29.7962, 0.22", "15.9259, -167.104, 29.9162, 0.22", "16.1024, -167.665, 30.0382, 0.22", "16.3378, -168.366, 30.1826, 0.22", "16.5879, -169.141, 30.3307, 1.33", "16.8499, -170.04, 30.4886, 2.21", "17.2563, -171.644, 30.7435, 0.15", "17.4402, -172.3, 30.8553, 0.29", "17.5411, -172.618, 30.9119, 0.29", "17.9022, -173.625, 31.1053, 0.15", "18.0068, -173.921, 31.1628, 0.15", "18.2145, -174.578, 31.2801, 0.66", "18.5532, -175.741, 31.5109, 0.15", "18.6763, -176.201, 31.5947, 0.15", "18.7751, -176.535, 31.6657, 0.15", "19.0275, -177.308, 31.8611, 0.15", "19.1806, -177.8, 31.9933, 0.37", "19.3802, -178.51, 32.1816, 1.03", "19.5806, -179.27, 32.3825, 0.22", "19.8829, -180.338, 32.6639, 0.22", "20.1639, -181.25, 32.8971, 1.4", "20.4251, -182.047, 33.0867, 2.14", "20.7006, -182.91, 33.2842, 1.4", "21.1683, -184.551, 33.628, 0.22", "21.294, -185.066, 33.7253, 0.81", "21.4202, -185.718, 33.8333, 1.55", "21.6228, -186.985, 34.0319, 0.29", "21.7694, -188.099, 34.2092, 0.22", "21.8478, -188.856, 34.3241, 0.22", "21.8893, -189.627, 34.4202, 0.29", "21.9094, -190.506, 34.5347, 0.15", "21.9143, -191.177, 34.6217, 0.96", "21.9147, -191.64, 34.6768, 1.47", "21.9258, -192.333, 34.7398, 1.47", "21.9925, -193.55, 34.8385, 0.22", "22.1091, -194.745, 34.9334, 0.22", "22.2032, -195.415, 34.9774, 0.88", "22.3668, -196.311, 35.031, 0.88", "22.6711, -197.709, 35.1182, 0.15", "22.9285, -198.657, 35.1798, 0.15", "23.146, -199.34, 35.2223, 0.81", "23.5196, -200.432, 35.3215, 0.15", "23.7627, -201.135, 35.4128, 0.81", "24.049, -201.981, 35.5495, 0.52", "24.2799, -202.742, 35.6924, 1.62", "24.4697, -203.532, 35.8565, 1.62", "24.7602, -205.143, 36.1796, 0.22", "24.8826, -206.043, 36.3486, 0.22", "24.9369, -206.579, 36.4299, 0.74", "24.9817, -207.181, 36.5034, 0.29", "25.0229, -208.052, 36.5996, 1.47", "25.0545, -208.656, 36.659, 1.47", "25.1192, -210.082, 36.7615, 0.15", "25.1798, -210.775, 36.842, 0.52", "25.3022, -211.744, 36.9828, 0.15", "25.4174, -212.473, 37.1036, 0.15", "25.4862, -212.878, 37.1759, 0.66", "25.6164, -213.619, 37.3171, 1.47", "25.9153, -215.266, 37.6384, 0.22", "26.0854, -216.165, 37.7976, 0.15", "26.2001, -216.754, 37.8752, 0.15", "26.3435, -217.503, 37.9609, 0.74", "26.5383, -218.633, 38.0743, 0.15", "26.6646, -219.381, 38.1393, 0.15", "26.8328, -220.59, 38.226, 0.22", "26.9337, -221.391, 38.2957, 1.18", "27.0447, -222.327, 38.3906, 1.7", "27.2851, -224.276, 38.6184, 0.22", "27.3822, -225.033, 38.7137, 0.22", "27.4845, -225.743, 38.8098, 0.15", "27.6424, -226.762, 38.9652, 0.15", "27.7163, -227.345, 39.0693, 0.44", "27.8811, -228.956, 39.369, 0.15", "27.9154, -229.47, 39.481, 0.88", "27.9382, -230.196, 39.6487, 1.7", "27.9467, -231.004, 39.836, 1.4", "27.9224, -232.884, 40.2478, 0.15", "27.9136, -233.263, 40.3262, 0.22", "27.8653, -234.594, 40.5837, 0.07", "27.8455, -235.272, 40.7023, 1.33", "27.8317, -235.869, 40.7968, 1.33", "27.8443, -236.963, 40.9537, 0.07", "27.902, -237.767, 41.0412, 0.15", "27.9612, -238.304, 41.0892, 0.15", "28.0417, -238.846, 41.1258, 0.22", "28.2045, -239.877, 41.1924, 0.07", "28.26, -240.255, 41.2162, 0.66", "28.3373, -240.863, 41.2507, 0.29", "28.5023, -242.295, 41.318, 0.15", "28.5515, -242.665, 41.3363, 0.22", "28.6537, -243.422, 41.3814, 0.07", "28.7446, -244.097, 41.4341, 0.74", "28.8696, -245.156, 41.5438, 0.15", "28.9211, -245.674, 41.6091, 0.59", "29.0232, -247.073, 41.7978, 0.15", "29.0617, -247.664, 41.8923, 0.29", "29.1002, -248.406, 42.009, 0.15", "29.1203, -249.003, 42.1014, 0.88", "29.1262, -249.522, 42.1781, 1.92", "29.1091, -251.778, 42.4896, 0.22", "29.0882, -252.935, 42.6319, 1.7", "29.0433, -255.481, 42.9139, 0.15", "29.0141, -256.56, 43.0183, 0.15", "28.9877, -257.233, 43.0791, 0.81", "28.9124, -258.752, 43.2007, 0.22", "28.8688, -259.614, 43.256, 1.25", "28.8488, -260.083, 43.2803, 1.84", "28.7858, -262.211, 43.4127, 0.15", "28.7812, -262.761, 43.448, 0.29", "28.8083, -263.741, 43.5362, 0.07", "28.8362, -264.347, 43.6028, 0.15", "28.9185, -265.784, 43.7899, 0.15", "28.9474, -266.17, 43.846, 0.52", "29.0001, -266.719, 43.9336, 1.4", "29.0971, -268.297, 44.2255, 0.07", "29.1263, -269.422, 44.4541, 0.15", "29.1132, -269.94, 44.576, 0.74", "29.0829, -270.461, 44.7084, 1.92", "29.0286, -271.257, 44.9368, 1.92", "28.8826, -273.327, 45.5927, 0.15", "28.8395, -274.052, 45.8621, 0.59", "28.8253, -275.24, 46.3805, 0.07", "28.8329, -275.515, 46.5149, 0.15", "28.8982, -276.434, 46.9946, 0.15", "28.9702, -277.075, 47.3389, 0.37", "29.1033, -277.875, 47.7527, 0.96", "29.2683, -278.607, 48.0802, 1.47", "29.6228, -279.878, 48.5889, 0.15", "29.8368, -280.597, 48.8475, 0.15", "30.0047, -281.151, 49.0161, 1.11", "30.1762, -281.722, 49.164, 1.7", "30.6553, -283.444, 49.5088, 0.15", "30.816, -284.054, 49.6113, 0.81", "31.0076, -284.774, 49.7113, 1.03", "31.5185, -286.497, 49.9372, 0.15", "31.7324, -287.143, 50.025, 0.22", "32.0166, -288.001, 50.1329, 0.07", "32.1919, -288.576, 50.1962, 0.88", "32.3895, -289.254, 50.2723, 1.62", "32.8714, -290.85, 50.4764, 0.15", "33.1384, -291.633, 50.5795, 1.33", "33.6745, -293.112, 50.787, 0.07", "33.8287, -293.563, 50.8583, 0.22", "34.2583, -295.001, 51.1173, 0.07", "34.4083, -295.562, 51.2389, 0.96", "34.7552, -297.054, 51.5999, 0.15", "34.9151, -297.724, 51.7777, 1.11", "35.4419, -299.77, 52.3579, 0.15", "35.6839, -300.665, 52.597, 1.11", "35.9044, -301.476, 52.7934, 1.47", "36.3895, -303.408, 53.2202, 0.15", "36.5593, -304.096, 53.3501, 0.88", "36.7753, -304.932, 53.4653, 1.33", "37.2533, -306.803, 53.5867, 0.15", "37.4757, -307.794, 53.5798, 0.96", "37.8054, -309.685, 53.4408, 0.15", "37.8776, -310.455, 53.3469, 0.15", "37.8938, -311.278, 53.2425, 0.74", "37.794, -312.528, 53.089, 0.44", "37.6463, -313.379, 52.9894, 1.11", "37.4894, -314.023, 52.9236, 1.7", "36.8248, -316.324, 52.7423, 0.15", "36.4451, -317.506, 52.6855, 1.33", "36.0594, -318.633, 52.6722, 0.15", "35.9047, -319.075, 52.6865, 0.74", "35.7188, -319.614, 52.732, 1.4", "35.482, -320.322, 52.816, 0.74" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.14763, -83.8856, 19.9136, 1.03", "8.42294, -84.957, 25.1932, 1.03", "8.51271, -85.1283, 26.2939, 1.03", "8.62682, -85.253, 27.3056, 1.03", "8.75669, -85.3757, 28.2811, 1.03", "8.88298, -85.47, 29.0022, 1.03", "9.09516, -85.609, 29.9697, 1.03", "9.41124, -85.6857, 30.5198, 0.88", "9.68257, -85.7758, 31.0101, 0.88", "9.97732, -85.9993, 31.7241, 0.44", "10.1776, -86.4281, 32.4805, 0.59", "10.2764, -86.7938, 33.0274, 0.22", "10.4966, -87.5071, 34.3394, 0.22", "10.6779, -87.9685, 35.412, 0.44", "10.7981, -88.1599, 36.0622, 1.4", "11.0563, -88.3532, 37.2458, 2.14", "11.5449, -88.4256, 38.94, 0.59", "12.5132, -88.2691, 41.4157, 0.59", "12.948, -88.1388, 42.188, 0.44", "13.8396, -87.8085, 43.418, 0.81", "14.6402, -87.458, 44.366, 1.99", "15.9338, -86.8418, 45.6215, 0.22", "16.5896, -86.5439, 46.1374, 1.03", "17.5851, -86.1431, 46.7856, 0.22", "18.715, -85.7484, 47.4944, 0.96", "19.457, -85.5123, 47.9486, 1.92", "21.1312, -85.0148, 49.1515, 0.22", "21.7956, -84.8001, 49.7197, 0.22", "22.173, -84.6685, 50.0725, 0.22", "22.8207, -84.428, 50.7074, 1.11", "23.6462, -84.107, 51.5155, 2.58", "25.2465, -83.4186, 53.0934, 1.11", "26.002, -83.055, 53.8537, 0.44", "26.6762, -82.744, 54.5477, 0.44", "27.0814, -82.5779, 54.9923, 0.22", "27.4386, -82.4685, 55.3909, 0.22", "27.7905, -82.404, 55.7865, 0.22", "28.3724, -82.3706, 56.4799, 1.4", "29.3247, -82.4513, 57.8832, 0.37", "29.9423, -82.6063, 59.1789, 0.29", "30.3144, -82.8265, 60.2697, 0.29", "30.3705, -82.8918, 60.4917, 0.29", "30.4792, -83.2384, 61.2841, 0.29", "30.5125, -83.6622, 62.0363, 0.29", "30.5138, -84.4278, 63.1567, 0.59", "30.4848, -85.0485, 63.9335, 1.84", "30.4334, -85.6358, 64.6105, 2.06", "30.2946, -86.9963, 66.0687, 0.52", "30.19, -87.8191, 66.8507, 0.22", "30.0652, -88.5818, 67.506, 0.22", "29.944, -89.0832, 67.8926, 0.22", "29.7975, -89.412, 68.1554, 0.52", "29.4959, -89.8204, 68.5198, 0.81", "28.5495, -90.5941, 69.4002, 0.22", "27.8385, -90.9796, 70.0066, 1.47", "27.3519, -91.1638, 70.4182, 1.92", "26.2581, -91.4457, 71.3738, 0.44", "25.7378, -91.517, 71.8396, 0.22", "25.1363, -91.4894, 72.3899, 0.81", "24.1766, -91.2857, 73.2944, 0.22", "23.6851, -91.1514, 73.7657, 0.22", "23.4341, -91.0856, 74.0192, 0.22", "22.9673, -91.0019, 74.5098, 0.59", "22.0028, -90.9199, 75.5702, 0.37", "21.4026, -90.916, 76.2701, 0.37", "20.9357, -90.9219, 76.9086, 0.37", "20.6211, -90.9361, 77.4595, 0.37", "20.3195, -91.0286, 78.2161, 0.37", "20.1825, -91.1957, 78.8097, 0.37", "20.1051, -91.4034, 79.3398, 0.37", "20.0035, -91.6318, 80.0319, 0.37", "19.7201, -91.7213, 80.7394, 0.37", "19.1677, -91.7842, 81.3354, 0.37", "18.4508, -91.8252, 81.8201, 0.37", "17.736, -91.8053, 82.1625, 0.37", "17.3503, -91.7678, 82.2931, 0.37", "15.7882, -91.4584, 82.7131, 0.29", "14.2215, -90.9061, 83.0665, 0.22", "13.7284, -90.6887, 83.1661, 0.22", "12.7317, -90.2064, 83.3939, 0.15", "12.0316, -89.8742, 83.5931, 0.59", "11.3701, -89.5683, 83.8027, 0.29", "10.7732, -89.3239, 84.0266, 0.88", "9.79582, -88.9897, 84.4625, 0.96", "8.3933, -88.6551, 85.0768, 0.22", "7.55597, -88.5361, 85.4323, 1.33", "7.00171, -88.4966, 85.6573, 1.4", "5.66724, -88.5043, 86.1497, 0.15", "5.3106, -88.5411, 86.2894, 0.15", "4.83308, -88.6226, 86.4921, 0.15", "4.48135, -88.7161, 86.6443, 0.15", "4.24834, -88.7801, 86.7516, 0.81", "3.88679, -88.8362, 86.9307, 0.81", "2.65963, -88.8866, 87.5823, 0.22", "1.97068, -88.8336, 87.9383, 0.22", "1.30711, -88.7345, 88.2682, 1.11", "0.66482, -88.5889, 88.5703, 1.62", "-0.758771, -88.1446, 89.1767, 0.22", "-1.58251, -87.7954, 89.4799, 1.11", "-2.66852, -87.224, 89.7895, 0.22", "-3.41901, -86.8089, 89.9593, 0.22", "-3.78682, -86.5948, 90.0263, 1.03", "-4.49332, -86.1709, 90.1172, 1.03", "-5.444, -85.5824, 90.1825, 0.22", "-6.3823, -84.9594, 90.2075, 0.52", "-7.40719, -84.2174, 90.2215, 0.15", "-7.77642, -83.916, 90.2208, 0.15", "-8.04621, -83.6686, 90.2368, 0.52", "-8.42537, -83.2833, 90.2755, 1.18", "-9.51694, -82.0551, 90.4275, 0.22", "-10.0119, -81.3665, 90.4789, 1.03", "-10.2851, -80.9011, 90.4887, 1.99", "-11.234, -79.0018, 90.451, 0.29", "-11.4533, -78.465, 90.4047, 0.96", "-11.7182, -77.6371, 90.2767, 1.7", "-12.0669, -75.9083, 89.8866, 0.22", "-12.1579, -75.0797, 89.6347, 0.22", "-12.1688, -74.3914, 89.3679, 0.96", "-12.0445, -73.2045, 88.812, 0.07", "-11.9179, -72.4855, 88.4497, 0.74", "-11.6643, -71.5334, 87.9376, 0.22", "-11.3161, -70.5911, 87.4415, 0.22", "-10.837, -69.7711, 87.0566, 0.66", "-10.014, -68.7505, 86.6449, 0.07", "-9.41675, -68.1838, 86.4643, 0.22", "-8.57202, -67.5206, 86.3284, 0.07", "-7.70938, -66.9267, 86.2511, 1.11", "-5.36204, -65.4998, 86.2436, 0.07", "-4.81863, -65.2064, 86.2839, 0.07", "-4.42825, -65.021, 86.342, 0.29", "-3.38341, -64.5503, 86.5717, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "37.3961, 17.8993, 41.9402, 0.22", "37.7515, 18.5128, 42.7635, 0.22", "38.1065, 18.984, 43.513, 0.22", "38.4238, 19.3261, 44.1298, 0.52", "38.8826, 19.7624, 44.9475, 1.7", "39.3163, 20.0751, 45.6088, 2.06", "40.2487, 20.6222, 46.9497, 0.52", "40.9499, 20.9761, 47.9208, 0.66", "41.5895, 21.2706, 48.7591, 2.14", "41.969, 21.4448, 49.2436, 2.65", "43.3095, 22.0927, 50.921, 0.29", "43.9037, 22.386, 51.7183, 0.22", "44.5516, 22.6995, 52.6348, 0.22", "45.0479, 22.92, 53.3841, 1.25", "45.774, 23.2164, 54.5419, 0.15", "46.4535, 23.4832, 55.6486, 0.81", "47.2858, 23.8143, 56.8915, 1.4", "47.8871, 24.0274, 57.6557, 2.21", "49.4339, 24.4692, 59.3262, 0.22", "50.1846, 24.6423, 60.0183, 0.88", "50.884, 24.7782, 60.5644, 1.18", "52.3581, 25.0749, 61.4971, 0.22", "53.0354, 25.2368, 61.8292, 0.59", "53.6666, 25.407, 62.0725, 1.11", "54.6973, 25.6885, 62.3872, 0.15", "55.1076, 25.8003, 62.5224, 0.15", "55.4834, 25.9249, 62.685, 0.15", "55.8246, 26.064, 62.8901, 0.37", "56.3029, 26.3206, 63.2663, 0.66", "57.3908, 26.9902, 64.2574, 0.15", "58.1483, 27.4863, 65.0473, 1.62", "58.9148, 27.9724, 65.9114, 0.29", "59.7164, 28.453, 66.8839, 1.18", "60.8124, 29.0394, 68.3002, 0.22", "61.5448, 29.3713, 69.2861, 0.52", "62.4495, 29.6912, 70.5079, 1.25", "63.1574, 29.8794, 71.4802, 2.14", "64.3458, 30.0474, 73.1346, 0.59", "65.095, 30.077, 74.1908, 0.59", "65.8286, 30.0383, 75.2039, 0.22", "66.6775, 29.9804, 76.3782, 1.55", "67.1005, 29.9664, 76.9612, 1.55", "68.2223, 30.0579, 78.5424, 0.22", "68.5639, 30.1362, 79.0446, 0.22", "69.0421, 30.3263, 79.6905, 0.22", "69.5058, 30.5771, 80.3224, 0.96", "70.0103, 30.9438, 81.0071, 1.25", "70.9054, 31.762, 82.163, 0.22", "71.6079, 32.5732, 82.9933, 0.22", "72.3825, 33.4844, 83.8885, 2.73" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "37.3961, 17.8993, 41.9402, 0.22", "37.9984, 16.4031, 42.4562, 0.22", "38.2921, 15.7509, 42.6363, 0.37", "38.793, 14.7698, 42.8956, 0.66", "39.3677, 13.6773, 43.2611, 0.66", "39.8853, 12.704, 43.664, 0.15", "40.3177, 11.882, 44.0619, 1.47", "40.8786, 10.7819, 44.5785, 3.24", "41.2452, 10.099, 44.9322, 3.24", "42.4357, 8.07025, 46.1358, 0.29", "42.9054, 7.2887, 46.6667, 0.44", "43.5074, 6.25899, 47.4206, 2.14" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-11.1375, 45.5416, 33.9993, 0.22", "-12.4159, 46.5861, 34.2226, 0.22", "-13.0214, 47.0852, 34.3236, 1.55", "-13.8716, 47.7488, 34.3806, 3.1", "-15.4432, 48.924, 34.3703, 0.15", "-15.9993, 49.3217, 34.3309, 0.66", "-16.9251, 49.9508, 34.2237, 0.15", "-17.6495, 50.3765, 34.072, 1.18", "-19.0106, 51.0651, 33.6978, 0.07", "-19.7799, 51.3948, 33.4496, 0.07", "-20.4138, 51.6359, 33.2223, 0.07", "-21.1154, 51.8703, 32.9823, 0.96", "-22.486, 52.2804, 32.5506, 0.15", "-23.5555, 52.6022, 32.2626, 0.15", "-24.1982, 52.8035, 32.1495, 1.03", "-24.8667, 53.0081, 32.069, 1.99", "-26.1622, 53.3863, 32.0399, 0.15", "-26.721, 53.5348, 32.0681, 0.15", "-27.1196, 53.625, 32.1149, 0.15", "-27.7619, 53.7482, 32.2242, 0.88", "-28.5549, 53.8554, 32.3594, 1.62", "-30.2311, 54.0054, 32.6595, 0.15", "-30.8816, 54.0355, 32.7779, 0.15", "-31.6131, 54.0458, 32.9002, 0.44", "-32.4342, 54.0161, 33.0159, 0.15", "-33.564, 53.9302, 33.1988, 0.22", "-34.6366, 53.8023, 33.3995, 0.15", "-34.8907, 53.7562, 33.4558, 0.74", "-35.8011, 53.5609, 33.6954, 1.25", "-37.2493, 53.2128, 34.1284, 0.22", "-38.5127, 52.8659, 34.5549, 1.11", "-39.0815, 52.681, 34.7645, 1.84", "-40.2959, 52.1302, 35.2717, 0.15", "-40.6959, 51.8943, 35.4652, 0.15", "-41.1064, 51.6201, 35.6835, 0.15", "-41.3905, 51.4074, 35.8451, 0.81", "-42.1527, 50.7454, 36.246, 2.14", "-43.3602, 49.483, 36.979, 0.22", "-43.8759, 48.7742, 37.3458, 1.47" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-11.1375, 45.5416, 33.9993, 0.22", "-11.7938, 47.1152, 35.5745, 0.22", "-12.286, 48.2636, 36.6371, 0.22", "-13.0402, 49.9302, 38.1178, 0.37", "-13.3708, 50.5886, 38.7139, 0.37", "-13.7978, 51.3869, 39.4474, 0.96", "-14.2068, 52.1544, 40.1426, 0.15", "-14.3989, 52.5317, 40.4636, 0.15", "-14.5268, 52.7484, 40.6465, 0.22", "-15.0293, 53.4663, 41.2191, 0.15", "-15.4532, 54.023, 41.708, 1.03", "-15.9948, 54.7688, 42.4222, 1.99", "-16.6992, 55.9569, 43.6091, 0.22", "-17.039, 56.7751, 44.3498, 0.15", "-17.1366, 57.1304, 44.6497, 0.15", "-17.2525, 57.8652, 45.2254, 1.18", "-17.3544, 59.004, 46.0806, 0.15", "-17.3891, 59.6852, 46.5893, 0.52", "-17.4154, 60.6197, 47.2498, 0.22", "-17.468, 61.5356, 47.8895, 1.33", "-17.6016, 62.5565, 48.6354, 2.88", "-18.0367, 64.3698, 50.0402, 0.22", "-18.3075, 65.0339, 50.58, 0.22", "-18.6942, 65.7538, 51.1994, 0.74", "-19.1889, 66.5421, 51.9402, 0.15", "-19.6085, 67.17, 52.558, 0.15", "-19.9822, 67.6805, 53.1224, 0.15", "-20.4092, 68.2039, 53.887, 0.74", "-20.7514, 68.6447, 54.7076, 0.74", "-20.9471, 68.8681, 55.423, 0.74", "-21.097, 68.9844, 56.1904, 0.74", "-21.1618, 69.0018, 56.4872, 0.74", "-21.4623, 69.0156, 57.699, 0.74", "-21.5602, 69.0061, 58.1191, 0.74", "-21.8196, 68.9745, 59.2598, 0.74", "-21.9428, 68.991, 60.0001, 0.74", "-22.0427, 69.1367, 61.4024, 0.96", "-22.0053, 69.3362, 62.4283, 0.96", "-21.908, 69.5526, 63.151, 0.96", "-21.7143, 69.8969, 64.1515, 0.96", "-21.4216, 70.3874, 65.3785, 0.66", "-21.0942, 70.9229, 66.624, 0.88", "-20.7992, 71.5304, 67.9553, 1.55", "-20.5961, 72.2653, 69.4749, 0.37", "-20.5724, 72.6358, 70.158, 0.37", "-20.6036, 73.3633, 71.2995, 1.4", "-20.6515, 73.7849, 71.8821, 1.62", "-20.7805, 74.8762, 73.1942, 0.44", "-20.8499, 75.6429, 74.0112, 0.44", "-20.8545, 76.4701, 74.7966, 1.18", "-20.7525, 77.6404, 75.8119, 0.22", "-20.6306, 78.2427, 76.2986, 0.22", "-20.4127, 78.9573, 76.8452, 1.25", "-20.1441, 79.7073, 77.402, 1.92", "-19.6278, 81.2955, 78.6539, 0.15", "-19.4705, 81.9149, 79.192, 0.88", "-19.3538, 82.6852, 79.9067, 1.92", "-19.2821, 84.2021, 81.4244, 0.22", "-19.3183, 84.9985, 82.3174, 0.74", "-19.4335, 86.0576, 83.6194, 1.7", "-19.5326, 86.8167, 84.6505, 0.07", "-19.5552, 87.1996, 85.2021, 0.96", "-19.5575, 88.1687, 86.6866, 0.07", "-19.4965, 88.7694, 87.6587, 0.07", "-19.3772, 89.218, 88.4022, 0.07", "-19.1017, 89.8779, 89.6171, 0.37", "-18.8465, 90.4179, 90.8434, 0.59", "-18.7306, 90.6783, 91.554, 0.59", "-18.6813, 90.8563, 92.1597, 0.59", "-18.6973, 90.9621, 92.5227, 0.59", "-18.8989, 91.4306, 93.8294, 0.15", "-19.0902, 91.8541, 94.685, 0.07", "-19.1844, 92.2084, 95.2256, 0.07", "-19.249, 92.5504, 95.6661, 0.07", "-19.376, 93.1428, 96.3395, 0.88", "-19.6225, 94.099, 97.4112, 0.22", "-19.8779, 94.8867, 98.3953, 0.22", "-20.1788, 95.5714, 99.3927, 1.62", "-20.5813, 96.1662, 100.481, 2.21", "-21.3552, 96.9394, 102.38, 0.37", "-21.8973, 97.2942, 103.701, 0.37", "-22.6909, 97.5389, 105.689, 1.33", "-22.9161, 97.52, 106.344, 1.77", "-23.2918, 97.2784, 107.785, 0.29", "-23.5252, 96.8909, 109.052, 0.29", "-23.7145, 96.4674, 110.089, 0.59", "-23.9412, 96.0079, 111.142, 1.18", "-24.3748, 95.2859, 112.829, 0.37", "-24.8941, 94.5526, 114.577, 1.03", "-25.4004, 93.9827, 115.936, 1.4", "-26.6579, 92.8811, 118.526, 0.07", "-27.3559, 92.4039, 119.657, 0.59", "-28.1953, 92.0178, 120.681, 0.15", "-28.8245, 91.8316, 121.247, 0.15", "-29.8437, 91.6171, 121.972, 0.15", "-30.3484, 91.5466, 122.279, 1.03", "-30.8769, 91.4868, 122.535, 1.4", "-32.8076, 91.2838, 123.383, 0.15", "-33.5118, 91.2197, 123.697, 0.15", "-34.7512, 91.1064, 124.335, 0.15", "-35.3741, 91.0354, 124.71, 1.11", "-35.9581, 90.9586, 125.109, 1.62", "-37.3389, 90.7677, 126.17, 0.29", "-38.1783, 90.6619, 126.882, 0.07", "-38.9753, 90.6252, 127.545, 0.07", "-39.4707, 90.6306, 127.952, 0.88", "-40.6224, 90.6876, 128.943, 0.07", "-41.1742, 90.7467, 129.456, 0.22", "-42.0996, 90.9349, 130.39, 0.07", "-42.7586, 91.1325, 131.023, 1.77" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "0.90903, 35.641, 20.5961, 0.52", "3.58412, 34.9486, 18.5165, 0.52", "4.23647, 34.7182, 18.066, 2.21", "5.40287, 34.2059, 17.3154, 2.88", "7.3634, 33.1825, 16.1038, 0.96", "8.76092, 32.329, 15.2091, 0.15", "9.52411, 31.7939, 14.6622, 0.59", "10.2802, 31.1106, 14.1952, 0.15", "10.7744, 30.5928, 13.8804, 0.22", "11.1404, 30.1007, 13.613, 0.22", "11.743, 29.026, 13.0089, 0.22", "12.4266, 27.4903, 12.156, 1.11", "12.7275, 26.6388, 11.6841, 2.29", "12.8811, 26.0995, 11.3786, 2.58", "13.2884, 24.3732, 10.4036, 0.15", "13.4682, 23.3348, 9.86993, 0.15", "13.5406, 22.3806, 9.46927, 0.29", "13.5375, 21.6797, 9.22253, 1.03", "13.502, 20.9538, 8.97894, 1.99", "13.4698, 20.4263, 8.82129, 2.29", "13.3498, 18.6805, 8.44282, 0.44", "13.3007, 17.438, 8.23812, 0.29", "13.2909, 16.7663, 8.1582, 0.44", "13.2949, 16.1208, 8.10033, 0.52", "13.3209, 14.9548, 8.05152, 0.22", "13.3662, 14.1749, 8.05213, 0.22", "13.4375, 13.3319, 8.09968, 1.33", "13.5237, 12.5087, 8.17363, 2.29", "13.5864, 11.829, 8.25183, 2.29", "13.7618, 9.93842, 8.50945, 0.15", "13.823, 9.13747, 8.62805, 0.15", "13.8685, 8.49186, 8.71858, 0.15", "13.9042, 7.87288, 8.80664, 0.66", "13.9534, 6.89993, 8.92262, 1.33", "13.9839, 6.14203, 8.95327, 1.03", "14.0095, 4.5291, 8.85144, 0.22", "14.0109, 3.75396, 8.74234, 0.22", "14.004, 2.99814, 8.57886, 0.66", "13.9956, 1.90845, 8.29492, 0.22", "13.9482, 0.509071, 7.87097, 0.29", "13.9048, -0.380138, 7.60466, 0.59", "13.8726, -1.05746, 7.37838, 1.33", "13.8116, -2.02829, 7.03589, 2.14", "13.6941, -3.69496, 6.4306, 0.22", "13.5999, -4.83608, 6.04981, 0.22", "13.5143, -5.80402, 5.84149, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "0.90903, 35.641, 20.5961, 0.52", "1.01342, 36.4032, 21.9258, 0.52", "1.20476, 36.8475, 23.1207, 0.52", "1.54269, 37.1835, 24.639, 0.52", "1.75264, 37.2571, 25.4374, 0.52", "2.30745, 37.3437, 27.2914, 0.81", "2.75931, 37.4146, 28.648, 1.18", "3.48666, 37.3855, 30.3423, 0.96", "4.05882, 37.3106, 31.5223, 1.25", "4.71585, 37.1688, 32.7707, 0.37", "5.14036, 37.1015, 33.4829, 0.37", "5.676, 37.0263, 34.3251, 0.15", "6.36301, 36.9874, 35.3108, 0.15", "7.17243, 37.111, 36.3503, 1.18", "7.65654, 37.2717, 36.9645, 2.43", "8.51403, 37.6115, 37.9846, 2.65" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-11.3357, 106.929, 5.56851, 0.59", "-11.6638, 108.509, 5.38555, 0.59", "-12.0286, 109.899, 5.18973, 0.29", "-12.4289, 111.205, 4.9912, 0.96", "-12.7635, 112.198, 4.84577, 0.07", "-13.1758, 113.265, 4.69738, 0.07", "-13.4212, 113.869, 4.61754, 0.22", "-13.7931, 114.601, 4.52995, 0.88", "-14.0131, 115.034, 4.49423, 1.47", "-14.5673, 116.267, 4.35568, 0.07", "-14.8481, 117.088, 4.21958, 0.07", "-14.9504, 117.522, 4.15226, 0.22", "-15.0191, 117.851, 4.10806, 0.22", "-15.1896, 118.759, 4.00987, 0.07", "-15.2991, 119.583, 3.92676, 0.07", "-15.346, 120.123, 3.85724, 0.66", "-15.3925, 120.731, 3.75221, 0.66", "-15.482, 121.714, 3.54923, 0.15", "-15.5505, 122.479, 3.37619, 1.03", "-15.6176, 123.283, 3.1839, 1.77", "-15.6997, 124.787, 2.83237, 0.15", "-15.7463, 125.799, 2.60913, 0.22", "-15.7676, 126.213, 2.51355, 0.66", "-15.8102, 126.695, 2.41773, 0.37", "-15.9434, 127.527, 2.30664, 1.11", "-16.1091, 128.18, 2.26895, 1.11", "-16.6224, 129.709, 2.3148, 0.22", "-16.9999, 130.604, 2.38367, 1.03", "-17.5123, 131.636, 2.4783, 1.62", "-18.0493, 132.588, 2.58434, 1.99", "-18.5869, 133.47, 2.62917, 0.52", "-19.3331, 134.634, 2.59128, 0.22", "-20.0796, 135.79, 2.42906, 0.22", "-20.445, 136.369, 2.27386, 0.88", "-20.9561, 137.225, 1.86747, 1.55", "-21.9755, 138.913, 0.799218, 0.15", "-22.3761, 139.604, 0.312566, 0.22", "-22.7079, 140.222, -0.130681, 0.07", "-23.2071, 141.243, -0.84799, 1.33", "-23.9353, 142.784, -1.79423, 0.07", "-24.1655, 143.283, -2.09203, 0.37", "-24.631, 144.303, -2.50204, 0.07", "-25.1475, 145.464, -2.77528, 0.22", "-25.624, 146.552, -2.78071, 1.55", "-25.9652, 147.452, -2.46443, 1.55", "-28.0155, 157.057, -5.29031, 1.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-11.3357, 106.929, 5.56851, 0.22", "-12.5614, 108.576, 5.34081, 0.22", "-13.1203, 109.371, 5.22245, 0.07", "-13.727, 110.295, 5.07334, 1.11", "-14.6105, 111.809, 4.82918, 0.07", "-14.9766, 112.529, 4.71691, 0.07", "-15.1518, 112.913, 4.66008, 0.52", "-15.3893, 113.666, 4.55149, 1.47", "-15.6301, 114.627, 4.42437, 0.07", "-15.8042, 115.485, 4.31691, 0.15", "-15.9238, 116.323, 4.23673, 0.88", "-16.0134, 117.137, 4.1847, 1.4", "-16.1245, 118.417, 4.11037, 0.07", "-16.1705, 119.027, 4.08373, 0.74" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-25.4756, -109.256, -54.9282, 0.15", "-26.0556, -118.957, -58.1019, 0.15", "-26.4689, -128.982, -60.1476, 0.15", "-26.2212, -138.494, -63.8633, 0.15", "-23.8477, -147.763, -67.4127, 0.15", "-20.5159, -156.454, -71.5376, 0.15", "-16.9762, -165.207, -75.3508, 0.15", "-12.7876, -173.389, -79.6799, 0.15", "-8.57235, -182.118, -82.7952, 0.15", "-3.29202, -189.984, -86.4306, 0.15", "2.3682, -197.652, -89.8943, 0.15", "7.75427, -206.159, -91.3511, 0.15", "12.7201, -214.963, -92.601, 0.15", "17.6071, -223.626, -94.7649, 0.15", "21.6759, -232.395, -97.9676, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-25.4756, -109.256, -54.9282, 1.03", "-25.9534, -118.958, -58.1158, 0.15", "-27.8255, -128.844, -59.98, 0.15", "-30.7465, -138.496, -61.655, 0.15", "-35.4364, -147.542, -61.9955, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.32642, -148.868, 29.3302, 0.22", "-6.69836, -150.369, 29.7003, 0.22", "-6.37068, -151.319, 29.9446, 0.22", "-6.19961, -152.027, 30.1163, 0.88", "-6.02299, -153.066, 30.3534, 1.25", "-5.81328, -154.664, 30.72, 0.15", "-5.69673, -155.875, 30.9847, 0.15", "-5.67885, -156.858, 31.1982, 0.66", "-5.72471, -158.322, 31.4881, 0.15", "-5.76272, -158.988, 31.6125, 0.44", "-5.79168, -159.472, 31.6906, 0.44", "-5.82218, -160.822, 31.881, 0.15", "-5.81056, -161.8, 32.0039, 0.15", "-5.76789, -162.548, 32.0944, 1.18", "-5.682, -163.294, 32.1824, 2.14", "-5.53236, -164.405, 32.3022, 1.03", "-5.38835, -165.478, 32.3993, 0.15", "-5.25714, -166.321, 32.4696, 0.15", "-5.15686, -166.99, 32.515, 0.37", "-5.03944, -167.824, 32.5488, 0.22", "-4.9888, -168.273, 32.5445, 0.66", "-4.93038, -168.874, 32.5131, 0.81", "-4.79489, -170.151, 32.3992, 0.22", "-4.72586, -170.77, 32.3369, 1.03", "-4.6256, -171.884, 32.2068, 1.84", "-4.51046, -173.5, 32.0047, 0.22", "-4.47711, -174.028, 31.9439, 0.22", "-4.44059, -174.643, 31.8864, 0.22", "-4.40503, -175.246, 31.8481, 0.22", "-4.31058, -176.129, 31.8287, 0.96", "-4.01636, -177.967, 31.8666, 0.15", "-3.87518, -178.615, 31.9059, 0.15", "-3.71473, -179.302, 31.9653, 0.96", "-3.52959, -180.093, 32.0509, 1.92", "-3.09036, -181.861, 32.2778, 0.22", "-2.92345, -182.482, 32.3716, 0.22", "-2.76104, -183.033, 32.4553, 0.15", "-2.46377, -184.019, 32.6001, 0.15", "-2.30037, -184.603, 32.6843, 0.81", "-2.16463, -185.198, 32.7863, 1.62", "-1.96112, -186.384, 33.0288, 0.15", "-1.8183, -187.308, 33.225, 0.15", "-1.72628, -187.822, 33.3355, 0.15", "-1.56378, -188.627, 33.5107, 0.88", "-1.34095, -189.832, 33.7647, 0.15", "-1.23615, -190.449, 33.887, 0.96", "-1.07132, -191.575, 34.0936, 2.21", "-0.790043, -193.684, 34.4558, 0.15", "-0.667644, -194.567, 34.592, 0.96", "-0.381357, -196.354, 34.8767, 0.22", "-0.221071, -197.209, 35.0135, 0.88", "-0.131432, -197.666, 35.0935, 0.88", "0.168742, -199.121, 35.381, 0.07", "0.240515, -199.428, 35.4501, 0.29", "0.413127, -200.085, 35.6202, 0.29", "0.594208, -200.724, 35.8008, 0.15", "0.715766, -201.238, 35.9554, 0.15", "0.883157, -202.08, 36.2022, 0.15", "0.97784, -202.669, 36.355, 0.74", "1.08727, -203.504, 36.5649, 1.77", "1.13691, -204.032, 36.6997, 1.33", "1.22726, -205.339, 37.0575, 0.07", "1.245, -205.771, 37.1801, 0.37", "1.26997, -207.114, 37.5843, 0.07", "1.28339, -207.829, 37.8035, 0.59", "1.33146, -208.99, 38.1562, 0.15", "1.36892, -209.589, 38.3302, 0.22", "1.43968, -210.505, 38.5832, 1.33", "1.53941, -211.848, 38.9448, 0.07", "1.5659, -212.368, 39.0769, 0.88", "1.67447, -213.871, 39.4369, 0.15", "1.74193, -214.561, 39.5946, 0.15", "1.81151, -215.158, 39.7315, 0.15", "1.8997, -215.817, 39.8926, 0.74", "2.01259, -216.759, 40.13, 2.14", "2.16502, -218.461, 40.572, 0.15", "2.17512, -218.994, 40.6999, 0.44", "2.12223, -220.357, 41.0007, 0.07", "2.06276, -220.913, 41.1147, 0.15", "1.94833, -221.55, 41.2374, 0.07", "1.7513, -222.318, 41.3792, 1.11", "1.15723, -224.106, 41.679, 0.15", "0.882613, -224.864, 41.8023, 1.03", "0.357741, -226.227, 42.0043, 0.15", "0.144325, -226.842, 42.0804, 0.44", "-0.156406, -227.961, 42.199, 0.15", "-0.321343, -228.844, 42.2833, 1.62", "-0.361285, -229.303, 42.3203, 1.77", "-0.358984, -229.998, 42.3574, 1.03", "-0.222591, -231.76, 42.4068, 0.15", "-0.0116373, -233.435, 42.4321, 0.15", "0.0828942, -233.988, 42.4403, 0.88", "0.233257, -234.73, 42.4746, 1.18", "0.684556, -236.656, 42.6086, 0.07", "0.785035, -237.043, 42.6426, 0.15", "1.11358, -238.255, 42.7797, 0.07", "1.47721, -239.575, 42.9511, 0.15", "1.77061, -240.711, 43.1074, 1.33", "2.22144, -242.567, 43.3742, 0.15", "2.38874, -243.334, 43.4947, 0.22", "2.59872, -244.576, 43.6645, 0.07", "2.6435, -244.96, 43.7076, 0.22", "2.75916, -246.787, 43.8507, 0.07", "2.76942, -247.145, 43.8713, 0.81", "2.76245, -248.442, 43.9322, 1.92", "2.74571, -250.025, 43.9433, 0.15", "2.73945, -250.855, 43.9046, 0.88", "2.74625, -252.67, 43.7458, 0.15", "2.75225, -253.154, 43.6817, 0.44", "2.77898, -254.66, 43.4485, 0.07", "2.83014, -255.904, 43.2396, 0.07", "2.86588, -256.72, 43.1318, 0.15", "2.89192, -257.352, 43.0745, 0.74", "2.90995, -257.926, 43.0559, 0.74", "2.99612, -259.21, 43.1726, 0.07", "3.1177, -260.09, 43.3774, 0.07", "3.26046, -260.947, 43.6854, 0.07", "3.38871, -261.654, 43.9813, 1.25", "3.49276, -262.22, 44.2282, 1.99", "3.83666, -264.161, 45.0399, 0.15", "4.00935, -265.22, 45.4584, 0.96", "4.21561, -266.745, 46.0034, 0.07", "4.35016, -267.946, 46.3811, 0.07", "4.41793, -268.827, 46.6121, 0.81", "4.53326, -271.181, 47.0901, 0.15", "4.53724, -271.776, 47.1736, 0.29", "4.5191, -272.943, 47.2805, 0.07", "4.50264, -273.922, 47.323, 1.47", "4.45706, -276.116, 47.3494, 0.07", "4.42571, -277.071, 47.3671, 0.07", "4.38134, -277.775, 47.3661, 1.11", "4.23088, -279.599, 47.3116, 0.07", "4.15264, -280.372, 47.262, 0.74", "4.06683, -281.074, 47.1876, 1.92", "3.78193, -282.999, 46.9193, 0.15", "3.54251, -284.476, 46.6906, 0.22", "3.26198, -286.179, 46.4267, 0.22", "3.12909, -286.926, 46.3009, 0.81", "2.95382, -287.891, 46.1418, 1.84", "2.60254, -289.966, 45.8854, 0.07", "2.50804, -290.578, 45.8317, 0.29", "2.30806, -292.119, 45.8961, 0.07", "2.18327, -293.101, 46.0028, 0.07", "2.04971, -294.215, 46.1826, 1.55", "1.87625, -295.922, 46.5719, 0.07", "1.82892, -296.53, 46.7484, 0.07", "1.74931, -298.117, 47.2722, 1.47" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-7.32642, -148.868, 29.3302, 0.22", "-7.974, -150.003, 30.0187, 0.22", "-8.46057, -151.098, 30.5892, 0.44", "-8.6497, -151.622, 30.8361, 0.15", "-8.79102, -152.059, 31.0388, 0.15", "-8.86191, -152.261, 31.1347, 0.37", "-9.09988, -152.849, 31.415, 0.44", "-9.32933, -153.347, 31.6439, 0.15", "-9.43603, -153.548, 31.7575, 0.22", "-9.61491, -153.876, 32.0032, 0.22", "-9.85299, -154.302, 32.3772, 0.22", "-10.0623, -154.689, 32.7485, 0.81", "-10.4073, -155.395, 33.4386, 0.22", "-10.7488, -156.208, 34.2186, 0.96", "-11.0421, -157.018, 34.9542, 2.21", "-11.5242, -158.628, 36.3093, 0.22", "-11.6904, -159.333, 36.8775, 0.22", "-11.7816, -159.825, 37.252, 0.22", "-11.8406, -160.203, 37.5139, 0.22", "-11.9531, -160.797, 37.8721, 0.22", "-12.0782, -161.257, 38.1348, 0.22", "-12.2445, -161.708, 38.3942, 0.88", "-12.5043, -162.254, 38.7464, 1.4", "-12.9373, -162.97, 39.3036, 2.14", "-13.743, -164.118, 40.3378, 0.52", "-14.3525, -164.893, 41.124, 0.22", "-14.7016, -165.305, 41.5658, 0.22", "-15.1915, -165.83, 42.1575, 1.11", "-15.9964, -166.575, 43.1086, 1.99", "-16.427, -166.905, 43.6059, 1.99", "-16.5771, -166.993, 43.7865, 1.99" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-34.9611, -133.283, 21.2165, 0.22", "-36.2561, -134.42, 21.3865, 0.22", "-36.9469, -135.06, 21.4819, 0.22", "-37.5507, -135.61, 21.5606, 1.33", "-38.6627, -136.622, 21.6972, 0.15", "-39.0612, -136.996, 21.7447, 0.15", "-39.3499, -137.276, 21.7787, 0.37", "-39.8032, -137.788, 21.8604, 0.37", "-40.4589, -138.617, 21.9736, 0.22", "-40.7549, -139.005, 22.0114, 0.15", "-40.976, -139.302, 22.0281, 0.15", "-41.1322, -139.526, 22.0485, 0.15", "-41.4889, -140.067, 22.1057, 0.15", "-41.842, -140.65, 22.1708, 0.74", "-42.4133, -141.612, 22.2776, 0.15", "-42.8152, -142.19, 22.3, 0.15", "-43.4379, -142.972, 22.2852, 0.15", "-43.6834, -143.251, 22.256, 0.15", "-44.2429, -143.841, 22.1442, 1.33", "-44.7702, -144.354, 22.0555, 2.14", "-46.193, -145.59, 21.8824, 0.15", "-46.9064, -146.131, 21.8337, 1.25", "-47.973, -146.864, 21.7933, 0.07", "-48.3826, -147.142, 21.7998, 0.22", "-49.6652, -147.991, 21.8744, 0.22", "-50.3066, -148.398, 21.9455, 1.25", "-50.7151, -148.648, 22.0168, 1.25", "-52.0307, -149.563, 22.1943, 0.07", "-52.912, -150.272, 22.2676, 0.07", "-53.5119, -150.86, 22.2365, 0.07", "-54.0372, -151.487, 22.0738, 0.07", "-54.3083, -151.855, 21.9512, 1.18", "-55.2368, -153.249, 21.4114, 0.07", "-55.4262, -153.564, 21.2803, 0.88", "-55.911, -154.44, 20.9078, 1.92", "-56.7274, -155.98, 20.2619, 0.15", "-56.979, -156.473, 20.0569, 0.22", "-57.3995, -157.242, 19.7446, 0.07", "-57.6304, -157.657, 19.5845, 0.07", "-57.9626, -158.326, 19.353, 0.29", "-58.554, -159.715, 18.9691, 0.07", "-59.0146, -160.958, 18.7277, 0.22", "-59.3248, -161.823, 18.5978, 1.55", "-59.8796, -163.395, 18.4842, 0.22", "-60.2274, -164.365, 18.4813, 0.07", "-60.5263, -165.233, 18.5248, 0.07", "-60.7103, -165.821, 18.6207, 0.07", "-60.888, -166.358, 18.7829, 0.15", "-61.1668, -167.156, 19.1436, 0.07", "-61.3631, -167.504, 19.419, 0.88" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-34.9611, -133.283, 21.2165, 0.29", "-36.6099, -132.873, 20.9741, 0.29", "-37.4275, -132.645, 20.7727, 0.22", "-37.9448, -132.496, 20.6069, 0.74", "-38.5654, -132.311, 20.3844, 0.96", "-39.2999, -132.099, 20.1103, 0.29", "-40.06, -131.882, 19.8166, 0.15", "-40.8824, -131.641, 19.4645, 0.15", "-41.5817, -131.459, 19.1937, 1.03", "-42.463, -131.252, 18.8858, 0.29", "-43.6733, -130.986, 18.5084, 0.22", "-44.3413, -130.853, 18.3264, 1.11", "-45.4118, -130.664, 18.0874, 2.14", "-47.425, -130.332, 17.7205, 0.22", "-47.9354, -130.254, 17.6397, 0.81", "-48.9579, -130.108, 17.4843, 1.7", "-50.3422, -129.903, 17.2878, 0.22", "-50.9257, -129.817, 17.1942, 0.88", "-51.8087, -129.693, 17.0278, 1.55", "-52.4654, -129.597, 16.8834, 0.59", "-53.7024, -129.422, 16.5894, 0.15", "-54.6114, -129.318, 16.3385, 0.88", "-55.5226, -129.219, 16.0448, 0.15", "-56.2494, -129.124, 15.7765, 0.22", "-56.8907, -129.029, 15.5132, 0.81", "-57.8446, -128.89, 15.1001, 1.99", "-59.1856, -128.737, 14.4649, 0.22", "-59.8406, -128.675, 14.1426, 0.22", "-60.5049, -128.605, 13.8057, 0.52", "-61.1934, -128.524, 13.442, 1.18", "-62.2791, -128.377, 12.8589, 1.99", "-63.6741, -128.163, 12.0683, 0.15", "-64.1911, -128.077, 11.7723, 0.29", "-65.0322, -127.966, 11.2809, 0.07", "-65.6046, -127.915, 10.911, 0.22", "-66.0355, -127.883, 10.5775, 0.22", "-66.4102, -127.879, 10.1881, 0.22", "-66.5504, -127.897, 10.0085, 0.22", "-66.8796, -128.04, 9.4741, 0.22", "-67.1992, -128.342, 8.84727, 0.22", "-67.4166, -128.612, 8.37812, 0.22", "-67.9292, -129.274, 7.36402, 1.84" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "72.3825, 33.4844, 83.8885, 0.22", "73.8133, 33.5796, 85.5859, 0.22", "74.1287, 33.5718, 85.9694, 0.22", "74.8862, 33.5758, 86.8314, 0.59", "75.6128, 33.6143, 87.5745, 0.44", "76.0217, 33.6363, 87.9511, 0.44", "76.5598, 33.6439, 88.3704, 0.15", "77.1352, 33.654, 88.6951, 0.15", "77.896, 33.6018, 89.0351, 0.15", "78.5191, 33.5087, 89.2398, 0.96", "79.3662, 33.3589, 89.4636, 1.55", "80.5622, 33.2058, 89.7625, 0.22", "81.426, 33.0989, 89.9681, 0.37", "82.0974, 32.9845, 90.1184, 0.22", "82.6512, 32.864, 90.2469, 0.22", "83.2772, 32.7271, 90.3989, 0.37", "84.457, 32.4884, 90.7288, 0.22", "85.1115, 32.3823, 90.9513, 0.22", "85.9686, 32.294, 91.2845, 0.22", "86.5206, 32.259, 91.5183, 0.96", "87.46, 32.2206, 91.955, 1.99", "88.9902, 32.1406, 92.7237, 0.22", "89.9389, 32.0499, 93.2473, 0.15", "90.8537, 31.9633, 93.8108, 0.15", "91.1543, 31.9324, 94.0128, 0.15", "91.5722, 31.8669, 94.3039, 0.15", "91.9734, 31.7787, 94.5556, 0.15", "92.7312, 31.5745, 94.9452, 0.15", "93.2051, 31.3907, 95.1593, 0.81", "93.7605, 31.1177, 95.4072, 1.47", "94.168, 30.9054, 95.5915, 1.47", "95.3918, 30.2547, 96.1171, 0.15", "95.7002, 30.1032, 96.2588, 0.22", "96.5094, 29.6818, 96.6572, 0.37", "97.3133, 29.221, 97.0798, 1.03", "98.082, 28.7779, 97.5885, 1.77", "98.4857, 28.5584, 97.9184, 1.77", "99.6686, 27.9611, 99.06, 0.22", "100.114, 27.7926, 99.5149, 0.22", "100.825, 27.6282, 100.235, 1.11", "102.277, 27.431, 101.731, 0.22", "102.871, 27.3704, 102.39, 0.22", "103.437, 27.3166, 103.056, 0.66", "104.229, 27.2381, 103.981, 0.88", "104.776, 27.2015, 104.602, 1.7", "105.942, 27.1811, 105.905, 0.44", "106.82, 27.1929, 106.831, 0.74", "107.478, 27.2422, 107.512, 1.25", "108.577, 27.4479, 108.652, 0.22", "108.964, 27.5587, 109.053, 0.22", "109.637, 27.8392, 109.742, 0.37", "110.112, 28.0808, 110.172, 0.37", "110.9, 28.4975, 110.789, 1.47", "111.87, 28.9872, 111.5, 0.29", "112.341, 29.207, 111.82, 0.29", "112.6, 29.3183, 111.997, 0.29", "113.427, 29.6635, 112.621, 0.15", "113.938, 29.9085, 113.088, 0.22", "114.322, 30.1271, 113.515, 0.74", "114.743, 30.4415, 114.102, 1.25", "115.405, 31.0979, 115.238, 0.22", "115.894, 31.6767, 116.197, 0.96", "116.317, 32.216, 117.1, 0.96", "116.66, 32.6075, 117.844, 0.29", "117.085, 33.0201, 118.795, 0.29", "117.439, 33.3042, 119.646, 0.29", "117.769, 33.5117, 120.481, 0.29", "118.036, 33.7031, 121.362, 0.29", "118.174, 33.8698, 122.193, 0.29", "118.201, 34.0241, 123.012, 0.29", "118.186, 34.1202, 123.533, 0.29", "118.15, 34.2662, 124.223, 0.29", "118.064, 34.5894, 125.543, 0.59", "118.004, 34.8608, 126.539, 0.59", "117.972, 35.2015, 127.781, 0.59", "117.997, 35.4177, 128.661, 0.59", "118.117, 35.6264, 129.764, 0.59", "118.272, 35.718, 130.54, 0.59", "118.369, 35.737, 130.839, 0.59", "118.735, 35.7378, 131.631, 0.59", "118.937, 35.6955, 131.954, 0.59", "119.473, 35.5081, 132.631, 0.22", "119.917, 35.3187, 133.063, 0.22", "120.541, 35.1169, 133.667, 0.22", "120.99, 35.0421, 134.136, 0.22", "121.711, 35.0332, 134.876, 0.22", "122.229, 35.1139, 135.443, 0.22", "122.775, 35.2896, 136.121, 1.11", "123.762, 35.7487, 137.491, 0.22", "124.295, 36.0466, 138.308, 0.22", "124.917, 36.4543, 139.339, 0.22", "125.391, 36.7279, 140.131, 0.22", "125.761, 36.8206, 140.796, 0.22", "125.934, 36.7598, 141.121, 0.22", "126.284, 36.4723, 141.729, 0.59", "126.832, 35.9301, 142.615, 0.59", "127.481, 35.298, 143.621, 0.15", "128.118, 34.6907, 144.57, 0.66", "128.797, 34.084, 145.586, 0.15", "129.345, 33.6402, 146.426, 0.66", "129.807, 33.3331, 147.121, 1.03", "130.715, 32.8229, 148.388, 0.22", "131.498, 32.4427, 149.385, 0.15", "132.304, 32.1202, 150.323, 0.66", "132.816, 31.9841, 150.898, 1.25", "133.926, 31.8005, 152.101, 0.22", "134.753, 31.7109, 152.963, 0.15", "135.496, 31.673, 153.658, 0.37", "135.953, 31.6794, 154.04, 0.59", "137.128, 31.7155, 154.956, 0.15", "137.84, 31.7229, 155.526, 0.88", "139.055, 31.7215, 156.551, 0.22", "139.535, 31.738, 156.968, 0.96", "139.934, 31.7626, 157.322, 0.66", "140.775, 31.8188, 158.043, 0.15", "141.614, 31.9197, 158.781, 0.81", "142.175, 32.0624, 159.327, 1.25", "142.932, 32.3621, 160.077, 0.15", "143.861, 32.7891, 161.026, 0.15", "144.141, 32.9322, 161.323, 0.29", "144.828, 33.3482, 162.069, 0.15", "145.159, 33.5712, 162.442, 0.96", "145.769, 33.953, 163.178, 0.29", "146.578, 34.3472, 164.163, 0.74", "147.374, 34.6606, 165.084, 0.15", "147.914, 34.8491, 165.693, 0.37", "148.242, 34.9548, 166.03, 0.37", "148.816, 35.1605, 166.623, 0.22", "149.469, 35.4129, 167.266, 0.22", "150.014, 35.5773, 167.732, 0.37", "150.66, 35.7398, 168.224, 0.37", "151.395, 35.9129, 168.717, 1.33", "152.832, 36.2939, 169.572, 0.22", "153.79, 36.62, 170.091, 1.03", "154.979, 37.0859, 170.678, 0.15", "155.39, 37.2748, 170.862, 0.15", "156.455, 37.8893, 171.287, 0.15", "157.208, 38.4524, 171.59, 1.03", "157.826, 39.0703, 171.832, 0.15", "158.246, 39.5813, 172.012, 0.15", "158.822, 40.3869, 172.337, 0.15", "159.419, 41.2071, 172.784, 0.88", "159.997, 41.9989, 173.317, 0.29", "160.425, 42.5687, 173.754, 0.81", "160.635, 42.8327, 173.969, 0.81", "161.443, 43.9868, 174.819, 0.22", "161.969, 44.8733, 175.393, 0.07", "162.294, 45.623, 175.782, 0.15", "162.413, 46.0318, 175.951, 0.66", "162.569, 46.8898, 176.242, 1.55", "162.848, 49.0593, 176.865, 0.15", "162.914, 50.097, 177.07, 0.15", "162.906, 51.058, 177.227, 0.66", "162.86, 51.7669, 177.347, 0.15", "162.812, 52.1884, 177.42, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "72.3825, 33.4844, 83.8885, 0.29", "71.6512, 34.4177, 85.2171, 0.29", "71.0791, 35.1484, 86.1206, 0.29", "70.4803, 35.9559, 87.0151, 0.81", "70.1381, 36.3947, 87.4932, 1.4", "69.2783, 37.3962, 88.6174, 0.07", "68.813, 37.8999, 89.1878, 1.03", "67.8823, 38.7917, 90.159, 0.15", "67.0951, 39.569, 90.9397, 1.55", "66.3667, 40.3431, 91.6833, 0.22", "65.8932, 40.9022, 92.2064, 0.22", "65.4072, 41.5563, 92.7942, 0.81", "64.9225, 42.2911, 93.4218, 0.07", "64.5518, 43.0134, 93.9847, 0.59", "64.3203, 43.7292, 94.4433, 0.07", "64.2532, 44.1768, 94.6909, 0.52", "64.2126, 45.6837, 95.4868, 0.07", "64.2571, 46.1828, 95.7483, 0.96", "64.3496, 46.6472, 96.0033, 0.96", "64.7069, 47.8772, 96.7309, 0.22", "65.0731, 48.7251, 97.2594, 0.22", "65.4947, 49.4336, 97.7512, 0.96", "66.0253, 50.1656, 98.303, 1.77", "66.7805, 51.1526, 99.1173, 0.22", "67.2572, 51.7432, 99.6321, 0.15", "67.6712, 52.2386, 100.047, 0.15", "67.8821, 52.5079, 100.264, 0.15", "68.5338, 53.4527, 100.99, 0.88", "69.1056, 54.5657, 101.814, 0.22", "69.3418, 55.199, 102.275, 0.81", "69.6717, 56.2823, 103.066, 0.15", "69.8871, 57.0637, 103.634, 0.66", "70.1093, 57.9282, 104.255, 1.84", "70.5502, 59.5367, 105.407, 0.15", "70.7925, 60.4529, 106.041, 0.15", "70.989, 61.198, 106.545, 0.15", "71.172, 61.8001, 106.951, 0.66", "71.5999, 62.9353, 107.649, 0.15", "72.089, 63.9765, 108.241, 0.15", "72.3713, 64.4951, 108.506, 0.66", "72.6215, 65.0004, 108.736, 0.22", "72.9549, 65.8187, 109.092, 0.22", "73.1228, 66.3086, 109.293, 0.81", "73.2236, 66.7058, 109.442, 0.81", "73.3639, 67.832, 109.856, 0.07", "73.3802, 68.5175, 110.119, 0.66", "73.2391, 69.9704, 110.713, 0.15", "73.0468, 70.9487, 111.125, 1.4", "72.6749, 72.3125, 111.739, 0.15", "72.3581, 73.2236, 112.175, 0.15", "72.0179, 73.9905, 112.563, 1.18", "71.3198, 75.1732, 113.242, 0.22", "70.6738, 76.0077, 113.769, 0.15", "70.2599, 76.4851, 114.089, 0.15", "69.8422, 76.9476, 114.404, 0.74", "69.3376, 77.5187, 114.771, 1.25", "68.3156, 78.7222, 115.521, 0.22", "67.7793, 79.3865, 115.933, 1.11", "66.8641, 80.5762, 116.708, 0.22", "66.3701, 81.268, 117.162, 1.47", "65.9007, 81.9652, 117.612, 0.96", "65.284, 82.9541, 118.245, 0.22", "64.7638, 83.8561, 118.814, 0.74", "64.1365, 84.9729, 119.553, 0.15", "63.8648, 85.4473, 119.892, 0.15", "63.5775, 85.9656, 120.279, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "43.5074, 6.25899, 47.4206, 0.15", "45.5833, 4.79368, 49.7902, 0.15", "46.2866, 4.43635, 50.335, 0.22", "46.8549, 4.19456, 50.7119, 0.88", "47.8823, 3.8048, 51.327, 0.15", "48.5565, 3.57063, 51.7054, 1.18", "49.3046, 3.31748, 52.1177, 2.58", "51.0712, 2.86267, 52.8484, 0.29", "51.8851, 2.66486, 53.1739, 0.96", "52.4933, 2.51782, 53.4278, 1.18", "54.211, 2.10828, 54.2444, 0.07", "54.842, 1.96747, 54.6072, 0.07", "55.1445, 1.89589, 54.8089, 0.07", "55.6921, 1.73112, 55.2486, 0.74", "56.1345, 1.5591, 55.6534, 1.03", "57.138, 1.07759, 56.6866, 0.15", "57.9586, 0.570725, 57.6215, 1.18", "58.2723, 0.328698, 58.0035, 1.4", "58.9081, -0.271136, 58.8407, 0.15", "59.3439, -0.795794, 59.4503, 0.15", "59.5713, -1.11852, 59.7796, 0.88", "59.8335, -1.53949, 60.1828, 0.29", "60.2859, -2.32123, 60.9321, 0.15", "60.5831, -2.86353, 61.5051, 0.81", "60.8845, -3.45414, 62.1857, 1.62", "61.3839, -4.63202, 63.5911, 0.15", "61.6079, -5.26424, 64.3646, 0.15", "61.7755, -5.83635, 65.0584, 0.22", "61.9273, -6.55891, 65.9108, 0.22", "61.9982, -7.03789, 66.45, 0.22", "62.0651, -7.49377, 66.9757, 1.18", "62.161, -8.06331, 67.6047, 1.62", "62.4807, -9.07918, 68.6776, 0.22", "62.7522, -9.56256, 69.2334, 0.22", "62.9647, -9.80972, 69.5621, 0.44", "63.5695, -10.3122, 70.3667, 0.15", "64.0399, -10.6024, 70.9235, 1.33", "65.0133, -11.1078, 71.9856, 0.15", "66.0447, -11.5821, 73.0159, 0.22", "66.6022, -11.857, 73.5191, 0.22", "66.8927, -12.0112, 73.7631, 0.22", "67.4018, -12.3229, 74.1473, 0.74", "67.9458, -12.6757, 74.498, 1.25", "68.4079, -12.9725, 74.7219, 1.25", "69.8973, -13.9994, 75.2783, 0.22", "70.5505, -14.4651, 75.5261, 0.22", "71.0971, -14.8663, 75.7465, 1.03", "71.7839, -15.3736, 76.0263, 1.84", "73.5273, -16.6487, 76.717, 0.22", "74.2841, -17.2213, 77.0022, 1.11", "75.36, -18.1059, 77.4066, 0.22", "76.0493, -18.7078, 77.6894, 0.15", "76.5414, -19.1418, 77.9138, 0.15", "77.2601, -19.7905, 78.2808, 1.03", "78.2706, -20.7582, 78.864, 0.22", "78.751, -21.2086, 79.1993, 0.96", "79.598, -21.9984, 79.8616, 0.15", "80.161, -22.5365, 80.3801, 0.15", "80.5644, -22.9568, 80.8385, 0.96", "81.0955, -23.5254, 81.5707, 1.92", "82.3699, -24.7911, 83.5722, 0.22", "82.7801, -25.1565, 84.2442, 0.44", "83.4105, -25.723, 85.3486, 1.18", "84.1428, -26.423, 86.7801, 0.22", "84.8309, -27.1293, 88.3499, 0.52", "85.3404, -27.7028, 89.8114, 0.81", "85.5917, -28.0401, 90.8501, 0.81", "85.8851, -28.4804, 92.654, 0.52", "85.9294, -28.6319, 93.6781, 0.52", "85.7921, -28.6235, 94.7013, 0.52", "85.4468, -28.4339, 95.6203, 0.52", "85.0336, -28.1412, 96.3031, 1.25", "84.6175, -27.7634, 96.8669, 1.25", "84.1173, -27.1666, 97.5383, 0.37", "83.5, -26.2366, 98.5039, 0.66", "83.1599, -25.5759, 99.1586, 0.37", "82.9249, -24.8783, 99.8794, 0.66", "82.8056, -24.1256, 100.811, 0.15", "82.825, -23.6805, 101.488, 0.15", "82.8985, -23.4497, 101.928, 0.15", "83.0733, -23.114, 102.679, 1.62", "83.4292, -22.5122, 104.148, 0.22", "83.8099, -21.8784, 105.842, 0.88", "84.0919, -21.4109, 107.301, 1.4", "84.3064, -21.0298, 108.645, 1.4", "84.5305, -20.5339, 110.524, 0.66", "84.6524, -20.1331, 112.222, 0.29", "84.6737, -19.9747, 113.086, 0.29", "84.6646, -19.8634, 113.953, 0.29", "84.6223, -19.8381, 114.529, 0.29", "84.4357, -19.9528, 115.866, 0.29", "84.2512, -20.1793, 116.777, 0.29", "84.019, -20.5182, 117.801, 0.29", "83.8176, -20.7261, 118.558, 0.29", "83.6185, -20.8073, 119.114, 0.29", "83.4543, -20.8123, 119.478, 0.29", "82.9903, -20.6362, 120.184, 0.88", "82.4682, -20.2987, 120.829, 1.25", "81.9704, -19.9027, 121.416, 0.59", "81.2996, -19.3379, 122.151, 1.25", "80.8426, -18.9327, 122.647, 1.4", "79.4354, -17.6805, 124.118, 0.15", "78.8874, -17.204, 124.648, 0.74", "77.8705, -16.3398, 125.559, 0.22", "77.1585, -15.7458, 126.186, 1.03", "76.659, -15.3317, 126.638, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "43.5074, 6.25899, 47.4206, 0.15", "42.2816, 4.62973, 47.9863, 0.15", "41.7879, 3.95811, 48.193, 0.07", "41.1961, 3.1537, 48.417, 1.03", "40.3699, 2.04183, 48.6911, 0.07", "39.545, 0.951524, 48.94, 0.07", "39.0729, 0.346767, 49.0694, 0.66", "38.115, -0.86048, 49.1732, 0.07", "37.6255, -1.48958, 49.1858, 0.07", "36.9201, -2.40807, 49.1635, 0.07", "36.7112, -2.68118, 49.1314, 0.29", "36.3184, -3.21144, 49.0258, 0.81", "35.247, -4.68717, 48.6419, 0.07", "34.5226, -5.71412, 48.3193, 0.07", "34.0288, -6.42981, 48.0543, 0.15", "33.0471, -7.8957, 47.4554, 0.07", "32.4559, -8.83002, 47.058, 0.07", "32.1269, -9.38704, 46.8169, 0.22", "31.8835, -9.82109, 46.6252, 0.22", "31.1521, -11.1012, 46.0405, 0.15", "30.7302, -11.8537, 45.7059, 0.15", "30.2503, -12.7708, 45.3275, 0.07", "29.9985, -13.2754, 45.1197, 0.15", "29.3967, -14.4773, 44.6458, 0.07", "29.0348, -15.1505, 44.3815, 0.59", "28.355, -16.2202, 43.9357, 0.07", "27.9622, -16.7276, 43.6704, 0.07", "27.6537, -17.0524, 43.4589, 0.22", "26.9826, -17.6686, 43.0086, 0.22", "26.1452, -18.3844, 42.4879, 0.07", "25.1367, -19.2162, 41.9101, 0.07", "24.6443, -19.5859, 41.659, 0.07", "24.0208, -19.9931, 41.3976, 0.07", "22.9952, -20.5639, 41.0866, 0.29", "21.4179, -21.2949, 40.8176, 0.07", "20.7072, -21.5588, 40.8109, 0.29", "20.0714, -21.7681, 40.8846, 0.29", "18.8592, -22.1585, 41.1043, 0.07", "17.6894, -22.4938, 41.3703, 0.07", "17.195, -22.6055, 41.4906, 0.22", "16.4492, -22.728, 41.658, 0.37", "15.4449, -22.9015, 41.8278, 0.29", "14.2067, -23.1504, 41.856, 0.07", "13.7664, -23.2461, 41.7963, 0.37", "13.1162, -23.3624, 41.6503, 0.59", "11.8566, -23.4848, 41.2935, 0.07", "11.221, -23.4972, 41.0811, 0.15", "9.6492, -23.4198, 40.5015, 0.07", "8.62083, -23.329, 40.095, 0.07", "7.72476, -23.281, 39.7365, 0.15", "6.53744, -23.3039, 39.2805, 0.07", "5.91957, -23.3836, 39.0681, 0.07", "5.56626, -23.4619, 38.9684, 0.29", "5.13944, -23.5977, 38.8862, 0.29", "3.95487, -24.081, 38.7021, 0.07", "2.85314, -24.5983, 38.5671, 0.07", "1.87195, -25.0883, 38.4673, 0.07", "1.50356, -25.2671, 38.4195, 0.07", "1.31278, -25.3551, 38.3846, 0.15", "1.0054, -25.4785, 38.3031, 0.15", "0.409283, -25.633, 38.0698, 0.15", "-0.398913, -25.7108, 37.6513, 0.15", "-1.2331, -25.7056, 37.1137, 0.15", "-1.72488, -25.6858, 36.7791, 0.15", "-2.25478, -25.6596, 36.4136, 0.15", "-2.78002, -25.6297, 36.0422, 0.15", "-3.17885, -25.6051, 35.75, 0.15", "-3.63898, -25.5526, 35.4198, 0.15", "-4.53114, -25.3866, 34.778, 0.07", "-5.12081, -25.2705, 34.3759, 0.07", "-5.95258, -25.1631, 33.8738, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-43.8759, 48.7742, 37.3458, 0.07", "-44.6538, 48.2394, 38.2537, 0.07", "-45.099, 47.8701, 38.8712, 0.88", "-45.6244, 47.3514, 39.7238, 0.22", "-45.9891, 46.9993, 40.3064, 0.88", "-46.4824, 46.5297, 41.077, 1.84", "-47.4115, 45.6143, 42.533, 0.22", "-47.7728, 45.169, 43.1412, 0.22", "-48.057, 44.7593, 43.6041, 0.22", "-48.5391, 44.0064, 44.3353, 0.15", "-48.8791, 43.4467, 44.8194, 0.15", "-49.1565, 42.9975, 45.1462, 0.29", "-49.756, 42.0472, 45.7052, 1.25", "-50.6858, 40.6064, 46.4602, 0.07", "-51.0003, 40.1145, 46.6986, 0.88", "-51.1653, 39.8402, 46.8284, 1.18", "-51.8231, 38.7845, 47.3308, 0.07", "-52.1566, 38.2751, 47.5884, 0.74", "-52.7573, 37.3784, 48.1402, 0.07", "-52.9966, 36.9883, 48.4396, 0.29", "-53.2785, 36.4187, 48.9666, 0.07", "-53.4457, 35.9339, 49.5188, 1.03", "-53.5089, 35.6067, 49.983, 1.47", "-53.565, 34.8901, 51.1603, 0.22", "-53.5521, 34.3905, 52.0865, 0.22", "-53.5341, 33.9304, 53.0337, 0.22", "-53.5552, 33.5979, 53.7778, 0.22", "-53.5935, 33.3999, 54.2129, 0.22", "-53.7217, 33.0889, 54.7486, 0.22", "-53.8748, 32.8216, 55.1151, 0.22", "-54.194, 32.3845, 55.6285, 0.22", "-54.6854, 31.713, 56.2696, 1.03", "-55.1419, 31.0354, 56.8304, 1.47", "-55.952, 29.695, 57.8409, 0.07", "-56.1659, 29.3389, 58.1002, 1.25", "-56.4858, 28.8268, 58.4704, 1.4", "-57.152, 27.8083, 59.1825, 0.29", "-57.6033, 27.1781, 59.6151, 0.15", "-58.0102, 26.6866, 59.9506, 0.81", "-58.9252, 25.691, 60.6171, 0.15", "-59.4781, 25.1633, 60.9472, 0.15", "-59.8957, 24.8013, 61.17, 0.37", "-60.6239, 24.2545, 61.4444, 0.15", "-61.0172, 23.9774, 61.5447, 0.88", "-61.4109, 23.708, 61.6117, 1.55", "-62.9727, 22.6737, 61.8061, 0.22", "-63.3776, 22.4181, 61.8611, 0.22", "-64.3544, 21.8491, 62.0276, 0.81", "-65.6346, 21.1632, 62.303, 0.07", "-66.1303, 20.9255, 62.4492, 0.74", "-66.8944, 20.6012, 62.7586, 0.22", "-67.7264, 20.2778, 63.2194, 0.37", "-68.2839, 20.0704, 63.5994, 0.22", "-69.1491, 19.7395, 64.3351, 1.03", "-70.0279, 19.3445, 65.246, 0.07", "-70.6595, 18.9957, 66.0272, 0.88", "-71.1691, 18.6568, 66.7295, 1.25", "-72.0809, 17.9397, 67.9774, 0.15", "-72.5204, 17.5468, 68.5501, 0.74", "-73.3616, 16.7211, 69.5368, 0.22", "-74.1755, 15.8789, 70.3443, 1.11", "-74.6868, 15.3583, 70.7634, 2.06", "-75.9933, 14.0902, 71.6533, 0.15", "-76.4938, 13.6305, 71.9446, 0.29", "-77.6202, 12.6854, 72.5248, 0.07", "-78.1743, 12.2866, 72.789, 0.22", "-79.2255, 11.6335, 73.3185, 0.07", "-79.8041, 11.3356, 73.6719, 1.4", "-81.1262, 10.7775, 74.6297, 0.07", "-81.774, 10.5355, 75.1334, 0.81", "-82.8504, 10.1989, 76.0647, 0.07", "-83.5095, 10.0258, 76.6889, 0.96", "-84.7315, 9.78222, 77.8961, 0.07", "-85.19, 9.71342, 78.3452, 0.07", "-85.7817, 9.64302, 78.9119, 1.25", "-87.134, 9.49015, 80.131, 0.22", "-88.0644, 9.37142, 80.9008, 0.88", "-88.6813, 9.3133, 81.3466, 1.18", "-90.4897, 9.1891, 82.4802, 0.15", "-91.0541, 9.15293, 82.7894, 0.81", "-91.9505, 9.0923, 83.2053, 0.15", "-92.8095, 9.02913, 83.513, 1.18", "-94.1851, 8.97416, 83.92, 0.07", "-94.7782, 8.98155, 84.072, 0.07", "-95.6075, 9.09758, 84.2108, 0.07", "-96.0388, 9.19298, 84.2608, 0.88", "-96.6776, 9.36229, 84.3199, 1.33", "-98.4182, 9.92892, 84.4312, 0.07", "-99.2294, 10.2368, 84.454, 1.33", "-101.198, 11.1206, 84.4694, 0.07", "-101.529, 11.2918, 84.4633, 0.15" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-43.8759, 48.7742, 37.3458, 0.15", "-43.492, 47.2829, 37.1993, 0.15", "-43.3241, 46.6645, 37.0936, 0.29", "-43.0576, 45.7385, 36.9151, 0.15", "-42.9456, 45.381, 36.8358, 0.52", "-42.7104, 44.6628, 36.6695, 1.33", "-42.2746, 43.2745, 36.3634, 0.07", "-42.058, 42.5292, 36.1714, 0.07", "-41.8804, 41.8904, 36.0353, 0.37", "-41.5605, 40.8118, 35.9421, 0.07", "-41.4589, 40.4838, 35.957, 0.15", "-41.0075, 38.9826, 36.2091, 0.15", "-40.8984, 38.6268, 36.3138, 0.74", "-40.6724, 37.8319, 36.6073, 1.25", "-40.1904, 35.8805, 37.4525, 0.15", "-39.9435, 34.7265, 38.0128, 0.15", "-39.8403, 34.2065, 38.2724, 0.15", "-39.7275, 33.5581, 38.5876, 0.15", "-39.612, 32.7223, 38.9453, 1.25", "-39.4989, 31.2551, 39.4477, 0.07", "-39.493, 30.6459, 39.603, 0.96", "-39.5055, 30.1064, 39.7034, 1.25", "-39.557, 28.2899, 39.9758, 0.15", "-39.5763, 27.5354, 40.0563, 0.96", "-39.5876, 26.0903, 40.1517, 0.07", "-39.5812, 25.3961, 40.1677, 0.29", "-39.5493, 23.3517, 40.1441, 0.07", "-39.5398, 22.8982, 40.1275, 0.29", "-39.4934, 21.4791, 40.0373, 0.07", "-39.4511, 20.8268, 39.9873, 1.03", "-39.3856, 20.1924, 39.9388, 1.47", "-39.0643, 17.9208, 39.7925, 0.07", "-38.9653, 17.3956, 39.7699, 0.59", "-38.8128, 16.6622, 39.7557, 0.07", "-38.6689, 15.9701, 39.7751, 0.07", "-38.4774, 15.0374, 39.8364, 0.07", "-38.3308, 14.2076, 39.9266, 1.18", "-38.0005, 12.0599, 40.2391, 0.07", "-37.9375, 11.4409, 40.3341, 0.74", "-37.8485, 9.79372, 40.5908, 0.07", "-37.8477, 9.32464, 40.6611, 0.44", "-37.9187, 7.72911, 40.9156, 0.07", "-37.9933, 6.91497, 41.0573, 1.47", "-38.2207, 5.24668, 41.3642, 0.07", "-38.3064, 4.73112, 41.4529, 0.37", "-38.5076, 3.70181, 41.608, 0.07", "-38.802, 2.33156, 41.8377, 0.07", "-39.003, 1.4488, 41.9948, 0.07", "-39.0992, 0.989084, 42.0886, 0.37", "-39.3063, -0.144921, 42.347, 0.15", "-39.4236, -0.847574, 42.5339, 0.81", "-39.6006, -2.06008, 42.8986, 0.15", "-39.7209, -3.05165, 43.2336, 1.55", "-39.8938, -4.66789, 43.851, 0.07", "-39.9382, -5.14806, 44.0663, 0.66", "-40.0027, -6.44479, 44.7442, 0.07", "-39.9852, -6.90039, 45.0029, 0.29", "-39.8986, -7.57306, 45.4094, 0.07", "-39.8353, -7.98806, 45.6841, 0.74", "-39.6453, -9.04573, 46.4319, 0.15", "-39.4274, -9.95714, 47.0819, 1.18", "-38.7952, -11.7439, 48.3523, 0.15", "-38.5494, -12.3408, 48.7719, 0.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-42.7586, 91.1325, 131.023, 0.07", "-43.8644, 89.7534, 130.833, 0.07", "-44.2355, 89.1726, 130.755, 0.07", "-44.6136, 88.5809, 130.675, 0.22", "-45.3274, 87.464, 130.525, 0.07", "-45.6177, 87.0096, 130.464, 0.52", "-46.1068, 86.2441, 130.362, 0.07", "-46.2586, 85.8387, 130.332, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-42.7586, 91.1325, 131.023, 0.29", "-43.1463, 91.2226, 133.006, 0.29", "-43.4729, 91.1592, 134.44, 0.29", "-43.9381, 91.0112, 136.024, 0.59", "-44.6352, 90.813, 138.111, 0.74", "-44.9999, 90.7448, 139.105, 1.03", "-45.4523, 90.7439, 140.267, 1.03", "-46.0665, 90.8254, 141.737, 0.15", "-46.5644, 91.029, 142.845, 0.44", "-47.2187, 91.394, 144.208, 0.81", "-47.6749, 91.7468, 145.058, 1.03", "-48.5022, 92.5654, 146.585, 0.15", "-49.211, 93.4677, 147.926, 0.74", "-49.8306, 94.5944, 149.296, 0.37" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "13.5143, -5.80402, 5.84149, 0.22", "13.6066, -7.15729, 3.559, 0.22", "13.6927, -7.79911, 2.66894, 0.37", "13.7766, -8.19872, 2.16468, 0.59", "13.9316, -8.93749, 1.23245, 0.22", "14.1006, -9.74242, 0.216736, 1.47", "14.2728, -10.563, -0.818651, 0.29", "14.5083, -11.4176, -1.58292, 0.15", "14.7701, -12.2391, -2.22583, 1.03", "15.1048, -18.3458, -10.2504, 1.03" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "13.5143, -5.80402, 5.84149, 0.22", "13.8441, -6.54285, 6.13708, 0.22", "14.1065, -7.25538, 6.36069, 1.4", "14.4104, -8.44788, 6.63313, 2.65", "14.9202, -11.4954, 7.17511, 0.22", "14.9859, -12.1096, 7.25718, 0.22", "15.0432, -13.0607, 7.35081, 0.96", "15.0077, -14.2242, 7.3977, 2.06", "14.7947, -16.0883, 7.35984, 0.22", "14.5676, -17.1321, 7.23441, 0.15", "14.334, -17.9252, 7.04309, 0.29", "14.0659, -18.7373, 6.83177, 0.15", "13.8055, -19.5933, 6.58826, 1.18", "13.671, -20.1023, 6.43257, 1.7", "13.1841, -22.3233, 5.72483, 0.22", "13.0296, -23.2251, 5.44105, 0.81", "12.9566, -23.8177, 5.2673, 1.4", "12.8046, -25.8547, 4.71961, 0.15", "12.812, -26.39, 4.5993, 0.15", "12.9361, -27.4706, 4.40199, 0.15", "13.0733, -28.1769, 4.30591, 0.37", "13.201, -28.8812, 4.22243, 1.33", "13.3097, -29.7104, 4.12941, 1.84", "13.3454, -32.3724, 3.86362, 0.22", "13.219, -33.8023, 3.71192, 0.07", "13.15, -34.4063, 3.64747, 0.96", "12.9305, -35.6907, 3.51348, 0.22", "12.6733, -36.6707, 3.40378, 1.33", "11.9581, -38.34, 3.20143, 0.22", "11.2702, -39.1636, 3.09004, 1.18" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "8.51403, 37.6115, 37.9846, 0.44", "7.33179, 37.4042, 38.8253, 0.44", "6.36946, 37.3763, 39.3753, 0.44", "5.40009, 37.4464, 39.9171, 0.44", "4.97647, 37.4955, 40.1654, 0.44", "4.2948, 37.5803, 40.5641, 0.96", "3.86402, 37.6325, 40.8093, 1.18", "2.68616, 37.7563, 41.3603, 0.15", "2.10871, 37.8505, 41.6548, 0.15", "1.5839, 37.9425, 41.9758, 0.15", "0.804106, 38.0344, 42.5031, 0.15", "0.369324, 38.0266, 42.8028, 1.33", "-0.533146, 37.9029, 43.4053, 1.92", "-2.12924, 37.5163, 44.4237, 0.22", "-3.17245, 37.1754, 45.033, 0.59", "-3.71752, 36.9303, 45.3602, 1.03", "-4.98078, 36.1875, 46.1828, 0.15", "-5.661, 35.6811, 46.674, 0.15", "-5.96867, 35.3859, 46.9134, 0.88", "-6.54562, 34.6642, 47.3732, 1.92", "-7.69176, 32.967, 48.339, 0.22", "-7.98282, 32.5098, 48.6134, 0.22", "-8.31917, 31.9053, 48.9392, 0.22", "-8.51306, 31.5613, 49.1188, 0.22", "-9.0293, 30.748, 49.5395, 0.22", "-9.47362, 30.1476, 49.8496, 1.11", "-10.2411, 29.2962, 50.2744, 2.58", "-11.6981, 27.8636, 51.0089, 0.52", "-12.8326, 26.7829, 51.6015, 0.15", "-13.3057, 26.3357, 51.8728, 0.15", "-13.9643, 25.7357, 52.2912, 0.29", "-14.583, 25.1969, 52.7086, 0.96", "-15.5665, 24.3398, 53.3986, 0.22", "-16.2175, 23.8168, 53.8888, 0.22", "-16.8035, 23.2985, 54.3265, 0.44", "-17.4069, 22.6978, 54.8202, 1.62", "-17.9601, 22.1072, 55.3228, 1.99" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "8.51403, 37.6115, 37.9846, 1.47", "9.66403, 38.0421, 38.4846, 1.47" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-16.5771, -166.993, 43.7865, 0.22", "-16.4818, -166.172, 44.2875, 0.22", "-16.3702, -165.235, 44.8213, 0.22", "-16.2594, -164.49, 45.2076, 0.22", "-16.1132, -163.65, 45.6025, 0.66", "-15.9872, -163.019, 45.8962, 0.81", "-15.6972, -161.831, 46.4212, 0.15", "-15.4832, -161.118, 46.6858, 1.18", "-15.2492, -160.416, 46.9138, 1.4", "-14.6812, -158.886, 47.3658, 0.15", "-14.4545, -158.359, 47.5084, 0.15", "-13.9276, -157.327, 47.7811, 1.7", "-13.367, -156.408, 47.9927, 0.22", "-12.8957, -155.707, 48.1334, 0.88", "-12.5021, -155.154, 48.2331, 0.22", "-12.0754, -154.576, 48.3155, 0.07", "-11.5858, -153.86, 48.4054, 0.07", "-10.9524, -152.861, 48.5376, 0.66", "-10.3453, -151.809, 48.6797, 0.07", "-10.1345, -151.401, 48.7403, 0.37", "-9.88703, -150.858, 48.8236, 0.66", "-9.20853, -149.135, 49.118, 0.07", "-8.94542, -148.384, 49.2624, 1.03", "-8.52818, -146.984, 49.5676, 0.15", "-8.37251, -146.363, 49.7204, 0.88", "-8.25947, -145.829, 49.8603, 1.18", "-7.99214, -144.104, 50.3527, 0.15", "-7.9621, -143.535, 50.5267, 0.15", "-8.00273, -142.907, 50.7213, 0.22", "-8.11355, -142.441, 50.8632, 0.07", "-8.32114, -141.888, 51.0082, 0.29", "-8.572, -141.376, 51.1224, 0.07", "-8.81577, -140.959, 51.1881, 0.59", "-9.24117, -140.284, 51.2711, 0.15", "-9.81033, -139.415, 51.3589, 1.62", "-10.3875, -138.535, 51.4392, 0.15", "-10.7954, -137.916, 51.5029, 0.29", "-11.4498, -136.909, 51.6118, 0.07", "-11.9251, -136.091, 51.7291, 0.07", "-12.1665, -135.622, 51.8111, 0.66", "-12.5737, -134.783, 51.9743, 0.15", "-12.8754, -134.147, 52.1126, 1.03", "-13.2315, -133.409, 52.3032, 1.62", "-14.2161, -131.366, 52.9695, 0.07", "-14.6419, -130.456, 53.3022, 0.59", "-14.9458, -129.807, 53.5581, 0.15", "-15.3293, -128.974, 53.9002, 0.88", "-15.8426, -127.751, 54.4158, 0.15", "-16.312, -126.641, 54.9176, 0.15", "-16.6878, -125.768, 55.345, 1.33", "-17.1407, -124.66, 55.9089, 0.15", "-17.4638, -123.739, 56.383, 0.15", "-17.6735, -122.937, 56.7716, 1.33" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-16.5771, -166.993, 43.7865, 0.15", "-17.0443, -168.269, 44.0045, 0.15", "-17.4485, -169.004, 44.2553, 0.15", "-17.8108, -169.503, 44.5164, 0.15", "-18.1508, -169.895, 44.7526, 0.74", "-18.7174, -170.51, 45.1347, 0.15", "-19.1473, -170.995, 45.4308, 1.4", "-19.8776, -171.761, 46.0179, 0.15", "-20.5757, -172.485, 46.6115, 0.66", "-21.0895, -173.108, 47.1845, 0.07", "-21.2928, -173.41, 47.5227, 0.07", "-21.5177, -173.797, 47.966, 0.29", "-21.834, -174.462, 48.7601, 0.07", "-22.0049, -175.005, 49.43, 1.25", "-22.1937, -176.039, 50.795, 0.29", "-22.2999, -177.127, 52.4157, 1.62" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-67.9292, -129.274, 7.36402, 0.59", "-69.6665, -128.867, 6.814, 0.59", "-70.2014, -128.716, 6.60632, 0.07", "-70.9345, -128.493, 6.24388, 0.07", "-71.4401, -128.331, 5.95889, 0.37", "-72.2864, -128.034, 5.42733, 0.07", "-72.9325, -127.779, 4.96026, 0.15", "-73.8076, -127.423, 4.17158, 1.62", "-74.7695, -126.884, 2.93458, 0.22", "-75.0925, -126.632, 2.30202, 0.22", "-75.3223, -126.414, 1.722, 0.59", "-75.5467, -126.097, 0.836574, 0.59", "-75.655, -125.788, -0.133754, 0.59", "-75.5315, -125.464, -1.42779, 1.18", "-75.3133, -125.324, -2.10822, 1.18", "-80.715, -122.041, -9.89072, 1.18" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-67.9292, -129.274, 7.36402, 0.22", "-68.9451, -129.906, 7.01116, 0.22", "-69.5078, -130.244, 6.80508, 0.15", "-70.3331, -130.677, 6.44539, 0.15", "-71.0551, -131.028, 6.08935, 1.25", "-71.8851, -131.396, 5.6775, 0.15", "-72.5976, -131.687, 5.33885, 0.15", "-73.5868, -132.036, 4.8728, 1.62", "-74.6885, -132.399, 4.39646, 0.22", "-75.3649, -132.637, 4.11304, 0.22", "-76.1602, -132.927, 3.7783, 1.33", "-76.9444, -133.206, 3.46253, 1.11", "-78.2714, -133.657, 2.97064, 0.15", "-78.7405, -133.822, 2.82256, 0.15", "-79.8007, -134.236, 2.57791, 0.15", "-80.4117, -134.486, 2.49259, 0.15", "-81.0366, -134.752, 2.49204, 0.66", "-81.9265, -135.072, 2.71092, 0.07", "-82.469, -135.198, 3.01244, 0.88", "-83.2017, -135.246, 3.57242, 0.15", "-83.943, -135.177, 4.22822, 0.59", "-84.85, -134.948, 5.13656, 1.4", "-86.0317, -134.442, 6.36072, 0.22", "-86.8587, -133.932, 7.24868, 1.25", "-87.836, -133.16, 8.33223, 0.44", "-88.3492, -132.658, 8.89793, 0.52", "-88.9219, -131.973, 9.5543, 1.11", "-89.532, -131.095, 10.3215, 0.37", "-90.1863, -130.03, 11.2593, 0.07", "-90.5407, -129.445, 11.8161, 0.07", "-90.7749, -129.034, 12.2527, 0.22", "-91.0689, -128.48, 12.9225, 0.96", "-91.3134, -127.971, 13.5986, 2.06", "-91.7185, -126.884, 15.2165, 0.22", "-91.9227, -126.181, 16.4169, 0.74", "-92.0328, -125.778, 17.2767, 0.74", "-92.1149, -125.449, 18.229, 0.74", "-92.1274, -125.357, 18.6533, 0.74", "-92.0828, -125.245, 19.6762, 0.74", "-91.9085, -125.205, 20.7442, 0.74", "-91.7824, -125.182, 21.3746, 0.74", "-91.7108, -125.125, 21.7327, 0.74", "-91.5266, -124.812, 22.5444, 0.74", "-91.2995, -124.377, 23.1874, 0.74", "-90.8521, -123.504, 24.1559, 0.29", "-90.5977, -122.992, 24.6327, 0.29", "-90.2213, -122.263, 25.2421, 0.07", "-89.9707, -121.815, 25.5942, 0.44", "-89.3067, -120.699, 26.4092, 0.07", "-88.91, -120.098, 26.8436, 0.07", "-88.5078, -119.524, 27.2655, 0.07", "-88.2637, -119.2, 27.5162, 0.29", "-87.8055, -118.609, 27.9635, 0.07", "-87.4315, -118.12, 28.3665, 0.37", "-87.0041, -117.6, 28.8436, 0.22", "-86.8277, -117.414, 29.0614, 0.81", "-86.511, -117.118, 29.5534, 0.37", "-86.0969, -116.765, 30.4499, 0.88", "-85.6634, -116.408, 31.5687, 0.88", "-85.5129, -116.289, 32.0435, 0.88", "-85.2737, -116.102, 32.9965, 0.88", "-85.0832, -115.988, 33.8501, 0.88", "-84.829, -115.941, 35.1344, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "11.2702, -39.1636, 3.09004, 0.29", "11.1801, -40.7512, 3.34251, 0.29", "11.1552, -41.5484, 3.47108, 0.15", "11.1506, -42.3183, 3.59238, 1.03", "11.1588, -43.7618, 3.80816, 0.15", "11.1644, -44.7353, 3.9537, 1.4", "11.1771, -46.9523, 4.28511, 0.07", "11.176, -47.2878, 4.3356, 0.81", "11.2012, -48.4342, 4.48749, 0.07", "11.252, -49.2557, 4.5975, 1.62" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "11.2702, -39.1636, 3.09004, 1.92", "10.8082, -39.8714, 3.48103, 1.92", "10.3217, -40.5797, 3.87633, 2.06", "9.15266, -42.1046, 4.75681, 0.22", "8.76065, -42.5889, 5.05257, 0.66", "8.17266, -43.202, 5.44115, 0.22", "7.72394, -43.6043, 5.69317, 0.96", "7.44585, -43.8336, 5.84302, 1.47", "6.2735, -44.6772, 6.41528, 0.52", "5.56216, -45.0672, 6.70915, 0.66", "4.08763, -45.8215, 7.24467, 0.15", "3.26432, -46.2505, 7.52005, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-17.9601, 22.1072, 55.3228, 0.07", "-19.4997, 22.3457, 55.6643, 0.07", "-20.2145, 22.4565, 55.8229, 0.96", "-21.1734, 22.6051, 56.0356, 0.07", "-21.6798, 22.6835, 56.1479, 0.29", "-22.5211, 22.8139, 56.3346, 0.07", "-23.434, 22.9553, 56.537, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-17.9601, 22.1072, 55.3228, 0.44", "-18.148, 20.8415, 56.3432, 0.44", "-18.1931, 19.804, 57.2879, 0.96", "-18.1774, 19.0753, 58.0181, 0.66", "-18.1545, 18.316, 58.7909, 0.15", "-18.1902, 17.8914, 59.1809, 0.15", "-18.2725, 17.2473, 59.7327, 0.29", "-18.401, 16.3184, 60.4786, 0.29", "-18.5111, 15.7225, 60.8926, 0.74", "-18.6381, 14.9148, 61.3848, 1.62", "-18.8725, 12.8705, 62.4917, 0.22", "-18.9669, 12.0639, 62.8852, 1.18", "-19.0343, 11.6162, 63.0819, 1.55", "-19.2204, 10.4092, 63.5633, 0.29", "-19.3558, 9.32938, 63.996, 0.22", "-19.4224, 8.13256, 64.524, 0.22", "-19.3742, 7.31182, 64.95, 0.22", "-19.3374, 6.57312, 65.3878, 0.52", "-19.3108, 6.29048, 65.5923, 0.52", "-19.2321, 5.74729, 66.0805, 0.52", "-19.1752, 5.36596, 66.4323, 0.52", "-19.0905, 4.89775, 66.813, 0.52", "-18.9277, 4.10494, 67.4081, 0.15", "-18.8089, 3.59169, 67.7683, 0.15", "-18.7162, 3.19633, 68.027, 0.44", "-18.5567, 2.53654, 68.4375, 1.11", "-18.2401, 1.29745, 69.1105, 0.15", "-18.1163, 0.801664, 69.3468, 0.15", "-17.8669, -0.255942, 69.8234, 0.22", "-17.6604, -1.09675, 70.1847, 1.25", "-17.424, -1.88348, 70.5378, 1.99", "-16.7622, -3.60013, 71.3556, 0.15", "-16.4298, -4.28445, 71.6676, 1.03", "-16.0351, -4.95096, 71.9735, 1.03", "-15.1061, -6.05374, 72.4995, 0.15", "-14.3436, -6.7143, 72.8321, 0.15", "-13.6075, -7.19191, 73.0757, 0.15", "-12.7066, -7.61887, 73.2957, 0.81", "-11.7807, -8.03957, 73.4643, 1.33", "-9.97, -8.94031, 73.681, 0.15", "-9.4126, -9.31325, 73.7237, 1.25", "-8.48087, -10.1712, 73.7666, 0.29", "-7.63388, -11.2452, 73.7766, 0.22", "-7.11707, -12.1311, 73.7536, 0.15", "-6.66968, -13.2185, 73.6587, 1.77", "-6.03052, -15.4794, 73.3262, 0.07", "-5.8783, -16.1642, 73.2018, 0.81", "-5.67962, -17.3971, 72.9549, 0.07", "-5.55825, -18.4425, 72.7363, 0.96", "-5.45497, -19.4164, 72.5095, 2.06", "-5.17686, -21.6804, 71.9526, 0.07", "-5.01078, -22.7608, 71.6838, 0.22", "-4.82162, -24.0162, 71.4258, 0.15", "-4.67351, -25.0534, 71.2626, 1.47", "-4.54354, -26.202, 71.1142, 0.66", "-4.46355, -27.3659, 70.9795, 0.66", "-4.44384, -28.1068, 70.9126, 1.77", "-4.4263, -29.6898, 70.7786, 0.07", "-4.43903, -30.1359, 70.7469, 0.22", "-4.51039, -31.117, 70.6923, 0.22", "-4.61732, -31.9486, 70.6622, 1.55", "-4.92959, -33.6103, 70.5936, 0.15", "-5.09885, -34.3469, 70.5392, 0.59", "-5.3157, -35.2557, 70.4302, 0.15", "-5.49045, -36.0075, 70.3224, 0.15", "-5.6449, -36.6908, 70.2135, 0.74", "-5.8337, -37.5217, 70.0529, 1.25", "-6.24271, -39.0295, 69.746, 0.07", "-6.47789, -39.8567, 69.5801, 0.15", "-6.68488, -40.5738, 69.468, 0.74", "-6.88558, -41.2158, 69.4063, 1.4", "-7.24521, -42.2963, 69.3723, 0.15", "-7.6234, -43.3045, 69.4531, 0.07", "-7.83752, -43.7752, 69.5544, 0.29", "-8.50445, -44.9423, 69.9017, 0.07", "-8.86521, -45.5179, 70.1034, 0.88", "-9.11739, -45.8832, 70.2476, 1.33", "-9.91931, -46.9332, 70.7193, 0.22", "-10.4512, -47.6187, 71.0353, 0.22", "-10.9672, -48.2437, 71.3395, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "9.66403, 38.0421, 38.4846, 0.15", "10.3391, 39.6343, 39.2275, 0.15", "10.5551, 40.2015, 39.5427, 0.22", "10.8633, 41.1265, 40.1443, 0.15", "11.0251, 41.6899, 40.5293, 0.96", "11.2215, 42.4658, 41.0637, 0.29", "11.3782, 43.0638, 41.4737, 0.29", "11.5297, 43.7477, 41.9941, 0.29", "11.7021, 44.4114, 42.4676, 0.29", "11.8947, 45.0411, 42.8848, 1.25", "11.9832, 45.2839, 43.0393, 1.25", "12.5618, 46.6325, 43.8893, 0.15", "13.0802, 47.611, 44.478, 1.33", "13.9048, 48.9308, 45.2424, 0.07", "14.4096, 49.6044, 45.6373, 0.59", "15.1501, 50.4752, 46.1675, 0.15", "15.8269, 51.231, 46.6345, 1.11", "16.3856, 51.9207, 47.0295, 2.14", "16.6645, 52.322, 47.2367, 1.84", "17.3627, 53.843, 47.93, 0.15", "17.5794, 54.7832, 48.2831, 1.4", "17.6202, 55.5829, 48.5464, 0.96", "17.5007, 57.6896, 49.2571, 0.15", "17.3824, 58.5522, 49.5715, 0.96", "17.0236, 60.2902, 50.3113, 0.15", "16.8642, 60.8629, 50.5976, 1.18", "16.5684, 61.9307, 51.2465, 0.15", "16.3462, 62.9473, 52.0257, 0.59", "16.3052, 63.2732, 52.342, 0.88", "16.2658, 64.3563, 53.5336, 0.22", "16.3161, 65.0596, 54.3784, 0.88", "16.3832, 65.6571, 55.1168, 1.77", "16.5657, 66.7887, 56.4751, 0.29", "16.7042, 67.3445, 57.1081, 0.81", "17.0285, 68.3524, 58.2094, 0.22", "17.3153, 69.0829, 58.9676, 0.37", "17.4882, 69.47, 59.3528, 0.37", "17.9524, 70.4073, 60.2488, 1.55", "18.6302, 71.637, 61.3463, 0.07", "19.1889, 72.6066, 62.1449, 0.22", "19.5766, 73.2617, 62.6445, 0.22", "19.9212, 73.8479, 63.0716, 0.22", "20.32, 74.5581, 63.56, 0.07", "20.6532, 75.2079, 63.9729, 1.11", "20.8358, 75.5857, 64.184, 1.4", "21.4904, 76.8777, 64.8338, 0.07", "21.8995, 77.6769, 65.2218, 0.74", "22.1383, 78.1862, 65.4661, 0.74", "22.5124, 79.0463, 65.8786, 0.22", "22.9429, 80.0682, 66.363, 0.22", "23.2285, 80.7463, 66.6761, 0.96", "23.4191, 81.2094, 66.8831, 0.96", "24.0976, 82.9814, 67.6507, 0.15", "24.4517, 83.9678, 68.0778, 0.15", "24.5923, 84.4124, 68.2636, 0.22", "24.9017, 85.6643, 68.7418, 0.07", "25.0349, 86.3164, 68.9867, 0.07", "25.2058, 87.3833, 69.3691, 0.96", "25.3131, 88.261, 69.6669, 0.22", "25.3941, 89.2465, 69.9825, 1.25", "25.5175, 91.4084, 70.6644, 0.15", "25.5589, 92.4717, 70.9893, 1.33", "25.614, 94.1766, 71.5031, 0.15", "25.6248, 94.7094, 71.6692, 0.22", "25.6286, 95.8809, 72.037, 0.15", "25.6157, 96.6829, 72.2865, 0.81", "25.6105, 96.83, 72.3297, 0.81" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "9.66403, 38.0421, 38.4846, 0.29", "10.554, 38.8018, 39.6053, 0.29", "11.3591, 39.6157, 40.6942, 0.52", "11.7888, 40.114, 41.3066, 1.25", "12.5518, 41.0712, 42.4112, 0.15", "12.9005, 41.5181, 42.9117, 0.15", "13.1596, 41.8626, 43.2948, 0.15", "13.5399, 42.4817, 43.8958, 0.15", "13.8231, 42.9471, 44.306, 0.81", "14.2198, 43.5489, 44.8435, 1.33", "14.9021, 44.5198, 45.742, 0.22", "15.2929, 44.9873, 46.2189, 0.22", "15.7644, 45.4397, 46.7154, 1.11", "16.1693, 45.7668, 47.1016, 1.7", "16.9278, 46.3595, 47.8091, 0.22", "17.3216, 46.6535, 48.1718, 0.88", "18.0904, 47.1654, 48.8266, 0.15", "18.5348, 47.4118, 49.1657, 0.29", "18.938, 47.592, 49.4579, 0.29", "19.4631, 47.8148, 49.8506, 0.15", "20.0509, 48.0849, 50.3327, 0.15", "20.5104, 48.3283, 50.7436, 0.96", "21.0634, 48.6387, 51.2669, 0.66", "21.8438, 48.9342, 51.982, 0.15", "22.3781, 49.1017, 52.4726, 0.15", "23.0993, 49.3123, 53.1674, 0.81", "24.1578, 49.6473, 54.2531, 2.14", "24.6872, 49.8327, 54.83, 2.14", "26.2169, 50.4728, 56.5433, 0.15", "26.7634, 50.7139, 57.1401, 0.15", "27.581, 51.0471, 57.9902, 0.29", "28.1625, 51.262, 58.5702, 1.33", "28.6589, 51.4517, 59.0656, 1.62", "29.6133, 51.8896, 60.0337, 0.15", "29.915, 52.0881, 60.3806, 0.15", "30.3813, 52.3941, 60.9382, 0.15", "30.646, 52.569, 61.2742, 0.15", "30.9861, 52.7662, 61.7283, 0.29", "31.4863, 53.0116, 62.4708, 0.66", "32.1362, 53.323, 63.5967, 0.15", "32.4629, 53.5275, 64.2529, 0.15", "32.6928, 53.7252, 64.7814, 0.15", "32.9328, 54.0317, 65.4325, 0.66", "33.3193, 54.7366, 66.7232, 0.22", "33.5378, 55.2501, 67.5415, 0.22", "33.7291, 55.7317, 68.251, 1.33", "33.9614, 56.3377, 69.0946, 1.92", "34.4583, 57.6448, 70.8556, 0.37", "34.7247, 58.379, 71.8225, 0.22", "35.0097, 59.1884, 72.8693, 0.22", "35.1461, 59.5766, 73.4192, 0.22", "35.2278, 59.883, 73.9428, 0.22", "35.2572, 60.1109, 74.4893, 0.22", "35.2735, 60.2602, 75.0154, 0.22", "35.2916, 60.4417, 75.6467, 0.52", "35.3198, 60.9514, 77.1188, 1.18", "35.3723, 61.5069, 78.5345, 1.4", "35.5199, 62.4771, 80.8, 0.81", "35.6923, 63.0694, 82.1382, 0.81", "35.9995, 63.7096, 83.6134, 1.7", "36.784, 64.8171, 86.2359, 0.29", "37.2771, 65.3587, 87.5097, 0.29", "37.588, 65.6584, 88.1844, 1.03", "38.2865, 66.3172, 89.5939, 0.22", "38.8566, 66.8481, 90.7259, 1.11", "39.5817, 67.4105, 92.0879, 0.29", "40.0772, 67.7099, 93.0007, 0.29", "40.3299, 67.8504, 93.5188, 0.52", "40.7044, 68.0035, 94.4208, 0.52", "40.8249, 68.0502, 94.7693, 0.52", "41.015, 68.0856, 95.308, 0.52", "41.4388, 68.0381, 96.1671, 0.52", "41.8795, 67.9953, 96.7029, 0.52", "42.7901, 67.9917, 97.5746, 0.22", "43.635, 68.0882, 98.2762, 0.15", "43.957, 68.197, 98.5681, 0.15", "44.5045, 68.5066, 99.0924, 0.81", "45.4216, 69.2085, 100.02, 0.29", "46.0762, 69.832, 100.732, 0.81", "46.5773, 70.4423, 101.32, 1.7", "47.7073, 72.082, 102.771, 0.22", "48.2416, 73.0215, 103.506, 0.44", "48.4437, 73.5564, 103.84, 0.15", "48.6333, 74.3068, 104.206, 0.88", "48.8996, 75.8564, 104.786, 0.22", "49.0119, 76.6085, 105.015, 0.88", "49.1027, 77.218, 105.164, 1.47", "49.4692, 79.5809, 105.75, 0.22", "49.5676, 80.1041, 105.88, 0.22", "49.7644, 80.8091, 106.076, 0.37", "50.3698, 82.2995, 106.595, 0.22", "50.6731, 82.9022, 106.856, 0.22", "51.0072, 83.4632, 107.175, 0.96", "51.3417, 83.9011, 107.489, 1.55", "52.441, 85.1698, 108.513, 0.15", "53.2521, 85.9791, 109.232, 1.25", "53.9995, 86.6873, 109.899, 1.25", "54.8779, 87.4532, 110.662, 0.74", "55.9234, 88.2513, 111.55, 0.15", "56.6284, 88.7303, 112.139, 0.29", "57.1124, 89.0066, 112.512, 0.29", "57.9587, 89.4121, 113.018, 0.29", "58.8225, 89.7959, 113.429, 0.81", "60.0592, 90.4013, 113.943, 0.15", "60.736, 90.791, 114.23, 1.11", "61.0796, 91.0168, 114.378, 1.77", "62.8901, 92.2583, 115.137, 0.22", "63.5398, 92.6868, 115.373, 0.22", "64.3488, 93.2532, 115.633, 0.22", "65.0696, 93.7618, 115.811, 0.22", "65.4504, 94.0466, 115.898, 0.44", "66.1998, 94.6457, 116.063, 0.44", "67.163, 95.4439, 116.274, 1.55", "68.2077, 96.2298, 116.482, 0.66", "69.5919, 97.0844, 116.738, 0.15", "70.1477, 97.3786, 116.851, 0.15", "70.8431, 97.7078, 117.023, 0.37", "71.9349, 98.1785, 117.335, 0.15", "72.6628, 98.4726, 117.581, 0.81", "74.0187, 98.9681, 118.091, 0.22", "74.7194, 99.2122, 118.356, 0.22", "75.4621, 99.4594, 118.618, 1.25", "75.8184, 99.5869, 118.736, 1.25", "77.1157, 100.089, 119.104, 0.07", "77.9588, 100.446, 119.302, 0.96", "79.6306, 101.197, 119.613, 0.22", "80.4565, 101.551, 119.738, 1.03", "81.2886, 101.891, 119.841, 1.77", "82.963, 102.601, 120.025, 0.15", "83.8886, 102.998, 120.107, 0.22", "84.9818, 103.482, 120.202, 0.15", "85.7799, 103.86, 120.284, 1.03", "86.7891, 104.352, 120.402, 0.22", "87.9521, 104.932, 120.56, 0.22", "89.1639, 105.593, 120.751, 0.15", "89.988, 106.061, 120.883, 0.15", "90.8547, 106.563, 121.031, 0.81", "91.1451, 106.728, 121.082, 1.77", "92.3679, 107.383, 121.238, 0.07", "93.2999, 107.858, 121.295, 0.59", "95.2781, 108.888, 121.265, 0.22", "95.7033, 109.108, 121.239, 0.59", "96.516, 109.507, 121.161, 0.66", "98.1456, 110.297, 120.961, 0.07", "98.8011, 110.602, 120.843, 0.07", "99.2039, 110.768, 120.739, 0.52" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-23.434, 22.9553, 56.537, 0.15", "-24.7689, 23.6031, 57.1036, 0.15", "-25.7534, 24.1798, 57.2712, 0.15", "-26.8334, 24.9037, 57.2336, 0.07", "-27.348, 25.2776, 57.1059, 0.07", "-28.4857, 26.1169, 56.6357, 0.07", "-29.3516, 26.7472, 56.1626, 0.07", "-29.7182, 27.041, 55.8077, 0.07", "-30.0208, 27.3262, 55.3641, 0.29", "-30.3857, 27.7306, 54.6117, 0.29", "-30.5791, 27.959, 54.1336, 0.29", "-30.7495, 28.1649, 53.6771, 0.29", "-30.9565, 28.4156, 53.0789, 0.29", "-31.3676, 28.8348, 51.9658, 0.22", "-31.6829, 29.0806, 51.1942, 0.22", "-32.2454, 29.439, 49.9491, 0.88", "-32.7496, 29.7143, 48.8852, 0.22", "-32.9916, 29.8246, 48.4111, 0.22", "-33.399, 29.9786, 47.6649, 0.15", "-33.898, 30.1471, 46.8455, 0.15", "-34.4028, 30.3161, 46.0148, 0.15", "-34.8377, 30.4767, 45.2688, 0.15", "-35.1914, 30.6387, 44.6269, 0.74", "-35.4947, 30.8, 44.0738, 0.74", "-35.9309, 31.0632, 43.2118, 0.15", "-36.4286, 31.3701, 42.1231, 0.22", "-36.632, 31.485, 41.6276, 0.22", "-36.9217, 31.6449, 40.7669, 0.22", "-37.0257, 31.7008, 40.3793, 0.22", "-37.1928, 31.7736, 39.6527, 0.22", "-37.3139, 31.778, 38.8985, 0.22", "-37.3594, 31.7286, 38.3573, 0.22", "-37.3837, 31.6249, 37.6748, 0.22", "-37.3819, 31.5261, 37.0658, 0.22", "-37.4162, 31.3812, 36.1447, 0.22", "-37.5185, 31.1503, 34.8893, 0.44", "-37.6132, 30.9726, 34.1226, 0.44", "-37.6527, 30.8949, 33.8484, 0.44", "-37.7511, 30.6155, 33.0322, 0.44", "-37.7783, 30.2848, 32.1546, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-23.434, 22.9553, 56.537, 1.03", "-23.888, 23.331, 56.9592, 1.03", "-24.9447, 24.3822, 58.1664, 0.07", "-25.2957, 24.7789, 58.6282, 0.07", "-25.5446, 25.1513, 59.0097, 0.22", "-25.9162, 25.8288, 59.654, 0.07", "-26.1813, 26.3582, 60.1348, 0.37", "-26.581, 27.3003, 60.9687, 0.15", "-26.8727, 28.1468, 61.6972, 1.33", "-27.5203, 30.1173, 63.3884, 0.07", "-27.8973, 31.3039, 64.4114, 0.07", "-28.0952, 31.9417, 64.9565, 0.66", "-28.3033, 32.6437, 65.5294, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-10.9672, -48.2437, 71.3395, 0.07", "-11.717, -49.1574, 71.5055, 0.07", "-12.1887, -49.7322, 71.6099, 0.37", "-12.7206, -50.3804, 71.7276, 0.22", "-13.2704, -51.0505, 71.8493, 0.88", "-13.6357, -51.4955, 71.9302, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-10.9672, -48.2437, 71.3395, 0.07", "-11.4559, -46.5921, 71.1568, 0.07", "-11.6528, -45.9266, 71.0832, 0.44", "-11.8834, -45.1472, 70.997, 0.15", "-12.1375, -44.2883, 70.9019, 0.74", "-12.4766, -43.1424, 70.7752, 0.07" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_DBC_efeb05a196_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_38
create dend_56
public dend_56
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.49999950122992937)
    connect dend_25(0), soma_0(0.49999950122992937)
    connect dend_10(0), soma_0(0.49999950122992937)
    connect dend_1(0), soma_0(0.49999950122992937)
    connect dend_0(0), soma_0(0.49999950122992937)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.29752, -10.9202, 0.0, 2.7473 ) }
    soma_0 { pt3dadd( -3.02947, -9.86122, 0.0, 4.90547 ) }
    soma_0 { pt3dadd( -2.76143, -8.80223, 0.0, 7.1195 ) }
    soma_0 { pt3dadd( -2.49339, -7.74324, 0.0, 9.06693 ) }
    soma_0 { pt3dadd( -2.22534, -6.68425, 0.0, 10.5477 ) }
    soma_0 { pt3dadd( -1.9573, -5.62526, 0.0, 11.7638 ) }
    soma_0 { pt3dadd( -1.68926, -4.56627, 0.0, 12.6703 ) }
    soma_0 { pt3dadd( -1.42121, -3.50728, 0.0, 13.5724 ) }
    soma_0 { pt3dadd( -1.15317, -2.44829, 0.0, 13.9606 ) }
    soma_0 { pt3dadd( -0.885125, -1.3893, 0.0, 14.249 ) }
    soma_0 { pt3dadd( -0.617082, -0.330312, 0.0, 14.4914 ) }
    soma_0 { pt3dadd( -0.349039, 0.728678, 0.0, 14.572 ) }
    soma_0 { pt3dadd( -0.0809953, 1.78767, 0.0, 14.5168 ) }
    soma_0 { pt3dadd( 0.187048, 2.84666, 0.0, 14.1167 ) }
    soma_0 { pt3dadd( 0.455092, 3.90565, 0.0, 13.6161 ) }
    soma_0 { pt3dadd( 0.723135, 4.96464, 0.0, 12.8986 ) }
    soma_0 { pt3dadd( 0.991178, 6.02363, 0.0, 12.0703 ) }
    soma_0 { pt3dadd( 1.25922, 7.08262, 0.0, 10.8368 ) }
    soma_0 { pt3dadd( 1.52727, 8.14161, 0.0, 9.27498 ) }
    soma_0 { pt3dadd( 1.79531, 9.2006, 0.0, 7.02436 ) }
    soma_0 { pt3dadd( 2.06335, 10.2596, 0.0, 4.05122 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.851454, 10.3756, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.851454, 10.3756, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.777731, 11.9648, 1.65217, 0.96 ) }
    dend_32 { pt3dadd( 0.714546, 13.3268, 1.61117, 1.25 ) }
    dend_32 { pt3dadd( 0.626392, 15.2271, 1.55398, 1.55 ) }
    dend_32 { pt3dadd( 0.543889, 17.0056, 1.50045, 1.84 ) }
    dend_32 { pt3dadd( 0.46074, 18.798, 1.44651, 2.14 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 28/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.23855, -9.6529, -9.03, 1.18 ) }
    dend_25 { pt3dadd( -1.82488, -9.7594, -9.10269, 1.18 ) }
    dend_25 { pt3dadd( -0.803491, -10.1371, -9.29841, 1.18 ) }
    dend_25 { pt3dadd( 0.91336, -10.9781, -9.67716, 1.03 ) }
    dend_25 { pt3dadd( 1.79356, -11.4826, -9.89052, 0.96 ) }
    dend_25 { pt3dadd( 2.55416, -11.8264, -10.0453, 0.81 ) }
    dend_25 { pt3dadd( 1.69464, -12.0486, -10.0603, 0.74 ) }
    dend_25 { pt3dadd( 1.0658, -12.4815, -10.1882, 0.74 ) }
    dend_25 { pt3dadd( 0.23253, -13.05, -10.4094, 0.96 ) }
    dend_25 { pt3dadd( -0.785791, -13.6896, -10.7146, 1.18 ) }
    dend_25 { pt3dadd( -2.25716, -14.5206, -11.2012, 0.88 ) }
    dend_25 { pt3dadd( -3.49325, -15.153, -11.6664, 0.96 ) }
    dend_25 { pt3dadd( -4.78342, -15.7577, -12.1695, 1.25 ) }
    dend_25 { pt3dadd( -5.6819, -16.1615, -12.5473, 1.99 ) }
    dend_25 { pt3dadd( -6.56272, -16.5603, -12.9629, 2.95 ) }
    dend_25 { pt3dadd( -7.41828, -16.9865, -13.4531, 3.54 ) }
    dend_25 { pt3dadd( -8.14047, -17.4017, -13.9823, 3.54 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.90855, -11.9489, 1.23, 0.81 ) }
    dend_10 { pt3dadd( -1.75045, -12.8469, 1.1946, 0.81 ) }
    dend_10 { pt3dadd( -1.49078, -13.9464, 1.15141, 0.96 ) }
    dend_10 { pt3dadd( -1.18602, -15.0444, 1.11029, 1.18 ) }
    dend_10 { pt3dadd( -0.857404, -16.1076, 1.07285, 1.18 ) }
    dend_10 { pt3dadd( -0.465586, -17.286, 1.06872, 0.81 ) }
    dend_10 { pt3dadd( -0.21451, -18.006, 1.0917, 1.03 ) }
    dend_10 { pt3dadd( 0.167844, -19.0149, 1.19262, 1.47 ) }
    dend_10 { pt3dadd( 0.434378, -19.7375, 1.32272, 2.06 ) }
    dend_10 { pt3dadd( 0.642987, -20.3891, 1.48998, 2.14 ) }
    dend_10 { pt3dadd( 0.92182, -21.6005, 1.88479, 1.33 ) }
    dend_10 { pt3dadd( 1.08528, -23.1519, 2.4676, 0.96 ) }
    dend_10 { pt3dadd( 1.02995, -24.5333, 3.02038, 0.96 ) }
    dend_10 { pt3dadd( 0.818669, -25.5203, 3.42575, 1.18 ) }
    dend_10 { pt3dadd( 0.562699, -26.2498, 3.72995, 1.99 ) }
    dend_10 { pt3dadd( 0.153434, -27.1504, 4.09958, 2.88 ) }
    dend_10 { pt3dadd( -0.387892, -28.1731, 4.49353, 3.02 ) }
    dend_10 { pt3dadd( -1.14653, -29.5476, 4.9795, 1.77 ) }
    dend_10 { pt3dadd( -2.18312, -31.5733, 5.60124, 0.81 ) }
    dend_10 { pt3dadd( -2.6948, -32.754, 5.92165, 0.81 ) }
    dend_10 { pt3dadd( -2.97151, -33.5937, 6.11873, 0.81 ) }
    dend_10 { pt3dadd( -3.19142, -34.6139, 6.33385, 0.81 ) }
    dend_10 { pt3dadd( -3.32167, -35.726, 6.56412, 0.81 ) }
    dend_10 { pt3dadd( -3.35077, -36.66, 6.75132, 1.03 ) }
    dend_10 { pt3dadd( -3.33428, -37.5824, 6.92521, 1.25 ) }
    dend_10 { pt3dadd( -3.25536, -39.3018, 7.23429, 0.81 ) }
    dend_10 { pt3dadd( -3.18677, -40.6722, 7.49238, 1.03 ) }
    dend_10 { pt3dadd( -3.15226, -41.7664, 7.72005, 1.62 ) }
    dend_10 { pt3dadd( -3.16641, -42.669, 7.93361, 2.73 ) }
    dend_10 { pt3dadd( -3.25716, -43.9416, 8.26942, 4.06 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 75/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.51145, 6.49085, 5.69, 0.59 ) }
    dend_1 { pt3dadd( 7.4733, 7.02941, 5.48907, 0.44 ) }
    dend_1 { pt3dadd( 8.41055, 7.61453, 5.57565, 0.44 ) }
    dend_1 { pt3dadd( 9.19429, 8.12914, 5.86026, 0.44 ) }
    dend_1 { pt3dadd( 10.0337, 8.67783, 6.32764, 0.37 ) }
    dend_1 { pt3dadd( 10.6604, 9.06752, 6.7487, 1.03 ) }
    dend_1 { pt3dadd( 11.6452, 9.64862, 7.50367, 1.33 ) }
    dend_1 { pt3dadd( 12.685, 10.2372, 8.53996, 1.47 ) }
    dend_1 { pt3dadd( 13.3984, 10.6059, 9.39916, 1.25 ) }
    dend_1 { pt3dadd( 14.175, 10.9088, 10.4595, 0.29 ) }
    dend_1 { pt3dadd( 14.6749, 11.0002, 11.194, 0.22 ) }
    dend_1 { pt3dadd( 15.06, 10.9889, 11.7304, 0.22 ) }
    dend_1 { pt3dadd( 15.306, 10.9011, 12.0115, 0.22 ) }
    dend_1 { pt3dadd( 15.5993, 10.7619, 12.3117, 0.22 ) }
    dend_1 { pt3dadd( 16.0567, 10.5557, 12.7577, 1.03 ) }
    dend_1 { pt3dadd( 17.0277, 10.1928, 13.733, 2.21 ) }
    dend_1 { pt3dadd( 17.5655, 10.1021, 14.2817, 3.02 ) }
    dend_1 { pt3dadd( 19.2656, 10.2736, 16.0548, 0.29 ) }
    dend_1 { pt3dadd( 20.0478, 10.5889, 16.9165, 0.29 ) }
    dend_1 { pt3dadd( 20.4879, 10.8924, 17.4161, 0.44 ) }
    dend_1 { pt3dadd( 20.916, 11.307, 17.9238, 0.66 ) }
    dend_1 { pt3dadd( 21.5756, 12.1327, 18.7334, 1.11 ) }
    dend_1 { pt3dadd( 22.1806, 12.9916, 19.5088, 0.52 ) }
    dend_1 { pt3dadd( 22.6618, 13.7421, 20.0795, 0.22 ) }
    dend_1 { pt3dadd( 22.97, 14.0756, 20.3951, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 23.2726, 14.1823, 20.6784, 0.22 ) }
    dend_1 { pt3dadd( 23.5675, 14.0653, 20.931, 0.22 ) }
    dend_1 { pt3dadd( 24.2431, 13.6192, 21.4792, 0.66 ) }
    dend_1 { pt3dadd( 24.9261, 13.1278, 22.0038, 1.7 ) }
    dend_1 { pt3dadd( 25.6035, 12.6427, 22.5435, 2.21 ) }
    dend_1 { pt3dadd( 26.243, 12.2362, 23.1028, 1.7 ) }
    dend_1 { pt3dadd( 27.124, 11.8516, 23.9997, 0.29 ) }
    dend_1 { pt3dadd( 27.9341, 11.7335, 25.0192, 0.22 ) }
    dend_1 { pt3dadd( 28.2636, 11.8271, 25.5532, 0.22 ) }
    dend_1 { pt3dadd( 28.5925, 12.1635, 26.3901, 0.22 ) }
    dend_1 { pt3dadd( 28.7737, 12.6577, 27.3067, 0.96 ) }
    dend_1 { pt3dadd( 28.859, 13.5448, 28.7448, 0.74 ) }
    dend_1 { pt3dadd( 28.8128, 14.1769, 29.746, 0.74 ) }
    dend_1 { pt3dadd( 28.7463, 14.5267, 30.3416, 0.74 ) }
    dend_1 { pt3dadd( 28.6769, 14.9974, 31.3207, 0.74 ) }
    dend_1 { pt3dadd( 28.7059, 15.2654, 31.9682, 0.74 ) }
    dend_1 { pt3dadd( 28.7743, 15.3316, 32.195, 0.74 ) }
    dend_1 { pt3dadd( 29.2679, 15.4705, 32.9301, 0.74 ) }
    dend_1 { pt3dadd( 29.7867, 15.577, 33.5161, 1.18 ) }
    dend_1 { pt3dadd( 30.6992, 15.7415, 34.4582, 0.44 ) }
    dend_1 { pt3dadd( 31.5309, 15.895, 35.2284, 1.25 ) }
    dend_1 { pt3dadd( 32.6848, 16.1375, 36.2317, 2.73 ) }
    dend_1 { pt3dadd( 33.9178, 16.4413, 37.2847, 3.54 ) }
    dend_1 { pt3dadd( 34.6084, 16.6386, 37.8526, 2.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.64855, 7.1161, 5.52, 0.88 ) }
    dend_0 { pt3dadd( -5.05383, 7.56471, 5.7092, 0.74 ) }
    dend_0 { pt3dadd( -5.68721, 8.21363, 6.07977, 0.22 ) }
    dend_0 { pt3dadd( -6.10265, 8.60937, 6.35335, 0.22 ) }
    dend_0 { pt3dadd( -6.65033, 9.08816, 6.7155, 0.44 ) }
    dend_0 { pt3dadd( -7.1051, 9.4451, 7.00878, 0.44 ) }
    dend_0 { pt3dadd( -7.69696, 9.83812, 7.38571, 0.22 ) }
    dend_0 { pt3dadd( -8.3169, 10.1451, 7.79419, 0.22 ) }
    dend_0 { pt3dadd( -8.63366, 10.2601, 7.99857, 0.22 ) }
    dend_0 { pt3dadd( -9.07786, 10.3821, 8.27103, 0.96 ) }
    dend_0 { pt3dadd( -9.7709, 10.5255, 8.70315, 1.47 ) }
    dend_0 { pt3dadd( -11.0108, 10.7396, 9.54431, 0.15 ) }
    dend_0 { pt3dadd( -11.5651, 10.8319, 9.90885, 0.15 ) }
    dend_0 { pt3dadd( -11.9612, 10.9164, 10.133, 0.15 ) }
    dend_0 { pt3dadd( -12.5547, 11.056, 10.4431, 0.88 ) }
    dend_0 { pt3dadd( -13.6096, 11.3251, 10.9768, 0.37 ) }
    dend_0 { pt3dadd( -14.7419, 11.6398, 11.5392, 1.55 ) }
    dend_0 { pt3dadd( -15.6516, 11.922, 11.9841, 2.95 ) }
    dend_0 { pt3dadd( -17.9814, 12.6915, 13.1026, 0.07 ) }
    dend_0 { pt3dadd( -18.4166, 12.8337, 13.3074, 0.88 ) }
    dend_0 { pt3dadd( -19.321, 13.1251, 13.7026, 0.07 ) }
    dend_0 { pt3dadd( -20.1702, 13.3931, 14.0065, 0.22 ) }
    dend_0 { pt3dadd( -20.7575, 13.5754, 14.191, 0.22 ) }
    dend_0 { pt3dadd( -22.0631, 13.9546, 14.583, 0.15 ) }
    dend_0 { pt3dadd( -22.4679, 14.0546, 14.6991, 0.96 ) }
    dend_0 { pt3dadd( -23.0504, 14.1842, 14.8364, 1.84 ) }
    dend_0 { pt3dadd( -25.1346, 14.5829, 15.205, 0.15 ) }
    dend_0 { pt3dadd( -25.5975, 14.6477, 15.2703, 0.66 ) }
    dend_0 { pt3dadd( -26.3308, 14.7206, 15.3617, 1.18 ) }
    dend_0 { pt3dadd( -28.1133, 14.8349, 15.5649, 0.15 ) }
    dend_0 { pt3dadd( -28.7762, 14.8506, 15.6292, 1.33 ) }
    dend_0 { pt3dadd( -29.661, 14.8366, 15.7066, 2.51 ) }
    dend_0 { pt3dadd( -32.1535, 14.6931, 15.9006, 0.15 ) }
    dend_0 { pt3dadd( -32.5568, 14.6587, 15.9154, 0.52 ) }
    dend_0 { pt3dadd( -33.2937, 14.5748, 15.9088, 0.81 ) }
    dend_0 { pt3dadd( -34.4486, 14.4173, 15.8399, 0.15 ) }
    dend_0 { pt3dadd( -35.0333, 14.3328, 15.797, 0.15 ) }
    dend_0 { pt3dadd( -35.4797, 14.2702, 15.7517, 0.66 ) }
    dend_0 { pt3dadd( -36.847, 14.0982, 15.5683, 1.84 ) }
    dend_0 { pt3dadd( -38.1949, 13.9741, 15.4052, 0.22 ) }
    dend_0 { pt3dadd( -38.882, 13.9329, 15.3411, 0.37 ) }
    dend_0 { pt3dadd( -39.1796, 13.9241, 15.322, 0.88 ) }
    dend_0 { pt3dadd( -40.2939, 13.9118, 15.3057, 0.15 ) }
    dend_0 { pt3dadd( -40.9048, 13.9219, 15.3245, 0.15 ) }
    dend_0 { pt3dadd( -41.5731, 13.9537, 15.3865, 0.74 ) }
    dend_0 { pt3dadd( -43.5485, 14.0872, 15.7078, 0.07 ) }
    dend_0 { pt3dadd( -43.9199, 14.1205, 15.7853, 0.52 ) }
    dend_0 { pt3dadd( -45.1902, 14.2736, 16.1031, 0.15 ) }
    dend_0 { pt3dadd( -45.79, 14.3642, 16.2807, 0.96 ) }
    dend_0 { pt3dadd( -46.5396, 14.4938, 16.5278, 1.92 ) }
    dend_0 { pt3dadd( -48.1562, 14.8592, 17.0981, 0.15 ) }
    dend_0 { pt3dadd( -48.8298, 15.0535, 17.3431, 0.22 ) }
    dend_0 { pt3dadd( -49.6321, 15.3116, 17.6148, 0.07 ) }
    dend_0 { pt3dadd( -50.1632, 15.5166, 17.7749, 1.03 ) }
    dend_0 { pt3dadd( -50.7149, 15.7497, 17.9285, 1.77 ) }
    dend_0 { pt3dadd( -52.3848, 16.5089, 18.3435, 0.07 ) }
    dend_0 { pt3dadd( -53.0678, 16.8459, 18.4963, 0.07 ) }
    dend_0 { pt3dadd( -53.5368, 17.0758, 18.6109, 0.74 ) }
    dend_0 { pt3dadd( -54.8115, 17.7083, 18.9336, 0.07 ) }
    dend_0 { pt3dadd( -55.2048, 17.9006, 19.0348, 0.52 ) }
    dend_0 { pt3dadd( -56.2729, 18.3491, 19.334, 0.07 ) }
    dend_0 { pt3dadd( -56.9277, 18.5555, 19.5359, 0.22 ) }
    dend_0 { pt3dadd( -57.6458, 18.6995, 19.7619, 0.15 ) }
    dend_0 { pt3dadd( -57.9423, 18.7174, 19.8524, 0.96 ) }
    dend_0 { pt3dadd( -58.6606, 18.6636, 20.06, 1.92 ) }
    dend_0 { pt3dadd( -60.1238, 18.4432, 20.4525, 0.07 ) }
    dend_0 { pt3dadd( -60.8376, 18.2851, 20.6161, 0.29 ) }
    dend_0 { pt3dadd( -61.6229, 18.1165, 20.7555, 0.07 ) }
    dend_0 { pt3dadd( -62.3932, 17.9979, 20.8545, 0.07 ) }
    dend_0 { pt3dadd( -62.6961, 17.9709, 20.8887, 0.07 ) }
    dend_0 { pt3dadd( -62.985, 17.9593, 20.9141, 0.44 ) }
    dend_0 { pt3dadd( -63.598, 17.9701, 20.9474, 0.74 ) }
    dend_0 { pt3dadd( -65.1113, 18.0168, 21.0178, 0.07 ) }
    dend_0 { pt3dadd( -66.3119, 18.0566, 21.0789, 0.15 ) }
    dend_0 { pt3dadd( -67.1453, 18.0795, 21.1226, 0.96 ) }
    dend_0 { pt3dadd( -68.171, 18.0633, 21.1875, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -68.9948, 18.0122, 21.2451, 0.59 ) }
    dend_0 { pt3dadd( -69.7834, 17.9128, 21.3087, 0.15 ) }
    dend_0 { pt3dadd( -70.1558, 17.838, 21.3416, 0.74 ) }
    dend_0 { pt3dadd( -70.717, 17.6953, 21.3918, 1.18 ) }
    dend_0 { pt3dadd( -72.4718, 17.206, 21.4858, 0.15 ) }
    dend_0 { pt3dadd( -73.053, 17.0459, 21.5026, 0.81 ) }
    dend_0 { pt3dadd( -73.9337, 16.8067, 21.5022, 0.15 ) }
    dend_0 { pt3dadd( -74.4516, 16.6683, 21.4899, 0.22 ) }
    dend_0 { pt3dadd( -75.7896, 16.3118, 21.4325, 0.07 ) }
    dend_0 { pt3dadd( -76.6201, 16.09, 21.3829, 1.03 ) }
    dend_0 { pt3dadd( -77.2028, 15.9443, 21.3366, 1.84 ) }
    dend_0 { pt3dadd( -79.1442, 15.5271, 21.1864, 0.07 ) }
    dend_0 { pt3dadd( -79.534, 15.4642, 21.1578, 0.22 ) }
    dend_0 { pt3dadd( -81.3695, 15.2699, 21.0555, 0.07 ) }
    dend_0 { pt3dadd( -81.6066, 15.2539, 21.048, 0.66 ) }
    dend_0 { pt3dadd( -82.1341, 15.2305, 21.0592, 1.25 ) }
    dend_0 { pt3dadd( -83.0238, 15.2118, 21.0938, 0.15 ) }
    dend_0 { pt3dadd( -83.7424, 15.2321, 21.136, 0.74 ) }
    dend_0 { pt3dadd( -84.9174, 15.2606, 21.2477, 0.07 ) }
    dend_0 { pt3dadd( -85.7047, 15.2762, 21.3501, 0.07 ) }
    dend_0 { pt3dadd( -86.5115, 15.2794, 21.4671, 0.07 ) }
    dend_0 { pt3dadd( -86.6712, 15.2822, 21.4968, 0.07 ) }
    dend_0 { pt3dadd( -87.3246, 15.3161, 21.6425, 0.74 ) }
    dend_0 { pt3dadd( -88.5733, 15.416, 21.9996, 0.07 ) }
    dend_0 { pt3dadd( -88.9203, 15.4647, 22.1195, 1.11 ) }
    dend_0 { pt3dadd( -89.6523, 15.5916, 22.4095, 1.62 ) }
    dend_0 { pt3dadd( -90.9709, 15.7557, 22.9916, 0.07 ) }
    dend_0 { pt3dadd( -91.6546, 15.8121, 23.3125, 0.81 ) }
    dend_0 { pt3dadd( -92.7349, 15.8535, 23.8406, 0.15 ) }
    dend_0 { pt3dadd( -93.6071, 15.8393, 24.2958, 0.15 ) }
    dend_0 { pt3dadd( -94.5144, 15.7706, 24.7879, 1.11 ) }
    dend_0 { pt3dadd( -96.5463, 15.4848, 25.9126, 0.15 ) }
    dend_0 { pt3dadd( -97.0123, 15.3922, 26.1668, 1.03 ) }
    dend_0 { pt3dadd( -97.863, 15.197, 26.6236, 1.84 ) }
    dend_0 { pt3dadd( -99.3201, 14.8216, 27.3626, 0.22 ) }
    dend_0 { pt3dadd( -99.5819, 14.7465, 27.4958, 0.22 ) }
    dend_0 { pt3dadd( -100.114, 14.5918, 27.7693, 0.07 ) }
    dend_0 { pt3dadd( -100.503, 14.4822, 27.977, 0.59 ) }
    dend_0 { pt3dadd( -101.314, 14.2474, 28.4341, 0.07 ) }
    dend_0 { pt3dadd( -101.843, 14.0823, 28.7398, 0.29 ) }
    dend_0 { pt3dadd( -102.373, 13.8891, 29.047, 0.07 ) }
    dend_0 { pt3dadd( -102.979, 13.6348, 29.4035, 0.37 ) }
    dend_0 { pt3dadd( -103.837, 13.233, 29.9129, 0.07 ) }
    dend_0 { pt3dadd( -104.455, 12.9063, 30.2828, 0.66 ) }
    dend_0 { pt3dadd( -105.136, 12.4472, 30.6672, 0.07 ) }
    dend_0 { pt3dadd( -105.75, 11.9539, 30.9974, 0.96 ) }
    dend_0 { pt3dadd( -106.792, 10.9426, 31.5171, 0.07 ) }
    dend_0 { pt3dadd( -107.345, 10.2566, 31.7591, 0.07 ) }
    dend_0 { pt3dadd( -107.7, 9.68122, 31.8827, 1.03 ) }
    dend_0 { pt3dadd( -108.598, 7.62378, 32.1302, 0.15 ) }
    dend_0 { pt3dadd( -108.819, 6.95056, 32.1638, 0.15 ) }
    dend_0 { pt3dadd( -109.038, 6.07629, 32.163, 1.11 ) }
    dend_0 { pt3dadd( -109.305, 4.62268, 32.1103, 0.15 ) }
    dend_0 { pt3dadd( -109.493, 3.37999, 32.0415, 1.84 ) }
    dend_0 { pt3dadd( -109.834, 0.953683, 31.8891, 0.15 ) }
    dend_0 { pt3dadd( -109.905, 0.420057, 31.8566, 0.59 ) }
    dend_0 { pt3dadd( -110.032, -0.407773, 31.8338, 1.03 ) }
    dend_0 { pt3dadd( -110.371, -2.21574, 31.8835, 0.15 ) }
    dend_0 { pt3dadd( -110.506, -2.80634, 31.962, 0.52 ) }
    dend_0 { pt3dadd( -110.798, -3.91973, 32.2079, 0.15 ) }
    dend_0 { pt3dadd( -110.973, -4.57384, 32.4153, 0.66 ) }
    dend_0 { pt3dadd( -111.21, -5.57758, 32.8182, 0.15 ) }
    dend_0 { pt3dadd( -111.415, -6.71448, 33.3533, 1.62 ) }
    dend_0 { pt3dadd( -111.576, -8.34615, 34.2116, 0.07 ) }
    dend_0 { pt3dadd( -111.586, -8.95027, 34.5257, 0.29 ) }
    dend_0 { pt3dadd( -111.521, -10.0554, 35.0512, 0.07 ) }
    dend_0 { pt3dadd( -111.444, -10.6572, 35.2877, 0.96 ) }
    dend_0 { pt3dadd( -111.291, -11.6244, 35.5225, 2.21 ) }
    dend_0 { pt3dadd( -111.148, -12.4729, 35.6257, 1.33 ) }
    dend_0 { pt3dadd( -110.987, -13.6751, 35.6514, 0.07 ) }
    dend_0 { pt3dadd( -110.893, -14.7546, 35.6156, 0.07 ) }
    dend_0 { pt3dadd( -110.864, -15.5797, 35.5513, 1.03 ) }
    dend_0 { pt3dadd( -110.832, -17.5481, 35.3566, 0.07 ) }
    dend_0 { pt3dadd( -110.844, -18.1826, 35.2844, 0.88 ) }
    dend_0 { pt3dadd( -110.909, -19.7199, 35.0988, 0.07 ) }
    dend_0 { pt3dadd( -110.935, -20.2793, 35.0276, 0.66 ) }
    dend_0 { pt3dadd( -110.952, -20.6612, 34.9849, 1.25 ) }
    dend_0 { pt3dadd( -111.015, -21.8511, 34.8764, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.06335, 10.2596, 0.0, 0.615565 ) }
    axon_0 { pt3dadd( 5.74396, 24.801, 0.0, 0.615565 ) }
    axon_0 { pt3dadd( 9.42458, 39.3425, 0.0, 0.615565 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 81/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.46074, 18.798, 1.44651, 0.37 ) }
    dend_38 { pt3dadd( 1.24955, 19.6271, 1.91681, 0.37 ) }
    dend_38 { pt3dadd( 1.49797, 19.8588, 2.07236, 0.37 ) }
    dend_38 { pt3dadd( 1.96122, 20.3052, 2.41033, 0.37 ) }
    dend_38 { pt3dadd( 2.51482, 20.9669, 2.90756, 0.22 ) }
    dend_38 { pt3dadd( 2.65164, 21.2177, 3.10449, 0.22 ) }
    dend_38 { pt3dadd( 2.67446, 21.514, 3.37382, 0.22 ) }
    dend_38 { pt3dadd( 2.58046, 21.6907, 3.58558, 0.22 ) }
    dend_38 { pt3dadd( 2.37773, 21.9722, 3.91157, 0.22 ) }
    dend_38 { pt3dadd( 2.02055, 22.4417, 4.46485, 0.22 ) }
    dend_38 { pt3dadd( 1.79713, 22.7439, 4.82827, 0.22 ) }
    dend_38 { pt3dadd( 1.45297, 23.3017, 5.47047, 0.66 ) }
    dend_38 { pt3dadd( 1.15176, 23.9624, 6.20202, 1.03 ) }
    dend_38 { pt3dadd( 0.860476, 24.798, 7.15146, 0.22 ) }
    dend_38 { pt3dadd( 0.711961, 25.3763, 7.86257, 0.22 ) }
    dend_38 { pt3dadd( 0.655541, 25.7828, 8.42307, 0.88 ) }
    dend_38 { pt3dadd( 0.641789, 26.1999, 9.06554, 1.47 ) }
    dend_38 { pt3dadd( 0.698385, 26.8522, 10.2145, 0.15 ) }
    dend_38 { pt3dadd( 0.791154, 27.3731, 11.1521, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_38 { pt3dadd( 0.902682, 27.9085, 12.0712, 0.15 ) }
    dend_38 { pt3dadd( 0.9489, 28.4292, 12.8746, 0.15 ) }
    dend_38 { pt3dadd( 0.91763, 28.9489, 13.6454, 0.15 ) }
    dend_38 { pt3dadd( 0.747867, 29.5683, 14.5286, 0.15 ) }
    dend_38 { pt3dadd( 0.256531, 30.5217, 15.7351, 0.96 ) }
    dend_38 { pt3dadd( -0.101628, 31.0601, 16.348, 2.06 ) }
    dend_38 { pt3dadd( -0.808199, 31.9239, 17.2126, 0.22 ) }
    dend_38 { pt3dadd( -1.11205, 32.2775, 17.5277, 0.22 ) }
    dend_38 { pt3dadd( -1.41724, 32.5971, 17.8142, 0.22 ) }
    dend_38 { pt3dadd( -1.89115, 33.0327, 18.2738, 0.22 ) }
    dend_38 { pt3dadd( -2.41742, 33.4641, 18.8955, 0.22 ) }
    dend_38 { pt3dadd( -2.74876, 33.7349, 19.3262, 1.33 ) }
    dend_38 { pt3dadd( -3.19316, 34.2714, 20.1035, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.46074, 18.798, 1.44651, 1.25 ) }
    dend_33 { pt3dadd( -0.038927, 20.0101, 1.33767, 1.25 ) }
    dend_33 { pt3dadd( -0.639634, 21.5777, 1.30179, 0.81 ) }
    dend_33 { pt3dadd( -1.07491, 22.917, 1.39009, 0.81 ) }
    dend_33 { pt3dadd( -1.40735, 24.2095, 1.56728, 1.11 ) }
    dend_33 { pt3dadd( -1.62196, 25.4115, 1.80344, 1.4 ) }
    dend_33 { pt3dadd( -1.70284, 26.4389, 2.05896, 0.59 ) }
    dend_33 { pt3dadd( -1.60774, 27.4184, 2.46032, 0.59 ) }
    dend_33 { pt3dadd( -1.25265, 28.571, 3.10088, 0.52 ) }
    dend_33 { pt3dadd( -0.914509, 29.262, 3.54382, 0.59 ) }
    dend_33 { pt3dadd( -0.509847, 29.9578, 4.02346, 0.59 ) }
    dend_33 { pt3dadd( 0.023302, 30.8727, 4.67271, 0.44 ) }
    dend_33 { pt3dadd( 0.298331, 31.4384, 5.06511, 0.44 ) }
    dend_33 { pt3dadd( 0.366564, 31.7609, 5.24793, 0.44 ) }
    dend_33 { pt3dadd( 0.304196, 32.3394, 5.53237, 0.52 ) }
    dend_33 { pt3dadd( 0.043247, 33.2154, 5.98947, 0.66 ) }
    dend_33 { pt3dadd( -0.24404, 33.9372, 6.38906, 0.29 ) }
    dend_33 { pt3dadd( -0.474508, 34.468, 6.71369, 0.29 ) }
    dend_33 { pt3dadd( -0.725337, 35.1507, 7.13657, 0.37 ) }
    dend_33 { pt3dadd( -0.993456, 36.0359, 7.67303, 0.88 ) }
    dend_33 { pt3dadd( -1.24482, 36.9509, 8.21933, 1.62 ) }
    dend_33 { pt3dadd( -1.44513, 37.7961, 8.71092, 2.43 ) }
    dend_33 { pt3dadd( -1.6317, 38.7541, 9.25583, 2.43 ) }
    dend_33 { pt3dadd( -1.87721, 40.3526, 10.1379, 0.22 ) }
    dend_33 { pt3dadd( -1.9602, 41.1061, 10.5441, 0.52 ) }
    dend_33 { pt3dadd( -2.01885, 41.8669, 10.9174, 0.22 ) }
    dend_33 { pt3dadd( -2.03708, 42.2706, 11.0827, 0.22 ) }
    dend_33 { pt3dadd( -2.04583, 42.7884, 11.2581, 0.22 ) }
    dend_33 { pt3dadd( -2.04626, 43.4185, 11.4081, 0.22 ) }
    dend_33 { pt3dadd( -2.04877, 43.8394, 11.4822, 0.22 ) }
    dend_33 { pt3dadd( -2.05545, 44.1157, 11.5194, 0.22 ) }
    dend_33 { pt3dadd( -2.12262, 45.1013, 11.5871, 0.37 ) }
    dend_33 { pt3dadd( -2.21806, 45.9397, 11.5959, 0.37 ) }
    dend_33 { pt3dadd( -2.33746, 46.7403, 11.5633, 0.52 ) }
    dend_33 { pt3dadd( -2.46426, 47.55, 11.5053, 0.96 ) }
    dend_33 { pt3dadd( -2.59736, 48.5192, 11.3983, 0.96 ) }
    dend_33 { pt3dadd( -2.74482, 49.9996, 11.1546, 0.44 ) }
    dend_33 { pt3dadd( -2.76437, 50.9636, 10.9407, 0.44 ) }
    dend_33 { pt3dadd( -2.75334, 51.9637, 10.679, 1.47 ) }
    dend_33 { pt3dadd( -2.72823, 53.007, 10.3751, 2.8 ) }
    dend_33 { pt3dadd( -2.70277, 53.9705, 10.064, 3.61 ) }
    dend_33 { pt3dadd( -2.6776, 54.9696, 9.70196, 3.02 ) }
    dend_33 { pt3dadd( -2.61123, 57.308, 8.75358, 0.22 ) }
    dend_33 { pt3dadd( -2.60016, 58.0222, 8.43968, 0.29 ) }
    dend_33 { pt3dadd( -2.59655, 58.4106, 8.26512, 0.29 ) }
    dend_33 { pt3dadd( -2.6038, 59.1687, 7.90756, 0.22 ) }
    dend_33 { pt3dadd( -2.63473, 60.078, 7.47332, 0.52 ) }
    dend_33 { pt3dadd( -2.68105, 60.8352, 7.10557, 1.33 ) }
    dend_33 { pt3dadd( -2.76332, 61.7839, 6.57584, 2.43 ) }
    dend_33 { pt3dadd( -2.75141, 62.662, 6.08018, 2.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.14047, -17.4017, -13.9823, 0.44 ) }
    dend_27 { pt3dadd( -10.2325, -18.6726, -15.176, 0.44 ) }
    dend_27 { pt3dadd( -10.3394, -19.1114, -15.5441, 0.44 ) }
    dend_27 { pt3dadd( -10.4082, -19.573, -15.9514, 0.44 ) }
    dend_27 { pt3dadd( -10.5222, -20.0671, -16.3999, 0.44 ) }
    dend_27 { pt3dadd( -10.7204, -20.6348, -16.9451, 0.59 ) }
    dend_27 { pt3dadd( -11.0754, -21.3997, -17.758, 0.74 ) }
    dend_27 { pt3dadd( -11.304, -21.9216, -18.3872, 1.11 ) }
    dend_27 { pt3dadd( -11.6278, -22.4898, -19.1833, 1.47 ) }
    dend_27 { pt3dadd( -12.0226, -22.9895, -20.0258, 1.47 ) }
    dend_27 { pt3dadd( -12.6858, -23.5624, -21.2413, 0.59 ) }
    dend_27 { pt3dadd( -13.2552, -23.845, -22.1426, 0.52 ) }
    dend_27 { pt3dadd( -13.6987, -23.9161, -22.7571, 0.52 ) }
    dend_27 { pt3dadd( -14.2196, -23.8872, -23.3777, 0.44 ) }
    dend_27 { pt3dadd( -14.8095, -23.7784, -23.9238, 0.44 ) }
    dend_27 { pt3dadd( -15.1276, -23.7066, -24.1615, 0.44 ) }
    dend_27 { pt3dadd( -15.9296, -23.5555, -24.6298, 0.96 ) }
    dend_27 { pt3dadd( -16.6905, -23.4462, -25.018, 0.96 ) }
    dend_27 { pt3dadd( -17.5881, -23.3692, -25.4323, 1.4 ) }
    dend_27 { pt3dadd( -18.7415, -23.3342, -25.9289, 2.36 ) }
    dend_27 { pt3dadd( -19.684, -23.3536, -26.3142, 3.32 ) }
    dend_27 { pt3dadd( -20.7881, -23.3964, -26.7824, 3.61 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.14047, -17.4017, -13.9823, 0.29 ) }
    dend_26 { pt3dadd( -7.81299, -19.2688, -14.6845, 0.29 ) }
    dend_26 { pt3dadd( -7.66491, -19.9053, -14.9387, 0.29 ) }
    dend_26 { pt3dadd( -7.46879, -20.7382, -15.2921, 0.29 ) }
    dend_26 { pt3dadd( -7.32046, -21.4315, -15.622, 0.81 ) }
    dend_26 { pt3dadd( -7.17595, -22.1754, -16.011, 1.11 ) }
    dend_26 { pt3dadd( -7.00327, -23.2439, -16.6433, 0.22 ) }
    dend_26 { pt3dadd( -6.8435, -24.0181, -17.2134, 0.22 ) }
    dend_26 { pt3dadd( -6.80283, -24.4596, -17.6044, 0.22 ) }
    dend_26 { pt3dadd( -6.81373, -25.0588, -18.2125, 0.22 ) }
    dend_26 { pt3dadd( -6.8084, -25.3931, -18.4726, 0.37 ) }
    dend_26 { pt3dadd( -6.76972, -26.0392, -18.9055, 0.37 ) }
    dend_26 { pt3dadd( -6.71283, -26.5672, -19.2027, 0.81 ) }
    dend_26 { pt3dadd( -6.60102, -27.3344, -19.557, 1.7 ) }
    dend_26 { pt3dadd( -6.44247, -28.4099, -20.0211, 2.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( -6.08317, -30.7559, -20.9553, 0.29 ) }
    dend_26 { pt3dadd( -5.95197, -31.5549, -21.2368, 0.96 ) }
    dend_26 { pt3dadd( -5.85374, -32.0914, -21.4008, 0.96 ) }
    dend_26 { pt3dadd( -5.58777, -33.3369, -21.7433, 0.15 ) }
    dend_26 { pt3dadd( -5.37803, -34.1308, -21.9142, 0.15 ) }
    dend_26 { pt3dadd( -5.21851, -34.6652, -22.0075, 0.59 ) }
    dend_26 { pt3dadd( -4.84509, -35.6908, -22.1409, 0.29 ) }
    dend_26 { pt3dadd( -4.57665, -36.3455, -22.1904, 1.4 ) }
    dend_26 { pt3dadd( -4.14586, -37.3248, -22.2325, 2.73 ) }
    dend_26 { pt3dadd( -3.08562, -39.5913, -22.2467, 0.15 ) }
    dend_26 { pt3dadd( -2.91953, -39.9377, -22.2425, 0.74 ) }
    dend_26 { pt3dadd( -2.61499, -40.5655, -22.2496, 0.74 ) }
    dend_26 { pt3dadd( -2.12347, -41.5274, -22.2869, 0.15 ) }
    dend_26 { pt3dadd( -1.67099, -42.3944, -22.3343, 0.15 ) }
    dend_26 { pt3dadd( -1.28838, -43.1496, -22.3888, 0.15 ) }
    dend_26 { pt3dadd( -0.957601, -43.8232, -22.4739, 1.25 ) }
    dend_26 { pt3dadd( -0.506588, -44.834, -22.6603, 0.22 ) }
    dend_26 { pt3dadd( -0.261676, -45.527, -22.8375, 0.22 ) }
    dend_26 { pt3dadd( -0.184574, -45.886, -22.9466, 0.22 ) }
    dend_26 { pt3dadd( -0.153402, -46.4064, -23.0959, 0.22 ) }
    dend_26 { pt3dadd( -0.185358, -47.3575, -23.3402, 0.44 ) }
    dend_26 { pt3dadd( -0.265376, -48.2549, -23.5451, 1.62 ) }
    dend_26 { pt3dadd( -0.365562, -49.2177, -23.7475, 3.02 ) }
    dend_26 { pt3dadd( -0.472026, -50.3824, -23.9795, 3.02 ) }
    dend_26 { pt3dadd( -0.649843, -52.9883, -24.5002, 0.29 ) }
    dend_26 { pt3dadd( -0.688278, -53.9455, -24.6828, 0.81 ) }
    dend_26 { pt3dadd( -0.696839, -54.7789, -24.8251, 1.03 ) }
    dend_26 { pt3dadd( -0.678302, -55.6452, -24.9676, 0.37 ) }
    dend_26 { pt3dadd( -0.646786, -56.3166, -25.0586, 1.18 ) }
    dend_26 { pt3dadd( -0.53112, -57.6712, -25.2163, 0.22 ) }
    dend_26 { pt3dadd( -0.449883, -58.1876, -25.2623, 0.74 ) }
    dend_26 { pt3dadd( -0.354414, -58.6111, -25.2819, 0.74 ) }
    dend_26 { pt3dadd( -0.221132, -59.0634, -25.276, 0.15 ) }
    dend_26 { pt3dadd( 0.168501, -60.2877, -25.1779, 0.44 ) }
    dend_26 { pt3dadd( 0.289233, -60.5925, -25.1381, 0.44 ) }
    dend_26 { pt3dadd( 0.717507, -61.5253, -24.9933, 0.22 ) }
    dend_26 { pt3dadd( 0.9718, -62.0738, -24.925, 1.11 ) }
    dend_26 { pt3dadd( 1.15843, -62.5389, -24.8829, 1.62 ) }
    dend_26 { pt3dadd( 1.43141, -63.3163, -24.8339, 1.62 ) }
    dend_26 { pt3dadd( 1.92753, -65.1033, -24.8161, 0.22 ) }
    dend_26 { pt3dadd( 2.08003, -66.0093, -24.8167, 0.96 ) }
    dend_26 { pt3dadd( 2.09235, -66.9489, -24.826, 1.18 ) }
    dend_26 { pt3dadd( 1.88668, -68.6113, -24.8797, 0.15 ) }
    dend_26 { pt3dadd( 1.78073, -69.1686, -24.9056, 0.22 ) }
    dend_26 { pt3dadd( 1.39295, -70.4533, -24.9999, 0.07 ) }
    dend_26 { pt3dadd( 1.09449, -71.017, -25.0699, 0.22 ) }
    dend_26 { pt3dadd( 0.293771, -72.1243, -25.2394, 0.07 ) }
    dend_26 { pt3dadd( -0.0702786, -72.4928, -25.3113, 0.15 ) }
    dend_26 { pt3dadd( 0.501756, -82.4205, -27.7326, 0.15 ) }
    dend_26 { pt3dadd( -0.381486, -92.3955, -29.8572, 0.15 ) }
    dend_26 { pt3dadd( 0.906276, -102.383, -31.6988, 0.15 ) }
    dend_26 { pt3dadd( 3.00888, -112.07, -34.2012, 0.15 ) }
    dend_26 { pt3dadd( 5.13217, -121.417, -37.7149, 0.15 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.25716, -43.9416, 8.26942, 1.99 ) }
    dend_14 { pt3dadd( -3.72857, -45.7272, 8.24928, 1.99 ) }
    dend_14 { pt3dadd( -4.2871, -48.2025, 8.22887, 0.59 ) }
    dend_14 { pt3dadd( -4.55753, -49.6158, 8.21983, 0.59 ) }
    dend_14 { pt3dadd( -4.81633, -51.3117, 8.22845, 0.59 ) }
    dend_14 { pt3dadd( -4.90637, -52.1431, 8.23918, 1.11 ) }
    dend_14 { pt3dadd( -4.99975, -53.657, 8.28706, 2.58 ) }
    dend_14 { pt3dadd( -4.96513, -54.4014, 8.32302, 2.88 ) }
    dend_14 { pt3dadd( -4.88316, -55.0457, 8.37106, 2.65 ) }
    dend_14 { pt3dadd( -4.75708, -56.0329, 8.4819, 1.55 ) }
    dend_14 { pt3dadd( -4.5933, -57.4212, 8.68948, 0.74 ) }
    dend_14 { pt3dadd( -4.48602, -58.7444, 8.90601, 0.44 ) }
    dend_14 { pt3dadd( -4.4546, -59.9021, 9.10658, 0.29 ) }
    dend_14 { pt3dadd( -4.48326, -60.7978, 9.27287, 0.29 ) }
    dend_14 { pt3dadd( -4.57957, -61.9396, 9.50764, 0.29 ) }
    dend_14 { pt3dadd( -4.60962, -62.3011, 9.58512, 0.29 ) }
    dend_14 { pt3dadd( -4.67271, -62.9685, 9.73323, 0.44 ) }
    dend_14 { pt3dadd( -4.74904, -63.6288, 9.87028, 1.11 ) }
    dend_14 { pt3dadd( -4.83628, -64.3751, 10.0349, 2.36 ) }
    dend_14 { pt3dadd( -4.98268, -65.9282, 10.3734, 2.73 ) }
    dend_14 { pt3dadd( -5.15405, -68.8233, 10.9995, 0.44 ) }
    dend_14 { pt3dadd( -5.17892, -69.3937, 11.1341, 0.44 ) }
    dend_14 { pt3dadd( -5.22102, -70.4943, 11.4141, 0.59 ) }
    dend_14 { pt3dadd( -5.25106, -71.5533, 11.7013, 0.29 ) }
    dend_14 { pt3dadd( -5.265, -72.2159, 11.885, 0.29 ) }
    dend_14 { pt3dadd( -5.24069, -72.834, 12.0476, 0.29 ) }
    dend_14 { pt3dadd( -5.16562, -73.4756, 12.2414, 0.29 ) }
    dend_14 { pt3dadd( -5.0581, -73.9718, 12.4116, 0.88 ) }
    dend_14 { pt3dadd( -4.84359, -74.6673, 12.674, 1.84 ) }
    dend_14 { pt3dadd( -4.59622, -75.3306, 12.9348, 2.14 ) }
    dend_14 { pt3dadd( -3.85146, -77.2255, 13.7291, 0.44 ) }
    dend_14 { pt3dadd( -3.52648, -78.0739, 14.0954, 0.66 ) }
    dend_14 { pt3dadd( -3.1403, -79.0798, 14.5667, 0.29 ) }
    dend_14 { pt3dadd( -2.99591, -79.4409, 14.7638, 0.29 ) }
    dend_14 { pt3dadd( -2.85291, -79.8151, 15.0119, 0.29 ) }
    dend_14 { pt3dadd( -2.78415, -80.0538, 15.2111, 0.29 ) }
    dend_14 { pt3dadd( -2.81264, -80.3064, 15.4381, 0.29 ) }
    dend_14 { pt3dadd( -2.97531, -80.8572, 15.7044, 0.29 ) }
    dend_14 { pt3dadd( -3.10063, -81.2767, 15.8283, 0.29 ) }
    dend_14 { pt3dadd( -3.2314, -81.7763, 15.9443, 0.29 ) }
    dend_14 { pt3dadd( -3.42595, -82.5745, 16.1018, 1.18 ) }
    dend_14 { pt3dadd( -3.60122, -83.393, 16.2755, 2.43 ) }
    dend_14 { pt3dadd( -3.76875, -84.3427, 16.4952, 2.88 ) }
    dend_14 { pt3dadd( -3.96713, -85.8127, 16.8682, 1.55 ) }
    dend_14 { pt3dadd( -4.12616, -87.6823, 17.4184, 0.52 ) }
    dend_14 { pt3dadd( -4.17468, -88.8663, 17.8278, 0.29 ) }
    dend_14 { pt3dadd( -4.18955, -89.8116, 18.2015, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_14 { pt3dadd( -4.17932, -90.5818, 18.5374, 0.66 ) }
    dend_14 { pt3dadd( -4.15503, -91.2069, 18.8263, 0.96 ) }
    dend_14 { pt3dadd( -4.10041, -92.0294, 19.1727, 0.22 ) }
    dend_14 { pt3dadd( -4.04689, -92.8063, 19.4033, 0.22 ) }
    dend_14 { pt3dadd( -4.00643, -93.6402, 19.5252, 0.29 ) }
    dend_14 { pt3dadd( -3.97168, -94.4029, 19.5557, 0.59 ) }
    dend_14 { pt3dadd( -3.93224, -95.6171, 19.5406, 1.33 ) }
    dend_14 { pt3dadd( -3.89945, -96.9839, 19.4837, 2.21 ) }
    dend_14 { pt3dadd( -3.87069, -98.0734, 19.4201, 3.24 ) }
    dend_14 { pt3dadd( -3.78585, -99.9883, 19.2967, 1.77 ) }
    dend_14 { pt3dadd( -3.69438, -101.588, 19.2072, 0.44 ) }
    dend_14 { pt3dadd( -3.62836, -102.719, 19.1563, 0.37 ) }
    dend_14 { pt3dadd( -3.56567, -103.999, 19.1175, 0.37 ) }
    dend_14 { pt3dadd( -3.53231, -104.831, 19.109, 0.88 ) }
    dend_14 { pt3dadd( -3.52592, -105.211, 19.108, 1.77 ) }
    dend_14 { pt3dadd( -3.55613, -106.426, 19.101, 3.1 ) }
    dend_14 { pt3dadd( -3.72785, -108.307, 19.0844, 1.33 ) }
    dend_14 { pt3dadd( -3.94326, -109.595, 19.0693, 0.74 ) }
    dend_14 { pt3dadd( -4.32364, -111.097, 19.0474, 0.22 ) }
    dend_14 { pt3dadd( -4.52393, -111.709, 19.037, 0.22 ) }
    dend_14 { pt3dadd( -4.69281, -112.149, 19.03, 0.52 ) }
    dend_14 { pt3dadd( -5.17306, -113.196, 19.0157, 0.81 ) }
    dend_14 { pt3dadd( -5.76919, -114.326, 19.0433, 0.29 ) }
    dend_14 { pt3dadd( -5.95015, -114.669, 19.0611, 0.37 ) }
    dend_14 { pt3dadd( -6.33563, -115.479, 19.1159, 0.37 ) }
    dend_14 { pt3dadd( -6.70847, -116.453, 19.2613, 0.44 ) }
    dend_14 { pt3dadd( -7.05127, -117.575, 19.5118, 0.81 ) }
    dend_14 { pt3dadd( -7.35286, -118.91, 19.895, 0.81 ) }
    dend_14 { pt3dadd( -7.52656, -119.955, 20.2401, 0.81 ) }
    dend_14 { pt3dadd( -7.73806, -121.292, 20.718, 0.37 ) }
    dend_14 { pt3dadd( -7.99776, -122.904, 21.3678, 0.37 ) }
    dend_14 { pt3dadd( -8.11942, -123.718, 21.7431, 1.18 ) }
    dend_14 { pt3dadd( -8.19787, -124.506, 22.1594, 2.8 ) }
    dend_14 { pt3dadd( -8.2172, -125.176, 22.5536, 3.32 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 34/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -3.25716, -43.9416, 8.26942, 0.66 ) }
    dend_11 { pt3dadd( -1.64567, -45.323, 9.24062, 0.66 ) }
    dend_11 { pt3dadd( -0.606751, -46.3489, 9.86958, 0.44 ) }
    dend_11 { pt3dadd( 0.106434, -47.1707, 10.3018, 0.88 ) }
    dend_11 { pt3dadd( 0.580378, -47.8099, 10.5908, 0.44 ) }
    dend_11 { pt3dadd( 0.95844, -48.4064, 10.8129, 0.22 ) }
    dend_11 { pt3dadd( 1.31281, -49.078, 11.022, 0.22 ) }
    dend_11 { pt3dadd( 1.50786, -49.7911, 11.1284, 0.22 ) }
    dend_11 { pt3dadd( 1.61965, -50.4552, 11.1991, 0.22 ) }
    dend_11 { pt3dadd( 1.66467, -51.0546, 11.2693, 0.59 ) }
    dend_11 { pt3dadd( 1.6884, -51.931, 11.4169, 1.7 ) }
    dend_11 { pt3dadd( 1.6825, -53.085, 11.6561, 1.47 ) }
    dend_11 { pt3dadd( 1.65485, -55.0803, 12.1401, 0.44 ) }
    dend_11 { pt3dadd( 1.6663, -56.1488, 12.4264, 0.29 ) }
    dend_11 { pt3dadd( 1.67655, -56.8285, 12.6155, 0.22 ) }
    dend_11 { pt3dadd( 1.7008, -57.5939, 12.8184, 0.22 ) }
    dend_11 { pt3dadd( 1.72885, -58.1349, 12.9631, 0.96 ) }
    dend_11 { pt3dadd( 1.81706, -59.179, 13.2175, 2.51 ) }
    dend_11 { pt3dadd( 1.96385, -60.342, 13.4962, 3.39 ) }
    dend_11 { pt3dadd( 2.15106, -61.4419, 13.7367, 3.1 ) }
    dend_11 { pt3dadd( 2.48493, -62.9135, 14.0739, 1.03 ) }
    dend_11 { pt3dadd( 2.85283, -64.322, 14.412, 0.29 ) }
    dend_11 { pt3dadd( 3.14589, -65.3242, 14.6871, 0.22 ) }
    dend_11 { pt3dadd( 3.35064, -65.973, 14.888, 0.22 ) }
    dend_11 { pt3dadd( 3.46705, -66.3428, 15.0164, 0.22 ) }
    dend_11 { pt3dadd( 3.64416, -66.8818, 15.2167, 0.29 ) }
    dend_11 { pt3dadd( 3.83441, -67.4819, 15.4281, 0.22 ) }
    dend_11 { pt3dadd( 4.02661, -68.2096, 15.5788, 0.29 ) }
    dend_11 { pt3dadd( 4.1171, -68.5922, 15.6254, 0.81 ) }
    dend_11 { pt3dadd( 4.37373, -69.7237, 15.6867, 1.55 ) }
    dend_11 { pt3dadd( 4.57997, -70.6502, 15.699, 2.29 ) }
    dend_11 { pt3dadd( 4.76832, -71.467, 15.6885, 2.06 ) }
    dend_11 { pt3dadd( 5.21047, -73.1822, 15.6724, 0.22 ) }
    dend_11 { pt3dadd( 5.3867, -73.7527, 15.6905, 0.22 ) }
    dend_11 { pt3dadd( 5.53969, -74.1653, 15.7328, 0.22 ) }
    dend_11 { pt3dadd( 5.61977, -74.3478, 15.7686, 0.22 ) }
    dend_11 { pt3dadd( 5.89319, -74.909, 15.9374, 0.81 ) }
    dend_11 { pt3dadd( 6.31512, -75.7403, 16.2432, 1.84 ) }
    dend_11 { pt3dadd( 6.71869, -76.5862, 16.6057, 2.8 ) }
    dend_11 { pt3dadd( 7.11365, -77.5733, 17.0622, 1.77 ) }
    dend_11 { pt3dadd( 7.40227, -78.4874, 17.4824, 0.81 ) }
    dend_11 { pt3dadd( 7.71131, -79.6682, 18.0244, 0.22 ) }
    dend_11 { pt3dadd( 7.87036, -80.3511, 18.3291, 0.29 ) }
    dend_11 { pt3dadd( 7.99863, -81.0266, 18.6252, 0.29 ) }
    dend_11 { pt3dadd( 8.13493, -82.2255, 19.1462, 0.59 ) }
    dend_11 { pt3dadd( 8.17272, -83.3262, 19.6421, 1.47 ) }
    dend_11 { pt3dadd( 8.14763, -83.8856, 19.9136, 1.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 81/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 34.6084, 16.6386, 37.8526, 0.22 ) }
    dend_3 { pt3dadd( 35.5418, 17.0607, 39.2212, 0.22 ) }
    dend_3 { pt3dadd( 36.1714, 17.3454, 40.1445, 0.22 ) }
    dend_3 { pt3dadd( 37.0524, 17.7438, 41.4363, 1.47 ) }
    dend_3 { pt3dadd( 37.3961, 17.8993, 41.9402, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 86/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 34.6084, 16.6386, 37.8526, 0.29 ) }
    dend_2 { pt3dadd( 36.1017, 15.6923, 38.9347, 0.29 ) }
    dend_2 { pt3dadd( 36.9881, 15.0271, 39.568, 0.15 ) }
    dend_2 { pt3dadd( 37.3515, 14.7538, 39.8053, 0.22 ) }
    dend_2 { pt3dadd( 38.0835, 14.2107, 40.247, 0.22 ) }
    dend_2 { pt3dadd( 38.9528, 13.5434, 40.7699, 0.22 ) }
    dend_2 { pt3dadd( 39.6327, 13.0321, 41.1508, 0.22 ) }
    dend_2 { pt3dadd( 40.5656, 12.3024, 41.6317, 0.22 ) }
    dend_2 { pt3dadd( 41.4926, 11.5728, 42.0741, 0.22 ) }
    dend_2 { pt3dadd( 42.4623, 10.8572, 42.4909, 0.22 ) }
    dend_2 { pt3dadd( 43.6702, 10.0702, 42.9158, 0.15 ) }
    dend_2 { pt3dadd( 44.7814, 9.43272, 43.2198, 0.15 ) }
    dend_2 { pt3dadd( 45.3321, 9.15187, 43.3446, 0.15 ) }
    dend_2 { pt3dadd( 46.0023, 8.8084, 43.4754, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 46.6763, 8.45183, 43.5866, 1.25 ) }
    dend_2 { pt3dadd( 47.7847, 7.87614, 43.7259, 0.15 ) }
    dend_2 { pt3dadd( 48.347, 7.59308, 43.7827, 0.15 ) }
    dend_2 { pt3dadd( 49.2755, 7.1318, 43.8591, 0.88 ) }
    dend_2 { pt3dadd( 50.5567, 6.50899, 43.9435, 0.15 ) }
    dend_2 { pt3dadd( 51.0917, 6.25872, 43.9692, 0.44 ) }
    dend_2 { pt3dadd( 51.7907, 5.93442, 44.0121, 1.18 ) }
    dend_2 { pt3dadd( 53.2218, 5.27298, 44.1313, 0.07 ) }
    dend_2 { pt3dadd( 54.2768, 4.81594, 44.2351, 0.07 ) }
    dend_2 { pt3dadd( 55.1022, 4.46044, 44.348, 1.47 ) }
    dend_2 { pt3dadd( 55.5797, 4.26753, 44.4342, 1.47 ) }
    dend_2 { pt3dadd( 57.1303, 3.6228, 44.7645, 0.15 ) }
    dend_2 { pt3dadd( 57.7981, 3.32001, 44.9483, 1.11 ) }
    dend_2 { pt3dadd( 58.3412, 3.04581, 45.1321, 1.47 ) }
    dend_2 { pt3dadd( 59.999, 2.12241, 45.7907, 0.07 ) }
    dend_2 { pt3dadd( 60.8732, 1.56126, 46.1782, 0.15 ) }
    dend_2 { pt3dadd( 61.4936, 1.11181, 46.4791, 0.22 ) }
    dend_2 { pt3dadd( 62.3416, 0.426493, 46.9545, 0.07 ) }
    dend_2 { pt3dadd( 62.8317, 0.0123399, 47.2609, 1.18 ) }
    dend_2 { pt3dadd( 63.4021, -0.464574, 47.6375, 1.77 ) }
    dend_2 { pt3dadd( 64.7111, -1.53907, 48.5129, 0.07 ) }
    dend_2 { pt3dadd( 65.4596, -2.04412, 48.9508, 0.15 ) }
    dend_2 { pt3dadd( 66.8311, -2.73208, 49.6586, 0.74 ) }
    dend_2 { pt3dadd( 67.9185, -3.08772, 50.137, 0.15 ) }
    dend_2 { pt3dadd( 68.6108, -3.19309, 50.4012, 0.81 ) }
    dend_2 { pt3dadd( 69.3254, -3.1939, 50.6383, 2.14 ) }
    dend_2 { pt3dadd( 71.9108, -2.81178, 51.3591, 0.15 ) }
    dend_2 { pt3dadd( 72.8132, -2.57182, 51.5947, 0.15 ) }
    dend_2 { pt3dadd( 73.5314, -2.30832, 51.7818, 0.37 ) }
    dend_2 { pt3dadd( 74.8346, -1.72808, 52.1905, 0.07 ) }
    dend_2 { pt3dadd( 75.3489, -1.46334, 52.407, 0.88 ) }
    dend_2 { pt3dadd( 75.8035, -1.18172, 52.6544, 1.25 ) }
    dend_2 { pt3dadd( 76.9434, -0.279185, 53.5491, 0.07 ) }
    dend_2 { pt3dadd( 77.4833, 0.226259, 54.0975, 1.11 ) }
    dend_2 { pt3dadd( 77.927, 0.713564, 54.6872, 1.55 ) }
    dend_2 { pt3dadd( 78.4957, 1.35504, 55.6331, 0.07 ) }
    dend_2 { pt3dadd( 78.7588, 1.6374, 56.1286, 0.74 ) }
    dend_2 { pt3dadd( 79.2304, 2.13878, 57.1427, 0.15 ) }
    dend_2 { pt3dadd( 79.5987, 2.53907, 58.0345, 0.81 ) }
    dend_2 { pt3dadd( 79.9948, 2.95256, 59.0273, 1.25 ) }
    dend_2 { pt3dadd( 80.642, 3.56248, 60.6526, 0.22 ) }
    dend_2 { pt3dadd( 80.9239, 3.78859, 61.3632, 0.22 ) }
    dend_2 { pt3dadd( 81.0808, 3.87559, 61.7281, 0.22 ) }
    dend_2 { pt3dadd( 81.4604, 3.99074, 62.4967, 0.15 ) }
    dend_2 { pt3dadd( 81.8461, 4.04023, 63.2107, 0.81 ) }
    dend_2 { pt3dadd( 82.7395, 4.00541, 64.6397, 0.22 ) }
    dend_2 { pt3dadd( 83.4829, 3.92288, 65.6959, 0.22 ) }
    dend_2 { pt3dadd( 84.1516, 3.7862, 66.5211, 1.62 ) }
    dend_2 { pt3dadd( 84.9131, 3.57354, 67.3669, 0.15 ) }
    dend_2 { pt3dadd( 85.4831, 3.3889, 67.938, 0.96 ) }
    dend_2 { pt3dadd( 86.9255, 2.92717, 69.1632, 0.07 ) }
    dend_2 { pt3dadd( 87.8748, 2.64661, 69.8731, 0.59 ) }
    dend_2 { pt3dadd( 89.1477, 2.33401, 70.7854, 0.07 ) }
    dend_2 { pt3dadd( 90.0661, 2.15317, 71.4506, 0.07 ) }
    dend_2 { pt3dadd( 90.6466, 2.05852, 71.8733, 1.25 ) }
    dend_2 { pt3dadd( 92.4419, 1.87704, 73.1482, 0.07 ) }
    dend_2 { pt3dadd( 93.3755, 1.85585, 73.7679, 0.81 ) }
    dend_2 { pt3dadd( 94.8604, 1.93694, 74.7218, 0.07 ) }
    dend_2 { pt3dadd( 95.3177, 2.01188, 75.0198, 0.07 ) }
    dend_2 { pt3dadd( 95.8782, 2.15838, 75.395, 1.03 ) }
    dend_2 { pt3dadd( 97.0546, 2.53106, 76.2065, 0.07 ) }
    dend_2 { pt3dadd( 98.1353, 2.98816, 76.9797, 0.07 ) }
    dend_2 { pt3dadd( 99.2976, 3.55446, 77.7771, 0.07 ) }
    dend_2 { pt3dadd( 100.017, 3.9746, 78.2468, 0.66 ) }
    dend_2 { pt3dadd( 100.517, 4.28445, 78.5847, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 65/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.42458, 39.3425, 0.0, 0.181551 ) }
    axon_1 { pt3dadd( 13.1052, 53.8839, 0.0, 0.181551 ) }
    axon_1 { pt3dadd( 16.7858, 68.4253, 0.0, 0.181551 ) }
    // Section: dend_56, id: dend_56, parent: dend_38 (entry count 68/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -3.19316, 34.2714, 20.1035, 0.22 ) }
    dend_56 { pt3dadd( -4.63593, 34.8563, 21.4821, 0.22 ) }
    dend_56 { pt3dadd( -5.17448, 35.1874, 22.0114, 0.22 ) }
    dend_56 { pt3dadd( -5.57687, 35.5757, 22.5184, 0.15 ) }
    dend_56 { pt3dadd( -5.89258, 35.9759, 23.0279, 0.15 ) }
    dend_56 { pt3dadd( -6.10616, 36.2838, 23.3825, 0.15 ) }
    dend_56 { pt3dadd( -6.43594, 36.9191, 24.0422, 0.66 ) }
    dend_56 { pt3dadd( -6.68244, 37.502, 24.6043, 0.22 ) }
    dend_56 { pt3dadd( -7.0828, 38.4011, 25.4942, 0.22 ) }
    dend_56 { pt3dadd( -7.39802, 39.1003, 26.2023, 1.62 ) }
    dend_56 { pt3dadd( -7.77314, 39.9478, 27.1015, 3.1 ) }
    dend_56 { pt3dadd( -8.78296, 42.0682, 29.4959, 0.29 ) }
    dend_56 { pt3dadd( -9.20969, 42.8676, 30.4682, 0.22 ) }
    dend_56 { pt3dadd( -9.41995, 43.2182, 30.9009, 0.22 ) }
    dend_56 { pt3dadd( -9.47849, 43.313, 31.0129, 0.22 ) }
    dend_56 { pt3dadd( -9.73175, 43.7219, 31.5005, 0.22 ) }
    dend_56 { pt3dadd( -10.0055, 44.1415, 32.0561, 0.22 ) }
    dend_56 { pt3dadd( -10.4504, 44.6328, 32.8021, 0.22 ) }
    dend_56 { pt3dadd( -10.8955, 45.2067, 33.588, 0.88 ) }
    dend_56 { pt3dadd( -11.1375, 45.5416, 33.9993, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 88/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -3.19316, 34.2714, 20.1035, 0.22 ) }
    dend_39 { pt3dadd( -0.994341, 35.0055, 20.3676, 0.22 ) }
    dend_39 { pt3dadd( 0.0241819, 35.3455, 20.4899, 0.37 ) }
    dend_39 { pt3dadd( 0.90903, 35.641, 20.5961, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -2.75141, 62.662, 6.08018, 0.15 ) }
    dend_35 { pt3dadd( -3.47503, 64.4915, 6.00757, 0.15 ) }
    dend_35 { pt3dadd( -3.85509, 65.4587, 6.01661, 0.81 ) }
    dend_35 { pt3dadd( -4.1508, 66.2003, 5.99265, 1.18 ) }
    dend_35 { pt3dadd( -4.7707, 67.7367, 5.91397, 0.22 ) }
    dend_35 { pt3dadd( -5.08784, 68.5717, 5.86454, 0.81 ) }
    dend_35 { pt3dadd( -5.27553, 69.1091, 5.8462, 0.81 ) }
    dend_35 { pt3dadd( -5.60745, 70.2871, 5.90225, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_35 { pt3dadd( -5.89316, 71.5489, 5.98998, 0.07 ) }
    dend_35 { pt3dadd( -6.01054, 72.2153, 6.03531, 0.96 ) }
    dend_35 { pt3dadd( -6.15909, 73.2555, 6.08947, 1.92 ) }
    dend_35 { pt3dadd( -6.37205, 74.6565, 6.17988, 0.22 ) }
    dend_35 { pt3dadd( -6.4709, 75.4055, 6.25552, 0.22 ) }
    dend_35 { pt3dadd( -6.54751, 76.0838, 6.3484, 0.22 ) }
    dend_35 { pt3dadd( -6.61462, 76.7219, 6.46894, 0.81 ) }
    dend_35 { pt3dadd( -6.70671, 77.4871, 6.617, 1.11 ) }
    dend_35 { pt3dadd( -6.97037, 79.1549, 6.92161, 0.15 ) }
    dend_35 { pt3dadd( -7.18921, 80.3874, 7.10278, 0.15 ) }
    dend_35 { pt3dadd( -7.28561, 80.9128, 7.16942, 0.74 ) }
    dend_35 { pt3dadd( -7.44826, 81.9981, 7.29485, 1.92 ) }
    dend_35 { pt3dadd( -7.50326, 82.5051, 7.34474, 2.88 ) }
    dend_35 { pt3dadd( -7.58095, 83.6141, 7.46249, 1.84 ) }
    dend_35 { pt3dadd( -7.63408, 85.3501, 7.66597, 0.22 ) }
    dend_35 { pt3dadd( -7.65317, 86.4794, 7.80281, 0.59 ) }
    dend_35 { pt3dadd( -7.64685, 87.2456, 7.89286, 0.59 ) }
    dend_35 { pt3dadd( -7.61453, 88.2313, 7.98863, 0.22 ) }
    dend_35 { pt3dadd( -7.55159, 89.3287, 8.06464, 0.22 ) }
    dend_35 { pt3dadd( -7.49521, 90.1356, 8.08261, 0.22 ) }
    dend_35 { pt3dadd( -7.49322, 90.9737, 8.03606, 0.15 ) }
    dend_35 { pt3dadd( -7.58997, 92.0278, 7.88158, 0.15 ) }
    dend_35 { pt3dadd( -7.73428, 92.8627, 7.67995, 0.88 ) }
    dend_35 { pt3dadd( -7.96895, 93.929, 7.33396, 1.77 ) }
    dend_35 { pt3dadd( -8.16454, 94.7222, 7.03827, 1.77 ) }
    dend_35 { pt3dadd( -8.64001, 96.2801, 6.43723, 0.15 ) }
    dend_35 { pt3dadd( -8.90609, 97.0387, 6.15093, 0.37 ) }
    dend_35 { pt3dadd( -9.15912, 97.7308, 5.91622, 0.96 ) }
    dend_35 { pt3dadd( -9.45997, 98.5706, 5.70173, 1.77 ) }
    dend_35 { pt3dadd( -9.91715, 99.941, 5.46947, 0.29 ) }
    dend_35 { pt3dadd( -10.3201, 101.355, 5.33087, 0.15 ) }
    dend_35 { pt3dadd( -10.3985, 101.731, 5.31682, 0.52 ) }
    dend_35 { pt3dadd( -10.5696, 102.554, 5.30978, 1.18 ) }
    dend_35 { pt3dadd( -10.869, 103.919, 5.33559, 0.15 ) }
    dend_35 { pt3dadd( -11.0519, 104.751, 5.3665, 0.15 ) }
    dend_35 { pt3dadd( -11.1867, 105.495, 5.41546, 1.03 ) }
    dend_35 { pt3dadd( -11.3357, 106.929, 5.56851, 2.8 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -2.75141, 62.662, 6.08018, 0.22 ) }
    dend_34 { pt3dadd( -2.44687, 63.8044, 6.6482, 0.22 ) }
    dend_34 { pt3dadd( -2.16957, 64.8998, 7.21352, 0.22 ) }
    dend_34 { pt3dadd( -1.95164, 65.7412, 7.64344, 0.96 ) }
    dend_34 { pt3dadd( -1.77218, 66.3563, 7.95361, 1.18 ) }
    dend_34 { pt3dadd( -1.4044, 67.4463, 8.48359, 0.15 ) }
    dend_34 { pt3dadd( -1.14325, 68.1005, 8.80188, 0.15 ) }
    dend_34 { pt3dadd( -0.926742, 68.5506, 9.00391, 0.15 ) }
    dend_34 { pt3dadd( -0.672677, 69.0625, 9.19001, 0.15 ) }
    dend_34 { pt3dadd( -0.413025, 69.6525, 9.33693, 0.15 ) }
    dend_34 { pt3dadd( -0.137441, 70.3527, 9.4401, 1.33 ) }
    dend_34 { pt3dadd( 0.193828, 71.2629, 9.48497, 2.73 ) }
    dend_34 { pt3dadd( 0.448312, 72.1087, 9.48143, 3.1 ) }
    dend_34 { pt3dadd( 0.96319, 74.5466, 9.36458, 0.22 ) }
    dend_34 { pt3dadd( 1.12045, 75.6474, 9.284, 0.15 ) }
    dend_34 { pt3dadd( 1.18668, 76.4074, 9.2168, 0.52 ) }
    dend_34 { pt3dadd( 1.22622, 77.1113, 9.14767, 0.74 ) }
    dend_34 { pt3dadd( 1.27936, 78.5574, 8.99328, 0.22 ) }
    dend_34 { pt3dadd( 1.31126, 79.403, 8.91711, 1.18 ) }
    dend_34 { pt3dadd( 1.35248, 80.1676, 8.8775, 2.58 ) }
    dend_34 { pt3dadd( 1.49432, 82.0596, 8.88001, 0.22 ) }
    dend_34 { pt3dadd( 1.56043, 82.8474, 8.90609, 0.22 ) }
    dend_34 { pt3dadd( 1.62639, 83.675, 8.94704, 0.81 ) }
    dend_34 { pt3dadd( 1.72407, 85.0229, 9.02938, 2.51 ) }
    dend_34 { pt3dadd( 1.85047, 87.3408, 9.19084, 0.22 ) }
    dend_34 { pt3dadd( 1.866, 88.3309, 9.26338, 0.29 ) }
    dend_34 { pt3dadd( 1.81957, 89.4271, 9.34266, 0.15 ) }
    dend_34 { pt3dadd( 1.7271, 90.5397, 9.41602, 0.15 ) }
    dend_34 { pt3dadd( 1.61293, 91.4154, 9.46565, 1.03 ) }
    dend_34 { pt3dadd( 1.46542, 92.1681, 9.49666, 1.99 ) }
    dend_34 { pt3dadd( 1.22029, 92.9958, 9.51046, 1.99 ) }
    dend_34 { pt3dadd( 0.536268, 94.8384, 9.50019, 0.15 ) }
    dend_34 { pt3dadd( 0.201505, 95.5947, 9.47957, 0.15 ) }
    dend_34 { pt3dadd( -0.120973, 96.2469, 9.43953, 0.15 ) }
    dend_34 { pt3dadd( -0.388744, 96.7301, 9.39374, 0.44 ) }
    dend_34 { pt3dadd( -1.181, 97.9658, 9.23901, 0.15 ) }
    dend_34 { pt3dadd( -1.85849, 98.8793, 9.09616, 1.47 ) }
    dend_34 { pt3dadd( -2.48567, 99.5858, 8.9648, 2.51 ) }
    dend_34 { pt3dadd( -3.55879, 100.673, 8.75258, 0.37 ) }
    dend_34 { pt3dadd( -4.16518, 101.243, 8.6297, 0.22 ) }
    dend_34 { pt3dadd( -4.71768, 101.711, 8.51288, 0.07 ) }
    dend_34 { pt3dadd( -5.25165, 102.1, 8.41258, 0.29 ) }
    dend_34 { pt3dadd( -6.26947, 102.736, 8.2586, 0.07 ) }
    dend_34 { pt3dadd( -7.1396, 103.245, 8.14987, 0.44 ) }
    dend_34 { pt3dadd( -8.35387, 103.91, 8.01389, 0.07 ) }
    dend_34 { pt3dadd( -9.35297, 104.451, 7.88726, 0.15 ) }
    dend_34 { pt3dadd( -10.0184, 104.804, 7.75449, 0.74 ) }
    dend_34 { pt3dadd( -10.9015, 105.252, 7.56407, 1.84 ) }
    dend_34 { pt3dadd( -12.2987, 105.906, 7.2352, 0.15 ) }
    dend_34 { pt3dadd( -13.0589, 106.241, 7.04379, 0.59 ) }
    dend_34 { pt3dadd( -13.6642, 106.498, 6.88211, 0.29 ) }
    dend_34 { pt3dadd( -14.9964, 107.093, 6.4466, 1.03 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -20.7881, -23.3964, -26.7824, 1.47 ) }
    dend_31 { pt3dadd( -22.3735, -23.8679, -27.1611, 1.47 ) }
    dend_31 { pt3dadd( -23.991, -24.4643, -27.7959, 0.52 ) }
    dend_31 { pt3dadd( -24.7463, -24.8218, -28.19, 0.52 ) }
    dend_31 { pt3dadd( -25.4717, -25.1651, -28.5685, 1.11 ) }
    dend_31 { pt3dadd( -26.2745, -25.5451, -28.9874, 2.21 ) }
    dend_31 { pt3dadd( -27.013, -25.8946, -29.3728, 1.11 ) }
    dend_31 { pt3dadd( -28.223, -26.65, -30.2536, 0.44 ) }
    dend_31 { pt3dadd( -28.8974, -27.241, -30.9123, 1.47 ) }
    dend_31 { pt3dadd( -37.8343, -31.1585, -33.2628, 1.47 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -20.7881, -23.3964, -26.7824, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( -20.7315, -25.5855, -27.6175, 0.22 ) }
    dend_28 { pt3dadd( -20.7292, -26.3086, -27.9053, 0.22 ) }
    dend_28 { pt3dadd( -20.7307, -27.1825, -28.2437, 0.96 ) }
    dend_28 { pt3dadd( -20.7222, -28.4444, -28.7615, 0.22 ) }
    dend_28 { pt3dadd( -20.6974, -29.3047, -29.1482, 0.22 ) }
    dend_28 { pt3dadd( -20.6779, -29.981, -29.4522, 0.81 ) }
    dend_28 { pt3dadd( -20.6629, -30.6779, -29.7894, 1.92 ) }
    dend_28 { pt3dadd( -20.6395, -31.5149, -30.1918, 0.81 ) }
    dend_28 { pt3dadd( -20.5889, -32.57, -30.7565, 0.15 ) }
    dend_28 { pt3dadd( -20.5246, -33.3589, -31.2387, 0.66 ) }
    dend_28 { pt3dadd( -19.7285, -41.8534, -36.7783, 0.66 ) }
    dend_28 { pt3dadd( -19.9477, -51.2707, -40.7204, 0.66 ) }
    dend_28 { pt3dadd( -20.4554, -60.2913, -45.4418, 0.66 ) }
    dend_28 { pt3dadd( -22.174, -69.7193, -48.9691, 0.66 ) }
    dend_28 { pt3dadd( -24.8045, -78.9091, -52.5325, 0.66 ) }
    dend_28 { pt3dadd( -25.5371, -88.8287, -54.9418, 0.66 ) }
    dend_28 { pt3dadd( -25.1938, -99.0417, -55.7189, 0.66 ) }
    dend_28 { pt3dadd( -25.4756, -109.256, -54.9282, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.2172, -125.176, 22.5536, 0.37 ) }
    dend_20 { pt3dadd( -6.95447, -126.822, 23.2161, 0.37 ) }
    dend_20 { pt3dadd( -6.32224, -127.909, 23.6433, 0.22 ) }
    dend_20 { pt3dadd( -6.0404, -128.551, 23.8992, 0.22 ) }
    dend_20 { pt3dadd( -5.77154, -129.346, 24.2198, 0.22 ) }
    dend_20 { pt3dadd( -5.57154, -130.075, 24.5029, 0.29 ) }
    dend_20 { pt3dadd( -5.38724, -130.996, 24.8225, 0.29 ) }
    dend_20 { pt3dadd( -5.38829, -131.783, 25.054, 0.22 ) }
    dend_20 { pt3dadd( -5.44797, -132.543, 25.2605, 0.81 ) }
    dend_20 { pt3dadd( -5.52032, -133.27, 25.4567, 1.77 ) }
    dend_20 { pt3dadd( -5.59076, -134.011, 25.649, 2.43 ) }
    dend_20 { pt3dadd( -5.67235, -135.489, 25.9869, 0.96 ) }
    dend_20 { pt3dadd( -5.72247, -137.563, 26.4364, 0.22 ) }
    dend_20 { pt3dadd( -5.75413, -138.374, 26.6067, 1.18 ) }
    dend_20 { pt3dadd( -5.82538, -139.291, 26.7948, 1.7 ) }
    dend_20 { pt3dadd( -5.8709, -139.682, 26.8748, 1.7 ) }
    dend_20 { pt3dadd( -6.07367, -140.947, 27.166, 0.74 ) }
    dend_20 { pt3dadd( -6.30771, -142.173, 27.4671, 0.29 ) }
    dend_20 { pt3dadd( -6.54751, -143.335, 27.741, 0.29 ) }
    dend_20 { pt3dadd( -6.70817, -144.212, 27.9585, 0.29 ) }
    dend_20 { pt3dadd( -6.85861, -144.929, 28.1393, 0.66 ) }
    dend_20 { pt3dadd( -7.04225, -145.743, 28.3595, 1.47 ) }
    dend_20 { pt3dadd( -7.21272, -146.468, 28.5772, 2.73 ) }
    dend_20 { pt3dadd( -7.32134, -147.14, 28.781, 2.88 ) }
    dend_20 { pt3dadd( -7.32642, -148.868, 29.3302, 1.84 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 43/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.2172, -125.176, 22.5536, 0.22 ) }
    dend_15 { pt3dadd( -10.0613, -126.041, 22.8141, 0.22 ) }
    dend_15 { pt3dadd( -11.0326, -126.514, 22.9148, 0.22 ) }
    dend_15 { pt3dadd( -11.4683, -126.766, 22.945, 0.22 ) }
    dend_15 { pt3dadd( -11.7986, -126.982, 22.9616, 0.22 ) }
    dend_15 { pt3dadd( -12.313, -127.341, 22.9973, 0.29 ) }
    dend_15 { pt3dadd( -12.7044, -127.615, 23.0268, 0.96 ) }
    dend_15 { pt3dadd( -13.5276, -128.211, 23.0322, 1.84 ) }
    dend_15 { pt3dadd( -14.6997, -129.072, 22.9722, 0.22 ) }
    dend_15 { pt3dadd( -15.3967, -129.571, 22.9225, 0.22 ) }
    dend_15 { pt3dadd( -16.1708, -130.062, 22.8566, 0.96 ) }
    dend_15 { pt3dadd( -17.1186, -130.548, 22.7803, 0.22 ) }
    dend_15 { pt3dadd( -18.0568, -130.848, 22.698, 0.22 ) }
    dend_15 { pt3dadd( -18.4254, -130.899, 22.6635, 0.22 ) }
    dend_15 { pt3dadd( -19.2149, -130.915, 22.5983, 0.22 ) }
    dend_15 { pt3dadd( -20.1704, -130.918, 22.5321, 0.29 ) }
    dend_15 { pt3dadd( -20.8356, -130.947, 22.4955, 1.25 ) }
    dend_15 { pt3dadd( -22.0182, -131.068, 22.4762, 2.88 ) }
    dend_15 { pt3dadd( -22.515, -131.138, 22.4833, 2.73 ) }
    dend_15 { pt3dadd( -24.5225, -131.565, 22.5085, 0.29 ) }
    dend_15 { pt3dadd( -25.3065, -131.806, 22.5163, 0.66 ) }
    dend_15 { pt3dadd( -26.3504, -132.191, 22.5202, 0.29 ) }
    dend_15 { pt3dadd( -26.9659, -132.429, 22.5045, 0.22 ) }
    dend_15 { pt3dadd( -27.7805, -132.733, 22.4726, 0.22 ) }
    dend_15 { pt3dadd( -28.6217, -133.006, 22.4156, 0.22 ) }
    dend_15 { pt3dadd( -29.9266, -133.345, 22.2844, 0.22 ) }
    dend_15 { pt3dadd( -30.5072, -133.436, 22.2002, 0.37 ) }
    dend_15 { pt3dadd( -31.506, -133.541, 22.0316, 0.37 ) }
    dend_15 { pt3dadd( -32.424, -133.601, 21.854, 0.66 ) }
    dend_15 { pt3dadd( -33.0309, -133.618, 21.7247, 1.62 ) }
    dend_15 { pt3dadd( -33.739, -133.553, 21.5538, 2.51 ) }
    dend_15 { pt3dadd( -34.9611, -133.283, 21.2165, 2.73 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.14763, -83.8856, 19.9136, 3.24 ) }
    dend_13 { pt3dadd( 8.31456, -85.1254, 19.9633, 3.24 ) }
    dend_13 { pt3dadd( 8.48409, -86.1943, 20.0012, 3.24 ) }
    dend_13 { pt3dadd( 8.87433, -88.3757, 20.0712, 0.22 ) }
    dend_13 { pt3dadd( 9.14684, -89.7672, 20.1115, 0.29 ) }
    dend_13 { pt3dadd( 9.3018, -90.5092, 20.1311, 0.22 ) }
    dend_13 { pt3dadd( 9.50173, -91.4106, 20.1525, 0.22 ) }
    dend_13 { pt3dadd( 9.64353, -91.9728, 20.1529, 0.22 ) }
    dend_13 { pt3dadd( 9.76019, -92.3964, 20.1537, 0.22 ) }
    dend_13 { pt3dadd( 9.95152, -93.0755, 20.1557, 0.74 ) }
    dend_13 { pt3dadd( 10.0658, -93.5441, 20.1574, 0.74 ) }
    dend_13 { pt3dadd( 10.1812, -94.3487, 20.1815, 0.22 ) }
    dend_13 { pt3dadd( 10.2247, -95.0581, 20.2267, 0.22 ) }
    dend_13 { pt3dadd( 10.279, -96.044, 20.2862, 0.22 ) }
    dend_13 { pt3dadd( 10.3241, -96.6897, 20.2921, 0.22 ) }
    dend_13 { pt3dadd( 10.4096, -97.5913, 20.267, 0.22 ) }
    dend_13 { pt3dadd( 10.5443, -98.5244, 20.2143, 1.33 ) }
    dend_13 { pt3dadd( 10.7697, -99.73, 20.1095, 3.02 ) }
    dend_13 { pt3dadd( 11.1555, -101.274, 19.932, 0.88 ) }
    dend_13 { pt3dadd( 11.587, -102.747, 19.7639, 0.22 ) }
    dend_13 { pt3dadd( 11.8209, -103.493, 19.6856, 0.22 ) }
    dend_13 { pt3dadd( 12.1474, -104.501, 19.5943, 0.22 ) }
    dend_13 { pt3dadd( 12.3387, -105.117, 19.5584, 1.18 ) }
    dend_13 { pt3dadd( 12.689, -106.34, 19.5698, 2.06 ) }
    dend_13 { pt3dadd( 13.1125, -108.06, 19.7564, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 13.2547, -108.873, 19.9275, 0.52 ) }
    dend_13 { pt3dadd( 13.3376, -109.572, 20.1127, 0.52 ) }
    dend_13 { pt3dadd( 13.4614, -110.894, 20.5194, 0.22 ) }
    dend_13 { pt3dadd( 13.512, -111.473, 20.7177, 0.22 ) }
    dend_13 { pt3dadd( 13.6143, -112.77, 21.2004, 1.99 ) }
    dend_13 { pt3dadd( 13.8275, -114.979, 22.0353, 0.29 ) }
    dend_13 { pt3dadd( 13.8913, -115.696, 22.3032, 0.22 ) }
    dend_13 { pt3dadd( 13.9944, -116.907, 22.7424, 0.22 ) }
    dend_13 { pt3dadd( 14.0526, -117.521, 22.9465, 1.03 ) }
    dend_13 { pt3dadd( 14.1234, -118.246, 23.1669, 2.14 ) }
    dend_13 { pt3dadd( 14.1982, -118.93, 23.3608, 2.06 ) }
    dend_13 { pt3dadd( 14.3916, -120.632, 23.8217, 0.22 ) }
    dend_13 { pt3dadd( 14.4528, -121.386, 24.0171, 0.66 ) }
    dend_13 { pt3dadd( 14.5359, -122.961, 24.4057, 0.22 ) }
    dend_13 { pt3dadd( 14.5779, -123.977, 24.6384, 0.22 ) }
    dend_13 { pt3dadd( 14.6087, -124.643, 24.7645, 0.66 ) }
    dend_13 { pt3dadd( 14.664, -125.643, 24.9229, 0.22 ) }
    dend_13 { pt3dadd( 14.727, -126.544, 25.0407, 1.55 ) }
    dend_13 { pt3dadd( 14.7767, -127.287, 25.1256, 2.8 ) }
    dend_13 { pt3dadd( 14.8287, -128.036, 25.1937, 2.58 ) }
    dend_13 { pt3dadd( 15.0649, -130.555, 25.332, 0.22 ) }
    dend_13 { pt3dadd( 15.1184, -131.337, 25.3772, 0.22 ) }
    dend_13 { pt3dadd( 15.1505, -132.012, 25.4072, 0.59 ) }
    dend_13 { pt3dadd( 15.1749, -132.618, 25.4388, 0.29 ) }
    dend_13 { pt3dadd( 15.1964, -133.402, 25.4836, 1.03 ) }
    dend_13 { pt3dadd( 15.2145, -134.342, 25.5288, 2.06 ) }
    dend_13 { pt3dadd( 15.1985, -136.236, 25.5898, 0.15 ) }
    dend_13 { pt3dadd( 15.1971, -136.714, 25.5931, 0.15 ) }
    dend_13 { pt3dadd( 15.2142, -137.768, 25.5728, 0.29 ) }
    dend_13 { pt3dadd( 15.2338, -138.484, 25.5523, 0.15 ) }
    dend_13 { pt3dadd( 15.2619, -139.302, 25.5224, 0.15 ) }
    dend_13 { pt3dadd( 15.3003, -139.994, 25.5074, 0.96 ) }
    dend_13 { pt3dadd( 15.3599, -140.716, 25.4896, 2.06 ) }
    dend_13 { pt3dadd( 15.4272, -141.705, 25.502, 2.14 ) }
    dend_13 { pt3dadd( 15.529, -144.043, 25.6024, 0.22 ) }
    dend_13 { pt3dadd( 15.5346, -144.797, 25.6803, 0.22 ) }
    dend_13 { pt3dadd( 15.5191, -145.84, 25.8435, 0.22 ) }
    dend_13 { pt3dadd( 15.5107, -146.147, 25.9065, 0.59 ) }
    dend_13 { pt3dadd( 15.4743, -146.911, 26.0927, 1.4 ) }
    dend_13 { pt3dadd( 15.4325, -147.71, 26.3077, 0.66 ) }
    dend_13 { pt3dadd( 15.3617, -149.352, 26.7847, 0.22 ) }
    dend_13 { pt3dadd( 15.2994, -150.154, 26.9975, 0.22 ) }
    dend_13 { pt3dadd( 15.2393, -150.759, 27.1378, 0.22 ) }
    dend_13 { pt3dadd( 15.18, -151.417, 27.2801, 1.03 ) }
    dend_13 { pt3dadd( 15.1202, -152.41, 27.4676, 2.21 ) }
    dend_13 { pt3dadd( 15.0636, -154.521, 27.8389, 0.15 ) }
    dend_13 { pt3dadd( 15.0789, -155.791, 28.0267, 0.15 ) }
    dend_13 { pt3dadd( 15.0921, -156.311, 28.1001, 0.81 ) }
    dend_13 { pt3dadd( 15.114, -157.053, 28.2, 1.33 ) }
    dend_13 { pt3dadd( 15.1452, -158.164, 28.349, 0.22 ) }
    dend_13 { pt3dadd( 15.1733, -159.28, 28.4921, 0.22 ) }
    dend_13 { pt3dadd( 15.1949, -159.972, 28.5733, 0.88 ) }
    dend_13 { pt3dadd( 15.2162, -160.583, 28.6555, 0.66 ) }
    dend_13 { pt3dadd( 15.2627, -161.961, 28.8775, 0.15 ) }
    dend_13 { pt3dadd( 15.3052, -162.974, 29.0596, 0.15 ) }
    dend_13 { pt3dadd( 15.3309, -163.353, 29.1335, 0.74 ) }
    dend_13 { pt3dadd( 15.4073, -164.118, 29.2826, 1.18 ) }
    dend_13 { pt3dadd( 15.6131, -165.659, 29.5972, 0.22 ) }
    dend_13 { pt3dadd( 15.7801, -166.548, 29.7962, 0.22 ) }
    dend_13 { pt3dadd( 15.9259, -167.104, 29.9162, 0.22 ) }
    dend_13 { pt3dadd( 16.1024, -167.665, 30.0382, 0.22 ) }
    dend_13 { pt3dadd( 16.3378, -168.366, 30.1826, 0.22 ) }
    dend_13 { pt3dadd( 16.5879, -169.141, 30.3307, 1.33 ) }
    dend_13 { pt3dadd( 16.8499, -170.04, 30.4886, 2.21 ) }
    dend_13 { pt3dadd( 17.2563, -171.644, 30.7435, 0.15 ) }
    dend_13 { pt3dadd( 17.4402, -172.3, 30.8553, 0.29 ) }
    dend_13 { pt3dadd( 17.5411, -172.618, 30.9119, 0.29 ) }
    dend_13 { pt3dadd( 17.9022, -173.625, 31.1053, 0.15 ) }
    dend_13 { pt3dadd( 18.0068, -173.921, 31.1628, 0.15 ) }
    dend_13 { pt3dadd( 18.2145, -174.578, 31.2801, 0.66 ) }
    dend_13 { pt3dadd( 18.5532, -175.741, 31.5109, 0.15 ) }
    dend_13 { pt3dadd( 18.6763, -176.201, 31.5947, 0.15 ) }
    dend_13 { pt3dadd( 18.7751, -176.535, 31.6657, 0.15 ) }
    dend_13 { pt3dadd( 19.0275, -177.308, 31.8611, 0.15 ) }
    dend_13 { pt3dadd( 19.1806, -177.8, 31.9933, 0.37 ) }
    dend_13 { pt3dadd( 19.3802, -178.51, 32.1816, 1.03 ) }
    dend_13 { pt3dadd( 19.5806, -179.27, 32.3825, 0.22 ) }
    dend_13 { pt3dadd( 19.8829, -180.338, 32.6639, 0.22 ) }
    dend_13 { pt3dadd( 20.1639, -181.25, 32.8971, 1.4 ) }
    dend_13 { pt3dadd( 20.4251, -182.047, 33.0867, 2.14 ) }
    dend_13 { pt3dadd( 20.7006, -182.91, 33.2842, 1.4 ) }
    dend_13 { pt3dadd( 21.1683, -184.551, 33.628, 0.22 ) }
    dend_13 { pt3dadd( 21.294, -185.066, 33.7253, 0.81 ) }
    dend_13 { pt3dadd( 21.4202, -185.718, 33.8333, 1.55 ) }
    dend_13 { pt3dadd( 21.6228, -186.985, 34.0319, 0.29 ) }
    dend_13 { pt3dadd( 21.7694, -188.099, 34.2092, 0.22 ) }
    dend_13 { pt3dadd( 21.8478, -188.856, 34.3241, 0.22 ) }
    dend_13 { pt3dadd( 21.8893, -189.627, 34.4202, 0.29 ) }
    dend_13 { pt3dadd( 21.9094, -190.506, 34.5347, 0.15 ) }
    dend_13 { pt3dadd( 21.9143, -191.177, 34.6217, 0.96 ) }
    dend_13 { pt3dadd( 21.9147, -191.64, 34.6768, 1.47 ) }
    dend_13 { pt3dadd( 21.9258, -192.333, 34.7398, 1.47 ) }
    dend_13 { pt3dadd( 21.9925, -193.55, 34.8385, 0.22 ) }
    dend_13 { pt3dadd( 22.1091, -194.745, 34.9334, 0.22 ) }
    dend_13 { pt3dadd( 22.2032, -195.415, 34.9774, 0.88 ) }
    dend_13 { pt3dadd( 22.3668, -196.311, 35.031, 0.88 ) }
    dend_13 { pt3dadd( 22.6711, -197.709, 35.1182, 0.15 ) }
    dend_13 { pt3dadd( 22.9285, -198.657, 35.1798, 0.15 ) }
    dend_13 { pt3dadd( 23.146, -199.34, 35.2223, 0.81 ) }
    dend_13 { pt3dadd( 23.5196, -200.432, 35.3215, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( 23.7627, -201.135, 35.4128, 0.81 ) }
    dend_13 { pt3dadd( 24.049, -201.981, 35.5495, 0.52 ) }
    dend_13 { pt3dadd( 24.2799, -202.742, 35.6924, 1.62 ) }
    dend_13 { pt3dadd( 24.4697, -203.532, 35.8565, 1.62 ) }
    dend_13 { pt3dadd( 24.7602, -205.143, 36.1796, 0.22 ) }
    dend_13 { pt3dadd( 24.8826, -206.043, 36.3486, 0.22 ) }
    dend_13 { pt3dadd( 24.9369, -206.579, 36.4299, 0.74 ) }
    dend_13 { pt3dadd( 24.9817, -207.181, 36.5034, 0.29 ) }
    dend_13 { pt3dadd( 25.0229, -208.052, 36.5996, 1.47 ) }
    dend_13 { pt3dadd( 25.0545, -208.656, 36.659, 1.47 ) }
    dend_13 { pt3dadd( 25.1192, -210.082, 36.7615, 0.15 ) }
    dend_13 { pt3dadd( 25.1798, -210.775, 36.842, 0.52 ) }
    dend_13 { pt3dadd( 25.3022, -211.744, 36.9828, 0.15 ) }
    dend_13 { pt3dadd( 25.4174, -212.473, 37.1036, 0.15 ) }
    dend_13 { pt3dadd( 25.4862, -212.878, 37.1759, 0.66 ) }
    dend_13 { pt3dadd( 25.6164, -213.619, 37.3171, 1.47 ) }
    dend_13 { pt3dadd( 25.9153, -215.266, 37.6384, 0.22 ) }
    dend_13 { pt3dadd( 26.0854, -216.165, 37.7976, 0.15 ) }
    dend_13 { pt3dadd( 26.2001, -216.754, 37.8752, 0.15 ) }
    dend_13 { pt3dadd( 26.3435, -217.503, 37.9609, 0.74 ) }
    dend_13 { pt3dadd( 26.5383, -218.633, 38.0743, 0.15 ) }
    dend_13 { pt3dadd( 26.6646, -219.381, 38.1393, 0.15 ) }
    dend_13 { pt3dadd( 26.8328, -220.59, 38.226, 0.22 ) }
    dend_13 { pt3dadd( 26.9337, -221.391, 38.2957, 1.18 ) }
    dend_13 { pt3dadd( 27.0447, -222.327, 38.3906, 1.7 ) }
    dend_13 { pt3dadd( 27.2851, -224.276, 38.6184, 0.22 ) }
    dend_13 { pt3dadd( 27.3822, -225.033, 38.7137, 0.22 ) }
    dend_13 { pt3dadd( 27.4845, -225.743, 38.8098, 0.15 ) }
    dend_13 { pt3dadd( 27.6424, -226.762, 38.9652, 0.15 ) }
    dend_13 { pt3dadd( 27.7163, -227.345, 39.0693, 0.44 ) }
    dend_13 { pt3dadd( 27.8811, -228.956, 39.369, 0.15 ) }
    dend_13 { pt3dadd( 27.9154, -229.47, 39.481, 0.88 ) }
    dend_13 { pt3dadd( 27.9382, -230.196, 39.6487, 1.7 ) }
    dend_13 { pt3dadd( 27.9467, -231.004, 39.836, 1.4 ) }
    dend_13 { pt3dadd( 27.9224, -232.884, 40.2478, 0.15 ) }
    dend_13 { pt3dadd( 27.9136, -233.263, 40.3262, 0.22 ) }
    dend_13 { pt3dadd( 27.8653, -234.594, 40.5837, 0.07 ) }
    dend_13 { pt3dadd( 27.8455, -235.272, 40.7023, 1.33 ) }
    dend_13 { pt3dadd( 27.8317, -235.869, 40.7968, 1.33 ) }
    dend_13 { pt3dadd( 27.8443, -236.963, 40.9537, 0.07 ) }
    dend_13 { pt3dadd( 27.902, -237.767, 41.0412, 0.15 ) }
    dend_13 { pt3dadd( 27.9612, -238.304, 41.0892, 0.15 ) }
    dend_13 { pt3dadd( 28.0417, -238.846, 41.1258, 0.22 ) }
    dend_13 { pt3dadd( 28.2045, -239.877, 41.1924, 0.07 ) }
    dend_13 { pt3dadd( 28.26, -240.255, 41.2162, 0.66 ) }
    dend_13 { pt3dadd( 28.3373, -240.863, 41.2507, 0.29 ) }
    dend_13 { pt3dadd( 28.5023, -242.295, 41.318, 0.15 ) }
    dend_13 { pt3dadd( 28.5515, -242.665, 41.3363, 0.22 ) }
    dend_13 { pt3dadd( 28.6537, -243.422, 41.3814, 0.07 ) }
    dend_13 { pt3dadd( 28.7446, -244.097, 41.4341, 0.74 ) }
    dend_13 { pt3dadd( 28.8696, -245.156, 41.5438, 0.15 ) }
    dend_13 { pt3dadd( 28.9211, -245.674, 41.6091, 0.59 ) }
    dend_13 { pt3dadd( 29.0232, -247.073, 41.7978, 0.15 ) }
    dend_13 { pt3dadd( 29.0617, -247.664, 41.8923, 0.29 ) }
    dend_13 { pt3dadd( 29.1002, -248.406, 42.009, 0.15 ) }
    dend_13 { pt3dadd( 29.1203, -249.003, 42.1014, 0.88 ) }
    dend_13 { pt3dadd( 29.1262, -249.522, 42.1781, 1.92 ) }
    dend_13 { pt3dadd( 29.1091, -251.778, 42.4896, 0.22 ) }
    dend_13 { pt3dadd( 29.0882, -252.935, 42.6319, 1.7 ) }
    dend_13 { pt3dadd( 29.0433, -255.481, 42.9139, 0.15 ) }
    dend_13 { pt3dadd( 29.0141, -256.56, 43.0183, 0.15 ) }
    dend_13 { pt3dadd( 28.9877, -257.233, 43.0791, 0.81 ) }
    dend_13 { pt3dadd( 28.9124, -258.752, 43.2007, 0.22 ) }
    dend_13 { pt3dadd( 28.8688, -259.614, 43.256, 1.25 ) }
    dend_13 { pt3dadd( 28.8488, -260.083, 43.2803, 1.84 ) }
    dend_13 { pt3dadd( 28.7858, -262.211, 43.4127, 0.15 ) }
    dend_13 { pt3dadd( 28.7812, -262.761, 43.448, 0.29 ) }
    dend_13 { pt3dadd( 28.8083, -263.741, 43.5362, 0.07 ) }
    dend_13 { pt3dadd( 28.8362, -264.347, 43.6028, 0.15 ) }
    dend_13 { pt3dadd( 28.9185, -265.784, 43.7899, 0.15 ) }
    dend_13 { pt3dadd( 28.9474, -266.17, 43.846, 0.52 ) }
    dend_13 { pt3dadd( 29.0001, -266.719, 43.9336, 1.4 ) }
    dend_13 { pt3dadd( 29.0971, -268.297, 44.2255, 0.07 ) }
    dend_13 { pt3dadd( 29.1263, -269.422, 44.4541, 0.15 ) }
    dend_13 { pt3dadd( 29.1132, -269.94, 44.576, 0.74 ) }
    dend_13 { pt3dadd( 29.0829, -270.461, 44.7084, 1.92 ) }
    dend_13 { pt3dadd( 29.0286, -271.257, 44.9368, 1.92 ) }
    dend_13 { pt3dadd( 28.8826, -273.327, 45.5927, 0.15 ) }
    dend_13 { pt3dadd( 28.8395, -274.052, 45.8621, 0.59 ) }
    dend_13 { pt3dadd( 28.8253, -275.24, 46.3805, 0.07 ) }
    dend_13 { pt3dadd( 28.8329, -275.515, 46.5149, 0.15 ) }
    dend_13 { pt3dadd( 28.8982, -276.434, 46.9946, 0.15 ) }
    dend_13 { pt3dadd( 28.9702, -277.075, 47.3389, 0.37 ) }
    dend_13 { pt3dadd( 29.1033, -277.875, 47.7527, 0.96 ) }
    dend_13 { pt3dadd( 29.2683, -278.607, 48.0802, 1.47 ) }
    dend_13 { pt3dadd( 29.6228, -279.878, 48.5889, 0.15 ) }
    dend_13 { pt3dadd( 29.8368, -280.597, 48.8475, 0.15 ) }
    dend_13 { pt3dadd( 30.0047, -281.151, 49.0161, 1.11 ) }
    dend_13 { pt3dadd( 30.1762, -281.722, 49.164, 1.7 ) }
    dend_13 { pt3dadd( 30.6553, -283.444, 49.5088, 0.15 ) }
    dend_13 { pt3dadd( 30.816, -284.054, 49.6113, 0.81 ) }
    dend_13 { pt3dadd( 31.0076, -284.774, 49.7113, 1.03 ) }
    dend_13 { pt3dadd( 31.5185, -286.497, 49.9372, 0.15 ) }
    dend_13 { pt3dadd( 31.7324, -287.143, 50.025, 0.22 ) }
    dend_13 { pt3dadd( 32.0166, -288.001, 50.1329, 0.07 ) }
    dend_13 { pt3dadd( 32.1919, -288.576, 50.1962, 0.88 ) }
    dend_13 { pt3dadd( 32.3895, -289.254, 50.2723, 1.62 ) }
    dend_13 { pt3dadd( 32.8714, -290.85, 50.4764, 0.15 ) }
    dend_13 { pt3dadd( 33.1384, -291.633, 50.5795, 1.33 ) }
    dend_13 { pt3dadd( 33.6745, -293.112, 50.787, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 33.8287, -293.563, 50.8583, 0.22 ) }
    dend_13 { pt3dadd( 34.2583, -295.001, 51.1173, 0.07 ) }
    dend_13 { pt3dadd( 34.4083, -295.562, 51.2389, 0.96 ) }
    dend_13 { pt3dadd( 34.7552, -297.054, 51.5999, 0.15 ) }
    dend_13 { pt3dadd( 34.9151, -297.724, 51.7777, 1.11 ) }
    dend_13 { pt3dadd( 35.4419, -299.77, 52.3579, 0.15 ) }
    dend_13 { pt3dadd( 35.6839, -300.665, 52.597, 1.11 ) }
    dend_13 { pt3dadd( 35.9044, -301.476, 52.7934, 1.47 ) }
    dend_13 { pt3dadd( 36.3895, -303.408, 53.2202, 0.15 ) }
    dend_13 { pt3dadd( 36.5593, -304.096, 53.3501, 0.88 ) }
    dend_13 { pt3dadd( 36.7753, -304.932, 53.4653, 1.33 ) }
    dend_13 { pt3dadd( 37.2533, -306.803, 53.5867, 0.15 ) }
    dend_13 { pt3dadd( 37.4757, -307.794, 53.5798, 0.96 ) }
    dend_13 { pt3dadd( 37.8054, -309.685, 53.4408, 0.15 ) }
    dend_13 { pt3dadd( 37.8776, -310.455, 53.3469, 0.15 ) }
    dend_13 { pt3dadd( 37.8938, -311.278, 53.2425, 0.74 ) }
    dend_13 { pt3dadd( 37.794, -312.528, 53.089, 0.44 ) }
    dend_13 { pt3dadd( 37.6463, -313.379, 52.9894, 1.11 ) }
    dend_13 { pt3dadd( 37.4894, -314.023, 52.9236, 1.7 ) }
    dend_13 { pt3dadd( 36.8248, -316.324, 52.7423, 0.15 ) }
    dend_13 { pt3dadd( 36.4451, -317.506, 52.6855, 1.33 ) }
    dend_13 { pt3dadd( 36.0594, -318.633, 52.6722, 0.15 ) }
    dend_13 { pt3dadd( 35.9047, -319.075, 52.6865, 0.74 ) }
    dend_13 { pt3dadd( 35.7188, -319.614, 52.732, 1.4 ) }
    dend_13 { pt3dadd( 35.482, -320.322, 52.816, 0.74 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.14763, -83.8856, 19.9136, 1.03 ) }
    dend_12 { pt3dadd( 8.42294, -84.957, 25.1932, 1.03 ) }
    dend_12 { pt3dadd( 8.51271, -85.1283, 26.2939, 1.03 ) }
    dend_12 { pt3dadd( 8.62682, -85.253, 27.3056, 1.03 ) }
    dend_12 { pt3dadd( 8.75669, -85.3757, 28.2811, 1.03 ) }
    dend_12 { pt3dadd( 8.88298, -85.47, 29.0022, 1.03 ) }
    dend_12 { pt3dadd( 9.09516, -85.609, 29.9697, 1.03 ) }
    dend_12 { pt3dadd( 9.41124, -85.6857, 30.5198, 0.88 ) }
    dend_12 { pt3dadd( 9.68257, -85.7758, 31.0101, 0.88 ) }
    dend_12 { pt3dadd( 9.97732, -85.9993, 31.7241, 0.44 ) }
    dend_12 { pt3dadd( 10.1776, -86.4281, 32.4805, 0.59 ) }
    dend_12 { pt3dadd( 10.2764, -86.7938, 33.0274, 0.22 ) }
    dend_12 { pt3dadd( 10.4966, -87.5071, 34.3394, 0.22 ) }
    dend_12 { pt3dadd( 10.6779, -87.9685, 35.412, 0.44 ) }
    dend_12 { pt3dadd( 10.7981, -88.1599, 36.0622, 1.4 ) }
    dend_12 { pt3dadd( 11.0563, -88.3532, 37.2458, 2.14 ) }
    dend_12 { pt3dadd( 11.5449, -88.4256, 38.94, 0.59 ) }
    dend_12 { pt3dadd( 12.5132, -88.2691, 41.4157, 0.59 ) }
    dend_12 { pt3dadd( 12.948, -88.1388, 42.188, 0.44 ) }
    dend_12 { pt3dadd( 13.8396, -87.8085, 43.418, 0.81 ) }
    dend_12 { pt3dadd( 14.6402, -87.458, 44.366, 1.99 ) }
    dend_12 { pt3dadd( 15.9338, -86.8418, 45.6215, 0.22 ) }
    dend_12 { pt3dadd( 16.5896, -86.5439, 46.1374, 1.03 ) }
    dend_12 { pt3dadd( 17.5851, -86.1431, 46.7856, 0.22 ) }
    dend_12 { pt3dadd( 18.715, -85.7484, 47.4944, 0.96 ) }
    dend_12 { pt3dadd( 19.457, -85.5123, 47.9486, 1.92 ) }
    dend_12 { pt3dadd( 21.1312, -85.0148, 49.1515, 0.22 ) }
    dend_12 { pt3dadd( 21.7956, -84.8001, 49.7197, 0.22 ) }
    dend_12 { pt3dadd( 22.173, -84.6685, 50.0725, 0.22 ) }
    dend_12 { pt3dadd( 22.8207, -84.428, 50.7074, 1.11 ) }
    dend_12 { pt3dadd( 23.6462, -84.107, 51.5155, 2.58 ) }
    dend_12 { pt3dadd( 25.2465, -83.4186, 53.0934, 1.11 ) }
    dend_12 { pt3dadd( 26.002, -83.055, 53.8537, 0.44 ) }
    dend_12 { pt3dadd( 26.6762, -82.744, 54.5477, 0.44 ) }
    dend_12 { pt3dadd( 27.0814, -82.5779, 54.9923, 0.22 ) }
    dend_12 { pt3dadd( 27.4386, -82.4685, 55.3909, 0.22 ) }
    dend_12 { pt3dadd( 27.7905, -82.404, 55.7865, 0.22 ) }
    dend_12 { pt3dadd( 28.3724, -82.3706, 56.4799, 1.4 ) }
    dend_12 { pt3dadd( 29.3247, -82.4513, 57.8832, 0.37 ) }
    dend_12 { pt3dadd( 29.9423, -82.6063, 59.1789, 0.29 ) }
    dend_12 { pt3dadd( 30.3144, -82.8265, 60.2697, 0.29 ) }
    dend_12 { pt3dadd( 30.3705, -82.8918, 60.4917, 0.29 ) }
    dend_12 { pt3dadd( 30.4792, -83.2384, 61.2841, 0.29 ) }
    dend_12 { pt3dadd( 30.5125, -83.6622, 62.0363, 0.29 ) }
    dend_12 { pt3dadd( 30.5138, -84.4278, 63.1567, 0.59 ) }
    dend_12 { pt3dadd( 30.4848, -85.0485, 63.9335, 1.84 ) }
    dend_12 { pt3dadd( 30.4334, -85.6358, 64.6105, 2.06 ) }
    dend_12 { pt3dadd( 30.2946, -86.9963, 66.0687, 0.52 ) }
    dend_12 { pt3dadd( 30.19, -87.8191, 66.8507, 0.22 ) }
    dend_12 { pt3dadd( 30.0652, -88.5818, 67.506, 0.22 ) }
    dend_12 { pt3dadd( 29.944, -89.0832, 67.8926, 0.22 ) }
    dend_12 { pt3dadd( 29.7975, -89.412, 68.1554, 0.52 ) }
    dend_12 { pt3dadd( 29.4959, -89.8204, 68.5198, 0.81 ) }
    dend_12 { pt3dadd( 28.5495, -90.5941, 69.4002, 0.22 ) }
    dend_12 { pt3dadd( 27.8385, -90.9796, 70.0066, 1.47 ) }
    dend_12 { pt3dadd( 27.3519, -91.1638, 70.4182, 1.92 ) }
    dend_12 { pt3dadd( 26.2581, -91.4457, 71.3738, 0.44 ) }
    dend_12 { pt3dadd( 25.7378, -91.517, 71.8396, 0.22 ) }
    dend_12 { pt3dadd( 25.1363, -91.4894, 72.3899, 0.81 ) }
    dend_12 { pt3dadd( 24.1766, -91.2857, 73.2944, 0.22 ) }
    dend_12 { pt3dadd( 23.6851, -91.1514, 73.7657, 0.22 ) }
    dend_12 { pt3dadd( 23.4341, -91.0856, 74.0192, 0.22 ) }
    dend_12 { pt3dadd( 22.9673, -91.0019, 74.5098, 0.59 ) }
    dend_12 { pt3dadd( 22.0028, -90.9199, 75.5702, 0.37 ) }
    dend_12 { pt3dadd( 21.4026, -90.916, 76.2701, 0.37 ) }
    dend_12 { pt3dadd( 20.9357, -90.9219, 76.9086, 0.37 ) }
    dend_12 { pt3dadd( 20.6211, -90.9361, 77.4595, 0.37 ) }
    dend_12 { pt3dadd( 20.3195, -91.0286, 78.2161, 0.37 ) }
    dend_12 { pt3dadd( 20.1825, -91.1957, 78.8097, 0.37 ) }
    dend_12 { pt3dadd( 20.1051, -91.4034, 79.3398, 0.37 ) }
    dend_12 { pt3dadd( 20.0035, -91.6318, 80.0319, 0.37 ) }
    dend_12 { pt3dadd( 19.7201, -91.7213, 80.7394, 0.37 ) }
    dend_12 { pt3dadd( 19.1677, -91.7842, 81.3354, 0.37 ) }
    dend_12 { pt3dadd( 18.4508, -91.8252, 81.8201, 0.37 ) }
    dend_12 { pt3dadd( 17.736, -91.8053, 82.1625, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( 17.3503, -91.7678, 82.2931, 0.37 ) }
    dend_12 { pt3dadd( 15.7882, -91.4584, 82.7131, 0.29 ) }
    dend_12 { pt3dadd( 14.2215, -90.9061, 83.0665, 0.22 ) }
    dend_12 { pt3dadd( 13.7284, -90.6887, 83.1661, 0.22 ) }
    dend_12 { pt3dadd( 12.7317, -90.2064, 83.3939, 0.15 ) }
    dend_12 { pt3dadd( 12.0316, -89.8742, 83.5931, 0.59 ) }
    dend_12 { pt3dadd( 11.3701, -89.5683, 83.8027, 0.29 ) }
    dend_12 { pt3dadd( 10.7732, -89.3239, 84.0266, 0.88 ) }
    dend_12 { pt3dadd( 9.79582, -88.9897, 84.4625, 0.96 ) }
    dend_12 { pt3dadd( 8.3933, -88.6551, 85.0768, 0.22 ) }
    dend_12 { pt3dadd( 7.55597, -88.5361, 85.4323, 1.33 ) }
    dend_12 { pt3dadd( 7.00171, -88.4966, 85.6573, 1.4 ) }
    dend_12 { pt3dadd( 5.66724, -88.5043, 86.1497, 0.15 ) }
    dend_12 { pt3dadd( 5.3106, -88.5411, 86.2894, 0.15 ) }
    dend_12 { pt3dadd( 4.83308, -88.6226, 86.4921, 0.15 ) }
    dend_12 { pt3dadd( 4.48135, -88.7161, 86.6443, 0.15 ) }
    dend_12 { pt3dadd( 4.24834, -88.7801, 86.7516, 0.81 ) }
    dend_12 { pt3dadd( 3.88679, -88.8362, 86.9307, 0.81 ) }
    dend_12 { pt3dadd( 2.65963, -88.8866, 87.5823, 0.22 ) }
    dend_12 { pt3dadd( 1.97068, -88.8336, 87.9383, 0.22 ) }
    dend_12 { pt3dadd( 1.30711, -88.7345, 88.2682, 1.11 ) }
    dend_12 { pt3dadd( 0.66482, -88.5889, 88.5703, 1.62 ) }
    dend_12 { pt3dadd( -0.758771, -88.1446, 89.1767, 0.22 ) }
    dend_12 { pt3dadd( -1.58251, -87.7954, 89.4799, 1.11 ) }
    dend_12 { pt3dadd( -2.66852, -87.224, 89.7895, 0.22 ) }
    dend_12 { pt3dadd( -3.41901, -86.8089, 89.9593, 0.22 ) }
    dend_12 { pt3dadd( -3.78682, -86.5948, 90.0263, 1.03 ) }
    dend_12 { pt3dadd( -4.49332, -86.1709, 90.1172, 1.03 ) }
    dend_12 { pt3dadd( -5.444, -85.5824, 90.1825, 0.22 ) }
    dend_12 { pt3dadd( -6.3823, -84.9594, 90.2075, 0.52 ) }
    dend_12 { pt3dadd( -7.40719, -84.2174, 90.2215, 0.15 ) }
    dend_12 { pt3dadd( -7.77642, -83.916, 90.2208, 0.15 ) }
    dend_12 { pt3dadd( -8.04621, -83.6686, 90.2368, 0.52 ) }
    dend_12 { pt3dadd( -8.42537, -83.2833, 90.2755, 1.18 ) }
    dend_12 { pt3dadd( -9.51694, -82.0551, 90.4275, 0.22 ) }
    dend_12 { pt3dadd( -10.0119, -81.3665, 90.4789, 1.03 ) }
    dend_12 { pt3dadd( -10.2851, -80.9011, 90.4887, 1.99 ) }
    dend_12 { pt3dadd( -11.234, -79.0018, 90.451, 0.29 ) }
    dend_12 { pt3dadd( -11.4533, -78.465, 90.4047, 0.96 ) }
    dend_12 { pt3dadd( -11.7182, -77.6371, 90.2767, 1.7 ) }
    dend_12 { pt3dadd( -12.0669, -75.9083, 89.8866, 0.22 ) }
    dend_12 { pt3dadd( -12.1579, -75.0797, 89.6347, 0.22 ) }
    dend_12 { pt3dadd( -12.1688, -74.3914, 89.3679, 0.96 ) }
    dend_12 { pt3dadd( -12.0445, -73.2045, 88.812, 0.07 ) }
    dend_12 { pt3dadd( -11.9179, -72.4855, 88.4497, 0.74 ) }
    dend_12 { pt3dadd( -11.6643, -71.5334, 87.9376, 0.22 ) }
    dend_12 { pt3dadd( -11.3161, -70.5911, 87.4415, 0.22 ) }
    dend_12 { pt3dadd( -10.837, -69.7711, 87.0566, 0.66 ) }
    dend_12 { pt3dadd( -10.014, -68.7505, 86.6449, 0.07 ) }
    dend_12 { pt3dadd( -9.41675, -68.1838, 86.4643, 0.22 ) }
    dend_12 { pt3dadd( -8.57202, -67.5206, 86.3284, 0.07 ) }
    dend_12 { pt3dadd( -7.70938, -66.9267, 86.2511, 1.11 ) }
    dend_12 { pt3dadd( -5.36204, -65.4998, 86.2436, 0.07 ) }
    dend_12 { pt3dadd( -4.81863, -65.2064, 86.2839, 0.07 ) }
    dend_12 { pt3dadd( -4.42825, -65.021, 86.342, 0.29 ) }
    dend_12 { pt3dadd( -3.38341, -64.5503, 86.5717, 0.07 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 56/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 37.3961, 17.8993, 41.9402, 0.22 ) }
    dend_7 { pt3dadd( 37.7515, 18.5128, 42.7635, 0.22 ) }
    dend_7 { pt3dadd( 38.1065, 18.984, 43.513, 0.22 ) }
    dend_7 { pt3dadd( 38.4238, 19.3261, 44.1298, 0.52 ) }
    dend_7 { pt3dadd( 38.8826, 19.7624, 44.9475, 1.7 ) }
    dend_7 { pt3dadd( 39.3163, 20.0751, 45.6088, 2.06 ) }
    dend_7 { pt3dadd( 40.2487, 20.6222, 46.9497, 0.52 ) }
    dend_7 { pt3dadd( 40.9499, 20.9761, 47.9208, 0.66 ) }
    dend_7 { pt3dadd( 41.5895, 21.2706, 48.7591, 2.14 ) }
    dend_7 { pt3dadd( 41.969, 21.4448, 49.2436, 2.65 ) }
    dend_7 { pt3dadd( 43.3095, 22.0927, 50.921, 0.29 ) }
    dend_7 { pt3dadd( 43.9037, 22.386, 51.7183, 0.22 ) }
    dend_7 { pt3dadd( 44.5516, 22.6995, 52.6348, 0.22 ) }
    dend_7 { pt3dadd( 45.0479, 22.92, 53.3841, 1.25 ) }
    dend_7 { pt3dadd( 45.774, 23.2164, 54.5419, 0.15 ) }
    dend_7 { pt3dadd( 46.4535, 23.4832, 55.6486, 0.81 ) }
    dend_7 { pt3dadd( 47.2858, 23.8143, 56.8915, 1.4 ) }
    dend_7 { pt3dadd( 47.8871, 24.0274, 57.6557, 2.21 ) }
    dend_7 { pt3dadd( 49.4339, 24.4692, 59.3262, 0.22 ) }
    dend_7 { pt3dadd( 50.1846, 24.6423, 60.0183, 0.88 ) }
    dend_7 { pt3dadd( 50.884, 24.7782, 60.5644, 1.18 ) }
    dend_7 { pt3dadd( 52.3581, 25.0749, 61.4971, 0.22 ) }
    dend_7 { pt3dadd( 53.0354, 25.2368, 61.8292, 0.59 ) }
    dend_7 { pt3dadd( 53.6666, 25.407, 62.0725, 1.11 ) }
    dend_7 { pt3dadd( 54.6973, 25.6885, 62.3872, 0.15 ) }
    dend_7 { pt3dadd( 55.1076, 25.8003, 62.5224, 0.15 ) }
    dend_7 { pt3dadd( 55.4834, 25.9249, 62.685, 0.15 ) }
    dend_7 { pt3dadd( 55.8246, 26.064, 62.8901, 0.37 ) }
    dend_7 { pt3dadd( 56.3029, 26.3206, 63.2663, 0.66 ) }
    dend_7 { pt3dadd( 57.3908, 26.9902, 64.2574, 0.15 ) }
    dend_7 { pt3dadd( 58.1483, 27.4863, 65.0473, 1.62 ) }
    dend_7 { pt3dadd( 58.9148, 27.9724, 65.9114, 0.29 ) }
    dend_7 { pt3dadd( 59.7164, 28.453, 66.8839, 1.18 ) }
    dend_7 { pt3dadd( 60.8124, 29.0394, 68.3002, 0.22 ) }
    dend_7 { pt3dadd( 61.5448, 29.3713, 69.2861, 0.52 ) }
    dend_7 { pt3dadd( 62.4495, 29.6912, 70.5079, 1.25 ) }
    dend_7 { pt3dadd( 63.1574, 29.8794, 71.4802, 2.14 ) }
    dend_7 { pt3dadd( 64.3458, 30.0474, 73.1346, 0.59 ) }
    dend_7 { pt3dadd( 65.095, 30.077, 74.1908, 0.59 ) }
    dend_7 { pt3dadd( 65.8286, 30.0383, 75.2039, 0.22 ) }
    dend_7 { pt3dadd( 66.6775, 29.9804, 76.3782, 1.55 ) }
    dend_7 { pt3dadd( 67.1005, 29.9664, 76.9612, 1.55 ) }
    dend_7 { pt3dadd( 68.2223, 30.0579, 78.5424, 0.22 ) }
    dend_7 { pt3dadd( 68.5639, 30.1362, 79.0446, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_7 { pt3dadd( 69.0421, 30.3263, 79.6905, 0.22 ) }
    dend_7 { pt3dadd( 69.5058, 30.5771, 80.3224, 0.96 ) }
    dend_7 { pt3dadd( 70.0103, 30.9438, 81.0071, 1.25 ) }
    dend_7 { pt3dadd( 70.9054, 31.762, 82.163, 0.22 ) }
    dend_7 { pt3dadd( 71.6079, 32.5732, 82.9933, 0.22 ) }
    dend_7 { pt3dadd( 72.3825, 33.4844, 83.8885, 2.73 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 37.3961, 17.8993, 41.9402, 0.22 ) }
    dend_4 { pt3dadd( 37.9984, 16.4031, 42.4562, 0.22 ) }
    dend_4 { pt3dadd( 38.2921, 15.7509, 42.6363, 0.37 ) }
    dend_4 { pt3dadd( 38.793, 14.7698, 42.8956, 0.66 ) }
    dend_4 { pt3dadd( 39.3677, 13.6773, 43.2611, 0.66 ) }
    dend_4 { pt3dadd( 39.8853, 12.704, 43.664, 0.15 ) }
    dend_4 { pt3dadd( 40.3177, 11.882, 44.0619, 1.47 ) }
    dend_4 { pt3dadd( 40.8786, 10.7819, 44.5785, 3.24 ) }
    dend_4 { pt3dadd( 41.2452, 10.099, 44.9322, 3.24 ) }
    dend_4 { pt3dadd( 42.4357, 8.07025, 46.1358, 0.29 ) }
    dend_4 { pt3dadd( 42.9054, 7.2887, 46.6667, 0.44 ) }
    dend_4 { pt3dadd( 43.5074, 6.25899, 47.4206, 2.14 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 18/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -11.1375, 45.5416, 33.9993, 0.22 ) }
    dend_60 { pt3dadd( -12.4159, 46.5861, 34.2226, 0.22 ) }
    dend_60 { pt3dadd( -13.0214, 47.0852, 34.3236, 1.55 ) }
    dend_60 { pt3dadd( -13.8716, 47.7488, 34.3806, 3.1 ) }
    dend_60 { pt3dadd( -15.4432, 48.924, 34.3703, 0.15 ) }
    dend_60 { pt3dadd( -15.9993, 49.3217, 34.3309, 0.66 ) }
    dend_60 { pt3dadd( -16.9251, 49.9508, 34.2237, 0.15 ) }
    dend_60 { pt3dadd( -17.6495, 50.3765, 34.072, 1.18 ) }
    dend_60 { pt3dadd( -19.0106, 51.0651, 33.6978, 0.07 ) }
    dend_60 { pt3dadd( -19.7799, 51.3948, 33.4496, 0.07 ) }
    dend_60 { pt3dadd( -20.4138, 51.6359, 33.2223, 0.07 ) }
    dend_60 { pt3dadd( -21.1154, 51.8703, 32.9823, 0.96 ) }
    dend_60 { pt3dadd( -22.486, 52.2804, 32.5506, 0.15 ) }
    dend_60 { pt3dadd( -23.5555, 52.6022, 32.2626, 0.15 ) }
    dend_60 { pt3dadd( -24.1982, 52.8035, 32.1495, 1.03 ) }
    dend_60 { pt3dadd( -24.8667, 53.0081, 32.069, 1.99 ) }
    dend_60 { pt3dadd( -26.1622, 53.3863, 32.0399, 0.15 ) }
    dend_60 { pt3dadd( -26.721, 53.5348, 32.0681, 0.15 ) }
    dend_60 { pt3dadd( -27.1196, 53.625, 32.1149, 0.15 ) }
    dend_60 { pt3dadd( -27.7619, 53.7482, 32.2242, 0.88 ) }
    dend_60 { pt3dadd( -28.5549, 53.8554, 32.3594, 1.62 ) }
    dend_60 { pt3dadd( -30.2311, 54.0054, 32.6595, 0.15 ) }
    dend_60 { pt3dadd( -30.8816, 54.0355, 32.7779, 0.15 ) }
    dend_60 { pt3dadd( -31.6131, 54.0458, 32.9002, 0.44 ) }
    dend_60 { pt3dadd( -32.4342, 54.0161, 33.0159, 0.15 ) }
    dend_60 { pt3dadd( -33.564, 53.9302, 33.1988, 0.22 ) }
    dend_60 { pt3dadd( -34.6366, 53.8023, 33.3995, 0.15 ) }
    dend_60 { pt3dadd( -34.8907, 53.7562, 33.4558, 0.74 ) }
    dend_60 { pt3dadd( -35.8011, 53.5609, 33.6954, 1.25 ) }
    dend_60 { pt3dadd( -37.2493, 53.2128, 34.1284, 0.22 ) }
    dend_60 { pt3dadd( -38.5127, 52.8659, 34.5549, 1.11 ) }
    dend_60 { pt3dadd( -39.0815, 52.681, 34.7645, 1.84 ) }
    dend_60 { pt3dadd( -40.2959, 52.1302, 35.2717, 0.15 ) }
    dend_60 { pt3dadd( -40.6959, 51.8943, 35.4652, 0.15 ) }
    dend_60 { pt3dadd( -41.1064, 51.6201, 35.6835, 0.15 ) }
    dend_60 { pt3dadd( -41.3905, 51.4074, 35.8451, 0.81 ) }
    dend_60 { pt3dadd( -42.1527, 50.7454, 36.246, 2.14 ) }
    dend_60 { pt3dadd( -43.3602, 49.483, 36.979, 0.22 ) }
    dend_60 { pt3dadd( -43.8759, 48.7742, 37.3458, 1.47 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 57/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -11.1375, 45.5416, 33.9993, 0.22 ) }
    dend_57 { pt3dadd( -11.7938, 47.1152, 35.5745, 0.22 ) }
    dend_57 { pt3dadd( -12.286, 48.2636, 36.6371, 0.22 ) }
    dend_57 { pt3dadd( -13.0402, 49.9302, 38.1178, 0.37 ) }
    dend_57 { pt3dadd( -13.3708, 50.5886, 38.7139, 0.37 ) }
    dend_57 { pt3dadd( -13.7978, 51.3869, 39.4474, 0.96 ) }
    dend_57 { pt3dadd( -14.2068, 52.1544, 40.1426, 0.15 ) }
    dend_57 { pt3dadd( -14.3989, 52.5317, 40.4636, 0.15 ) }
    dend_57 { pt3dadd( -14.5268, 52.7484, 40.6465, 0.22 ) }
    dend_57 { pt3dadd( -15.0293, 53.4663, 41.2191, 0.15 ) }
    dend_57 { pt3dadd( -15.4532, 54.023, 41.708, 1.03 ) }
    dend_57 { pt3dadd( -15.9948, 54.7688, 42.4222, 1.99 ) }
    dend_57 { pt3dadd( -16.6992, 55.9569, 43.6091, 0.22 ) }
    dend_57 { pt3dadd( -17.039, 56.7751, 44.3498, 0.15 ) }
    dend_57 { pt3dadd( -17.1366, 57.1304, 44.6497, 0.15 ) }
    dend_57 { pt3dadd( -17.2525, 57.8652, 45.2254, 1.18 ) }
    dend_57 { pt3dadd( -17.3544, 59.004, 46.0806, 0.15 ) }
    dend_57 { pt3dadd( -17.3891, 59.6852, 46.5893, 0.52 ) }
    dend_57 { pt3dadd( -17.4154, 60.6197, 47.2498, 0.22 ) }
    dend_57 { pt3dadd( -17.468, 61.5356, 47.8895, 1.33 ) }
    dend_57 { pt3dadd( -17.6016, 62.5565, 48.6354, 2.88 ) }
    dend_57 { pt3dadd( -18.0367, 64.3698, 50.0402, 0.22 ) }
    dend_57 { pt3dadd( -18.3075, 65.0339, 50.58, 0.22 ) }
    dend_57 { pt3dadd( -18.6942, 65.7538, 51.1994, 0.74 ) }
    dend_57 { pt3dadd( -19.1889, 66.5421, 51.9402, 0.15 ) }
    dend_57 { pt3dadd( -19.6085, 67.17, 52.558, 0.15 ) }
    dend_57 { pt3dadd( -19.9822, 67.6805, 53.1224, 0.15 ) }
    dend_57 { pt3dadd( -20.4092, 68.2039, 53.887, 0.74 ) }
    dend_57 { pt3dadd( -20.7514, 68.6447, 54.7076, 0.74 ) }
    dend_57 { pt3dadd( -20.9471, 68.8681, 55.423, 0.74 ) }
    dend_57 { pt3dadd( -21.097, 68.9844, 56.1904, 0.74 ) }
    dend_57 { pt3dadd( -21.1618, 69.0018, 56.4872, 0.74 ) }
    dend_57 { pt3dadd( -21.4623, 69.0156, 57.699, 0.74 ) }
    dend_57 { pt3dadd( -21.5602, 69.0061, 58.1191, 0.74 ) }
    dend_57 { pt3dadd( -21.8196, 68.9745, 59.2598, 0.74 ) }
    dend_57 { pt3dadd( -21.9428, 68.991, 60.0001, 0.74 ) }
    dend_57 { pt3dadd( -22.0427, 69.1367, 61.4024, 0.96 ) }
    dend_57 { pt3dadd( -22.0053, 69.3362, 62.4283, 0.96 ) }
    dend_57 { pt3dadd( -21.908, 69.5526, 63.151, 0.96 ) }
    dend_57 { pt3dadd( -21.7143, 69.8969, 64.1515, 0.96 ) }
    dend_57 { pt3dadd( -21.4216, 70.3874, 65.3785, 0.66 ) }
    dend_57 { pt3dadd( -21.0942, 70.9229, 66.624, 0.88 ) }
    dend_57 { pt3dadd( -20.7992, 71.5304, 67.9553, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_57 { pt3dadd( -20.5961, 72.2653, 69.4749, 0.37 ) }
    dend_57 { pt3dadd( -20.5724, 72.6358, 70.158, 0.37 ) }
    dend_57 { pt3dadd( -20.6036, 73.3633, 71.2995, 1.4 ) }
    dend_57 { pt3dadd( -20.6515, 73.7849, 71.8821, 1.62 ) }
    dend_57 { pt3dadd( -20.7805, 74.8762, 73.1942, 0.44 ) }
    dend_57 { pt3dadd( -20.8499, 75.6429, 74.0112, 0.44 ) }
    dend_57 { pt3dadd( -20.8545, 76.4701, 74.7966, 1.18 ) }
    dend_57 { pt3dadd( -20.7525, 77.6404, 75.8119, 0.22 ) }
    dend_57 { pt3dadd( -20.6306, 78.2427, 76.2986, 0.22 ) }
    dend_57 { pt3dadd( -20.4127, 78.9573, 76.8452, 1.25 ) }
    dend_57 { pt3dadd( -20.1441, 79.7073, 77.402, 1.92 ) }
    dend_57 { pt3dadd( -19.6278, 81.2955, 78.6539, 0.15 ) }
    dend_57 { pt3dadd( -19.4705, 81.9149, 79.192, 0.88 ) }
    dend_57 { pt3dadd( -19.3538, 82.6852, 79.9067, 1.92 ) }
    dend_57 { pt3dadd( -19.2821, 84.2021, 81.4244, 0.22 ) }
    dend_57 { pt3dadd( -19.3183, 84.9985, 82.3174, 0.74 ) }
    dend_57 { pt3dadd( -19.4335, 86.0576, 83.6194, 1.7 ) }
    dend_57 { pt3dadd( -19.5326, 86.8167, 84.6505, 0.07 ) }
    dend_57 { pt3dadd( -19.5552, 87.1996, 85.2021, 0.96 ) }
    dend_57 { pt3dadd( -19.5575, 88.1687, 86.6866, 0.07 ) }
    dend_57 { pt3dadd( -19.4965, 88.7694, 87.6587, 0.07 ) }
    dend_57 { pt3dadd( -19.3772, 89.218, 88.4022, 0.07 ) }
    dend_57 { pt3dadd( -19.1017, 89.8779, 89.6171, 0.37 ) }
    dend_57 { pt3dadd( -18.8465, 90.4179, 90.8434, 0.59 ) }
    dend_57 { pt3dadd( -18.7306, 90.6783, 91.554, 0.59 ) }
    dend_57 { pt3dadd( -18.6813, 90.8563, 92.1597, 0.59 ) }
    dend_57 { pt3dadd( -18.6973, 90.9621, 92.5227, 0.59 ) }
    dend_57 { pt3dadd( -18.8989, 91.4306, 93.8294, 0.15 ) }
    dend_57 { pt3dadd( -19.0902, 91.8541, 94.685, 0.07 ) }
    dend_57 { pt3dadd( -19.1844, 92.2084, 95.2256, 0.07 ) }
    dend_57 { pt3dadd( -19.249, 92.5504, 95.6661, 0.07 ) }
    dend_57 { pt3dadd( -19.376, 93.1428, 96.3395, 0.88 ) }
    dend_57 { pt3dadd( -19.6225, 94.099, 97.4112, 0.22 ) }
    dend_57 { pt3dadd( -19.8779, 94.8867, 98.3953, 0.22 ) }
    dend_57 { pt3dadd( -20.1788, 95.5714, 99.3927, 1.62 ) }
    dend_57 { pt3dadd( -20.5813, 96.1662, 100.481, 2.21 ) }
    dend_57 { pt3dadd( -21.3552, 96.9394, 102.38, 0.37 ) }
    dend_57 { pt3dadd( -21.8973, 97.2942, 103.701, 0.37 ) }
    dend_57 { pt3dadd( -22.6909, 97.5389, 105.689, 1.33 ) }
    dend_57 { pt3dadd( -22.9161, 97.52, 106.344, 1.77 ) }
    dend_57 { pt3dadd( -23.2918, 97.2784, 107.785, 0.29 ) }
    dend_57 { pt3dadd( -23.5252, 96.8909, 109.052, 0.29 ) }
    dend_57 { pt3dadd( -23.7145, 96.4674, 110.089, 0.59 ) }
    dend_57 { pt3dadd( -23.9412, 96.0079, 111.142, 1.18 ) }
    dend_57 { pt3dadd( -24.3748, 95.2859, 112.829, 0.37 ) }
    dend_57 { pt3dadd( -24.8941, 94.5526, 114.577, 1.03 ) }
    dend_57 { pt3dadd( -25.4004, 93.9827, 115.936, 1.4 ) }
    dend_57 { pt3dadd( -26.6579, 92.8811, 118.526, 0.07 ) }
    dend_57 { pt3dadd( -27.3559, 92.4039, 119.657, 0.59 ) }
    dend_57 { pt3dadd( -28.1953, 92.0178, 120.681, 0.15 ) }
    dend_57 { pt3dadd( -28.8245, 91.8316, 121.247, 0.15 ) }
    dend_57 { pt3dadd( -29.8437, 91.6171, 121.972, 0.15 ) }
    dend_57 { pt3dadd( -30.3484, 91.5466, 122.279, 1.03 ) }
    dend_57 { pt3dadd( -30.8769, 91.4868, 122.535, 1.4 ) }
    dend_57 { pt3dadd( -32.8076, 91.2838, 123.383, 0.15 ) }
    dend_57 { pt3dadd( -33.5118, 91.2197, 123.697, 0.15 ) }
    dend_57 { pt3dadd( -34.7512, 91.1064, 124.335, 0.15 ) }
    dend_57 { pt3dadd( -35.3741, 91.0354, 124.71, 1.11 ) }
    dend_57 { pt3dadd( -35.9581, 90.9586, 125.109, 1.62 ) }
    dend_57 { pt3dadd( -37.3389, 90.7677, 126.17, 0.29 ) }
    dend_57 { pt3dadd( -38.1783, 90.6619, 126.882, 0.07 ) }
    dend_57 { pt3dadd( -38.9753, 90.6252, 127.545, 0.07 ) }
    dend_57 { pt3dadd( -39.4707, 90.6306, 127.952, 0.88 ) }
    dend_57 { pt3dadd( -40.6224, 90.6876, 128.943, 0.07 ) }
    dend_57 { pt3dadd( -41.1742, 90.7467, 129.456, 0.22 ) }
    dend_57 { pt3dadd( -42.0996, 90.9349, 130.39, 0.07 ) }
    dend_57 { pt3dadd( -42.7586, 91.1325, 131.023, 1.77 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 0.90903, 35.641, 20.5961, 0.52 ) }
    dend_51 { pt3dadd( 3.58412, 34.9486, 18.5165, 0.52 ) }
    dend_51 { pt3dadd( 4.23647, 34.7182, 18.066, 2.21 ) }
    dend_51 { pt3dadd( 5.40287, 34.2059, 17.3154, 2.88 ) }
    dend_51 { pt3dadd( 7.3634, 33.1825, 16.1038, 0.96 ) }
    dend_51 { pt3dadd( 8.76092, 32.329, 15.2091, 0.15 ) }
    dend_51 { pt3dadd( 9.52411, 31.7939, 14.6622, 0.59 ) }
    dend_51 { pt3dadd( 10.2802, 31.1106, 14.1952, 0.15 ) }
    dend_51 { pt3dadd( 10.7744, 30.5928, 13.8804, 0.22 ) }
    dend_51 { pt3dadd( 11.1404, 30.1007, 13.613, 0.22 ) }
    dend_51 { pt3dadd( 11.743, 29.026, 13.0089, 0.22 ) }
    dend_51 { pt3dadd( 12.4266, 27.4903, 12.156, 1.11 ) }
    dend_51 { pt3dadd( 12.7275, 26.6388, 11.6841, 2.29 ) }
    dend_51 { pt3dadd( 12.8811, 26.0995, 11.3786, 2.58 ) }
    dend_51 { pt3dadd( 13.2884, 24.3732, 10.4036, 0.15 ) }
    dend_51 { pt3dadd( 13.4682, 23.3348, 9.86993, 0.15 ) }
    dend_51 { pt3dadd( 13.5406, 22.3806, 9.46927, 0.29 ) }
    dend_51 { pt3dadd( 13.5375, 21.6797, 9.22253, 1.03 ) }
    dend_51 { pt3dadd( 13.502, 20.9538, 8.97894, 1.99 ) }
    dend_51 { pt3dadd( 13.4698, 20.4263, 8.82129, 2.29 ) }
    dend_51 { pt3dadd( 13.3498, 18.6805, 8.44282, 0.44 ) }
    dend_51 { pt3dadd( 13.3007, 17.438, 8.23812, 0.29 ) }
    dend_51 { pt3dadd( 13.2909, 16.7663, 8.1582, 0.44 ) }
    dend_51 { pt3dadd( 13.2949, 16.1208, 8.10033, 0.52 ) }
    dend_51 { pt3dadd( 13.3209, 14.9548, 8.05152, 0.22 ) }
    dend_51 { pt3dadd( 13.3662, 14.1749, 8.05213, 0.22 ) }
    dend_51 { pt3dadd( 13.4375, 13.3319, 8.09968, 1.33 ) }
    dend_51 { pt3dadd( 13.5237, 12.5087, 8.17363, 2.29 ) }
    dend_51 { pt3dadd( 13.5864, 11.829, 8.25183, 2.29 ) }
    dend_51 { pt3dadd( 13.7618, 9.93842, 8.50945, 0.15 ) }
    dend_51 { pt3dadd( 13.823, 9.13747, 8.62805, 0.15 ) }
    dend_51 { pt3dadd( 13.8685, 8.49186, 8.71858, 0.15 ) }
    dend_51 { pt3dadd( 13.9042, 7.87288, 8.80664, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_51 { pt3dadd( 13.9534, 6.89993, 8.92262, 1.33 ) }
    dend_51 { pt3dadd( 13.9839, 6.14203, 8.95327, 1.03 ) }
    dend_51 { pt3dadd( 14.0095, 4.5291, 8.85144, 0.22 ) }
    dend_51 { pt3dadd( 14.0109, 3.75396, 8.74234, 0.22 ) }
    dend_51 { pt3dadd( 14.004, 2.99814, 8.57886, 0.66 ) }
    dend_51 { pt3dadd( 13.9956, 1.90845, 8.29492, 0.22 ) }
    dend_51 { pt3dadd( 13.9482, 0.509071, 7.87097, 0.29 ) }
    dend_51 { pt3dadd( 13.9048, -0.380138, 7.60466, 0.59 ) }
    dend_51 { pt3dadd( 13.8726, -1.05746, 7.37838, 1.33 ) }
    dend_51 { pt3dadd( 13.8116, -2.02829, 7.03589, 2.14 ) }
    dend_51 { pt3dadd( 13.6941, -3.69496, 6.4306, 0.22 ) }
    dend_51 { pt3dadd( 13.5999, -4.83608, 6.04981, 0.22 ) }
    dend_51 { pt3dadd( 13.5143, -5.80402, 5.84149, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 0.90903, 35.641, 20.5961, 0.52 ) }
    dend_40 { pt3dadd( 1.01342, 36.4032, 21.9258, 0.52 ) }
    dend_40 { pt3dadd( 1.20476, 36.8475, 23.1207, 0.52 ) }
    dend_40 { pt3dadd( 1.54269, 37.1835, 24.639, 0.52 ) }
    dend_40 { pt3dadd( 1.75264, 37.2571, 25.4374, 0.52 ) }
    dend_40 { pt3dadd( 2.30745, 37.3437, 27.2914, 0.81 ) }
    dend_40 { pt3dadd( 2.75931, 37.4146, 28.648, 1.18 ) }
    dend_40 { pt3dadd( 3.48666, 37.3855, 30.3423, 0.96 ) }
    dend_40 { pt3dadd( 4.05882, 37.3106, 31.5223, 1.25 ) }
    dend_40 { pt3dadd( 4.71585, 37.1688, 32.7707, 0.37 ) }
    dend_40 { pt3dadd( 5.14036, 37.1015, 33.4829, 0.37 ) }
    dend_40 { pt3dadd( 5.676, 37.0263, 34.3251, 0.15 ) }
    dend_40 { pt3dadd( 6.36301, 36.9874, 35.3108, 0.15 ) }
    dend_40 { pt3dadd( 7.17243, 37.111, 36.3503, 1.18 ) }
    dend_40 { pt3dadd( 7.65654, 37.2717, 36.9645, 2.43 ) }
    dend_40 { pt3dadd( 8.51403, 37.6115, 37.9846, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 29/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -11.3357, 106.929, 5.56851, 0.59 ) }
    dend_37 { pt3dadd( -11.6638, 108.509, 5.38555, 0.59 ) }
    dend_37 { pt3dadd( -12.0286, 109.899, 5.18973, 0.29 ) }
    dend_37 { pt3dadd( -12.4289, 111.205, 4.9912, 0.96 ) }
    dend_37 { pt3dadd( -12.7635, 112.198, 4.84577, 0.07 ) }
    dend_37 { pt3dadd( -13.1758, 113.265, 4.69738, 0.07 ) }
    dend_37 { pt3dadd( -13.4212, 113.869, 4.61754, 0.22 ) }
    dend_37 { pt3dadd( -13.7931, 114.601, 4.52995, 0.88 ) }
    dend_37 { pt3dadd( -14.0131, 115.034, 4.49423, 1.47 ) }
    dend_37 { pt3dadd( -14.5673, 116.267, 4.35568, 0.07 ) }
    dend_37 { pt3dadd( -14.8481, 117.088, 4.21958, 0.07 ) }
    dend_37 { pt3dadd( -14.9504, 117.522, 4.15226, 0.22 ) }
    dend_37 { pt3dadd( -15.0191, 117.851, 4.10806, 0.22 ) }
    dend_37 { pt3dadd( -15.1896, 118.759, 4.00987, 0.07 ) }
    dend_37 { pt3dadd( -15.2991, 119.583, 3.92676, 0.07 ) }
    dend_37 { pt3dadd( -15.346, 120.123, 3.85724, 0.66 ) }
    dend_37 { pt3dadd( -15.3925, 120.731, 3.75221, 0.66 ) }
    dend_37 { pt3dadd( -15.482, 121.714, 3.54923, 0.15 ) }
    dend_37 { pt3dadd( -15.5505, 122.479, 3.37619, 1.03 ) }
    dend_37 { pt3dadd( -15.6176, 123.283, 3.1839, 1.77 ) }
    dend_37 { pt3dadd( -15.6997, 124.787, 2.83237, 0.15 ) }
    dend_37 { pt3dadd( -15.7463, 125.799, 2.60913, 0.22 ) }
    dend_37 { pt3dadd( -15.7676, 126.213, 2.51355, 0.66 ) }
    dend_37 { pt3dadd( -15.8102, 126.695, 2.41773, 0.37 ) }
    dend_37 { pt3dadd( -15.9434, 127.527, 2.30664, 1.11 ) }
    dend_37 { pt3dadd( -16.1091, 128.18, 2.26895, 1.11 ) }
    dend_37 { pt3dadd( -16.6224, 129.709, 2.3148, 0.22 ) }
    dend_37 { pt3dadd( -16.9999, 130.604, 2.38367, 1.03 ) }
    dend_37 { pt3dadd( -17.5123, 131.636, 2.4783, 1.62 ) }
    dend_37 { pt3dadd( -18.0493, 132.588, 2.58434, 1.99 ) }
    dend_37 { pt3dadd( -18.5869, 133.47, 2.62917, 0.52 ) }
    dend_37 { pt3dadd( -19.3331, 134.634, 2.59128, 0.22 ) }
    dend_37 { pt3dadd( -20.0796, 135.79, 2.42906, 0.22 ) }
    dend_37 { pt3dadd( -20.445, 136.369, 2.27386, 0.88 ) }
    dend_37 { pt3dadd( -20.9561, 137.225, 1.86747, 1.55 ) }
    dend_37 { pt3dadd( -21.9755, 138.913, 0.799218, 0.15 ) }
    dend_37 { pt3dadd( -22.3761, 139.604, 0.312566, 0.22 ) }
    dend_37 { pt3dadd( -22.7079, 140.222, -0.130681, 0.07 ) }
    dend_37 { pt3dadd( -23.2071, 141.243, -0.84799, 1.33 ) }
    dend_37 { pt3dadd( -23.9353, 142.784, -1.79423, 0.07 ) }
    dend_37 { pt3dadd( -24.1655, 143.283, -2.09203, 0.37 ) }
    dend_37 { pt3dadd( -24.631, 144.303, -2.50204, 0.07 ) }
    dend_37 { pt3dadd( -25.1475, 145.464, -2.77528, 0.22 ) }
    dend_37 { pt3dadd( -25.624, 146.552, -2.78071, 1.55 ) }
    dend_37 { pt3dadd( -25.9652, 147.452, -2.46443, 1.55 ) }
    dend_37 { pt3dadd( -28.0155, 157.057, -5.29031, 1.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 75/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -11.3357, 106.929, 5.56851, 0.22 ) }
    dend_36 { pt3dadd( -12.5614, 108.576, 5.34081, 0.22 ) }
    dend_36 { pt3dadd( -13.1203, 109.371, 5.22245, 0.07 ) }
    dend_36 { pt3dadd( -13.727, 110.295, 5.07334, 1.11 ) }
    dend_36 { pt3dadd( -14.6105, 111.809, 4.82918, 0.07 ) }
    dend_36 { pt3dadd( -14.9766, 112.529, 4.71691, 0.07 ) }
    dend_36 { pt3dadd( -15.1518, 112.913, 4.66008, 0.52 ) }
    dend_36 { pt3dadd( -15.3893, 113.666, 4.55149, 1.47 ) }
    dend_36 { pt3dadd( -15.6301, 114.627, 4.42437, 0.07 ) }
    dend_36 { pt3dadd( -15.8042, 115.485, 4.31691, 0.15 ) }
    dend_36 { pt3dadd( -15.9238, 116.323, 4.23673, 0.88 ) }
    dend_36 { pt3dadd( -16.0134, 117.137, 4.1847, 1.4 ) }
    dend_36 { pt3dadd( -16.1245, 118.417, 4.11037, 0.07 ) }
    dend_36 { pt3dadd( -16.1705, 119.027, 4.08373, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -25.4756, -109.256, -54.9282, 0.15 ) }
    dend_30 { pt3dadd( -26.0556, -118.957, -58.1019, 0.15 ) }
    dend_30 { pt3dadd( -26.4689, -128.982, -60.1476, 0.15 ) }
    dend_30 { pt3dadd( -26.2212, -138.494, -63.8633, 0.15 ) }
    dend_30 { pt3dadd( -23.8477, -147.763, -67.4127, 0.15 ) }
    dend_30 { pt3dadd( -20.5159, -156.454, -71.5376, 0.15 ) }
    dend_30 { pt3dadd( -16.9762, -165.207, -75.3508, 0.15 ) }
    dend_30 { pt3dadd( -12.7876, -173.389, -79.6799, 0.15 ) }
    dend_30 { pt3dadd( -8.57235, -182.118, -82.7952, 0.15 ) }
    dend_30 { pt3dadd( -3.29202, -189.984, -86.4306, 0.15 ) }
    dend_30 { pt3dadd( 2.3682, -197.652, -89.8943, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_30 { pt3dadd( 7.75427, -206.159, -91.3511, 0.15 ) }
    dend_30 { pt3dadd( 12.7201, -214.963, -92.601, 0.15 ) }
    dend_30 { pt3dadd( 17.6071, -223.626, -94.7649, 0.15 ) }
    dend_30 { pt3dadd( 21.6759, -232.395, -97.9676, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 4/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -25.4756, -109.256, -54.9282, 1.03 ) }
    dend_29 { pt3dadd( -25.9534, -118.958, -58.1158, 0.15 ) }
    dend_29 { pt3dadd( -27.8255, -128.844, -59.98, 0.15 ) }
    dend_29 { pt3dadd( -30.7465, -138.496, -61.655, 0.15 ) }
    dend_29 { pt3dadd( -35.4364, -147.542, -61.9955, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 9/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.32642, -148.868, 29.3302, 0.22 ) }
    dend_24 { pt3dadd( -6.69836, -150.369, 29.7003, 0.22 ) }
    dend_24 { pt3dadd( -6.37068, -151.319, 29.9446, 0.22 ) }
    dend_24 { pt3dadd( -6.19961, -152.027, 30.1163, 0.88 ) }
    dend_24 { pt3dadd( -6.02299, -153.066, 30.3534, 1.25 ) }
    dend_24 { pt3dadd( -5.81328, -154.664, 30.72, 0.15 ) }
    dend_24 { pt3dadd( -5.69673, -155.875, 30.9847, 0.15 ) }
    dend_24 { pt3dadd( -5.67885, -156.858, 31.1982, 0.66 ) }
    dend_24 { pt3dadd( -5.72471, -158.322, 31.4881, 0.15 ) }
    dend_24 { pt3dadd( -5.76272, -158.988, 31.6125, 0.44 ) }
    dend_24 { pt3dadd( -5.79168, -159.472, 31.6906, 0.44 ) }
    dend_24 { pt3dadd( -5.82218, -160.822, 31.881, 0.15 ) }
    dend_24 { pt3dadd( -5.81056, -161.8, 32.0039, 0.15 ) }
    dend_24 { pt3dadd( -5.76789, -162.548, 32.0944, 1.18 ) }
    dend_24 { pt3dadd( -5.682, -163.294, 32.1824, 2.14 ) }
    dend_24 { pt3dadd( -5.53236, -164.405, 32.3022, 1.03 ) }
    dend_24 { pt3dadd( -5.38835, -165.478, 32.3993, 0.15 ) }
    dend_24 { pt3dadd( -5.25714, -166.321, 32.4696, 0.15 ) }
    dend_24 { pt3dadd( -5.15686, -166.99, 32.515, 0.37 ) }
    dend_24 { pt3dadd( -5.03944, -167.824, 32.5488, 0.22 ) }
    dend_24 { pt3dadd( -4.9888, -168.273, 32.5445, 0.66 ) }
    dend_24 { pt3dadd( -4.93038, -168.874, 32.5131, 0.81 ) }
    dend_24 { pt3dadd( -4.79489, -170.151, 32.3992, 0.22 ) }
    dend_24 { pt3dadd( -4.72586, -170.77, 32.3369, 1.03 ) }
    dend_24 { pt3dadd( -4.6256, -171.884, 32.2068, 1.84 ) }
    dend_24 { pt3dadd( -4.51046, -173.5, 32.0047, 0.22 ) }
    dend_24 { pt3dadd( -4.47711, -174.028, 31.9439, 0.22 ) }
    dend_24 { pt3dadd( -4.44059, -174.643, 31.8864, 0.22 ) }
    dend_24 { pt3dadd( -4.40503, -175.246, 31.8481, 0.22 ) }
    dend_24 { pt3dadd( -4.31058, -176.129, 31.8287, 0.96 ) }
    dend_24 { pt3dadd( -4.01636, -177.967, 31.8666, 0.15 ) }
    dend_24 { pt3dadd( -3.87518, -178.615, 31.9059, 0.15 ) }
    dend_24 { pt3dadd( -3.71473, -179.302, 31.9653, 0.96 ) }
    dend_24 { pt3dadd( -3.52959, -180.093, 32.0509, 1.92 ) }
    dend_24 { pt3dadd( -3.09036, -181.861, 32.2778, 0.22 ) }
    dend_24 { pt3dadd( -2.92345, -182.482, 32.3716, 0.22 ) }
    dend_24 { pt3dadd( -2.76104, -183.033, 32.4553, 0.15 ) }
    dend_24 { pt3dadd( -2.46377, -184.019, 32.6001, 0.15 ) }
    dend_24 { pt3dadd( -2.30037, -184.603, 32.6843, 0.81 ) }
    dend_24 { pt3dadd( -2.16463, -185.198, 32.7863, 1.62 ) }
    dend_24 { pt3dadd( -1.96112, -186.384, 33.0288, 0.15 ) }
    dend_24 { pt3dadd( -1.8183, -187.308, 33.225, 0.15 ) }
    dend_24 { pt3dadd( -1.72628, -187.822, 33.3355, 0.15 ) }
    dend_24 { pt3dadd( -1.56378, -188.627, 33.5107, 0.88 ) }
    dend_24 { pt3dadd( -1.34095, -189.832, 33.7647, 0.15 ) }
    dend_24 { pt3dadd( -1.23615, -190.449, 33.887, 0.96 ) }
    dend_24 { pt3dadd( -1.07132, -191.575, 34.0936, 2.21 ) }
    dend_24 { pt3dadd( -0.790043, -193.684, 34.4558, 0.15 ) }
    dend_24 { pt3dadd( -0.667644, -194.567, 34.592, 0.96 ) }
    dend_24 { pt3dadd( -0.381357, -196.354, 34.8767, 0.22 ) }
    dend_24 { pt3dadd( -0.221071, -197.209, 35.0135, 0.88 ) }
    dend_24 { pt3dadd( -0.131432, -197.666, 35.0935, 0.88 ) }
    dend_24 { pt3dadd( 0.168742, -199.121, 35.381, 0.07 ) }
    dend_24 { pt3dadd( 0.240515, -199.428, 35.4501, 0.29 ) }
    dend_24 { pt3dadd( 0.413127, -200.085, 35.6202, 0.29 ) }
    dend_24 { pt3dadd( 0.594208, -200.724, 35.8008, 0.15 ) }
    dend_24 { pt3dadd( 0.715766, -201.238, 35.9554, 0.15 ) }
    dend_24 { pt3dadd( 0.883157, -202.08, 36.2022, 0.15 ) }
    dend_24 { pt3dadd( 0.97784, -202.669, 36.355, 0.74 ) }
    dend_24 { pt3dadd( 1.08727, -203.504, 36.5649, 1.77 ) }
    dend_24 { pt3dadd( 1.13691, -204.032, 36.6997, 1.33 ) }
    dend_24 { pt3dadd( 1.22726, -205.339, 37.0575, 0.07 ) }
    dend_24 { pt3dadd( 1.245, -205.771, 37.1801, 0.37 ) }
    dend_24 { pt3dadd( 1.26997, -207.114, 37.5843, 0.07 ) }
    dend_24 { pt3dadd( 1.28339, -207.829, 37.8035, 0.59 ) }
    dend_24 { pt3dadd( 1.33146, -208.99, 38.1562, 0.15 ) }
    dend_24 { pt3dadd( 1.36892, -209.589, 38.3302, 0.22 ) }
    dend_24 { pt3dadd( 1.43968, -210.505, 38.5832, 1.33 ) }
    dend_24 { pt3dadd( 1.53941, -211.848, 38.9448, 0.07 ) }
    dend_24 { pt3dadd( 1.5659, -212.368, 39.0769, 0.88 ) }
    dend_24 { pt3dadd( 1.67447, -213.871, 39.4369, 0.15 ) }
    dend_24 { pt3dadd( 1.74193, -214.561, 39.5946, 0.15 ) }
    dend_24 { pt3dadd( 1.81151, -215.158, 39.7315, 0.15 ) }
    dend_24 { pt3dadd( 1.8997, -215.817, 39.8926, 0.74 ) }
    dend_24 { pt3dadd( 2.01259, -216.759, 40.13, 2.14 ) }
    dend_24 { pt3dadd( 2.16502, -218.461, 40.572, 0.15 ) }
    dend_24 { pt3dadd( 2.17512, -218.994, 40.6999, 0.44 ) }
    dend_24 { pt3dadd( 2.12223, -220.357, 41.0007, 0.07 ) }
    dend_24 { pt3dadd( 2.06276, -220.913, 41.1147, 0.15 ) }
    dend_24 { pt3dadd( 1.94833, -221.55, 41.2374, 0.07 ) }
    dend_24 { pt3dadd( 1.7513, -222.318, 41.3792, 1.11 ) }
    dend_24 { pt3dadd( 1.15723, -224.106, 41.679, 0.15 ) }
    dend_24 { pt3dadd( 0.882613, -224.864, 41.8023, 1.03 ) }
    dend_24 { pt3dadd( 0.357741, -226.227, 42.0043, 0.15 ) }
    dend_24 { pt3dadd( 0.144325, -226.842, 42.0804, 0.44 ) }
    dend_24 { pt3dadd( -0.156406, -227.961, 42.199, 0.15 ) }
    dend_24 { pt3dadd( -0.321343, -228.844, 42.2833, 1.62 ) }
    dend_24 { pt3dadd( -0.361285, -229.303, 42.3203, 1.77 ) }
    dend_24 { pt3dadd( -0.358984, -229.998, 42.3574, 1.03 ) }
    dend_24 { pt3dadd( -0.222591, -231.76, 42.4068, 0.15 ) }
    dend_24 { pt3dadd( -0.0116373, -233.435, 42.4321, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_24 { pt3dadd( 0.0828942, -233.988, 42.4403, 0.88 ) }
    dend_24 { pt3dadd( 0.233257, -234.73, 42.4746, 1.18 ) }
    dend_24 { pt3dadd( 0.684556, -236.656, 42.6086, 0.07 ) }
    dend_24 { pt3dadd( 0.785035, -237.043, 42.6426, 0.15 ) }
    dend_24 { pt3dadd( 1.11358, -238.255, 42.7797, 0.07 ) }
    dend_24 { pt3dadd( 1.47721, -239.575, 42.9511, 0.15 ) }
    dend_24 { pt3dadd( 1.77061, -240.711, 43.1074, 1.33 ) }
    dend_24 { pt3dadd( 2.22144, -242.567, 43.3742, 0.15 ) }
    dend_24 { pt3dadd( 2.38874, -243.334, 43.4947, 0.22 ) }
    dend_24 { pt3dadd( 2.59872, -244.576, 43.6645, 0.07 ) }
    dend_24 { pt3dadd( 2.6435, -244.96, 43.7076, 0.22 ) }
    dend_24 { pt3dadd( 2.75916, -246.787, 43.8507, 0.07 ) }
    dend_24 { pt3dadd( 2.76942, -247.145, 43.8713, 0.81 ) }
    dend_24 { pt3dadd( 2.76245, -248.442, 43.9322, 1.92 ) }
    dend_24 { pt3dadd( 2.74571, -250.025, 43.9433, 0.15 ) }
    dend_24 { pt3dadd( 2.73945, -250.855, 43.9046, 0.88 ) }
    dend_24 { pt3dadd( 2.74625, -252.67, 43.7458, 0.15 ) }
    dend_24 { pt3dadd( 2.75225, -253.154, 43.6817, 0.44 ) }
    dend_24 { pt3dadd( 2.77898, -254.66, 43.4485, 0.07 ) }
    dend_24 { pt3dadd( 2.83014, -255.904, 43.2396, 0.07 ) }
    dend_24 { pt3dadd( 2.86588, -256.72, 43.1318, 0.15 ) }
    dend_24 { pt3dadd( 2.89192, -257.352, 43.0745, 0.74 ) }
    dend_24 { pt3dadd( 2.90995, -257.926, 43.0559, 0.74 ) }
    dend_24 { pt3dadd( 2.99612, -259.21, 43.1726, 0.07 ) }
    dend_24 { pt3dadd( 3.1177, -260.09, 43.3774, 0.07 ) }
    dend_24 { pt3dadd( 3.26046, -260.947, 43.6854, 0.07 ) }
    dend_24 { pt3dadd( 3.38871, -261.654, 43.9813, 1.25 ) }
    dend_24 { pt3dadd( 3.49276, -262.22, 44.2282, 1.99 ) }
    dend_24 { pt3dadd( 3.83666, -264.161, 45.0399, 0.15 ) }
    dend_24 { pt3dadd( 4.00935, -265.22, 45.4584, 0.96 ) }
    dend_24 { pt3dadd( 4.21561, -266.745, 46.0034, 0.07 ) }
    dend_24 { pt3dadd( 4.35016, -267.946, 46.3811, 0.07 ) }
    dend_24 { pt3dadd( 4.41793, -268.827, 46.6121, 0.81 ) }
    dend_24 { pt3dadd( 4.53326, -271.181, 47.0901, 0.15 ) }
    dend_24 { pt3dadd( 4.53724, -271.776, 47.1736, 0.29 ) }
    dend_24 { pt3dadd( 4.5191, -272.943, 47.2805, 0.07 ) }
    dend_24 { pt3dadd( 4.50264, -273.922, 47.323, 1.47 ) }
    dend_24 { pt3dadd( 4.45706, -276.116, 47.3494, 0.07 ) }
    dend_24 { pt3dadd( 4.42571, -277.071, 47.3671, 0.07 ) }
    dend_24 { pt3dadd( 4.38134, -277.775, 47.3661, 1.11 ) }
    dend_24 { pt3dadd( 4.23088, -279.599, 47.3116, 0.07 ) }
    dend_24 { pt3dadd( 4.15264, -280.372, 47.262, 0.74 ) }
    dend_24 { pt3dadd( 4.06683, -281.074, 47.1876, 1.92 ) }
    dend_24 { pt3dadd( 3.78193, -282.999, 46.9193, 0.15 ) }
    dend_24 { pt3dadd( 3.54251, -284.476, 46.6906, 0.22 ) }
    dend_24 { pt3dadd( 3.26198, -286.179, 46.4267, 0.22 ) }
    dend_24 { pt3dadd( 3.12909, -286.926, 46.3009, 0.81 ) }
    dend_24 { pt3dadd( 2.95382, -287.891, 46.1418, 1.84 ) }
    dend_24 { pt3dadd( 2.60254, -289.966, 45.8854, 0.07 ) }
    dend_24 { pt3dadd( 2.50804, -290.578, 45.8317, 0.29 ) }
    dend_24 { pt3dadd( 2.30806, -292.119, 45.8961, 0.07 ) }
    dend_24 { pt3dadd( 2.18327, -293.101, 46.0028, 0.07 ) }
    dend_24 { pt3dadd( 2.04971, -294.215, 46.1826, 1.55 ) }
    dend_24 { pt3dadd( 1.87625, -295.922, 46.5719, 0.07 ) }
    dend_24 { pt3dadd( 1.82892, -296.53, 46.7484, 0.07 ) }
    dend_24 { pt3dadd( 1.74931, -298.117, 47.2722, 1.47 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -7.32642, -148.868, 29.3302, 0.22 ) }
    dend_21 { pt3dadd( -7.974, -150.003, 30.0187, 0.22 ) }
    dend_21 { pt3dadd( -8.46057, -151.098, 30.5892, 0.44 ) }
    dend_21 { pt3dadd( -8.6497, -151.622, 30.8361, 0.15 ) }
    dend_21 { pt3dadd( -8.79102, -152.059, 31.0388, 0.15 ) }
    dend_21 { pt3dadd( -8.86191, -152.261, 31.1347, 0.37 ) }
    dend_21 { pt3dadd( -9.09988, -152.849, 31.415, 0.44 ) }
    dend_21 { pt3dadd( -9.32933, -153.347, 31.6439, 0.15 ) }
    dend_21 { pt3dadd( -9.43603, -153.548, 31.7575, 0.22 ) }
    dend_21 { pt3dadd( -9.61491, -153.876, 32.0032, 0.22 ) }
    dend_21 { pt3dadd( -9.85299, -154.302, 32.3772, 0.22 ) }
    dend_21 { pt3dadd( -10.0623, -154.689, 32.7485, 0.81 ) }
    dend_21 { pt3dadd( -10.4073, -155.395, 33.4386, 0.22 ) }
    dend_21 { pt3dadd( -10.7488, -156.208, 34.2186, 0.96 ) }
    dend_21 { pt3dadd( -11.0421, -157.018, 34.9542, 2.21 ) }
    dend_21 { pt3dadd( -11.5242, -158.628, 36.3093, 0.22 ) }
    dend_21 { pt3dadd( -11.6904, -159.333, 36.8775, 0.22 ) }
    dend_21 { pt3dadd( -11.7816, -159.825, 37.252, 0.22 ) }
    dend_21 { pt3dadd( -11.8406, -160.203, 37.5139, 0.22 ) }
    dend_21 { pt3dadd( -11.9531, -160.797, 37.8721, 0.22 ) }
    dend_21 { pt3dadd( -12.0782, -161.257, 38.1348, 0.22 ) }
    dend_21 { pt3dadd( -12.2445, -161.708, 38.3942, 0.88 ) }
    dend_21 { pt3dadd( -12.5043, -162.254, 38.7464, 1.4 ) }
    dend_21 { pt3dadd( -12.9373, -162.97, 39.3036, 2.14 ) }
    dend_21 { pt3dadd( -13.743, -164.118, 40.3378, 0.52 ) }
    dend_21 { pt3dadd( -14.3525, -164.893, 41.124, 0.22 ) }
    dend_21 { pt3dadd( -14.7016, -165.305, 41.5658, 0.22 ) }
    dend_21 { pt3dadd( -15.1915, -165.83, 42.1575, 1.11 ) }
    dend_21 { pt3dadd( -15.9964, -166.575, 43.1086, 1.99 ) }
    dend_21 { pt3dadd( -16.427, -166.905, 43.6059, 1.99 ) }
    dend_21 { pt3dadd( -16.5771, -166.993, 43.7865, 1.99 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -34.9611, -133.283, 21.2165, 0.22 ) }
    dend_19 { pt3dadd( -36.2561, -134.42, 21.3865, 0.22 ) }
    dend_19 { pt3dadd( -36.9469, -135.06, 21.4819, 0.22 ) }
    dend_19 { pt3dadd( -37.5507, -135.61, 21.5606, 1.33 ) }
    dend_19 { pt3dadd( -38.6627, -136.622, 21.6972, 0.15 ) }
    dend_19 { pt3dadd( -39.0612, -136.996, 21.7447, 0.15 ) }
    dend_19 { pt3dadd( -39.3499, -137.276, 21.7787, 0.37 ) }
    dend_19 { pt3dadd( -39.8032, -137.788, 21.8604, 0.37 ) }
    dend_19 { pt3dadd( -40.4589, -138.617, 21.9736, 0.22 ) }
    dend_19 { pt3dadd( -40.7549, -139.005, 22.0114, 0.15 ) }
    dend_19 { pt3dadd( -40.976, -139.302, 22.0281, 0.15 ) }
    dend_19 { pt3dadd( -41.1322, -139.526, 22.0485, 0.15 ) }
    dend_19 { pt3dadd( -41.4889, -140.067, 22.1057, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_19 { pt3dadd( -41.842, -140.65, 22.1708, 0.74 ) }
    dend_19 { pt3dadd( -42.4133, -141.612, 22.2776, 0.15 ) }
    dend_19 { pt3dadd( -42.8152, -142.19, 22.3, 0.15 ) }
    dend_19 { pt3dadd( -43.4379, -142.972, 22.2852, 0.15 ) }
    dend_19 { pt3dadd( -43.6834, -143.251, 22.256, 0.15 ) }
    dend_19 { pt3dadd( -44.2429, -143.841, 22.1442, 1.33 ) }
    dend_19 { pt3dadd( -44.7702, -144.354, 22.0555, 2.14 ) }
    dend_19 { pt3dadd( -46.193, -145.59, 21.8824, 0.15 ) }
    dend_19 { pt3dadd( -46.9064, -146.131, 21.8337, 1.25 ) }
    dend_19 { pt3dadd( -47.973, -146.864, 21.7933, 0.07 ) }
    dend_19 { pt3dadd( -48.3826, -147.142, 21.7998, 0.22 ) }
    dend_19 { pt3dadd( -49.6652, -147.991, 21.8744, 0.22 ) }
    dend_19 { pt3dadd( -50.3066, -148.398, 21.9455, 1.25 ) }
    dend_19 { pt3dadd( -50.7151, -148.648, 22.0168, 1.25 ) }
    dend_19 { pt3dadd( -52.0307, -149.563, 22.1943, 0.07 ) }
    dend_19 { pt3dadd( -52.912, -150.272, 22.2676, 0.07 ) }
    dend_19 { pt3dadd( -53.5119, -150.86, 22.2365, 0.07 ) }
    dend_19 { pt3dadd( -54.0372, -151.487, 22.0738, 0.07 ) }
    dend_19 { pt3dadd( -54.3083, -151.855, 21.9512, 1.18 ) }
    dend_19 { pt3dadd( -55.2368, -153.249, 21.4114, 0.07 ) }
    dend_19 { pt3dadd( -55.4262, -153.564, 21.2803, 0.88 ) }
    dend_19 { pt3dadd( -55.911, -154.44, 20.9078, 1.92 ) }
    dend_19 { pt3dadd( -56.7274, -155.98, 20.2619, 0.15 ) }
    dend_19 { pt3dadd( -56.979, -156.473, 20.0569, 0.22 ) }
    dend_19 { pt3dadd( -57.3995, -157.242, 19.7446, 0.07 ) }
    dend_19 { pt3dadd( -57.6304, -157.657, 19.5845, 0.07 ) }
    dend_19 { pt3dadd( -57.9626, -158.326, 19.353, 0.29 ) }
    dend_19 { pt3dadd( -58.554, -159.715, 18.9691, 0.07 ) }
    dend_19 { pt3dadd( -59.0146, -160.958, 18.7277, 0.22 ) }
    dend_19 { pt3dadd( -59.3248, -161.823, 18.5978, 1.55 ) }
    dend_19 { pt3dadd( -59.8796, -163.395, 18.4842, 0.22 ) }
    dend_19 { pt3dadd( -60.2274, -164.365, 18.4813, 0.07 ) }
    dend_19 { pt3dadd( -60.5263, -165.233, 18.5248, 0.07 ) }
    dend_19 { pt3dadd( -60.7103, -165.821, 18.6207, 0.07 ) }
    dend_19 { pt3dadd( -60.888, -166.358, 18.7829, 0.15 ) }
    dend_19 { pt3dadd( -61.1668, -167.156, 19.1436, 0.07 ) }
    dend_19 { pt3dadd( -61.3631, -167.504, 19.419, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -34.9611, -133.283, 21.2165, 0.29 ) }
    dend_16 { pt3dadd( -36.6099, -132.873, 20.9741, 0.29 ) }
    dend_16 { pt3dadd( -37.4275, -132.645, 20.7727, 0.22 ) }
    dend_16 { pt3dadd( -37.9448, -132.496, 20.6069, 0.74 ) }
    dend_16 { pt3dadd( -38.5654, -132.311, 20.3844, 0.96 ) }
    dend_16 { pt3dadd( -39.2999, -132.099, 20.1103, 0.29 ) }
    dend_16 { pt3dadd( -40.06, -131.882, 19.8166, 0.15 ) }
    dend_16 { pt3dadd( -40.8824, -131.641, 19.4645, 0.15 ) }
    dend_16 { pt3dadd( -41.5817, -131.459, 19.1937, 1.03 ) }
    dend_16 { pt3dadd( -42.463, -131.252, 18.8858, 0.29 ) }
    dend_16 { pt3dadd( -43.6733, -130.986, 18.5084, 0.22 ) }
    dend_16 { pt3dadd( -44.3413, -130.853, 18.3264, 1.11 ) }
    dend_16 { pt3dadd( -45.4118, -130.664, 18.0874, 2.14 ) }
    dend_16 { pt3dadd( -47.425, -130.332, 17.7205, 0.22 ) }
    dend_16 { pt3dadd( -47.9354, -130.254, 17.6397, 0.81 ) }
    dend_16 { pt3dadd( -48.9579, -130.108, 17.4843, 1.7 ) }
    dend_16 { pt3dadd( -50.3422, -129.903, 17.2878, 0.22 ) }
    dend_16 { pt3dadd( -50.9257, -129.817, 17.1942, 0.88 ) }
    dend_16 { pt3dadd( -51.8087, -129.693, 17.0278, 1.55 ) }
    dend_16 { pt3dadd( -52.4654, -129.597, 16.8834, 0.59 ) }
    dend_16 { pt3dadd( -53.7024, -129.422, 16.5894, 0.15 ) }
    dend_16 { pt3dadd( -54.6114, -129.318, 16.3385, 0.88 ) }
    dend_16 { pt3dadd( -55.5226, -129.219, 16.0448, 0.15 ) }
    dend_16 { pt3dadd( -56.2494, -129.124, 15.7765, 0.22 ) }
    dend_16 { pt3dadd( -56.8907, -129.029, 15.5132, 0.81 ) }
    dend_16 { pt3dadd( -57.8446, -128.89, 15.1001, 1.99 ) }
    dend_16 { pt3dadd( -59.1856, -128.737, 14.4649, 0.22 ) }
    dend_16 { pt3dadd( -59.8406, -128.675, 14.1426, 0.22 ) }
    dend_16 { pt3dadd( -60.5049, -128.605, 13.8057, 0.52 ) }
    dend_16 { pt3dadd( -61.1934, -128.524, 13.442, 1.18 ) }
    dend_16 { pt3dadd( -62.2791, -128.377, 12.8589, 1.99 ) }
    dend_16 { pt3dadd( -63.6741, -128.163, 12.0683, 0.15 ) }
    dend_16 { pt3dadd( -64.1911, -128.077, 11.7723, 0.29 ) }
    dend_16 { pt3dadd( -65.0322, -127.966, 11.2809, 0.07 ) }
    dend_16 { pt3dadd( -65.6046, -127.915, 10.911, 0.22 ) }
    dend_16 { pt3dadd( -66.0355, -127.883, 10.5775, 0.22 ) }
    dend_16 { pt3dadd( -66.4102, -127.879, 10.1881, 0.22 ) }
    dend_16 { pt3dadd( -66.5504, -127.897, 10.0085, 0.22 ) }
    dend_16 { pt3dadd( -66.8796, -128.04, 9.4741, 0.22 ) }
    dend_16 { pt3dadd( -67.1992, -128.342, 8.84727, 0.22 ) }
    dend_16 { pt3dadd( -67.4166, -128.612, 8.37812, 0.22 ) }
    dend_16 { pt3dadd( -67.9292, -129.274, 7.36402, 1.84 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 72.3825, 33.4844, 83.8885, 0.22 ) }
    dend_9 { pt3dadd( 73.8133, 33.5796, 85.5859, 0.22 ) }
    dend_9 { pt3dadd( 74.1287, 33.5718, 85.9694, 0.22 ) }
    dend_9 { pt3dadd( 74.8862, 33.5758, 86.8314, 0.59 ) }
    dend_9 { pt3dadd( 75.6128, 33.6143, 87.5745, 0.44 ) }
    dend_9 { pt3dadd( 76.0217, 33.6363, 87.9511, 0.44 ) }
    dend_9 { pt3dadd( 76.5598, 33.6439, 88.3704, 0.15 ) }
    dend_9 { pt3dadd( 77.1352, 33.654, 88.6951, 0.15 ) }
    dend_9 { pt3dadd( 77.896, 33.6018, 89.0351, 0.15 ) }
    dend_9 { pt3dadd( 78.5191, 33.5087, 89.2398, 0.96 ) }
    dend_9 { pt3dadd( 79.3662, 33.3589, 89.4636, 1.55 ) }
    dend_9 { pt3dadd( 80.5622, 33.2058, 89.7625, 0.22 ) }
    dend_9 { pt3dadd( 81.426, 33.0989, 89.9681, 0.37 ) }
    dend_9 { pt3dadd( 82.0974, 32.9845, 90.1184, 0.22 ) }
    dend_9 { pt3dadd( 82.6512, 32.864, 90.2469, 0.22 ) }
    dend_9 { pt3dadd( 83.2772, 32.7271, 90.3989, 0.37 ) }
    dend_9 { pt3dadd( 84.457, 32.4884, 90.7288, 0.22 ) }
    dend_9 { pt3dadd( 85.1115, 32.3823, 90.9513, 0.22 ) }
    dend_9 { pt3dadd( 85.9686, 32.294, 91.2845, 0.22 ) }
    dend_9 { pt3dadd( 86.5206, 32.259, 91.5183, 0.96 ) }
    dend_9 { pt3dadd( 87.46, 32.2206, 91.955, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 88.9902, 32.1406, 92.7237, 0.22 ) }
    dend_9 { pt3dadd( 89.9389, 32.0499, 93.2473, 0.15 ) }
    dend_9 { pt3dadd( 90.8537, 31.9633, 93.8108, 0.15 ) }
    dend_9 { pt3dadd( 91.1543, 31.9324, 94.0128, 0.15 ) }
    dend_9 { pt3dadd( 91.5722, 31.8669, 94.3039, 0.15 ) }
    dend_9 { pt3dadd( 91.9734, 31.7787, 94.5556, 0.15 ) }
    dend_9 { pt3dadd( 92.7312, 31.5745, 94.9452, 0.15 ) }
    dend_9 { pt3dadd( 93.2051, 31.3907, 95.1593, 0.81 ) }
    dend_9 { pt3dadd( 93.7605, 31.1177, 95.4072, 1.47 ) }
    dend_9 { pt3dadd( 94.168, 30.9054, 95.5915, 1.47 ) }
    dend_9 { pt3dadd( 95.3918, 30.2547, 96.1171, 0.15 ) }
    dend_9 { pt3dadd( 95.7002, 30.1032, 96.2588, 0.22 ) }
    dend_9 { pt3dadd( 96.5094, 29.6818, 96.6572, 0.37 ) }
    dend_9 { pt3dadd( 97.3133, 29.221, 97.0798, 1.03 ) }
    dend_9 { pt3dadd( 98.082, 28.7779, 97.5885, 1.77 ) }
    dend_9 { pt3dadd( 98.4857, 28.5584, 97.9184, 1.77 ) }
    dend_9 { pt3dadd( 99.6686, 27.9611, 99.06, 0.22 ) }
    dend_9 { pt3dadd( 100.114, 27.7926, 99.5149, 0.22 ) }
    dend_9 { pt3dadd( 100.825, 27.6282, 100.235, 1.11 ) }
    dend_9 { pt3dadd( 102.277, 27.431, 101.731, 0.22 ) }
    dend_9 { pt3dadd( 102.871, 27.3704, 102.39, 0.22 ) }
    dend_9 { pt3dadd( 103.437, 27.3166, 103.056, 0.66 ) }
    dend_9 { pt3dadd( 104.229, 27.2381, 103.981, 0.88 ) }
    dend_9 { pt3dadd( 104.776, 27.2015, 104.602, 1.7 ) }
    dend_9 { pt3dadd( 105.942, 27.1811, 105.905, 0.44 ) }
    dend_9 { pt3dadd( 106.82, 27.1929, 106.831, 0.74 ) }
    dend_9 { pt3dadd( 107.478, 27.2422, 107.512, 1.25 ) }
    dend_9 { pt3dadd( 108.577, 27.4479, 108.652, 0.22 ) }
    dend_9 { pt3dadd( 108.964, 27.5587, 109.053, 0.22 ) }
    dend_9 { pt3dadd( 109.637, 27.8392, 109.742, 0.37 ) }
    dend_9 { pt3dadd( 110.112, 28.0808, 110.172, 0.37 ) }
    dend_9 { pt3dadd( 110.9, 28.4975, 110.789, 1.47 ) }
    dend_9 { pt3dadd( 111.87, 28.9872, 111.5, 0.29 ) }
    dend_9 { pt3dadd( 112.341, 29.207, 111.82, 0.29 ) }
    dend_9 { pt3dadd( 112.6, 29.3183, 111.997, 0.29 ) }
    dend_9 { pt3dadd( 113.427, 29.6635, 112.621, 0.15 ) }
    dend_9 { pt3dadd( 113.938, 29.9085, 113.088, 0.22 ) }
    dend_9 { pt3dadd( 114.322, 30.1271, 113.515, 0.74 ) }
    dend_9 { pt3dadd( 114.743, 30.4415, 114.102, 1.25 ) }
    dend_9 { pt3dadd( 115.405, 31.0979, 115.238, 0.22 ) }
    dend_9 { pt3dadd( 115.894, 31.6767, 116.197, 0.96 ) }
    dend_9 { pt3dadd( 116.317, 32.216, 117.1, 0.96 ) }
    dend_9 { pt3dadd( 116.66, 32.6075, 117.844, 0.29 ) }
    dend_9 { pt3dadd( 117.085, 33.0201, 118.795, 0.29 ) }
    dend_9 { pt3dadd( 117.439, 33.3042, 119.646, 0.29 ) }
    dend_9 { pt3dadd( 117.769, 33.5117, 120.481, 0.29 ) }
    dend_9 { pt3dadd( 118.036, 33.7031, 121.362, 0.29 ) }
    dend_9 { pt3dadd( 118.174, 33.8698, 122.193, 0.29 ) }
    dend_9 { pt3dadd( 118.201, 34.0241, 123.012, 0.29 ) }
    dend_9 { pt3dadd( 118.186, 34.1202, 123.533, 0.29 ) }
    dend_9 { pt3dadd( 118.15, 34.2662, 124.223, 0.29 ) }
    dend_9 { pt3dadd( 118.064, 34.5894, 125.543, 0.59 ) }
    dend_9 { pt3dadd( 118.004, 34.8608, 126.539, 0.59 ) }
    dend_9 { pt3dadd( 117.972, 35.2015, 127.781, 0.59 ) }
    dend_9 { pt3dadd( 117.997, 35.4177, 128.661, 0.59 ) }
    dend_9 { pt3dadd( 118.117, 35.6264, 129.764, 0.59 ) }
    dend_9 { pt3dadd( 118.272, 35.718, 130.54, 0.59 ) }
    dend_9 { pt3dadd( 118.369, 35.737, 130.839, 0.59 ) }
    dend_9 { pt3dadd( 118.735, 35.7378, 131.631, 0.59 ) }
    dend_9 { pt3dadd( 118.937, 35.6955, 131.954, 0.59 ) }
    dend_9 { pt3dadd( 119.473, 35.5081, 132.631, 0.22 ) }
    dend_9 { pt3dadd( 119.917, 35.3187, 133.063, 0.22 ) }
    dend_9 { pt3dadd( 120.541, 35.1169, 133.667, 0.22 ) }
    dend_9 { pt3dadd( 120.99, 35.0421, 134.136, 0.22 ) }
    dend_9 { pt3dadd( 121.711, 35.0332, 134.876, 0.22 ) }
    dend_9 { pt3dadd( 122.229, 35.1139, 135.443, 0.22 ) }
    dend_9 { pt3dadd( 122.775, 35.2896, 136.121, 1.11 ) }
    dend_9 { pt3dadd( 123.762, 35.7487, 137.491, 0.22 ) }
    dend_9 { pt3dadd( 124.295, 36.0466, 138.308, 0.22 ) }
    dend_9 { pt3dadd( 124.917, 36.4543, 139.339, 0.22 ) }
    dend_9 { pt3dadd( 125.391, 36.7279, 140.131, 0.22 ) }
    dend_9 { pt3dadd( 125.761, 36.8206, 140.796, 0.22 ) }
    dend_9 { pt3dadd( 125.934, 36.7598, 141.121, 0.22 ) }
    dend_9 { pt3dadd( 126.284, 36.4723, 141.729, 0.59 ) }
    dend_9 { pt3dadd( 126.832, 35.9301, 142.615, 0.59 ) }
    dend_9 { pt3dadd( 127.481, 35.298, 143.621, 0.15 ) }
    dend_9 { pt3dadd( 128.118, 34.6907, 144.57, 0.66 ) }
    dend_9 { pt3dadd( 128.797, 34.084, 145.586, 0.15 ) }
    dend_9 { pt3dadd( 129.345, 33.6402, 146.426, 0.66 ) }
    dend_9 { pt3dadd( 129.807, 33.3331, 147.121, 1.03 ) }
    dend_9 { pt3dadd( 130.715, 32.8229, 148.388, 0.22 ) }
    dend_9 { pt3dadd( 131.498, 32.4427, 149.385, 0.15 ) }
    dend_9 { pt3dadd( 132.304, 32.1202, 150.323, 0.66 ) }
    dend_9 { pt3dadd( 132.816, 31.9841, 150.898, 1.25 ) }
    dend_9 { pt3dadd( 133.926, 31.8005, 152.101, 0.22 ) }
    dend_9 { pt3dadd( 134.753, 31.7109, 152.963, 0.15 ) }
    dend_9 { pt3dadd( 135.496, 31.673, 153.658, 0.37 ) }
    dend_9 { pt3dadd( 135.953, 31.6794, 154.04, 0.59 ) }
    dend_9 { pt3dadd( 137.128, 31.7155, 154.956, 0.15 ) }
    dend_9 { pt3dadd( 137.84, 31.7229, 155.526, 0.88 ) }
    dend_9 { pt3dadd( 139.055, 31.7215, 156.551, 0.22 ) }
    dend_9 { pt3dadd( 139.535, 31.738, 156.968, 0.96 ) }
    dend_9 { pt3dadd( 139.934, 31.7626, 157.322, 0.66 ) }
    dend_9 { pt3dadd( 140.775, 31.8188, 158.043, 0.15 ) }
    dend_9 { pt3dadd( 141.614, 31.9197, 158.781, 0.81 ) }
    dend_9 { pt3dadd( 142.175, 32.0624, 159.327, 1.25 ) }
    dend_9 { pt3dadd( 142.932, 32.3621, 160.077, 0.15 ) }
    dend_9 { pt3dadd( 143.861, 32.7891, 161.026, 0.15 ) }
    dend_9 { pt3dadd( 144.141, 32.9322, 161.323, 0.29 ) }
    dend_9 { pt3dadd( 144.828, 33.3482, 162.069, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_9 { pt3dadd( 145.159, 33.5712, 162.442, 0.96 ) }
    dend_9 { pt3dadd( 145.769, 33.953, 163.178, 0.29 ) }
    dend_9 { pt3dadd( 146.578, 34.3472, 164.163, 0.74 ) }
    dend_9 { pt3dadd( 147.374, 34.6606, 165.084, 0.15 ) }
    dend_9 { pt3dadd( 147.914, 34.8491, 165.693, 0.37 ) }
    dend_9 { pt3dadd( 148.242, 34.9548, 166.03, 0.37 ) }
    dend_9 { pt3dadd( 148.816, 35.1605, 166.623, 0.22 ) }
    dend_9 { pt3dadd( 149.469, 35.4129, 167.266, 0.22 ) }
    dend_9 { pt3dadd( 150.014, 35.5773, 167.732, 0.37 ) }
    dend_9 { pt3dadd( 150.66, 35.7398, 168.224, 0.37 ) }
    dend_9 { pt3dadd( 151.395, 35.9129, 168.717, 1.33 ) }
    dend_9 { pt3dadd( 152.832, 36.2939, 169.572, 0.22 ) }
    dend_9 { pt3dadd( 153.79, 36.62, 170.091, 1.03 ) }
    dend_9 { pt3dadd( 154.979, 37.0859, 170.678, 0.15 ) }
    dend_9 { pt3dadd( 155.39, 37.2748, 170.862, 0.15 ) }
    dend_9 { pt3dadd( 156.455, 37.8893, 171.287, 0.15 ) }
    dend_9 { pt3dadd( 157.208, 38.4524, 171.59, 1.03 ) }
    dend_9 { pt3dadd( 157.826, 39.0703, 171.832, 0.15 ) }
    dend_9 { pt3dadd( 158.246, 39.5813, 172.012, 0.15 ) }
    dend_9 { pt3dadd( 158.822, 40.3869, 172.337, 0.15 ) }
    dend_9 { pt3dadd( 159.419, 41.2071, 172.784, 0.88 ) }
    dend_9 { pt3dadd( 159.997, 41.9989, 173.317, 0.29 ) }
    dend_9 { pt3dadd( 160.425, 42.5687, 173.754, 0.81 ) }
    dend_9 { pt3dadd( 160.635, 42.8327, 173.969, 0.81 ) }
    dend_9 { pt3dadd( 161.443, 43.9868, 174.819, 0.22 ) }
    dend_9 { pt3dadd( 161.969, 44.8733, 175.393, 0.07 ) }
    dend_9 { pt3dadd( 162.294, 45.623, 175.782, 0.15 ) }
    dend_9 { pt3dadd( 162.413, 46.0318, 175.951, 0.66 ) }
    dend_9 { pt3dadd( 162.569, 46.8898, 176.242, 1.55 ) }
    dend_9 { pt3dadd( 162.848, 49.0593, 176.865, 0.15 ) }
    dend_9 { pt3dadd( 162.914, 50.097, 177.07, 0.15 ) }
    dend_9 { pt3dadd( 162.906, 51.058, 177.227, 0.66 ) }
    dend_9 { pt3dadd( 162.86, 51.7669, 177.347, 0.15 ) }
    dend_9 { pt3dadd( 162.812, 52.1884, 177.42, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 34/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 72.3825, 33.4844, 83.8885, 0.29 ) }
    dend_8 { pt3dadd( 71.6512, 34.4177, 85.2171, 0.29 ) }
    dend_8 { pt3dadd( 71.0791, 35.1484, 86.1206, 0.29 ) }
    dend_8 { pt3dadd( 70.4803, 35.9559, 87.0151, 0.81 ) }
    dend_8 { pt3dadd( 70.1381, 36.3947, 87.4932, 1.4 ) }
    dend_8 { pt3dadd( 69.2783, 37.3962, 88.6174, 0.07 ) }
    dend_8 { pt3dadd( 68.813, 37.8999, 89.1878, 1.03 ) }
    dend_8 { pt3dadd( 67.8823, 38.7917, 90.159, 0.15 ) }
    dend_8 { pt3dadd( 67.0951, 39.569, 90.9397, 1.55 ) }
    dend_8 { pt3dadd( 66.3667, 40.3431, 91.6833, 0.22 ) }
    dend_8 { pt3dadd( 65.8932, 40.9022, 92.2064, 0.22 ) }
    dend_8 { pt3dadd( 65.4072, 41.5563, 92.7942, 0.81 ) }
    dend_8 { pt3dadd( 64.9225, 42.2911, 93.4218, 0.07 ) }
    dend_8 { pt3dadd( 64.5518, 43.0134, 93.9847, 0.59 ) }
    dend_8 { pt3dadd( 64.3203, 43.7292, 94.4433, 0.07 ) }
    dend_8 { pt3dadd( 64.2532, 44.1768, 94.6909, 0.52 ) }
    dend_8 { pt3dadd( 64.2126, 45.6837, 95.4868, 0.07 ) }
    dend_8 { pt3dadd( 64.2571, 46.1828, 95.7483, 0.96 ) }
    dend_8 { pt3dadd( 64.3496, 46.6472, 96.0033, 0.96 ) }
    dend_8 { pt3dadd( 64.7069, 47.8772, 96.7309, 0.22 ) }
    dend_8 { pt3dadd( 65.0731, 48.7251, 97.2594, 0.22 ) }
    dend_8 { pt3dadd( 65.4947, 49.4336, 97.7512, 0.96 ) }
    dend_8 { pt3dadd( 66.0253, 50.1656, 98.303, 1.77 ) }
    dend_8 { pt3dadd( 66.7805, 51.1526, 99.1173, 0.22 ) }
    dend_8 { pt3dadd( 67.2572, 51.7432, 99.6321, 0.15 ) }
    dend_8 { pt3dadd( 67.6712, 52.2386, 100.047, 0.15 ) }
    dend_8 { pt3dadd( 67.8821, 52.5079, 100.264, 0.15 ) }
    dend_8 { pt3dadd( 68.5338, 53.4527, 100.99, 0.88 ) }
    dend_8 { pt3dadd( 69.1056, 54.5657, 101.814, 0.22 ) }
    dend_8 { pt3dadd( 69.3418, 55.199, 102.275, 0.81 ) }
    dend_8 { pt3dadd( 69.6717, 56.2823, 103.066, 0.15 ) }
    dend_8 { pt3dadd( 69.8871, 57.0637, 103.634, 0.66 ) }
    dend_8 { pt3dadd( 70.1093, 57.9282, 104.255, 1.84 ) }
    dend_8 { pt3dadd( 70.5502, 59.5367, 105.407, 0.15 ) }
    dend_8 { pt3dadd( 70.7925, 60.4529, 106.041, 0.15 ) }
    dend_8 { pt3dadd( 70.989, 61.198, 106.545, 0.15 ) }
    dend_8 { pt3dadd( 71.172, 61.8001, 106.951, 0.66 ) }
    dend_8 { pt3dadd( 71.5999, 62.9353, 107.649, 0.15 ) }
    dend_8 { pt3dadd( 72.089, 63.9765, 108.241, 0.15 ) }
    dend_8 { pt3dadd( 72.3713, 64.4951, 108.506, 0.66 ) }
    dend_8 { pt3dadd( 72.6215, 65.0004, 108.736, 0.22 ) }
    dend_8 { pt3dadd( 72.9549, 65.8187, 109.092, 0.22 ) }
    dend_8 { pt3dadd( 73.1228, 66.3086, 109.293, 0.81 ) }
    dend_8 { pt3dadd( 73.2236, 66.7058, 109.442, 0.81 ) }
    dend_8 { pt3dadd( 73.3639, 67.832, 109.856, 0.07 ) }
    dend_8 { pt3dadd( 73.3802, 68.5175, 110.119, 0.66 ) }
    dend_8 { pt3dadd( 73.2391, 69.9704, 110.713, 0.15 ) }
    dend_8 { pt3dadd( 73.0468, 70.9487, 111.125, 1.4 ) }
    dend_8 { pt3dadd( 72.6749, 72.3125, 111.739, 0.15 ) }
    dend_8 { pt3dadd( 72.3581, 73.2236, 112.175, 0.15 ) }
    dend_8 { pt3dadd( 72.0179, 73.9905, 112.563, 1.18 ) }
    dend_8 { pt3dadd( 71.3198, 75.1732, 113.242, 0.22 ) }
    dend_8 { pt3dadd( 70.6738, 76.0077, 113.769, 0.15 ) }
    dend_8 { pt3dadd( 70.2599, 76.4851, 114.089, 0.15 ) }
    dend_8 { pt3dadd( 69.8422, 76.9476, 114.404, 0.74 ) }
    dend_8 { pt3dadd( 69.3376, 77.5187, 114.771, 1.25 ) }
    dend_8 { pt3dadd( 68.3156, 78.7222, 115.521, 0.22 ) }
    dend_8 { pt3dadd( 67.7793, 79.3865, 115.933, 1.11 ) }
    dend_8 { pt3dadd( 66.8641, 80.5762, 116.708, 0.22 ) }
    dend_8 { pt3dadd( 66.3701, 81.268, 117.162, 1.47 ) }
    dend_8 { pt3dadd( 65.9007, 81.9652, 117.612, 0.96 ) }
    dend_8 { pt3dadd( 65.284, 82.9541, 118.245, 0.22 ) }
    dend_8 { pt3dadd( 64.7638, 83.8561, 118.814, 0.74 ) }
    dend_8 { pt3dadd( 64.1365, 84.9729, 119.553, 0.15 ) }
    dend_8 { pt3dadd( 63.8648, 85.4473, 119.892, 0.15 ) }
    dend_8 { pt3dadd( 63.5775, 85.9656, 120.279, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 0/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 43.5074, 6.25899, 47.4206, 0.15 ) }
    dend_6 { pt3dadd( 45.5833, 4.79368, 49.7902, 0.15 ) }
    dend_6 { pt3dadd( 46.2866, 4.43635, 50.335, 0.22 ) }
    dend_6 { pt3dadd( 46.8549, 4.19456, 50.7119, 0.88 ) }
    dend_6 { pt3dadd( 47.8823, 3.8048, 51.327, 0.15 ) }
    dend_6 { pt3dadd( 48.5565, 3.57063, 51.7054, 1.18 ) }
    dend_6 { pt3dadd( 49.3046, 3.31748, 52.1177, 2.58 ) }
    dend_6 { pt3dadd( 51.0712, 2.86267, 52.8484, 0.29 ) }
    dend_6 { pt3dadd( 51.8851, 2.66486, 53.1739, 0.96 ) }
    dend_6 { pt3dadd( 52.4933, 2.51782, 53.4278, 1.18 ) }
    dend_6 { pt3dadd( 54.211, 2.10828, 54.2444, 0.07 ) }
    dend_6 { pt3dadd( 54.842, 1.96747, 54.6072, 0.07 ) }
    dend_6 { pt3dadd( 55.1445, 1.89589, 54.8089, 0.07 ) }
    dend_6 { pt3dadd( 55.6921, 1.73112, 55.2486, 0.74 ) }
    dend_6 { pt3dadd( 56.1345, 1.5591, 55.6534, 1.03 ) }
    dend_6 { pt3dadd( 57.138, 1.07759, 56.6866, 0.15 ) }
    dend_6 { pt3dadd( 57.9586, 0.570725, 57.6215, 1.18 ) }
    dend_6 { pt3dadd( 58.2723, 0.328698, 58.0035, 1.4 ) }
    dend_6 { pt3dadd( 58.9081, -0.271136, 58.8407, 0.15 ) }
    dend_6 { pt3dadd( 59.3439, -0.795794, 59.4503, 0.15 ) }
    dend_6 { pt3dadd( 59.5713, -1.11852, 59.7796, 0.88 ) }
    dend_6 { pt3dadd( 59.8335, -1.53949, 60.1828, 0.29 ) }
    dend_6 { pt3dadd( 60.2859, -2.32123, 60.9321, 0.15 ) }
    dend_6 { pt3dadd( 60.5831, -2.86353, 61.5051, 0.81 ) }
    dend_6 { pt3dadd( 60.8845, -3.45414, 62.1857, 1.62 ) }
    dend_6 { pt3dadd( 61.3839, -4.63202, 63.5911, 0.15 ) }
    dend_6 { pt3dadd( 61.6079, -5.26424, 64.3646, 0.15 ) }
    dend_6 { pt3dadd( 61.7755, -5.83635, 65.0584, 0.22 ) }
    dend_6 { pt3dadd( 61.9273, -6.55891, 65.9108, 0.22 ) }
    dend_6 { pt3dadd( 61.9982, -7.03789, 66.45, 0.22 ) }
    dend_6 { pt3dadd( 62.0651, -7.49377, 66.9757, 1.18 ) }
    dend_6 { pt3dadd( 62.161, -8.06331, 67.6047, 1.62 ) }
    dend_6 { pt3dadd( 62.4807, -9.07918, 68.6776, 0.22 ) }
    dend_6 { pt3dadd( 62.7522, -9.56256, 69.2334, 0.22 ) }
    dend_6 { pt3dadd( 62.9647, -9.80972, 69.5621, 0.44 ) }
    dend_6 { pt3dadd( 63.5695, -10.3122, 70.3667, 0.15 ) }
    dend_6 { pt3dadd( 64.0399, -10.6024, 70.9235, 1.33 ) }
    dend_6 { pt3dadd( 65.0133, -11.1078, 71.9856, 0.15 ) }
    dend_6 { pt3dadd( 66.0447, -11.5821, 73.0159, 0.22 ) }
    dend_6 { pt3dadd( 66.6022, -11.857, 73.5191, 0.22 ) }
    dend_6 { pt3dadd( 66.8927, -12.0112, 73.7631, 0.22 ) }
    dend_6 { pt3dadd( 67.4018, -12.3229, 74.1473, 0.74 ) }
    dend_6 { pt3dadd( 67.9458, -12.6757, 74.498, 1.25 ) }
    dend_6 { pt3dadd( 68.4079, -12.9725, 74.7219, 1.25 ) }
    dend_6 { pt3dadd( 69.8973, -13.9994, 75.2783, 0.22 ) }
    dend_6 { pt3dadd( 70.5505, -14.4651, 75.5261, 0.22 ) }
    dend_6 { pt3dadd( 71.0971, -14.8663, 75.7465, 1.03 ) }
    dend_6 { pt3dadd( 71.7839, -15.3736, 76.0263, 1.84 ) }
    dend_6 { pt3dadd( 73.5273, -16.6487, 76.717, 0.22 ) }
    dend_6 { pt3dadd( 74.2841, -17.2213, 77.0022, 1.11 ) }
    dend_6 { pt3dadd( 75.36, -18.1059, 77.4066, 0.22 ) }
    dend_6 { pt3dadd( 76.0493, -18.7078, 77.6894, 0.15 ) }
    dend_6 { pt3dadd( 76.5414, -19.1418, 77.9138, 0.15 ) }
    dend_6 { pt3dadd( 77.2601, -19.7905, 78.2808, 1.03 ) }
    dend_6 { pt3dadd( 78.2706, -20.7582, 78.864, 0.22 ) }
    dend_6 { pt3dadd( 78.751, -21.2086, 79.1993, 0.96 ) }
    dend_6 { pt3dadd( 79.598, -21.9984, 79.8616, 0.15 ) }
    dend_6 { pt3dadd( 80.161, -22.5365, 80.3801, 0.15 ) }
    dend_6 { pt3dadd( 80.5644, -22.9568, 80.8385, 0.96 ) }
    dend_6 { pt3dadd( 81.0955, -23.5254, 81.5707, 1.92 ) }
    dend_6 { pt3dadd( 82.3699, -24.7911, 83.5722, 0.22 ) }
    dend_6 { pt3dadd( 82.7801, -25.1565, 84.2442, 0.44 ) }
    dend_6 { pt3dadd( 83.4105, -25.723, 85.3486, 1.18 ) }
    dend_6 { pt3dadd( 84.1428, -26.423, 86.7801, 0.22 ) }
    dend_6 { pt3dadd( 84.8309, -27.1293, 88.3499, 0.52 ) }
    dend_6 { pt3dadd( 85.3404, -27.7028, 89.8114, 0.81 ) }
    dend_6 { pt3dadd( 85.5917, -28.0401, 90.8501, 0.81 ) }
    dend_6 { pt3dadd( 85.8851, -28.4804, 92.654, 0.52 ) }
    dend_6 { pt3dadd( 85.9294, -28.6319, 93.6781, 0.52 ) }
    dend_6 { pt3dadd( 85.7921, -28.6235, 94.7013, 0.52 ) }
    dend_6 { pt3dadd( 85.4468, -28.4339, 95.6203, 0.52 ) }
    dend_6 { pt3dadd( 85.0336, -28.1412, 96.3031, 1.25 ) }
    dend_6 { pt3dadd( 84.6175, -27.7634, 96.8669, 1.25 ) }
    dend_6 { pt3dadd( 84.1173, -27.1666, 97.5383, 0.37 ) }
    dend_6 { pt3dadd( 83.5, -26.2366, 98.5039, 0.66 ) }
    dend_6 { pt3dadd( 83.1599, -25.5759, 99.1586, 0.37 ) }
    dend_6 { pt3dadd( 82.9249, -24.8783, 99.8794, 0.66 ) }
    dend_6 { pt3dadd( 82.8056, -24.1256, 100.811, 0.15 ) }
    dend_6 { pt3dadd( 82.825, -23.6805, 101.488, 0.15 ) }
    dend_6 { pt3dadd( 82.8985, -23.4497, 101.928, 0.15 ) }
    dend_6 { pt3dadd( 83.0733, -23.114, 102.679, 1.62 ) }
    dend_6 { pt3dadd( 83.4292, -22.5122, 104.148, 0.22 ) }
    dend_6 { pt3dadd( 83.8099, -21.8784, 105.842, 0.88 ) }
    dend_6 { pt3dadd( 84.0919, -21.4109, 107.301, 1.4 ) }
    dend_6 { pt3dadd( 84.3064, -21.0298, 108.645, 1.4 ) }
    dend_6 { pt3dadd( 84.5305, -20.5339, 110.524, 0.66 ) }
    dend_6 { pt3dadd( 84.6524, -20.1331, 112.222, 0.29 ) }
    dend_6 { pt3dadd( 84.6737, -19.9747, 113.086, 0.29 ) }
    dend_6 { pt3dadd( 84.6646, -19.8634, 113.953, 0.29 ) }
    dend_6 { pt3dadd( 84.6223, -19.8381, 114.529, 0.29 ) }
    dend_6 { pt3dadd( 84.4357, -19.9528, 115.866, 0.29 ) }
    dend_6 { pt3dadd( 84.2512, -20.1793, 116.777, 0.29 ) }
    dend_6 { pt3dadd( 84.019, -20.5182, 117.801, 0.29 ) }
    dend_6 { pt3dadd( 83.8176, -20.7261, 118.558, 0.29 ) }
    dend_6 { pt3dadd( 83.6185, -20.8073, 119.114, 0.29 ) }
    dend_6 { pt3dadd( 83.4543, -20.8123, 119.478, 0.29 ) }
    dend_6 { pt3dadd( 82.9903, -20.6362, 120.184, 0.88 ) }
    dend_6 { pt3dadd( 82.4682, -20.2987, 120.829, 1.25 ) }
    dend_6 { pt3dadd( 81.9704, -19.9027, 121.416, 0.59 ) }
    dend_6 { pt3dadd( 81.2996, -19.3379, 122.151, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_6 { pt3dadd( 80.8426, -18.9327, 122.647, 1.4 ) }
    dend_6 { pt3dadd( 79.4354, -17.6805, 124.118, 0.15 ) }
    dend_6 { pt3dadd( 78.8874, -17.204, 124.648, 0.74 ) }
    dend_6 { pt3dadd( 77.8705, -16.3398, 125.559, 0.22 ) }
    dend_6 { pt3dadd( 77.1585, -15.7458, 126.186, 1.03 ) }
    dend_6 { pt3dadd( 76.659, -15.3317, 126.638, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 6/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 43.5074, 6.25899, 47.4206, 0.15 ) }
    dend_5 { pt3dadd( 42.2816, 4.62973, 47.9863, 0.15 ) }
    dend_5 { pt3dadd( 41.7879, 3.95811, 48.193, 0.07 ) }
    dend_5 { pt3dadd( 41.1961, 3.1537, 48.417, 1.03 ) }
    dend_5 { pt3dadd( 40.3699, 2.04183, 48.6911, 0.07 ) }
    dend_5 { pt3dadd( 39.545, 0.951524, 48.94, 0.07 ) }
    dend_5 { pt3dadd( 39.0729, 0.346767, 49.0694, 0.66 ) }
    dend_5 { pt3dadd( 38.115, -0.86048, 49.1732, 0.07 ) }
    dend_5 { pt3dadd( 37.6255, -1.48958, 49.1858, 0.07 ) }
    dend_5 { pt3dadd( 36.9201, -2.40807, 49.1635, 0.07 ) }
    dend_5 { pt3dadd( 36.7112, -2.68118, 49.1314, 0.29 ) }
    dend_5 { pt3dadd( 36.3184, -3.21144, 49.0258, 0.81 ) }
    dend_5 { pt3dadd( 35.247, -4.68717, 48.6419, 0.07 ) }
    dend_5 { pt3dadd( 34.5226, -5.71412, 48.3193, 0.07 ) }
    dend_5 { pt3dadd( 34.0288, -6.42981, 48.0543, 0.15 ) }
    dend_5 { pt3dadd( 33.0471, -7.8957, 47.4554, 0.07 ) }
    dend_5 { pt3dadd( 32.4559, -8.83002, 47.058, 0.07 ) }
    dend_5 { pt3dadd( 32.1269, -9.38704, 46.8169, 0.22 ) }
    dend_5 { pt3dadd( 31.8835, -9.82109, 46.6252, 0.22 ) }
    dend_5 { pt3dadd( 31.1521, -11.1012, 46.0405, 0.15 ) }
    dend_5 { pt3dadd( 30.7302, -11.8537, 45.7059, 0.15 ) }
    dend_5 { pt3dadd( 30.2503, -12.7708, 45.3275, 0.07 ) }
    dend_5 { pt3dadd( 29.9985, -13.2754, 45.1197, 0.15 ) }
    dend_5 { pt3dadd( 29.3967, -14.4773, 44.6458, 0.07 ) }
    dend_5 { pt3dadd( 29.0348, -15.1505, 44.3815, 0.59 ) }
    dend_5 { pt3dadd( 28.355, -16.2202, 43.9357, 0.07 ) }
    dend_5 { pt3dadd( 27.9622, -16.7276, 43.6704, 0.07 ) }
    dend_5 { pt3dadd( 27.6537, -17.0524, 43.4589, 0.22 ) }
    dend_5 { pt3dadd( 26.9826, -17.6686, 43.0086, 0.22 ) }
    dend_5 { pt3dadd( 26.1452, -18.3844, 42.4879, 0.07 ) }
    dend_5 { pt3dadd( 25.1367, -19.2162, 41.9101, 0.07 ) }
    dend_5 { pt3dadd( 24.6443, -19.5859, 41.659, 0.07 ) }
    dend_5 { pt3dadd( 24.0208, -19.9931, 41.3976, 0.07 ) }
    dend_5 { pt3dadd( 22.9952, -20.5639, 41.0866, 0.29 ) }
    dend_5 { pt3dadd( 21.4179, -21.2949, 40.8176, 0.07 ) }
    dend_5 { pt3dadd( 20.7072, -21.5588, 40.8109, 0.29 ) }
    dend_5 { pt3dadd( 20.0714, -21.7681, 40.8846, 0.29 ) }
    dend_5 { pt3dadd( 18.8592, -22.1585, 41.1043, 0.07 ) }
    dend_5 { pt3dadd( 17.6894, -22.4938, 41.3703, 0.07 ) }
    dend_5 { pt3dadd( 17.195, -22.6055, 41.4906, 0.22 ) }
    dend_5 { pt3dadd( 16.4492, -22.728, 41.658, 0.37 ) }
    dend_5 { pt3dadd( 15.4449, -22.9015, 41.8278, 0.29 ) }
    dend_5 { pt3dadd( 14.2067, -23.1504, 41.856, 0.07 ) }
    dend_5 { pt3dadd( 13.7664, -23.2461, 41.7963, 0.37 ) }
    dend_5 { pt3dadd( 13.1162, -23.3624, 41.6503, 0.59 ) }
    dend_5 { pt3dadd( 11.8566, -23.4848, 41.2935, 0.07 ) }
    dend_5 { pt3dadd( 11.221, -23.4972, 41.0811, 0.15 ) }
    dend_5 { pt3dadd( 9.6492, -23.4198, 40.5015, 0.07 ) }
    dend_5 { pt3dadd( 8.62083, -23.329, 40.095, 0.07 ) }
    dend_5 { pt3dadd( 7.72476, -23.281, 39.7365, 0.15 ) }
    dend_5 { pt3dadd( 6.53744, -23.3039, 39.2805, 0.07 ) }
    dend_5 { pt3dadd( 5.91957, -23.3836, 39.0681, 0.07 ) }
    dend_5 { pt3dadd( 5.56626, -23.4619, 38.9684, 0.29 ) }
    dend_5 { pt3dadd( 5.13944, -23.5977, 38.8862, 0.29 ) }
    dend_5 { pt3dadd( 3.95487, -24.081, 38.7021, 0.07 ) }
    dend_5 { pt3dadd( 2.85314, -24.5983, 38.5671, 0.07 ) }
    dend_5 { pt3dadd( 1.87195, -25.0883, 38.4673, 0.07 ) }
    dend_5 { pt3dadd( 1.50356, -25.2671, 38.4195, 0.07 ) }
    dend_5 { pt3dadd( 1.31278, -25.3551, 38.3846, 0.15 ) }
    dend_5 { pt3dadd( 1.0054, -25.4785, 38.3031, 0.15 ) }
    dend_5 { pt3dadd( 0.409283, -25.633, 38.0698, 0.15 ) }
    dend_5 { pt3dadd( -0.398913, -25.7108, 37.6513, 0.15 ) }
    dend_5 { pt3dadd( -1.2331, -25.7056, 37.1137, 0.15 ) }
    dend_5 { pt3dadd( -1.72488, -25.6858, 36.7791, 0.15 ) }
    dend_5 { pt3dadd( -2.25478, -25.6596, 36.4136, 0.15 ) }
    dend_5 { pt3dadd( -2.78002, -25.6297, 36.0422, 0.15 ) }
    dend_5 { pt3dadd( -3.17885, -25.6051, 35.75, 0.15 ) }
    dend_5 { pt3dadd( -3.63898, -25.5526, 35.4198, 0.15 ) }
    dend_5 { pt3dadd( -4.53114, -25.3866, 34.778, 0.07 ) }
    dend_5 { pt3dadd( -5.12081, -25.2705, 34.3759, 0.07 ) }
    dend_5 { pt3dadd( -5.95258, -25.1631, 33.8738, 0.66 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 77/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -43.8759, 48.7742, 37.3458, 0.07 ) }
    dend_62 { pt3dadd( -44.6538, 48.2394, 38.2537, 0.07 ) }
    dend_62 { pt3dadd( -45.099, 47.8701, 38.8712, 0.88 ) }
    dend_62 { pt3dadd( -45.6244, 47.3514, 39.7238, 0.22 ) }
    dend_62 { pt3dadd( -45.9891, 46.9993, 40.3064, 0.88 ) }
    dend_62 { pt3dadd( -46.4824, 46.5297, 41.077, 1.84 ) }
    dend_62 { pt3dadd( -47.4115, 45.6143, 42.533, 0.22 ) }
    dend_62 { pt3dadd( -47.7728, 45.169, 43.1412, 0.22 ) }
    dend_62 { pt3dadd( -48.057, 44.7593, 43.6041, 0.22 ) }
    dend_62 { pt3dadd( -48.5391, 44.0064, 44.3353, 0.15 ) }
    dend_62 { pt3dadd( -48.8791, 43.4467, 44.8194, 0.15 ) }
    dend_62 { pt3dadd( -49.1565, 42.9975, 45.1462, 0.29 ) }
    dend_62 { pt3dadd( -49.756, 42.0472, 45.7052, 1.25 ) }
    dend_62 { pt3dadd( -50.6858, 40.6064, 46.4602, 0.07 ) }
    dend_62 { pt3dadd( -51.0003, 40.1145, 46.6986, 0.88 ) }
    dend_62 { pt3dadd( -51.1653, 39.8402, 46.8284, 1.18 ) }
    dend_62 { pt3dadd( -51.8231, 38.7845, 47.3308, 0.07 ) }
    dend_62 { pt3dadd( -52.1566, 38.2751, 47.5884, 0.74 ) }
    dend_62 { pt3dadd( -52.7573, 37.3784, 48.1402, 0.07 ) }
    dend_62 { pt3dadd( -52.9966, 36.9883, 48.4396, 0.29 ) }
    dend_62 { pt3dadd( -53.2785, 36.4187, 48.9666, 0.07 ) }
    dend_62 { pt3dadd( -53.4457, 35.9339, 49.5188, 1.03 ) }
    dend_62 { pt3dadd( -53.5089, 35.6067, 49.983, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_62 { pt3dadd( -53.565, 34.8901, 51.1603, 0.22 ) }
    dend_62 { pt3dadd( -53.5521, 34.3905, 52.0865, 0.22 ) }
    dend_62 { pt3dadd( -53.5341, 33.9304, 53.0337, 0.22 ) }
    dend_62 { pt3dadd( -53.5552, 33.5979, 53.7778, 0.22 ) }
    dend_62 { pt3dadd( -53.5935, 33.3999, 54.2129, 0.22 ) }
    dend_62 { pt3dadd( -53.7217, 33.0889, 54.7486, 0.22 ) }
    dend_62 { pt3dadd( -53.8748, 32.8216, 55.1151, 0.22 ) }
    dend_62 { pt3dadd( -54.194, 32.3845, 55.6285, 0.22 ) }
    dend_62 { pt3dadd( -54.6854, 31.713, 56.2696, 1.03 ) }
    dend_62 { pt3dadd( -55.1419, 31.0354, 56.8304, 1.47 ) }
    dend_62 { pt3dadd( -55.952, 29.695, 57.8409, 0.07 ) }
    dend_62 { pt3dadd( -56.1659, 29.3389, 58.1002, 1.25 ) }
    dend_62 { pt3dadd( -56.4858, 28.8268, 58.4704, 1.4 ) }
    dend_62 { pt3dadd( -57.152, 27.8083, 59.1825, 0.29 ) }
    dend_62 { pt3dadd( -57.6033, 27.1781, 59.6151, 0.15 ) }
    dend_62 { pt3dadd( -58.0102, 26.6866, 59.9506, 0.81 ) }
    dend_62 { pt3dadd( -58.9252, 25.691, 60.6171, 0.15 ) }
    dend_62 { pt3dadd( -59.4781, 25.1633, 60.9472, 0.15 ) }
    dend_62 { pt3dadd( -59.8957, 24.8013, 61.17, 0.37 ) }
    dend_62 { pt3dadd( -60.6239, 24.2545, 61.4444, 0.15 ) }
    dend_62 { pt3dadd( -61.0172, 23.9774, 61.5447, 0.88 ) }
    dend_62 { pt3dadd( -61.4109, 23.708, 61.6117, 1.55 ) }
    dend_62 { pt3dadd( -62.9727, 22.6737, 61.8061, 0.22 ) }
    dend_62 { pt3dadd( -63.3776, 22.4181, 61.8611, 0.22 ) }
    dend_62 { pt3dadd( -64.3544, 21.8491, 62.0276, 0.81 ) }
    dend_62 { pt3dadd( -65.6346, 21.1632, 62.303, 0.07 ) }
    dend_62 { pt3dadd( -66.1303, 20.9255, 62.4492, 0.74 ) }
    dend_62 { pt3dadd( -66.8944, 20.6012, 62.7586, 0.22 ) }
    dend_62 { pt3dadd( -67.7264, 20.2778, 63.2194, 0.37 ) }
    dend_62 { pt3dadd( -68.2839, 20.0704, 63.5994, 0.22 ) }
    dend_62 { pt3dadd( -69.1491, 19.7395, 64.3351, 1.03 ) }
    dend_62 { pt3dadd( -70.0279, 19.3445, 65.246, 0.07 ) }
    dend_62 { pt3dadd( -70.6595, 18.9957, 66.0272, 0.88 ) }
    dend_62 { pt3dadd( -71.1691, 18.6568, 66.7295, 1.25 ) }
    dend_62 { pt3dadd( -72.0809, 17.9397, 67.9774, 0.15 ) }
    dend_62 { pt3dadd( -72.5204, 17.5468, 68.5501, 0.74 ) }
    dend_62 { pt3dadd( -73.3616, 16.7211, 69.5368, 0.22 ) }
    dend_62 { pt3dadd( -74.1755, 15.8789, 70.3443, 1.11 ) }
    dend_62 { pt3dadd( -74.6868, 15.3583, 70.7634, 2.06 ) }
    dend_62 { pt3dadd( -75.9933, 14.0902, 71.6533, 0.15 ) }
    dend_62 { pt3dadd( -76.4938, 13.6305, 71.9446, 0.29 ) }
    dend_62 { pt3dadd( -77.6202, 12.6854, 72.5248, 0.07 ) }
    dend_62 { pt3dadd( -78.1743, 12.2866, 72.789, 0.22 ) }
    dend_62 { pt3dadd( -79.2255, 11.6335, 73.3185, 0.07 ) }
    dend_62 { pt3dadd( -79.8041, 11.3356, 73.6719, 1.4 ) }
    dend_62 { pt3dadd( -81.1262, 10.7775, 74.6297, 0.07 ) }
    dend_62 { pt3dadd( -81.774, 10.5355, 75.1334, 0.81 ) }
    dend_62 { pt3dadd( -82.8504, 10.1989, 76.0647, 0.07 ) }
    dend_62 { pt3dadd( -83.5095, 10.0258, 76.6889, 0.96 ) }
    dend_62 { pt3dadd( -84.7315, 9.78222, 77.8961, 0.07 ) }
    dend_62 { pt3dadd( -85.19, 9.71342, 78.3452, 0.07 ) }
    dend_62 { pt3dadd( -85.7817, 9.64302, 78.9119, 1.25 ) }
    dend_62 { pt3dadd( -87.134, 9.49015, 80.131, 0.22 ) }
    dend_62 { pt3dadd( -88.0644, 9.37142, 80.9008, 0.88 ) }
    dend_62 { pt3dadd( -88.6813, 9.3133, 81.3466, 1.18 ) }
    dend_62 { pt3dadd( -90.4897, 9.1891, 82.4802, 0.15 ) }
    dend_62 { pt3dadd( -91.0541, 9.15293, 82.7894, 0.81 ) }
    dend_62 { pt3dadd( -91.9505, 9.0923, 83.2053, 0.15 ) }
    dend_62 { pt3dadd( -92.8095, 9.02913, 83.513, 1.18 ) }
    dend_62 { pt3dadd( -94.1851, 8.97416, 83.92, 0.07 ) }
    dend_62 { pt3dadd( -94.7782, 8.98155, 84.072, 0.07 ) }
    dend_62 { pt3dadd( -95.6075, 9.09758, 84.2108, 0.07 ) }
    dend_62 { pt3dadd( -96.0388, 9.19298, 84.2608, 0.88 ) }
    dend_62 { pt3dadd( -96.6776, 9.36229, 84.3199, 1.33 ) }
    dend_62 { pt3dadd( -98.4182, 9.92892, 84.4312, 0.07 ) }
    dend_62 { pt3dadd( -99.2294, 10.2368, 84.454, 1.33 ) }
    dend_62 { pt3dadd( -101.198, 11.1206, 84.4694, 0.07 ) }
    dend_62 { pt3dadd( -101.529, 11.2918, 84.4633, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 68/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -43.8759, 48.7742, 37.3458, 0.15 ) }
    dend_61 { pt3dadd( -43.492, 47.2829, 37.1993, 0.15 ) }
    dend_61 { pt3dadd( -43.3241, 46.6645, 37.0936, 0.29 ) }
    dend_61 { pt3dadd( -43.0576, 45.7385, 36.9151, 0.15 ) }
    dend_61 { pt3dadd( -42.9456, 45.381, 36.8358, 0.52 ) }
    dend_61 { pt3dadd( -42.7104, 44.6628, 36.6695, 1.33 ) }
    dend_61 { pt3dadd( -42.2746, 43.2745, 36.3634, 0.07 ) }
    dend_61 { pt3dadd( -42.058, 42.5292, 36.1714, 0.07 ) }
    dend_61 { pt3dadd( -41.8804, 41.8904, 36.0353, 0.37 ) }
    dend_61 { pt3dadd( -41.5605, 40.8118, 35.9421, 0.07 ) }
    dend_61 { pt3dadd( -41.4589, 40.4838, 35.957, 0.15 ) }
    dend_61 { pt3dadd( -41.0075, 38.9826, 36.2091, 0.15 ) }
    dend_61 { pt3dadd( -40.8984, 38.6268, 36.3138, 0.74 ) }
    dend_61 { pt3dadd( -40.6724, 37.8319, 36.6073, 1.25 ) }
    dend_61 { pt3dadd( -40.1904, 35.8805, 37.4525, 0.15 ) }
    dend_61 { pt3dadd( -39.9435, 34.7265, 38.0128, 0.15 ) }
    dend_61 { pt3dadd( -39.8403, 34.2065, 38.2724, 0.15 ) }
    dend_61 { pt3dadd( -39.7275, 33.5581, 38.5876, 0.15 ) }
    dend_61 { pt3dadd( -39.612, 32.7223, 38.9453, 1.25 ) }
    dend_61 { pt3dadd( -39.4989, 31.2551, 39.4477, 0.07 ) }
    dend_61 { pt3dadd( -39.493, 30.6459, 39.603, 0.96 ) }
    dend_61 { pt3dadd( -39.5055, 30.1064, 39.7034, 1.25 ) }
    dend_61 { pt3dadd( -39.557, 28.2899, 39.9758, 0.15 ) }
    dend_61 { pt3dadd( -39.5763, 27.5354, 40.0563, 0.96 ) }
    dend_61 { pt3dadd( -39.5876, 26.0903, 40.1517, 0.07 ) }
    dend_61 { pt3dadd( -39.5812, 25.3961, 40.1677, 0.29 ) }
    dend_61 { pt3dadd( -39.5493, 23.3517, 40.1441, 0.07 ) }
    dend_61 { pt3dadd( -39.5398, 22.8982, 40.1275, 0.29 ) }
    dend_61 { pt3dadd( -39.4934, 21.4791, 40.0373, 0.07 ) }
    dend_61 { pt3dadd( -39.4511, 20.8268, 39.9873, 1.03 ) }
    dend_61 { pt3dadd( -39.3856, 20.1924, 39.9388, 1.47 ) }
    dend_61 { pt3dadd( -39.0643, 17.9208, 39.7925, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_61 { pt3dadd( -38.9653, 17.3956, 39.7699, 0.59 ) }
    dend_61 { pt3dadd( -38.8128, 16.6622, 39.7557, 0.07 ) }
    dend_61 { pt3dadd( -38.6689, 15.9701, 39.7751, 0.07 ) }
    dend_61 { pt3dadd( -38.4774, 15.0374, 39.8364, 0.07 ) }
    dend_61 { pt3dadd( -38.3308, 14.2076, 39.9266, 1.18 ) }
    dend_61 { pt3dadd( -38.0005, 12.0599, 40.2391, 0.07 ) }
    dend_61 { pt3dadd( -37.9375, 11.4409, 40.3341, 0.74 ) }
    dend_61 { pt3dadd( -37.8485, 9.79372, 40.5908, 0.07 ) }
    dend_61 { pt3dadd( -37.8477, 9.32464, 40.6611, 0.44 ) }
    dend_61 { pt3dadd( -37.9187, 7.72911, 40.9156, 0.07 ) }
    dend_61 { pt3dadd( -37.9933, 6.91497, 41.0573, 1.47 ) }
    dend_61 { pt3dadd( -38.2207, 5.24668, 41.3642, 0.07 ) }
    dend_61 { pt3dadd( -38.3064, 4.73112, 41.4529, 0.37 ) }
    dend_61 { pt3dadd( -38.5076, 3.70181, 41.608, 0.07 ) }
    dend_61 { pt3dadd( -38.802, 2.33156, 41.8377, 0.07 ) }
    dend_61 { pt3dadd( -39.003, 1.4488, 41.9948, 0.07 ) }
    dend_61 { pt3dadd( -39.0992, 0.989084, 42.0886, 0.37 ) }
    dend_61 { pt3dadd( -39.3063, -0.144921, 42.347, 0.15 ) }
    dend_61 { pt3dadd( -39.4236, -0.847574, 42.5339, 0.81 ) }
    dend_61 { pt3dadd( -39.6006, -2.06008, 42.8986, 0.15 ) }
    dend_61 { pt3dadd( -39.7209, -3.05165, 43.2336, 1.55 ) }
    dend_61 { pt3dadd( -39.8938, -4.66789, 43.851, 0.07 ) }
    dend_61 { pt3dadd( -39.9382, -5.14806, 44.0663, 0.66 ) }
    dend_61 { pt3dadd( -40.0027, -6.44479, 44.7442, 0.07 ) }
    dend_61 { pt3dadd( -39.9852, -6.90039, 45.0029, 0.29 ) }
    dend_61 { pt3dadd( -39.8986, -7.57306, 45.4094, 0.07 ) }
    dend_61 { pt3dadd( -39.8353, -7.98806, 45.6841, 0.74 ) }
    dend_61 { pt3dadd( -39.6453, -9.04573, 46.4319, 0.15 ) }
    dend_61 { pt3dadd( -39.4274, -9.95714, 47.0819, 1.18 ) }
    dend_61 { pt3dadd( -38.7952, -11.7439, 48.3523, 0.15 ) }
    dend_61 { pt3dadd( -38.5494, -12.3408, 48.7719, 0.66 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 31/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -42.7586, 91.1325, 131.023, 0.07 ) }
    dend_59 { pt3dadd( -43.8644, 89.7534, 130.833, 0.07 ) }
    dend_59 { pt3dadd( -44.2355, 89.1726, 130.755, 0.07 ) }
    dend_59 { pt3dadd( -44.6136, 88.5809, 130.675, 0.22 ) }
    dend_59 { pt3dadd( -45.3274, 87.464, 130.525, 0.07 ) }
    dend_59 { pt3dadd( -45.6177, 87.0096, 130.464, 0.52 ) }
    dend_59 { pt3dadd( -46.1068, 86.2441, 130.362, 0.07 ) }
    dend_59 { pt3dadd( -46.2586, 85.8387, 130.332, 0.22 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 39/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -42.7586, 91.1325, 131.023, 0.29 ) }
    dend_58 { pt3dadd( -43.1463, 91.2226, 133.006, 0.29 ) }
    dend_58 { pt3dadd( -43.4729, 91.1592, 134.44, 0.29 ) }
    dend_58 { pt3dadd( -43.9381, 91.0112, 136.024, 0.59 ) }
    dend_58 { pt3dadd( -44.6352, 90.813, 138.111, 0.74 ) }
    dend_58 { pt3dadd( -44.9999, 90.7448, 139.105, 1.03 ) }
    dend_58 { pt3dadd( -45.4523, 90.7439, 140.267, 1.03 ) }
    dend_58 { pt3dadd( -46.0665, 90.8254, 141.737, 0.15 ) }
    dend_58 { pt3dadd( -46.5644, 91.029, 142.845, 0.44 ) }
    dend_58 { pt3dadd( -47.2187, 91.394, 144.208, 0.81 ) }
    dend_58 { pt3dadd( -47.6749, 91.7468, 145.058, 1.03 ) }
    dend_58 { pt3dadd( -48.5022, 92.5654, 146.585, 0.15 ) }
    dend_58 { pt3dadd( -49.211, 93.4677, 147.926, 0.74 ) }
    dend_58 { pt3dadd( -49.8306, 94.5944, 149.296, 0.37 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 53/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 13.5143, -5.80402, 5.84149, 0.22 ) }
    dend_55 { pt3dadd( 13.6066, -7.15729, 3.559, 0.22 ) }
    dend_55 { pt3dadd( 13.6927, -7.79911, 2.66894, 0.37 ) }
    dend_55 { pt3dadd( 13.7766, -8.19872, 2.16468, 0.59 ) }
    dend_55 { pt3dadd( 13.9316, -8.93749, 1.23245, 0.22 ) }
    dend_55 { pt3dadd( 14.1006, -9.74242, 0.216736, 1.47 ) }
    dend_55 { pt3dadd( 14.2728, -10.563, -0.818651, 0.29 ) }
    dend_55 { pt3dadd( 14.5083, -11.4176, -1.58292, 0.15 ) }
    dend_55 { pt3dadd( 14.7701, -12.2391, -2.22583, 1.03 ) }
    dend_55 { pt3dadd( 15.1048, -18.3458, -10.2504, 1.03 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 63/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 13.5143, -5.80402, 5.84149, 0.22 ) }
    dend_52 { pt3dadd( 13.8441, -6.54285, 6.13708, 0.22 ) }
    dend_52 { pt3dadd( 14.1065, -7.25538, 6.36069, 1.4 ) }
    dend_52 { pt3dadd( 14.4104, -8.44788, 6.63313, 2.65 ) }
    dend_52 { pt3dadd( 14.9202, -11.4954, 7.17511, 0.22 ) }
    dend_52 { pt3dadd( 14.9859, -12.1096, 7.25718, 0.22 ) }
    dend_52 { pt3dadd( 15.0432, -13.0607, 7.35081, 0.96 ) }
    dend_52 { pt3dadd( 15.0077, -14.2242, 7.3977, 2.06 ) }
    dend_52 { pt3dadd( 14.7947, -16.0883, 7.35984, 0.22 ) }
    dend_52 { pt3dadd( 14.5676, -17.1321, 7.23441, 0.15 ) }
    dend_52 { pt3dadd( 14.334, -17.9252, 7.04309, 0.29 ) }
    dend_52 { pt3dadd( 14.0659, -18.7373, 6.83177, 0.15 ) }
    dend_52 { pt3dadd( 13.8055, -19.5933, 6.58826, 1.18 ) }
    dend_52 { pt3dadd( 13.671, -20.1023, 6.43257, 1.7 ) }
    dend_52 { pt3dadd( 13.1841, -22.3233, 5.72483, 0.22 ) }
    dend_52 { pt3dadd( 13.0296, -23.2251, 5.44105, 0.81 ) }
    dend_52 { pt3dadd( 12.9566, -23.8177, 5.2673, 1.4 ) }
    dend_52 { pt3dadd( 12.8046, -25.8547, 4.71961, 0.15 ) }
    dend_52 { pt3dadd( 12.812, -26.39, 4.5993, 0.15 ) }
    dend_52 { pt3dadd( 12.9361, -27.4706, 4.40199, 0.15 ) }
    dend_52 { pt3dadd( 13.0733, -28.1769, 4.30591, 0.37 ) }
    dend_52 { pt3dadd( 13.201, -28.8812, 4.22243, 1.33 ) }
    dend_52 { pt3dadd( 13.3097, -29.7104, 4.12941, 1.84 ) }
    dend_52 { pt3dadd( 13.3454, -32.3724, 3.86362, 0.22 ) }
    dend_52 { pt3dadd( 13.219, -33.8023, 3.71192, 0.07 ) }
    dend_52 { pt3dadd( 13.15, -34.4063, 3.64747, 0.96 ) }
    dend_52 { pt3dadd( 12.9305, -35.6907, 3.51348, 0.22 ) }
    dend_52 { pt3dadd( 12.6733, -36.6707, 3.40378, 1.33 ) }
    dend_52 { pt3dadd( 11.9581, -38.34, 3.20143, 0.22 ) }
    dend_52 { pt3dadd( 11.2702, -39.1636, 3.09004, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 93/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 8.51403, 37.6115, 37.9846, 0.44 ) }
    dend_44 { pt3dadd( 7.33179, 37.4042, 38.8253, 0.44 ) }
    dend_44 { pt3dadd( 6.36946, 37.3763, 39.3753, 0.44 ) }
    dend_44 { pt3dadd( 5.40009, 37.4464, 39.9171, 0.44 ) }
    dend_44 { pt3dadd( 4.97647, 37.4955, 40.1654, 0.44 ) }
    dend_44 { pt3dadd( 4.2948, 37.5803, 40.5641, 0.96 ) }
    dend_44 { pt3dadd( 3.86402, 37.6325, 40.8093, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_44 { pt3dadd( 2.68616, 37.7563, 41.3603, 0.15 ) }
    dend_44 { pt3dadd( 2.10871, 37.8505, 41.6548, 0.15 ) }
    dend_44 { pt3dadd( 1.5839, 37.9425, 41.9758, 0.15 ) }
    dend_44 { pt3dadd( 0.804106, 38.0344, 42.5031, 0.15 ) }
    dend_44 { pt3dadd( 0.369324, 38.0266, 42.8028, 1.33 ) }
    dend_44 { pt3dadd( -0.533146, 37.9029, 43.4053, 1.92 ) }
    dend_44 { pt3dadd( -2.12924, 37.5163, 44.4237, 0.22 ) }
    dend_44 { pt3dadd( -3.17245, 37.1754, 45.033, 0.59 ) }
    dend_44 { pt3dadd( -3.71752, 36.9303, 45.3602, 1.03 ) }
    dend_44 { pt3dadd( -4.98078, 36.1875, 46.1828, 0.15 ) }
    dend_44 { pt3dadd( -5.661, 35.6811, 46.674, 0.15 ) }
    dend_44 { pt3dadd( -5.96867, 35.3859, 46.9134, 0.88 ) }
    dend_44 { pt3dadd( -6.54562, 34.6642, 47.3732, 1.92 ) }
    dend_44 { pt3dadd( -7.69176, 32.967, 48.339, 0.22 ) }
    dend_44 { pt3dadd( -7.98282, 32.5098, 48.6134, 0.22 ) }
    dend_44 { pt3dadd( -8.31917, 31.9053, 48.9392, 0.22 ) }
    dend_44 { pt3dadd( -8.51306, 31.5613, 49.1188, 0.22 ) }
    dend_44 { pt3dadd( -9.0293, 30.748, 49.5395, 0.22 ) }
    dend_44 { pt3dadd( -9.47362, 30.1476, 49.8496, 1.11 ) }
    dend_44 { pt3dadd( -10.2411, 29.2962, 50.2744, 2.58 ) }
    dend_44 { pt3dadd( -11.6981, 27.8636, 51.0089, 0.52 ) }
    dend_44 { pt3dadd( -12.8326, 26.7829, 51.6015, 0.15 ) }
    dend_44 { pt3dadd( -13.3057, 26.3357, 51.8728, 0.15 ) }
    dend_44 { pt3dadd( -13.9643, 25.7357, 52.2912, 0.29 ) }
    dend_44 { pt3dadd( -14.583, 25.1969, 52.7086, 0.96 ) }
    dend_44 { pt3dadd( -15.5665, 24.3398, 53.3986, 0.22 ) }
    dend_44 { pt3dadd( -16.2175, 23.8168, 53.8888, 0.22 ) }
    dend_44 { pt3dadd( -16.8035, 23.2985, 54.3265, 0.44 ) }
    dend_44 { pt3dadd( -17.4069, 22.6978, 54.8202, 1.62 ) }
    dend_44 { pt3dadd( -17.9601, 22.1072, 55.3228, 1.99 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 8.51403, 37.6115, 37.9846, 1.47 ) }
    dend_41 { pt3dadd( 9.66403, 38.0421, 38.4846, 1.47 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 32/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -16.5771, -166.993, 43.7865, 0.22 ) }
    dend_23 { pt3dadd( -16.4818, -166.172, 44.2875, 0.22 ) }
    dend_23 { pt3dadd( -16.3702, -165.235, 44.8213, 0.22 ) }
    dend_23 { pt3dadd( -16.2594, -164.49, 45.2076, 0.22 ) }
    dend_23 { pt3dadd( -16.1132, -163.65, 45.6025, 0.66 ) }
    dend_23 { pt3dadd( -15.9872, -163.019, 45.8962, 0.81 ) }
    dend_23 { pt3dadd( -15.6972, -161.831, 46.4212, 0.15 ) }
    dend_23 { pt3dadd( -15.4832, -161.118, 46.6858, 1.18 ) }
    dend_23 { pt3dadd( -15.2492, -160.416, 46.9138, 1.4 ) }
    dend_23 { pt3dadd( -14.6812, -158.886, 47.3658, 0.15 ) }
    dend_23 { pt3dadd( -14.4545, -158.359, 47.5084, 0.15 ) }
    dend_23 { pt3dadd( -13.9276, -157.327, 47.7811, 1.7 ) }
    dend_23 { pt3dadd( -13.367, -156.408, 47.9927, 0.22 ) }
    dend_23 { pt3dadd( -12.8957, -155.707, 48.1334, 0.88 ) }
    dend_23 { pt3dadd( -12.5021, -155.154, 48.2331, 0.22 ) }
    dend_23 { pt3dadd( -12.0754, -154.576, 48.3155, 0.07 ) }
    dend_23 { pt3dadd( -11.5858, -153.86, 48.4054, 0.07 ) }
    dend_23 { pt3dadd( -10.9524, -152.861, 48.5376, 0.66 ) }
    dend_23 { pt3dadd( -10.3453, -151.809, 48.6797, 0.07 ) }
    dend_23 { pt3dadd( -10.1345, -151.401, 48.7403, 0.37 ) }
    dend_23 { pt3dadd( -9.88703, -150.858, 48.8236, 0.66 ) }
    dend_23 { pt3dadd( -9.20853, -149.135, 49.118, 0.07 ) }
    dend_23 { pt3dadd( -8.94542, -148.384, 49.2624, 1.03 ) }
    dend_23 { pt3dadd( -8.52818, -146.984, 49.5676, 0.15 ) }
    dend_23 { pt3dadd( -8.37251, -146.363, 49.7204, 0.88 ) }
    dend_23 { pt3dadd( -8.25947, -145.829, 49.8603, 1.18 ) }
    dend_23 { pt3dadd( -7.99214, -144.104, 50.3527, 0.15 ) }
    dend_23 { pt3dadd( -7.9621, -143.535, 50.5267, 0.15 ) }
    dend_23 { pt3dadd( -8.00273, -142.907, 50.7213, 0.22 ) }
    dend_23 { pt3dadd( -8.11355, -142.441, 50.8632, 0.07 ) }
    dend_23 { pt3dadd( -8.32114, -141.888, 51.0082, 0.29 ) }
    dend_23 { pt3dadd( -8.572, -141.376, 51.1224, 0.07 ) }
    dend_23 { pt3dadd( -8.81577, -140.959, 51.1881, 0.59 ) }
    dend_23 { pt3dadd( -9.24117, -140.284, 51.2711, 0.15 ) }
    dend_23 { pt3dadd( -9.81033, -139.415, 51.3589, 1.62 ) }
    dend_23 { pt3dadd( -10.3875, -138.535, 51.4392, 0.15 ) }
    dend_23 { pt3dadd( -10.7954, -137.916, 51.5029, 0.29 ) }
    dend_23 { pt3dadd( -11.4498, -136.909, 51.6118, 0.07 ) }
    dend_23 { pt3dadd( -11.9251, -136.091, 51.7291, 0.07 ) }
    dend_23 { pt3dadd( -12.1665, -135.622, 51.8111, 0.66 ) }
    dend_23 { pt3dadd( -12.5737, -134.783, 51.9743, 0.15 ) }
    dend_23 { pt3dadd( -12.8754, -134.147, 52.1126, 1.03 ) }
    dend_23 { pt3dadd( -13.2315, -133.409, 52.3032, 1.62 ) }
    dend_23 { pt3dadd( -14.2161, -131.366, 52.9695, 0.07 ) }
    dend_23 { pt3dadd( -14.6419, -130.456, 53.3022, 0.59 ) }
    dend_23 { pt3dadd( -14.9458, -129.807, 53.5581, 0.15 ) }
    dend_23 { pt3dadd( -15.3293, -128.974, 53.9002, 0.88 ) }
    dend_23 { pt3dadd( -15.8426, -127.751, 54.4158, 0.15 ) }
    dend_23 { pt3dadd( -16.312, -126.641, 54.9176, 0.15 ) }
    dend_23 { pt3dadd( -16.6878, -125.768, 55.345, 1.33 ) }
    dend_23 { pt3dadd( -17.1407, -124.66, 55.9089, 0.15 ) }
    dend_23 { pt3dadd( -17.4638, -123.739, 56.383, 0.15 ) }
    dend_23 { pt3dadd( -17.6735, -122.937, 56.7716, 1.33 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 85/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -16.5771, -166.993, 43.7865, 0.15 ) }
    dend_22 { pt3dadd( -17.0443, -168.269, 44.0045, 0.15 ) }
    dend_22 { pt3dadd( -17.4485, -169.004, 44.2553, 0.15 ) }
    dend_22 { pt3dadd( -17.8108, -169.503, 44.5164, 0.15 ) }
    dend_22 { pt3dadd( -18.1508, -169.895, 44.7526, 0.74 ) }
    dend_22 { pt3dadd( -18.7174, -170.51, 45.1347, 0.15 ) }
    dend_22 { pt3dadd( -19.1473, -170.995, 45.4308, 1.4 ) }
    dend_22 { pt3dadd( -19.8776, -171.761, 46.0179, 0.15 ) }
    dend_22 { pt3dadd( -20.5757, -172.485, 46.6115, 0.66 ) }
    dend_22 { pt3dadd( -21.0895, -173.108, 47.1845, 0.07 ) }
    dend_22 { pt3dadd( -21.2928, -173.41, 47.5227, 0.07 ) }
    dend_22 { pt3dadd( -21.5177, -173.797, 47.966, 0.29 ) }
    dend_22 { pt3dadd( -21.834, -174.462, 48.7601, 0.07 ) }
    dend_22 { pt3dadd( -22.0049, -175.005, 49.43, 1.25 ) }
    dend_22 { pt3dadd( -22.1937, -176.039, 50.795, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_22 { pt3dadd( -22.2999, -177.127, 52.4157, 1.62 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -67.9292, -129.274, 7.36402, 0.59 ) }
    dend_18 { pt3dadd( -69.6665, -128.867, 6.814, 0.59 ) }
    dend_18 { pt3dadd( -70.2014, -128.716, 6.60632, 0.07 ) }
    dend_18 { pt3dadd( -70.9345, -128.493, 6.24388, 0.07 ) }
    dend_18 { pt3dadd( -71.4401, -128.331, 5.95889, 0.37 ) }
    dend_18 { pt3dadd( -72.2864, -128.034, 5.42733, 0.07 ) }
    dend_18 { pt3dadd( -72.9325, -127.779, 4.96026, 0.15 ) }
    dend_18 { pt3dadd( -73.8076, -127.423, 4.17158, 1.62 ) }
    dend_18 { pt3dadd( -74.7695, -126.884, 2.93458, 0.22 ) }
    dend_18 { pt3dadd( -75.0925, -126.632, 2.30202, 0.22 ) }
    dend_18 { pt3dadd( -75.3223, -126.414, 1.722, 0.59 ) }
    dend_18 { pt3dadd( -75.5467, -126.097, 0.836574, 0.59 ) }
    dend_18 { pt3dadd( -75.655, -125.788, -0.133754, 0.59 ) }
    dend_18 { pt3dadd( -75.5315, -125.464, -1.42779, 1.18 ) }
    dend_18 { pt3dadd( -75.3133, -125.324, -2.10822, 1.18 ) }
    dend_18 { pt3dadd( -80.715, -122.041, -9.89072, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -67.9292, -129.274, 7.36402, 0.22 ) }
    dend_17 { pt3dadd( -68.9451, -129.906, 7.01116, 0.22 ) }
    dend_17 { pt3dadd( -69.5078, -130.244, 6.80508, 0.15 ) }
    dend_17 { pt3dadd( -70.3331, -130.677, 6.44539, 0.15 ) }
    dend_17 { pt3dadd( -71.0551, -131.028, 6.08935, 1.25 ) }
    dend_17 { pt3dadd( -71.8851, -131.396, 5.6775, 0.15 ) }
    dend_17 { pt3dadd( -72.5976, -131.687, 5.33885, 0.15 ) }
    dend_17 { pt3dadd( -73.5868, -132.036, 4.8728, 1.62 ) }
    dend_17 { pt3dadd( -74.6885, -132.399, 4.39646, 0.22 ) }
    dend_17 { pt3dadd( -75.3649, -132.637, 4.11304, 0.22 ) }
    dend_17 { pt3dadd( -76.1602, -132.927, 3.7783, 1.33 ) }
    dend_17 { pt3dadd( -76.9444, -133.206, 3.46253, 1.11 ) }
    dend_17 { pt3dadd( -78.2714, -133.657, 2.97064, 0.15 ) }
    dend_17 { pt3dadd( -78.7405, -133.822, 2.82256, 0.15 ) }
    dend_17 { pt3dadd( -79.8007, -134.236, 2.57791, 0.15 ) }
    dend_17 { pt3dadd( -80.4117, -134.486, 2.49259, 0.15 ) }
    dend_17 { pt3dadd( -81.0366, -134.752, 2.49204, 0.66 ) }
    dend_17 { pt3dadd( -81.9265, -135.072, 2.71092, 0.07 ) }
    dend_17 { pt3dadd( -82.469, -135.198, 3.01244, 0.88 ) }
    dend_17 { pt3dadd( -83.2017, -135.246, 3.57242, 0.15 ) }
    dend_17 { pt3dadd( -83.943, -135.177, 4.22822, 0.59 ) }
    dend_17 { pt3dadd( -84.85, -134.948, 5.13656, 1.4 ) }
    dend_17 { pt3dadd( -86.0317, -134.442, 6.36072, 0.22 ) }
    dend_17 { pt3dadd( -86.8587, -133.932, 7.24868, 1.25 ) }
    dend_17 { pt3dadd( -87.836, -133.16, 8.33223, 0.44 ) }
    dend_17 { pt3dadd( -88.3492, -132.658, 8.89793, 0.52 ) }
    dend_17 { pt3dadd( -88.9219, -131.973, 9.5543, 1.11 ) }
    dend_17 { pt3dadd( -89.532, -131.095, 10.3215, 0.37 ) }
    dend_17 { pt3dadd( -90.1863, -130.03, 11.2593, 0.07 ) }
    dend_17 { pt3dadd( -90.5407, -129.445, 11.8161, 0.07 ) }
    dend_17 { pt3dadd( -90.7749, -129.034, 12.2527, 0.22 ) }
    dend_17 { pt3dadd( -91.0689, -128.48, 12.9225, 0.96 ) }
    dend_17 { pt3dadd( -91.3134, -127.971, 13.5986, 2.06 ) }
    dend_17 { pt3dadd( -91.7185, -126.884, 15.2165, 0.22 ) }
    dend_17 { pt3dadd( -91.9227, -126.181, 16.4169, 0.74 ) }
    dend_17 { pt3dadd( -92.0328, -125.778, 17.2767, 0.74 ) }
    dend_17 { pt3dadd( -92.1149, -125.449, 18.229, 0.74 ) }
    dend_17 { pt3dadd( -92.1274, -125.357, 18.6533, 0.74 ) }
    dend_17 { pt3dadd( -92.0828, -125.245, 19.6762, 0.74 ) }
    dend_17 { pt3dadd( -91.9085, -125.205, 20.7442, 0.74 ) }
    dend_17 { pt3dadd( -91.7824, -125.182, 21.3746, 0.74 ) }
    dend_17 { pt3dadd( -91.7108, -125.125, 21.7327, 0.74 ) }
    dend_17 { pt3dadd( -91.5266, -124.812, 22.5444, 0.74 ) }
    dend_17 { pt3dadd( -91.2995, -124.377, 23.1874, 0.74 ) }
    dend_17 { pt3dadd( -90.8521, -123.504, 24.1559, 0.29 ) }
    dend_17 { pt3dadd( -90.5977, -122.992, 24.6327, 0.29 ) }
    dend_17 { pt3dadd( -90.2213, -122.263, 25.2421, 0.07 ) }
    dend_17 { pt3dadd( -89.9707, -121.815, 25.5942, 0.44 ) }
    dend_17 { pt3dadd( -89.3067, -120.699, 26.4092, 0.07 ) }
    dend_17 { pt3dadd( -88.91, -120.098, 26.8436, 0.07 ) }
    dend_17 { pt3dadd( -88.5078, -119.524, 27.2655, 0.07 ) }
    dend_17 { pt3dadd( -88.2637, -119.2, 27.5162, 0.29 ) }
    dend_17 { pt3dadd( -87.8055, -118.609, 27.9635, 0.07 ) }
    dend_17 { pt3dadd( -87.4315, -118.12, 28.3665, 0.37 ) }
    dend_17 { pt3dadd( -87.0041, -117.6, 28.8436, 0.22 ) }
    dend_17 { pt3dadd( -86.8277, -117.414, 29.0614, 0.81 ) }
    dend_17 { pt3dadd( -86.511, -117.118, 29.5534, 0.37 ) }
    dend_17 { pt3dadd( -86.0969, -116.765, 30.4499, 0.88 ) }
    dend_17 { pt3dadd( -85.6634, -116.408, 31.5687, 0.88 ) }
    dend_17 { pt3dadd( -85.5129, -116.289, 32.0435, 0.88 ) }
    dend_17 { pt3dadd( -85.2737, -116.102, 32.9965, 0.88 ) }
    dend_17 { pt3dadd( -85.0832, -115.988, 33.8501, 0.88 ) }
    dend_17 { pt3dadd( -84.829, -115.941, 35.1344, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 80/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 11.2702, -39.1636, 3.09004, 0.29 ) }
    dend_54 { pt3dadd( 11.1801, -40.7512, 3.34251, 0.29 ) }
    dend_54 { pt3dadd( 11.1552, -41.5484, 3.47108, 0.15 ) }
    dend_54 { pt3dadd( 11.1506, -42.3183, 3.59238, 1.03 ) }
    dend_54 { pt3dadd( 11.1588, -43.7618, 3.80816, 0.15 ) }
    dend_54 { pt3dadd( 11.1644, -44.7353, 3.9537, 1.4 ) }
    dend_54 { pt3dadd( 11.1771, -46.9523, 4.28511, 0.07 ) }
    dend_54 { pt3dadd( 11.176, -47.2878, 4.3356, 0.81 ) }
    dend_54 { pt3dadd( 11.2012, -48.4342, 4.48749, 0.07 ) }
    dend_54 { pt3dadd( 11.252, -49.2557, 4.5975, 1.62 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 90/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 11.2702, -39.1636, 3.09004, 1.92 ) }
    dend_53 { pt3dadd( 10.8082, -39.8714, 3.48103, 1.92 ) }
    dend_53 { pt3dadd( 10.3217, -40.5797, 3.87633, 2.06 ) }
    dend_53 { pt3dadd( 9.15266, -42.1046, 4.75681, 0.22 ) }
    dend_53 { pt3dadd( 8.76065, -42.5889, 5.05257, 0.66 ) }
    dend_53 { pt3dadd( 8.17266, -43.202, 5.44115, 0.22 ) }
    dend_53 { pt3dadd( 7.72394, -43.6043, 5.69317, 0.96 ) }
    dend_53 { pt3dadd( 7.44585, -43.8336, 5.84302, 1.47 ) }
    dend_53 { pt3dadd( 6.2735, -44.6772, 6.41528, 0.52 ) }
    dend_53 { pt3dadd( 5.56216, -45.0672, 6.70915, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_53 { pt3dadd( 4.08763, -45.8215, 7.24467, 0.15 ) }
    dend_53 { pt3dadd( 3.26432, -46.2505, 7.52005, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 2/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -17.9601, 22.1072, 55.3228, 0.07 ) }
    dend_48 { pt3dadd( -19.4997, 22.3457, 55.6643, 0.07 ) }
    dend_48 { pt3dadd( -20.2145, 22.4565, 55.8229, 0.96 ) }
    dend_48 { pt3dadd( -21.1734, 22.6051, 56.0356, 0.07 ) }
    dend_48 { pt3dadd( -21.6798, 22.6835, 56.1479, 0.29 ) }
    dend_48 { pt3dadd( -22.5211, 22.8139, 56.3346, 0.07 ) }
    dend_48 { pt3dadd( -23.434, 22.9553, 56.537, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 9/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -17.9601, 22.1072, 55.3228, 0.44 ) }
    dend_45 { pt3dadd( -18.148, 20.8415, 56.3432, 0.44 ) }
    dend_45 { pt3dadd( -18.1931, 19.804, 57.2879, 0.96 ) }
    dend_45 { pt3dadd( -18.1774, 19.0753, 58.0181, 0.66 ) }
    dend_45 { pt3dadd( -18.1545, 18.316, 58.7909, 0.15 ) }
    dend_45 { pt3dadd( -18.1902, 17.8914, 59.1809, 0.15 ) }
    dend_45 { pt3dadd( -18.2725, 17.2473, 59.7327, 0.29 ) }
    dend_45 { pt3dadd( -18.401, 16.3184, 60.4786, 0.29 ) }
    dend_45 { pt3dadd( -18.5111, 15.7225, 60.8926, 0.74 ) }
    dend_45 { pt3dadd( -18.6381, 14.9148, 61.3848, 1.62 ) }
    dend_45 { pt3dadd( -18.8725, 12.8705, 62.4917, 0.22 ) }
    dend_45 { pt3dadd( -18.9669, 12.0639, 62.8852, 1.18 ) }
    dend_45 { pt3dadd( -19.0343, 11.6162, 63.0819, 1.55 ) }
    dend_45 { pt3dadd( -19.2204, 10.4092, 63.5633, 0.29 ) }
    dend_45 { pt3dadd( -19.3558, 9.32938, 63.996, 0.22 ) }
    dend_45 { pt3dadd( -19.4224, 8.13256, 64.524, 0.22 ) }
    dend_45 { pt3dadd( -19.3742, 7.31182, 64.95, 0.22 ) }
    dend_45 { pt3dadd( -19.3374, 6.57312, 65.3878, 0.52 ) }
    dend_45 { pt3dadd( -19.3108, 6.29048, 65.5923, 0.52 ) }
    dend_45 { pt3dadd( -19.2321, 5.74729, 66.0805, 0.52 ) }
    dend_45 { pt3dadd( -19.1752, 5.36596, 66.4323, 0.52 ) }
    dend_45 { pt3dadd( -19.0905, 4.89775, 66.813, 0.52 ) }
    dend_45 { pt3dadd( -18.9277, 4.10494, 67.4081, 0.15 ) }
    dend_45 { pt3dadd( -18.8089, 3.59169, 67.7683, 0.15 ) }
    dend_45 { pt3dadd( -18.7162, 3.19633, 68.027, 0.44 ) }
    dend_45 { pt3dadd( -18.5567, 2.53654, 68.4375, 1.11 ) }
    dend_45 { pt3dadd( -18.2401, 1.29745, 69.1105, 0.15 ) }
    dend_45 { pt3dadd( -18.1163, 0.801664, 69.3468, 0.15 ) }
    dend_45 { pt3dadd( -17.8669, -0.255942, 69.8234, 0.22 ) }
    dend_45 { pt3dadd( -17.6604, -1.09675, 70.1847, 1.25 ) }
    dend_45 { pt3dadd( -17.424, -1.88348, 70.5378, 1.99 ) }
    dend_45 { pt3dadd( -16.7622, -3.60013, 71.3556, 0.15 ) }
    dend_45 { pt3dadd( -16.4298, -4.28445, 71.6676, 1.03 ) }
    dend_45 { pt3dadd( -16.0351, -4.95096, 71.9735, 1.03 ) }
    dend_45 { pt3dadd( -15.1061, -6.05374, 72.4995, 0.15 ) }
    dend_45 { pt3dadd( -14.3436, -6.7143, 72.8321, 0.15 ) }
    dend_45 { pt3dadd( -13.6075, -7.19191, 73.0757, 0.15 ) }
    dend_45 { pt3dadd( -12.7066, -7.61887, 73.2957, 0.81 ) }
    dend_45 { pt3dadd( -11.7807, -8.03957, 73.4643, 1.33 ) }
    dend_45 { pt3dadd( -9.97, -8.94031, 73.681, 0.15 ) }
    dend_45 { pt3dadd( -9.4126, -9.31325, 73.7237, 1.25 ) }
    dend_45 { pt3dadd( -8.48087, -10.1712, 73.7666, 0.29 ) }
    dend_45 { pt3dadd( -7.63388, -11.2452, 73.7766, 0.22 ) }
    dend_45 { pt3dadd( -7.11707, -12.1311, 73.7536, 0.15 ) }
    dend_45 { pt3dadd( -6.66968, -13.2185, 73.6587, 1.77 ) }
    dend_45 { pt3dadd( -6.03052, -15.4794, 73.3262, 0.07 ) }
    dend_45 { pt3dadd( -5.8783, -16.1642, 73.2018, 0.81 ) }
    dend_45 { pt3dadd( -5.67962, -17.3971, 72.9549, 0.07 ) }
    dend_45 { pt3dadd( -5.55825, -18.4425, 72.7363, 0.96 ) }
    dend_45 { pt3dadd( -5.45497, -19.4164, 72.5095, 2.06 ) }
    dend_45 { pt3dadd( -5.17686, -21.6804, 71.9526, 0.07 ) }
    dend_45 { pt3dadd( -5.01078, -22.7608, 71.6838, 0.22 ) }
    dend_45 { pt3dadd( -4.82162, -24.0162, 71.4258, 0.15 ) }
    dend_45 { pt3dadd( -4.67351, -25.0534, 71.2626, 1.47 ) }
    dend_45 { pt3dadd( -4.54354, -26.202, 71.1142, 0.66 ) }
    dend_45 { pt3dadd( -4.46355, -27.3659, 70.9795, 0.66 ) }
    dend_45 { pt3dadd( -4.44384, -28.1068, 70.9126, 1.77 ) }
    dend_45 { pt3dadd( -4.4263, -29.6898, 70.7786, 0.07 ) }
    dend_45 { pt3dadd( -4.43903, -30.1359, 70.7469, 0.22 ) }
    dend_45 { pt3dadd( -4.51039, -31.117, 70.6923, 0.22 ) }
    dend_45 { pt3dadd( -4.61732, -31.9486, 70.6622, 1.55 ) }
    dend_45 { pt3dadd( -4.92959, -33.6103, 70.5936, 0.15 ) }
    dend_45 { pt3dadd( -5.09885, -34.3469, 70.5392, 0.59 ) }
    dend_45 { pt3dadd( -5.3157, -35.2557, 70.4302, 0.15 ) }
    dend_45 { pt3dadd( -5.49045, -36.0075, 70.3224, 0.15 ) }
    dend_45 { pt3dadd( -5.6449, -36.6908, 70.2135, 0.74 ) }
    dend_45 { pt3dadd( -5.8337, -37.5217, 70.0529, 1.25 ) }
    dend_45 { pt3dadd( -6.24271, -39.0295, 69.746, 0.07 ) }
    dend_45 { pt3dadd( -6.47789, -39.8567, 69.5801, 0.15 ) }
    dend_45 { pt3dadd( -6.68488, -40.5738, 69.468, 0.74 ) }
    dend_45 { pt3dadd( -6.88558, -41.2158, 69.4063, 1.4 ) }
    dend_45 { pt3dadd( -7.24521, -42.2963, 69.3723, 0.15 ) }
    dend_45 { pt3dadd( -7.6234, -43.3045, 69.4531, 0.07 ) }
    dend_45 { pt3dadd( -7.83752, -43.7752, 69.5544, 0.29 ) }
    dend_45 { pt3dadd( -8.50445, -44.9423, 69.9017, 0.07 ) }
    dend_45 { pt3dadd( -8.86521, -45.5179, 70.1034, 0.88 ) }
    dend_45 { pt3dadd( -9.11739, -45.8832, 70.2476, 1.33 ) }
    dend_45 { pt3dadd( -9.91931, -46.9332, 70.7193, 0.22 ) }
    dend_45 { pt3dadd( -10.4512, -47.6187, 71.0353, 0.22 ) }
    dend_45 { pt3dadd( -10.9672, -48.2437, 71.3395, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 9.66403, 38.0421, 38.4846, 0.15 ) }
    dend_43 { pt3dadd( 10.3391, 39.6343, 39.2275, 0.15 ) }
    dend_43 { pt3dadd( 10.5551, 40.2015, 39.5427, 0.22 ) }
    dend_43 { pt3dadd( 10.8633, 41.1265, 40.1443, 0.15 ) }
    dend_43 { pt3dadd( 11.0251, 41.6899, 40.5293, 0.96 ) }
    dend_43 { pt3dadd( 11.2215, 42.4658, 41.0637, 0.29 ) }
    dend_43 { pt3dadd( 11.3782, 43.0638, 41.4737, 0.29 ) }
    dend_43 { pt3dadd( 11.5297, 43.7477, 41.9941, 0.29 ) }
    dend_43 { pt3dadd( 11.7021, 44.4114, 42.4676, 0.29 ) }
    dend_43 { pt3dadd( 11.8947, 45.0411, 42.8848, 1.25 ) }
    dend_43 { pt3dadd( 11.9832, 45.2839, 43.0393, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_43 { pt3dadd( 12.5618, 46.6325, 43.8893, 0.15 ) }
    dend_43 { pt3dadd( 13.0802, 47.611, 44.478, 1.33 ) }
    dend_43 { pt3dadd( 13.9048, 48.9308, 45.2424, 0.07 ) }
    dend_43 { pt3dadd( 14.4096, 49.6044, 45.6373, 0.59 ) }
    dend_43 { pt3dadd( 15.1501, 50.4752, 46.1675, 0.15 ) }
    dend_43 { pt3dadd( 15.8269, 51.231, 46.6345, 1.11 ) }
    dend_43 { pt3dadd( 16.3856, 51.9207, 47.0295, 2.14 ) }
    dend_43 { pt3dadd( 16.6645, 52.322, 47.2367, 1.84 ) }
    dend_43 { pt3dadd( 17.3627, 53.843, 47.93, 0.15 ) }
    dend_43 { pt3dadd( 17.5794, 54.7832, 48.2831, 1.4 ) }
    dend_43 { pt3dadd( 17.6202, 55.5829, 48.5464, 0.96 ) }
    dend_43 { pt3dadd( 17.5007, 57.6896, 49.2571, 0.15 ) }
    dend_43 { pt3dadd( 17.3824, 58.5522, 49.5715, 0.96 ) }
    dend_43 { pt3dadd( 17.0236, 60.2902, 50.3113, 0.15 ) }
    dend_43 { pt3dadd( 16.8642, 60.8629, 50.5976, 1.18 ) }
    dend_43 { pt3dadd( 16.5684, 61.9307, 51.2465, 0.15 ) }
    dend_43 { pt3dadd( 16.3462, 62.9473, 52.0257, 0.59 ) }
    dend_43 { pt3dadd( 16.3052, 63.2732, 52.342, 0.88 ) }
    dend_43 { pt3dadd( 16.2658, 64.3563, 53.5336, 0.22 ) }
    dend_43 { pt3dadd( 16.3161, 65.0596, 54.3784, 0.88 ) }
    dend_43 { pt3dadd( 16.3832, 65.6571, 55.1168, 1.77 ) }
    dend_43 { pt3dadd( 16.5657, 66.7887, 56.4751, 0.29 ) }
    dend_43 { pt3dadd( 16.7042, 67.3445, 57.1081, 0.81 ) }
    dend_43 { pt3dadd( 17.0285, 68.3524, 58.2094, 0.22 ) }
    dend_43 { pt3dadd( 17.3153, 69.0829, 58.9676, 0.37 ) }
    dend_43 { pt3dadd( 17.4882, 69.47, 59.3528, 0.37 ) }
    dend_43 { pt3dadd( 17.9524, 70.4073, 60.2488, 1.55 ) }
    dend_43 { pt3dadd( 18.6302, 71.637, 61.3463, 0.07 ) }
    dend_43 { pt3dadd( 19.1889, 72.6066, 62.1449, 0.22 ) }
    dend_43 { pt3dadd( 19.5766, 73.2617, 62.6445, 0.22 ) }
    dend_43 { pt3dadd( 19.9212, 73.8479, 63.0716, 0.22 ) }
    dend_43 { pt3dadd( 20.32, 74.5581, 63.56, 0.07 ) }
    dend_43 { pt3dadd( 20.6532, 75.2079, 63.9729, 1.11 ) }
    dend_43 { pt3dadd( 20.8358, 75.5857, 64.184, 1.4 ) }
    dend_43 { pt3dadd( 21.4904, 76.8777, 64.8338, 0.07 ) }
    dend_43 { pt3dadd( 21.8995, 77.6769, 65.2218, 0.74 ) }
    dend_43 { pt3dadd( 22.1383, 78.1862, 65.4661, 0.74 ) }
    dend_43 { pt3dadd( 22.5124, 79.0463, 65.8786, 0.22 ) }
    dend_43 { pt3dadd( 22.9429, 80.0682, 66.363, 0.22 ) }
    dend_43 { pt3dadd( 23.2285, 80.7463, 66.6761, 0.96 ) }
    dend_43 { pt3dadd( 23.4191, 81.2094, 66.8831, 0.96 ) }
    dend_43 { pt3dadd( 24.0976, 82.9814, 67.6507, 0.15 ) }
    dend_43 { pt3dadd( 24.4517, 83.9678, 68.0778, 0.15 ) }
    dend_43 { pt3dadd( 24.5923, 84.4124, 68.2636, 0.22 ) }
    dend_43 { pt3dadd( 24.9017, 85.6643, 68.7418, 0.07 ) }
    dend_43 { pt3dadd( 25.0349, 86.3164, 68.9867, 0.07 ) }
    dend_43 { pt3dadd( 25.2058, 87.3833, 69.3691, 0.96 ) }
    dend_43 { pt3dadd( 25.3131, 88.261, 69.6669, 0.22 ) }
    dend_43 { pt3dadd( 25.3941, 89.2465, 69.9825, 1.25 ) }
    dend_43 { pt3dadd( 25.5175, 91.4084, 70.6644, 0.15 ) }
    dend_43 { pt3dadd( 25.5589, 92.4717, 70.9893, 1.33 ) }
    dend_43 { pt3dadd( 25.614, 94.1766, 71.5031, 0.15 ) }
    dend_43 { pt3dadd( 25.6248, 94.7094, 71.6692, 0.22 ) }
    dend_43 { pt3dadd( 25.6286, 95.8809, 72.037, 0.15 ) }
    dend_43 { pt3dadd( 25.6157, 96.6829, 72.2865, 0.81 ) }
    dend_43 { pt3dadd( 25.6105, 96.83, 72.3297, 0.81 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 56/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 9.66403, 38.0421, 38.4846, 0.29 ) }
    dend_42 { pt3dadd( 10.554, 38.8018, 39.6053, 0.29 ) }
    dend_42 { pt3dadd( 11.3591, 39.6157, 40.6942, 0.52 ) }
    dend_42 { pt3dadd( 11.7888, 40.114, 41.3066, 1.25 ) }
    dend_42 { pt3dadd( 12.5518, 41.0712, 42.4112, 0.15 ) }
    dend_42 { pt3dadd( 12.9005, 41.5181, 42.9117, 0.15 ) }
    dend_42 { pt3dadd( 13.1596, 41.8626, 43.2948, 0.15 ) }
    dend_42 { pt3dadd( 13.5399, 42.4817, 43.8958, 0.15 ) }
    dend_42 { pt3dadd( 13.8231, 42.9471, 44.306, 0.81 ) }
    dend_42 { pt3dadd( 14.2198, 43.5489, 44.8435, 1.33 ) }
    dend_42 { pt3dadd( 14.9021, 44.5198, 45.742, 0.22 ) }
    dend_42 { pt3dadd( 15.2929, 44.9873, 46.2189, 0.22 ) }
    dend_42 { pt3dadd( 15.7644, 45.4397, 46.7154, 1.11 ) }
    dend_42 { pt3dadd( 16.1693, 45.7668, 47.1016, 1.7 ) }
    dend_42 { pt3dadd( 16.9278, 46.3595, 47.8091, 0.22 ) }
    dend_42 { pt3dadd( 17.3216, 46.6535, 48.1718, 0.88 ) }
    dend_42 { pt3dadd( 18.0904, 47.1654, 48.8266, 0.15 ) }
    dend_42 { pt3dadd( 18.5348, 47.4118, 49.1657, 0.29 ) }
    dend_42 { pt3dadd( 18.938, 47.592, 49.4579, 0.29 ) }
    dend_42 { pt3dadd( 19.4631, 47.8148, 49.8506, 0.15 ) }
    dend_42 { pt3dadd( 20.0509, 48.0849, 50.3327, 0.15 ) }
    dend_42 { pt3dadd( 20.5104, 48.3283, 50.7436, 0.96 ) }
    dend_42 { pt3dadd( 21.0634, 48.6387, 51.2669, 0.66 ) }
    dend_42 { pt3dadd( 21.8438, 48.9342, 51.982, 0.15 ) }
    dend_42 { pt3dadd( 22.3781, 49.1017, 52.4726, 0.15 ) }
    dend_42 { pt3dadd( 23.0993, 49.3123, 53.1674, 0.81 ) }
    dend_42 { pt3dadd( 24.1578, 49.6473, 54.2531, 2.14 ) }
    dend_42 { pt3dadd( 24.6872, 49.8327, 54.83, 2.14 ) }
    dend_42 { pt3dadd( 26.2169, 50.4728, 56.5433, 0.15 ) }
    dend_42 { pt3dadd( 26.7634, 50.7139, 57.1401, 0.15 ) }
    dend_42 { pt3dadd( 27.581, 51.0471, 57.9902, 0.29 ) }
    dend_42 { pt3dadd( 28.1625, 51.262, 58.5702, 1.33 ) }
    dend_42 { pt3dadd( 28.6589, 51.4517, 59.0656, 1.62 ) }
    dend_42 { pt3dadd( 29.6133, 51.8896, 60.0337, 0.15 ) }
    dend_42 { pt3dadd( 29.915, 52.0881, 60.3806, 0.15 ) }
    dend_42 { pt3dadd( 30.3813, 52.3941, 60.9382, 0.15 ) }
    dend_42 { pt3dadd( 30.646, 52.569, 61.2742, 0.15 ) }
    dend_42 { pt3dadd( 30.9861, 52.7662, 61.7283, 0.29 ) }
    dend_42 { pt3dadd( 31.4863, 53.0116, 62.4708, 0.66 ) }
    dend_42 { pt3dadd( 32.1362, 53.323, 63.5967, 0.15 ) }
    dend_42 { pt3dadd( 32.4629, 53.5275, 64.2529, 0.15 ) }
    dend_42 { pt3dadd( 32.6928, 53.7252, 64.7814, 0.15 ) }
    dend_42 { pt3dadd( 32.9328, 54.0317, 65.4325, 0.66 ) }
    dend_42 { pt3dadd( 33.3193, 54.7366, 66.7232, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_42 { pt3dadd( 33.5378, 55.2501, 67.5415, 0.22 ) }
    dend_42 { pt3dadd( 33.7291, 55.7317, 68.251, 1.33 ) }
    dend_42 { pt3dadd( 33.9614, 56.3377, 69.0946, 1.92 ) }
    dend_42 { pt3dadd( 34.4583, 57.6448, 70.8556, 0.37 ) }
    dend_42 { pt3dadd( 34.7247, 58.379, 71.8225, 0.22 ) }
    dend_42 { pt3dadd( 35.0097, 59.1884, 72.8693, 0.22 ) }
    dend_42 { pt3dadd( 35.1461, 59.5766, 73.4192, 0.22 ) }
    dend_42 { pt3dadd( 35.2278, 59.883, 73.9428, 0.22 ) }
    dend_42 { pt3dadd( 35.2572, 60.1109, 74.4893, 0.22 ) }
    dend_42 { pt3dadd( 35.2735, 60.2602, 75.0154, 0.22 ) }
    dend_42 { pt3dadd( 35.2916, 60.4417, 75.6467, 0.52 ) }
    dend_42 { pt3dadd( 35.3198, 60.9514, 77.1188, 1.18 ) }
    dend_42 { pt3dadd( 35.3723, 61.5069, 78.5345, 1.4 ) }
    dend_42 { pt3dadd( 35.5199, 62.4771, 80.8, 0.81 ) }
    dend_42 { pt3dadd( 35.6923, 63.0694, 82.1382, 0.81 ) }
    dend_42 { pt3dadd( 35.9995, 63.7096, 83.6134, 1.7 ) }
    dend_42 { pt3dadd( 36.784, 64.8171, 86.2359, 0.29 ) }
    dend_42 { pt3dadd( 37.2771, 65.3587, 87.5097, 0.29 ) }
    dend_42 { pt3dadd( 37.588, 65.6584, 88.1844, 1.03 ) }
    dend_42 { pt3dadd( 38.2865, 66.3172, 89.5939, 0.22 ) }
    dend_42 { pt3dadd( 38.8566, 66.8481, 90.7259, 1.11 ) }
    dend_42 { pt3dadd( 39.5817, 67.4105, 92.0879, 0.29 ) }
    dend_42 { pt3dadd( 40.0772, 67.7099, 93.0007, 0.29 ) }
    dend_42 { pt3dadd( 40.3299, 67.8504, 93.5188, 0.52 ) }
    dend_42 { pt3dadd( 40.7044, 68.0035, 94.4208, 0.52 ) }
    dend_42 { pt3dadd( 40.8249, 68.0502, 94.7693, 0.52 ) }
    dend_42 { pt3dadd( 41.015, 68.0856, 95.308, 0.52 ) }
    dend_42 { pt3dadd( 41.4388, 68.0381, 96.1671, 0.52 ) }
    dend_42 { pt3dadd( 41.8795, 67.9953, 96.7029, 0.52 ) }
    dend_42 { pt3dadd( 42.7901, 67.9917, 97.5746, 0.22 ) }
    dend_42 { pt3dadd( 43.635, 68.0882, 98.2762, 0.15 ) }
    dend_42 { pt3dadd( 43.957, 68.197, 98.5681, 0.15 ) }
    dend_42 { pt3dadd( 44.5045, 68.5066, 99.0924, 0.81 ) }
    dend_42 { pt3dadd( 45.4216, 69.2085, 100.02, 0.29 ) }
    dend_42 { pt3dadd( 46.0762, 69.832, 100.732, 0.81 ) }
    dend_42 { pt3dadd( 46.5773, 70.4423, 101.32, 1.7 ) }
    dend_42 { pt3dadd( 47.7073, 72.082, 102.771, 0.22 ) }
    dend_42 { pt3dadd( 48.2416, 73.0215, 103.506, 0.44 ) }
    dend_42 { pt3dadd( 48.4437, 73.5564, 103.84, 0.15 ) }
    dend_42 { pt3dadd( 48.6333, 74.3068, 104.206, 0.88 ) }
    dend_42 { pt3dadd( 48.8996, 75.8564, 104.786, 0.22 ) }
    dend_42 { pt3dadd( 49.0119, 76.6085, 105.015, 0.88 ) }
    dend_42 { pt3dadd( 49.1027, 77.218, 105.164, 1.47 ) }
    dend_42 { pt3dadd( 49.4692, 79.5809, 105.75, 0.22 ) }
    dend_42 { pt3dadd( 49.5676, 80.1041, 105.88, 0.22 ) }
    dend_42 { pt3dadd( 49.7644, 80.8091, 106.076, 0.37 ) }
    dend_42 { pt3dadd( 50.3698, 82.2995, 106.595, 0.22 ) }
    dend_42 { pt3dadd( 50.6731, 82.9022, 106.856, 0.22 ) }
    dend_42 { pt3dadd( 51.0072, 83.4632, 107.175, 0.96 ) }
    dend_42 { pt3dadd( 51.3417, 83.9011, 107.489, 1.55 ) }
    dend_42 { pt3dadd( 52.441, 85.1698, 108.513, 0.15 ) }
    dend_42 { pt3dadd( 53.2521, 85.9791, 109.232, 1.25 ) }
    dend_42 { pt3dadd( 53.9995, 86.6873, 109.899, 1.25 ) }
    dend_42 { pt3dadd( 54.8779, 87.4532, 110.662, 0.74 ) }
    dend_42 { pt3dadd( 55.9234, 88.2513, 111.55, 0.15 ) }
    dend_42 { pt3dadd( 56.6284, 88.7303, 112.139, 0.29 ) }
    dend_42 { pt3dadd( 57.1124, 89.0066, 112.512, 0.29 ) }
    dend_42 { pt3dadd( 57.9587, 89.4121, 113.018, 0.29 ) }
    dend_42 { pt3dadd( 58.8225, 89.7959, 113.429, 0.81 ) }
    dend_42 { pt3dadd( 60.0592, 90.4013, 113.943, 0.15 ) }
    dend_42 { pt3dadd( 60.736, 90.791, 114.23, 1.11 ) }
    dend_42 { pt3dadd( 61.0796, 91.0168, 114.378, 1.77 ) }
    dend_42 { pt3dadd( 62.8901, 92.2583, 115.137, 0.22 ) }
    dend_42 { pt3dadd( 63.5398, 92.6868, 115.373, 0.22 ) }
    dend_42 { pt3dadd( 64.3488, 93.2532, 115.633, 0.22 ) }
    dend_42 { pt3dadd( 65.0696, 93.7618, 115.811, 0.22 ) }
    dend_42 { pt3dadd( 65.4504, 94.0466, 115.898, 0.44 ) }
    dend_42 { pt3dadd( 66.1998, 94.6457, 116.063, 0.44 ) }
    dend_42 { pt3dadd( 67.163, 95.4439, 116.274, 1.55 ) }
    dend_42 { pt3dadd( 68.2077, 96.2298, 116.482, 0.66 ) }
    dend_42 { pt3dadd( 69.5919, 97.0844, 116.738, 0.15 ) }
    dend_42 { pt3dadd( 70.1477, 97.3786, 116.851, 0.15 ) }
    dend_42 { pt3dadd( 70.8431, 97.7078, 117.023, 0.37 ) }
    dend_42 { pt3dadd( 71.9349, 98.1785, 117.335, 0.15 ) }
    dend_42 { pt3dadd( 72.6628, 98.4726, 117.581, 0.81 ) }
    dend_42 { pt3dadd( 74.0187, 98.9681, 118.091, 0.22 ) }
    dend_42 { pt3dadd( 74.7194, 99.2122, 118.356, 0.22 ) }
    dend_42 { pt3dadd( 75.4621, 99.4594, 118.618, 1.25 ) }
    dend_42 { pt3dadd( 75.8184, 99.5869, 118.736, 1.25 ) }
    dend_42 { pt3dadd( 77.1157, 100.089, 119.104, 0.07 ) }
    dend_42 { pt3dadd( 77.9588, 100.446, 119.302, 0.96 ) }
    dend_42 { pt3dadd( 79.6306, 101.197, 119.613, 0.22 ) }
    dend_42 { pt3dadd( 80.4565, 101.551, 119.738, 1.03 ) }
    dend_42 { pt3dadd( 81.2886, 101.891, 119.841, 1.77 ) }
    dend_42 { pt3dadd( 82.963, 102.601, 120.025, 0.15 ) }
    dend_42 { pt3dadd( 83.8886, 102.998, 120.107, 0.22 ) }
    dend_42 { pt3dadd( 84.9818, 103.482, 120.202, 0.15 ) }
    dend_42 { pt3dadd( 85.7799, 103.86, 120.284, 1.03 ) }
    dend_42 { pt3dadd( 86.7891, 104.352, 120.402, 0.22 ) }
    dend_42 { pt3dadd( 87.9521, 104.932, 120.56, 0.22 ) }
    dend_42 { pt3dadd( 89.1639, 105.593, 120.751, 0.15 ) }
    dend_42 { pt3dadd( 89.988, 106.061, 120.883, 0.15 ) }
    dend_42 { pt3dadd( 90.8547, 106.563, 121.031, 0.81 ) }
    dend_42 { pt3dadd( 91.1451, 106.728, 121.082, 1.77 ) }
    dend_42 { pt3dadd( 92.3679, 107.383, 121.238, 0.07 ) }
    dend_42 { pt3dadd( 93.2999, 107.858, 121.295, 0.59 ) }
    dend_42 { pt3dadd( 95.2781, 108.888, 121.265, 0.22 ) }
    dend_42 { pt3dadd( 95.7033, 109.108, 121.239, 0.59 ) }
    dend_42 { pt3dadd( 96.516, 109.507, 121.161, 0.66 ) }
    dend_42 { pt3dadd( 98.1456, 110.297, 120.961, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 98.8011, 110.602, 120.843, 0.07 ) }
    dend_42 { pt3dadd( 99.2039, 110.768, 120.739, 0.52 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -23.434, 22.9553, 56.537, 0.15 ) }
    dend_50 { pt3dadd( -24.7689, 23.6031, 57.1036, 0.15 ) }
    dend_50 { pt3dadd( -25.7534, 24.1798, 57.2712, 0.15 ) }
    dend_50 { pt3dadd( -26.8334, 24.9037, 57.2336, 0.07 ) }
    dend_50 { pt3dadd( -27.348, 25.2776, 57.1059, 0.07 ) }
    dend_50 { pt3dadd( -28.4857, 26.1169, 56.6357, 0.07 ) }
    dend_50 { pt3dadd( -29.3516, 26.7472, 56.1626, 0.07 ) }
    dend_50 { pt3dadd( -29.7182, 27.041, 55.8077, 0.07 ) }
    dend_50 { pt3dadd( -30.0208, 27.3262, 55.3641, 0.29 ) }
    dend_50 { pt3dadd( -30.3857, 27.7306, 54.6117, 0.29 ) }
    dend_50 { pt3dadd( -30.5791, 27.959, 54.1336, 0.29 ) }
    dend_50 { pt3dadd( -30.7495, 28.1649, 53.6771, 0.29 ) }
    dend_50 { pt3dadd( -30.9565, 28.4156, 53.0789, 0.29 ) }
    dend_50 { pt3dadd( -31.3676, 28.8348, 51.9658, 0.22 ) }
    dend_50 { pt3dadd( -31.6829, 29.0806, 51.1942, 0.22 ) }
    dend_50 { pt3dadd( -32.2454, 29.439, 49.9491, 0.88 ) }
    dend_50 { pt3dadd( -32.7496, 29.7143, 48.8852, 0.22 ) }
    dend_50 { pt3dadd( -32.9916, 29.8246, 48.4111, 0.22 ) }
    dend_50 { pt3dadd( -33.399, 29.9786, 47.6649, 0.15 ) }
    dend_50 { pt3dadd( -33.898, 30.1471, 46.8455, 0.15 ) }
    dend_50 { pt3dadd( -34.4028, 30.3161, 46.0148, 0.15 ) }
    dend_50 { pt3dadd( -34.8377, 30.4767, 45.2688, 0.15 ) }
    dend_50 { pt3dadd( -35.1914, 30.6387, 44.6269, 0.74 ) }
    dend_50 { pt3dadd( -35.4947, 30.8, 44.0738, 0.74 ) }
    dend_50 { pt3dadd( -35.9309, 31.0632, 43.2118, 0.15 ) }
    dend_50 { pt3dadd( -36.4286, 31.3701, 42.1231, 0.22 ) }
    dend_50 { pt3dadd( -36.632, 31.485, 41.6276, 0.22 ) }
    dend_50 { pt3dadd( -36.9217, 31.6449, 40.7669, 0.22 ) }
    dend_50 { pt3dadd( -37.0257, 31.7008, 40.3793, 0.22 ) }
    dend_50 { pt3dadd( -37.1928, 31.7736, 39.6527, 0.22 ) }
    dend_50 { pt3dadd( -37.3139, 31.778, 38.8985, 0.22 ) }
    dend_50 { pt3dadd( -37.3594, 31.7286, 38.3573, 0.22 ) }
    dend_50 { pt3dadd( -37.3837, 31.6249, 37.6748, 0.22 ) }
    dend_50 { pt3dadd( -37.3819, 31.5261, 37.0658, 0.22 ) }
    dend_50 { pt3dadd( -37.4162, 31.3812, 36.1447, 0.22 ) }
    dend_50 { pt3dadd( -37.5185, 31.1503, 34.8893, 0.44 ) }
    dend_50 { pt3dadd( -37.6132, 30.9726, 34.1226, 0.44 ) }
    dend_50 { pt3dadd( -37.6527, 30.8949, 33.8484, 0.44 ) }
    dend_50 { pt3dadd( -37.7511, 30.6155, 33.0322, 0.44 ) }
    dend_50 { pt3dadd( -37.7783, 30.2848, 32.1546, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 42/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -23.434, 22.9553, 56.537, 1.03 ) }
    dend_49 { pt3dadd( -23.888, 23.331, 56.9592, 1.03 ) }
    dend_49 { pt3dadd( -24.9447, 24.3822, 58.1664, 0.07 ) }
    dend_49 { pt3dadd( -25.2957, 24.7789, 58.6282, 0.07 ) }
    dend_49 { pt3dadd( -25.5446, 25.1513, 59.0097, 0.22 ) }
    dend_49 { pt3dadd( -25.9162, 25.8288, 59.654, 0.07 ) }
    dend_49 { pt3dadd( -26.1813, 26.3582, 60.1348, 0.37 ) }
    dend_49 { pt3dadd( -26.581, 27.3003, 60.9687, 0.15 ) }
    dend_49 { pt3dadd( -26.8727, 28.1468, 61.6972, 1.33 ) }
    dend_49 { pt3dadd( -27.5203, 30.1173, 63.3884, 0.07 ) }
    dend_49 { pt3dadd( -27.8973, 31.3039, 64.4114, 0.07 ) }
    dend_49 { pt3dadd( -28.0952, 31.9417, 64.9565, 0.66 ) }
    dend_49 { pt3dadd( -28.3033, 32.6437, 65.5294, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 55/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -10.9672, -48.2437, 71.3395, 0.07 ) }
    dend_47 { pt3dadd( -11.717, -49.1574, 71.5055, 0.07 ) }
    dend_47 { pt3dadd( -12.1887, -49.7322, 71.6099, 0.37 ) }
    dend_47 { pt3dadd( -12.7206, -50.3804, 71.7276, 0.22 ) }
    dend_47 { pt3dadd( -13.2704, -51.0505, 71.8493, 0.88 ) }
    dend_47 { pt3dadd( -13.6357, -51.4955, 71.9302, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 61/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -10.9672, -48.2437, 71.3395, 0.07 ) }
    dend_46 { pt3dadd( -11.4559, -46.5921, 71.1568, 0.07 ) }
    dend_46 { pt3dadd( -11.6528, -45.9266, 71.0832, 0.44 ) }
    dend_46 { pt3dadd( -11.8834, -45.1472, 70.997, 0.15 ) }
    dend_46 { pt3dadd( -12.1375, -44.2883, 70.9019, 0.74 ) }
    dend_46 { pt3dadd( -12.4766, -43.1424, 70.7752, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_57 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_51 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_29 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_19 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_5 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_23 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_17 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_45 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_10 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_56 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_60 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_49 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_52 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_50 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_53 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_47 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_46 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_16 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_18 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_42 all.append()
    dend_42 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_1 nseg = 3
    dend_0 nseg = 7
    dend_33 nseg = 3
    dend_26 nseg = 5
    dend_14 nseg = 5
    dend_11 nseg = 3
    dend_2 nseg = 5
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_28 nseg = 5
    dend_13 nseg = 13
    dend_12 nseg = 7
    dend_7 nseg = 3
    dend_57 nseg = 7
    dend_51 nseg = 3
    dend_37 nseg = 3
    dend_30 nseg = 7
    dend_29 nseg = 3
    dend_24 nseg = 7
    dend_19 nseg = 3
    dend_9 nseg = 7
    dend_8 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 3
    dend_62 nseg = 5
    dend_61 nseg = 3
    dend_23 nseg = 3
    dend_17 nseg = 3
    dend_45 nseg = 5
    dend_43 nseg = 3
    dend_42 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_DBC_efeb05a196_0_0


