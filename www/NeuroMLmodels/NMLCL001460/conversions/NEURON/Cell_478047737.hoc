// Cell: Cell_478047737
/*
{
  "id" : "Cell_478047737",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "338.062, 432.387, 33.9368, 11.4634", "343.794, 432.387, 33.9368, 11.4634", "349.525, 432.387, 33.9368, 11.4634" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "343.794, 432.387, 33.9368, 1.0", "349.635, 446.203, 33.9368, 1.0", "355.476, 460.019, 33.9368, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000436185989696
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "339.45, 436.334, 31.5493, 0.2288", "338.607, 437.086, 31.1088, 0.3278", "337.709, 437.783, 30.7994, 0.3984", "336.773, 438.395, 30.5116, 0.3824", "335.646, 438.519, 30.3206, 0.3792", "334.516, 438.38, 30.0479, 0.4726", "333.419, 438.389, 29.4843, 0.394", "332.517, 438.973, 28.7358, 0.3268", "331.79, 439.838, 28.3822, 0.277", "331.132, 440.771, 28.4631, 0.2792", "330.246, 441.473, 28.6916, 0.283", "329.144, 441.752, 28.9047, 0.2902", "328.018, 441.855, 29.034, 0.3046", "327.125, 442.495, 29.0279, 0.325", "326.829, 443.58, 28.9243, 0.3934", "326.826, 444.717, 28.7269, 0.372", "326.549, 445.8, 28.3867, 0.3648", "325.915, 446.723, 27.8811, 0.4226", "325.182, 447.565, 27.2825, 0.4144", "324.526, 448.463, 26.6465, 0.5004", "323.957, 449.41, 25.9242, 0.3982", "323.397, 450.325, 24.969, 0.3348", "322.872, 451.201, 23.7077, 0.292", "322.303, 452.048, 22.4572, 0.3066", "321.566, 452.803, 21.4039, 0.336", "320.736, 453.493, 20.4831, 0.3778", "319.838, 454.108, 19.6326, 0.518", "318.829, 454.533, 18.8881, 0.474", "317.738, 454.756, 18.291, 0.4954", "316.655, 455.041, 17.7703, 0.4918", "315.807, 455.724, 17.2667, 0.4656", "315.41, 456.748, 16.7747, 0.5132", "315.269, 457.86, 16.2466, 0.5914", "315.206, 458.976, 15.6609, 0.5564", "314.943, 460.056, 15.0603, 0.4514", "314.241, 460.897, 14.4871, 0.4496", "313.216, 461.307, 13.9725, 0.425", "312.096, 461.336, 13.509, 0.4838", "310.976, 461.191, 13.0957, 0.5426", "309.859, 460.983, 12.737, 0.4388", "308.785, 460.616, 12.4512, 0.3636", "307.789, 460.064, 12.2646, 0.341", "306.837, 459.43, 12.1866, 0.4182", "305.902, 458.773, 12.2109, 0.4424", "305.018, 458.048, 12.2904, 0.377", "304.18, 457.269, 12.3549, 0.3338", "303.281, 456.562, 12.3469, 0.3318", "302.267, 456.043, 12.2532, 0.4072", "301.188, 455.667, 12.143, 0.391", "300.108, 455.288, 12.0853, 0.4326", "299.042, 454.874, 12.0664, 0.3908", "297.954, 454.523, 12.0852, 0.4322", "296.827, 454.334, 12.1722, 0.3902", "295.686, 454.271, 12.2936, 0.431", "294.544, 454.203, 12.3774, 0.388", "293.403, 454.139, 12.3719, 0.427", "292.26, 454.074, 12.288, 0.3808", "291.133, 453.884, 12.2235, 0.4126", "290.044, 453.539, 12.1492, 0.359", "288.937, 453.26, 12.0257, 0.3486", "287.84, 452.939, 11.881, 0.3544", "286.803, 452.455, 11.7623, 0.4736", "285.676, 452.277, 11.7664, 0.3954", "284.838, 451.503, 11.8275, 0.3304", "283.743, 451.171, 11.892, 0.2796", "282.677, 450.758, 11.9555, 0.305", "281.882, 449.935, 12.04, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000436185989696,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "344.652, 436.962, 26.7966, 0.2288", "344.314, 437.898, 25.5387, 0.537", "343.737, 438.85, 24.9019, 0.5334", "343.197, 439.831, 24.3416, 0.4868", "342.855, 440.884, 23.8201, 0.3652", "343.109, 441.873, 23.2364, 0.3112", "344.007, 442.493, 22.5503, 0.295", "344.913, 443.091, 21.7642, 0.3136", "345.536, 443.975, 20.9889, 0.3412", "345.959, 445.003, 20.3549, 0.426", "346.285, 446.08, 19.8602, 0.4208", "346.539, 447.18, 19.4206, 0.5118", "346.793, 448.275, 18.912, 0.4204", "347.337, 449.224, 18.2592, 0.3708", "348.264, 449.801, 17.5917, 0.3842", "349.217, 450.393, 17.053, 0.3536", "349.939, 451.251, 16.6583, 0.3374", "350.507, 452.233, 16.344, 0.3398", "351.143, 453.174, 16.011, 0.4156", "351.989, 453.92, 15.6402, 0.4378", "352.892, 454.603, 15.251, 0.3686", "353.569, 455.502, 14.8489, 0.317", "353.889, 456.583, 14.4818, 0.3072", "354.045, 457.709, 14.1931, 0.33", "354.273, 458.828, 14.0169, 0.4024", "354.549, 459.936, 13.9505, 0.3898", "354.892, 461.027, 13.8816, 0.393", "355.406, 462.043, 13.661, 0.498", "355.952, 463.04, 13.3316, 0.4416", "356.32, 464.113, 12.9874, 0.4108", "356.793, 465.145, 12.6329, 0.4542", "357.502, 466.034, 12.3322, 0.505", "358.301, 466.848, 12.1365, 0.5134", "359.138, 467.627, 12.0471, 0.4884", "360.069, 468.291, 12.0346, 0.4096", "361.169, 468.603, 12.0961, 0.4208", "362.31, 468.634, 12.2478, 0.3644", "363.452, 468.582, 12.387, 0.4068", "364.592, 468.582, 12.6, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000436185989696,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "341.077, 435.755, 43.7049, 0.2288", "340.48, 436.663, 44.4682, 0.2786", "340.096, 437.715, 44.8582, 0.282", "339.934, 438.834, 45.2704, 0.2884", "339.839, 439.96, 45.7204, 0.2998", "339.763, 441.076, 46.2882, 0.3234", "339.685, 442.184, 46.9613, 0.3548", "339.64, 443.29, 47.6549, 0.4742", "339.689, 444.388, 48.4263, 0.3968", "339.779, 445.47, 49.303, 0.3322", "339.894, 446.542, 50.237, 0.287", "339.875, 447.619, 51.1426, 0.2974", "339.543, 448.626, 52.0828, 0.318", "339.008, 449.54, 53.1269, 0.3506", "338.522, 450.491, 54.1229, 0.4368", "338.141, 451.457, 55.2818, 0.4718", "337.698, 452.382, 56.511, 0.4572", "337.066, 453.219, 57.6134, 0.3574", "336.566, 454.137, 58.7093, 0.2966", "336.013, 454.947, 60.114, 0.2684", "335.415, 455.55, 61.9444, 0.2626", "335.001, 456.45, 63.327, 0.2542", "334.706, 457.423, 64.5243, 0.2288", "334.734, 458.286, 66.36, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000436185989696
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "347.108, 429.236, 43.1516, 0.2288", "347.786, 428.602, 44.7149, 0.2748", "348.591, 427.895, 45.6971, 0.2748", "349.437, 427.21, 46.5497, 0.2752", "350.315, 426.538, 47.2716, 0.2756", "351.19, 425.851, 47.9186, 0.2766", "352.079, 425.184, 48.5587, 0.2782", "353.049, 424.669, 49.2775, 0.2814", "354.07, 424.368, 50.2645, 0.287", "354.973, 423.902, 51.4802, 0.2988", "355.849, 423.323, 52.5927, 0.3142", "356.881, 423.026, 53.5122, 0.3734", "357.966, 422.845, 54.2814, 0.3338", "359.036, 422.574, 55.0043, 0.3", "360.107, 422.263, 55.6234, 0.2746", "361.2, 422.034, 56.231, 0.2746", "362.147, 421.446, 56.7459, 0.2746", "363.187, 421.027, 57.26, 0.2746", "364.146, 420.466, 57.9104, 0.2746", "365.087, 419.849, 58.4133, 0.2746", "365.659, 418.872, 58.7602, 0.2746", "366.487, 418.094, 59.0811, 0.2746" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000436185989696
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "339.286, 435.651, 28.7692, 0.2288", "338.46, 436.25, 27.5155, 0.276", "337.536, 436.19, 26.433, 0.2774", "336.46, 436.229, 25.6208, 0.2796", "335.358, 436.371, 24.9514, 0.284", "334.241, 436.433, 24.3754, 0.2922", "333.626, 437.276, 23.7718, 0.3068", "333.463, 438.364, 23.0902, 0.3366", "333.327, 439.461, 22.3713, 0.3788", "332.839, 440.464, 21.7851, 0.5198", "332.332, 441.464, 21.2202, 0.4768", "331.584, 442.275, 20.518, 0.5016", "331.137, 443.287, 19.8195, 0.4988" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000436185989696
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "349.859, 430.621, 29.72, 0.4576", "350.909, 430.315, 28.9061, 0.4638", "352.029, 430.183, 28.4875, 0.5398", "353.03, 429.68, 28.0798, 0.4966", "353.904, 428.962, 27.6839, 0.3932", "354.85, 428.338, 27.336, 0.3158", "355.613, 427.501, 27.0248, 0.3034", "356.223, 426.545, 26.7008, 0.3302", "357.201, 426.016, 26.2864, 0.3668", "358.315, 425.847, 25.8369, 0.4978", "359.433, 425.663, 25.4539, 0.4352", "360.549, 425.436, 25.2137, 0.429" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000436185989696
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "348.784, 430.505, 35.8893, 0.2288", "349.849, 430.104, 36.1906, 0.6012", "350.978, 430.025, 36.3404, 0.5104", "352.121, 429.988, 36.4263, 0.4472", "353.241, 429.772, 36.496, 0.5056", "354.353, 429.506, 36.5644, 0.4494", "355.37, 428.995, 36.6246, 0.4562", "356.359, 428.422, 36.6439, 0.3876", "357.471, 428.232, 36.8612, 0.426", "358.599, 428.351, 37.1843, 0.379", "359.711, 428.58, 37.541, 0.4094", "360.841, 428.523, 37.9442, 0.3532" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000436185989696
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "337.875, 429.122, 34.9633, 1.624", "336.922, 428.498, 35.21, 0.514", "335.928, 427.943, 35.4875, 0.4664", "334.967, 427.329, 35.7025, 0.4814", "333.937, 426.833, 35.7958, 0.4652", "332.895, 426.364, 35.7045, 0.4202", "331.954, 425.714, 35.5902, 0.4088", "331.092, 424.964, 35.4897, 0.4958" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000436185989696
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "339.672, 436.823, 33.8503, 0.2288", "338.878, 437.645, 33.7898, 0.4766", "338.083, 438.467, 33.7243, 0.4012", "337.216, 439.212, 33.6739, 0.3402", "336.415, 440.029, 33.5714, 0.303", "335.575, 440.797, 33.3354, 0.3222", "334.572, 441.33, 33.0232, 0.3882", "333.677, 442.036, 32.7765, 0.3624" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000436185989696
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "343.487, 426.611, 27.926, 0.2288", "343.51, 425.469, 27.8958, 0.2788" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000436185989696
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "355.476, 460.019, 33.9368, 1.0", "361.317, 473.835, 33.9368, 1.0", "367.159, 487.651, 33.9368, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "366.487, 418.094, 59.0811, 0.2746", "367.622, 417.655, 60.0466, 0.2746", "368.617, 417.196, 60.8572, 0.2746", "369.59, 416.734, 61.8078, 0.2746", "370.548, 416.278, 62.8488, 0.2746", "371.504, 415.823, 63.917, 0.2746", "372.461, 415.368, 64.967, 0.2746", "373.426, 414.91, 65.9708, 0.2746", "374.4, 414.452, 66.913, 0.2746", "375.43, 414.083, 67.725, 0.2746", "376.529, 413.896, 68.3396, 0.2746", "377.653, 413.775, 68.7736, 0.2746", "378.772, 413.567, 69.0696, 0.2746", "379.863, 413.237, 69.2765, 0.2746", "380.949, 412.881, 69.445, 0.2746", "382.034, 412.526, 69.6223, 0.2746", "383.116, 412.168, 69.8418, 0.2746", "384.145, 411.69, 70.1546, 0.2746", "384.921, 410.886, 70.6952, 0.2746", "385.415, 409.907, 71.4854, 0.2746", "385.935, 408.948, 72.3145, 0.2746", "386.579, 408.045, 72.9722, 0.2746", "387.315, 407.189, 73.4087, 0.2746", "388.059, 406.326, 73.6579, 0.2746", "388.803, 405.459, 73.7506, 0.2746", "389.556, 404.597, 73.7366, 0.2746", "390.329, 403.754, 73.6736, 0.2746", "391.121, 402.929, 73.6047, 0.2746", "391.932, 402.124, 73.5412, 0.2746", "392.79, 401.368, 73.4754, 0.2746", "393.686, 400.657, 73.3995, 0.2746", "394.601, 399.973, 73.2995, 0.2746", "395.569, 399.368, 73.1506, 0.2746", "396.572, 398.825, 72.9431, 0.2746", "397.574, 398.283, 72.6939, 0.2746", "398.575, 397.74, 72.4189, 0.2746", "399.576, 397.199, 72.1319, 0.2746", "400.57, 396.645, 71.848, 0.2746", "401.528, 396.031, 71.587, 0.2746", "402.405, 395.308, 71.3681, 0.2746", "403.167, 394.463, 71.183, 0.2746", "403.777, 393.5, 71.0055, 0.2746", "404.285, 392.478, 70.8198, 0.2746", "404.792, 391.456, 70.6238, 0.2746", "405.299, 390.434, 70.415, 0.2746", "405.805, 389.412, 70.1935, 0.2746", "406.312, 388.391, 69.9636, 0.2746", "406.819, 387.37, 69.729, 0.2746", "407.326, 386.348, 69.4887, 0.2746", "407.833, 385.328, 69.2401, 0.2746", "408.342, 384.31, 68.9819, 0.2746", "408.859, 383.295, 68.7198, 0.2746", "409.415, 382.303, 68.4438, 0.2746", "410.079, 381.386, 68.1047, 0.2746", "410.87, 380.582, 67.6572, 0.2746", "411.704, 379.833, 67.1079, 0.2746", "412.531, 379.083, 66.4888, 0.2746", "413.322, 378.301, 65.8322, 0.2746", "414.125, 377.534, 65.2145, 0.2746", "415.051, 376.906, 64.6722, 0.2746", "416.014, 376.339, 64.097, 0.2746", "416.906, 375.684, 63.3951, 0.2746", "417.757, 374.992, 62.6004, 0.2746", "418.615, 374.309, 61.8092, 0.2746", "419.539, 373.729, 61.01, 0.2746", "420.427, 373.094, 60.2512, 0.2746", "421.296, 372.391, 59.6764, 0.2746", "422.234, 371.757, 59.3202, 0.2746", "423.21, 371.165, 59.122, 0.2748", "424.135, 370.5, 58.9383, 0.275", "425.043, 369.814, 58.6818, 0.2754", "426.013, 369.22, 58.4156, 0.276", "426.889, 368.516, 58.0174, 0.2772", "427.652, 367.751, 57.1208, 0.2792", "428.459, 367.035, 56.2019, 0.2834", "429.325, 366.345, 55.5439, 0.2906", "430.332, 365.883, 54.8968, 0.3056", "431.367, 365.532, 54.1758, 0.3266", "432.263, 364.907, 53.3492, 0.3976", "433.087, 364.219, 52.3958, 0.3734", "433.887, 363.525, 51.3302, 0.3988", "434.686, 362.848, 50.2034, 0.3338", "435.1, 361.988, 49.0022, 0.2996", "434.794, 361.012, 47.9606, 0.274", "434.099, 360.184, 47.1428, 0.2736", "433.656, 359.205, 46.5506, 0.2728", "433.966, 358.193, 46.1087, 0.2712", "434.59, 357.252, 45.6744, 0.2684", "435.241, 356.359, 44.963, 0.2626", "435.612, 355.291, 44.5416, 0.2542", "435.827, 354.172, 44.3156, 0.2288", "435.978, 353.038, 44.24, 0.2288" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "366.487, 418.094, 59.0811, 0.2746", "366.501, 417.953, 57.6391, 0.2288", "366.533, 417.481, 55.1345, 0.2756", "366.642, 416.545, 53.6939, 0.2766", "366.956, 415.495, 52.9026, 0.2782", "367.249, 414.414, 52.3538, 0.2814", "367.254, 413.281, 52.0251, 0.287", "366.982, 412.183, 52.1419, 0.2988", "366.318, 411.346, 52.8321, 0.314", "365.344, 411.064, 53.884, 0.3734", "364.342, 411.016, 55.2208, 0.3338", "363.64, 410.377, 56.506, 0.3", "363.452, 409.364, 57.5646, 0.2744", "363.674, 408.323, 58.506, 0.2744", "364.049, 407.312, 59.437, 0.2742", "364.295, 406.241, 60.1888, 0.274", "364.51, 405.141, 60.7334, 0.2736", "364.747, 404.049, 61.3435, 0.2728", "364.546, 402.966, 62.0004, 0.2712", "364.048, 401.952, 62.433, 0.2684", "363.513, 400.946, 62.6721, 0.2626", "362.883, 399.993, 62.7869, 0.2542", "362.279, 399.024, 62.9317, 0.2288", "362.19, 397.883, 63.0, 0.2288" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "331.137, 443.287, 19.8195, 0.4988", "331.378, 443.175, 18.51, 0.2288", "331.463, 442.68, 16.3585, 0.2712", "330.441, 442.23, 15.7994, 0.2684", "329.592, 441.498, 15.8237, 0.2626", "329.258, 440.431, 16.0678, 0.2542", "328.859, 439.362, 16.0865, 0.2288", "328.934, 438.267, 15.3908, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "331.137, 443.287, 19.8195, 0.4988", "331.137, 444.121, 19.2588, 0.5018", "331.475, 445.176, 18.5816, 0.466" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "360.549, 425.436, 25.2137, 0.429", "361.275, 425.427, 23.8455, 0.2288", "362.292, 425.341, 22.8058, 0.3118", "363.385, 425.053, 22.5247, 0.3382", "364.409, 424.556, 22.3759, 0.4192", "365.362, 423.929, 22.227, 0.4142", "366.273, 423.242, 22.0341, 0.4704", "367.199, 422.584, 21.7293, 0.4868", "368.132, 421.947, 21.2897, 0.486", "369.053, 421.304, 20.7626, 0.4058", "369.992, 420.692, 20.2136, 0.4116", "370.862, 419.988, 19.6893, 0.3586", "371.392, 419.035, 19.1806, 0.3406", "371.638, 417.938, 18.6995, 0.3754", "372.094, 416.93, 18.2603, 0.3376", "372.795, 416.047, 17.8231, 0.3068", "373.569, 415.227, 17.3401, 0.2872", "374.463, 414.563, 16.8019, 0.299", "375.517, 414.231, 16.2592, 0.3144", "376.625, 414.274, 15.7367, 0.3742", "377.726, 414.445, 15.1087, 0.3352", "378.807, 414.653, 14.3443, 0.3024", "379.897, 414.837, 13.6372, 0.279", "381.01, 414.924, 13.039, 0.2826", "382.134, 415.004, 12.5487, 0.2896", "383.217, 415.311, 12.1824, 0.302", "384.19, 415.893, 11.9441, 0.3274", "385.161, 416.494, 11.8015, 0.362", "386.177, 417.017, 11.7119, 0.488", "387.187, 417.554, 11.6892, 0.4218", "387.757, 418.492, 11.6546, 0.3808", "388.101, 419.58, 11.4821, 0.3666", "388.549, 420.626, 11.2529, 0.4972", "388.759, 421.741, 10.9866, 0.435", "389.12, 422.823, 10.9442, 0.4238", "389.801, 423.741, 11.0185, 0.356", "390.562, 424.538, 11.76, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "360.549, 425.436, 25.2137, 0.429", "361.254, 425.197, 25.2832, 0.3426", "362.182, 424.581, 25.6323, 0.3162", "362.866, 423.691, 26.0299, 0.3042", "363.363, 422.674, 26.3828, 0.3306", "363.961, 421.717, 26.6734, 0.3738", "364.811, 420.973, 26.826, 0.4808", "365.772, 420.354, 26.8054, 0.549", "366.684, 419.671, 26.6206, 0.6216", "367.473, 418.858, 26.3036, 0.5586", "368.26, 418.045, 25.9108, 0.4866", "369.259, 417.686, 25.3023, 0.365", "370.151, 417.107, 24.4469, 0.3106", "370.621, 416.098, 23.8118, 0.2938" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "360.841, 428.523, 37.9442, 0.3532", "360.786, 428.648, 38.8072, 0.4576", "360.66, 429.153, 41.1172, 0.439", "360.758, 430.237, 41.886, 0.4988", "361.038, 431.338, 42.2027, 0.3952", "361.318, 432.442, 42.4287, 0.3292", "361.564, 433.557, 42.6012, 0.2816", "361.808, 434.665, 42.9153, 0.2878", "362.145, 435.727, 43.4342, 0.2988", "362.608, 436.737, 44.1028, 0.3204", "362.796, 437.813, 44.7882, 0.355", "362.803, 438.93, 45.393, 0.445", "362.677, 440.045, 45.8878, 0.487", "362.648, 441.165, 46.3957, 0.4854", "362.618, 442.29, 46.8927, 0.4108", "362.451, 443.408, 47.3094, 0.391", "362.26, 444.525, 47.6876, 0.4642", "362.233, 445.654, 48.0732, 0.5248", "362.29, 446.785, 48.4837, 0.545", "362.302, 447.914, 48.9227, 0.5714", "362.117, 449.018, 49.4446, 0.4446", "361.904, 450.117, 50.0184, 0.3758", "361.553, 451.173, 50.6414, 0.3574", "361.066, 452.176, 51.2512, 0.4794", "360.603, 453.192, 51.8462, 0.4064", "360.18, 454.221, 52.5062, 0.35", "359.637, 455.167, 53.324, 0.3196", "359.16, 456.128, 54.2934, 0.3598", "358.674, 457.101, 55.1555, 0.4252", "358.191, 458.071, 56.0538, 0.5892", "357.833, 459.088, 56.9834, 0.6864", "357.754, 460.161, 57.9096, 0.4972", "358.186, 461.128, 58.9089, 0.339", "358.786, 462.057, 59.6296, 0.2542", "359.503, 462.9, 60.3355, 0.2288", "359.902, 463.663, 62.16, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "360.841, 428.523, 37.9442, 0.3532", "361.76, 429.645, 38.1595, 0.3368", "362.433, 430.57, 38.1839, 0.3376", "363.201, 431.407, 38.4115, 0.4168", "364.116, 432.083, 38.6812, 0.416", "365.247, 432.065, 38.9368, 0.4436", "366.335, 431.72, 39.0928, 0.5826", "367.477, 431.656, 39.1121, 0.6434" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "360.841, 428.523, 37.9442, 0.3532", "361.22, 428.437, 39.2728, 0.2288", "361.999, 428.141, 41.1776, 0.374", "363.059, 427.965, 42.0524, 0.335", "364.087, 428.349, 42.7605, 0.302", "365.16, 428.322, 43.6576, 0.2782", "366.044, 427.672, 44.4469, 0.2814", "366.754, 426.828, 45.1898, 0.287" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "331.092, 424.964, 35.4897, 0.4958", "330.802, 425.626, 35.9545, 0.4576", "330.372, 426.667, 36.4431, 0.3594", "329.935, 427.723, 36.6106, 0.3004", "329.453, 428.756, 36.8144, 0.2752", "328.948, 429.777, 37.091, 0.2756", "328.557, 430.838, 37.5012, 0.2766", "328.143, 431.87, 38.1508, 0.2782", "327.603, 432.818, 38.9838, 0.2816", "327.282, 433.847, 39.8395, 0.2872", "327.326, 434.94, 40.6524, 0.2992", "327.487, 436.004, 41.5974, 0.315", "327.661, 437.0, 42.8775, 0.375", "328.146, 437.876, 44.1297, 0.337", "328.877, 438.623, 45.257, 0.3056", "329.693, 439.235, 46.499, 0.285", "330.551, 439.791, 47.7495, 0.2938", "331.387, 440.432, 48.8309, 0.3112", "332.184, 441.145, 49.8154, 0.3382", "332.977, 441.848, 50.8612, 0.413", "333.759, 442.539, 51.9985, 0.4328", "334.536, 443.251, 53.0799, 0.3592", "335.286, 443.997, 54.1335, 0.3", "336.079, 444.633, 55.3364, 0.2746", "336.95, 445.154, 56.623, 0.2744", "337.733, 445.81, 57.8598, 0.2744", "338.436, 446.561, 59.0786, 0.2742", "339.118, 447.34, 60.2731, 0.274", "339.852, 448.098, 61.3525, 0.2736", "340.714, 448.767, 62.1673, 0.2728", "341.618, 449.423, 62.7682, 0.2712", "342.569, 450.015, 63.3242, 0.2684", "342.913, 451.051, 63.5953, 0.2626", "342.771, 452.177, 63.4981, 0.2542", "342.762, 453.317, 63.2422, 0.2288", "342.883, 454.433, 62.7155, 0.2288" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "331.092, 424.964, 35.4897, 0.4958", "330.44, 424.132, 35.4102, 0.5904", "329.575, 423.384, 35.3578, 0.6324", "328.691, 422.658, 35.341, 0.8992", "327.795, 421.946, 35.3626, 0.9344", "327.145, 421.008, 35.4522, 0.9426", "326.683, 419.962, 35.432, 1.0068" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "333.677, 442.036, 32.7765, 0.3624", "333.446, 442.616, 32.6894, 0.3476", "333.13, 443.712, 32.655, 0.388", "333.055, 444.844, 32.8009, 0.362", "333.19, 445.97, 33.0999, 0.347", "333.414, 447.079, 33.5188, 0.3872", "333.634, 448.184, 33.9937, 0.3604", "333.769, 449.306, 34.4165, 0.344", "333.797, 450.441, 34.7309, 0.3816", "333.811, 451.583, 34.9334, 0.3488", "333.932, 452.717, 34.9882, 0.3288", "334.035, 453.856, 34.9364, 0.3226", "334.228, 454.983, 34.8863, 0.3892", "334.326, 456.121, 34.846, 0.3628", "334.612, 457.223, 34.9087, 0.3556", "335.126, 458.228, 35.2724, 0.3674" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "333.677, 442.036, 32.7765, 0.3624", "333.513, 442.178, 31.9556, 0.2288", "332.807, 442.909, 33.126, 0.4344", "331.989, 443.636, 33.8909, 0.4376", "330.915, 443.927, 34.5416, 0.5382", "329.987, 444.546, 35.1551, 0.4938" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "343.51, 425.469, 27.8958, 0.2788", "343.254, 425.273, 27.9079, 0.2824", "342.453, 424.463, 27.9138, 0.2894", "341.811, 423.521, 27.7998, 0.3018", "341.212, 422.551, 27.5746, 0.3256", "340.546, 421.632, 27.251, 0.3662", "339.758, 420.834, 26.746, 0.4594", "338.877, 420.183, 25.965, 0.5442", "338.046, 419.49, 25.0639, 0.4432", "337.362, 418.655, 24.1566, 0.3656", "336.504, 418.077, 23.0151, 0.3746", "335.578, 417.83, 21.5631, 0.336", "334.943, 417.099, 20.1348, 0.3038", "334.62, 416.136, 18.9417, 0.2816", "334.815, 415.13, 17.9668, 0.2876", "335.421, 414.202, 17.2946, 0.2996", "336.076, 413.289, 16.7648, 0.3158", "336.632, 412.327, 16.1659, 0.3766", "336.849, 411.253, 15.4958, 0.3398", "337.202, 410.206, 14.8498, 0.3106", "337.923, 409.36, 14.5463, 0.2954", "337.956, 408.264, 14.5205, 0.3078", "337.292, 407.429, 14.2753, 0.3616", "336.216, 407.189, 13.6433, 0.3136", "335.208, 406.676, 13.2311, 0.2542", "334.161, 406.234, 12.88, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "343.51, 425.469, 27.8958, 0.2788", "343.624, 425.192, 27.7544, 0.2288", "343.989, 424.372, 26.0149, 0.2794", "344.069, 423.497, 24.5715, 0.2834", "343.195, 423.28, 23.0677, 0.2908", "342.148, 423.513, 22.1672, 0.3058", "341.18, 424.072, 21.6728, 0.327", "340.161, 424.586, 21.4938, 0.3984", "339.048, 424.839, 21.4342, 0.3748", "337.907, 424.788, 21.4091, 0.4014", "336.827, 424.419, 21.2682, 0.3388", "335.781, 424.082, 20.5997, 0.309", "334.795, 424.252, 19.3478, 0.2912", "333.818, 424.659, 18.3018, 0.3052", "332.754, 424.878, 17.5357, 0.3334", "331.673, 424.705, 16.9052, 0.3732", "330.678, 424.239, 16.1787, 0.5082", "329.928, 423.496, 15.1863, 0.4614", "329.105, 422.761, 14.4534, 0.4434", "328.152, 422.169, 13.9216, 0.5338", "327.177, 421.605, 13.4306, 0.5592", "326.339, 420.85, 12.9958, 0.3814", "325.527, 420.048, 12.7725, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "331.475, 445.176, 18.5816, 0.466", "331.401, 446.519, 17.385, 0.3734", "330.901, 447.493, 16.6906, 0.3274", "330.17, 448.345, 16.1807, 0.32", "329.444, 449.22, 15.8698, 0.3844", "328.699, 450.085, 15.7383, 0.354", "327.833, 450.83, 15.6897, 0.3382", "326.988, 451.602, 15.6586, 0.3414", "326.286, 452.502, 15.5577, 0.4188", "325.898, 453.57, 15.3677, 0.4436", "325.93, 454.703, 15.1078, 0.3792", "325.793, 455.832, 14.8323, 0.338", "325.63, 456.962, 14.6296, 0.3396", "325.579, 458.103, 14.5478, 0.4218", "325.534, 459.246, 14.511, 0.4176", "325.286, 460.362, 14.4056, 0.484", "324.903, 461.438, 14.2827, 0.4756", "325.092, 462.563, 14.1735, 0.6404", "325.617, 463.578, 14.0734, 0.5292", "326.157, 464.586, 14.0442, 0.5144" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "331.475, 445.176, 18.5816, 0.466", "330.79, 445.109, 17.1171, 0.2288", "329.845, 444.806, 15.7827, 0.2752", "328.778, 444.522, 15.1274, 0.2756", "327.663, 444.474, 14.565, 0.2766", "326.549, 444.374, 13.9857, 0.2784", "325.526, 443.927, 13.4818, 0.2818", "324.596, 443.283, 13.0798, 0.2876", "323.538, 442.896, 12.7555, 0.3", "322.631, 443.469, 12.5019, 0.3164", "322.45, 444.565, 12.4144, 0.3786", "322.47, 445.708, 12.3616, 0.339", "321.755, 446.567, 12.1456, 0.3304", "321.006, 447.418, 11.76, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "370.621, 416.098, 23.8118, 0.2938", "370.134, 415.019, 23.4454, 0.3112", "369.635, 413.991, 23.4742, 0.3384", "369.277, 412.912, 23.6153, 0.4132", "369.233, 411.784, 23.7644, 0.4332", "369.376, 410.65, 23.8083, 0.3602", "369.459, 409.511, 23.7626, 0.3018", "369.374, 408.375, 23.7005, 0.278", "369.1, 407.267, 23.6295, 0.2808", "368.933, 406.144, 23.5058, 0.2862", "369.355, 405.148, 23.3217, 0.296", "370.203, 404.403, 23.1241, 0.3156", "370.69, 403.432, 22.8969, 0.3448", "370.726, 402.302, 22.6972, 0.4326", "370.717, 401.161, 22.5943, 0.4328", "370.841, 400.026, 22.5534, 0.5354", "371.03, 398.898, 22.5, 0.4578", "371.342, 397.8, 22.3847, 0.4714", "371.65, 396.699, 22.2659, 0.417", "371.797, 395.569, 22.1619, 0.4752", "372.092, 394.472, 22.0328, 0.4968", "372.824, 393.629, 21.9174, 0.4986", "373.625, 392.814, 21.7882, 0.4596", "374.169, 391.822, 21.603, 0.362", "374.587, 390.759, 21.691, 0.305" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "370.621, 416.098, 23.8118, 0.2938", "371.135, 415.127, 22.6486, 0.2288", "371.64, 414.104, 22.8724, 0.282" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "367.477, 431.656, 39.1121, 0.6434", "368.355, 432.684, 40.0257, 0.6864", "369.202, 433.382, 40.7669, 0.4448", "370.069, 434.086, 41.2992, 0.3268", "370.934, 434.776, 41.9219, 0.277", "371.871, 435.358, 42.6504, 0.2792", "372.868, 435.799, 43.4314, 0.283", "373.946, 436.094, 44.002, 0.2902", "374.987, 436.522, 44.3733, 0.3046", "375.877, 437.215, 44.6494, 0.3248", "376.632, 438.06, 44.9929, 0.3932", "377.458, 438.827, 45.3905, 0.3714", "378.422, 439.411, 45.8195, 0.3654", "379.454, 439.873, 46.2081, 0.4162", "380.411, 440.461, 46.6598, 0.4388", "381.329, 441.092, 47.2912, 0.3706", "382.353, 441.544, 47.8442, 0.321", "383.431, 441.896, 48.2082, 0.3132", "384.273, 442.657, 48.4448, 0.3478", "384.974, 443.556, 48.6508, 0.402", "385.816, 444.325, 48.855, 0.5514", "386.678, 445.071, 49.0801, 0.591", "387.579, 445.767, 49.3399, 0.4442", "388.577, 446.318, 49.6062, 0.3258", "389.543, 446.917, 49.8868, 0.2752", "390.387, 447.676, 50.2569, 0.2758", "391.256, 448.386, 50.762, 0.2768", "392.265, 448.886, 51.2397, 0.2786", "393.193, 449.518, 51.7339, 0.282", "393.885, 450.398, 52.2376, 0.288", "394.401, 451.382, 52.789, 0.3008", "395.268, 452.063, 53.268, 0.3178", "396.353, 452.407, 53.5343, 0.3802", "397.448, 452.723, 53.6827, 0.3464", "398.493, 453.177, 53.7916, 0.3242", "399.476, 453.762, 53.846, 0.3142", "400.403, 454.431, 53.8591, 0.3734", "401.322, 455.113, 53.8966, 0.3338", "402.252, 455.776, 54.0039, 0.3", "403.207, 456.393, 54.2494, 0.2746", "404.23, 456.878, 54.6316, 0.2746", "405.267, 457.33, 55.0379, 0.2746", "406.265, 457.861, 55.4439, 0.2746", "407.255, 458.404, 55.881, 0.2746", "408.288, 458.855, 56.3466, 0.2746", "409.336, 459.274, 56.8002, 0.2746", "410.329, 459.8, 57.2443, 0.2746", "411.217, 460.477, 57.8071, 0.2746", "412.132, 461.056, 58.618, 0.2746", "413.168, 461.416, 59.3888, 0.2746", "414.071, 462.035, 60.016, 0.2746", "414.953, 462.734, 60.5038, 0.2746", "415.889, 463.377, 60.8306, 0.2746", "416.713, 464.156, 60.9938, 0.2746", "417.512, 464.975, 61.0285, 0.2744", "418.517, 465.472, 61.014, 0.2744", "419.598, 465.847, 61.0355, 0.2742", "420.621, 466.349, 61.129, 0.274", "421.585, 466.959, 61.3217, 0.2736", "422.437, 467.708, 61.6064, 0.2728", "423.238, 468.507, 62.0208, 0.2712", "424.07, 469.201, 62.8628, 0.2684", "424.948, 469.827, 63.7977, 0.2626", "425.922, 470.337, 64.5786, 0.2542", "426.815, 470.921, 65.4886, 0.2288", "427.855, 470.985, 66.64, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "367.477, 431.656, 39.1121, 0.6434", "368.088, 431.496, 39.102, 0.568", "369.201, 431.239, 39.0499, 0.426", "370.329, 431.066, 38.9449, 0.402", "371.469, 430.977, 38.8805, 0.3396", "372.612, 430.974, 38.9502, 0.3108", "373.753, 430.984, 39.0961, 0.2944", "374.89, 430.882, 39.1395, 0.3124", "376.022, 430.723, 39.0628, 0.339", "377.159, 430.591, 38.9581, 0.422", "378.285, 430.406, 38.8976, 0.4132", "379.406, 430.181, 38.9152, 0.4982", "380.53, 429.969, 38.9768, 0.3942", "381.605, 429.599, 39.0424, 0.3274", "382.651, 429.137, 39.1138, 0.2782", "383.7, 428.681, 39.1353, 0.2814", "384.734, 428.197, 38.9922, 0.287", "385.814, 427.85, 38.7327, 0.2988", "386.928, 427.61, 38.5115, 0.3142", "388.022, 427.29, 38.3132, 0.3738", "389.072, 426.853, 38.0705, 0.3344", "390.111, 426.378, 37.914, 0.301", "391.214, 426.096, 37.9168, 0.2764", "392.349, 425.966, 37.9784, 0.278", "393.449, 425.665, 37.9725, 0.281", "394.521, 425.269, 37.8792, 0.2864", "395.65, 425.244, 37.7734, 0.2964", "396.794, 425.244, 37.7401, 0.316", "397.849, 424.835, 37.8039, 0.347", "398.951, 424.538, 37.6678, 0.429" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "366.754, 426.828, 45.1898, 0.287", "367.168, 427.22, 45.477, 0.2988", "368.111, 427.81, 45.9892, 0.3142", "369.181, 428.076, 46.5928, 0.3734", "370.26, 428.295, 47.3505, 0.3338", "371.333, 428.533, 48.1244, 0.3", "372.427, 428.565, 48.9048, 0.2746", "373.509, 428.414, 49.7182, 0.2746", "374.596, 428.306, 50.5361, 0.2746", "375.646, 427.964, 51.2355, 0.2746", "376.502, 427.251, 51.7213, 0.2746", "377.398, 426.562, 52.1587, 0.2746", "378.385, 426.043, 52.7372, 0.2746", "379.47, 425.828, 53.4327, 0.2746", "380.516, 426.19, 54.1232, 0.2746", "381.558, 426.561, 54.8394, 0.2746", "382.598, 426.931, 55.5741, 0.2746", "383.64, 427.302, 56.2929, 0.2746", "384.684, 427.673, 56.9904, 0.2746", "385.728, 428.045, 57.6794, 0.2746", "386.773, 428.415, 58.3719, 0.2746", "387.816, 428.787, 59.0708, 0.2746", "388.859, 429.159, 59.7783, 0.2746", "389.901, 429.53, 60.4979, 0.2746", "390.941, 429.899, 61.2321, 0.2746", "391.991, 430.234, 61.9923, 0.2746", "393.06, 430.463, 62.8071, 0.2746", "394.127, 430.684, 63.6602, 0.2746", "395.19, 430.902, 64.5467, 0.2746", "396.255, 431.039, 65.5071, 0.2746", "397.316, 431.163, 66.512, 0.2746", "398.372, 431.286, 67.5422, 0.2746", "399.428, 431.409, 68.5824, 0.2746", "400.482, 431.533, 69.6234, 0.2746", "401.539, 431.656, 70.653, 0.2746", "402.601, 431.77, 71.6593, 0.2746", "403.68, 431.78, 72.5838, 0.2746", "404.767, 431.79, 73.4614, 0.2746", "405.858, 431.799, 74.2991, 0.2744", "406.954, 431.81, 75.1024, 0.2744", "408.053, 431.819, 75.8766, 0.2742", "409.156, 431.829, 76.6231, 0.274", "410.26, 431.823, 77.3394, 0.2736", "411.366, 431.671, 77.968, 0.2728", "412.475, 431.518, 78.5445, 0.2712", "413.588, 431.365, 79.0714, 0.2684", "414.704, 431.21, 79.5494, 0.2626", "415.825, 431.057, 79.9828, 0.2542", "416.946, 430.902, 80.3827, 0.2288", "418.038, 430.751, 81.1275, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "366.754, 426.828, 45.1898, 0.287", "367.422, 426.421, 45.3636, 0.4576", "368.122, 425.526, 45.533, 0.4088", "368.51, 424.453, 45.6011, 0.4172", "368.588, 423.314, 45.7069, 0.3686", "368.579, 422.173, 45.8735, 0.3604", "368.493, 421.033, 45.9925, 0.4068", "368.22, 419.925, 46.1404, 0.4208", "368.2, 418.788, 46.4038, 0.339", "368.513, 417.694, 46.6808, 0.2542", "369.053, 416.759, 47.6, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "326.683, 419.962, 35.432, 1.0068", "325.328, 420.461, 34.4604, 0.2288", "324.327, 420.986, 34.1412, 0.3694", "323.492, 421.755, 34.0214, 0.4654", "322.862, 422.708, 33.8962, 0.5564", "322.23, 423.64, 33.7201, 0.4594", "321.273, 424.229, 33.5042, 0.4266", "320.226, 424.654, 33.3682, 0.3382", "319.436, 425.435, 33.3066, 0.308", "319.048, 426.496, 33.1979, 0.2896", "318.868, 427.623, 32.9944, 0.3018", "318.549, 428.706, 32.7821, 0.3274", "317.917, 429.641, 32.6267, 0.362", "317.072, 430.405, 32.506, 0.4876", "316.163, 431.098, 32.4593, 0.4228", "315.217, 431.742, 32.4391, 0.375", "314.184, 432.211, 32.3296, 0.3918", "313.111, 432.593, 32.079, 0.369", "312.049, 432.997, 31.7386, 0.3596", "310.948, 433.269, 31.4644, 0.4116", "309.823, 433.469, 31.3272, 0.4006", "308.936, 434.133, 31.1816, 0.444", "308.293, 435.059, 30.7891, 0.4432", "307.302, 435.616, 30.5595, 0.3786", "306.389, 436.3, 30.3663, 0.3368" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "326.683, 419.962, 35.432, 1.0068", "326.513, 418.35, 35.3814, 0.886", "326.392, 417.213, 35.322, 0.913", "326.273, 416.075, 35.2624, 0.8868", "326.153, 414.938, 35.2111, 0.7528" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "335.126, 458.228, 35.2724, 0.3674", "335.631, 459.224, 35.5566, 0.4972", "336.111, 460.262, 35.6857, 0.4416", "336.514, 461.329, 35.7714, 0.4046", "336.842, 462.425, 35.852, 0.4724", "337.124, 463.533, 35.9304, 0.3934", "337.26, 464.663, 35.9719, 0.3258", "337.256, 465.807, 35.9705, 0.2752", "337.267, 466.95, 35.9254, 0.2756", "337.324, 468.092, 35.8366, 0.2766", "337.382, 469.232, 35.6815, 0.2784", "337.547, 470.354, 35.408, 0.2816", "337.795, 471.465, 35.1355, 0.2874", "338.157, 472.538, 34.974, 0.2994", "338.577, 473.601, 34.8956, 0.3152", "338.758, 474.718, 34.8737, 0.3754", "338.757, 475.862, 34.895, 0.3376", "338.579, 476.984, 34.8376, 0.3068", "338.232, 478.072, 34.739, 0.287", "337.849, 479.15, 34.7273, 0.2988", "337.672, 480.273, 34.6612, 0.3142", "337.677, 481.414, 34.5108, 0.3738", "337.9, 482.529, 34.3314, 0.3344", "338.228, 483.619, 34.0721, 0.301", "338.552, 484.704, 33.6781, 0.2766", "338.831, 485.8, 33.2559, 0.2782", "339.224, 486.865, 32.9465, 0.2814", "339.635, 487.927, 32.6956, 0.287", "340.006, 489.002, 32.3767, 0.2988", "340.039, 490.123, 31.9343, 0.3142", "339.492, 491.098, 31.4706, 0.3738", "339.035, 492.137, 31.1825, 0.3344", "338.926, 493.267, 30.8224, 0.301", "339.036, 494.382, 30.3114, 0.2766", "338.707, 495.384, 29.7629, 0.2782", "337.72, 495.9, 29.3292, 0.2814", "336.605, 496.074, 28.8649, 0.287", "335.484, 496.115, 28.3542, 0.2988", "334.365, 496.023, 27.8254, 0.3142", "333.251, 495.919, 27.2735, 0.3734", "332.165, 496.073, 26.6729, 0.3338", "331.301, 496.719, 26.0413, 0.3", "330.72, 497.677, 25.4917, 0.2746", "330.15, 498.647, 25.0287, 0.2746", "329.423, 499.509, 24.6496, 0.2748", "328.559, 500.248, 24.3828, 0.275", "327.622, 500.9, 24.2344, 0.2752", "326.609, 501.419, 24.1463, 0.2758", "325.533, 501.806, 24.0785, 0.277", "324.48, 502.243, 24.056, 0.279", "323.464, 502.77, 24.0865, 0.2828", "322.452, 503.305, 24.1686, 0.2896", "321.441, 503.836, 24.326, 0.3036", "320.434, 504.369, 24.5731, 0.323", "319.411, 504.864, 24.858, 0.3898", "318.355, 505.286, 25.1419, 0.3654", "317.259, 505.576, 25.4334, 0.353", "316.134, 505.744, 25.7335, 0.3984", "315.012, 505.921, 26.0366, 0.381", "313.88, 506.032, 26.2504, 0.383", "312.754, 506.181, 26.3319, 0.4496", "311.776, 506.722, 26.4175, 0.4966", "310.941, 507.5, 26.5316, 0.498", "310.127, 508.301, 26.6573, 0.4586", "309.288, 509.077, 26.8433, 0.3602", "308.543, 509.936, 27.0285, 0.3016", "307.796, 510.801, 27.1179, 0.2776", "307.026, 511.646, 27.1558, 0.2802", "306.092, 512.295, 27.2103, 0.285", "305.044, 512.742, 27.3394, 0.2938", "304.064, 513.316, 27.563, 0.31", "303.217, 514.066, 27.9338, 0.3422", "302.371, 514.811, 28.4052, 0.3904", "301.444, 515.452, 28.8635, 0.535", "300.711, 516.309, 29.2662, 0.5364", "300.278, 517.355, 29.5725, 0.4612", "299.694, 518.33, 29.8183, 0.469", "298.898, 519.149, 29.8939, 0.4548", "297.884, 519.667, 29.9104, 0.5696", "296.887, 520.229, 30.0054, 0.554", "295.82, 520.637, 30.121, 0.489", "294.686, 520.779, 30.2145, 0.5452", "293.562, 520.577, 30.1991, 0.4774", "292.419, 520.553, 30.1106, 0.5", "291.288, 520.704, 29.9214, 0.5084", "290.233, 521.092, 29.4, 0.4576" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "335.126, 458.228, 35.2724, 0.3674", "335.236, 458.598, 36.2236, 0.2288", "335.571, 459.642, 36.64, 0.2762", "335.87, 460.745, 36.7254, 0.2776", "335.555, 461.819, 36.8144, 0.2802", "334.92, 462.762, 36.7629, 0.2852", "334.992, 463.902, 36.7349, 0.2942", "335.22, 465.023, 36.8096, 0.3118", "335.379, 466.155, 36.9267, 0.3394", "335.48, 467.294, 37.0367, 0.415", "335.605, 468.428, 37.1272, 0.4364", "335.997, 469.5, 37.1944, 0.3662", "336.54, 470.5, 37.3545, 0.3126", "336.779, 471.597, 37.7387, 0.299", "336.876, 472.711, 38.1884, 0.3146", "337.259, 473.766, 38.6607, 0.3744", "337.713, 474.797, 39.1082, 0.3356", "337.995, 475.89, 39.4873, 0.3034", "338.092, 477.021, 39.7916, 0.2808", "338.086, 478.159, 40.0602, 0.2862", "338.22, 479.278, 40.3606, 0.2958", "338.721, 480.275, 40.6386, 0.3148", "339.492, 481.114, 40.8442, 0.3452", "340.335, 481.884, 40.9856, 0.4254", "341.203, 482.63, 41.0396, 0.457", "342.055, 483.39, 41.022, 0.3988", "342.859, 484.203, 40.9805, 0.3988", "343.618, 485.058, 40.9478, 0.3338", "344.362, 485.928, 40.9469, 0.3", "345.172, 486.731, 40.9956, 0.2746", "346.07, 487.438, 41.0802, 0.2746", "347.028, 488.06, 41.1538, 0.2746", "348.03, 488.612, 41.1776, 0.2748", "349.001, 489.211, 41.1757, 0.2748", "349.852, 489.966, 41.1709, 0.2752", "350.566, 490.856, 41.1242, 0.2756", "351.24, 491.779, 41.0054, 0.2766", "351.944, 492.677, 40.8237, 0.2782", "352.667, 493.558, 40.574, 0.2814", "353.387, 494.435, 40.2237, 0.287", "354.049, 495.352, 39.8124, 0.2988", "354.6, 496.339, 39.4265, 0.3142", "355.107, 497.355, 39.0928, 0.3734", "355.646, 498.357, 38.8136, 0.3338", "356.215, 499.346, 38.5902, 0.3", "356.698, 500.376, 38.4233, 0.2746", "356.984, 501.478, 38.3219, 0.2746", "357.109, 502.613, 38.3222, 0.2746", "357.359, 503.717, 38.5207, 0.2746", "358.019, 504.605, 38.911, 0.2746", "358.755, 505.464, 39.3215, 0.2746", "359.604, 506.195, 39.8107, 0.2746", "360.624, 506.639, 40.3612, 0.2746", "361.67, 507.053, 40.8741, 0.2746", "362.685, 507.551, 41.2922, 0.2746", "363.346, 508.436, 41.6346, 0.2746", "363.971, 509.384, 41.9563, 0.2746", "364.926, 509.952, 42.2573, 0.2746", "365.827, 510.628, 42.6303, 0.2744", "366.411, 511.573, 43.1376, 0.2744", "367.048, 512.499, 43.6372, 0.2742", "367.484, 513.522, 44.2296, 0.274", "367.564, 514.625, 44.8697, 0.2736", "367.566, 515.743, 45.4717, 0.2728", "367.566, 516.838, 46.2745, 0.2712", "367.566, 517.941, 47.0184, 0.2684", "367.568, 519.061, 47.586, 0.2626", "367.607, 520.193, 47.9853, 0.2542", "367.682, 521.33, 48.242, 0.2288", "367.796, 522.465, 48.44, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "329.987, 444.546, 35.1551, 0.4938", "328.962, 444.596, 36.2191, 0.388", "327.954, 445.026, 36.9684, 0.306", "326.969, 445.566, 37.492, 0.2856", "326.002, 446.152, 37.8876, 0.2948", "325.118, 446.859, 38.2329, 0.3132", "324.255, 447.6, 38.5174, 0.3408", "323.326, 448.258, 38.7391, 0.4236", "322.367, 448.878, 38.911, 0.4226", "321.424, 449.525, 39.0334, 0.4858", "320.491, 450.183, 39.1028, 0.5164", "319.571, 450.863, 39.1502, 0.5354", "318.688, 451.587, 39.2613, 0.524", "317.745, 452.217, 39.4604, 0.5018", "316.754, 452.777, 39.741, 0.4656", "315.924, 453.524, 40.1366, 0.3728", "315.038, 454.206, 40.488, 0.3262", "314.033, 454.742, 40.7095, 0.318", "312.993, 455.217, 40.8173, 0.3806", "311.963, 455.714, 40.8626, 0.347", "310.971, 456.282, 40.9422, 0.3256", "309.984, 456.859, 41.0432, 0.3166", "308.967, 457.379, 41.1331, 0.378", "307.888, 457.741, 41.2605, 0.3426", "306.759, 457.896, 41.3473, 0.316", "305.624, 458.022, 41.2314, 0.304", "304.509, 458.255, 41.0295, 0.3312", "303.532, 458.823, 40.899, 0.3688", "302.611, 459.498, 40.7336, 0.5016", "301.621, 460.057, 40.4513, 0.4422", "300.702, 460.724, 40.187, 0.4416", "299.927, 461.56, 39.9879, 0.3672", "299.007, 462.23, 39.8317, 0.3564", "297.933, 462.6, 39.6978, 0.4056", "296.885, 463.052, 39.5119, 0.3882", "296.521, 464.098, 39.5013, 0.4272", "295.952, 465.087, 39.4954, 0.3812", "295.276, 466.011, 39.4386, 0.4134", "294.469, 466.821, 39.52, 0.3606", "293.671, 467.639, 39.6161, 0.3516", "292.794, 468.373, 39.7062, 0.3598", "292.085, 469.27, 39.7732, 0.4836", "291.385, 470.175, 39.8418, 0.414", "290.607, 471.012, 39.9106, 0.3648", "289.918, 471.925, 39.9739, 0.3434", "289.449, 472.969, 40.0571, 0.4224" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "329.987, 444.546, 35.1551, 0.4938", "329.765, 444.963, 35.2136, 0.4576", "329.155, 445.869, 35.9341, 0.3964", "328.48, 446.75, 36.5487, 0.3648", "327.626, 447.452, 37.1, 0.415", "326.688, 448.022, 37.8736, 0.4364", "325.835, 448.66, 38.8872, 0.3662", "325.339, 449.548, 40.0929, 0.3124", "325.443, 450.617, 41.0441, 0.2988", "325.703, 451.687, 41.7936, 0.3142", "325.772, 452.794, 42.4628, 0.3734", "325.926, 453.89, 43.1707, 0.334" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "326.157, 464.586, 14.0442, 0.5144", "325.864, 465.275, 13.9861, 0.474", "325.506, 466.36, 13.8986, 0.4614", "325.095, 467.423, 13.7942, 0.3654", "324.556, 468.43, 13.66, 0.3112", "324.03, 469.444, 13.5292, 0.2952", "323.664, 470.523, 13.4147, 0.3136", "323.352, 471.621, 13.2857, 0.3428", "322.729, 472.557, 13.1491, 0.4214", "321.837, 473.257, 13.0413, 0.4484", "320.882, 473.886, 12.9655, 0.3882", "319.967, 474.572, 12.9124, 0.3546", "319.187, 475.403, 12.8784, 0.3712", "318.571, 476.363, 12.8611, 0.4758", "318.014, 477.362, 12.8509, 0.54", "317.437, 478.35, 12.8389, 0.604", "316.902, 479.36, 12.8221, 0.5308", "316.573, 480.45, 12.7993, 0.4106", "316.51, 481.586, 12.7697, 0.3428", "316.62, 482.723, 12.725, 0.3794", "316.752, 483.859, 12.6491, 0.345", "316.776, 485.001, 12.5555, 0.3204", "316.754, 486.145, 12.495, 0.3132", "316.766, 487.289, 12.4918, 0.342", "316.664, 488.426, 12.5521, 0.4198", "316.252, 489.481, 12.7488, 0.4452", "315.467, 490.277, 13.2177, 0.3836", "314.887, 491.247, 13.4367, 0.3398", "314.211, 492.158, 13.3685, 0.3738", "313.488, 493.043, 13.2735, 0.3346", "312.997, 494.064, 13.1758, 0.3014", "312.673, 495.159, 13.0988, 0.2772", "312.233, 496.21, 13.085, 0.2794", "311.612, 497.166, 13.1504, 0.2836", "310.999, 498.131, 13.2478, 0.291", "310.691, 499.218, 13.3381, 0.3062", "310.808, 500.34, 13.4186, 0.3278", "311.102, 501.445, 13.4718, 0.3988", "311.329, 502.565, 13.4872, 0.3816", "311.509, 503.694, 13.4662, 0.3844", "311.719, 504.819, 13.3946, 0.451", "311.859, 505.952, 13.2914, 0.5052", "311.859, 507.094, 13.1802, 0.4838", "311.75, 508.23, 13.0514, 0.5776", "311.548, 509.355, 12.9121, 0.5628", "311.25, 510.457, 12.7789, 0.5358", "310.829, 511.518, 12.6469, 0.4828", "310.346, 512.553, 12.4877, 0.3996", "309.954, 513.623, 12.2941, 0.4002", "309.775, 514.747, 12.1097, 0.3364", "309.737, 515.888, 11.9659, 0.3046", "309.531, 517.009, 11.8636, 0.283", "309.118, 518.073, 11.8004, 0.2902", "308.848, 519.182, 11.7683, 0.303", "308.846, 520.321, 11.757, 0.3296", "308.807, 521.464, 11.7527, 0.366", "308.47, 522.551, 11.7487, 0.495", "307.837, 523.497, 11.7475, 0.4364", "306.947, 524.206, 11.7477, 0.4", "305.915, 524.698, 11.7292, 0.4392", "304.898, 525.22, 11.6831, 0.4526", "303.941, 525.845, 11.6241, 0.5356", "302.936, 526.389, 11.5349, 0.6352", "301.835, 526.679, 11.3735, 0.627", "300.713, 526.893, 11.2197, 0.6328", "299.638, 527.278, 11.1032, 0.5424", "298.682, 527.904, 11.0632, 0.4068", "297.553, 527.842, 11.2, 0.4576" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "326.157, 464.586, 14.0442, 0.5144", "326.443, 464.999, 14.6229, 0.2288", "326.98, 465.98, 14.1026, 0.2864", "327.144, 467.039, 13.4722, 0.2962", "327.009, 468.122, 12.6398, 0.3158", "327.321, 469.193, 12.0741, 0.3464", "327.859, 470.179, 11.557, 0.4294", "328.424, 471.154, 11.0768, 0.4576", "329.069, 472.093, 10.8207, 0.4322", "329.84, 472.938, 10.7296, 0.305", "330.959, 473.158, 10.64, 0.2288" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "374.587, 390.759, 21.691, 0.305", "374.809, 389.892, 21.9047, 0.284", "375.039, 388.776, 22.1351, 0.292", "375.385, 387.689, 22.2961, 0.308", "376.083, 386.794, 22.3509, 0.331", "376.78, 385.888, 22.2674, 0.4058", "377.434, 384.953, 22.1077, 0.3884", "377.996, 383.958, 21.9451, 0.4276", "378.458, 382.914, 21.8205, 0.3818", "378.772, 381.816, 21.7608, 0.4142", "379.251, 380.781, 21.5517, 0.3634", "379.608, 379.698, 21.3463, 0.3494", "379.941, 378.608, 21.1154, 0.3916", "380.809, 377.871, 20.9132, 0.3686", "381.688, 377.144, 20.7361, 0.3588", "382.566, 376.414, 20.5838, 0.4104", "383.447, 375.684, 20.4616, 0.397", "384.31, 374.935, 20.3331, 0.4434", "385.061, 374.077, 20.1401, 0.412", "385.573, 373.058, 19.8898, 0.4662" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "374.587, 390.759, 21.691, 0.305", "373.98, 389.681, 20.854, 0.2288", "373.704, 388.579, 20.5783, 0.3718", "373.772, 387.444, 20.3581, 0.4696", "374.286, 386.434, 20.1484, 0.564", "374.79, 385.411, 19.9234, 0.4746", "375.239, 384.36, 19.8189, 0.4492", "376.039, 383.548, 19.8924, 0.4068", "376.842, 382.737, 20.0758, 0.305", "377.406, 381.753, 20.44, 0.2288" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "371.64, 414.104, 22.8724, 0.282", "372.069, 413.776, 22.9844, 0.2882", "372.931, 413.032, 23.2184, 0.2996", "373.742, 412.23, 23.3728, 0.3232", "374.582, 411.454, 23.3929, 0.354", "375.467, 410.732, 23.2752, 0.473", "376.315, 409.978, 22.9708, 0.3946", "376.977, 409.074, 22.5239, 0.328", "377.367, 408.024, 22.0808, 0.2794", "377.431, 406.906, 21.673, 0.2838", "377.329, 405.777, 21.3048, 0.2914", "377.517, 404.68, 20.9522, 0.3068", "378.109, 403.728, 20.653, 0.329", "378.937, 402.951, 20.449, 0.402", "379.933, 402.41, 20.2652, 0.3818", "381.022, 402.095, 19.9744, 0.414", "382.101, 401.756, 19.5699, 0.3632", "383.02, 401.114, 19.1669, 0.349", "383.807, 400.299, 18.8249, 0.3912", "384.734, 399.648, 18.566, 0.3664", "385.795, 399.238, 18.3696, 0.362", "386.812, 398.729, 18.1456, 0.3802", "387.644, 397.963, 17.8671, 0.5162", "388.383, 397.1, 17.5782, 0.5002", "389.164, 396.27, 17.3034, 0.3998", "390.038, 395.541, 17.0386, 0.3288", "390.991, 394.921, 16.7522, 0.3228", "391.945, 394.305, 16.4291, 0.3894", "392.762, 393.522, 16.0743, 0.3648", "393.414, 392.596, 15.7297, 0.3518", "393.976, 391.606, 15.4622, 0.3974", "394.556, 390.623, 15.268, 0.3728", "395.28, 389.744, 15.0502, 0.3978", "396.245, 389.158, 14.7455, 0.332", "397.109, 388.444, 14.2208, 0.2966", "397.065, 387.331, 13.6318, 0.2684", "397.1, 386.206, 13.1275, 0.2626", "396.937, 385.092, 12.6382, 0.2542", "396.47, 384.06, 12.2745, 0.2288", "395.595, 383.354, 11.76, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "371.64, 414.104, 22.8724, 0.282", "371.991, 413.232, 21.0036, 0.2288", "372.028, 412.089, 21.0014, 0.2822", "372.029, 410.945, 21.0008, 0.2884", "372.029, 409.801, 21.0006, 0.3012", "372.029, 408.657, 21.0003, 0.3186", "372.029, 407.513, 21.0, 0.3816", "372.081, 406.371, 21.0, 0.3502", "372.213, 405.234, 21.0, 0.3248", "372.54, 404.139, 21.0, 0.3474", "372.706, 403.006, 21.0, 0.2796", "372.944, 401.887, 21.0, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "398.951, 424.538, 37.6678, 0.429", "399.001, 425.42, 36.7105, 0.2288", "399.54, 426.401, 36.4378, 0.2754", "400.456, 427.069, 36.3434, 0.2762", "401.512, 427.506, 36.2046, 0.2776", "402.51, 428.037, 36.015, 0.2802", "403.292, 428.856, 35.8235, 0.285", "403.943, 429.787, 35.5998, 0.2938", "404.697, 430.641, 35.3296, 0.3112", "405.389, 431.542, 35.0451, 0.3382", "406.078, 432.44, 34.7749, 0.413", "406.931, 433.193, 34.5134, 0.4328", "407.796, 433.931, 34.2975, 0.3594", "408.508, 434.817, 34.1256, 0.3002", "409.151, 435.754, 33.9172, 0.2748", "409.885, 436.625, 33.6683, 0.2752", "410.4, 437.618, 33.5202, 0.2756", "410.755, 438.705, 33.5336, 0.2766", "411.294, 439.698, 33.7406, 0.2782", "411.971, 440.604, 34.1373, 0.2814", "412.54, 441.57, 34.6203, 0.2872", "413.101, 442.552, 35.0529, 0.2988", "413.935, 443.286, 35.3786, 0.3144", "414.963, 443.762, 35.6378, 0.374", "416.026, 444.177, 35.8518, 0.335", "417.053, 444.674, 35.9722, 0.302", "418.102, 445.129, 35.9632, 0.2782", "419.22, 445.196, 35.7689, 0.2814", "420.184, 444.641, 35.4637, 0.2872", "420.703, 443.649, 35.1397, 0.2976", "421.473, 442.818, 34.8866, 0.3196", "422.584, 442.755, 34.6993, 0.3474", "423.473, 443.444, 34.5363, 0.4604", "424.319, 444.213, 34.4977, 0.3728", "425.257, 444.866, 34.3515, 0.2796", "426.14, 445.588, 34.16, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "398.951, 424.538, 37.6678, 0.429", "399.262, 424.475, 37.5609, 0.4638", "400.354, 424.148, 37.3778, 0.4112", "401.48, 423.971, 37.2086, 0.423", "402.555, 423.596, 37.0062, 0.3734", "403.545, 423.038, 36.7318, 0.3988", "404.629, 422.69, 36.5296, 0.3338", "405.721, 422.361, 36.3521, 0.3", "406.773, 421.914, 36.2463, 0.2746", "407.845, 421.515, 36.1785, 0.2746", "408.828, 420.942, 35.9349, 0.2746" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "306.389, 436.3, 30.3663, 0.3368", "306.09, 436.514, 30.1784, 0.3372", "305.242, 437.252, 29.7088, 0.4174", "304.693, 438.217, 29.318, 0.4108", "304.241, 439.259, 29.0055, 0.464", "303.627, 440.215, 28.7473, 0.475", "302.964, 441.142, 28.5513, 0.4634", "302.368, 442.117, 28.4278, 0.3688", "301.858, 443.138, 28.2626, 0.3176", "301.534, 444.225, 27.9982, 0.3082", "301.197, 445.307, 27.6144, 0.3316", "300.543, 446.218, 27.2027, 0.4056", "299.821, 447.097, 26.8776, 0.3954", "299.361, 448.133, 26.6338, 0.4048", "298.989, 449.212, 26.4755, 0.5146", "298.359, 450.162, 26.4015, 0.4972", "297.549, 450.966, 26.3957, 0.3944", "296.732, 451.766, 26.3652, 0.3176", "296.212, 452.77, 26.06, 0.3084", "295.719, 453.792, 25.7724, 0.332", "295.603, 454.917, 25.3964, 0.4062", "295.303, 455.995, 24.8235, 0.3966", "294.858, 457.012, 24.1502, 0.407", "294.467, 458.054, 23.5409, 0.5188", "294.243, 459.157, 23.033, 0.5048", "293.948, 460.238, 22.5278, 0.4082", "293.392, 461.205, 22.0248, 0.3446", "292.609, 462.015, 21.5513, 0.3528", "291.978, 462.938, 21.0427, 0.4412", "291.523, 463.967, 20.5489, 0.4796", "291.028, 464.977, 20.0544, 0.4716", "290.329, 465.839, 19.6089, 0.3854", "289.397, 466.485, 19.2717, 0.3432", "288.691, 467.31, 19.0114, 0.3802", "288.642, 468.406, 18.6944, 0.3462", "288.855, 469.522, 18.3965, 0.324", "289.022, 470.645, 18.0685, 0.3138", "289.247, 471.748, 17.5805, 0.3728", "289.29, 472.855, 17.0158, 0.3328", "288.846, 473.854, 16.5082, 0.2982", "287.872, 474.188, 15.9916, 0.2712", "286.76, 474.142, 15.3895, 0.2684", "285.896, 474.678, 14.4885, 0.2626", "285.294, 475.551, 13.4454, 0.2542", "284.489, 476.028, 11.9643, 0.2288", "283.941, 476.133, 9.52, 0.2288" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "306.389, 436.3, 30.3663, 0.3368", "305.637, 435.787, 28.7185, 0.2288", "304.615, 435.97, 27.8281, 0.3648", "303.516, 436.061, 27.0969, 0.493", "302.401, 436.151, 26.5049, 0.4324", "301.299, 436.398, 26.1839, 0.3938", "300.348, 437.026, 26.2173, 0.4218", "299.497, 437.789, 26.2341, 0.4492", "298.746, 438.647, 26.3077, 0.3892", "297.903, 439.399, 26.4493, 0.3578", "296.815, 439.677, 26.404, 0.371", "295.765, 440.103, 26.1345, 0.5054", "294.729, 440.574, 25.8656, 0.4492", "293.698, 441.053, 25.5338, 0.456", "292.864, 441.733, 24.8192, 0.387", "292.46, 442.758, 24.1154, 0.4252", "291.729, 443.436, 23.4826, 0.3774", "290.62, 443.315, 22.9543, 0.4064", "289.517, 443.112, 22.4717, 0.3478", "288.489, 443.374, 21.7898, 0.3256", "287.488, 443.872, 21.2316, 0.324", "286.704, 444.637, 20.828, 0.3558", "285.96, 445.491, 20.4512, 0.4764", "285.234, 446.356, 20.022, 0.4008", "284.4, 447.084, 19.4293, 0.3394", "283.336, 447.378, 18.8149, 0.3016", "282.221, 447.53, 18.3118, 0.3194", "281.148, 447.898, 17.9792, 0.3834", "280.14, 448.43, 17.7888, 0.352", "279.096, 448.896, 17.6822, 0.3348", "278.029, 449.303, 17.5972, 0.3334", "276.928, 449.615, 17.4827, 0.4102", "275.805, 449.809, 17.319, 0.398", "274.663, 449.817, 17.1688, 0.439", "273.521, 449.769, 17.139, 0.434", "272.434, 449.411, 17.1751, 0.3616", "271.342, 449.076, 17.283, 0.3042", "270.355, 448.516, 17.435, 0.2824", "269.721, 447.587, 17.6239, 0.2882", "269.781, 446.494, 17.9353, 0.305", "270.204, 445.486, 18.2551, 0.305", "269.87, 444.444, 18.2, 0.4576" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "326.153, 414.938, 35.2111, 0.7528", "326.766, 413.948, 35.2517, 0.2288", "327.263, 412.947, 35.152, 0.2752", "327.71, 411.908, 35.044, 0.2758", "328.402, 411.008, 34.8404, 0.2768", "329.247, 410.244, 34.6774, 0.2786", "330.094, 409.48, 34.5671, 0.2822", "330.888, 408.661, 34.3823, 0.2888", "331.506, 407.716, 34.106, 0.3006", "331.897, 406.652, 33.8254, 0.3236", "332.289, 405.583, 33.5647, 0.3624", "332.923, 404.657, 33.2637, 0.4526", "333.721, 403.855, 32.8678, 0.5316", "334.57, 403.118, 32.3512, 0.4188", "335.312, 402.269, 31.9351, 0.3256", "335.885, 401.284, 31.7596, 0.2748", "336.473, 400.304, 31.85, 0.275", "337.133, 399.373, 32.0328, 0.2756", "337.841, 398.476, 32.1406, 0.2764", "338.654, 397.673, 32.0424, 0.278", "339.5, 396.926, 31.7234, 0.2808", "340.165, 396.006, 31.3569, 0.2864", "340.85, 395.102, 31.0005, 0.2962", "341.618, 394.261, 30.7342, 0.3156", "342.444, 393.477, 30.5421, 0.3464", "343.328, 392.757, 30.3705, 0.4278", "344.114, 391.934, 30.1428, 0.4612", "344.834, 391.051, 29.8973, 0.4068", "345.64, 390.25, 29.6234, 0.4136", "346.522, 389.534, 29.3065, 0.3608", "347.431, 388.854, 28.9598, 0.3522", "348.361, 388.203, 28.6264, 0.3608", "349.325, 387.595, 28.3917, 0.4854", "350.294, 386.99, 28.2758, 0.4186", "351.221, 386.323, 28.2058, 0.3674", "352.077, 385.567, 28.1285, 0.378", "352.907, 384.781, 28.0529, 0.3424", "353.821, 384.104, 27.9352, 0.3156", "354.806, 383.534, 27.6538, 0.3044", "355.71, 382.866, 27.2212, 0.3246", "356.584, 382.146, 26.8379, 0.3928", "357.562, 381.58, 26.5376, 0.3708", "358.608, 381.133, 26.2727, 0.3642", "359.618, 380.611, 26.0623, 0.4138", "360.616, 380.055, 25.9071, 0.4344", "361.589, 379.459, 25.8046, 0.3624", "362.332, 378.621, 25.7193, 0.3058", "362.82, 377.595, 25.5013, 0.2852", "363.29, 376.608, 24.8202, 0.2942", "364.295, 376.123, 24.3167, 0.3116", "365.424, 375.996, 24.0048, 0.3392", "366.538, 375.759, 23.7857, 0.4148", "367.614, 375.421, 23.6328, 0.436", "368.752, 375.494, 23.4862, 0.3652", "369.889, 375.392, 23.3339, 0.311", "370.995, 375.318, 23.2145, 0.295", "372.014, 375.835, 23.0828, 0.3132", "373.035, 376.335, 22.8735, 0.342", "374.135, 376.583, 22.6336, 0.4198", "375.276, 376.535, 22.4143, 0.4454", "376.413, 376.442, 22.1983, 0.3826", "377.547, 376.33, 21.9918, 0.344", "378.686, 376.228, 21.8779, 0.3518", "379.826, 376.202, 21.7427, 0.4392", "380.961, 376.289, 21.4705, 0.4762", "382.09, 376.375, 21.0837, 0.4654", "383.215, 376.461, 20.6117, 0.3724", "384.335, 376.548, 20.0801, 0.3252", "385.453, 376.637, 19.5241, 0.3162", "386.573, 376.724, 19.0007, 0.3772", "387.699, 376.758, 18.5412, 0.3408", "388.825, 376.78, 18.0978, 0.3126", "389.835, 377.171, 17.654, 0.299", "390.726, 377.87, 17.2797, 0.3146", "391.746, 378.304, 16.9232, 0.3744", "392.87, 378.371, 16.5573, 0.3358", "393.975, 378.151, 16.2345, 0.3036", "394.98, 377.639, 15.993, 0.2814", "395.879, 376.939, 15.7853, 0.287", "396.739, 376.19, 15.5776, 0.2988", "397.661, 375.523, 15.3709, 0.3142", "398.652, 374.962, 15.132, 0.3734", "399.638, 374.396, 14.8447, 0.3338", "400.57, 373.747, 14.5296, 0.3", "401.411, 372.989, 14.1992, 0.2746", "402.145, 372.123, 13.8657, 0.2746", "402.394, 371.068, 13.5806, 0.2746", "402.187, 369.952, 13.3974, 0.2746", "401.958, 368.834, 13.2754, 0.2746", "401.824, 367.699, 13.1974, 0.2746", "401.859, 366.558, 13.1349, 0.2746", "402.42, 365.604, 13.126, 0.2746", "403.284, 364.862, 13.093, 0.2746", "404.221, 364.207, 13.0783, 0.2746", "405.124, 363.503, 13.1218, 0.2746", "405.865, 362.635, 13.192, 0.2746", "406.581, 361.744, 13.2973, 0.2746", "407.216, 360.795, 13.4131, 0.2746", "407.745, 359.781, 13.4924, 0.2746", "408.35, 358.811, 13.5485, 0.2746", "408.996, 357.867, 13.6293, 0.2744", "409.358, 356.786, 13.7061, 0.2744", "409.655, 355.681, 13.7357, 0.2742", "409.999, 354.591, 13.6986, 0.274", "410.303, 353.488, 13.6586, 0.2736", "410.512, 352.363, 13.6522, 0.2728", "410.854, 351.272, 13.6587, 0.2712", "411.476, 350.315, 13.6688, 0.2684", "412.155, 349.394, 13.6441, 0.2626", "412.895, 348.521, 13.6853, 0.2542", "413.77, 347.784, 13.706, 0.2288", "414.814, 347.318, 13.72, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "326.153, 414.938, 35.2111, 0.7528", "325.426, 414.759, 35.2556, 0.689", "324.629, 413.949, 35.3352, 0.5894", "323.872, 413.093, 35.4315, 0.5434", "323.146, 412.21, 35.5432, 0.4718", "322.15, 411.656, 35.6776, 0.4998", "321.125, 411.157, 35.8966, 0.6882", "320.238, 410.445, 36.1556, 0.832", "319.486, 409.589, 36.3885, 0.9522", "319.06, 408.532, 36.601, 0.97", "318.71, 407.447, 36.841, 0.8552", "318.413, 406.349, 37.1316, 0.9018" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "289.449, 472.969, 40.0571, 0.4224", "289.14, 474.253, 40.2836, 0.45", "288.906, 475.37, 40.4928, 0.3922", "288.635, 476.475, 40.7596, 0.3556", "288.27, 477.55, 41.0771, 0.4044", "287.848, 478.604, 41.4299, 0.3858", "287.402, 479.647, 41.7892, 0.423", "286.954, 480.69, 42.1266, 0.3734", "286.523, 481.742, 42.4441, 0.3988", "286.161, 482.817, 42.782, 0.3338", "285.894, 483.915, 43.1911, 0.3", "285.49, 484.955, 43.7083, 0.2746", "284.806, 485.826, 44.3008, 0.2746", "284.104, 486.679, 45.0106, 0.2746", "283.312, 487.397, 45.9469, 0.2746", "282.415, 488.003, 46.8521, 0.2746", "281.652, 488.785, 47.6451, 0.2746", "280.838, 489.396, 48.8578, 0.2746", "280.47, 490.171, 50.6489, 0.2746", "280.177, 491.11, 52.0635, 0.2746", "279.849, 492.087, 53.2792, 0.2746", "279.531, 493.101, 54.3057, 0.2746", "279.257, 494.159, 55.1222, 0.2746", "279.154, 495.257, 55.7878, 0.2746", "279.186, 496.371, 56.4214, 0.2746", "279.342, 497.461, 57.1138, 0.2746", "279.882, 498.385, 57.8556, 0.2746", "280.415, 499.328, 58.5936, 0.2746", "280.6, 500.41, 59.2746, 0.2746", "280.508, 501.509, 59.943, 0.2746", "280.163, 502.497, 60.9697, 0.2746", "279.558, 503.351, 62.0833, 0.2746", "278.829, 504.186, 62.7752, 0.2746", "278.078, 505.025, 63.2752, 0.2746", "277.458, 505.976, 63.6048, 0.2746", "276.877, 506.959, 63.7806, 0.2744", "276.263, 507.925, 63.8369, 0.2744", "275.688, 508.913, 63.84, 0.2742", "275.509, 510.043, 63.84, 0.274", "275.479, 511.186, 63.84, 0.2736", "274.829, 512.129, 63.84, 0.2728", "274.213, 513.092, 63.84, 0.2712", "273.926, 514.199, 63.84, 0.2684", "273.289, 515.15, 63.84, 0.2626", "272.687, 516.122, 63.84, 0.2542", "272.471, 517.246, 63.84, 0.2288", "272.158, 518.346, 63.84, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "289.449, 472.969, 40.0571, 0.4224", "288.783, 473.203, 39.6743, 0.2288", "287.819, 473.794, 39.4248, 0.2746", "286.954, 474.54, 39.3361, 0.2746", "286.152, 475.351, 39.1423, 0.2746", "285.457, 476.251, 38.845, 0.2746", "284.823, 477.19, 38.4532, 0.2746", "284.148, 478.092, 37.9705, 0.2746", "283.404, 478.943, 37.5382, 0.2746", "282.459, 479.564, 37.1456, 0.2746", "281.51, 480.178, 36.7189, 0.2746", "280.549, 480.784, 36.3902, 0.2746", "279.454, 481.092, 36.1362, 0.2746", "278.332, 481.299, 35.9484, 0.2744", "277.286, 481.76, 35.7888, 0.2744", "276.282, 482.302, 35.6672, 0.2742", "275.398, 483.029, 35.6034, 0.274", "274.655, 483.897, 35.5295, 0.2736", "273.919, 484.772, 35.4267, 0.2728", "273.107, 485.578, 35.3648, 0.2712", "272.178, 486.245, 35.294, 0.2684", "271.049, 486.418, 35.1806, 0.2626", "269.907, 486.443, 35.0638, 0.2542", "268.933, 487.039, 34.9328, 0.2288", "267.924, 487.573, 34.72, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "325.926, 453.89, 43.1707, 0.334", "326.129, 454.525, 43.5548, 0.3", "326.247, 455.652, 43.9208, 0.2748", "326.089, 456.772, 44.3022, 0.2748", "325.691, 457.839, 44.5085, 0.2752", "325.562, 458.972, 44.557, 0.2756", "325.743, 460.102, 44.5413, 0.2766", "325.978, 461.221, 44.5085, 0.2782", "326.295, 462.319, 44.5662, 0.2816", "326.603, 463.409, 44.7513, 0.2872", "326.549, 464.544, 45.0008, 0.2992", "326.268, 465.645, 45.2931, 0.315", "325.784, 466.668, 45.6282, 0.375", "325.158, 467.616, 45.969, 0.337", "324.523, 468.561, 46.2546, 0.3056", "323.914, 469.523, 46.5338, 0.285", "323.292, 470.472, 46.881, 0.2938", "322.665, 471.416, 47.2604, 0.3112", "322.089, 472.391, 47.6378, 0.3382", "321.622, 473.417, 48.0656, 0.413", "321.355, 474.508, 48.575, 0.4328", "321.121, 475.601, 49.1148, 0.3594", "320.699, 476.644, 49.6076, 0.3002", "320.26, 477.686, 50.0184, 0.2748", "319.951, 478.775, 50.3745, 0.2752", "319.812, 479.9, 50.6946, 0.2756", "319.773, 481.036, 50.9891, 0.2766", "319.571, 482.148, 51.2627, 0.2782", "319.144, 483.204, 51.4867, 0.2814", "318.629, 484.223, 51.6488, 0.287", "318.077, 485.223, 51.7619, 0.2988", "317.609, 486.263, 51.8188, 0.3142", "317.298, 487.362, 51.7924, 0.3734", "317.066, 488.482, 51.7146, 0.3338", "316.879, 489.61, 51.6222, 0.3", "316.76, 490.746, 51.5281, 0.2746", "316.672, 491.886, 51.4872, 0.2746", "316.491, 493.014, 51.5589, 0.2746", "316.29, 494.136, 51.7415, 0.2746", "316.129, 495.264, 51.9632, 0.2746", "315.911, 496.384, 52.1758, 0.2746", "315.762, 497.512, 52.3662, 0.2746", "315.73, 498.654, 52.5154, 0.2746", "315.667, 499.793, 52.6159, 0.2746", "315.422, 500.903, 52.6708, 0.2746", "315.001, 501.964, 52.7562, 0.2746", "314.456, 502.965, 52.8769, 0.2746", "313.933, 503.977, 53.0054, 0.2748", "313.703, 505.078, 53.2193, 0.2748", "313.712, 506.212, 53.5433, 0.275", "313.903, 507.328, 53.8684, 0.2756", "314.178, 508.432, 54.1668, 0.2764", "314.126, 509.542, 54.4995, 0.278", "313.773, 510.62, 54.8226, 0.2808", "313.536, 511.729, 55.0553, 0.2864", "313.424, 512.865, 55.1916, 0.2962", "313.207, 513.985, 55.258, 0.3154", "312.882, 515.081, 55.2661, 0.3462", "312.585, 516.187, 55.2233, 0.4276", "312.342, 517.303, 55.1326, 0.4608", "312.191, 518.435, 54.9707, 0.4062", "312.164, 519.573, 54.7389, 0.4122", "312.214, 520.711, 54.4964, 0.3596", "312.223, 521.854, 54.3698, 0.3424", "312.405, 522.98, 54.4015, 0.3786", "312.889, 524.008, 54.5143, 0.3436", "313.463, 524.997, 54.6462, 0.318", "314.084, 525.953, 54.8436, 0.309", "314.591, 526.973, 55.0774, 0.3332", "314.883, 528.07, 55.3622, 0.4082", "315.076, 529.188, 55.7116, 0.4004", "315.523, 530.222, 56.1095, 0.414", "315.997, 531.248, 56.5466, 0.5314", "316.644, 532.153, 57.1774, 0.5294", "317.104, 533.172, 57.7637, 0.4498", "317.664, 534.145, 58.2994, 0.4406", "318.297, 535.069, 58.856, 0.4378", "318.59, 536.129, 59.5762, 0.3644", "318.451, 537.201, 60.4131, 0.3304", "318.717, 538.138, 61.88, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "325.926, 453.89, 43.1707, 0.334", "326.038, 454.165, 43.5666, 0.4576", "326.353, 455.158, 44.6804, 0.3612", "326.617, 456.233, 45.3365, 0.3034", "326.932, 457.315, 45.792, 0.281", "327.483, 458.273, 46.3478, 0.2862", "328.441, 458.729, 46.9031, 0.2966", "329.553, 458.92, 47.3634, 0.3136", "330.613, 459.31, 47.6185, 0.356", "331.365, 460.126, 47.5045, 0.3814", "331.874, 461.146, 47.32, 0.6864" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "385.573, 373.058, 19.8898, 0.4662", "386.204, 372.365, 19.7128, 0.4792", "386.939, 371.491, 19.5218, 0.4706", "387.588, 370.553, 19.3453, 0.3836", "388.129, 369.55, 19.1587, 0.3396", "388.553, 368.492, 18.9497, 0.3736", "389.04, 367.461, 18.7246, 0.3342", "389.736, 366.563, 18.495, 0.3006", "390.532, 365.747, 18.2717, 0.2756", "391.329, 364.931, 18.0512, 0.2764", "392.061, 364.061, 17.8033, 0.278", "392.497, 363.023, 17.4521, 0.281", "392.243, 361.95, 17.0145, 0.2866", "391.953, 360.855, 16.6113, 0.297", "392.045, 359.733, 16.2231, 0.3156", "392.551, 358.724, 15.9045, 0.354", "393.144, 357.749, 15.6969, 0.406", "393.65, 356.727, 15.5101, 0.5958", "394.077, 355.671, 15.2725, 0.493", "394.516, 354.618, 15.0262, 0.4514", "394.971, 353.573, 14.783, 0.337", "395.906, 352.96, 14.4919, 0.3058", "396.966, 352.564, 14.0928, 0.2852", "397.963, 352.034, 13.6539, 0.2954", "398.797, 351.267, 13.3039, 0.3078", "399.543, 350.413, 12.9416, 0.3616", "400.449, 349.754, 12.4068, 0.3136", "401.417, 349.195, 11.8654, 0.2542", "402.002, 348.348, 10.64, 0.2288" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "385.573, 373.058, 19.8898, 0.4662", "385.376, 372.697, 21.2623, 0.2288", "385.234, 371.733, 22.2331, 0.3266", "385.314, 370.596, 22.4015, 0.3976", "385.488, 369.467, 22.5606, 0.3734", "385.756, 368.359, 22.7627, 0.3988", "386.1, 367.272, 22.9605, 0.334", "386.415, 366.174, 23.1102, 0.3", "386.48, 365.039, 23.2217, 0.2748", "386.424, 363.897, 23.3072, 0.2748", "386.465, 362.754, 23.3196, 0.2752", "386.528, 361.613, 23.2394, 0.2756", "386.631, 360.475, 23.0902, 0.2766", "387.138, 359.465, 22.9872, 0.2784", "387.919, 358.637, 22.9337, 0.2816", "388.671, 357.775, 22.8884, 0.2874", "389.269, 356.802, 22.8427, 0.2994", "390.044, 355.966, 22.8215, 0.3154", "390.943, 355.262, 22.9497, 0.376", "391.772, 354.475, 23.0717, 0.3386", "392.719, 353.837, 23.1768, 0.3086", "393.786, 353.428, 23.1701, 0.2904", "394.919, 353.55, 23.0511, 0.305", "396.034, 353.795, 22.8602, 0.3248", "397.148, 353.581, 22.548, 0.3982", "398.147, 353.048, 22.1804, 0.356", "399.256, 352.924, 21.56, 0.4576" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "408.828, 420.942, 35.9349, 0.2746", "409.757, 421.335, 35.7605, 0.2746", "410.896, 421.333, 35.5144, 0.2746", "412.032, 421.382, 35.2766, 0.2746", "413.165, 421.246, 35.1008, 0.2746", "414.285, 421.017, 35.0454, 0.2748", "415.422, 420.892, 35.091, 0.2748", "416.562, 420.82, 35.1355, 0.2752", "417.664, 420.582, 35.1406, 0.2756", "418.572, 419.905, 35.023, 0.2766", "419.319, 419.061, 34.6626, 0.2784", "420.225, 418.4, 34.1275, 0.2818", "421.209, 417.862, 33.6252, 0.2878", "422.27, 417.49, 33.1332, 0.3002", "423.354, 417.189, 32.6309, 0.3168", "424.408, 416.784, 32.2412, 0.3786", "425.417, 416.257, 31.9771, 0.3434", "426.423, 415.722, 31.7352, 0.3176", "427.477, 415.318, 31.4325, 0.3068", "428.599, 415.209, 31.1525, 0.3364", "429.733, 415.312, 30.9296, 0.3786", "430.868, 415.393, 30.6838, 0.5194", "432.003, 415.323, 30.4419, 0.4762", "433.13, 415.148, 30.2266, 0.5006", "434.251, 414.948, 29.9816, 0.4966", "435.38, 414.828, 29.6884, 0.498", "436.515, 414.865, 29.3868, 0.4588", "437.641, 415.032, 29.1522, 0.3604", "438.765, 415.235, 29.0416, 0.3022", "439.802, 415.675, 29.1158, 0.2784", "440.775, 416.267, 29.3535, 0.2818", "441.872, 416.452, 29.6514, 0.288", "443.012, 416.423, 29.867, 0.3004", "444.141, 416.255, 29.9729, 0.3174", "445.25, 415.978, 29.99, 0.3794", "446.362, 415.711, 29.9555, 0.345", "447.469, 415.421, 29.8785, 0.3204", "448.543, 415.035, 29.7242, 0.3132", "449.549, 414.504, 29.5039, 0.342", "450.492, 413.864, 29.2779, 0.4198", "451.421, 413.201, 29.0648, 0.4452", "452.419, 412.65, 28.9016, 0.3836", "453.406, 412.072, 28.8014, 0.3398", "454.372, 411.461, 28.7246, 0.3738", "455.454, 411.103, 28.6994, 0.3346", "456.589, 410.969, 28.6353, 0.3012", "457.726, 410.879, 28.4544, 0.2768", "458.868, 410.831, 28.3226, 0.2786", "460.008, 410.744, 28.2058, 0.2822", "461.142, 410.656, 27.9275, 0.2884", "462.257, 410.419, 27.7028, 0.3014", "463.377, 410.199, 27.55, 0.319", "464.502, 409.988, 27.5024, 0.3828", "465.64, 409.886, 27.473, 0.3508", "466.778, 409.773, 27.4392, 0.3326", "467.913, 409.64, 27.4189, 0.3296", "469.057, 409.656, 27.3509, 0.4032", "470.198, 409.733, 27.3053, 0.3838", "471.334, 409.868, 27.2619, 0.4182", "472.469, 409.997, 27.208, 0.3694", "473.602, 409.918, 27.0927, 0.3678", "474.625, 409.473, 26.9942, 0.3908", "475.375, 408.622, 26.9152, 0.5368", "476.355, 408.039, 26.8295, 0.5332", "477.423, 407.631, 26.7795, 0.4864", "478.519, 407.307, 26.7413, 0.3646", "479.65, 407.16, 26.6868, 0.31", "480.79, 407.207, 26.6843, 0.2928", "481.932, 407.282, 26.582, 0.3094", "483.071, 407.248, 26.45, 0.3338", "484.201, 407.076, 26.352, 0.4106", "485.335, 406.939, 26.3047, 0.3988", "486.478, 406.879, 26.2715, 0.4404", "487.617, 406.777, 26.2604, 0.4366", "488.758, 406.694, 26.2968, 0.3666", "489.901, 406.668, 26.2771, 0.3132", "491.04, 406.628, 26.1106, 0.3002", "492.173, 406.496, 25.8708, 0.3168", "493.302, 406.346, 25.6044, 0.3786", "494.436, 406.245, 25.3512, 0.3434", "495.575, 406.183, 25.1523, 0.3176", "496.717, 406.13, 25.0289, 0.3068", "497.857, 406.101, 24.8733, 0.3364", "498.965, 405.92, 24.544, 0.3798", "500.01, 405.508, 24.0281, 0.5156", "501.069, 405.27, 23.2999, 0.499", "502.104, 405.503, 22.4126, 0.3972", "503.049, 406.031, 21.5354, 0.3242", "504.018, 406.567, 20.8428, 0.3144", "505.053, 407.0, 20.3383, 0.374", "506.16, 407.192, 19.9205, 0.3348", "507.285, 407.326, 19.5276, 0.3016", "508.397, 407.533, 19.1098, 0.2776", "509.516, 407.616, 18.6133, 0.2804", "510.631, 407.545, 18.037, 0.2852", "511.708, 407.754, 17.361, 0.2954", "512.76, 408.086, 16.6365, 0.3078", "513.679, 407.597, 15.8734, 0.3616", "514.419, 406.767, 15.2488, 0.3136", "515.291, 406.151, 14.3932, 0.2542", "516.057, 406.578, 12.6, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "408.828, 420.942, 35.9349, 0.2746", "409.465, 419.755, 35.511, 0.4576", "410.134, 418.829, 35.5046, 0.3612", "410.884, 417.965, 35.4718, 0.3036", "411.647, 417.113, 35.4738, 0.2814", "412.263, 416.165, 35.5972, 0.2872", "412.601, 415.087, 35.8484, 0.299", "412.904, 413.998, 36.2018, 0.3144", "413.495, 413.061, 36.6537, 0.3742", "414.268, 412.256, 37.2697, 0.3352", "415.052, 411.489, 38.0579, 0.3024", "415.907, 410.796, 38.8004, 0.279", "416.782, 410.105, 39.4302, 0.2828", "417.708, 409.478, 40.0064, 0.2896", "418.755, 409.107, 40.5306, 0.3034", "419.773, 408.652, 41.0455, 0.323", "420.402, 407.772, 41.6226, 0.3896", "420.806, 406.732, 42.2296, 0.3648", "421.227, 405.699, 42.8448, 0.352", "421.812, 404.739, 43.3292, 0.3976", "422.441, 403.797, 43.708, 0.3736", "423.086, 402.856, 43.9449, 0.399", "423.745, 401.922, 44.0423, 0.3342", "423.772, 400.811, 44.0196, 0.3006", "423.6, 399.68, 43.9687, 0.2758", "423.375, 398.56, 44.1098, 0.2768", "423.402, 397.421, 44.3243, 0.2788", "423.172, 396.307, 44.5861, 0.2824", "422.733, 395.254, 44.8238, 0.2882", "422.105, 394.301, 44.9814, 0.305", "421.396, 393.404, 45.0736, 0.305", "420.878, 392.392, 45.36, 0.4576" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "318.413, 406.349, 37.1316, 0.9018", "318.006, 405.47, 37.3657, 0.874", "317.478, 404.458, 37.5458, 0.9176", "316.842, 403.51, 37.7045, 0.765", "316.118, 402.627, 37.861, 0.9306", "315.37, 401.764, 38.0316, 0.8898", "314.596, 400.924, 38.2094, 0.9014", "313.814, 400.092, 38.3698, 0.7282", "313.077, 399.218, 38.4924, 0.6656", "312.408, 398.292, 38.5759, 0.6674", "311.81, 397.317, 38.6263, 0.7844", "311.29, 396.299, 38.6523, 0.9078", "310.789, 395.27, 38.6658, 0.9038", "310.243, 394.265, 38.677, 0.8822", "309.651, 393.285, 38.6907, 0.9108", "309.036, 392.321, 38.7114, 0.861", "308.377, 391.388, 38.7428, 0.8086", "307.667, 390.49, 38.785, 0.747", "306.987, 389.571, 38.829, 0.6896", "306.45, 388.562, 38.8959, 0.5358", "306.033, 387.5, 39.0779, 0.4808", "305.575, 386.46, 39.3954, 0.634", "305.021, 385.471, 39.7566, 0.594", "304.415, 384.511, 40.1058, 0.4922", "303.795, 383.559, 40.4289, 0.4366", "303.134, 382.633, 40.7025, 0.6042", "302.453, 381.717, 40.9091, 0.5146", "301.799, 380.78, 41.0682, 0.4616", "301.141, 379.847, 41.2149, 0.5022", "300.438, 378.948, 41.3848, 0.588", "299.682, 378.094, 41.6018, 0.6962", "298.883, 377.282, 41.8606, 0.6862", "298.075, 376.48, 42.1417, 0.7758", "297.305, 375.643, 42.4211, 0.6448", "296.622, 374.732, 42.6653, 0.7012", "296.072, 373.734, 42.8568, 0.725", "295.659, 372.671, 43.0044, 0.7036", "295.332, 371.576, 43.1183, 0.7538", "295.0, 370.481, 43.2082, 0.6384", "294.592, 369.414, 43.2886, 0.5212", "294.098, 368.383, 43.377, 0.5206", "293.546, 367.382, 43.493, 0.6124", "292.988, 366.385, 43.6517, 0.5602", "292.46, 365.374, 43.8441, 0.6282", "291.911, 364.374, 44.0367, 0.6404", "291.243, 363.451, 44.2072, 0.53", "290.45, 362.63, 44.3526, 0.5122", "289.664, 361.803, 44.4839, 0.4882", "289.016, 360.865, 44.6233, 0.6278", "288.493, 359.85, 44.7989, 0.6808", "288.002, 358.82, 45.0176, 0.6324", "287.51, 357.792, 45.2536, 0.5704", "287.059, 356.746, 45.4896, 0.5476", "286.678, 355.673, 45.7349, 0.5166", "286.388, 354.573, 45.9914, 0.6326", "286.174, 353.453, 46.2333, 0.6914", "285.943, 352.336, 46.4386, 0.6454", "285.576, 351.259, 46.6152, 0.6256", "285.007, 350.273, 46.7978, 0.5006", "284.316, 349.365, 47.0036, 0.4674", "283.64, 348.446, 47.2086, 0.5858", "283.01, 347.495, 47.3836, 0.6194", "282.388, 346.536, 47.5219, 0.6676", "281.724, 345.607, 47.6274, 0.598", "280.99, 344.729, 47.7078, 0.554", "280.239, 343.868, 47.7753, 0.5162", "279.574, 342.943, 47.8506, 0.4624", "279.082, 341.914, 47.9615, 0.5134", "278.753, 340.822, 48.1152, 0.562", "278.471, 339.714, 48.2793, 0.647", "278.12, 338.629, 48.4165, 0.6004", "277.672, 337.577, 48.5086, 0.5896", "277.189, 336.541, 48.5416, 0.4318", "276.724, 335.495, 48.5237, 0.3496", "276.241, 334.459, 48.5153, 0.3204", "275.725, 333.438, 48.5724, 0.3552", "275.204, 332.421, 48.6898, 0.4456", "274.598, 331.46, 48.8449, 0.4878", "273.795, 330.657, 49.0417, 0.4882", "272.885, 329.969, 49.2691, 0.4096", "272.031, 329.218, 49.4824, 0.4186", "271.309, 328.339, 49.6496, 0.3716", "270.76, 327.342, 49.7703, 0.3644", "270.37, 326.269, 49.8548, 0.4206", "270.045, 325.172, 49.9134, 0.4158", "269.681, 324.088, 49.9593, 0.4796", "269.251, 323.029, 50.0142, 0.4728", "268.737, 322.01, 50.0928, 0.6102", "268.098, 321.064, 50.1794, 0.5942", "267.405, 320.153, 50.2471, 0.7352", "266.751, 319.215, 50.2684, 0.8542", "266.147, 318.245, 50.2435, 0.851", "265.612, 317.235, 50.2085, 0.7878", "265.184, 316.176, 50.1956, 0.7206", "264.822, 315.091, 50.2242, 0.5804", "264.393, 314.034, 50.3163, 0.6262", "263.861, 313.024, 50.4857, 0.5992", "263.285, 312.04, 50.7088, 0.6354", "262.688, 311.069, 50.9449, 0.5128", "262.1, 310.091, 51.1384, 0.5198", "261.53, 309.1, 51.2352, 0.5392", "260.96, 308.108, 51.2389, 0.5432", "260.419, 307.101, 51.1969, 0.7066", "259.903, 306.079, 51.149, 0.7098", "259.335, 305.089, 51.1165, 0.569", "258.665, 304.162, 51.1118, 0.5622", "257.938, 303.28, 51.1398, 0.4602", "257.212, 302.397, 51.2014, 0.4762", "256.488, 301.513, 51.3061, 0.4254", "255.762, 300.631, 51.45, 0.4922", "255.097, 299.703, 51.5906, 0.5218", "254.55, 298.702, 51.6888, 0.5754", "254.085, 297.657, 51.728, 0.4538", "253.621, 296.612, 51.6922, 0.3852", "253.084, 295.605, 51.5819, 0.412", "252.439, 294.664, 51.441, 0.401", "251.783, 293.729, 51.322, 0.4448", "251.205, 292.743, 51.2546, 0.4448", "250.62, 291.762, 51.2562, 0.3814", "249.956, 290.831, 51.315, 0.3422", "249.273, 289.914, 51.3789, 0.3472", "248.582, 289.003, 51.4259, 0.4368", "247.885, 288.096, 51.4898, 0.441", "247.21, 287.173, 51.5886, 0.549", "246.547, 286.242, 51.6939, 0.4914", "245.873, 285.318, 51.7748, 0.4924", "245.193, 284.398, 51.8213, 0.6566", "244.529, 283.467, 51.8199, 0.6312", "243.927, 282.496, 51.758, 0.5844", "243.386, 281.489, 51.6656, 0.4956", "242.823, 280.494, 51.6261, 0.5698", "242.217, 279.525, 51.6984, 0.692", "241.576, 278.58, 51.8532, 0.765", "240.874, 277.681, 52.0394, 0.73", "240.121, 276.823, 52.2348, 0.8048", "239.389, 275.949, 52.4353, 0.7238", "238.744, 275.012, 52.6616, 0.7242", "238.177, 274.025, 52.9379, 0.6802", "237.6, 273.047, 53.2672, 0.5876", "237.014, 272.074, 53.613, 0.4694", "236.516, 271.055, 53.9221, 0.4484", "236.093, 269.997, 54.1674, 0.5916", "235.669, 268.937, 54.3491, 0.66", "235.179, 267.906, 54.4869, 0.5986", "234.621, 266.91, 54.6171, 0.4834", "234.031, 265.931, 54.761, 0.5052", "233.416, 264.968, 54.892, 0.5472", "232.795, 264.008, 54.9646, 0.6172", "232.2, 263.032, 54.9539, 0.557", "231.605, 262.055, 54.9004, 0.4524", "231.017, 261.073, 54.8652, 0.452", "230.412, 260.102, 54.8366, 0.4276", "229.773, 259.154, 54.7666, 0.4964", "229.136, 258.205, 54.6549, 0.5296", "228.519, 257.244, 54.539, 0.591", "227.87, 256.303, 54.437, 0.476", "227.161, 255.407, 54.348, 0.4584", "226.443, 254.516, 54.2693, 0.3918", "225.762, 253.598, 54.2158, 0.4338", "225.019, 252.731, 54.2156, 0.3934", "224.142, 252.005, 54.2612, 0.4366", "223.216, 251.332, 54.3273, 0.3998", "222.322, 250.621, 54.4026, 0.4426", "221.436, 249.898, 54.4866, 0.4406", "220.533, 249.195, 54.586, 0.3738", "219.632, 248.493, 54.7156, 0.3266", "218.767, 247.748, 54.8744, 0.326", "217.978, 246.926, 55.0278, 0.3592", "217.255, 246.04, 55.1253, 0.4826", "216.617, 245.092, 55.1373, 0.4124", "216.084, 244.082, 55.1589, 0.3612", "215.705, 243.007, 55.3252, 0.3402", "215.553, 241.884, 55.6125, 0.3994", "215.484, 240.748, 55.8936, 0.4902", "215.316, 239.621, 56.1156, 0.7512", "214.94, 238.547, 56.2985, 0.7866", "214.385, 237.552, 56.4584, 0.9684", "213.732, 236.615, 56.5863, 0.7418", "213.072, 235.681, 56.6955, 0.5412", "212.552, 234.666, 56.835, 0.476", "212.206, 233.581, 57.0254, 0.4676", "211.852, 232.495, 57.1696, 0.5934", "211.407, 231.443, 57.2127, 0.5976", "210.907, 230.414, 57.2127, 0.5728", "210.406, 229.385, 57.2494, 0.685", "209.969, 228.33, 57.3614, 0.8134", "209.597, 227.25, 57.5344, 0.7498", "209.35, 226.138, 57.757, 0.7238", "209.329, 225.002, 58.0219, 0.6866", "209.318, 223.863, 58.2761, 0.5646", "208.978, 222.778, 58.4704, 0.5958", "208.411, 221.788, 58.5864, 0.5484", "207.86, 220.786, 58.6228, 0.5148", "207.415, 219.733, 58.6379, 0.4164", "206.934, 218.695, 58.697, 0.409", "206.237, 217.792, 58.795, 0.4606", "205.408, 217.008, 58.9165, 0.6978", "204.522, 216.287, 59.0873, 0.6796", "203.71, 215.486, 59.2766, 0.8098", "203.044, 214.558, 59.4084, 0.9414", "202.458, 213.577, 59.5151, 1.0322", "201.768, 212.667, 59.6574, 1.0284", "200.984, 211.838, 59.8074, 0.942", "200.199, 211.007, 59.9407, 0.9384", "199.487, 210.113, 60.065, 0.858", "198.778, 209.217, 60.1938, 0.839", "198.055, 208.333, 60.3495, 0.6288", "197.382, 207.412, 60.5578, 0.6302", "196.754, 206.46, 60.7768, 0.566", "196.127, 205.506, 60.9689, 0.542", "195.511, 204.545, 61.1324, 0.4942", "195.082, 203.488, 61.2842, 0.4208", "194.911, 202.361, 61.4821, 0.4404", "194.681, 201.243, 61.6804, 0.4068", "194.152, 200.232, 61.7464, 0.455" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "318.413, 406.349, 37.1316, 0.9018", "318.118, 406.564, 40.3012, 0.2288", "317.852, 406.763, 42.9646, 0.3344", "317.383, 407.305, 45.1234, 0.3872", "316.923, 408.032, 46.9622, 0.4758", "316.293, 408.695, 48.606, 0.6846", "315.492, 409.251, 50.0562, 0.8546", "314.67, 409.846, 51.3388, 0.8526", "313.91, 410.564, 52.4541, 0.7858", "313.048, 411.158, 53.445, 0.7406", "312.283, 411.841, 54.3962, 0.5034", "311.517, 412.534, 55.365, 0.3508", "310.739, 413.247, 56.3002, 0.2746", "310.295, 414.12, 57.6478, 0.2746", "310.023, 415.175, 58.4965, 0.2746", "309.656, 416.207, 59.3015, 0.2746", "309.407, 417.26, 60.2008, 0.2746", "308.953, 418.236, 61.1391, 0.2746", "308.536, 419.263, 61.8089, 0.2746", "308.311, 420.355, 62.4422, 0.2746", "308.116, 421.391, 63.4446, 0.2744", "308.051, 422.348, 64.9631, 0.2744", "307.92, 423.359, 66.2262, 0.2742", "307.911, 424.419, 67.2652, 0.274", "308.227, 425.451, 68.1078, 0.2736", "308.84, 426.363, 68.8128, 0.2728", "309.447, 427.299, 69.4156, 0.2712", "309.756, 428.35, 70.0904, 0.2684", "309.928, 429.442, 70.8086, 0.2626", "310.37, 430.423, 71.7156, 0.2542", "310.797, 431.446, 72.3965, 0.2288", "310.939, 432.546, 73.08, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "194.152, 200.232, 61.7464, 0.455", "193.139, 199.225, 62.2644, 0.4134", "192.48, 198.298, 62.5635, 0.4256", "191.921, 197.307, 62.8491, 0.3844", "191.393, 196.299, 63.133, 0.3894", "190.93, 195.258, 63.3942, 0.4614", "190.534, 194.188, 63.6107, 0.5182", "190.164, 193.109, 63.8366, 0.539", "189.794, 192.035, 64.1508, 0.5304", "189.324, 191.003, 64.5092, 0.5134", "188.775, 190.007, 64.7942, 0.4884", "188.227, 189.006, 65.0023, 0.41", "187.641, 188.026, 65.1672, 0.4192", "187.002, 187.079, 65.2915, 0.3726", "186.391, 186.114, 65.4371, 0.3678", "185.845, 185.114, 65.6835, 0.4204", "185.309, 184.112, 65.9968, 0.4466", "184.711, 183.146, 66.2964, 0.3846", "183.978, 182.276, 66.551, 0.349", "183.177, 181.466, 66.7615, 0.355", "182.517, 180.545, 66.9466, 0.4746", "182.136, 179.471, 67.1359, 0.3976", "181.852, 178.367, 67.3288, 0.3334", "181.419, 177.317, 67.5475, 0.2892", "180.834, 176.338, 67.7886, 0.3028", "180.349, 175.311, 68.0305, 0.3218", "180.036, 174.217, 68.3026, 0.3874", "179.734, 173.132, 68.661, 0.3608", "179.157, 172.164, 69.0147, 0.3448", "178.396, 171.316, 69.258, 0.383", "177.676, 170.438, 69.4081, 0.3518", "177.129, 169.437, 69.5215, 0.333", "176.62, 168.415, 69.624, 0.3378", "176.092, 167.403, 69.7024, 0.3812", "175.595, 166.374, 69.6724, 0.5242", "175.127, 165.333, 69.6567, 0.4852", "174.675, 164.284, 69.7206, 0.517", "174.199, 163.245, 69.8454, 0.5284", "173.72, 162.209, 69.9905, 0.5514", "173.145, 161.224, 70.1484, 0.5842", "172.481, 160.297, 70.3388, 0.464", "171.818, 159.368, 70.5438, 0.435", "171.274, 158.371, 70.7608, 0.3538", "170.83, 157.323, 71.0321, 0.3364", "170.426, 156.255, 71.2135, 0.344", "169.722, 155.385, 71.2491, 0.3936", "168.929, 154.568, 71.5042, 0.5422", "168.222, 153.676, 71.769, 0.5432", "167.589, 152.726, 71.9569, 0.5048", "166.977, 151.76, 72.0507, 0.3994", "166.411, 150.767, 72.1532, 0.37", "165.783, 149.811, 72.2352, 0.4248", "165.049, 148.934, 72.2439, 0.4546", "164.324, 148.05, 72.2814, 0.4006", "163.451, 147.309, 72.3601, 0.3726", "162.477, 146.716, 72.55, 0.4292", "161.532, 146.088, 72.8809, 0.464", "160.711, 145.31, 73.2553, 0.4118", "160.147, 144.332, 73.6655, 0.424", "159.814, 143.249, 74.0628, 0.3754", "159.404, 142.188, 74.3431, 0.4026", "158.934, 141.148, 74.5304, 0.3408", "158.49, 140.095, 74.6816, 0.3126", "157.932, 139.102, 74.8194, 0.2992", "157.146, 138.278, 74.928, 0.3148", "156.211, 137.621, 75.0579, 0.3748", "155.357, 136.874, 75.2777, 0.3364", "154.704, 135.938, 75.4552, 0.3046", "154.156, 134.935, 75.5619, 0.283", "153.656, 133.909, 75.7014, 0.2904", "153.223, 132.854, 75.9206, 0.3036", "152.789, 131.801, 76.1886, 0.3306", "152.309, 130.773, 76.5388, 0.3676", "151.749, 129.789, 76.8916, 0.4992", "151.146, 128.838, 77.3752, 0.4378", "150.561, 127.885, 77.9587, 0.4336", "149.949, 126.945, 78.5056, 0.351", "149.341, 125.998, 79.0087, 0.3328", "148.744, 125.04, 79.4651, 0.33", "148.161, 124.068, 79.8252, 0.404", "147.526, 123.123, 80.0671, 0.3854", "146.952, 122.139, 80.2908, 0.421", "146.676, 121.051, 80.6058, 0.3758", "146.263, 120.01, 81.0253, 0.3724", "145.544, 119.159, 81.5562, 0.4352", "144.716, 118.394, 82.014, 0.445", "143.865, 117.644, 82.3799, 0.5224", "142.983, 116.936, 82.7977, 0.6082", "142.107, 116.234, 83.3294, 0.5882", "141.294, 115.454, 83.8261, 0.5062", "140.482, 114.656, 84.1095, 0.5722", "140.162, 113.562, 84.3111, 0.5514", "140.068, 112.423, 84.4007, 0.5214" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "194.152, 200.232, 61.7464, 0.455", "193.699, 199.507, 60.1322, 0.2288", "193.29, 198.484, 59.7265, 0.4254", "193.099, 197.359, 59.6907, 0.4556", "192.909, 196.232, 59.6966, 0.4028", "192.515, 195.162, 59.673, 0.3764", "191.988, 194.146, 59.6212, 0.4362", "191.468, 193.128, 59.5686, 0.4766", "190.943, 192.112, 59.537, 0.4366", "190.322, 191.152, 59.5594, 0.4634", "189.635, 190.237, 59.6434, 0.48", "189.045, 189.26, 59.7478, 0.4426", "188.568, 188.221, 59.8452, 0.4758", "188.126, 187.166, 59.9374, 0.4978", "187.669, 186.118, 60.0239, 0.5", "187.146, 185.102, 60.0732, 0.4626", "186.574, 184.111, 60.0765, 0.3676", "186.02, 183.111, 60.0639, 0.315", "185.541, 182.072, 60.0564, 0.3034", "185.147, 180.998, 60.0608, 0.323", "184.766, 179.919, 60.083, 0.3896", "184.345, 178.856, 60.1286, 0.3648", "183.885, 177.81, 60.2022, 0.352", "183.4, 176.774, 60.326, 0.3964", "182.932, 175.733, 60.5074, 0.3774", "182.442, 174.702, 60.697, 0.3766", "181.864, 173.717, 60.8572, 0.4366", "181.207, 172.783, 60.9781, 0.4776", "180.56, 171.84, 61.0688, 0.4382", "179.913, 170.898, 61.1442, 0.4676", "179.267, 169.954, 61.2116, 0.4816", "178.775, 168.923, 61.3147, 0.4754", "178.414, 167.84, 61.4639, 0.3908", "178.012, 166.77, 61.5644, 0.3604", "177.399, 165.806, 61.5919, 0.376", "176.708, 164.895, 61.644, 0.5148", "176.16, 163.893, 61.7616, 0.4662", "175.704, 162.846, 61.913, 0.4882", "175.229, 161.807, 62.0533, 0.443", "174.787, 160.753, 62.1832, 0.5482", "174.486, 159.651, 62.314, 0.512", "174.198, 158.546, 62.4694, 0.423", "173.877, 157.45, 62.6007, 0.3654", "173.25, 156.495, 62.6352, 0.4234", "172.643, 155.525, 62.6528, 0.416", "172.22, 154.462, 62.6998, 0.5034", "171.79, 153.402, 62.8037, 0.4038", "171.202, 152.425, 63.002, 0.3446" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "140.068, 112.423, 84.4007, 0.5214", "139.716, 111.515, 84.3069, 0.4238", "139.333, 110.438, 84.2047, 0.4472", "138.965, 109.355, 84.1834, 0.4132", "138.676, 108.25, 84.1551, 0.498", "138.443, 107.133, 84.1425, 0.3938", "138.065, 106.055, 84.2506, 0.3264", "137.638, 104.996, 84.3998, 0.2766", "137.234, 103.927, 84.4847, 0.2782", "136.951, 102.823, 84.53, 0.2814", "136.84, 101.686, 84.5611, 0.287", "136.803, 100.543, 84.5639, 0.2988", "136.799, 99.3992, 84.548, 0.3142", "136.891, 98.2607, 84.56, 0.3734", "137.089, 97.1348, 84.6384, 0.334", "137.32, 96.0156, 84.7672, 0.3", "137.604, 94.9117, 84.8719, 0.2748", "138.072, 93.8732, 84.8613, 0.2748", "138.589, 92.8561, 84.8324, 0.2752", "139.086, 91.8275, 84.8593, 0.2756", "139.388, 90.7513, 84.8954, 0.2766", "139.365, 89.6111, 84.9234, 0.2784", "139.259, 88.4722, 84.9299, 0.2816", "139.059, 87.3492, 84.9559, 0.2874", "138.614, 86.3076, 84.9993, 0.2994", "138.268, 85.2382, 85.0352, 0.3154", "138.148, 84.1013, 85.0483, 0.3758", "138.162, 82.9605, 85.0349, 0.3384", "138.251, 81.82, 85.0466, 0.3082", "138.288, 80.6784, 85.1382, 0.2896", "138.276, 79.5361, 85.2902, 0.3036", "138.244, 78.3957, 85.4904, 0.3232", "138.199, 77.2566, 85.7251, 0.3902", "138.228, 76.1192, 85.974, 0.366", "138.347, 74.9869, 86.2352, 0.3542", "138.504, 73.859, 86.5054, 0.4004", "138.82, 72.7724, 86.7964, 0.3858", "139.245, 71.7138, 86.973, 0.386", "139.632, 70.6382, 86.9767, 0.4848", "140.089, 69.5909, 86.975, 0.4174", "140.811, 68.7205, 86.9708, 0.365", "141.634, 67.9251, 86.9473, 0.3736", "142.068, 66.8999, 86.854, 0.3342", "142.364, 65.7952, 86.8465, 0.3006", "142.442, 64.6606, 87.0002, 0.2756", "142.141, 63.5722, 87.2872, 0.2766", "141.736, 62.5102, 87.6064, 0.2782", "141.17, 61.5278, 87.9547, 0.2814", "140.783, 60.4578, 88.2106, 0.287", "140.296, 59.4238, 88.2246, 0.2988", "139.843, 58.3745, 88.0849, 0.3142", "139.424, 57.3113, 87.9833, 0.3734", "139.188, 56.1936, 87.8721, 0.334", "138.71, 55.2666, 87.9749, 0.3", "138.107, 54.3446, 88.4419, 0.2748", "137.575, 53.3507, 88.9176, 0.2748", "137.104, 52.3327, 89.4522, 0.2752", "136.77, 51.2664, 90.0292, 0.2756", "136.486, 50.1842, 90.615, 0.2766", "136.207, 49.0978, 91.1672, 0.2782", "135.928, 48.0099, 91.6969, 0.2814", "135.699, 46.9042, 92.1416, 0.287", "135.464, 45.7934, 92.4806, 0.2988", "135.145, 44.7005, 92.7363, 0.3142", "134.88, 43.5915, 92.9373, 0.3734", "134.676, 42.4685, 93.1221, 0.3338", "134.43, 41.3558, 93.3573, 0.3", "134.151, 40.254, 93.6718, 0.2746", "133.794, 39.1789, 94.0495, 0.2746", "133.061, 38.3356, 94.4241, 0.2746", "132.182, 37.6191, 94.7786, 0.2746", "131.308, 36.898, 95.1504, 0.2746", "130.489, 36.1231, 95.6222, 0.2746", "129.701, 35.3289, 96.2024, 0.2746", "129.018, 34.4512, 96.847, 0.2746", "128.716, 33.3879, 97.4809, 0.2746", "128.515, 32.2896, 98.089, 0.2746", "128.322, 31.1866, 98.6616, 0.2746", "128.128, 30.0803, 99.1936, 0.2746", "127.934, 28.9715, 99.6915, 0.2746", "127.739, 27.8606, 100.163, 0.2746", "127.545, 26.7487, 100.616, 0.2746", "127.35, 25.6353, 101.049, 0.2746", "127.171, 24.5171, 101.444, 0.2746", "127.033, 23.3891, 101.766, 0.2746", "126.915, 22.2563, 102.029, 0.2746", "126.825, 21.12, 102.262, 0.2746", "126.74, 19.9827, 102.486, 0.2746", "126.981, 18.8786, 102.8, 0.2746", "127.451, 17.8545, 103.248, 0.2746", "127.954, 16.8512, 103.794, 0.2744", "128.456, 15.8523, 104.384, 0.2744", "129.118, 14.9437, 104.906, 0.2742", "129.997, 14.2271, 105.261, 0.274", "130.89, 13.516, 105.467, 0.2736", "131.783, 12.8027, 105.553, 0.2728", "132.678, 12.09, 105.557, 0.2712", "133.572, 11.377, 105.514, 0.2684", "134.466, 10.6636, 105.455, 0.2626", "135.36, 9.9511, 105.4, 0.2542", "136.372, 9.4148, 105.354, 0.2288", "137.51, 9.3092, 105.293, 0.2288" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "140.068, 112.423, 84.4007, 0.5214", "139.544, 112.101, 84.4707, 0.2288", "138.589, 111.473, 84.5076, 0.3232", "137.734, 110.719, 84.5908, 0.3904", "137.18, 109.731, 84.6518, 0.365", "136.646, 108.719, 84.6586, 0.36", "136.246, 107.65, 84.723, 0.3754", "135.628, 106.696, 84.8963, 0.5122", "135.263, 105.621, 85.0914, 0.4688", "134.881, 104.55, 85.388, 0.4574", "134.337, 103.573, 85.9362, 0.5598", "133.711, 102.685, 86.8073, 0.6066", "133.096, 101.823, 87.8497, 0.4726", "132.625, 100.835, 88.6346, 0.3806", "132.335, 99.7728, 89.3894, 0.3662", "132.105, 98.7353, 90.2815, 0.4966", "132.379, 97.7119, 91.243, 0.433", "132.616, 96.7117, 92.2152, 0.4248", "132.403, 95.646, 92.9681, 0.335", "131.93, 94.6727, 93.8361, 0.302", "131.426, 93.7718, 95.0284, 0.2782", "131.077, 92.8116, 96.2738, 0.2814", "130.829, 91.7846, 97.3431, 0.287", "130.68, 90.7213, 98.3027, 0.2988", "130.801, 89.6625, 99.2631, 0.3142", "131.291, 88.7302, 100.276, 0.3734", "131.734, 87.7741, 101.352, 0.3338", "131.623, 86.742, 102.419, 0.3", "131.307, 85.7986, 103.761, 0.2746", "131.521, 84.8339, 105.11, 0.2746", "132.05, 83.9432, 106.291, 0.2746", "132.487, 83.005, 107.482, 0.2746", "133.08, 82.1891, 108.668, 0.2746", "133.958, 81.5611, 109.577, 0.2746", "134.823, 80.8721, 110.229, 0.2746", "135.559, 80.0253, 110.731, 0.2746", "136.224, 79.1073, 111.105, 0.2746", "136.868, 78.1731, 111.461, 0.2746", "137.475, 77.2207, 111.897, 0.2746", "138.04, 76.2553, 112.477, 0.2746", "138.63, 75.324, 113.212, 0.2746", "139.216, 74.4006, 114.033, 0.2746", "139.629, 73.3803, 114.727, 0.2746", "139.844, 72.2786, 115.209, 0.2746", "139.907, 71.1458, 115.523, 0.2746", "140.011, 70.0158, 115.837, 0.2746", "140.208, 68.8953, 116.126, 0.2746", "140.349, 67.7646, 116.34, 0.2746", "140.445, 66.6302, 116.61, 0.2746", "140.527, 65.4962, 116.92, 0.2746", "140.603, 64.362, 117.234, 0.2746", "140.789, 63.243, 117.556, 0.2746", "141.1, 62.1551, 117.944, 0.2746", "141.5, 61.1164, 118.567, 0.2746", "141.807, 60.0762, 119.443, 0.2746", "142.284, 59.1043, 120.338, 0.2746", "142.817, 58.1516, 121.171, 0.2746", "143.319, 57.1732, 121.942, 0.2746", "143.804, 56.171, 122.583, 0.2746", "143.975, 55.0733, 123.179, 0.2746", "144.02, 53.9707, 123.91, 0.2746", "144.058, 52.8847, 124.784, 0.2746", "144.097, 51.8151, 125.772, 0.2746", "144.135, 50.7591, 126.845, 0.2746", "144.171, 49.7126, 127.973, 0.2746", "143.868, 48.721, 129.149, 0.2746", "143.451, 47.7717, 130.332, 0.2746", "143.04, 46.8221, 131.51, 0.2746", "143.085, 45.7744, 132.624, 0.2744", "143.421, 44.7657, 133.657, 0.2744", "143.764, 43.7534, 134.653, 0.2742", "144.109, 42.7381, 135.632, 0.274", "144.452, 41.7228, 136.611, 0.2736", "144.795, 40.71, 137.604, 0.2728", "145.158, 39.7291, 138.739, 0.2712", "145.548, 38.8119, 140.111, 0.2684", "145.933, 37.9116, 141.559, 0.2626", "146.319, 37.0114, 143.004, 0.2542", "146.686, 36.1561, 144.585, 0.2288", "146.978, 35.4762, 146.72, 0.2288" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "171.202, 152.425, 63.002, 0.3446", "170.942, 152.213, 61.6806, 0.4576", "170.034, 151.603, 62.4442, 0.5036", "169.191, 150.834, 62.6424, 0.469", "168.368, 150.052, 62.876, 0.379", "167.795, 149.077, 63.126, 0.3378", "167.544, 147.964, 63.2744, 0.339", "167.339, 146.843, 63.2806, 0.4218", "166.952, 145.766, 63.3072, 0.413", "166.54, 144.7, 63.2887, 0.4978", "166.31, 143.59, 63.2254, 0.3932", "166.317, 142.447, 63.2621, 0.3254", "166.117, 141.346, 63.4172, 0.2746", "165.609, 140.323, 63.5152, 0.2746", "165.163, 139.277, 63.6588, 0.2748", "164.827, 138.189, 63.9324, 0.275", "164.499, 137.099, 64.2093, 0.2754", "164.066, 136.047, 64.4076, 0.2762", "163.547, 135.029, 64.5352, 0.2774", "162.974, 134.04, 64.5075, 0.2798", "162.243, 133.175, 64.2471, 0.2844", "161.473, 132.339, 63.9388, 0.293", "160.573, 131.649, 64.1469, 0.3082", "159.646, 130.989, 64.4515, 0.3392", "158.721, 130.328, 64.7562, 0.3836", "157.76, 129.731, 65.021, 0.5286", "156.744, 129.224, 65.17, 0.4942", "155.847, 128.517, 65.2728, 0.5286", "155.012, 127.736, 65.3229, 0.5734", "154.244, 126.895, 65.3234, 0.5214", "153.595, 125.953, 65.2638, 0.3922", "152.924, 125.028, 65.2117, 0.3136", "152.155, 124.184, 65.154, 0.3008", "151.295, 123.432, 65.13, 0.3178", "150.418, 122.697, 65.1356, 0.3804", "149.552, 121.951, 65.1913, 0.3464", "148.649, 121.251, 65.333, 0.3244", "147.798, 120.5, 65.4931, 0.3144", "147.073, 119.619, 65.6326, 0.374", "146.36, 118.727, 65.7829, 0.335", "145.55, 117.925, 65.9098, 0.3022", "144.732, 117.13, 65.9954, 0.2786", "143.959, 116.286, 66.0058, 0.2818", "143.234, 115.403, 65.9702, 0.2882", "142.294, 115.132, 66.01, 0.2996", "141.16, 115.132, 66.0215, 0.3218", "140.031, 114.966, 66.1746, 0.358", "138.989, 114.528, 66.5179, 0.4492", "138.012, 113.952, 66.8836, 0.5018", "137.063, 113.323, 67.1384, 0.4776", "136.075, 112.745, 67.2347, 0.5662", "135.13, 112.101, 67.1566, 0.5404", "134.161, 111.498, 66.9939, 0.4998", "133.128, 111.013, 66.9637, 0.3896", "132.025, 110.746, 67.1166, 0.3558", "130.884, 110.739, 67.3008, 0.3796", "129.751, 110.726, 67.5553, 0.4618", "128.702, 110.361, 67.9017, 0.6578", "127.825, 109.639, 68.2156, 0.8092", "126.981, 108.872, 68.4219, 0.7478", "126.097, 108.149, 68.5524, 0.692", "125.136, 107.533, 68.6123, 0.7642", "124.098, 107.072, 68.6241, 0.732", "122.983, 106.819, 68.5994, 0.5634", "121.853, 106.652, 68.4606, 0.5506", "120.739, 106.435, 68.1876, 0.444", "119.666, 106.089, 67.7286, 0.4212", "118.601, 105.72, 67.2596, 0.4434", "117.553, 105.279, 67.0222, 0.6312", "116.58, 104.682, 66.9914, 0.723", "115.57, 104.152, 66.9998, 0.7668", "114.469, 103.875, 67.0398, 0.5466", "113.33, 103.872, 67.1107, 0.4566", "112.24, 103.595, 67.2493, 0.3464", "111.474, 102.785, 67.4254, 0.3242", "110.521, 102.168, 67.4671, 0.3144", "109.405, 102.159, 67.1661, 0.374" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "171.202, 152.425, 63.002, 0.3446", "170.913, 151.863, 63.1694, 0.3114", "170.56, 150.793, 63.4981, 0.3374", "170.425, 149.667, 63.8112, 0.4174", "170.264, 148.542, 64.0293, 0.411", "169.917, 147.456, 64.1158, 0.4644", "169.5, 146.392, 64.1491, 0.4758", "169.081, 145.327, 64.204, 0.4646", "168.59, 144.295, 64.26, 0.3712", "167.973, 143.336, 64.3034, 0.3218", "167.258, 142.444, 64.3457, 0.3162", "166.538, 141.556, 64.4165, 0.3464", "165.77, 140.711, 64.4487, 0.434", "165.081, 139.805, 64.3513, 0.4428", "164.457, 138.847, 64.2236, 0.518", "163.73, 137.967, 64.2127, 0.6016", "163.002, 137.088, 64.2687, 0.5688", "162.458, 136.088, 64.3378, 0.5052", "162.195, 134.984, 64.4356, 0.4002", "161.859, 133.896, 64.577, 0.3718", "161.264, 132.929, 64.6397, 0.4278", "160.436, 132.149, 64.65, 0.4612", "159.783, 131.225, 64.6626, 0.4068", "159.421, 130.314, 64.7668, 0.4132", "159.62, 129.19, 64.883, 0.3616", "159.628, 128.05, 65.0266, 0.3462", "159.277, 126.975, 65.1524, 0.386", "158.663, 126.016, 65.2168, 0.357", "158.01, 125.076, 65.2114, 0.3438", "157.42, 124.098, 65.2011, 0.3512", "156.86, 123.1, 65.2484, 0.438", "156.233, 122.145, 65.3486, 0.474", "155.482, 121.285, 65.4724, 0.4614", "154.654, 120.499, 65.6043, 0.3654", "153.859, 119.678, 65.7418, 0.3112", "153.128, 118.801, 65.9022, 0.2952", "152.454, 117.881, 66.0985, 0.314", "151.951, 116.861, 66.3032, 0.3422", "151.654, 115.761, 66.4857, 0.4264", "151.432, 114.641, 66.6546, 0.4276", "151.214, 113.52, 66.7951, 0.4964", "151.0, 112.396, 66.8783, 0.5294", "150.848, 111.263, 66.92, 0.5906", "150.786, 110.121, 66.9469, 0.4756", "150.739, 108.978, 66.9864, 0.4566", "150.522, 107.857, 66.9379, 0.3946", "150.088, 106.805, 66.7397, 0.409", "149.676, 105.745, 66.43, 0.493", "149.673, 104.615, 66.0923, 0.6012", "150.042, 103.545, 65.7586, 0.574", "150.244, 102.425, 65.4979, 0.4862", "150.139, 101.288, 65.4307, 0.504", "149.857, 100.18, 65.4321, 0.5748", "149.472, 99.103, 65.3688, 0.5242" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "109.405, 102.159, 67.1661, 0.374", "108.284, 102.719, 66.0302, 0.3348", "107.185, 102.663, 65.2893, 0.3016", "106.171, 102.3, 64.3768, 0.2776", "105.119, 102.344, 63.3125, 0.2802", "104.05, 102.554, 62.4778, 0.285", "102.962, 102.606, 61.6283, 0.2938", "101.877, 102.671, 60.7905, 0.3112", "100.774, 102.822, 60.1647, 0.3384", "99.6445, 102.853, 59.7719, 0.4132", "98.5296, 102.697, 59.3947, 0.4334", "97.4228, 102.529, 58.8549, 0.3604", "96.3077, 102.633, 58.3425, 0.302", "95.1849, 102.683, 57.8337, 0.2782", "94.0623, 102.658, 57.3017, 0.2814", "92.9512, 102.794, 56.7554, 0.2872", "91.8245, 102.826, 56.3035, 0.299", "90.7103, 102.634, 55.9364, 0.3146", "89.5916, 102.641, 55.4151, 0.3744", "88.5147, 102.933, 54.8178, 0.3358", "87.4022, 102.865, 54.2049, 0.3036", "86.317, 102.604, 53.5954, 0.2814", "85.197, 102.512, 53.0768, 0.287", "84.0782, 102.606, 52.5459, 0.2988", "83.0059, 102.781, 51.6816, 0.3142", "81.9228, 102.83, 50.8329, 0.3734", "80.7958, 102.796, 50.3684, 0.334", "79.6631, 102.742, 49.9982, 0.3", "78.5306, 102.687, 49.6244, 0.2748", "77.4065, 102.625, 49.1403, 0.2748", "76.3243, 102.536, 48.2891, 0.2752", "75.2586, 102.561, 47.285, 0.2756", "74.1665, 102.826, 46.7914, 0.2766", "73.0577, 103.055, 46.4318, 0.2784", "71.9387, 103.122, 46.0228, 0.2818", "70.8062, 103.053, 45.668, 0.2878", "69.6745, 103.074, 45.2942, 0.3", "68.5626, 103.064, 44.6589, 0.3166", "67.4981, 102.867, 43.7674, 0.378", "66.4231, 102.625, 43.02, 0.3424", "65.329, 102.361, 42.5214, 0.3156", "64.2223, 102.113, 42.1784, 0.3034", "63.093, 102.013, 41.8258, 0.329", "61.9732, 101.969, 41.3778, 0.371", "60.9103, 101.617, 40.8142, 0.4754", "59.8783, 101.198, 40.1761, 0.5392", "58.8374, 100.823, 39.4783, 0.6024", "57.7585, 100.619, 38.7526, 0.5282", "56.6434, 100.629, 38.157, 0.4054", "55.5107, 100.683, 37.8266, 0.3334", "54.392, 100.557, 37.5035, 0.3616", "53.3441, 100.189, 36.8572, 0.3136", "52.6086, 99.343, 36.4045, 0.2542", "51.5939, 98.8416, 36.12, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "109.405, 102.159, 67.1661, 0.374", "109.231, 101.961, 68.1069, 0.4576", "108.633, 101.279, 69.8116, 0.3724", "108.061, 100.403, 70.8739, 0.3252", "107.83, 99.3579, 71.8301, 0.3162", "107.809, 98.2596, 72.452, 0.3772", "108.118, 97.1836, 72.9873, 0.341", "108.587, 96.1582, 73.4227, 0.3128", "109.145, 95.1651, 73.6887, 0.2994", "109.546, 94.1275, 74.0328, 0.3154", "109.535, 93.0325, 74.7564, 0.3756", "109.578, 91.9309, 75.4827, 0.338", "109.591, 90.8155, 76.1009, 0.3078", "109.528, 89.6894, 76.5618, 0.2888", "109.379, 88.5602, 76.8048, 0.3012", "109.308, 87.4192, 76.8275, 0.3236", "109.378, 86.2783, 76.7558, 0.3672", "109.389, 85.1346, 76.8107, 0.4388", "109.175, 84.0136, 77.0045, 0.6154", "108.878, 82.913, 77.2313, 0.7298", "108.566, 81.8167, 77.4673, 0.603", "108.129, 80.7651, 77.7272, 0.4114", "107.813, 79.7004, 78.2715, 0.3024", "107.833, 78.6063, 79.0821, 0.2792", "107.759, 77.4974, 79.6902, 0.283", "107.508, 76.4004, 80.1553, 0.2902", "107.302, 75.308, 80.7184, 0.3046", "107.096, 74.2247, 81.4229, 0.3248", "106.71, 73.1876, 82.11, 0.3942", "106.389, 72.1478, 82.945, 0.3672", "106.283, 71.0995, 84.0123, 0.387", "106.053, 70.0393, 84.896, 0.3136", "105.689, 68.9765, 85.4213, 0.2542", "105.706, 67.8392, 85.68, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "149.472, 99.103, 65.3688, 0.5242", "148.858, 98.4151, 67.0687, 0.2288", "148.082, 97.6015, 67.5259, 0.2746", "147.237, 96.8343, 67.7107, 0.2746", "146.414, 96.0469, 67.8364, 0.2746", "145.656, 95.1911, 67.9535, 0.2746", "144.845, 94.3872, 68.0319, 0.2746", "144.039, 93.5827, 68.0338, 0.2748", "143.421, 92.6306, 68.0005, 0.275", "142.902, 91.6124, 67.9916, 0.2754", "142.344, 90.6136, 67.9644, 0.276", "141.796, 89.61, 67.8728, 0.2772", "141.21, 88.6296, 67.797, 0.2794", "140.576, 87.6776, 67.7765, 0.2836", "139.934, 86.732, 67.66, 0.291", "139.392, 85.7333, 67.4106, 0.306", "138.996, 84.6658, 67.2076, 0.3278", "138.711, 83.5597, 67.1132, 0.3984", "138.343, 82.4802, 67.1118, 0.3822", "137.862, 81.4434, 67.1852, 0.3792", "137.451, 80.3793, 67.3058, 0.4724", "137.126, 79.2848, 67.4682, 0.3932", "136.795, 78.1957, 67.7457, 0.3256", "136.384, 77.1444, 68.1808, 0.2748", "135.954, 76.0989, 68.6073, 0.2752", "135.571, 75.0335, 69.0035, 0.2758", "135.262, 73.9479, 69.4557, 0.2768", "135.058, 72.8366, 69.8883, 0.2786", "134.943, 71.7082, 70.2439, 0.282", "134.804, 70.58, 70.5589, 0.2884", "134.42, 69.5123, 70.8366, 0.2996", "133.989, 68.4645, 71.2242, 0.3232", "133.715, 67.3734, 71.7315, 0.3544", "133.416, 66.2961, 72.3108, 0.4736", "133.3, 65.1868, 72.9254, 0.3958", "133.29, 64.0654, 73.465, 0.3302", "133.104, 62.9608, 73.9984, 0.2834", "132.635, 61.9604, 74.6861, 0.2908", "131.983, 61.0879, 75.5406, 0.3058", "131.324, 60.2115, 76.3232, 0.327", "130.717, 59.2789, 76.9658, 0.3984", "130.102, 58.3381, 77.492, 0.375", "129.444, 57.4207, 77.919, 0.4018", "128.775, 56.4994, 78.1712, 0.3396", "128.205, 55.512, 78.3171, 0.3104", "127.751, 54.4676, 78.5215, 0.2938", "127.416, 53.3864, 78.899, 0.3112", "127.161, 52.2889, 79.38, 0.3382", "126.851, 51.2173, 79.97, 0.413", "126.468, 50.179, 80.6789, 0.4328", "126.177, 49.1179, 81.4114, 0.3594", "126.002, 48.0257, 82.122, 0.3", "125.859, 46.9257, 82.808, 0.2746", "125.768, 45.8166, 83.4445, 0.2746", "125.752, 44.6961, 84.0006, 0.2746", "125.771, 43.5689, 84.4752, 0.2746", "125.8, 42.4374, 84.8803, 0.2746", "125.829, 41.3024, 85.2239, 0.2746", "125.857, 40.1648, 85.5084, 0.2746", "125.885, 39.0246, 85.7206, 0.2746", "125.929, 37.8829, 85.8441, 0.2746", "126.068, 36.7497, 85.8673, 0.2746", "126.309, 35.6326, 85.7951, 0.2746", "126.587, 34.5242, 85.6596, 0.2746", "126.868, 33.4173, 85.5036, 0.2746", "127.151, 32.3102, 85.3675, 0.2746", "127.484, 31.2172, 85.3269, 0.2746", "127.898, 30.1533, 85.4602, 0.2746", "128.352, 29.1129, 85.7861, 0.2746", "128.813, 28.0852, 86.2708, 0.2746", "129.272, 27.0664, 86.87, 0.2746", "129.729, 26.0539, 87.5448, 0.2746", "130.182, 25.0455, 88.2644, 0.2746", "130.649, 24.0477, 89.0126, 0.2746", "131.218, 23.1118, 89.7988, 0.2746", "131.876, 22.2405, 90.6293, 0.2744", "132.556, 21.3936, 91.5051, 0.2744", "133.236, 20.5542, 92.4272, 0.2742", "133.865, 19.6781, 93.354, 0.274", "134.404, 18.7393, 94.2463, 0.2736", "134.832, 17.8322, 95.5214, 0.2728", "135.161, 17.0033, 97.2734, 0.2712", "135.308, 16.2258, 99.022, 0.2684", "134.483, 15.6638, 100.366, 0.2626", "133.535, 15.3944, 101.787, 0.2542", "132.61, 15.1324, 103.269, 0.2288", "131.849, 14.9168, 105.293, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "149.472, 99.103, 65.3688, 0.5242", "149.349, 98.6574, 65.2565, 0.3972", "149.144, 97.5421, 64.9323, 0.3234", "148.768, 96.4942, 64.3205, 0.3174", "148.28, 95.4961, 63.6563, 0.3558", "147.798, 94.4959, 62.9924, 0.4168", "147.2, 93.569, 62.2854, 0.5788", "146.495, 92.7182, 61.5563, 0.6426", "145.841, 91.8253, 60.87, 0.5366", "145.259, 90.8752, 60.2263, 0.512", "144.639, 89.9529, 59.5857, 0.5478", "143.93, 89.0929, 58.9579, 0.4482", "143.271, 88.1942, 58.364, 0.3826", "142.717, 87.2313, 57.7007, 0.3702", "142.104, 86.3226, 56.9016, 0.5024", "141.496, 85.4137, 56.1019, 0.4512", "140.937, 84.4703, 55.3132, 0.4222", "140.194, 83.7, 54.5269, 0.5064", "139.2, 83.2229, 53.8143, 0.4508", "138.162, 82.8027, 53.251, 0.459", "137.16, 82.2967, 52.7355, 0.3928", "136.197, 81.7298, 52.1349, 0.4356", "135.247, 81.1494, 51.4912, 0.3978", "134.259, 80.6363, 50.8774, 0.4388", "133.214, 80.2297, 50.3294, 0.4334", "132.202, 79.7527, 49.8574, 0.3604", "131.363, 79.0163, 49.4245, 0.302", "130.66, 78.1337, 48.9759, 0.2782", "130.014, 77.2206, 48.4394, 0.2814", "129.588, 76.2024, 47.7929, 0.2872", "129.21, 75.1758, 47.0196, 0.299", "128.623, 74.2678, 46.1457, 0.3146", "127.852, 73.4883, 45.3902, 0.3744", "127.066, 72.6947, 44.8112, 0.3356", "126.455, 71.7556, 44.3884, 0.3032", "126.129, 70.6777, 44.1087, 0.2804", "125.87, 69.5681, 43.8914, 0.2854", "125.324, 68.5945, 43.6187, 0.2944", "124.451, 67.9021, 43.1824, 0.3124", "123.665, 67.0931, 42.8848, 0.339", "122.951, 66.2012, 42.9122, 0.4218" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "122.951, 66.2012, 42.9122, 0.4218", "122.988, 65.5113, 41.6858, 0.2288", "122.891, 64.6068, 39.9932, 0.2828", "122.749, 63.5617, 38.9698, 0.291", "122.601, 62.4992, 37.9985, 0.2994", "122.28, 61.4696, 37.0983, 0.3474", "121.645, 60.5659, 36.4406, 0.2796", "121.604, 59.4665, 35.6731, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "122.951, 66.2012, 42.9122, 0.4218", "122.49, 65.8793, 42.943, 0.413", "121.628, 65.1286, 42.985, 0.4978", "120.669, 64.5071, 42.9778, 0.3932", "119.658, 63.9757, 42.8425, 0.3254", "118.564, 63.6582, 42.5748, 0.2746" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "118.564, 63.6582, 42.5748, 0.2746", "118.738, 63.3435, 42.3926, 0.2746", "118.775, 62.2154, 42.161, 0.2746", "118.609, 61.0874, 41.9611, 0.2746", "118.42, 59.9617, 41.7729, 0.2746", "118.031, 58.8888, 41.6321, 0.2746", "117.56, 57.8474, 41.5341, 0.2746", "117.127, 56.7887, 41.4616, 0.2746", "117.068, 55.6514, 41.4142, 0.2746", "117.12, 54.5089, 41.3851, 0.2746", "117.21, 53.3684, 41.3633, 0.2746", "117.318, 52.2297, 41.3367, 0.2746", "117.433, 51.0914, 41.3006, 0.2746", "117.154, 49.9874, 41.2513, 0.2746", "116.722, 48.9291, 41.1872, 0.2746", "116.429, 47.8249, 41.0802, 0.2746", "116.203, 46.7054, 40.9282, 0.2746", "115.987, 45.5845, 40.7439, 0.2746", "115.771, 44.4643, 40.5412, 0.2746", "115.553, 43.3442, 40.3334, 0.2746", "115.337, 42.2239, 40.133, 0.2746", "115.194, 41.091, 39.9703, 0.2746", "115.112, 39.9509, 39.8597, 0.2746", "115.043, 38.8093, 39.7947, 0.2746", "114.974, 37.6675, 39.7653, 0.2746", "115.162, 36.541, 39.7628, 0.2746", "115.589, 35.481, 39.7799, 0.2746", "115.344, 34.3771, 39.811, 0.2746", "115.01, 33.283, 39.8552, 0.2746", "114.448, 32.2891, 39.9137, 0.2746", "113.862, 31.3067, 39.9946, 0.2746", "113.548, 30.2106, 40.1296, 0.2746", "113.262, 29.1052, 40.3088, 0.2746", "112.978, 28.0005, 40.5188, 0.2748", "112.694, 26.8964, 40.7464, 0.2748", "112.409, 25.7923, 40.98, 0.275", "112.132, 24.6864, 41.2087, 0.2754", "111.982, 23.5551, 41.3913, 0.2762", "111.847, 22.4207, 41.54, 0.2776", "111.94, 21.283, 41.6735, 0.2804", "112.053, 20.146, 41.811, 0.2852", "112.006, 19.0057, 41.986, 0.2954", "111.703, 17.9076, 42.1971, 0.3078", "111.377, 16.8176, 42.4948, 0.3616", "111.044, 15.7405, 42.9643, 0.3136", "110.713, 14.6765, 43.5758, 0.2542", "110.413, 13.7095, 44.879, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "118.564, 63.6582, 42.5748, 0.2746", "117.731, 63.1846, 41.7292, 0.2288", "116.854, 62.517, 41.018, 0.4726", "116.018, 61.7546, 40.6521, 0.3936", "115.193, 60.9712, 40.3483, 0.3262", "114.299, 60.271, 40.0498, 0.276", "113.421, 59.5516, 39.7068, 0.2772", "112.83, 58.6036, 39.3002, 0.2794", "112.512, 57.5155, 39.0113, 0.2834", "112.088, 56.4574, 38.8528, 0.2908", "111.256, 55.7016, 38.7517, 0.3058", "110.344, 55.0126, 38.6632, 0.3268", "109.611, 54.143, 38.5372, 0.3982", "109.005, 53.1771, 38.3415, 0.3744", "108.428, 52.1953, 38.0699, 0.4008", "107.855, 51.214, 37.7493, 0.3376", "107.283, 50.2334, 37.4119, 0.3068", "106.607, 49.3184, 37.1244, 0.287", "105.884, 48.4368, 36.9046, 0.2988", "105.152, 47.5607, 36.738, 0.3142", "104.418, 46.6852, 36.6036, 0.3734", "103.618, 45.8689, 36.4809, 0.3338", "102.79, 45.0817, 36.342, 0.3", "101.926, 44.3384, 36.1189, 0.2746", "101.052, 43.611, 35.8089, 0.2746", "100.219, 42.8399, 35.4595, 0.2746", "99.5095, 41.9536, 35.1372, 0.2746", "98.8334, 41.0386, 34.8424, 0.2746", "98.16, 40.1213, 34.5565, 0.2746", "97.4667, 39.2195, 34.2577, 0.2744", "96.7573, 38.333, 33.9161, 0.2744", "95.8534, 37.6731, 33.4096, 0.2742", "94.8133, 37.3402, 32.6281, 0.274", "93.7776, 37.0726, 31.6364, 0.2736", "92.7383, 36.9781, 30.4945, 0.2728", "91.7345, 37.1766, 29.2432, 0.2712", "90.7428, 37.392, 27.9528, 0.2684", "89.834, 37.8081, 26.6312, 0.2626", "89.2612, 38.6361, 25.3021, 0.2542", "88.7069, 39.4375, 23.8798, 0.2288", "88.2551, 40.0905, 21.8641, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_168",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_169",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_48", "dend_47", "dend_44", "dend_37", "dend_26", "dend_14", "apic_0", "dend_3", "dend_0", "dend_46", "dend_45", "dend_43", "dend_38", "dend_36", "dend_27", "dend_25", "dend_18", "dend_15", "apic_24", "apic_1", "dend_11", "dend_4", "dend_2", "dend_1", "dend_40", "dend_39", "dend_31", "dend_28", "dend_24", "dend_19", "dend_17", "dend_16", "apic_21", "apic_2", "dend_13", "dend_12", "dend_8", "dend_5", "dend_42", "dend_41", "dend_33", "dend_32", "dend_30", "dend_29", "dend_23", "dend_20", "apic_23", "apic_22", "apic_20", "apic_3", "dend_10", "dend_9", "dend_7", "dend_6", "dend_35", "dend_34", "dend_22", "dend_21", "apic_5", "apic_4", "apic_17", "apic_6", "apic_19", "apic_18", "apic_14", "apic_7", "apic_16", "apic_15", "apic_13", "apic_8", "apic_12", "apic_9", "apic_11", "apic_10" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_24", "apic_1", "apic_21", "apic_2", "apic_23", "apic_22", "apic_20", "apic_3", "apic_5", "apic_4", "apic_17", "apic_6", "apic_19", "apic_18", "apic_14", "apic_7", "apic_16", "apic_15", "apic_13", "apic_8", "apic_12", "apic_9", "apic_11", "apic_10" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_48", "dend_47", "dend_44", "dend_37", "dend_26", "dend_14", "dend_3", "dend_0", "dend_46", "dend_45", "dend_43", "dend_38", "dend_36", "dend_27", "dend_25", "dend_18", "dend_15", "dend_11", "dend_4", "dend_2", "dend_1", "dend_40", "dend_39", "dend_31", "dend_28", "dend_24", "dend_19", "dend_17", "dend_16", "dend_13", "dend_12", "dend_8", "dend_5", "dend_42", "dend_41", "dend_33", "dend_32", "dend_30", "dend_29", "dend_23", "dend_20", "dend_10", "dend_9", "dend_7", "dend_6", "dend_35", "dend_34", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6361",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_2", "apic_2", "apic_2", "apic_2", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "3.6554198"
  }, {
    "group" : "apic",
    "value" : "3.6554198"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "14.688961"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "4.5721926E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.3710621",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.5399112E-8",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.9218783E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.2732821",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.041878268",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.010996838",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.4321132E-4",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "7.41173E-4",
    "erev" : "-85.37269"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "7.169476E-6",
    "erev" : "-85.37269"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "3.5415418E-5",
    "erev" : "-85.37269"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "1.0851733E-6",
    "erev" : "-85.37269"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "8.3174807E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0077261273",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478047737",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478047737

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_26
create dend_36
public dend_36
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_14
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: apic_24, id: apic_24, parent: apic_0
create apic_24
public apic_24
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: apic_21, id: apic_21, parent: apic_1
create apic_21
public apic_21
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: apic_23, id: apic_23, parent: apic_21
create apic_23
public apic_23
// Section: apic_22, id: apic_22, parent: apic_21
create apic_22
public apic_22
// Section: apic_20, id: apic_20, parent: apic_2
create apic_20
public apic_20
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_17, id: apic_17, parent: apic_5
create apic_17
public apic_17
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_14, id: apic_14, parent: apic_6
create apic_14
public apic_14
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_13, id: apic_13, parent: apic_7
create apic_13
public apic_13
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_12, id: apic_12, parent: apic_8
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_168, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_168
// Group: {name=ModelViewParmSubset_169, groups=[], sections=[dend_49, dend_48, dend_47, dend_44, dend_37, dend_26, dend_14, apic_0, dend_3, dend_0, dend_46, dend_45, dend_43, dend_38, dend_36, dend_27, dend_25, dend_18, dend_15, apic_24, apic_1, dend_11, dend_4, dend_2, dend_1, dend_40, dend_39, dend_31, dend_28, dend_24, dend_19, dend_17, dend_16, apic_21, apic_2, dend_13, dend_12, dend_8, dend_5, dend_42, dend_41, dend_33, dend_32, dend_30, dend_29, dend_23, dend_20, apic_23, apic_22, apic_20, apic_3, dend_10, dend_9, dend_7, dend_6, dend_35, dend_34, dend_22, dend_21, apic_5, apic_4, apic_17, apic_6, apic_19, apic_18, apic_14, apic_7, apic_16, apic_15, apic_13, apic_8, apic_12, apic_9, apic_11, apic_10]}
objref ModelViewParmSubset_169
// Group: {name=apic, groups=[], sections=[apic_0, apic_24, apic_1, apic_21, apic_2, apic_23, apic_22, apic_20, apic_3, apic_5, apic_4, apic_17, apic_6, apic_19, apic_18, apic_14, apic_7, apic_16, apic_15, apic_13, apic_8, apic_12, apic_9, apic_11, apic_10]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=dend, groups=[], sections=[dend_49, dend_48, dend_47, dend_44, dend_37, dend_26, dend_14, dend_3, dend_0, dend_46, dend_45, dend_43, dend_38, dend_36, dend_27, dend_25, dend_18, dend_15, dend_11, dend_4, dend_2, dend_1, dend_40, dend_39, dend_31, dend_28, dend_24, dend_19, dend_17, dend_16, dend_13, dend_12, dend_8, dend_5, dend_42, dend_41, dend_33, dend_32, dend_30, dend_29, dend_23, dend_20, dend_10, dend_9, dend_7, dend_6, dend_35, dend_34, dend_22, dend_21]}
objref dend
// Group: {name=OneSecGrp_SectionRef_6361, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_6361
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_2, apic_2, apic_2, apic_2, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478047737
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000436185989696)
    connect dend_49(0), soma_0(0.5000436185989696)
    connect dend_48(0), soma_0(0.5000436185989696)
    connect dend_47(0), soma_0(0.5000436185989696)
    connect dend_44(0), soma_0(0.5000436185989696)
    connect dend_37(0), soma_0(0.5000436185989696)
    connect dend_26(0), soma_0(0.5000436185989696)
    connect dend_14(0), soma_0(0.5000436185989696)
    connect apic_0(0), soma_0(0.5000436185989696)
    connect dend_3(0), soma_0(0.5000436185989696)
    connect dend_0(0), soma_0(0.5000436185989696)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_14(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect apic_24(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect apic_21(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect apic_23(0), apic_21(1.0)
    connect apic_22(0), apic_21(1.0)
    connect apic_20(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_17(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_14(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_13(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_12(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 338.062, 432.387, 33.9368, 11.4634 ) }
    soma_0 { pt3dadd( 343.794, 432.387, 33.9368, 11.4634 ) }
    soma_0 { pt3dadd( 349.525, 432.387, 33.9368, 11.4634 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 343.794, 432.387, 33.9368, 1.0 ) }
    axon_0 { pt3dadd( 349.635, 446.203, 33.9368, 1.0 ) }
    axon_0 { pt3dadd( 355.476, 460.019, 33.9368, 1.0 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 339.45, 436.334, 31.5493, 0.2288 ) }
    dend_49 { pt3dadd( 338.607, 437.086, 31.1088, 0.3278 ) }
    dend_49 { pt3dadd( 337.709, 437.783, 30.7994, 0.3984 ) }
    dend_49 { pt3dadd( 336.773, 438.395, 30.5116, 0.3824 ) }
    dend_49 { pt3dadd( 335.646, 438.519, 30.3206, 0.3792 ) }
    dend_49 { pt3dadd( 334.516, 438.38, 30.0479, 0.4726 ) }
    dend_49 { pt3dadd( 333.419, 438.389, 29.4843, 0.394 ) }
    dend_49 { pt3dadd( 332.517, 438.973, 28.7358, 0.3268 ) }
    dend_49 { pt3dadd( 331.79, 439.838, 28.3822, 0.277 ) }
    dend_49 { pt3dadd( 331.132, 440.771, 28.4631, 0.2792 ) }
    dend_49 { pt3dadd( 330.246, 441.473, 28.6916, 0.283 ) }
    dend_49 { pt3dadd( 329.144, 441.752, 28.9047, 0.2902 ) }
    dend_49 { pt3dadd( 328.018, 441.855, 29.034, 0.3046 ) }
    dend_49 { pt3dadd( 327.125, 442.495, 29.0279, 0.325 ) }
    dend_49 { pt3dadd( 326.829, 443.58, 28.9243, 0.3934 ) }
    dend_49 { pt3dadd( 326.826, 444.717, 28.7269, 0.372 ) }
    dend_49 { pt3dadd( 326.549, 445.8, 28.3867, 0.3648 ) }
    dend_49 { pt3dadd( 325.915, 446.723, 27.8811, 0.4226 ) }
    dend_49 { pt3dadd( 325.182, 447.565, 27.2825, 0.4144 ) }
    dend_49 { pt3dadd( 324.526, 448.463, 26.6465, 0.5004 ) }
    dend_49 { pt3dadd( 323.957, 449.41, 25.9242, 0.3982 ) }
    dend_49 { pt3dadd( 323.397, 450.325, 24.969, 0.3348 ) }
    dend_49 { pt3dadd( 322.872, 451.201, 23.7077, 0.292 ) }
    dend_49 { pt3dadd( 322.303, 452.048, 22.4572, 0.3066 ) }
    dend_49 { pt3dadd( 321.566, 452.803, 21.4039, 0.336 ) }
    dend_49 { pt3dadd( 320.736, 453.493, 20.4831, 0.3778 ) }
    dend_49 { pt3dadd( 319.838, 454.108, 19.6326, 0.518 ) }
    dend_49 { pt3dadd( 318.829, 454.533, 18.8881, 0.474 ) }
    dend_49 { pt3dadd( 317.738, 454.756, 18.291, 0.4954 ) }
    dend_49 { pt3dadd( 316.655, 455.041, 17.7703, 0.4918 ) }
    dend_49 { pt3dadd( 315.807, 455.724, 17.2667, 0.4656 ) }
    dend_49 { pt3dadd( 315.41, 456.748, 16.7747, 0.5132 ) }
    dend_49 { pt3dadd( 315.269, 457.86, 16.2466, 0.5914 ) }
    dend_49 { pt3dadd( 315.206, 458.976, 15.6609, 0.5564 ) }
    dend_49 { pt3dadd( 314.943, 460.056, 15.0603, 0.4514 ) }
    dend_49 { pt3dadd( 314.241, 460.897, 14.4871, 0.4496 ) }
    dend_49 { pt3dadd( 313.216, 461.307, 13.9725, 0.425 ) }
    dend_49 { pt3dadd( 312.096, 461.336, 13.509, 0.4838 ) }
    dend_49 { pt3dadd( 310.976, 461.191, 13.0957, 0.5426 ) }
    dend_49 { pt3dadd( 309.859, 460.983, 12.737, 0.4388 ) }
    dend_49 { pt3dadd( 308.785, 460.616, 12.4512, 0.3636 ) }
    dend_49 { pt3dadd( 307.789, 460.064, 12.2646, 0.341 ) }
    dend_49 { pt3dadd( 306.837, 459.43, 12.1866, 0.4182 ) }
    dend_49 { pt3dadd( 305.902, 458.773, 12.2109, 0.4424 ) }
    dend_49 { pt3dadd( 305.018, 458.048, 12.2904, 0.377 ) }
    dend_49 { pt3dadd( 304.18, 457.269, 12.3549, 0.3338 ) }
    dend_49 { pt3dadd( 303.281, 456.562, 12.3469, 0.3318 ) }
    dend_49 { pt3dadd( 302.267, 456.043, 12.2532, 0.4072 ) }
    dend_49 { pt3dadd( 301.188, 455.667, 12.143, 0.391 ) }
    dend_49 { pt3dadd( 300.108, 455.288, 12.0853, 0.4326 ) }
    dend_49 { pt3dadd( 299.042, 454.874, 12.0664, 0.3908 ) }
    dend_49 { pt3dadd( 297.954, 454.523, 12.0852, 0.4322 ) }
    dend_49 { pt3dadd( 296.827, 454.334, 12.1722, 0.3902 ) }
    dend_49 { pt3dadd( 295.686, 454.271, 12.2936, 0.431 ) }
    dend_49 { pt3dadd( 294.544, 454.203, 12.3774, 0.388 ) }
    dend_49 { pt3dadd( 293.403, 454.139, 12.3719, 0.427 ) }
    dend_49 { pt3dadd( 292.26, 454.074, 12.288, 0.3808 ) }
    dend_49 { pt3dadd( 291.133, 453.884, 12.2235, 0.4126 ) }
    dend_49 { pt3dadd( 290.044, 453.539, 12.1492, 0.359 ) }
    dend_49 { pt3dadd( 288.937, 453.26, 12.0257, 0.3486 ) }
    dend_49 { pt3dadd( 287.84, 452.939, 11.881, 0.3544 ) }
    dend_49 { pt3dadd( 286.803, 452.455, 11.7623, 0.4736 ) }
    dend_49 { pt3dadd( 285.676, 452.277, 11.7664, 0.3954 ) }
    dend_49 { pt3dadd( 284.838, 451.503, 11.8275, 0.3304 ) }
    dend_49 { pt3dadd( 283.743, 451.171, 11.892, 0.2796 ) }
    dend_49 { pt3dadd( 282.677, 450.758, 11.9555, 0.305 ) }
    dend_49 { pt3dadd( 281.882, 449.935, 12.04, 0.2288 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 344.652, 436.962, 26.7966, 0.2288 ) }
    dend_48 { pt3dadd( 344.314, 437.898, 25.5387, 0.537 ) }
    dend_48 { pt3dadd( 343.737, 438.85, 24.9019, 0.5334 ) }
    dend_48 { pt3dadd( 343.197, 439.831, 24.3416, 0.4868 ) }
    dend_48 { pt3dadd( 342.855, 440.884, 23.8201, 0.3652 ) }
    dend_48 { pt3dadd( 343.109, 441.873, 23.2364, 0.3112 ) }
    dend_48 { pt3dadd( 344.007, 442.493, 22.5503, 0.295 ) }
    dend_48 { pt3dadd( 344.913, 443.091, 21.7642, 0.3136 ) }
    dend_48 { pt3dadd( 345.536, 443.975, 20.9889, 0.3412 ) }
    dend_48 { pt3dadd( 345.959, 445.003, 20.3549, 0.426 ) }
    dend_48 { pt3dadd( 346.285, 446.08, 19.8602, 0.4208 ) }
    dend_48 { pt3dadd( 346.539, 447.18, 19.4206, 0.5118 ) }
    dend_48 { pt3dadd( 346.793, 448.275, 18.912, 0.4204 ) }
    dend_48 { pt3dadd( 347.337, 449.224, 18.2592, 0.3708 ) }
    dend_48 { pt3dadd( 348.264, 449.801, 17.5917, 0.3842 ) }
    dend_48 { pt3dadd( 349.217, 450.393, 17.053, 0.3536 ) }
    dend_48 { pt3dadd( 349.939, 451.251, 16.6583, 0.3374 ) }
    dend_48 { pt3dadd( 350.507, 452.233, 16.344, 0.3398 ) }
    dend_48 { pt3dadd( 351.143, 453.174, 16.011, 0.4156 ) }
    dend_48 { pt3dadd( 351.989, 453.92, 15.6402, 0.4378 ) }
    dend_48 { pt3dadd( 352.892, 454.603, 15.251, 0.3686 ) }
    dend_48 { pt3dadd( 353.569, 455.502, 14.8489, 0.317 ) }
    dend_48 { pt3dadd( 353.889, 456.583, 14.4818, 0.3072 ) }
    dend_48 { pt3dadd( 354.045, 457.709, 14.1931, 0.33 ) }
    dend_48 { pt3dadd( 354.273, 458.828, 14.0169, 0.4024 ) }
    dend_48 { pt3dadd( 354.549, 459.936, 13.9505, 0.3898 ) }
    dend_48 { pt3dadd( 354.892, 461.027, 13.8816, 0.393 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( 355.406, 462.043, 13.661, 0.498 ) }
    dend_48 { pt3dadd( 355.952, 463.04, 13.3316, 0.4416 ) }
    dend_48 { pt3dadd( 356.32, 464.113, 12.9874, 0.4108 ) }
    dend_48 { pt3dadd( 356.793, 465.145, 12.6329, 0.4542 ) }
    dend_48 { pt3dadd( 357.502, 466.034, 12.3322, 0.505 ) }
    dend_48 { pt3dadd( 358.301, 466.848, 12.1365, 0.5134 ) }
    dend_48 { pt3dadd( 359.138, 467.627, 12.0471, 0.4884 ) }
    dend_48 { pt3dadd( 360.069, 468.291, 12.0346, 0.4096 ) }
    dend_48 { pt3dadd( 361.169, 468.603, 12.0961, 0.4208 ) }
    dend_48 { pt3dadd( 362.31, 468.634, 12.2478, 0.3644 ) }
    dend_48 { pt3dadd( 363.452, 468.582, 12.387, 0.4068 ) }
    dend_48 { pt3dadd( 364.592, 468.582, 12.6, 0.2288 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 12/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 341.077, 435.755, 43.7049, 0.2288 ) }
    dend_47 { pt3dadd( 340.48, 436.663, 44.4682, 0.2786 ) }
    dend_47 { pt3dadd( 340.096, 437.715, 44.8582, 0.282 ) }
    dend_47 { pt3dadd( 339.934, 438.834, 45.2704, 0.2884 ) }
    dend_47 { pt3dadd( 339.839, 439.96, 45.7204, 0.2998 ) }
    dend_47 { pt3dadd( 339.763, 441.076, 46.2882, 0.3234 ) }
    dend_47 { pt3dadd( 339.685, 442.184, 46.9613, 0.3548 ) }
    dend_47 { pt3dadd( 339.64, 443.29, 47.6549, 0.4742 ) }
    dend_47 { pt3dadd( 339.689, 444.388, 48.4263, 0.3968 ) }
    dend_47 { pt3dadd( 339.779, 445.47, 49.303, 0.3322 ) }
    dend_47 { pt3dadd( 339.894, 446.542, 50.237, 0.287 ) }
    dend_47 { pt3dadd( 339.875, 447.619, 51.1426, 0.2974 ) }
    dend_47 { pt3dadd( 339.543, 448.626, 52.0828, 0.318 ) }
    dend_47 { pt3dadd( 339.008, 449.54, 53.1269, 0.3506 ) }
    dend_47 { pt3dadd( 338.522, 450.491, 54.1229, 0.4368 ) }
    dend_47 { pt3dadd( 338.141, 451.457, 55.2818, 0.4718 ) }
    dend_47 { pt3dadd( 337.698, 452.382, 56.511, 0.4572 ) }
    dend_47 { pt3dadd( 337.066, 453.219, 57.6134, 0.3574 ) }
    dend_47 { pt3dadd( 336.566, 454.137, 58.7093, 0.2966 ) }
    dend_47 { pt3dadd( 336.013, 454.947, 60.114, 0.2684 ) }
    dend_47 { pt3dadd( 335.415, 455.55, 61.9444, 0.2626 ) }
    dend_47 { pt3dadd( 335.001, 456.45, 63.327, 0.2542 ) }
    dend_47 { pt3dadd( 334.706, 457.423, 64.5243, 0.2288 ) }
    dend_47 { pt3dadd( 334.734, 458.286, 66.36, 0.2288 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 347.108, 429.236, 43.1516, 0.2288 ) }
    dend_44 { pt3dadd( 347.786, 428.602, 44.7149, 0.2748 ) }
    dend_44 { pt3dadd( 348.591, 427.895, 45.6971, 0.2748 ) }
    dend_44 { pt3dadd( 349.437, 427.21, 46.5497, 0.2752 ) }
    dend_44 { pt3dadd( 350.315, 426.538, 47.2716, 0.2756 ) }
    dend_44 { pt3dadd( 351.19, 425.851, 47.9186, 0.2766 ) }
    dend_44 { pt3dadd( 352.079, 425.184, 48.5587, 0.2782 ) }
    dend_44 { pt3dadd( 353.049, 424.669, 49.2775, 0.2814 ) }
    dend_44 { pt3dadd( 354.07, 424.368, 50.2645, 0.287 ) }
    dend_44 { pt3dadd( 354.973, 423.902, 51.4802, 0.2988 ) }
    dend_44 { pt3dadd( 355.849, 423.323, 52.5927, 0.3142 ) }
    dend_44 { pt3dadd( 356.881, 423.026, 53.5122, 0.3734 ) }
    dend_44 { pt3dadd( 357.966, 422.845, 54.2814, 0.3338 ) }
    dend_44 { pt3dadd( 359.036, 422.574, 55.0043, 0.3 ) }
    dend_44 { pt3dadd( 360.107, 422.263, 55.6234, 0.2746 ) }
    dend_44 { pt3dadd( 361.2, 422.034, 56.231, 0.2746 ) }
    dend_44 { pt3dadd( 362.147, 421.446, 56.7459, 0.2746 ) }
    dend_44 { pt3dadd( 363.187, 421.027, 57.26, 0.2746 ) }
    dend_44 { pt3dadd( 364.146, 420.466, 57.9104, 0.2746 ) }
    dend_44 { pt3dadd( 365.087, 419.849, 58.4133, 0.2746 ) }
    dend_44 { pt3dadd( 365.659, 418.872, 58.7602, 0.2746 ) }
    dend_44 { pt3dadd( 366.487, 418.094, 59.0811, 0.2746 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 58/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 339.286, 435.651, 28.7692, 0.2288 ) }
    dend_37 { pt3dadd( 338.46, 436.25, 27.5155, 0.276 ) }
    dend_37 { pt3dadd( 337.536, 436.19, 26.433, 0.2774 ) }
    dend_37 { pt3dadd( 336.46, 436.229, 25.6208, 0.2796 ) }
    dend_37 { pt3dadd( 335.358, 436.371, 24.9514, 0.284 ) }
    dend_37 { pt3dadd( 334.241, 436.433, 24.3754, 0.2922 ) }
    dend_37 { pt3dadd( 333.626, 437.276, 23.7718, 0.3068 ) }
    dend_37 { pt3dadd( 333.463, 438.364, 23.0902, 0.3366 ) }
    dend_37 { pt3dadd( 333.327, 439.461, 22.3713, 0.3788 ) }
    dend_37 { pt3dadd( 332.839, 440.464, 21.7851, 0.5198 ) }
    dend_37 { pt3dadd( 332.332, 441.464, 21.2202, 0.4768 ) }
    dend_37 { pt3dadd( 331.584, 442.275, 20.518, 0.5016 ) }
    dend_37 { pt3dadd( 331.137, 443.287, 19.8195, 0.4988 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 71/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 349.859, 430.621, 29.72, 0.4576 ) }
    dend_26 { pt3dadd( 350.909, 430.315, 28.9061, 0.4638 ) }
    dend_26 { pt3dadd( 352.029, 430.183, 28.4875, 0.5398 ) }
    dend_26 { pt3dadd( 353.03, 429.68, 28.0798, 0.4966 ) }
    dend_26 { pt3dadd( 353.904, 428.962, 27.6839, 0.3932 ) }
    dend_26 { pt3dadd( 354.85, 428.338, 27.336, 0.3158 ) }
    dend_26 { pt3dadd( 355.613, 427.501, 27.0248, 0.3034 ) }
    dend_26 { pt3dadd( 356.223, 426.545, 26.7008, 0.3302 ) }
    dend_26 { pt3dadd( 357.201, 426.016, 26.2864, 0.3668 ) }
    dend_26 { pt3dadd( 358.315, 425.847, 25.8369, 0.4978 ) }
    dend_26 { pt3dadd( 359.433, 425.663, 25.4539, 0.4352 ) }
    dend_26 { pt3dadd( 360.549, 425.436, 25.2137, 0.429 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 83/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 348.784, 430.505, 35.8893, 0.2288 ) }
    dend_14 { pt3dadd( 349.849, 430.104, 36.1906, 0.6012 ) }
    dend_14 { pt3dadd( 350.978, 430.025, 36.3404, 0.5104 ) }
    dend_14 { pt3dadd( 352.121, 429.988, 36.4263, 0.4472 ) }
    dend_14 { pt3dadd( 353.241, 429.772, 36.496, 0.5056 ) }
    dend_14 { pt3dadd( 354.353, 429.506, 36.5644, 0.4494 ) }
    dend_14 { pt3dadd( 355.37, 428.995, 36.6246, 0.4562 ) }
    dend_14 { pt3dadd( 356.359, 428.422, 36.6439, 0.3876 ) }
    dend_14 { pt3dadd( 357.471, 428.232, 36.8612, 0.426 ) }
    dend_14 { pt3dadd( 358.599, 428.351, 37.1843, 0.379 ) }
    dend_14 { pt3dadd( 359.711, 428.58, 37.541, 0.4094 ) }
    dend_14 { pt3dadd( 360.841, 428.523, 37.9442, 0.3532 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 95/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 337.875, 429.122, 34.9633, 1.624 ) }
    apic_0 { pt3dadd( 336.922, 428.498, 35.21, 0.514 ) }
    apic_0 { pt3dadd( 335.928, 427.943, 35.4875, 0.4664 ) }
    apic_0 { pt3dadd( 334.967, 427.329, 35.7025, 0.4814 ) }
    apic_0 { pt3dadd( 333.937, 426.833, 35.7958, 0.4652 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_0 { pt3dadd( 332.895, 426.364, 35.7045, 0.4202 ) }
    apic_0 { pt3dadd( 331.954, 425.714, 35.5902, 0.4088 ) }
    apic_0 { pt3dadd( 331.092, 424.964, 35.4897, 0.4958 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 3/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 339.672, 436.823, 33.8503, 0.2288 ) }
    dend_3 { pt3dadd( 338.878, 437.645, 33.7898, 0.4766 ) }
    dend_3 { pt3dadd( 338.083, 438.467, 33.7243, 0.4012 ) }
    dend_3 { pt3dadd( 337.216, 439.212, 33.6739, 0.3402 ) }
    dend_3 { pt3dadd( 336.415, 440.029, 33.5714, 0.303 ) }
    dend_3 { pt3dadd( 335.575, 440.797, 33.3354, 0.3222 ) }
    dend_3 { pt3dadd( 334.572, 441.33, 33.0232, 0.3882 ) }
    dend_3 { pt3dadd( 333.677, 442.036, 32.7765, 0.3624 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 11/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 343.487, 426.611, 27.926, 0.2288 ) }
    dend_0 { pt3dadd( 343.51, 425.469, 27.8958, 0.2788 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 13/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 355.476, 460.019, 33.9368, 1.0 ) }
    axon_1 { pt3dadd( 361.317, 473.835, 33.9368, 1.0 ) }
    axon_1 { pt3dadd( 367.159, 487.651, 33.9368, 1.0 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 366.487, 418.094, 59.0811, 0.2746 ) }
    dend_46 { pt3dadd( 367.622, 417.655, 60.0466, 0.2746 ) }
    dend_46 { pt3dadd( 368.617, 417.196, 60.8572, 0.2746 ) }
    dend_46 { pt3dadd( 369.59, 416.734, 61.8078, 0.2746 ) }
    dend_46 { pt3dadd( 370.548, 416.278, 62.8488, 0.2746 ) }
    dend_46 { pt3dadd( 371.504, 415.823, 63.917, 0.2746 ) }
    dend_46 { pt3dadd( 372.461, 415.368, 64.967, 0.2746 ) }
    dend_46 { pt3dadd( 373.426, 414.91, 65.9708, 0.2746 ) }
    dend_46 { pt3dadd( 374.4, 414.452, 66.913, 0.2746 ) }
    dend_46 { pt3dadd( 375.43, 414.083, 67.725, 0.2746 ) }
    dend_46 { pt3dadd( 376.529, 413.896, 68.3396, 0.2746 ) }
    dend_46 { pt3dadd( 377.653, 413.775, 68.7736, 0.2746 ) }
    dend_46 { pt3dadd( 378.772, 413.567, 69.0696, 0.2746 ) }
    dend_46 { pt3dadd( 379.863, 413.237, 69.2765, 0.2746 ) }
    dend_46 { pt3dadd( 380.949, 412.881, 69.445, 0.2746 ) }
    dend_46 { pt3dadd( 382.034, 412.526, 69.6223, 0.2746 ) }
    dend_46 { pt3dadd( 383.116, 412.168, 69.8418, 0.2746 ) }
    dend_46 { pt3dadd( 384.145, 411.69, 70.1546, 0.2746 ) }
    dend_46 { pt3dadd( 384.921, 410.886, 70.6952, 0.2746 ) }
    dend_46 { pt3dadd( 385.415, 409.907, 71.4854, 0.2746 ) }
    dend_46 { pt3dadd( 385.935, 408.948, 72.3145, 0.2746 ) }
    dend_46 { pt3dadd( 386.579, 408.045, 72.9722, 0.2746 ) }
    dend_46 { pt3dadd( 387.315, 407.189, 73.4087, 0.2746 ) }
    dend_46 { pt3dadd( 388.059, 406.326, 73.6579, 0.2746 ) }
    dend_46 { pt3dadd( 388.803, 405.459, 73.7506, 0.2746 ) }
    dend_46 { pt3dadd( 389.556, 404.597, 73.7366, 0.2746 ) }
    dend_46 { pt3dadd( 390.329, 403.754, 73.6736, 0.2746 ) }
    dend_46 { pt3dadd( 391.121, 402.929, 73.6047, 0.2746 ) }
    dend_46 { pt3dadd( 391.932, 402.124, 73.5412, 0.2746 ) }
    dend_46 { pt3dadd( 392.79, 401.368, 73.4754, 0.2746 ) }
    dend_46 { pt3dadd( 393.686, 400.657, 73.3995, 0.2746 ) }
    dend_46 { pt3dadd( 394.601, 399.973, 73.2995, 0.2746 ) }
    dend_46 { pt3dadd( 395.569, 399.368, 73.1506, 0.2746 ) }
    dend_46 { pt3dadd( 396.572, 398.825, 72.9431, 0.2746 ) }
    dend_46 { pt3dadd( 397.574, 398.283, 72.6939, 0.2746 ) }
    dend_46 { pt3dadd( 398.575, 397.74, 72.4189, 0.2746 ) }
    dend_46 { pt3dadd( 399.576, 397.199, 72.1319, 0.2746 ) }
    dend_46 { pt3dadd( 400.57, 396.645, 71.848, 0.2746 ) }
    dend_46 { pt3dadd( 401.528, 396.031, 71.587, 0.2746 ) }
    dend_46 { pt3dadd( 402.405, 395.308, 71.3681, 0.2746 ) }
    dend_46 { pt3dadd( 403.167, 394.463, 71.183, 0.2746 ) }
    dend_46 { pt3dadd( 403.777, 393.5, 71.0055, 0.2746 ) }
    dend_46 { pt3dadd( 404.285, 392.478, 70.8198, 0.2746 ) }
    dend_46 { pt3dadd( 404.792, 391.456, 70.6238, 0.2746 ) }
    dend_46 { pt3dadd( 405.299, 390.434, 70.415, 0.2746 ) }
    dend_46 { pt3dadd( 405.805, 389.412, 70.1935, 0.2746 ) }
    dend_46 { pt3dadd( 406.312, 388.391, 69.9636, 0.2746 ) }
    dend_46 { pt3dadd( 406.819, 387.37, 69.729, 0.2746 ) }
    dend_46 { pt3dadd( 407.326, 386.348, 69.4887, 0.2746 ) }
    dend_46 { pt3dadd( 407.833, 385.328, 69.2401, 0.2746 ) }
    dend_46 { pt3dadd( 408.342, 384.31, 68.9819, 0.2746 ) }
    dend_46 { pt3dadd( 408.859, 383.295, 68.7198, 0.2746 ) }
    dend_46 { pt3dadd( 409.415, 382.303, 68.4438, 0.2746 ) }
    dend_46 { pt3dadd( 410.079, 381.386, 68.1047, 0.2746 ) }
    dend_46 { pt3dadd( 410.87, 380.582, 67.6572, 0.2746 ) }
    dend_46 { pt3dadd( 411.704, 379.833, 67.1079, 0.2746 ) }
    dend_46 { pt3dadd( 412.531, 379.083, 66.4888, 0.2746 ) }
    dend_46 { pt3dadd( 413.322, 378.301, 65.8322, 0.2746 ) }
    dend_46 { pt3dadd( 414.125, 377.534, 65.2145, 0.2746 ) }
    dend_46 { pt3dadd( 415.051, 376.906, 64.6722, 0.2746 ) }
    dend_46 { pt3dadd( 416.014, 376.339, 64.097, 0.2746 ) }
    dend_46 { pt3dadd( 416.906, 375.684, 63.3951, 0.2746 ) }
    dend_46 { pt3dadd( 417.757, 374.992, 62.6004, 0.2746 ) }
    dend_46 { pt3dadd( 418.615, 374.309, 61.8092, 0.2746 ) }
    dend_46 { pt3dadd( 419.539, 373.729, 61.01, 0.2746 ) }
    dend_46 { pt3dadd( 420.427, 373.094, 60.2512, 0.2746 ) }
    dend_46 { pt3dadd( 421.296, 372.391, 59.6764, 0.2746 ) }
    dend_46 { pt3dadd( 422.234, 371.757, 59.3202, 0.2746 ) }
    dend_46 { pt3dadd( 423.21, 371.165, 59.122, 0.2748 ) }
    dend_46 { pt3dadd( 424.135, 370.5, 58.9383, 0.275 ) }
    dend_46 { pt3dadd( 425.043, 369.814, 58.6818, 0.2754 ) }
    dend_46 { pt3dadd( 426.013, 369.22, 58.4156, 0.276 ) }
    dend_46 { pt3dadd( 426.889, 368.516, 58.0174, 0.2772 ) }
    dend_46 { pt3dadd( 427.652, 367.751, 57.1208, 0.2792 ) }
    dend_46 { pt3dadd( 428.459, 367.035, 56.2019, 0.2834 ) }
    dend_46 { pt3dadd( 429.325, 366.345, 55.5439, 0.2906 ) }
    dend_46 { pt3dadd( 430.332, 365.883, 54.8968, 0.3056 ) }
    dend_46 { pt3dadd( 431.367, 365.532, 54.1758, 0.3266 ) }
    dend_46 { pt3dadd( 432.263, 364.907, 53.3492, 0.3976 ) }
    dend_46 { pt3dadd( 433.087, 364.219, 52.3958, 0.3734 ) }
    dend_46 { pt3dadd( 433.887, 363.525, 51.3302, 0.3988 ) }
    dend_46 { pt3dadd( 434.686, 362.848, 50.2034, 0.3338 ) }
    dend_46 { pt3dadd( 435.1, 361.988, 49.0022, 0.2996 ) }
    dend_46 { pt3dadd( 434.794, 361.012, 47.9606, 0.274 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_46 { pt3dadd( 434.099, 360.184, 47.1428, 0.2736 ) }
    dend_46 { pt3dadd( 433.656, 359.205, 46.5506, 0.2728 ) }
    dend_46 { pt3dadd( 433.966, 358.193, 46.1087, 0.2712 ) }
    dend_46 { pt3dadd( 434.59, 357.252, 45.6744, 0.2684 ) }
    dend_46 { pt3dadd( 435.241, 356.359, 44.963, 0.2626 ) }
    dend_46 { pt3dadd( 435.612, 355.291, 44.5416, 0.2542 ) }
    dend_46 { pt3dadd( 435.827, 354.172, 44.3156, 0.2288 ) }
    dend_46 { pt3dadd( 435.978, 353.038, 44.24, 0.2288 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 8/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 366.487, 418.094, 59.0811, 0.2746 ) }
    dend_45 { pt3dadd( 366.501, 417.953, 57.6391, 0.2288 ) }
    dend_45 { pt3dadd( 366.533, 417.481, 55.1345, 0.2756 ) }
    dend_45 { pt3dadd( 366.642, 416.545, 53.6939, 0.2766 ) }
    dend_45 { pt3dadd( 366.956, 415.495, 52.9026, 0.2782 ) }
    dend_45 { pt3dadd( 367.249, 414.414, 52.3538, 0.2814 ) }
    dend_45 { pt3dadd( 367.254, 413.281, 52.0251, 0.287 ) }
    dend_45 { pt3dadd( 366.982, 412.183, 52.1419, 0.2988 ) }
    dend_45 { pt3dadd( 366.318, 411.346, 52.8321, 0.314 ) }
    dend_45 { pt3dadd( 365.344, 411.064, 53.884, 0.3734 ) }
    dend_45 { pt3dadd( 364.342, 411.016, 55.2208, 0.3338 ) }
    dend_45 { pt3dadd( 363.64, 410.377, 56.506, 0.3 ) }
    dend_45 { pt3dadd( 363.452, 409.364, 57.5646, 0.2744 ) }
    dend_45 { pt3dadd( 363.674, 408.323, 58.506, 0.2744 ) }
    dend_45 { pt3dadd( 364.049, 407.312, 59.437, 0.2742 ) }
    dend_45 { pt3dadd( 364.295, 406.241, 60.1888, 0.274 ) }
    dend_45 { pt3dadd( 364.51, 405.141, 60.7334, 0.2736 ) }
    dend_45 { pt3dadd( 364.747, 404.049, 61.3435, 0.2728 ) }
    dend_45 { pt3dadd( 364.546, 402.966, 62.0004, 0.2712 ) }
    dend_45 { pt3dadd( 364.048, 401.952, 62.433, 0.2684 ) }
    dend_45 { pt3dadd( 363.513, 400.946, 62.6721, 0.2626 ) }
    dend_45 { pt3dadd( 362.883, 399.993, 62.7869, 0.2542 ) }
    dend_45 { pt3dadd( 362.279, 399.024, 62.9317, 0.2288 ) }
    dend_45 { pt3dadd( 362.19, 397.883, 63.0, 0.2288 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 32/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 331.137, 443.287, 19.8195, 0.4988 ) }
    dend_43 { pt3dadd( 331.378, 443.175, 18.51, 0.2288 ) }
    dend_43 { pt3dadd( 331.463, 442.68, 16.3585, 0.2712 ) }
    dend_43 { pt3dadd( 330.441, 442.23, 15.7994, 0.2684 ) }
    dend_43 { pt3dadd( 329.592, 441.498, 15.8237, 0.2626 ) }
    dend_43 { pt3dadd( 329.258, 440.431, 16.0678, 0.2542 ) }
    dend_43 { pt3dadd( 328.859, 439.362, 16.0865, 0.2288 ) }
    dend_43 { pt3dadd( 328.934, 438.267, 15.3908, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 40/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 331.137, 443.287, 19.8195, 0.4988 ) }
    dend_38 { pt3dadd( 331.137, 444.121, 19.2588, 0.5018 ) }
    dend_38 { pt3dadd( 331.475, 445.176, 18.5816, 0.466 ) }
    // Section: dend_36, id: dend_36, parent: dend_26 (entry count 43/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 360.549, 425.436, 25.2137, 0.429 ) }
    dend_36 { pt3dadd( 361.275, 425.427, 23.8455, 0.2288 ) }
    dend_36 { pt3dadd( 362.292, 425.341, 22.8058, 0.3118 ) }
    dend_36 { pt3dadd( 363.385, 425.053, 22.5247, 0.3382 ) }
    dend_36 { pt3dadd( 364.409, 424.556, 22.3759, 0.4192 ) }
    dend_36 { pt3dadd( 365.362, 423.929, 22.227, 0.4142 ) }
    dend_36 { pt3dadd( 366.273, 423.242, 22.0341, 0.4704 ) }
    dend_36 { pt3dadd( 367.199, 422.584, 21.7293, 0.4868 ) }
    dend_36 { pt3dadd( 368.132, 421.947, 21.2897, 0.486 ) }
    dend_36 { pt3dadd( 369.053, 421.304, 20.7626, 0.4058 ) }
    dend_36 { pt3dadd( 369.992, 420.692, 20.2136, 0.4116 ) }
    dend_36 { pt3dadd( 370.862, 419.988, 19.6893, 0.3586 ) }
    dend_36 { pt3dadd( 371.392, 419.035, 19.1806, 0.3406 ) }
    dend_36 { pt3dadd( 371.638, 417.938, 18.6995, 0.3754 ) }
    dend_36 { pt3dadd( 372.094, 416.93, 18.2603, 0.3376 ) }
    dend_36 { pt3dadd( 372.795, 416.047, 17.8231, 0.3068 ) }
    dend_36 { pt3dadd( 373.569, 415.227, 17.3401, 0.2872 ) }
    dend_36 { pt3dadd( 374.463, 414.563, 16.8019, 0.299 ) }
    dend_36 { pt3dadd( 375.517, 414.231, 16.2592, 0.3144 ) }
    dend_36 { pt3dadd( 376.625, 414.274, 15.7367, 0.3742 ) }
    dend_36 { pt3dadd( 377.726, 414.445, 15.1087, 0.3352 ) }
    dend_36 { pt3dadd( 378.807, 414.653, 14.3443, 0.3024 ) }
    dend_36 { pt3dadd( 379.897, 414.837, 13.6372, 0.279 ) }
    dend_36 { pt3dadd( 381.01, 414.924, 13.039, 0.2826 ) }
    dend_36 { pt3dadd( 382.134, 415.004, 12.5487, 0.2896 ) }
    dend_36 { pt3dadd( 383.217, 415.311, 12.1824, 0.302 ) }
    dend_36 { pt3dadd( 384.19, 415.893, 11.9441, 0.3274 ) }
    dend_36 { pt3dadd( 385.161, 416.494, 11.8015, 0.362 ) }
    dend_36 { pt3dadd( 386.177, 417.017, 11.7119, 0.488 ) }
    dend_36 { pt3dadd( 387.187, 417.554, 11.6892, 0.4218 ) }
    dend_36 { pt3dadd( 387.757, 418.492, 11.6546, 0.3808 ) }
    dend_36 { pt3dadd( 388.101, 419.58, 11.4821, 0.3666 ) }
    dend_36 { pt3dadd( 388.549, 420.626, 11.2529, 0.4972 ) }
    dend_36 { pt3dadd( 388.759, 421.741, 10.9866, 0.435 ) }
    dend_36 { pt3dadd( 389.12, 422.823, 10.9442, 0.4238 ) }
    dend_36 { pt3dadd( 389.801, 423.741, 11.0185, 0.356 ) }
    dend_36 { pt3dadd( 390.562, 424.538, 11.76, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 80/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 360.549, 425.436, 25.2137, 0.429 ) }
    dend_27 { pt3dadd( 361.254, 425.197, 25.2832, 0.3426 ) }
    dend_27 { pt3dadd( 362.182, 424.581, 25.6323, 0.3162 ) }
    dend_27 { pt3dadd( 362.866, 423.691, 26.0299, 0.3042 ) }
    dend_27 { pt3dadd( 363.363, 422.674, 26.3828, 0.3306 ) }
    dend_27 { pt3dadd( 363.961, 421.717, 26.6734, 0.3738 ) }
    dend_27 { pt3dadd( 364.811, 420.973, 26.826, 0.4808 ) }
    dend_27 { pt3dadd( 365.772, 420.354, 26.8054, 0.549 ) }
    dend_27 { pt3dadd( 366.684, 419.671, 26.6206, 0.6216 ) }
    dend_27 { pt3dadd( 367.473, 418.858, 26.3036, 0.5586 ) }
    dend_27 { pt3dadd( 368.26, 418.045, 25.9108, 0.4866 ) }
    dend_27 { pt3dadd( 369.259, 417.686, 25.3023, 0.365 ) }
    dend_27 { pt3dadd( 370.151, 417.107, 24.4469, 0.3106 ) }
    dend_27 { pt3dadd( 370.621, 416.098, 23.8118, 0.2938 ) }
    // Section: dend_25, id: dend_25, parent: dend_14 (entry count 94/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 360.841, 428.523, 37.9442, 0.3532 ) }
    dend_25 { pt3dadd( 360.786, 428.648, 38.8072, 0.4576 ) }
    dend_25 { pt3dadd( 360.66, 429.153, 41.1172, 0.439 ) }
    dend_25 { pt3dadd( 360.758, 430.237, 41.886, 0.4988 ) }
    dend_25 { pt3dadd( 361.038, 431.338, 42.2027, 0.3952 ) }
    dend_25 { pt3dadd( 361.318, 432.442, 42.4287, 0.3292 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_25 { pt3dadd( 361.564, 433.557, 42.6012, 0.2816 ) }
    dend_25 { pt3dadd( 361.808, 434.665, 42.9153, 0.2878 ) }
    dend_25 { pt3dadd( 362.145, 435.727, 43.4342, 0.2988 ) }
    dend_25 { pt3dadd( 362.608, 436.737, 44.1028, 0.3204 ) }
    dend_25 { pt3dadd( 362.796, 437.813, 44.7882, 0.355 ) }
    dend_25 { pt3dadd( 362.803, 438.93, 45.393, 0.445 ) }
    dend_25 { pt3dadd( 362.677, 440.045, 45.8878, 0.487 ) }
    dend_25 { pt3dadd( 362.648, 441.165, 46.3957, 0.4854 ) }
    dend_25 { pt3dadd( 362.618, 442.29, 46.8927, 0.4108 ) }
    dend_25 { pt3dadd( 362.451, 443.408, 47.3094, 0.391 ) }
    dend_25 { pt3dadd( 362.26, 444.525, 47.6876, 0.4642 ) }
    dend_25 { pt3dadd( 362.233, 445.654, 48.0732, 0.5248 ) }
    dend_25 { pt3dadd( 362.29, 446.785, 48.4837, 0.545 ) }
    dend_25 { pt3dadd( 362.302, 447.914, 48.9227, 0.5714 ) }
    dend_25 { pt3dadd( 362.117, 449.018, 49.4446, 0.4446 ) }
    dend_25 { pt3dadd( 361.904, 450.117, 50.0184, 0.3758 ) }
    dend_25 { pt3dadd( 361.553, 451.173, 50.6414, 0.3574 ) }
    dend_25 { pt3dadd( 361.066, 452.176, 51.2512, 0.4794 ) }
    dend_25 { pt3dadd( 360.603, 453.192, 51.8462, 0.4064 ) }
    dend_25 { pt3dadd( 360.18, 454.221, 52.5062, 0.35 ) }
    dend_25 { pt3dadd( 359.637, 455.167, 53.324, 0.3196 ) }
    dend_25 { pt3dadd( 359.16, 456.128, 54.2934, 0.3598 ) }
    dend_25 { pt3dadd( 358.674, 457.101, 55.1555, 0.4252 ) }
    dend_25 { pt3dadd( 358.191, 458.071, 56.0538, 0.5892 ) }
    dend_25 { pt3dadd( 357.833, 459.088, 56.9834, 0.6864 ) }
    dend_25 { pt3dadd( 357.754, 460.161, 57.9096, 0.4972 ) }
    dend_25 { pt3dadd( 358.186, 461.128, 58.9089, 0.339 ) }
    dend_25 { pt3dadd( 358.786, 462.057, 59.6296, 0.2542 ) }
    dend_25 { pt3dadd( 359.503, 462.9, 60.3355, 0.2288 ) }
    dend_25 { pt3dadd( 359.902, 463.663, 62.16, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 30/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 360.841, 428.523, 37.9442, 0.3532 ) }
    dend_18 { pt3dadd( 361.76, 429.645, 38.1595, 0.3368 ) }
    dend_18 { pt3dadd( 362.433, 430.57, 38.1839, 0.3376 ) }
    dend_18 { pt3dadd( 363.201, 431.407, 38.4115, 0.4168 ) }
    dend_18 { pt3dadd( 364.116, 432.083, 38.6812, 0.416 ) }
    dend_18 { pt3dadd( 365.247, 432.065, 38.9368, 0.4436 ) }
    dend_18 { pt3dadd( 366.335, 431.72, 39.0928, 0.5826 ) }
    dend_18 { pt3dadd( 367.477, 431.656, 39.1121, 0.6434 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 38/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 360.841, 428.523, 37.9442, 0.3532 ) }
    dend_15 { pt3dadd( 361.22, 428.437, 39.2728, 0.2288 ) }
    dend_15 { pt3dadd( 361.999, 428.141, 41.1776, 0.374 ) }
    dend_15 { pt3dadd( 363.059, 427.965, 42.0524, 0.335 ) }
    dend_15 { pt3dadd( 364.087, 428.349, 42.7605, 0.302 ) }
    dend_15 { pt3dadd( 365.16, 428.322, 43.6576, 0.2782 ) }
    dend_15 { pt3dadd( 366.044, 427.672, 44.4469, 0.2814 ) }
    dend_15 { pt3dadd( 366.754, 426.828, 45.1898, 0.287 ) }
    // Section: apic_24, id: apic_24, parent: apic_0 (entry count 46/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 331.092, 424.964, 35.4897, 0.4958 ) }
    apic_24 { pt3dadd( 330.802, 425.626, 35.9545, 0.4576 ) }
    apic_24 { pt3dadd( 330.372, 426.667, 36.4431, 0.3594 ) }
    apic_24 { pt3dadd( 329.935, 427.723, 36.6106, 0.3004 ) }
    apic_24 { pt3dadd( 329.453, 428.756, 36.8144, 0.2752 ) }
    apic_24 { pt3dadd( 328.948, 429.777, 37.091, 0.2756 ) }
    apic_24 { pt3dadd( 328.557, 430.838, 37.5012, 0.2766 ) }
    apic_24 { pt3dadd( 328.143, 431.87, 38.1508, 0.2782 ) }
    apic_24 { pt3dadd( 327.603, 432.818, 38.9838, 0.2816 ) }
    apic_24 { pt3dadd( 327.282, 433.847, 39.8395, 0.2872 ) }
    apic_24 { pt3dadd( 327.326, 434.94, 40.6524, 0.2992 ) }
    apic_24 { pt3dadd( 327.487, 436.004, 41.5974, 0.315 ) }
    apic_24 { pt3dadd( 327.661, 437.0, 42.8775, 0.375 ) }
    apic_24 { pt3dadd( 328.146, 437.876, 44.1297, 0.337 ) }
    apic_24 { pt3dadd( 328.877, 438.623, 45.257, 0.3056 ) }
    apic_24 { pt3dadd( 329.693, 439.235, 46.499, 0.285 ) }
    apic_24 { pt3dadd( 330.551, 439.791, 47.7495, 0.2938 ) }
    apic_24 { pt3dadd( 331.387, 440.432, 48.8309, 0.3112 ) }
    apic_24 { pt3dadd( 332.184, 441.145, 49.8154, 0.3382 ) }
    apic_24 { pt3dadd( 332.977, 441.848, 50.8612, 0.413 ) }
    apic_24 { pt3dadd( 333.759, 442.539, 51.9985, 0.4328 ) }
    apic_24 { pt3dadd( 334.536, 443.251, 53.0799, 0.3592 ) }
    apic_24 { pt3dadd( 335.286, 443.997, 54.1335, 0.3 ) }
    apic_24 { pt3dadd( 336.079, 444.633, 55.3364, 0.2746 ) }
    apic_24 { pt3dadd( 336.95, 445.154, 56.623, 0.2744 ) }
    apic_24 { pt3dadd( 337.733, 445.81, 57.8598, 0.2744 ) }
    apic_24 { pt3dadd( 338.436, 446.561, 59.0786, 0.2742 ) }
    apic_24 { pt3dadd( 339.118, 447.34, 60.2731, 0.274 ) }
    apic_24 { pt3dadd( 339.852, 448.098, 61.3525, 0.2736 ) }
    apic_24 { pt3dadd( 340.714, 448.767, 62.1673, 0.2728 ) }
    apic_24 { pt3dadd( 341.618, 449.423, 62.7682, 0.2712 ) }
    apic_24 { pt3dadd( 342.569, 450.015, 63.3242, 0.2684 ) }
    apic_24 { pt3dadd( 342.913, 451.051, 63.5953, 0.2626 ) }
    apic_24 { pt3dadd( 342.771, 452.177, 63.4981, 0.2542 ) }
    apic_24 { pt3dadd( 342.762, 453.317, 63.2422, 0.2288 ) }
    apic_24 { pt3dadd( 342.883, 454.433, 62.7155, 0.2288 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 82/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 331.092, 424.964, 35.4897, 0.4958 ) }
    apic_1 { pt3dadd( 330.44, 424.132, 35.4102, 0.5904 ) }
    apic_1 { pt3dadd( 329.575, 423.384, 35.3578, 0.6324 ) }
    apic_1 { pt3dadd( 328.691, 422.658, 35.341, 0.8992 ) }
    apic_1 { pt3dadd( 327.795, 421.946, 35.3626, 0.9344 ) }
    apic_1 { pt3dadd( 327.145, 421.008, 35.4522, 0.9426 ) }
    apic_1 { pt3dadd( 326.683, 419.962, 35.432, 1.0068 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 89/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 333.677, 442.036, 32.7765, 0.3624 ) }
    dend_11 { pt3dadd( 333.446, 442.616, 32.6894, 0.3476 ) }
    dend_11 { pt3dadd( 333.13, 443.712, 32.655, 0.388 ) }
    dend_11 { pt3dadd( 333.055, 444.844, 32.8009, 0.362 ) }
    dend_11 { pt3dadd( 333.19, 445.97, 33.0999, 0.347 ) }
    dend_11 { pt3dadd( 333.414, 447.079, 33.5188, 0.3872 ) }
    dend_11 { pt3dadd( 333.634, 448.184, 33.9937, 0.3604 ) }
    dend_11 { pt3dadd( 333.769, 449.306, 34.4165, 0.344 ) }
    dend_11 { pt3dadd( 333.797, 450.441, 34.7309, 0.3816 ) }
    dend_11 { pt3dadd( 333.811, 451.583, 34.9334, 0.3488 ) }
    dend_11 { pt3dadd( 333.932, 452.717, 34.9882, 0.3288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_11 { pt3dadd( 334.035, 453.856, 34.9364, 0.3226 ) }
    dend_11 { pt3dadd( 334.228, 454.983, 34.8863, 0.3892 ) }
    dend_11 { pt3dadd( 334.326, 456.121, 34.846, 0.3628 ) }
    dend_11 { pt3dadd( 334.612, 457.223, 34.9087, 0.3556 ) }
    dend_11 { pt3dadd( 335.126, 458.228, 35.2724, 0.3674 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 5/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 333.677, 442.036, 32.7765, 0.3624 ) }
    dend_4 { pt3dadd( 333.513, 442.178, 31.9556, 0.2288 ) }
    dend_4 { pt3dadd( 332.807, 442.909, 33.126, 0.4344 ) }
    dend_4 { pt3dadd( 331.989, 443.636, 33.8909, 0.4376 ) }
    dend_4 { pt3dadd( 330.915, 443.927, 34.5416, 0.5382 ) }
    dend_4 { pt3dadd( 329.987, 444.546, 35.1551, 0.4938 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 11/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 343.51, 425.469, 27.8958, 0.2788 ) }
    dend_2 { pt3dadd( 343.254, 425.273, 27.9079, 0.2824 ) }
    dend_2 { pt3dadd( 342.453, 424.463, 27.9138, 0.2894 ) }
    dend_2 { pt3dadd( 341.811, 423.521, 27.7998, 0.3018 ) }
    dend_2 { pt3dadd( 341.212, 422.551, 27.5746, 0.3256 ) }
    dend_2 { pt3dadd( 340.546, 421.632, 27.251, 0.3662 ) }
    dend_2 { pt3dadd( 339.758, 420.834, 26.746, 0.4594 ) }
    dend_2 { pt3dadd( 338.877, 420.183, 25.965, 0.5442 ) }
    dend_2 { pt3dadd( 338.046, 419.49, 25.0639, 0.4432 ) }
    dend_2 { pt3dadd( 337.362, 418.655, 24.1566, 0.3656 ) }
    dend_2 { pt3dadd( 336.504, 418.077, 23.0151, 0.3746 ) }
    dend_2 { pt3dadd( 335.578, 417.83, 21.5631, 0.336 ) }
    dend_2 { pt3dadd( 334.943, 417.099, 20.1348, 0.3038 ) }
    dend_2 { pt3dadd( 334.62, 416.136, 18.9417, 0.2816 ) }
    dend_2 { pt3dadd( 334.815, 415.13, 17.9668, 0.2876 ) }
    dend_2 { pt3dadd( 335.421, 414.202, 17.2946, 0.2996 ) }
    dend_2 { pt3dadd( 336.076, 413.289, 16.7648, 0.3158 ) }
    dend_2 { pt3dadd( 336.632, 412.327, 16.1659, 0.3766 ) }
    dend_2 { pt3dadd( 336.849, 411.253, 15.4958, 0.3398 ) }
    dend_2 { pt3dadd( 337.202, 410.206, 14.8498, 0.3106 ) }
    dend_2 { pt3dadd( 337.923, 409.36, 14.5463, 0.2954 ) }
    dend_2 { pt3dadd( 337.956, 408.264, 14.5205, 0.3078 ) }
    dend_2 { pt3dadd( 337.292, 407.429, 14.2753, 0.3616 ) }
    dend_2 { pt3dadd( 336.216, 407.189, 13.6433, 0.3136 ) }
    dend_2 { pt3dadd( 335.208, 406.676, 13.2311, 0.2542 ) }
    dend_2 { pt3dadd( 334.161, 406.234, 12.88, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 37/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 343.51, 425.469, 27.8958, 0.2788 ) }
    dend_1 { pt3dadd( 343.624, 425.192, 27.7544, 0.2288 ) }
    dend_1 { pt3dadd( 343.989, 424.372, 26.0149, 0.2794 ) }
    dend_1 { pt3dadd( 344.069, 423.497, 24.5715, 0.2834 ) }
    dend_1 { pt3dadd( 343.195, 423.28, 23.0677, 0.2908 ) }
    dend_1 { pt3dadd( 342.148, 423.513, 22.1672, 0.3058 ) }
    dend_1 { pt3dadd( 341.18, 424.072, 21.6728, 0.327 ) }
    dend_1 { pt3dadd( 340.161, 424.586, 21.4938, 0.3984 ) }
    dend_1 { pt3dadd( 339.048, 424.839, 21.4342, 0.3748 ) }
    dend_1 { pt3dadd( 337.907, 424.788, 21.4091, 0.4014 ) }
    dend_1 { pt3dadd( 336.827, 424.419, 21.2682, 0.3388 ) }
    dend_1 { pt3dadd( 335.781, 424.082, 20.5997, 0.309 ) }
    dend_1 { pt3dadd( 334.795, 424.252, 19.3478, 0.2912 ) }
    dend_1 { pt3dadd( 333.818, 424.659, 18.3018, 0.3052 ) }
    dend_1 { pt3dadd( 332.754, 424.878, 17.5357, 0.3334 ) }
    dend_1 { pt3dadd( 331.673, 424.705, 16.9052, 0.3732 ) }
    dend_1 { pt3dadd( 330.678, 424.239, 16.1787, 0.5082 ) }
    dend_1 { pt3dadd( 329.928, 423.496, 15.1863, 0.4614 ) }
    dend_1 { pt3dadd( 329.105, 422.761, 14.4534, 0.4434 ) }
    dend_1 { pt3dadd( 328.152, 422.169, 13.9216, 0.5338 ) }
    dend_1 { pt3dadd( 327.177, 421.605, 13.4306, 0.5592 ) }
    dend_1 { pt3dadd( 326.339, 420.85, 12.9958, 0.3814 ) }
    dend_1 { pt3dadd( 325.527, 420.048, 12.7725, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 60/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 331.475, 445.176, 18.5816, 0.466 ) }
    dend_40 { pt3dadd( 331.401, 446.519, 17.385, 0.3734 ) }
    dend_40 { pt3dadd( 330.901, 447.493, 16.6906, 0.3274 ) }
    dend_40 { pt3dadd( 330.17, 448.345, 16.1807, 0.32 ) }
    dend_40 { pt3dadd( 329.444, 449.22, 15.8698, 0.3844 ) }
    dend_40 { pt3dadd( 328.699, 450.085, 15.7383, 0.354 ) }
    dend_40 { pt3dadd( 327.833, 450.83, 15.6897, 0.3382 ) }
    dend_40 { pt3dadd( 326.988, 451.602, 15.6586, 0.3414 ) }
    dend_40 { pt3dadd( 326.286, 452.502, 15.5577, 0.4188 ) }
    dend_40 { pt3dadd( 325.898, 453.57, 15.3677, 0.4436 ) }
    dend_40 { pt3dadd( 325.93, 454.703, 15.1078, 0.3792 ) }
    dend_40 { pt3dadd( 325.793, 455.832, 14.8323, 0.338 ) }
    dend_40 { pt3dadd( 325.63, 456.962, 14.6296, 0.3396 ) }
    dend_40 { pt3dadd( 325.579, 458.103, 14.5478, 0.4218 ) }
    dend_40 { pt3dadd( 325.534, 459.246, 14.511, 0.4176 ) }
    dend_40 { pt3dadd( 325.286, 460.362, 14.4056, 0.484 ) }
    dend_40 { pt3dadd( 324.903, 461.438, 14.2827, 0.4756 ) }
    dend_40 { pt3dadd( 325.092, 462.563, 14.1735, 0.6404 ) }
    dend_40 { pt3dadd( 325.617, 463.578, 14.0734, 0.5292 ) }
    dend_40 { pt3dadd( 326.157, 464.586, 14.0442, 0.5144 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 80/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 331.475, 445.176, 18.5816, 0.466 ) }
    dend_39 { pt3dadd( 330.79, 445.109, 17.1171, 0.2288 ) }
    dend_39 { pt3dadd( 329.845, 444.806, 15.7827, 0.2752 ) }
    dend_39 { pt3dadd( 328.778, 444.522, 15.1274, 0.2756 ) }
    dend_39 { pt3dadd( 327.663, 444.474, 14.565, 0.2766 ) }
    dend_39 { pt3dadd( 326.549, 444.374, 13.9857, 0.2784 ) }
    dend_39 { pt3dadd( 325.526, 443.927, 13.4818, 0.2818 ) }
    dend_39 { pt3dadd( 324.596, 443.283, 13.0798, 0.2876 ) }
    dend_39 { pt3dadd( 323.538, 442.896, 12.7555, 0.3 ) }
    dend_39 { pt3dadd( 322.631, 443.469, 12.5019, 0.3164 ) }
    dend_39 { pt3dadd( 322.45, 444.565, 12.4144, 0.3786 ) }
    dend_39 { pt3dadd( 322.47, 445.708, 12.3616, 0.339 ) }
    dend_39 { pt3dadd( 321.755, 446.567, 12.1456, 0.3304 ) }
    dend_39 { pt3dadd( 321.006, 447.418, 11.76, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 94/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 370.621, 416.098, 23.8118, 0.2938 ) }
    dend_31 { pt3dadd( 370.134, 415.019, 23.4454, 0.3112 ) }
    dend_31 { pt3dadd( 369.635, 413.991, 23.4742, 0.3384 ) }
    dend_31 { pt3dadd( 369.277, 412.912, 23.6153, 0.4132 ) }
    dend_31 { pt3dadd( 369.233, 411.784, 23.7644, 0.4332 ) }
    dend_31 { pt3dadd( 369.376, 410.65, 23.8083, 0.3602 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_31 { pt3dadd( 369.459, 409.511, 23.7626, 0.3018 ) }
    dend_31 { pt3dadd( 369.374, 408.375, 23.7005, 0.278 ) }
    dend_31 { pt3dadd( 369.1, 407.267, 23.6295, 0.2808 ) }
    dend_31 { pt3dadd( 368.933, 406.144, 23.5058, 0.2862 ) }
    dend_31 { pt3dadd( 369.355, 405.148, 23.3217, 0.296 ) }
    dend_31 { pt3dadd( 370.203, 404.403, 23.1241, 0.3156 ) }
    dend_31 { pt3dadd( 370.69, 403.432, 22.8969, 0.3448 ) }
    dend_31 { pt3dadd( 370.726, 402.302, 22.6972, 0.4326 ) }
    dend_31 { pt3dadd( 370.717, 401.161, 22.5943, 0.4328 ) }
    dend_31 { pt3dadd( 370.841, 400.026, 22.5534, 0.5354 ) }
    dend_31 { pt3dadd( 371.03, 398.898, 22.5, 0.4578 ) }
    dend_31 { pt3dadd( 371.342, 397.8, 22.3847, 0.4714 ) }
    dend_31 { pt3dadd( 371.65, 396.699, 22.2659, 0.417 ) }
    dend_31 { pt3dadd( 371.797, 395.569, 22.1619, 0.4752 ) }
    dend_31 { pt3dadd( 372.092, 394.472, 22.0328, 0.4968 ) }
    dend_31 { pt3dadd( 372.824, 393.629, 21.9174, 0.4986 ) }
    dend_31 { pt3dadd( 373.625, 392.814, 21.7882, 0.4596 ) }
    dend_31 { pt3dadd( 374.169, 391.822, 21.603, 0.362 ) }
    dend_31 { pt3dadd( 374.587, 390.759, 21.691, 0.305 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 370.621, 416.098, 23.8118, 0.2938 ) }
    dend_28 { pt3dadd( 371.135, 415.127, 22.6486, 0.2288 ) }
    dend_28 { pt3dadd( 371.64, 414.104, 22.8724, 0.282 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 22/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 367.477, 431.656, 39.1121, 0.6434 ) }
    dend_24 { pt3dadd( 368.355, 432.684, 40.0257, 0.6864 ) }
    dend_24 { pt3dadd( 369.202, 433.382, 40.7669, 0.4448 ) }
    dend_24 { pt3dadd( 370.069, 434.086, 41.2992, 0.3268 ) }
    dend_24 { pt3dadd( 370.934, 434.776, 41.9219, 0.277 ) }
    dend_24 { pt3dadd( 371.871, 435.358, 42.6504, 0.2792 ) }
    dend_24 { pt3dadd( 372.868, 435.799, 43.4314, 0.283 ) }
    dend_24 { pt3dadd( 373.946, 436.094, 44.002, 0.2902 ) }
    dend_24 { pt3dadd( 374.987, 436.522, 44.3733, 0.3046 ) }
    dend_24 { pt3dadd( 375.877, 437.215, 44.6494, 0.3248 ) }
    dend_24 { pt3dadd( 376.632, 438.06, 44.9929, 0.3932 ) }
    dend_24 { pt3dadd( 377.458, 438.827, 45.3905, 0.3714 ) }
    dend_24 { pt3dadd( 378.422, 439.411, 45.8195, 0.3654 ) }
    dend_24 { pt3dadd( 379.454, 439.873, 46.2081, 0.4162 ) }
    dend_24 { pt3dadd( 380.411, 440.461, 46.6598, 0.4388 ) }
    dend_24 { pt3dadd( 381.329, 441.092, 47.2912, 0.3706 ) }
    dend_24 { pt3dadd( 382.353, 441.544, 47.8442, 0.321 ) }
    dend_24 { pt3dadd( 383.431, 441.896, 48.2082, 0.3132 ) }
    dend_24 { pt3dadd( 384.273, 442.657, 48.4448, 0.3478 ) }
    dend_24 { pt3dadd( 384.974, 443.556, 48.6508, 0.402 ) }
    dend_24 { pt3dadd( 385.816, 444.325, 48.855, 0.5514 ) }
    dend_24 { pt3dadd( 386.678, 445.071, 49.0801, 0.591 ) }
    dend_24 { pt3dadd( 387.579, 445.767, 49.3399, 0.4442 ) }
    dend_24 { pt3dadd( 388.577, 446.318, 49.6062, 0.3258 ) }
    dend_24 { pt3dadd( 389.543, 446.917, 49.8868, 0.2752 ) }
    dend_24 { pt3dadd( 390.387, 447.676, 50.2569, 0.2758 ) }
    dend_24 { pt3dadd( 391.256, 448.386, 50.762, 0.2768 ) }
    dend_24 { pt3dadd( 392.265, 448.886, 51.2397, 0.2786 ) }
    dend_24 { pt3dadd( 393.193, 449.518, 51.7339, 0.282 ) }
    dend_24 { pt3dadd( 393.885, 450.398, 52.2376, 0.288 ) }
    dend_24 { pt3dadd( 394.401, 451.382, 52.789, 0.3008 ) }
    dend_24 { pt3dadd( 395.268, 452.063, 53.268, 0.3178 ) }
    dend_24 { pt3dadd( 396.353, 452.407, 53.5343, 0.3802 ) }
    dend_24 { pt3dadd( 397.448, 452.723, 53.6827, 0.3464 ) }
    dend_24 { pt3dadd( 398.493, 453.177, 53.7916, 0.3242 ) }
    dend_24 { pt3dadd( 399.476, 453.762, 53.846, 0.3142 ) }
    dend_24 { pt3dadd( 400.403, 454.431, 53.8591, 0.3734 ) }
    dend_24 { pt3dadd( 401.322, 455.113, 53.8966, 0.3338 ) }
    dend_24 { pt3dadd( 402.252, 455.776, 54.0039, 0.3 ) }
    dend_24 { pt3dadd( 403.207, 456.393, 54.2494, 0.2746 ) }
    dend_24 { pt3dadd( 404.23, 456.878, 54.6316, 0.2746 ) }
    dend_24 { pt3dadd( 405.267, 457.33, 55.0379, 0.2746 ) }
    dend_24 { pt3dadd( 406.265, 457.861, 55.4439, 0.2746 ) }
    dend_24 { pt3dadd( 407.255, 458.404, 55.881, 0.2746 ) }
    dend_24 { pt3dadd( 408.288, 458.855, 56.3466, 0.2746 ) }
    dend_24 { pt3dadd( 409.336, 459.274, 56.8002, 0.2746 ) }
    dend_24 { pt3dadd( 410.329, 459.8, 57.2443, 0.2746 ) }
    dend_24 { pt3dadd( 411.217, 460.477, 57.8071, 0.2746 ) }
    dend_24 { pt3dadd( 412.132, 461.056, 58.618, 0.2746 ) }
    dend_24 { pt3dadd( 413.168, 461.416, 59.3888, 0.2746 ) }
    dend_24 { pt3dadd( 414.071, 462.035, 60.016, 0.2746 ) }
    dend_24 { pt3dadd( 414.953, 462.734, 60.5038, 0.2746 ) }
    dend_24 { pt3dadd( 415.889, 463.377, 60.8306, 0.2746 ) }
    dend_24 { pt3dadd( 416.713, 464.156, 60.9938, 0.2746 ) }
    dend_24 { pt3dadd( 417.512, 464.975, 61.0285, 0.2744 ) }
    dend_24 { pt3dadd( 418.517, 465.472, 61.014, 0.2744 ) }
    dend_24 { pt3dadd( 419.598, 465.847, 61.0355, 0.2742 ) }
    dend_24 { pt3dadd( 420.621, 466.349, 61.129, 0.274 ) }
    dend_24 { pt3dadd( 421.585, 466.959, 61.3217, 0.2736 ) }
    dend_24 { pt3dadd( 422.437, 467.708, 61.6064, 0.2728 ) }
    dend_24 { pt3dadd( 423.238, 468.507, 62.0208, 0.2712 ) }
    dend_24 { pt3dadd( 424.07, 469.201, 62.8628, 0.2684 ) }
    dend_24 { pt3dadd( 424.948, 469.827, 63.7977, 0.2626 ) }
    dend_24 { pt3dadd( 425.922, 470.337, 64.5786, 0.2542 ) }
    dend_24 { pt3dadd( 426.815, 470.921, 65.4886, 0.2288 ) }
    dend_24 { pt3dadd( 427.855, 470.985, 66.64, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 88/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 367.477, 431.656, 39.1121, 0.6434 ) }
    dend_19 { pt3dadd( 368.088, 431.496, 39.102, 0.568 ) }
    dend_19 { pt3dadd( 369.201, 431.239, 39.0499, 0.426 ) }
    dend_19 { pt3dadd( 370.329, 431.066, 38.9449, 0.402 ) }
    dend_19 { pt3dadd( 371.469, 430.977, 38.8805, 0.3396 ) }
    dend_19 { pt3dadd( 372.612, 430.974, 38.9502, 0.3108 ) }
    dend_19 { pt3dadd( 373.753, 430.984, 39.0961, 0.2944 ) }
    dend_19 { pt3dadd( 374.89, 430.882, 39.1395, 0.3124 ) }
    dend_19 { pt3dadd( 376.022, 430.723, 39.0628, 0.339 ) }
    dend_19 { pt3dadd( 377.159, 430.591, 38.9581, 0.422 ) }
    dend_19 { pt3dadd( 378.285, 430.406, 38.8976, 0.4132 ) }
    dend_19 { pt3dadd( 379.406, 430.181, 38.9152, 0.4982 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 380.53, 429.969, 38.9768, 0.3942 ) }
    dend_19 { pt3dadd( 381.605, 429.599, 39.0424, 0.3274 ) }
    dend_19 { pt3dadd( 382.651, 429.137, 39.1138, 0.2782 ) }
    dend_19 { pt3dadd( 383.7, 428.681, 39.1353, 0.2814 ) }
    dend_19 { pt3dadd( 384.734, 428.197, 38.9922, 0.287 ) }
    dend_19 { pt3dadd( 385.814, 427.85, 38.7327, 0.2988 ) }
    dend_19 { pt3dadd( 386.928, 427.61, 38.5115, 0.3142 ) }
    dend_19 { pt3dadd( 388.022, 427.29, 38.3132, 0.3738 ) }
    dend_19 { pt3dadd( 389.072, 426.853, 38.0705, 0.3344 ) }
    dend_19 { pt3dadd( 390.111, 426.378, 37.914, 0.301 ) }
    dend_19 { pt3dadd( 391.214, 426.096, 37.9168, 0.2764 ) }
    dend_19 { pt3dadd( 392.349, 425.966, 37.9784, 0.278 ) }
    dend_19 { pt3dadd( 393.449, 425.665, 37.9725, 0.281 ) }
    dend_19 { pt3dadd( 394.521, 425.269, 37.8792, 0.2864 ) }
    dend_19 { pt3dadd( 395.65, 425.244, 37.7734, 0.2964 ) }
    dend_19 { pt3dadd( 396.794, 425.244, 37.7401, 0.316 ) }
    dend_19 { pt3dadd( 397.849, 424.835, 37.8039, 0.347 ) }
    dend_19 { pt3dadd( 398.951, 424.538, 37.6678, 0.429 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 18/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 366.754, 426.828, 45.1898, 0.287 ) }
    dend_17 { pt3dadd( 367.168, 427.22, 45.477, 0.2988 ) }
    dend_17 { pt3dadd( 368.111, 427.81, 45.9892, 0.3142 ) }
    dend_17 { pt3dadd( 369.181, 428.076, 46.5928, 0.3734 ) }
    dend_17 { pt3dadd( 370.26, 428.295, 47.3505, 0.3338 ) }
    dend_17 { pt3dadd( 371.333, 428.533, 48.1244, 0.3 ) }
    dend_17 { pt3dadd( 372.427, 428.565, 48.9048, 0.2746 ) }
    dend_17 { pt3dadd( 373.509, 428.414, 49.7182, 0.2746 ) }
    dend_17 { pt3dadd( 374.596, 428.306, 50.5361, 0.2746 ) }
    dend_17 { pt3dadd( 375.646, 427.964, 51.2355, 0.2746 ) }
    dend_17 { pt3dadd( 376.502, 427.251, 51.7213, 0.2746 ) }
    dend_17 { pt3dadd( 377.398, 426.562, 52.1587, 0.2746 ) }
    dend_17 { pt3dadd( 378.385, 426.043, 52.7372, 0.2746 ) }
    dend_17 { pt3dadd( 379.47, 425.828, 53.4327, 0.2746 ) }
    dend_17 { pt3dadd( 380.516, 426.19, 54.1232, 0.2746 ) }
    dend_17 { pt3dadd( 381.558, 426.561, 54.8394, 0.2746 ) }
    dend_17 { pt3dadd( 382.598, 426.931, 55.5741, 0.2746 ) }
    dend_17 { pt3dadd( 383.64, 427.302, 56.2929, 0.2746 ) }
    dend_17 { pt3dadd( 384.684, 427.673, 56.9904, 0.2746 ) }
    dend_17 { pt3dadd( 385.728, 428.045, 57.6794, 0.2746 ) }
    dend_17 { pt3dadd( 386.773, 428.415, 58.3719, 0.2746 ) }
    dend_17 { pt3dadd( 387.816, 428.787, 59.0708, 0.2746 ) }
    dend_17 { pt3dadd( 388.859, 429.159, 59.7783, 0.2746 ) }
    dend_17 { pt3dadd( 389.901, 429.53, 60.4979, 0.2746 ) }
    dend_17 { pt3dadd( 390.941, 429.899, 61.2321, 0.2746 ) }
    dend_17 { pt3dadd( 391.991, 430.234, 61.9923, 0.2746 ) }
    dend_17 { pt3dadd( 393.06, 430.463, 62.8071, 0.2746 ) }
    dend_17 { pt3dadd( 394.127, 430.684, 63.6602, 0.2746 ) }
    dend_17 { pt3dadd( 395.19, 430.902, 64.5467, 0.2746 ) }
    dend_17 { pt3dadd( 396.255, 431.039, 65.5071, 0.2746 ) }
    dend_17 { pt3dadd( 397.316, 431.163, 66.512, 0.2746 ) }
    dend_17 { pt3dadd( 398.372, 431.286, 67.5422, 0.2746 ) }
    dend_17 { pt3dadd( 399.428, 431.409, 68.5824, 0.2746 ) }
    dend_17 { pt3dadd( 400.482, 431.533, 69.6234, 0.2746 ) }
    dend_17 { pt3dadd( 401.539, 431.656, 70.653, 0.2746 ) }
    dend_17 { pt3dadd( 402.601, 431.77, 71.6593, 0.2746 ) }
    dend_17 { pt3dadd( 403.68, 431.78, 72.5838, 0.2746 ) }
    dend_17 { pt3dadd( 404.767, 431.79, 73.4614, 0.2746 ) }
    dend_17 { pt3dadd( 405.858, 431.799, 74.2991, 0.2744 ) }
    dend_17 { pt3dadd( 406.954, 431.81, 75.1024, 0.2744 ) }
    dend_17 { pt3dadd( 408.053, 431.819, 75.8766, 0.2742 ) }
    dend_17 { pt3dadd( 409.156, 431.829, 76.6231, 0.274 ) }
    dend_17 { pt3dadd( 410.26, 431.823, 77.3394, 0.2736 ) }
    dend_17 { pt3dadd( 411.366, 431.671, 77.968, 0.2728 ) }
    dend_17 { pt3dadd( 412.475, 431.518, 78.5445, 0.2712 ) }
    dend_17 { pt3dadd( 413.588, 431.365, 79.0714, 0.2684 ) }
    dend_17 { pt3dadd( 414.704, 431.21, 79.5494, 0.2626 ) }
    dend_17 { pt3dadd( 415.825, 431.057, 79.9828, 0.2542 ) }
    dend_17 { pt3dadd( 416.946, 430.902, 80.3827, 0.2288 ) }
    dend_17 { pt3dadd( 418.038, 430.751, 81.1275, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 68/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 366.754, 426.828, 45.1898, 0.287 ) }
    dend_16 { pt3dadd( 367.422, 426.421, 45.3636, 0.4576 ) }
    dend_16 { pt3dadd( 368.122, 425.526, 45.533, 0.4088 ) }
    dend_16 { pt3dadd( 368.51, 424.453, 45.6011, 0.4172 ) }
    dend_16 { pt3dadd( 368.588, 423.314, 45.7069, 0.3686 ) }
    dend_16 { pt3dadd( 368.579, 422.173, 45.8735, 0.3604 ) }
    dend_16 { pt3dadd( 368.493, 421.033, 45.9925, 0.4068 ) }
    dend_16 { pt3dadd( 368.22, 419.925, 46.1404, 0.4208 ) }
    dend_16 { pt3dadd( 368.2, 418.788, 46.4038, 0.339 ) }
    dend_16 { pt3dadd( 368.513, 417.694, 46.6808, 0.2542 ) }
    dend_16 { pt3dadd( 369.053, 416.759, 47.6, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_1 (entry count 79/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 326.683, 419.962, 35.432, 1.0068 ) }
    apic_21 { pt3dadd( 325.328, 420.461, 34.4604, 0.2288 ) }
    apic_21 { pt3dadd( 324.327, 420.986, 34.1412, 0.3694 ) }
    apic_21 { pt3dadd( 323.492, 421.755, 34.0214, 0.4654 ) }
    apic_21 { pt3dadd( 322.862, 422.708, 33.8962, 0.5564 ) }
    apic_21 { pt3dadd( 322.23, 423.64, 33.7201, 0.4594 ) }
    apic_21 { pt3dadd( 321.273, 424.229, 33.5042, 0.4266 ) }
    apic_21 { pt3dadd( 320.226, 424.654, 33.3682, 0.3382 ) }
    apic_21 { pt3dadd( 319.436, 425.435, 33.3066, 0.308 ) }
    apic_21 { pt3dadd( 319.048, 426.496, 33.1979, 0.2896 ) }
    apic_21 { pt3dadd( 318.868, 427.623, 32.9944, 0.3018 ) }
    apic_21 { pt3dadd( 318.549, 428.706, 32.7821, 0.3274 ) }
    apic_21 { pt3dadd( 317.917, 429.641, 32.6267, 0.362 ) }
    apic_21 { pt3dadd( 317.072, 430.405, 32.506, 0.4876 ) }
    apic_21 { pt3dadd( 316.163, 431.098, 32.4593, 0.4228 ) }
    apic_21 { pt3dadd( 315.217, 431.742, 32.4391, 0.375 ) }
    apic_21 { pt3dadd( 314.184, 432.211, 32.3296, 0.3918 ) }
    apic_21 { pt3dadd( 313.111, 432.593, 32.079, 0.369 ) }
    apic_21 { pt3dadd( 312.049, 432.997, 31.7386, 0.3596 ) }
    apic_21 { pt3dadd( 310.948, 433.269, 31.4644, 0.4116 ) }
    apic_21 { pt3dadd( 309.823, 433.469, 31.3272, 0.4006 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_21 { pt3dadd( 308.936, 434.133, 31.1816, 0.444 ) }
    apic_21 { pt3dadd( 308.293, 435.059, 30.7891, 0.4432 ) }
    apic_21 { pt3dadd( 307.302, 435.616, 30.5595, 0.3786 ) }
    apic_21 { pt3dadd( 306.389, 436.3, 30.3663, 0.3368 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 4/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 326.683, 419.962, 35.432, 1.0068 ) }
    apic_2 { pt3dadd( 326.513, 418.35, 35.3814, 0.886 ) }
    apic_2 { pt3dadd( 326.392, 417.213, 35.322, 0.913 ) }
    apic_2 { pt3dadd( 326.273, 416.075, 35.2624, 0.8868 ) }
    apic_2 { pt3dadd( 326.153, 414.938, 35.2111, 0.7528 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 9/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 335.126, 458.228, 35.2724, 0.3674 ) }
    dend_13 { pt3dadd( 335.631, 459.224, 35.5566, 0.4972 ) }
    dend_13 { pt3dadd( 336.111, 460.262, 35.6857, 0.4416 ) }
    dend_13 { pt3dadd( 336.514, 461.329, 35.7714, 0.4046 ) }
    dend_13 { pt3dadd( 336.842, 462.425, 35.852, 0.4724 ) }
    dend_13 { pt3dadd( 337.124, 463.533, 35.9304, 0.3934 ) }
    dend_13 { pt3dadd( 337.26, 464.663, 35.9719, 0.3258 ) }
    dend_13 { pt3dadd( 337.256, 465.807, 35.9705, 0.2752 ) }
    dend_13 { pt3dadd( 337.267, 466.95, 35.9254, 0.2756 ) }
    dend_13 { pt3dadd( 337.324, 468.092, 35.8366, 0.2766 ) }
    dend_13 { pt3dadd( 337.382, 469.232, 35.6815, 0.2784 ) }
    dend_13 { pt3dadd( 337.547, 470.354, 35.408, 0.2816 ) }
    dend_13 { pt3dadd( 337.795, 471.465, 35.1355, 0.2874 ) }
    dend_13 { pt3dadd( 338.157, 472.538, 34.974, 0.2994 ) }
    dend_13 { pt3dadd( 338.577, 473.601, 34.8956, 0.3152 ) }
    dend_13 { pt3dadd( 338.758, 474.718, 34.8737, 0.3754 ) }
    dend_13 { pt3dadd( 338.757, 475.862, 34.895, 0.3376 ) }
    dend_13 { pt3dadd( 338.579, 476.984, 34.8376, 0.3068 ) }
    dend_13 { pt3dadd( 338.232, 478.072, 34.739, 0.287 ) }
    dend_13 { pt3dadd( 337.849, 479.15, 34.7273, 0.2988 ) }
    dend_13 { pt3dadd( 337.672, 480.273, 34.6612, 0.3142 ) }
    dend_13 { pt3dadd( 337.677, 481.414, 34.5108, 0.3738 ) }
    dend_13 { pt3dadd( 337.9, 482.529, 34.3314, 0.3344 ) }
    dend_13 { pt3dadd( 338.228, 483.619, 34.0721, 0.301 ) }
    dend_13 { pt3dadd( 338.552, 484.704, 33.6781, 0.2766 ) }
    dend_13 { pt3dadd( 338.831, 485.8, 33.2559, 0.2782 ) }
    dend_13 { pt3dadd( 339.224, 486.865, 32.9465, 0.2814 ) }
    dend_13 { pt3dadd( 339.635, 487.927, 32.6956, 0.287 ) }
    dend_13 { pt3dadd( 340.006, 489.002, 32.3767, 0.2988 ) }
    dend_13 { pt3dadd( 340.039, 490.123, 31.9343, 0.3142 ) }
    dend_13 { pt3dadd( 339.492, 491.098, 31.4706, 0.3738 ) }
    dend_13 { pt3dadd( 339.035, 492.137, 31.1825, 0.3344 ) }
    dend_13 { pt3dadd( 338.926, 493.267, 30.8224, 0.301 ) }
    dend_13 { pt3dadd( 339.036, 494.382, 30.3114, 0.2766 ) }
    dend_13 { pt3dadd( 338.707, 495.384, 29.7629, 0.2782 ) }
    dend_13 { pt3dadd( 337.72, 495.9, 29.3292, 0.2814 ) }
    dend_13 { pt3dadd( 336.605, 496.074, 28.8649, 0.287 ) }
    dend_13 { pt3dadd( 335.484, 496.115, 28.3542, 0.2988 ) }
    dend_13 { pt3dadd( 334.365, 496.023, 27.8254, 0.3142 ) }
    dend_13 { pt3dadd( 333.251, 495.919, 27.2735, 0.3734 ) }
    dend_13 { pt3dadd( 332.165, 496.073, 26.6729, 0.3338 ) }
    dend_13 { pt3dadd( 331.301, 496.719, 26.0413, 0.3 ) }
    dend_13 { pt3dadd( 330.72, 497.677, 25.4917, 0.2746 ) }
    dend_13 { pt3dadd( 330.15, 498.647, 25.0287, 0.2746 ) }
    dend_13 { pt3dadd( 329.423, 499.509, 24.6496, 0.2748 ) }
    dend_13 { pt3dadd( 328.559, 500.248, 24.3828, 0.275 ) }
    dend_13 { pt3dadd( 327.622, 500.9, 24.2344, 0.2752 ) }
    dend_13 { pt3dadd( 326.609, 501.419, 24.1463, 0.2758 ) }
    dend_13 { pt3dadd( 325.533, 501.806, 24.0785, 0.277 ) }
    dend_13 { pt3dadd( 324.48, 502.243, 24.056, 0.279 ) }
    dend_13 { pt3dadd( 323.464, 502.77, 24.0865, 0.2828 ) }
    dend_13 { pt3dadd( 322.452, 503.305, 24.1686, 0.2896 ) }
    dend_13 { pt3dadd( 321.441, 503.836, 24.326, 0.3036 ) }
    dend_13 { pt3dadd( 320.434, 504.369, 24.5731, 0.323 ) }
    dend_13 { pt3dadd( 319.411, 504.864, 24.858, 0.3898 ) }
    dend_13 { pt3dadd( 318.355, 505.286, 25.1419, 0.3654 ) }
    dend_13 { pt3dadd( 317.259, 505.576, 25.4334, 0.353 ) }
    dend_13 { pt3dadd( 316.134, 505.744, 25.7335, 0.3984 ) }
    dend_13 { pt3dadd( 315.012, 505.921, 26.0366, 0.381 ) }
    dend_13 { pt3dadd( 313.88, 506.032, 26.2504, 0.383 ) }
    dend_13 { pt3dadd( 312.754, 506.181, 26.3319, 0.4496 ) }
    dend_13 { pt3dadd( 311.776, 506.722, 26.4175, 0.4966 ) }
    dend_13 { pt3dadd( 310.941, 507.5, 26.5316, 0.498 ) }
    dend_13 { pt3dadd( 310.127, 508.301, 26.6573, 0.4586 ) }
    dend_13 { pt3dadd( 309.288, 509.077, 26.8433, 0.3602 ) }
    dend_13 { pt3dadd( 308.543, 509.936, 27.0285, 0.3016 ) }
    dend_13 { pt3dadd( 307.796, 510.801, 27.1179, 0.2776 ) }
    dend_13 { pt3dadd( 307.026, 511.646, 27.1558, 0.2802 ) }
    dend_13 { pt3dadd( 306.092, 512.295, 27.2103, 0.285 ) }
    dend_13 { pt3dadd( 305.044, 512.742, 27.3394, 0.2938 ) }
    dend_13 { pt3dadd( 304.064, 513.316, 27.563, 0.31 ) }
    dend_13 { pt3dadd( 303.217, 514.066, 27.9338, 0.3422 ) }
    dend_13 { pt3dadd( 302.371, 514.811, 28.4052, 0.3904 ) }
    dend_13 { pt3dadd( 301.444, 515.452, 28.8635, 0.535 ) }
    dend_13 { pt3dadd( 300.711, 516.309, 29.2662, 0.5364 ) }
    dend_13 { pt3dadd( 300.278, 517.355, 29.5725, 0.4612 ) }
    dend_13 { pt3dadd( 299.694, 518.33, 29.8183, 0.469 ) }
    dend_13 { pt3dadd( 298.898, 519.149, 29.8939, 0.4548 ) }
    dend_13 { pt3dadd( 297.884, 519.667, 29.9104, 0.5696 ) }
    dend_13 { pt3dadd( 296.887, 520.229, 30.0054, 0.554 ) }
    dend_13 { pt3dadd( 295.82, 520.637, 30.121, 0.489 ) }
    dend_13 { pt3dadd( 294.686, 520.779, 30.2145, 0.5452 ) }
    dend_13 { pt3dadd( 293.562, 520.577, 30.1991, 0.4774 ) }
    dend_13 { pt3dadd( 292.419, 520.553, 30.1106, 0.5 ) }
    dend_13 { pt3dadd( 291.288, 520.704, 29.9214, 0.5084 ) }
    dend_13 { pt3dadd( 290.233, 521.092, 29.4, 0.4576 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 95/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 335.126, 458.228, 35.2724, 0.3674 ) }
    dend_12 { pt3dadd( 335.236, 458.598, 36.2236, 0.2288 ) }
    dend_12 { pt3dadd( 335.571, 459.642, 36.64, 0.2762 ) }
    dend_12 { pt3dadd( 335.87, 460.745, 36.7254, 0.2776 ) }
    dend_12 { pt3dadd( 335.555, 461.819, 36.8144, 0.2802 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_12 { pt3dadd( 334.92, 462.762, 36.7629, 0.2852 ) }
    dend_12 { pt3dadd( 334.992, 463.902, 36.7349, 0.2942 ) }
    dend_12 { pt3dadd( 335.22, 465.023, 36.8096, 0.3118 ) }
    dend_12 { pt3dadd( 335.379, 466.155, 36.9267, 0.3394 ) }
    dend_12 { pt3dadd( 335.48, 467.294, 37.0367, 0.415 ) }
    dend_12 { pt3dadd( 335.605, 468.428, 37.1272, 0.4364 ) }
    dend_12 { pt3dadd( 335.997, 469.5, 37.1944, 0.3662 ) }
    dend_12 { pt3dadd( 336.54, 470.5, 37.3545, 0.3126 ) }
    dend_12 { pt3dadd( 336.779, 471.597, 37.7387, 0.299 ) }
    dend_12 { pt3dadd( 336.876, 472.711, 38.1884, 0.3146 ) }
    dend_12 { pt3dadd( 337.259, 473.766, 38.6607, 0.3744 ) }
    dend_12 { pt3dadd( 337.713, 474.797, 39.1082, 0.3356 ) }
    dend_12 { pt3dadd( 337.995, 475.89, 39.4873, 0.3034 ) }
    dend_12 { pt3dadd( 338.092, 477.021, 39.7916, 0.2808 ) }
    dend_12 { pt3dadd( 338.086, 478.159, 40.0602, 0.2862 ) }
    dend_12 { pt3dadd( 338.22, 479.278, 40.3606, 0.2958 ) }
    dend_12 { pt3dadd( 338.721, 480.275, 40.6386, 0.3148 ) }
    dend_12 { pt3dadd( 339.492, 481.114, 40.8442, 0.3452 ) }
    dend_12 { pt3dadd( 340.335, 481.884, 40.9856, 0.4254 ) }
    dend_12 { pt3dadd( 341.203, 482.63, 41.0396, 0.457 ) }
    dend_12 { pt3dadd( 342.055, 483.39, 41.022, 0.3988 ) }
    dend_12 { pt3dadd( 342.859, 484.203, 40.9805, 0.3988 ) }
    dend_12 { pt3dadd( 343.618, 485.058, 40.9478, 0.3338 ) }
    dend_12 { pt3dadd( 344.362, 485.928, 40.9469, 0.3 ) }
    dend_12 { pt3dadd( 345.172, 486.731, 40.9956, 0.2746 ) }
    dend_12 { pt3dadd( 346.07, 487.438, 41.0802, 0.2746 ) }
    dend_12 { pt3dadd( 347.028, 488.06, 41.1538, 0.2746 ) }
    dend_12 { pt3dadd( 348.03, 488.612, 41.1776, 0.2748 ) }
    dend_12 { pt3dadd( 349.001, 489.211, 41.1757, 0.2748 ) }
    dend_12 { pt3dadd( 349.852, 489.966, 41.1709, 0.2752 ) }
    dend_12 { pt3dadd( 350.566, 490.856, 41.1242, 0.2756 ) }
    dend_12 { pt3dadd( 351.24, 491.779, 41.0054, 0.2766 ) }
    dend_12 { pt3dadd( 351.944, 492.677, 40.8237, 0.2782 ) }
    dend_12 { pt3dadd( 352.667, 493.558, 40.574, 0.2814 ) }
    dend_12 { pt3dadd( 353.387, 494.435, 40.2237, 0.287 ) }
    dend_12 { pt3dadd( 354.049, 495.352, 39.8124, 0.2988 ) }
    dend_12 { pt3dadd( 354.6, 496.339, 39.4265, 0.3142 ) }
    dend_12 { pt3dadd( 355.107, 497.355, 39.0928, 0.3734 ) }
    dend_12 { pt3dadd( 355.646, 498.357, 38.8136, 0.3338 ) }
    dend_12 { pt3dadd( 356.215, 499.346, 38.5902, 0.3 ) }
    dend_12 { pt3dadd( 356.698, 500.376, 38.4233, 0.2746 ) }
    dend_12 { pt3dadd( 356.984, 501.478, 38.3219, 0.2746 ) }
    dend_12 { pt3dadd( 357.109, 502.613, 38.3222, 0.2746 ) }
    dend_12 { pt3dadd( 357.359, 503.717, 38.5207, 0.2746 ) }
    dend_12 { pt3dadd( 358.019, 504.605, 38.911, 0.2746 ) }
    dend_12 { pt3dadd( 358.755, 505.464, 39.3215, 0.2746 ) }
    dend_12 { pt3dadd( 359.604, 506.195, 39.8107, 0.2746 ) }
    dend_12 { pt3dadd( 360.624, 506.639, 40.3612, 0.2746 ) }
    dend_12 { pt3dadd( 361.67, 507.053, 40.8741, 0.2746 ) }
    dend_12 { pt3dadd( 362.685, 507.551, 41.2922, 0.2746 ) }
    dend_12 { pt3dadd( 363.346, 508.436, 41.6346, 0.2746 ) }
    dend_12 { pt3dadd( 363.971, 509.384, 41.9563, 0.2746 ) }
    dend_12 { pt3dadd( 364.926, 509.952, 42.2573, 0.2746 ) }
    dend_12 { pt3dadd( 365.827, 510.628, 42.6303, 0.2744 ) }
    dend_12 { pt3dadd( 366.411, 511.573, 43.1376, 0.2744 ) }
    dend_12 { pt3dadd( 367.048, 512.499, 43.6372, 0.2742 ) }
    dend_12 { pt3dadd( 367.484, 513.522, 44.2296, 0.274 ) }
    dend_12 { pt3dadd( 367.564, 514.625, 44.8697, 0.2736 ) }
    dend_12 { pt3dadd( 367.566, 515.743, 45.4717, 0.2728 ) }
    dend_12 { pt3dadd( 367.566, 516.838, 46.2745, 0.2712 ) }
    dend_12 { pt3dadd( 367.566, 517.941, 47.0184, 0.2684 ) }
    dend_12 { pt3dadd( 367.568, 519.061, 47.586, 0.2626 ) }
    dend_12 { pt3dadd( 367.607, 520.193, 47.9853, 0.2542 ) }
    dend_12 { pt3dadd( 367.682, 521.33, 48.242, 0.2288 ) }
    dend_12 { pt3dadd( 367.796, 522.465, 48.44, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 65/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 329.987, 444.546, 35.1551, 0.4938 ) }
    dend_8 { pt3dadd( 328.962, 444.596, 36.2191, 0.388 ) }
    dend_8 { pt3dadd( 327.954, 445.026, 36.9684, 0.306 ) }
    dend_8 { pt3dadd( 326.969, 445.566, 37.492, 0.2856 ) }
    dend_8 { pt3dadd( 326.002, 446.152, 37.8876, 0.2948 ) }
    dend_8 { pt3dadd( 325.118, 446.859, 38.2329, 0.3132 ) }
    dend_8 { pt3dadd( 324.255, 447.6, 38.5174, 0.3408 ) }
    dend_8 { pt3dadd( 323.326, 448.258, 38.7391, 0.4236 ) }
    dend_8 { pt3dadd( 322.367, 448.878, 38.911, 0.4226 ) }
    dend_8 { pt3dadd( 321.424, 449.525, 39.0334, 0.4858 ) }
    dend_8 { pt3dadd( 320.491, 450.183, 39.1028, 0.5164 ) }
    dend_8 { pt3dadd( 319.571, 450.863, 39.1502, 0.5354 ) }
    dend_8 { pt3dadd( 318.688, 451.587, 39.2613, 0.524 ) }
    dend_8 { pt3dadd( 317.745, 452.217, 39.4604, 0.5018 ) }
    dend_8 { pt3dadd( 316.754, 452.777, 39.741, 0.4656 ) }
    dend_8 { pt3dadd( 315.924, 453.524, 40.1366, 0.3728 ) }
    dend_8 { pt3dadd( 315.038, 454.206, 40.488, 0.3262 ) }
    dend_8 { pt3dadd( 314.033, 454.742, 40.7095, 0.318 ) }
    dend_8 { pt3dadd( 312.993, 455.217, 40.8173, 0.3806 ) }
    dend_8 { pt3dadd( 311.963, 455.714, 40.8626, 0.347 ) }
    dend_8 { pt3dadd( 310.971, 456.282, 40.9422, 0.3256 ) }
    dend_8 { pt3dadd( 309.984, 456.859, 41.0432, 0.3166 ) }
    dend_8 { pt3dadd( 308.967, 457.379, 41.1331, 0.378 ) }
    dend_8 { pt3dadd( 307.888, 457.741, 41.2605, 0.3426 ) }
    dend_8 { pt3dadd( 306.759, 457.896, 41.3473, 0.316 ) }
    dend_8 { pt3dadd( 305.624, 458.022, 41.2314, 0.304 ) }
    dend_8 { pt3dadd( 304.509, 458.255, 41.0295, 0.3312 ) }
    dend_8 { pt3dadd( 303.532, 458.823, 40.899, 0.3688 ) }
    dend_8 { pt3dadd( 302.611, 459.498, 40.7336, 0.5016 ) }
    dend_8 { pt3dadd( 301.621, 460.057, 40.4513, 0.4422 ) }
    dend_8 { pt3dadd( 300.702, 460.724, 40.187, 0.4416 ) }
    dend_8 { pt3dadd( 299.927, 461.56, 39.9879, 0.3672 ) }
    dend_8 { pt3dadd( 299.007, 462.23, 39.8317, 0.3564 ) }
    dend_8 { pt3dadd( 297.933, 462.6, 39.6978, 0.4056 ) }
    dend_8 { pt3dadd( 296.885, 463.052, 39.5119, 0.3882 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_8 { pt3dadd( 296.521, 464.098, 39.5013, 0.4272 ) }
    dend_8 { pt3dadd( 295.952, 465.087, 39.4954, 0.3812 ) }
    dend_8 { pt3dadd( 295.276, 466.011, 39.4386, 0.4134 ) }
    dend_8 { pt3dadd( 294.469, 466.821, 39.52, 0.3606 ) }
    dend_8 { pt3dadd( 293.671, 467.639, 39.6161, 0.3516 ) }
    dend_8 { pt3dadd( 292.794, 468.373, 39.7062, 0.3598 ) }
    dend_8 { pt3dadd( 292.085, 469.27, 39.7732, 0.4836 ) }
    dend_8 { pt3dadd( 291.385, 470.175, 39.8418, 0.414 ) }
    dend_8 { pt3dadd( 290.607, 471.012, 39.9106, 0.3648 ) }
    dend_8 { pt3dadd( 289.918, 471.925, 39.9739, 0.3434 ) }
    dend_8 { pt3dadd( 289.449, 472.969, 40.0571, 0.4224 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 11/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 329.987, 444.546, 35.1551, 0.4938 ) }
    dend_5 { pt3dadd( 329.765, 444.963, 35.2136, 0.4576 ) }
    dend_5 { pt3dadd( 329.155, 445.869, 35.9341, 0.3964 ) }
    dend_5 { pt3dadd( 328.48, 446.75, 36.5487, 0.3648 ) }
    dend_5 { pt3dadd( 327.626, 447.452, 37.1, 0.415 ) }
    dend_5 { pt3dadd( 326.688, 448.022, 37.8736, 0.4364 ) }
    dend_5 { pt3dadd( 325.835, 448.66, 38.8872, 0.3662 ) }
    dend_5 { pt3dadd( 325.339, 449.548, 40.0929, 0.3124 ) }
    dend_5 { pt3dadd( 325.443, 450.617, 41.0441, 0.2988 ) }
    dend_5 { pt3dadd( 325.703, 451.687, 41.7936, 0.3142 ) }
    dend_5 { pt3dadd( 325.772, 452.794, 42.4628, 0.3734 ) }
    dend_5 { pt3dadd( 325.926, 453.89, 43.1707, 0.334 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 23/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 326.157, 464.586, 14.0442, 0.5144 ) }
    dend_42 { pt3dadd( 325.864, 465.275, 13.9861, 0.474 ) }
    dend_42 { pt3dadd( 325.506, 466.36, 13.8986, 0.4614 ) }
    dend_42 { pt3dadd( 325.095, 467.423, 13.7942, 0.3654 ) }
    dend_42 { pt3dadd( 324.556, 468.43, 13.66, 0.3112 ) }
    dend_42 { pt3dadd( 324.03, 469.444, 13.5292, 0.2952 ) }
    dend_42 { pt3dadd( 323.664, 470.523, 13.4147, 0.3136 ) }
    dend_42 { pt3dadd( 323.352, 471.621, 13.2857, 0.3428 ) }
    dend_42 { pt3dadd( 322.729, 472.557, 13.1491, 0.4214 ) }
    dend_42 { pt3dadd( 321.837, 473.257, 13.0413, 0.4484 ) }
    dend_42 { pt3dadd( 320.882, 473.886, 12.9655, 0.3882 ) }
    dend_42 { pt3dadd( 319.967, 474.572, 12.9124, 0.3546 ) }
    dend_42 { pt3dadd( 319.187, 475.403, 12.8784, 0.3712 ) }
    dend_42 { pt3dadd( 318.571, 476.363, 12.8611, 0.4758 ) }
    dend_42 { pt3dadd( 318.014, 477.362, 12.8509, 0.54 ) }
    dend_42 { pt3dadd( 317.437, 478.35, 12.8389, 0.604 ) }
    dend_42 { pt3dadd( 316.902, 479.36, 12.8221, 0.5308 ) }
    dend_42 { pt3dadd( 316.573, 480.45, 12.7993, 0.4106 ) }
    dend_42 { pt3dadd( 316.51, 481.586, 12.7697, 0.3428 ) }
    dend_42 { pt3dadd( 316.62, 482.723, 12.725, 0.3794 ) }
    dend_42 { pt3dadd( 316.752, 483.859, 12.6491, 0.345 ) }
    dend_42 { pt3dadd( 316.776, 485.001, 12.5555, 0.3204 ) }
    dend_42 { pt3dadd( 316.754, 486.145, 12.495, 0.3132 ) }
    dend_42 { pt3dadd( 316.766, 487.289, 12.4918, 0.342 ) }
    dend_42 { pt3dadd( 316.664, 488.426, 12.5521, 0.4198 ) }
    dend_42 { pt3dadd( 316.252, 489.481, 12.7488, 0.4452 ) }
    dend_42 { pt3dadd( 315.467, 490.277, 13.2177, 0.3836 ) }
    dend_42 { pt3dadd( 314.887, 491.247, 13.4367, 0.3398 ) }
    dend_42 { pt3dadd( 314.211, 492.158, 13.3685, 0.3738 ) }
    dend_42 { pt3dadd( 313.488, 493.043, 13.2735, 0.3346 ) }
    dend_42 { pt3dadd( 312.997, 494.064, 13.1758, 0.3014 ) }
    dend_42 { pt3dadd( 312.673, 495.159, 13.0988, 0.2772 ) }
    dend_42 { pt3dadd( 312.233, 496.21, 13.085, 0.2794 ) }
    dend_42 { pt3dadd( 311.612, 497.166, 13.1504, 0.2836 ) }
    dend_42 { pt3dadd( 310.999, 498.131, 13.2478, 0.291 ) }
    dend_42 { pt3dadd( 310.691, 499.218, 13.3381, 0.3062 ) }
    dend_42 { pt3dadd( 310.808, 500.34, 13.4186, 0.3278 ) }
    dend_42 { pt3dadd( 311.102, 501.445, 13.4718, 0.3988 ) }
    dend_42 { pt3dadd( 311.329, 502.565, 13.4872, 0.3816 ) }
    dend_42 { pt3dadd( 311.509, 503.694, 13.4662, 0.3844 ) }
    dend_42 { pt3dadd( 311.719, 504.819, 13.3946, 0.451 ) }
    dend_42 { pt3dadd( 311.859, 505.952, 13.2914, 0.5052 ) }
    dend_42 { pt3dadd( 311.859, 507.094, 13.1802, 0.4838 ) }
    dend_42 { pt3dadd( 311.75, 508.23, 13.0514, 0.5776 ) }
    dend_42 { pt3dadd( 311.548, 509.355, 12.9121, 0.5628 ) }
    dend_42 { pt3dadd( 311.25, 510.457, 12.7789, 0.5358 ) }
    dend_42 { pt3dadd( 310.829, 511.518, 12.6469, 0.4828 ) }
    dend_42 { pt3dadd( 310.346, 512.553, 12.4877, 0.3996 ) }
    dend_42 { pt3dadd( 309.954, 513.623, 12.2941, 0.4002 ) }
    dend_42 { pt3dadd( 309.775, 514.747, 12.1097, 0.3364 ) }
    dend_42 { pt3dadd( 309.737, 515.888, 11.9659, 0.3046 ) }
    dend_42 { pt3dadd( 309.531, 517.009, 11.8636, 0.283 ) }
    dend_42 { pt3dadd( 309.118, 518.073, 11.8004, 0.2902 ) }
    dend_42 { pt3dadd( 308.848, 519.182, 11.7683, 0.303 ) }
    dend_42 { pt3dadd( 308.846, 520.321, 11.757, 0.3296 ) }
    dend_42 { pt3dadd( 308.807, 521.464, 11.7527, 0.366 ) }
    dend_42 { pt3dadd( 308.47, 522.551, 11.7487, 0.495 ) }
    dend_42 { pt3dadd( 307.837, 523.497, 11.7475, 0.4364 ) }
    dend_42 { pt3dadd( 306.947, 524.206, 11.7477, 0.4 ) }
    dend_42 { pt3dadd( 305.915, 524.698, 11.7292, 0.4392 ) }
    dend_42 { pt3dadd( 304.898, 525.22, 11.6831, 0.4526 ) }
    dend_42 { pt3dadd( 303.941, 525.845, 11.6241, 0.5356 ) }
    dend_42 { pt3dadd( 302.936, 526.389, 11.5349, 0.6352 ) }
    dend_42 { pt3dadd( 301.835, 526.679, 11.3735, 0.627 ) }
    dend_42 { pt3dadd( 300.713, 526.893, 11.2197, 0.6328 ) }
    dend_42 { pt3dadd( 299.638, 527.278, 11.1032, 0.5424 ) }
    dend_42 { pt3dadd( 298.682, 527.904, 11.0632, 0.4068 ) }
    dend_42 { pt3dadd( 297.553, 527.842, 11.2, 0.4576 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 91/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 326.157, 464.586, 14.0442, 0.5144 ) }
    dend_41 { pt3dadd( 326.443, 464.999, 14.6229, 0.2288 ) }
    dend_41 { pt3dadd( 326.98, 465.98, 14.1026, 0.2864 ) }
    dend_41 { pt3dadd( 327.144, 467.039, 13.4722, 0.2962 ) }
    dend_41 { pt3dadd( 327.009, 468.122, 12.6398, 0.3158 ) }
    dend_41 { pt3dadd( 327.321, 469.193, 12.0741, 0.3464 ) }
    dend_41 { pt3dadd( 327.859, 470.179, 11.557, 0.4294 ) }
    dend_41 { pt3dadd( 328.424, 471.154, 11.0768, 0.4576 ) }
    dend_41 { pt3dadd( 329.069, 472.093, 10.8207, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 329.84, 472.938, 10.7296, 0.305 ) }
    dend_41 { pt3dadd( 330.959, 473.158, 10.64, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 2/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 374.587, 390.759, 21.691, 0.305 ) }
    dend_33 { pt3dadd( 374.809, 389.892, 21.9047, 0.284 ) }
    dend_33 { pt3dadd( 375.039, 388.776, 22.1351, 0.292 ) }
    dend_33 { pt3dadd( 375.385, 387.689, 22.2961, 0.308 ) }
    dend_33 { pt3dadd( 376.083, 386.794, 22.3509, 0.331 ) }
    dend_33 { pt3dadd( 376.78, 385.888, 22.2674, 0.4058 ) }
    dend_33 { pt3dadd( 377.434, 384.953, 22.1077, 0.3884 ) }
    dend_33 { pt3dadd( 377.996, 383.958, 21.9451, 0.4276 ) }
    dend_33 { pt3dadd( 378.458, 382.914, 21.8205, 0.3818 ) }
    dend_33 { pt3dadd( 378.772, 381.816, 21.7608, 0.4142 ) }
    dend_33 { pt3dadd( 379.251, 380.781, 21.5517, 0.3634 ) }
    dend_33 { pt3dadd( 379.608, 379.698, 21.3463, 0.3494 ) }
    dend_33 { pt3dadd( 379.941, 378.608, 21.1154, 0.3916 ) }
    dend_33 { pt3dadd( 380.809, 377.871, 20.9132, 0.3686 ) }
    dend_33 { pt3dadd( 381.688, 377.144, 20.7361, 0.3588 ) }
    dend_33 { pt3dadd( 382.566, 376.414, 20.5838, 0.4104 ) }
    dend_33 { pt3dadd( 383.447, 375.684, 20.4616, 0.397 ) }
    dend_33 { pt3dadd( 384.31, 374.935, 20.3331, 0.4434 ) }
    dend_33 { pt3dadd( 385.061, 374.077, 20.1401, 0.412 ) }
    dend_33 { pt3dadd( 385.573, 373.058, 19.8898, 0.4662 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 374.587, 390.759, 21.691, 0.305 ) }
    dend_32 { pt3dadd( 373.98, 389.681, 20.854, 0.2288 ) }
    dend_32 { pt3dadd( 373.704, 388.579, 20.5783, 0.3718 ) }
    dend_32 { pt3dadd( 373.772, 387.444, 20.3581, 0.4696 ) }
    dend_32 { pt3dadd( 374.286, 386.434, 20.1484, 0.564 ) }
    dend_32 { pt3dadd( 374.79, 385.411, 19.9234, 0.4746 ) }
    dend_32 { pt3dadd( 375.239, 384.36, 19.8189, 0.4492 ) }
    dend_32 { pt3dadd( 376.039, 383.548, 19.8924, 0.4068 ) }
    dend_32 { pt3dadd( 376.842, 382.737, 20.0758, 0.305 ) }
    dend_32 { pt3dadd( 377.406, 381.753, 20.44, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 32/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 371.64, 414.104, 22.8724, 0.282 ) }
    dend_30 { pt3dadd( 372.069, 413.776, 22.9844, 0.2882 ) }
    dend_30 { pt3dadd( 372.931, 413.032, 23.2184, 0.2996 ) }
    dend_30 { pt3dadd( 373.742, 412.23, 23.3728, 0.3232 ) }
    dend_30 { pt3dadd( 374.582, 411.454, 23.3929, 0.354 ) }
    dend_30 { pt3dadd( 375.467, 410.732, 23.2752, 0.473 ) }
    dend_30 { pt3dadd( 376.315, 409.978, 22.9708, 0.3946 ) }
    dend_30 { pt3dadd( 376.977, 409.074, 22.5239, 0.328 ) }
    dend_30 { pt3dadd( 377.367, 408.024, 22.0808, 0.2794 ) }
    dend_30 { pt3dadd( 377.431, 406.906, 21.673, 0.2838 ) }
    dend_30 { pt3dadd( 377.329, 405.777, 21.3048, 0.2914 ) }
    dend_30 { pt3dadd( 377.517, 404.68, 20.9522, 0.3068 ) }
    dend_30 { pt3dadd( 378.109, 403.728, 20.653, 0.329 ) }
    dend_30 { pt3dadd( 378.937, 402.951, 20.449, 0.402 ) }
    dend_30 { pt3dadd( 379.933, 402.41, 20.2652, 0.3818 ) }
    dend_30 { pt3dadd( 381.022, 402.095, 19.9744, 0.414 ) }
    dend_30 { pt3dadd( 382.101, 401.756, 19.5699, 0.3632 ) }
    dend_30 { pt3dadd( 383.02, 401.114, 19.1669, 0.349 ) }
    dend_30 { pt3dadd( 383.807, 400.299, 18.8249, 0.3912 ) }
    dend_30 { pt3dadd( 384.734, 399.648, 18.566, 0.3664 ) }
    dend_30 { pt3dadd( 385.795, 399.238, 18.3696, 0.362 ) }
    dend_30 { pt3dadd( 386.812, 398.729, 18.1456, 0.3802 ) }
    dend_30 { pt3dadd( 387.644, 397.963, 17.8671, 0.5162 ) }
    dend_30 { pt3dadd( 388.383, 397.1, 17.5782, 0.5002 ) }
    dend_30 { pt3dadd( 389.164, 396.27, 17.3034, 0.3998 ) }
    dend_30 { pt3dadd( 390.038, 395.541, 17.0386, 0.3288 ) }
    dend_30 { pt3dadd( 390.991, 394.921, 16.7522, 0.3228 ) }
    dend_30 { pt3dadd( 391.945, 394.305, 16.4291, 0.3894 ) }
    dend_30 { pt3dadd( 392.762, 393.522, 16.0743, 0.3648 ) }
    dend_30 { pt3dadd( 393.414, 392.596, 15.7297, 0.3518 ) }
    dend_30 { pt3dadd( 393.976, 391.606, 15.4622, 0.3974 ) }
    dend_30 { pt3dadd( 394.556, 390.623, 15.268, 0.3728 ) }
    dend_30 { pt3dadd( 395.28, 389.744, 15.0502, 0.3978 ) }
    dend_30 { pt3dadd( 396.245, 389.158, 14.7455, 0.332 ) }
    dend_30 { pt3dadd( 397.109, 388.444, 14.2208, 0.2966 ) }
    dend_30 { pt3dadd( 397.065, 387.331, 13.6318, 0.2684 ) }
    dend_30 { pt3dadd( 397.1, 386.206, 13.1275, 0.2626 ) }
    dend_30 { pt3dadd( 396.937, 385.092, 12.6382, 0.2542 ) }
    dend_30 { pt3dadd( 396.47, 384.06, 12.2745, 0.2288 ) }
    dend_30 { pt3dadd( 395.595, 383.354, 11.76, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 72/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 371.64, 414.104, 22.8724, 0.282 ) }
    dend_29 { pt3dadd( 371.991, 413.232, 21.0036, 0.2288 ) }
    dend_29 { pt3dadd( 372.028, 412.089, 21.0014, 0.2822 ) }
    dend_29 { pt3dadd( 372.029, 410.945, 21.0008, 0.2884 ) }
    dend_29 { pt3dadd( 372.029, 409.801, 21.0006, 0.3012 ) }
    dend_29 { pt3dadd( 372.029, 408.657, 21.0003, 0.3186 ) }
    dend_29 { pt3dadd( 372.029, 407.513, 21.0, 0.3816 ) }
    dend_29 { pt3dadd( 372.081, 406.371, 21.0, 0.3502 ) }
    dend_29 { pt3dadd( 372.213, 405.234, 21.0, 0.3248 ) }
    dend_29 { pt3dadd( 372.54, 404.139, 21.0, 0.3474 ) }
    dend_29 { pt3dadd( 372.706, 403.006, 21.0, 0.2796 ) }
    dend_29 { pt3dadd( 372.944, 401.887, 21.0, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 398.951, 424.538, 37.6678, 0.429 ) }
    dend_23 { pt3dadd( 399.001, 425.42, 36.7105, 0.2288 ) }
    dend_23 { pt3dadd( 399.54, 426.401, 36.4378, 0.2754 ) }
    dend_23 { pt3dadd( 400.456, 427.069, 36.3434, 0.2762 ) }
    dend_23 { pt3dadd( 401.512, 427.506, 36.2046, 0.2776 ) }
    dend_23 { pt3dadd( 402.51, 428.037, 36.015, 0.2802 ) }
    dend_23 { pt3dadd( 403.292, 428.856, 35.8235, 0.285 ) }
    dend_23 { pt3dadd( 403.943, 429.787, 35.5998, 0.2938 ) }
    dend_23 { pt3dadd( 404.697, 430.641, 35.3296, 0.3112 ) }
    dend_23 { pt3dadd( 405.389, 431.542, 35.0451, 0.3382 ) }
    dend_23 { pt3dadd( 406.078, 432.44, 34.7749, 0.413 ) }
    dend_23 { pt3dadd( 406.931, 433.193, 34.5134, 0.4328 ) }
    dend_23 { pt3dadd( 407.796, 433.931, 34.2975, 0.3594 ) }
    dend_23 { pt3dadd( 408.508, 434.817, 34.1256, 0.3002 ) }
    dend_23 { pt3dadd( 409.151, 435.754, 33.9172, 0.2748 ) }
    dend_23 { pt3dadd( 409.885, 436.625, 33.6683, 0.2752 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 410.4, 437.618, 33.5202, 0.2756 ) }
    dend_23 { pt3dadd( 410.755, 438.705, 33.5336, 0.2766 ) }
    dend_23 { pt3dadd( 411.294, 439.698, 33.7406, 0.2782 ) }
    dend_23 { pt3dadd( 411.971, 440.604, 34.1373, 0.2814 ) }
    dend_23 { pt3dadd( 412.54, 441.57, 34.6203, 0.2872 ) }
    dend_23 { pt3dadd( 413.101, 442.552, 35.0529, 0.2988 ) }
    dend_23 { pt3dadd( 413.935, 443.286, 35.3786, 0.3144 ) }
    dend_23 { pt3dadd( 414.963, 443.762, 35.6378, 0.374 ) }
    dend_23 { pt3dadd( 416.026, 444.177, 35.8518, 0.335 ) }
    dend_23 { pt3dadd( 417.053, 444.674, 35.9722, 0.302 ) }
    dend_23 { pt3dadd( 418.102, 445.129, 35.9632, 0.2782 ) }
    dend_23 { pt3dadd( 419.22, 445.196, 35.7689, 0.2814 ) }
    dend_23 { pt3dadd( 420.184, 444.641, 35.4637, 0.2872 ) }
    dend_23 { pt3dadd( 420.703, 443.649, 35.1397, 0.2976 ) }
    dend_23 { pt3dadd( 421.473, 442.818, 34.8866, 0.3196 ) }
    dend_23 { pt3dadd( 422.584, 442.755, 34.6993, 0.3474 ) }
    dend_23 { pt3dadd( 423.473, 443.444, 34.5363, 0.4604 ) }
    dend_23 { pt3dadd( 424.319, 444.213, 34.4977, 0.3728 ) }
    dend_23 { pt3dadd( 425.257, 444.866, 34.3515, 0.2796 ) }
    dend_23 { pt3dadd( 426.14, 445.588, 34.16, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 20/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 398.951, 424.538, 37.6678, 0.429 ) }
    dend_20 { pt3dadd( 399.262, 424.475, 37.5609, 0.4638 ) }
    dend_20 { pt3dadd( 400.354, 424.148, 37.3778, 0.4112 ) }
    dend_20 { pt3dadd( 401.48, 423.971, 37.2086, 0.423 ) }
    dend_20 { pt3dadd( 402.555, 423.596, 37.0062, 0.3734 ) }
    dend_20 { pt3dadd( 403.545, 423.038, 36.7318, 0.3988 ) }
    dend_20 { pt3dadd( 404.629, 422.69, 36.5296, 0.3338 ) }
    dend_20 { pt3dadd( 405.721, 422.361, 36.3521, 0.3 ) }
    dend_20 { pt3dadd( 406.773, 421.914, 36.2463, 0.2746 ) }
    dend_20 { pt3dadd( 407.845, 421.515, 36.1785, 0.2746 ) }
    dend_20 { pt3dadd( 408.828, 420.942, 35.9349, 0.2746 ) }
    // Section: apic_23, id: apic_23, parent: apic_21 (entry count 31/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 306.389, 436.3, 30.3663, 0.3368 ) }
    apic_23 { pt3dadd( 306.09, 436.514, 30.1784, 0.3372 ) }
    apic_23 { pt3dadd( 305.242, 437.252, 29.7088, 0.4174 ) }
    apic_23 { pt3dadd( 304.693, 438.217, 29.318, 0.4108 ) }
    apic_23 { pt3dadd( 304.241, 439.259, 29.0055, 0.464 ) }
    apic_23 { pt3dadd( 303.627, 440.215, 28.7473, 0.475 ) }
    apic_23 { pt3dadd( 302.964, 441.142, 28.5513, 0.4634 ) }
    apic_23 { pt3dadd( 302.368, 442.117, 28.4278, 0.3688 ) }
    apic_23 { pt3dadd( 301.858, 443.138, 28.2626, 0.3176 ) }
    apic_23 { pt3dadd( 301.534, 444.225, 27.9982, 0.3082 ) }
    apic_23 { pt3dadd( 301.197, 445.307, 27.6144, 0.3316 ) }
    apic_23 { pt3dadd( 300.543, 446.218, 27.2027, 0.4056 ) }
    apic_23 { pt3dadd( 299.821, 447.097, 26.8776, 0.3954 ) }
    apic_23 { pt3dadd( 299.361, 448.133, 26.6338, 0.4048 ) }
    apic_23 { pt3dadd( 298.989, 449.212, 26.4755, 0.5146 ) }
    apic_23 { pt3dadd( 298.359, 450.162, 26.4015, 0.4972 ) }
    apic_23 { pt3dadd( 297.549, 450.966, 26.3957, 0.3944 ) }
    apic_23 { pt3dadd( 296.732, 451.766, 26.3652, 0.3176 ) }
    apic_23 { pt3dadd( 296.212, 452.77, 26.06, 0.3084 ) }
    apic_23 { pt3dadd( 295.719, 453.792, 25.7724, 0.332 ) }
    apic_23 { pt3dadd( 295.603, 454.917, 25.3964, 0.4062 ) }
    apic_23 { pt3dadd( 295.303, 455.995, 24.8235, 0.3966 ) }
    apic_23 { pt3dadd( 294.858, 457.012, 24.1502, 0.407 ) }
    apic_23 { pt3dadd( 294.467, 458.054, 23.5409, 0.5188 ) }
    apic_23 { pt3dadd( 294.243, 459.157, 23.033, 0.5048 ) }
    apic_23 { pt3dadd( 293.948, 460.238, 22.5278, 0.4082 ) }
    apic_23 { pt3dadd( 293.392, 461.205, 22.0248, 0.3446 ) }
    apic_23 { pt3dadd( 292.609, 462.015, 21.5513, 0.3528 ) }
    apic_23 { pt3dadd( 291.978, 462.938, 21.0427, 0.4412 ) }
    apic_23 { pt3dadd( 291.523, 463.967, 20.5489, 0.4796 ) }
    apic_23 { pt3dadd( 291.028, 464.977, 20.0544, 0.4716 ) }
    apic_23 { pt3dadd( 290.329, 465.839, 19.6089, 0.3854 ) }
    apic_23 { pt3dadd( 289.397, 466.485, 19.2717, 0.3432 ) }
    apic_23 { pt3dadd( 288.691, 467.31, 19.0114, 0.3802 ) }
    apic_23 { pt3dadd( 288.642, 468.406, 18.6944, 0.3462 ) }
    apic_23 { pt3dadd( 288.855, 469.522, 18.3965, 0.324 ) }
    apic_23 { pt3dadd( 289.022, 470.645, 18.0685, 0.3138 ) }
    apic_23 { pt3dadd( 289.247, 471.748, 17.5805, 0.3728 ) }
    apic_23 { pt3dadd( 289.29, 472.855, 17.0158, 0.3328 ) }
    apic_23 { pt3dadd( 288.846, 473.854, 16.5082, 0.2982 ) }
    apic_23 { pt3dadd( 287.872, 474.188, 15.9916, 0.2712 ) }
    apic_23 { pt3dadd( 286.76, 474.142, 15.3895, 0.2684 ) }
    apic_23 { pt3dadd( 285.896, 474.678, 14.4885, 0.2626 ) }
    apic_23 { pt3dadd( 285.294, 475.551, 13.4454, 0.2542 ) }
    apic_23 { pt3dadd( 284.489, 476.028, 11.9643, 0.2288 ) }
    apic_23 { pt3dadd( 283.941, 476.133, 9.52, 0.2288 ) }
    // Section: apic_22, id: apic_22, parent: apic_21 (entry count 77/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 306.389, 436.3, 30.3663, 0.3368 ) }
    apic_22 { pt3dadd( 305.637, 435.787, 28.7185, 0.2288 ) }
    apic_22 { pt3dadd( 304.615, 435.97, 27.8281, 0.3648 ) }
    apic_22 { pt3dadd( 303.516, 436.061, 27.0969, 0.493 ) }
    apic_22 { pt3dadd( 302.401, 436.151, 26.5049, 0.4324 ) }
    apic_22 { pt3dadd( 301.299, 436.398, 26.1839, 0.3938 ) }
    apic_22 { pt3dadd( 300.348, 437.026, 26.2173, 0.4218 ) }
    apic_22 { pt3dadd( 299.497, 437.789, 26.2341, 0.4492 ) }
    apic_22 { pt3dadd( 298.746, 438.647, 26.3077, 0.3892 ) }
    apic_22 { pt3dadd( 297.903, 439.399, 26.4493, 0.3578 ) }
    apic_22 { pt3dadd( 296.815, 439.677, 26.404, 0.371 ) }
    apic_22 { pt3dadd( 295.765, 440.103, 26.1345, 0.5054 ) }
    apic_22 { pt3dadd( 294.729, 440.574, 25.8656, 0.4492 ) }
    apic_22 { pt3dadd( 293.698, 441.053, 25.5338, 0.456 ) }
    apic_22 { pt3dadd( 292.864, 441.733, 24.8192, 0.387 ) }
    apic_22 { pt3dadd( 292.46, 442.758, 24.1154, 0.4252 ) }
    apic_22 { pt3dadd( 291.729, 443.436, 23.4826, 0.3774 ) }
    apic_22 { pt3dadd( 290.62, 443.315, 22.9543, 0.4064 ) }
    apic_22 { pt3dadd( 289.517, 443.112, 22.4717, 0.3478 ) }
    apic_22 { pt3dadd( 288.489, 443.374, 21.7898, 0.3256 ) }
    apic_22 { pt3dadd( 287.488, 443.872, 21.2316, 0.324 ) }
    apic_22 { pt3dadd( 286.704, 444.637, 20.828, 0.3558 ) }
    apic_22 { pt3dadd( 285.96, 445.491, 20.4512, 0.4764 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_22 { pt3dadd( 285.234, 446.356, 20.022, 0.4008 ) }
    apic_22 { pt3dadd( 284.4, 447.084, 19.4293, 0.3394 ) }
    apic_22 { pt3dadd( 283.336, 447.378, 18.8149, 0.3016 ) }
    apic_22 { pt3dadd( 282.221, 447.53, 18.3118, 0.3194 ) }
    apic_22 { pt3dadd( 281.148, 447.898, 17.9792, 0.3834 ) }
    apic_22 { pt3dadd( 280.14, 448.43, 17.7888, 0.352 ) }
    apic_22 { pt3dadd( 279.096, 448.896, 17.6822, 0.3348 ) }
    apic_22 { pt3dadd( 278.029, 449.303, 17.5972, 0.3334 ) }
    apic_22 { pt3dadd( 276.928, 449.615, 17.4827, 0.4102 ) }
    apic_22 { pt3dadd( 275.805, 449.809, 17.319, 0.398 ) }
    apic_22 { pt3dadd( 274.663, 449.817, 17.1688, 0.439 ) }
    apic_22 { pt3dadd( 273.521, 449.769, 17.139, 0.434 ) }
    apic_22 { pt3dadd( 272.434, 449.411, 17.1751, 0.3616 ) }
    apic_22 { pt3dadd( 271.342, 449.076, 17.283, 0.3042 ) }
    apic_22 { pt3dadd( 270.355, 448.516, 17.435, 0.2824 ) }
    apic_22 { pt3dadd( 269.721, 447.587, 17.6239, 0.2882 ) }
    apic_22 { pt3dadd( 269.781, 446.494, 17.9353, 0.305 ) }
    apic_22 { pt3dadd( 270.204, 445.486, 18.2551, 0.305 ) }
    apic_22 { pt3dadd( 269.87, 444.444, 18.2, 0.4576 ) }
    // Section: apic_20, id: apic_20, parent: apic_2 (entry count 19/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 326.153, 414.938, 35.2111, 0.7528 ) }
    apic_20 { pt3dadd( 326.766, 413.948, 35.2517, 0.2288 ) }
    apic_20 { pt3dadd( 327.263, 412.947, 35.152, 0.2752 ) }
    apic_20 { pt3dadd( 327.71, 411.908, 35.044, 0.2758 ) }
    apic_20 { pt3dadd( 328.402, 411.008, 34.8404, 0.2768 ) }
    apic_20 { pt3dadd( 329.247, 410.244, 34.6774, 0.2786 ) }
    apic_20 { pt3dadd( 330.094, 409.48, 34.5671, 0.2822 ) }
    apic_20 { pt3dadd( 330.888, 408.661, 34.3823, 0.2888 ) }
    apic_20 { pt3dadd( 331.506, 407.716, 34.106, 0.3006 ) }
    apic_20 { pt3dadd( 331.897, 406.652, 33.8254, 0.3236 ) }
    apic_20 { pt3dadd( 332.289, 405.583, 33.5647, 0.3624 ) }
    apic_20 { pt3dadd( 332.923, 404.657, 33.2637, 0.4526 ) }
    apic_20 { pt3dadd( 333.721, 403.855, 32.8678, 0.5316 ) }
    apic_20 { pt3dadd( 334.57, 403.118, 32.3512, 0.4188 ) }
    apic_20 { pt3dadd( 335.312, 402.269, 31.9351, 0.3256 ) }
    apic_20 { pt3dadd( 335.885, 401.284, 31.7596, 0.2748 ) }
    apic_20 { pt3dadd( 336.473, 400.304, 31.85, 0.275 ) }
    apic_20 { pt3dadd( 337.133, 399.373, 32.0328, 0.2756 ) }
    apic_20 { pt3dadd( 337.841, 398.476, 32.1406, 0.2764 ) }
    apic_20 { pt3dadd( 338.654, 397.673, 32.0424, 0.278 ) }
    apic_20 { pt3dadd( 339.5, 396.926, 31.7234, 0.2808 ) }
    apic_20 { pt3dadd( 340.165, 396.006, 31.3569, 0.2864 ) }
    apic_20 { pt3dadd( 340.85, 395.102, 31.0005, 0.2962 ) }
    apic_20 { pt3dadd( 341.618, 394.261, 30.7342, 0.3156 ) }
    apic_20 { pt3dadd( 342.444, 393.477, 30.5421, 0.3464 ) }
    apic_20 { pt3dadd( 343.328, 392.757, 30.3705, 0.4278 ) }
    apic_20 { pt3dadd( 344.114, 391.934, 30.1428, 0.4612 ) }
    apic_20 { pt3dadd( 344.834, 391.051, 29.8973, 0.4068 ) }
    apic_20 { pt3dadd( 345.64, 390.25, 29.6234, 0.4136 ) }
    apic_20 { pt3dadd( 346.522, 389.534, 29.3065, 0.3608 ) }
    apic_20 { pt3dadd( 347.431, 388.854, 28.9598, 0.3522 ) }
    apic_20 { pt3dadd( 348.361, 388.203, 28.6264, 0.3608 ) }
    apic_20 { pt3dadd( 349.325, 387.595, 28.3917, 0.4854 ) }
    apic_20 { pt3dadd( 350.294, 386.99, 28.2758, 0.4186 ) }
    apic_20 { pt3dadd( 351.221, 386.323, 28.2058, 0.3674 ) }
    apic_20 { pt3dadd( 352.077, 385.567, 28.1285, 0.378 ) }
    apic_20 { pt3dadd( 352.907, 384.781, 28.0529, 0.3424 ) }
    apic_20 { pt3dadd( 353.821, 384.104, 27.9352, 0.3156 ) }
    apic_20 { pt3dadd( 354.806, 383.534, 27.6538, 0.3044 ) }
    apic_20 { pt3dadd( 355.71, 382.866, 27.2212, 0.3246 ) }
    apic_20 { pt3dadd( 356.584, 382.146, 26.8379, 0.3928 ) }
    apic_20 { pt3dadd( 357.562, 381.58, 26.5376, 0.3708 ) }
    apic_20 { pt3dadd( 358.608, 381.133, 26.2727, 0.3642 ) }
    apic_20 { pt3dadd( 359.618, 380.611, 26.0623, 0.4138 ) }
    apic_20 { pt3dadd( 360.616, 380.055, 25.9071, 0.4344 ) }
    apic_20 { pt3dadd( 361.589, 379.459, 25.8046, 0.3624 ) }
    apic_20 { pt3dadd( 362.332, 378.621, 25.7193, 0.3058 ) }
    apic_20 { pt3dadd( 362.82, 377.595, 25.5013, 0.2852 ) }
    apic_20 { pt3dadd( 363.29, 376.608, 24.8202, 0.2942 ) }
    apic_20 { pt3dadd( 364.295, 376.123, 24.3167, 0.3116 ) }
    apic_20 { pt3dadd( 365.424, 375.996, 24.0048, 0.3392 ) }
    apic_20 { pt3dadd( 366.538, 375.759, 23.7857, 0.4148 ) }
    apic_20 { pt3dadd( 367.614, 375.421, 23.6328, 0.436 ) }
    apic_20 { pt3dadd( 368.752, 375.494, 23.4862, 0.3652 ) }
    apic_20 { pt3dadd( 369.889, 375.392, 23.3339, 0.311 ) }
    apic_20 { pt3dadd( 370.995, 375.318, 23.2145, 0.295 ) }
    apic_20 { pt3dadd( 372.014, 375.835, 23.0828, 0.3132 ) }
    apic_20 { pt3dadd( 373.035, 376.335, 22.8735, 0.342 ) }
    apic_20 { pt3dadd( 374.135, 376.583, 22.6336, 0.4198 ) }
    apic_20 { pt3dadd( 375.276, 376.535, 22.4143, 0.4454 ) }
    apic_20 { pt3dadd( 376.413, 376.442, 22.1983, 0.3826 ) }
    apic_20 { pt3dadd( 377.547, 376.33, 21.9918, 0.344 ) }
    apic_20 { pt3dadd( 378.686, 376.228, 21.8779, 0.3518 ) }
    apic_20 { pt3dadd( 379.826, 376.202, 21.7427, 0.4392 ) }
    apic_20 { pt3dadd( 380.961, 376.289, 21.4705, 0.4762 ) }
    apic_20 { pt3dadd( 382.09, 376.375, 21.0837, 0.4654 ) }
    apic_20 { pt3dadd( 383.215, 376.461, 20.6117, 0.3724 ) }
    apic_20 { pt3dadd( 384.335, 376.548, 20.0801, 0.3252 ) }
    apic_20 { pt3dadd( 385.453, 376.637, 19.5241, 0.3162 ) }
    apic_20 { pt3dadd( 386.573, 376.724, 19.0007, 0.3772 ) }
    apic_20 { pt3dadd( 387.699, 376.758, 18.5412, 0.3408 ) }
    apic_20 { pt3dadd( 388.825, 376.78, 18.0978, 0.3126 ) }
    apic_20 { pt3dadd( 389.835, 377.171, 17.654, 0.299 ) }
    apic_20 { pt3dadd( 390.726, 377.87, 17.2797, 0.3146 ) }
    apic_20 { pt3dadd( 391.746, 378.304, 16.9232, 0.3744 ) }
    apic_20 { pt3dadd( 392.87, 378.371, 16.5573, 0.3358 ) }
    apic_20 { pt3dadd( 393.975, 378.151, 16.2345, 0.3036 ) }
    apic_20 { pt3dadd( 394.98, 377.639, 15.993, 0.2814 ) }
    apic_20 { pt3dadd( 395.879, 376.939, 15.7853, 0.287 ) }
    apic_20 { pt3dadd( 396.739, 376.19, 15.5776, 0.2988 ) }
    apic_20 { pt3dadd( 397.661, 375.523, 15.3709, 0.3142 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_20 { pt3dadd( 398.652, 374.962, 15.132, 0.3734 ) }
    apic_20 { pt3dadd( 399.638, 374.396, 14.8447, 0.3338 ) }
    apic_20 { pt3dadd( 400.57, 373.747, 14.5296, 0.3 ) }
    apic_20 { pt3dadd( 401.411, 372.989, 14.1992, 0.2746 ) }
    apic_20 { pt3dadd( 402.145, 372.123, 13.8657, 0.2746 ) }
    apic_20 { pt3dadd( 402.394, 371.068, 13.5806, 0.2746 ) }
    apic_20 { pt3dadd( 402.187, 369.952, 13.3974, 0.2746 ) }
    apic_20 { pt3dadd( 401.958, 368.834, 13.2754, 0.2746 ) }
    apic_20 { pt3dadd( 401.824, 367.699, 13.1974, 0.2746 ) }
    apic_20 { pt3dadd( 401.859, 366.558, 13.1349, 0.2746 ) }
    apic_20 { pt3dadd( 402.42, 365.604, 13.126, 0.2746 ) }
    apic_20 { pt3dadd( 403.284, 364.862, 13.093, 0.2746 ) }
    apic_20 { pt3dadd( 404.221, 364.207, 13.0783, 0.2746 ) }
    apic_20 { pt3dadd( 405.124, 363.503, 13.1218, 0.2746 ) }
    apic_20 { pt3dadd( 405.865, 362.635, 13.192, 0.2746 ) }
    apic_20 { pt3dadd( 406.581, 361.744, 13.2973, 0.2746 ) }
    apic_20 { pt3dadd( 407.216, 360.795, 13.4131, 0.2746 ) }
    apic_20 { pt3dadd( 407.745, 359.781, 13.4924, 0.2746 ) }
    apic_20 { pt3dadd( 408.35, 358.811, 13.5485, 0.2746 ) }
    apic_20 { pt3dadd( 408.996, 357.867, 13.6293, 0.2744 ) }
    apic_20 { pt3dadd( 409.358, 356.786, 13.7061, 0.2744 ) }
    apic_20 { pt3dadd( 409.655, 355.681, 13.7357, 0.2742 ) }
    apic_20 { pt3dadd( 409.999, 354.591, 13.6986, 0.274 ) }
    apic_20 { pt3dadd( 410.303, 353.488, 13.6586, 0.2736 ) }
    apic_20 { pt3dadd( 410.512, 352.363, 13.6522, 0.2728 ) }
    apic_20 { pt3dadd( 410.854, 351.272, 13.6587, 0.2712 ) }
    apic_20 { pt3dadd( 411.476, 350.315, 13.6688, 0.2684 ) }
    apic_20 { pt3dadd( 412.155, 349.394, 13.6441, 0.2626 ) }
    apic_20 { pt3dadd( 412.895, 348.521, 13.6853, 0.2542 ) }
    apic_20 { pt3dadd( 413.77, 347.784, 13.706, 0.2288 ) }
    apic_20 { pt3dadd( 414.814, 347.318, 13.72, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 31/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 326.153, 414.938, 35.2111, 0.7528 ) }
    apic_3 { pt3dadd( 325.426, 414.759, 35.2556, 0.689 ) }
    apic_3 { pt3dadd( 324.629, 413.949, 35.3352, 0.5894 ) }
    apic_3 { pt3dadd( 323.872, 413.093, 35.4315, 0.5434 ) }
    apic_3 { pt3dadd( 323.146, 412.21, 35.5432, 0.4718 ) }
    apic_3 { pt3dadd( 322.15, 411.656, 35.6776, 0.4998 ) }
    apic_3 { pt3dadd( 321.125, 411.157, 35.8966, 0.6882 ) }
    apic_3 { pt3dadd( 320.238, 410.445, 36.1556, 0.832 ) }
    apic_3 { pt3dadd( 319.486, 409.589, 36.3885, 0.9522 ) }
    apic_3 { pt3dadd( 319.06, 408.532, 36.601, 0.97 ) }
    apic_3 { pt3dadd( 318.71, 407.447, 36.841, 0.8552 ) }
    apic_3 { pt3dadd( 318.413, 406.349, 37.1316, 0.9018 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 43/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 289.449, 472.969, 40.0571, 0.4224 ) }
    dend_10 { pt3dadd( 289.14, 474.253, 40.2836, 0.45 ) }
    dend_10 { pt3dadd( 288.906, 475.37, 40.4928, 0.3922 ) }
    dend_10 { pt3dadd( 288.635, 476.475, 40.7596, 0.3556 ) }
    dend_10 { pt3dadd( 288.27, 477.55, 41.0771, 0.4044 ) }
    dend_10 { pt3dadd( 287.848, 478.604, 41.4299, 0.3858 ) }
    dend_10 { pt3dadd( 287.402, 479.647, 41.7892, 0.423 ) }
    dend_10 { pt3dadd( 286.954, 480.69, 42.1266, 0.3734 ) }
    dend_10 { pt3dadd( 286.523, 481.742, 42.4441, 0.3988 ) }
    dend_10 { pt3dadd( 286.161, 482.817, 42.782, 0.3338 ) }
    dend_10 { pt3dadd( 285.894, 483.915, 43.1911, 0.3 ) }
    dend_10 { pt3dadd( 285.49, 484.955, 43.7083, 0.2746 ) }
    dend_10 { pt3dadd( 284.806, 485.826, 44.3008, 0.2746 ) }
    dend_10 { pt3dadd( 284.104, 486.679, 45.0106, 0.2746 ) }
    dend_10 { pt3dadd( 283.312, 487.397, 45.9469, 0.2746 ) }
    dend_10 { pt3dadd( 282.415, 488.003, 46.8521, 0.2746 ) }
    dend_10 { pt3dadd( 281.652, 488.785, 47.6451, 0.2746 ) }
    dend_10 { pt3dadd( 280.838, 489.396, 48.8578, 0.2746 ) }
    dend_10 { pt3dadd( 280.47, 490.171, 50.6489, 0.2746 ) }
    dend_10 { pt3dadd( 280.177, 491.11, 52.0635, 0.2746 ) }
    dend_10 { pt3dadd( 279.849, 492.087, 53.2792, 0.2746 ) }
    dend_10 { pt3dadd( 279.531, 493.101, 54.3057, 0.2746 ) }
    dend_10 { pt3dadd( 279.257, 494.159, 55.1222, 0.2746 ) }
    dend_10 { pt3dadd( 279.154, 495.257, 55.7878, 0.2746 ) }
    dend_10 { pt3dadd( 279.186, 496.371, 56.4214, 0.2746 ) }
    dend_10 { pt3dadd( 279.342, 497.461, 57.1138, 0.2746 ) }
    dend_10 { pt3dadd( 279.882, 498.385, 57.8556, 0.2746 ) }
    dend_10 { pt3dadd( 280.415, 499.328, 58.5936, 0.2746 ) }
    dend_10 { pt3dadd( 280.6, 500.41, 59.2746, 0.2746 ) }
    dend_10 { pt3dadd( 280.508, 501.509, 59.943, 0.2746 ) }
    dend_10 { pt3dadd( 280.163, 502.497, 60.9697, 0.2746 ) }
    dend_10 { pt3dadd( 279.558, 503.351, 62.0833, 0.2746 ) }
    dend_10 { pt3dadd( 278.829, 504.186, 62.7752, 0.2746 ) }
    dend_10 { pt3dadd( 278.078, 505.025, 63.2752, 0.2746 ) }
    dend_10 { pt3dadd( 277.458, 505.976, 63.6048, 0.2746 ) }
    dend_10 { pt3dadd( 276.877, 506.959, 63.7806, 0.2744 ) }
    dend_10 { pt3dadd( 276.263, 507.925, 63.8369, 0.2744 ) }
    dend_10 { pt3dadd( 275.688, 508.913, 63.84, 0.2742 ) }
    dend_10 { pt3dadd( 275.509, 510.043, 63.84, 0.274 ) }
    dend_10 { pt3dadd( 275.479, 511.186, 63.84, 0.2736 ) }
    dend_10 { pt3dadd( 274.829, 512.129, 63.84, 0.2728 ) }
    dend_10 { pt3dadd( 274.213, 513.092, 63.84, 0.2712 ) }
    dend_10 { pt3dadd( 273.926, 514.199, 63.84, 0.2684 ) }
    dend_10 { pt3dadd( 273.289, 515.15, 63.84, 0.2626 ) }
    dend_10 { pt3dadd( 272.687, 516.122, 63.84, 0.2542 ) }
    dend_10 { pt3dadd( 272.471, 517.246, 63.84, 0.2288 ) }
    dend_10 { pt3dadd( 272.158, 518.346, 63.84, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 90/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 289.449, 472.969, 40.0571, 0.4224 ) }
    dend_9 { pt3dadd( 288.783, 473.203, 39.6743, 0.2288 ) }
    dend_9 { pt3dadd( 287.819, 473.794, 39.4248, 0.2746 ) }
    dend_9 { pt3dadd( 286.954, 474.54, 39.3361, 0.2746 ) }
    dend_9 { pt3dadd( 286.152, 475.351, 39.1423, 0.2746 ) }
    dend_9 { pt3dadd( 285.457, 476.251, 38.845, 0.2746 ) }
    dend_9 { pt3dadd( 284.823, 477.19, 38.4532, 0.2746 ) }
    dend_9 { pt3dadd( 284.148, 478.092, 37.9705, 0.2746 ) }
    dend_9 { pt3dadd( 283.404, 478.943, 37.5382, 0.2746 ) }
    dend_9 { pt3dadd( 282.459, 479.564, 37.1456, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( 281.51, 480.178, 36.7189, 0.2746 ) }
    dend_9 { pt3dadd( 280.549, 480.784, 36.3902, 0.2746 ) }
    dend_9 { pt3dadd( 279.454, 481.092, 36.1362, 0.2746 ) }
    dend_9 { pt3dadd( 278.332, 481.299, 35.9484, 0.2744 ) }
    dend_9 { pt3dadd( 277.286, 481.76, 35.7888, 0.2744 ) }
    dend_9 { pt3dadd( 276.282, 482.302, 35.6672, 0.2742 ) }
    dend_9 { pt3dadd( 275.398, 483.029, 35.6034, 0.274 ) }
    dend_9 { pt3dadd( 274.655, 483.897, 35.5295, 0.2736 ) }
    dend_9 { pt3dadd( 273.919, 484.772, 35.4267, 0.2728 ) }
    dend_9 { pt3dadd( 273.107, 485.578, 35.3648, 0.2712 ) }
    dend_9 { pt3dadd( 272.178, 486.245, 35.294, 0.2684 ) }
    dend_9 { pt3dadd( 271.049, 486.418, 35.1806, 0.2626 ) }
    dend_9 { pt3dadd( 269.907, 486.443, 35.0638, 0.2542 ) }
    dend_9 { pt3dadd( 268.933, 487.039, 34.9328, 0.2288 ) }
    dend_9 { pt3dadd( 267.924, 487.573, 34.72, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 325.926, 453.89, 43.1707, 0.334 ) }
    dend_7 { pt3dadd( 326.129, 454.525, 43.5548, 0.3 ) }
    dend_7 { pt3dadd( 326.247, 455.652, 43.9208, 0.2748 ) }
    dend_7 { pt3dadd( 326.089, 456.772, 44.3022, 0.2748 ) }
    dend_7 { pt3dadd( 325.691, 457.839, 44.5085, 0.2752 ) }
    dend_7 { pt3dadd( 325.562, 458.972, 44.557, 0.2756 ) }
    dend_7 { pt3dadd( 325.743, 460.102, 44.5413, 0.2766 ) }
    dend_7 { pt3dadd( 325.978, 461.221, 44.5085, 0.2782 ) }
    dend_7 { pt3dadd( 326.295, 462.319, 44.5662, 0.2816 ) }
    dend_7 { pt3dadd( 326.603, 463.409, 44.7513, 0.2872 ) }
    dend_7 { pt3dadd( 326.549, 464.544, 45.0008, 0.2992 ) }
    dend_7 { pt3dadd( 326.268, 465.645, 45.2931, 0.315 ) }
    dend_7 { pt3dadd( 325.784, 466.668, 45.6282, 0.375 ) }
    dend_7 { pt3dadd( 325.158, 467.616, 45.969, 0.337 ) }
    dend_7 { pt3dadd( 324.523, 468.561, 46.2546, 0.3056 ) }
    dend_7 { pt3dadd( 323.914, 469.523, 46.5338, 0.285 ) }
    dend_7 { pt3dadd( 323.292, 470.472, 46.881, 0.2938 ) }
    dend_7 { pt3dadd( 322.665, 471.416, 47.2604, 0.3112 ) }
    dend_7 { pt3dadd( 322.089, 472.391, 47.6378, 0.3382 ) }
    dend_7 { pt3dadd( 321.622, 473.417, 48.0656, 0.413 ) }
    dend_7 { pt3dadd( 321.355, 474.508, 48.575, 0.4328 ) }
    dend_7 { pt3dadd( 321.121, 475.601, 49.1148, 0.3594 ) }
    dend_7 { pt3dadd( 320.699, 476.644, 49.6076, 0.3002 ) }
    dend_7 { pt3dadd( 320.26, 477.686, 50.0184, 0.2748 ) }
    dend_7 { pt3dadd( 319.951, 478.775, 50.3745, 0.2752 ) }
    dend_7 { pt3dadd( 319.812, 479.9, 50.6946, 0.2756 ) }
    dend_7 { pt3dadd( 319.773, 481.036, 50.9891, 0.2766 ) }
    dend_7 { pt3dadd( 319.571, 482.148, 51.2627, 0.2782 ) }
    dend_7 { pt3dadd( 319.144, 483.204, 51.4867, 0.2814 ) }
    dend_7 { pt3dadd( 318.629, 484.223, 51.6488, 0.287 ) }
    dend_7 { pt3dadd( 318.077, 485.223, 51.7619, 0.2988 ) }
    dend_7 { pt3dadd( 317.609, 486.263, 51.8188, 0.3142 ) }
    dend_7 { pt3dadd( 317.298, 487.362, 51.7924, 0.3734 ) }
    dend_7 { pt3dadd( 317.066, 488.482, 51.7146, 0.3338 ) }
    dend_7 { pt3dadd( 316.879, 489.61, 51.6222, 0.3 ) }
    dend_7 { pt3dadd( 316.76, 490.746, 51.5281, 0.2746 ) }
    dend_7 { pt3dadd( 316.672, 491.886, 51.4872, 0.2746 ) }
    dend_7 { pt3dadd( 316.491, 493.014, 51.5589, 0.2746 ) }
    dend_7 { pt3dadd( 316.29, 494.136, 51.7415, 0.2746 ) }
    dend_7 { pt3dadd( 316.129, 495.264, 51.9632, 0.2746 ) }
    dend_7 { pt3dadd( 315.911, 496.384, 52.1758, 0.2746 ) }
    dend_7 { pt3dadd( 315.762, 497.512, 52.3662, 0.2746 ) }
    dend_7 { pt3dadd( 315.73, 498.654, 52.5154, 0.2746 ) }
    dend_7 { pt3dadd( 315.667, 499.793, 52.6159, 0.2746 ) }
    dend_7 { pt3dadd( 315.422, 500.903, 52.6708, 0.2746 ) }
    dend_7 { pt3dadd( 315.001, 501.964, 52.7562, 0.2746 ) }
    dend_7 { pt3dadd( 314.456, 502.965, 52.8769, 0.2746 ) }
    dend_7 { pt3dadd( 313.933, 503.977, 53.0054, 0.2748 ) }
    dend_7 { pt3dadd( 313.703, 505.078, 53.2193, 0.2748 ) }
    dend_7 { pt3dadd( 313.712, 506.212, 53.5433, 0.275 ) }
    dend_7 { pt3dadd( 313.903, 507.328, 53.8684, 0.2756 ) }
    dend_7 { pt3dadd( 314.178, 508.432, 54.1668, 0.2764 ) }
    dend_7 { pt3dadd( 314.126, 509.542, 54.4995, 0.278 ) }
    dend_7 { pt3dadd( 313.773, 510.62, 54.8226, 0.2808 ) }
    dend_7 { pt3dadd( 313.536, 511.729, 55.0553, 0.2864 ) }
    dend_7 { pt3dadd( 313.424, 512.865, 55.1916, 0.2962 ) }
    dend_7 { pt3dadd( 313.207, 513.985, 55.258, 0.3154 ) }
    dend_7 { pt3dadd( 312.882, 515.081, 55.2661, 0.3462 ) }
    dend_7 { pt3dadd( 312.585, 516.187, 55.2233, 0.4276 ) }
    dend_7 { pt3dadd( 312.342, 517.303, 55.1326, 0.4608 ) }
    dend_7 { pt3dadd( 312.191, 518.435, 54.9707, 0.4062 ) }
    dend_7 { pt3dadd( 312.164, 519.573, 54.7389, 0.4122 ) }
    dend_7 { pt3dadd( 312.214, 520.711, 54.4964, 0.3596 ) }
    dend_7 { pt3dadd( 312.223, 521.854, 54.3698, 0.3424 ) }
    dend_7 { pt3dadd( 312.405, 522.98, 54.4015, 0.3786 ) }
    dend_7 { pt3dadd( 312.889, 524.008, 54.5143, 0.3436 ) }
    dend_7 { pt3dadd( 313.463, 524.997, 54.6462, 0.318 ) }
    dend_7 { pt3dadd( 314.084, 525.953, 54.8436, 0.309 ) }
    dend_7 { pt3dadd( 314.591, 526.973, 55.0774, 0.3332 ) }
    dend_7 { pt3dadd( 314.883, 528.07, 55.3622, 0.4082 ) }
    dend_7 { pt3dadd( 315.076, 529.188, 55.7116, 0.4004 ) }
    dend_7 { pt3dadd( 315.523, 530.222, 56.1095, 0.414 ) }
    dend_7 { pt3dadd( 315.997, 531.248, 56.5466, 0.5314 ) }
    dend_7 { pt3dadd( 316.644, 532.153, 57.1774, 0.5294 ) }
    dend_7 { pt3dadd( 317.104, 533.172, 57.7637, 0.4498 ) }
    dend_7 { pt3dadd( 317.664, 534.145, 58.2994, 0.4406 ) }
    dend_7 { pt3dadd( 318.297, 535.069, 58.856, 0.4378 ) }
    dend_7 { pt3dadd( 318.59, 536.129, 59.5762, 0.3644 ) }
    dend_7 { pt3dadd( 318.451, 537.201, 60.4131, 0.3304 ) }
    dend_7 { pt3dadd( 318.717, 538.138, 61.88, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 95/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 325.926, 453.89, 43.1707, 0.334 ) }
    dend_6 { pt3dadd( 326.038, 454.165, 43.5666, 0.4576 ) }
    dend_6 { pt3dadd( 326.353, 455.158, 44.6804, 0.3612 ) }
    dend_6 { pt3dadd( 326.617, 456.233, 45.3365, 0.3034 ) }
    dend_6 { pt3dadd( 326.932, 457.315, 45.792, 0.281 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_6 { pt3dadd( 327.483, 458.273, 46.3478, 0.2862 ) }
    dend_6 { pt3dadd( 328.441, 458.729, 46.9031, 0.2966 ) }
    dend_6 { pt3dadd( 329.553, 458.92, 47.3634, 0.3136 ) }
    dend_6 { pt3dadd( 330.613, 459.31, 47.6185, 0.356 ) }
    dend_6 { pt3dadd( 331.365, 460.126, 47.5045, 0.3814 ) }
    dend_6 { pt3dadd( 331.874, 461.146, 47.32, 0.6864 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 385.573, 373.058, 19.8898, 0.4662 ) }
    dend_35 { pt3dadd( 386.204, 372.365, 19.7128, 0.4792 ) }
    dend_35 { pt3dadd( 386.939, 371.491, 19.5218, 0.4706 ) }
    dend_35 { pt3dadd( 387.588, 370.553, 19.3453, 0.3836 ) }
    dend_35 { pt3dadd( 388.129, 369.55, 19.1587, 0.3396 ) }
    dend_35 { pt3dadd( 388.553, 368.492, 18.9497, 0.3736 ) }
    dend_35 { pt3dadd( 389.04, 367.461, 18.7246, 0.3342 ) }
    dend_35 { pt3dadd( 389.736, 366.563, 18.495, 0.3006 ) }
    dend_35 { pt3dadd( 390.532, 365.747, 18.2717, 0.2756 ) }
    dend_35 { pt3dadd( 391.329, 364.931, 18.0512, 0.2764 ) }
    dend_35 { pt3dadd( 392.061, 364.061, 17.8033, 0.278 ) }
    dend_35 { pt3dadd( 392.497, 363.023, 17.4521, 0.281 ) }
    dend_35 { pt3dadd( 392.243, 361.95, 17.0145, 0.2866 ) }
    dend_35 { pt3dadd( 391.953, 360.855, 16.6113, 0.297 ) }
    dend_35 { pt3dadd( 392.045, 359.733, 16.2231, 0.3156 ) }
    dend_35 { pt3dadd( 392.551, 358.724, 15.9045, 0.354 ) }
    dend_35 { pt3dadd( 393.144, 357.749, 15.6969, 0.406 ) }
    dend_35 { pt3dadd( 393.65, 356.727, 15.5101, 0.5958 ) }
    dend_35 { pt3dadd( 394.077, 355.671, 15.2725, 0.493 ) }
    dend_35 { pt3dadd( 394.516, 354.618, 15.0262, 0.4514 ) }
    dend_35 { pt3dadd( 394.971, 353.573, 14.783, 0.337 ) }
    dend_35 { pt3dadd( 395.906, 352.96, 14.4919, 0.3058 ) }
    dend_35 { pt3dadd( 396.966, 352.564, 14.0928, 0.2852 ) }
    dend_35 { pt3dadd( 397.963, 352.034, 13.6539, 0.2954 ) }
    dend_35 { pt3dadd( 398.797, 351.267, 13.3039, 0.3078 ) }
    dend_35 { pt3dadd( 399.543, 350.413, 12.9416, 0.3616 ) }
    dend_35 { pt3dadd( 400.449, 349.754, 12.4068, 0.3136 ) }
    dend_35 { pt3dadd( 401.417, 349.195, 11.8654, 0.2542 ) }
    dend_35 { pt3dadd( 402.002, 348.348, 10.64, 0.2288 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 385.573, 373.058, 19.8898, 0.4662 ) }
    dend_34 { pt3dadd( 385.376, 372.697, 21.2623, 0.2288 ) }
    dend_34 { pt3dadd( 385.234, 371.733, 22.2331, 0.3266 ) }
    dend_34 { pt3dadd( 385.314, 370.596, 22.4015, 0.3976 ) }
    dend_34 { pt3dadd( 385.488, 369.467, 22.5606, 0.3734 ) }
    dend_34 { pt3dadd( 385.756, 368.359, 22.7627, 0.3988 ) }
    dend_34 { pt3dadd( 386.1, 367.272, 22.9605, 0.334 ) }
    dend_34 { pt3dadd( 386.415, 366.174, 23.1102, 0.3 ) }
    dend_34 { pt3dadd( 386.48, 365.039, 23.2217, 0.2748 ) }
    dend_34 { pt3dadd( 386.424, 363.897, 23.3072, 0.2748 ) }
    dend_34 { pt3dadd( 386.465, 362.754, 23.3196, 0.2752 ) }
    dend_34 { pt3dadd( 386.528, 361.613, 23.2394, 0.2756 ) }
    dend_34 { pt3dadd( 386.631, 360.475, 23.0902, 0.2766 ) }
    dend_34 { pt3dadd( 387.138, 359.465, 22.9872, 0.2784 ) }
    dend_34 { pt3dadd( 387.919, 358.637, 22.9337, 0.2816 ) }
    dend_34 { pt3dadd( 388.671, 357.775, 22.8884, 0.2874 ) }
    dend_34 { pt3dadd( 389.269, 356.802, 22.8427, 0.2994 ) }
    dend_34 { pt3dadd( 390.044, 355.966, 22.8215, 0.3154 ) }
    dend_34 { pt3dadd( 390.943, 355.262, 22.9497, 0.376 ) }
    dend_34 { pt3dadd( 391.772, 354.475, 23.0717, 0.3386 ) }
    dend_34 { pt3dadd( 392.719, 353.837, 23.1768, 0.3086 ) }
    dend_34 { pt3dadd( 393.786, 353.428, 23.1701, 0.2904 ) }
    dend_34 { pt3dadd( 394.919, 353.55, 23.0511, 0.305 ) }
    dend_34 { pt3dadd( 396.034, 353.795, 22.8602, 0.3248 ) }
    dend_34 { pt3dadd( 397.148, 353.581, 22.548, 0.3982 ) }
    dend_34 { pt3dadd( 398.147, 353.048, 22.1804, 0.356 ) }
    dend_34 { pt3dadd( 399.256, 352.924, 21.56, 0.4576 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 62/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 408.828, 420.942, 35.9349, 0.2746 ) }
    dend_22 { pt3dadd( 409.757, 421.335, 35.7605, 0.2746 ) }
    dend_22 { pt3dadd( 410.896, 421.333, 35.5144, 0.2746 ) }
    dend_22 { pt3dadd( 412.032, 421.382, 35.2766, 0.2746 ) }
    dend_22 { pt3dadd( 413.165, 421.246, 35.1008, 0.2746 ) }
    dend_22 { pt3dadd( 414.285, 421.017, 35.0454, 0.2748 ) }
    dend_22 { pt3dadd( 415.422, 420.892, 35.091, 0.2748 ) }
    dend_22 { pt3dadd( 416.562, 420.82, 35.1355, 0.2752 ) }
    dend_22 { pt3dadd( 417.664, 420.582, 35.1406, 0.2756 ) }
    dend_22 { pt3dadd( 418.572, 419.905, 35.023, 0.2766 ) }
    dend_22 { pt3dadd( 419.319, 419.061, 34.6626, 0.2784 ) }
    dend_22 { pt3dadd( 420.225, 418.4, 34.1275, 0.2818 ) }
    dend_22 { pt3dadd( 421.209, 417.862, 33.6252, 0.2878 ) }
    dend_22 { pt3dadd( 422.27, 417.49, 33.1332, 0.3002 ) }
    dend_22 { pt3dadd( 423.354, 417.189, 32.6309, 0.3168 ) }
    dend_22 { pt3dadd( 424.408, 416.784, 32.2412, 0.3786 ) }
    dend_22 { pt3dadd( 425.417, 416.257, 31.9771, 0.3434 ) }
    dend_22 { pt3dadd( 426.423, 415.722, 31.7352, 0.3176 ) }
    dend_22 { pt3dadd( 427.477, 415.318, 31.4325, 0.3068 ) }
    dend_22 { pt3dadd( 428.599, 415.209, 31.1525, 0.3364 ) }
    dend_22 { pt3dadd( 429.733, 415.312, 30.9296, 0.3786 ) }
    dend_22 { pt3dadd( 430.868, 415.393, 30.6838, 0.5194 ) }
    dend_22 { pt3dadd( 432.003, 415.323, 30.4419, 0.4762 ) }
    dend_22 { pt3dadd( 433.13, 415.148, 30.2266, 0.5006 ) }
    dend_22 { pt3dadd( 434.251, 414.948, 29.9816, 0.4966 ) }
    dend_22 { pt3dadd( 435.38, 414.828, 29.6884, 0.498 ) }
    dend_22 { pt3dadd( 436.515, 414.865, 29.3868, 0.4588 ) }
    dend_22 { pt3dadd( 437.641, 415.032, 29.1522, 0.3604 ) }
    dend_22 { pt3dadd( 438.765, 415.235, 29.0416, 0.3022 ) }
    dend_22 { pt3dadd( 439.802, 415.675, 29.1158, 0.2784 ) }
    dend_22 { pt3dadd( 440.775, 416.267, 29.3535, 0.2818 ) }
    dend_22 { pt3dadd( 441.872, 416.452, 29.6514, 0.288 ) }
    dend_22 { pt3dadd( 443.012, 416.423, 29.867, 0.3004 ) }
    dend_22 { pt3dadd( 444.141, 416.255, 29.9729, 0.3174 ) }
    dend_22 { pt3dadd( 445.25, 415.978, 29.99, 0.3794 ) }
    dend_22 { pt3dadd( 446.362, 415.711, 29.9555, 0.345 ) }
    dend_22 { pt3dadd( 447.469, 415.421, 29.8785, 0.3204 ) }
    dend_22 { pt3dadd( 448.543, 415.035, 29.7242, 0.3132 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_22 { pt3dadd( 449.549, 414.504, 29.5039, 0.342 ) }
    dend_22 { pt3dadd( 450.492, 413.864, 29.2779, 0.4198 ) }
    dend_22 { pt3dadd( 451.421, 413.201, 29.0648, 0.4452 ) }
    dend_22 { pt3dadd( 452.419, 412.65, 28.9016, 0.3836 ) }
    dend_22 { pt3dadd( 453.406, 412.072, 28.8014, 0.3398 ) }
    dend_22 { pt3dadd( 454.372, 411.461, 28.7246, 0.3738 ) }
    dend_22 { pt3dadd( 455.454, 411.103, 28.6994, 0.3346 ) }
    dend_22 { pt3dadd( 456.589, 410.969, 28.6353, 0.3012 ) }
    dend_22 { pt3dadd( 457.726, 410.879, 28.4544, 0.2768 ) }
    dend_22 { pt3dadd( 458.868, 410.831, 28.3226, 0.2786 ) }
    dend_22 { pt3dadd( 460.008, 410.744, 28.2058, 0.2822 ) }
    dend_22 { pt3dadd( 461.142, 410.656, 27.9275, 0.2884 ) }
    dend_22 { pt3dadd( 462.257, 410.419, 27.7028, 0.3014 ) }
    dend_22 { pt3dadd( 463.377, 410.199, 27.55, 0.319 ) }
    dend_22 { pt3dadd( 464.502, 409.988, 27.5024, 0.3828 ) }
    dend_22 { pt3dadd( 465.64, 409.886, 27.473, 0.3508 ) }
    dend_22 { pt3dadd( 466.778, 409.773, 27.4392, 0.3326 ) }
    dend_22 { pt3dadd( 467.913, 409.64, 27.4189, 0.3296 ) }
    dend_22 { pt3dadd( 469.057, 409.656, 27.3509, 0.4032 ) }
    dend_22 { pt3dadd( 470.198, 409.733, 27.3053, 0.3838 ) }
    dend_22 { pt3dadd( 471.334, 409.868, 27.2619, 0.4182 ) }
    dend_22 { pt3dadd( 472.469, 409.997, 27.208, 0.3694 ) }
    dend_22 { pt3dadd( 473.602, 409.918, 27.0927, 0.3678 ) }
    dend_22 { pt3dadd( 474.625, 409.473, 26.9942, 0.3908 ) }
    dend_22 { pt3dadd( 475.375, 408.622, 26.9152, 0.5368 ) }
    dend_22 { pt3dadd( 476.355, 408.039, 26.8295, 0.5332 ) }
    dend_22 { pt3dadd( 477.423, 407.631, 26.7795, 0.4864 ) }
    dend_22 { pt3dadd( 478.519, 407.307, 26.7413, 0.3646 ) }
    dend_22 { pt3dadd( 479.65, 407.16, 26.6868, 0.31 ) }
    dend_22 { pt3dadd( 480.79, 407.207, 26.6843, 0.2928 ) }
    dend_22 { pt3dadd( 481.932, 407.282, 26.582, 0.3094 ) }
    dend_22 { pt3dadd( 483.071, 407.248, 26.45, 0.3338 ) }
    dend_22 { pt3dadd( 484.201, 407.076, 26.352, 0.4106 ) }
    dend_22 { pt3dadd( 485.335, 406.939, 26.3047, 0.3988 ) }
    dend_22 { pt3dadd( 486.478, 406.879, 26.2715, 0.4404 ) }
    dend_22 { pt3dadd( 487.617, 406.777, 26.2604, 0.4366 ) }
    dend_22 { pt3dadd( 488.758, 406.694, 26.2968, 0.3666 ) }
    dend_22 { pt3dadd( 489.901, 406.668, 26.2771, 0.3132 ) }
    dend_22 { pt3dadd( 491.04, 406.628, 26.1106, 0.3002 ) }
    dend_22 { pt3dadd( 492.173, 406.496, 25.8708, 0.3168 ) }
    dend_22 { pt3dadd( 493.302, 406.346, 25.6044, 0.3786 ) }
    dend_22 { pt3dadd( 494.436, 406.245, 25.3512, 0.3434 ) }
    dend_22 { pt3dadd( 495.575, 406.183, 25.1523, 0.3176 ) }
    dend_22 { pt3dadd( 496.717, 406.13, 25.0289, 0.3068 ) }
    dend_22 { pt3dadd( 497.857, 406.101, 24.8733, 0.3364 ) }
    dend_22 { pt3dadd( 498.965, 405.92, 24.544, 0.3798 ) }
    dend_22 { pt3dadd( 500.01, 405.508, 24.0281, 0.5156 ) }
    dend_22 { pt3dadd( 501.069, 405.27, 23.2999, 0.499 ) }
    dend_22 { pt3dadd( 502.104, 405.503, 22.4126, 0.3972 ) }
    dend_22 { pt3dadd( 503.049, 406.031, 21.5354, 0.3242 ) }
    dend_22 { pt3dadd( 504.018, 406.567, 20.8428, 0.3144 ) }
    dend_22 { pt3dadd( 505.053, 407.0, 20.3383, 0.374 ) }
    dend_22 { pt3dadd( 506.16, 407.192, 19.9205, 0.3348 ) }
    dend_22 { pt3dadd( 507.285, 407.326, 19.5276, 0.3016 ) }
    dend_22 { pt3dadd( 508.397, 407.533, 19.1098, 0.2776 ) }
    dend_22 { pt3dadd( 509.516, 407.616, 18.6133, 0.2804 ) }
    dend_22 { pt3dadd( 510.631, 407.545, 18.037, 0.2852 ) }
    dend_22 { pt3dadd( 511.708, 407.754, 17.361, 0.2954 ) }
    dend_22 { pt3dadd( 512.76, 408.086, 16.6365, 0.3078 ) }
    dend_22 { pt3dadd( 513.679, 407.597, 15.8734, 0.3616 ) }
    dend_22 { pt3dadd( 514.419, 406.767, 15.2488, 0.3136 ) }
    dend_22 { pt3dadd( 515.291, 406.151, 14.3932, 0.2542 ) }
    dend_22 { pt3dadd( 516.057, 406.578, 12.6, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 63/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 408.828, 420.942, 35.9349, 0.2746 ) }
    dend_21 { pt3dadd( 409.465, 419.755, 35.511, 0.4576 ) }
    dend_21 { pt3dadd( 410.134, 418.829, 35.5046, 0.3612 ) }
    dend_21 { pt3dadd( 410.884, 417.965, 35.4718, 0.3036 ) }
    dend_21 { pt3dadd( 411.647, 417.113, 35.4738, 0.2814 ) }
    dend_21 { pt3dadd( 412.263, 416.165, 35.5972, 0.2872 ) }
    dend_21 { pt3dadd( 412.601, 415.087, 35.8484, 0.299 ) }
    dend_21 { pt3dadd( 412.904, 413.998, 36.2018, 0.3144 ) }
    dend_21 { pt3dadd( 413.495, 413.061, 36.6537, 0.3742 ) }
    dend_21 { pt3dadd( 414.268, 412.256, 37.2697, 0.3352 ) }
    dend_21 { pt3dadd( 415.052, 411.489, 38.0579, 0.3024 ) }
    dend_21 { pt3dadd( 415.907, 410.796, 38.8004, 0.279 ) }
    dend_21 { pt3dadd( 416.782, 410.105, 39.4302, 0.2828 ) }
    dend_21 { pt3dadd( 417.708, 409.478, 40.0064, 0.2896 ) }
    dend_21 { pt3dadd( 418.755, 409.107, 40.5306, 0.3034 ) }
    dend_21 { pt3dadd( 419.773, 408.652, 41.0455, 0.323 ) }
    dend_21 { pt3dadd( 420.402, 407.772, 41.6226, 0.3896 ) }
    dend_21 { pt3dadd( 420.806, 406.732, 42.2296, 0.3648 ) }
    dend_21 { pt3dadd( 421.227, 405.699, 42.8448, 0.352 ) }
    dend_21 { pt3dadd( 421.812, 404.739, 43.3292, 0.3976 ) }
    dend_21 { pt3dadd( 422.441, 403.797, 43.708, 0.3736 ) }
    dend_21 { pt3dadd( 423.086, 402.856, 43.9449, 0.399 ) }
    dend_21 { pt3dadd( 423.745, 401.922, 44.0423, 0.3342 ) }
    dend_21 { pt3dadd( 423.772, 400.811, 44.0196, 0.3006 ) }
    dend_21 { pt3dadd( 423.6, 399.68, 43.9687, 0.2758 ) }
    dend_21 { pt3dadd( 423.375, 398.56, 44.1098, 0.2768 ) }
    dend_21 { pt3dadd( 423.402, 397.421, 44.3243, 0.2788 ) }
    dend_21 { pt3dadd( 423.172, 396.307, 44.5861, 0.2824 ) }
    dend_21 { pt3dadd( 422.733, 395.254, 44.8238, 0.2882 ) }
    dend_21 { pt3dadd( 422.105, 394.301, 44.9814, 0.305 ) }
    dend_21 { pt3dadd( 421.396, 393.404, 45.0736, 0.305 ) }
    dend_21 { pt3dadd( 420.878, 392.392, 45.36, 0.4576 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 95/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 318.413, 406.349, 37.1316, 0.9018 ) }
    apic_5 { pt3dadd( 318.006, 405.47, 37.3657, 0.874 ) }
    apic_5 { pt3dadd( 317.478, 404.458, 37.5458, 0.9176 ) }
    apic_5 { pt3dadd( 316.842, 403.51, 37.7045, 0.765 ) }
    apic_5 { pt3dadd( 316.118, 402.627, 37.861, 0.9306 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_5 { pt3dadd( 315.37, 401.764, 38.0316, 0.8898 ) }
    apic_5 { pt3dadd( 314.596, 400.924, 38.2094, 0.9014 ) }
    apic_5 { pt3dadd( 313.814, 400.092, 38.3698, 0.7282 ) }
    apic_5 { pt3dadd( 313.077, 399.218, 38.4924, 0.6656 ) }
    apic_5 { pt3dadd( 312.408, 398.292, 38.5759, 0.6674 ) }
    apic_5 { pt3dadd( 311.81, 397.317, 38.6263, 0.7844 ) }
    apic_5 { pt3dadd( 311.29, 396.299, 38.6523, 0.9078 ) }
    apic_5 { pt3dadd( 310.789, 395.27, 38.6658, 0.9038 ) }
    apic_5 { pt3dadd( 310.243, 394.265, 38.677, 0.8822 ) }
    apic_5 { pt3dadd( 309.651, 393.285, 38.6907, 0.9108 ) }
    apic_5 { pt3dadd( 309.036, 392.321, 38.7114, 0.861 ) }
    apic_5 { pt3dadd( 308.377, 391.388, 38.7428, 0.8086 ) }
    apic_5 { pt3dadd( 307.667, 390.49, 38.785, 0.747 ) }
    apic_5 { pt3dadd( 306.987, 389.571, 38.829, 0.6896 ) }
    apic_5 { pt3dadd( 306.45, 388.562, 38.8959, 0.5358 ) }
    apic_5 { pt3dadd( 306.033, 387.5, 39.0779, 0.4808 ) }
    apic_5 { pt3dadd( 305.575, 386.46, 39.3954, 0.634 ) }
    apic_5 { pt3dadd( 305.021, 385.471, 39.7566, 0.594 ) }
    apic_5 { pt3dadd( 304.415, 384.511, 40.1058, 0.4922 ) }
    apic_5 { pt3dadd( 303.795, 383.559, 40.4289, 0.4366 ) }
    apic_5 { pt3dadd( 303.134, 382.633, 40.7025, 0.6042 ) }
    apic_5 { pt3dadd( 302.453, 381.717, 40.9091, 0.5146 ) }
    apic_5 { pt3dadd( 301.799, 380.78, 41.0682, 0.4616 ) }
    apic_5 { pt3dadd( 301.141, 379.847, 41.2149, 0.5022 ) }
    apic_5 { pt3dadd( 300.438, 378.948, 41.3848, 0.588 ) }
    apic_5 { pt3dadd( 299.682, 378.094, 41.6018, 0.6962 ) }
    apic_5 { pt3dadd( 298.883, 377.282, 41.8606, 0.6862 ) }
    apic_5 { pt3dadd( 298.075, 376.48, 42.1417, 0.7758 ) }
    apic_5 { pt3dadd( 297.305, 375.643, 42.4211, 0.6448 ) }
    apic_5 { pt3dadd( 296.622, 374.732, 42.6653, 0.7012 ) }
    apic_5 { pt3dadd( 296.072, 373.734, 42.8568, 0.725 ) }
    apic_5 { pt3dadd( 295.659, 372.671, 43.0044, 0.7036 ) }
    apic_5 { pt3dadd( 295.332, 371.576, 43.1183, 0.7538 ) }
    apic_5 { pt3dadd( 295.0, 370.481, 43.2082, 0.6384 ) }
    apic_5 { pt3dadd( 294.592, 369.414, 43.2886, 0.5212 ) }
    apic_5 { pt3dadd( 294.098, 368.383, 43.377, 0.5206 ) }
    apic_5 { pt3dadd( 293.546, 367.382, 43.493, 0.6124 ) }
    apic_5 { pt3dadd( 292.988, 366.385, 43.6517, 0.5602 ) }
    apic_5 { pt3dadd( 292.46, 365.374, 43.8441, 0.6282 ) }
    apic_5 { pt3dadd( 291.911, 364.374, 44.0367, 0.6404 ) }
    apic_5 { pt3dadd( 291.243, 363.451, 44.2072, 0.53 ) }
    apic_5 { pt3dadd( 290.45, 362.63, 44.3526, 0.5122 ) }
    apic_5 { pt3dadd( 289.664, 361.803, 44.4839, 0.4882 ) }
    apic_5 { pt3dadd( 289.016, 360.865, 44.6233, 0.6278 ) }
    apic_5 { pt3dadd( 288.493, 359.85, 44.7989, 0.6808 ) }
    apic_5 { pt3dadd( 288.002, 358.82, 45.0176, 0.6324 ) }
    apic_5 { pt3dadd( 287.51, 357.792, 45.2536, 0.5704 ) }
    apic_5 { pt3dadd( 287.059, 356.746, 45.4896, 0.5476 ) }
    apic_5 { pt3dadd( 286.678, 355.673, 45.7349, 0.5166 ) }
    apic_5 { pt3dadd( 286.388, 354.573, 45.9914, 0.6326 ) }
    apic_5 { pt3dadd( 286.174, 353.453, 46.2333, 0.6914 ) }
    apic_5 { pt3dadd( 285.943, 352.336, 46.4386, 0.6454 ) }
    apic_5 { pt3dadd( 285.576, 351.259, 46.6152, 0.6256 ) }
    apic_5 { pt3dadd( 285.007, 350.273, 46.7978, 0.5006 ) }
    apic_5 { pt3dadd( 284.316, 349.365, 47.0036, 0.4674 ) }
    apic_5 { pt3dadd( 283.64, 348.446, 47.2086, 0.5858 ) }
    apic_5 { pt3dadd( 283.01, 347.495, 47.3836, 0.6194 ) }
    apic_5 { pt3dadd( 282.388, 346.536, 47.5219, 0.6676 ) }
    apic_5 { pt3dadd( 281.724, 345.607, 47.6274, 0.598 ) }
    apic_5 { pt3dadd( 280.99, 344.729, 47.7078, 0.554 ) }
    apic_5 { pt3dadd( 280.239, 343.868, 47.7753, 0.5162 ) }
    apic_5 { pt3dadd( 279.574, 342.943, 47.8506, 0.4624 ) }
    apic_5 { pt3dadd( 279.082, 341.914, 47.9615, 0.5134 ) }
    apic_5 { pt3dadd( 278.753, 340.822, 48.1152, 0.562 ) }
    apic_5 { pt3dadd( 278.471, 339.714, 48.2793, 0.647 ) }
    apic_5 { pt3dadd( 278.12, 338.629, 48.4165, 0.6004 ) }
    apic_5 { pt3dadd( 277.672, 337.577, 48.5086, 0.5896 ) }
    apic_5 { pt3dadd( 277.189, 336.541, 48.5416, 0.4318 ) }
    apic_5 { pt3dadd( 276.724, 335.495, 48.5237, 0.3496 ) }
    apic_5 { pt3dadd( 276.241, 334.459, 48.5153, 0.3204 ) }
    apic_5 { pt3dadd( 275.725, 333.438, 48.5724, 0.3552 ) }
    apic_5 { pt3dadd( 275.204, 332.421, 48.6898, 0.4456 ) }
    apic_5 { pt3dadd( 274.598, 331.46, 48.8449, 0.4878 ) }
    apic_5 { pt3dadd( 273.795, 330.657, 49.0417, 0.4882 ) }
    apic_5 { pt3dadd( 272.885, 329.969, 49.2691, 0.4096 ) }
    apic_5 { pt3dadd( 272.031, 329.218, 49.4824, 0.4186 ) }
    apic_5 { pt3dadd( 271.309, 328.339, 49.6496, 0.3716 ) }
    apic_5 { pt3dadd( 270.76, 327.342, 49.7703, 0.3644 ) }
    apic_5 { pt3dadd( 270.37, 326.269, 49.8548, 0.4206 ) }
    apic_5 { pt3dadd( 270.045, 325.172, 49.9134, 0.4158 ) }
    apic_5 { pt3dadd( 269.681, 324.088, 49.9593, 0.4796 ) }
    apic_5 { pt3dadd( 269.251, 323.029, 50.0142, 0.4728 ) }
    apic_5 { pt3dadd( 268.737, 322.01, 50.0928, 0.6102 ) }
    apic_5 { pt3dadd( 268.098, 321.064, 50.1794, 0.5942 ) }
    apic_5 { pt3dadd( 267.405, 320.153, 50.2471, 0.7352 ) }
    apic_5 { pt3dadd( 266.751, 319.215, 50.2684, 0.8542 ) }
    apic_5 { pt3dadd( 266.147, 318.245, 50.2435, 0.851 ) }
    apic_5 { pt3dadd( 265.612, 317.235, 50.2085, 0.7878 ) }
    apic_5 { pt3dadd( 265.184, 316.176, 50.1956, 0.7206 ) }
    apic_5 { pt3dadd( 264.822, 315.091, 50.2242, 0.5804 ) }
    apic_5 { pt3dadd( 264.393, 314.034, 50.3163, 0.6262 ) }
    apic_5 { pt3dadd( 263.861, 313.024, 50.4857, 0.5992 ) }
    apic_5 { pt3dadd( 263.285, 312.04, 50.7088, 0.6354 ) }
    apic_5 { pt3dadd( 262.688, 311.069, 50.9449, 0.5128 ) }
    apic_5 { pt3dadd( 262.1, 310.091, 51.1384, 0.5198 ) }
    apic_5 { pt3dadd( 261.53, 309.1, 51.2352, 0.5392 ) }
    apic_5 { pt3dadd( 260.96, 308.108, 51.2389, 0.5432 ) }
    apic_5 { pt3dadd( 260.419, 307.101, 51.1969, 0.7066 ) }
    apic_5 { pt3dadd( 259.903, 306.079, 51.149, 0.7098 ) }
    apic_5 { pt3dadd( 259.335, 305.089, 51.1165, 0.569 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_5 { pt3dadd( 258.665, 304.162, 51.1118, 0.5622 ) }
    apic_5 { pt3dadd( 257.938, 303.28, 51.1398, 0.4602 ) }
    apic_5 { pt3dadd( 257.212, 302.397, 51.2014, 0.4762 ) }
    apic_5 { pt3dadd( 256.488, 301.513, 51.3061, 0.4254 ) }
    apic_5 { pt3dadd( 255.762, 300.631, 51.45, 0.4922 ) }
    apic_5 { pt3dadd( 255.097, 299.703, 51.5906, 0.5218 ) }
    apic_5 { pt3dadd( 254.55, 298.702, 51.6888, 0.5754 ) }
    apic_5 { pt3dadd( 254.085, 297.657, 51.728, 0.4538 ) }
    apic_5 { pt3dadd( 253.621, 296.612, 51.6922, 0.3852 ) }
    apic_5 { pt3dadd( 253.084, 295.605, 51.5819, 0.412 ) }
    apic_5 { pt3dadd( 252.439, 294.664, 51.441, 0.401 ) }
    apic_5 { pt3dadd( 251.783, 293.729, 51.322, 0.4448 ) }
    apic_5 { pt3dadd( 251.205, 292.743, 51.2546, 0.4448 ) }
    apic_5 { pt3dadd( 250.62, 291.762, 51.2562, 0.3814 ) }
    apic_5 { pt3dadd( 249.956, 290.831, 51.315, 0.3422 ) }
    apic_5 { pt3dadd( 249.273, 289.914, 51.3789, 0.3472 ) }
    apic_5 { pt3dadd( 248.582, 289.003, 51.4259, 0.4368 ) }
    apic_5 { pt3dadd( 247.885, 288.096, 51.4898, 0.441 ) }
    apic_5 { pt3dadd( 247.21, 287.173, 51.5886, 0.549 ) }
    apic_5 { pt3dadd( 246.547, 286.242, 51.6939, 0.4914 ) }
    apic_5 { pt3dadd( 245.873, 285.318, 51.7748, 0.4924 ) }
    apic_5 { pt3dadd( 245.193, 284.398, 51.8213, 0.6566 ) }
    apic_5 { pt3dadd( 244.529, 283.467, 51.8199, 0.6312 ) }
    apic_5 { pt3dadd( 243.927, 282.496, 51.758, 0.5844 ) }
    apic_5 { pt3dadd( 243.386, 281.489, 51.6656, 0.4956 ) }
    apic_5 { pt3dadd( 242.823, 280.494, 51.6261, 0.5698 ) }
    apic_5 { pt3dadd( 242.217, 279.525, 51.6984, 0.692 ) }
    apic_5 { pt3dadd( 241.576, 278.58, 51.8532, 0.765 ) }
    apic_5 { pt3dadd( 240.874, 277.681, 52.0394, 0.73 ) }
    apic_5 { pt3dadd( 240.121, 276.823, 52.2348, 0.8048 ) }
    apic_5 { pt3dadd( 239.389, 275.949, 52.4353, 0.7238 ) }
    apic_5 { pt3dadd( 238.744, 275.012, 52.6616, 0.7242 ) }
    apic_5 { pt3dadd( 238.177, 274.025, 52.9379, 0.6802 ) }
    apic_5 { pt3dadd( 237.6, 273.047, 53.2672, 0.5876 ) }
    apic_5 { pt3dadd( 237.014, 272.074, 53.613, 0.4694 ) }
    apic_5 { pt3dadd( 236.516, 271.055, 53.9221, 0.4484 ) }
    apic_5 { pt3dadd( 236.093, 269.997, 54.1674, 0.5916 ) }
    apic_5 { pt3dadd( 235.669, 268.937, 54.3491, 0.66 ) }
    apic_5 { pt3dadd( 235.179, 267.906, 54.4869, 0.5986 ) }
    apic_5 { pt3dadd( 234.621, 266.91, 54.6171, 0.4834 ) }
    apic_5 { pt3dadd( 234.031, 265.931, 54.761, 0.5052 ) }
    apic_5 { pt3dadd( 233.416, 264.968, 54.892, 0.5472 ) }
    apic_5 { pt3dadd( 232.795, 264.008, 54.9646, 0.6172 ) }
    apic_5 { pt3dadd( 232.2, 263.032, 54.9539, 0.557 ) }
    apic_5 { pt3dadd( 231.605, 262.055, 54.9004, 0.4524 ) }
    apic_5 { pt3dadd( 231.017, 261.073, 54.8652, 0.452 ) }
    apic_5 { pt3dadd( 230.412, 260.102, 54.8366, 0.4276 ) }
    apic_5 { pt3dadd( 229.773, 259.154, 54.7666, 0.4964 ) }
    apic_5 { pt3dadd( 229.136, 258.205, 54.6549, 0.5296 ) }
    apic_5 { pt3dadd( 228.519, 257.244, 54.539, 0.591 ) }
    apic_5 { pt3dadd( 227.87, 256.303, 54.437, 0.476 ) }
    apic_5 { pt3dadd( 227.161, 255.407, 54.348, 0.4584 ) }
    apic_5 { pt3dadd( 226.443, 254.516, 54.2693, 0.3918 ) }
    apic_5 { pt3dadd( 225.762, 253.598, 54.2158, 0.4338 ) }
    apic_5 { pt3dadd( 225.019, 252.731, 54.2156, 0.3934 ) }
    apic_5 { pt3dadd( 224.142, 252.005, 54.2612, 0.4366 ) }
    apic_5 { pt3dadd( 223.216, 251.332, 54.3273, 0.3998 ) }
    apic_5 { pt3dadd( 222.322, 250.621, 54.4026, 0.4426 ) }
    apic_5 { pt3dadd( 221.436, 249.898, 54.4866, 0.4406 ) }
    apic_5 { pt3dadd( 220.533, 249.195, 54.586, 0.3738 ) }
    apic_5 { pt3dadd( 219.632, 248.493, 54.7156, 0.3266 ) }
    apic_5 { pt3dadd( 218.767, 247.748, 54.8744, 0.326 ) }
    apic_5 { pt3dadd( 217.978, 246.926, 55.0278, 0.3592 ) }
    apic_5 { pt3dadd( 217.255, 246.04, 55.1253, 0.4826 ) }
    apic_5 { pt3dadd( 216.617, 245.092, 55.1373, 0.4124 ) }
    apic_5 { pt3dadd( 216.084, 244.082, 55.1589, 0.3612 ) }
    apic_5 { pt3dadd( 215.705, 243.007, 55.3252, 0.3402 ) }
    apic_5 { pt3dadd( 215.553, 241.884, 55.6125, 0.3994 ) }
    apic_5 { pt3dadd( 215.484, 240.748, 55.8936, 0.4902 ) }
    apic_5 { pt3dadd( 215.316, 239.621, 56.1156, 0.7512 ) }
    apic_5 { pt3dadd( 214.94, 238.547, 56.2985, 0.7866 ) }
    apic_5 { pt3dadd( 214.385, 237.552, 56.4584, 0.9684 ) }
    apic_5 { pt3dadd( 213.732, 236.615, 56.5863, 0.7418 ) }
    apic_5 { pt3dadd( 213.072, 235.681, 56.6955, 0.5412 ) }
    apic_5 { pt3dadd( 212.552, 234.666, 56.835, 0.476 ) }
    apic_5 { pt3dadd( 212.206, 233.581, 57.0254, 0.4676 ) }
    apic_5 { pt3dadd( 211.852, 232.495, 57.1696, 0.5934 ) }
    apic_5 { pt3dadd( 211.407, 231.443, 57.2127, 0.5976 ) }
    apic_5 { pt3dadd( 210.907, 230.414, 57.2127, 0.5728 ) }
    apic_5 { pt3dadd( 210.406, 229.385, 57.2494, 0.685 ) }
    apic_5 { pt3dadd( 209.969, 228.33, 57.3614, 0.8134 ) }
    apic_5 { pt3dadd( 209.597, 227.25, 57.5344, 0.7498 ) }
    apic_5 { pt3dadd( 209.35, 226.138, 57.757, 0.7238 ) }
    apic_5 { pt3dadd( 209.329, 225.002, 58.0219, 0.6866 ) }
    apic_5 { pt3dadd( 209.318, 223.863, 58.2761, 0.5646 ) }
    apic_5 { pt3dadd( 208.978, 222.778, 58.4704, 0.5958 ) }
    apic_5 { pt3dadd( 208.411, 221.788, 58.5864, 0.5484 ) }
    apic_5 { pt3dadd( 207.86, 220.786, 58.6228, 0.5148 ) }
    apic_5 { pt3dadd( 207.415, 219.733, 58.6379, 0.4164 ) }
    apic_5 { pt3dadd( 206.934, 218.695, 58.697, 0.409 ) }
    apic_5 { pt3dadd( 206.237, 217.792, 58.795, 0.4606 ) }
    apic_5 { pt3dadd( 205.408, 217.008, 58.9165, 0.6978 ) }
    apic_5 { pt3dadd( 204.522, 216.287, 59.0873, 0.6796 ) }
    apic_5 { pt3dadd( 203.71, 215.486, 59.2766, 0.8098 ) }
    apic_5 { pt3dadd( 203.044, 214.558, 59.4084, 0.9414 ) }
    apic_5 { pt3dadd( 202.458, 213.577, 59.5151, 1.0322 ) }
    apic_5 { pt3dadd( 201.768, 212.667, 59.6574, 1.0284 ) }
    apic_5 { pt3dadd( 200.984, 211.838, 59.8074, 0.942 ) }
    apic_5 { pt3dadd( 200.199, 211.007, 59.9407, 0.9384 ) }
    apic_5 { pt3dadd( 199.487, 210.113, 60.065, 0.858 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_5 { pt3dadd( 198.778, 209.217, 60.1938, 0.839 ) }
    apic_5 { pt3dadd( 198.055, 208.333, 60.3495, 0.6288 ) }
    apic_5 { pt3dadd( 197.382, 207.412, 60.5578, 0.6302 ) }
    apic_5 { pt3dadd( 196.754, 206.46, 60.7768, 0.566 ) }
    apic_5 { pt3dadd( 196.127, 205.506, 60.9689, 0.542 ) }
    apic_5 { pt3dadd( 195.511, 204.545, 61.1324, 0.4942 ) }
    apic_5 { pt3dadd( 195.082, 203.488, 61.2842, 0.4208 ) }
    apic_5 { pt3dadd( 194.911, 202.361, 61.4821, 0.4404 ) }
    apic_5 { pt3dadd( 194.681, 201.243, 61.6804, 0.4068 ) }
    apic_5 { pt3dadd( 194.152, 200.232, 61.7464, 0.455 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 10/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 318.413, 406.349, 37.1316, 0.9018 ) }
    apic_4 { pt3dadd( 318.118, 406.564, 40.3012, 0.2288 ) }
    apic_4 { pt3dadd( 317.852, 406.763, 42.9646, 0.3344 ) }
    apic_4 { pt3dadd( 317.383, 407.305, 45.1234, 0.3872 ) }
    apic_4 { pt3dadd( 316.923, 408.032, 46.9622, 0.4758 ) }
    apic_4 { pt3dadd( 316.293, 408.695, 48.606, 0.6846 ) }
    apic_4 { pt3dadd( 315.492, 409.251, 50.0562, 0.8546 ) }
    apic_4 { pt3dadd( 314.67, 409.846, 51.3388, 0.8526 ) }
    apic_4 { pt3dadd( 313.91, 410.564, 52.4541, 0.7858 ) }
    apic_4 { pt3dadd( 313.048, 411.158, 53.445, 0.7406 ) }
    apic_4 { pt3dadd( 312.283, 411.841, 54.3962, 0.5034 ) }
    apic_4 { pt3dadd( 311.517, 412.534, 55.365, 0.3508 ) }
    apic_4 { pt3dadd( 310.739, 413.247, 56.3002, 0.2746 ) }
    apic_4 { pt3dadd( 310.295, 414.12, 57.6478, 0.2746 ) }
    apic_4 { pt3dadd( 310.023, 415.175, 58.4965, 0.2746 ) }
    apic_4 { pt3dadd( 309.656, 416.207, 59.3015, 0.2746 ) }
    apic_4 { pt3dadd( 309.407, 417.26, 60.2008, 0.2746 ) }
    apic_4 { pt3dadd( 308.953, 418.236, 61.1391, 0.2746 ) }
    apic_4 { pt3dadd( 308.536, 419.263, 61.8089, 0.2746 ) }
    apic_4 { pt3dadd( 308.311, 420.355, 62.4422, 0.2746 ) }
    apic_4 { pt3dadd( 308.116, 421.391, 63.4446, 0.2744 ) }
    apic_4 { pt3dadd( 308.051, 422.348, 64.9631, 0.2744 ) }
    apic_4 { pt3dadd( 307.92, 423.359, 66.2262, 0.2742 ) }
    apic_4 { pt3dadd( 307.911, 424.419, 67.2652, 0.274 ) }
    apic_4 { pt3dadd( 308.227, 425.451, 68.1078, 0.2736 ) }
    apic_4 { pt3dadd( 308.84, 426.363, 68.8128, 0.2728 ) }
    apic_4 { pt3dadd( 309.447, 427.299, 69.4156, 0.2712 ) }
    apic_4 { pt3dadd( 309.756, 428.35, 70.0904, 0.2684 ) }
    apic_4 { pt3dadd( 309.928, 429.442, 70.8086, 0.2626 ) }
    apic_4 { pt3dadd( 310.37, 430.423, 71.7156, 0.2542 ) }
    apic_4 { pt3dadd( 310.797, 431.446, 72.3965, 0.2288 ) }
    apic_4 { pt3dadd( 310.939, 432.546, 73.08, 0.2288 ) }
    // Section: apic_17, id: apic_17, parent: apic_5 (entry count 42/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 194.152, 200.232, 61.7464, 0.455 ) }
    apic_17 { pt3dadd( 193.139, 199.225, 62.2644, 0.4134 ) }
    apic_17 { pt3dadd( 192.48, 198.298, 62.5635, 0.4256 ) }
    apic_17 { pt3dadd( 191.921, 197.307, 62.8491, 0.3844 ) }
    apic_17 { pt3dadd( 191.393, 196.299, 63.133, 0.3894 ) }
    apic_17 { pt3dadd( 190.93, 195.258, 63.3942, 0.4614 ) }
    apic_17 { pt3dadd( 190.534, 194.188, 63.6107, 0.5182 ) }
    apic_17 { pt3dadd( 190.164, 193.109, 63.8366, 0.539 ) }
    apic_17 { pt3dadd( 189.794, 192.035, 64.1508, 0.5304 ) }
    apic_17 { pt3dadd( 189.324, 191.003, 64.5092, 0.5134 ) }
    apic_17 { pt3dadd( 188.775, 190.007, 64.7942, 0.4884 ) }
    apic_17 { pt3dadd( 188.227, 189.006, 65.0023, 0.41 ) }
    apic_17 { pt3dadd( 187.641, 188.026, 65.1672, 0.4192 ) }
    apic_17 { pt3dadd( 187.002, 187.079, 65.2915, 0.3726 ) }
    apic_17 { pt3dadd( 186.391, 186.114, 65.4371, 0.3678 ) }
    apic_17 { pt3dadd( 185.845, 185.114, 65.6835, 0.4204 ) }
    apic_17 { pt3dadd( 185.309, 184.112, 65.9968, 0.4466 ) }
    apic_17 { pt3dadd( 184.711, 183.146, 66.2964, 0.3846 ) }
    apic_17 { pt3dadd( 183.978, 182.276, 66.551, 0.349 ) }
    apic_17 { pt3dadd( 183.177, 181.466, 66.7615, 0.355 ) }
    apic_17 { pt3dadd( 182.517, 180.545, 66.9466, 0.4746 ) }
    apic_17 { pt3dadd( 182.136, 179.471, 67.1359, 0.3976 ) }
    apic_17 { pt3dadd( 181.852, 178.367, 67.3288, 0.3334 ) }
    apic_17 { pt3dadd( 181.419, 177.317, 67.5475, 0.2892 ) }
    apic_17 { pt3dadd( 180.834, 176.338, 67.7886, 0.3028 ) }
    apic_17 { pt3dadd( 180.349, 175.311, 68.0305, 0.3218 ) }
    apic_17 { pt3dadd( 180.036, 174.217, 68.3026, 0.3874 ) }
    apic_17 { pt3dadd( 179.734, 173.132, 68.661, 0.3608 ) }
    apic_17 { pt3dadd( 179.157, 172.164, 69.0147, 0.3448 ) }
    apic_17 { pt3dadd( 178.396, 171.316, 69.258, 0.383 ) }
    apic_17 { pt3dadd( 177.676, 170.438, 69.4081, 0.3518 ) }
    apic_17 { pt3dadd( 177.129, 169.437, 69.5215, 0.333 ) }
    apic_17 { pt3dadd( 176.62, 168.415, 69.624, 0.3378 ) }
    apic_17 { pt3dadd( 176.092, 167.403, 69.7024, 0.3812 ) }
    apic_17 { pt3dadd( 175.595, 166.374, 69.6724, 0.5242 ) }
    apic_17 { pt3dadd( 175.127, 165.333, 69.6567, 0.4852 ) }
    apic_17 { pt3dadd( 174.675, 164.284, 69.7206, 0.517 ) }
    apic_17 { pt3dadd( 174.199, 163.245, 69.8454, 0.5284 ) }
    apic_17 { pt3dadd( 173.72, 162.209, 69.9905, 0.5514 ) }
    apic_17 { pt3dadd( 173.145, 161.224, 70.1484, 0.5842 ) }
    apic_17 { pt3dadd( 172.481, 160.297, 70.3388, 0.464 ) }
    apic_17 { pt3dadd( 171.818, 159.368, 70.5438, 0.435 ) }
    apic_17 { pt3dadd( 171.274, 158.371, 70.7608, 0.3538 ) }
    apic_17 { pt3dadd( 170.83, 157.323, 71.0321, 0.3364 ) }
    apic_17 { pt3dadd( 170.426, 156.255, 71.2135, 0.344 ) }
    apic_17 { pt3dadd( 169.722, 155.385, 71.2491, 0.3936 ) }
    apic_17 { pt3dadd( 168.929, 154.568, 71.5042, 0.5422 ) }
    apic_17 { pt3dadd( 168.222, 153.676, 71.769, 0.5432 ) }
    apic_17 { pt3dadd( 167.589, 152.726, 71.9569, 0.5048 ) }
    apic_17 { pt3dadd( 166.977, 151.76, 72.0507, 0.3994 ) }
    apic_17 { pt3dadd( 166.411, 150.767, 72.1532, 0.37 ) }
    apic_17 { pt3dadd( 165.783, 149.811, 72.2352, 0.4248 ) }
    apic_17 { pt3dadd( 165.049, 148.934, 72.2439, 0.4546 ) }
    apic_17 { pt3dadd( 164.324, 148.05, 72.2814, 0.4006 ) }
    apic_17 { pt3dadd( 163.451, 147.309, 72.3601, 0.3726 ) }
    apic_17 { pt3dadd( 162.477, 146.716, 72.55, 0.4292 ) }
    apic_17 { pt3dadd( 161.532, 146.088, 72.8809, 0.464 ) }
    apic_17 { pt3dadd( 160.711, 145.31, 73.2553, 0.4118 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_17 { pt3dadd( 160.147, 144.332, 73.6655, 0.424 ) }
    apic_17 { pt3dadd( 159.814, 143.249, 74.0628, 0.3754 ) }
    apic_17 { pt3dadd( 159.404, 142.188, 74.3431, 0.4026 ) }
    apic_17 { pt3dadd( 158.934, 141.148, 74.5304, 0.3408 ) }
    apic_17 { pt3dadd( 158.49, 140.095, 74.6816, 0.3126 ) }
    apic_17 { pt3dadd( 157.932, 139.102, 74.8194, 0.2992 ) }
    apic_17 { pt3dadd( 157.146, 138.278, 74.928, 0.3148 ) }
    apic_17 { pt3dadd( 156.211, 137.621, 75.0579, 0.3748 ) }
    apic_17 { pt3dadd( 155.357, 136.874, 75.2777, 0.3364 ) }
    apic_17 { pt3dadd( 154.704, 135.938, 75.4552, 0.3046 ) }
    apic_17 { pt3dadd( 154.156, 134.935, 75.5619, 0.283 ) }
    apic_17 { pt3dadd( 153.656, 133.909, 75.7014, 0.2904 ) }
    apic_17 { pt3dadd( 153.223, 132.854, 75.9206, 0.3036 ) }
    apic_17 { pt3dadd( 152.789, 131.801, 76.1886, 0.3306 ) }
    apic_17 { pt3dadd( 152.309, 130.773, 76.5388, 0.3676 ) }
    apic_17 { pt3dadd( 151.749, 129.789, 76.8916, 0.4992 ) }
    apic_17 { pt3dadd( 151.146, 128.838, 77.3752, 0.4378 ) }
    apic_17 { pt3dadd( 150.561, 127.885, 77.9587, 0.4336 ) }
    apic_17 { pt3dadd( 149.949, 126.945, 78.5056, 0.351 ) }
    apic_17 { pt3dadd( 149.341, 125.998, 79.0087, 0.3328 ) }
    apic_17 { pt3dadd( 148.744, 125.04, 79.4651, 0.33 ) }
    apic_17 { pt3dadd( 148.161, 124.068, 79.8252, 0.404 ) }
    apic_17 { pt3dadd( 147.526, 123.123, 80.0671, 0.3854 ) }
    apic_17 { pt3dadd( 146.952, 122.139, 80.2908, 0.421 ) }
    apic_17 { pt3dadd( 146.676, 121.051, 80.6058, 0.3758 ) }
    apic_17 { pt3dadd( 146.263, 120.01, 81.0253, 0.3724 ) }
    apic_17 { pt3dadd( 145.544, 119.159, 81.5562, 0.4352 ) }
    apic_17 { pt3dadd( 144.716, 118.394, 82.014, 0.445 ) }
    apic_17 { pt3dadd( 143.865, 117.644, 82.3799, 0.5224 ) }
    apic_17 { pt3dadd( 142.983, 116.936, 82.7977, 0.6082 ) }
    apic_17 { pt3dadd( 142.107, 116.234, 83.3294, 0.5882 ) }
    apic_17 { pt3dadd( 141.294, 115.454, 83.8261, 0.5062 ) }
    apic_17 { pt3dadd( 140.482, 114.656, 84.1095, 0.5722 ) }
    apic_17 { pt3dadd( 140.162, 113.562, 84.3111, 0.5514 ) }
    apic_17 { pt3dadd( 140.068, 112.423, 84.4007, 0.5214 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 35/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 194.152, 200.232, 61.7464, 0.455 ) }
    apic_6 { pt3dadd( 193.699, 199.507, 60.1322, 0.2288 ) }
    apic_6 { pt3dadd( 193.29, 198.484, 59.7265, 0.4254 ) }
    apic_6 { pt3dadd( 193.099, 197.359, 59.6907, 0.4556 ) }
    apic_6 { pt3dadd( 192.909, 196.232, 59.6966, 0.4028 ) }
    apic_6 { pt3dadd( 192.515, 195.162, 59.673, 0.3764 ) }
    apic_6 { pt3dadd( 191.988, 194.146, 59.6212, 0.4362 ) }
    apic_6 { pt3dadd( 191.468, 193.128, 59.5686, 0.4766 ) }
    apic_6 { pt3dadd( 190.943, 192.112, 59.537, 0.4366 ) }
    apic_6 { pt3dadd( 190.322, 191.152, 59.5594, 0.4634 ) }
    apic_6 { pt3dadd( 189.635, 190.237, 59.6434, 0.48 ) }
    apic_6 { pt3dadd( 189.045, 189.26, 59.7478, 0.4426 ) }
    apic_6 { pt3dadd( 188.568, 188.221, 59.8452, 0.4758 ) }
    apic_6 { pt3dadd( 188.126, 187.166, 59.9374, 0.4978 ) }
    apic_6 { pt3dadd( 187.669, 186.118, 60.0239, 0.5 ) }
    apic_6 { pt3dadd( 187.146, 185.102, 60.0732, 0.4626 ) }
    apic_6 { pt3dadd( 186.574, 184.111, 60.0765, 0.3676 ) }
    apic_6 { pt3dadd( 186.02, 183.111, 60.0639, 0.315 ) }
    apic_6 { pt3dadd( 185.541, 182.072, 60.0564, 0.3034 ) }
    apic_6 { pt3dadd( 185.147, 180.998, 60.0608, 0.323 ) }
    apic_6 { pt3dadd( 184.766, 179.919, 60.083, 0.3896 ) }
    apic_6 { pt3dadd( 184.345, 178.856, 60.1286, 0.3648 ) }
    apic_6 { pt3dadd( 183.885, 177.81, 60.2022, 0.352 ) }
    apic_6 { pt3dadd( 183.4, 176.774, 60.326, 0.3964 ) }
    apic_6 { pt3dadd( 182.932, 175.733, 60.5074, 0.3774 ) }
    apic_6 { pt3dadd( 182.442, 174.702, 60.697, 0.3766 ) }
    apic_6 { pt3dadd( 181.864, 173.717, 60.8572, 0.4366 ) }
    apic_6 { pt3dadd( 181.207, 172.783, 60.9781, 0.4776 ) }
    apic_6 { pt3dadd( 180.56, 171.84, 61.0688, 0.4382 ) }
    apic_6 { pt3dadd( 179.913, 170.898, 61.1442, 0.4676 ) }
    apic_6 { pt3dadd( 179.267, 169.954, 61.2116, 0.4816 ) }
    apic_6 { pt3dadd( 178.775, 168.923, 61.3147, 0.4754 ) }
    apic_6 { pt3dadd( 178.414, 167.84, 61.4639, 0.3908 ) }
    apic_6 { pt3dadd( 178.012, 166.77, 61.5644, 0.3604 ) }
    apic_6 { pt3dadd( 177.399, 165.806, 61.5919, 0.376 ) }
    apic_6 { pt3dadd( 176.708, 164.895, 61.644, 0.5148 ) }
    apic_6 { pt3dadd( 176.16, 163.893, 61.7616, 0.4662 ) }
    apic_6 { pt3dadd( 175.704, 162.846, 61.913, 0.4882 ) }
    apic_6 { pt3dadd( 175.229, 161.807, 62.0533, 0.443 ) }
    apic_6 { pt3dadd( 174.787, 160.753, 62.1832, 0.5482 ) }
    apic_6 { pt3dadd( 174.486, 159.651, 62.314, 0.512 ) }
    apic_6 { pt3dadd( 174.198, 158.546, 62.4694, 0.423 ) }
    apic_6 { pt3dadd( 173.877, 157.45, 62.6007, 0.3654 ) }
    apic_6 { pt3dadd( 173.25, 156.495, 62.6352, 0.4234 ) }
    apic_6 { pt3dadd( 172.643, 155.525, 62.6528, 0.416 ) }
    apic_6 { pt3dadd( 172.22, 154.462, 62.6998, 0.5034 ) }
    apic_6 { pt3dadd( 171.79, 153.402, 62.8037, 0.4038 ) }
    apic_6 { pt3dadd( 171.202, 152.425, 63.002, 0.3446 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 83/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 140.068, 112.423, 84.4007, 0.5214 ) }
    apic_19 { pt3dadd( 139.716, 111.515, 84.3069, 0.4238 ) }
    apic_19 { pt3dadd( 139.333, 110.438, 84.2047, 0.4472 ) }
    apic_19 { pt3dadd( 138.965, 109.355, 84.1834, 0.4132 ) }
    apic_19 { pt3dadd( 138.676, 108.25, 84.1551, 0.498 ) }
    apic_19 { pt3dadd( 138.443, 107.133, 84.1425, 0.3938 ) }
    apic_19 { pt3dadd( 138.065, 106.055, 84.2506, 0.3264 ) }
    apic_19 { pt3dadd( 137.638, 104.996, 84.3998, 0.2766 ) }
    apic_19 { pt3dadd( 137.234, 103.927, 84.4847, 0.2782 ) }
    apic_19 { pt3dadd( 136.951, 102.823, 84.53, 0.2814 ) }
    apic_19 { pt3dadd( 136.84, 101.686, 84.5611, 0.287 ) }
    apic_19 { pt3dadd( 136.803, 100.543, 84.5639, 0.2988 ) }
    apic_19 { pt3dadd( 136.799, 99.3992, 84.548, 0.3142 ) }
    apic_19 { pt3dadd( 136.891, 98.2607, 84.56, 0.3734 ) }
    apic_19 { pt3dadd( 137.089, 97.1348, 84.6384, 0.334 ) }
    apic_19 { pt3dadd( 137.32, 96.0156, 84.7672, 0.3 ) }
    apic_19 { pt3dadd( 137.604, 94.9117, 84.8719, 0.2748 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_19 { pt3dadd( 138.072, 93.8732, 84.8613, 0.2748 ) }
    apic_19 { pt3dadd( 138.589, 92.8561, 84.8324, 0.2752 ) }
    apic_19 { pt3dadd( 139.086, 91.8275, 84.8593, 0.2756 ) }
    apic_19 { pt3dadd( 139.388, 90.7513, 84.8954, 0.2766 ) }
    apic_19 { pt3dadd( 139.365, 89.6111, 84.9234, 0.2784 ) }
    apic_19 { pt3dadd( 139.259, 88.4722, 84.9299, 0.2816 ) }
    apic_19 { pt3dadd( 139.059, 87.3492, 84.9559, 0.2874 ) }
    apic_19 { pt3dadd( 138.614, 86.3076, 84.9993, 0.2994 ) }
    apic_19 { pt3dadd( 138.268, 85.2382, 85.0352, 0.3154 ) }
    apic_19 { pt3dadd( 138.148, 84.1013, 85.0483, 0.3758 ) }
    apic_19 { pt3dadd( 138.162, 82.9605, 85.0349, 0.3384 ) }
    apic_19 { pt3dadd( 138.251, 81.82, 85.0466, 0.3082 ) }
    apic_19 { pt3dadd( 138.288, 80.6784, 85.1382, 0.2896 ) }
    apic_19 { pt3dadd( 138.276, 79.5361, 85.2902, 0.3036 ) }
    apic_19 { pt3dadd( 138.244, 78.3957, 85.4904, 0.3232 ) }
    apic_19 { pt3dadd( 138.199, 77.2566, 85.7251, 0.3902 ) }
    apic_19 { pt3dadd( 138.228, 76.1192, 85.974, 0.366 ) }
    apic_19 { pt3dadd( 138.347, 74.9869, 86.2352, 0.3542 ) }
    apic_19 { pt3dadd( 138.504, 73.859, 86.5054, 0.4004 ) }
    apic_19 { pt3dadd( 138.82, 72.7724, 86.7964, 0.3858 ) }
    apic_19 { pt3dadd( 139.245, 71.7138, 86.973, 0.386 ) }
    apic_19 { pt3dadd( 139.632, 70.6382, 86.9767, 0.4848 ) }
    apic_19 { pt3dadd( 140.089, 69.5909, 86.975, 0.4174 ) }
    apic_19 { pt3dadd( 140.811, 68.7205, 86.9708, 0.365 ) }
    apic_19 { pt3dadd( 141.634, 67.9251, 86.9473, 0.3736 ) }
    apic_19 { pt3dadd( 142.068, 66.8999, 86.854, 0.3342 ) }
    apic_19 { pt3dadd( 142.364, 65.7952, 86.8465, 0.3006 ) }
    apic_19 { pt3dadd( 142.442, 64.6606, 87.0002, 0.2756 ) }
    apic_19 { pt3dadd( 142.141, 63.5722, 87.2872, 0.2766 ) }
    apic_19 { pt3dadd( 141.736, 62.5102, 87.6064, 0.2782 ) }
    apic_19 { pt3dadd( 141.17, 61.5278, 87.9547, 0.2814 ) }
    apic_19 { pt3dadd( 140.783, 60.4578, 88.2106, 0.287 ) }
    apic_19 { pt3dadd( 140.296, 59.4238, 88.2246, 0.2988 ) }
    apic_19 { pt3dadd( 139.843, 58.3745, 88.0849, 0.3142 ) }
    apic_19 { pt3dadd( 139.424, 57.3113, 87.9833, 0.3734 ) }
    apic_19 { pt3dadd( 139.188, 56.1936, 87.8721, 0.334 ) }
    apic_19 { pt3dadd( 138.71, 55.2666, 87.9749, 0.3 ) }
    apic_19 { pt3dadd( 138.107, 54.3446, 88.4419, 0.2748 ) }
    apic_19 { pt3dadd( 137.575, 53.3507, 88.9176, 0.2748 ) }
    apic_19 { pt3dadd( 137.104, 52.3327, 89.4522, 0.2752 ) }
    apic_19 { pt3dadd( 136.77, 51.2664, 90.0292, 0.2756 ) }
    apic_19 { pt3dadd( 136.486, 50.1842, 90.615, 0.2766 ) }
    apic_19 { pt3dadd( 136.207, 49.0978, 91.1672, 0.2782 ) }
    apic_19 { pt3dadd( 135.928, 48.0099, 91.6969, 0.2814 ) }
    apic_19 { pt3dadd( 135.699, 46.9042, 92.1416, 0.287 ) }
    apic_19 { pt3dadd( 135.464, 45.7934, 92.4806, 0.2988 ) }
    apic_19 { pt3dadd( 135.145, 44.7005, 92.7363, 0.3142 ) }
    apic_19 { pt3dadd( 134.88, 43.5915, 92.9373, 0.3734 ) }
    apic_19 { pt3dadd( 134.676, 42.4685, 93.1221, 0.3338 ) }
    apic_19 { pt3dadd( 134.43, 41.3558, 93.3573, 0.3 ) }
    apic_19 { pt3dadd( 134.151, 40.254, 93.6718, 0.2746 ) }
    apic_19 { pt3dadd( 133.794, 39.1789, 94.0495, 0.2746 ) }
    apic_19 { pt3dadd( 133.061, 38.3356, 94.4241, 0.2746 ) }
    apic_19 { pt3dadd( 132.182, 37.6191, 94.7786, 0.2746 ) }
    apic_19 { pt3dadd( 131.308, 36.898, 95.1504, 0.2746 ) }
    apic_19 { pt3dadd( 130.489, 36.1231, 95.6222, 0.2746 ) }
    apic_19 { pt3dadd( 129.701, 35.3289, 96.2024, 0.2746 ) }
    apic_19 { pt3dadd( 129.018, 34.4512, 96.847, 0.2746 ) }
    apic_19 { pt3dadd( 128.716, 33.3879, 97.4809, 0.2746 ) }
    apic_19 { pt3dadd( 128.515, 32.2896, 98.089, 0.2746 ) }
    apic_19 { pt3dadd( 128.322, 31.1866, 98.6616, 0.2746 ) }
    apic_19 { pt3dadd( 128.128, 30.0803, 99.1936, 0.2746 ) }
    apic_19 { pt3dadd( 127.934, 28.9715, 99.6915, 0.2746 ) }
    apic_19 { pt3dadd( 127.739, 27.8606, 100.163, 0.2746 ) }
    apic_19 { pt3dadd( 127.545, 26.7487, 100.616, 0.2746 ) }
    apic_19 { pt3dadd( 127.35, 25.6353, 101.049, 0.2746 ) }
    apic_19 { pt3dadd( 127.171, 24.5171, 101.444, 0.2746 ) }
    apic_19 { pt3dadd( 127.033, 23.3891, 101.766, 0.2746 ) }
    apic_19 { pt3dadd( 126.915, 22.2563, 102.029, 0.2746 ) }
    apic_19 { pt3dadd( 126.825, 21.12, 102.262, 0.2746 ) }
    apic_19 { pt3dadd( 126.74, 19.9827, 102.486, 0.2746 ) }
    apic_19 { pt3dadd( 126.981, 18.8786, 102.8, 0.2746 ) }
    apic_19 { pt3dadd( 127.451, 17.8545, 103.248, 0.2746 ) }
    apic_19 { pt3dadd( 127.954, 16.8512, 103.794, 0.2744 ) }
    apic_19 { pt3dadd( 128.456, 15.8523, 104.384, 0.2744 ) }
    apic_19 { pt3dadd( 129.118, 14.9437, 104.906, 0.2742 ) }
    apic_19 { pt3dadd( 129.997, 14.2271, 105.261, 0.274 ) }
    apic_19 { pt3dadd( 130.89, 13.516, 105.467, 0.2736 ) }
    apic_19 { pt3dadd( 131.783, 12.8027, 105.553, 0.2728 ) }
    apic_19 { pt3dadd( 132.678, 12.09, 105.557, 0.2712 ) }
    apic_19 { pt3dadd( 133.572, 11.377, 105.514, 0.2684 ) }
    apic_19 { pt3dadd( 134.466, 10.6636, 105.455, 0.2626 ) }
    apic_19 { pt3dadd( 135.36, 9.9511, 105.4, 0.2542 ) }
    apic_19 { pt3dadd( 136.372, 9.4148, 105.354, 0.2288 ) }
    apic_19 { pt3dadd( 137.51, 9.3092, 105.293, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 85/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 140.068, 112.423, 84.4007, 0.5214 ) }
    apic_18 { pt3dadd( 139.544, 112.101, 84.4707, 0.2288 ) }
    apic_18 { pt3dadd( 138.589, 111.473, 84.5076, 0.3232 ) }
    apic_18 { pt3dadd( 137.734, 110.719, 84.5908, 0.3904 ) }
    apic_18 { pt3dadd( 137.18, 109.731, 84.6518, 0.365 ) }
    apic_18 { pt3dadd( 136.646, 108.719, 84.6586, 0.36 ) }
    apic_18 { pt3dadd( 136.246, 107.65, 84.723, 0.3754 ) }
    apic_18 { pt3dadd( 135.628, 106.696, 84.8963, 0.5122 ) }
    apic_18 { pt3dadd( 135.263, 105.621, 85.0914, 0.4688 ) }
    apic_18 { pt3dadd( 134.881, 104.55, 85.388, 0.4574 ) }
    apic_18 { pt3dadd( 134.337, 103.573, 85.9362, 0.5598 ) }
    apic_18 { pt3dadd( 133.711, 102.685, 86.8073, 0.6066 ) }
    apic_18 { pt3dadd( 133.096, 101.823, 87.8497, 0.4726 ) }
    apic_18 { pt3dadd( 132.625, 100.835, 88.6346, 0.3806 ) }
    apic_18 { pt3dadd( 132.335, 99.7728, 89.3894, 0.3662 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_18 { pt3dadd( 132.105, 98.7353, 90.2815, 0.4966 ) }
    apic_18 { pt3dadd( 132.379, 97.7119, 91.243, 0.433 ) }
    apic_18 { pt3dadd( 132.616, 96.7117, 92.2152, 0.4248 ) }
    apic_18 { pt3dadd( 132.403, 95.646, 92.9681, 0.335 ) }
    apic_18 { pt3dadd( 131.93, 94.6727, 93.8361, 0.302 ) }
    apic_18 { pt3dadd( 131.426, 93.7718, 95.0284, 0.2782 ) }
    apic_18 { pt3dadd( 131.077, 92.8116, 96.2738, 0.2814 ) }
    apic_18 { pt3dadd( 130.829, 91.7846, 97.3431, 0.287 ) }
    apic_18 { pt3dadd( 130.68, 90.7213, 98.3027, 0.2988 ) }
    apic_18 { pt3dadd( 130.801, 89.6625, 99.2631, 0.3142 ) }
    apic_18 { pt3dadd( 131.291, 88.7302, 100.276, 0.3734 ) }
    apic_18 { pt3dadd( 131.734, 87.7741, 101.352, 0.3338 ) }
    apic_18 { pt3dadd( 131.623, 86.742, 102.419, 0.3 ) }
    apic_18 { pt3dadd( 131.307, 85.7986, 103.761, 0.2746 ) }
    apic_18 { pt3dadd( 131.521, 84.8339, 105.11, 0.2746 ) }
    apic_18 { pt3dadd( 132.05, 83.9432, 106.291, 0.2746 ) }
    apic_18 { pt3dadd( 132.487, 83.005, 107.482, 0.2746 ) }
    apic_18 { pt3dadd( 133.08, 82.1891, 108.668, 0.2746 ) }
    apic_18 { pt3dadd( 133.958, 81.5611, 109.577, 0.2746 ) }
    apic_18 { pt3dadd( 134.823, 80.8721, 110.229, 0.2746 ) }
    apic_18 { pt3dadd( 135.559, 80.0253, 110.731, 0.2746 ) }
    apic_18 { pt3dadd( 136.224, 79.1073, 111.105, 0.2746 ) }
    apic_18 { pt3dadd( 136.868, 78.1731, 111.461, 0.2746 ) }
    apic_18 { pt3dadd( 137.475, 77.2207, 111.897, 0.2746 ) }
    apic_18 { pt3dadd( 138.04, 76.2553, 112.477, 0.2746 ) }
    apic_18 { pt3dadd( 138.63, 75.324, 113.212, 0.2746 ) }
    apic_18 { pt3dadd( 139.216, 74.4006, 114.033, 0.2746 ) }
    apic_18 { pt3dadd( 139.629, 73.3803, 114.727, 0.2746 ) }
    apic_18 { pt3dadd( 139.844, 72.2786, 115.209, 0.2746 ) }
    apic_18 { pt3dadd( 139.907, 71.1458, 115.523, 0.2746 ) }
    apic_18 { pt3dadd( 140.011, 70.0158, 115.837, 0.2746 ) }
    apic_18 { pt3dadd( 140.208, 68.8953, 116.126, 0.2746 ) }
    apic_18 { pt3dadd( 140.349, 67.7646, 116.34, 0.2746 ) }
    apic_18 { pt3dadd( 140.445, 66.6302, 116.61, 0.2746 ) }
    apic_18 { pt3dadd( 140.527, 65.4962, 116.92, 0.2746 ) }
    apic_18 { pt3dadd( 140.603, 64.362, 117.234, 0.2746 ) }
    apic_18 { pt3dadd( 140.789, 63.243, 117.556, 0.2746 ) }
    apic_18 { pt3dadd( 141.1, 62.1551, 117.944, 0.2746 ) }
    apic_18 { pt3dadd( 141.5, 61.1164, 118.567, 0.2746 ) }
    apic_18 { pt3dadd( 141.807, 60.0762, 119.443, 0.2746 ) }
    apic_18 { pt3dadd( 142.284, 59.1043, 120.338, 0.2746 ) }
    apic_18 { pt3dadd( 142.817, 58.1516, 121.171, 0.2746 ) }
    apic_18 { pt3dadd( 143.319, 57.1732, 121.942, 0.2746 ) }
    apic_18 { pt3dadd( 143.804, 56.171, 122.583, 0.2746 ) }
    apic_18 { pt3dadd( 143.975, 55.0733, 123.179, 0.2746 ) }
    apic_18 { pt3dadd( 144.02, 53.9707, 123.91, 0.2746 ) }
    apic_18 { pt3dadd( 144.058, 52.8847, 124.784, 0.2746 ) }
    apic_18 { pt3dadd( 144.097, 51.8151, 125.772, 0.2746 ) }
    apic_18 { pt3dadd( 144.135, 50.7591, 126.845, 0.2746 ) }
    apic_18 { pt3dadd( 144.171, 49.7126, 127.973, 0.2746 ) }
    apic_18 { pt3dadd( 143.868, 48.721, 129.149, 0.2746 ) }
    apic_18 { pt3dadd( 143.451, 47.7717, 130.332, 0.2746 ) }
    apic_18 { pt3dadd( 143.04, 46.8221, 131.51, 0.2746 ) }
    apic_18 { pt3dadd( 143.085, 45.7744, 132.624, 0.2744 ) }
    apic_18 { pt3dadd( 143.421, 44.7657, 133.657, 0.2744 ) }
    apic_18 { pt3dadd( 143.764, 43.7534, 134.653, 0.2742 ) }
    apic_18 { pt3dadd( 144.109, 42.7381, 135.632, 0.274 ) }
    apic_18 { pt3dadd( 144.452, 41.7228, 136.611, 0.2736 ) }
    apic_18 { pt3dadd( 144.795, 40.71, 137.604, 0.2728 ) }
    apic_18 { pt3dadd( 145.158, 39.7291, 138.739, 0.2712 ) }
    apic_18 { pt3dadd( 145.548, 38.8119, 140.111, 0.2684 ) }
    apic_18 { pt3dadd( 145.933, 37.9116, 141.559, 0.2626 ) }
    apic_18 { pt3dadd( 146.319, 37.0114, 143.004, 0.2542 ) }
    apic_18 { pt3dadd( 146.686, 36.1561, 144.585, 0.2288 ) }
    apic_18 { pt3dadd( 146.978, 35.4762, 146.72, 0.2288 ) }
    // Section: apic_14, id: apic_14, parent: apic_6 (entry count 65/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 171.202, 152.425, 63.002, 0.3446 ) }
    apic_14 { pt3dadd( 170.942, 152.213, 61.6806, 0.4576 ) }
    apic_14 { pt3dadd( 170.034, 151.603, 62.4442, 0.5036 ) }
    apic_14 { pt3dadd( 169.191, 150.834, 62.6424, 0.469 ) }
    apic_14 { pt3dadd( 168.368, 150.052, 62.876, 0.379 ) }
    apic_14 { pt3dadd( 167.795, 149.077, 63.126, 0.3378 ) }
    apic_14 { pt3dadd( 167.544, 147.964, 63.2744, 0.339 ) }
    apic_14 { pt3dadd( 167.339, 146.843, 63.2806, 0.4218 ) }
    apic_14 { pt3dadd( 166.952, 145.766, 63.3072, 0.413 ) }
    apic_14 { pt3dadd( 166.54, 144.7, 63.2887, 0.4978 ) }
    apic_14 { pt3dadd( 166.31, 143.59, 63.2254, 0.3932 ) }
    apic_14 { pt3dadd( 166.317, 142.447, 63.2621, 0.3254 ) }
    apic_14 { pt3dadd( 166.117, 141.346, 63.4172, 0.2746 ) }
    apic_14 { pt3dadd( 165.609, 140.323, 63.5152, 0.2746 ) }
    apic_14 { pt3dadd( 165.163, 139.277, 63.6588, 0.2748 ) }
    apic_14 { pt3dadd( 164.827, 138.189, 63.9324, 0.275 ) }
    apic_14 { pt3dadd( 164.499, 137.099, 64.2093, 0.2754 ) }
    apic_14 { pt3dadd( 164.066, 136.047, 64.4076, 0.2762 ) }
    apic_14 { pt3dadd( 163.547, 135.029, 64.5352, 0.2774 ) }
    apic_14 { pt3dadd( 162.974, 134.04, 64.5075, 0.2798 ) }
    apic_14 { pt3dadd( 162.243, 133.175, 64.2471, 0.2844 ) }
    apic_14 { pt3dadd( 161.473, 132.339, 63.9388, 0.293 ) }
    apic_14 { pt3dadd( 160.573, 131.649, 64.1469, 0.3082 ) }
    apic_14 { pt3dadd( 159.646, 130.989, 64.4515, 0.3392 ) }
    apic_14 { pt3dadd( 158.721, 130.328, 64.7562, 0.3836 ) }
    apic_14 { pt3dadd( 157.76, 129.731, 65.021, 0.5286 ) }
    apic_14 { pt3dadd( 156.744, 129.224, 65.17, 0.4942 ) }
    apic_14 { pt3dadd( 155.847, 128.517, 65.2728, 0.5286 ) }
    apic_14 { pt3dadd( 155.012, 127.736, 65.3229, 0.5734 ) }
    apic_14 { pt3dadd( 154.244, 126.895, 65.3234, 0.5214 ) }
    apic_14 { pt3dadd( 153.595, 125.953, 65.2638, 0.3922 ) }
    apic_14 { pt3dadd( 152.924, 125.028, 65.2117, 0.3136 ) }
    apic_14 { pt3dadd( 152.155, 124.184, 65.154, 0.3008 ) }
    apic_14 { pt3dadd( 151.295, 123.432, 65.13, 0.3178 ) }
    apic_14 { pt3dadd( 150.418, 122.697, 65.1356, 0.3804 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_14 { pt3dadd( 149.552, 121.951, 65.1913, 0.3464 ) }
    apic_14 { pt3dadd( 148.649, 121.251, 65.333, 0.3244 ) }
    apic_14 { pt3dadd( 147.798, 120.5, 65.4931, 0.3144 ) }
    apic_14 { pt3dadd( 147.073, 119.619, 65.6326, 0.374 ) }
    apic_14 { pt3dadd( 146.36, 118.727, 65.7829, 0.335 ) }
    apic_14 { pt3dadd( 145.55, 117.925, 65.9098, 0.3022 ) }
    apic_14 { pt3dadd( 144.732, 117.13, 65.9954, 0.2786 ) }
    apic_14 { pt3dadd( 143.959, 116.286, 66.0058, 0.2818 ) }
    apic_14 { pt3dadd( 143.234, 115.403, 65.9702, 0.2882 ) }
    apic_14 { pt3dadd( 142.294, 115.132, 66.01, 0.2996 ) }
    apic_14 { pt3dadd( 141.16, 115.132, 66.0215, 0.3218 ) }
    apic_14 { pt3dadd( 140.031, 114.966, 66.1746, 0.358 ) }
    apic_14 { pt3dadd( 138.989, 114.528, 66.5179, 0.4492 ) }
    apic_14 { pt3dadd( 138.012, 113.952, 66.8836, 0.5018 ) }
    apic_14 { pt3dadd( 137.063, 113.323, 67.1384, 0.4776 ) }
    apic_14 { pt3dadd( 136.075, 112.745, 67.2347, 0.5662 ) }
    apic_14 { pt3dadd( 135.13, 112.101, 67.1566, 0.5404 ) }
    apic_14 { pt3dadd( 134.161, 111.498, 66.9939, 0.4998 ) }
    apic_14 { pt3dadd( 133.128, 111.013, 66.9637, 0.3896 ) }
    apic_14 { pt3dadd( 132.025, 110.746, 67.1166, 0.3558 ) }
    apic_14 { pt3dadd( 130.884, 110.739, 67.3008, 0.3796 ) }
    apic_14 { pt3dadd( 129.751, 110.726, 67.5553, 0.4618 ) }
    apic_14 { pt3dadd( 128.702, 110.361, 67.9017, 0.6578 ) }
    apic_14 { pt3dadd( 127.825, 109.639, 68.2156, 0.8092 ) }
    apic_14 { pt3dadd( 126.981, 108.872, 68.4219, 0.7478 ) }
    apic_14 { pt3dadd( 126.097, 108.149, 68.5524, 0.692 ) }
    apic_14 { pt3dadd( 125.136, 107.533, 68.6123, 0.7642 ) }
    apic_14 { pt3dadd( 124.098, 107.072, 68.6241, 0.732 ) }
    apic_14 { pt3dadd( 122.983, 106.819, 68.5994, 0.5634 ) }
    apic_14 { pt3dadd( 121.853, 106.652, 68.4606, 0.5506 ) }
    apic_14 { pt3dadd( 120.739, 106.435, 68.1876, 0.444 ) }
    apic_14 { pt3dadd( 119.666, 106.089, 67.7286, 0.4212 ) }
    apic_14 { pt3dadd( 118.601, 105.72, 67.2596, 0.4434 ) }
    apic_14 { pt3dadd( 117.553, 105.279, 67.0222, 0.6312 ) }
    apic_14 { pt3dadd( 116.58, 104.682, 66.9914, 0.723 ) }
    apic_14 { pt3dadd( 115.57, 104.152, 66.9998, 0.7668 ) }
    apic_14 { pt3dadd( 114.469, 103.875, 67.0398, 0.5466 ) }
    apic_14 { pt3dadd( 113.33, 103.872, 67.1107, 0.4566 ) }
    apic_14 { pt3dadd( 112.24, 103.595, 67.2493, 0.3464 ) }
    apic_14 { pt3dadd( 111.474, 102.785, 67.4254, 0.3242 ) }
    apic_14 { pt3dadd( 110.521, 102.168, 67.4671, 0.3144 ) }
    apic_14 { pt3dadd( 109.405, 102.159, 67.1661, 0.374 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 42/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 171.202, 152.425, 63.002, 0.3446 ) }
    apic_7 { pt3dadd( 170.913, 151.863, 63.1694, 0.3114 ) }
    apic_7 { pt3dadd( 170.56, 150.793, 63.4981, 0.3374 ) }
    apic_7 { pt3dadd( 170.425, 149.667, 63.8112, 0.4174 ) }
    apic_7 { pt3dadd( 170.264, 148.542, 64.0293, 0.411 ) }
    apic_7 { pt3dadd( 169.917, 147.456, 64.1158, 0.4644 ) }
    apic_7 { pt3dadd( 169.5, 146.392, 64.1491, 0.4758 ) }
    apic_7 { pt3dadd( 169.081, 145.327, 64.204, 0.4646 ) }
    apic_7 { pt3dadd( 168.59, 144.295, 64.26, 0.3712 ) }
    apic_7 { pt3dadd( 167.973, 143.336, 64.3034, 0.3218 ) }
    apic_7 { pt3dadd( 167.258, 142.444, 64.3457, 0.3162 ) }
    apic_7 { pt3dadd( 166.538, 141.556, 64.4165, 0.3464 ) }
    apic_7 { pt3dadd( 165.77, 140.711, 64.4487, 0.434 ) }
    apic_7 { pt3dadd( 165.081, 139.805, 64.3513, 0.4428 ) }
    apic_7 { pt3dadd( 164.457, 138.847, 64.2236, 0.518 ) }
    apic_7 { pt3dadd( 163.73, 137.967, 64.2127, 0.6016 ) }
    apic_7 { pt3dadd( 163.002, 137.088, 64.2687, 0.5688 ) }
    apic_7 { pt3dadd( 162.458, 136.088, 64.3378, 0.5052 ) }
    apic_7 { pt3dadd( 162.195, 134.984, 64.4356, 0.4002 ) }
    apic_7 { pt3dadd( 161.859, 133.896, 64.577, 0.3718 ) }
    apic_7 { pt3dadd( 161.264, 132.929, 64.6397, 0.4278 ) }
    apic_7 { pt3dadd( 160.436, 132.149, 64.65, 0.4612 ) }
    apic_7 { pt3dadd( 159.783, 131.225, 64.6626, 0.4068 ) }
    apic_7 { pt3dadd( 159.421, 130.314, 64.7668, 0.4132 ) }
    apic_7 { pt3dadd( 159.62, 129.19, 64.883, 0.3616 ) }
    apic_7 { pt3dadd( 159.628, 128.05, 65.0266, 0.3462 ) }
    apic_7 { pt3dadd( 159.277, 126.975, 65.1524, 0.386 ) }
    apic_7 { pt3dadd( 158.663, 126.016, 65.2168, 0.357 ) }
    apic_7 { pt3dadd( 158.01, 125.076, 65.2114, 0.3438 ) }
    apic_7 { pt3dadd( 157.42, 124.098, 65.2011, 0.3512 ) }
    apic_7 { pt3dadd( 156.86, 123.1, 65.2484, 0.438 ) }
    apic_7 { pt3dadd( 156.233, 122.145, 65.3486, 0.474 ) }
    apic_7 { pt3dadd( 155.482, 121.285, 65.4724, 0.4614 ) }
    apic_7 { pt3dadd( 154.654, 120.499, 65.6043, 0.3654 ) }
    apic_7 { pt3dadd( 153.859, 119.678, 65.7418, 0.3112 ) }
    apic_7 { pt3dadd( 153.128, 118.801, 65.9022, 0.2952 ) }
    apic_7 { pt3dadd( 152.454, 117.881, 66.0985, 0.314 ) }
    apic_7 { pt3dadd( 151.951, 116.861, 66.3032, 0.3422 ) }
    apic_7 { pt3dadd( 151.654, 115.761, 66.4857, 0.4264 ) }
    apic_7 { pt3dadd( 151.432, 114.641, 66.6546, 0.4276 ) }
    apic_7 { pt3dadd( 151.214, 113.52, 66.7951, 0.4964 ) }
    apic_7 { pt3dadd( 151.0, 112.396, 66.8783, 0.5294 ) }
    apic_7 { pt3dadd( 150.848, 111.263, 66.92, 0.5906 ) }
    apic_7 { pt3dadd( 150.786, 110.121, 66.9469, 0.4756 ) }
    apic_7 { pt3dadd( 150.739, 108.978, 66.9864, 0.4566 ) }
    apic_7 { pt3dadd( 150.522, 107.857, 66.9379, 0.3946 ) }
    apic_7 { pt3dadd( 150.088, 106.805, 66.7397, 0.409 ) }
    apic_7 { pt3dadd( 149.676, 105.745, 66.43, 0.493 ) }
    apic_7 { pt3dadd( 149.673, 104.615, 66.0923, 0.6012 ) }
    apic_7 { pt3dadd( 150.042, 103.545, 65.7586, 0.574 ) }
    apic_7 { pt3dadd( 150.244, 102.425, 65.4979, 0.4862 ) }
    apic_7 { pt3dadd( 150.139, 101.288, 65.4307, 0.504 ) }
    apic_7 { pt3dadd( 149.857, 100.18, 65.4321, 0.5748 ) }
    apic_7 { pt3dadd( 149.472, 99.103, 65.3688, 0.5242 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 96/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 109.405, 102.159, 67.1661, 0.374 ) }
    apic_16 { pt3dadd( 108.284, 102.719, 66.0302, 0.3348 ) }
    apic_16 { pt3dadd( 107.185, 102.663, 65.2893, 0.3016 ) }
    apic_16 { pt3dadd( 106.171, 102.3, 64.3768, 0.2776 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_16 { pt3dadd( 105.119, 102.344, 63.3125, 0.2802 ) }
    apic_16 { pt3dadd( 104.05, 102.554, 62.4778, 0.285 ) }
    apic_16 { pt3dadd( 102.962, 102.606, 61.6283, 0.2938 ) }
    apic_16 { pt3dadd( 101.877, 102.671, 60.7905, 0.3112 ) }
    apic_16 { pt3dadd( 100.774, 102.822, 60.1647, 0.3384 ) }
    apic_16 { pt3dadd( 99.6445, 102.853, 59.7719, 0.4132 ) }
    apic_16 { pt3dadd( 98.5296, 102.697, 59.3947, 0.4334 ) }
    apic_16 { pt3dadd( 97.4228, 102.529, 58.8549, 0.3604 ) }
    apic_16 { pt3dadd( 96.3077, 102.633, 58.3425, 0.302 ) }
    apic_16 { pt3dadd( 95.1849, 102.683, 57.8337, 0.2782 ) }
    apic_16 { pt3dadd( 94.0623, 102.658, 57.3017, 0.2814 ) }
    apic_16 { pt3dadd( 92.9512, 102.794, 56.7554, 0.2872 ) }
    apic_16 { pt3dadd( 91.8245, 102.826, 56.3035, 0.299 ) }
    apic_16 { pt3dadd( 90.7103, 102.634, 55.9364, 0.3146 ) }
    apic_16 { pt3dadd( 89.5916, 102.641, 55.4151, 0.3744 ) }
    apic_16 { pt3dadd( 88.5147, 102.933, 54.8178, 0.3358 ) }
    apic_16 { pt3dadd( 87.4022, 102.865, 54.2049, 0.3036 ) }
    apic_16 { pt3dadd( 86.317, 102.604, 53.5954, 0.2814 ) }
    apic_16 { pt3dadd( 85.197, 102.512, 53.0768, 0.287 ) }
    apic_16 { pt3dadd( 84.0782, 102.606, 52.5459, 0.2988 ) }
    apic_16 { pt3dadd( 83.0059, 102.781, 51.6816, 0.3142 ) }
    apic_16 { pt3dadd( 81.9228, 102.83, 50.8329, 0.3734 ) }
    apic_16 { pt3dadd( 80.7958, 102.796, 50.3684, 0.334 ) }
    apic_16 { pt3dadd( 79.6631, 102.742, 49.9982, 0.3 ) }
    apic_16 { pt3dadd( 78.5306, 102.687, 49.6244, 0.2748 ) }
    apic_16 { pt3dadd( 77.4065, 102.625, 49.1403, 0.2748 ) }
    apic_16 { pt3dadd( 76.3243, 102.536, 48.2891, 0.2752 ) }
    apic_16 { pt3dadd( 75.2586, 102.561, 47.285, 0.2756 ) }
    apic_16 { pt3dadd( 74.1665, 102.826, 46.7914, 0.2766 ) }
    apic_16 { pt3dadd( 73.0577, 103.055, 46.4318, 0.2784 ) }
    apic_16 { pt3dadd( 71.9387, 103.122, 46.0228, 0.2818 ) }
    apic_16 { pt3dadd( 70.8062, 103.053, 45.668, 0.2878 ) }
    apic_16 { pt3dadd( 69.6745, 103.074, 45.2942, 0.3 ) }
    apic_16 { pt3dadd( 68.5626, 103.064, 44.6589, 0.3166 ) }
    apic_16 { pt3dadd( 67.4981, 102.867, 43.7674, 0.378 ) }
    apic_16 { pt3dadd( 66.4231, 102.625, 43.02, 0.3424 ) }
    apic_16 { pt3dadd( 65.329, 102.361, 42.5214, 0.3156 ) }
    apic_16 { pt3dadd( 64.2223, 102.113, 42.1784, 0.3034 ) }
    apic_16 { pt3dadd( 63.093, 102.013, 41.8258, 0.329 ) }
    apic_16 { pt3dadd( 61.9732, 101.969, 41.3778, 0.371 ) }
    apic_16 { pt3dadd( 60.9103, 101.617, 40.8142, 0.4754 ) }
    apic_16 { pt3dadd( 59.8783, 101.198, 40.1761, 0.5392 ) }
    apic_16 { pt3dadd( 58.8374, 100.823, 39.4783, 0.6024 ) }
    apic_16 { pt3dadd( 57.7585, 100.619, 38.7526, 0.5282 ) }
    apic_16 { pt3dadd( 56.6434, 100.629, 38.157, 0.4054 ) }
    apic_16 { pt3dadd( 55.5107, 100.683, 37.8266, 0.3334 ) }
    apic_16 { pt3dadd( 54.392, 100.557, 37.5035, 0.3616 ) }
    apic_16 { pt3dadd( 53.3441, 100.189, 36.8572, 0.3136 ) }
    apic_16 { pt3dadd( 52.6086, 99.343, 36.4045, 0.2542 ) }
    apic_16 { pt3dadd( 51.5939, 98.8416, 36.12, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 50/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 109.405, 102.159, 67.1661, 0.374 ) }
    apic_15 { pt3dadd( 109.231, 101.961, 68.1069, 0.4576 ) }
    apic_15 { pt3dadd( 108.633, 101.279, 69.8116, 0.3724 ) }
    apic_15 { pt3dadd( 108.061, 100.403, 70.8739, 0.3252 ) }
    apic_15 { pt3dadd( 107.83, 99.3579, 71.8301, 0.3162 ) }
    apic_15 { pt3dadd( 107.809, 98.2596, 72.452, 0.3772 ) }
    apic_15 { pt3dadd( 108.118, 97.1836, 72.9873, 0.341 ) }
    apic_15 { pt3dadd( 108.587, 96.1582, 73.4227, 0.3128 ) }
    apic_15 { pt3dadd( 109.145, 95.1651, 73.6887, 0.2994 ) }
    apic_15 { pt3dadd( 109.546, 94.1275, 74.0328, 0.3154 ) }
    apic_15 { pt3dadd( 109.535, 93.0325, 74.7564, 0.3756 ) }
    apic_15 { pt3dadd( 109.578, 91.9309, 75.4827, 0.338 ) }
    apic_15 { pt3dadd( 109.591, 90.8155, 76.1009, 0.3078 ) }
    apic_15 { pt3dadd( 109.528, 89.6894, 76.5618, 0.2888 ) }
    apic_15 { pt3dadd( 109.379, 88.5602, 76.8048, 0.3012 ) }
    apic_15 { pt3dadd( 109.308, 87.4192, 76.8275, 0.3236 ) }
    apic_15 { pt3dadd( 109.378, 86.2783, 76.7558, 0.3672 ) }
    apic_15 { pt3dadd( 109.389, 85.1346, 76.8107, 0.4388 ) }
    apic_15 { pt3dadd( 109.175, 84.0136, 77.0045, 0.6154 ) }
    apic_15 { pt3dadd( 108.878, 82.913, 77.2313, 0.7298 ) }
    apic_15 { pt3dadd( 108.566, 81.8167, 77.4673, 0.603 ) }
    apic_15 { pt3dadd( 108.129, 80.7651, 77.7272, 0.4114 ) }
    apic_15 { pt3dadd( 107.813, 79.7004, 78.2715, 0.3024 ) }
    apic_15 { pt3dadd( 107.833, 78.6063, 79.0821, 0.2792 ) }
    apic_15 { pt3dadd( 107.759, 77.4974, 79.6902, 0.283 ) }
    apic_15 { pt3dadd( 107.508, 76.4004, 80.1553, 0.2902 ) }
    apic_15 { pt3dadd( 107.302, 75.308, 80.7184, 0.3046 ) }
    apic_15 { pt3dadd( 107.096, 74.2247, 81.4229, 0.3248 ) }
    apic_15 { pt3dadd( 106.71, 73.1876, 82.11, 0.3942 ) }
    apic_15 { pt3dadd( 106.389, 72.1478, 82.945, 0.3672 ) }
    apic_15 { pt3dadd( 106.283, 71.0995, 84.0123, 0.387 ) }
    apic_15 { pt3dadd( 106.053, 70.0393, 84.896, 0.3136 ) }
    apic_15 { pt3dadd( 105.689, 68.9765, 85.4213, 0.2542 ) }
    apic_15 { pt3dadd( 105.706, 67.8392, 85.68, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_7 (entry count 84/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 149.472, 99.103, 65.3688, 0.5242 ) }
    apic_13 { pt3dadd( 148.858, 98.4151, 67.0687, 0.2288 ) }
    apic_13 { pt3dadd( 148.082, 97.6015, 67.5259, 0.2746 ) }
    apic_13 { pt3dadd( 147.237, 96.8343, 67.7107, 0.2746 ) }
    apic_13 { pt3dadd( 146.414, 96.0469, 67.8364, 0.2746 ) }
    apic_13 { pt3dadd( 145.656, 95.1911, 67.9535, 0.2746 ) }
    apic_13 { pt3dadd( 144.845, 94.3872, 68.0319, 0.2746 ) }
    apic_13 { pt3dadd( 144.039, 93.5827, 68.0338, 0.2748 ) }
    apic_13 { pt3dadd( 143.421, 92.6306, 68.0005, 0.275 ) }
    apic_13 { pt3dadd( 142.902, 91.6124, 67.9916, 0.2754 ) }
    apic_13 { pt3dadd( 142.344, 90.6136, 67.9644, 0.276 ) }
    apic_13 { pt3dadd( 141.796, 89.61, 67.8728, 0.2772 ) }
    apic_13 { pt3dadd( 141.21, 88.6296, 67.797, 0.2794 ) }
    apic_13 { pt3dadd( 140.576, 87.6776, 67.7765, 0.2836 ) }
    apic_13 { pt3dadd( 139.934, 86.732, 67.66, 0.291 ) }
    apic_13 { pt3dadd( 139.392, 85.7333, 67.4106, 0.306 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_13 { pt3dadd( 138.996, 84.6658, 67.2076, 0.3278 ) }
    apic_13 { pt3dadd( 138.711, 83.5597, 67.1132, 0.3984 ) }
    apic_13 { pt3dadd( 138.343, 82.4802, 67.1118, 0.3822 ) }
    apic_13 { pt3dadd( 137.862, 81.4434, 67.1852, 0.3792 ) }
    apic_13 { pt3dadd( 137.451, 80.3793, 67.3058, 0.4724 ) }
    apic_13 { pt3dadd( 137.126, 79.2848, 67.4682, 0.3932 ) }
    apic_13 { pt3dadd( 136.795, 78.1957, 67.7457, 0.3256 ) }
    apic_13 { pt3dadd( 136.384, 77.1444, 68.1808, 0.2748 ) }
    apic_13 { pt3dadd( 135.954, 76.0989, 68.6073, 0.2752 ) }
    apic_13 { pt3dadd( 135.571, 75.0335, 69.0035, 0.2758 ) }
    apic_13 { pt3dadd( 135.262, 73.9479, 69.4557, 0.2768 ) }
    apic_13 { pt3dadd( 135.058, 72.8366, 69.8883, 0.2786 ) }
    apic_13 { pt3dadd( 134.943, 71.7082, 70.2439, 0.282 ) }
    apic_13 { pt3dadd( 134.804, 70.58, 70.5589, 0.2884 ) }
    apic_13 { pt3dadd( 134.42, 69.5123, 70.8366, 0.2996 ) }
    apic_13 { pt3dadd( 133.989, 68.4645, 71.2242, 0.3232 ) }
    apic_13 { pt3dadd( 133.715, 67.3734, 71.7315, 0.3544 ) }
    apic_13 { pt3dadd( 133.416, 66.2961, 72.3108, 0.4736 ) }
    apic_13 { pt3dadd( 133.3, 65.1868, 72.9254, 0.3958 ) }
    apic_13 { pt3dadd( 133.29, 64.0654, 73.465, 0.3302 ) }
    apic_13 { pt3dadd( 133.104, 62.9608, 73.9984, 0.2834 ) }
    apic_13 { pt3dadd( 132.635, 61.9604, 74.6861, 0.2908 ) }
    apic_13 { pt3dadd( 131.983, 61.0879, 75.5406, 0.3058 ) }
    apic_13 { pt3dadd( 131.324, 60.2115, 76.3232, 0.327 ) }
    apic_13 { pt3dadd( 130.717, 59.2789, 76.9658, 0.3984 ) }
    apic_13 { pt3dadd( 130.102, 58.3381, 77.492, 0.375 ) }
    apic_13 { pt3dadd( 129.444, 57.4207, 77.919, 0.4018 ) }
    apic_13 { pt3dadd( 128.775, 56.4994, 78.1712, 0.3396 ) }
    apic_13 { pt3dadd( 128.205, 55.512, 78.3171, 0.3104 ) }
    apic_13 { pt3dadd( 127.751, 54.4676, 78.5215, 0.2938 ) }
    apic_13 { pt3dadd( 127.416, 53.3864, 78.899, 0.3112 ) }
    apic_13 { pt3dadd( 127.161, 52.2889, 79.38, 0.3382 ) }
    apic_13 { pt3dadd( 126.851, 51.2173, 79.97, 0.413 ) }
    apic_13 { pt3dadd( 126.468, 50.179, 80.6789, 0.4328 ) }
    apic_13 { pt3dadd( 126.177, 49.1179, 81.4114, 0.3594 ) }
    apic_13 { pt3dadd( 126.002, 48.0257, 82.122, 0.3 ) }
    apic_13 { pt3dadd( 125.859, 46.9257, 82.808, 0.2746 ) }
    apic_13 { pt3dadd( 125.768, 45.8166, 83.4445, 0.2746 ) }
    apic_13 { pt3dadd( 125.752, 44.6961, 84.0006, 0.2746 ) }
    apic_13 { pt3dadd( 125.771, 43.5689, 84.4752, 0.2746 ) }
    apic_13 { pt3dadd( 125.8, 42.4374, 84.8803, 0.2746 ) }
    apic_13 { pt3dadd( 125.829, 41.3024, 85.2239, 0.2746 ) }
    apic_13 { pt3dadd( 125.857, 40.1648, 85.5084, 0.2746 ) }
    apic_13 { pt3dadd( 125.885, 39.0246, 85.7206, 0.2746 ) }
    apic_13 { pt3dadd( 125.929, 37.8829, 85.8441, 0.2746 ) }
    apic_13 { pt3dadd( 126.068, 36.7497, 85.8673, 0.2746 ) }
    apic_13 { pt3dadd( 126.309, 35.6326, 85.7951, 0.2746 ) }
    apic_13 { pt3dadd( 126.587, 34.5242, 85.6596, 0.2746 ) }
    apic_13 { pt3dadd( 126.868, 33.4173, 85.5036, 0.2746 ) }
    apic_13 { pt3dadd( 127.151, 32.3102, 85.3675, 0.2746 ) }
    apic_13 { pt3dadd( 127.484, 31.2172, 85.3269, 0.2746 ) }
    apic_13 { pt3dadd( 127.898, 30.1533, 85.4602, 0.2746 ) }
    apic_13 { pt3dadd( 128.352, 29.1129, 85.7861, 0.2746 ) }
    apic_13 { pt3dadd( 128.813, 28.0852, 86.2708, 0.2746 ) }
    apic_13 { pt3dadd( 129.272, 27.0664, 86.87, 0.2746 ) }
    apic_13 { pt3dadd( 129.729, 26.0539, 87.5448, 0.2746 ) }
    apic_13 { pt3dadd( 130.182, 25.0455, 88.2644, 0.2746 ) }
    apic_13 { pt3dadd( 130.649, 24.0477, 89.0126, 0.2746 ) }
    apic_13 { pt3dadd( 131.218, 23.1118, 89.7988, 0.2746 ) }
    apic_13 { pt3dadd( 131.876, 22.2405, 90.6293, 0.2744 ) }
    apic_13 { pt3dadd( 132.556, 21.3936, 91.5051, 0.2744 ) }
    apic_13 { pt3dadd( 133.236, 20.5542, 92.4272, 0.2742 ) }
    apic_13 { pt3dadd( 133.865, 19.6781, 93.354, 0.274 ) }
    apic_13 { pt3dadd( 134.404, 18.7393, 94.2463, 0.2736 ) }
    apic_13 { pt3dadd( 134.832, 17.8322, 95.5214, 0.2728 ) }
    apic_13 { pt3dadd( 135.161, 17.0033, 97.2734, 0.2712 ) }
    apic_13 { pt3dadd( 135.308, 16.2258, 99.022, 0.2684 ) }
    apic_13 { pt3dadd( 134.483, 15.6638, 100.366, 0.2626 ) }
    apic_13 { pt3dadd( 133.535, 15.3944, 101.787, 0.2542 ) }
    apic_13 { pt3dadd( 132.61, 15.1324, 103.269, 0.2288 ) }
    apic_13 { pt3dadd( 131.849, 14.9168, 105.293, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 71/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 149.472, 99.103, 65.3688, 0.5242 ) }
    apic_8 { pt3dadd( 149.349, 98.6574, 65.2565, 0.3972 ) }
    apic_8 { pt3dadd( 149.144, 97.5421, 64.9323, 0.3234 ) }
    apic_8 { pt3dadd( 148.768, 96.4942, 64.3205, 0.3174 ) }
    apic_8 { pt3dadd( 148.28, 95.4961, 63.6563, 0.3558 ) }
    apic_8 { pt3dadd( 147.798, 94.4959, 62.9924, 0.4168 ) }
    apic_8 { pt3dadd( 147.2, 93.569, 62.2854, 0.5788 ) }
    apic_8 { pt3dadd( 146.495, 92.7182, 61.5563, 0.6426 ) }
    apic_8 { pt3dadd( 145.841, 91.8253, 60.87, 0.5366 ) }
    apic_8 { pt3dadd( 145.259, 90.8752, 60.2263, 0.512 ) }
    apic_8 { pt3dadd( 144.639, 89.9529, 59.5857, 0.5478 ) }
    apic_8 { pt3dadd( 143.93, 89.0929, 58.9579, 0.4482 ) }
    apic_8 { pt3dadd( 143.271, 88.1942, 58.364, 0.3826 ) }
    apic_8 { pt3dadd( 142.717, 87.2313, 57.7007, 0.3702 ) }
    apic_8 { pt3dadd( 142.104, 86.3226, 56.9016, 0.5024 ) }
    apic_8 { pt3dadd( 141.496, 85.4137, 56.1019, 0.4512 ) }
    apic_8 { pt3dadd( 140.937, 84.4703, 55.3132, 0.4222 ) }
    apic_8 { pt3dadd( 140.194, 83.7, 54.5269, 0.5064 ) }
    apic_8 { pt3dadd( 139.2, 83.2229, 53.8143, 0.4508 ) }
    apic_8 { pt3dadd( 138.162, 82.8027, 53.251, 0.459 ) }
    apic_8 { pt3dadd( 137.16, 82.2967, 52.7355, 0.3928 ) }
    apic_8 { pt3dadd( 136.197, 81.7298, 52.1349, 0.4356 ) }
    apic_8 { pt3dadd( 135.247, 81.1494, 51.4912, 0.3978 ) }
    apic_8 { pt3dadd( 134.259, 80.6363, 50.8774, 0.4388 ) }
    apic_8 { pt3dadd( 133.214, 80.2297, 50.3294, 0.4334 ) }
    apic_8 { pt3dadd( 132.202, 79.7527, 49.8574, 0.3604 ) }
    apic_8 { pt3dadd( 131.363, 79.0163, 49.4245, 0.302 ) }
    apic_8 { pt3dadd( 130.66, 78.1337, 48.9759, 0.2782 ) }
    apic_8 { pt3dadd( 130.014, 77.2206, 48.4394, 0.2814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_8 { pt3dadd( 129.588, 76.2024, 47.7929, 0.2872 ) }
    apic_8 { pt3dadd( 129.21, 75.1758, 47.0196, 0.299 ) }
    apic_8 { pt3dadd( 128.623, 74.2678, 46.1457, 0.3146 ) }
    apic_8 { pt3dadd( 127.852, 73.4883, 45.3902, 0.3744 ) }
    apic_8 { pt3dadd( 127.066, 72.6947, 44.8112, 0.3356 ) }
    apic_8 { pt3dadd( 126.455, 71.7556, 44.3884, 0.3032 ) }
    apic_8 { pt3dadd( 126.129, 70.6777, 44.1087, 0.2804 ) }
    apic_8 { pt3dadd( 125.87, 69.5681, 43.8914, 0.2854 ) }
    apic_8 { pt3dadd( 125.324, 68.5945, 43.6187, 0.2944 ) }
    apic_8 { pt3dadd( 124.451, 67.9021, 43.1824, 0.3124 ) }
    apic_8 { pt3dadd( 123.665, 67.0931, 42.8848, 0.339 ) }
    apic_8 { pt3dadd( 122.951, 66.2012, 42.9122, 0.4218 ) }
    // Section: apic_12, id: apic_12, parent: apic_8 (entry count 12/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 122.951, 66.2012, 42.9122, 0.4218 ) }
    apic_12 { pt3dadd( 122.988, 65.5113, 41.6858, 0.2288 ) }
    apic_12 { pt3dadd( 122.891, 64.6068, 39.9932, 0.2828 ) }
    apic_12 { pt3dadd( 122.749, 63.5617, 38.9698, 0.291 ) }
    apic_12 { pt3dadd( 122.601, 62.4992, 37.9985, 0.2994 ) }
    apic_12 { pt3dadd( 122.28, 61.4696, 37.0983, 0.3474 ) }
    apic_12 { pt3dadd( 121.645, 60.5659, 36.4406, 0.2796 ) }
    apic_12 { pt3dadd( 121.604, 59.4665, 35.6731, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 20/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 122.951, 66.2012, 42.9122, 0.4218 ) }
    apic_9 { pt3dadd( 122.49, 65.8793, 42.943, 0.413 ) }
    apic_9 { pt3dadd( 121.628, 65.1286, 42.985, 0.4978 ) }
    apic_9 { pt3dadd( 120.669, 64.5071, 42.9778, 0.3932 ) }
    apic_9 { pt3dadd( 119.658, 63.9757, 42.8425, 0.3254 ) }
    apic_9 { pt3dadd( 118.564, 63.6582, 42.5748, 0.2746 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 26/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 118.564, 63.6582, 42.5748, 0.2746 ) }
    apic_11 { pt3dadd( 118.738, 63.3435, 42.3926, 0.2746 ) }
    apic_11 { pt3dadd( 118.775, 62.2154, 42.161, 0.2746 ) }
    apic_11 { pt3dadd( 118.609, 61.0874, 41.9611, 0.2746 ) }
    apic_11 { pt3dadd( 118.42, 59.9617, 41.7729, 0.2746 ) }
    apic_11 { pt3dadd( 118.031, 58.8888, 41.6321, 0.2746 ) }
    apic_11 { pt3dadd( 117.56, 57.8474, 41.5341, 0.2746 ) }
    apic_11 { pt3dadd( 117.127, 56.7887, 41.4616, 0.2746 ) }
    apic_11 { pt3dadd( 117.068, 55.6514, 41.4142, 0.2746 ) }
    apic_11 { pt3dadd( 117.12, 54.5089, 41.3851, 0.2746 ) }
    apic_11 { pt3dadd( 117.21, 53.3684, 41.3633, 0.2746 ) }
    apic_11 { pt3dadd( 117.318, 52.2297, 41.3367, 0.2746 ) }
    apic_11 { pt3dadd( 117.433, 51.0914, 41.3006, 0.2746 ) }
    apic_11 { pt3dadd( 117.154, 49.9874, 41.2513, 0.2746 ) }
    apic_11 { pt3dadd( 116.722, 48.9291, 41.1872, 0.2746 ) }
    apic_11 { pt3dadd( 116.429, 47.8249, 41.0802, 0.2746 ) }
    apic_11 { pt3dadd( 116.203, 46.7054, 40.9282, 0.2746 ) }
    apic_11 { pt3dadd( 115.987, 45.5845, 40.7439, 0.2746 ) }
    apic_11 { pt3dadd( 115.771, 44.4643, 40.5412, 0.2746 ) }
    apic_11 { pt3dadd( 115.553, 43.3442, 40.3334, 0.2746 ) }
    apic_11 { pt3dadd( 115.337, 42.2239, 40.133, 0.2746 ) }
    apic_11 { pt3dadd( 115.194, 41.091, 39.9703, 0.2746 ) }
    apic_11 { pt3dadd( 115.112, 39.9509, 39.8597, 0.2746 ) }
    apic_11 { pt3dadd( 115.043, 38.8093, 39.7947, 0.2746 ) }
    apic_11 { pt3dadd( 114.974, 37.6675, 39.7653, 0.2746 ) }
    apic_11 { pt3dadd( 115.162, 36.541, 39.7628, 0.2746 ) }
    apic_11 { pt3dadd( 115.589, 35.481, 39.7799, 0.2746 ) }
    apic_11 { pt3dadd( 115.344, 34.3771, 39.811, 0.2746 ) }
    apic_11 { pt3dadd( 115.01, 33.283, 39.8552, 0.2746 ) }
    apic_11 { pt3dadd( 114.448, 32.2891, 39.9137, 0.2746 ) }
    apic_11 { pt3dadd( 113.862, 31.3067, 39.9946, 0.2746 ) }
    apic_11 { pt3dadd( 113.548, 30.2106, 40.1296, 0.2746 ) }
    apic_11 { pt3dadd( 113.262, 29.1052, 40.3088, 0.2746 ) }
    apic_11 { pt3dadd( 112.978, 28.0005, 40.5188, 0.2748 ) }
    apic_11 { pt3dadd( 112.694, 26.8964, 40.7464, 0.2748 ) }
    apic_11 { pt3dadd( 112.409, 25.7923, 40.98, 0.275 ) }
    apic_11 { pt3dadd( 112.132, 24.6864, 41.2087, 0.2754 ) }
    apic_11 { pt3dadd( 111.982, 23.5551, 41.3913, 0.2762 ) }
    apic_11 { pt3dadd( 111.847, 22.4207, 41.54, 0.2776 ) }
    apic_11 { pt3dadd( 111.94, 21.283, 41.6735, 0.2804 ) }
    apic_11 { pt3dadd( 112.053, 20.146, 41.811, 0.2852 ) }
    apic_11 { pt3dadd( 112.006, 19.0057, 41.986, 0.2954 ) }
    apic_11 { pt3dadd( 111.703, 17.9076, 42.1971, 0.3078 ) }
    apic_11 { pt3dadd( 111.377, 16.8176, 42.4948, 0.3616 ) }
    apic_11 { pt3dadd( 111.044, 15.7405, 42.9643, 0.3136 ) }
    apic_11 { pt3dadd( 110.713, 14.6765, 43.5758, 0.2542 ) }
    apic_11 { pt3dadd( 110.413, 13.7095, 44.879, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 73/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 118.564, 63.6582, 42.5748, 0.2746 ) }
    apic_10 { pt3dadd( 117.731, 63.1846, 41.7292, 0.2288 ) }
    apic_10 { pt3dadd( 116.854, 62.517, 41.018, 0.4726 ) }
    apic_10 { pt3dadd( 116.018, 61.7546, 40.6521, 0.3936 ) }
    apic_10 { pt3dadd( 115.193, 60.9712, 40.3483, 0.3262 ) }
    apic_10 { pt3dadd( 114.299, 60.271, 40.0498, 0.276 ) }
    apic_10 { pt3dadd( 113.421, 59.5516, 39.7068, 0.2772 ) }
    apic_10 { pt3dadd( 112.83, 58.6036, 39.3002, 0.2794 ) }
    apic_10 { pt3dadd( 112.512, 57.5155, 39.0113, 0.2834 ) }
    apic_10 { pt3dadd( 112.088, 56.4574, 38.8528, 0.2908 ) }
    apic_10 { pt3dadd( 111.256, 55.7016, 38.7517, 0.3058 ) }
    apic_10 { pt3dadd( 110.344, 55.0126, 38.6632, 0.3268 ) }
    apic_10 { pt3dadd( 109.611, 54.143, 38.5372, 0.3982 ) }
    apic_10 { pt3dadd( 109.005, 53.1771, 38.3415, 0.3744 ) }
    apic_10 { pt3dadd( 108.428, 52.1953, 38.0699, 0.4008 ) }
    apic_10 { pt3dadd( 107.855, 51.214, 37.7493, 0.3376 ) }
    apic_10 { pt3dadd( 107.283, 50.2334, 37.4119, 0.3068 ) }
    apic_10 { pt3dadd( 106.607, 49.3184, 37.1244, 0.287 ) }
    apic_10 { pt3dadd( 105.884, 48.4368, 36.9046, 0.2988 ) }
    apic_10 { pt3dadd( 105.152, 47.5607, 36.738, 0.3142 ) }
    apic_10 { pt3dadd( 104.418, 46.6852, 36.6036, 0.3734 ) }
    apic_10 { pt3dadd( 103.618, 45.8689, 36.4809, 0.3338 ) }
    apic_10 { pt3dadd( 102.79, 45.0817, 36.342, 0.3 ) }
    apic_10 { pt3dadd( 101.926, 44.3384, 36.1189, 0.2746 ) }
    apic_10 { pt3dadd( 101.052, 43.611, 35.8089, 0.2746 ) }
    apic_10 { pt3dadd( 100.219, 42.8399, 35.4595, 0.2746 ) }
    apic_10 { pt3dadd( 99.5095, 41.9536, 35.1372, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_10 { pt3dadd( 98.8334, 41.0386, 34.8424, 0.2746 ) }
    apic_10 { pt3dadd( 98.16, 40.1213, 34.5565, 0.2746 ) }
    apic_10 { pt3dadd( 97.4667, 39.2195, 34.2577, 0.2744 ) }
    apic_10 { pt3dadd( 96.7573, 38.333, 33.9161, 0.2744 ) }
    apic_10 { pt3dadd( 95.8534, 37.6731, 33.4096, 0.2742 ) }
    apic_10 { pt3dadd( 94.8133, 37.3402, 32.6281, 0.274 ) }
    apic_10 { pt3dadd( 93.7776, 37.0726, 31.6364, 0.2736 ) }
    apic_10 { pt3dadd( 92.7383, 36.9781, 30.4945, 0.2728 ) }
    apic_10 { pt3dadd( 91.7345, 37.1766, 29.2432, 0.2712 ) }
    apic_10 { pt3dadd( 90.7428, 37.392, 27.9528, 0.2684 ) }
    apic_10 { pt3dadd( 89.834, 37.8081, 26.6312, 0.2626 ) }
    apic_10 { pt3dadd( 89.2612, 38.6361, 25.3021, 0.2542 ) }
    apic_10 { pt3dadd( 88.7069, 39.4375, 23.8798, 0.2288 ) }
    apic_10 { pt3dadd( 88.2551, 40.0905, 21.8641, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_168, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_168 = new SectionList()
    soma_0 ModelViewParmSubset_168.append()
    axon_0 ModelViewParmSubset_168.append()
    axon_1 ModelViewParmSubset_168.append()

    // Group: {name=ModelViewParmSubset_169, groups=[], sections=[dend_49, dend_48, dend_47, dend_44, dend_37, dend_26, dend_14, apic_0, dend_3, dend_0, dend_46, dend_45, dend_43, dend_38, dend_36, dend_27, dend_25, dend_18, dend_15, apic_24, apic_1, dend_11, dend_4, dend_2, dend_1, dend_40, dend_39, dend_31, dend_28, dend_24, dend_19, dend_17, dend_16, apic_21, apic_2, dend_13, dend_12, dend_8, dend_5, dend_42, dend_41, dend_33, dend_32, dend_30, dend_29, dend_23, dend_20, apic_23, apic_22, apic_20, apic_3, dend_10, dend_9, dend_7, dend_6, dend_35, dend_34, dend_22, dend_21, apic_5, apic_4, apic_17, apic_6, apic_19, apic_18, apic_14, apic_7, apic_16, apic_15, apic_13, apic_8, apic_12, apic_9, apic_11, apic_10]}
    ModelViewParmSubset_169 = new SectionList()
    dend_49 ModelViewParmSubset_169.append()
    dend_48 ModelViewParmSubset_169.append()
    dend_47 ModelViewParmSubset_169.append()
    dend_44 ModelViewParmSubset_169.append()
    dend_37 ModelViewParmSubset_169.append()
    dend_26 ModelViewParmSubset_169.append()
    dend_14 ModelViewParmSubset_169.append()
    apic_0 ModelViewParmSubset_169.append()
    dend_3 ModelViewParmSubset_169.append()
    dend_0 ModelViewParmSubset_169.append()
    dend_46 ModelViewParmSubset_169.append()
    dend_45 ModelViewParmSubset_169.append()
    dend_43 ModelViewParmSubset_169.append()
    dend_38 ModelViewParmSubset_169.append()
    dend_36 ModelViewParmSubset_169.append()
    dend_27 ModelViewParmSubset_169.append()
    dend_25 ModelViewParmSubset_169.append()
    dend_18 ModelViewParmSubset_169.append()
    dend_15 ModelViewParmSubset_169.append()
    apic_24 ModelViewParmSubset_169.append()
    apic_1 ModelViewParmSubset_169.append()
    dend_11 ModelViewParmSubset_169.append()
    dend_4 ModelViewParmSubset_169.append()
    dend_2 ModelViewParmSubset_169.append()
    dend_1 ModelViewParmSubset_169.append()
    dend_40 ModelViewParmSubset_169.append()
    dend_39 ModelViewParmSubset_169.append()
    dend_31 ModelViewParmSubset_169.append()
    dend_28 ModelViewParmSubset_169.append()
    dend_24 ModelViewParmSubset_169.append()
    dend_19 ModelViewParmSubset_169.append()
    dend_17 ModelViewParmSubset_169.append()
    dend_16 ModelViewParmSubset_169.append()
    apic_21 ModelViewParmSubset_169.append()
    apic_2 ModelViewParmSubset_169.append()
    dend_13 ModelViewParmSubset_169.append()
    dend_12 ModelViewParmSubset_169.append()
    dend_8 ModelViewParmSubset_169.append()
    dend_5 ModelViewParmSubset_169.append()
    dend_42 ModelViewParmSubset_169.append()
    dend_41 ModelViewParmSubset_169.append()
    dend_33 ModelViewParmSubset_169.append()
    dend_32 ModelViewParmSubset_169.append()
    dend_30 ModelViewParmSubset_169.append()
    dend_29 ModelViewParmSubset_169.append()
    dend_23 ModelViewParmSubset_169.append()
    dend_20 ModelViewParmSubset_169.append()
    apic_23 ModelViewParmSubset_169.append()
    apic_22 ModelViewParmSubset_169.append()
    apic_20 ModelViewParmSubset_169.append()
    apic_3 ModelViewParmSubset_169.append()
    dend_10 ModelViewParmSubset_169.append()
    dend_9 ModelViewParmSubset_169.append()
    dend_7 ModelViewParmSubset_169.append()
    dend_6 ModelViewParmSubset_169.append()
    dend_35 ModelViewParmSubset_169.append()
    dend_34 ModelViewParmSubset_169.append()
    dend_22 ModelViewParmSubset_169.append()
    dend_21 ModelViewParmSubset_169.append()
    apic_5 ModelViewParmSubset_169.append()
    apic_4 ModelViewParmSubset_169.append()
    apic_17 ModelViewParmSubset_169.append()
    apic_6 ModelViewParmSubset_169.append()
    apic_19 ModelViewParmSubset_169.append()
    apic_18 ModelViewParmSubset_169.append()
    apic_14 ModelViewParmSubset_169.append()
    apic_7 ModelViewParmSubset_169.append()
    apic_16 ModelViewParmSubset_169.append()
    apic_15 ModelViewParmSubset_169.append()
    apic_13 ModelViewParmSubset_169.append()
    apic_8 ModelViewParmSubset_169.append()
    apic_12 ModelViewParmSubset_169.append()
    apic_9 ModelViewParmSubset_169.append()
    apic_11 ModelViewParmSubset_169.append()
    apic_10 ModelViewParmSubset_169.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_24, apic_1, apic_21, apic_2, apic_23, apic_22, apic_20, apic_3, apic_5, apic_4, apic_17, apic_6, apic_19, apic_18, apic_14, apic_7, apic_16, apic_15, apic_13, apic_8, apic_12, apic_9, apic_11, apic_10]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_24 apic.append()
    apic_1 apic.append()
    apic_21 apic.append()
    apic_2 apic.append()
    apic_23 apic.append()
    apic_22 apic.append()
    apic_20 apic.append()
    apic_3 apic.append()
    apic_5 apic.append()
    apic_4 apic.append()
    apic_17 apic.append()
    apic_6 apic.append()
    apic_19 apic.append()
    apic_18 apic.append()
    apic_14 apic.append()
    apic_7 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()
    apic_13 apic.append()
    apic_8 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_12 apic.append()
    apic_9 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=dend, groups=[], sections=[dend_49, dend_48, dend_47, dend_44, dend_37, dend_26, dend_14, dend_3, dend_0, dend_46, dend_45, dend_43, dend_38, dend_36, dend_27, dend_25, dend_18, dend_15, dend_11, dend_4, dend_2, dend_1, dend_40, dend_39, dend_31, dend_28, dend_24, dend_19, dend_17, dend_16, dend_13, dend_12, dend_8, dend_5, dend_42, dend_41, dend_33, dend_32, dend_30, dend_29, dend_23, dend_20, dend_10, dend_9, dend_7, dend_6, dend_35, dend_34, dend_22, dend_21]}
    dend = new SectionList()
    dend_49 dend.append()
    dend_48 dend.append()
    dend_47 dend.append()
    dend_44 dend.append()
    dend_37 dend.append()
    dend_26 dend.append()
    dend_14 dend.append()
    dend_3 dend.append()
    dend_0 dend.append()
    dend_46 dend.append()
    dend_45 dend.append()
    dend_43 dend.append()
    dend_38 dend.append()
    dend_36 dend.append()
    dend_27 dend.append()
    dend_25 dend.append()
    dend_18 dend.append()
    dend_15 dend.append()
    dend_11 dend.append()
    dend_4 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_40 dend.append()
    dend_39 dend.append()
    dend_31 dend.append()
    dend_28 dend.append()
    dend_24 dend.append()
    dend_19 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_8 dend.append()
    dend_5 dend.append()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_33 dend.append()
    dend_32 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_23 dend.append()
    dend_20 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()

    // Group: {name=OneSecGrp_SectionRef_6361, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_6361 = new SectionList()
    soma_0 OneSecGrp_SectionRef_6361.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_2, apic_2, apic_2, apic_2, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 3.6554198  // units: uF/cm2
    forsec apic cm = 3.6554198  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 14.688961  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 4.5721926E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.3710621  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 2.5399112E-8  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 3.9218783E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.2732821  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.041878268  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.010996838  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 1.4321132E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 7.41173E-4  // units: S cm-2
        e_pas_nml2 = -85.37269  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 7.169476E-6  // units: S cm-2
        e_pas_nml2 = -85.37269  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 3.5415418E-5  // units: S cm-2
        e_pas_nml2 = -85.37269  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0851733E-6  // units: S cm-2
        e_pas_nml2 = -85.37269  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 8.3174807E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0077261273  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478047737
    forsec soma {
        insert CaDynamics_478047737
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 3
    dend_48 nseg = 3
    dend_46 nseg = 5
    dend_36 nseg = 3
    dend_25 nseg = 3
    apic_24 nseg = 3
    dend_24 nseg = 3
    dend_17 nseg = 3
    dend_13 nseg = 5
    dend_12 nseg = 5
    dend_8 nseg = 3
    dend_42 nseg = 3
    dend_30 nseg = 3
    dend_23 nseg = 3
    apic_23 nseg = 3
    apic_22 nseg = 3
    apic_20 nseg = 7
    dend_10 nseg = 3
    dend_7 nseg = 5
    dend_22 nseg = 5
    apic_5 nseg = 13
    apic_4 nseg = 3
    apic_17 nseg = 5
    apic_6 nseg = 3
    apic_19 nseg = 5
    apic_18 nseg = 5
    apic_14 nseg = 5
    apic_7 nseg = 3
    apic_16 nseg = 3
    apic_15 nseg = 3
    apic_13 nseg = 5
    apic_8 nseg = 3
    apic_11 nseg = 3
    apic_10 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478047737


