// Cell: cNAC187_L5_BP_3085e9694e_0_0
/*
{
  "id" : "cNAC187_L5_BP_3085e9694e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.31502, 8.51655, 2.89071, 0.83", "-6.47968, 10.9694, 3.36798, 1.11", "-8.34558, 12.4147, 3.61625, 0.83", "-10.1584, 13.8066, 3.8387, 0.83", "-11.2317, 14.6004, 3.96059, 1.11", "-14.5928, 17.0806, 4.35127, 1.11", "-20.6045, 21.3269, 5.04186, 0.83", "-22.7703, 22.7984, 5.26991, 0.83", "-24.4854, 23.929, 5.41156, 0.83", "-26.1579, 25.0495, 5.53418, 0.83", "-27.5193, 25.973, 5.60033, 0.55", "-28.5426, 26.5983, 5.66748, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.29637, 6.10992, -6.13497, 0.55", "6.52826, 6.59273, -6.63339, 0.55", "7.82334, 6.7146, -7.29291, 0.83", "9.87306, 6.8443, -8.518, 0.55", "10.8625, 6.90691, -9.10938, 1.38", "13.2952, 7.06086, -10.5634, 0.55", "14.3314, 7.00873, -11.2572, 0.83", "19.6913, 6.0527, -15.1554, 0.55", "20.2098, 5.92414, -15.5843, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.690343, -11.0359, 3.4293, 1.11", "-0.750497, -16.3433, 5.33197, 1.11", "-0.774994, -18.5047, 6.10685, 0.83", "-0.807541, -21.3764, 7.13634, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.854272, 10.1288, -1.38028, 1.11", "0.899728, 12.3576, -1.36186, 1.11", "0.949676, 15.994, -1.20094, 1.38", "0.95554, 16.1966, -1.18799, 1.38", "1.17522, 18.7066, -0.985849, 0.83", "1.49865, 21.363, -0.619587, 0.83", "2.07773, 24.3678, 0.181671, 0.83", "2.42147, 25.5105, 0.639789, 0.83", "2.7708, 26.3403, 1.06599, 1.11", "3.81625, 28.3657, 2.18163, 0.55", "5.03453, 30.4829, 3.51194, 0.83", "6.66661, 32.6685, 5.04848, 0.55", "7.51202, 33.5798, 5.75599, 0.83", "8.68418, 34.8151, 6.84539, 0.55", "10.1236, 36.3856, 8.30591, 0.55", "12.1124, 38.7456, 10.5164, 0.55", "14.3014, 41.4412, 12.9563, 0.55", "15.6539, 43.19, 14.7516, 0.55", "17.2776, 45.4003, 17.2585, 0.55", "17.6106, 45.8439, 17.8238, 0.83", "18.4801, 47.0164, 19.412, 0.55", "19.2224, 47.9317, 20.6647, 0.83", "20.9143, 50.4243, 23.6278, 0.55", "21.577, 51.3348, 24.5098, 0.83", "22.2234, 52.0089, 25.1274, 0.55", "22.8797, 52.591, 25.6171, 0.83", "24.3577, 53.6784, 26.5333, 0.83", "26.3313, 55.1573, 27.5552, 0.83", "27.5552, 56.1327, 28.0409, 0.55", "28.4858, 56.974, 28.4165, 0.55", "30.9299, 59.1485, 29.362, 0.83", "32.5157, 60.5431, 29.9049, 0.55", "34.9354, 62.5878, 30.6255, 0.55", "37.1653, 64.3059, 31.1928, 0.55", "39.1673, 65.7634, 31.6445, 0.55", "41.7121, 67.4748, 32.0959, 0.55", "43.277, 68.3196, 32.3202, 0.55", "44.3598, 68.7981, 32.3426, 0.55", "45.8161, 69.1681, 32.2509, 0.55", "48.0144, 69.3677, 31.9382, 0.55", "49.394, 69.3209, 31.6919, 0.55", "51.3976, 69.1991, 31.47, 0.55", "55.1792, 69.0872, 31.3816, 0.55", "58.123, 69.136, 31.5209, 0.55", "61.2218, 69.3366, 31.8539, 0.55", "63.1919, 69.534, 32.2247, 0.55", "68.2665, 70.5185, 33.5282, 0.55", "71.2413, 71.3384, 34.5298, 0.55", "73.4475, 72.105, 35.4959, 0.55", "74.7776, 72.804, 36.1366, 0.55", "76.3153, 73.834, 36.8707, 0.55", "78.9357, 75.855, 37.8669, 0.55", "79.5448, 76.3409, 38.0081, 0.55", "81.3058, 77.6424, 38.2941, 0.55", "82.9205, 79.0232, 38.55, 0.83", "83.8028, 79.789, 38.6752, 0.55", "85.1257, 81.099, 38.8084, 0.83", "91.9061, 88.0962, 41.3947, 0.83", "97.8076, 96.0794, 43.1449, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-28.5426, 26.5983, 5.66748, 0.55", "-29.6941, 27.1826, 5.09266, 0.55", "-30.9462, 27.8179, 4.4676, 0.55", "-32.4572, 28.5845, 3.71328, 0.55", "-33.7049, 29.2176, 3.09043, 0.83", "-34.7505, 29.7481, 2.56848, 0.55", "-36.6912, 30.7328, 1.59966, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-28.5426, 26.5983, 5.66748, 0.55", "-31.0192, 27.1023, 5.28652, 0.55", "-33.6668, 27.5403, 5.14088, 0.55", "-36.6723, 28.028, 5.04893, 0.55", "-41.043, 28.6643, 5.31359, 0.55", "-44.7126, 29.0758, 5.78892, 0.55", "-48.569, 29.4389, 6.44802, 0.55", "-52.316, 29.5161, 7.47124, 0.55", "-55.5574, 29.254, 8.64457, 0.55", "-59.617, 28.624, 10.519, 0.55", "-61.3936, 28.2091, 11.5691, 0.55", "-63.3163, 27.7363, 12.7832, 0.55", "-66.7031, 26.6607, 14.7606, 0.55", "-68.4934, 26.1095, 15.5358, 0.55", "-70.3685, 25.4763, 16.3338, 0.55", "-72.5886, 24.7636, 17.0619, 0.55", "-74.9981, 24.0425, 17.7906, 0.55", "-78.4338, 23.009, 18.7559, 0.55", "-83.0026, 21.9553, 19.6543, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "20.2098, 5.92414, -15.5843, 0.55", "27.0717, 7.9728, -17.0861, 0.55", "31.0447, 8.8959, -18.5064, 0.55", "34.9748, 9.62706, -19.9588, 0.55", "37.6649, 10.0187, -20.9462, 0.55", "41.6003, 10.5007, -22.3553, 0.55", "49.7747, 11.332, -25.5285, 0.55", "59.059, 12.1916, -29.7462, 0.55", "63.5778, 12.3143, -32.0931, 0.55", "66.0027, 12.3143, -33.5064, 0.55", "68.6624, 12.3228, -35.1641, 0.55", "73.4143, 12.2068, -38.0987, 0.55", "75.1453, 12.0615, -39.2178, 0.55", "82.4725, 11.6058, -44.5243, 0.55", "87.6601, 11.3506, -48.6649, 0.55", "90.6452, 11.258, -51.1326, 0.55", "93.6236, 11.1398, -53.5906, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "20.2098, 5.92414, -15.5843, 0.83", "21.1629, 6.54513, -15.6069, 0.83", "21.708, 6.89898, -15.6453, 0.55", "22.5105, 7.43627, -15.7721, 0.83", "23.0499, 7.81125, -15.8744, 0.55", "23.7931, 8.349, -16.0047, 0.83", "24.6861, 9.01434, -16.128, 0.55", "25.1361, 9.31554, -16.1702, 0.55", "26.1747, 9.86659, -16.1891, 0.83", "27.1195, 10.254, -16.0783, 0.55", "27.6472, 10.4662, -15.9647, 0.83", "28.4377, 10.8044, -15.7097, 0.55", "29.5709, 11.3145, -15.1955, 0.55", "31.146, 11.9418, -14.3965, 0.55", "32.6482, 12.4874, -13.527, 0.55", "33.8384, 12.9073, -12.8159, 0.55", "35.8003, 13.609, -11.6333, 0.55", "37.2341, 14.1654, -10.7368, 0.55", "38.0973, 14.5763, -10.1646, 0.55", "39.6819, 15.5006, -9.0996, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.807541, -21.3764, 7.13634, 0.83", "-1.17286, -24.7056, 7.01456, 0.83", "-1.52877, -27.9492, 6.89592, 0.83", "-1.92616, -31.5707, 6.76346, 0.83", "-2.13367, -33.4618, 6.69429, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.807541, -21.3764, 7.13634, 0.55", "-0.135784, -23.235, 8.43543, 0.55", "0.457877, -25.5118, 10.1245, 0.55", "0.777283, -28.4976, 12.4556, 0.55", "0.819553, -29.6585, 13.3929, 0.83", "0.652538, -32.6223, 16.1235, 0.55", "0.439988, -34.1533, 17.5624, 0.55", "-0.0373699, -37.1309, 20.4872, 0.83", "-0.520779, -39.3425, 22.7995, 0.55", "-1.0824, -41.1674, 24.6779, 0.55", "-2.22393, -44.624, 28.1719, 0.55", "-3.13077, -47.3789, 30.9243, 0.55", "-3.81288, -49.5873, 33.1621, 0.55", "-4.40688, -51.9315, 35.4643, 0.28", "-4.5716, -52.9077, 36.386, 0.55", "-4.82819, -54.7104, 37.9856, 0.28", "-4.84155, -57.5232, 40.0452, 0.55", "-7.1545, -66.8898, 47.3958, 0.55", "-9.71692, -75.546, 55.4964, 0.55", "-11.7493, -82.6599, 65.1077, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-36.6912, 30.7328, 1.59966, 0.55", "-39.9941, 30.8024, 3.14199, 0.55", "-41.3892, 30.7419, 3.95043, 0.83", "-43.0282, 30.5716, 5.09863, 0.55", "-44.2874, 30.4298, 6.08714, 0.83", "-47.5893, 30.1736, 8.66033, 0.55", "-48.8406, 30.0957, 9.64608, 0.28", "-50.9355, 29.971, 11.4614, 0.55", "-53.7462, 29.8207, 13.8861, 0.55", "-55.8761, 29.7166, 15.6331, 0.55", "-58.7174, 29.5857, 17.8795, 0.28", "-59.452, 29.5656, 18.378, 0.55", "-60.9704, 29.5468, 19.3556, 0.28", "-61.9981, 29.5693, 19.9283, 0.55", "-64.0876, 29.6187, 20.9189, 0.28", "-65.3095, 29.5881, 21.4317, 0.55", "-67.4615, 29.3785, 22.339, 0.28", "-68.9044, 29.2333, 22.8976, 0.55", "-77.8469, 27.2785, 30.0773, 0.55", "-86.0401, 24.1961, 37.7394, 0.55", "-93.8932, 20.0426, 45.2504, 0.55", "-101.63, 14.6316, 52.0471, 0.55", "-108.176, 9.58309, 60.232, 0.55", "-115.563, 4.98353, 67.9538, 0.55", "-123.166, 2.20329, 76.3085, 0.55", "-130.695, -1.46553, 84.3828, 0.55", "-138.053, -4.40456, 92.9011, 0.55", "-144.894, -7.5356, 101.773, 0.55", "-150.587, -11.9737, 110.896, 0.55", "-156.432, -15.3765, 120.362, 0.55", "-162.368, -19.881, 129.295, 0.55", "-166.98, -24.8943, 138.726, 0.55", "-169.744, -29.1818, 149.182, 0.55", "-172.326, -35.4773, 158.618, 0.55", "-173.255, -41.964, 168.23, 0.55", "-174.825, -48.0075, 178.046, 0.55", "-177.662, -53.2667, 188.027, 0.55", "-182.924, -56.7525, 197.8, 0.55", "-187.156, -61.4973, 207.542, 0.55", "-189.349, -64.4071, 218.59, 0.55", "-193.388, -66.4685, 229.304, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-36.6912, 30.7328, 1.59966, 0.55", "-38.0437, 31.4562, -0.169079, 0.55", "-39.0506, 32.2641, -2.10955, 0.55", "-39.9797, 33.2503, -4.14755, 0.55", "-40.5615, 33.8678, -5.42373, 0.55", "-41.6228, 34.9942, -7.75162, 0.83", "-42.3992, 35.8183, -9.45472, 0.55", "-43.2557, 36.9557, -11.9441, 0.83", "-43.5437, 37.7156, -13.3241, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-83.0026, 21.9553, 19.6543, 0.28", "-84.1488, 19.9861, 18.963, 0.28", "-84.6925, 19.1492, 18.5885, 0.28", "-85.398, 17.9697, 18.017, 0.55", "-85.9803, 16.9306, 17.5264, 0.28", "-86.8406, 15.3447, 16.8016, 0.55", "-89.2388, 10.6711, 14.7593, 0.28", "-90.0153, 9.0461, 13.9102, 0.55", "-91.1876, 6.55316, 12.5149, 0.28", "-91.8576, 5.06934, 11.6111, 0.55", "-92.3193, 4.04974, 10.962, 0.28", "-92.8458, 2.87827, 10.2275, 0.55", "-94.4399, -1.04679, 7.88833, 0.28", "-94.9394, -2.22866, 7.13518, 0.55", "-95.8056, -4.01083, 5.77799, 0.28", "-96.5175, -5.13587, 4.79136, 0.28", "-97.1594, -5.87935, 4.09045, 0.55", "-99.4088, -7.9607, 2.15743, 0.28", "-100.457, -8.80162, 1.38522, 0.55", "-103.019, -10.6966, -0.519019, 0.28", "-105.584, -12.3599, -2.27182, 0.28", "-108.374, -13.9263, -4.06203, 0.28", "-109.655, -14.509, -4.75967, 0.55", "-115.837, -21.4646, -9.73513, 0.55", "-122.818, -28.7396, -12.8473, 0.55", "-129.574, -35.4254, -17.4304, 0.55", "-136.449, -41.3512, -22.8117, 0.55", "-143.356, -46.4161, -28.975, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-83.0026, 21.9553, 19.6543, 0.55", "-83.8642, 21.8751, 19.7732, 0.55", "-86.2956, 21.6787, 20.4232, 0.55", "-87.2091, 21.5856, 20.7183, 0.55", "-89.3561, 21.3045, 21.4507, 0.55", "-92.6581, 20.8921, 22.4143, 0.55", "-94.3749, 20.728, 22.8801, 0.28", "-97.0453, 20.41, 23.5575, 0.55", "-99.0274, 20.127, 23.9928, 0.55", "-99.8643, 20.0021, 24.1788, 0.28", "-104.884, 19.2497, 25.2885, 0.55", "-107.227, 18.7776, 25.6728, 0.28", "-110.387, 18.1127, 26.0064, 0.28", "-113.112, 17.5658, 26.1306, 0.55", "-123.782, 17.19, 28.7966, 0.55", "-134.085, 16.6445, 32.6241, 0.55", "-143.775, 15.0888, 37.6037, 0.55", "-153.213, 15.4486, 43.25, 0.55", "-161.276, 15.6268, 50.737, 0.55", "-167.764, 16.5598, 59.5767, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "93.6236, 11.1398, -53.5906, 0.55", "98.0213, 12.4518, -57.2966, 0.55", "99.4158, 12.7967, -58.5511, 0.55", "101.165, 13.172, -60.095, 0.55", "104.341, 13.8078, -63.0823, 0.55", "107.666, 14.3256, -66.2705, 0.55", "109.299, 14.4509, -67.7761, 0.83", "110.649, 14.4514, -69.1089, 0.55", "111.665, 14.3585, -70.2004, 0.83", "114.135, 13.7764, -72.9693, 0.55", "116.181, 13.1067, -75.2463, 0.55", "118.533, 12.331, -77.7493, 0.55", "121.148, 11.537, -80.5955, 0.55", "122.905, 10.9593, -82.544, 0.55", "124.888, 10.296, -84.8039, 0.55", "126.599, 9.7722, -86.8805, 0.55", "127.671, 9.52767, -88.3372, 0.55", "129.044, 9.0485, -91.2794, 0.55", "129.798, 8.68505, -93.1146, 0.55", "130.468, 8.07604, -95.5448, 0.55", "131.408, 6.90966, -99.6418, 0.55", "131.604, 6.61024, -100.563, 0.28", "134.125, 2.8498, -111.74, 0.28", "134.964, 1.77467, -115.023, 0.83", "138.251, -2.23437, -126.642, 0.83", "139.939, -4.30965, -132.015, 0.83", "140.745, -5.23483, -134.181, 0.55", "141.66, -6.13932, -136.29, 0.55", "144.141, -7.86943, -140.181, 0.55", "146.776, -9.40208, -143.591, 0.28", "147.555, -9.62997, -143.767, 0.55", "149.259, -9.95682, -143.563, 0.28", "150.308, -10.0706, -143.293, 0.55", "151.401, -10.1951, -142.917, 0.28", "152.708, -10.2736, -142.413, 0.55", "154.661, -10.3071, -141.876, 0.28", "156.232, -10.3871, -141.491, 0.55", "157.967, -10.3732, -141.215, 0.28", "160.326, -10.366, -141.05, 0.55", "162.971, -10.3115, -141.029, 0.55", "165.296, -10.2504, -141.167, 0.28", "168.516, -10.153, -141.54, 0.55", "174.08, -9.88622, -142.791, 0.55", "176.534, -9.66868, -143.652, 0.55", "177.588, -9.54177, -144.14, 0.83", "179.597, -9.30296, -145.256, 0.55", "180.989, -9.08868, -146.123, 0.83", "184.729, -8.4169, -148.509, 0.55", "187.022, -8.17088, -150.01, 0.28", "187.99, -8.1174, -150.528, 0.55", "190.65, -8.18891, -151.628, 0.28", "191.587, -8.2936, -151.944, 0.55", "193.519, -8.60152, -152.289, 0.28", "195.493, -9.07226, -152.286, 0.55", "199.483, -10.1689, -151.569, 0.28", "201.325, -10.7363, -151.038, 0.55", "204.071, -11.7211, -150.089, 0.28", "207.538, -12.9404, -148.77, 0.55", "210.044, -13.7848, -147.78, 0.55", "214.375, -15.1071, -146.007, 0.28", "216.15, -15.5826, -145.432, 0.55", "219.204, -16.2613, -144.787, 0.28", "222.237, -16.7275, -144.377, 0.55", "223.893, -16.8184, -144.399, 0.28", "225.379, -16.7112, -144.555, 0.55", "229.566, -16.1956, -145.417, 0.28", "232.545, -15.6241, -146.101, 0.28", "235.125, -14.9406, -146.752, 0.55", "237.97, -14.1193, -147.625, 0.28", "238.684, -13.8645, -147.825, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "93.6236, 11.1398, -53.5906, 0.55", "94.4921, 8.66097, -55.108, 0.55", "95.0404, 6.54941, -56.2455, 0.28", "95.5387, 4.61904, -57.1241, 0.55", "96.8025, 0.545778, -59.0243, 0.28", "96.8756, 0.287824, -59.1799, 0.55", "97.2961, -1.0629, -60.1055, 0.28", "97.5451, -2.19422, -61.0471, 0.55", "97.7411, -3.3847, -62.1625, 0.28", "97.9634, -5.01468, -63.7572, 0.55", "98.518, -9.10594, -67.6863, 0.55", "98.983, -12.8404, -71.3319, 0.55", "99.3263, -15.828, -74.2499, 0.55", "99.6114, -18.7682, -77.0675, 0.55", "99.6824, -19.5273, -77.7642, 0.28", "99.7796, -20.3345, -78.4429, 0.55", "100.014, -21.4407, -79.2822, 0.28", "100.628, -23.4012, -80.6081, 0.55", "102.112, -27.1116, -82.5577, 0.55", "102.925, -29.1007, -83.4271, 0.28", "103.636, -31.1356, -84.3997, 0.55", "104.427, -34.0069, -85.8691, 0.28", "104.921, -36.3388, -87.109, 0.55", "105.515, -39.8385, -88.9696, 0.28", "106.153, -43.4543, -90.7852, 0.55", "107.013, -48.7116, -93.4666, 0.28", "107.412, -51.5196, -94.9049, 0.55", "107.776, -54.3977, -96.4425, 0.28", "108.073, -56.9385, -97.9496, 0.28", "108.552, -60.1152, -100.101, 0.55", "109.192, -63.0407, -102.023, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "39.6819, 15.5006, -9.0996, 0.55", "42.0919, 15.369, -8.36143, 0.55", "43.8607, 15.1747, -7.97883, 0.55", "47.7469, 14.668, -7.33497, 0.55", "49.5051, 14.376, -7.19363, 0.55", "51.4295, 14.0803, -7.14296, 0.55", "54.0245, 13.6954, -7.26321, 0.55", "56.779, 13.1717, -7.63193, 0.55", "58.2352, 12.8491, -7.98312, 0.55", "61.2189, 12.1215, -9.08791, 0.55", "62.5956, 11.7898, -9.64068, 0.55", "65.8269, 10.9384, -11.0055, 0.55", "68.0152, 10.2798, -11.8975, 0.55", "69.6215, 9.79816, -12.4817, 0.83", "72.1872, 8.94107, -13.3707, 0.55", "74.6953, 7.99964, -14.1261, 0.83", "76.8198, 7.11886, -14.6766, 0.55", "78.7047, 6.37935, -15.0754, 0.55", "79.7728, 6.01517, -15.2527, 0.83", "82.2585, 5.19584, -15.5397, 0.28", "83.4898, 4.85272, -15.6144, 0.28", "84.6851, 4.43491, -15.7342, 0.28", "85.9775, 4.01635, -15.8752, 0.28", "88.0476, 3.37732, -16.1496, 0.28", "88.8791, 3.13472, -16.2376, 0.55", "90.8563, 2.60915, -16.2606, 0.55", "94.405, 1.6611, -16.1193, 0.55", "95.3847, 1.38062, -16.0331, 0.55", "96.2579, 1.10838, -15.9139, 0.83", "98.1451, 0.60307, -15.513, 0.55", "99.784, 0.171792, -15.1389, 0.55", "101.333, -0.227783, -14.7794, 0.55", "102.534, -0.564438, -14.5313, 0.55", "104.444, -1.2487, -14.2076, 0.55", "106.704, -2.2766, -13.916, 0.55", "110.23, -4.3139, -13.6396, 0.55", "112.173, -5.73903, -13.5611, 0.55", "113.863, -7.27638, -13.5279, 0.28", "114.368, -7.85023, -13.5282, 0.55", "115.488, -9.46476, -13.5293, 0.28", "116.454, -11.2788, -13.5097, 0.55", "117.356, -13.5206, -13.3252, 0.55", "117.961, -14.9808, -13.1342, 0.28", "118.182, -15.4918, -13.0413, 0.55", "118.752, -16.7571, -12.7919, 0.28", "119.528, -18.3947, -12.4256, 0.55", "121.549, -22.3163, -11.4358, 0.55", "122.6, -24.2836, -10.8929, 0.55", "123.575, -26.083, -10.3783, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "39.6819, 15.5006, -9.0996, 0.55", "41.7061, 16.0288, -7.40665, 0.55", "42.3579, 16.1924, -6.90095, 0.55", "44.8004, 16.6705, -5.11687, 0.55", "47.5214, 17.2637, -3.0874, 0.55", "51.003, 18.0242, -0.388962, 0.55", "51.965, 18.2348, 0.349572, 0.55", "53.6961, 18.5418, 1.66215, 0.55", "55.5962, 18.9176, 3.02284, 0.55", "57.8084, 19.4101, 4.49659, 0.55", "59.8909, 19.9055, 5.89079, 0.55", "61.0339, 20.2267, 6.59645, 0.55", "62.3735, 20.6439, 7.41952, 0.55", "64.0299, 21.2074, 8.40291, 0.83", "66.7627, 22.0991, 9.71858, 0.55", "68.5822, 22.6082, 10.5055, 0.83", "71.1211, 23.1883, 11.5176, 0.55", "71.9039, 23.322, 11.8202, 0.55", "74.3434, 23.6097, 12.7166, 0.55", "78.735, 23.8422, 14.1634, 0.55", "81.9659, 23.8261, 15.1619, 0.55", "84.5265, 23.6991, 16.0214, 0.55", "87.1393, 23.4394, 16.9974, 0.55", "87.6896, 23.3702, 17.2066, 0.28", "88.8082, 23.1849, 17.6314, 0.83", "93.4031, 22.3593, 19.4074, 0.55", "96.6214, 21.7803, 20.5872, 0.55", "99.2547, 21.3774, 21.617, 0.55", "100.828, 21.1331, 22.2478, 0.83", "102.065, 20.959, 22.7454, 0.28", "103.188, 20.8021, 23.1859, 0.55", "111.735, 21.8205, 27.7302, 0.55", "120.982, 21.2595, 30.7173, 0.55", "130.097, 21.9045, 34.0705, 0.55", "138.179, 21.2986, 39.4615, 0.55", "145.725, 19.4013, 45.3103, 0.55", "154.21, 15.9544, 48.6062, 0.55", "162.686, 11.4882, 50.3273, 0.55", "171.953, 8.71348, 51.4096, 0.55", "181.089, 5.83688, 53.1397, 0.55", "190.583, 3.9736, 54.2106, 0.55", "199.948, 2.62567, 56.495, 0.55", "208.768, -0.342054, 59.349, 0.55", "217.688, -1.53664, 63.0581, 0.55", "226.072, -1.23122, 67.9935, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.13367, -33.4618, 6.69429, 1.38", "0.958913, -37.1437, 5.30316, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.13367, -33.4618, 6.69429, 0.55", "-3.43405, -34.9485, 6.8322, 0.55", "-4.88012, -36.8627, 6.98441, 0.55", "-5.99777, -38.1242, 7.11618, 0.55", "-6.95242, -39.1775, 7.08121, 0.55", "-9.0488, -41.3543, 6.81271, 0.55", "-10.5204, -42.8053, 6.58505, 0.55", "-11.8334, -44.1063, 6.33446, 0.55", "-15.2009, -47.2664, 5.69455, 0.55", "-19.24, -50.9202, 4.95752, 0.55", "-22.3708, -53.6846, 4.33432, 0.55", "-24.3731, -55.5019, 3.90827, 0.55", "-26.6729, -57.6862, 3.4257, 0.55", "-29.5984, -60.8332, 2.84882, 0.55", "-31.3194, -63.0795, 2.54425, 0.55", "-33.4409, -66.3248, 2.34485, 0.55", "-35.1415, -69.3771, 2.24786, 0.55", "-36.8809, -73.2008, 2.17442, 0.55", "-38.5437, -77.7049, 2.16728, 0.55", "-39.4671, -81.1611, 2.21585, 0.55", "-39.7993, -82.886, 2.34284, 0.55", "-40.3172, -86.9494, 2.84158, 0.55", "-40.7254, -90.7544, 3.40175, 0.55", "-40.9152, -94.5963, 4.23225, 0.55", "-41.0364, -96.8001, 4.83045, 0.55", "-41.3483, -103.616, 6.92578, 0.55", "-41.3738, -104.118, 7.08912, 0.55", "-41.4658, -107.194, 8.15946, 0.55", "-41.8744, -112.685, 10.2241, 0.55", "-42.0312, -114.521, 10.8067, 0.55", "-42.3899, -117.385, 11.2333, 0.55", "-42.5171, -118.449, 11.1462, 0.55", "-42.8476, -122.053, 10.1624, 0.55", "-42.9749, -124.391, 9.02276, 0.55", "-43.1424, -128.114, 6.44469, 0.55", "-43.1942, -132.675, 2.92358, 0.28", "-43.2027, -133.802, 1.89987, 0.55", "-43.2232, -135.511, 0.19731, 0.28", "-43.2298, -135.768, -0.0726793, 0.55", "-43.2645, -137.177, -1.42999, 0.28", "-43.2993, -137.655, -1.77816, 0.55", "-43.4941, -140.14, -3.10434, 0.28", "-43.5921, -140.984, -3.54208, 0.55", "-43.8938, -143.425, -4.66655, 0.28", "-43.9851, -144.193, -5.01801, 0.55", "-44.3182, -146.844, -6.18569, 0.28", "-44.4655, -148.064, -6.72962, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-11.7493, -82.6599, 65.1077, 0.55", "-13.6594, -86.538, 69.3937, 0.55", "-16.0113, -89.8013, 73.9629, 0.55", "-18.3352, -93.4704, 78.2285, 0.55", "-20.7829, -97.1381, 82.4255, 0.55", "-22.8342, -101.563, 86.0678, 0.55", "-24.7316, -105.821, 89.9835, 0.55", "-26.3965, -111.067, 92.5846, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-11.7493, -82.6599, 65.1077, 0.55", "-10.9032, -89.9072, 71.5232, 0.55", "-10.0526, -98.2133, 76.4915, 0.55", "-10.7416, -106.386, 81.6994, 0.55", "-12.1893, -114.916, 86.12, 0.55", "-13.225, -123.466, 90.6185, 0.55", "-14.0391, -131.703, 95.7054, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-43.5437, 37.7156, -13.3241, 0.83", "-43.1005, 39.8049, -15.657, 0.83", "-42.1684, 44.857, -20.8789, 0.55", "-41.7647, 47.0418, -22.9434, 0.83", "-41.3251, 49.3843, -24.987, 0.55", "-40.8761, 51.8048, -26.7371, 0.55", "-40.6417, 53.0259, -27.4558, 0.28", "-40.5391, 53.8398, -27.7243, 0.55", "-40.1164, 56.5766, -28.0346, 0.28", "-39.9067, 57.7499, -28.1085, 0.55", "-39.2279, 61.8321, -28.1989, 0.28", "-38.7731, 65.0675, -28.1606, 0.55", "-38.3026, 70.1168, -27.942, 0.28", "-38.0433, 74.5524, -27.6632, 0.28", "-38.0405, 77.0316, -27.4575, 0.55", "-38.2165, 79.9644, -27.2102, 0.28", "-38.392, 81.361, -27.0716, 0.55", "-38.9837, 84.635, -26.8925, 0.28", "-39.5232, 86.8082, -26.8863, 0.28", "-40.0988, 88.9389, -26.9455, 0.28", "-40.3597, 90.0664, -26.9817, 0.55", "-41.1711, 94.6363, -27.2388, 0.28", "-41.953, 100.055, -27.6451, 0.55", "-42.1957, 101.928, -27.7931, 0.55", "-42.4689, 103.805, -27.9005, 0.55", "-43.2595, 107.781, -28.192, 0.55", "-43.9464, 110.381, -28.4387, 0.28", "-44.3207, 111.359, -28.5444, 0.55", "-45.5221, 113.998, -28.7719, 0.28", "-46.9175, 116.799, -29.1268, 0.55", "-49.3045, 120.8, -29.7947, 0.28", "-50.4859, 122.458, -30.1277, 0.28", "-52.4339, 124.74, -30.8283, 0.55", "-54.6287, 127.105, -31.6888, 0.28", "-55.0316, 127.472, -31.843, 0.55", "-56.4909, 128.632, -32.3849, 0.28", "-61.5357, 132.324, -34.1482, 0.55", "-68.5799, 136.821, -36.8484, 0.28", "-69.8857, 137.566, -37.4233, 0.55", "-73.477, 139.471, -39.0581, 0.28", "-74.9864, 140.249, -39.785, 0.28", "-76.3007, 140.889, -40.4787, 0.55", "-80.1695, 142.293, -42.7916, 0.28", "-82.9102, 143.009, -44.3084, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-43.5437, 37.7156, -13.3241, 0.55", "-43.7799, 39.2696, -13.5359, 0.55", "-43.9422, 40.1873, -13.5748, 0.28", "-44.1885, 40.8419, -13.4406, 0.55", "-44.754, 42.3452, -13.1326, 0.28", "-45.1512, 43.4011, -12.9163, 0.55", "-45.8834, 45.3476, -12.5174, 0.28", "-46.3808, 46.39, -12.1202, 0.55", "-48.3042, 48.8606, -10.2817, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-143.356, -46.4161, -28.975, 0.55", "-148.297, -52.488, -32.479, 0.55", "-151.867, -59.1845, -36.4751, 0.55", "-154.581, -65.131, -42.0274, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-143.356, -46.4161, -28.975, 0.55", "-146.943, -49.3904, -32.6588, 0.55", "-149.938, -52.1845, -36.9606, 0.55", "-152.694, -55.0159, -41.3959, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-167.764, 16.5598, 59.5767, 0.55", "-176.206, 16.8027, 65.2785, 0.55", "-185.155, 18.2491, 69.9325, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-167.764, 16.5598, 59.5767, 0.55", "-173.565, 16.0718, 62.5197, 0.55", "-179.626, 16.4668, 64.8991, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "109.192, -63.0407, -102.023, 0.28", "118.067, -68.7068, -115.111, 0.28", "118.947, -69.3185, -116.258, 0.55", "120.434, -70.3512, -118.194, 0.28", "121.687, -71.2207, -119.824, 0.28", "123.344, -72.3717, -121.982, 0.55", "125.529, -73.8893, -124.827, 0.55", "128.411, -76.1032, -126.049, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "109.192, -63.0407, -102.023, 0.55", "110.198, -64.6287, -103.658, 0.55", "110.511, -65.3404, -104.395, 0.28", "110.983, -66.5589, -105.691, 0.55", "112.021, -69.2432, -108.545, 0.28", "112.741, -71.1035, -110.522, 0.55", "113.96, -74.2553, -113.873, 0.28", "115.357, -78.0957, -118.299, 0.28", "115.922, -79.8597, -120.378, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "123.575, -26.083, -10.3783, 0.28", "125.903, -28.8338, -8.51447, 0.28", "128.808, -32.3761, -5.71196, 0.28", "130.632, -34.646, -3.78578, 0.55", "131.731, -35.8694, -2.63692, 0.28", "132.314, -36.5262, -2.01113, 0.28", "135.211, -39.7872, 1.01621, 0.55", "135.868, -40.4751, 1.8108, 0.28", "137.392, -42.2549, 4.04844, 0.55", "138.698, -43.8304, 5.90417, 0.28", "139.849, -45.1146, 7.38858, 0.55", "141.209, -46.6912, 9.03412, 0.55", "143.414, -49.3172, 11.2424, 0.55", "143.948, -49.971, 11.7547, 0.55", "145.857, -52.4291, 13.6257, 0.28", "146.597, -53.4464, 14.354, 0.55", "147.636, -54.7403, 15.2881, 0.28", "149.111, -56.608, 16.5136, 0.55", "151.612, -59.6931, 17.9588, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "123.575, -26.083, -10.3783, 0.55", "121.534, -26.2071, -10.5029, 0.55", "119.877, -26.3079, -10.604, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "0.958913, -37.1437, 5.30316, 0.83", "1.06097, -37.4652, 5.21977, 0.83", "2.41082, -40.3403, 4.46065, 0.83", "3.52403, -42.8555, 3.64826, 0.55", "4.41214, -44.8622, 3.00014, 0.55", "6.29984, -49.1274, 1.62254, 0.83", "8.58949, -54.3008, -0.0483994, 0.55", "9.87301, -57.0141, -0.905582, 0.83", "12.2742, -61.3539, -2.2327, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.958913, -37.1437, 5.30316, 0.55", "-0.50619, -38.1669, 2.41278, 0.55", "-2.0788, -39.2651, -0.689688, 0.55", "-3.93528, -40.5616, -4.35218, 0.55", "-6.18965, -42.136, -8.79963, 0.55", "-7.46893, -43.0294, -11.3234, 0.55", "-7.72591, -43.2089, -11.8304, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-14.0391, -131.703, 95.7054, 0.55", "-13.9186, -140.933, 102.268, 0.55", "-12.2036, -150.7, 107.741, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-14.0391, -131.703, 95.7054, 0.55", "-14.9024, -140.274, 100.521, 0.55", "-16.1179, -148.589, 105.697, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-48.3042, 48.8606, -10.2817, 0.28", "-49.9662, 50.7842, -8.31187, 0.28", "-50.5906, 51.5126, -7.47134, 0.55", "-52.3736, 53.6235, -4.98722, 0.28", "-53.2631, 54.6703, -3.87594, 0.55", "-55.698, 57.5035, -0.979854, 0.28", "-58.1726, 60.383, 1.96362, 0.55", "-62.2662, 64.8812, 6.88231, 0.28", "-63.1376, 65.8478, 7.93076, 0.55", "-65.0566, 68.1209, 10.1509, 0.28", "-65.8041, 69.0661, 11.0227, 0.55", "-74.3254, 75.2093, 18.5188, 0.55", "-83.7742, 82.7086, 23.1042, 0.55", "-91.8798, 90.5863, 29.332, 0.55", "-98.3253, 100.062, 35.2651, 0.55", "-106.106, 109.009, 40.3606, 0.55", "-114.915, 115.974, 46.7189, 0.55", "-122.86, 121.988, 54.9205, 0.55", "-129.587, 126.754, 64.8484, 0.55", "-136.351, 132.251, 74.3657, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-48.3042, 48.8606, -10.2817, 0.55", "-51.4412, 47.8995, -8.5324, 0.55", "-53.0715, 47.3424, -7.62112, 0.28", "-54.2847, 46.9278, -6.94298, 0.55", "-55.2959, 46.5822, -6.37778, 0.28", "-56.0042, 46.3401, -5.98189, 0.55", "-57.9571, 45.6727, -4.89026, 0.28", "-59.272, 45.0957, -4.32618, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-154.581, -65.131, -42.0274, 0.55", "-157.414, -70.9013, -43.1816, 0.55", "-160.202, -76.7923, -43.6062, 0.55", "-162.386, -82.7571, -45.1244, 0.55", "-165.302, -88.5542, -45.8619, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-154.581, -65.131, -42.0274, 0.55", "-158.253, -69.794, -49.2207, 0.55", "-161.306, -73.3203, -57.2964, 0.55", "-165.304, -77.7894, -64.4393, 0.55", "-171.09, -80.662, -71.1656, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-152.694, -55.0159, -41.3959, 0.55", "-158.052, -59.0947, -51.7379, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-152.694, -55.0159, -41.3959, 0.55", "-157.836, -66.0015, -44.1748, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "128.411, -76.1032, -126.049, 0.28", "132.006, -77.2452, -127.84, 0.28", "133.675, -77.7756, -128.672, 0.55", "136.86, -78.7873, -130.259, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "128.411, -76.1032, -126.049, 0.55", "128.147, -77.5082, -127.18, 0.55", "127.62, -80.3187, -129.443, 0.28", "127.448, -81.2341, -130.18, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "115.922, -79.8597, -120.378, 0.28", "116.493, -81.2867, -122.267, 0.28", "116.776, -81.9932, -123.202, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "115.922, -79.8597, -120.378, 0.55", "113.788, -80.3351, -119.993, 0.55", "107.837, -81.6609, -118.919, 0.28", "106.424, -81.9758, -118.664, 0.55", "102.557, -82.8373, -117.966, 0.28", "100.064, -83.3926, -117.516, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "12.2742, -61.3539, -2.2327, 0.83", "12.2755, -61.5335, -2.26337, 0.83", "12.3469, -63.8876, -2.61364, 0.83", "12.2907, -65.647, -2.72122, 0.83", "12.1781, -67.3448, -2.62051, 0.83", "12.0059, -69.6048, -2.2988, 0.83", "11.7692, -72.2076, -1.81389, 0.83", "11.5646, -75.1185, -1.13103, 0.83", "11.4076, -77.9496, -0.34367, 0.83", "10.9743, -81.4116, 0.617549, 0.83", "10.6634, -82.9952, 1.00039, 0.83", "10.4013, -84.1839, 1.2176, 0.83", "9.83657, -86.4606, 1.60322, 0.83", "9.34101, -88.4994, 1.82466, 0.83", "8.35725, -92.847, 1.75313, 0.83", "7.74709, -95.2181, 1.4058, 0.83", "7.13253, -97.3986, 0.931724, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.2742, -61.3539, -2.2327, 0.55", "10.9841, -63.9968, -1.75678, 0.55", "10.0637, -65.9157, -1.26072, 0.55", "9.54464, -67.1464, -0.83148, 0.55", "8.87844, -69.0804, -0.00264084, 0.55", "7.73053, -72.919, 1.85066, 0.55", "6.93371, -75.8276, 3.57367, 0.55", "6.37153, -78.1626, 5.1975, 0.55", "5.79767, -80.5199, 7.01801, 0.55", "5.33636, -82.4754, 8.63257, 0.28", "5.0069, -84.075, 10.1872, 0.55", "4.46411, -86.9874, 13.4358, 0.55", "4.09389, -88.7695, 15.6447, 0.55", "3.87268, -89.7671, 16.8757, 0.55", "3.53499, -90.9394, 18.285, 0.83", "2.43279, -94.4109, 22.244, 0.28", "2.05963, -95.5594, 23.5229, 0.55", "1.42923, -97.6358, 25.7454, 0.28", "1.2496, -98.2765, 26.4764, 0.55", "0.901516, -99.7857, 28.1383, 0.28", "0.690147, -100.643, 29.0194, 0.55", "-0.394744, -103.415, 31.1993, 0.55", "-0.57614, -111.034, 39.402, 0.55", "-0.0955061, -118.33, 47.8821, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-7.72591, -43.2089, -11.8304, 0.55", "-11.0774, -44.5837, -15.6639, 0.55", "-12.0727, -44.9054, -16.7414, 0.55", "-14.5792, -45.7194, -19.3463, 0.55", "-20.0878, -47.3393, -24.7962, 0.28", "-20.9119, -47.5635, -25.5528, 0.55", "-24.3543, -48.6057, -28.5741, 0.55", "-29.0954, -50.0618, -32.2452, 0.55", "-30.9141, -50.5635, -33.6026, 0.28", "-32.5168, -50.8989, -34.6952, 0.28", "-35.273, -51.4378, -36.1916, 0.55", "-38.6377, -51.9332, -38.1337, 0.28", "-41.755, -52.1264, -39.9848, 0.55", "-44.1755, -52.0835, -41.3619, 0.55", "-45.8467, -51.9156, -42.3555, 0.55", "-50.7621, -51.1996, -45.4087, 0.55", "-55.9547, -50.1109, -48.5118, 0.55", "-58.1069, -49.5498, -49.7371, 0.28", "-60.1494, -49.0459, -50.9392, 0.55", "-64.2845, -48.2839, -53.3483, 0.28", "-65.675, -48.0668, -54.1471, 0.83", "-68.2797, -47.6417, -55.4666, 0.28", "-70.1586, -47.4846, -56.1871, 0.55", "-72.885, -47.3513, -57.1844, 0.28", "-73.9723, -47.2867, -57.5465, 0.55", "-75.9886, -47.2094, -58.1146, 0.55", "-79.0486, -46.8065, -58.8477, 0.55", "-81.0537, -46.4315, -59.2134, 0.28", "-82.6783, -45.946, -59.3767, 0.55", "-84.6011, -45.1516, -59.5674, 0.28", "-84.9185, -44.9966, -59.6079, 0.55", "-87.852, -43.4784, -60.458, 0.28", "-89.9835, -42.3249, -61.287, 0.55", "-92.8028, -40.6093, -62.7383, 0.83", "-95.127, -39.1329, -64.177, 0.28", "-95.7272, -38.7524, -64.6047, 0.55", "-100.326, -35.8843, -68.1301, 0.28", "-101.13, -35.3908, -68.8228, 0.55", "-103.507, -33.7752, -71.0019, 0.28", "-104.12, -33.3594, -71.5687, 0.55", "-105.696, -32.2832, -72.9199, 0.28", "-106.814, -31.5125, -73.8091, 0.55", "-109.316, -29.8119, -75.4362, 0.28", "-110.801, -28.9048, -76.3521, 0.55", "-113.969, -27.1669, -78.153, 0.28", "-114.912, -26.6994, -78.6773, 0.55", "-116.389, -26.0781, -79.4524, 0.28", "-117.641, -25.5585, -80.0505, 0.55", "-120.243, -24.5213, -81.1439, 0.28", "-121.026, -24.2272, -81.4493, 0.55", "-126.85, -21.9482, -83.4525, 0.28", "-128.895, -21.0208, -83.9774, 0.55", "-132.542, -19.212, -84.6815, 0.28", "-134.187, -18.3374, -84.9474, 0.55", "-137.952, -16.3696, -85.3501, 0.28", "-139.331, -15.7093, -85.4425, 0.55", "-144.306, -13.7646, -85.5356, 0.28", "-146.376, -13.2053, -85.5665, 0.55", "-149.321, -12.8775, -85.5972, 0.55", "-151.128, -12.7899, -85.5783, 0.55", "-154.796, -12.7193, -85.2655, 0.28", "-158.389, -12.6975, -84.7347, 0.28", "-161.375, -12.6731, -84.2054, 0.55", "-164.992, -12.3517, -83.1473, 0.28", "-166.758, -11.9817, -82.3727, 0.55", "-170.906, -10.4341, -80.072, 0.28", "-172.954, -9.22726, -78.3441, 0.55", "-174.215, -8.23705, -76.906, 0.28", "-175.536, -7.13698, -74.9017, 0.55", "-177.123, -5.69637, -72.145, 0.28", "-177.731, -5.19484, -71.1106, 0.55", "-181.032, -2.9864, -66.2512, 0.28", "-182.152, -2.2993, -64.6291, 0.55", "-184.792, -0.804309, -60.6942, 0.28", "-186.227, -0.0151924, -58.5583, 0.55", "-187.41, 0.630764, -56.8054, 0.55", "-188.839, 1.38998, -54.758, 0.28", "-189.637, 1.7799, -53.8453, 0.55", "-192.379, 3.20232, -50.9717, 0.28", "-193.8, 4.14458, -49.4251, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-7.72591, -43.2089, -11.8304, 0.55", "-7.08121, -43.386, -12.7194, 0.55", "-6.39733, -43.4456, -13.5948, 0.55", "-5.48374, -43.4294, -14.6408, 0.55", "-4.69766, -43.3311, -15.4599, 0.55", "0.876376, -41.978, -20.431, 0.55", "2.13951, -41.4986, -21.5669, 0.55", "3.99606, -40.6253, -23.2822, 0.55", "5.30953, -39.9531, -24.5044, 0.55", "6.61188, -39.2078, -25.6632, 0.28", "8.67959, -37.9279, -27.3412, 0.55", "11.8541, -35.9174, -29.6625, 0.28", "12.0962, -35.8026, -29.936, 0.55", "13.2256, -35.4715, -32.1296, 0.28", "13.7338, -35.3404, -33.7336, 0.55", "14.1162, -35.3192, -35.5234, 0.55", "14.7504, -35.4444, -38.7505, 0.55", "16.01, -35.736, -45.08, 0.55", "16.9288, -35.9794, -49.3145, 0.55", "17.284, -36.0782, -50.7668, 0.55", "19.8473, -36.6578, -60.2519, 0.55", "20.6511, -36.7802, -62.7889, 0.55", "21.2089, -36.8526, -64.1775, 0.55", "22.7878, -37.1152, -67.2997, 0.55", "26.9977, -38.1746, -74.5663, 0.55", "28.2121, -38.552, -76.4741, 0.28", "28.984, -38.8245, -77.5066, 0.55", "30.1541, -39.3046, -79.0146, 0.28", "30.6786, -39.5788, -79.5965, 0.55", "32.6159, -40.7371, -80.8776, 0.28", "34.196, -42.1961, -80.8709, 0.55", "35.1294, -43.2212, -80.7956, 0.28", "35.9637, -44.3371, -80.6051, 0.55", "36.6726, -45.5388, -80.3575, 0.28", "36.9736, -46.1544, -80.2616, 0.55", "37.6514, -47.759, -79.9629, 0.28", "37.828, -48.2374, -79.9533, 0.55", "38.847, -50.982, -80.0522, 0.28", "39.3729, -52.2558, -80.2562, 0.55", "40.6295, -54.9858, -80.9836, 0.28", "41.1468, -55.9946, -81.3575, 0.55", "42.9977, -59.3157, -82.7709, 0.28", "43.4568, -60.1237, -83.1479, 0.55", "44.8505, -62.681, -84.441, 0.28", "45.1374, -63.2781, -84.7024, 0.55", "45.8421, -64.8537, -85.3852, 0.28", "46.2694, -65.7695, -85.8684, 0.55", "46.728, -66.671, -86.4104, 0.55", "47.6424, -68.4695, -87.4783, 0.28", "48.3253, -69.5881, -88.2555, 0.55", "50.6439, -72.4122, -90.7689, 0.28", "51.579, -73.3376, -91.7934, 0.55", "52.2408, -73.9282, -92.4855, 0.28", "52.929, -74.471, -93.1737, 0.55", "55.1027, -76.0021, -95.2466, 0.28", "56.7581, -77.188, -96.766, 0.55", "59.6015, -79.4269, -99.1158, 0.28", "60.4995, -80.1242, -99.8506, 0.55", "62.2581, -81.41, -101.097, 0.28", "62.8525, -81.8324, -101.46, 0.55", "63.8398, -82.5086, -101.867, 0.28", "64.7202, -83.0808, -102.147, 0.55", "67.1366, -84.5092, -102.654, 0.28", "69.9251, -86.0355, -103.188, 0.28", "71.3473, -86.745, -103.358, 0.28", "72.7852, -87.4163, -103.616, 0.55", "74.898, -88.3022, -104.002, 0.28", "75.8401, -88.6823, -104.153, 0.83", "78.2407, -89.6827, -104.448, 0.28", "79.2783, -90.1398, -104.634, 0.55", "83.8129, -92.3188, -105.663, 0.28", "86.0706, -93.4349, -106.361, 0.28", "87.707, -94.2464, -106.977, 0.55", "88.651, -94.7391, -107.445, 0.55", "91.1353, -96.0807, -108.888, 0.28", "93.4343, -97.4416, -110.335, 0.55", "95.5187, -98.748, -111.653, 0.28", "97.3894, -99.9572, -112.948, 0.55", "98.9397, -100.938, -114.01, 0.28", "100.23, -101.645, -114.807, 0.55", "103.385, -103.173, -116.582, 0.28", "104.991, -103.945, -117.414, 0.55", "107.413, -105.111, -118.573, 0.28", "109.408, -106.008, -119.475, 0.55", "114.104, -107.902, -121.593, 0.28", "116.017, -108.565, -122.585, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.2036, -150.7, 107.741, 0.55", "-11.8281, -158.54, 111.492, 0.55", "-10.41, -166.914, 113.371, 0.55", "-9.61942, -175.039, 116.376, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.2036, -150.7, 107.741, 0.55", "-10.8468, -161.291, 115.942, 0.55", "-11.7508, -170.574, 125.651, 0.55", "-13.1635, -177.669, 137.006, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-16.1179, -148.589, 105.697, 0.55", "-16.5506, -159.779, 111.442, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-16.1179, -148.589, 105.697, 0.55", "-17.5909, -155.437, 110.077, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "7.13253, -97.3986, 0.931724, 0.83", "7.86546, -101.058, 1.27037, 0.83", "8.64711, -104.152, 1.76233, 0.83", "9.42408, -107.228, 2.25133, 0.83", "10.1619, -110.149, 2.71573, 0.83", "11.299, -114.65, 3.4314, 0.83", "12.4279, -119.119, 4.1419, 0.83", "13.4491, -122.093, 4.95701, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.13253, -97.3986, 0.931724, 0.55", "8.95269, -100.328, 0.36628, 0.55", "10.246, -102.606, -0.437741, 0.55", "11.0866, -104.284, -1.16817, 0.55", "11.7259, -106.232, -2.17949, 0.83", "12.2416, -108.433, -3.54528, 0.55", "12.746, -110.586, -4.88119, 0.83", "13.1086, -112.91, -6.50197, 0.55", "13.2825, -114.256, -7.5625, 0.83", "13.5769, -118.594, -11.2728, 0.55", "13.4774, -121.982, -14.3163, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.0955061, -118.33, 47.8821, 0.55", "-1.87838, -126.027, 54.5925, 0.55", "-4.62196, -132.571, 62.1487, 0.55", "-7.63579, -138.09, 70.3893, 0.55", "-11.146, -142.317, 79.179, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.0955061, -118.33, 47.8821, 0.55", "-0.463734, -125.321, 54.6173, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "13.4491, -122.093, 4.95701, 0.55", "13.5415, -124.995, 5.63163, 0.55", "13.7599, -128.705, 6.5854, 0.55", "13.9673, -132.207, 7.46666, 0.55", "14.0862, -134.695, 8.05546, 0.55", "14.249, -139.131, 9.03793, 0.55", "14.8951, -151.602, 11.4827, 0.55", "15.2161, -155.834, 12.1309, 0.55", "15.4536, -158.816, 12.4385, 0.55", "15.7522, -162.215, 12.5176, 0.55", "15.9382, -164.837, 12.346, 0.55", "16.5543, -170.963, 11.6907, 0.55", "16.8594, -175.609, 11.1881, 0.55", "17.1425, -178.664, 10.9477, 0.55", "17.8507, -186.596, 10.7309, 0.55", "18.2942, -191.933, 10.8218, 0.55", "18.9015, -198.825, 11.3255, 0.55", "19.6963, -206.662, 12.4969, 0.55", "20.4642, -211.907, 13.5989, 0.55", "20.9931, -215.011, 14.3316, 0.55", "21.428, -217.871, 14.9995, 0.55", "22.0381, -221.489, 15.6752, 0.55", "23.4006, -230.196, 16.718, 0.55", "24.0402, -233.565, 16.9957, 0.55", "24.6629, -237.314, 17.2806, 0.55", "25.5517, -242.941, 17.6798, 0.55", "26.0344, -247.264, 18.0306, 0.55", "26.2553, -251.365, 18.3139, 0.55", "26.2919, -255.271, 18.587, 0.55", "26.2629, -259.083, 18.9098, 0.55", "26.2585, -261.796, 19.1122, 0.55", "26.2778, -266.231, 19.2894, 0.55", "26.2237, -271.544, 19.0961, 0.55", "26.2634, -274.121, 18.8059, 0.55", "26.3223, -276.38, 18.3777, 0.55", "26.6299, -280.639, 17.3114, 0.55", "26.7967, -283.337, 16.5594, 0.55", "27.041, -286.666, 15.7598, 0.55", "27.1238, -289.008, 15.3426, 0.55", "27.2295, -295.101, 14.5006, 0.55", "27.1967, -299.669, 14.2021, 0.55", "27.0291, -306.753, 14.3262, 0.55", "27.0219, -311.337, 14.8397, 0.55", "26.9776, -316.154, 15.5364, 0.28", "26.9119, -318.09, 15.8968, 0.28", "26.7313, -322.803, 17.2002, 0.28", "26.525, -327.163, 18.7505, 0.28", "26.7835, -332.954, 21.3898, 0.28", "29.0488, -345.929, 24.0032, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "13.4491, -122.093, 4.95701, 0.55", "14.0726, -122.486, 5.76757, 0.55", "15.2543, -123.473, 7.53063, 0.55", "16.2243, -124.434, 9.09976, 0.28", "17.2264, -125.523, 10.8205, 0.55", "17.7251, -126.22, 11.9672, 0.28", "18.4621, -127.475, 14.0831, 0.55", "18.6019, -128.133, 15.1259, 0.28", "18.6121, -128.373, 15.5415, 0.28", "18.6252, -128.723, 16.2686, 0.55", "18.8104, -129.888, 19.0057, 0.28", "18.9193, -130.346, 20.1493, 0.55", "19.5061, -131.675, 23.4038, 0.28", "19.913, -132.335, 25.1044, 0.28", "20.5086, -133.176, 27.15, 0.55", "21.5873, -134.468, 30.0304, 0.28", "21.7648, -134.638, 30.3933, 0.55", "22.7343, -135.466, 32.0948, 0.28", "22.836, -135.542, 32.2363, 0.55", "23.6994, -136.42, 33.5056, 0.28", "24.0782, -136.895, 34.1365, 0.55", "27.1574, -140.44, 39.3831, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-11.146, -142.317, 79.179, 0.55", "-12.1093, -147.044, 89.9198, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.146, -142.317, 79.179, 0.55", "-16.9304, -152.014, 85.1474, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_BP_3085e9694e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.31502, 8.51655, 2.89071, 0.83 ) }
    dend_43 { pt3dadd( -6.47968, 10.9694, 3.36798, 1.11 ) }
    dend_43 { pt3dadd( -8.34558, 12.4147, 3.61625, 0.83 ) }
    dend_43 { pt3dadd( -10.1584, 13.8066, 3.8387, 0.83 ) }
    dend_43 { pt3dadd( -11.2317, 14.6004, 3.96059, 1.11 ) }
    dend_43 { pt3dadd( -14.5928, 17.0806, 4.35127, 1.11 ) }
    dend_43 { pt3dadd( -20.6045, 21.3269, 5.04186, 0.83 ) }
    dend_43 { pt3dadd( -22.7703, 22.7984, 5.26991, 0.83 ) }
    dend_43 { pt3dadd( -24.4854, 23.929, 5.41156, 0.83 ) }
    dend_43 { pt3dadd( -26.1579, 25.0495, 5.53418, 0.83 ) }
    dend_43 { pt3dadd( -27.5193, 25.973, 5.60033, 0.55 ) }
    dend_43 { pt3dadd( -28.5426, 26.5983, 5.66748, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.29637, 6.10992, -6.13497, 0.55 ) }
    dend_28 { pt3dadd( 6.52826, 6.59273, -6.63339, 0.55 ) }
    dend_28 { pt3dadd( 7.82334, 6.7146, -7.29291, 0.83 ) }
    dend_28 { pt3dadd( 9.87306, 6.8443, -8.518, 0.55 ) }
    dend_28 { pt3dadd( 10.8625, 6.90691, -9.10938, 1.38 ) }
    dend_28 { pt3dadd( 13.2952, 7.06086, -10.5634, 0.55 ) }
    dend_28 { pt3dadd( 14.3314, 7.00873, -11.2572, 0.83 ) }
    dend_28 { pt3dadd( 19.6913, 6.0527, -15.1554, 0.55 ) }
    dend_28 { pt3dadd( 20.2098, 5.92414, -15.5843, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.690343, -11.0359, 3.4293, 1.11 ) }
    dend_1 { pt3dadd( -0.750497, -16.3433, 5.33197, 1.11 ) }
    dend_1 { pt3dadd( -0.774994, -18.5047, 6.10685, 0.83 ) }
    dend_1 { pt3dadd( -0.807541, -21.3764, 7.13634, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.854272, 10.1288, -1.38028, 1.11 ) }
    dend_0 { pt3dadd( 0.899728, 12.3576, -1.36186, 1.11 ) }
    dend_0 { pt3dadd( 0.949676, 15.994, -1.20094, 1.38 ) }
    dend_0 { pt3dadd( 0.95554, 16.1966, -1.18799, 1.38 ) }
    dend_0 { pt3dadd( 1.17522, 18.7066, -0.985849, 0.83 ) }
    dend_0 { pt3dadd( 1.49865, 21.363, -0.619587, 0.83 ) }
    dend_0 { pt3dadd( 2.07773, 24.3678, 0.181671, 0.83 ) }
    dend_0 { pt3dadd( 2.42147, 25.5105, 0.639789, 0.83 ) }
    dend_0 { pt3dadd( 2.7708, 26.3403, 1.06599, 1.11 ) }
    dend_0 { pt3dadd( 3.81625, 28.3657, 2.18163, 0.55 ) }
    dend_0 { pt3dadd( 5.03453, 30.4829, 3.51194, 0.83 ) }
    dend_0 { pt3dadd( 6.66661, 32.6685, 5.04848, 0.55 ) }
    dend_0 { pt3dadd( 7.51202, 33.5798, 5.75599, 0.83 ) }
    dend_0 { pt3dadd( 8.68418, 34.8151, 6.84539, 0.55 ) }
    dend_0 { pt3dadd( 10.1236, 36.3856, 8.30591, 0.55 ) }
    dend_0 { pt3dadd( 12.1124, 38.7456, 10.5164, 0.55 ) }
    dend_0 { pt3dadd( 14.3014, 41.4412, 12.9563, 0.55 ) }
    dend_0 { pt3dadd( 15.6539, 43.19, 14.7516, 0.55 ) }
    dend_0 { pt3dadd( 17.2776, 45.4003, 17.2585, 0.55 ) }
    dend_0 { pt3dadd( 17.6106, 45.8439, 17.8238, 0.83 ) }
    dend_0 { pt3dadd( 18.4801, 47.0164, 19.412, 0.55 ) }
    dend_0 { pt3dadd( 19.2224, 47.9317, 20.6647, 0.83 ) }
    dend_0 { pt3dadd( 20.9143, 50.4243, 23.6278, 0.55 ) }
    dend_0 { pt3dadd( 21.577, 51.3348, 24.5098, 0.83 ) }
    dend_0 { pt3dadd( 22.2234, 52.0089, 25.1274, 0.55 ) }
    dend_0 { pt3dadd( 22.8797, 52.591, 25.6171, 0.83 ) }
    dend_0 { pt3dadd( 24.3577, 53.6784, 26.5333, 0.83 ) }
    dend_0 { pt3dadd( 26.3313, 55.1573, 27.5552, 0.83 ) }
    dend_0 { pt3dadd( 27.5552, 56.1327, 28.0409, 0.55 ) }
    dend_0 { pt3dadd( 28.4858, 56.974, 28.4165, 0.55 ) }
    dend_0 { pt3dadd( 30.9299, 59.1485, 29.362, 0.83 ) }
    dend_0 { pt3dadd( 32.5157, 60.5431, 29.9049, 0.55 ) }
    dend_0 { pt3dadd( 34.9354, 62.5878, 30.6255, 0.55 ) }
    dend_0 { pt3dadd( 37.1653, 64.3059, 31.1928, 0.55 ) }
    dend_0 { pt3dadd( 39.1673, 65.7634, 31.6445, 0.55 ) }
    dend_0 { pt3dadd( 41.7121, 67.4748, 32.0959, 0.55 ) }
    dend_0 { pt3dadd( 43.277, 68.3196, 32.3202, 0.55 ) }
    dend_0 { pt3dadd( 44.3598, 68.7981, 32.3426, 0.55 ) }
    dend_0 { pt3dadd( 45.8161, 69.1681, 32.2509, 0.55 ) }
    dend_0 { pt3dadd( 48.0144, 69.3677, 31.9382, 0.55 ) }
    dend_0 { pt3dadd( 49.394, 69.3209, 31.6919, 0.55 ) }
    dend_0 { pt3dadd( 51.3976, 69.1991, 31.47, 0.55 ) }
    dend_0 { pt3dadd( 55.1792, 69.0872, 31.3816, 0.55 ) }
    dend_0 { pt3dadd( 58.123, 69.136, 31.5209, 0.55 ) }
    dend_0 { pt3dadd( 61.2218, 69.3366, 31.8539, 0.55 ) }
    dend_0 { pt3dadd( 63.1919, 69.534, 32.2247, 0.55 ) }
    dend_0 { pt3dadd( 68.2665, 70.5185, 33.5282, 0.55 ) }
    dend_0 { pt3dadd( 71.2413, 71.3384, 34.5298, 0.55 ) }
    dend_0 { pt3dadd( 73.4475, 72.105, 35.4959, 0.55 ) }
    dend_0 { pt3dadd( 74.7776, 72.804, 36.1366, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 76.3153, 73.834, 36.8707, 0.55 ) }
    dend_0 { pt3dadd( 78.9357, 75.855, 37.8669, 0.55 ) }
    dend_0 { pt3dadd( 79.5448, 76.3409, 38.0081, 0.55 ) }
    dend_0 { pt3dadd( 81.3058, 77.6424, 38.2941, 0.55 ) }
    dend_0 { pt3dadd( 82.9205, 79.0232, 38.55, 0.83 ) }
    dend_0 { pt3dadd( 83.8028, 79.789, 38.6752, 0.55 ) }
    dend_0 { pt3dadd( 85.1257, 81.099, 38.8084, 0.83 ) }
    dend_0 { pt3dadd( 91.9061, 88.0962, 41.3947, 0.83 ) }
    dend_0 { pt3dadd( 97.8076, 96.0794, 43.1449, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -28.5426, 26.5983, 5.66748, 0.55 ) }
    dend_55 { pt3dadd( -29.6941, 27.1826, 5.09266, 0.55 ) }
    dend_55 { pt3dadd( -30.9462, 27.8179, 4.4676, 0.55 ) }
    dend_55 { pt3dadd( -32.4572, 28.5845, 3.71328, 0.55 ) }
    dend_55 { pt3dadd( -33.7049, 29.2176, 3.09043, 0.83 ) }
    dend_55 { pt3dadd( -34.7505, 29.7481, 2.56848, 0.55 ) }
    dend_55 { pt3dadd( -36.6912, 30.7328, 1.59966, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -28.5426, 26.5983, 5.66748, 0.55 ) }
    dend_44 { pt3dadd( -31.0192, 27.1023, 5.28652, 0.55 ) }
    dend_44 { pt3dadd( -33.6668, 27.5403, 5.14088, 0.55 ) }
    dend_44 { pt3dadd( -36.6723, 28.028, 5.04893, 0.55 ) }
    dend_44 { pt3dadd( -41.043, 28.6643, 5.31359, 0.55 ) }
    dend_44 { pt3dadd( -44.7126, 29.0758, 5.78892, 0.55 ) }
    dend_44 { pt3dadd( -48.569, 29.4389, 6.44802, 0.55 ) }
    dend_44 { pt3dadd( -52.316, 29.5161, 7.47124, 0.55 ) }
    dend_44 { pt3dadd( -55.5574, 29.254, 8.64457, 0.55 ) }
    dend_44 { pt3dadd( -59.617, 28.624, 10.519, 0.55 ) }
    dend_44 { pt3dadd( -61.3936, 28.2091, 11.5691, 0.55 ) }
    dend_44 { pt3dadd( -63.3163, 27.7363, 12.7832, 0.55 ) }
    dend_44 { pt3dadd( -66.7031, 26.6607, 14.7606, 0.55 ) }
    dend_44 { pt3dadd( -68.4934, 26.1095, 15.5358, 0.55 ) }
    dend_44 { pt3dadd( -70.3685, 25.4763, 16.3338, 0.55 ) }
    dend_44 { pt3dadd( -72.5886, 24.7636, 17.0619, 0.55 ) }
    dend_44 { pt3dadd( -74.9981, 24.0425, 17.7906, 0.55 ) }
    dend_44 { pt3dadd( -78.4338, 23.009, 18.7559, 0.55 ) }
    dend_44 { pt3dadd( -83.0026, 21.9553, 19.6543, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 20.2098, 5.92414, -15.5843, 0.55 ) }
    dend_34 { pt3dadd( 27.0717, 7.9728, -17.0861, 0.55 ) }
    dend_34 { pt3dadd( 31.0447, 8.8959, -18.5064, 0.55 ) }
    dend_34 { pt3dadd( 34.9748, 9.62706, -19.9588, 0.55 ) }
    dend_34 { pt3dadd( 37.6649, 10.0187, -20.9462, 0.55 ) }
    dend_34 { pt3dadd( 41.6003, 10.5007, -22.3553, 0.55 ) }
    dend_34 { pt3dadd( 49.7747, 11.332, -25.5285, 0.55 ) }
    dend_34 { pt3dadd( 59.059, 12.1916, -29.7462, 0.55 ) }
    dend_34 { pt3dadd( 63.5778, 12.3143, -32.0931, 0.55 ) }
    dend_34 { pt3dadd( 66.0027, 12.3143, -33.5064, 0.55 ) }
    dend_34 { pt3dadd( 68.6624, 12.3228, -35.1641, 0.55 ) }
    dend_34 { pt3dadd( 73.4143, 12.2068, -38.0987, 0.55 ) }
    dend_34 { pt3dadd( 75.1453, 12.0615, -39.2178, 0.55 ) }
    dend_34 { pt3dadd( 82.4725, 11.6058, -44.5243, 0.55 ) }
    dend_34 { pt3dadd( 87.6601, 11.3506, -48.6649, 0.55 ) }
    dend_34 { pt3dadd( 90.6452, 11.258, -51.1326, 0.55 ) }
    dend_34 { pt3dadd( 93.6236, 11.1398, -53.5906, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 20.2098, 5.92414, -15.5843, 0.83 ) }
    dend_29 { pt3dadd( 21.1629, 6.54513, -15.6069, 0.83 ) }
    dend_29 { pt3dadd( 21.708, 6.89898, -15.6453, 0.55 ) }
    dend_29 { pt3dadd( 22.5105, 7.43627, -15.7721, 0.83 ) }
    dend_29 { pt3dadd( 23.0499, 7.81125, -15.8744, 0.55 ) }
    dend_29 { pt3dadd( 23.7931, 8.349, -16.0047, 0.83 ) }
    dend_29 { pt3dadd( 24.6861, 9.01434, -16.128, 0.55 ) }
    dend_29 { pt3dadd( 25.1361, 9.31554, -16.1702, 0.55 ) }
    dend_29 { pt3dadd( 26.1747, 9.86659, -16.1891, 0.83 ) }
    dend_29 { pt3dadd( 27.1195, 10.254, -16.0783, 0.55 ) }
    dend_29 { pt3dadd( 27.6472, 10.4662, -15.9647, 0.83 ) }
    dend_29 { pt3dadd( 28.4377, 10.8044, -15.7097, 0.55 ) }
    dend_29 { pt3dadd( 29.5709, 11.3145, -15.1955, 0.55 ) }
    dend_29 { pt3dadd( 31.146, 11.9418, -14.3965, 0.55 ) }
    dend_29 { pt3dadd( 32.6482, 12.4874, -13.527, 0.55 ) }
    dend_29 { pt3dadd( 33.8384, 12.9073, -12.8159, 0.55 ) }
    dend_29 { pt3dadd( 35.8003, 13.609, -11.6333, 0.55 ) }
    dend_29 { pt3dadd( 37.2341, 14.1654, -10.7368, 0.55 ) }
    dend_29 { pt3dadd( 38.0973, 14.5763, -10.1646, 0.55 ) }
    dend_29 { pt3dadd( 39.6819, 15.5006, -9.0996, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.807541, -21.3764, 7.13634, 0.83 ) }
    dend_11 { pt3dadd( -1.17286, -24.7056, 7.01456, 0.83 ) }
    dend_11 { pt3dadd( -1.52877, -27.9492, 6.89592, 0.83 ) }
    dend_11 { pt3dadd( -1.92616, -31.5707, 6.76346, 0.83 ) }
    dend_11 { pt3dadd( -2.13367, -33.4618, 6.69429, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.807541, -21.3764, 7.13634, 0.55 ) }
    dend_2 { pt3dadd( -0.135784, -23.235, 8.43543, 0.55 ) }
    dend_2 { pt3dadd( 0.457877, -25.5118, 10.1245, 0.55 ) }
    dend_2 { pt3dadd( 0.777283, -28.4976, 12.4556, 0.55 ) }
    dend_2 { pt3dadd( 0.819553, -29.6585, 13.3929, 0.83 ) }
    dend_2 { pt3dadd( 0.652538, -32.6223, 16.1235, 0.55 ) }
    dend_2 { pt3dadd( 0.439988, -34.1533, 17.5624, 0.55 ) }
    dend_2 { pt3dadd( -0.0373699, -37.1309, 20.4872, 0.83 ) }
    dend_2 { pt3dadd( -0.520779, -39.3425, 22.7995, 0.55 ) }
    dend_2 { pt3dadd( -1.0824, -41.1674, 24.6779, 0.55 ) }
    dend_2 { pt3dadd( -2.22393, -44.624, 28.1719, 0.55 ) }
    dend_2 { pt3dadd( -3.13077, -47.3789, 30.9243, 0.55 ) }
    dend_2 { pt3dadd( -3.81288, -49.5873, 33.1621, 0.55 ) }
    dend_2 { pt3dadd( -4.40688, -51.9315, 35.4643, 0.28 ) }
    dend_2 { pt3dadd( -4.5716, -52.9077, 36.386, 0.55 ) }
    dend_2 { pt3dadd( -4.82819, -54.7104, 37.9856, 0.28 ) }
    dend_2 { pt3dadd( -4.84155, -57.5232, 40.0452, 0.55 ) }
    dend_2 { pt3dadd( -7.1545, -66.8898, 47.3958, 0.55 ) }
    dend_2 { pt3dadd( -9.71692, -75.546, 55.4964, 0.55 ) }
    dend_2 { pt3dadd( -11.7493, -82.6599, 65.1077, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -36.6912, 30.7328, 1.59966, 0.55 ) }
    dend_61 { pt3dadd( -39.9941, 30.8024, 3.14199, 0.55 ) }
    dend_61 { pt3dadd( -41.3892, 30.7419, 3.95043, 0.83 ) }
    dend_61 { pt3dadd( -43.0282, 30.5716, 5.09863, 0.55 ) }
    dend_61 { pt3dadd( -44.2874, 30.4298, 6.08714, 0.83 ) }
    dend_61 { pt3dadd( -47.5893, 30.1736, 8.66033, 0.55 ) }
    dend_61 { pt3dadd( -48.8406, 30.0957, 9.64608, 0.28 ) }
    dend_61 { pt3dadd( -50.9355, 29.971, 11.4614, 0.55 ) }
    dend_61 { pt3dadd( -53.7462, 29.8207, 13.8861, 0.55 ) }
    dend_61 { pt3dadd( -55.8761, 29.7166, 15.6331, 0.55 ) }
    dend_61 { pt3dadd( -58.7174, 29.5857, 17.8795, 0.28 ) }
    dend_61 { pt3dadd( -59.452, 29.5656, 18.378, 0.55 ) }
    dend_61 { pt3dadd( -60.9704, 29.5468, 19.3556, 0.28 ) }
    dend_61 { pt3dadd( -61.9981, 29.5693, 19.9283, 0.55 ) }
    dend_61 { pt3dadd( -64.0876, 29.6187, 20.9189, 0.28 ) }
    dend_61 { pt3dadd( -65.3095, 29.5881, 21.4317, 0.55 ) }
    dend_61 { pt3dadd( -67.4615, 29.3785, 22.339, 0.28 ) }
    dend_61 { pt3dadd( -68.9044, 29.2333, 22.8976, 0.55 ) }
    dend_61 { pt3dadd( -77.8469, 27.2785, 30.0773, 0.55 ) }
    dend_61 { pt3dadd( -86.0401, 24.1961, 37.7394, 0.55 ) }
    dend_61 { pt3dadd( -93.8932, 20.0426, 45.2504, 0.55 ) }
    dend_61 { pt3dadd( -101.63, 14.6316, 52.0471, 0.55 ) }
    dend_61 { pt3dadd( -108.176, 9.58309, 60.232, 0.55 ) }
    dend_61 { pt3dadd( -115.563, 4.98353, 67.9538, 0.55 ) }
    dend_61 { pt3dadd( -123.166, 2.20329, 76.3085, 0.55 ) }
    dend_61 { pt3dadd( -130.695, -1.46553, 84.3828, 0.55 ) }
    dend_61 { pt3dadd( -138.053, -4.40456, 92.9011, 0.55 ) }
    dend_61 { pt3dadd( -144.894, -7.5356, 101.773, 0.55 ) }
    dend_61 { pt3dadd( -150.587, -11.9737, 110.896, 0.55 ) }
    dend_61 { pt3dadd( -156.432, -15.3765, 120.362, 0.55 ) }
    dend_61 { pt3dadd( -162.368, -19.881, 129.295, 0.55 ) }
    dend_61 { pt3dadd( -166.98, -24.8943, 138.726, 0.55 ) }
    dend_61 { pt3dadd( -169.744, -29.1818, 149.182, 0.55 ) }
    dend_61 { pt3dadd( -172.326, -35.4773, 158.618, 0.55 ) }
    dend_61 { pt3dadd( -173.255, -41.964, 168.23, 0.55 ) }
    dend_61 { pt3dadd( -174.825, -48.0075, 178.046, 0.55 ) }
    dend_61 { pt3dadd( -177.662, -53.2667, 188.027, 0.55 ) }
    dend_61 { pt3dadd( -182.924, -56.7525, 197.8, 0.55 ) }
    dend_61 { pt3dadd( -187.156, -61.4973, 207.542, 0.55 ) }
    dend_61 { pt3dadd( -189.349, -64.4071, 218.59, 0.55 ) }
    dend_61 { pt3dadd( -193.388, -66.4685, 229.304, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -36.6912, 30.7328, 1.59966, 0.55 ) }
    dend_56 { pt3dadd( -38.0437, 31.4562, -0.169079, 0.55 ) }
    dend_56 { pt3dadd( -39.0506, 32.2641, -2.10955, 0.55 ) }
    dend_56 { pt3dadd( -39.9797, 33.2503, -4.14755, 0.55 ) }
    dend_56 { pt3dadd( -40.5615, 33.8678, -5.42373, 0.55 ) }
    dend_56 { pt3dadd( -41.6228, 34.9942, -7.75162, 0.83 ) }
    dend_56 { pt3dadd( -42.3992, 35.8183, -9.45472, 0.55 ) }
    dend_56 { pt3dadd( -43.2557, 36.9557, -11.9441, 0.83 ) }
    dend_56 { pt3dadd( -43.5437, 37.7156, -13.3241, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -83.0026, 21.9553, 19.6543, 0.28 ) }
    dend_48 { pt3dadd( -84.1488, 19.9861, 18.963, 0.28 ) }
    dend_48 { pt3dadd( -84.6925, 19.1492, 18.5885, 0.28 ) }
    dend_48 { pt3dadd( -85.398, 17.9697, 18.017, 0.55 ) }
    dend_48 { pt3dadd( -85.9803, 16.9306, 17.5264, 0.28 ) }
    dend_48 { pt3dadd( -86.8406, 15.3447, 16.8016, 0.55 ) }
    dend_48 { pt3dadd( -89.2388, 10.6711, 14.7593, 0.28 ) }
    dend_48 { pt3dadd( -90.0153, 9.0461, 13.9102, 0.55 ) }
    dend_48 { pt3dadd( -91.1876, 6.55316, 12.5149, 0.28 ) }
    dend_48 { pt3dadd( -91.8576, 5.06934, 11.6111, 0.55 ) }
    dend_48 { pt3dadd( -92.3193, 4.04974, 10.962, 0.28 ) }
    dend_48 { pt3dadd( -92.8458, 2.87827, 10.2275, 0.55 ) }
    dend_48 { pt3dadd( -94.4399, -1.04679, 7.88833, 0.28 ) }
    dend_48 { pt3dadd( -94.9394, -2.22866, 7.13518, 0.55 ) }
    dend_48 { pt3dadd( -95.8056, -4.01083, 5.77799, 0.28 ) }
    dend_48 { pt3dadd( -96.5175, -5.13587, 4.79136, 0.28 ) }
    dend_48 { pt3dadd( -97.1594, -5.87935, 4.09045, 0.55 ) }
    dend_48 { pt3dadd( -99.4088, -7.9607, 2.15743, 0.28 ) }
    dend_48 { pt3dadd( -100.457, -8.80162, 1.38522, 0.55 ) }
    dend_48 { pt3dadd( -103.019, -10.6966, -0.519019, 0.28 ) }
    dend_48 { pt3dadd( -105.584, -12.3599, -2.27182, 0.28 ) }
    dend_48 { pt3dadd( -108.374, -13.9263, -4.06203, 0.28 ) }
    dend_48 { pt3dadd( -109.655, -14.509, -4.75967, 0.55 ) }
    dend_48 { pt3dadd( -115.837, -21.4646, -9.73513, 0.55 ) }
    dend_48 { pt3dadd( -122.818, -28.7396, -12.8473, 0.55 ) }
    dend_48 { pt3dadd( -129.574, -35.4254, -17.4304, 0.55 ) }
    dend_48 { pt3dadd( -136.449, -41.3512, -22.8117, 0.55 ) }
    dend_48 { pt3dadd( -143.356, -46.4161, -28.975, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -83.0026, 21.9553, 19.6543, 0.55 ) }
    dend_45 { pt3dadd( -83.8642, 21.8751, 19.7732, 0.55 ) }
    dend_45 { pt3dadd( -86.2956, 21.6787, 20.4232, 0.55 ) }
    dend_45 { pt3dadd( -87.2091, 21.5856, 20.7183, 0.55 ) }
    dend_45 { pt3dadd( -89.3561, 21.3045, 21.4507, 0.55 ) }
    dend_45 { pt3dadd( -92.6581, 20.8921, 22.4143, 0.55 ) }
    dend_45 { pt3dadd( -94.3749, 20.728, 22.8801, 0.28 ) }
    dend_45 { pt3dadd( -97.0453, 20.41, 23.5575, 0.55 ) }
    dend_45 { pt3dadd( -99.0274, 20.127, 23.9928, 0.55 ) }
    dend_45 { pt3dadd( -99.8643, 20.0021, 24.1788, 0.28 ) }
    dend_45 { pt3dadd( -104.884, 19.2497, 25.2885, 0.55 ) }
    dend_45 { pt3dadd( -107.227, 18.7776, 25.6728, 0.28 ) }
    dend_45 { pt3dadd( -110.387, 18.1127, 26.0064, 0.28 ) }
    dend_45 { pt3dadd( -113.112, 17.5658, 26.1306, 0.55 ) }
    dend_45 { pt3dadd( -123.782, 17.19, 28.7966, 0.55 ) }
    dend_45 { pt3dadd( -134.085, 16.6445, 32.6241, 0.55 ) }
    dend_45 { pt3dadd( -143.775, 15.0888, 37.6037, 0.55 ) }
    dend_45 { pt3dadd( -153.213, 15.4486, 43.25, 0.55 ) }
    dend_45 { pt3dadd( -161.276, 15.6268, 50.737, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -167.764, 16.5598, 59.5767, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 93.6236, 11.1398, -53.5906, 0.55 ) }
    dend_42 { pt3dadd( 98.0213, 12.4518, -57.2966, 0.55 ) }
    dend_42 { pt3dadd( 99.4158, 12.7967, -58.5511, 0.55 ) }
    dend_42 { pt3dadd( 101.165, 13.172, -60.095, 0.55 ) }
    dend_42 { pt3dadd( 104.341, 13.8078, -63.0823, 0.55 ) }
    dend_42 { pt3dadd( 107.666, 14.3256, -66.2705, 0.55 ) }
    dend_42 { pt3dadd( 109.299, 14.4509, -67.7761, 0.83 ) }
    dend_42 { pt3dadd( 110.649, 14.4514, -69.1089, 0.55 ) }
    dend_42 { pt3dadd( 111.665, 14.3585, -70.2004, 0.83 ) }
    dend_42 { pt3dadd( 114.135, 13.7764, -72.9693, 0.55 ) }
    dend_42 { pt3dadd( 116.181, 13.1067, -75.2463, 0.55 ) }
    dend_42 { pt3dadd( 118.533, 12.331, -77.7493, 0.55 ) }
    dend_42 { pt3dadd( 121.148, 11.537, -80.5955, 0.55 ) }
    dend_42 { pt3dadd( 122.905, 10.9593, -82.544, 0.55 ) }
    dend_42 { pt3dadd( 124.888, 10.296, -84.8039, 0.55 ) }
    dend_42 { pt3dadd( 126.599, 9.7722, -86.8805, 0.55 ) }
    dend_42 { pt3dadd( 127.671, 9.52767, -88.3372, 0.55 ) }
    dend_42 { pt3dadd( 129.044, 9.0485, -91.2794, 0.55 ) }
    dend_42 { pt3dadd( 129.798, 8.68505, -93.1146, 0.55 ) }
    dend_42 { pt3dadd( 130.468, 8.07604, -95.5448, 0.55 ) }
    dend_42 { pt3dadd( 131.408, 6.90966, -99.6418, 0.55 ) }
    dend_42 { pt3dadd( 131.604, 6.61024, -100.563, 0.28 ) }
    dend_42 { pt3dadd( 134.125, 2.8498, -111.74, 0.28 ) }
    dend_42 { pt3dadd( 134.964, 1.77467, -115.023, 0.83 ) }
    dend_42 { pt3dadd( 138.251, -2.23437, -126.642, 0.83 ) }
    dend_42 { pt3dadd( 139.939, -4.30965, -132.015, 0.83 ) }
    dend_42 { pt3dadd( 140.745, -5.23483, -134.181, 0.55 ) }
    dend_42 { pt3dadd( 141.66, -6.13932, -136.29, 0.55 ) }
    dend_42 { pt3dadd( 144.141, -7.86943, -140.181, 0.55 ) }
    dend_42 { pt3dadd( 146.776, -9.40208, -143.591, 0.28 ) }
    dend_42 { pt3dadd( 147.555, -9.62997, -143.767, 0.55 ) }
    dend_42 { pt3dadd( 149.259, -9.95682, -143.563, 0.28 ) }
    dend_42 { pt3dadd( 150.308, -10.0706, -143.293, 0.55 ) }
    dend_42 { pt3dadd( 151.401, -10.1951, -142.917, 0.28 ) }
    dend_42 { pt3dadd( 152.708, -10.2736, -142.413, 0.55 ) }
    dend_42 { pt3dadd( 154.661, -10.3071, -141.876, 0.28 ) }
    dend_42 { pt3dadd( 156.232, -10.3871, -141.491, 0.55 ) }
    dend_42 { pt3dadd( 157.967, -10.3732, -141.215, 0.28 ) }
    dend_42 { pt3dadd( 160.326, -10.366, -141.05, 0.55 ) }
    dend_42 { pt3dadd( 162.971, -10.3115, -141.029, 0.55 ) }
    dend_42 { pt3dadd( 165.296, -10.2504, -141.167, 0.28 ) }
    dend_42 { pt3dadd( 168.516, -10.153, -141.54, 0.55 ) }
    dend_42 { pt3dadd( 174.08, -9.88622, -142.791, 0.55 ) }
    dend_42 { pt3dadd( 176.534, -9.66868, -143.652, 0.55 ) }
    dend_42 { pt3dadd( 177.588, -9.54177, -144.14, 0.83 ) }
    dend_42 { pt3dadd( 179.597, -9.30296, -145.256, 0.55 ) }
    dend_42 { pt3dadd( 180.989, -9.08868, -146.123, 0.83 ) }
    dend_42 { pt3dadd( 184.729, -8.4169, -148.509, 0.55 ) }
    dend_42 { pt3dadd( 187.022, -8.17088, -150.01, 0.28 ) }
    dend_42 { pt3dadd( 187.99, -8.1174, -150.528, 0.55 ) }
    dend_42 { pt3dadd( 190.65, -8.18891, -151.628, 0.28 ) }
    dend_42 { pt3dadd( 191.587, -8.2936, -151.944, 0.55 ) }
    dend_42 { pt3dadd( 193.519, -8.60152, -152.289, 0.28 ) }
    dend_42 { pt3dadd( 195.493, -9.07226, -152.286, 0.55 ) }
    dend_42 { pt3dadd( 199.483, -10.1689, -151.569, 0.28 ) }
    dend_42 { pt3dadd( 201.325, -10.7363, -151.038, 0.55 ) }
    dend_42 { pt3dadd( 204.071, -11.7211, -150.089, 0.28 ) }
    dend_42 { pt3dadd( 207.538, -12.9404, -148.77, 0.55 ) }
    dend_42 { pt3dadd( 210.044, -13.7848, -147.78, 0.55 ) }
    dend_42 { pt3dadd( 214.375, -15.1071, -146.007, 0.28 ) }
    dend_42 { pt3dadd( 216.15, -15.5826, -145.432, 0.55 ) }
    dend_42 { pt3dadd( 219.204, -16.2613, -144.787, 0.28 ) }
    dend_42 { pt3dadd( 222.237, -16.7275, -144.377, 0.55 ) }
    dend_42 { pt3dadd( 223.893, -16.8184, -144.399, 0.28 ) }
    dend_42 { pt3dadd( 225.379, -16.7112, -144.555, 0.55 ) }
    dend_42 { pt3dadd( 229.566, -16.1956, -145.417, 0.28 ) }
    dend_42 { pt3dadd( 232.545, -15.6241, -146.101, 0.28 ) }
    dend_42 { pt3dadd( 235.125, -14.9406, -146.752, 0.55 ) }
    dend_42 { pt3dadd( 237.97, -14.1193, -147.625, 0.28 ) }
    dend_42 { pt3dadd( 238.684, -13.8645, -147.825, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 93.6236, 11.1398, -53.5906, 0.55 ) }
    dend_35 { pt3dadd( 94.4921, 8.66097, -55.108, 0.55 ) }
    dend_35 { pt3dadd( 95.0404, 6.54941, -56.2455, 0.28 ) }
    dend_35 { pt3dadd( 95.5387, 4.61904, -57.1241, 0.55 ) }
    dend_35 { pt3dadd( 96.8025, 0.545778, -59.0243, 0.28 ) }
    dend_35 { pt3dadd( 96.8756, 0.287824, -59.1799, 0.55 ) }
    dend_35 { pt3dadd( 97.2961, -1.0629, -60.1055, 0.28 ) }
    dend_35 { pt3dadd( 97.5451, -2.19422, -61.0471, 0.55 ) }
    dend_35 { pt3dadd( 97.7411, -3.3847, -62.1625, 0.28 ) }
    dend_35 { pt3dadd( 97.9634, -5.01468, -63.7572, 0.55 ) }
    dend_35 { pt3dadd( 98.518, -9.10594, -67.6863, 0.55 ) }
    dend_35 { pt3dadd( 98.983, -12.8404, -71.3319, 0.55 ) }
    dend_35 { pt3dadd( 99.3263, -15.828, -74.2499, 0.55 ) }
    dend_35 { pt3dadd( 99.6114, -18.7682, -77.0675, 0.55 ) }
    dend_35 { pt3dadd( 99.6824, -19.5273, -77.7642, 0.28 ) }
    dend_35 { pt3dadd( 99.7796, -20.3345, -78.4429, 0.55 ) }
    dend_35 { pt3dadd( 100.014, -21.4407, -79.2822, 0.28 ) }
    dend_35 { pt3dadd( 100.628, -23.4012, -80.6081, 0.55 ) }
    dend_35 { pt3dadd( 102.112, -27.1116, -82.5577, 0.55 ) }
    dend_35 { pt3dadd( 102.925, -29.1007, -83.4271, 0.28 ) }
    dend_35 { pt3dadd( 103.636, -31.1356, -84.3997, 0.55 ) }
    dend_35 { pt3dadd( 104.427, -34.0069, -85.8691, 0.28 ) }
    dend_35 { pt3dadd( 104.921, -36.3388, -87.109, 0.55 ) }
    dend_35 { pt3dadd( 105.515, -39.8385, -88.9696, 0.28 ) }
    dend_35 { pt3dadd( 106.153, -43.4543, -90.7852, 0.55 ) }
    dend_35 { pt3dadd( 107.013, -48.7116, -93.4666, 0.28 ) }
    dend_35 { pt3dadd( 107.412, -51.5196, -94.9049, 0.55 ) }
    dend_35 { pt3dadd( 107.776, -54.3977, -96.4425, 0.28 ) }
    dend_35 { pt3dadd( 108.073, -56.9385, -97.9496, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 108.552, -60.1152, -100.101, 0.55 ) }
    dend_35 { pt3dadd( 109.192, -63.0407, -102.023, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 39.6819, 15.5006, -9.0996, 0.55 ) }
    dend_31 { pt3dadd( 42.0919, 15.369, -8.36143, 0.55 ) }
    dend_31 { pt3dadd( 43.8607, 15.1747, -7.97883, 0.55 ) }
    dend_31 { pt3dadd( 47.7469, 14.668, -7.33497, 0.55 ) }
    dend_31 { pt3dadd( 49.5051, 14.376, -7.19363, 0.55 ) }
    dend_31 { pt3dadd( 51.4295, 14.0803, -7.14296, 0.55 ) }
    dend_31 { pt3dadd( 54.0245, 13.6954, -7.26321, 0.55 ) }
    dend_31 { pt3dadd( 56.779, 13.1717, -7.63193, 0.55 ) }
    dend_31 { pt3dadd( 58.2352, 12.8491, -7.98312, 0.55 ) }
    dend_31 { pt3dadd( 61.2189, 12.1215, -9.08791, 0.55 ) }
    dend_31 { pt3dadd( 62.5956, 11.7898, -9.64068, 0.55 ) }
    dend_31 { pt3dadd( 65.8269, 10.9384, -11.0055, 0.55 ) }
    dend_31 { pt3dadd( 68.0152, 10.2798, -11.8975, 0.55 ) }
    dend_31 { pt3dadd( 69.6215, 9.79816, -12.4817, 0.83 ) }
    dend_31 { pt3dadd( 72.1872, 8.94107, -13.3707, 0.55 ) }
    dend_31 { pt3dadd( 74.6953, 7.99964, -14.1261, 0.83 ) }
    dend_31 { pt3dadd( 76.8198, 7.11886, -14.6766, 0.55 ) }
    dend_31 { pt3dadd( 78.7047, 6.37935, -15.0754, 0.55 ) }
    dend_31 { pt3dadd( 79.7728, 6.01517, -15.2527, 0.83 ) }
    dend_31 { pt3dadd( 82.2585, 5.19584, -15.5397, 0.28 ) }
    dend_31 { pt3dadd( 83.4898, 4.85272, -15.6144, 0.28 ) }
    dend_31 { pt3dadd( 84.6851, 4.43491, -15.7342, 0.28 ) }
    dend_31 { pt3dadd( 85.9775, 4.01635, -15.8752, 0.28 ) }
    dend_31 { pt3dadd( 88.0476, 3.37732, -16.1496, 0.28 ) }
    dend_31 { pt3dadd( 88.8791, 3.13472, -16.2376, 0.55 ) }
    dend_31 { pt3dadd( 90.8563, 2.60915, -16.2606, 0.55 ) }
    dend_31 { pt3dadd( 94.405, 1.6611, -16.1193, 0.55 ) }
    dend_31 { pt3dadd( 95.3847, 1.38062, -16.0331, 0.55 ) }
    dend_31 { pt3dadd( 96.2579, 1.10838, -15.9139, 0.83 ) }
    dend_31 { pt3dadd( 98.1451, 0.60307, -15.513, 0.55 ) }
    dend_31 { pt3dadd( 99.784, 0.171792, -15.1389, 0.55 ) }
    dend_31 { pt3dadd( 101.333, -0.227783, -14.7794, 0.55 ) }
    dend_31 { pt3dadd( 102.534, -0.564438, -14.5313, 0.55 ) }
    dend_31 { pt3dadd( 104.444, -1.2487, -14.2076, 0.55 ) }
    dend_31 { pt3dadd( 106.704, -2.2766, -13.916, 0.55 ) }
    dend_31 { pt3dadd( 110.23, -4.3139, -13.6396, 0.55 ) }
    dend_31 { pt3dadd( 112.173, -5.73903, -13.5611, 0.55 ) }
    dend_31 { pt3dadd( 113.863, -7.27638, -13.5279, 0.28 ) }
    dend_31 { pt3dadd( 114.368, -7.85023, -13.5282, 0.55 ) }
    dend_31 { pt3dadd( 115.488, -9.46476, -13.5293, 0.28 ) }
    dend_31 { pt3dadd( 116.454, -11.2788, -13.5097, 0.55 ) }
    dend_31 { pt3dadd( 117.356, -13.5206, -13.3252, 0.55 ) }
    dend_31 { pt3dadd( 117.961, -14.9808, -13.1342, 0.28 ) }
    dend_31 { pt3dadd( 118.182, -15.4918, -13.0413, 0.55 ) }
    dend_31 { pt3dadd( 118.752, -16.7571, -12.7919, 0.28 ) }
    dend_31 { pt3dadd( 119.528, -18.3947, -12.4256, 0.55 ) }
    dend_31 { pt3dadd( 121.549, -22.3163, -11.4358, 0.55 ) }
    dend_31 { pt3dadd( 122.6, -24.2836, -10.8929, 0.55 ) }
    dend_31 { pt3dadd( 123.575, -26.083, -10.3783, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 39.6819, 15.5006, -9.0996, 0.55 ) }
    dend_30 { pt3dadd( 41.7061, 16.0288, -7.40665, 0.55 ) }
    dend_30 { pt3dadd( 42.3579, 16.1924, -6.90095, 0.55 ) }
    dend_30 { pt3dadd( 44.8004, 16.6705, -5.11687, 0.55 ) }
    dend_30 { pt3dadd( 47.5214, 17.2637, -3.0874, 0.55 ) }
    dend_30 { pt3dadd( 51.003, 18.0242, -0.388962, 0.55 ) }
    dend_30 { pt3dadd( 51.965, 18.2348, 0.349572, 0.55 ) }
    dend_30 { pt3dadd( 53.6961, 18.5418, 1.66215, 0.55 ) }
    dend_30 { pt3dadd( 55.5962, 18.9176, 3.02284, 0.55 ) }
    dend_30 { pt3dadd( 57.8084, 19.4101, 4.49659, 0.55 ) }
    dend_30 { pt3dadd( 59.8909, 19.9055, 5.89079, 0.55 ) }
    dend_30 { pt3dadd( 61.0339, 20.2267, 6.59645, 0.55 ) }
    dend_30 { pt3dadd( 62.3735, 20.6439, 7.41952, 0.55 ) }
    dend_30 { pt3dadd( 64.0299, 21.2074, 8.40291, 0.83 ) }
    dend_30 { pt3dadd( 66.7627, 22.0991, 9.71858, 0.55 ) }
    dend_30 { pt3dadd( 68.5822, 22.6082, 10.5055, 0.83 ) }
    dend_30 { pt3dadd( 71.1211, 23.1883, 11.5176, 0.55 ) }
    dend_30 { pt3dadd( 71.9039, 23.322, 11.8202, 0.55 ) }
    dend_30 { pt3dadd( 74.3434, 23.6097, 12.7166, 0.55 ) }
    dend_30 { pt3dadd( 78.735, 23.8422, 14.1634, 0.55 ) }
    dend_30 { pt3dadd( 81.9659, 23.8261, 15.1619, 0.55 ) }
    dend_30 { pt3dadd( 84.5265, 23.6991, 16.0214, 0.55 ) }
    dend_30 { pt3dadd( 87.1393, 23.4394, 16.9974, 0.55 ) }
    dend_30 { pt3dadd( 87.6896, 23.3702, 17.2066, 0.28 ) }
    dend_30 { pt3dadd( 88.8082, 23.1849, 17.6314, 0.83 ) }
    dend_30 { pt3dadd( 93.4031, 22.3593, 19.4074, 0.55 ) }
    dend_30 { pt3dadd( 96.6214, 21.7803, 20.5872, 0.55 ) }
    dend_30 { pt3dadd( 99.2547, 21.3774, 21.617, 0.55 ) }
    dend_30 { pt3dadd( 100.828, 21.1331, 22.2478, 0.83 ) }
    dend_30 { pt3dadd( 102.065, 20.959, 22.7454, 0.28 ) }
    dend_30 { pt3dadd( 103.188, 20.8021, 23.1859, 0.55 ) }
    dend_30 { pt3dadd( 111.735, 21.8205, 27.7302, 0.55 ) }
    dend_30 { pt3dadd( 120.982, 21.2595, 30.7173, 0.55 ) }
    dend_30 { pt3dadd( 130.097, 21.9045, 34.0705, 0.55 ) }
    dend_30 { pt3dadd( 138.179, 21.2986, 39.4615, 0.55 ) }
    dend_30 { pt3dadd( 145.725, 19.4013, 45.3103, 0.55 ) }
    dend_30 { pt3dadd( 154.21, 15.9544, 48.6062, 0.55 ) }
    dend_30 { pt3dadd( 162.686, 11.4882, 50.3273, 0.55 ) }
    dend_30 { pt3dadd( 171.953, 8.71348, 51.4096, 0.55 ) }
    dend_30 { pt3dadd( 181.089, 5.83688, 53.1397, 0.55 ) }
    dend_30 { pt3dadd( 190.583, 3.9736, 54.2106, 0.55 ) }
    dend_30 { pt3dadd( 199.948, 2.62567, 56.495, 0.55 ) }
    dend_30 { pt3dadd( 208.768, -0.342054, 59.349, 0.55 ) }
    dend_30 { pt3dadd( 217.688, -1.53664, 63.0581, 0.55 ) }
    dend_30 { pt3dadd( 226.072, -1.23122, 67.9935, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.13367, -33.4618, 6.69429, 1.38 ) }
    dend_13 { pt3dadd( 0.958913, -37.1437, 5.30316, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.13367, -33.4618, 6.69429, 0.55 ) }
    dend_12 { pt3dadd( -3.43405, -34.9485, 6.8322, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.88012, -36.8627, 6.98441, 0.55 ) }
    dend_12 { pt3dadd( -5.99777, -38.1242, 7.11618, 0.55 ) }
    dend_12 { pt3dadd( -6.95242, -39.1775, 7.08121, 0.55 ) }
    dend_12 { pt3dadd( -9.0488, -41.3543, 6.81271, 0.55 ) }
    dend_12 { pt3dadd( -10.5204, -42.8053, 6.58505, 0.55 ) }
    dend_12 { pt3dadd( -11.8334, -44.1063, 6.33446, 0.55 ) }
    dend_12 { pt3dadd( -15.2009, -47.2664, 5.69455, 0.55 ) }
    dend_12 { pt3dadd( -19.24, -50.9202, 4.95752, 0.55 ) }
    dend_12 { pt3dadd( -22.3708, -53.6846, 4.33432, 0.55 ) }
    dend_12 { pt3dadd( -24.3731, -55.5019, 3.90827, 0.55 ) }
    dend_12 { pt3dadd( -26.6729, -57.6862, 3.4257, 0.55 ) }
    dend_12 { pt3dadd( -29.5984, -60.8332, 2.84882, 0.55 ) }
    dend_12 { pt3dadd( -31.3194, -63.0795, 2.54425, 0.55 ) }
    dend_12 { pt3dadd( -33.4409, -66.3248, 2.34485, 0.55 ) }
    dend_12 { pt3dadd( -35.1415, -69.3771, 2.24786, 0.55 ) }
    dend_12 { pt3dadd( -36.8809, -73.2008, 2.17442, 0.55 ) }
    dend_12 { pt3dadd( -38.5437, -77.7049, 2.16728, 0.55 ) }
    dend_12 { pt3dadd( -39.4671, -81.1611, 2.21585, 0.55 ) }
    dend_12 { pt3dadd( -39.7993, -82.886, 2.34284, 0.55 ) }
    dend_12 { pt3dadd( -40.3172, -86.9494, 2.84158, 0.55 ) }
    dend_12 { pt3dadd( -40.7254, -90.7544, 3.40175, 0.55 ) }
    dend_12 { pt3dadd( -40.9152, -94.5963, 4.23225, 0.55 ) }
    dend_12 { pt3dadd( -41.0364, -96.8001, 4.83045, 0.55 ) }
    dend_12 { pt3dadd( -41.3483, -103.616, 6.92578, 0.55 ) }
    dend_12 { pt3dadd( -41.3738, -104.118, 7.08912, 0.55 ) }
    dend_12 { pt3dadd( -41.4658, -107.194, 8.15946, 0.55 ) }
    dend_12 { pt3dadd( -41.8744, -112.685, 10.2241, 0.55 ) }
    dend_12 { pt3dadd( -42.0312, -114.521, 10.8067, 0.55 ) }
    dend_12 { pt3dadd( -42.3899, -117.385, 11.2333, 0.55 ) }
    dend_12 { pt3dadd( -42.5171, -118.449, 11.1462, 0.55 ) }
    dend_12 { pt3dadd( -42.8476, -122.053, 10.1624, 0.55 ) }
    dend_12 { pt3dadd( -42.9749, -124.391, 9.02276, 0.55 ) }
    dend_12 { pt3dadd( -43.1424, -128.114, 6.44469, 0.55 ) }
    dend_12 { pt3dadd( -43.1942, -132.675, 2.92358, 0.28 ) }
    dend_12 { pt3dadd( -43.2027, -133.802, 1.89987, 0.55 ) }
    dend_12 { pt3dadd( -43.2232, -135.511, 0.19731, 0.28 ) }
    dend_12 { pt3dadd( -43.2298, -135.768, -0.0726793, 0.55 ) }
    dend_12 { pt3dadd( -43.2645, -137.177, -1.42999, 0.28 ) }
    dend_12 { pt3dadd( -43.2993, -137.655, -1.77816, 0.55 ) }
    dend_12 { pt3dadd( -43.4941, -140.14, -3.10434, 0.28 ) }
    dend_12 { pt3dadd( -43.5921, -140.984, -3.54208, 0.55 ) }
    dend_12 { pt3dadd( -43.8938, -143.425, -4.66655, 0.28 ) }
    dend_12 { pt3dadd( -43.9851, -144.193, -5.01801, 0.55 ) }
    dend_12 { pt3dadd( -44.3182, -146.844, -6.18569, 0.28 ) }
    dend_12 { pt3dadd( -44.4655, -148.064, -6.72962, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -11.7493, -82.6599, 65.1077, 0.55 ) }
    dend_10 { pt3dadd( -13.6594, -86.538, 69.3937, 0.55 ) }
    dend_10 { pt3dadd( -16.0113, -89.8013, 73.9629, 0.55 ) }
    dend_10 { pt3dadd( -18.3352, -93.4704, 78.2285, 0.55 ) }
    dend_10 { pt3dadd( -20.7829, -97.1381, 82.4255, 0.55 ) }
    dend_10 { pt3dadd( -22.8342, -101.563, 86.0678, 0.55 ) }
    dend_10 { pt3dadd( -24.7316, -105.821, 89.9835, 0.55 ) }
    dend_10 { pt3dadd( -26.3965, -111.067, 92.5846, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -11.7493, -82.6599, 65.1077, 0.55 ) }
    dend_3 { pt3dadd( -10.9032, -89.9072, 71.5232, 0.55 ) }
    dend_3 { pt3dadd( -10.0526, -98.2133, 76.4915, 0.55 ) }
    dend_3 { pt3dadd( -10.7416, -106.386, 81.6994, 0.55 ) }
    dend_3 { pt3dadd( -12.1893, -114.916, 86.12, 0.55 ) }
    dend_3 { pt3dadd( -13.225, -123.466, 90.6185, 0.55 ) }
    dend_3 { pt3dadd( -14.0391, -131.703, 95.7054, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -43.5437, 37.7156, -13.3241, 0.83 ) }
    dend_60 { pt3dadd( -43.1005, 39.8049, -15.657, 0.83 ) }
    dend_60 { pt3dadd( -42.1684, 44.857, -20.8789, 0.55 ) }
    dend_60 { pt3dadd( -41.7647, 47.0418, -22.9434, 0.83 ) }
    dend_60 { pt3dadd( -41.3251, 49.3843, -24.987, 0.55 ) }
    dend_60 { pt3dadd( -40.8761, 51.8048, -26.7371, 0.55 ) }
    dend_60 { pt3dadd( -40.6417, 53.0259, -27.4558, 0.28 ) }
    dend_60 { pt3dadd( -40.5391, 53.8398, -27.7243, 0.55 ) }
    dend_60 { pt3dadd( -40.1164, 56.5766, -28.0346, 0.28 ) }
    dend_60 { pt3dadd( -39.9067, 57.7499, -28.1085, 0.55 ) }
    dend_60 { pt3dadd( -39.2279, 61.8321, -28.1989, 0.28 ) }
    dend_60 { pt3dadd( -38.7731, 65.0675, -28.1606, 0.55 ) }
    dend_60 { pt3dadd( -38.3026, 70.1168, -27.942, 0.28 ) }
    dend_60 { pt3dadd( -38.0433, 74.5524, -27.6632, 0.28 ) }
    dend_60 { pt3dadd( -38.0405, 77.0316, -27.4575, 0.55 ) }
    dend_60 { pt3dadd( -38.2165, 79.9644, -27.2102, 0.28 ) }
    dend_60 { pt3dadd( -38.392, 81.361, -27.0716, 0.55 ) }
    dend_60 { pt3dadd( -38.9837, 84.635, -26.8925, 0.28 ) }
    dend_60 { pt3dadd( -39.5232, 86.8082, -26.8863, 0.28 ) }
    dend_60 { pt3dadd( -40.0988, 88.9389, -26.9455, 0.28 ) }
    dend_60 { pt3dadd( -40.3597, 90.0664, -26.9817, 0.55 ) }
    dend_60 { pt3dadd( -41.1711, 94.6363, -27.2388, 0.28 ) }
    dend_60 { pt3dadd( -41.953, 100.055, -27.6451, 0.55 ) }
    dend_60 { pt3dadd( -42.1957, 101.928, -27.7931, 0.55 ) }
    dend_60 { pt3dadd( -42.4689, 103.805, -27.9005, 0.55 ) }
    dend_60 { pt3dadd( -43.2595, 107.781, -28.192, 0.55 ) }
    dend_60 { pt3dadd( -43.9464, 110.381, -28.4387, 0.28 ) }
    dend_60 { pt3dadd( -44.3207, 111.359, -28.5444, 0.55 ) }
    dend_60 { pt3dadd( -45.5221, 113.998, -28.7719, 0.28 ) }
    dend_60 { pt3dadd( -46.9175, 116.799, -29.1268, 0.55 ) }
    dend_60 { pt3dadd( -49.3045, 120.8, -29.7947, 0.28 ) }
    dend_60 { pt3dadd( -50.4859, 122.458, -30.1277, 0.28 ) }
    dend_60 { pt3dadd( -52.4339, 124.74, -30.8283, 0.55 ) }
    dend_60 { pt3dadd( -54.6287, 127.105, -31.6888, 0.28 ) }
    dend_60 { pt3dadd( -55.0316, 127.472, -31.843, 0.55 ) }
    dend_60 { pt3dadd( -56.4909, 128.632, -32.3849, 0.28 ) }
    dend_60 { pt3dadd( -61.5357, 132.324, -34.1482, 0.55 ) }
    dend_60 { pt3dadd( -68.5799, 136.821, -36.8484, 0.28 ) }
    dend_60 { pt3dadd( -69.8857, 137.566, -37.4233, 0.55 ) }
    dend_60 { pt3dadd( -73.477, 139.471, -39.0581, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -74.9864, 140.249, -39.785, 0.28 ) }
    dend_60 { pt3dadd( -76.3007, 140.889, -40.4787, 0.55 ) }
    dend_60 { pt3dadd( -80.1695, 142.293, -42.7916, 0.28 ) }
    dend_60 { pt3dadd( -82.9102, 143.009, -44.3084, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -43.5437, 37.7156, -13.3241, 0.55 ) }
    dend_57 { pt3dadd( -43.7799, 39.2696, -13.5359, 0.55 ) }
    dend_57 { pt3dadd( -43.9422, 40.1873, -13.5748, 0.28 ) }
    dend_57 { pt3dadd( -44.1885, 40.8419, -13.4406, 0.55 ) }
    dend_57 { pt3dadd( -44.754, 42.3452, -13.1326, 0.28 ) }
    dend_57 { pt3dadd( -45.1512, 43.4011, -12.9163, 0.55 ) }
    dend_57 { pt3dadd( -45.8834, 45.3476, -12.5174, 0.28 ) }
    dend_57 { pt3dadd( -46.3808, 46.39, -12.1202, 0.55 ) }
    dend_57 { pt3dadd( -48.3042, 48.8606, -10.2817, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -143.356, -46.4161, -28.975, 0.55 ) }
    dend_52 { pt3dadd( -148.297, -52.488, -32.479, 0.55 ) }
    dend_52 { pt3dadd( -151.867, -59.1845, -36.4751, 0.55 ) }
    dend_52 { pt3dadd( -154.581, -65.131, -42.0274, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -143.356, -46.4161, -28.975, 0.55 ) }
    dend_49 { pt3dadd( -146.943, -49.3904, -32.6588, 0.55 ) }
    dend_49 { pt3dadd( -149.938, -52.1845, -36.9606, 0.55 ) }
    dend_49 { pt3dadd( -152.694, -55.0159, -41.3959, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -167.764, 16.5598, 59.5767, 0.55 ) }
    dend_47 { pt3dadd( -176.206, 16.8027, 65.2785, 0.55 ) }
    dend_47 { pt3dadd( -185.155, 18.2491, 69.9325, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -167.764, 16.5598, 59.5767, 0.55 ) }
    dend_46 { pt3dadd( -173.565, 16.0718, 62.5197, 0.55 ) }
    dend_46 { pt3dadd( -179.626, 16.4668, 64.8991, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 109.192, -63.0407, -102.023, 0.28 ) }
    dend_39 { pt3dadd( 118.067, -68.7068, -115.111, 0.28 ) }
    dend_39 { pt3dadd( 118.947, -69.3185, -116.258, 0.55 ) }
    dend_39 { pt3dadd( 120.434, -70.3512, -118.194, 0.28 ) }
    dend_39 { pt3dadd( 121.687, -71.2207, -119.824, 0.28 ) }
    dend_39 { pt3dadd( 123.344, -72.3717, -121.982, 0.55 ) }
    dend_39 { pt3dadd( 125.529, -73.8893, -124.827, 0.55 ) }
    dend_39 { pt3dadd( 128.411, -76.1032, -126.049, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 109.192, -63.0407, -102.023, 0.55 ) }
    dend_36 { pt3dadd( 110.198, -64.6287, -103.658, 0.55 ) }
    dend_36 { pt3dadd( 110.511, -65.3404, -104.395, 0.28 ) }
    dend_36 { pt3dadd( 110.983, -66.5589, -105.691, 0.55 ) }
    dend_36 { pt3dadd( 112.021, -69.2432, -108.545, 0.28 ) }
    dend_36 { pt3dadd( 112.741, -71.1035, -110.522, 0.55 ) }
    dend_36 { pt3dadd( 113.96, -74.2553, -113.873, 0.28 ) }
    dend_36 { pt3dadd( 115.357, -78.0957, -118.299, 0.28 ) }
    dend_36 { pt3dadd( 115.922, -79.8597, -120.378, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 123.575, -26.083, -10.3783, 0.28 ) }
    dend_33 { pt3dadd( 125.903, -28.8338, -8.51447, 0.28 ) }
    dend_33 { pt3dadd( 128.808, -32.3761, -5.71196, 0.28 ) }
    dend_33 { pt3dadd( 130.632, -34.646, -3.78578, 0.55 ) }
    dend_33 { pt3dadd( 131.731, -35.8694, -2.63692, 0.28 ) }
    dend_33 { pt3dadd( 132.314, -36.5262, -2.01113, 0.28 ) }
    dend_33 { pt3dadd( 135.211, -39.7872, 1.01621, 0.55 ) }
    dend_33 { pt3dadd( 135.868, -40.4751, 1.8108, 0.28 ) }
    dend_33 { pt3dadd( 137.392, -42.2549, 4.04844, 0.55 ) }
    dend_33 { pt3dadd( 138.698, -43.8304, 5.90417, 0.28 ) }
    dend_33 { pt3dadd( 139.849, -45.1146, 7.38858, 0.55 ) }
    dend_33 { pt3dadd( 141.209, -46.6912, 9.03412, 0.55 ) }
    dend_33 { pt3dadd( 143.414, -49.3172, 11.2424, 0.55 ) }
    dend_33 { pt3dadd( 143.948, -49.971, 11.7547, 0.55 ) }
    dend_33 { pt3dadd( 145.857, -52.4291, 13.6257, 0.28 ) }
    dend_33 { pt3dadd( 146.597, -53.4464, 14.354, 0.55 ) }
    dend_33 { pt3dadd( 147.636, -54.7403, 15.2881, 0.28 ) }
    dend_33 { pt3dadd( 149.111, -56.608, 16.5136, 0.55 ) }
    dend_33 { pt3dadd( 151.612, -59.6931, 17.9588, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 123.575, -26.083, -10.3783, 0.55 ) }
    dend_32 { pt3dadd( 121.534, -26.2071, -10.5029, 0.55 ) }
    dend_32 { pt3dadd( 119.877, -26.3079, -10.604, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 0.958913, -37.1437, 5.30316, 0.83 ) }
    dend_17 { pt3dadd( 1.06097, -37.4652, 5.21977, 0.83 ) }
    dend_17 { pt3dadd( 2.41082, -40.3403, 4.46065, 0.83 ) }
    dend_17 { pt3dadd( 3.52403, -42.8555, 3.64826, 0.55 ) }
    dend_17 { pt3dadd( 4.41214, -44.8622, 3.00014, 0.55 ) }
    dend_17 { pt3dadd( 6.29984, -49.1274, 1.62254, 0.83 ) }
    dend_17 { pt3dadd( 8.58949, -54.3008, -0.0483994, 0.55 ) }
    dend_17 { pt3dadd( 9.87301, -57.0141, -0.905582, 0.83 ) }
    dend_17 { pt3dadd( 12.2742, -61.3539, -2.2327, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.958913, -37.1437, 5.30316, 0.55 ) }
    dend_14 { pt3dadd( -0.50619, -38.1669, 2.41278, 0.55 ) }
    dend_14 { pt3dadd( -2.0788, -39.2651, -0.689688, 0.55 ) }
    dend_14 { pt3dadd( -3.93528, -40.5616, -4.35218, 0.55 ) }
    dend_14 { pt3dadd( -6.18965, -42.136, -8.79963, 0.55 ) }
    dend_14 { pt3dadd( -7.46893, -43.0294, -11.3234, 0.55 ) }
    dend_14 { pt3dadd( -7.72591, -43.2089, -11.8304, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -14.0391, -131.703, 95.7054, 0.55 ) }
    dend_7 { pt3dadd( -13.9186, -140.933, 102.268, 0.55 ) }
    dend_7 { pt3dadd( -12.2036, -150.7, 107.741, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -14.0391, -131.703, 95.7054, 0.55 ) }
    dend_4 { pt3dadd( -14.9024, -140.274, 100.521, 0.55 ) }
    dend_4 { pt3dadd( -16.1179, -148.589, 105.697, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -48.3042, 48.8606, -10.2817, 0.28 ) }
    dend_59 { pt3dadd( -49.9662, 50.7842, -8.31187, 0.28 ) }
    dend_59 { pt3dadd( -50.5906, 51.5126, -7.47134, 0.55 ) }
    dend_59 { pt3dadd( -52.3736, 53.6235, -4.98722, 0.28 ) }
    dend_59 { pt3dadd( -53.2631, 54.6703, -3.87594, 0.55 ) }
    dend_59 { pt3dadd( -55.698, 57.5035, -0.979854, 0.28 ) }
    dend_59 { pt3dadd( -58.1726, 60.383, 1.96362, 0.55 ) }
    dend_59 { pt3dadd( -62.2662, 64.8812, 6.88231, 0.28 ) }
    dend_59 { pt3dadd( -63.1376, 65.8478, 7.93076, 0.55 ) }
    dend_59 { pt3dadd( -65.0566, 68.1209, 10.1509, 0.28 ) }
    dend_59 { pt3dadd( -65.8041, 69.0661, 11.0227, 0.55 ) }
    dend_59 { pt3dadd( -74.3254, 75.2093, 18.5188, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -83.7742, 82.7086, 23.1042, 0.55 ) }
    dend_59 { pt3dadd( -91.8798, 90.5863, 29.332, 0.55 ) }
    dend_59 { pt3dadd( -98.3253, 100.062, 35.2651, 0.55 ) }
    dend_59 { pt3dadd( -106.106, 109.009, 40.3606, 0.55 ) }
    dend_59 { pt3dadd( -114.915, 115.974, 46.7189, 0.55 ) }
    dend_59 { pt3dadd( -122.86, 121.988, 54.9205, 0.55 ) }
    dend_59 { pt3dadd( -129.587, 126.754, 64.8484, 0.55 ) }
    dend_59 { pt3dadd( -136.351, 132.251, 74.3657, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -48.3042, 48.8606, -10.2817, 0.55 ) }
    dend_58 { pt3dadd( -51.4412, 47.8995, -8.5324, 0.55 ) }
    dend_58 { pt3dadd( -53.0715, 47.3424, -7.62112, 0.28 ) }
    dend_58 { pt3dadd( -54.2847, 46.9278, -6.94298, 0.55 ) }
    dend_58 { pt3dadd( -55.2959, 46.5822, -6.37778, 0.28 ) }
    dend_58 { pt3dadd( -56.0042, 46.3401, -5.98189, 0.55 ) }
    dend_58 { pt3dadd( -57.9571, 45.6727, -4.89026, 0.28 ) }
    dend_58 { pt3dadd( -59.272, 45.0957, -4.32618, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -154.581, -65.131, -42.0274, 0.55 ) }
    dend_54 { pt3dadd( -157.414, -70.9013, -43.1816, 0.55 ) }
    dend_54 { pt3dadd( -160.202, -76.7923, -43.6062, 0.55 ) }
    dend_54 { pt3dadd( -162.386, -82.7571, -45.1244, 0.55 ) }
    dend_54 { pt3dadd( -165.302, -88.5542, -45.8619, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -154.581, -65.131, -42.0274, 0.55 ) }
    dend_53 { pt3dadd( -158.253, -69.794, -49.2207, 0.55 ) }
    dend_53 { pt3dadd( -161.306, -73.3203, -57.2964, 0.55 ) }
    dend_53 { pt3dadd( -165.304, -77.7894, -64.4393, 0.55 ) }
    dend_53 { pt3dadd( -171.09, -80.662, -71.1656, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -152.694, -55.0159, -41.3959, 0.55 ) }
    dend_51 { pt3dadd( -158.052, -59.0947, -51.7379, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -152.694, -55.0159, -41.3959, 0.55 ) }
    dend_50 { pt3dadd( -157.836, -66.0015, -44.1748, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 128.411, -76.1032, -126.049, 0.28 ) }
    dend_41 { pt3dadd( 132.006, -77.2452, -127.84, 0.28 ) }
    dend_41 { pt3dadd( 133.675, -77.7756, -128.672, 0.55 ) }
    dend_41 { pt3dadd( 136.86, -78.7873, -130.259, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 128.411, -76.1032, -126.049, 0.55 ) }
    dend_40 { pt3dadd( 128.147, -77.5082, -127.18, 0.55 ) }
    dend_40 { pt3dadd( 127.62, -80.3187, -129.443, 0.28 ) }
    dend_40 { pt3dadd( 127.448, -81.2341, -130.18, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 115.922, -79.8597, -120.378, 0.28 ) }
    dend_38 { pt3dadd( 116.493, -81.2867, -122.267, 0.28 ) }
    dend_38 { pt3dadd( 116.776, -81.9932, -123.202, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 115.922, -79.8597, -120.378, 0.55 ) }
    dend_37 { pt3dadd( 113.788, -80.3351, -119.993, 0.55 ) }
    dend_37 { pt3dadd( 107.837, -81.6609, -118.919, 0.28 ) }
    dend_37 { pt3dadd( 106.424, -81.9758, -118.664, 0.55 ) }
    dend_37 { pt3dadd( 102.557, -82.8373, -117.966, 0.28 ) }
    dend_37 { pt3dadd( 100.064, -83.3926, -117.516, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 12.2742, -61.3539, -2.2327, 0.83 ) }
    dend_23 { pt3dadd( 12.2755, -61.5335, -2.26337, 0.83 ) }
    dend_23 { pt3dadd( 12.3469, -63.8876, -2.61364, 0.83 ) }
    dend_23 { pt3dadd( 12.2907, -65.647, -2.72122, 0.83 ) }
    dend_23 { pt3dadd( 12.1781, -67.3448, -2.62051, 0.83 ) }
    dend_23 { pt3dadd( 12.0059, -69.6048, -2.2988, 0.83 ) }
    dend_23 { pt3dadd( 11.7692, -72.2076, -1.81389, 0.83 ) }
    dend_23 { pt3dadd( 11.5646, -75.1185, -1.13103, 0.83 ) }
    dend_23 { pt3dadd( 11.4076, -77.9496, -0.34367, 0.83 ) }
    dend_23 { pt3dadd( 10.9743, -81.4116, 0.617549, 0.83 ) }
    dend_23 { pt3dadd( 10.6634, -82.9952, 1.00039, 0.83 ) }
    dend_23 { pt3dadd( 10.4013, -84.1839, 1.2176, 0.83 ) }
    dend_23 { pt3dadd( 9.83657, -86.4606, 1.60322, 0.83 ) }
    dend_23 { pt3dadd( 9.34101, -88.4994, 1.82466, 0.83 ) }
    dend_23 { pt3dadd( 8.35725, -92.847, 1.75313, 0.83 ) }
    dend_23 { pt3dadd( 7.74709, -95.2181, 1.4058, 0.83 ) }
    dend_23 { pt3dadd( 7.13253, -97.3986, 0.931724, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.2742, -61.3539, -2.2327, 0.55 ) }
    dend_18 { pt3dadd( 10.9841, -63.9968, -1.75678, 0.55 ) }
    dend_18 { pt3dadd( 10.0637, -65.9157, -1.26072, 0.55 ) }
    dend_18 { pt3dadd( 9.54464, -67.1464, -0.83148, 0.55 ) }
    dend_18 { pt3dadd( 8.87844, -69.0804, -0.00264084, 0.55 ) }
    dend_18 { pt3dadd( 7.73053, -72.919, 1.85066, 0.55 ) }
    dend_18 { pt3dadd( 6.93371, -75.8276, 3.57367, 0.55 ) }
    dend_18 { pt3dadd( 6.37153, -78.1626, 5.1975, 0.55 ) }
    dend_18 { pt3dadd( 5.79767, -80.5199, 7.01801, 0.55 ) }
    dend_18 { pt3dadd( 5.33636, -82.4754, 8.63257, 0.28 ) }
    dend_18 { pt3dadd( 5.0069, -84.075, 10.1872, 0.55 ) }
    dend_18 { pt3dadd( 4.46411, -86.9874, 13.4358, 0.55 ) }
    dend_18 { pt3dadd( 4.09389, -88.7695, 15.6447, 0.55 ) }
    dend_18 { pt3dadd( 3.87268, -89.7671, 16.8757, 0.55 ) }
    dend_18 { pt3dadd( 3.53499, -90.9394, 18.285, 0.83 ) }
    dend_18 { pt3dadd( 2.43279, -94.4109, 22.244, 0.28 ) }
    dend_18 { pt3dadd( 2.05963, -95.5594, 23.5229, 0.55 ) }
    dend_18 { pt3dadd( 1.42923, -97.6358, 25.7454, 0.28 ) }
    dend_18 { pt3dadd( 1.2496, -98.2765, 26.4764, 0.55 ) }
    dend_18 { pt3dadd( 0.901516, -99.7857, 28.1383, 0.28 ) }
    dend_18 { pt3dadd( 0.690147, -100.643, 29.0194, 0.55 ) }
    dend_18 { pt3dadd( -0.394744, -103.415, 31.1993, 0.55 ) }
    dend_18 { pt3dadd( -0.57614, -111.034, 39.402, 0.55 ) }
    dend_18 { pt3dadd( -0.0955061, -118.33, 47.8821, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -7.72591, -43.2089, -11.8304, 0.55 ) }
    dend_16 { pt3dadd( -11.0774, -44.5837, -15.6639, 0.55 ) }
    dend_16 { pt3dadd( -12.0727, -44.9054, -16.7414, 0.55 ) }
    dend_16 { pt3dadd( -14.5792, -45.7194, -19.3463, 0.55 ) }
    dend_16 { pt3dadd( -20.0878, -47.3393, -24.7962, 0.28 ) }
    dend_16 { pt3dadd( -20.9119, -47.5635, -25.5528, 0.55 ) }
    dend_16 { pt3dadd( -24.3543, -48.6057, -28.5741, 0.55 ) }
    dend_16 { pt3dadd( -29.0954, -50.0618, -32.2452, 0.55 ) }
    dend_16 { pt3dadd( -30.9141, -50.5635, -33.6026, 0.28 ) }
    dend_16 { pt3dadd( -32.5168, -50.8989, -34.6952, 0.28 ) }
    dend_16 { pt3dadd( -35.273, -51.4378, -36.1916, 0.55 ) }
    dend_16 { pt3dadd( -38.6377, -51.9332, -38.1337, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -41.755, -52.1264, -39.9848, 0.55 ) }
    dend_16 { pt3dadd( -44.1755, -52.0835, -41.3619, 0.55 ) }
    dend_16 { pt3dadd( -45.8467, -51.9156, -42.3555, 0.55 ) }
    dend_16 { pt3dadd( -50.7621, -51.1996, -45.4087, 0.55 ) }
    dend_16 { pt3dadd( -55.9547, -50.1109, -48.5118, 0.55 ) }
    dend_16 { pt3dadd( -58.1069, -49.5498, -49.7371, 0.28 ) }
    dend_16 { pt3dadd( -60.1494, -49.0459, -50.9392, 0.55 ) }
    dend_16 { pt3dadd( -64.2845, -48.2839, -53.3483, 0.28 ) }
    dend_16 { pt3dadd( -65.675, -48.0668, -54.1471, 0.83 ) }
    dend_16 { pt3dadd( -68.2797, -47.6417, -55.4666, 0.28 ) }
    dend_16 { pt3dadd( -70.1586, -47.4846, -56.1871, 0.55 ) }
    dend_16 { pt3dadd( -72.885, -47.3513, -57.1844, 0.28 ) }
    dend_16 { pt3dadd( -73.9723, -47.2867, -57.5465, 0.55 ) }
    dend_16 { pt3dadd( -75.9886, -47.2094, -58.1146, 0.55 ) }
    dend_16 { pt3dadd( -79.0486, -46.8065, -58.8477, 0.55 ) }
    dend_16 { pt3dadd( -81.0537, -46.4315, -59.2134, 0.28 ) }
    dend_16 { pt3dadd( -82.6783, -45.946, -59.3767, 0.55 ) }
    dend_16 { pt3dadd( -84.6011, -45.1516, -59.5674, 0.28 ) }
    dend_16 { pt3dadd( -84.9185, -44.9966, -59.6079, 0.55 ) }
    dend_16 { pt3dadd( -87.852, -43.4784, -60.458, 0.28 ) }
    dend_16 { pt3dadd( -89.9835, -42.3249, -61.287, 0.55 ) }
    dend_16 { pt3dadd( -92.8028, -40.6093, -62.7383, 0.83 ) }
    dend_16 { pt3dadd( -95.127, -39.1329, -64.177, 0.28 ) }
    dend_16 { pt3dadd( -95.7272, -38.7524, -64.6047, 0.55 ) }
    dend_16 { pt3dadd( -100.326, -35.8843, -68.1301, 0.28 ) }
    dend_16 { pt3dadd( -101.13, -35.3908, -68.8228, 0.55 ) }
    dend_16 { pt3dadd( -103.507, -33.7752, -71.0019, 0.28 ) }
    dend_16 { pt3dadd( -104.12, -33.3594, -71.5687, 0.55 ) }
    dend_16 { pt3dadd( -105.696, -32.2832, -72.9199, 0.28 ) }
    dend_16 { pt3dadd( -106.814, -31.5125, -73.8091, 0.55 ) }
    dend_16 { pt3dadd( -109.316, -29.8119, -75.4362, 0.28 ) }
    dend_16 { pt3dadd( -110.801, -28.9048, -76.3521, 0.55 ) }
    dend_16 { pt3dadd( -113.969, -27.1669, -78.153, 0.28 ) }
    dend_16 { pt3dadd( -114.912, -26.6994, -78.6773, 0.55 ) }
    dend_16 { pt3dadd( -116.389, -26.0781, -79.4524, 0.28 ) }
    dend_16 { pt3dadd( -117.641, -25.5585, -80.0505, 0.55 ) }
    dend_16 { pt3dadd( -120.243, -24.5213, -81.1439, 0.28 ) }
    dend_16 { pt3dadd( -121.026, -24.2272, -81.4493, 0.55 ) }
    dend_16 { pt3dadd( -126.85, -21.9482, -83.4525, 0.28 ) }
    dend_16 { pt3dadd( -128.895, -21.0208, -83.9774, 0.55 ) }
    dend_16 { pt3dadd( -132.542, -19.212, -84.6815, 0.28 ) }
    dend_16 { pt3dadd( -134.187, -18.3374, -84.9474, 0.55 ) }
    dend_16 { pt3dadd( -137.952, -16.3696, -85.3501, 0.28 ) }
    dend_16 { pt3dadd( -139.331, -15.7093, -85.4425, 0.55 ) }
    dend_16 { pt3dadd( -144.306, -13.7646, -85.5356, 0.28 ) }
    dend_16 { pt3dadd( -146.376, -13.2053, -85.5665, 0.55 ) }
    dend_16 { pt3dadd( -149.321, -12.8775, -85.5972, 0.55 ) }
    dend_16 { pt3dadd( -151.128, -12.7899, -85.5783, 0.55 ) }
    dend_16 { pt3dadd( -154.796, -12.7193, -85.2655, 0.28 ) }
    dend_16 { pt3dadd( -158.389, -12.6975, -84.7347, 0.28 ) }
    dend_16 { pt3dadd( -161.375, -12.6731, -84.2054, 0.55 ) }
    dend_16 { pt3dadd( -164.992, -12.3517, -83.1473, 0.28 ) }
    dend_16 { pt3dadd( -166.758, -11.9817, -82.3727, 0.55 ) }
    dend_16 { pt3dadd( -170.906, -10.4341, -80.072, 0.28 ) }
    dend_16 { pt3dadd( -172.954, -9.22726, -78.3441, 0.55 ) }
    dend_16 { pt3dadd( -174.215, -8.23705, -76.906, 0.28 ) }
    dend_16 { pt3dadd( -175.536, -7.13698, -74.9017, 0.55 ) }
    dend_16 { pt3dadd( -177.123, -5.69637, -72.145, 0.28 ) }
    dend_16 { pt3dadd( -177.731, -5.19484, -71.1106, 0.55 ) }
    dend_16 { pt3dadd( -181.032, -2.9864, -66.2512, 0.28 ) }
    dend_16 { pt3dadd( -182.152, -2.2993, -64.6291, 0.55 ) }
    dend_16 { pt3dadd( -184.792, -0.804309, -60.6942, 0.28 ) }
    dend_16 { pt3dadd( -186.227, -0.0151924, -58.5583, 0.55 ) }
    dend_16 { pt3dadd( -187.41, 0.630764, -56.8054, 0.55 ) }
    dend_16 { pt3dadd( -188.839, 1.38998, -54.758, 0.28 ) }
    dend_16 { pt3dadd( -189.637, 1.7799, -53.8453, 0.55 ) }
    dend_16 { pt3dadd( -192.379, 3.20232, -50.9717, 0.28 ) }
    dend_16 { pt3dadd( -193.8, 4.14458, -49.4251, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -7.72591, -43.2089, -11.8304, 0.55 ) }
    dend_15 { pt3dadd( -7.08121, -43.386, -12.7194, 0.55 ) }
    dend_15 { pt3dadd( -6.39733, -43.4456, -13.5948, 0.55 ) }
    dend_15 { pt3dadd( -5.48374, -43.4294, -14.6408, 0.55 ) }
    dend_15 { pt3dadd( -4.69766, -43.3311, -15.4599, 0.55 ) }
    dend_15 { pt3dadd( 0.876376, -41.978, -20.431, 0.55 ) }
    dend_15 { pt3dadd( 2.13951, -41.4986, -21.5669, 0.55 ) }
    dend_15 { pt3dadd( 3.99606, -40.6253, -23.2822, 0.55 ) }
    dend_15 { pt3dadd( 5.30953, -39.9531, -24.5044, 0.55 ) }
    dend_15 { pt3dadd( 6.61188, -39.2078, -25.6632, 0.28 ) }
    dend_15 { pt3dadd( 8.67959, -37.9279, -27.3412, 0.55 ) }
    dend_15 { pt3dadd( 11.8541, -35.9174, -29.6625, 0.28 ) }
    dend_15 { pt3dadd( 12.0962, -35.8026, -29.936, 0.55 ) }
    dend_15 { pt3dadd( 13.2256, -35.4715, -32.1296, 0.28 ) }
    dend_15 { pt3dadd( 13.7338, -35.3404, -33.7336, 0.55 ) }
    dend_15 { pt3dadd( 14.1162, -35.3192, -35.5234, 0.55 ) }
    dend_15 { pt3dadd( 14.7504, -35.4444, -38.7505, 0.55 ) }
    dend_15 { pt3dadd( 16.01, -35.736, -45.08, 0.55 ) }
    dend_15 { pt3dadd( 16.9288, -35.9794, -49.3145, 0.55 ) }
    dend_15 { pt3dadd( 17.284, -36.0782, -50.7668, 0.55 ) }
    dend_15 { pt3dadd( 19.8473, -36.6578, -60.2519, 0.55 ) }
    dend_15 { pt3dadd( 20.6511, -36.7802, -62.7889, 0.55 ) }
    dend_15 { pt3dadd( 21.2089, -36.8526, -64.1775, 0.55 ) }
    dend_15 { pt3dadd( 22.7878, -37.1152, -67.2997, 0.55 ) }
    dend_15 { pt3dadd( 26.9977, -38.1746, -74.5663, 0.55 ) }
    dend_15 { pt3dadd( 28.2121, -38.552, -76.4741, 0.28 ) }
    dend_15 { pt3dadd( 28.984, -38.8245, -77.5066, 0.55 ) }
    dend_15 { pt3dadd( 30.1541, -39.3046, -79.0146, 0.28 ) }
    dend_15 { pt3dadd( 30.6786, -39.5788, -79.5965, 0.55 ) }
    dend_15 { pt3dadd( 32.6159, -40.7371, -80.8776, 0.28 ) }
    dend_15 { pt3dadd( 34.196, -42.1961, -80.8709, 0.55 ) }
    dend_15 { pt3dadd( 35.1294, -43.2212, -80.7956, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 35.9637, -44.3371, -80.6051, 0.55 ) }
    dend_15 { pt3dadd( 36.6726, -45.5388, -80.3575, 0.28 ) }
    dend_15 { pt3dadd( 36.9736, -46.1544, -80.2616, 0.55 ) }
    dend_15 { pt3dadd( 37.6514, -47.759, -79.9629, 0.28 ) }
    dend_15 { pt3dadd( 37.828, -48.2374, -79.9533, 0.55 ) }
    dend_15 { pt3dadd( 38.847, -50.982, -80.0522, 0.28 ) }
    dend_15 { pt3dadd( 39.3729, -52.2558, -80.2562, 0.55 ) }
    dend_15 { pt3dadd( 40.6295, -54.9858, -80.9836, 0.28 ) }
    dend_15 { pt3dadd( 41.1468, -55.9946, -81.3575, 0.55 ) }
    dend_15 { pt3dadd( 42.9977, -59.3157, -82.7709, 0.28 ) }
    dend_15 { pt3dadd( 43.4568, -60.1237, -83.1479, 0.55 ) }
    dend_15 { pt3dadd( 44.8505, -62.681, -84.441, 0.28 ) }
    dend_15 { pt3dadd( 45.1374, -63.2781, -84.7024, 0.55 ) }
    dend_15 { pt3dadd( 45.8421, -64.8537, -85.3852, 0.28 ) }
    dend_15 { pt3dadd( 46.2694, -65.7695, -85.8684, 0.55 ) }
    dend_15 { pt3dadd( 46.728, -66.671, -86.4104, 0.55 ) }
    dend_15 { pt3dadd( 47.6424, -68.4695, -87.4783, 0.28 ) }
    dend_15 { pt3dadd( 48.3253, -69.5881, -88.2555, 0.55 ) }
    dend_15 { pt3dadd( 50.6439, -72.4122, -90.7689, 0.28 ) }
    dend_15 { pt3dadd( 51.579, -73.3376, -91.7934, 0.55 ) }
    dend_15 { pt3dadd( 52.2408, -73.9282, -92.4855, 0.28 ) }
    dend_15 { pt3dadd( 52.929, -74.471, -93.1737, 0.55 ) }
    dend_15 { pt3dadd( 55.1027, -76.0021, -95.2466, 0.28 ) }
    dend_15 { pt3dadd( 56.7581, -77.188, -96.766, 0.55 ) }
    dend_15 { pt3dadd( 59.6015, -79.4269, -99.1158, 0.28 ) }
    dend_15 { pt3dadd( 60.4995, -80.1242, -99.8506, 0.55 ) }
    dend_15 { pt3dadd( 62.2581, -81.41, -101.097, 0.28 ) }
    dend_15 { pt3dadd( 62.8525, -81.8324, -101.46, 0.55 ) }
    dend_15 { pt3dadd( 63.8398, -82.5086, -101.867, 0.28 ) }
    dend_15 { pt3dadd( 64.7202, -83.0808, -102.147, 0.55 ) }
    dend_15 { pt3dadd( 67.1366, -84.5092, -102.654, 0.28 ) }
    dend_15 { pt3dadd( 69.9251, -86.0355, -103.188, 0.28 ) }
    dend_15 { pt3dadd( 71.3473, -86.745, -103.358, 0.28 ) }
    dend_15 { pt3dadd( 72.7852, -87.4163, -103.616, 0.55 ) }
    dend_15 { pt3dadd( 74.898, -88.3022, -104.002, 0.28 ) }
    dend_15 { pt3dadd( 75.8401, -88.6823, -104.153, 0.83 ) }
    dend_15 { pt3dadd( 78.2407, -89.6827, -104.448, 0.28 ) }
    dend_15 { pt3dadd( 79.2783, -90.1398, -104.634, 0.55 ) }
    dend_15 { pt3dadd( 83.8129, -92.3188, -105.663, 0.28 ) }
    dend_15 { pt3dadd( 86.0706, -93.4349, -106.361, 0.28 ) }
    dend_15 { pt3dadd( 87.707, -94.2464, -106.977, 0.55 ) }
    dend_15 { pt3dadd( 88.651, -94.7391, -107.445, 0.55 ) }
    dend_15 { pt3dadd( 91.1353, -96.0807, -108.888, 0.28 ) }
    dend_15 { pt3dadd( 93.4343, -97.4416, -110.335, 0.55 ) }
    dend_15 { pt3dadd( 95.5187, -98.748, -111.653, 0.28 ) }
    dend_15 { pt3dadd( 97.3894, -99.9572, -112.948, 0.55 ) }
    dend_15 { pt3dadd( 98.9397, -100.938, -114.01, 0.28 ) }
    dend_15 { pt3dadd( 100.23, -101.645, -114.807, 0.55 ) }
    dend_15 { pt3dadd( 103.385, -103.173, -116.582, 0.28 ) }
    dend_15 { pt3dadd( 104.991, -103.945, -117.414, 0.55 ) }
    dend_15 { pt3dadd( 107.413, -105.111, -118.573, 0.28 ) }
    dend_15 { pt3dadd( 109.408, -106.008, -119.475, 0.55 ) }
    dend_15 { pt3dadd( 114.104, -107.902, -121.593, 0.28 ) }
    dend_15 { pt3dadd( 116.017, -108.565, -122.585, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.2036, -150.7, 107.741, 0.55 ) }
    dend_9 { pt3dadd( -11.8281, -158.54, 111.492, 0.55 ) }
    dend_9 { pt3dadd( -10.41, -166.914, 113.371, 0.55 ) }
    dend_9 { pt3dadd( -9.61942, -175.039, 116.376, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.2036, -150.7, 107.741, 0.55 ) }
    dend_8 { pt3dadd( -10.8468, -161.291, 115.942, 0.55 ) }
    dend_8 { pt3dadd( -11.7508, -170.574, 125.651, 0.55 ) }
    dend_8 { pt3dadd( -13.1635, -177.669, 137.006, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -16.1179, -148.589, 105.697, 0.55 ) }
    dend_6 { pt3dadd( -16.5506, -159.779, 111.442, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -16.1179, -148.589, 105.697, 0.55 ) }
    dend_5 { pt3dadd( -17.5909, -155.437, 110.077, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 7.13253, -97.3986, 0.931724, 0.83 ) }
    dend_25 { pt3dadd( 7.86546, -101.058, 1.27037, 0.83 ) }
    dend_25 { pt3dadd( 8.64711, -104.152, 1.76233, 0.83 ) }
    dend_25 { pt3dadd( 9.42408, -107.228, 2.25133, 0.83 ) }
    dend_25 { pt3dadd( 10.1619, -110.149, 2.71573, 0.83 ) }
    dend_25 { pt3dadd( 11.299, -114.65, 3.4314, 0.83 ) }
    dend_25 { pt3dadd( 12.4279, -119.119, 4.1419, 0.83 ) }
    dend_25 { pt3dadd( 13.4491, -122.093, 4.95701, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.13253, -97.3986, 0.931724, 0.55 ) }
    dend_24 { pt3dadd( 8.95269, -100.328, 0.36628, 0.55 ) }
    dend_24 { pt3dadd( 10.246, -102.606, -0.437741, 0.55 ) }
    dend_24 { pt3dadd( 11.0866, -104.284, -1.16817, 0.55 ) }
    dend_24 { pt3dadd( 11.7259, -106.232, -2.17949, 0.83 ) }
    dend_24 { pt3dadd( 12.2416, -108.433, -3.54528, 0.55 ) }
    dend_24 { pt3dadd( 12.746, -110.586, -4.88119, 0.83 ) }
    dend_24 { pt3dadd( 13.1086, -112.91, -6.50197, 0.55 ) }
    dend_24 { pt3dadd( 13.2825, -114.256, -7.5625, 0.83 ) }
    dend_24 { pt3dadd( 13.5769, -118.594, -11.2728, 0.55 ) }
    dend_24 { pt3dadd( 13.4774, -121.982, -14.3163, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.0955061, -118.33, 47.8821, 0.55 ) }
    dend_20 { pt3dadd( -1.87838, -126.027, 54.5925, 0.55 ) }
    dend_20 { pt3dadd( -4.62196, -132.571, 62.1487, 0.55 ) }
    dend_20 { pt3dadd( -7.63579, -138.09, 70.3893, 0.55 ) }
    dend_20 { pt3dadd( -11.146, -142.317, 79.179, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.0955061, -118.33, 47.8821, 0.55 ) }
    dend_19 { pt3dadd( -0.463734, -125.321, 54.6173, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 13.4491, -122.093, 4.95701, 0.55 ) }
    dend_27 { pt3dadd( 13.5415, -124.995, 5.63163, 0.55 ) }
    dend_27 { pt3dadd( 13.7599, -128.705, 6.5854, 0.55 ) }
    dend_27 { pt3dadd( 13.9673, -132.207, 7.46666, 0.55 ) }
    dend_27 { pt3dadd( 14.0862, -134.695, 8.05546, 0.55 ) }
    dend_27 { pt3dadd( 14.249, -139.131, 9.03793, 0.55 ) }
    dend_27 { pt3dadd( 14.8951, -151.602, 11.4827, 0.55 ) }
    dend_27 { pt3dadd( 15.2161, -155.834, 12.1309, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 15.4536, -158.816, 12.4385, 0.55 ) }
    dend_27 { pt3dadd( 15.7522, -162.215, 12.5176, 0.55 ) }
    dend_27 { pt3dadd( 15.9382, -164.837, 12.346, 0.55 ) }
    dend_27 { pt3dadd( 16.5543, -170.963, 11.6907, 0.55 ) }
    dend_27 { pt3dadd( 16.8594, -175.609, 11.1881, 0.55 ) }
    dend_27 { pt3dadd( 17.1425, -178.664, 10.9477, 0.55 ) }
    dend_27 { pt3dadd( 17.8507, -186.596, 10.7309, 0.55 ) }
    dend_27 { pt3dadd( 18.2942, -191.933, 10.8218, 0.55 ) }
    dend_27 { pt3dadd( 18.9015, -198.825, 11.3255, 0.55 ) }
    dend_27 { pt3dadd( 19.6963, -206.662, 12.4969, 0.55 ) }
    dend_27 { pt3dadd( 20.4642, -211.907, 13.5989, 0.55 ) }
    dend_27 { pt3dadd( 20.9931, -215.011, 14.3316, 0.55 ) }
    dend_27 { pt3dadd( 21.428, -217.871, 14.9995, 0.55 ) }
    dend_27 { pt3dadd( 22.0381, -221.489, 15.6752, 0.55 ) }
    dend_27 { pt3dadd( 23.4006, -230.196, 16.718, 0.55 ) }
    dend_27 { pt3dadd( 24.0402, -233.565, 16.9957, 0.55 ) }
    dend_27 { pt3dadd( 24.6629, -237.314, 17.2806, 0.55 ) }
    dend_27 { pt3dadd( 25.5517, -242.941, 17.6798, 0.55 ) }
    dend_27 { pt3dadd( 26.0344, -247.264, 18.0306, 0.55 ) }
    dend_27 { pt3dadd( 26.2553, -251.365, 18.3139, 0.55 ) }
    dend_27 { pt3dadd( 26.2919, -255.271, 18.587, 0.55 ) }
    dend_27 { pt3dadd( 26.2629, -259.083, 18.9098, 0.55 ) }
    dend_27 { pt3dadd( 26.2585, -261.796, 19.1122, 0.55 ) }
    dend_27 { pt3dadd( 26.2778, -266.231, 19.2894, 0.55 ) }
    dend_27 { pt3dadd( 26.2237, -271.544, 19.0961, 0.55 ) }
    dend_27 { pt3dadd( 26.2634, -274.121, 18.8059, 0.55 ) }
    dend_27 { pt3dadd( 26.3223, -276.38, 18.3777, 0.55 ) }
    dend_27 { pt3dadd( 26.6299, -280.639, 17.3114, 0.55 ) }
    dend_27 { pt3dadd( 26.7967, -283.337, 16.5594, 0.55 ) }
    dend_27 { pt3dadd( 27.041, -286.666, 15.7598, 0.55 ) }
    dend_27 { pt3dadd( 27.1238, -289.008, 15.3426, 0.55 ) }
    dend_27 { pt3dadd( 27.2295, -295.101, 14.5006, 0.55 ) }
    dend_27 { pt3dadd( 27.1967, -299.669, 14.2021, 0.55 ) }
    dend_27 { pt3dadd( 27.0291, -306.753, 14.3262, 0.55 ) }
    dend_27 { pt3dadd( 27.0219, -311.337, 14.8397, 0.55 ) }
    dend_27 { pt3dadd( 26.9776, -316.154, 15.5364, 0.28 ) }
    dend_27 { pt3dadd( 26.9119, -318.09, 15.8968, 0.28 ) }
    dend_27 { pt3dadd( 26.7313, -322.803, 17.2002, 0.28 ) }
    dend_27 { pt3dadd( 26.525, -327.163, 18.7505, 0.28 ) }
    dend_27 { pt3dadd( 26.7835, -332.954, 21.3898, 0.28 ) }
    dend_27 { pt3dadd( 29.0488, -345.929, 24.0032, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 13.4491, -122.093, 4.95701, 0.55 ) }
    dend_26 { pt3dadd( 14.0726, -122.486, 5.76757, 0.55 ) }
    dend_26 { pt3dadd( 15.2543, -123.473, 7.53063, 0.55 ) }
    dend_26 { pt3dadd( 16.2243, -124.434, 9.09976, 0.28 ) }
    dend_26 { pt3dadd( 17.2264, -125.523, 10.8205, 0.55 ) }
    dend_26 { pt3dadd( 17.7251, -126.22, 11.9672, 0.28 ) }
    dend_26 { pt3dadd( 18.4621, -127.475, 14.0831, 0.55 ) }
    dend_26 { pt3dadd( 18.6019, -128.133, 15.1259, 0.28 ) }
    dend_26 { pt3dadd( 18.6121, -128.373, 15.5415, 0.28 ) }
    dend_26 { pt3dadd( 18.6252, -128.723, 16.2686, 0.55 ) }
    dend_26 { pt3dadd( 18.8104, -129.888, 19.0057, 0.28 ) }
    dend_26 { pt3dadd( 18.9193, -130.346, 20.1493, 0.55 ) }
    dend_26 { pt3dadd( 19.5061, -131.675, 23.4038, 0.28 ) }
    dend_26 { pt3dadd( 19.913, -132.335, 25.1044, 0.28 ) }
    dend_26 { pt3dadd( 20.5086, -133.176, 27.15, 0.55 ) }
    dend_26 { pt3dadd( 21.5873, -134.468, 30.0304, 0.28 ) }
    dend_26 { pt3dadd( 21.7648, -134.638, 30.3933, 0.55 ) }
    dend_26 { pt3dadd( 22.7343, -135.466, 32.0948, 0.28 ) }
    dend_26 { pt3dadd( 22.836, -135.542, 32.2363, 0.55 ) }
    dend_26 { pt3dadd( 23.6994, -136.42, 33.5056, 0.28 ) }
    dend_26 { pt3dadd( 24.0782, -136.895, 34.1365, 0.55 ) }
    dend_26 { pt3dadd( 27.1574, -140.44, 39.3831, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -11.146, -142.317, 79.179, 0.55 ) }
    dend_22 { pt3dadd( -12.1093, -147.044, 89.9198, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.146, -142.317, 79.179, 0.55 ) }
    dend_21 { pt3dadd( -16.9304, -152.014, 85.1474, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 5
    dend_2 nseg = 5
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 11
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 11
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 7
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_18 nseg = 3
    dend_16 nseg = 11
    dend_15 nseg = 11
    dend_8 nseg = 3
    dend_20 nseg = 3
    dend_27 nseg = 11
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_BP_3085e9694e_0_0


