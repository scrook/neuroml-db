// Cell: cACint209_L1_SLAC_23649a0c82_0_0
/*
{
  "id" : "cACint209_L1_SLAC_23649a0c82_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.86979, -3.62109, 0.0, 3.40802", "-3.4648, -3.20389, 0.0, 6.39426", "-3.05982, -2.7867, 0.0, 8.90883", "-2.65483, -2.36951, 0.0, 9.83284", "-2.24985, -1.95232, 0.0, 10.3489", "-1.84486, -1.53513, 0.0, 10.7154", "-1.43988, -1.11794, 0.0, 10.9388", "-1.03489, -0.700747, 0.0, 11.0039", "-0.629907, -0.283556, 0.0, 11.0691", "-0.224923, 0.133635, 0.0, 10.9504", "0.180062, 0.550827, 0.0, 10.7888", "0.585047, 0.968018, 0.0, 10.5771", "0.990032, 1.38521, 0.0, 10.3653", "1.39502, 1.8024, 0.0, 9.98268", "1.8, 2.21959, 0.0, 9.53555", "2.20499, 2.63678, 0.0, 8.94537", "2.60997, 3.05397, 0.0, 8.30699", "3.01496, 3.47116, 0.0, 7.27769", "3.41994, 3.88836, 0.0, 6.11009", "3.82493, 4.30555, 0.0, 4.18013", "4.22991, 4.72274, 0.0, 2.41866" ]
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.93111, 4.9631, 8.39, 0.95", "4.18815, 5.37402, 8.64174, 0.95", "4.64617, 6.04873, 9.21776, 0.95", "5.05167, 6.66717, 9.82576, 0.73", "5.50094, 7.38035, 10.5341, 0.59", "5.91192, 8.03542, 11.1748, 1.1", "6.46594, 8.91847, 12.0384, 1.25", "7.31417, 10.1657, 13.3547, 1.62", "7.68273, 10.6766, 13.9381, 2.35", "7.94201, 11.0305, 14.3897, 2.35", "8.11963, 11.3012, 14.7487, 2.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000021234835014
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "0.311109, 6.4646, -3.6, 1.14", "-0.273593, 6.7494, -4.35197, 1.14", "-0.567577, 6.90632, -4.82908, 0.91", "-1.08878, 7.32746, -6.05055, 0.91", "-1.45366, 7.75569, -7.0556, 0.91", "-1.8658, 8.19547, -8.17686, 0.91", "-2.17775, 8.51857, -9.07696, 0.91", "-2.38621, 8.73344, -9.67435, 0.91", "-2.98091, 9.41507, -11.518, 0.91", "-3.57558, 10.1401, -13.4355, 0.68", "-4.11905, 10.7959, -15.177, 0.68", "-4.67637, 11.3878, -16.7239, 0.68", "-5.23866, 11.8649, -18.0036, 0.68", "-5.57767, 12.114, -18.7404, 0.68", "-5.81407, 12.2621, -19.2328, 0.68", "-6.32997, 12.5205, -20.2381, 0.68", "-7.25412, 12.9779, -21.8482, 0.68", "-7.89837, 13.1801, -22.7215, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000021234835014
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "5.09111, 3.9446, -1.73, 2.96", "5.09111, 3.9446, -1.73, 2.96", "6.10752, 4.49382, -2.67695, 2.51", "7.4896, 5.24063, -3.96458, 2.05", "8.92169, 6.01446, -5.2988, 1.37", "10.0776, 6.63904, -6.37569, 1.37", "11.2854, 7.29164, -7.50089, 1.37", "12.1941, 7.77747, -8.33879, 1.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000021234835014
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.23111, -3.7309, 4.27, 5.47", "2.23111, -3.7309, 4.27, 5.47", "3.37111, -5.8414, 4.08, 3.87" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000021234835014
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.55889, 0.658095, -1.0, 1.59", "-6.27776, 0.711185, -1.82655, 1.37", "-7.17346, 0.777334, -2.85642, 1.37", "-8.14838, 0.849334, -3.97738, 1.14", "-8.42159, 0.869512, -4.29152, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000021234835014
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.22991, 4.72274, 0.0, 0.68", "14.6779, 15.4856, 0.0, 0.68", "25.1259, 26.2485, 0.0, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-7.89837, 13.1801, -22.7215, 0.68", "-7.73325, 14.0033, -24.4607, 0.68", "-7.52354, 15.0487, -26.6697, 0.91", "-7.33246, 16.0013, -28.6824, 0.91", "-7.11362, 17.0923, -30.9875, 0.91" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-7.89837, 13.1801, -22.7215, 0.23", "-8.92408, 11.5388, -23.3195, 0.23", "-10.1488, 9.26445, -24.2327, 0.23", "-10.8265, 7.82182, -24.8226, 0.23", "-11.1819, 7.04291, -25.1564, 0.46", "-11.6083, 6.23984, -25.4122, 0.23", "-12.6947, 4.65604, -25.7903, 0.23", "-13.3314, 3.95702, -25.8949, 0.46", "-14.8368, 2.73669, -25.9439, 0.23", "-16.0254, 1.87499, -25.9414, 0.23", "-19.5646, -0.384186, -25.8211, 0.23", "-22.6831, -2.10214, -25.5891, 0.23", "-25.0275, -3.18366, -25.3024, 0.23", "-26.5286, -3.78973, -25.0624, 0.46" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "12.1941, 7.77747, -8.33879, 0.91", "13.3567, 8.35079, -8.70113, 0.91", "15.2391, 9.27901, -9.28777, 0.68", "17.401, 10.3451, -9.96154, 0.68", "19.2471, 11.2554, -10.5369, 0.68", "21.0087, 12.1241, -11.0859, 1.14", "21.8548, 12.5413, -11.3496, 1.14" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "12.1941, 7.77747, -8.33879, 0.91", "12.9987, 8.35628, -9.35249, 0.91", "13.7703, 8.94927, -10.3918, 0.91", "14.1291, 9.23399, -10.8683, 0.91", "14.5502, 9.603, -11.4591, 0.91", "15.427, 10.3713, -12.6894, 0.91", "16.3288, 11.1617, -13.9549, 0.91", "17.2644, 11.8991, -15.1176, 0.91", "17.837, 12.3601, -15.8322, 0.68", "18.3256, 12.7465, -16.4741, 0.91" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.37111, -5.8414, 4.08, 1.82", "3.70104, -7.45454, 3.2251, 1.82", "3.82894, -9.29793, 2.19439, 1.59", "3.84828, -10.3709, 1.54259, 1.37", "3.8727, -11.5153, 0.776807, 0.91", "3.9343, -13.131, -0.428097, 0.91", "4.03602, -14.831, -1.73906, 0.91", "4.16837, -16.598, -3.24745, 0.91", "4.37479, -18.2004, -4.73734, 0.91", "4.57937, -19.3517, -5.94045, 0.91", "4.85212, -20.391, -7.16175, 0.91", "5.38788, -21.7101, -8.87638, 0.91", "5.92246, -22.6891, -10.2364, 0.68", "6.65432, -23.8254, -11.8951, 0.91", "7.17991, -24.6001, -13.0451, 0.91", "7.74284, -25.4513, -14.2892, 0.68", "8.18213, -26.1122, -15.2694, 0.68", "8.81358, -26.9794, -16.7989, 0.91" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "3.37111, -5.8414, 4.08, 3.64", "3.73949, -6.48105, 5.55326, 3.64", "4.23095, -7.33439, 7.5187, 3.64", "4.68714, -8.1265, 9.34312, 3.64", "5.18596, -8.99263, 11.338, 3.42", "5.58083, -9.67826, 12.9172, 3.42", "5.91015, -10.2501, 14.2342, 3.42" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.42159, 0.869512, -4.29152, 0.68", "-8.30417, 0.915022, -4.85785, 0.68", "-7.84718, 1.33616, -6.43509, 0.68", "-7.19795, 1.96356, -8.09385, 0.68", "-6.55905, 2.54166, -9.4957, 0.68", "-6.00283, 3.05125, -10.5877, 0.68", "-5.33632, 3.61758, -11.7774, 0.46", "-4.41121, 4.34267, -13.105, 0.46", "-3.47817, 5.05038, -14.2022, 0.46", "-2.19293, 5.9944, -15.5827, 0.46", "-1.061, 6.76991, -16.7333, 0.46", "-0.0598222, 7.40904, -17.7375, 0.46", "1.12438, 8.09734, -18.9427, 0.46", "2.73013, 8.94543, -20.5129, 0.23", "3.73462, 9.49297, -21.4606, 0.23", "4.84228, 10.0928, -22.4246, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.42159, 0.869512, -4.29152, 1.14", "-9.20936, 0.725355, -4.70344, 1.14", "-9.64425, 0.667456, -4.89403, 1.14", "-10.6887, 0.579959, -5.29888, 1.14", "-11.8846, 0.479782, -5.76241, 1.14", "-13.9259, 0.308787, -6.55362, 1.14", "-14.9355, 0.224216, -6.94494, 1.14", "-17.1004, 0.0497681, -7.69865, 0.68", "-18.6634, -0.0400339, -8.23216, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "25.1259, 26.2485, 0.0, 0.261871", "35.5738, 37.0114, 0.0, 0.261871", "46.0218, 47.7743, 0.0, 0.261871" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-7.11362, 17.0923, -30.9875, 0.46", "-8.15648, 17.9793, -32.727, 0.46", "-9.20861, 18.7161, -34.4055, 0.46", "-9.93565, 19.2041, -35.5539, 0.46", "-10.4117, 19.5607, -36.411, 0.46", "-11.2451, 20.2452, -38.0541, 0.68", "-12.0131, 20.9966, -39.8297, 0.68", "-12.8431, 21.9204, -42.121, 0.68", "-13.4025, 22.6121, -43.9164, 0.68", "-13.9771, 23.4206, -46.2205, 0.68", "-14.3167, 24.0883, -48.2508, 0.68", "-14.5352, 24.856, -50.826, 0.68", "-14.635, 25.5334, -53.2737, 0.68", "-14.6132, 26.122, -55.5496, 0.68", "-14.5777, 26.5012, -57.2859, 0.68", "-14.552, 26.8064, -59.1936, 0.68", "-14.5068, 27.0551, -61.5924, 0.68", "-14.5016, 27.1136, -62.617, 0.68", "-14.5205, 27.2383, -67.2795, 0.46", "-14.6146, 27.3015, -72.6091, 0.46", "-14.7199, 27.3155, -76.2602, 0.46", "-14.8507, 27.2775, -79.1934, 0.46", "-15.0406, 27.1738, -82.8762, 0.46", "-15.2066, 27.0242, -86.2127, 0.46", "-15.3953, 26.7126, -89.5013, 0.46" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-7.11362, 17.0923, -30.9875, 0.23", "-6.46734, 17.8775, -31.7536, 0.23", "-5.50749, 19.0001, -32.9081, 0.46", "-4.64202, 20.0491, -33.9186, 0.46", "-3.97924, 20.8906, -34.7223, 0.46", "-3.33209, 21.7377, -35.5308, 0.46", "-2.87024, 22.4036, -36.1666, 0.46", "-2.4148, 23.0688, -36.8584, 0.46", "-1.89404, 23.8516, -37.6987, 0.68", "-1.20071, 24.8589, -38.7969, 0.46", "-0.341821, 26.0254, -40.088, 0.46", "0.667107, 27.2203, -41.4424, 0.23", "1.71846, 28.3171, -42.7777, 0.46", "2.87052, 29.3478, -44.0866, 0.46", "3.65305, 29.9038, -44.858, 0.46", "5.33448, 30.8808, -46.2368, 0.23", "7.54623, 31.9082, -47.7246, 0.23", "9.03763, 32.4894, -48.5458, 0.23", "10.465, 32.95, -49.1892, 0.46", "12.4778, 33.3977, -49.9394, 0.46", "13.8675, 33.5977, -50.4234, 0.46", "15.3598, 33.7093, -50.9614, 0.46", "16.186, 33.7649, -51.2986, 0.46", "18.4846, 33.9347, -52.549, 0.46", "20.4396, 34.1048, -53.9893, 0.46", "22.5126, 34.2931, -55.9772, 0.23", "23.9883, 34.3648, -57.635, 0.23", "25.4023, 34.3297, -59.4469, 0.46", "27.5278, 34.02, -62.4508, 0.46", "29.4604, 33.4714, -65.5628, 0.46", "30.9877, 32.948, -68.2019, 0.46", "32.0368, 32.4963, -70.0882, 0.23", "33.3769, 31.7538, -72.5369, 0.46", "34.9179, 30.6359, -75.2855, 0.46", "37.0182, 28.7171, -78.8601, 0.46" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "21.8548, 12.5413, -11.3496, 0.68", "23.4132, 12.8632, -12.1895, 0.68", "24.4889, 13.0872, -12.8425, 0.68", "26.0517, 13.393, -13.8955, 0.68", "27.9254, 13.7661, -15.2523, 0.68", "29.2847, 14.0847, -16.2957, 0.68", "30.7394, 14.4923, -17.526, 0.68", "32.0586, 14.9124, -18.7623, 0.68", "33.4156, 15.4068, -20.2207, 0.68", "34.9529, 15.9296, -22.1175, 0.46", "36.075, 16.2481, -23.6201, 0.46", "37.291, 16.4923, -25.2871, 0.46", "38.1083, 16.5551, -26.4103, 0.46", "39.2579, 16.4567, -28.1716, 0.46", "40.2683, 16.2198, -29.8216, 0.23", "41.3522, 15.7981, -31.7339, 0.23", "41.9985, 15.5012, -32.9486, 0.68", "43.3345, 14.9145, -35.551, 0.68", "45.158, 14.1933, -39.1987, 0.68", "45.6946, 14.0305, -40.3063, 0.91", "47.1123, 13.8171, -43.3842, 0.46", "48.3537, 13.7966, -46.2796, 0.46", "49.7459, 13.9042, -49.3399, 0.23", "50.1664, 13.9331, -50.1481, 0.68", "51.9524, 14.0381, -53.2395, 0.23", "53.8502, 14.1102, -56.2249, 0.46", "56.1573, 14.1365, -59.4886, 0.46", "59.0246, 14.0605, -63.0199, 0.23", "62.2272, 13.8719, -66.5602, 0.23", "65.697, 13.598, -70.2489, 0.23", "67.5065, 13.3931, -71.9837, 0.23", "69.3642, 13.1069, -73.543, 0.23", "72.1177, 12.6353, -75.5239, 0.23", "72.7401, 12.5365, -75.9288, 0.46" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "21.8548, 12.5413, -11.3496, 0.91", "22.2449, 13.1227, -11.0685, 0.91", "23.2814, 14.6673, -10.3219, 0.91" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "18.3256, 12.7465, -16.4741, 0.46", "19.4662, 12.9527, -17.4327, 0.46", "20.4792, 13.1901, -18.3581, 0.46", "21.8542, 13.5683, -19.7965, 0.46", "23.3496, 13.9798, -21.3522, 0.46", "24.5907, 14.3028, -22.6576, 0.68", "25.8552, 14.6239, -24.0222, 0.68", "27.0213, 14.9546, -25.3326, 0.46", "28.2512, 15.2856, -26.7393, 0.46", "29.2822, 15.4969, -27.9482, 0.91", "30.699, 15.6993, -29.6725, 0.68", "31.857, 15.8005, -31.0741, 0.68", "32.7606, 15.8424, -32.1435, 0.46", "33.2576, 15.8399, -32.7306, 0.68", "35.2128, 15.7651, -35.0112, 0.46", "36.3204, 15.6888, -36.5335, 0.68" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "18.3256, 12.7465, -16.4741, 0.91", "17.6455, 14.5525, -16.7941, 0.91" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "8.81358, -26.9794, -16.7989, 0.46", "9.65309, -28.4267, -18.1896, 0.46", "10.4071, -29.6607, -19.5139, 0.46", "10.799, -30.2656, -20.1435, 0.68", "11.4236, -31.1484, -21.119, 0.68", "12.3143, -32.2685, -22.4315, 0.68", "13.6009, -33.7081, -24.2437, 0.46", "14.3327, -34.5435, -25.3358, 0.46", "15.7164, -36.0277, -27.3303, 0.46", "16.9332, -37.1972, -28.9753, 0.68", "18.1614, -38.2054, -30.5058, 0.46", "19.6297, -39.2782, -32.2386, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.81358, -26.9794, -16.7989, 0.46", "7.51512, -28.6558, -17.4108, 0.46", "6.22348, -30.1715, -17.9935, 0.46", "4.98236, -31.4647, -18.4665, 0.46", "4.17312, -32.2487, -18.7721, 0.46", "2.95882, -33.3672, -19.2189, 0.46", "1.43991, -34.6678, -19.7938, 0.46", "0.588356, -35.2756, -20.1132, 0.46", "-1.349, -36.3776, -20.9323, 0.46", "-2.49811, -36.9136, -21.5503, 0.46", "-3.36502, -37.2343, -22.1305, 0.68", "-5.02711, -37.7422, -23.5609, 0.23", "-6.46928, -38.1181, -25.1442, 0.46", "-7.61911, -38.3797, -26.5504, 0.46", "-8.77611, -38.5787, -28.1929, 0.46", "-9.91125, -38.7277, -29.9727, 0.46", "-11.0626, -38.8388, -32.0707, 0.46", "-11.6219, -38.8898, -33.3632, 0.46" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.91015, -10.2501, 14.2342, 0.91", "7.29836, -10.8815, 14.002, 0.91", "9.19425, -11.8564, 13.7152, 0.46", "10.8085, -12.7045, 13.493, 0.68", "12.721, -13.6945, 13.2578, 0.68", "14.3785, -14.5643, 13.0684, 0.68", "15.3237, -15.0912, 12.982, 0.68", "16.8065, -15.968, 12.9059, 0.68", "17.597, -16.4617, 12.8833, 0.68", "18.7762, -17.2355, 12.8814, 0.46", "20.4275, -18.3867, 12.9274, 0.68", "22.3652, -19.828, 13.0836, 0.46", "23.7384, -20.8636, 13.2526, 0.68", "25.0285, -21.844, 13.5185, 0.68", "25.7776, -22.4427, 13.773, 0.68", "27.1628, -23.6201, 14.5585, 0.46", "28.1705, -24.4825, 15.4074, 0.46", "29.4538, -25.5759, 16.8194, 0.68", "30.3904, -26.4105, 18.1107, 0.68", "31.3881, -27.2945, 19.6942, 0.68", "32.4906, -28.2324, 21.6586, 0.68", "32.9381, -28.6084, 22.6117, 0.68", "33.1232, -28.7804, 23.1049, 0.46", "33.3759, -29.0489, 24.0369, 0.46" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.91015, -10.2501, 14.2342, 2.05", "6.05465, -11.7469, 15.5239, 2.05", "6.32372, -13.47, 17.0762, 2.05", "6.51582, -14.7001, 18.1845, 2.05", "6.72992, -16.0712, 19.4197, 2.05", "6.92651, -17.3301, 20.5539, 1.59", "7.12183, -18.5809, 21.6807, 1.59", "7.29428, -19.7516, 22.7544, 1.59" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.84228, 10.0928, -22.4246, 0.46", "5.64887, 10.2612, -23.2656, 0.46", "6.72649, 10.4862, -24.3893, 0.46", "8.80877, 10.9209, -26.5605, 0.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "4.84228, 10.0928, -22.4246, 0.46", "4.32713, 10.5619, -23.8737, 0.46", "3.75489, 11.3094, -25.7085, 0.46", "3.24067, 12.0989, -27.4464, 0.46", "2.6747, 12.9549, -29.3681, 0.46", "2.10559, 13.7517, -31.2885, 0.23", "1.34997, 14.6709, -33.7309, 0.23", "0.936814, 15.1274, -35.041, 0.46", "0.39918, 15.6246, -36.6109, 0.46", "-0.440635, 16.2529, -38.8898, 0.46", "-1.19766, 16.7327, -40.8535, 0.46", "-2.10651, 17.1814, -43.0456, 0.46", "-3.03465, 17.5875, -45.0244, 0.46", "-3.97835, 18.0065, -47.014, 0.23", "-4.76386, 18.4098, -48.6253, 0.46", "-5.66015, 19.0284, -50.6034, 0.46", "-6.27439, 19.6021, -52.291, 0.46", "-7.21855, 20.6159, -55.0776, 0.23", "-7.81498, 21.3447, -56.9985, 0.23", "-8.09194, 21.7282, -58.0109, 0.46", "-8.98799, 23.0911, -61.629, 0.23", "-10.0654, 24.9665, -66.6639, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-18.6634, -0.0400339, -8.23216, 0.68", "-20.0993, 0.164622, -8.55156, 0.68", "-22.1078, 0.519779, -9.05319, 0.68", "-22.9796, 0.696821, -9.26777, 0.68", "-23.9391, 0.887737, -9.49712, 0.68", "-25.8107, 1.2599, -9.97115, 0.68", "-28.3888, 1.79832, -10.6708, 0.46", "-30.2276, 2.22936, -11.2753, 0.46", "-31.9894, 2.70934, -11.8739, 0.68", "-32.6654, 2.89601, -12.115, 0.46", "-34.0247, 3.26189, -12.6258, 0.46", "-35.1468, 3.51981, -13.1057, 0.91", "-37.0071, 3.9647, -14.0164, 0.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-18.6634, -0.0400339, -8.23216, 0.46", "-19.9488, -1.21276, -9.53339, 0.46", "-20.5455, -1.66293, -10.0821, 0.46", "-21.1647, -2.09495, -10.6278, 0.46", "-22.3301, -2.88665, -11.5884, 0.46", "-23.3625, -3.54253, -12.3455, 0.46", "-24.1811, -4.04848, -12.9155, 0.46", "-25.2266, -4.62865, -13.5227, 0.46", "-26.0935, -5.10148, -14.0153, 0.46", "-26.7791, -5.51748, -14.4156, 0.46", "-27.8493, -6.20427, -15.039, 0.23", "-29.2529, -7.16205, -15.8324, 0.23", "-29.8053, -7.56463, -16.1475, 0.46", "-30.8659, -8.39462, -16.7642, 0.68", "-31.9418, -9.25823, -17.4143, 0.46", "-32.8185, -10.001, -18.0014, 0.46", "-33.8753, -11.0138, -18.7962, 0.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "23.2814, 14.6673, -10.3219, 0.46", "23.8901, 15.6646, -10.8864, 0.46", "24.3213, 16.3712, -11.2863, 0.46", "25.0007, 17.4845, -11.9165, 0.68", "26.1437, 19.3574, -12.9765, 0.46", "26.7538, 20.3571, -13.5424, 0.68", "27.5222, 21.6163, -14.2551, 0.68" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "23.2814, 14.6673, -10.3219, 0.23", "24.8426, 15.569, -9.64899, 0.23", "25.8991, 16.1863, -9.23158, 0.68", "27.5031, 17.1605, -8.66238, 0.23", "28.8167, 17.9532, -8.24409, 0.23", "29.9141, 18.6251, -7.92512, 0.46", "31.472, 19.5671, -7.5265, 0.23", "33.9881, 21.0764, -6.96706, 0.23", "35.5111, 21.9986, -6.68243, 0.23", "36.9732, 22.8813, -6.45747, 0.46", "38.0552, 23.5292, -6.3287, 0.46", "40.1606, 24.807, -6.12454, 0.23", "41.7699, 25.8172, -5.97418, 0.46", "43.7811, 27.0114, -5.83742, 0.23" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "36.3204, 15.6888, -36.5335, 0.46", "37.5988, 14.5981, -38.5086, 0.46", "38.9754, 13.5827, -40.386, 0.46", "39.8084, 13.0964, -41.3812, 0.46", "40.8121, 12.5764, -42.5543, 0.46", "42.056, 11.9773, -43.9727, 0.23", "43.5536, 11.328, -45.6253, 0.46", "45.1866, 10.717, -47.2895, 0.46", "47.6828, 9.97645, -49.62, 0.23", "49.1879, 9.61308, -50.9494, 0.23", "49.5299, 9.54642, -51.2519, 0.23", "51.2298, 9.29192, -52.7948, 0.46", "52.876, 9.0262, -54.2835, 0.23", "53.7463, 8.88194, -55.0634, 0.23", "54.6652, 8.71111, -55.9369, 0.46", "56.2657, 8.37656, -57.5214, 0.23", "58.6106, 7.85984, -59.879, 0.23", "60.3742, 7.48098, -61.7179, 0.23", "61.187, 7.33623, -62.6011, 0.46", "62.8577, 7.07372, -64.4707, 0.23", "64.2252, 6.95361, -66.049, 0.23", "64.9704, 6.94333, -66.9641, 0.46", "66.7223, 7.08271, -69.3153, 0.23", "68.5333, 7.34691, -71.8022, 0.23", "68.9258, 7.41757, -72.3592, 0.46", "70.479, 7.77401, -74.5753, 0.23", "72.2905, 8.28113, -77.3742, 0.23", "73.6233, 8.66125, -79.6427, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "36.3204, 15.6888, -36.5335, 0.46", "38.1214, 15.6707, -36.7212, 0.46", "41.4492, 15.6375, -37.0681, 0.23", "42.9407, 15.6226, -37.2235, 0.23", "44.5579, 15.6064, -37.3921, 0.68", "45.4684, 15.5973, -37.487, 0.23", "46.8611, 15.5834, -37.6322, 0.46" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "17.6455, 14.5525, -16.7941, 0.46", "18.396, 15.0229, -18.8682, 0.46", "18.9799, 15.5077, -20.6011, 0.46", "19.5982, 16.0851, -22.6495, 0.46", "20.166, 16.7155, -24.9206, 0.68", "20.6892, 17.3643, -27.3211, 0.46", "20.8545, 17.5742, -28.1379, 0.68", "21.3771, 18.2977, -31.0517, 0.23", "21.92, 19.0013, -34.2831, 0.46", "22.3457, 19.4646, -37.0918, 0.46", "22.7523, 19.8124, -40.1567, 0.46", "22.9615, 19.8916, -42.1749, 0.46", "23.1336, 19.8062, -44.9261, 0.46", "23.1385, 19.6149, -46.5517, 0.68", "22.9669, 19.0639, -49.486, 0.68", "22.8585, 18.8148, -50.4496, 0.46", "22.3771, 17.9056, -53.5001, 0.46", "21.7111, 16.8621, -56.7547, 0.23", "21.0814, 16.0335, -59.1983, 0.23", "20.3338, 15.1835, -61.7275, 0.23", "19.7062, 14.5133, -63.7116, 0.23" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "17.6455, 14.5525, -16.7941, 0.23", "18.1901, 16.9343, -17.625, 0.23", "18.4835, 18.419, -18.2695, 0.23", "18.7257, 19.8138, -18.9284, 0.46", "19.0061, 21.883, -19.894, 0.46", "19.1854, 23.2564, -20.5593, 0.46", "19.4049, 24.745, -21.3137, 0.68", "19.6332, 26.6417, -22.4117, 0.46", "19.7362, 27.7585, -23.1308, 0.46", "19.8806, 29.0265, -24.0262, 0.68", "20.1033, 30.5005, -25.1457, 0.68", "20.4032, 32.0785, -26.5047, 0.46", "20.7964, 33.5109, -27.9293, 0.46", "21.4095, 35.0058, -29.6043, 0.46", "22.2258, 36.4072, -31.2987, 0.46", "23.1182, 37.774, -33.0588, 0.46", "24.2509, 39.356, -35.1884, 0.46", "25.7582, 41.1838, -37.8045, 0.23", "26.882, 42.2888, -39.4866, 0.23", "28.3559, 43.4764, -41.4162, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "19.6297, -39.2782, -32.2386, 0.46", "20.2045, -40.1696, -34.1124, 0.46", "20.7966, -40.9945, -35.8603, 0.46", "21.2652, -41.5758, -37.1035, 0.46", "21.8062, -42.1765, -38.4674, 0.46", "22.8724, -43.1708, -40.841, 0.46", "23.8911, -44.1209, -43.1093, 0.46", "24.4974, -44.6071, -44.3416, 0.46", "24.8018, -44.8308, -44.9306, 0.46", "25.7563, -45.4991, -46.8715, 0.46", "26.5341, -45.9936, -48.2762, 0.68" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "19.6297, -39.2782, -32.2386, 0.46", "20.3834, -37.999, -33.5863, 0.46", "20.8794, -37.0604, -34.5885, 0.46", "21.4517, -35.8751, -35.8006, 0.46", "22.1761, -34.3634, -37.38, 0.46", "22.7906, -33.0461, -38.7889, 0.46", "23.4511, -31.5982, -40.3737, 0.46", "24.0826, -30.2108, -41.9374, 0.46", "24.4079, -29.4349, -42.8335, 0.68", "24.9802, -27.9671, -44.6292, 0.46", "25.5704, -26.5288, -46.5427, 0.46", "26.0809, -25.3981, -48.2073, 0.68", "26.5557, -24.3908, -49.8473, 0.46", "27.1245, -23.1953, -52.0073, 0.68", "27.514, -22.2712, -53.8316, 0.68", "27.7708, -21.4597, -55.4885, 0.68", "28.0989, -20.2923, -57.9122, 0.68", "28.2255, -19.6561, -59.2345, 0.68", "28.3246, -18.8318, -60.865, 0.68", "28.4051, -18.1824, -62.0728, 0.68", "28.5637, -17.3047, -63.5845, 1.14", "28.8704, -16.268, -65.2555, 0.46", "29.8083, -14.6519, -67.8077, 0.46", "30.3244, -14.2739, -68.427, 0.46", "31.8939, -13.3901, -69.9026, 0.46", "32.958, -12.9389, -70.7052, 0.46", "34.3768, -12.5343, -71.5417, 0.46", "36.3452, -12.204, -72.4166, 0.46", "40.9212, -11.8147, -73.7572, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "33.3759, -29.0489, 24.0369, 0.23", "34.6474, -30.1414, 24.7923, 0.23", "35.7366, -31.1248, 25.4163, 0.23", "36.6403, -32.0425, 25.9609, 0.68", "37.8012, -33.3588, 26.7262, 0.68", "39.1339, -35.0346, 27.6648, 0.46", "40.0692, -36.3223, 28.3889, 0.46", "40.4818, -37.0308, 28.7922, 0.46", "41.1415, -38.3942, 29.5258, 0.46", "41.5308, -39.3359, 30.0079, 0.68", "42.0967, -40.8194, 30.74, 0.46", "42.7341, -42.5847, 31.6136, 0.68", "43.3578, -44.3595, 32.4853, 0.46", "43.936, -46.08, 33.2744, 0.46", "44.6101, -48.116, 34.0912, 0.23", "45.2699, -50.1928, 34.7839, 0.68", "45.7343, -51.6413, 35.1816, 0.68", "46.4533, -53.7746, 35.6318, 0.46", "47.2438, -56.0016, 36.0445, 0.46", "47.6967, -57.2859, 36.2701, 0.23", "48.4072, -59.292, 36.64, 0.23", "49.2502, -61.5892, 37.1496, 0.23", "49.7777, -62.9614, 37.5551, 0.68", "50.4719, -64.7706, 38.2239, 0.23", "50.9195, -65.9052, 38.7633, 0.46", "51.5746, -67.6247, 39.7039, 0.23", "52.3115, -69.6734, 40.9442, 0.23", "52.6829, -70.8427, 41.7384, 0.46", "53.1683, -72.431, 42.8541, 0.23", "53.6744, -74.074, 44.0136, 0.23", "54.0761, -75.3603, 44.9434, 0.46", "54.4608, -76.6791, 45.9152, 0.23", "54.9729, -78.573, 47.3975, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "33.3759, -29.0489, 24.0369, 0.23", "33.388, -29.7572, 25.0123, 0.23", "33.3386, -30.9136, 26.5185, 0.23", "33.1825, -32.3815, 28.2837, 0.23", "33.022, -33.8913, 30.0992, 0.23", "32.9613, -34.4633, 30.7872, 0.46", "32.8223, -35.7693, 32.3576, 0.23", "32.709, -37.1228, 33.9053, 0.23", "32.528, -38.6815, 35.5921, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "7.29428, -19.7516, 22.7544, 0.91", "7.34826, -21.1627, 22.5517, 0.91", "7.30022, -22.7646, 22.3312, 0.91", "7.24086, -24.2809, 22.1369, 0.91", "7.15447, -26.4874, 21.8542, 0.91", "7.1194, -27.3831, 21.7394, 0.91", "7.02282, -29.8497, 21.4234, 0.91", "6.89931, -31.4146, 21.261, 0.91", "6.75007, -32.6998, 21.1443, 0.91" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.29428, -19.7516, 22.7544, 1.82", "7.48896, -21.0514, 24.431, 1.82", "7.68576, -22.3653, 26.1259, 1.82", "7.83932, -23.3905, 27.4483, 1.82", "8.04568, -24.7682, 29.2256, 1.82", "8.18063, -25.6692, 30.3878, 1.82" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-37.0071, 3.9647, -14.0164, 0.23", "-38.9146, 4.35356, -14.9508, 0.23", "-40.5252, 4.63608, -15.7535, 0.68", "-42.4865, 4.85434, -16.7396, 0.46", "-44.134, 5.0043, -17.5605, 0.68", "-45.5836, 5.16402, -18.24, 0.68", "-46.9863, 5.35837, -18.8534, 0.46", "-48.5424, 5.60536, -19.4639, 0.46", "-50.3974, 5.95196, -20.1018, 0.46", "-52.3106, 6.41025, -20.6642, 0.46", "-54.5074, 7.05436, -21.2412, 0.23", "-56.0186, 7.55606, -21.5643, 0.23", "-57.1999, 8.03504, -21.7592, 0.23", "-58.2681, 8.53141, -21.8977, 0.68", "-59.4513, 9.16863, -22.0262, 0.23", "-60.4987, 9.72427, -22.1087, 0.23", "-62.1774, 10.5452, -22.2217, 0.23", "-63.6689, 11.2102, -22.3014, 0.23", "-65.8114, 12.0845, -22.3838, 0.68", "-67.6762, 12.8034, -22.4474, 0.23", "-69.9052, 13.6003, -22.5586, 0.23", "-71.4202, 14.1316, -22.651, 0.46", "-73.6444, 14.9106, -22.8443, 0.23", "-75.8652, 15.6414, -23.0927, 0.23", "-77.8018, 16.2619, -23.4033, 0.23", "-79.4231, 16.7729, -23.7544, 0.23", "-80.9738, 17.3372, -24.2232, 0.46", "-83.3747, 18.3483, -25.1557, 0.23", "-84.5274, 18.9047, -25.7329, 0.46", "-85.937, 19.6901, -26.5938, 0.23", "-86.646, 20.1355, -27.1024, 0.46", "-88.1237, 21.2097, -28.3576, 0.23", "-89.0435, 21.9622, -29.3367, 0.46", "-90.0154, 22.8829, -30.6836, 0.23", "-90.5819, 23.4867, -31.6766, 0.46", "-91.4839, 24.4775, -33.4297, 0.23", "-92.4281, 25.4545, -35.402, 0.46", "-93.588, 26.544, -37.9103, 0.46", "-94.955, 27.6327, -40.778, 0.46", "-96.7801, 28.8612, -44.5211, 0.46", "-97.7543, 29.3947, -46.4314, 0.46", "-98.7232, 29.8138, -48.2003, 0.46", "-99.5866, 30.0936, -49.6048, 0.46", "-100.818, 30.4299, -51.444, 0.46", "-101.984, 30.6936, -53.0469, 0.46", "-103.788, 31.0833, -55.4702, 0.23", "-104.933, 31.3888, -57.0489, 0.46", "-106.616, 31.9267, -59.4001, 0.23", "-107.829, 32.317, -61.0373, 0.23", "-108.812, 32.6238, -62.2803, 0.23", "-109.743, 32.8534, -63.2567, 0.23", "-111.386, 33.1319, -64.6219, 0.23", "-113.588, 33.3836, -66.0186, 0.23", "-115.406, 33.5008, -66.886, 0.23", "-117.804, 33.5646, -67.7754, 0.23", "-119.769, 33.5585, -68.3602, 0.46", "-121.125, 33.5246, -68.6982, 0.46", "-123.53, 33.4393, -69.1995, 0.46", "-125.345, 33.4015, -69.5284, 0.23", "-126.499, 33.3706, -69.7557, 0.46", "-127.95, 33.283, -70.0078, 0.23", "-129.653, 33.11, -70.3286, 0.23", "-131.0, 32.9327, -70.6199, 0.46", "-133.869, 32.4669, -71.2729, 0.23", "-138.17, 31.6708, -72.2317, 0.23", "-139.537, 31.3893, -72.5484, 0.46", "-143.165, 30.5211, -73.4298, 0.23", "-145.427, 29.914, -73.9941, 0.23", "-146.529, 29.5843, -74.2905, 0.46", "-148.616, 28.8812, -74.9109, 0.23", "-150.035, 28.3715, -75.3613, 0.23", "-150.981, 28.0403, -75.6525, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-37.0071, 3.9647, -14.0164, 0.23", "-38.7389, 4.67414, -13.0535, 0.23", "-40.4569, 5.41967, -12.0213, 0.23", "-41.8032, 6.0395, -11.1894, 0.46", "-42.9095, 6.60242, -10.4802, 0.23", "-44.2024, 7.34915, -9.60292, 0.46", "-46.0718, 8.53364, -8.29608, 0.23", "-47.3909, 9.53439, -7.36069, 0.23", "-48.583, 10.5446, -6.45502, 0.68", "-49.5862, 11.456, -5.63116, 0.68", "-50.8675, 12.5836, -4.64812, 0.46", "-52.2373, 13.7185, -3.7296, 0.46", "-53.632, 14.7817, -2.95253, 0.46", "-55.0279, 15.7322, -2.315, 0.46", "-56.3947, 16.5292, -1.81292, 0.46", "-59.0101, 17.8595, -1.01202, 0.23", "-60.4562, 18.5165, -0.646329, 0.46", "-62.4855, 19.373, -0.19372, 0.23", "-64.9745, 20.3482, 0.287358, 0.23", "-66.9478, 21.1093, 0.617652, 0.46", "-68.5929, 21.7309, 0.877928, 0.23", "-69.9596, 22.2753, 1.13355, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-33.8753, -11.0138, -18.7962, 0.23", "-35.5712, -12.3982, -18.1589, 0.23", "-36.9492, -13.6229, -17.5678, 0.23", "-38.2785, -14.8145, -17.0025, 0.23", "-39.4773, -15.8779, -16.5375, 0.46", "-40.8545, -17.1024, -15.9772, 0.23", "-42.654, -18.694, -15.2585, 0.23", "-44.133, -20.0323, -14.6803, 0.23", "-45.4659, -21.2348, -14.2044, 0.23", "-47.2859, -22.915, -13.57, 0.46", "-48.9175, -24.4466, -13.0169, 0.23", "-50.3433, -25.797, -12.5743, 0.23", "-51.4921, -26.859, -12.2764, 0.91", "-52.7564, -27.9967, -11.9607, 0.23", "-54.0639, -29.2508, -11.6059, 0.68" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-33.8753, -11.0138, -18.7962, 0.23", "-35.5401, -11.2466, -20.6988, 0.23", "-36.6367, -11.4895, -22.0583, 0.23", "-37.2532, -11.6371, -22.8466, 0.46", "-38.4626, -11.989, -24.4505, 0.23", "-39.1123, -12.2238, -25.3133, 0.23", "-40.0922, -12.6603, -26.6281, 0.46", "-41.4336, -13.4541, -28.3444, 0.23", "-42.4166, -14.2118, -29.623, 0.23", "-43.5563, -15.2013, -31.0452, 0.23", "-44.627, -16.237, -32.3121, 0.23", "-45.2649, -16.9286, -33.0657, 0.23", "-46.2822, -18.1504, -34.2747, 0.46", "-47.1055, -19.329, -35.3365, 0.46", "-47.5096, -20.0026, -35.9174, 0.46", "-48.7053, -22.1138, -37.7146, 0.23", "-49.2188, -23.0435, -38.5217, 0.68", "-49.8672, -24.2794, -39.6387, 0.46", "-50.7457, -26.0338, -41.3172, 0.23", "-51.2189, -26.9512, -42.2447, 0.23", "-51.5712, -27.6538, -43.0152, 0.46", "-52.0859, -28.7506, -44.2469, 0.46", "-52.7085, -30.1522, -45.8894, 0.46", "-53.3796, -31.8617, -48.0261, 0.46", "-53.7341, -32.8176, -49.37, 0.46", "-54.0476, -33.7279, -50.8563, 0.46", "-54.2872, -34.4484, -52.2334, 0.46", "-54.5434, -35.1205, -53.8731, 0.46", "-54.8233, -35.6384, -55.9157, 0.46", "-55.0211, -35.992, -57.6981, 0.46", "-55.3031, -36.335, -60.0848, 0.46", "-55.5168, -36.4122, -61.5696, 0.46", "-55.8629, -36.2772, -63.5798, 0.23", "-56.3675, -35.7357, -66.2378, 0.23" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "27.5222, 21.6163, -14.2551, 0.46", "27.6517, 22.9457, -14.4042, 0.46", "27.7596, 24.2229, -14.633, 0.46", "27.9107, 25.9958, -14.9782, 0.46", "28.0253, 27.1726, -15.2087, 0.46", "28.2349, 29.0099, -15.6284, 0.68", "28.499, 30.9987, -16.1636, 0.23", "28.8469, 33.3598, -17.031, 0.23", "29.0211, 34.4619, -17.501, 0.46", "29.2231, 35.6124, -18.0443, 0.23", "29.5118, 37.1154, -18.8163, 0.23", "29.7855, 38.4086, -19.5414, 0.23", "30.2004, 40.1157, -20.6051, 0.23", "30.538, 41.2722, -21.483, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "27.5222, 21.6163, -14.2551, 0.46", "29.2422, 22.6701, -13.3084, 0.46", "30.6797, 23.6964, -12.396, 0.23", "31.5077, 24.3196, -11.802, 0.46", "32.3611, 24.9989, -11.1533, 0.46", "33.7639, 26.1633, -10.0691, 0.46", "34.8932, 27.1011, -9.13664, 0.46", "36.6924, 28.7042, -7.56939, 0.23", "37.7659, 29.7277, -6.59228, 0.23", "39.0988, 31.0381, -5.32086, 0.23", "40.1171, 32.0236, -4.27155, 0.46", "41.2962, 33.125, -2.98381, 0.46" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "46.8611, 15.5834, -37.6322, 0.46", "47.8012, 15.4357, -37.5087, 0.46", "49.7263, 15.172, -37.42, 0.46", "51.1236, 15.0723, -37.4118, 0.46", "52.522, 15.0237, -37.4694, 0.23", "54.8069, 15.0313, -37.6069, 0.23", "56.6455, 15.085, -37.7394, 0.23", "58.2303, 15.2189, -37.9196, 0.46", "60.4086, 15.4568, -38.3015, 0.23", "62.7159, 15.7699, -38.8101, 0.46", "64.748, 16.1213, -39.3554, 0.23", "65.8455, 16.3881, -39.7391, 0.46", "67.3214, 16.7939, -40.2767, 0.23", "69.0528, 17.3132, -41.0351, 0.23", "70.253, 17.6953, -41.7035, 0.23", "71.0161, 18.0034, -42.2614, 0.23", "72.4569, 18.6784, -43.7527, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "46.8611, 15.5834, -37.6322, 0.46", "47.6003, 15.4599, -39.2764, 0.46", "48.3346, 15.405, -40.9224, 0.68", "50.0368, 15.3369, -44.6445, 0.46", "50.7089, 15.3696, -46.1568, 0.68", "51.7522, 15.4668, -48.4808, 0.46", "52.6558, 15.5818, -50.5289, 0.46", "53.5118, 15.7312, -52.3274, 0.46", "54.9407, 15.9832, -55.0726, 0.46", "56.32, 16.1918, -57.5723, 0.46", "57.7508, 16.3048, -60.0393, 0.46", "59.7662, 16.4237, -63.4337, 0.46", "61.1445, 16.4568, -65.6894, 0.46", "62.6521, 16.4271, -67.9971, 0.46", "64.0796, 16.3413, -70.0514, 0.46", "65.7181, 16.0862, -72.1747, 0.46" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "6.75007, -32.6998, 21.1443, 0.68", "7.02799, -34.1859, 21.674, 0.68", "7.30979, -36.0132, 22.2034, 0.68", "7.73762, -38.7575, 22.8601, 0.68", "8.15443, -41.4996, 23.4172, 0.68", "8.54867, -44.2701, 23.9183, 0.68", "8.75608, -45.8209, 24.165, 0.68", "9.14417, -48.8269, 24.484, 0.68", "9.44994, -51.4005, 24.6157, 0.68", "9.68936, -54.1238, 24.7103, 0.68", "9.74203, -55.3524, 24.7696, 0.68", "9.73321, -58.0651, 24.9565, 0.46", "9.66884, -59.9341, 25.1347, 0.46", "9.56139, -61.6326, 25.3146, 0.46", "9.25715, -64.3858, 25.5543, 0.46", "9.00471, -66.1901, 25.6433, 0.46", "8.71221, -68.2889, 25.6228, 0.68", "8.48492, -69.7806, 25.47, 0.68", "8.26605, -71.7131, 25.117, 0.46", "8.22488, -73.1317, 24.7808, 0.46", "8.25711, -74.1061, 24.4813, 0.46", "8.36383, -76.2411, 23.7723, 0.46", "8.43131, -78.039, 23.2067, 0.46", "8.48086, -81.0376, 22.4325, 0.46", "8.46558, -83.8748, 21.933, 0.46", "8.42553, -84.9286, 21.8211, 0.46", "8.34749, -85.9514, 21.7858, 0.68", "8.10274, -87.8763, 21.8383, 0.68", "7.76606, -89.631, 21.9759, 0.46", "7.34693, -91.2293, 22.0938, 0.68", "6.81945, -93.0562, 22.187, 0.46", "6.28683, -95.0405, 22.2407, 0.46", "6.07201, -95.9556, 22.2375, 0.46", "5.47214, -98.9524, 22.0725, 0.23", "5.09278, -101.288, 21.8272, 0.46", "4.86213, -103.16, 21.5002, 0.23", "4.74895, -104.628, 21.1759, 0.23", "4.69049, -106.382, 20.7094, 0.68", "4.71411, -108.247, 20.1515, 0.46", "4.8346, -109.97, 19.5904, 0.68", "5.00213, -112.148, 18.9065, 0.37", "5.07977, -113.411, 18.4999, 0.29", "5.11083, -114.368, 18.1838, 0.29", "5.10875, -115.474, 17.831, 0.29", "5.07628, -116.805, 17.4572, 0.44", "5.00135, -118.493, 17.0468, 0.22", "4.92978, -120.051, 16.7828, 0.29", "4.8845, -121.225, 16.5782, 0.59", "4.85379, -122.548, 16.3623, 0.59", "4.85181, -123.135, 16.2795, 0.59", "4.8685, -124.371, 16.1096, 0.44", "4.92114, -127.122, 15.7643, 0.44", "4.92426, -128.768, 15.5977, 0.44", "4.88684, -129.69, 15.5099, 0.15", "4.82497, -130.308, 15.438, 0.37", "4.64842, -131.374, 15.2918, 0.15", "4.45999, -132.158, 15.1709, 0.15", "4.17751, -133.036, 15.0125, 0.15", "3.73475, -134.211, 14.7801, 0.73", "3.16049, -135.558, 14.4865, 0.37", "2.56818, -136.799, 14.2076, 0.29", "2.15471, -137.607, 14.0342, 0.15", "1.53704, -138.768, 13.8123, 0.51", "1.01438, -139.719, 13.6383, 0.22", "0.196413, -141.166, 13.4063, 0.15", "-0.385008, -142.186, 13.2325, 0.15", "-1.17327, -143.596, 12.9631, 0.44", "-1.84462, -144.85, 12.7106, 0.15", "-2.4671, -146.077, 12.4669, 0.44", "-2.9977, -147.24, 12.2341, 0.15", "-3.43635, -148.346, 11.9988, 0.15", "-3.84437, -149.612, 11.7163, 0.44", "-4.17178, -150.9, 11.4252, 0.29", "-4.3074, -151.628, 11.2782, 0.29", "-4.41787, -152.454, 11.1225, 0.29", "-4.49806, -153.359, 10.9631, 0.66", "-4.56983, -154.693, 10.6987, 0.22", "-4.5841, -155.246, 10.5728, 0.22", "-4.59349, -156.217, 10.3459, 0.22", "-4.61604, -157.637, 10.0161, 0.22", "-4.67464, -159.371, 9.58842, 0.73", "-4.80699, -161.583, 9.03446, 0.29", "-4.98143, -163.365, 8.58138, 0.07", "-5.11261, -164.475, 8.26812, 0.22", "-5.27206, -165.65, 7.92906, 0.22", "-5.3808, -166.422, 7.7224, 0.22", "-5.5052, -167.251, 7.50863, 0.37", "-5.66416, -168.386, 7.27779, 0.15", "-5.81346, -169.642, 6.98776, 0.88", "-6.00759, -171.723, 6.49744, 0.29", "-6.08403, -172.802, 6.22927, 0.29", "-6.14537, -173.791, 5.99483, 0.51", "-6.24547, -175.133, 5.65959, 0.29", "-6.35575, -176.575, 5.27191, 0.73", "-6.42195, -177.39, 5.04293, 0.44", "-6.54285, -178.817, 4.52323, 0.29", "-6.64691, -179.965, 4.05321, 0.15", "-6.75524, -181.194, 3.45075, 0.51", "-6.83921, -182.401, 2.81627, 0.15", "-6.88014, -183.525, 2.26247, 0.15", "-6.88291, -185.343, 1.44131, 0.15", "-6.87045, -185.632, 1.32207, 0.51", "-6.6944, -187.511, 0.619797, 0.22", "-6.48609, -188.84, 0.203509, 0.22", "-6.18539, -190.302, -0.158393, 0.22", "-5.81851, -191.661, -0.416223, 0.22", "-5.51114, -192.634, -0.546972, 0.22", "-5.15804, -193.696, -0.662969, 0.22", "-4.56535, -195.408, -0.785732, 0.22", "-4.15251, -196.59, -0.893907, 0.22", "-3.76951, -197.699, -0.983958, 0.22", "-3.39255, -198.938, -1.06723, 0.22", "-3.02192, -200.464, -1.06966, 0.44", "-2.84233, -201.464, -1.02851, 0.22", "-2.78534, -201.92, -0.980961, 0.37", "-2.64839, -203.63, -0.682539, 0.15", "-2.56167, -205.204, -0.33222, 0.15", "-2.49056, -206.716, 0.0563979, 0.37", "-2.46206, -207.613, 0.314459, 0.51", "-2.41842, -209.759, 0.947335, 0.22", "-2.38885, -211.643, 1.51819, 0.29", "-2.39371, -212.744, 1.85009, 0.29", "-2.42775, -213.777, 2.15902, 0.51", "-2.50375, -215.078, 2.51584, 0.22", "-2.6068, -216.419, 2.84146, 0.88", "-2.74007, -217.953, 3.1408, 0.07", "-2.80391, -218.817, 3.30817, 0.07", "-2.92281, -220.48, 3.6537, 0.51", "-3.05591, -222.234, 4.01416, 0.29", "-3.19445, -223.736, 4.33396, 0.07", "-3.30353, -224.767, 4.63186, 0.37", "-3.52132, -226.696, 5.28811, 0.07", "-3.60257, -227.415, 5.56771, 0.07", "-3.75145, -228.572, 6.10294, 0.37", "-3.93786, -229.76, 6.712, 0.59", "-4.30309, -231.747, 7.82512, 0.22", "-4.45065, -232.46, 8.24144, 0.22", "-4.69302, -233.533, 8.85295, 0.22", "-5.08401, -235.334, 9.96442, 0.22" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.75007, -32.6998, 21.1443, 0.68", "5.66403, -34.5406, 20.6293, 0.68", "4.89095, -35.8206, 20.26, 0.68", "3.58177, -37.8923, 19.6207, 0.91", "2.0756, -40.1883, 18.9051, 0.91", "0.610512, -42.3523, 18.2073, 0.68", "-0.84849, -44.4686, 17.5625, 0.68", "-1.85858, -45.911, 17.1809, 0.68", "-2.99166, -47.5435, 16.8021, 0.68", "-3.67806, -48.6191, 16.5852, 0.46", "-4.2197, -49.5644, 16.4019, 0.68", "-5.20082, -51.5413, 15.9753, 0.68", "-6.06297, -53.6068, 15.47, 0.68", "-6.71606, -55.592, 14.9532, 0.68", "-7.17496, -57.447, 14.3798, 0.46", "-7.50894, -59.383, 13.6587, 0.46", "-7.65085, -60.7272, 13.0728, 0.68", "-7.68728, -61.3479, 12.7394, 0.68", "-7.6818, -62.735, 11.8721, 0.68", "-7.60451, -64.3179, 10.7633, 0.68", "-7.52879, -65.472, 9.96584, 0.68", "-7.4454, -66.5964, 9.22205, 0.46", "-7.35171, -68.0242, 8.36353, 0.68", "-7.18043, -69.8267, 7.3099, 0.68", "-7.04894, -70.8071, 6.6998, 0.68", "-6.71776, -72.5292, 5.54833, 0.91", "-6.26863, -74.3319, 4.25756, 0.68", "-5.68, -76.258, 2.83367, 0.91", "-4.92082, -78.4402, 1.16486, 0.91", "-4.11489, -80.6758, -0.561435, 0.68", "-3.49677, -82.2339, -1.81085, 0.91", "-2.90222, -83.4838, -2.91063, 0.46", "-2.41303, -84.3804, -3.76725, 0.68", "-1.57764, -85.7639, -5.14901, 0.23", "-0.76344, -87.041, -6.38932, 0.68", "-0.0752867, -88.1023, -7.30545, 0.68", "0.600545, -89.1239, -8.12433, 0.68", "1.39292, -90.3483, -9.08978, 0.68", "2.18743, -91.5716, -10.0336, 0.46", "2.822, -92.5413, -10.7427, 0.46", "3.93174, -94.2629, -11.9538, 0.68", "5.006, -96.0136, -13.0771, 0.23", "6.10193, -97.9487, -14.2337, 0.23", "7.27337, -100.053, -15.4642, 0.23", "7.77835, -100.971, -16.0099, 0.46", "8.71632, -102.643, -16.9672, 0.23", "9.18164, -103.422, -17.423, 0.46", "10.8277, -106.003, -18.8876, 0.23", "12.7666, -108.873, -20.3953, 0.23", "14.3698, -111.183, -21.4902, 0.46", "15.5599, -112.882, -22.2889, 0.46", "16.7215, -114.512, -23.0387, 0.23", "17.7421, -115.896, -23.6666, 0.46", "19.9634, -118.728, -24.7905, 0.23", "21.3829, -120.489, -25.3426, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "8.18063, -25.6692, 30.3878, 0.68", "7.13559, -27.1755, 31.6962, 0.68", "6.21126, -28.5398, 32.9553, 0.68", "5.51022, -29.4623, 33.9166, 0.46", "4.71993, -30.4504, 35.0341, 0.46", "4.12028, -31.1561, 35.9005, 0.68", "3.35242, -31.964, 36.9475, 0.46", "2.5883, -32.6573, 37.9521, 0.46", "1.66143, -33.25, 39.0777, 0.68", "0.702118, -33.6506, 40.1533, 0.68", "-0.174625, -33.8902, 41.0718, 0.68", "-1.37592, -34.0845, 42.2382, 0.46", "-2.29508, -34.1498, 43.0353, 0.68", "-3.86159, -34.1907, 44.2439, 0.46", "-4.93477, -34.2257, 45.0283, 0.46", "-5.93115, -34.2623, 45.6914, 0.46", "-6.81291, -34.2903, 46.2587, 0.46", "-7.43198, -34.3196, 46.6648, 0.46", "-8.23935, -34.4079, 47.1569, 0.46", "-9.4294, -34.6951, 47.8028, 0.46", "-10.7271, -35.0724, 48.5177, 0.46" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "8.18063, -25.6692, 30.3878, 0.68", "8.11495, -26.1846, 31.6727, 0.68", "8.00918, -26.8111, 33.2825, 0.68", "7.87441, -27.3328, 34.4802, 0.68", "7.63698, -28.0384, 35.8912, 0.68", "7.39164, -28.7676, 37.3493, 0.68", "7.25739, -29.1667, 38.1471, 0.68", "6.83428, -29.9321, 39.7421, 0.68", "6.2896, -30.5947, 41.23, 0.68", "5.88479, -31.1492, 42.2712, 0.68" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-56.3675, -35.7357, -66.2378, 0.23", "-57.002, -32.9851, -66.7149, 0.23", "-57.3826, -31.383, -67.1178, 0.23", "-57.7314, -29.9695, -67.5285, 0.46", "-58.2905, -27.704, -68.1867, 0.23", "-58.78, -25.7203, -68.7631, 0.23", "-59.1968, -24.031, -69.2539, 0.46", "-59.658, -21.7934, -70.0558, 0.23", "-59.7601, -21.3421, -70.1982, 0.46" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-56.3675, -35.7357, -66.2378, 0.23", "-57.3746, -37.0163, -66.6149, 0.23", "-58.4407, -38.3366, -67.2903, 0.23", "-59.597, -39.8205, -68.2514, 0.68", "-60.3969, -40.9788, -69.1031, 0.23", "-61.3601, -42.4951, -70.4668, 0.46", "-62.7907, -44.7904, -73.0022, 0.23", "-63.4902, -46.0844, -74.83, 0.23", "-63.9512, -46.9915, -76.2903, 0.23", "-64.4358, -47.9852, -78.1478, 0.68", "-65.0954, -49.4063, -81.2074, 0.68", "-65.5436, -50.5025, -83.9423, 0.68", "-65.8564, -51.6677, -86.9233, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "30.538, 41.2722, -21.483, 0.23", "29.0957, 41.8054, -20.3876, 0.23", "27.4796, 42.4028, -19.1602, 0.23", "26.2593, 42.8539, -18.2334, 0.23", "24.8347, 43.3805, -17.1514, 0.23", "23.5767, 43.8455, -16.196, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "30.538, 41.2722, -21.483, 0.23", "32.0591, 41.8993, -22.8727, 0.23", "33.2126, 42.3943, -24.0987, 0.23", "34.9229, 43.1282, -25.9163, 0.23", "36.8038, 43.9354, -27.9154, 0.46", "38.2054, 44.5368, -29.4049, 0.23", "39.9832, 45.2997, -31.2943, 0.23", "42.1039, 46.1104, -33.7751, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "5.88479, -31.1492, 42.2712, 0.68", "5.72633, -31.0117, 42.8879, 0.68", "5.13605, -30.4997, 45.1851, 0.68" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "5.88479, -31.1492, 42.2712, 0.68", "6.18611, -31.8253, 43.0795, 0.68", "6.82334, -33.1841, 44.5749, 0.68", "7.24171, -33.8544, 45.2343, 0.68", "7.59372, -34.4184, 45.7891, 1.14", "8.16356, -35.3314, 46.6871, 0.91", "8.68863, -36.1728, 47.5147, 0.46", "9.18072, -36.9347, 48.2445, 0.23", "10.4451, -38.5536, 49.6824, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "5.13605, -30.4997, 45.1851, 0.46", "4.53474, -31.2722, 45.9972, 0.46", "3.71544, -32.3248, 47.1037, 0.46", "3.21732, -32.9647, 47.7765, 0.46", "2.57615, -33.7885, 48.6424, 0.46", "1.81144, -34.7709, 49.6752, 0.23", "1.14539, -35.6266, 50.5748, 0.23" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.13605, -30.4997, 45.1851, 0.46", "5.96803, -28.8844, 46.4532, 0.46", "6.53175, -27.79, 47.3125, 0.46", "6.76846, -27.3304, 47.6733, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_53", "dend_34", "dend_13", "dend_0", "dend_55", "dend_54", "dend_44", "dend_35", "dend_29", "dend_14", "dend_10", "dend_1", "dend_57", "dend_56", "dend_52", "dend_45", "dend_39", "dend_36", "dend_31", "dend_30", "dend_26", "dend_15", "dend_12", "dend_11", "dend_7", "dend_2", "dend_47", "dend_46", "dend_43", "dend_40", "dend_38", "dend_37", "dend_33", "dend_32", "dend_28", "dend_27", "dend_23", "dend_16", "dend_9", "dend_8", "dend_6", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_25", "dend_24", "dend_22", "dend_17", "dend_5", "dend_4", "dend_51", "dend_50", "dend_19", "dend_18", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_58", "dend_53", "dend_34", "dend_13", "dend_0", "dend_55", "dend_54", "dend_44", "dend_35", "dend_29", "dend_14", "dend_10", "dend_1", "dend_57", "dend_56", "dend_52", "dend_45", "dend_39", "dend_36", "dend_31", "dend_30", "dend_26", "dend_15", "dend_12", "dend_11", "dend_7", "dend_2", "dend_47", "dend_46", "dend_43", "dend_40", "dend_38", "dend_37", "dend_33", "dend_32", "dend_28", "dend_27", "dend_23", "dend_16", "dend_9", "dend_8", "dend_6", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_25", "dend_24", "dend_22", "dend_17", "dend_5", "dend_4", "dend_51", "dend_50", "dend_19", "dend_18", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_53", "dend_34", "dend_13", "dend_0", "axon_0", "dend_55", "dend_54", "dend_44", "dend_35", "dend_29", "dend_14", "dend_10", "dend_1", "axon_1", "dend_57", "dend_56", "dend_52", "dend_45", "dend_39", "dend_36", "dend_31", "dend_30", "dend_26", "dend_15", "dend_12", "dend_11", "dend_7", "dend_2", "dend_47", "dend_46", "dend_43", "dend_40", "dend_38", "dend_37", "dend_33", "dend_32", "dend_28", "dend_27", "dend_23", "dend_16", "dend_9", "dend_8", "dend_6", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_25", "dend_24", "dend_22", "dend_17", "dend_5", "dend_4", "dend_51", "dend_50", "dend_19", "dend_18", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L1_SLAC_23649a0c82_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_44, id: dend_44, parent: dend_34
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_13
create dend_29
public dend_29
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_14
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_53, dend_34, dend_13, dend_0, dend_55, dend_54, dend_44, dend_35, dend_29, dend_14, dend_10, dend_1, dend_57, dend_56, dend_52, dend_45, dend_39, dend_36, dend_31, dend_30, dend_26, dend_15, dend_12, dend_11, dend_7, dend_2, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_33, dend_32, dend_28, dend_27, dend_23, dend_16, dend_9, dend_8, dend_6, dend_3, dend_49, dend_48, dend_42, dend_41, dend_25, dend_24, dend_22, dend_17, dend_5, dend_4, dend_51, dend_50, dend_19, dend_18, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_53, dend_34, dend_13, dend_0, dend_55, dend_54, dend_44, dend_35, dend_29, dend_14, dend_10, dend_1, dend_57, dend_56, dend_52, dend_45, dend_39, dend_36, dend_31, dend_30, dend_26, dend_15, dend_12, dend_11, dend_7, dend_2, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_33, dend_32, dend_28, dend_27, dend_23, dend_16, dend_9, dend_8, dend_6, dend_3, dend_49, dend_48, dend_42, dend_41, dend_25, dend_24, dend_22, dend_17, dend_5, dend_4, dend_51, dend_50, dend_19, dend_18, dend_21, dend_20]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_58, dend_53, dend_34, dend_13, dend_0, axon_0, dend_55, dend_54, dend_44, dend_35, dend_29, dend_14, dend_10, dend_1, axon_1, dend_57, dend_56, dend_52, dend_45, dend_39, dend_36, dend_31, dend_30, dend_26, dend_15, dend_12, dend_11, dend_7, dend_2, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_33, dend_32, dend_28, dend_27, dend_23, dend_16, dend_9, dend_8, dend_6, dend_3, dend_49, dend_48, dend_42, dend_41, dend_25, dend_24, dend_22, dend_17, dend_5, dend_4, dend_51, dend_50, dend_19, dend_18, dend_21, dend_20]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_56
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_58(0), soma_0(0.45000021234835014)
    connect dend_53(0), soma_0(0.45000021234835014)
    connect dend_34(0), soma_0(0.45000021234835014)
    connect dend_13(0), soma_0(0.45000021234835014)
    connect dend_0(0), soma_0(0.45000021234835014)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_44(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.86979, -3.62109, 0.0, 3.40802 ) }
    soma_0 { pt3dadd( -3.4648, -3.20389, 0.0, 6.39426 ) }
    soma_0 { pt3dadd( -3.05982, -2.7867, 0.0, 8.90883 ) }
    soma_0 { pt3dadd( -2.65483, -2.36951, 0.0, 9.83284 ) }
    soma_0 { pt3dadd( -2.24985, -1.95232, 0.0, 10.3489 ) }
    soma_0 { pt3dadd( -1.84486, -1.53513, 0.0, 10.7154 ) }
    soma_0 { pt3dadd( -1.43988, -1.11794, 0.0, 10.9388 ) }
    soma_0 { pt3dadd( -1.03489, -0.700747, 0.0, 11.0039 ) }
    soma_0 { pt3dadd( -0.629907, -0.283556, 0.0, 11.0691 ) }
    soma_0 { pt3dadd( -0.224923, 0.133635, 0.0, 10.9504 ) }
    soma_0 { pt3dadd( 0.180062, 0.550827, 0.0, 10.7888 ) }
    soma_0 { pt3dadd( 0.585047, 0.968018, 0.0, 10.5771 ) }
    soma_0 { pt3dadd( 0.990032, 1.38521, 0.0, 10.3653 ) }
    soma_0 { pt3dadd( 1.39502, 1.8024, 0.0, 9.98268 ) }
    soma_0 { pt3dadd( 1.8, 2.21959, 0.0, 9.53555 ) }
    soma_0 { pt3dadd( 2.20499, 2.63678, 0.0, 8.94537 ) }
    soma_0 { pt3dadd( 2.60997, 3.05397, 0.0, 8.30699 ) }
    soma_0 { pt3dadd( 3.01496, 3.47116, 0.0, 7.27769 ) }
    soma_0 { pt3dadd( 3.41994, 3.88836, 0.0, 6.11009 ) }
    soma_0 { pt3dadd( 3.82493, 4.30555, 0.0, 4.18013 ) }
    soma_0 { pt3dadd( 4.22991, 4.72274, 0.0, 2.41866 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.93111, 4.9631, 8.39, 0.95 ) }
    dend_58 { pt3dadd( 4.18815, 5.37402, 8.64174, 0.95 ) }
    dend_58 { pt3dadd( 4.64617, 6.04873, 9.21776, 0.95 ) }
    dend_58 { pt3dadd( 5.05167, 6.66717, 9.82576, 0.73 ) }
    dend_58 { pt3dadd( 5.50094, 7.38035, 10.5341, 0.59 ) }
    dend_58 { pt3dadd( 5.91192, 8.03542, 11.1748, 1.1 ) }
    dend_58 { pt3dadd( 6.46594, 8.91847, 12.0384, 1.25 ) }
    dend_58 { pt3dadd( 7.31417, 10.1657, 13.3547, 1.62 ) }
    dend_58 { pt3dadd( 7.68273, 10.6766, 13.9381, 2.35 ) }
    dend_58 { pt3dadd( 7.94201, 11.0305, 14.3897, 2.35 ) }
    dend_58 { pt3dadd( 8.11963, 11.3012, 14.7487, 2.35 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 32/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 0.311109, 6.4646, -3.6, 1.14 ) }
    dend_53 { pt3dadd( -0.273593, 6.7494, -4.35197, 1.14 ) }
    dend_53 { pt3dadd( -0.567577, 6.90632, -4.82908, 0.91 ) }
    dend_53 { pt3dadd( -1.08878, 7.32746, -6.05055, 0.91 ) }
    dend_53 { pt3dadd( -1.45366, 7.75569, -7.0556, 0.91 ) }
    dend_53 { pt3dadd( -1.8658, 8.19547, -8.17686, 0.91 ) }
    dend_53 { pt3dadd( -2.17775, 8.51857, -9.07696, 0.91 ) }
    dend_53 { pt3dadd( -2.38621, 8.73344, -9.67435, 0.91 ) }
    dend_53 { pt3dadd( -2.98091, 9.41507, -11.518, 0.91 ) }
    dend_53 { pt3dadd( -3.57558, 10.1401, -13.4355, 0.68 ) }
    dend_53 { pt3dadd( -4.11905, 10.7959, -15.177, 0.68 ) }
    dend_53 { pt3dadd( -4.67637, 11.3878, -16.7239, 0.68 ) }
    dend_53 { pt3dadd( -5.23866, 11.8649, -18.0036, 0.68 ) }
    dend_53 { pt3dadd( -5.57767, 12.114, -18.7404, 0.68 ) }
    dend_53 { pt3dadd( -5.81407, 12.2621, -19.2328, 0.68 ) }
    dend_53 { pt3dadd( -6.32997, 12.5205, -20.2381, 0.68 ) }
    dend_53 { pt3dadd( -7.25412, 12.9779, -21.8482, 0.68 ) }
    dend_53 { pt3dadd( -7.89837, 13.1801, -22.7215, 0.68 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 50/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 5.09111, 3.9446, -1.73, 2.96 ) }
    dend_34 { pt3dadd( 5.09111, 3.9446, -1.73, 2.96 ) }
    dend_34 { pt3dadd( 6.10752, 4.49382, -2.67695, 2.51 ) }
    dend_34 { pt3dadd( 7.4896, 5.24063, -3.96458, 2.05 ) }
    dend_34 { pt3dadd( 8.92169, 6.01446, -5.2988, 1.37 ) }
    dend_34 { pt3dadd( 10.0776, 6.63904, -6.37569, 1.37 ) }
    dend_34 { pt3dadd( 11.2854, 7.29164, -7.50089, 1.37 ) }
    dend_34 { pt3dadd( 12.1941, 7.77747, -8.33879, 1.37 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 58/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.23111, -3.7309, 4.27, 5.47 ) }
    dend_13 { pt3dadd( 2.23111, -3.7309, 4.27, 5.47 ) }
    dend_13 { pt3dadd( 3.37111, -5.8414, 4.08, 3.87 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.55889, 0.658095, -1.0, 1.59 ) }
    dend_0 { pt3dadd( -6.27776, 0.711185, -1.82655, 1.37 ) }
    dend_0 { pt3dadd( -7.17346, 0.777334, -2.85642, 1.37 ) }
    dend_0 { pt3dadd( -8.14838, 0.849334, -3.97738, 1.14 ) }
    dend_0 { pt3dadd( -8.42159, 0.869512, -4.29152, 1.14 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.22991, 4.72274, 0.0, 0.68 ) }
    axon_0 { pt3dadd( 14.6779, 15.4856, 0.0, 0.68 ) }
    axon_0 { pt3dadd( 25.1259, 26.2485, 0.0, 0.68 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 69/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -7.89837, 13.1801, -22.7215, 0.68 ) }
    dend_55 { pt3dadd( -7.73325, 14.0033, -24.4607, 0.68 ) }
    dend_55 { pt3dadd( -7.52354, 15.0487, -26.6697, 0.91 ) }
    dend_55 { pt3dadd( -7.33246, 16.0013, -28.6824, 0.91 ) }
    dend_55 { pt3dadd( -7.11362, 17.0923, -30.9875, 0.91 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 74/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -7.89837, 13.1801, -22.7215, 0.23 ) }
    dend_54 { pt3dadd( -8.92408, 11.5388, -23.3195, 0.23 ) }
    dend_54 { pt3dadd( -10.1488, 9.26445, -24.2327, 0.23 ) }
    dend_54 { pt3dadd( -10.8265, 7.82182, -24.8226, 0.23 ) }
    dend_54 { pt3dadd( -11.1819, 7.04291, -25.1564, 0.46 ) }
    dend_54 { pt3dadd( -11.6083, 6.23984, -25.4122, 0.23 ) }
    dend_54 { pt3dadd( -12.6947, 4.65604, -25.7903, 0.23 ) }
    dend_54 { pt3dadd( -13.3314, 3.95702, -25.8949, 0.46 ) }
    dend_54 { pt3dadd( -14.8368, 2.73669, -25.9439, 0.23 ) }
    dend_54 { pt3dadd( -16.0254, 1.87499, -25.9414, 0.23 ) }
    dend_54 { pt3dadd( -19.5646, -0.384186, -25.8211, 0.23 ) }
    dend_54 { pt3dadd( -22.6831, -2.10214, -25.5891, 0.23 ) }
    dend_54 { pt3dadd( -25.0275, -3.18366, -25.3024, 0.23 ) }
    dend_54 { pt3dadd( -26.5286, -3.78973, -25.0624, 0.46 ) }
    // Section: dend_44, id: dend_44, parent: dend_34 (entry count 88/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 12.1941, 7.77747, -8.33879, 0.91 ) }
    dend_44 { pt3dadd( 13.3567, 8.35079, -8.70113, 0.91 ) }
    dend_44 { pt3dadd( 15.2391, 9.27901, -9.28777, 0.68 ) }
    dend_44 { pt3dadd( 17.401, 10.3451, -9.96154, 0.68 ) }
    dend_44 { pt3dadd( 19.2471, 11.2554, -10.5369, 0.68 ) }
    dend_44 { pt3dadd( 21.0087, 12.1241, -11.0859, 1.14 ) }
    dend_44 { pt3dadd( 21.8548, 12.5413, -11.3496, 1.14 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 95/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 12.1941, 7.77747, -8.33879, 0.91 ) }
    dend_35 { pt3dadd( 12.9987, 8.35628, -9.35249, 0.91 ) }
    dend_35 { pt3dadd( 13.7703, 8.94927, -10.3918, 0.91 ) }
    dend_35 { pt3dadd( 14.1291, 9.23399, -10.8683, 0.91 ) }
    dend_35 { pt3dadd( 14.5502, 9.603, -11.4591, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_35 { pt3dadd( 15.427, 10.3713, -12.6894, 0.91 ) }
    dend_35 { pt3dadd( 16.3288, 11.1617, -13.9549, 0.91 ) }
    dend_35 { pt3dadd( 17.2644, 11.8991, -15.1176, 0.91 ) }
    dend_35 { pt3dadd( 17.837, 12.3601, -15.8322, 0.68 ) }
    dend_35 { pt3dadd( 18.3256, 12.7465, -16.4741, 0.91 ) }
    // Section: dend_29, id: dend_29, parent: dend_13 (entry count 5/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.37111, -5.8414, 4.08, 1.82 ) }
    dend_29 { pt3dadd( 3.70104, -7.45454, 3.2251, 1.82 ) }
    dend_29 { pt3dadd( 3.82894, -9.29793, 2.19439, 1.59 ) }
    dend_29 { pt3dadd( 3.84828, -10.3709, 1.54259, 1.37 ) }
    dend_29 { pt3dadd( 3.8727, -11.5153, 0.776807, 0.91 ) }
    dend_29 { pt3dadd( 3.9343, -13.131, -0.428097, 0.91 ) }
    dend_29 { pt3dadd( 4.03602, -14.831, -1.73906, 0.91 ) }
    dend_29 { pt3dadd( 4.16837, -16.598, -3.24745, 0.91 ) }
    dend_29 { pt3dadd( 4.37479, -18.2004, -4.73734, 0.91 ) }
    dend_29 { pt3dadd( 4.57937, -19.3517, -5.94045, 0.91 ) }
    dend_29 { pt3dadd( 4.85212, -20.391, -7.16175, 0.91 ) }
    dend_29 { pt3dadd( 5.38788, -21.7101, -8.87638, 0.91 ) }
    dend_29 { pt3dadd( 5.92246, -22.6891, -10.2364, 0.68 ) }
    dend_29 { pt3dadd( 6.65432, -23.8254, -11.8951, 0.91 ) }
    dend_29 { pt3dadd( 7.17991, -24.6001, -13.0451, 0.91 ) }
    dend_29 { pt3dadd( 7.74284, -25.4513, -14.2892, 0.68 ) }
    dend_29 { pt3dadd( 8.18213, -26.1122, -15.2694, 0.68 ) }
    dend_29 { pt3dadd( 8.81358, -26.9794, -16.7989, 0.91 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 23/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 3.37111, -5.8414, 4.08, 3.64 ) }
    dend_14 { pt3dadd( 3.73949, -6.48105, 5.55326, 3.64 ) }
    dend_14 { pt3dadd( 4.23095, -7.33439, 7.5187, 3.64 ) }
    dend_14 { pt3dadd( 4.68714, -8.1265, 9.34312, 3.64 ) }
    dend_14 { pt3dadd( 5.18596, -8.99263, 11.338, 3.42 ) }
    dend_14 { pt3dadd( 5.58083, -9.67826, 12.9172, 3.42 ) }
    dend_14 { pt3dadd( 5.91015, -10.2501, 14.2342, 3.42 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 30/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.42159, 0.869512, -4.29152, 0.68 ) }
    dend_10 { pt3dadd( -8.30417, 0.915022, -4.85785, 0.68 ) }
    dend_10 { pt3dadd( -7.84718, 1.33616, -6.43509, 0.68 ) }
    dend_10 { pt3dadd( -7.19795, 1.96356, -8.09385, 0.68 ) }
    dend_10 { pt3dadd( -6.55905, 2.54166, -9.4957, 0.68 ) }
    dend_10 { pt3dadd( -6.00283, 3.05125, -10.5877, 0.68 ) }
    dend_10 { pt3dadd( -5.33632, 3.61758, -11.7774, 0.46 ) }
    dend_10 { pt3dadd( -4.41121, 4.34267, -13.105, 0.46 ) }
    dend_10 { pt3dadd( -3.47817, 5.05038, -14.2022, 0.46 ) }
    dend_10 { pt3dadd( -2.19293, 5.9944, -15.5827, 0.46 ) }
    dend_10 { pt3dadd( -1.061, 6.76991, -16.7333, 0.46 ) }
    dend_10 { pt3dadd( -0.0598222, 7.40904, -17.7375, 0.46 ) }
    dend_10 { pt3dadd( 1.12438, 8.09734, -18.9427, 0.46 ) }
    dend_10 { pt3dadd( 2.73013, 8.94543, -20.5129, 0.23 ) }
    dend_10 { pt3dadd( 3.73462, 9.49297, -21.4606, 0.23 ) }
    dend_10 { pt3dadd( 4.84228, 10.0928, -22.4246, 0.68 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 46/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.42159, 0.869512, -4.29152, 1.14 ) }
    dend_1 { pt3dadd( -9.20936, 0.725355, -4.70344, 1.14 ) }
    dend_1 { pt3dadd( -9.64425, 0.667456, -4.89403, 1.14 ) }
    dend_1 { pt3dadd( -10.6887, 0.579959, -5.29888, 1.14 ) }
    dend_1 { pt3dadd( -11.8846, 0.479782, -5.76241, 1.14 ) }
    dend_1 { pt3dadd( -13.9259, 0.308787, -6.55362, 1.14 ) }
    dend_1 { pt3dadd( -14.9355, 0.224216, -6.94494, 1.14 ) }
    dend_1 { pt3dadd( -17.1004, 0.0497681, -7.69865, 0.68 ) }
    dend_1 { pt3dadd( -18.6634, -0.0400339, -8.23216, 0.91 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 55/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 25.1259, 26.2485, 0.0, 0.261871 ) }
    axon_1 { pt3dadd( 35.5738, 37.0114, 0.0, 0.261871 ) }
    axon_1 { pt3dadd( 46.0218, 47.7743, 0.0, 0.261871 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 58/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -7.11362, 17.0923, -30.9875, 0.46 ) }
    dend_57 { pt3dadd( -8.15648, 17.9793, -32.727, 0.46 ) }
    dend_57 { pt3dadd( -9.20861, 18.7161, -34.4055, 0.46 ) }
    dend_57 { pt3dadd( -9.93565, 19.2041, -35.5539, 0.46 ) }
    dend_57 { pt3dadd( -10.4117, 19.5607, -36.411, 0.46 ) }
    dend_57 { pt3dadd( -11.2451, 20.2452, -38.0541, 0.68 ) }
    dend_57 { pt3dadd( -12.0131, 20.9966, -39.8297, 0.68 ) }
    dend_57 { pt3dadd( -12.8431, 21.9204, -42.121, 0.68 ) }
    dend_57 { pt3dadd( -13.4025, 22.6121, -43.9164, 0.68 ) }
    dend_57 { pt3dadd( -13.9771, 23.4206, -46.2205, 0.68 ) }
    dend_57 { pt3dadd( -14.3167, 24.0883, -48.2508, 0.68 ) }
    dend_57 { pt3dadd( -14.5352, 24.856, -50.826, 0.68 ) }
    dend_57 { pt3dadd( -14.635, 25.5334, -53.2737, 0.68 ) }
    dend_57 { pt3dadd( -14.6132, 26.122, -55.5496, 0.68 ) }
    dend_57 { pt3dadd( -14.5777, 26.5012, -57.2859, 0.68 ) }
    dend_57 { pt3dadd( -14.552, 26.8064, -59.1936, 0.68 ) }
    dend_57 { pt3dadd( -14.5068, 27.0551, -61.5924, 0.68 ) }
    dend_57 { pt3dadd( -14.5016, 27.1136, -62.617, 0.68 ) }
    dend_57 { pt3dadd( -14.5205, 27.2383, -67.2795, 0.46 ) }
    dend_57 { pt3dadd( -14.6146, 27.3015, -72.6091, 0.46 ) }
    dend_57 { pt3dadd( -14.7199, 27.3155, -76.2602, 0.46 ) }
    dend_57 { pt3dadd( -14.8507, 27.2775, -79.1934, 0.46 ) }
    dend_57 { pt3dadd( -15.0406, 27.1738, -82.8762, 0.46 ) }
    dend_57 { pt3dadd( -15.2066, 27.0242, -86.2127, 0.46 ) }
    dend_57 { pt3dadd( -15.3953, 26.7126, -89.5013, 0.46 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -7.11362, 17.0923, -30.9875, 0.23 ) }
    dend_56 { pt3dadd( -6.46734, 17.8775, -31.7536, 0.23 ) }
    dend_56 { pt3dadd( -5.50749, 19.0001, -32.9081, 0.46 ) }
    dend_56 { pt3dadd( -4.64202, 20.0491, -33.9186, 0.46 ) }
    dend_56 { pt3dadd( -3.97924, 20.8906, -34.7223, 0.46 ) }
    dend_56 { pt3dadd( -3.33209, 21.7377, -35.5308, 0.46 ) }
    dend_56 { pt3dadd( -2.87024, 22.4036, -36.1666, 0.46 ) }
    dend_56 { pt3dadd( -2.4148, 23.0688, -36.8584, 0.46 ) }
    dend_56 { pt3dadd( -1.89404, 23.8516, -37.6987, 0.68 ) }
    dend_56 { pt3dadd( -1.20071, 24.8589, -38.7969, 0.46 ) }
    dend_56 { pt3dadd( -0.341821, 26.0254, -40.088, 0.46 ) }
    dend_56 { pt3dadd( 0.667107, 27.2203, -41.4424, 0.23 ) }
    dend_56 { pt3dadd( 1.71846, 28.3171, -42.7777, 0.46 ) }
    dend_56 { pt3dadd( 2.87052, 29.3478, -44.0866, 0.46 ) }
    dend_56 { pt3dadd( 3.65305, 29.9038, -44.858, 0.46 ) }
    dend_56 { pt3dadd( 5.33448, 30.8808, -46.2368, 0.23 ) }
    dend_56 { pt3dadd( 7.54623, 31.9082, -47.7246, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_56 { pt3dadd( 9.03763, 32.4894, -48.5458, 0.23 ) }
    dend_56 { pt3dadd( 10.465, 32.95, -49.1892, 0.46 ) }
    dend_56 { pt3dadd( 12.4778, 33.3977, -49.9394, 0.46 ) }
    dend_56 { pt3dadd( 13.8675, 33.5977, -50.4234, 0.46 ) }
    dend_56 { pt3dadd( 15.3598, 33.7093, -50.9614, 0.46 ) }
    dend_56 { pt3dadd( 16.186, 33.7649, -51.2986, 0.46 ) }
    dend_56 { pt3dadd( 18.4846, 33.9347, -52.549, 0.46 ) }
    dend_56 { pt3dadd( 20.4396, 34.1048, -53.9893, 0.46 ) }
    dend_56 { pt3dadd( 22.5126, 34.2931, -55.9772, 0.23 ) }
    dend_56 { pt3dadd( 23.9883, 34.3648, -57.635, 0.23 ) }
    dend_56 { pt3dadd( 25.4023, 34.3297, -59.4469, 0.46 ) }
    dend_56 { pt3dadd( 27.5278, 34.02, -62.4508, 0.46 ) }
    dend_56 { pt3dadd( 29.4604, 33.4714, -65.5628, 0.46 ) }
    dend_56 { pt3dadd( 30.9877, 32.948, -68.2019, 0.46 ) }
    dend_56 { pt3dadd( 32.0368, 32.4963, -70.0882, 0.23 ) }
    dend_56 { pt3dadd( 33.3769, 31.7538, -72.5369, 0.46 ) }
    dend_56 { pt3dadd( 34.9179, 30.6359, -75.2855, 0.46 ) }
    dend_56 { pt3dadd( 37.0182, 28.7171, -78.8601, 0.46 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 18/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 21.8548, 12.5413, -11.3496, 0.68 ) }
    dend_52 { pt3dadd( 23.4132, 12.8632, -12.1895, 0.68 ) }
    dend_52 { pt3dadd( 24.4889, 13.0872, -12.8425, 0.68 ) }
    dend_52 { pt3dadd( 26.0517, 13.393, -13.8955, 0.68 ) }
    dend_52 { pt3dadd( 27.9254, 13.7661, -15.2523, 0.68 ) }
    dend_52 { pt3dadd( 29.2847, 14.0847, -16.2957, 0.68 ) }
    dend_52 { pt3dadd( 30.7394, 14.4923, -17.526, 0.68 ) }
    dend_52 { pt3dadd( 32.0586, 14.9124, -18.7623, 0.68 ) }
    dend_52 { pt3dadd( 33.4156, 15.4068, -20.2207, 0.68 ) }
    dend_52 { pt3dadd( 34.9529, 15.9296, -22.1175, 0.46 ) }
    dend_52 { pt3dadd( 36.075, 16.2481, -23.6201, 0.46 ) }
    dend_52 { pt3dadd( 37.291, 16.4923, -25.2871, 0.46 ) }
    dend_52 { pt3dadd( 38.1083, 16.5551, -26.4103, 0.46 ) }
    dend_52 { pt3dadd( 39.2579, 16.4567, -28.1716, 0.46 ) }
    dend_52 { pt3dadd( 40.2683, 16.2198, -29.8216, 0.23 ) }
    dend_52 { pt3dadd( 41.3522, 15.7981, -31.7339, 0.23 ) }
    dend_52 { pt3dadd( 41.9985, 15.5012, -32.9486, 0.68 ) }
    dend_52 { pt3dadd( 43.3345, 14.9145, -35.551, 0.68 ) }
    dend_52 { pt3dadd( 45.158, 14.1933, -39.1987, 0.68 ) }
    dend_52 { pt3dadd( 45.6946, 14.0305, -40.3063, 0.91 ) }
    dend_52 { pt3dadd( 47.1123, 13.8171, -43.3842, 0.46 ) }
    dend_52 { pt3dadd( 48.3537, 13.7966, -46.2796, 0.46 ) }
    dend_52 { pt3dadd( 49.7459, 13.9042, -49.3399, 0.23 ) }
    dend_52 { pt3dadd( 50.1664, 13.9331, -50.1481, 0.68 ) }
    dend_52 { pt3dadd( 51.9524, 14.0381, -53.2395, 0.23 ) }
    dend_52 { pt3dadd( 53.8502, 14.1102, -56.2249, 0.46 ) }
    dend_52 { pt3dadd( 56.1573, 14.1365, -59.4886, 0.46 ) }
    dend_52 { pt3dadd( 59.0246, 14.0605, -63.0199, 0.23 ) }
    dend_52 { pt3dadd( 62.2272, 13.8719, -66.5602, 0.23 ) }
    dend_52 { pt3dadd( 65.697, 13.598, -70.2489, 0.23 ) }
    dend_52 { pt3dadd( 67.5065, 13.3931, -71.9837, 0.23 ) }
    dend_52 { pt3dadd( 69.3642, 13.1069, -73.543, 0.23 ) }
    dend_52 { pt3dadd( 72.1177, 12.6353, -75.5239, 0.23 ) }
    dend_52 { pt3dadd( 72.7401, 12.5365, -75.9288, 0.46 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 52/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 21.8548, 12.5413, -11.3496, 0.91 ) }
    dend_45 { pt3dadd( 22.2449, 13.1227, -11.0685, 0.91 ) }
    dend_45 { pt3dadd( 23.2814, 14.6673, -10.3219, 0.91 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 55/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 18.3256, 12.7465, -16.4741, 0.46 ) }
    dend_39 { pt3dadd( 19.4662, 12.9527, -17.4327, 0.46 ) }
    dend_39 { pt3dadd( 20.4792, 13.1901, -18.3581, 0.46 ) }
    dend_39 { pt3dadd( 21.8542, 13.5683, -19.7965, 0.46 ) }
    dend_39 { pt3dadd( 23.3496, 13.9798, -21.3522, 0.46 ) }
    dend_39 { pt3dadd( 24.5907, 14.3028, -22.6576, 0.68 ) }
    dend_39 { pt3dadd( 25.8552, 14.6239, -24.0222, 0.68 ) }
    dend_39 { pt3dadd( 27.0213, 14.9546, -25.3326, 0.46 ) }
    dend_39 { pt3dadd( 28.2512, 15.2856, -26.7393, 0.46 ) }
    dend_39 { pt3dadd( 29.2822, 15.4969, -27.9482, 0.91 ) }
    dend_39 { pt3dadd( 30.699, 15.6993, -29.6725, 0.68 ) }
    dend_39 { pt3dadd( 31.857, 15.8005, -31.0741, 0.68 ) }
    dend_39 { pt3dadd( 32.7606, 15.8424, -32.1435, 0.46 ) }
    dend_39 { pt3dadd( 33.2576, 15.8399, -32.7306, 0.68 ) }
    dend_39 { pt3dadd( 35.2128, 15.7651, -35.0112, 0.46 ) }
    dend_39 { pt3dadd( 36.3204, 15.6888, -36.5335, 0.68 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 71/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 18.3256, 12.7465, -16.4741, 0.91 ) }
    dend_36 { pt3dadd( 17.6455, 14.5525, -16.7941, 0.91 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 8.81358, -26.9794, -16.7989, 0.46 ) }
    dend_31 { pt3dadd( 9.65309, -28.4267, -18.1896, 0.46 ) }
    dend_31 { pt3dadd( 10.4071, -29.6607, -19.5139, 0.46 ) }
    dend_31 { pt3dadd( 10.799, -30.2656, -20.1435, 0.68 ) }
    dend_31 { pt3dadd( 11.4236, -31.1484, -21.119, 0.68 ) }
    dend_31 { pt3dadd( 12.3143, -32.2685, -22.4315, 0.68 ) }
    dend_31 { pt3dadd( 13.6009, -33.7081, -24.2437, 0.46 ) }
    dend_31 { pt3dadd( 14.3327, -34.5435, -25.3358, 0.46 ) }
    dend_31 { pt3dadd( 15.7164, -36.0277, -27.3303, 0.46 ) }
    dend_31 { pt3dadd( 16.9332, -37.1972, -28.9753, 0.68 ) }
    dend_31 { pt3dadd( 18.1614, -38.2054, -30.5058, 0.46 ) }
    dend_31 { pt3dadd( 19.6297, -39.2782, -32.2386, 0.68 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.81358, -26.9794, -16.7989, 0.46 ) }
    dend_30 { pt3dadd( 7.51512, -28.6558, -17.4108, 0.46 ) }
    dend_30 { pt3dadd( 6.22348, -30.1715, -17.9935, 0.46 ) }
    dend_30 { pt3dadd( 4.98236, -31.4647, -18.4665, 0.46 ) }
    dend_30 { pt3dadd( 4.17312, -32.2487, -18.7721, 0.46 ) }
    dend_30 { pt3dadd( 2.95882, -33.3672, -19.2189, 0.46 ) }
    dend_30 { pt3dadd( 1.43991, -34.6678, -19.7938, 0.46 ) }
    dend_30 { pt3dadd( 0.588356, -35.2756, -20.1132, 0.46 ) }
    dend_30 { pt3dadd( -1.349, -36.3776, -20.9323, 0.46 ) }
    dend_30 { pt3dadd( -2.49811, -36.9136, -21.5503, 0.46 ) }
    dend_30 { pt3dadd( -3.36502, -37.2343, -22.1305, 0.68 ) }
    dend_30 { pt3dadd( -5.02711, -37.7422, -23.5609, 0.23 ) }
    dend_30 { pt3dadd( -6.46928, -38.1181, -25.1442, 0.46 ) }
    dend_30 { pt3dadd( -7.61911, -38.3797, -26.5504, 0.46 ) }
    dend_30 { pt3dadd( -8.77611, -38.5787, -28.1929, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_30 { pt3dadd( -9.91125, -38.7277, -29.9727, 0.46 ) }
    dend_30 { pt3dadd( -11.0626, -38.8388, -32.0707, 0.46 ) }
    dend_30 { pt3dadd( -11.6219, -38.8898, -33.3632, 0.46 ) }
    // Section: dend_26, id: dend_26, parent: dend_14 (entry count 3/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.91015, -10.2501, 14.2342, 0.91 ) }
    dend_26 { pt3dadd( 7.29836, -10.8815, 14.002, 0.91 ) }
    dend_26 { pt3dadd( 9.19425, -11.8564, 13.7152, 0.46 ) }
    dend_26 { pt3dadd( 10.8085, -12.7045, 13.493, 0.68 ) }
    dend_26 { pt3dadd( 12.721, -13.6945, 13.2578, 0.68 ) }
    dend_26 { pt3dadd( 14.3785, -14.5643, 13.0684, 0.68 ) }
    dend_26 { pt3dadd( 15.3237, -15.0912, 12.982, 0.68 ) }
    dend_26 { pt3dadd( 16.8065, -15.968, 12.9059, 0.68 ) }
    dend_26 { pt3dadd( 17.597, -16.4617, 12.8833, 0.68 ) }
    dend_26 { pt3dadd( 18.7762, -17.2355, 12.8814, 0.46 ) }
    dend_26 { pt3dadd( 20.4275, -18.3867, 12.9274, 0.68 ) }
    dend_26 { pt3dadd( 22.3652, -19.828, 13.0836, 0.46 ) }
    dend_26 { pt3dadd( 23.7384, -20.8636, 13.2526, 0.68 ) }
    dend_26 { pt3dadd( 25.0285, -21.844, 13.5185, 0.68 ) }
    dend_26 { pt3dadd( 25.7776, -22.4427, 13.773, 0.68 ) }
    dend_26 { pt3dadd( 27.1628, -23.6201, 14.5585, 0.46 ) }
    dend_26 { pt3dadd( 28.1705, -24.4825, 15.4074, 0.46 ) }
    dend_26 { pt3dadd( 29.4538, -25.5759, 16.8194, 0.68 ) }
    dend_26 { pt3dadd( 30.3904, -26.4105, 18.1107, 0.68 ) }
    dend_26 { pt3dadd( 31.3881, -27.2945, 19.6942, 0.68 ) }
    dend_26 { pt3dadd( 32.4906, -28.2324, 21.6586, 0.68 ) }
    dend_26 { pt3dadd( 32.9381, -28.6084, 22.6117, 0.68 ) }
    dend_26 { pt3dadd( 33.1232, -28.7804, 23.1049, 0.46 ) }
    dend_26 { pt3dadd( 33.3759, -29.0489, 24.0369, 0.46 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 27/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.91015, -10.2501, 14.2342, 2.05 ) }
    dend_15 { pt3dadd( 6.05465, -11.7469, 15.5239, 2.05 ) }
    dend_15 { pt3dadd( 6.32372, -13.47, 17.0762, 2.05 ) }
    dend_15 { pt3dadd( 6.51582, -14.7001, 18.1845, 2.05 ) }
    dend_15 { pt3dadd( 6.72992, -16.0712, 19.4197, 2.05 ) }
    dend_15 { pt3dadd( 6.92651, -17.3301, 20.5539, 1.59 ) }
    dend_15 { pt3dadd( 7.12183, -18.5809, 21.6807, 1.59 ) }
    dend_15 { pt3dadd( 7.29428, -19.7516, 22.7544, 1.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 35/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.84228, 10.0928, -22.4246, 0.46 ) }
    dend_12 { pt3dadd( 5.64887, 10.2612, -23.2656, 0.46 ) }
    dend_12 { pt3dadd( 6.72649, 10.4862, -24.3893, 0.46 ) }
    dend_12 { pt3dadd( 8.80877, 10.9209, -26.5605, 0.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 39/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 4.84228, 10.0928, -22.4246, 0.46 ) }
    dend_11 { pt3dadd( 4.32713, 10.5619, -23.8737, 0.46 ) }
    dend_11 { pt3dadd( 3.75489, 11.3094, -25.7085, 0.46 ) }
    dend_11 { pt3dadd( 3.24067, 12.0989, -27.4464, 0.46 ) }
    dend_11 { pt3dadd( 2.6747, 12.9549, -29.3681, 0.46 ) }
    dend_11 { pt3dadd( 2.10559, 13.7517, -31.2885, 0.23 ) }
    dend_11 { pt3dadd( 1.34997, 14.6709, -33.7309, 0.23 ) }
    dend_11 { pt3dadd( 0.936814, 15.1274, -35.041, 0.46 ) }
    dend_11 { pt3dadd( 0.39918, 15.6246, -36.6109, 0.46 ) }
    dend_11 { pt3dadd( -0.440635, 16.2529, -38.8898, 0.46 ) }
    dend_11 { pt3dadd( -1.19766, 16.7327, -40.8535, 0.46 ) }
    dend_11 { pt3dadd( -2.10651, 17.1814, -43.0456, 0.46 ) }
    dend_11 { pt3dadd( -3.03465, 17.5875, -45.0244, 0.46 ) }
    dend_11 { pt3dadd( -3.97835, 18.0065, -47.014, 0.23 ) }
    dend_11 { pt3dadd( -4.76386, 18.4098, -48.6253, 0.46 ) }
    dend_11 { pt3dadd( -5.66015, 19.0284, -50.6034, 0.46 ) }
    dend_11 { pt3dadd( -6.27439, 19.6021, -52.291, 0.46 ) }
    dend_11 { pt3dadd( -7.21855, 20.6159, -55.0776, 0.23 ) }
    dend_11 { pt3dadd( -7.81498, 21.3447, -56.9985, 0.23 ) }
    dend_11 { pt3dadd( -8.09194, 21.7282, -58.0109, 0.46 ) }
    dend_11 { pt3dadd( -8.98799, 23.0911, -61.629, 0.23 ) }
    dend_11 { pt3dadd( -10.0654, 24.9665, -66.6639, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 61/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -18.6634, -0.0400339, -8.23216, 0.68 ) }
    dend_7 { pt3dadd( -20.0993, 0.164622, -8.55156, 0.68 ) }
    dend_7 { pt3dadd( -22.1078, 0.519779, -9.05319, 0.68 ) }
    dend_7 { pt3dadd( -22.9796, 0.696821, -9.26777, 0.68 ) }
    dend_7 { pt3dadd( -23.9391, 0.887737, -9.49712, 0.68 ) }
    dend_7 { pt3dadd( -25.8107, 1.2599, -9.97115, 0.68 ) }
    dend_7 { pt3dadd( -28.3888, 1.79832, -10.6708, 0.46 ) }
    dend_7 { pt3dadd( -30.2276, 2.22936, -11.2753, 0.46 ) }
    dend_7 { pt3dadd( -31.9894, 2.70934, -11.8739, 0.68 ) }
    dend_7 { pt3dadd( -32.6654, 2.89601, -12.115, 0.46 ) }
    dend_7 { pt3dadd( -34.0247, 3.26189, -12.6258, 0.46 ) }
    dend_7 { pt3dadd( -35.1468, 3.51981, -13.1057, 0.91 ) }
    dend_7 { pt3dadd( -37.0071, 3.9647, -14.0164, 0.68 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 74/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -18.6634, -0.0400339, -8.23216, 0.46 ) }
    dend_2 { pt3dadd( -19.9488, -1.21276, -9.53339, 0.46 ) }
    dend_2 { pt3dadd( -20.5455, -1.66293, -10.0821, 0.46 ) }
    dend_2 { pt3dadd( -21.1647, -2.09495, -10.6278, 0.46 ) }
    dend_2 { pt3dadd( -22.3301, -2.88665, -11.5884, 0.46 ) }
    dend_2 { pt3dadd( -23.3625, -3.54253, -12.3455, 0.46 ) }
    dend_2 { pt3dadd( -24.1811, -4.04848, -12.9155, 0.46 ) }
    dend_2 { pt3dadd( -25.2266, -4.62865, -13.5227, 0.46 ) }
    dend_2 { pt3dadd( -26.0935, -5.10148, -14.0153, 0.46 ) }
    dend_2 { pt3dadd( -26.7791, -5.51748, -14.4156, 0.46 ) }
    dend_2 { pt3dadd( -27.8493, -6.20427, -15.039, 0.23 ) }
    dend_2 { pt3dadd( -29.2529, -7.16205, -15.8324, 0.23 ) }
    dend_2 { pt3dadd( -29.8053, -7.56463, -16.1475, 0.46 ) }
    dend_2 { pt3dadd( -30.8659, -8.39462, -16.7642, 0.68 ) }
    dend_2 { pt3dadd( -31.9418, -9.25823, -17.4143, 0.46 ) }
    dend_2 { pt3dadd( -32.8185, -10.001, -18.0014, 0.46 ) }
    dend_2 { pt3dadd( -33.8753, -11.0138, -18.7962, 0.68 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 91/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 23.2814, 14.6673, -10.3219, 0.46 ) }
    dend_47 { pt3dadd( 23.8901, 15.6646, -10.8864, 0.46 ) }
    dend_47 { pt3dadd( 24.3213, 16.3712, -11.2863, 0.46 ) }
    dend_47 { pt3dadd( 25.0007, 17.4845, -11.9165, 0.68 ) }
    dend_47 { pt3dadd( 26.1437, 19.3574, -12.9765, 0.46 ) }
    dend_47 { pt3dadd( 26.7538, 20.3571, -13.5424, 0.68 ) }
    dend_47 { pt3dadd( 27.5222, 21.6163, -14.2551, 0.68 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 98/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 23.2814, 14.6673, -10.3219, 0.23 ) }
    dend_46 { pt3dadd( 24.8426, 15.569, -9.64899, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_46 { pt3dadd( 25.8991, 16.1863, -9.23158, 0.68 ) }
    dend_46 { pt3dadd( 27.5031, 17.1605, -8.66238, 0.23 ) }
    dend_46 { pt3dadd( 28.8167, 17.9532, -8.24409, 0.23 ) }
    dend_46 { pt3dadd( 29.9141, 18.6251, -7.92512, 0.46 ) }
    dend_46 { pt3dadd( 31.472, 19.5671, -7.5265, 0.23 ) }
    dend_46 { pt3dadd( 33.9881, 21.0764, -6.96706, 0.23 ) }
    dend_46 { pt3dadd( 35.5111, 21.9986, -6.68243, 0.23 ) }
    dend_46 { pt3dadd( 36.9732, 22.8813, -6.45747, 0.46 ) }
    dend_46 { pt3dadd( 38.0552, 23.5292, -6.3287, 0.46 ) }
    dend_46 { pt3dadd( 40.1606, 24.807, -6.12454, 0.23 ) }
    dend_46 { pt3dadd( 41.7699, 25.8172, -5.97418, 0.46 ) }
    dend_46 { pt3dadd( 43.7811, 27.0114, -5.83742, 0.23 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 12/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 36.3204, 15.6888, -36.5335, 0.46 ) }
    dend_43 { pt3dadd( 37.5988, 14.5981, -38.5086, 0.46 ) }
    dend_43 { pt3dadd( 38.9754, 13.5827, -40.386, 0.46 ) }
    dend_43 { pt3dadd( 39.8084, 13.0964, -41.3812, 0.46 ) }
    dend_43 { pt3dadd( 40.8121, 12.5764, -42.5543, 0.46 ) }
    dend_43 { pt3dadd( 42.056, 11.9773, -43.9727, 0.23 ) }
    dend_43 { pt3dadd( 43.5536, 11.328, -45.6253, 0.46 ) }
    dend_43 { pt3dadd( 45.1866, 10.717, -47.2895, 0.46 ) }
    dend_43 { pt3dadd( 47.6828, 9.97645, -49.62, 0.23 ) }
    dend_43 { pt3dadd( 49.1879, 9.61308, -50.9494, 0.23 ) }
    dend_43 { pt3dadd( 49.5299, 9.54642, -51.2519, 0.23 ) }
    dend_43 { pt3dadd( 51.2298, 9.29192, -52.7948, 0.46 ) }
    dend_43 { pt3dadd( 52.876, 9.0262, -54.2835, 0.23 ) }
    dend_43 { pt3dadd( 53.7463, 8.88194, -55.0634, 0.23 ) }
    dend_43 { pt3dadd( 54.6652, 8.71111, -55.9369, 0.46 ) }
    dend_43 { pt3dadd( 56.2657, 8.37656, -57.5214, 0.23 ) }
    dend_43 { pt3dadd( 58.6106, 7.85984, -59.879, 0.23 ) }
    dend_43 { pt3dadd( 60.3742, 7.48098, -61.7179, 0.23 ) }
    dend_43 { pt3dadd( 61.187, 7.33623, -62.6011, 0.46 ) }
    dend_43 { pt3dadd( 62.8577, 7.07372, -64.4707, 0.23 ) }
    dend_43 { pt3dadd( 64.2252, 6.95361, -66.049, 0.23 ) }
    dend_43 { pt3dadd( 64.9704, 6.94333, -66.9641, 0.46 ) }
    dend_43 { pt3dadd( 66.7223, 7.08271, -69.3153, 0.23 ) }
    dend_43 { pt3dadd( 68.5333, 7.34691, -71.8022, 0.23 ) }
    dend_43 { pt3dadd( 68.9258, 7.41757, -72.3592, 0.46 ) }
    dend_43 { pt3dadd( 70.479, 7.77401, -74.5753, 0.23 ) }
    dend_43 { pt3dadd( 72.2905, 8.28113, -77.3742, 0.23 ) }
    dend_43 { pt3dadd( 73.6233, 8.66125, -79.6427, 0.23 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 40/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 36.3204, 15.6888, -36.5335, 0.46 ) }
    dend_40 { pt3dadd( 38.1214, 15.6707, -36.7212, 0.46 ) }
    dend_40 { pt3dadd( 41.4492, 15.6375, -37.0681, 0.23 ) }
    dend_40 { pt3dadd( 42.9407, 15.6226, -37.2235, 0.23 ) }
    dend_40 { pt3dadd( 44.5579, 15.6064, -37.3921, 0.68 ) }
    dend_40 { pt3dadd( 45.4684, 15.5973, -37.487, 0.23 ) }
    dend_40 { pt3dadd( 46.8611, 15.5834, -37.6322, 0.46 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 47/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 17.6455, 14.5525, -16.7941, 0.46 ) }
    dend_38 { pt3dadd( 18.396, 15.0229, -18.8682, 0.46 ) }
    dend_38 { pt3dadd( 18.9799, 15.5077, -20.6011, 0.46 ) }
    dend_38 { pt3dadd( 19.5982, 16.0851, -22.6495, 0.46 ) }
    dend_38 { pt3dadd( 20.166, 16.7155, -24.9206, 0.68 ) }
    dend_38 { pt3dadd( 20.6892, 17.3643, -27.3211, 0.46 ) }
    dend_38 { pt3dadd( 20.8545, 17.5742, -28.1379, 0.68 ) }
    dend_38 { pt3dadd( 21.3771, 18.2977, -31.0517, 0.23 ) }
    dend_38 { pt3dadd( 21.92, 19.0013, -34.2831, 0.46 ) }
    dend_38 { pt3dadd( 22.3457, 19.4646, -37.0918, 0.46 ) }
    dend_38 { pt3dadd( 22.7523, 19.8124, -40.1567, 0.46 ) }
    dend_38 { pt3dadd( 22.9615, 19.8916, -42.1749, 0.46 ) }
    dend_38 { pt3dadd( 23.1336, 19.8062, -44.9261, 0.46 ) }
    dend_38 { pt3dadd( 23.1385, 19.6149, -46.5517, 0.68 ) }
    dend_38 { pt3dadd( 22.9669, 19.0639, -49.486, 0.68 ) }
    dend_38 { pt3dadd( 22.8585, 18.8148, -50.4496, 0.46 ) }
    dend_38 { pt3dadd( 22.3771, 17.9056, -53.5001, 0.46 ) }
    dend_38 { pt3dadd( 21.7111, 16.8621, -56.7547, 0.23 ) }
    dend_38 { pt3dadd( 21.0814, 16.0335, -59.1983, 0.23 ) }
    dend_38 { pt3dadd( 20.3338, 15.1835, -61.7275, 0.23 ) }
    dend_38 { pt3dadd( 19.7062, 14.5133, -63.7116, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 68/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 17.6455, 14.5525, -16.7941, 0.23 ) }
    dend_37 { pt3dadd( 18.1901, 16.9343, -17.625, 0.23 ) }
    dend_37 { pt3dadd( 18.4835, 18.419, -18.2695, 0.23 ) }
    dend_37 { pt3dadd( 18.7257, 19.8138, -18.9284, 0.46 ) }
    dend_37 { pt3dadd( 19.0061, 21.883, -19.894, 0.46 ) }
    dend_37 { pt3dadd( 19.1854, 23.2564, -20.5593, 0.46 ) }
    dend_37 { pt3dadd( 19.4049, 24.745, -21.3137, 0.68 ) }
    dend_37 { pt3dadd( 19.6332, 26.6417, -22.4117, 0.46 ) }
    dend_37 { pt3dadd( 19.7362, 27.7585, -23.1308, 0.46 ) }
    dend_37 { pt3dadd( 19.8806, 29.0265, -24.0262, 0.68 ) }
    dend_37 { pt3dadd( 20.1033, 30.5005, -25.1457, 0.68 ) }
    dend_37 { pt3dadd( 20.4032, 32.0785, -26.5047, 0.46 ) }
    dend_37 { pt3dadd( 20.7964, 33.5109, -27.9293, 0.46 ) }
    dend_37 { pt3dadd( 21.4095, 35.0058, -29.6043, 0.46 ) }
    dend_37 { pt3dadd( 22.2258, 36.4072, -31.2987, 0.46 ) }
    dend_37 { pt3dadd( 23.1182, 37.774, -33.0588, 0.46 ) }
    dend_37 { pt3dadd( 24.2509, 39.356, -35.1884, 0.46 ) }
    dend_37 { pt3dadd( 25.7582, 41.1838, -37.8045, 0.23 ) }
    dend_37 { pt3dadd( 26.882, 42.2888, -39.4866, 0.23 ) }
    dend_37 { pt3dadd( 28.3559, 43.4764, -41.4162, 0.46 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 88/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 19.6297, -39.2782, -32.2386, 0.46 ) }
    dend_33 { pt3dadd( 20.2045, -40.1696, -34.1124, 0.46 ) }
    dend_33 { pt3dadd( 20.7966, -40.9945, -35.8603, 0.46 ) }
    dend_33 { pt3dadd( 21.2652, -41.5758, -37.1035, 0.46 ) }
    dend_33 { pt3dadd( 21.8062, -42.1765, -38.4674, 0.46 ) }
    dend_33 { pt3dadd( 22.8724, -43.1708, -40.841, 0.46 ) }
    dend_33 { pt3dadd( 23.8911, -44.1209, -43.1093, 0.46 ) }
    dend_33 { pt3dadd( 24.4974, -44.6071, -44.3416, 0.46 ) }
    dend_33 { pt3dadd( 24.8018, -44.8308, -44.9306, 0.46 ) }
    dend_33 { pt3dadd( 25.7563, -45.4991, -46.8715, 0.46 ) }
    dend_33 { pt3dadd( 26.5341, -45.9936, -48.2762, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 99/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 19.6297, -39.2782, -32.2386, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_32 { pt3dadd( 20.3834, -37.999, -33.5863, 0.46 ) }
    dend_32 { pt3dadd( 20.8794, -37.0604, -34.5885, 0.46 ) }
    dend_32 { pt3dadd( 21.4517, -35.8751, -35.8006, 0.46 ) }
    dend_32 { pt3dadd( 22.1761, -34.3634, -37.38, 0.46 ) }
    dend_32 { pt3dadd( 22.7906, -33.0461, -38.7889, 0.46 ) }
    dend_32 { pt3dadd( 23.4511, -31.5982, -40.3737, 0.46 ) }
    dend_32 { pt3dadd( 24.0826, -30.2108, -41.9374, 0.46 ) }
    dend_32 { pt3dadd( 24.4079, -29.4349, -42.8335, 0.68 ) }
    dend_32 { pt3dadd( 24.9802, -27.9671, -44.6292, 0.46 ) }
    dend_32 { pt3dadd( 25.5704, -26.5288, -46.5427, 0.46 ) }
    dend_32 { pt3dadd( 26.0809, -25.3981, -48.2073, 0.68 ) }
    dend_32 { pt3dadd( 26.5557, -24.3908, -49.8473, 0.46 ) }
    dend_32 { pt3dadd( 27.1245, -23.1953, -52.0073, 0.68 ) }
    dend_32 { pt3dadd( 27.514, -22.2712, -53.8316, 0.68 ) }
    dend_32 { pt3dadd( 27.7708, -21.4597, -55.4885, 0.68 ) }
    dend_32 { pt3dadd( 28.0989, -20.2923, -57.9122, 0.68 ) }
    dend_32 { pt3dadd( 28.2255, -19.6561, -59.2345, 0.68 ) }
    dend_32 { pt3dadd( 28.3246, -18.8318, -60.865, 0.68 ) }
    dend_32 { pt3dadd( 28.4051, -18.1824, -62.0728, 0.68 ) }
    dend_32 { pt3dadd( 28.5637, -17.3047, -63.5845, 1.14 ) }
    dend_32 { pt3dadd( 28.8704, -16.268, -65.2555, 0.46 ) }
    dend_32 { pt3dadd( 29.8083, -14.6519, -67.8077, 0.46 ) }
    dend_32 { pt3dadd( 30.3244, -14.2739, -68.427, 0.46 ) }
    dend_32 { pt3dadd( 31.8939, -13.3901, -69.9026, 0.46 ) }
    dend_32 { pt3dadd( 32.958, -12.9389, -70.7052, 0.46 ) }
    dend_32 { pt3dadd( 34.3768, -12.5343, -71.5417, 0.46 ) }
    dend_32 { pt3dadd( 36.3452, -12.204, -72.4166, 0.46 ) }
    dend_32 { pt3dadd( 40.9212, -11.8147, -73.7572, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 28/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 33.3759, -29.0489, 24.0369, 0.23 ) }
    dend_28 { pt3dadd( 34.6474, -30.1414, 24.7923, 0.23 ) }
    dend_28 { pt3dadd( 35.7366, -31.1248, 25.4163, 0.23 ) }
    dend_28 { pt3dadd( 36.6403, -32.0425, 25.9609, 0.68 ) }
    dend_28 { pt3dadd( 37.8012, -33.3588, 26.7262, 0.68 ) }
    dend_28 { pt3dadd( 39.1339, -35.0346, 27.6648, 0.46 ) }
    dend_28 { pt3dadd( 40.0692, -36.3223, 28.3889, 0.46 ) }
    dend_28 { pt3dadd( 40.4818, -37.0308, 28.7922, 0.46 ) }
    dend_28 { pt3dadd( 41.1415, -38.3942, 29.5258, 0.46 ) }
    dend_28 { pt3dadd( 41.5308, -39.3359, 30.0079, 0.68 ) }
    dend_28 { pt3dadd( 42.0967, -40.8194, 30.74, 0.46 ) }
    dend_28 { pt3dadd( 42.7341, -42.5847, 31.6136, 0.68 ) }
    dend_28 { pt3dadd( 43.3578, -44.3595, 32.4853, 0.46 ) }
    dend_28 { pt3dadd( 43.936, -46.08, 33.2744, 0.46 ) }
    dend_28 { pt3dadd( 44.6101, -48.116, 34.0912, 0.23 ) }
    dend_28 { pt3dadd( 45.2699, -50.1928, 34.7839, 0.68 ) }
    dend_28 { pt3dadd( 45.7343, -51.6413, 35.1816, 0.68 ) }
    dend_28 { pt3dadd( 46.4533, -53.7746, 35.6318, 0.46 ) }
    dend_28 { pt3dadd( 47.2438, -56.0016, 36.0445, 0.46 ) }
    dend_28 { pt3dadd( 47.6967, -57.2859, 36.2701, 0.23 ) }
    dend_28 { pt3dadd( 48.4072, -59.292, 36.64, 0.23 ) }
    dend_28 { pt3dadd( 49.2502, -61.5892, 37.1496, 0.23 ) }
    dend_28 { pt3dadd( 49.7777, -62.9614, 37.5551, 0.68 ) }
    dend_28 { pt3dadd( 50.4719, -64.7706, 38.2239, 0.23 ) }
    dend_28 { pt3dadd( 50.9195, -65.9052, 38.7633, 0.46 ) }
    dend_28 { pt3dadd( 51.5746, -67.6247, 39.7039, 0.23 ) }
    dend_28 { pt3dadd( 52.3115, -69.6734, 40.9442, 0.23 ) }
    dend_28 { pt3dadd( 52.6829, -70.8427, 41.7384, 0.46 ) }
    dend_28 { pt3dadd( 53.1683, -72.431, 42.8541, 0.23 ) }
    dend_28 { pt3dadd( 53.6744, -74.074, 44.0136, 0.23 ) }
    dend_28 { pt3dadd( 54.0761, -75.3603, 44.9434, 0.46 ) }
    dend_28 { pt3dadd( 54.4608, -76.6791, 45.9152, 0.23 ) }
    dend_28 { pt3dadd( 54.9729, -78.573, 47.3975, 0.23 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 61/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 33.3759, -29.0489, 24.0369, 0.23 ) }
    dend_27 { pt3dadd( 33.388, -29.7572, 25.0123, 0.23 ) }
    dend_27 { pt3dadd( 33.3386, -30.9136, 26.5185, 0.23 ) }
    dend_27 { pt3dadd( 33.1825, -32.3815, 28.2837, 0.23 ) }
    dend_27 { pt3dadd( 33.022, -33.8913, 30.0992, 0.23 ) }
    dend_27 { pt3dadd( 32.9613, -34.4633, 30.7872, 0.46 ) }
    dend_27 { pt3dadd( 32.8223, -35.7693, 32.3576, 0.23 ) }
    dend_27 { pt3dadd( 32.709, -37.1228, 33.9053, 0.23 ) }
    dend_27 { pt3dadd( 32.528, -38.6815, 35.5921, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 70/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 7.29428, -19.7516, 22.7544, 0.91 ) }
    dend_23 { pt3dadd( 7.34826, -21.1627, 22.5517, 0.91 ) }
    dend_23 { pt3dadd( 7.30022, -22.7646, 22.3312, 0.91 ) }
    dend_23 { pt3dadd( 7.24086, -24.2809, 22.1369, 0.91 ) }
    dend_23 { pt3dadd( 7.15447, -26.4874, 21.8542, 0.91 ) }
    dend_23 { pt3dadd( 7.1194, -27.3831, 21.7394, 0.91 ) }
    dend_23 { pt3dadd( 7.02282, -29.8497, 21.4234, 0.91 ) }
    dend_23 { pt3dadd( 6.89931, -31.4146, 21.261, 0.91 ) }
    dend_23 { pt3dadd( 6.75007, -32.6998, 21.1443, 0.91 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 79/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.29428, -19.7516, 22.7544, 1.82 ) }
    dend_16 { pt3dadd( 7.48896, -21.0514, 24.431, 1.82 ) }
    dend_16 { pt3dadd( 7.68576, -22.3653, 26.1259, 1.82 ) }
    dend_16 { pt3dadd( 7.83932, -23.3905, 27.4483, 1.82 ) }
    dend_16 { pt3dadd( 8.04568, -24.7682, 29.2256, 1.82 ) }
    dend_16 { pt3dadd( 8.18063, -25.6692, 30.3878, 1.82 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -37.0071, 3.9647, -14.0164, 0.23 ) }
    dend_9 { pt3dadd( -38.9146, 4.35356, -14.9508, 0.23 ) }
    dend_9 { pt3dadd( -40.5252, 4.63608, -15.7535, 0.68 ) }
    dend_9 { pt3dadd( -42.4865, 4.85434, -16.7396, 0.46 ) }
    dend_9 { pt3dadd( -44.134, 5.0043, -17.5605, 0.68 ) }
    dend_9 { pt3dadd( -45.5836, 5.16402, -18.24, 0.68 ) }
    dend_9 { pt3dadd( -46.9863, 5.35837, -18.8534, 0.46 ) }
    dend_9 { pt3dadd( -48.5424, 5.60536, -19.4639, 0.46 ) }
    dend_9 { pt3dadd( -50.3974, 5.95196, -20.1018, 0.46 ) }
    dend_9 { pt3dadd( -52.3106, 6.41025, -20.6642, 0.46 ) }
    dend_9 { pt3dadd( -54.5074, 7.05436, -21.2412, 0.23 ) }
    dend_9 { pt3dadd( -56.0186, 7.55606, -21.5643, 0.23 ) }
    dend_9 { pt3dadd( -57.1999, 8.03504, -21.7592, 0.23 ) }
    dend_9 { pt3dadd( -58.2681, 8.53141, -21.8977, 0.68 ) }
    dend_9 { pt3dadd( -59.4513, 9.16863, -22.0262, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_9 { pt3dadd( -60.4987, 9.72427, -22.1087, 0.23 ) }
    dend_9 { pt3dadd( -62.1774, 10.5452, -22.2217, 0.23 ) }
    dend_9 { pt3dadd( -63.6689, 11.2102, -22.3014, 0.23 ) }
    dend_9 { pt3dadd( -65.8114, 12.0845, -22.3838, 0.68 ) }
    dend_9 { pt3dadd( -67.6762, 12.8034, -22.4474, 0.23 ) }
    dend_9 { pt3dadd( -69.9052, 13.6003, -22.5586, 0.23 ) }
    dend_9 { pt3dadd( -71.4202, 14.1316, -22.651, 0.46 ) }
    dend_9 { pt3dadd( -73.6444, 14.9106, -22.8443, 0.23 ) }
    dend_9 { pt3dadd( -75.8652, 15.6414, -23.0927, 0.23 ) }
    dend_9 { pt3dadd( -77.8018, 16.2619, -23.4033, 0.23 ) }
    dend_9 { pt3dadd( -79.4231, 16.7729, -23.7544, 0.23 ) }
    dend_9 { pt3dadd( -80.9738, 17.3372, -24.2232, 0.46 ) }
    dend_9 { pt3dadd( -83.3747, 18.3483, -25.1557, 0.23 ) }
    dend_9 { pt3dadd( -84.5274, 18.9047, -25.7329, 0.46 ) }
    dend_9 { pt3dadd( -85.937, 19.6901, -26.5938, 0.23 ) }
    dend_9 { pt3dadd( -86.646, 20.1355, -27.1024, 0.46 ) }
    dend_9 { pt3dadd( -88.1237, 21.2097, -28.3576, 0.23 ) }
    dend_9 { pt3dadd( -89.0435, 21.9622, -29.3367, 0.46 ) }
    dend_9 { pt3dadd( -90.0154, 22.8829, -30.6836, 0.23 ) }
    dend_9 { pt3dadd( -90.5819, 23.4867, -31.6766, 0.46 ) }
    dend_9 { pt3dadd( -91.4839, 24.4775, -33.4297, 0.23 ) }
    dend_9 { pt3dadd( -92.4281, 25.4545, -35.402, 0.46 ) }
    dend_9 { pt3dadd( -93.588, 26.544, -37.9103, 0.46 ) }
    dend_9 { pt3dadd( -94.955, 27.6327, -40.778, 0.46 ) }
    dend_9 { pt3dadd( -96.7801, 28.8612, -44.5211, 0.46 ) }
    dend_9 { pt3dadd( -97.7543, 29.3947, -46.4314, 0.46 ) }
    dend_9 { pt3dadd( -98.7232, 29.8138, -48.2003, 0.46 ) }
    dend_9 { pt3dadd( -99.5866, 30.0936, -49.6048, 0.46 ) }
    dend_9 { pt3dadd( -100.818, 30.4299, -51.444, 0.46 ) }
    dend_9 { pt3dadd( -101.984, 30.6936, -53.0469, 0.46 ) }
    dend_9 { pt3dadd( -103.788, 31.0833, -55.4702, 0.23 ) }
    dend_9 { pt3dadd( -104.933, 31.3888, -57.0489, 0.46 ) }
    dend_9 { pt3dadd( -106.616, 31.9267, -59.4001, 0.23 ) }
    dend_9 { pt3dadd( -107.829, 32.317, -61.0373, 0.23 ) }
    dend_9 { pt3dadd( -108.812, 32.6238, -62.2803, 0.23 ) }
    dend_9 { pt3dadd( -109.743, 32.8534, -63.2567, 0.23 ) }
    dend_9 { pt3dadd( -111.386, 33.1319, -64.6219, 0.23 ) }
    dend_9 { pt3dadd( -113.588, 33.3836, -66.0186, 0.23 ) }
    dend_9 { pt3dadd( -115.406, 33.5008, -66.886, 0.23 ) }
    dend_9 { pt3dadd( -117.804, 33.5646, -67.7754, 0.23 ) }
    dend_9 { pt3dadd( -119.769, 33.5585, -68.3602, 0.46 ) }
    dend_9 { pt3dadd( -121.125, 33.5246, -68.6982, 0.46 ) }
    dend_9 { pt3dadd( -123.53, 33.4393, -69.1995, 0.46 ) }
    dend_9 { pt3dadd( -125.345, 33.4015, -69.5284, 0.23 ) }
    dend_9 { pt3dadd( -126.499, 33.3706, -69.7557, 0.46 ) }
    dend_9 { pt3dadd( -127.95, 33.283, -70.0078, 0.23 ) }
    dend_9 { pt3dadd( -129.653, 33.11, -70.3286, 0.23 ) }
    dend_9 { pt3dadd( -131.0, 32.9327, -70.6199, 0.46 ) }
    dend_9 { pt3dadd( -133.869, 32.4669, -71.2729, 0.23 ) }
    dend_9 { pt3dadd( -138.17, 31.6708, -72.2317, 0.23 ) }
    dend_9 { pt3dadd( -139.537, 31.3893, -72.5484, 0.46 ) }
    dend_9 { pt3dadd( -143.165, 30.5211, -73.4298, 0.23 ) }
    dend_9 { pt3dadd( -145.427, 29.914, -73.9941, 0.23 ) }
    dend_9 { pt3dadd( -146.529, 29.5843, -74.2905, 0.46 ) }
    dend_9 { pt3dadd( -148.616, 28.8812, -74.9109, 0.23 ) }
    dend_9 { pt3dadd( -150.035, 28.3715, -75.3613, 0.23 ) }
    dend_9 { pt3dadd( -150.981, 28.0403, -75.6525, 0.46 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 57/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -37.0071, 3.9647, -14.0164, 0.23 ) }
    dend_8 { pt3dadd( -38.7389, 4.67414, -13.0535, 0.23 ) }
    dend_8 { pt3dadd( -40.4569, 5.41967, -12.0213, 0.23 ) }
    dend_8 { pt3dadd( -41.8032, 6.0395, -11.1894, 0.46 ) }
    dend_8 { pt3dadd( -42.9095, 6.60242, -10.4802, 0.23 ) }
    dend_8 { pt3dadd( -44.2024, 7.34915, -9.60292, 0.46 ) }
    dend_8 { pt3dadd( -46.0718, 8.53364, -8.29608, 0.23 ) }
    dend_8 { pt3dadd( -47.3909, 9.53439, -7.36069, 0.23 ) }
    dend_8 { pt3dadd( -48.583, 10.5446, -6.45502, 0.68 ) }
    dend_8 { pt3dadd( -49.5862, 11.456, -5.63116, 0.68 ) }
    dend_8 { pt3dadd( -50.8675, 12.5836, -4.64812, 0.46 ) }
    dend_8 { pt3dadd( -52.2373, 13.7185, -3.7296, 0.46 ) }
    dend_8 { pt3dadd( -53.632, 14.7817, -2.95253, 0.46 ) }
    dend_8 { pt3dadd( -55.0279, 15.7322, -2.315, 0.46 ) }
    dend_8 { pt3dadd( -56.3947, 16.5292, -1.81292, 0.46 ) }
    dend_8 { pt3dadd( -59.0101, 17.8595, -1.01202, 0.23 ) }
    dend_8 { pt3dadd( -60.4562, 18.5165, -0.646329, 0.46 ) }
    dend_8 { pt3dadd( -62.4855, 19.373, -0.19372, 0.23 ) }
    dend_8 { pt3dadd( -64.9745, 20.3482, 0.287358, 0.23 ) }
    dend_8 { pt3dadd( -66.9478, 21.1093, 0.617652, 0.46 ) }
    dend_8 { pt3dadd( -68.5929, 21.7309, 0.877928, 0.23 ) }
    dend_8 { pt3dadd( -69.9596, 22.2753, 1.13355, 0.46 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 79/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -33.8753, -11.0138, -18.7962, 0.23 ) }
    dend_6 { pt3dadd( -35.5712, -12.3982, -18.1589, 0.23 ) }
    dend_6 { pt3dadd( -36.9492, -13.6229, -17.5678, 0.23 ) }
    dend_6 { pt3dadd( -38.2785, -14.8145, -17.0025, 0.23 ) }
    dend_6 { pt3dadd( -39.4773, -15.8779, -16.5375, 0.46 ) }
    dend_6 { pt3dadd( -40.8545, -17.1024, -15.9772, 0.23 ) }
    dend_6 { pt3dadd( -42.654, -18.694, -15.2585, 0.23 ) }
    dend_6 { pt3dadd( -44.133, -20.0323, -14.6803, 0.23 ) }
    dend_6 { pt3dadd( -45.4659, -21.2348, -14.2044, 0.23 ) }
    dend_6 { pt3dadd( -47.2859, -22.915, -13.57, 0.46 ) }
    dend_6 { pt3dadd( -48.9175, -24.4466, -13.0169, 0.23 ) }
    dend_6 { pt3dadd( -50.3433, -25.797, -12.5743, 0.23 ) }
    dend_6 { pt3dadd( -51.4921, -26.859, -12.2764, 0.91 ) }
    dend_6 { pt3dadd( -52.7564, -27.9967, -11.9607, 0.23 ) }
    dend_6 { pt3dadd( -54.0639, -29.2508, -11.6059, 0.68 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 94/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -33.8753, -11.0138, -18.7962, 0.23 ) }
    dend_3 { pt3dadd( -35.5401, -11.2466, -20.6988, 0.23 ) }
    dend_3 { pt3dadd( -36.6367, -11.4895, -22.0583, 0.23 ) }
    dend_3 { pt3dadd( -37.2532, -11.6371, -22.8466, 0.46 ) }
    dend_3 { pt3dadd( -38.4626, -11.989, -24.4505, 0.23 ) }
    dend_3 { pt3dadd( -39.1123, -12.2238, -25.3133, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( -40.0922, -12.6603, -26.6281, 0.46 ) }
    dend_3 { pt3dadd( -41.4336, -13.4541, -28.3444, 0.23 ) }
    dend_3 { pt3dadd( -42.4166, -14.2118, -29.623, 0.23 ) }
    dend_3 { pt3dadd( -43.5563, -15.2013, -31.0452, 0.23 ) }
    dend_3 { pt3dadd( -44.627, -16.237, -32.3121, 0.23 ) }
    dend_3 { pt3dadd( -45.2649, -16.9286, -33.0657, 0.23 ) }
    dend_3 { pt3dadd( -46.2822, -18.1504, -34.2747, 0.46 ) }
    dend_3 { pt3dadd( -47.1055, -19.329, -35.3365, 0.46 ) }
    dend_3 { pt3dadd( -47.5096, -20.0026, -35.9174, 0.46 ) }
    dend_3 { pt3dadd( -48.7053, -22.1138, -37.7146, 0.23 ) }
    dend_3 { pt3dadd( -49.2188, -23.0435, -38.5217, 0.68 ) }
    dend_3 { pt3dadd( -49.8672, -24.2794, -39.6387, 0.46 ) }
    dend_3 { pt3dadd( -50.7457, -26.0338, -41.3172, 0.23 ) }
    dend_3 { pt3dadd( -51.2189, -26.9512, -42.2447, 0.23 ) }
    dend_3 { pt3dadd( -51.5712, -27.6538, -43.0152, 0.46 ) }
    dend_3 { pt3dadd( -52.0859, -28.7506, -44.2469, 0.46 ) }
    dend_3 { pt3dadd( -52.7085, -30.1522, -45.8894, 0.46 ) }
    dend_3 { pt3dadd( -53.3796, -31.8617, -48.0261, 0.46 ) }
    dend_3 { pt3dadd( -53.7341, -32.8176, -49.37, 0.46 ) }
    dend_3 { pt3dadd( -54.0476, -33.7279, -50.8563, 0.46 ) }
    dend_3 { pt3dadd( -54.2872, -34.4484, -52.2334, 0.46 ) }
    dend_3 { pt3dadd( -54.5434, -35.1205, -53.8731, 0.46 ) }
    dend_3 { pt3dadd( -54.8233, -35.6384, -55.9157, 0.46 ) }
    dend_3 { pt3dadd( -55.0211, -35.992, -57.6981, 0.46 ) }
    dend_3 { pt3dadd( -55.3031, -36.335, -60.0848, 0.46 ) }
    dend_3 { pt3dadd( -55.5168, -36.4122, -61.5696, 0.46 ) }
    dend_3 { pt3dadd( -55.8629, -36.2772, -63.5798, 0.23 ) }
    dend_3 { pt3dadd( -56.3675, -35.7357, -66.2378, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 28/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 27.5222, 21.6163, -14.2551, 0.46 ) }
    dend_49 { pt3dadd( 27.6517, 22.9457, -14.4042, 0.46 ) }
    dend_49 { pt3dadd( 27.7596, 24.2229, -14.633, 0.46 ) }
    dend_49 { pt3dadd( 27.9107, 25.9958, -14.9782, 0.46 ) }
    dend_49 { pt3dadd( 28.0253, 27.1726, -15.2087, 0.46 ) }
    dend_49 { pt3dadd( 28.2349, 29.0099, -15.6284, 0.68 ) }
    dend_49 { pt3dadd( 28.499, 30.9987, -16.1636, 0.23 ) }
    dend_49 { pt3dadd( 28.8469, 33.3598, -17.031, 0.23 ) }
    dend_49 { pt3dadd( 29.0211, 34.4619, -17.501, 0.46 ) }
    dend_49 { pt3dadd( 29.2231, 35.6124, -18.0443, 0.23 ) }
    dend_49 { pt3dadd( 29.5118, 37.1154, -18.8163, 0.23 ) }
    dend_49 { pt3dadd( 29.7855, 38.4086, -19.5414, 0.23 ) }
    dend_49 { pt3dadd( 30.2004, 40.1157, -20.6051, 0.23 ) }
    dend_49 { pt3dadd( 30.538, 41.2722, -21.483, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 42/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 27.5222, 21.6163, -14.2551, 0.46 ) }
    dend_48 { pt3dadd( 29.2422, 22.6701, -13.3084, 0.46 ) }
    dend_48 { pt3dadd( 30.6797, 23.6964, -12.396, 0.23 ) }
    dend_48 { pt3dadd( 31.5077, 24.3196, -11.802, 0.46 ) }
    dend_48 { pt3dadd( 32.3611, 24.9989, -11.1533, 0.46 ) }
    dend_48 { pt3dadd( 33.7639, 26.1633, -10.0691, 0.46 ) }
    dend_48 { pt3dadd( 34.8932, 27.1011, -9.13664, 0.46 ) }
    dend_48 { pt3dadd( 36.6924, 28.7042, -7.56939, 0.23 ) }
    dend_48 { pt3dadd( 37.7659, 29.7277, -6.59228, 0.23 ) }
    dend_48 { pt3dadd( 39.0988, 31.0381, -5.32086, 0.23 ) }
    dend_48 { pt3dadd( 40.1171, 32.0236, -4.27155, 0.46 ) }
    dend_48 { pt3dadd( 41.2962, 33.125, -2.98381, 0.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 54/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 46.8611, 15.5834, -37.6322, 0.46 ) }
    dend_42 { pt3dadd( 47.8012, 15.4357, -37.5087, 0.46 ) }
    dend_42 { pt3dadd( 49.7263, 15.172, -37.42, 0.46 ) }
    dend_42 { pt3dadd( 51.1236, 15.0723, -37.4118, 0.46 ) }
    dend_42 { pt3dadd( 52.522, 15.0237, -37.4694, 0.23 ) }
    dend_42 { pt3dadd( 54.8069, 15.0313, -37.6069, 0.23 ) }
    dend_42 { pt3dadd( 56.6455, 15.085, -37.7394, 0.23 ) }
    dend_42 { pt3dadd( 58.2303, 15.2189, -37.9196, 0.46 ) }
    dend_42 { pt3dadd( 60.4086, 15.4568, -38.3015, 0.23 ) }
    dend_42 { pt3dadd( 62.7159, 15.7699, -38.8101, 0.46 ) }
    dend_42 { pt3dadd( 64.748, 16.1213, -39.3554, 0.23 ) }
    dend_42 { pt3dadd( 65.8455, 16.3881, -39.7391, 0.46 ) }
    dend_42 { pt3dadd( 67.3214, 16.7939, -40.2767, 0.23 ) }
    dend_42 { pt3dadd( 69.0528, 17.3132, -41.0351, 0.23 ) }
    dend_42 { pt3dadd( 70.253, 17.6953, -41.7035, 0.23 ) }
    dend_42 { pt3dadd( 71.0161, 18.0034, -42.2614, 0.23 ) }
    dend_42 { pt3dadd( 72.4569, 18.6784, -43.7527, 0.23 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 71/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 46.8611, 15.5834, -37.6322, 0.46 ) }
    dend_41 { pt3dadd( 47.6003, 15.4599, -39.2764, 0.46 ) }
    dend_41 { pt3dadd( 48.3346, 15.405, -40.9224, 0.68 ) }
    dend_41 { pt3dadd( 50.0368, 15.3369, -44.6445, 0.46 ) }
    dend_41 { pt3dadd( 50.7089, 15.3696, -46.1568, 0.68 ) }
    dend_41 { pt3dadd( 51.7522, 15.4668, -48.4808, 0.46 ) }
    dend_41 { pt3dadd( 52.6558, 15.5818, -50.5289, 0.46 ) }
    dend_41 { pt3dadd( 53.5118, 15.7312, -52.3274, 0.46 ) }
    dend_41 { pt3dadd( 54.9407, 15.9832, -55.0726, 0.46 ) }
    dend_41 { pt3dadd( 56.32, 16.1918, -57.5723, 0.46 ) }
    dend_41 { pt3dadd( 57.7508, 16.3048, -60.0393, 0.46 ) }
    dend_41 { pt3dadd( 59.7662, 16.4237, -63.4337, 0.46 ) }
    dend_41 { pt3dadd( 61.1445, 16.4568, -65.6894, 0.46 ) }
    dend_41 { pt3dadd( 62.6521, 16.4271, -67.9971, 0.46 ) }
    dend_41 { pt3dadd( 64.0796, 16.3413, -70.0514, 0.46 ) }
    dend_41 { pt3dadd( 65.7181, 16.0862, -72.1747, 0.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 87/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 6.75007, -32.6998, 21.1443, 0.68 ) }
    dend_25 { pt3dadd( 7.02799, -34.1859, 21.674, 0.68 ) }
    dend_25 { pt3dadd( 7.30979, -36.0132, 22.2034, 0.68 ) }
    dend_25 { pt3dadd( 7.73762, -38.7575, 22.8601, 0.68 ) }
    dend_25 { pt3dadd( 8.15443, -41.4996, 23.4172, 0.68 ) }
    dend_25 { pt3dadd( 8.54867, -44.2701, 23.9183, 0.68 ) }
    dend_25 { pt3dadd( 8.75608, -45.8209, 24.165, 0.68 ) }
    dend_25 { pt3dadd( 9.14417, -48.8269, 24.484, 0.68 ) }
    dend_25 { pt3dadd( 9.44994, -51.4005, 24.6157, 0.68 ) }
    dend_25 { pt3dadd( 9.68936, -54.1238, 24.7103, 0.68 ) }
    dend_25 { pt3dadd( 9.74203, -55.3524, 24.7696, 0.68 ) }
    dend_25 { pt3dadd( 9.73321, -58.0651, 24.9565, 0.46 ) }
    dend_25 { pt3dadd( 9.66884, -59.9341, 25.1347, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_25 { pt3dadd( 9.56139, -61.6326, 25.3146, 0.46 ) }
    dend_25 { pt3dadd( 9.25715, -64.3858, 25.5543, 0.46 ) }
    dend_25 { pt3dadd( 9.00471, -66.1901, 25.6433, 0.46 ) }
    dend_25 { pt3dadd( 8.71221, -68.2889, 25.6228, 0.68 ) }
    dend_25 { pt3dadd( 8.48492, -69.7806, 25.47, 0.68 ) }
    dend_25 { pt3dadd( 8.26605, -71.7131, 25.117, 0.46 ) }
    dend_25 { pt3dadd( 8.22488, -73.1317, 24.7808, 0.46 ) }
    dend_25 { pt3dadd( 8.25711, -74.1061, 24.4813, 0.46 ) }
    dend_25 { pt3dadd( 8.36383, -76.2411, 23.7723, 0.46 ) }
    dend_25 { pt3dadd( 8.43131, -78.039, 23.2067, 0.46 ) }
    dend_25 { pt3dadd( 8.48086, -81.0376, 22.4325, 0.46 ) }
    dend_25 { pt3dadd( 8.46558, -83.8748, 21.933, 0.46 ) }
    dend_25 { pt3dadd( 8.42553, -84.9286, 21.8211, 0.46 ) }
    dend_25 { pt3dadd( 8.34749, -85.9514, 21.7858, 0.68 ) }
    dend_25 { pt3dadd( 8.10274, -87.8763, 21.8383, 0.68 ) }
    dend_25 { pt3dadd( 7.76606, -89.631, 21.9759, 0.46 ) }
    dend_25 { pt3dadd( 7.34693, -91.2293, 22.0938, 0.68 ) }
    dend_25 { pt3dadd( 6.81945, -93.0562, 22.187, 0.46 ) }
    dend_25 { pt3dadd( 6.28683, -95.0405, 22.2407, 0.46 ) }
    dend_25 { pt3dadd( 6.07201, -95.9556, 22.2375, 0.46 ) }
    dend_25 { pt3dadd( 5.47214, -98.9524, 22.0725, 0.23 ) }
    dend_25 { pt3dadd( 5.09278, -101.288, 21.8272, 0.46 ) }
    dend_25 { pt3dadd( 4.86213, -103.16, 21.5002, 0.23 ) }
    dend_25 { pt3dadd( 4.74895, -104.628, 21.1759, 0.23 ) }
    dend_25 { pt3dadd( 4.69049, -106.382, 20.7094, 0.68 ) }
    dend_25 { pt3dadd( 4.71411, -108.247, 20.1515, 0.46 ) }
    dend_25 { pt3dadd( 4.8346, -109.97, 19.5904, 0.68 ) }
    dend_25 { pt3dadd( 5.00213, -112.148, 18.9065, 0.37 ) }
    dend_25 { pt3dadd( 5.07977, -113.411, 18.4999, 0.29 ) }
    dend_25 { pt3dadd( 5.11083, -114.368, 18.1838, 0.29 ) }
    dend_25 { pt3dadd( 5.10875, -115.474, 17.831, 0.29 ) }
    dend_25 { pt3dadd( 5.07628, -116.805, 17.4572, 0.44 ) }
    dend_25 { pt3dadd( 5.00135, -118.493, 17.0468, 0.22 ) }
    dend_25 { pt3dadd( 4.92978, -120.051, 16.7828, 0.29 ) }
    dend_25 { pt3dadd( 4.8845, -121.225, 16.5782, 0.59 ) }
    dend_25 { pt3dadd( 4.85379, -122.548, 16.3623, 0.59 ) }
    dend_25 { pt3dadd( 4.85181, -123.135, 16.2795, 0.59 ) }
    dend_25 { pt3dadd( 4.8685, -124.371, 16.1096, 0.44 ) }
    dend_25 { pt3dadd( 4.92114, -127.122, 15.7643, 0.44 ) }
    dend_25 { pt3dadd( 4.92426, -128.768, 15.5977, 0.44 ) }
    dend_25 { pt3dadd( 4.88684, -129.69, 15.5099, 0.15 ) }
    dend_25 { pt3dadd( 4.82497, -130.308, 15.438, 0.37 ) }
    dend_25 { pt3dadd( 4.64842, -131.374, 15.2918, 0.15 ) }
    dend_25 { pt3dadd( 4.45999, -132.158, 15.1709, 0.15 ) }
    dend_25 { pt3dadd( 4.17751, -133.036, 15.0125, 0.15 ) }
    dend_25 { pt3dadd( 3.73475, -134.211, 14.7801, 0.73 ) }
    dend_25 { pt3dadd( 3.16049, -135.558, 14.4865, 0.37 ) }
    dend_25 { pt3dadd( 2.56818, -136.799, 14.2076, 0.29 ) }
    dend_25 { pt3dadd( 2.15471, -137.607, 14.0342, 0.15 ) }
    dend_25 { pt3dadd( 1.53704, -138.768, 13.8123, 0.51 ) }
    dend_25 { pt3dadd( 1.01438, -139.719, 13.6383, 0.22 ) }
    dend_25 { pt3dadd( 0.196413, -141.166, 13.4063, 0.15 ) }
    dend_25 { pt3dadd( -0.385008, -142.186, 13.2325, 0.15 ) }
    dend_25 { pt3dadd( -1.17327, -143.596, 12.9631, 0.44 ) }
    dend_25 { pt3dadd( -1.84462, -144.85, 12.7106, 0.15 ) }
    dend_25 { pt3dadd( -2.4671, -146.077, 12.4669, 0.44 ) }
    dend_25 { pt3dadd( -2.9977, -147.24, 12.2341, 0.15 ) }
    dend_25 { pt3dadd( -3.43635, -148.346, 11.9988, 0.15 ) }
    dend_25 { pt3dadd( -3.84437, -149.612, 11.7163, 0.44 ) }
    dend_25 { pt3dadd( -4.17178, -150.9, 11.4252, 0.29 ) }
    dend_25 { pt3dadd( -4.3074, -151.628, 11.2782, 0.29 ) }
    dend_25 { pt3dadd( -4.41787, -152.454, 11.1225, 0.29 ) }
    dend_25 { pt3dadd( -4.49806, -153.359, 10.9631, 0.66 ) }
    dend_25 { pt3dadd( -4.56983, -154.693, 10.6987, 0.22 ) }
    dend_25 { pt3dadd( -4.5841, -155.246, 10.5728, 0.22 ) }
    dend_25 { pt3dadd( -4.59349, -156.217, 10.3459, 0.22 ) }
    dend_25 { pt3dadd( -4.61604, -157.637, 10.0161, 0.22 ) }
    dend_25 { pt3dadd( -4.67464, -159.371, 9.58842, 0.73 ) }
    dend_25 { pt3dadd( -4.80699, -161.583, 9.03446, 0.29 ) }
    dend_25 { pt3dadd( -4.98143, -163.365, 8.58138, 0.07 ) }
    dend_25 { pt3dadd( -5.11261, -164.475, 8.26812, 0.22 ) }
    dend_25 { pt3dadd( -5.27206, -165.65, 7.92906, 0.22 ) }
    dend_25 { pt3dadd( -5.3808, -166.422, 7.7224, 0.22 ) }
    dend_25 { pt3dadd( -5.5052, -167.251, 7.50863, 0.37 ) }
    dend_25 { pt3dadd( -5.66416, -168.386, 7.27779, 0.15 ) }
    dend_25 { pt3dadd( -5.81346, -169.642, 6.98776, 0.88 ) }
    dend_25 { pt3dadd( -6.00759, -171.723, 6.49744, 0.29 ) }
    dend_25 { pt3dadd( -6.08403, -172.802, 6.22927, 0.29 ) }
    dend_25 { pt3dadd( -6.14537, -173.791, 5.99483, 0.51 ) }
    dend_25 { pt3dadd( -6.24547, -175.133, 5.65959, 0.29 ) }
    dend_25 { pt3dadd( -6.35575, -176.575, 5.27191, 0.73 ) }
    dend_25 { pt3dadd( -6.42195, -177.39, 5.04293, 0.44 ) }
    dend_25 { pt3dadd( -6.54285, -178.817, 4.52323, 0.29 ) }
    dend_25 { pt3dadd( -6.64691, -179.965, 4.05321, 0.15 ) }
    dend_25 { pt3dadd( -6.75524, -181.194, 3.45075, 0.51 ) }
    dend_25 { pt3dadd( -6.83921, -182.401, 2.81627, 0.15 ) }
    dend_25 { pt3dadd( -6.88014, -183.525, 2.26247, 0.15 ) }
    dend_25 { pt3dadd( -6.88291, -185.343, 1.44131, 0.15 ) }
    dend_25 { pt3dadd( -6.87045, -185.632, 1.32207, 0.51 ) }
    dend_25 { pt3dadd( -6.6944, -187.511, 0.619797, 0.22 ) }
    dend_25 { pt3dadd( -6.48609, -188.84, 0.203509, 0.22 ) }
    dend_25 { pt3dadd( -6.18539, -190.302, -0.158393, 0.22 ) }
    dend_25 { pt3dadd( -5.81851, -191.661, -0.416223, 0.22 ) }
    dend_25 { pt3dadd( -5.51114, -192.634, -0.546972, 0.22 ) }
    dend_25 { pt3dadd( -5.15804, -193.696, -0.662969, 0.22 ) }
    dend_25 { pt3dadd( -4.56535, -195.408, -0.785732, 0.22 ) }
    dend_25 { pt3dadd( -4.15251, -196.59, -0.893907, 0.22 ) }
    dend_25 { pt3dadd( -3.76951, -197.699, -0.983958, 0.22 ) }
    dend_25 { pt3dadd( -3.39255, -198.938, -1.06723, 0.22 ) }
    dend_25 { pt3dadd( -3.02192, -200.464, -1.06966, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_25 { pt3dadd( -2.84233, -201.464, -1.02851, 0.22 ) }
    dend_25 { pt3dadd( -2.78534, -201.92, -0.980961, 0.37 ) }
    dend_25 { pt3dadd( -2.64839, -203.63, -0.682539, 0.15 ) }
    dend_25 { pt3dadd( -2.56167, -205.204, -0.33222, 0.15 ) }
    dend_25 { pt3dadd( -2.49056, -206.716, 0.0563979, 0.37 ) }
    dend_25 { pt3dadd( -2.46206, -207.613, 0.314459, 0.51 ) }
    dend_25 { pt3dadd( -2.41842, -209.759, 0.947335, 0.22 ) }
    dend_25 { pt3dadd( -2.38885, -211.643, 1.51819, 0.29 ) }
    dend_25 { pt3dadd( -2.39371, -212.744, 1.85009, 0.29 ) }
    dend_25 { pt3dadd( -2.42775, -213.777, 2.15902, 0.51 ) }
    dend_25 { pt3dadd( -2.50375, -215.078, 2.51584, 0.22 ) }
    dend_25 { pt3dadd( -2.6068, -216.419, 2.84146, 0.88 ) }
    dend_25 { pt3dadd( -2.74007, -217.953, 3.1408, 0.07 ) }
    dend_25 { pt3dadd( -2.80391, -218.817, 3.30817, 0.07 ) }
    dend_25 { pt3dadd( -2.92281, -220.48, 3.6537, 0.51 ) }
    dend_25 { pt3dadd( -3.05591, -222.234, 4.01416, 0.29 ) }
    dend_25 { pt3dadd( -3.19445, -223.736, 4.33396, 0.07 ) }
    dend_25 { pt3dadd( -3.30353, -224.767, 4.63186, 0.37 ) }
    dend_25 { pt3dadd( -3.52132, -226.696, 5.28811, 0.07 ) }
    dend_25 { pt3dadd( -3.60257, -227.415, 5.56771, 0.07 ) }
    dend_25 { pt3dadd( -3.75145, -228.572, 6.10294, 0.37 ) }
    dend_25 { pt3dadd( -3.93786, -229.76, 6.712, 0.59 ) }
    dend_25 { pt3dadd( -4.30309, -231.747, 7.82512, 0.22 ) }
    dend_25 { pt3dadd( -4.45065, -232.46, 8.24144, 0.22 ) }
    dend_25 { pt3dadd( -4.69302, -233.533, 8.85295, 0.22 ) }
    dend_25 { pt3dadd( -5.08401, -235.334, 9.96442, 0.22 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 26/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.75007, -32.6998, 21.1443, 0.68 ) }
    dend_24 { pt3dadd( 5.66403, -34.5406, 20.6293, 0.68 ) }
    dend_24 { pt3dadd( 4.89095, -35.8206, 20.26, 0.68 ) }
    dend_24 { pt3dadd( 3.58177, -37.8923, 19.6207, 0.91 ) }
    dend_24 { pt3dadd( 2.0756, -40.1883, 18.9051, 0.91 ) }
    dend_24 { pt3dadd( 0.610512, -42.3523, 18.2073, 0.68 ) }
    dend_24 { pt3dadd( -0.84849, -44.4686, 17.5625, 0.68 ) }
    dend_24 { pt3dadd( -1.85858, -45.911, 17.1809, 0.68 ) }
    dend_24 { pt3dadd( -2.99166, -47.5435, 16.8021, 0.68 ) }
    dend_24 { pt3dadd( -3.67806, -48.6191, 16.5852, 0.46 ) }
    dend_24 { pt3dadd( -4.2197, -49.5644, 16.4019, 0.68 ) }
    dend_24 { pt3dadd( -5.20082, -51.5413, 15.9753, 0.68 ) }
    dend_24 { pt3dadd( -6.06297, -53.6068, 15.47, 0.68 ) }
    dend_24 { pt3dadd( -6.71606, -55.592, 14.9532, 0.68 ) }
    dend_24 { pt3dadd( -7.17496, -57.447, 14.3798, 0.46 ) }
    dend_24 { pt3dadd( -7.50894, -59.383, 13.6587, 0.46 ) }
    dend_24 { pt3dadd( -7.65085, -60.7272, 13.0728, 0.68 ) }
    dend_24 { pt3dadd( -7.68728, -61.3479, 12.7394, 0.68 ) }
    dend_24 { pt3dadd( -7.6818, -62.735, 11.8721, 0.68 ) }
    dend_24 { pt3dadd( -7.60451, -64.3179, 10.7633, 0.68 ) }
    dend_24 { pt3dadd( -7.52879, -65.472, 9.96584, 0.68 ) }
    dend_24 { pt3dadd( -7.4454, -66.5964, 9.22205, 0.46 ) }
    dend_24 { pt3dadd( -7.35171, -68.0242, 8.36353, 0.68 ) }
    dend_24 { pt3dadd( -7.18043, -69.8267, 7.3099, 0.68 ) }
    dend_24 { pt3dadd( -7.04894, -70.8071, 6.6998, 0.68 ) }
    dend_24 { pt3dadd( -6.71776, -72.5292, 5.54833, 0.91 ) }
    dend_24 { pt3dadd( -6.26863, -74.3319, 4.25756, 0.68 ) }
    dend_24 { pt3dadd( -5.68, -76.258, 2.83367, 0.91 ) }
    dend_24 { pt3dadd( -4.92082, -78.4402, 1.16486, 0.91 ) }
    dend_24 { pt3dadd( -4.11489, -80.6758, -0.561435, 0.68 ) }
    dend_24 { pt3dadd( -3.49677, -82.2339, -1.81085, 0.91 ) }
    dend_24 { pt3dadd( -2.90222, -83.4838, -2.91063, 0.46 ) }
    dend_24 { pt3dadd( -2.41303, -84.3804, -3.76725, 0.68 ) }
    dend_24 { pt3dadd( -1.57764, -85.7639, -5.14901, 0.23 ) }
    dend_24 { pt3dadd( -0.76344, -87.041, -6.38932, 0.68 ) }
    dend_24 { pt3dadd( -0.0752867, -88.1023, -7.30545, 0.68 ) }
    dend_24 { pt3dadd( 0.600545, -89.1239, -8.12433, 0.68 ) }
    dend_24 { pt3dadd( 1.39292, -90.3483, -9.08978, 0.68 ) }
    dend_24 { pt3dadd( 2.18743, -91.5716, -10.0336, 0.46 ) }
    dend_24 { pt3dadd( 2.822, -92.5413, -10.7427, 0.46 ) }
    dend_24 { pt3dadd( 3.93174, -94.2629, -11.9538, 0.68 ) }
    dend_24 { pt3dadd( 5.006, -96.0136, -13.0771, 0.23 ) }
    dend_24 { pt3dadd( 6.10193, -97.9487, -14.2337, 0.23 ) }
    dend_24 { pt3dadd( 7.27337, -100.053, -15.4642, 0.23 ) }
    dend_24 { pt3dadd( 7.77835, -100.971, -16.0099, 0.46 ) }
    dend_24 { pt3dadd( 8.71632, -102.643, -16.9672, 0.23 ) }
    dend_24 { pt3dadd( 9.18164, -103.422, -17.423, 0.46 ) }
    dend_24 { pt3dadd( 10.8277, -106.003, -18.8876, 0.23 ) }
    dend_24 { pt3dadd( 12.7666, -108.873, -20.3953, 0.23 ) }
    dend_24 { pt3dadd( 14.3698, -111.183, -21.4902, 0.46 ) }
    dend_24 { pt3dadd( 15.5599, -112.882, -22.2889, 0.46 ) }
    dend_24 { pt3dadd( 16.7215, -114.512, -23.0387, 0.23 ) }
    dend_24 { pt3dadd( 17.7421, -115.896, -23.6666, 0.46 ) }
    dend_24 { pt3dadd( 19.9634, -118.728, -24.7905, 0.23 ) }
    dend_24 { pt3dadd( 21.3829, -120.489, -25.3426, 0.46 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 81/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 8.18063, -25.6692, 30.3878, 0.68 ) }
    dend_22 { pt3dadd( 7.13559, -27.1755, 31.6962, 0.68 ) }
    dend_22 { pt3dadd( 6.21126, -28.5398, 32.9553, 0.68 ) }
    dend_22 { pt3dadd( 5.51022, -29.4623, 33.9166, 0.46 ) }
    dend_22 { pt3dadd( 4.71993, -30.4504, 35.0341, 0.46 ) }
    dend_22 { pt3dadd( 4.12028, -31.1561, 35.9005, 0.68 ) }
    dend_22 { pt3dadd( 3.35242, -31.964, 36.9475, 0.46 ) }
    dend_22 { pt3dadd( 2.5883, -32.6573, 37.9521, 0.46 ) }
    dend_22 { pt3dadd( 1.66143, -33.25, 39.0777, 0.68 ) }
    dend_22 { pt3dadd( 0.702118, -33.6506, 40.1533, 0.68 ) }
    dend_22 { pt3dadd( -0.174625, -33.8902, 41.0718, 0.68 ) }
    dend_22 { pt3dadd( -1.37592, -34.0845, 42.2382, 0.46 ) }
    dend_22 { pt3dadd( -2.29508, -34.1498, 43.0353, 0.68 ) }
    dend_22 { pt3dadd( -3.86159, -34.1907, 44.2439, 0.46 ) }
    dend_22 { pt3dadd( -4.93477, -34.2257, 45.0283, 0.46 ) }
    dend_22 { pt3dadd( -5.93115, -34.2623, 45.6914, 0.46 ) }
    dend_22 { pt3dadd( -6.81291, -34.2903, 46.2587, 0.46 ) }
    dend_22 { pt3dadd( -7.43198, -34.3196, 46.6648, 0.46 ) }
    dend_22 { pt3dadd( -8.23935, -34.4079, 47.1569, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_22 { pt3dadd( -9.4294, -34.6951, 47.8028, 0.46 ) }
    dend_22 { pt3dadd( -10.7271, -35.0724, 48.5177, 0.46 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 2/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 8.18063, -25.6692, 30.3878, 0.68 ) }
    dend_17 { pt3dadd( 8.11495, -26.1846, 31.6727, 0.68 ) }
    dend_17 { pt3dadd( 8.00918, -26.8111, 33.2825, 0.68 ) }
    dend_17 { pt3dadd( 7.87441, -27.3328, 34.4802, 0.68 ) }
    dend_17 { pt3dadd( 7.63698, -28.0384, 35.8912, 0.68 ) }
    dend_17 { pt3dadd( 7.39164, -28.7676, 37.3493, 0.68 ) }
    dend_17 { pt3dadd( 7.25739, -29.1667, 38.1471, 0.68 ) }
    dend_17 { pt3dadd( 6.83428, -29.9321, 39.7421, 0.68 ) }
    dend_17 { pt3dadd( 6.2896, -30.5947, 41.23, 0.68 ) }
    dend_17 { pt3dadd( 5.88479, -31.1492, 42.2712, 0.68 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 12/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -56.3675, -35.7357, -66.2378, 0.23 ) }
    dend_5 { pt3dadd( -57.002, -32.9851, -66.7149, 0.23 ) }
    dend_5 { pt3dadd( -57.3826, -31.383, -67.1178, 0.23 ) }
    dend_5 { pt3dadd( -57.7314, -29.9695, -67.5285, 0.46 ) }
    dend_5 { pt3dadd( -58.2905, -27.704, -68.1867, 0.23 ) }
    dend_5 { pt3dadd( -58.78, -25.7203, -68.7631, 0.23 ) }
    dend_5 { pt3dadd( -59.1968, -24.031, -69.2539, 0.46 ) }
    dend_5 { pt3dadd( -59.658, -21.7934, -70.0558, 0.23 ) }
    dend_5 { pt3dadd( -59.7601, -21.3421, -70.1982, 0.46 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 21/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -56.3675, -35.7357, -66.2378, 0.23 ) }
    dend_4 { pt3dadd( -57.3746, -37.0163, -66.6149, 0.23 ) }
    dend_4 { pt3dadd( -58.4407, -38.3366, -67.2903, 0.23 ) }
    dend_4 { pt3dadd( -59.597, -39.8205, -68.2514, 0.68 ) }
    dend_4 { pt3dadd( -60.3969, -40.9788, -69.1031, 0.23 ) }
    dend_4 { pt3dadd( -61.3601, -42.4951, -70.4668, 0.46 ) }
    dend_4 { pt3dadd( -62.7907, -44.7904, -73.0022, 0.23 ) }
    dend_4 { pt3dadd( -63.4902, -46.0844, -74.83, 0.23 ) }
    dend_4 { pt3dadd( -63.9512, -46.9915, -76.2903, 0.23 ) }
    dend_4 { pt3dadd( -64.4358, -47.9852, -78.1478, 0.68 ) }
    dend_4 { pt3dadd( -65.0954, -49.4063, -81.2074, 0.68 ) }
    dend_4 { pt3dadd( -65.5436, -50.5025, -83.9423, 0.68 ) }
    dend_4 { pt3dadd( -65.8564, -51.6677, -86.9233, 0.68 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 34/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 30.538, 41.2722, -21.483, 0.23 ) }
    dend_51 { pt3dadd( 29.0957, 41.8054, -20.3876, 0.23 ) }
    dend_51 { pt3dadd( 27.4796, 42.4028, -19.1602, 0.23 ) }
    dend_51 { pt3dadd( 26.2593, 42.8539, -18.2334, 0.23 ) }
    dend_51 { pt3dadd( 24.8347, 43.3805, -17.1514, 0.23 ) }
    dend_51 { pt3dadd( 23.5767, 43.8455, -16.196, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 30.538, 41.2722, -21.483, 0.23 ) }
    dend_50 { pt3dadd( 32.0591, 41.8993, -22.8727, 0.23 ) }
    dend_50 { pt3dadd( 33.2126, 42.3943, -24.0987, 0.23 ) }
    dend_50 { pt3dadd( 34.9229, 43.1282, -25.9163, 0.23 ) }
    dend_50 { pt3dadd( 36.8038, 43.9354, -27.9154, 0.46 ) }
    dend_50 { pt3dadd( 38.2054, 44.5368, -29.4049, 0.23 ) }
    dend_50 { pt3dadd( 39.9832, 45.2997, -31.2943, 0.23 ) }
    dend_50 { pt3dadd( 42.1039, 46.1104, -33.7751, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 48/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 5.88479, -31.1492, 42.2712, 0.68 ) }
    dend_19 { pt3dadd( 5.72633, -31.0117, 42.8879, 0.68 ) }
    dend_19 { pt3dadd( 5.13605, -30.4997, 45.1851, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 5.88479, -31.1492, 42.2712, 0.68 ) }
    dend_18 { pt3dadd( 6.18611, -31.8253, 43.0795, 0.68 ) }
    dend_18 { pt3dadd( 6.82334, -33.1841, 44.5749, 0.68 ) }
    dend_18 { pt3dadd( 7.24171, -33.8544, 45.2343, 0.68 ) }
    dend_18 { pt3dadd( 7.59372, -34.4184, 45.7891, 1.14 ) }
    dend_18 { pt3dadd( 8.16356, -35.3314, 46.6871, 0.91 ) }
    dend_18 { pt3dadd( 8.68863, -36.1728, 47.5147, 0.46 ) }
    dend_18 { pt3dadd( 9.18072, -36.9347, 48.2445, 0.23 ) }
    dend_18 { pt3dadd( 10.4451, -38.5536, 49.6824, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 60/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 5.13605, -30.4997, 45.1851, 0.46 ) }
    dend_21 { pt3dadd( 4.53474, -31.2722, 45.9972, 0.46 ) }
    dend_21 { pt3dadd( 3.71544, -32.3248, 47.1037, 0.46 ) }
    dend_21 { pt3dadd( 3.21732, -32.9647, 47.7765, 0.46 ) }
    dend_21 { pt3dadd( 2.57615, -33.7885, 48.6424, 0.46 ) }
    dend_21 { pt3dadd( 1.81144, -34.7709, 49.6752, 0.23 ) }
    dend_21 { pt3dadd( 1.14539, -35.6266, 50.5748, 0.23 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 67/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.13605, -30.4997, 45.1851, 0.46 ) }
    dend_20 { pt3dadd( 5.96803, -28.8844, 46.4532, 0.46 ) }
    dend_20 { pt3dadd( 6.53175, -27.79, 47.3125, 0.46 ) }
    dend_20 { pt3dadd( 6.76846, -27.3304, 47.6733, 0.46 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_53, dend_34, dend_13, dend_0, dend_55, dend_54, dend_44, dend_35, dend_29, dend_14, dend_10, dend_1, dend_57, dend_56, dend_52, dend_45, dend_39, dend_36, dend_31, dend_30, dend_26, dend_15, dend_12, dend_11, dend_7, dend_2, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_33, dend_32, dend_28, dend_27, dend_23, dend_16, dend_9, dend_8, dend_6, dend_3, dend_49, dend_48, dend_42, dend_41, dend_25, dend_24, dend_22, dend_17, dend_5, dend_4, dend_51, dend_50, dend_19, dend_18, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_53, dend_34, dend_13, dend_0, dend_55, dend_54, dend_44, dend_35, dend_29, dend_14, dend_10, dend_1, dend_57, dend_56, dend_52, dend_45, dend_39, dend_36, dend_31, dend_30, dend_26, dend_15, dend_12, dend_11, dend_7, dend_2, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_33, dend_32, dend_28, dend_27, dend_23, dend_16, dend_9, dend_8, dend_6, dend_3, dend_49, dend_48, dend_42, dend_41, dend_25, dend_24, dend_22, dend_17, dend_5, dend_4, dend_51, dend_50, dend_19, dend_18, dend_21, dend_20]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_58, dend_53, dend_34, dend_13, dend_0, axon_0, dend_55, dend_54, dend_44, dend_35, dend_29, dend_14, dend_10, dend_1, axon_1, dend_57, dend_56, dend_52, dend_45, dend_39, dend_36, dend_31, dend_30, dend_26, dend_15, dend_12, dend_11, dend_7, dend_2, dend_47, dend_46, dend_43, dend_40, dend_38, dend_37, dend_33, dend_32, dend_28, dend_27, dend_23, dend_16, dend_9, dend_8, dend_6, dend_3, dend_49, dend_48, dend_42, dend_41, dend_25, dend_24, dend_22, dend_17, dend_5, dend_4, dend_51, dend_50, dend_19, dend_18, dend_21, dend_20]}
    ModelViewParmSubset_5 = new SectionList()
    dend_58 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_57 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_56 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_52 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_11 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_43 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_38 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_37 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_28 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_9 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_3 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_25 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_24 OneSecGrp_SectionRef_52.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_13 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_58 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_34 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_14 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_44 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_35 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_36 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_45 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_15 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_10 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_55 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_47 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_12 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_7 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_23 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_54 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_46 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_39 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_17 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_19 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_48 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_49 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_20 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_18 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_21 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_6 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_22 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_27 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_50 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_33 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_42 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_41 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_5 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_4 OneSecGrp_SectionRef_56.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_57 nseg = 3
    dend_56 nseg = 3
    dend_52 nseg = 5
    dend_11 nseg = 3
    dend_43 nseg = 3
    dend_38 nseg = 3
    dend_37 nseg = 3
    dend_32 nseg = 3
    dend_28 nseg = 3
    dend_9 nseg = 7
    dend_8 nseg = 3
    dend_3 nseg = 3
    dend_25 nseg = 11
    dend_24 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L1_SLAC_23649a0c82_0_0


