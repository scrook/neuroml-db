// Cell: bAC217_L23_NBC_dc5e34b933_0_0
/*
{
  "id" : "bAC217_L23_NBC_dc5e34b933_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.75872, -10.4532, 0.754391, 3.47327", "-3.51208, -9.3518, 0.693156, 4.11268", "-3.26545, -8.25037, 0.631922, 5.19122", "-3.01882, -7.14893, 0.570687, 5.79177", "-2.77218, -6.04749, 0.509453, 6.43344", "-2.52555, -4.94606, 0.448218, 7.33547", "-2.27891, -3.84462, 0.386984, 7.89448", "-2.03228, -2.74319, 0.325749, 8.07665", "-1.78564, -1.64175, 0.264515, 8.19647", "-1.53901, -0.540314, 0.20328, 8.39724", "-1.29237, 0.561122, 0.142046, 8.72156", "-1.04574, 1.66256, 0.0808113, 9.67228", "-0.799104, 2.76399, 0.0195768, 10.9168", "-0.552469, 3.86543, -0.0416577, 10.7105", "-0.305834, 4.96687, -0.102892, 10.3432", "-0.0591998, 6.0683, -0.164127, 10.3014", "0.187435, 7.16974, -0.225361, 9.6708", "0.43407, 8.27117, -0.286596, 8.78455", "0.680704, 9.37261, -0.34783, 7.41865", "0.927339, 10.474, -0.409065, 4.25873", "1.17397, 11.5755, -0.470299, 2.57124" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.92645, -10.4841, 4.08428, 2.77", "-3.90833, -10.9599, 4.08428, 3.05", "-3.83999, -12.7544, 4.08428, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-5.80645, -9.08765, 7.55429, 0.55", "-6.30053, -9.7282, 8.95588, 0.55", "-7.08789, -10.749, 11.1895, 1.11", "-9.39696, -13.7426, 17.7398, 0.55", "-10.1775, -14.7546, 19.9541, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.976448, 8.72485, -7.52571, 0.83", "-0.320921, 10.0668, -8.79782, 0.83", "0.342508, 11.8235, -10.939, 0.55", "0.680633, 12.6275, -11.897, 0.83", "0.985965, 13.4282, -12.8978, 0.55", "1.2632, 14.2306, -13.9625, 0.55", "1.67752, 15.5346, -15.6133, 0.83", "2.31415, 17.8698, -18.6955, 0.55", "2.64699, 19.1775, -20.3509, 0.83", "3.47101, 22.0621, -23.9821, 0.55", "3.96529, 23.5486, -25.8156, 0.55", "4.40465, 24.6465, -27.1668, 0.28", "5.1892, 26.4141, -29.1757, 0.83", "5.81805, 27.8227, -30.5526, 0.28", "6.54202, 29.5705, -32.0392, 0.83", "6.86654, 30.3794, -32.5744, 0.28", "7.68566, 32.5116, -33.749, 0.55", "8.13134, 33.8804, -34.381, 0.55", "8.67249, 35.9947, -35.0912, 0.55", "9.34011, 39.605, -36.17, 0.83", "9.52532, 41.1986, -36.6785, 0.55", "9.67832, 43.0164, -37.29, 0.83", "9.83284, 45.7986, -38.2922, 0.83", "9.91432, 47.663, -39.0836, 0.28", "10.0183, 50.2629, -40.4893, 0.83", "10.1617, 53.1605, -42.2687, 0.55", "10.2502, 54.6074, -43.2083, 0.55", "10.4046, 57.0509, -44.9332, 0.55", "10.6691, 59.6878, -46.9287, 0.55", "11.0017, 62.4647, -48.9468, 0.55", "11.2558, 64.1828, -50.112, 0.28", "11.4079, 65.1442, -50.7339, 0.55", "11.9542, 68.6985, -53.0161, 0.28", "12.2, 70.2551, -53.998, 0.55", "12.4208, 71.7135, -54.8784, 0.28", "12.7617, 73.8069, -56.1421, 0.55", "13.2916, 76.7671, -58.0185, 0.28", "13.6031, 78.395, -59.0251, 0.55", "14.3043, 81.6234, -60.957, 0.28", "14.5783, 82.7646, -61.6401, 0.55", "15.2392, 85.3185, -63.2253, 0.28", "15.5329, 86.4187, -63.8886, 0.28", "15.8292, 87.4769, -64.5251, 0.55", "16.4032, 89.6702, -65.9652, 0.28", "16.6751, 90.7031, -66.6462, 0.55", "17.0763, 92.3688, -67.7666, 0.55", "17.5799, 94.8293, -69.3389, 0.28", "17.6594, 95.2602, -69.6042, 0.55", "18.1359, 97.8357, -71.0111, 0.28", "18.2519, 98.5624, -71.3515, 0.55", "18.4609, 99.8582, -71.936, 0.28", "18.6526, 100.913, -72.3573, 0.55", "19.3103, 103.983, -73.4527, 0.28", "19.9009, 106.346, -74.2347, 0.28", "20.2168, 107.492, -74.5587, 0.55", "20.8392, 109.594, -75.1395, 0.28", "21.0522, 110.243, -75.3294, 0.55", "21.7317, 112.161, -75.8963, 0.28", "22.3108, 113.715, -76.3466, 0.55", "22.9781, 115.38, -76.8132, 0.55", "24.3611, 118.61, -77.6207, 0.28", "24.8398, 119.714, -77.8678, 0.55", "25.3451, 120.852, -78.1078, 0.28", "25.9067, 122.081, -78.3854, 0.55", "26.5414, 123.309, -78.813, 0.28", "26.9201, 123.968, -79.1114, 0.55", "27.955, 125.606, -79.9591, 0.28", "28.7576, 126.884, -80.6383, 0.28", "29.4942, 128.074, -81.2949, 0.55", "31.1234, 130.758, -82.7428, 0.28", "31.633, 131.64, -83.2773, 0.55", "32.039, 132.316, -83.7029, 0.28", "32.5792, 133.201, -84.2372, 0.55", "33.1138, 134.059, -84.7983, 0.28", "33.603, 134.811, -85.2768, 0.55", "35.8901, 138.228, -87.4856, 0.28", "36.6366, 139.264, -88.1869, 0.28", "37.21, 139.987, -88.7372, 0.55", "38.9439, 141.965, -90.3754, 0.28", "39.4087, 142.444, -90.8743, 0.55", "41.4609, 144.273, -93.0157, 0.28", "42.6111, 145.173, -94.098, 0.55", "44.3845, 146.49, -95.7298, 0.28", "44.7401, 146.736, -96.0266, 0.55", "48.5063, 149.272, -98.6628, 0.28", "50.2242, 150.418, -99.9269, 0.55", "51.3313, 151.119, -100.731, 0.28", "51.6592, 151.336, -101.025, 0.55", "52.5868, 152.007, -101.862, 0.28", "53.2315, 152.512, -102.495, 0.55", "55.1115, 154.149, -104.592, 0.28", "55.5674, 154.558, -105.232, 0.55", "57.9348, 156.635, -108.819, 0.28", "58.6355, 157.256, -109.925, 0.55", "59.7138, 158.227, -111.63, 0.28", "60.3182, 158.75, -112.511, 0.55", "61.2996, 159.623, -113.713, 0.28", "61.7651, 160.049, -114.256, 0.55", "62.4896, 160.712, -114.944, 0.28", "63.3981, 161.529, -115.787, 0.55", "65.0336, 163.022, -117.122, 0.28", "65.8662, 163.789, -117.678, 0.55", "67.3819, 165.193, -118.545, 0.28", "68.3645, 166.13, -119.128, 0.55", "68.6657, 166.437, -119.297, 0.28", "69.2734, 167.103, -119.657, 0.55", "71.2976, 169.516, -120.978, 0.28", "71.8916, 170.24, -121.404, 0.55", "73.5626, 172.369, -122.63, 0.28", "74.8733, 174.037, -123.661, 0.28", "75.6179, 174.941, -124.252, 0.55", "76.7924, 176.344, -125.205, 0.28", "77.2264, 176.833, -125.519, 0.55", "78.1986, 177.76, -126.116, 0.28", "78.7176, 178.17, -126.315, 0.55", "79.7, 178.866, -126.638, 0.28", "80.3751, 179.334, -126.805, 0.55", "82.4227, 180.693, -127.181, 0.28", "84.4751, 182.048, -127.41, 0.55", "86.2144, 183.234, -127.522, 0.28", "87.1685, 183.937, -127.622, 0.55", "89.087, 185.428, -127.926, 0.28", "90.6971, 186.72, -128.242, 0.55", "92.9174, 188.576, -128.796, 0.28", "93.7916, 189.328, -129.028, 0.28", "96.216, 191.346, -129.827, 0.55", "97.8989, 192.742, -130.413, 0.28", "98.6232, 193.328, -130.703, 0.55", "99.9163, 194.315, -131.269, 0.28", "100.474, 194.718, -131.512, 0.55", "102.057, 195.777, -131.976, 0.28", "102.327, 195.961, -132.017, 0.55", "103.675, 196.928, -132.135, 0.28", "104.789, 197.763, -132.172, 0.55", "106.166, 198.856, -132.166, 0.28", "107.019, 199.678, -132.158, 0.55", "108.688, 201.565, -132.214, 0.28", "109.764, 202.92, -132.247, 0.28", "111.422, 205.189, -132.298, 0.28", "112.077, 206.139, -132.307, 0.55", "114.282, 209.376, -132.319, 0.28", "115.249, 210.795, -132.366, 0.55", "116.441, 212.579, -132.419, 0.28", "117.096, 213.504, -132.487, 0.55", "117.825, 214.384, -132.584, 0.28", "118.3, 214.816, -132.643, 0.55", "120.57, 216.1, -132.905, 0.28", "120.57, 216.1, -132.905, 0.55", "122.868, 216.656, -133.205, 0.28", "124.041, 216.825, -133.344, 0.28", "124.513, 216.855, -133.395, 0.55", "125.939, 216.82, -133.503, 0.28", "128.288, 216.56, -133.592, 0.55", "129.441, 216.352, -133.635, 0.28", "130.663, 216.021, -133.68, 0.28", "131.365, 215.785, -133.707, 0.55", "132.741, 215.205, -133.764, 0.28", "133.585, 214.756, -133.801, 0.55", "134.748, 214.069, -133.855, 0.28", "135.626, 213.515, -133.898, 0.28", "136.498, 212.947, -133.94, 0.28", "137.597, 212.226, -133.994, 0.55", "138.568, 211.603, -134.041, 0.28", "139.569, 210.965, -134.09, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.17354, 4.58285, -1.63572, 0.55", "6.59822, 4.94058, -2.23797, 0.55", "8.84389, 5.50446, -3.18728, 0.55", "11.7116, 6.22452, -4.39956, 0.55", "13.8122, 6.75198, -5.28755, 0.83", "18.0211, 7.80882, -7.06679, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "0.743549, 10.2828, 3.65428, 0.55", "1.1312, 12.9284, 5.11168, 0.55", "1.41486, 14.9023, 6.17628, 1.11", "1.87752, 17.8102, 7.66507, 0.55", "2.23763, 19.6624, 8.53608, 0.83", "2.77516, 22.0634, 9.56239, 0.55", "3.05692, 23.2643, 10.0201, 0.55", "3.4388, 24.703, 10.4931, 0.55", "3.82407, 26.0373, 10.7832, 0.55", "4.50073, 28.0078, 10.9497, 0.83", "5.31244, 30.2115, 10.9923, 0.55", "6.07753, 32.2886, 10.8786, 0.83", "7.20267, 35.2469, 10.6475, 0.83", "7.87523, 37.0278, 10.4768, 1.11", "9.01324, 40.1121, 10.2644, 0.55", "9.88521, 42.5395, 10.1562, 1.11", "10.831, 45.233, 10.1012, 0.55", "11.3645, 46.785, 10.1601, 0.55", "12.0862, 49.0631, 10.3822, 0.55", "12.8439, 51.6984, 10.797, 0.28", "13.3118, 53.6228, 11.1541, 0.83", "13.7418, 55.7336, 11.5728, 0.83", "14.2889, 59.1922, 12.3118, 0.55", "14.592, 62.3838, 12.9, 0.83", "14.7528, 64.6724, 13.2867, 0.55", "14.843, 66.515, 13.5351, 0.83", "14.9047, 69.2611, 13.907, 0.83", "14.8649, 71.9148, 14.24, 0.55", "14.551, 75.369, 14.5348, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.84645, 9.14285, 4.00428, 0.83", "-5.01188, 11.4683, 4.04256, 0.83", "-6.4103, 14.2587, 4.08849, 1.11", "-7.87141, 17.1741, 4.13649, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999884142687223
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.17397, 11.5755, -0.470299, 0.55", "4.45162, 26.213, -0.470299, 0.55", "7.72927, 40.8505, -0.470299, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-3.83999, -12.7544, 4.08428, 1.38", "-4.32801, -15.0264, 2.45105, 1.38" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.83999, -12.7544, 4.08428, 0.83", "-3.30895, -13.7128, 3.9757, 0.83", "-2.41891, -15.318, 3.7928, 0.83", "-1.54966, -16.8274, 3.58617, 0.83", "-0.861174, -18.023, 3.4225, 1.11", "0.056614, -19.6167, 3.20432, 0.83", "0.596157, -20.5536, 3.07606, 0.55", "1.31049, -21.808, 2.89609, 0.83", "2.15533, -23.3342, 2.66328, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-10.1775, -14.7546, 19.9541, 0.28", "-12.0012, -13.3733, 20.2111, 0.28", "-12.6485, -12.9146, 20.3094, 0.55", "-14.3799, -11.6486, 20.329, 0.28", "-16.646, -9.9513, 20.2567, 0.55", "-19.8687, -7.58246, 20.2262, 0.28", "-20.5413, -7.08418, 20.2094, 0.28", "-22.2332, -5.84624, 20.1057, 0.55", "-25.6398, -3.39044, 19.9726, 0.28", "-26.4195, -2.84699, 19.9605, 0.55", "-28.529, -1.2607, 20.1097, 0.28", "-30.4655, 0.145083, 20.4503, 0.55", "-31.5837, 0.97617, 20.7023, 0.55", "-33.3599, 2.3011, 21.276, 0.28", "-34.4324, 3.05549, 21.8351, 0.55", "-36.7005, 4.6721, 23.0379, 0.28", "-38.4597, 6.04166, 24.1337, 0.55", "-45.7949, 12.7177, 25.6399, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-10.1775, -14.7546, 19.9541, 0.55", "-12.3438, -16.1879, 20.9508, 0.55", "-14.5932, -17.7361, 22.4052, 0.55", "-17.5737, -19.382, 24.1767, 0.55", "-20.719, -20.7655, 25.9732, 0.55", "-23.9035, -21.88, 27.732, 0.55", "-27.0844, -22.6806, 29.5488, 0.28", "-29.6586, -22.8644, 31.0988, 0.55", "-33.9135, -22.8073, 33.6839, 0.28", "-35.6128, -22.7026, 34.6534, 0.28", "-38.1029, -22.6208, 35.828, 0.55", "-41.7076, -22.7821, 37.096, 0.28", "-44.2874, -23.2731, 37.7905, 0.55", "-47.2032, -24.29, 38.452, 0.55", "-49.1666, -25.2768, 38.8136, 0.83", "-52.4541, -27.2179, 39.0556, 0.55", "-55.9181, -29.5536, 38.9535, 0.55", "-57.8419, -31.0081, 38.7584, 0.55", "-60.4034, -32.9822, 38.3639, 0.55", "-62.5498, -34.6453, 37.9438, 0.55", "-65.4512, -37.0584, 37.3073, 0.28", "-66.5665, -38.0416, 37.0458, 0.28", "-67.453, -38.7875, 36.8714, 0.83", "-70.4242, -41.4331, 36.3986, 0.55", "-72.5872, -43.5017, 36.1667, 0.55", "-74.8948, -45.9284, 36.1447, 0.28", "-76.7536, -47.9343, 36.2123, 0.55", "-78.4652, -49.7704, 36.3031, 0.55", "-79.8639, -51.3161, 36.406, 0.28", "-81.07, -52.7784, 36.6379, 0.55", "-82.3995, -54.2223, 36.9387, 0.28", "-94.9621, -59.2815, 39.9057, 0.28" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "18.0211, 7.80882, -7.06679, 0.55", "20.664, 9.97873, -8.60626, 0.55", "22.5097, 11.4388, -9.6909, 0.83", "23.9147, 12.5911, -10.5467, 0.55", "25.47, 13.8667, -11.494, 0.55", "27.1355, 15.2327, -12.5085, 0.55", "28.7989, 16.5969, -13.5216, 0.55", "31.8126, 18.9926, -15.2308, 0.83", "33.115, 20.0701, -16.0958, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "18.0211, 7.80882, -7.06679, 0.55", "18.9558, 6.23018, -7.68523, 0.55", "19.9161, 4.4975, -8.35695, 0.83", "20.6479, 3.09948, -8.88713, 0.55", "21.2036, 1.95762, -9.44885, 0.83", "22.2189, -0.244787, -10.6486, 0.28", "22.8065, -1.47467, -11.4142, 0.55", "23.5985, -3.12612, -12.5803, 0.28", "23.807, -3.58106, -12.9655, 0.55", "24.7855, -6.05644, -15.242, 0.28", "25.0116, -6.75688, -15.8946, 0.83", "25.7853, -9.53534, -18.4528, 0.28", "26.1556, -10.9762, -19.7473, 0.83", "26.7816, -13.3379, -21.7785, 0.28", "27.2505, -15.3627, -23.4919, 0.28", "27.4357, -16.3586, -24.2617, 0.83", "27.5439, -17.428, -25.181, 0.55", "27.5914, -19.1279, -26.6638, 0.28", "27.6041, -19.8672, -27.323, 0.83", "27.6861, -23.7281, -30.6931, 0.55", "27.7109, -25.0842, -31.9759, 0.83", "27.687, -28.9937, -35.9552, 0.28", "27.628, -29.8301, -36.8667, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "14.551, 75.369, 14.5348, 0.55", "16.8827, 80.0674, 13.9936, 0.55", "17.888, 82.1506, 13.7739, 0.83", "18.9358, 84.7489, 13.5379, 0.55", "20.0327, 88.0381, 13.1136, 0.28", "20.7835, 90.4776, 12.7689, 0.55", "21.3592, 92.4758, 12.4229, 0.55", "22.2569, 96.0911, 11.7784, 0.55", "23.2667, 99.8042, 11.1472, 0.55", "24.3868, 103.756, 10.5675, 0.28", "25.1409, 106.099, 10.2588, 0.55", "26.5613, 109.902, 9.85693, 0.28", "28.3928, 114.253, 9.4362, 0.55", "29.2334, 115.979, 9.35196, 0.55", "30.4574, 118.222, 9.36884, 0.55", "32.6237, 122.266, 9.65571, 0.55", "33.8997, 125.124, 9.9266, 0.28", "34.4719, 126.815, 10.0931, 0.55", "35.2972, 130.499, 10.3203, 0.28", "35.6689, 132.997, 10.4709, 0.55", "36.0284, 136.794, 10.5988, 0.83", "36.1744, 140.814, 10.6991, 0.55", "36.2473, 144.177, 10.7508, 0.28", "36.2895, 145.849, 10.8264, 0.55", "36.5105, 150.269, 11.0985, 0.28", "36.8621, 153.887, 11.4551, 0.55", "37.2352, 156.236, 11.7928, 0.55", "37.8564, 158.914, 12.3114, 0.28", "38.5723, 161.577, 12.9333, 0.55", "39.6906, 165.449, 13.907, 0.55", "40.5134, 168.316, 14.6549, 0.55", "40.9862, 169.925, 15.0749, 0.83", "42.1376, 173.797, 16.0618, 0.55", "42.9346, 176.595, 16.7408, 0.55", "45.0421, 184.386, 18.5137, 0.28", "45.4326, 186.035, 18.8908, 0.55", "46.5787, 191.403, 20.1057, 0.28", "47.0276, 193.847, 20.6876, 0.83", "47.9894, 199.598, 22.156, 0.28", "48.2515, 201.214, 22.6042, 0.28", "48.5983, 203.626, 23.295, 0.55", "49.3949, 209.286, 24.966, 0.28", "49.7096, 212.091, 25.8076, 0.55", "50.1754, 216.388, 27.0711, 0.28", "50.39, 218.001, 27.6317, 0.55", "51.626, 233.167, 27.445, 0.55", "53.1085, 248.047, 24.4577, 0.55", "58.3133, 262.415, 23.6654, 0.55", "67.4567, 274.828, 25.1276, 0.55", "73.1648, 288.91, 27.1619, 0.55", "76.9182, 303.006, 31.8718, 0.55", "79.7242, 317.163, 37.0139, 0.55", "84.3221, 330.547, 43.0796, 0.55", "87.1815, 344.504, 48.7719, 0.55", "91.5007, 358.968, 51.2139, 0.55", "96.7089, 372.77, 55.4841, 0.55", "103.492, 385.349, 61.4091, 0.55", "111.422, 398.078, 65.1553, 0.55", "122.215, 408.357, 69.9393, 0.55", "131.928, 420.038, 73.2466, 0.55", "141.529, 432.069, 75.2289, 0.55", "152.457, 442.815, 78.2438, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "14.551, 75.369, 14.5348, 0.55", "11.7438, 77.1907, 16.0319, 0.55", "8.71192, 79.426, 17.8471, 0.55", "7.46029, 80.3586, 18.6328, 0.28", "6.88293, 80.8142, 19.0561, 0.83", "4.784, 82.5659, 20.6873, 0.55", "3.6599, 83.5478, 21.703, 0.83", "2.5839, 84.6961, 22.9974, 0.55", "1.8311, 85.6544, 24.1262, 0.55", "0.805405, 87.1515, 25.7387, 0.28", "0.383011, 87.7981, 26.3582, 0.55", "-1.08381, 90.0115, 28.4421, 0.28", "-1.69212, 90.9602, 29.355, 0.55", "-2.51446, 92.3317, 30.5943, 0.28", "-3.27439, 93.7184, 31.6834, 0.28", "-4.3207, 95.4253, 32.7724, 0.83", "-8.65092, 101.629, 38.7026, 0.83", "-12.2165, 107.384, 45.5714, 0.83", "-15.4535, 112.21, 53.3407, 0.83", "-19.9942, 115.895, 61.1544, 0.83", "-25.0954, 119.84, 68.4639, 0.83", "-31.1274, 124.49, 74.4873, 0.83", "-37.666, 128.084, 80.785, 0.83", "-44.0415, 132.457, 86.6866, 0.83", "-49.5973, 137.108, 93.1513, 0.83", "-53.9925, 140.842, 101.022, 0.83", "-58.012, 143.939, 109.389, 0.83", "-62.0664, 147.752, 117.399, 0.83", "-67.0401, 150.635, 125.327, 0.83", "-71.0908, 152.753, 134.017, 0.83", "-76.5182, 154.287, 142.073, 0.83", "-83.1104, 156.786, 148.89, 0.83", "-88.5422, 160.285, 156.216, 0.83", "-93.317, 162.614, 164.466, 0.83", "-96.3457, 166.066, 173.091, 0.83", "-100.012, 170.077, 181.179, 0.83", "-101.633, 174.945, 189.414, 0.83", "-103.365, 179.244, 197.973, 0.83", "-104.65, 182.957, 206.909, 0.83", "-106.434, 185.271, 216.279, 0.83", "-107.225, 186.345, 226.034, 0.83", "-107.039, 188.658, 235.573, 0.83", "-107.154, 189.8, 245.351, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.87141, 17.1741, 4.13649, 0.83", "-6.08783, 21.4294, 4.18956, 0.83", "-3.30096, 28.228, 4.51447, 0.83", "-1.9817, 31.4662, 4.70141, 0.83", "-0.453042, 35.3223, 4.94179, 0.83", "0.722208, 38.3336, 5.12637, 0.55", "1.58227, 40.7424, 5.26459, 0.83", "2.62885, 44.0451, 5.52531, 0.55", "3.2643, 46.255, 5.71873, 0.83", "3.67453, 47.7385, 5.80516, 0.55", "4.16758, 49.7413, 5.97284, 0.83", "5.01029, 53.4468, 6.30237, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-7.87141, 17.1741, 4.13649, 0.55", "-10.5724, 19.8305, 4.34293, 0.55", "-12.0782, 21.3115, 4.45801, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "7.72927, 40.8505, -0.470299, 0.28", "11.0069, 55.4881, -0.470299, 0.28", "14.2846, 70.1256, -0.470299, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-4.32801, -15.0264, 2.45105, 0.55", "-5.1704, -17.4671, 3.30645, 0.55", "-6.22188, -20.5091, 4.5468, 0.28", "-6.67618, -21.8679, 5.11186, 0.83", "-7.18418, -23.5022, 5.78847, 0.28", "-7.58576, -24.7389, 6.28111, 0.55", "-8.50445, -27.4267, 7.51343, 0.55", "-9.02516, -28.987, 8.26506, 0.28", "-9.44368, -30.1089, 8.76883, 0.83", "-9.99844, -31.4314, 9.37841, 0.55", "-10.4962, -32.5975, 9.94131, 0.55", "-11.8294, -35.5748, 11.367, 0.83", "-12.6513, -37.4398, 12.1261, 0.55", "-13.6715, -39.5491, 12.9661, 0.55", "-14.935, -41.9861, 13.9854, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.32801, -15.0264, 2.45105, 1.38", "-4.42295, -17.2475, 0.637547, 1.38", "-4.52429, -19.6189, -1.29863, 1.94", "-4.69621, -23.6412, -4.58279, 1.66" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.15533, -23.3342, 2.66328, 0.83", "2.09554, -24.1542, 2.48938, 0.83", "1.9226, -26.5257, 1.98651, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.15533, -23.3342, 2.66328, 0.55", "3.26862, -24.2296, 1.19932, 0.55", "4.44819, -25.3107, -1.27525, 0.55", "5.39956, -26.1623, -3.38815, 0.55", "6.69758, -27.1531, -6.04754, 0.55", "9.06448, -28.8026, -10.6044, 0.28", "11.5634, -30.4008, -15.1047, 0.55", "14.4484, -32.1057, -20.3196, 0.55", "15.3142, -32.5706, -21.8252, 0.83", "17.3103, -33.5291, -24.9577, 0.28", "17.9063, -33.788, -25.8344, 0.55", "19.288, -34.2819, -27.3488, 0.28", "20.8539, -34.8005, -28.6268, 0.55", "23.3735, -35.5343, -29.9923, 0.28", "25.2453, -36.142, -30.9421, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-45.7949, 12.7177, 25.6399, 0.28", "-52.4976, 18.0607, 26.8062, 0.28", "-59.5331, 22.7679, 28.7631, 0.28", "-66.5692, 27.7513, 29.688, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-45.7949, 12.7177, 25.6399, 0.28", "-54.7078, 18.9832, 26.6176, 0.28", "-63.218, 25.7985, 26.9427, 0.28", "-71.9432, 32.3508, 26.4127, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "33.115, 20.0701, -16.0958, 0.28", "35.9343, 22.357, -16.1043, 0.28", "37.6765, 23.7626, -16.0962, 0.55", "39.9761, 25.5841, -16.0602, 0.28", "42.6323, 27.6584, -15.8648, 0.55", "45.5185, 29.8172, -15.7796, 0.28", "47.5154, 31.2999, -15.7639, 0.55", "50.0465, 33.2236, -15.7286, 0.28", "50.9936, 33.9486, -15.7092, 0.55", "53.5369, 35.8325, -15.634, 0.28", "56.4865, 38.1001, -15.1359, 0.55", "58.9273, 40.0753, -14.5627, 0.28", "60.3674, 41.2486, -14.1338, 0.55", "62.9029, 43.2455, -13.4969, 0.28", "63.9624, 44.0228, -13.1519, 0.55", "67.8339, 46.6395, -11.4527, 0.28", "69.8938, 48.0101, -10.3674, 0.28", "71.3425, 48.8789, -9.5896, 0.28", "74.646, 50.6736, -7.84944, 0.28", "79.5718, 53.1033, -4.91333, 0.28", "81.5693, 53.9237, -3.68352, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "33.115, 20.0701, -16.0958, 0.55", "35.8383, 20.5528, -18.5236, 0.55", "40.3545, 21.4764, -21.8696, 0.55", "41.235, 21.692, -22.4528, 0.83", "42.533, 22.0317, -23.2017, 0.28", "43.2582, 22.2214, -23.5545, 0.55", "44.7151, 22.6143, -24.2142, 0.28", "46.191, 22.9833, -24.7581, 0.55", "47.6804, 23.2938, -25.0651, 0.28", "48.7855, 23.4591, -25.327, 0.55", "50.5147, 23.6809, -25.7885, 0.55", "52.1572, 23.858, -26.2712, 0.55", "54.6013, 24.0722, -27.0493, 0.28", "55.9131, 24.1652, -27.5502, 0.55", "57.8098, 24.3143, -28.3506, 0.55", "59.0506, 24.4949, -28.9874, 0.28", "59.7563, 24.6368, -29.379, 0.28", "60.3708, 24.7906, -29.7289, 0.55", "62.4134, 25.4403, -30.9567, 0.28", "62.9963, 25.6192, -31.3377, 0.55", "65.4665, 26.3087, -32.9424, 0.28", "66.3209, 26.4957, -33.4805, 0.55", "68.0268, 26.7526, -34.4976, 0.28", "68.5492, 26.7966, -34.7923, 0.55", "70.618, 26.8798, -35.8031, 0.28", "71.5469, 26.865, -36.2224, 0.55", "72.8282, 26.7793, -36.7908, 0.28", "73.9852, 26.697, -37.3177, 0.28", "74.9937, 26.6136, -37.8, 0.55", "76.2897, 26.5235, -38.4533, 0.28", "77.0717, 26.4836, -38.8612, 0.55", "79.6235, 26.4207, -40.2358, 0.28", "79.9981, 26.4232, -40.48, 0.55", "81.8822, 26.5295, -41.7935, 0.28", "82.6015, 26.6057, -42.2718, 0.55", "83.2461, 26.7031, -42.7026, 0.28", "84.2493, 26.906, -43.376, 0.55", "87.7206, 27.7802, -45.4126, 0.28", "88.69, 28.0713, -45.904, 0.55", "90.8863, 28.8861, -47.021, 0.28", "91.4212, 29.1167, -47.3062, 0.55", "92.6255, 29.7094, -47.9418, 0.28", "93.8507, 30.432, -48.5505, 0.55", "95.0767, 31.304, -49.0447, 0.28", "97.232, 33.0575, -50.3381, 0.55", "98.0141, 33.7624, -50.9094, 0.28", "98.6928, 34.4181, -51.4012, 0.55", "99.5826, 35.2761, -52.0586, 0.28", "100.125, 35.8077, -52.4776, 0.55", "102.363, 37.9384, -54.1662, 0.28", "103.15, 38.6404, -54.6248, 0.55", "104.496, 39.7954, -55.4815, 0.28", "105.594, 40.7172, -56.1678, 0.55", "106.345, 41.3298, -56.6618, 0.28", "107.295, 42.146, -57.2302, 0.55", "108.487, 43.1963, -57.8125, 0.28", "110.143, 44.7247, -58.7096, 0.55", "111.758, 46.2097, -59.6521, 0.28", "113.02, 47.3522, -60.4535, 0.55", "114.947, 48.9502, -61.7162, 0.28", "115.894, 49.6736, -62.3425, 0.55", "118.036, 51.1436, -63.8852, 0.28", "118.853, 51.587, -64.5328, 0.55", "121.274, 52.4359, -66.7843, 0.28", "121.945, 52.4517, -67.6318, 0.55", "122.529, 52.3146, -68.5011, 0.28", "123.182, 52.0704, -69.5684, 0.55", "124.817, 51.1282, -72.4888, 0.28", "125.408, 50.6962, -73.6608, 0.55", "127.899, 48.2175, -79.4179, 0.28", "128.45, 47.6268, -80.8283, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "27.628, -29.8301, -36.8667, 0.28", "27.5782, -30.4888, -37.728, 0.28", "27.5477, -30.8821, -38.2178, 0.55", "27.4206, -32.1743, -39.7387, 0.28", "27.3902, -32.4468, -40.0511, 0.55", "27.1221, -34.4947, -42.3129, 0.28", "26.9424, -35.6939, -43.4949, 0.55", "26.7917, -36.6129, -44.4042, 0.28", "26.7025, -37.1165, -44.822, 0.55", "26.4762, -38.4006, -45.6458, 0.28", "26.4209, -38.8193, -45.9153, 0.55", "26.2455, -40.6172, -46.9784, 0.28", "26.133, -41.9872, -47.691, 0.55", "26.0115, -44.2317, -48.8538, 0.28", "25.9879, -44.8914, -49.1976, 0.55", "25.8954, -49.6716, -51.6771, 0.28", "25.8968, -50.2443, -51.9964, 0.55", "25.9469, -52.2693, -53.2496, 0.28", "25.9613, -52.8235, -53.6017, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "27.628, -29.8301, -36.8667, 0.55", "28.3381, -29.833, -38.943, 0.55", "30.0601, -29.4629, -44.9798, 0.55", "31.6715, -28.931, -51.0175, 0.28", "31.9178, -28.7274, -52.2157, 0.55", "32.8879, -27.549, -57.5937, 0.28", "33.1889, -26.9435, -59.4995, 0.55", "33.7959, -24.1532, -65.5487, 0.28", "33.8585, -23.4034, -66.8522, 0.55", "33.8273, -19.0181, -72.8239, 0.28", "33.7881, -18.3024, -73.6616, 0.55", "33.2636, -13.4879, -78.113, 0.28", "33.0731, -12.0506, -79.2915, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.01029, 53.4468, 6.30237, 0.28", "4.62923, 55.588, 5.66761, 0.28", "4.52624, 56.7558, 5.25726, 0.55", "4.29719, 59.8944, 4.34466, 0.28", "4.22675, 60.7802, 4.13331, 0.55", "4.10795, 62.1763, 3.79577, 0.28", "3.80717, 64.1755, 3.29746, 0.55", "2.86636, 67.6992, 2.47909, 0.28", "2.1888, 69.5737, 1.98982, 0.55", "1.2811, 71.4977, 1.50882, 0.28", "0.395028, 73.2531, 1.14114, 0.83", "-0.879526, 75.8879, 0.697187, 0.55", "-2.4487, 79.3577, 0.124807, 0.55", "-3.37055, 81.7497, -0.129461, 0.83", "-3.8618, 83.4997, -0.237368, 0.55", "-4.34657, 85.8245, -0.0404983, 1.11", "-4.79672, 89.1879, 0.638952, 0.55", "-4.92073, 91.9496, 1.42013, 1.11", "-4.91147, 95.0572, 2.52971, 0.55", "-4.82266, 97.5702, 3.19605, 0.83", "-4.53699, 102.255, 3.54054, 0.28", "-4.5021, 103.073, 3.44289, 0.55", "-4.51691, 104.526, 3.03094, 0.28", "-4.59447, 106.064, 2.38142, 0.83", "-5.49799, 115.276, -2.45589, 0.55", "-5.88132, 117.896, -3.91868, 0.55", "-6.37354, 120.71, -5.49078, 0.83", "-6.9029, 122.981, -6.46942, 0.28", "-7.48533, 125.066, -7.09116, 0.55", "-8.22085, 127.334, -7.39314, 0.28", "-8.93431, 129.079, -7.26269, 0.55", "-9.65061, 130.731, -7.14066, 0.28", "-10.7563, 133.26, -7.01444, 0.55", "-11.4014, 134.684, -6.99137, 0.28", "-12.8785, 137.525, -7.00108, 0.55", "-14.2094, 139.707, -7.10021, 0.28", "-15.8258, 142.067, -7.30815, 0.28", "-17.0019, 143.559, -7.47334, 0.55", "-18.9293, 145.536, -7.7536, 0.55", "-20.3478, 146.672, -7.97061, 0.55", "-22.139, 147.91, -8.26825, 0.28", "-22.8627, 148.355, -8.41792, 0.55", "-24.4181, 149.065, -8.72407, 0.28", "-27.0494, 149.962, -9.17763, 0.55", "-30.3629, 150.756, -9.62054, 0.55", "-35.6011, 160.113, -10.3211, 0.55", "-41.4128, 169.187, -10.5217, 0.55", "-46.6374, 178.571, -10.0215, 0.55", "-50.8119, 188.316, -11.4648, 0.55", "-55.9635, 197.694, -12.4233, 0.55", "-62.7204, 205.517, -15.7657, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.01029, 53.4468, 6.30237, 0.55", "6.64936, 54.814, 6.98165, 0.55", "8.2618, 56.1874, 7.69287, 0.83", "9.57454, 57.3792, 8.36614, 0.55", "10.7325, 58.493, 9.00488, 0.83", "12.4324, 60.1202, 9.96036, 0.55", "13.7782, 61.4049, 10.7349, 0.28", "14.4222, 62.0944, 11.1514, 0.28", "15.1841, 63.0117, 11.6621, 0.55", "15.6987, 63.6494, 12.0136, 0.28", "16.3801, 64.5234, 12.485, 0.55", "17.5169, 66.0207, 13.1455, 0.28", "17.976, 66.661, 13.4273, 0.55", "18.8628, 68.025, 13.9838, 0.28", "19.5313, 69.1285, 14.4329, 0.55", "19.9985, 70.0159, 14.8131, 0.28", "20.4603, 71.0388, 15.2537, 0.55", "21.6112, 73.6199, 16.4161, 0.28", "22.1756, 74.737, 17.0272, 0.28", "22.6943, 75.6407, 17.5563, 0.55", "23.528, 76.8755, 18.2901, 0.55", "24.5638, 78.293, 19.1854, 0.28", "24.8976, 78.7369, 19.4752, 0.55", "26.3848, 80.5672, 20.5303, 0.55", "27.1027, 81.32, 21.0395, 0.28", "27.9224, 82.0614, 21.5345, 0.55", "30.9413, 87.6685, 24.9291, 0.55", "34.8304, 93.0252, 27.8428, 0.55", "39.1328, 98.4271, 29.9625, 0.55", "42.8192, 103.917, 32.865, 0.55", "46.5705, 109.704, 34.9105, 0.55", "51.2048, 115.087, 36.2068, 0.55", "56.463, 120.062, 36.5299, 0.55", "62.0159, 124.73, 36.9848, 0.55", "67.5588, 129.228, 38.4368, 0.55", "72.795, 133.793, 40.6279, 0.55", "78.3619, 137.347, 43.8462, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-12.0782, 21.3115, 4.45801, 0.55", "-12.8193, 24.4418, 3.38152, 0.55", "-13.5224, 27.4116, 2.36021, 0.55", "-14.2516, 30.4917, 1.30099, 0.83", "-14.7291, 32.5087, 0.607368, 0.55", "-16.1378, 38.4592, -1.43898, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-12.0782, 21.3115, 4.45801, 0.55", "-15.1052, 18.5979, 2.31191, 0.55", "-17.3326, 16.5765, 0.807105, 0.83", "-18.3909, 15.618, 0.14578, 0.55", "-20.72, 13.4882, -1.26753, 0.83", "-22.6592, 11.7511, -2.31317, 0.55", "-23.8446, 10.7337, -2.90715, 0.83", "-25.784, 9.02882, -3.67787, 0.55", "-26.8098, 8.20914, -3.94896, 0.83", "-28.001, 7.33308, -4.1306, 0.55", "-29.9297, 6.08441, -4.22927, 0.83", "-32.1663, 4.87342, -3.93049, 0.55", "-34.6088, 3.71468, -3.24813, 0.28", "-36.2311, 2.97065, -2.44829, 0.55", "-38.111, 2.09962, -1.26848, 0.28", "-39.5182, 1.40145, -0.0283814, 0.83", "-42.9596, -0.440708, 3.54243, 0.55", "-43.6305, -0.837643, 4.31042, 0.55", "-45.6781, -2.24508, 6.89911, 0.55", "-46.5232, -2.89645, 7.97074, 0.55", "-49.557, -5.55047, 11.8114, 0.28", "-50.4931, -6.40927, 13.0282, 0.28", "-51.5055, -7.42031, 14.2469, 0.55", "-53.9693, -9.80644, 16.962, 0.55", "-54.5989, -10.3913, 17.6149, 0.55", "-55.7157, -11.4303, 18.7602, 0.55", "-58.4494, -13.9918, 21.2842, 0.55", "-59.4265, -14.8947, 22.2565, 0.28", "-61.6507, -16.7308, 24.4154, 0.28", "-69.6338, -20.2851, 28.1821, 0.28", "-76.9549, -23.7529, 33.1848, 0.28", "-84.1378, -28.1836, 37.4958, 0.28", "-90.7404, -32.4073, 42.8444, 0.28", "-96.6389, -36.6849, 48.9215, 0.28", "-103.498, -42.2268, 52.2118, 0.28", "-110.715, -46.6804, 56.4384, 0.28", "-117.679, -52.3697, 59.1797, 0.28", "-123.138, -59.7636, 60.3916, 0.28", "-128.189, -67.4952, 60.2004, 0.28", "-131.679, -75.971, 59.967, 0.28", "-133.829, -84.8455, 60.0747, 0.28", "-135.257, -93.6973, 61.85, 0.28", "-135.542, -102.776, 62.6258, 0.28", "-136.898, -111.767, 61.9241, 0.28", "-137.226, -120.696, 60.0747, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-14.935, -41.9861, 13.9854, 0.28", "-18.0901, -42.3595, 14.7983, 0.28", "-19.1639, -42.4762, 15.0771, 0.55", "-20.5765, -42.6346, 15.447, 0.28", "-20.9751, -42.6779, 15.5236, 0.55", "-22.6201, -42.8184, 15.7516, 0.28", "-23.6726, -42.9067, 15.7848, 0.55", "-25.0881, -43.0004, 15.5305, 0.28", "-25.7386, -43.0332, 15.2628, 0.55", "-27.263, -43.1294, 14.4315, 0.28", "-28.2471, -43.2379, 13.7253, 0.55", "-29.8893, -43.4789, 12.2826, 0.55", "-31.0634, -43.6716, 11.0892, 0.28", "-32.7737, -43.9644, 9.10368, 0.55", "-33.9627, -44.1949, 7.64446, 0.28", "-34.958, -44.4636, 6.45252, 0.55", "-41.0781, -44.7559, 3.96886, 0.55", "-47.2887, -44.9406, 1.71205, 0.55", "-53.3991, -44.2212, -0.664541, 0.55", "-59.5115, -43.4033, -2.99737, 0.55", "-65.9434, -43.1246, -4.47649, 0.55", "-71.9354, -42.0261, -6.97791, 0.55", "-77.5538, -40.4083, -9.96749, 0.55", "-83.4477, -38.679, -12.2833, 0.55", "-89.3249, -37.9436, -15.1821, 0.55", "-94.7747, -36.4073, -18.5124, 0.55", "-99.7317, -34.9693, -22.5793, 0.55", "-103.871, -32.9508, -27.2333, 0.55", "-107.789, -31.3663, -32.2566, 0.55", "-111.243, -29.9575, -37.6668, 0.55", "-115.086, -29.1918, -42.9668, 0.55", "-118.925, -28.8348, -48.3236, 0.55", "-122.72, -27.6968, -53.5781, 0.55", "-126.56, -26.8139, -58.8578, 0.55", "-130.461, -25.0733, -63.8343, 0.55", "-134.145, -23.6047, -69.071, 0.55", "-136.767, -21.7263, -74.7767, 0.55", "-139.482, -19.9543, -80.4772, 0.55", "-141.092, -18.213, -86.5949, 0.55", "-143.251, -17.3532, -92.7612, 0.55", "-144.412, -17.1237, -99.259, 0.55", "-144.5, -16.4595, -105.823, 0.55", "-143.337, -16.4815, -112.33, 0.55", "-141.501, -15.7839, -118.632, 0.55", "-140.537, -15.3811, -125.153, 0.55", "-139.842, -14.1, -131.573, 0.55", "-139.936, -11.9588, -137.762, 0.55", "-140.582, -9.25214, -143.658, 0.55", "-140.638, -5.98058, -149.264, 0.55", "-139.789, -2.26686, -154.492, 0.55", "-138.987, 2.03561, -159.202, 0.55", "-137.354, 6.27139, -163.772, 0.55", "-135.714, 10.4282, -168.418, 0.55", "-133.32, 14.7118, -172.597, 0.55", "-130.82, 19.3067, -176.329, 0.55", "-127.881, 23.545, -180.209, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-14.935, -41.9861, 13.9854, 0.28", "-16.3636, -43.8167, 16.1498, 0.28", "-17.1853, -44.7723, 17.2092, 0.55", "-20.3037, -48.4054, 20.9511, 0.28", "-20.8947, -49.094, 21.6603, 0.55", "-22.6472, -51.1357, 23.7632, 0.55", "-26.1404, -55.2055, 27.9549, 0.28", "-27.4998, -56.5492, 29.3558, 0.28", "-28.3134, -57.301, 30.1446, 0.55", "-33.9125, -63.4116, 38.6481, 0.55", "-39.2149, -70.6858, 46.2856, 0.55", "-45.1967, -77.7355, 53.6633, 0.55", "-50.8934, -85.6432, 60.2704, 0.55", "-56.1918, -92.6045, 68.2238, 0.55", "-61.0527, -99.7291, 76.288, 0.55", "-66.7835, -107.54, 82.9915, 0.55", "-72.9518, -115.591, 88.9737, 0.55", "-78.1214, -123.892, 95.4717, 0.55", "-82.6349, -130.025, 104.564, 0.55", "-87.6418, -136.86, 112.815, 0.55", "-91.2356, -142.618, 122.555, 0.55", "-96.282, -148.118, 131.822, 0.55", "-99.6851, -153.477, 141.876, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-4.69621, -23.6412, -4.58279, 0.83", "-2.50773, -26.6509, -9.69321, 0.83", "-1.2747, -28.4611, -12.8473, 0.83", "-0.0867687, -30.2536, -16.1855, 0.83", "1.37529, -31.9604, -20.1287, 0.83", "2.91249, -33.1548, -24.3481, 0.83", "3.03684, -33.2168, -24.7709, 0.55", "3.38937, -33.2592, -26.2737, 0.55", "3.68569, -33.1701, -28.2428, 0.55", "4.3035, -31.8808, -33.3403, 0.55", "4.90062, -29.914, -37.5602, 0.55", "5.65038, -27.4718, -41.5945, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-4.69621, -23.6412, -4.58279, 1.38", "-5.92049, -25.4493, -4.64918, 1.38", "-8.35789, -28.3778, -5.48392, 1.66", "-10.3169, -30.7316, -6.15484, 0.83", "-11.6334, -32.3133, -6.6057, 0.83", "-13.2065, -34.2035, -7.14446, 0.83", "-15.8973, -37.4364, -8.06598, 0.83", "-20.5114, -42.1422, -9.94201, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "1.9226, -26.5257, 1.98651, 0.55", "1.72785, -27.7721, 1.34614, 0.55", "1.60106, -28.5836, 0.929249, 0.28", "1.40736, -29.8235, 0.292293, 0.83", "1.21528, -31.0529, -0.339289, 0.55", "0.82369, -33.5593, -1.62696, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "1.9226, -26.5257, 1.98651, 0.55", "3.31111, -27.5608, 2.17912, 0.55", "4.64766, -28.5697, 2.37642, 0.55", "6.77702, -30.2102, 2.71365, 0.28", "8.54753, -31.6516, 3.01775, 0.55", "11.1209, -33.8355, 3.47791, 0.55", "12.8282, -35.3559, 3.75588, 0.55", "14.0434, -36.5193, 3.99523, 0.55", "14.8362, -37.3454, 4.16877, 0.55", "15.866, -38.5738, 4.44237, 0.28", "16.4755, -39.4527, 4.68001, 0.55", "17.2431, -40.7579, 5.03689, 0.28", "17.9855, -42.0945, 5.3022, 0.55", "19.0258, -43.8307, 5.70468, 0.28", "20.2221, -45.6737, 6.07877, 0.55", "21.2324, -47.1313, 6.32581, 0.55", "22.539, -48.8093, 6.65055, 0.55", "24.0402, -50.5295, 7.04323, 0.55", "25.719, -52.271, 7.40031, 0.28", "26.8054, -53.2939, 7.60467, 0.55", "27.8572, -54.1689, 7.74503, 0.55", "29.8, -55.6282, 8.0941, 0.55", "30.6372, -56.2295, 8.2865, 0.28", "31.141, -56.5713, 8.40772, 0.55", "32.2861, -57.3457, 8.63799, 0.28", "34.0546, -58.5003, 9.0768, 0.28", "34.234, -58.611, 9.11289, 0.55", "35.8633, -59.6949, 9.23721, 0.28", "36.5346, -60.1124, 9.27416, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-16.1378, 38.4592, -1.43898, 0.55", "-16.4024, 40.4519, -1.46027, 0.55", "-16.6897, 42.7199, -1.75791, 0.83", "-16.9217, 45.0945, -2.33232, 0.55", "-17.1265, 47.3741, -3.11901, 0.83", "-17.2972, 49.5513, -3.96189, 0.83", "-17.4627, 51.7621, -4.77822, 0.55", "-17.6766, 54.845, -6.08634, 0.83", "-17.844, 58.0928, -7.64883, 0.83", "-17.9273, 60.5532, -8.95124, 0.83", "-18.0702, 63.4055, -10.5152, 0.55", "-18.1564, 65.9545, -11.9326, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-16.1378, 38.4592, -1.43898, 0.28", "-17.559, 38.2811, -0.979175, 0.28", "-19.4931, 37.9096, -0.229645, 0.55", "-20.1514, 37.7826, 0.0527211, 0.55", "-23.1814, 37.222, 1.34816, 0.28", "-23.5099, 37.1682, 1.50299, 0.55", "-25.8887, 36.7429, 2.76649, 0.55", "-27.2555, 36.4497, 3.61858, 0.55", "-29.3556, 35.943, 5.10544, 0.55", "-30.1691, 35.7363, 5.69905, 0.55", "-32.9908, 35.1202, 7.89713, 0.55", "-34.5979, 34.877, 9.13227, 0.28", "-35.4899, 34.7969, 9.80107, 0.55", "-36.8397, 34.8076, 10.8935, 0.28", "-37.6653, 34.9, 11.577, 0.55", "-39.4526, 35.2605, 13.0651, 0.28", "-40.4275, 35.5355, 13.8429, 0.55", "-42.0862, 36.1422, 15.0994, 0.55", "-43.5664, 36.7729, 16.2286, 0.28", "-44.5096, 37.2123, 16.9736, 0.55", "-45.7205, 37.752, 17.9946, 0.28", "-46.8124, 38.1389, 18.86, 0.55", "-55.1789, 36.8849, 22.6413, 0.55", "-63.0716, 35.037, 27.1067, 0.55", "-71.0532, 32.1917, 30.7507, 0.55", "-79.7055, 30.4711, 33.5535, 0.55", "-88.4886, 28.6864, 35.8582, 0.55", "-96.7662, 26.3313, 39.2208, 0.55", "-104.875, 22.812, 41.7549, 0.55", "-111.997, 18.846, 45.9722, 0.55", "-118.528, 14.2298, 50.4083, 0.55", "-123.994, 9.35883, 55.8709, 0.55", "-129.067, 4.02025, 61.2276, 0.55", "-133.342, -0.637571, 67.8434, 0.55", "-138.636, -4.63901, 74.1904, 0.55", "-145.418, -8.46683, 79.0618, 0.55", "-152.862, -12.8662, 82.0661, 0.55", "-160.778, -15.2963, 86.1632, 0.55", "-168.409, -18.4181, 90.2759, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "5.65038, -27.4718, -41.5945, 0.55", "6.73989, -25.7617, -41.7856, 0.55", "7.11913, -25.2423, -41.9204, 0.28", "8.29811, -23.7237, -42.3886, 0.55", "10.1502, -21.624, -43.432, 0.55", "11.5984, -20.0537, -44.3295, 0.28", "13.1877, -18.5359, -45.8042, 0.83", "15.4461, -16.6066, -48.2687, 0.28", "15.9952, -16.1833, -48.9186, 0.55", "18.8899, -14.156, -52.5519, 0.28", "19.7224, -13.6466, -53.6894, 0.83", "25.8699, -10.2725, -62.0549, 0.28", "26.5685, -9.9149, -62.969, 0.55", "28.789, -8.78085, -65.7285, 0.28", "29.8105, -8.26434, -66.9314, 0.83", "34.8793, -5.76531, -72.5322, 0.28", "36.8429, -4.80999, -74.5576, 0.28", "38.1547, -4.16258, -75.758, 0.55", "41.8422, -2.29909, -79.099, 0.28", "43.6896, -1.305, -80.6882, 0.83", "46.4187, 0.329149, -82.9941, 0.55", "47.5331, 1.10437, -83.9519, 0.83", "49.1296, 2.3143, -85.4239, 0.28", "50.3101, 3.27835, -86.5101, 0.83", "54.7572, 7.14731, -90.464, 0.28", "56.6279, 8.92181, -92.1664, 0.83", "60.325, 12.7031, -95.5404, 0.28", "61.0527, 13.4449, -96.229, 0.55", "61.9145, 14.3454, -97.0365, 0.28", "63.123, 15.5698, -98.1956, 0.55", "64.6786, 17.0403, -99.5759, 0.28", "65.2037, 17.3976, -99.9533, 0.55", "67.7968, 18.6942, -101.41, 0.28", "69.2147, 19.2634, -102.087, 0.55", "71.4377, 19.9594, -102.919, 0.28", "73.2001, 20.4506, -103.387, 0.55", "76.4759, 21.2422, -104.013, 0.28", "78.1934, 21.7147, -104.261, 0.55", "80.1172, 22.3245, -104.516, 0.28", "81.709, 22.8592, -104.765, 0.55", "82.9559, 23.3633, -105.008, 0.55", "85.5877, 24.5001, -105.632, 0.28", "87.4599, 25.3054, -106.203, 0.55", "91.405, 26.8558, -107.642, 0.28", "92.4395, 27.2014, -108.063, 0.83", "96.1643, 28.2454, -109.601, 0.28", "98.3394, 28.6558, -110.464, 0.83", "101.204, 28.9457, -111.352, 0.28", "102.645, 28.8355, -111.598, 0.83", "105.44, 28.2867, -111.735, 0.28", "106.809, 27.8947, -111.708, 0.83", "110.107, 26.7061, -111.394, 0.28", "114.018, 25.1553, -110.808, 0.55", "121.258, 21.204, -109.17, 0.28", "122.701, 20.2313, -108.784, 0.55", "123.905, 19.1535, -108.415, 0.55", "125.418, 17.4486, -107.937, 0.28", "125.949, 16.6512, -107.753, 0.55", "130.189, 8.32231, -106.371, 0.28", "130.553, 7.38612, -106.218, 0.55", "132.478, 1.81278, -105.375, 0.28", "132.851, 0.590379, -105.209, 0.55", "133.709, -2.82747, -104.828, 0.28", "133.98, -4.07938, -104.715, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "5.65038, -27.4718, -41.5945, 0.55", "5.58196, -27.8828, -42.8803, 0.55", "5.05576, -29.6735, -48.7342, 0.28", "4.86594, -30.2207, -50.3543, 0.28", "4.69432, -30.8061, -51.86, 0.55", "3.87075, -33.9353, -59.1364, 0.28", "3.64847, -34.6291, -60.5965, 0.55", "3.38372, -35.1474, -61.5423, 0.28", "2.66869, -35.9448, -63.032, 0.55", "1.19539, -37.2747, -65.6376, 0.28", "-0.957717, -39.1742, -69.2898, 0.55", "-2.1999, -40.257, -71.4081, 0.55", "-4.08858, -42.0821, -75.2932, 0.55", "-6.15911, -44.2694, -80.4564, 0.55", "-6.98188, -45.1742, -82.7651, 0.28", "-7.76267, -46.1645, -85.3561, 0.55", "-8.65944, -48.3981, -91.4505, 0.28", "-8.68655, -49.1718, -93.4383, 0.55", "-8.48973, -50.4253, -96.4226, 0.28", "-8.31334, -51.2622, -98.1407, 0.55", "-8.14262, -52.2494, -100.029, 0.55", "-7.84819, -56.4597, -107.915, 0.28", "-7.88323, -58.2048, -111.062, 0.28", "-8.15823, -60.0689, -114.613, 0.83", "-8.36926, -60.8983, -116.213, 0.28", "-8.65349, -61.5901, -117.75, 0.83", "-10.4504, -63.86, -124.422, 0.28", "-10.6898, -64.0558, -125.222, 0.55", "-11.6518, -64.7456, -128.734, 0.28", "-12.3788, -65.316, -131.887, 0.83", "-13.5121, -66.0508, -137.139, 0.83", "-14.5662, -66.5529, -141.825, 0.28", "-15.529, -66.8947, -145.982, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-20.5114, -42.1422, -9.94201, 0.83", "-23.5536, -41.3594, -9.12741, 0.83", "-26.9554, -40.4412, -8.42894, 0.83", "-29.661, -39.6135, -8.04535, 0.83", "-32.5644, -38.6032, -7.82189, 0.83", "-36.5343, -37.0807, -7.85402, 0.83", "-39.645, -35.7764, -8.25921, 0.28", "-41.5012, -34.7606, -8.96365, 0.55", "-43.1119, -33.715, -9.98009, 0.55", "-44.3656, -32.7753, -11.1051, 0.55", "-46.3225, -31.0325, -13.3197, 0.55", "-48.2738, -29.0203, -16.2204, 0.55", "-49.6881, -27.3743, -18.6226, 0.55", "-50.1242, -26.8456, -19.332, 0.83", "-51.1261, -25.6015, -20.8689, 0.55", "-51.6728, -24.8796, -21.618, 0.83", "-53.4335, -22.3352, -23.7305, 0.55", "-53.6492, -22.0204, -23.9246, 0.83", "-54.9861, -20.0651, -24.9282, 0.55", "-56.3832, -18.0687, -25.7295, 0.83", "-57.7067, -16.1353, -26.5112, 0.28", "-58.2786, -15.2868, -26.836, 0.55", "-59.5879, -13.2401, -27.5855, 0.28", "-60.3642, -11.9466, -28.1168, 0.55", "-61.8626, -9.05196, -29.3886, 0.28", "-63.3967, -5.60765, -30.9913, 0.83", "-64.3647, -3.12013, -32.1375, 0.28", "-65.1987, -0.715612, -33.1796, 0.28", "-65.4094, -0.081965, -33.4377, 0.83", "-65.983, 1.68678, -34.1396, 0.55", "-66.6805, 3.79767, -34.9672, 0.83", "-67.5497, 5.99817, -35.7025, 0.55", "-68.1042, 7.33004, -36.1667, 0.83", "-69.3428, 10.1216, -37.1678, 0.83", "-70.5644, 12.7392, -38.1876, 0.55", "-71.4619, 14.5581, -39.043, 0.83", "-72.355, 16.3692, -40.0572, 0.28", "-72.7985, 17.3087, -40.7032, 0.55", "-74.121, 20.2315, -43.0267, 0.28", "-74.7967, 21.7283, -44.3428, 0.83", "-76.0717, 24.2131, -46.8154, 0.28", "-76.6438, 25.1917, -47.8927, 0.83", "-77.8638, 27.0426, -50.4842, 0.55", "-78.6945, 28.1364, -52.1221, 0.55", "-79.6947, 29.3164, -53.9413, 0.83", "-81.4713, 31.3687, -56.8854, 0.55", "-82.4349, 32.452, -58.2659, 0.83", "-85.4457, 35.9039, -62.2879, 0.28", "-87.2561, 38.0146, -64.4459, 0.55", "-88.1666, 39.1532, -65.5572, 0.28", "-89.681, 41.2007, -67.2997, 0.28", "-90.4154, 42.2677, -68.064, 0.28", "-92.0497, 44.6761, -69.6395, 0.55", "-93.2933, 46.4754, -70.6176, 0.28", "-94.646, 48.4226, -71.7871, 0.83", "-96.2128, 51.0829, -73.1046, 0.28", "-96.8621, 52.3815, -73.7071, 0.55", "-98.0666, 55.2595, -74.9574, 0.28", "-98.6727, 56.9449, -75.6274, 0.55", "-98.8997, 57.719, -75.9976, 0.55", "-100.126, 63.3394, -79.0769, 0.28", "-100.383, 65.6412, -80.6373, 0.83", "-100.41, 67.3715, -82.0362, 0.28", "-100.333, 68.492, -83.0717, 0.55", "-100.062, 71.2093, -85.847, 0.28", "-99.765, 73.7871, -88.6055, 0.55", "-99.5366, 75.5092, -90.6245, 0.55", "-99.1896, 77.7998, -93.2193, 0.28", "-99.0284, 78.8069, -94.3687, 0.28", "-98.8475, 79.9869, -95.6732, 0.55", "-98.5525, 83.0522, -98.5412, 0.28", "-98.519, 84.7378, -100.029, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-20.5114, -42.1422, -9.94201, 0.83", "-21.8917, -41.9489, -12.3919, 0.83", "-23.931, -41.4706, -15.6487, 0.55", "-24.3676, -41.3308, -16.2085, 0.55", "-24.854, -41.1871, -16.8127, 0.55", "-26.1521, -40.8271, -18.2591, 0.55", "-28.4659, -40.2693, -20.7805, 0.28", "-29.4002, -40.0839, -22.0074, 0.55", "-30.8456, -39.9541, -23.9481, 0.28", "-32.0005, -39.9849, -25.7605, 0.55", "-33.0564, -40.1389, -27.5191, 0.55", "-34.6373, -40.6204, -30.0474, 0.28", "-37.8372, -41.9467, -35.0178, 0.83", "-38.6776, -42.3717, -36.331, 0.83", "-40.6634, -43.5129, -39.4584, 0.28", "-41.5048, -43.9789, -40.6458, 0.83", "-43.7881, -45.2198, -43.6118, 0.28", "-44.4155, -45.5348, -44.3062, 0.55", "-46.3766, -46.4208, -46.0445, 0.28", "-47.1118, -46.7377, -46.7277, 0.83", "-48.6329, -47.3781, -48.0845, 0.28", "-50.4715, -48.125, -50.1036, 0.55", "-51.9418, -48.6922, -51.9172, 0.28", "-52.615, -48.9922, -53.0445, 0.83", "-54.0967, -49.8556, -56.0606, 0.28", "-54.5443, -50.1824, -57.1341, 0.55", "-55.8219, -51.424, -60.938, 0.28", "-56.0379, -51.6944, -61.7128, 0.55", "-57.5927, -54.2393, -68.7212, 0.28", "-57.9082, -54.8801, -70.4129, 0.28", "-58.1168, -55.4205, -71.6445, 0.55", "-58.6767, -57.1279, -75.2153, 0.28", "-58.9541, -58.0066, -76.7631, 0.28", "-59.4006, -59.2424, -78.7929, 0.28", "-59.64, -59.6459, -79.4034, 0.55", "-60.8735, -61.0077, -81.6946, 0.28", "-61.6062, -61.6631, -82.7882, 0.55", "-62.8449, -62.462, -84.0888, 0.28", "-63.5986, -62.8241, -84.7119, 0.55", "-66.4405, -63.813, -86.628, 0.28", "-67.8418, -64.1795, -87.5725, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.82369, -33.5593, -1.62696, 0.55", "0.632602, -36.131, -0.506797, 0.55", "0.505088, -37.2334, -0.213633, 0.83", "0.353106, -38.6303, 0.0493693, 0.28", "0.260479, -39.4805, 0.179237, 0.55", "0.155987, -40.5538, 0.315425, 0.55", "0.033049, -41.8353, 0.475412, 0.55", "-0.136356, -43.3811, 0.541539, 0.55", "-0.290642, -44.9555, 0.666345, 0.55", "-0.374106, -45.8318, 0.734377, 0.28", "-0.441452, -46.5023, 0.742437, 0.55", "-0.55935, -47.5034, 0.654398, 0.28", "-0.626031, -48.3655, 0.516509, 0.55", "-0.680476, -49.8899, 0.269533, 0.55", "-0.729532, -51.6105, -0.110987, 0.55", "-0.684745, -54.0967, -0.617691, 0.55", "-0.587354, -56.3958, -1.11349, 0.55", "-0.354279, -59.1069, -1.67673, 0.28", "-0.137653, -60.7346, -1.97335, 0.83", "0.481702, -64.0077, -2.40005, 0.28", "1.04102, -66.2961, -2.5459, 0.83", "1.47256, -67.8085, -2.47948, 0.28", "1.82759, -69.2413, -2.3459, 0.55", "2.10155, -70.8157, -2.20248, 0.28", "2.26749, -72.2927, -2.11702, 0.55", "2.37718, -73.6141, -2.02086, 0.28", "2.41039, -74.7548, -1.98774, 0.55", "2.43388, -78.5064, -1.92372, 0.28", "2.39262, -79.5877, -1.96303, 0.83", "2.28302, -81.5181, -2.06075, 0.83", "2.17582, -83.4435, -2.18317, 0.28", "2.15575, -84.1957, -2.21456, 0.55", "2.16795, -85.6994, -2.28373, 0.28", "2.19212, -86.4894, -2.31896, 0.55", "2.24612, -87.8547, -2.29517, 0.28", "2.24229, -88.5284, -2.22239, 0.55", "2.1403, -89.9946, -1.95349, 0.28", "2.05002, -90.8397, -1.71908, 0.83", "1.91896, -92.1989, -1.13409, 0.28", "1.83008, -94.1339, 0.0135578, 0.55", "1.79373, -95.2812, 0.788664, 0.28", "1.77637, -95.6912, 1.05637, 0.55", "1.72648, -96.5076, 1.57081, 0.55", "1.48994, -99.4219, 3.25167, 0.28", "1.39788, -101.105, 4.22437, 0.28", "1.36715, -101.546, 4.44847, 0.55", "1.23217, -103.818, 5.63774, 0.28", "1.15064, -104.787, 6.10931, 0.55", "0.964585, -106.379, 6.78812, 0.28", "0.533627, -109.011, 7.70766, 0.28", "0.307339, -110.485, 8.17249, 1.11", "-0.030345, -112.957, 8.99824, 0.28", "-0.170251, -114.197, 9.43233, 0.55", "-0.272789, -115.198, 9.72301, 0.28", "-0.351219, -115.822, 9.83513, 0.55", "-0.765825, -118.107, 10.0082, 0.28", "-0.961127, -119.153, 10.0641, 0.55", "-1.19858, -120.51, 10.1531, 0.28", "-1.41051, -121.762, 10.2995, 0.28", "-1.6894, -123.289, 10.492, 0.83", "-2.06229, -125.44, 10.7685, 0.83", "-2.5527, -128.591, 11.1694, 0.28", "-2.69094, -129.879, 11.4077, 0.55", "-2.79334, -131.673, 11.8026, 0.28", "-2.80368, -132.718, 12.0826, 0.55", "-2.66676, -135.707, 12.8933, 0.28", "-2.49531, -137.706, 13.37, 0.83", "-2.16191, -140.455, 13.9143, 0.28", "-1.88865, -142.431, 14.2365, 0.28", "-1.74358, -143.389, 14.368, 0.55", "-1.20091, -147.244, 14.7586, 0.28", "-0.942212, -149.785, 14.8248, 0.28", "-0.845011, -151.287, 14.7616, 0.55", "-0.783625, -153.335, 14.5636, 0.28", "-0.778311, -154.388, 14.4477, 0.55", "-0.785129, -156.772, 14.2103, 0.28", "-0.812976, -158.431, 14.0561, 0.55", "-0.94629, -163.122, 13.6009, 0.28", "-1.00862, -164.606, 13.458, 0.55", "-1.05544, -166.974, 13.1975, 0.28", "-1.02787, -168.636, 13.0551, 0.55", "-1.5328, -176.223, 14.2339, 0.55", "-3.10312, -183.685, 15.3507, 0.55", "-3.28189, -191.325, 16.2036, 0.55", "-4.92703, -198.839, 16.5704, 0.55", "-6.27893, -206.395, 17.1265, 0.55", "-7.80167, -213.937, 16.8551, 0.55", "-8.92834, -221.459, 18.0549, 0.55", "-8.74874, -228.842, 20.2954, 0.55", "-8.36349, -235.949, 23.3502, 0.55", "-7.03891, -243.377, 24.9545, 0.55", "-5.65368, -250.486, 27.7014, 0.55", "-5.24124, -257.736, 30.3541, 0.55", "-3.93502, -264.449, 34.0738, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.82369, -33.5593, -1.62696, 0.55", "1.15856, -34.1542, -2.51518, 0.55", "1.43359, -34.6811, -3.23179, 0.55", "2.17449, -36.0296, -4.88445, 0.55", "2.71707, -36.9313, -5.92442, 0.28", "3.01418, -37.3835, -6.44266, 0.55", "3.64124, -38.2819, -7.45105, 0.28", "3.9912, -38.8275, -8.00677, 0.28", "4.44586, -39.4325, -8.60872, 0.55", "4.77728, -39.8191, -8.93929, 0.55", "5.48897, -40.5567, -9.60336, 0.28", "5.73877, -40.8089, -9.84134, 0.55", "6.96052, -41.9446, -11.0175, 0.55", "7.60906, -42.5559, -11.7396, 0.55", "7.93429, -42.8868, -12.1607, 0.55", "8.54578, -43.5364, -13.0514, 0.55", "9.2901, -44.2979, -14.2241, 0.55", "10.0307, -45.038, -15.4222, 0.55", "10.6332, -45.6275, -16.4073, 0.28", "11.0517, -46.086, -17.1384, 0.55", "11.689, -46.7964, -18.3321, 0.55", "12.3675, -47.5814, -19.6544, 0.55", "12.8669, -48.1961, -20.6559, 0.28", "12.9978, -48.3618, -20.9094, 0.55", "13.5038, -48.9231, -21.8303, 0.28", "14.1718, -49.6107, -22.9833, 0.28", "14.5499, -50.0024, -23.6466, 0.55", "14.8521, -50.3295, -24.2413, 0.55", "15.123, -50.5952, -24.8178, 0.28", "15.6213, -51.1308, -26.0833, 0.55", "15.8991, -51.4408, -26.8279, 0.28", "16.1436, -51.7552, -27.6468, 0.55", "16.4836, -52.2599, -28.9648, 0.28", "16.6912, -52.7162, -30.1853, 0.55", "16.903, -53.3811, -31.8482, 0.28", "16.9698, -53.6679, -32.5389, 0.55", "17.1328, -54.5096, -34.7514, 0.28", "17.1824, -54.8822, -35.7697, 0.55", "17.1989, -56.085, -39.2752, 0.28", "17.1761, -56.2563, -39.7826, 0.28", "17.1484, -56.4352, -40.3214, 0.55", "17.0216, -57.1804, -42.5554, 0.28", "16.9912, -57.3296, -42.9991, 0.55", "16.8353, -57.9687, -45.0486, 0.28", "16.7526, -58.2483, -45.9219, 0.55", "16.5989, -58.6512, -47.2532, 0.28", "16.4977, -58.9032, -48.0617, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "36.5346, -60.1124, 9.27416, 0.28", "36.3617, -63.4363, 8.69216, 0.28", "36.2916, -64.7711, 8.51802, 0.55", "36.342, -68.1513, 8.3682, 0.28", "36.4483, -69.5885, 8.30051, 0.55", "36.6121, -72.4622, 8.32613, 0.28", "36.691, -73.847, 8.33847, 0.28", "36.7715, -75.734, 8.3118, 0.28", "36.9983, -79.0332, 8.50085, 0.28", "37.269, -81.7182, 8.93647, 0.28", "37.7663, -84.804, 9.53304, 0.55", "39.372, -92.9737, 10.4361, 0.55", "39.9874, -101.121, 12.2954, 0.55", "40.8248, -109.166, 14.526, 0.55", "42.0291, -116.567, 18.4463, 0.55", "43.739, -124.017, 22.0653, 0.55", "44.5273, -131.37, 26.1869, 0.55", "44.7348, -139.399, 28.6176, 0.55", "44.1393, -147.025, 32.1723, 0.55", "42.8103, -154.422, 36.0461, 0.55", "43.1947, -161.774, 40.2255, 0.55", "43.7132, -169.015, 44.5992, 0.55", "43.6166, -175.925, 49.5587, 0.55", "41.8877, -181.897, 55.4704, 0.55", "39.5212, -186.817, 62.1787, 0.55", "36.1786, -192.4, 67.8059, 0.55", "32.3098, -196.198, 74.6176, 0.55", "29.634, -200.803, 81.4552, 0.55", "27.9587, -205.35, 88.647, 0.55", "25.4424, -209.273, 95.9962, 0.55", "24.1584, -213.099, 103.713, 0.55", "23.4867, -217.123, 111.398, 0.55", "22.8162, -219.751, 119.721, 0.55", "21.0625, -221.073, 128.221, 0.55", "20.0415, -220.932, 136.945, 0.55", "20.3961, -221.059, 145.723, 0.55", "20.4958, -220.228, 154.46, 0.55", "20.6743, -220.386, 163.243, 0.55", "22.2154, -221.614, 171.801, 0.55", "23.5578, -222.485, 180.439, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "36.5346, -60.1124, 9.27416, 0.28", "38.9301, -60.4542, 9.44914, 0.28", "40.3599, -60.7419, 9.52721, 0.55", "42.3615, -61.2348, 9.55683, 0.28", "43.7092, -61.6714, 9.50581, 0.55", "44.2128, -61.8552, 9.46032, 0.55", "46.3263, -62.6938, 9.21575, 0.28", "47.2109, -63.1193, 9.05491, 0.28", "47.9885, -63.5543, 8.88563, 0.55", "49.366, -64.446, 8.51411, 0.28", "51.5465, -65.8644, 7.86407, 0.28", "51.9818, -66.1457, 7.71824, 0.55", "59.7498, -69.6571, 6.01617, 0.55", "67.1484, -73.2612, 3.23155, 0.55", "73.5987, -78.249, 0.448725, 0.55", "81.3977, -81.4208, -1.76652, 0.55", "88.965, -84.6747, -4.57331, 0.55", "96.1096, -87.9151, -8.33831, 0.55", "103.32, -92.0447, -10.7902, 0.55", "110.401, -96.9239, -11.4554, 0.55", "116.821, -102.412, -12.9934, 0.55", "124.016, -107.182, -12.9872, 0.55", "130.637, -112.482, -14.3971, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-18.1564, 65.9545, -11.9326, 0.55", "-18.1127, 68.8456, -12.5019, 0.55", "-18.0682, 72.2909, -13.245, 0.55", "-18.0851, 75.5015, -14.2864, 0.55", "-18.089, 75.7095, -14.3624, 0.55", "-18.1578, 77.9596, -15.3469, 0.83", "-18.2591, 80.499, -16.4966, 0.55", "-18.3441, 81.8438, -17.2843, 0.83", "-18.4733, 84.7241, -19.2005, 0.55", "-18.5082, 85.5877, -19.7956, 0.83", "-18.6346, 88.1786, -21.4779, 0.55", "-18.6614, 89.8192, -22.4422, 0.83", "-18.6167, 93.3891, -24.193, 0.55", "-18.5347, 96.1611, -25.2963, 0.55", "-18.4656, 98.5146, -25.9875, 0.55", "-18.4445, 100.023, -26.4145, 0.83", "-18.4647, 103.802, -27.2282, 0.28", "-18.5144, 105.27, -27.5901, 0.55", "-18.692, 107.708, -28.2538, 0.28", "-18.8397, 109.245, -28.8451, 0.55", "-19.2279, 112.344, -30.366, 0.28", "-19.4911, 114.033, -31.3481, 0.55", "-20.2835, 117.463, -33.702, 0.28", "-20.7676, 119.427, -35.1238, 0.55", "-21.3641, 121.656, -36.779, 0.28", "-21.769, 123.018, -37.76, 0.55", "-22.0418, 123.865, -38.2984, 0.28", "-22.6228, 125.7, -39.4366, 0.55", "-23.3898, 128.189, -40.6108, 0.28", "-23.7265, 129.352, -41.0757, 0.55", "-23.9661, 130.309, -41.3947, 0.28", "-24.1904, 131.493, -41.7582, 0.83", "-24.8016, 135.164, -42.4534, 0.28", "-25.008, 136.508, -42.5416, 0.55", "-25.1974, 137.801, -42.5403, 0.28", "-25.4945, 140.207, -42.4949, 0.55", "-25.6291, 141.146, -42.4245, 0.83", "-26.0771, 144.388, -42.3701, 0.28", "-26.381, 146.467, -42.365, 0.55", "-26.5998, 148.168, -42.4516, 0.28", "-26.804, 150.252, -42.6173, 0.55", "-27.0386, 154.529, -43.0206, 0.28", "-27.0417, 159.007, -43.3877, 0.55", "-26.8307, 163.202, -43.7135, 0.28", "-26.583, 165.984, -43.8141, 0.55", "-26.3893, 167.886, -43.7639, 0.55", "-26.1535, 169.778, -43.6647, 0.55", "-25.7076, 172.696, -43.4548, 0.28", "-25.5072, 173.927, -43.3706, 0.55", "-25.1347, 175.804, -43.3771, 0.28", "-24.7825, 177.628, -43.5597, 0.55", "-24.3042, 180.461, -44.0351, 0.28", "-23.8988, 183.126, -44.7613, 0.55", "-23.1878, 188.216, -46.4535, 0.28", "-23.0651, 189.137, -46.766, 0.83", "-22.5852, 193.062, -48.1079, 0.28", "-22.3341, 195.141, -48.8498, 0.83", "-21.8082, 199.983, -50.5089, 0.28", "-21.5872, 202.316, -51.238, 0.55", "-21.4468, 204.389, -51.8291, 0.28", "-21.3646, 205.592, -52.1696, 0.55", "-21.2388, 207.351, -52.5861, 0.28", "-21.05, 209.416, -53.0512, 0.55", "-20.6611, 214.209, -53.9425, 0.55", "-20.4256, 217.297, -54.5359, 0.28", "-20.2433, 219.444, -54.9701, 0.55", "-20.0174, 221.608, -55.3552, 0.28", "-19.7206, 224.179, -55.7123, 0.55", "-19.2672, 227.466, -56.1728, 0.55", "-19.0031, 228.944, -56.355, 0.28", "-18.6486, 230.729, -56.5137, 0.55", "-18.2012, 232.976, -56.7154, 0.28", "-17.7729, 235.069, -56.9071, 0.55", "-17.3249, 237.223, -57.1359, 0.28", "-16.5472, 241.119, -57.5565, 0.55", "-15.3713, 247.821, -58.2389, 0.28", "-15.0865, 249.627, -58.4402, 0.55", "-14.6478, 252.453, -58.7867, 0.28", "-14.3003, 254.769, -59.0708, 0.55", "-13.8715, 257.824, -59.3332, 0.28", "-13.6737, 259.471, -59.4739, 0.55", "-13.3175, 261.836, -59.6743, 0.28", "-12.9966, 263.772, -59.7926, 0.55", "-12.731, 265.284, -59.9056, 0.55", "-11.7894, 269.594, -60.1107, 0.28", "-11.2035, 271.9, -60.326, 0.55", "-10.3016, 275.321, -60.6372, 0.55", "-9.65143, 277.924, -60.9579, 0.55", "-8.46023, 282.686, -61.6671, 0.28", "-7.35201, 286.86, -62.3718, 0.55", "-6.13801, 291.224, -63.1592, 0.28", "-5.16855, 294.619, -63.702, 0.55", "-4.28485, 297.915, -64.1956, 0.28", "-3.88024, 299.398, -64.4102, 0.55", "-3.04959, 302.551, -64.6543, 0.28", "-2.53598, 304.822, -64.6267, 0.55", "-2.28852, 305.737, -64.4798, 0.28", "-1.61556, 307.746, -64.1397, 0.55", "-0.863148, 309.717, -63.7675, 0.28", "-0.372501, 311.027, -63.4258, 0.55", "0.824106, 314.206, -62.2399, 0.55", "1.81212, 316.88, -61.1752, 0.55", "2.76022, 319.493, -60.1087, 0.28", "3.50061, 321.619, -59.2503, 0.55", "5.11337, 326.829, -57.2169, 0.28", "5.69282, 328.922, -56.483, 0.55", "6.42593, 331.502, -55.8947, 0.28", "6.96845, 333.615, -55.6173, 0.55", "7.61068, 335.962, -55.4548, 0.28", "8.1383, 337.715, -55.5075, 0.28", "8.91547, 340.07, -55.8606, 0.55", "10.657, 345.072, -56.6937, 0.28", "11.6863, 347.924, -57.0538, 0.55", "12.6898, 350.659, -57.3426, 0.28", "13.6439, 353.283, -57.615, 0.55", "14.3295, 355.342, -57.7697, 0.28", "15.0708, 357.946, -57.8635, 0.55", "15.7389, 361.227, -57.8157, 0.28", "15.8309, 361.832, -57.8174, 0.55", "16.3478, 367.352, -57.9071, 0.28", "16.5377, 371.926, -57.968, 0.28", "16.5202, 374.339, -58.0218, 0.55", "16.331, 377.88, -58.1565, 0.28", "16.2209, 379.183, -58.2026, 0.55", "15.9388, 381.887, -58.3002, 0.28", "15.6838, 383.515, -58.2596, 0.55", "15.2918, 385.796, -58.1608, 0.28", "14.9379, 388.06, -57.961, 0.55", "14.5851, 390.865, -57.6722, 0.28", "14.2689, 393.67, -57.3182, 0.55", "13.8989, 396.886, -56.8457, 0.28", "13.668, 398.98, -56.4748, 0.55", "13.3501, 401.409, -55.911, 0.28", "13.0203, 403.432, -55.4867, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-18.1564, 65.9545, -11.9326, 0.28", "-19.9463, 69.0536, -11.8323, 0.28", "-21.6893, 72.0713, -11.7346, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-21.6893, 72.0713, -11.7346, 0.28", "-21.8781, 74.1565, -12.2499, 0.28", "-22.0023, 75.3229, -12.5007, 0.83", "-22.1876, 77.2439, -12.9046, 0.28", "-22.2895, 78.2262, -13.0965, 0.83", "-22.5262, 80.2631, -13.4727, 0.28", "-22.7064, 81.6837, -13.5987, 0.83", "-22.9226, 83.2963, -13.6888, 0.28", "-23.066, 84.2115, -13.6543, 0.83", "-23.3001, 85.6316, -13.4526, 0.83", "-23.5518, 87.2504, -13.1381, 0.83", "-24.0405, 90.2053, -12.1493, 0.28", "-24.1016, 90.6241, -11.988, 0.83", "-24.2774, 91.9408, -11.4808, 0.28", "-24.4607, 93.2605, -10.9792, 0.55", "-24.7674, 95.4904, -10.1415, 0.55", "-25.2456, 98.7563, -8.94922, 0.28", "-25.4609, 100.253, -8.51449, 0.55", "-25.6494, 101.685, -8.36417, 0.28", "-25.8411, 103.198, -8.52626, 0.28", "-25.9724, 104.178, -8.83098, 0.55", "-26.203, 105.618, -9.5309, 0.28", "-26.4356, 106.906, -10.3067, 0.28", "-27.6457, 112.038, -13.3182, 0.28", "-27.8872, 112.912, -13.8233, 0.55", "-28.3679, 114.486, -14.7445, 0.28", "-28.7431, 115.695, -15.4163, 0.83", "-29.3791, 117.702, -16.3797, 0.28", "-29.9364, 119.558, -17.1435, 0.55", "-30.5307, 121.771, -17.8602, 0.55", "-31.1327, 124.454, -18.8144, 0.28", "-31.4541, 126.169, -19.4399, 0.28", "-31.8606, 129.297, -20.6097, 0.55", "-32.143, 132.34, -21.7294, 0.28", "-32.2011, 133.682, -22.233, 0.55", "-32.2169, 135.359, -22.8171, 0.28", "-32.1806, 137.352, -23.5161, 0.55", "-32.0831, 140.795, -24.7526, 0.28", "-32.0296, 141.795, -25.0976, 0.55", "-31.9221, 143.526, -25.6214, 0.28", "-31.8184, 145.102, -26.0726, 0.83", "-31.5276, 148.412, -26.9407, 0.28", "-31.323, 150.108, -27.4517, 0.55", "-31.1204, 151.926, -27.9597, 0.28", "-30.9886, 153.152, -28.3051, 0.55", "-30.8306, 154.746, -28.7185, 0.55", "-30.5535, 157.649, -29.4582, 0.55", "-30.3585, 161.053, -30.1754, 0.28", "-30.2698, 162.611, -30.5463, 0.55", "-30.2405, 163.627, -30.79, 0.28", "-30.1876, 165.215, -31.2598, 0.83", "-30.1033, 166.872, -31.7541, 0.28", "-30.0512, 168.573, -32.2724, 0.55", "-30.0101, 170.578, -32.8422, 0.55", "-29.9398, 172.361, -33.5296, 0.55", "-29.8612, 175.267, -34.7548, 0.28", "-29.8564, 176.431, -35.262, 0.55", "-29.8807, 178.831, -36.278, 0.28", "-29.952, 180.332, -36.8528, 0.55", "-30.3387, 183.55, -37.9552, 0.28", "-30.5331, 184.789, -38.3871, 0.55", "-31.0105, 186.88, -39.0485, 0.55", "-31.2573, 187.815, -39.4096, 0.55", "-31.7399, 189.55, -40.1268, 0.55", "-32.2918, 191.371, -40.9313, 0.28", "-32.7148, 192.651, -41.5026, 0.55", "-33.1871, 194.081, -42.235, 0.28", "-34.0858, 196.607, -43.6886, 0.55", "-34.5869, 198.032, -44.5834, 0.28", "-34.7988, 198.703, -45.0135, 0.55", "-35.2371, 200.056, -45.699, 0.28", "-35.4086, 200.646, -45.9485, 0.55", "-35.6944, 201.92, -46.4156, 0.28", "-36.1271, 204.297, -47.0838, 0.55", "-36.3402, 206.316, -47.6702, 0.28", "-36.4989, 208.908, -48.356, 0.55", "-36.5705, 211.058, -48.8174, 0.55", "-36.5604, 213.317, -49.1123, 0.28", "-36.5317, 214.114, -49.1507, 0.55", "-36.4131, 217.741, -49.0141, 0.28", "-36.362, 219.026, -49.0044, 0.28", "-36.3171, 220.632, -48.9665, 0.55", "-36.3404, 224.173, -48.5607, 0.28", "-36.3551, 225.557, -48.3806, 0.83", "-36.3697, 227.849, -48.0542, 0.55", "-36.4078, 231.841, -47.3885, 0.55", "-36.3995, 235.083, -46.9241, 0.28", "-36.3676, 237.254, -46.5955, 0.55", "-36.3102, 239.736, -46.2179, 0.55", "-36.2639, 241.179, -45.8818, 0.28", "-36.2124, 242.385, -45.4749, 0.55", "-36.1699, 243.559, -44.9113, 0.55", "-36.1181, 244.989, -44.2582, 0.28", "-36.1356, 246.476, -43.6359, 0.55", "-36.2676, 249.101, -42.516, 0.28", "-36.3499, 250.452, -41.9641, 0.55", "-36.4892, 252.232, -41.228, 0.28", "-36.6014, 253.68, -40.5768, 0.55", "-36.864, 257.018, -39.1082, 0.28", "-36.9481, 258.162, -38.6091, 0.55", "-37.1552, 261.208, -37.3662, 0.28", "-37.2816, 263.109, -36.6177, 0.55", "-37.5305, 267.201, -34.9364, 0.28", "-37.6075, 268.684, -34.287, 0.28", "-37.6646, 270.197, -33.6486, 0.55", "-37.7119, 272.194, -32.9254, 0.28", "-37.7304, 273.354, -32.575, 0.55", "-37.7347, 276.035, -31.9174, 0.28", "-37.7536, 277.224, -31.6923, 0.55", "-37.7773, 279.255, -31.2272, 0.28", "-37.7582, 280.915, -30.855, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-21.6893, 72.0713, -11.7346, 0.28", "-25.0812, 74.8112, -9.38213, 0.28", "-27.3838, 76.6712, -7.78521, 0.28", "-29.5008, 78.3812, -6.31702, 0.55", "-30.5276, 79.2107, -5.60486, 0.55", "-33.8084, 81.8609, -3.32948, 0.28", "-36.2516, 83.8344, -1.63505, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_24", "dend_23", "dend_16", "dend_13", "dend_0", "dend_39", "dend_30", "dend_26", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_10", "dend_1", "dend_47", "dend_40", "dend_32", "dend_31", "dend_28", "dend_27", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_49", "dend_48", "dend_44", "dend_41", "dend_36", "dend_33", "dend_5", "dend_4", "dend_46", "dend_45", "dend_43", "dend_42", "dend_38", "dend_37", "dend_35", "dend_34", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_24", "dend_23", "dend_16", "dend_13", "dend_0", "dend_39", "dend_30", "dend_26", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_10", "dend_1", "dend_47", "dend_40", "dend_32", "dend_31", "dend_28", "dend_27", "dend_22", "dend_21", "dend_19", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_49", "dend_48", "dend_44", "dend_41", "dend_36", "dend_33", "dend_5", "dend_4", "dend_46", "dend_45", "dend_43", "dend_42", "dend_38", "dend_37", "dend_35", "dend_34", "dend_9", "dend_6", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "axon_1", "axon_1", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_NBC_dc5e34b933_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_29
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_47, id: dend_47, parent: dend_39
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.49999884142687223)
    connect dend_24(0), soma_0(0.49999884142687223)
    connect dend_23(0), soma_0(0.49999884142687223)
    connect dend_16(0), soma_0(0.49999884142687223)
    connect dend_13(0), soma_0(0.49999884142687223)
    connect dend_0(0), soma_0(0.49999884142687223)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_47(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.75872, -10.4532, 0.754391, 3.47327 ) }
    soma_0 { pt3dadd( -3.51208, -9.3518, 0.693156, 4.11268 ) }
    soma_0 { pt3dadd( -3.26545, -8.25037, 0.631922, 5.19122 ) }
    soma_0 { pt3dadd( -3.01882, -7.14893, 0.570687, 5.79177 ) }
    soma_0 { pt3dadd( -2.77218, -6.04749, 0.509453, 6.43344 ) }
    soma_0 { pt3dadd( -2.52555, -4.94606, 0.448218, 7.33547 ) }
    soma_0 { pt3dadd( -2.27891, -3.84462, 0.386984, 7.89448 ) }
    soma_0 { pt3dadd( -2.03228, -2.74319, 0.325749, 8.07665 ) }
    soma_0 { pt3dadd( -1.78564, -1.64175, 0.264515, 8.19647 ) }
    soma_0 { pt3dadd( -1.53901, -0.540314, 0.20328, 8.39724 ) }
    soma_0 { pt3dadd( -1.29237, 0.561122, 0.142046, 8.72156 ) }
    soma_0 { pt3dadd( -1.04574, 1.66256, 0.0808113, 9.67228 ) }
    soma_0 { pt3dadd( -0.799104, 2.76399, 0.0195768, 10.9168 ) }
    soma_0 { pt3dadd( -0.552469, 3.86543, -0.0416577, 10.7105 ) }
    soma_0 { pt3dadd( -0.305834, 4.96687, -0.102892, 10.3432 ) }
    soma_0 { pt3dadd( -0.0591998, 6.0683, -0.164127, 10.3014 ) }
    soma_0 { pt3dadd( 0.187435, 7.16974, -0.225361, 9.6708 ) }
    soma_0 { pt3dadd( 0.43407, 8.27117, -0.286596, 8.78455 ) }
    soma_0 { pt3dadd( 0.680704, 9.37261, -0.34783, 7.41865 ) }
    soma_0 { pt3dadd( 0.927339, 10.474, -0.409065, 4.25873 ) }
    soma_0 { pt3dadd( 1.17397, 11.5755, -0.470299, 2.57124 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.92645, -10.4841, 4.08428, 2.77 ) }
    dend_29 { pt3dadd( -3.90833, -10.9599, 4.08428, 3.05 ) }
    dend_29 { pt3dadd( -3.83999, -12.7544, 4.08428, 3.05 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 24/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -5.80645, -9.08765, 7.55429, 0.55 ) }
    dend_24 { pt3dadd( -6.30053, -9.7282, 8.95588, 0.55 ) }
    dend_24 { pt3dadd( -7.08789, -10.749, 11.1895, 1.11 ) }
    dend_24 { pt3dadd( -9.39696, -13.7426, 17.7398, 0.55 ) }
    dend_24 { pt3dadd( -10.1775, -14.7546, 19.9541, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 29/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.976448, 8.72485, -7.52571, 0.83 ) }
    dend_23 { pt3dadd( -0.320921, 10.0668, -8.79782, 0.83 ) }
    dend_23 { pt3dadd( 0.342508, 11.8235, -10.939, 0.55 ) }
    dend_23 { pt3dadd( 0.680633, 12.6275, -11.897, 0.83 ) }
    dend_23 { pt3dadd( 0.985965, 13.4282, -12.8978, 0.55 ) }
    dend_23 { pt3dadd( 1.2632, 14.2306, -13.9625, 0.55 ) }
    dend_23 { pt3dadd( 1.67752, 15.5346, -15.6133, 0.83 ) }
    dend_23 { pt3dadd( 2.31415, 17.8698, -18.6955, 0.55 ) }
    dend_23 { pt3dadd( 2.64699, 19.1775, -20.3509, 0.83 ) }
    dend_23 { pt3dadd( 3.47101, 22.0621, -23.9821, 0.55 ) }
    dend_23 { pt3dadd( 3.96529, 23.5486, -25.8156, 0.55 ) }
    dend_23 { pt3dadd( 4.40465, 24.6465, -27.1668, 0.28 ) }
    dend_23 { pt3dadd( 5.1892, 26.4141, -29.1757, 0.83 ) }
    dend_23 { pt3dadd( 5.81805, 27.8227, -30.5526, 0.28 ) }
    dend_23 { pt3dadd( 6.54202, 29.5705, -32.0392, 0.83 ) }
    dend_23 { pt3dadd( 6.86654, 30.3794, -32.5744, 0.28 ) }
    dend_23 { pt3dadd( 7.68566, 32.5116, -33.749, 0.55 ) }
    dend_23 { pt3dadd( 8.13134, 33.8804, -34.381, 0.55 ) }
    dend_23 { pt3dadd( 8.67249, 35.9947, -35.0912, 0.55 ) }
    dend_23 { pt3dadd( 9.34011, 39.605, -36.17, 0.83 ) }
    dend_23 { pt3dadd( 9.52532, 41.1986, -36.6785, 0.55 ) }
    dend_23 { pt3dadd( 9.67832, 43.0164, -37.29, 0.83 ) }
    dend_23 { pt3dadd( 9.83284, 45.7986, -38.2922, 0.83 ) }
    dend_23 { pt3dadd( 9.91432, 47.663, -39.0836, 0.28 ) }
    dend_23 { pt3dadd( 10.0183, 50.2629, -40.4893, 0.83 ) }
    dend_23 { pt3dadd( 10.1617, 53.1605, -42.2687, 0.55 ) }
    dend_23 { pt3dadd( 10.2502, 54.6074, -43.2083, 0.55 ) }
    dend_23 { pt3dadd( 10.4046, 57.0509, -44.9332, 0.55 ) }
    dend_23 { pt3dadd( 10.6691, 59.6878, -46.9287, 0.55 ) }
    dend_23 { pt3dadd( 11.0017, 62.4647, -48.9468, 0.55 ) }
    dend_23 { pt3dadd( 11.2558, 64.1828, -50.112, 0.28 ) }
    dend_23 { pt3dadd( 11.4079, 65.1442, -50.7339, 0.55 ) }
    dend_23 { pt3dadd( 11.9542, 68.6985, -53.0161, 0.28 ) }
    dend_23 { pt3dadd( 12.2, 70.2551, -53.998, 0.55 ) }
    dend_23 { pt3dadd( 12.4208, 71.7135, -54.8784, 0.28 ) }
    dend_23 { pt3dadd( 12.7617, 73.8069, -56.1421, 0.55 ) }
    dend_23 { pt3dadd( 13.2916, 76.7671, -58.0185, 0.28 ) }
    dend_23 { pt3dadd( 13.6031, 78.395, -59.0251, 0.55 ) }
    dend_23 { pt3dadd( 14.3043, 81.6234, -60.957, 0.28 ) }
    dend_23 { pt3dadd( 14.5783, 82.7646, -61.6401, 0.55 ) }
    dend_23 { pt3dadd( 15.2392, 85.3185, -63.2253, 0.28 ) }
    dend_23 { pt3dadd( 15.5329, 86.4187, -63.8886, 0.28 ) }
    dend_23 { pt3dadd( 15.8292, 87.4769, -64.5251, 0.55 ) }
    dend_23 { pt3dadd( 16.4032, 89.6702, -65.9652, 0.28 ) }
    dend_23 { pt3dadd( 16.6751, 90.7031, -66.6462, 0.55 ) }
    dend_23 { pt3dadd( 17.0763, 92.3688, -67.7666, 0.55 ) }
    dend_23 { pt3dadd( 17.5799, 94.8293, -69.3389, 0.28 ) }
    dend_23 { pt3dadd( 17.6594, 95.2602, -69.6042, 0.55 ) }
    dend_23 { pt3dadd( 18.1359, 97.8357, -71.0111, 0.28 ) }
    dend_23 { pt3dadd( 18.2519, 98.5624, -71.3515, 0.55 ) }
    dend_23 { pt3dadd( 18.4609, 99.8582, -71.936, 0.28 ) }
    dend_23 { pt3dadd( 18.6526, 100.913, -72.3573, 0.55 ) }
    dend_23 { pt3dadd( 19.3103, 103.983, -73.4527, 0.28 ) }
    dend_23 { pt3dadd( 19.9009, 106.346, -74.2347, 0.28 ) }
    dend_23 { pt3dadd( 20.2168, 107.492, -74.5587, 0.55 ) }
    dend_23 { pt3dadd( 20.8392, 109.594, -75.1395, 0.28 ) }
    dend_23 { pt3dadd( 21.0522, 110.243, -75.3294, 0.55 ) }
    dend_23 { pt3dadd( 21.7317, 112.161, -75.8963, 0.28 ) }
    dend_23 { pt3dadd( 22.3108, 113.715, -76.3466, 0.55 ) }
    dend_23 { pt3dadd( 22.9781, 115.38, -76.8132, 0.55 ) }
    dend_23 { pt3dadd( 24.3611, 118.61, -77.6207, 0.28 ) }
    dend_23 { pt3dadd( 24.8398, 119.714, -77.8678, 0.55 ) }
    dend_23 { pt3dadd( 25.3451, 120.852, -78.1078, 0.28 ) }
    dend_23 { pt3dadd( 25.9067, 122.081, -78.3854, 0.55 ) }
    dend_23 { pt3dadd( 26.5414, 123.309, -78.813, 0.28 ) }
    dend_23 { pt3dadd( 26.9201, 123.968, -79.1114, 0.55 ) }
    dend_23 { pt3dadd( 27.955, 125.606, -79.9591, 0.28 ) }
    dend_23 { pt3dadd( 28.7576, 126.884, -80.6383, 0.28 ) }
    dend_23 { pt3dadd( 29.4942, 128.074, -81.2949, 0.55 ) }
    dend_23 { pt3dadd( 31.1234, 130.758, -82.7428, 0.28 ) }
    dend_23 { pt3dadd( 31.633, 131.64, -83.2773, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 32.039, 132.316, -83.7029, 0.28 ) }
    dend_23 { pt3dadd( 32.5792, 133.201, -84.2372, 0.55 ) }
    dend_23 { pt3dadd( 33.1138, 134.059, -84.7983, 0.28 ) }
    dend_23 { pt3dadd( 33.603, 134.811, -85.2768, 0.55 ) }
    dend_23 { pt3dadd( 35.8901, 138.228, -87.4856, 0.28 ) }
    dend_23 { pt3dadd( 36.6366, 139.264, -88.1869, 0.28 ) }
    dend_23 { pt3dadd( 37.21, 139.987, -88.7372, 0.55 ) }
    dend_23 { pt3dadd( 38.9439, 141.965, -90.3754, 0.28 ) }
    dend_23 { pt3dadd( 39.4087, 142.444, -90.8743, 0.55 ) }
    dend_23 { pt3dadd( 41.4609, 144.273, -93.0157, 0.28 ) }
    dend_23 { pt3dadd( 42.6111, 145.173, -94.098, 0.55 ) }
    dend_23 { pt3dadd( 44.3845, 146.49, -95.7298, 0.28 ) }
    dend_23 { pt3dadd( 44.7401, 146.736, -96.0266, 0.55 ) }
    dend_23 { pt3dadd( 48.5063, 149.272, -98.6628, 0.28 ) }
    dend_23 { pt3dadd( 50.2242, 150.418, -99.9269, 0.55 ) }
    dend_23 { pt3dadd( 51.3313, 151.119, -100.731, 0.28 ) }
    dend_23 { pt3dadd( 51.6592, 151.336, -101.025, 0.55 ) }
    dend_23 { pt3dadd( 52.5868, 152.007, -101.862, 0.28 ) }
    dend_23 { pt3dadd( 53.2315, 152.512, -102.495, 0.55 ) }
    dend_23 { pt3dadd( 55.1115, 154.149, -104.592, 0.28 ) }
    dend_23 { pt3dadd( 55.5674, 154.558, -105.232, 0.55 ) }
    dend_23 { pt3dadd( 57.9348, 156.635, -108.819, 0.28 ) }
    dend_23 { pt3dadd( 58.6355, 157.256, -109.925, 0.55 ) }
    dend_23 { pt3dadd( 59.7138, 158.227, -111.63, 0.28 ) }
    dend_23 { pt3dadd( 60.3182, 158.75, -112.511, 0.55 ) }
    dend_23 { pt3dadd( 61.2996, 159.623, -113.713, 0.28 ) }
    dend_23 { pt3dadd( 61.7651, 160.049, -114.256, 0.55 ) }
    dend_23 { pt3dadd( 62.4896, 160.712, -114.944, 0.28 ) }
    dend_23 { pt3dadd( 63.3981, 161.529, -115.787, 0.55 ) }
    dend_23 { pt3dadd( 65.0336, 163.022, -117.122, 0.28 ) }
    dend_23 { pt3dadd( 65.8662, 163.789, -117.678, 0.55 ) }
    dend_23 { pt3dadd( 67.3819, 165.193, -118.545, 0.28 ) }
    dend_23 { pt3dadd( 68.3645, 166.13, -119.128, 0.55 ) }
    dend_23 { pt3dadd( 68.6657, 166.437, -119.297, 0.28 ) }
    dend_23 { pt3dadd( 69.2734, 167.103, -119.657, 0.55 ) }
    dend_23 { pt3dadd( 71.2976, 169.516, -120.978, 0.28 ) }
    dend_23 { pt3dadd( 71.8916, 170.24, -121.404, 0.55 ) }
    dend_23 { pt3dadd( 73.5626, 172.369, -122.63, 0.28 ) }
    dend_23 { pt3dadd( 74.8733, 174.037, -123.661, 0.28 ) }
    dend_23 { pt3dadd( 75.6179, 174.941, -124.252, 0.55 ) }
    dend_23 { pt3dadd( 76.7924, 176.344, -125.205, 0.28 ) }
    dend_23 { pt3dadd( 77.2264, 176.833, -125.519, 0.55 ) }
    dend_23 { pt3dadd( 78.1986, 177.76, -126.116, 0.28 ) }
    dend_23 { pt3dadd( 78.7176, 178.17, -126.315, 0.55 ) }
    dend_23 { pt3dadd( 79.7, 178.866, -126.638, 0.28 ) }
    dend_23 { pt3dadd( 80.3751, 179.334, -126.805, 0.55 ) }
    dend_23 { pt3dadd( 82.4227, 180.693, -127.181, 0.28 ) }
    dend_23 { pt3dadd( 84.4751, 182.048, -127.41, 0.55 ) }
    dend_23 { pt3dadd( 86.2144, 183.234, -127.522, 0.28 ) }
    dend_23 { pt3dadd( 87.1685, 183.937, -127.622, 0.55 ) }
    dend_23 { pt3dadd( 89.087, 185.428, -127.926, 0.28 ) }
    dend_23 { pt3dadd( 90.6971, 186.72, -128.242, 0.55 ) }
    dend_23 { pt3dadd( 92.9174, 188.576, -128.796, 0.28 ) }
    dend_23 { pt3dadd( 93.7916, 189.328, -129.028, 0.28 ) }
    dend_23 { pt3dadd( 96.216, 191.346, -129.827, 0.55 ) }
    dend_23 { pt3dadd( 97.8989, 192.742, -130.413, 0.28 ) }
    dend_23 { pt3dadd( 98.6232, 193.328, -130.703, 0.55 ) }
    dend_23 { pt3dadd( 99.9163, 194.315, -131.269, 0.28 ) }
    dend_23 { pt3dadd( 100.474, 194.718, -131.512, 0.55 ) }
    dend_23 { pt3dadd( 102.057, 195.777, -131.976, 0.28 ) }
    dend_23 { pt3dadd( 102.327, 195.961, -132.017, 0.55 ) }
    dend_23 { pt3dadd( 103.675, 196.928, -132.135, 0.28 ) }
    dend_23 { pt3dadd( 104.789, 197.763, -132.172, 0.55 ) }
    dend_23 { pt3dadd( 106.166, 198.856, -132.166, 0.28 ) }
    dend_23 { pt3dadd( 107.019, 199.678, -132.158, 0.55 ) }
    dend_23 { pt3dadd( 108.688, 201.565, -132.214, 0.28 ) }
    dend_23 { pt3dadd( 109.764, 202.92, -132.247, 0.28 ) }
    dend_23 { pt3dadd( 111.422, 205.189, -132.298, 0.28 ) }
    dend_23 { pt3dadd( 112.077, 206.139, -132.307, 0.55 ) }
    dend_23 { pt3dadd( 114.282, 209.376, -132.319, 0.28 ) }
    dend_23 { pt3dadd( 115.249, 210.795, -132.366, 0.55 ) }
    dend_23 { pt3dadd( 116.441, 212.579, -132.419, 0.28 ) }
    dend_23 { pt3dadd( 117.096, 213.504, -132.487, 0.55 ) }
    dend_23 { pt3dadd( 117.825, 214.384, -132.584, 0.28 ) }
    dend_23 { pt3dadd( 118.3, 214.816, -132.643, 0.55 ) }
    dend_23 { pt3dadd( 120.57, 216.1, -132.905, 0.28 ) }
    dend_23 { pt3dadd( 120.57, 216.1, -132.905, 0.55 ) }
    dend_23 { pt3dadd( 122.868, 216.656, -133.205, 0.28 ) }
    dend_23 { pt3dadd( 124.041, 216.825, -133.344, 0.28 ) }
    dend_23 { pt3dadd( 124.513, 216.855, -133.395, 0.55 ) }
    dend_23 { pt3dadd( 125.939, 216.82, -133.503, 0.28 ) }
    dend_23 { pt3dadd( 128.288, 216.56, -133.592, 0.55 ) }
    dend_23 { pt3dadd( 129.441, 216.352, -133.635, 0.28 ) }
    dend_23 { pt3dadd( 130.663, 216.021, -133.68, 0.28 ) }
    dend_23 { pt3dadd( 131.365, 215.785, -133.707, 0.55 ) }
    dend_23 { pt3dadd( 132.741, 215.205, -133.764, 0.28 ) }
    dend_23 { pt3dadd( 133.585, 214.756, -133.801, 0.55 ) }
    dend_23 { pt3dadd( 134.748, 214.069, -133.855, 0.28 ) }
    dend_23 { pt3dadd( 135.626, 213.515, -133.898, 0.28 ) }
    dend_23 { pt3dadd( 136.498, 212.947, -133.94, 0.28 ) }
    dend_23 { pt3dadd( 137.597, 212.226, -133.994, 0.55 ) }
    dend_23 { pt3dadd( 138.568, 211.603, -134.041, 0.28 ) }
    dend_23 { pt3dadd( 139.569, 210.965, -134.09, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 93/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.17354, 4.58285, -1.63572, 0.55 ) }
    dend_16 { pt3dadd( 6.59822, 4.94058, -2.23797, 0.55 ) }
    dend_16 { pt3dadd( 8.84389, 5.50446, -3.18728, 0.55 ) }
    dend_16 { pt3dadd( 11.7116, 6.22452, -4.39956, 0.55 ) }
    dend_16 { pt3dadd( 13.8122, 6.75198, -5.28755, 0.83 ) }
    dend_16 { pt3dadd( 18.0211, 7.80882, -7.06679, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 99/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 0.743549, 10.2828, 3.65428, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_13 { pt3dadd( 1.1312, 12.9284, 5.11168, 0.55 ) }
    dend_13 { pt3dadd( 1.41486, 14.9023, 6.17628, 1.11 ) }
    dend_13 { pt3dadd( 1.87752, 17.8102, 7.66507, 0.55 ) }
    dend_13 { pt3dadd( 2.23763, 19.6624, 8.53608, 0.83 ) }
    dend_13 { pt3dadd( 2.77516, 22.0634, 9.56239, 0.55 ) }
    dend_13 { pt3dadd( 3.05692, 23.2643, 10.0201, 0.55 ) }
    dend_13 { pt3dadd( 3.4388, 24.703, 10.4931, 0.55 ) }
    dend_13 { pt3dadd( 3.82407, 26.0373, 10.7832, 0.55 ) }
    dend_13 { pt3dadd( 4.50073, 28.0078, 10.9497, 0.83 ) }
    dend_13 { pt3dadd( 5.31244, 30.2115, 10.9923, 0.55 ) }
    dend_13 { pt3dadd( 6.07753, 32.2886, 10.8786, 0.83 ) }
    dend_13 { pt3dadd( 7.20267, 35.2469, 10.6475, 0.83 ) }
    dend_13 { pt3dadd( 7.87523, 37.0278, 10.4768, 1.11 ) }
    dend_13 { pt3dadd( 9.01324, 40.1121, 10.2644, 0.55 ) }
    dend_13 { pt3dadd( 9.88521, 42.5395, 10.1562, 1.11 ) }
    dend_13 { pt3dadd( 10.831, 45.233, 10.1012, 0.55 ) }
    dend_13 { pt3dadd( 11.3645, 46.785, 10.1601, 0.55 ) }
    dend_13 { pt3dadd( 12.0862, 49.0631, 10.3822, 0.55 ) }
    dend_13 { pt3dadd( 12.8439, 51.6984, 10.797, 0.28 ) }
    dend_13 { pt3dadd( 13.3118, 53.6228, 11.1541, 0.83 ) }
    dend_13 { pt3dadd( 13.7418, 55.7336, 11.5728, 0.83 ) }
    dend_13 { pt3dadd( 14.2889, 59.1922, 12.3118, 0.55 ) }
    dend_13 { pt3dadd( 14.592, 62.3838, 12.9, 0.83 ) }
    dend_13 { pt3dadd( 14.7528, 64.6724, 13.2867, 0.55 ) }
    dend_13 { pt3dadd( 14.843, 66.515, 13.5351, 0.83 ) }
    dend_13 { pt3dadd( 14.9047, 69.2611, 13.907, 0.83 ) }
    dend_13 { pt3dadd( 14.8649, 71.9148, 14.24, 0.55 ) }
    dend_13 { pt3dadd( 14.551, 75.369, 14.5348, 0.55 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.84645, 9.14285, 4.00428, 0.83 ) }
    dend_0 { pt3dadd( -5.01188, 11.4683, 4.04256, 0.83 ) }
    dend_0 { pt3dadd( -6.4103, 14.2587, 4.08849, 1.11 ) }
    dend_0 { pt3dadd( -7.87141, 17.1741, 4.13649, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 32/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.17397, 11.5755, -0.470299, 0.55 ) }
    axon_0 { pt3dadd( 4.45162, 26.213, -0.470299, 0.55 ) }
    axon_0 { pt3dadd( 7.72927, 40.8505, -0.470299, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_29 (entry count 35/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -3.83999, -12.7544, 4.08428, 1.38 ) }
    dend_39 { pt3dadd( -4.32801, -15.0264, 2.45105, 1.38 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 37/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.83999, -12.7544, 4.08428, 0.83 ) }
    dend_30 { pt3dadd( -3.30895, -13.7128, 3.9757, 0.83 ) }
    dend_30 { pt3dadd( -2.41891, -15.318, 3.7928, 0.83 ) }
    dend_30 { pt3dadd( -1.54966, -16.8274, 3.58617, 0.83 ) }
    dend_30 { pt3dadd( -0.861174, -18.023, 3.4225, 1.11 ) }
    dend_30 { pt3dadd( 0.056614, -19.6167, 3.20432, 0.83 ) }
    dend_30 { pt3dadd( 0.596157, -20.5536, 3.07606, 0.55 ) }
    dend_30 { pt3dadd( 1.31049, -21.808, 2.89609, 0.83 ) }
    dend_30 { pt3dadd( 2.15533, -23.3342, 2.66328, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 46/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -10.1775, -14.7546, 19.9541, 0.28 ) }
    dend_26 { pt3dadd( -12.0012, -13.3733, 20.2111, 0.28 ) }
    dend_26 { pt3dadd( -12.6485, -12.9146, 20.3094, 0.55 ) }
    dend_26 { pt3dadd( -14.3799, -11.6486, 20.329, 0.28 ) }
    dend_26 { pt3dadd( -16.646, -9.9513, 20.2567, 0.55 ) }
    dend_26 { pt3dadd( -19.8687, -7.58246, 20.2262, 0.28 ) }
    dend_26 { pt3dadd( -20.5413, -7.08418, 20.2094, 0.28 ) }
    dend_26 { pt3dadd( -22.2332, -5.84624, 20.1057, 0.55 ) }
    dend_26 { pt3dadd( -25.6398, -3.39044, 19.9726, 0.28 ) }
    dend_26 { pt3dadd( -26.4195, -2.84699, 19.9605, 0.55 ) }
    dend_26 { pt3dadd( -28.529, -1.2607, 20.1097, 0.28 ) }
    dend_26 { pt3dadd( -30.4655, 0.145083, 20.4503, 0.55 ) }
    dend_26 { pt3dadd( -31.5837, 0.97617, 20.7023, 0.55 ) }
    dend_26 { pt3dadd( -33.3599, 2.3011, 21.276, 0.28 ) }
    dend_26 { pt3dadd( -34.4324, 3.05549, 21.8351, 0.55 ) }
    dend_26 { pt3dadd( -36.7005, 4.6721, 23.0379, 0.28 ) }
    dend_26 { pt3dadd( -38.4597, 6.04166, 24.1337, 0.55 ) }
    dend_26 { pt3dadd( -45.7949, 12.7177, 25.6399, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 64/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -10.1775, -14.7546, 19.9541, 0.55 ) }
    dend_25 { pt3dadd( -12.3438, -16.1879, 20.9508, 0.55 ) }
    dend_25 { pt3dadd( -14.5932, -17.7361, 22.4052, 0.55 ) }
    dend_25 { pt3dadd( -17.5737, -19.382, 24.1767, 0.55 ) }
    dend_25 { pt3dadd( -20.719, -20.7655, 25.9732, 0.55 ) }
    dend_25 { pt3dadd( -23.9035, -21.88, 27.732, 0.55 ) }
    dend_25 { pt3dadd( -27.0844, -22.6806, 29.5488, 0.28 ) }
    dend_25 { pt3dadd( -29.6586, -22.8644, 31.0988, 0.55 ) }
    dend_25 { pt3dadd( -33.9135, -22.8073, 33.6839, 0.28 ) }
    dend_25 { pt3dadd( -35.6128, -22.7026, 34.6534, 0.28 ) }
    dend_25 { pt3dadd( -38.1029, -22.6208, 35.828, 0.55 ) }
    dend_25 { pt3dadd( -41.7076, -22.7821, 37.096, 0.28 ) }
    dend_25 { pt3dadd( -44.2874, -23.2731, 37.7905, 0.55 ) }
    dend_25 { pt3dadd( -47.2032, -24.29, 38.452, 0.55 ) }
    dend_25 { pt3dadd( -49.1666, -25.2768, 38.8136, 0.83 ) }
    dend_25 { pt3dadd( -52.4541, -27.2179, 39.0556, 0.55 ) }
    dend_25 { pt3dadd( -55.9181, -29.5536, 38.9535, 0.55 ) }
    dend_25 { pt3dadd( -57.8419, -31.0081, 38.7584, 0.55 ) }
    dend_25 { pt3dadd( -60.4034, -32.9822, 38.3639, 0.55 ) }
    dend_25 { pt3dadd( -62.5498, -34.6453, 37.9438, 0.55 ) }
    dend_25 { pt3dadd( -65.4512, -37.0584, 37.3073, 0.28 ) }
    dend_25 { pt3dadd( -66.5665, -38.0416, 37.0458, 0.28 ) }
    dend_25 { pt3dadd( -67.453, -38.7875, 36.8714, 0.83 ) }
    dend_25 { pt3dadd( -70.4242, -41.4331, 36.3986, 0.55 ) }
    dend_25 { pt3dadd( -72.5872, -43.5017, 36.1667, 0.55 ) }
    dend_25 { pt3dadd( -74.8948, -45.9284, 36.1447, 0.28 ) }
    dend_25 { pt3dadd( -76.7536, -47.9343, 36.2123, 0.55 ) }
    dend_25 { pt3dadd( -78.4652, -49.7704, 36.3031, 0.55 ) }
    dend_25 { pt3dadd( -79.8639, -51.3161, 36.406, 0.28 ) }
    dend_25 { pt3dadd( -81.07, -52.7784, 36.6379, 0.55 ) }
    dend_25 { pt3dadd( -82.3995, -54.2223, 36.9387, 0.28 ) }
    dend_25 { pt3dadd( -94.9621, -59.2815, 39.9057, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 96/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 18.0211, 7.80882, -7.06679, 0.55 ) }
    dend_20 { pt3dadd( 20.664, 9.97873, -8.60626, 0.55 ) }
    dend_20 { pt3dadd( 22.5097, 11.4388, -9.6909, 0.83 ) }
    dend_20 { pt3dadd( 23.9147, 12.5911, -10.5467, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 25.47, 13.8667, -11.494, 0.55 ) }
    dend_20 { pt3dadd( 27.1355, 15.2327, -12.5085, 0.55 ) }
    dend_20 { pt3dadd( 28.7989, 16.5969, -13.5216, 0.55 ) }
    dend_20 { pt3dadd( 31.8126, 18.9926, -15.2308, 0.83 ) }
    dend_20 { pt3dadd( 33.115, 20.0701, -16.0958, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 18.0211, 7.80882, -7.06679, 0.55 ) }
    dend_17 { pt3dadd( 18.9558, 6.23018, -7.68523, 0.55 ) }
    dend_17 { pt3dadd( 19.9161, 4.4975, -8.35695, 0.83 ) }
    dend_17 { pt3dadd( 20.6479, 3.09948, -8.88713, 0.55 ) }
    dend_17 { pt3dadd( 21.2036, 1.95762, -9.44885, 0.83 ) }
    dend_17 { pt3dadd( 22.2189, -0.244787, -10.6486, 0.28 ) }
    dend_17 { pt3dadd( 22.8065, -1.47467, -11.4142, 0.55 ) }
    dend_17 { pt3dadd( 23.5985, -3.12612, -12.5803, 0.28 ) }
    dend_17 { pt3dadd( 23.807, -3.58106, -12.9655, 0.55 ) }
    dend_17 { pt3dadd( 24.7855, -6.05644, -15.242, 0.28 ) }
    dend_17 { pt3dadd( 25.0116, -6.75688, -15.8946, 0.83 ) }
    dend_17 { pt3dadd( 25.7853, -9.53534, -18.4528, 0.28 ) }
    dend_17 { pt3dadd( 26.1556, -10.9762, -19.7473, 0.83 ) }
    dend_17 { pt3dadd( 26.7816, -13.3379, -21.7785, 0.28 ) }
    dend_17 { pt3dadd( 27.2505, -15.3627, -23.4919, 0.28 ) }
    dend_17 { pt3dadd( 27.4357, -16.3586, -24.2617, 0.83 ) }
    dend_17 { pt3dadd( 27.5439, -17.428, -25.181, 0.55 ) }
    dend_17 { pt3dadd( 27.5914, -19.1279, -26.6638, 0.28 ) }
    dend_17 { pt3dadd( 27.6041, -19.8672, -27.323, 0.83 ) }
    dend_17 { pt3dadd( 27.6861, -23.7281, -30.6931, 0.55 ) }
    dend_17 { pt3dadd( 27.7109, -25.0842, -31.9759, 0.83 ) }
    dend_17 { pt3dadd( 27.687, -28.9937, -35.9552, 0.28 ) }
    dend_17 { pt3dadd( 27.628, -29.8301, -36.8667, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 28/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 14.551, 75.369, 14.5348, 0.55 ) }
    dend_15 { pt3dadd( 16.8827, 80.0674, 13.9936, 0.55 ) }
    dend_15 { pt3dadd( 17.888, 82.1506, 13.7739, 0.83 ) }
    dend_15 { pt3dadd( 18.9358, 84.7489, 13.5379, 0.55 ) }
    dend_15 { pt3dadd( 20.0327, 88.0381, 13.1136, 0.28 ) }
    dend_15 { pt3dadd( 20.7835, 90.4776, 12.7689, 0.55 ) }
    dend_15 { pt3dadd( 21.3592, 92.4758, 12.4229, 0.55 ) }
    dend_15 { pt3dadd( 22.2569, 96.0911, 11.7784, 0.55 ) }
    dend_15 { pt3dadd( 23.2667, 99.8042, 11.1472, 0.55 ) }
    dend_15 { pt3dadd( 24.3868, 103.756, 10.5675, 0.28 ) }
    dend_15 { pt3dadd( 25.1409, 106.099, 10.2588, 0.55 ) }
    dend_15 { pt3dadd( 26.5613, 109.902, 9.85693, 0.28 ) }
    dend_15 { pt3dadd( 28.3928, 114.253, 9.4362, 0.55 ) }
    dend_15 { pt3dadd( 29.2334, 115.979, 9.35196, 0.55 ) }
    dend_15 { pt3dadd( 30.4574, 118.222, 9.36884, 0.55 ) }
    dend_15 { pt3dadd( 32.6237, 122.266, 9.65571, 0.55 ) }
    dend_15 { pt3dadd( 33.8997, 125.124, 9.9266, 0.28 ) }
    dend_15 { pt3dadd( 34.4719, 126.815, 10.0931, 0.55 ) }
    dend_15 { pt3dadd( 35.2972, 130.499, 10.3203, 0.28 ) }
    dend_15 { pt3dadd( 35.6689, 132.997, 10.4709, 0.55 ) }
    dend_15 { pt3dadd( 36.0284, 136.794, 10.5988, 0.83 ) }
    dend_15 { pt3dadd( 36.1744, 140.814, 10.6991, 0.55 ) }
    dend_15 { pt3dadd( 36.2473, 144.177, 10.7508, 0.28 ) }
    dend_15 { pt3dadd( 36.2895, 145.849, 10.8264, 0.55 ) }
    dend_15 { pt3dadd( 36.5105, 150.269, 11.0985, 0.28 ) }
    dend_15 { pt3dadd( 36.8621, 153.887, 11.4551, 0.55 ) }
    dend_15 { pt3dadd( 37.2352, 156.236, 11.7928, 0.55 ) }
    dend_15 { pt3dadd( 37.8564, 158.914, 12.3114, 0.28 ) }
    dend_15 { pt3dadd( 38.5723, 161.577, 12.9333, 0.55 ) }
    dend_15 { pt3dadd( 39.6906, 165.449, 13.907, 0.55 ) }
    dend_15 { pt3dadd( 40.5134, 168.316, 14.6549, 0.55 ) }
    dend_15 { pt3dadd( 40.9862, 169.925, 15.0749, 0.83 ) }
    dend_15 { pt3dadd( 42.1376, 173.797, 16.0618, 0.55 ) }
    dend_15 { pt3dadd( 42.9346, 176.595, 16.7408, 0.55 ) }
    dend_15 { pt3dadd( 45.0421, 184.386, 18.5137, 0.28 ) }
    dend_15 { pt3dadd( 45.4326, 186.035, 18.8908, 0.55 ) }
    dend_15 { pt3dadd( 46.5787, 191.403, 20.1057, 0.28 ) }
    dend_15 { pt3dadd( 47.0276, 193.847, 20.6876, 0.83 ) }
    dend_15 { pt3dadd( 47.9894, 199.598, 22.156, 0.28 ) }
    dend_15 { pt3dadd( 48.2515, 201.214, 22.6042, 0.28 ) }
    dend_15 { pt3dadd( 48.5983, 203.626, 23.295, 0.55 ) }
    dend_15 { pt3dadd( 49.3949, 209.286, 24.966, 0.28 ) }
    dend_15 { pt3dadd( 49.7096, 212.091, 25.8076, 0.55 ) }
    dend_15 { pt3dadd( 50.1754, 216.388, 27.0711, 0.28 ) }
    dend_15 { pt3dadd( 50.39, 218.001, 27.6317, 0.55 ) }
    dend_15 { pt3dadd( 51.626, 233.167, 27.445, 0.55 ) }
    dend_15 { pt3dadd( 53.1085, 248.047, 24.4577, 0.55 ) }
    dend_15 { pt3dadd( 58.3133, 262.415, 23.6654, 0.55 ) }
    dend_15 { pt3dadd( 67.4567, 274.828, 25.1276, 0.55 ) }
    dend_15 { pt3dadd( 73.1648, 288.91, 27.1619, 0.55 ) }
    dend_15 { pt3dadd( 76.9182, 303.006, 31.8718, 0.55 ) }
    dend_15 { pt3dadd( 79.7242, 317.163, 37.0139, 0.55 ) }
    dend_15 { pt3dadd( 84.3221, 330.547, 43.0796, 0.55 ) }
    dend_15 { pt3dadd( 87.1815, 344.504, 48.7719, 0.55 ) }
    dend_15 { pt3dadd( 91.5007, 358.968, 51.2139, 0.55 ) }
    dend_15 { pt3dadd( 96.7089, 372.77, 55.4841, 0.55 ) }
    dend_15 { pt3dadd( 103.492, 385.349, 61.4091, 0.55 ) }
    dend_15 { pt3dadd( 111.422, 398.078, 65.1553, 0.55 ) }
    dend_15 { pt3dadd( 122.215, 408.357, 69.9393, 0.55 ) }
    dend_15 { pt3dadd( 131.928, 420.038, 73.2466, 0.55 ) }
    dend_15 { pt3dadd( 141.529, 432.069, 75.2289, 0.55 ) }
    dend_15 { pt3dadd( 152.457, 442.815, 78.2438, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 14.551, 75.369, 14.5348, 0.55 ) }
    dend_14 { pt3dadd( 11.7438, 77.1907, 16.0319, 0.55 ) }
    dend_14 { pt3dadd( 8.71192, 79.426, 17.8471, 0.55 ) }
    dend_14 { pt3dadd( 7.46029, 80.3586, 18.6328, 0.28 ) }
    dend_14 { pt3dadd( 6.88293, 80.8142, 19.0561, 0.83 ) }
    dend_14 { pt3dadd( 4.784, 82.5659, 20.6873, 0.55 ) }
    dend_14 { pt3dadd( 3.6599, 83.5478, 21.703, 0.83 ) }
    dend_14 { pt3dadd( 2.5839, 84.6961, 22.9974, 0.55 ) }
    dend_14 { pt3dadd( 1.8311, 85.6544, 24.1262, 0.55 ) }
    dend_14 { pt3dadd( 0.805405, 87.1515, 25.7387, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_14 { pt3dadd( 0.383011, 87.7981, 26.3582, 0.55 ) }
    dend_14 { pt3dadd( -1.08381, 90.0115, 28.4421, 0.28 ) }
    dend_14 { pt3dadd( -1.69212, 90.9602, 29.355, 0.55 ) }
    dend_14 { pt3dadd( -2.51446, 92.3317, 30.5943, 0.28 ) }
    dend_14 { pt3dadd( -3.27439, 93.7184, 31.6834, 0.28 ) }
    dend_14 { pt3dadd( -4.3207, 95.4253, 32.7724, 0.83 ) }
    dend_14 { pt3dadd( -8.65092, 101.629, 38.7026, 0.83 ) }
    dend_14 { pt3dadd( -12.2165, 107.384, 45.5714, 0.83 ) }
    dend_14 { pt3dadd( -15.4535, 112.21, 53.3407, 0.83 ) }
    dend_14 { pt3dadd( -19.9942, 115.895, 61.1544, 0.83 ) }
    dend_14 { pt3dadd( -25.0954, 119.84, 68.4639, 0.83 ) }
    dend_14 { pt3dadd( -31.1274, 124.49, 74.4873, 0.83 ) }
    dend_14 { pt3dadd( -37.666, 128.084, 80.785, 0.83 ) }
    dend_14 { pt3dadd( -44.0415, 132.457, 86.6866, 0.83 ) }
    dend_14 { pt3dadd( -49.5973, 137.108, 93.1513, 0.83 ) }
    dend_14 { pt3dadd( -53.9925, 140.842, 101.022, 0.83 ) }
    dend_14 { pt3dadd( -58.012, 143.939, 109.389, 0.83 ) }
    dend_14 { pt3dadd( -62.0664, 147.752, 117.399, 0.83 ) }
    dend_14 { pt3dadd( -67.0401, 150.635, 125.327, 0.83 ) }
    dend_14 { pt3dadd( -71.0908, 152.753, 134.017, 0.83 ) }
    dend_14 { pt3dadd( -76.5182, 154.287, 142.073, 0.83 ) }
    dend_14 { pt3dadd( -83.1104, 156.786, 148.89, 0.83 ) }
    dend_14 { pt3dadd( -88.5422, 160.285, 156.216, 0.83 ) }
    dend_14 { pt3dadd( -93.317, 162.614, 164.466, 0.83 ) }
    dend_14 { pt3dadd( -96.3457, 166.066, 173.091, 0.83 ) }
    dend_14 { pt3dadd( -100.012, 170.077, 181.179, 0.83 ) }
    dend_14 { pt3dadd( -101.633, 174.945, 189.414, 0.83 ) }
    dend_14 { pt3dadd( -103.365, 179.244, 197.973, 0.83 ) }
    dend_14 { pt3dadd( -104.65, 182.957, 206.909, 0.83 ) }
    dend_14 { pt3dadd( -106.434, 185.271, 216.279, 0.83 ) }
    dend_14 { pt3dadd( -107.225, 186.345, 226.034, 0.83 ) }
    dend_14 { pt3dadd( -107.039, 188.658, 235.573, 0.83 ) }
    dend_14 { pt3dadd( -107.154, 189.8, 245.351, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.87141, 17.1741, 4.13649, 0.83 ) }
    dend_10 { pt3dadd( -6.08783, 21.4294, 4.18956, 0.83 ) }
    dend_10 { pt3dadd( -3.30096, 28.228, 4.51447, 0.83 ) }
    dend_10 { pt3dadd( -1.9817, 31.4662, 4.70141, 0.83 ) }
    dend_10 { pt3dadd( -0.453042, 35.3223, 4.94179, 0.83 ) }
    dend_10 { pt3dadd( 0.722208, 38.3336, 5.12637, 0.55 ) }
    dend_10 { pt3dadd( 1.58227, 40.7424, 5.26459, 0.83 ) }
    dend_10 { pt3dadd( 2.62885, 44.0451, 5.52531, 0.55 ) }
    dend_10 { pt3dadd( 3.2643, 46.255, 5.71873, 0.83 ) }
    dend_10 { pt3dadd( 3.67453, 47.7385, 5.80516, 0.55 ) }
    dend_10 { pt3dadd( 4.16758, 49.7413, 5.97284, 0.83 ) }
    dend_10 { pt3dadd( 5.01029, 53.4468, 6.30237, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -7.87141, 17.1741, 4.13649, 0.55 ) }
    dend_1 { pt3dadd( -10.5724, 19.8305, 4.34293, 0.55 ) }
    dend_1 { pt3dadd( -12.0782, 21.3115, 4.45801, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 48/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 7.72927, 40.8505, -0.470299, 0.28 ) }
    axon_1 { pt3dadd( 11.0069, 55.4881, -0.470299, 0.28 ) }
    axon_1 { pt3dadd( 14.2846, 70.1256, -0.470299, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_39 (entry count 51/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -4.32801, -15.0264, 2.45105, 0.55 ) }
    dend_47 { pt3dadd( -5.1704, -17.4671, 3.30645, 0.55 ) }
    dend_47 { pt3dadd( -6.22188, -20.5091, 4.5468, 0.28 ) }
    dend_47 { pt3dadd( -6.67618, -21.8679, 5.11186, 0.83 ) }
    dend_47 { pt3dadd( -7.18418, -23.5022, 5.78847, 0.28 ) }
    dend_47 { pt3dadd( -7.58576, -24.7389, 6.28111, 0.55 ) }
    dend_47 { pt3dadd( -8.50445, -27.4267, 7.51343, 0.55 ) }
    dend_47 { pt3dadd( -9.02516, -28.987, 8.26506, 0.28 ) }
    dend_47 { pt3dadd( -9.44368, -30.1089, 8.76883, 0.83 ) }
    dend_47 { pt3dadd( -9.99844, -31.4314, 9.37841, 0.55 ) }
    dend_47 { pt3dadd( -10.4962, -32.5975, 9.94131, 0.55 ) }
    dend_47 { pt3dadd( -11.8294, -35.5748, 11.367, 0.83 ) }
    dend_47 { pt3dadd( -12.6513, -37.4398, 12.1261, 0.55 ) }
    dend_47 { pt3dadd( -13.6715, -39.5491, 12.9661, 0.55 ) }
    dend_47 { pt3dadd( -14.935, -41.9861, 13.9854, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 66/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.32801, -15.0264, 2.45105, 1.38 ) }
    dend_40 { pt3dadd( -4.42295, -17.2475, 0.637547, 1.38 ) }
    dend_40 { pt3dadd( -4.52429, -19.6189, -1.29863, 1.94 ) }
    dend_40 { pt3dadd( -4.69621, -23.6412, -4.58279, 1.66 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 70/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.15533, -23.3342, 2.66328, 0.83 ) }
    dend_32 { pt3dadd( 2.09554, -24.1542, 2.48938, 0.83 ) }
    dend_32 { pt3dadd( 1.9226, -26.5257, 1.98651, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.15533, -23.3342, 2.66328, 0.55 ) }
    dend_31 { pt3dadd( 3.26862, -24.2296, 1.19932, 0.55 ) }
    dend_31 { pt3dadd( 4.44819, -25.3107, -1.27525, 0.55 ) }
    dend_31 { pt3dadd( 5.39956, -26.1623, -3.38815, 0.55 ) }
    dend_31 { pt3dadd( 6.69758, -27.1531, -6.04754, 0.55 ) }
    dend_31 { pt3dadd( 9.06448, -28.8026, -10.6044, 0.28 ) }
    dend_31 { pt3dadd( 11.5634, -30.4008, -15.1047, 0.55 ) }
    dend_31 { pt3dadd( 14.4484, -32.1057, -20.3196, 0.55 ) }
    dend_31 { pt3dadd( 15.3142, -32.5706, -21.8252, 0.83 ) }
    dend_31 { pt3dadd( 17.3103, -33.5291, -24.9577, 0.28 ) }
    dend_31 { pt3dadd( 17.9063, -33.788, -25.8344, 0.55 ) }
    dend_31 { pt3dadd( 19.288, -34.2819, -27.3488, 0.28 ) }
    dend_31 { pt3dadd( 20.8539, -34.8005, -28.6268, 0.55 ) }
    dend_31 { pt3dadd( 23.3735, -35.5343, -29.9923, 0.28 ) }
    dend_31 { pt3dadd( 25.2453, -36.142, -30.9421, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 88/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -45.7949, 12.7177, 25.6399, 0.28 ) }
    dend_28 { pt3dadd( -52.4976, 18.0607, 26.8062, 0.28 ) }
    dend_28 { pt3dadd( -59.5331, 22.7679, 28.7631, 0.28 ) }
    dend_28 { pt3dadd( -66.5692, 27.7513, 29.688, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -45.7949, 12.7177, 25.6399, 0.28 ) }
    dend_27 { pt3dadd( -54.7078, 18.9832, 26.6176, 0.28 ) }
    dend_27 { pt3dadd( -63.218, 25.7985, 26.9427, 0.28 ) }
    dend_27 { pt3dadd( -71.9432, 32.3508, 26.4127, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 96/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 33.115, 20.0701, -16.0958, 0.28 ) }
    dend_22 { pt3dadd( 35.9343, 22.357, -16.1043, 0.28 ) }
    dend_22 { pt3dadd( 37.6765, 23.7626, -16.0962, 0.55 ) }
    dend_22 { pt3dadd( 39.9761, 25.5841, -16.0602, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 42.6323, 27.6584, -15.8648, 0.55 ) }
    dend_22 { pt3dadd( 45.5185, 29.8172, -15.7796, 0.28 ) }
    dend_22 { pt3dadd( 47.5154, 31.2999, -15.7639, 0.55 ) }
    dend_22 { pt3dadd( 50.0465, 33.2236, -15.7286, 0.28 ) }
    dend_22 { pt3dadd( 50.9936, 33.9486, -15.7092, 0.55 ) }
    dend_22 { pt3dadd( 53.5369, 35.8325, -15.634, 0.28 ) }
    dend_22 { pt3dadd( 56.4865, 38.1001, -15.1359, 0.55 ) }
    dend_22 { pt3dadd( 58.9273, 40.0753, -14.5627, 0.28 ) }
    dend_22 { pt3dadd( 60.3674, 41.2486, -14.1338, 0.55 ) }
    dend_22 { pt3dadd( 62.9029, 43.2455, -13.4969, 0.28 ) }
    dend_22 { pt3dadd( 63.9624, 44.0228, -13.1519, 0.55 ) }
    dend_22 { pt3dadd( 67.8339, 46.6395, -11.4527, 0.28 ) }
    dend_22 { pt3dadd( 69.8938, 48.0101, -10.3674, 0.28 ) }
    dend_22 { pt3dadd( 71.3425, 48.8789, -9.5896, 0.28 ) }
    dend_22 { pt3dadd( 74.646, 50.6736, -7.84944, 0.28 ) }
    dend_22 { pt3dadd( 79.5718, 53.1033, -4.91333, 0.28 ) }
    dend_22 { pt3dadd( 81.5693, 53.9237, -3.68352, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 17/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 33.115, 20.0701, -16.0958, 0.55 ) }
    dend_21 { pt3dadd( 35.8383, 20.5528, -18.5236, 0.55 ) }
    dend_21 { pt3dadd( 40.3545, 21.4764, -21.8696, 0.55 ) }
    dend_21 { pt3dadd( 41.235, 21.692, -22.4528, 0.83 ) }
    dend_21 { pt3dadd( 42.533, 22.0317, -23.2017, 0.28 ) }
    dend_21 { pt3dadd( 43.2582, 22.2214, -23.5545, 0.55 ) }
    dend_21 { pt3dadd( 44.7151, 22.6143, -24.2142, 0.28 ) }
    dend_21 { pt3dadd( 46.191, 22.9833, -24.7581, 0.55 ) }
    dend_21 { pt3dadd( 47.6804, 23.2938, -25.0651, 0.28 ) }
    dend_21 { pt3dadd( 48.7855, 23.4591, -25.327, 0.55 ) }
    dend_21 { pt3dadd( 50.5147, 23.6809, -25.7885, 0.55 ) }
    dend_21 { pt3dadd( 52.1572, 23.858, -26.2712, 0.55 ) }
    dend_21 { pt3dadd( 54.6013, 24.0722, -27.0493, 0.28 ) }
    dend_21 { pt3dadd( 55.9131, 24.1652, -27.5502, 0.55 ) }
    dend_21 { pt3dadd( 57.8098, 24.3143, -28.3506, 0.55 ) }
    dend_21 { pt3dadd( 59.0506, 24.4949, -28.9874, 0.28 ) }
    dend_21 { pt3dadd( 59.7563, 24.6368, -29.379, 0.28 ) }
    dend_21 { pt3dadd( 60.3708, 24.7906, -29.7289, 0.55 ) }
    dend_21 { pt3dadd( 62.4134, 25.4403, -30.9567, 0.28 ) }
    dend_21 { pt3dadd( 62.9963, 25.6192, -31.3377, 0.55 ) }
    dend_21 { pt3dadd( 65.4665, 26.3087, -32.9424, 0.28 ) }
    dend_21 { pt3dadd( 66.3209, 26.4957, -33.4805, 0.55 ) }
    dend_21 { pt3dadd( 68.0268, 26.7526, -34.4976, 0.28 ) }
    dend_21 { pt3dadd( 68.5492, 26.7966, -34.7923, 0.55 ) }
    dend_21 { pt3dadd( 70.618, 26.8798, -35.8031, 0.28 ) }
    dend_21 { pt3dadd( 71.5469, 26.865, -36.2224, 0.55 ) }
    dend_21 { pt3dadd( 72.8282, 26.7793, -36.7908, 0.28 ) }
    dend_21 { pt3dadd( 73.9852, 26.697, -37.3177, 0.28 ) }
    dend_21 { pt3dadd( 74.9937, 26.6136, -37.8, 0.55 ) }
    dend_21 { pt3dadd( 76.2897, 26.5235, -38.4533, 0.28 ) }
    dend_21 { pt3dadd( 77.0717, 26.4836, -38.8612, 0.55 ) }
    dend_21 { pt3dadd( 79.6235, 26.4207, -40.2358, 0.28 ) }
    dend_21 { pt3dadd( 79.9981, 26.4232, -40.48, 0.55 ) }
    dend_21 { pt3dadd( 81.8822, 26.5295, -41.7935, 0.28 ) }
    dend_21 { pt3dadd( 82.6015, 26.6057, -42.2718, 0.55 ) }
    dend_21 { pt3dadd( 83.2461, 26.7031, -42.7026, 0.28 ) }
    dend_21 { pt3dadd( 84.2493, 26.906, -43.376, 0.55 ) }
    dend_21 { pt3dadd( 87.7206, 27.7802, -45.4126, 0.28 ) }
    dend_21 { pt3dadd( 88.69, 28.0713, -45.904, 0.55 ) }
    dend_21 { pt3dadd( 90.8863, 28.8861, -47.021, 0.28 ) }
    dend_21 { pt3dadd( 91.4212, 29.1167, -47.3062, 0.55 ) }
    dend_21 { pt3dadd( 92.6255, 29.7094, -47.9418, 0.28 ) }
    dend_21 { pt3dadd( 93.8507, 30.432, -48.5505, 0.55 ) }
    dend_21 { pt3dadd( 95.0767, 31.304, -49.0447, 0.28 ) }
    dend_21 { pt3dadd( 97.232, 33.0575, -50.3381, 0.55 ) }
    dend_21 { pt3dadd( 98.0141, 33.7624, -50.9094, 0.28 ) }
    dend_21 { pt3dadd( 98.6928, 34.4181, -51.4012, 0.55 ) }
    dend_21 { pt3dadd( 99.5826, 35.2761, -52.0586, 0.28 ) }
    dend_21 { pt3dadd( 100.125, 35.8077, -52.4776, 0.55 ) }
    dend_21 { pt3dadd( 102.363, 37.9384, -54.1662, 0.28 ) }
    dend_21 { pt3dadd( 103.15, 38.6404, -54.6248, 0.55 ) }
    dend_21 { pt3dadd( 104.496, 39.7954, -55.4815, 0.28 ) }
    dend_21 { pt3dadd( 105.594, 40.7172, -56.1678, 0.55 ) }
    dend_21 { pt3dadd( 106.345, 41.3298, -56.6618, 0.28 ) }
    dend_21 { pt3dadd( 107.295, 42.146, -57.2302, 0.55 ) }
    dend_21 { pt3dadd( 108.487, 43.1963, -57.8125, 0.28 ) }
    dend_21 { pt3dadd( 110.143, 44.7247, -58.7096, 0.55 ) }
    dend_21 { pt3dadd( 111.758, 46.2097, -59.6521, 0.28 ) }
    dend_21 { pt3dadd( 113.02, 47.3522, -60.4535, 0.55 ) }
    dend_21 { pt3dadd( 114.947, 48.9502, -61.7162, 0.28 ) }
    dend_21 { pt3dadd( 115.894, 49.6736, -62.3425, 0.55 ) }
    dend_21 { pt3dadd( 118.036, 51.1436, -63.8852, 0.28 ) }
    dend_21 { pt3dadd( 118.853, 51.587, -64.5328, 0.55 ) }
    dend_21 { pt3dadd( 121.274, 52.4359, -66.7843, 0.28 ) }
    dend_21 { pt3dadd( 121.945, 52.4517, -67.6318, 0.55 ) }
    dend_21 { pt3dadd( 122.529, 52.3146, -68.5011, 0.28 ) }
    dend_21 { pt3dadd( 123.182, 52.0704, -69.5684, 0.55 ) }
    dend_21 { pt3dadd( 124.817, 51.1282, -72.4888, 0.28 ) }
    dend_21 { pt3dadd( 125.408, 50.6962, -73.6608, 0.55 ) }
    dend_21 { pt3dadd( 127.899, 48.2175, -79.4179, 0.28 ) }
    dend_21 { pt3dadd( 128.45, 47.6268, -80.8283, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 88/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 27.628, -29.8301, -36.8667, 0.28 ) }
    dend_19 { pt3dadd( 27.5782, -30.4888, -37.728, 0.28 ) }
    dend_19 { pt3dadd( 27.5477, -30.8821, -38.2178, 0.55 ) }
    dend_19 { pt3dadd( 27.4206, -32.1743, -39.7387, 0.28 ) }
    dend_19 { pt3dadd( 27.3902, -32.4468, -40.0511, 0.55 ) }
    dend_19 { pt3dadd( 27.1221, -34.4947, -42.3129, 0.28 ) }
    dend_19 { pt3dadd( 26.9424, -35.6939, -43.4949, 0.55 ) }
    dend_19 { pt3dadd( 26.7917, -36.6129, -44.4042, 0.28 ) }
    dend_19 { pt3dadd( 26.7025, -37.1165, -44.822, 0.55 ) }
    dend_19 { pt3dadd( 26.4762, -38.4006, -45.6458, 0.28 ) }
    dend_19 { pt3dadd( 26.4209, -38.8193, -45.9153, 0.55 ) }
    dend_19 { pt3dadd( 26.2455, -40.6172, -46.9784, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_19 { pt3dadd( 26.133, -41.9872, -47.691, 0.55 ) }
    dend_19 { pt3dadd( 26.0115, -44.2317, -48.8538, 0.28 ) }
    dend_19 { pt3dadd( 25.9879, -44.8914, -49.1976, 0.55 ) }
    dend_19 { pt3dadd( 25.8954, -49.6716, -51.6771, 0.28 ) }
    dend_19 { pt3dadd( 25.8968, -50.2443, -51.9964, 0.55 ) }
    dend_19 { pt3dadd( 25.9469, -52.2693, -53.2496, 0.28 ) }
    dend_19 { pt3dadd( 25.9613, -52.8235, -53.6017, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 7/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 27.628, -29.8301, -36.8667, 0.55 ) }
    dend_18 { pt3dadd( 28.3381, -29.833, -38.943, 0.55 ) }
    dend_18 { pt3dadd( 30.0601, -29.4629, -44.9798, 0.55 ) }
    dend_18 { pt3dadd( 31.6715, -28.931, -51.0175, 0.28 ) }
    dend_18 { pt3dadd( 31.9178, -28.7274, -52.2157, 0.55 ) }
    dend_18 { pt3dadd( 32.8879, -27.549, -57.5937, 0.28 ) }
    dend_18 { pt3dadd( 33.1889, -26.9435, -59.4995, 0.55 ) }
    dend_18 { pt3dadd( 33.7959, -24.1532, -65.5487, 0.28 ) }
    dend_18 { pt3dadd( 33.8585, -23.4034, -66.8522, 0.55 ) }
    dend_18 { pt3dadd( 33.8273, -19.0181, -72.8239, 0.28 ) }
    dend_18 { pt3dadd( 33.7881, -18.3024, -73.6616, 0.55 ) }
    dend_18 { pt3dadd( 33.2636, -13.4879, -78.113, 0.28 ) }
    dend_18 { pt3dadd( 33.0731, -12.0506, -79.2915, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 20/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.01029, 53.4468, 6.30237, 0.28 ) }
    dend_12 { pt3dadd( 4.62923, 55.588, 5.66761, 0.28 ) }
    dend_12 { pt3dadd( 4.52624, 56.7558, 5.25726, 0.55 ) }
    dend_12 { pt3dadd( 4.29719, 59.8944, 4.34466, 0.28 ) }
    dend_12 { pt3dadd( 4.22675, 60.7802, 4.13331, 0.55 ) }
    dend_12 { pt3dadd( 4.10795, 62.1763, 3.79577, 0.28 ) }
    dend_12 { pt3dadd( 3.80717, 64.1755, 3.29746, 0.55 ) }
    dend_12 { pt3dadd( 2.86636, 67.6992, 2.47909, 0.28 ) }
    dend_12 { pt3dadd( 2.1888, 69.5737, 1.98982, 0.55 ) }
    dend_12 { pt3dadd( 1.2811, 71.4977, 1.50882, 0.28 ) }
    dend_12 { pt3dadd( 0.395028, 73.2531, 1.14114, 0.83 ) }
    dend_12 { pt3dadd( -0.879526, 75.8879, 0.697187, 0.55 ) }
    dend_12 { pt3dadd( -2.4487, 79.3577, 0.124807, 0.55 ) }
    dend_12 { pt3dadd( -3.37055, 81.7497, -0.129461, 0.83 ) }
    dend_12 { pt3dadd( -3.8618, 83.4997, -0.237368, 0.55 ) }
    dend_12 { pt3dadd( -4.34657, 85.8245, -0.0404983, 1.11 ) }
    dend_12 { pt3dadd( -4.79672, 89.1879, 0.638952, 0.55 ) }
    dend_12 { pt3dadd( -4.92073, 91.9496, 1.42013, 1.11 ) }
    dend_12 { pt3dadd( -4.91147, 95.0572, 2.52971, 0.55 ) }
    dend_12 { pt3dadd( -4.82266, 97.5702, 3.19605, 0.83 ) }
    dend_12 { pt3dadd( -4.53699, 102.255, 3.54054, 0.28 ) }
    dend_12 { pt3dadd( -4.5021, 103.073, 3.44289, 0.55 ) }
    dend_12 { pt3dadd( -4.51691, 104.526, 3.03094, 0.28 ) }
    dend_12 { pt3dadd( -4.59447, 106.064, 2.38142, 0.83 ) }
    dend_12 { pt3dadd( -5.49799, 115.276, -2.45589, 0.55 ) }
    dend_12 { pt3dadd( -5.88132, 117.896, -3.91868, 0.55 ) }
    dend_12 { pt3dadd( -6.37354, 120.71, -5.49078, 0.83 ) }
    dend_12 { pt3dadd( -6.9029, 122.981, -6.46942, 0.28 ) }
    dend_12 { pt3dadd( -7.48533, 125.066, -7.09116, 0.55 ) }
    dend_12 { pt3dadd( -8.22085, 127.334, -7.39314, 0.28 ) }
    dend_12 { pt3dadd( -8.93431, 129.079, -7.26269, 0.55 ) }
    dend_12 { pt3dadd( -9.65061, 130.731, -7.14066, 0.28 ) }
    dend_12 { pt3dadd( -10.7563, 133.26, -7.01444, 0.55 ) }
    dend_12 { pt3dadd( -11.4014, 134.684, -6.99137, 0.28 ) }
    dend_12 { pt3dadd( -12.8785, 137.525, -7.00108, 0.55 ) }
    dend_12 { pt3dadd( -14.2094, 139.707, -7.10021, 0.28 ) }
    dend_12 { pt3dadd( -15.8258, 142.067, -7.30815, 0.28 ) }
    dend_12 { pt3dadd( -17.0019, 143.559, -7.47334, 0.55 ) }
    dend_12 { pt3dadd( -18.9293, 145.536, -7.7536, 0.55 ) }
    dend_12 { pt3dadd( -20.3478, 146.672, -7.97061, 0.55 ) }
    dend_12 { pt3dadd( -22.139, 147.91, -8.26825, 0.28 ) }
    dend_12 { pt3dadd( -22.8627, 148.355, -8.41792, 0.55 ) }
    dend_12 { pt3dadd( -24.4181, 149.065, -8.72407, 0.28 ) }
    dend_12 { pt3dadd( -27.0494, 149.962, -9.17763, 0.55 ) }
    dend_12 { pt3dadd( -30.3629, 150.756, -9.62054, 0.55 ) }
    dend_12 { pt3dadd( -35.6011, 160.113, -10.3211, 0.55 ) }
    dend_12 { pt3dadd( -41.4128, 169.187, -10.5217, 0.55 ) }
    dend_12 { pt3dadd( -46.6374, 178.571, -10.0215, 0.55 ) }
    dend_12 { pt3dadd( -50.8119, 188.316, -11.4648, 0.55 ) }
    dend_12 { pt3dadd( -55.9635, 197.694, -12.4233, 0.55 ) }
    dend_12 { pt3dadd( -62.7204, 205.517, -15.7657, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 71/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.01029, 53.4468, 6.30237, 0.55 ) }
    dend_11 { pt3dadd( 6.64936, 54.814, 6.98165, 0.55 ) }
    dend_11 { pt3dadd( 8.2618, 56.1874, 7.69287, 0.83 ) }
    dend_11 { pt3dadd( 9.57454, 57.3792, 8.36614, 0.55 ) }
    dend_11 { pt3dadd( 10.7325, 58.493, 9.00488, 0.83 ) }
    dend_11 { pt3dadd( 12.4324, 60.1202, 9.96036, 0.55 ) }
    dend_11 { pt3dadd( 13.7782, 61.4049, 10.7349, 0.28 ) }
    dend_11 { pt3dadd( 14.4222, 62.0944, 11.1514, 0.28 ) }
    dend_11 { pt3dadd( 15.1841, 63.0117, 11.6621, 0.55 ) }
    dend_11 { pt3dadd( 15.6987, 63.6494, 12.0136, 0.28 ) }
    dend_11 { pt3dadd( 16.3801, 64.5234, 12.485, 0.55 ) }
    dend_11 { pt3dadd( 17.5169, 66.0207, 13.1455, 0.28 ) }
    dend_11 { pt3dadd( 17.976, 66.661, 13.4273, 0.55 ) }
    dend_11 { pt3dadd( 18.8628, 68.025, 13.9838, 0.28 ) }
    dend_11 { pt3dadd( 19.5313, 69.1285, 14.4329, 0.55 ) }
    dend_11 { pt3dadd( 19.9985, 70.0159, 14.8131, 0.28 ) }
    dend_11 { pt3dadd( 20.4603, 71.0388, 15.2537, 0.55 ) }
    dend_11 { pt3dadd( 21.6112, 73.6199, 16.4161, 0.28 ) }
    dend_11 { pt3dadd( 22.1756, 74.737, 17.0272, 0.28 ) }
    dend_11 { pt3dadd( 22.6943, 75.6407, 17.5563, 0.55 ) }
    dend_11 { pt3dadd( 23.528, 76.8755, 18.2901, 0.55 ) }
    dend_11 { pt3dadd( 24.5638, 78.293, 19.1854, 0.28 ) }
    dend_11 { pt3dadd( 24.8976, 78.7369, 19.4752, 0.55 ) }
    dend_11 { pt3dadd( 26.3848, 80.5672, 20.5303, 0.55 ) }
    dend_11 { pt3dadd( 27.1027, 81.32, 21.0395, 0.28 ) }
    dend_11 { pt3dadd( 27.9224, 82.0614, 21.5345, 0.55 ) }
    dend_11 { pt3dadd( 30.9413, 87.6685, 24.9291, 0.55 ) }
    dend_11 { pt3dadd( 34.8304, 93.0252, 27.8428, 0.55 ) }
    dend_11 { pt3dadd( 39.1328, 98.4271, 29.9625, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( 42.8192, 103.917, 32.865, 0.55 ) }
    dend_11 { pt3dadd( 46.5705, 109.704, 34.9105, 0.55 ) }
    dend_11 { pt3dadd( 51.2048, 115.087, 36.2068, 0.55 ) }
    dend_11 { pt3dadd( 56.463, 120.062, 36.5299, 0.55 ) }
    dend_11 { pt3dadd( 62.0159, 124.73, 36.9848, 0.55 ) }
    dend_11 { pt3dadd( 67.5588, 129.228, 38.4368, 0.55 ) }
    dend_11 { pt3dadd( 72.795, 133.793, 40.6279, 0.55 ) }
    dend_11 { pt3dadd( 78.3619, 137.347, 43.8462, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 8/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -12.0782, 21.3115, 4.45801, 0.55 ) }
    dend_3 { pt3dadd( -12.8193, 24.4418, 3.38152, 0.55 ) }
    dend_3 { pt3dadd( -13.5224, 27.4116, 2.36021, 0.55 ) }
    dend_3 { pt3dadd( -14.2516, 30.4917, 1.30099, 0.83 ) }
    dend_3 { pt3dadd( -14.7291, 32.5087, 0.607368, 0.55 ) }
    dend_3 { pt3dadd( -16.1378, 38.4592, -1.43898, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 14/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -12.0782, 21.3115, 4.45801, 0.55 ) }
    dend_2 { pt3dadd( -15.1052, 18.5979, 2.31191, 0.55 ) }
    dend_2 { pt3dadd( -17.3326, 16.5765, 0.807105, 0.83 ) }
    dend_2 { pt3dadd( -18.3909, 15.618, 0.14578, 0.55 ) }
    dend_2 { pt3dadd( -20.72, 13.4882, -1.26753, 0.83 ) }
    dend_2 { pt3dadd( -22.6592, 11.7511, -2.31317, 0.55 ) }
    dend_2 { pt3dadd( -23.8446, 10.7337, -2.90715, 0.83 ) }
    dend_2 { pt3dadd( -25.784, 9.02882, -3.67787, 0.55 ) }
    dend_2 { pt3dadd( -26.8098, 8.20914, -3.94896, 0.83 ) }
    dend_2 { pt3dadd( -28.001, 7.33308, -4.1306, 0.55 ) }
    dend_2 { pt3dadd( -29.9297, 6.08441, -4.22927, 0.83 ) }
    dend_2 { pt3dadd( -32.1663, 4.87342, -3.93049, 0.55 ) }
    dend_2 { pt3dadd( -34.6088, 3.71468, -3.24813, 0.28 ) }
    dend_2 { pt3dadd( -36.2311, 2.97065, -2.44829, 0.55 ) }
    dend_2 { pt3dadd( -38.111, 2.09962, -1.26848, 0.28 ) }
    dend_2 { pt3dadd( -39.5182, 1.40145, -0.0283814, 0.83 ) }
    dend_2 { pt3dadd( -42.9596, -0.440708, 3.54243, 0.55 ) }
    dend_2 { pt3dadd( -43.6305, -0.837643, 4.31042, 0.55 ) }
    dend_2 { pt3dadd( -45.6781, -2.24508, 6.89911, 0.55 ) }
    dend_2 { pt3dadd( -46.5232, -2.89645, 7.97074, 0.55 ) }
    dend_2 { pt3dadd( -49.557, -5.55047, 11.8114, 0.28 ) }
    dend_2 { pt3dadd( -50.4931, -6.40927, 13.0282, 0.28 ) }
    dend_2 { pt3dadd( -51.5055, -7.42031, 14.2469, 0.55 ) }
    dend_2 { pt3dadd( -53.9693, -9.80644, 16.962, 0.55 ) }
    dend_2 { pt3dadd( -54.5989, -10.3913, 17.6149, 0.55 ) }
    dend_2 { pt3dadd( -55.7157, -11.4303, 18.7602, 0.55 ) }
    dend_2 { pt3dadd( -58.4494, -13.9918, 21.2842, 0.55 ) }
    dend_2 { pt3dadd( -59.4265, -14.8947, 22.2565, 0.28 ) }
    dend_2 { pt3dadd( -61.6507, -16.7308, 24.4154, 0.28 ) }
    dend_2 { pt3dadd( -69.6338, -20.2851, 28.1821, 0.28 ) }
    dend_2 { pt3dadd( -76.9549, -23.7529, 33.1848, 0.28 ) }
    dend_2 { pt3dadd( -84.1378, -28.1836, 37.4958, 0.28 ) }
    dend_2 { pt3dadd( -90.7404, -32.4073, 42.8444, 0.28 ) }
    dend_2 { pt3dadd( -96.6389, -36.6849, 48.9215, 0.28 ) }
    dend_2 { pt3dadd( -103.498, -42.2268, 52.2118, 0.28 ) }
    dend_2 { pt3dadd( -110.715, -46.6804, 56.4384, 0.28 ) }
    dend_2 { pt3dadd( -117.679, -52.3697, 59.1797, 0.28 ) }
    dend_2 { pt3dadd( -123.138, -59.7636, 60.3916, 0.28 ) }
    dend_2 { pt3dadd( -128.189, -67.4952, 60.2004, 0.28 ) }
    dend_2 { pt3dadd( -131.679, -75.971, 59.967, 0.28 ) }
    dend_2 { pt3dadd( -133.829, -84.8455, 60.0747, 0.28 ) }
    dend_2 { pt3dadd( -135.257, -93.6973, 61.85, 0.28 ) }
    dend_2 { pt3dadd( -135.542, -102.776, 62.6258, 0.28 ) }
    dend_2 { pt3dadd( -136.898, -111.767, 61.9241, 0.28 ) }
    dend_2 { pt3dadd( -137.226, -120.696, 60.0747, 0.28 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -14.935, -41.9861, 13.9854, 0.28 ) }
    dend_49 { pt3dadd( -18.0901, -42.3595, 14.7983, 0.28 ) }
    dend_49 { pt3dadd( -19.1639, -42.4762, 15.0771, 0.55 ) }
    dend_49 { pt3dadd( -20.5765, -42.6346, 15.447, 0.28 ) }
    dend_49 { pt3dadd( -20.9751, -42.6779, 15.5236, 0.55 ) }
    dend_49 { pt3dadd( -22.6201, -42.8184, 15.7516, 0.28 ) }
    dend_49 { pt3dadd( -23.6726, -42.9067, 15.7848, 0.55 ) }
    dend_49 { pt3dadd( -25.0881, -43.0004, 15.5305, 0.28 ) }
    dend_49 { pt3dadd( -25.7386, -43.0332, 15.2628, 0.55 ) }
    dend_49 { pt3dadd( -27.263, -43.1294, 14.4315, 0.28 ) }
    dend_49 { pt3dadd( -28.2471, -43.2379, 13.7253, 0.55 ) }
    dend_49 { pt3dadd( -29.8893, -43.4789, 12.2826, 0.55 ) }
    dend_49 { pt3dadd( -31.0634, -43.6716, 11.0892, 0.28 ) }
    dend_49 { pt3dadd( -32.7737, -43.9644, 9.10368, 0.55 ) }
    dend_49 { pt3dadd( -33.9627, -44.1949, 7.64446, 0.28 ) }
    dend_49 { pt3dadd( -34.958, -44.4636, 6.45252, 0.55 ) }
    dend_49 { pt3dadd( -41.0781, -44.7559, 3.96886, 0.55 ) }
    dend_49 { pt3dadd( -47.2887, -44.9406, 1.71205, 0.55 ) }
    dend_49 { pt3dadd( -53.3991, -44.2212, -0.664541, 0.55 ) }
    dend_49 { pt3dadd( -59.5115, -43.4033, -2.99737, 0.55 ) }
    dend_49 { pt3dadd( -65.9434, -43.1246, -4.47649, 0.55 ) }
    dend_49 { pt3dadd( -71.9354, -42.0261, -6.97791, 0.55 ) }
    dend_49 { pt3dadd( -77.5538, -40.4083, -9.96749, 0.55 ) }
    dend_49 { pt3dadd( -83.4477, -38.679, -12.2833, 0.55 ) }
    dend_49 { pt3dadd( -89.3249, -37.9436, -15.1821, 0.55 ) }
    dend_49 { pt3dadd( -94.7747, -36.4073, -18.5124, 0.55 ) }
    dend_49 { pt3dadd( -99.7317, -34.9693, -22.5793, 0.55 ) }
    dend_49 { pt3dadd( -103.871, -32.9508, -27.2333, 0.55 ) }
    dend_49 { pt3dadd( -107.789, -31.3663, -32.2566, 0.55 ) }
    dend_49 { pt3dadd( -111.243, -29.9575, -37.6668, 0.55 ) }
    dend_49 { pt3dadd( -115.086, -29.1918, -42.9668, 0.55 ) }
    dend_49 { pt3dadd( -118.925, -28.8348, -48.3236, 0.55 ) }
    dend_49 { pt3dadd( -122.72, -27.6968, -53.5781, 0.55 ) }
    dend_49 { pt3dadd( -126.56, -26.8139, -58.8578, 0.55 ) }
    dend_49 { pt3dadd( -130.461, -25.0733, -63.8343, 0.55 ) }
    dend_49 { pt3dadd( -134.145, -23.6047, -69.071, 0.55 ) }
    dend_49 { pt3dadd( -136.767, -21.7263, -74.7767, 0.55 ) }
    dend_49 { pt3dadd( -139.482, -19.9543, -80.4772, 0.55 ) }
    dend_49 { pt3dadd( -141.092, -18.213, -86.5949, 0.55 ) }
    dend_49 { pt3dadd( -143.251, -17.3532, -92.7612, 0.55 ) }
    dend_49 { pt3dadd( -144.412, -17.1237, -99.259, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_49 { pt3dadd( -144.5, -16.4595, -105.823, 0.55 ) }
    dend_49 { pt3dadd( -143.337, -16.4815, -112.33, 0.55 ) }
    dend_49 { pt3dadd( -141.501, -15.7839, -118.632, 0.55 ) }
    dend_49 { pt3dadd( -140.537, -15.3811, -125.153, 0.55 ) }
    dend_49 { pt3dadd( -139.842, -14.1, -131.573, 0.55 ) }
    dend_49 { pt3dadd( -139.936, -11.9588, -137.762, 0.55 ) }
    dend_49 { pt3dadd( -140.582, -9.25214, -143.658, 0.55 ) }
    dend_49 { pt3dadd( -140.638, -5.98058, -149.264, 0.55 ) }
    dend_49 { pt3dadd( -139.789, -2.26686, -154.492, 0.55 ) }
    dend_49 { pt3dadd( -138.987, 2.03561, -159.202, 0.55 ) }
    dend_49 { pt3dadd( -137.354, 6.27139, -163.772, 0.55 ) }
    dend_49 { pt3dadd( -135.714, 10.4282, -168.418, 0.55 ) }
    dend_49 { pt3dadd( -133.32, 14.7118, -172.597, 0.55 ) }
    dend_49 { pt3dadd( -130.82, 19.3067, -176.329, 0.55 ) }
    dend_49 { pt3dadd( -127.881, 23.545, -180.209, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 15/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -14.935, -41.9861, 13.9854, 0.28 ) }
    dend_48 { pt3dadd( -16.3636, -43.8167, 16.1498, 0.28 ) }
    dend_48 { pt3dadd( -17.1853, -44.7723, 17.2092, 0.55 ) }
    dend_48 { pt3dadd( -20.3037, -48.4054, 20.9511, 0.28 ) }
    dend_48 { pt3dadd( -20.8947, -49.094, 21.6603, 0.55 ) }
    dend_48 { pt3dadd( -22.6472, -51.1357, 23.7632, 0.55 ) }
    dend_48 { pt3dadd( -26.1404, -55.2055, 27.9549, 0.28 ) }
    dend_48 { pt3dadd( -27.4998, -56.5492, 29.3558, 0.28 ) }
    dend_48 { pt3dadd( -28.3134, -57.301, 30.1446, 0.55 ) }
    dend_48 { pt3dadd( -33.9125, -63.4116, 38.6481, 0.55 ) }
    dend_48 { pt3dadd( -39.2149, -70.6858, 46.2856, 0.55 ) }
    dend_48 { pt3dadd( -45.1967, -77.7355, 53.6633, 0.55 ) }
    dend_48 { pt3dadd( -50.8934, -85.6432, 60.2704, 0.55 ) }
    dend_48 { pt3dadd( -56.1918, -92.6045, 68.2238, 0.55 ) }
    dend_48 { pt3dadd( -61.0527, -99.7291, 76.288, 0.55 ) }
    dend_48 { pt3dadd( -66.7835, -107.54, 82.9915, 0.55 ) }
    dend_48 { pt3dadd( -72.9518, -115.591, 88.9737, 0.55 ) }
    dend_48 { pt3dadd( -78.1214, -123.892, 95.4717, 0.55 ) }
    dend_48 { pt3dadd( -82.6349, -130.025, 104.564, 0.55 ) }
    dend_48 { pt3dadd( -87.6418, -136.86, 112.815, 0.55 ) }
    dend_48 { pt3dadd( -91.2356, -142.618, 122.555, 0.55 ) }
    dend_48 { pt3dadd( -96.282, -148.118, 131.822, 0.55 ) }
    dend_48 { pt3dadd( -99.6851, -153.477, 141.876, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 38/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -4.69621, -23.6412, -4.58279, 0.83 ) }
    dend_44 { pt3dadd( -2.50773, -26.6509, -9.69321, 0.83 ) }
    dend_44 { pt3dadd( -1.2747, -28.4611, -12.8473, 0.83 ) }
    dend_44 { pt3dadd( -0.0867687, -30.2536, -16.1855, 0.83 ) }
    dend_44 { pt3dadd( 1.37529, -31.9604, -20.1287, 0.83 ) }
    dend_44 { pt3dadd( 2.91249, -33.1548, -24.3481, 0.83 ) }
    dend_44 { pt3dadd( 3.03684, -33.2168, -24.7709, 0.55 ) }
    dend_44 { pt3dadd( 3.38937, -33.2592, -26.2737, 0.55 ) }
    dend_44 { pt3dadd( 3.68569, -33.1701, -28.2428, 0.55 ) }
    dend_44 { pt3dadd( 4.3035, -31.8808, -33.3403, 0.55 ) }
    dend_44 { pt3dadd( 4.90062, -29.914, -37.5602, 0.55 ) }
    dend_44 { pt3dadd( 5.65038, -27.4718, -41.5945, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 50/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -4.69621, -23.6412, -4.58279, 1.38 ) }
    dend_41 { pt3dadd( -5.92049, -25.4493, -4.64918, 1.38 ) }
    dend_41 { pt3dadd( -8.35789, -28.3778, -5.48392, 1.66 ) }
    dend_41 { pt3dadd( -10.3169, -30.7316, -6.15484, 0.83 ) }
    dend_41 { pt3dadd( -11.6334, -32.3133, -6.6057, 0.83 ) }
    dend_41 { pt3dadd( -13.2065, -34.2035, -7.14446, 0.83 ) }
    dend_41 { pt3dadd( -15.8973, -37.4364, -8.06598, 0.83 ) }
    dend_41 { pt3dadd( -20.5114, -42.1422, -9.94201, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 1.9226, -26.5257, 1.98651, 0.55 ) }
    dend_36 { pt3dadd( 1.72785, -27.7721, 1.34614, 0.55 ) }
    dend_36 { pt3dadd( 1.60106, -28.5836, 0.929249, 0.28 ) }
    dend_36 { pt3dadd( 1.40736, -29.8235, 0.292293, 0.83 ) }
    dend_36 { pt3dadd( 1.21528, -31.0529, -0.339289, 0.55 ) }
    dend_36 { pt3dadd( 0.82369, -33.5593, -1.62696, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 64/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 1.9226, -26.5257, 1.98651, 0.55 ) }
    dend_33 { pt3dadd( 3.31111, -27.5608, 2.17912, 0.55 ) }
    dend_33 { pt3dadd( 4.64766, -28.5697, 2.37642, 0.55 ) }
    dend_33 { pt3dadd( 6.77702, -30.2102, 2.71365, 0.28 ) }
    dend_33 { pt3dadd( 8.54753, -31.6516, 3.01775, 0.55 ) }
    dend_33 { pt3dadd( 11.1209, -33.8355, 3.47791, 0.55 ) }
    dend_33 { pt3dadd( 12.8282, -35.3559, 3.75588, 0.55 ) }
    dend_33 { pt3dadd( 14.0434, -36.5193, 3.99523, 0.55 ) }
    dend_33 { pt3dadd( 14.8362, -37.3454, 4.16877, 0.55 ) }
    dend_33 { pt3dadd( 15.866, -38.5738, 4.44237, 0.28 ) }
    dend_33 { pt3dadd( 16.4755, -39.4527, 4.68001, 0.55 ) }
    dend_33 { pt3dadd( 17.2431, -40.7579, 5.03689, 0.28 ) }
    dend_33 { pt3dadd( 17.9855, -42.0945, 5.3022, 0.55 ) }
    dend_33 { pt3dadd( 19.0258, -43.8307, 5.70468, 0.28 ) }
    dend_33 { pt3dadd( 20.2221, -45.6737, 6.07877, 0.55 ) }
    dend_33 { pt3dadd( 21.2324, -47.1313, 6.32581, 0.55 ) }
    dend_33 { pt3dadd( 22.539, -48.8093, 6.65055, 0.55 ) }
    dend_33 { pt3dadd( 24.0402, -50.5295, 7.04323, 0.55 ) }
    dend_33 { pt3dadd( 25.719, -52.271, 7.40031, 0.28 ) }
    dend_33 { pt3dadd( 26.8054, -53.2939, 7.60467, 0.55 ) }
    dend_33 { pt3dadd( 27.8572, -54.1689, 7.74503, 0.55 ) }
    dend_33 { pt3dadd( 29.8, -55.6282, 8.0941, 0.55 ) }
    dend_33 { pt3dadd( 30.6372, -56.2295, 8.2865, 0.28 ) }
    dend_33 { pt3dadd( 31.141, -56.5713, 8.40772, 0.55 ) }
    dend_33 { pt3dadd( 32.2861, -57.3457, 8.63799, 0.28 ) }
    dend_33 { pt3dadd( 34.0546, -58.5003, 9.0768, 0.28 ) }
    dend_33 { pt3dadd( 34.234, -58.611, 9.11289, 0.55 ) }
    dend_33 { pt3dadd( 35.8633, -59.6949, 9.23721, 0.28 ) }
    dend_33 { pt3dadd( 36.5346, -60.1124, 9.27416, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 93/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -16.1378, 38.4592, -1.43898, 0.55 ) }
    dend_5 { pt3dadd( -16.4024, 40.4519, -1.46027, 0.55 ) }
    dend_5 { pt3dadd( -16.6897, 42.7199, -1.75791, 0.83 ) }
    dend_5 { pt3dadd( -16.9217, 45.0945, -2.33232, 0.55 ) }
    dend_5 { pt3dadd( -17.1265, 47.3741, -3.11901, 0.83 ) }
    dend_5 { pt3dadd( -17.2972, 49.5513, -3.96189, 0.83 ) }
    dend_5 { pt3dadd( -17.4627, 51.7621, -4.77822, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_5 { pt3dadd( -17.6766, 54.845, -6.08634, 0.83 ) }
    dend_5 { pt3dadd( -17.844, 58.0928, -7.64883, 0.83 ) }
    dend_5 { pt3dadd( -17.9273, 60.5532, -8.95124, 0.83 ) }
    dend_5 { pt3dadd( -18.0702, 63.4055, -10.5152, 0.55 ) }
    dend_5 { pt3dadd( -18.1564, 65.9545, -11.9326, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 5/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -16.1378, 38.4592, -1.43898, 0.28 ) }
    dend_4 { pt3dadd( -17.559, 38.2811, -0.979175, 0.28 ) }
    dend_4 { pt3dadd( -19.4931, 37.9096, -0.229645, 0.55 ) }
    dend_4 { pt3dadd( -20.1514, 37.7826, 0.0527211, 0.55 ) }
    dend_4 { pt3dadd( -23.1814, 37.222, 1.34816, 0.28 ) }
    dend_4 { pt3dadd( -23.5099, 37.1682, 1.50299, 0.55 ) }
    dend_4 { pt3dadd( -25.8887, 36.7429, 2.76649, 0.55 ) }
    dend_4 { pt3dadd( -27.2555, 36.4497, 3.61858, 0.55 ) }
    dend_4 { pt3dadd( -29.3556, 35.943, 5.10544, 0.55 ) }
    dend_4 { pt3dadd( -30.1691, 35.7363, 5.69905, 0.55 ) }
    dend_4 { pt3dadd( -32.9908, 35.1202, 7.89713, 0.55 ) }
    dend_4 { pt3dadd( -34.5979, 34.877, 9.13227, 0.28 ) }
    dend_4 { pt3dadd( -35.4899, 34.7969, 9.80107, 0.55 ) }
    dend_4 { pt3dadd( -36.8397, 34.8076, 10.8935, 0.28 ) }
    dend_4 { pt3dadd( -37.6653, 34.9, 11.577, 0.55 ) }
    dend_4 { pt3dadd( -39.4526, 35.2605, 13.0651, 0.28 ) }
    dend_4 { pt3dadd( -40.4275, 35.5355, 13.8429, 0.55 ) }
    dend_4 { pt3dadd( -42.0862, 36.1422, 15.0994, 0.55 ) }
    dend_4 { pt3dadd( -43.5664, 36.7729, 16.2286, 0.28 ) }
    dend_4 { pt3dadd( -44.5096, 37.2123, 16.9736, 0.55 ) }
    dend_4 { pt3dadd( -45.7205, 37.752, 17.9946, 0.28 ) }
    dend_4 { pt3dadd( -46.8124, 38.1389, 18.86, 0.55 ) }
    dend_4 { pt3dadd( -55.1789, 36.8849, 22.6413, 0.55 ) }
    dend_4 { pt3dadd( -63.0716, 35.037, 27.1067, 0.55 ) }
    dend_4 { pt3dadd( -71.0532, 32.1917, 30.7507, 0.55 ) }
    dend_4 { pt3dadd( -79.7055, 30.4711, 33.5535, 0.55 ) }
    dend_4 { pt3dadd( -88.4886, 28.6864, 35.8582, 0.55 ) }
    dend_4 { pt3dadd( -96.7662, 26.3313, 39.2208, 0.55 ) }
    dend_4 { pt3dadd( -104.875, 22.812, 41.7549, 0.55 ) }
    dend_4 { pt3dadd( -111.997, 18.846, 45.9722, 0.55 ) }
    dend_4 { pt3dadd( -118.528, 14.2298, 50.4083, 0.55 ) }
    dend_4 { pt3dadd( -123.994, 9.35883, 55.8709, 0.55 ) }
    dend_4 { pt3dadd( -129.067, 4.02025, 61.2276, 0.55 ) }
    dend_4 { pt3dadd( -133.342, -0.637571, 67.8434, 0.55 ) }
    dend_4 { pt3dadd( -138.636, -4.63901, 74.1904, 0.55 ) }
    dend_4 { pt3dadd( -145.418, -8.46683, 79.0618, 0.55 ) }
    dend_4 { pt3dadd( -152.862, -12.8662, 82.0661, 0.55 ) }
    dend_4 { pt3dadd( -160.778, -15.2963, 86.1632, 0.55 ) }
    dend_4 { pt3dadd( -168.409, -18.4181, 90.2759, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 44/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 5.65038, -27.4718, -41.5945, 0.55 ) }
    dend_46 { pt3dadd( 6.73989, -25.7617, -41.7856, 0.55 ) }
    dend_46 { pt3dadd( 7.11913, -25.2423, -41.9204, 0.28 ) }
    dend_46 { pt3dadd( 8.29811, -23.7237, -42.3886, 0.55 ) }
    dend_46 { pt3dadd( 10.1502, -21.624, -43.432, 0.55 ) }
    dend_46 { pt3dadd( 11.5984, -20.0537, -44.3295, 0.28 ) }
    dend_46 { pt3dadd( 13.1877, -18.5359, -45.8042, 0.83 ) }
    dend_46 { pt3dadd( 15.4461, -16.6066, -48.2687, 0.28 ) }
    dend_46 { pt3dadd( 15.9952, -16.1833, -48.9186, 0.55 ) }
    dend_46 { pt3dadd( 18.8899, -14.156, -52.5519, 0.28 ) }
    dend_46 { pt3dadd( 19.7224, -13.6466, -53.6894, 0.83 ) }
    dend_46 { pt3dadd( 25.8699, -10.2725, -62.0549, 0.28 ) }
    dend_46 { pt3dadd( 26.5685, -9.9149, -62.969, 0.55 ) }
    dend_46 { pt3dadd( 28.789, -8.78085, -65.7285, 0.28 ) }
    dend_46 { pt3dadd( 29.8105, -8.26434, -66.9314, 0.83 ) }
    dend_46 { pt3dadd( 34.8793, -5.76531, -72.5322, 0.28 ) }
    dend_46 { pt3dadd( 36.8429, -4.80999, -74.5576, 0.28 ) }
    dend_46 { pt3dadd( 38.1547, -4.16258, -75.758, 0.55 ) }
    dend_46 { pt3dadd( 41.8422, -2.29909, -79.099, 0.28 ) }
    dend_46 { pt3dadd( 43.6896, -1.305, -80.6882, 0.83 ) }
    dend_46 { pt3dadd( 46.4187, 0.329149, -82.9941, 0.55 ) }
    dend_46 { pt3dadd( 47.5331, 1.10437, -83.9519, 0.83 ) }
    dend_46 { pt3dadd( 49.1296, 2.3143, -85.4239, 0.28 ) }
    dend_46 { pt3dadd( 50.3101, 3.27835, -86.5101, 0.83 ) }
    dend_46 { pt3dadd( 54.7572, 7.14731, -90.464, 0.28 ) }
    dend_46 { pt3dadd( 56.6279, 8.92181, -92.1664, 0.83 ) }
    dend_46 { pt3dadd( 60.325, 12.7031, -95.5404, 0.28 ) }
    dend_46 { pt3dadd( 61.0527, 13.4449, -96.229, 0.55 ) }
    dend_46 { pt3dadd( 61.9145, 14.3454, -97.0365, 0.28 ) }
    dend_46 { pt3dadd( 63.123, 15.5698, -98.1956, 0.55 ) }
    dend_46 { pt3dadd( 64.6786, 17.0403, -99.5759, 0.28 ) }
    dend_46 { pt3dadd( 65.2037, 17.3976, -99.9533, 0.55 ) }
    dend_46 { pt3dadd( 67.7968, 18.6942, -101.41, 0.28 ) }
    dend_46 { pt3dadd( 69.2147, 19.2634, -102.087, 0.55 ) }
    dend_46 { pt3dadd( 71.4377, 19.9594, -102.919, 0.28 ) }
    dend_46 { pt3dadd( 73.2001, 20.4506, -103.387, 0.55 ) }
    dend_46 { pt3dadd( 76.4759, 21.2422, -104.013, 0.28 ) }
    dend_46 { pt3dadd( 78.1934, 21.7147, -104.261, 0.55 ) }
    dend_46 { pt3dadd( 80.1172, 22.3245, -104.516, 0.28 ) }
    dend_46 { pt3dadd( 81.709, 22.8592, -104.765, 0.55 ) }
    dend_46 { pt3dadd( 82.9559, 23.3633, -105.008, 0.55 ) }
    dend_46 { pt3dadd( 85.5877, 24.5001, -105.632, 0.28 ) }
    dend_46 { pt3dadd( 87.4599, 25.3054, -106.203, 0.55 ) }
    dend_46 { pt3dadd( 91.405, 26.8558, -107.642, 0.28 ) }
    dend_46 { pt3dadd( 92.4395, 27.2014, -108.063, 0.83 ) }
    dend_46 { pt3dadd( 96.1643, 28.2454, -109.601, 0.28 ) }
    dend_46 { pt3dadd( 98.3394, 28.6558, -110.464, 0.83 ) }
    dend_46 { pt3dadd( 101.204, 28.9457, -111.352, 0.28 ) }
    dend_46 { pt3dadd( 102.645, 28.8355, -111.598, 0.83 ) }
    dend_46 { pt3dadd( 105.44, 28.2867, -111.735, 0.28 ) }
    dend_46 { pt3dadd( 106.809, 27.8947, -111.708, 0.83 ) }
    dend_46 { pt3dadd( 110.107, 26.7061, -111.394, 0.28 ) }
    dend_46 { pt3dadd( 114.018, 25.1553, -110.808, 0.55 ) }
    dend_46 { pt3dadd( 121.258, 21.204, -109.17, 0.28 ) }
    dend_46 { pt3dadd( 122.701, 20.2313, -108.784, 0.55 ) }
    dend_46 { pt3dadd( 123.905, 19.1535, -108.415, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_46 { pt3dadd( 125.418, 17.4486, -107.937, 0.28 ) }
    dend_46 { pt3dadd( 125.949, 16.6512, -107.753, 0.55 ) }
    dend_46 { pt3dadd( 130.189, 8.32231, -106.371, 0.28 ) }
    dend_46 { pt3dadd( 130.553, 7.38612, -106.218, 0.55 ) }
    dend_46 { pt3dadd( 132.478, 1.81278, -105.375, 0.28 ) }
    dend_46 { pt3dadd( 132.851, 0.590379, -105.209, 0.55 ) }
    dend_46 { pt3dadd( 133.709, -2.82747, -104.828, 0.28 ) }
    dend_46 { pt3dadd( 133.98, -4.07938, -104.715, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 8/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 5.65038, -27.4718, -41.5945, 0.55 ) }
    dend_45 { pt3dadd( 5.58196, -27.8828, -42.8803, 0.55 ) }
    dend_45 { pt3dadd( 5.05576, -29.6735, -48.7342, 0.28 ) }
    dend_45 { pt3dadd( 4.86594, -30.2207, -50.3543, 0.28 ) }
    dend_45 { pt3dadd( 4.69432, -30.8061, -51.86, 0.55 ) }
    dend_45 { pt3dadd( 3.87075, -33.9353, -59.1364, 0.28 ) }
    dend_45 { pt3dadd( 3.64847, -34.6291, -60.5965, 0.55 ) }
    dend_45 { pt3dadd( 3.38372, -35.1474, -61.5423, 0.28 ) }
    dend_45 { pt3dadd( 2.66869, -35.9448, -63.032, 0.55 ) }
    dend_45 { pt3dadd( 1.19539, -37.2747, -65.6376, 0.28 ) }
    dend_45 { pt3dadd( -0.957717, -39.1742, -69.2898, 0.55 ) }
    dend_45 { pt3dadd( -2.1999, -40.257, -71.4081, 0.55 ) }
    dend_45 { pt3dadd( -4.08858, -42.0821, -75.2932, 0.55 ) }
    dend_45 { pt3dadd( -6.15911, -44.2694, -80.4564, 0.55 ) }
    dend_45 { pt3dadd( -6.98188, -45.1742, -82.7651, 0.28 ) }
    dend_45 { pt3dadd( -7.76267, -46.1645, -85.3561, 0.55 ) }
    dend_45 { pt3dadd( -8.65944, -48.3981, -91.4505, 0.28 ) }
    dend_45 { pt3dadd( -8.68655, -49.1718, -93.4383, 0.55 ) }
    dend_45 { pt3dadd( -8.48973, -50.4253, -96.4226, 0.28 ) }
    dend_45 { pt3dadd( -8.31334, -51.2622, -98.1407, 0.55 ) }
    dend_45 { pt3dadd( -8.14262, -52.2494, -100.029, 0.55 ) }
    dend_45 { pt3dadd( -7.84819, -56.4597, -107.915, 0.28 ) }
    dend_45 { pt3dadd( -7.88323, -58.2048, -111.062, 0.28 ) }
    dend_45 { pt3dadd( -8.15823, -60.0689, -114.613, 0.83 ) }
    dend_45 { pt3dadd( -8.36926, -60.8983, -116.213, 0.28 ) }
    dend_45 { pt3dadd( -8.65349, -61.5901, -117.75, 0.83 ) }
    dend_45 { pt3dadd( -10.4504, -63.86, -124.422, 0.28 ) }
    dend_45 { pt3dadd( -10.6898, -64.0558, -125.222, 0.55 ) }
    dend_45 { pt3dadd( -11.6518, -64.7456, -128.734, 0.28 ) }
    dend_45 { pt3dadd( -12.3788, -65.316, -131.887, 0.83 ) }
    dend_45 { pt3dadd( -13.5121, -66.0508, -137.139, 0.83 ) }
    dend_45 { pt3dadd( -14.5662, -66.5529, -141.825, 0.28 ) }
    dend_45 { pt3dadd( -15.529, -66.8947, -145.982, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 41/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -20.5114, -42.1422, -9.94201, 0.83 ) }
    dend_43 { pt3dadd( -23.5536, -41.3594, -9.12741, 0.83 ) }
    dend_43 { pt3dadd( -26.9554, -40.4412, -8.42894, 0.83 ) }
    dend_43 { pt3dadd( -29.661, -39.6135, -8.04535, 0.83 ) }
    dend_43 { pt3dadd( -32.5644, -38.6032, -7.82189, 0.83 ) }
    dend_43 { pt3dadd( -36.5343, -37.0807, -7.85402, 0.83 ) }
    dend_43 { pt3dadd( -39.645, -35.7764, -8.25921, 0.28 ) }
    dend_43 { pt3dadd( -41.5012, -34.7606, -8.96365, 0.55 ) }
    dend_43 { pt3dadd( -43.1119, -33.715, -9.98009, 0.55 ) }
    dend_43 { pt3dadd( -44.3656, -32.7753, -11.1051, 0.55 ) }
    dend_43 { pt3dadd( -46.3225, -31.0325, -13.3197, 0.55 ) }
    dend_43 { pt3dadd( -48.2738, -29.0203, -16.2204, 0.55 ) }
    dend_43 { pt3dadd( -49.6881, -27.3743, -18.6226, 0.55 ) }
    dend_43 { pt3dadd( -50.1242, -26.8456, -19.332, 0.83 ) }
    dend_43 { pt3dadd( -51.1261, -25.6015, -20.8689, 0.55 ) }
    dend_43 { pt3dadd( -51.6728, -24.8796, -21.618, 0.83 ) }
    dend_43 { pt3dadd( -53.4335, -22.3352, -23.7305, 0.55 ) }
    dend_43 { pt3dadd( -53.6492, -22.0204, -23.9246, 0.83 ) }
    dend_43 { pt3dadd( -54.9861, -20.0651, -24.9282, 0.55 ) }
    dend_43 { pt3dadd( -56.3832, -18.0687, -25.7295, 0.83 ) }
    dend_43 { pt3dadd( -57.7067, -16.1353, -26.5112, 0.28 ) }
    dend_43 { pt3dadd( -58.2786, -15.2868, -26.836, 0.55 ) }
    dend_43 { pt3dadd( -59.5879, -13.2401, -27.5855, 0.28 ) }
    dend_43 { pt3dadd( -60.3642, -11.9466, -28.1168, 0.55 ) }
    dend_43 { pt3dadd( -61.8626, -9.05196, -29.3886, 0.28 ) }
    dend_43 { pt3dadd( -63.3967, -5.60765, -30.9913, 0.83 ) }
    dend_43 { pt3dadd( -64.3647, -3.12013, -32.1375, 0.28 ) }
    dend_43 { pt3dadd( -65.1987, -0.715612, -33.1796, 0.28 ) }
    dend_43 { pt3dadd( -65.4094, -0.081965, -33.4377, 0.83 ) }
    dend_43 { pt3dadd( -65.983, 1.68678, -34.1396, 0.55 ) }
    dend_43 { pt3dadd( -66.6805, 3.79767, -34.9672, 0.83 ) }
    dend_43 { pt3dadd( -67.5497, 5.99817, -35.7025, 0.55 ) }
    dend_43 { pt3dadd( -68.1042, 7.33004, -36.1667, 0.83 ) }
    dend_43 { pt3dadd( -69.3428, 10.1216, -37.1678, 0.83 ) }
    dend_43 { pt3dadd( -70.5644, 12.7392, -38.1876, 0.55 ) }
    dend_43 { pt3dadd( -71.4619, 14.5581, -39.043, 0.83 ) }
    dend_43 { pt3dadd( -72.355, 16.3692, -40.0572, 0.28 ) }
    dend_43 { pt3dadd( -72.7985, 17.3087, -40.7032, 0.55 ) }
    dend_43 { pt3dadd( -74.121, 20.2315, -43.0267, 0.28 ) }
    dend_43 { pt3dadd( -74.7967, 21.7283, -44.3428, 0.83 ) }
    dend_43 { pt3dadd( -76.0717, 24.2131, -46.8154, 0.28 ) }
    dend_43 { pt3dadd( -76.6438, 25.1917, -47.8927, 0.83 ) }
    dend_43 { pt3dadd( -77.8638, 27.0426, -50.4842, 0.55 ) }
    dend_43 { pt3dadd( -78.6945, 28.1364, -52.1221, 0.55 ) }
    dend_43 { pt3dadd( -79.6947, 29.3164, -53.9413, 0.83 ) }
    dend_43 { pt3dadd( -81.4713, 31.3687, -56.8854, 0.55 ) }
    dend_43 { pt3dadd( -82.4349, 32.452, -58.2659, 0.83 ) }
    dend_43 { pt3dadd( -85.4457, 35.9039, -62.2879, 0.28 ) }
    dend_43 { pt3dadd( -87.2561, 38.0146, -64.4459, 0.55 ) }
    dend_43 { pt3dadd( -88.1666, 39.1532, -65.5572, 0.28 ) }
    dend_43 { pt3dadd( -89.681, 41.2007, -67.2997, 0.28 ) }
    dend_43 { pt3dadd( -90.4154, 42.2677, -68.064, 0.28 ) }
    dend_43 { pt3dadd( -92.0497, 44.6761, -69.6395, 0.55 ) }
    dend_43 { pt3dadd( -93.2933, 46.4754, -70.6176, 0.28 ) }
    dend_43 { pt3dadd( -94.646, 48.4226, -71.7871, 0.83 ) }
    dend_43 { pt3dadd( -96.2128, 51.0829, -73.1046, 0.28 ) }
    dend_43 { pt3dadd( -96.8621, 52.3815, -73.7071, 0.55 ) }
    dend_43 { pt3dadd( -98.0666, 55.2595, -74.9574, 0.28 ) }
    dend_43 { pt3dadd( -98.6727, 56.9449, -75.6274, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_43 { pt3dadd( -98.8997, 57.719, -75.9976, 0.55 ) }
    dend_43 { pt3dadd( -100.126, 63.3394, -79.0769, 0.28 ) }
    dend_43 { pt3dadd( -100.383, 65.6412, -80.6373, 0.83 ) }
    dend_43 { pt3dadd( -100.41, 67.3715, -82.0362, 0.28 ) }
    dend_43 { pt3dadd( -100.333, 68.492, -83.0717, 0.55 ) }
    dend_43 { pt3dadd( -100.062, 71.2093, -85.847, 0.28 ) }
    dend_43 { pt3dadd( -99.765, 73.7871, -88.6055, 0.55 ) }
    dend_43 { pt3dadd( -99.5366, 75.5092, -90.6245, 0.55 ) }
    dend_43 { pt3dadd( -99.1896, 77.7998, -93.2193, 0.28 ) }
    dend_43 { pt3dadd( -99.0284, 78.8069, -94.3687, 0.28 ) }
    dend_43 { pt3dadd( -98.8475, 79.9869, -95.6732, 0.55 ) }
    dend_43 { pt3dadd( -98.5525, 83.0522, -98.5412, 0.28 ) }
    dend_43 { pt3dadd( -98.519, 84.7378, -100.029, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 13/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -20.5114, -42.1422, -9.94201, 0.83 ) }
    dend_42 { pt3dadd( -21.8917, -41.9489, -12.3919, 0.83 ) }
    dend_42 { pt3dadd( -23.931, -41.4706, -15.6487, 0.55 ) }
    dend_42 { pt3dadd( -24.3676, -41.3308, -16.2085, 0.55 ) }
    dend_42 { pt3dadd( -24.854, -41.1871, -16.8127, 0.55 ) }
    dend_42 { pt3dadd( -26.1521, -40.8271, -18.2591, 0.55 ) }
    dend_42 { pt3dadd( -28.4659, -40.2693, -20.7805, 0.28 ) }
    dend_42 { pt3dadd( -29.4002, -40.0839, -22.0074, 0.55 ) }
    dend_42 { pt3dadd( -30.8456, -39.9541, -23.9481, 0.28 ) }
    dend_42 { pt3dadd( -32.0005, -39.9849, -25.7605, 0.55 ) }
    dend_42 { pt3dadd( -33.0564, -40.1389, -27.5191, 0.55 ) }
    dend_42 { pt3dadd( -34.6373, -40.6204, -30.0474, 0.28 ) }
    dend_42 { pt3dadd( -37.8372, -41.9467, -35.0178, 0.83 ) }
    dend_42 { pt3dadd( -38.6776, -42.3717, -36.331, 0.83 ) }
    dend_42 { pt3dadd( -40.6634, -43.5129, -39.4584, 0.28 ) }
    dend_42 { pt3dadd( -41.5048, -43.9789, -40.6458, 0.83 ) }
    dend_42 { pt3dadd( -43.7881, -45.2198, -43.6118, 0.28 ) }
    dend_42 { pt3dadd( -44.4155, -45.5348, -44.3062, 0.55 ) }
    dend_42 { pt3dadd( -46.3766, -46.4208, -46.0445, 0.28 ) }
    dend_42 { pt3dadd( -47.1118, -46.7377, -46.7277, 0.83 ) }
    dend_42 { pt3dadd( -48.6329, -47.3781, -48.0845, 0.28 ) }
    dend_42 { pt3dadd( -50.4715, -48.125, -50.1036, 0.55 ) }
    dend_42 { pt3dadd( -51.9418, -48.6922, -51.9172, 0.28 ) }
    dend_42 { pt3dadd( -52.615, -48.9922, -53.0445, 0.83 ) }
    dend_42 { pt3dadd( -54.0967, -49.8556, -56.0606, 0.28 ) }
    dend_42 { pt3dadd( -54.5443, -50.1824, -57.1341, 0.55 ) }
    dend_42 { pt3dadd( -55.8219, -51.424, -60.938, 0.28 ) }
    dend_42 { pt3dadd( -56.0379, -51.6944, -61.7128, 0.55 ) }
    dend_42 { pt3dadd( -57.5927, -54.2393, -68.7212, 0.28 ) }
    dend_42 { pt3dadd( -57.9082, -54.8801, -70.4129, 0.28 ) }
    dend_42 { pt3dadd( -58.1168, -55.4205, -71.6445, 0.55 ) }
    dend_42 { pt3dadd( -58.6767, -57.1279, -75.2153, 0.28 ) }
    dend_42 { pt3dadd( -58.9541, -58.0066, -76.7631, 0.28 ) }
    dend_42 { pt3dadd( -59.4006, -59.2424, -78.7929, 0.28 ) }
    dend_42 { pt3dadd( -59.64, -59.6459, -79.4034, 0.55 ) }
    dend_42 { pt3dadd( -60.8735, -61.0077, -81.6946, 0.28 ) }
    dend_42 { pt3dadd( -61.6062, -61.6631, -82.7882, 0.55 ) }
    dend_42 { pt3dadd( -62.8449, -62.462, -84.0888, 0.28 ) }
    dend_42 { pt3dadd( -63.5986, -62.8241, -84.7119, 0.55 ) }
    dend_42 { pt3dadd( -66.4405, -63.813, -86.628, 0.28 ) }
    dend_42 { pt3dadd( -67.8418, -64.1795, -87.5725, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 54/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.82369, -33.5593, -1.62696, 0.55 ) }
    dend_38 { pt3dadd( 0.632602, -36.131, -0.506797, 0.55 ) }
    dend_38 { pt3dadd( 0.505088, -37.2334, -0.213633, 0.83 ) }
    dend_38 { pt3dadd( 0.353106, -38.6303, 0.0493693, 0.28 ) }
    dend_38 { pt3dadd( 0.260479, -39.4805, 0.179237, 0.55 ) }
    dend_38 { pt3dadd( 0.155987, -40.5538, 0.315425, 0.55 ) }
    dend_38 { pt3dadd( 0.033049, -41.8353, 0.475412, 0.55 ) }
    dend_38 { pt3dadd( -0.136356, -43.3811, 0.541539, 0.55 ) }
    dend_38 { pt3dadd( -0.290642, -44.9555, 0.666345, 0.55 ) }
    dend_38 { pt3dadd( -0.374106, -45.8318, 0.734377, 0.28 ) }
    dend_38 { pt3dadd( -0.441452, -46.5023, 0.742437, 0.55 ) }
    dend_38 { pt3dadd( -0.55935, -47.5034, 0.654398, 0.28 ) }
    dend_38 { pt3dadd( -0.626031, -48.3655, 0.516509, 0.55 ) }
    dend_38 { pt3dadd( -0.680476, -49.8899, 0.269533, 0.55 ) }
    dend_38 { pt3dadd( -0.729532, -51.6105, -0.110987, 0.55 ) }
    dend_38 { pt3dadd( -0.684745, -54.0967, -0.617691, 0.55 ) }
    dend_38 { pt3dadd( -0.587354, -56.3958, -1.11349, 0.55 ) }
    dend_38 { pt3dadd( -0.354279, -59.1069, -1.67673, 0.28 ) }
    dend_38 { pt3dadd( -0.137653, -60.7346, -1.97335, 0.83 ) }
    dend_38 { pt3dadd( 0.481702, -64.0077, -2.40005, 0.28 ) }
    dend_38 { pt3dadd( 1.04102, -66.2961, -2.5459, 0.83 ) }
    dend_38 { pt3dadd( 1.47256, -67.8085, -2.47948, 0.28 ) }
    dend_38 { pt3dadd( 1.82759, -69.2413, -2.3459, 0.55 ) }
    dend_38 { pt3dadd( 2.10155, -70.8157, -2.20248, 0.28 ) }
    dend_38 { pt3dadd( 2.26749, -72.2927, -2.11702, 0.55 ) }
    dend_38 { pt3dadd( 2.37718, -73.6141, -2.02086, 0.28 ) }
    dend_38 { pt3dadd( 2.41039, -74.7548, -1.98774, 0.55 ) }
    dend_38 { pt3dadd( 2.43388, -78.5064, -1.92372, 0.28 ) }
    dend_38 { pt3dadd( 2.39262, -79.5877, -1.96303, 0.83 ) }
    dend_38 { pt3dadd( 2.28302, -81.5181, -2.06075, 0.83 ) }
    dend_38 { pt3dadd( 2.17582, -83.4435, -2.18317, 0.28 ) }
    dend_38 { pt3dadd( 2.15575, -84.1957, -2.21456, 0.55 ) }
    dend_38 { pt3dadd( 2.16795, -85.6994, -2.28373, 0.28 ) }
    dend_38 { pt3dadd( 2.19212, -86.4894, -2.31896, 0.55 ) }
    dend_38 { pt3dadd( 2.24612, -87.8547, -2.29517, 0.28 ) }
    dend_38 { pt3dadd( 2.24229, -88.5284, -2.22239, 0.55 ) }
    dend_38 { pt3dadd( 2.1403, -89.9946, -1.95349, 0.28 ) }
    dend_38 { pt3dadd( 2.05002, -90.8397, -1.71908, 0.83 ) }
    dend_38 { pt3dadd( 1.91896, -92.1989, -1.13409, 0.28 ) }
    dend_38 { pt3dadd( 1.83008, -94.1339, 0.0135578, 0.55 ) }
    dend_38 { pt3dadd( 1.79373, -95.2812, 0.788664, 0.28 ) }
    dend_38 { pt3dadd( 1.77637, -95.6912, 1.05637, 0.55 ) }
    dend_38 { pt3dadd( 1.72648, -96.5076, 1.57081, 0.55 ) }
    dend_38 { pt3dadd( 1.48994, -99.4219, 3.25167, 0.28 ) }
    dend_38 { pt3dadd( 1.39788, -101.105, 4.22437, 0.28 ) }
    dend_38 { pt3dadd( 1.36715, -101.546, 4.44847, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_38 { pt3dadd( 1.23217, -103.818, 5.63774, 0.28 ) }
    dend_38 { pt3dadd( 1.15064, -104.787, 6.10931, 0.55 ) }
    dend_38 { pt3dadd( 0.964585, -106.379, 6.78812, 0.28 ) }
    dend_38 { pt3dadd( 0.533627, -109.011, 7.70766, 0.28 ) }
    dend_38 { pt3dadd( 0.307339, -110.485, 8.17249, 1.11 ) }
    dend_38 { pt3dadd( -0.030345, -112.957, 8.99824, 0.28 ) }
    dend_38 { pt3dadd( -0.170251, -114.197, 9.43233, 0.55 ) }
    dend_38 { pt3dadd( -0.272789, -115.198, 9.72301, 0.28 ) }
    dend_38 { pt3dadd( -0.351219, -115.822, 9.83513, 0.55 ) }
    dend_38 { pt3dadd( -0.765825, -118.107, 10.0082, 0.28 ) }
    dend_38 { pt3dadd( -0.961127, -119.153, 10.0641, 0.55 ) }
    dend_38 { pt3dadd( -1.19858, -120.51, 10.1531, 0.28 ) }
    dend_38 { pt3dadd( -1.41051, -121.762, 10.2995, 0.28 ) }
    dend_38 { pt3dadd( -1.6894, -123.289, 10.492, 0.83 ) }
    dend_38 { pt3dadd( -2.06229, -125.44, 10.7685, 0.83 ) }
    dend_38 { pt3dadd( -2.5527, -128.591, 11.1694, 0.28 ) }
    dend_38 { pt3dadd( -2.69094, -129.879, 11.4077, 0.55 ) }
    dend_38 { pt3dadd( -2.79334, -131.673, 11.8026, 0.28 ) }
    dend_38 { pt3dadd( -2.80368, -132.718, 12.0826, 0.55 ) }
    dend_38 { pt3dadd( -2.66676, -135.707, 12.8933, 0.28 ) }
    dend_38 { pt3dadd( -2.49531, -137.706, 13.37, 0.83 ) }
    dend_38 { pt3dadd( -2.16191, -140.455, 13.9143, 0.28 ) }
    dend_38 { pt3dadd( -1.88865, -142.431, 14.2365, 0.28 ) }
    dend_38 { pt3dadd( -1.74358, -143.389, 14.368, 0.55 ) }
    dend_38 { pt3dadd( -1.20091, -147.244, 14.7586, 0.28 ) }
    dend_38 { pt3dadd( -0.942212, -149.785, 14.8248, 0.28 ) }
    dend_38 { pt3dadd( -0.845011, -151.287, 14.7616, 0.55 ) }
    dend_38 { pt3dadd( -0.783625, -153.335, 14.5636, 0.28 ) }
    dend_38 { pt3dadd( -0.778311, -154.388, 14.4477, 0.55 ) }
    dend_38 { pt3dadd( -0.785129, -156.772, 14.2103, 0.28 ) }
    dend_38 { pt3dadd( -0.812976, -158.431, 14.0561, 0.55 ) }
    dend_38 { pt3dadd( -0.94629, -163.122, 13.6009, 0.28 ) }
    dend_38 { pt3dadd( -1.00862, -164.606, 13.458, 0.55 ) }
    dend_38 { pt3dadd( -1.05544, -166.974, 13.1975, 0.28 ) }
    dend_38 { pt3dadd( -1.02787, -168.636, 13.0551, 0.55 ) }
    dend_38 { pt3dadd( -1.5328, -176.223, 14.2339, 0.55 ) }
    dend_38 { pt3dadd( -3.10312, -183.685, 15.3507, 0.55 ) }
    dend_38 { pt3dadd( -3.28189, -191.325, 16.2036, 0.55 ) }
    dend_38 { pt3dadd( -4.92703, -198.839, 16.5704, 0.55 ) }
    dend_38 { pt3dadd( -6.27893, -206.395, 17.1265, 0.55 ) }
    dend_38 { pt3dadd( -7.80167, -213.937, 16.8551, 0.55 ) }
    dend_38 { pt3dadd( -8.92834, -221.459, 18.0549, 0.55 ) }
    dend_38 { pt3dadd( -8.74874, -228.842, 20.2954, 0.55 ) }
    dend_38 { pt3dadd( -8.36349, -235.949, 23.3502, 0.55 ) }
    dend_38 { pt3dadd( -7.03891, -243.377, 24.9545, 0.55 ) }
    dend_38 { pt3dadd( -5.65368, -250.486, 27.7014, 0.55 ) }
    dend_38 { pt3dadd( -5.24124, -257.736, 30.3541, 0.55 ) }
    dend_38 { pt3dadd( -3.93502, -264.449, 34.0738, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 48/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.82369, -33.5593, -1.62696, 0.55 ) }
    dend_37 { pt3dadd( 1.15856, -34.1542, -2.51518, 0.55 ) }
    dend_37 { pt3dadd( 1.43359, -34.6811, -3.23179, 0.55 ) }
    dend_37 { pt3dadd( 2.17449, -36.0296, -4.88445, 0.55 ) }
    dend_37 { pt3dadd( 2.71707, -36.9313, -5.92442, 0.28 ) }
    dend_37 { pt3dadd( 3.01418, -37.3835, -6.44266, 0.55 ) }
    dend_37 { pt3dadd( 3.64124, -38.2819, -7.45105, 0.28 ) }
    dend_37 { pt3dadd( 3.9912, -38.8275, -8.00677, 0.28 ) }
    dend_37 { pt3dadd( 4.44586, -39.4325, -8.60872, 0.55 ) }
    dend_37 { pt3dadd( 4.77728, -39.8191, -8.93929, 0.55 ) }
    dend_37 { pt3dadd( 5.48897, -40.5567, -9.60336, 0.28 ) }
    dend_37 { pt3dadd( 5.73877, -40.8089, -9.84134, 0.55 ) }
    dend_37 { pt3dadd( 6.96052, -41.9446, -11.0175, 0.55 ) }
    dend_37 { pt3dadd( 7.60906, -42.5559, -11.7396, 0.55 ) }
    dend_37 { pt3dadd( 7.93429, -42.8868, -12.1607, 0.55 ) }
    dend_37 { pt3dadd( 8.54578, -43.5364, -13.0514, 0.55 ) }
    dend_37 { pt3dadd( 9.2901, -44.2979, -14.2241, 0.55 ) }
    dend_37 { pt3dadd( 10.0307, -45.038, -15.4222, 0.55 ) }
    dend_37 { pt3dadd( 10.6332, -45.6275, -16.4073, 0.28 ) }
    dend_37 { pt3dadd( 11.0517, -46.086, -17.1384, 0.55 ) }
    dend_37 { pt3dadd( 11.689, -46.7964, -18.3321, 0.55 ) }
    dend_37 { pt3dadd( 12.3675, -47.5814, -19.6544, 0.55 ) }
    dend_37 { pt3dadd( 12.8669, -48.1961, -20.6559, 0.28 ) }
    dend_37 { pt3dadd( 12.9978, -48.3618, -20.9094, 0.55 ) }
    dend_37 { pt3dadd( 13.5038, -48.9231, -21.8303, 0.28 ) }
    dend_37 { pt3dadd( 14.1718, -49.6107, -22.9833, 0.28 ) }
    dend_37 { pt3dadd( 14.5499, -50.0024, -23.6466, 0.55 ) }
    dend_37 { pt3dadd( 14.8521, -50.3295, -24.2413, 0.55 ) }
    dend_37 { pt3dadd( 15.123, -50.5952, -24.8178, 0.28 ) }
    dend_37 { pt3dadd( 15.6213, -51.1308, -26.0833, 0.55 ) }
    dend_37 { pt3dadd( 15.8991, -51.4408, -26.8279, 0.28 ) }
    dend_37 { pt3dadd( 16.1436, -51.7552, -27.6468, 0.55 ) }
    dend_37 { pt3dadd( 16.4836, -52.2599, -28.9648, 0.28 ) }
    dend_37 { pt3dadd( 16.6912, -52.7162, -30.1853, 0.55 ) }
    dend_37 { pt3dadd( 16.903, -53.3811, -31.8482, 0.28 ) }
    dend_37 { pt3dadd( 16.9698, -53.6679, -32.5389, 0.55 ) }
    dend_37 { pt3dadd( 17.1328, -54.5096, -34.7514, 0.28 ) }
    dend_37 { pt3dadd( 17.1824, -54.8822, -35.7697, 0.55 ) }
    dend_37 { pt3dadd( 17.1989, -56.085, -39.2752, 0.28 ) }
    dend_37 { pt3dadd( 17.1761, -56.2563, -39.7826, 0.28 ) }
    dend_37 { pt3dadd( 17.1484, -56.4352, -40.3214, 0.55 ) }
    dend_37 { pt3dadd( 17.0216, -57.1804, -42.5554, 0.28 ) }
    dend_37 { pt3dadd( 16.9912, -57.3296, -42.9991, 0.55 ) }
    dend_37 { pt3dadd( 16.8353, -57.9687, -45.0486, 0.28 ) }
    dend_37 { pt3dadd( 16.7526, -58.2483, -45.9219, 0.55 ) }
    dend_37 { pt3dadd( 16.5989, -58.6512, -47.2532, 0.28 ) }
    dend_37 { pt3dadd( 16.4977, -58.9032, -48.0617, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 95/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 36.5346, -60.1124, 9.27416, 0.28 ) }
    dend_35 { pt3dadd( 36.3617, -63.4363, 8.69216, 0.28 ) }
    dend_35 { pt3dadd( 36.2916, -64.7711, 8.51802, 0.55 ) }
    dend_35 { pt3dadd( 36.342, -68.1513, 8.3682, 0.28 ) }
    dend_35 { pt3dadd( 36.4483, -69.5885, 8.30051, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_35 { pt3dadd( 36.6121, -72.4622, 8.32613, 0.28 ) }
    dend_35 { pt3dadd( 36.691, -73.847, 8.33847, 0.28 ) }
    dend_35 { pt3dadd( 36.7715, -75.734, 8.3118, 0.28 ) }
    dend_35 { pt3dadd( 36.9983, -79.0332, 8.50085, 0.28 ) }
    dend_35 { pt3dadd( 37.269, -81.7182, 8.93647, 0.28 ) }
    dend_35 { pt3dadd( 37.7663, -84.804, 9.53304, 0.55 ) }
    dend_35 { pt3dadd( 39.372, -92.9737, 10.4361, 0.55 ) }
    dend_35 { pt3dadd( 39.9874, -101.121, 12.2954, 0.55 ) }
    dend_35 { pt3dadd( 40.8248, -109.166, 14.526, 0.55 ) }
    dend_35 { pt3dadd( 42.0291, -116.567, 18.4463, 0.55 ) }
    dend_35 { pt3dadd( 43.739, -124.017, 22.0653, 0.55 ) }
    dend_35 { pt3dadd( 44.5273, -131.37, 26.1869, 0.55 ) }
    dend_35 { pt3dadd( 44.7348, -139.399, 28.6176, 0.55 ) }
    dend_35 { pt3dadd( 44.1393, -147.025, 32.1723, 0.55 ) }
    dend_35 { pt3dadd( 42.8103, -154.422, 36.0461, 0.55 ) }
    dend_35 { pt3dadd( 43.1947, -161.774, 40.2255, 0.55 ) }
    dend_35 { pt3dadd( 43.7132, -169.015, 44.5992, 0.55 ) }
    dend_35 { pt3dadd( 43.6166, -175.925, 49.5587, 0.55 ) }
    dend_35 { pt3dadd( 41.8877, -181.897, 55.4704, 0.55 ) }
    dend_35 { pt3dadd( 39.5212, -186.817, 62.1787, 0.55 ) }
    dend_35 { pt3dadd( 36.1786, -192.4, 67.8059, 0.55 ) }
    dend_35 { pt3dadd( 32.3098, -196.198, 74.6176, 0.55 ) }
    dend_35 { pt3dadd( 29.634, -200.803, 81.4552, 0.55 ) }
    dend_35 { pt3dadd( 27.9587, -205.35, 88.647, 0.55 ) }
    dend_35 { pt3dadd( 25.4424, -209.273, 95.9962, 0.55 ) }
    dend_35 { pt3dadd( 24.1584, -213.099, 103.713, 0.55 ) }
    dend_35 { pt3dadd( 23.4867, -217.123, 111.398, 0.55 ) }
    dend_35 { pt3dadd( 22.8162, -219.751, 119.721, 0.55 ) }
    dend_35 { pt3dadd( 21.0625, -221.073, 128.221, 0.55 ) }
    dend_35 { pt3dadd( 20.0415, -220.932, 136.945, 0.55 ) }
    dend_35 { pt3dadd( 20.3961, -221.059, 145.723, 0.55 ) }
    dend_35 { pt3dadd( 20.4958, -220.228, 154.46, 0.55 ) }
    dend_35 { pt3dadd( 20.6743, -220.386, 163.243, 0.55 ) }
    dend_35 { pt3dadd( 22.2154, -221.614, 171.801, 0.55 ) }
    dend_35 { pt3dadd( 23.5578, -222.485, 180.439, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 36.5346, -60.1124, 9.27416, 0.28 ) }
    dend_34 { pt3dadd( 38.9301, -60.4542, 9.44914, 0.28 ) }
    dend_34 { pt3dadd( 40.3599, -60.7419, 9.52721, 0.55 ) }
    dend_34 { pt3dadd( 42.3615, -61.2348, 9.55683, 0.28 ) }
    dend_34 { pt3dadd( 43.7092, -61.6714, 9.50581, 0.55 ) }
    dend_34 { pt3dadd( 44.2128, -61.8552, 9.46032, 0.55 ) }
    dend_34 { pt3dadd( 46.3263, -62.6938, 9.21575, 0.28 ) }
    dend_34 { pt3dadd( 47.2109, -63.1193, 9.05491, 0.28 ) }
    dend_34 { pt3dadd( 47.9885, -63.5543, 8.88563, 0.55 ) }
    dend_34 { pt3dadd( 49.366, -64.446, 8.51411, 0.28 ) }
    dend_34 { pt3dadd( 51.5465, -65.8644, 7.86407, 0.28 ) }
    dend_34 { pt3dadd( 51.9818, -66.1457, 7.71824, 0.55 ) }
    dend_34 { pt3dadd( 59.7498, -69.6571, 6.01617, 0.55 ) }
    dend_34 { pt3dadd( 67.1484, -73.2612, 3.23155, 0.55 ) }
    dend_34 { pt3dadd( 73.5987, -78.249, 0.448725, 0.55 ) }
    dend_34 { pt3dadd( 81.3977, -81.4208, -1.76652, 0.55 ) }
    dend_34 { pt3dadd( 88.965, -84.6747, -4.57331, 0.55 ) }
    dend_34 { pt3dadd( 96.1096, -87.9151, -8.33831, 0.55 ) }
    dend_34 { pt3dadd( 103.32, -92.0447, -10.7902, 0.55 ) }
    dend_34 { pt3dadd( 110.401, -96.9239, -11.4554, 0.55 ) }
    dend_34 { pt3dadd( 116.821, -102.412, -12.9934, 0.55 ) }
    dend_34 { pt3dadd( 124.016, -107.182, -12.9872, 0.55 ) }
    dend_34 { pt3dadd( 130.637, -112.482, -14.3971, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 58/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -18.1564, 65.9545, -11.9326, 0.55 ) }
    dend_9 { pt3dadd( -18.1127, 68.8456, -12.5019, 0.55 ) }
    dend_9 { pt3dadd( -18.0682, 72.2909, -13.245, 0.55 ) }
    dend_9 { pt3dadd( -18.0851, 75.5015, -14.2864, 0.55 ) }
    dend_9 { pt3dadd( -18.089, 75.7095, -14.3624, 0.55 ) }
    dend_9 { pt3dadd( -18.1578, 77.9596, -15.3469, 0.83 ) }
    dend_9 { pt3dadd( -18.2591, 80.499, -16.4966, 0.55 ) }
    dend_9 { pt3dadd( -18.3441, 81.8438, -17.2843, 0.83 ) }
    dend_9 { pt3dadd( -18.4733, 84.7241, -19.2005, 0.55 ) }
    dend_9 { pt3dadd( -18.5082, 85.5877, -19.7956, 0.83 ) }
    dend_9 { pt3dadd( -18.6346, 88.1786, -21.4779, 0.55 ) }
    dend_9 { pt3dadd( -18.6614, 89.8192, -22.4422, 0.83 ) }
    dend_9 { pt3dadd( -18.6167, 93.3891, -24.193, 0.55 ) }
    dend_9 { pt3dadd( -18.5347, 96.1611, -25.2963, 0.55 ) }
    dend_9 { pt3dadd( -18.4656, 98.5146, -25.9875, 0.55 ) }
    dend_9 { pt3dadd( -18.4445, 100.023, -26.4145, 0.83 ) }
    dend_9 { pt3dadd( -18.4647, 103.802, -27.2282, 0.28 ) }
    dend_9 { pt3dadd( -18.5144, 105.27, -27.5901, 0.55 ) }
    dend_9 { pt3dadd( -18.692, 107.708, -28.2538, 0.28 ) }
    dend_9 { pt3dadd( -18.8397, 109.245, -28.8451, 0.55 ) }
    dend_9 { pt3dadd( -19.2279, 112.344, -30.366, 0.28 ) }
    dend_9 { pt3dadd( -19.4911, 114.033, -31.3481, 0.55 ) }
    dend_9 { pt3dadd( -20.2835, 117.463, -33.702, 0.28 ) }
    dend_9 { pt3dadd( -20.7676, 119.427, -35.1238, 0.55 ) }
    dend_9 { pt3dadd( -21.3641, 121.656, -36.779, 0.28 ) }
    dend_9 { pt3dadd( -21.769, 123.018, -37.76, 0.55 ) }
    dend_9 { pt3dadd( -22.0418, 123.865, -38.2984, 0.28 ) }
    dend_9 { pt3dadd( -22.6228, 125.7, -39.4366, 0.55 ) }
    dend_9 { pt3dadd( -23.3898, 128.189, -40.6108, 0.28 ) }
    dend_9 { pt3dadd( -23.7265, 129.352, -41.0757, 0.55 ) }
    dend_9 { pt3dadd( -23.9661, 130.309, -41.3947, 0.28 ) }
    dend_9 { pt3dadd( -24.1904, 131.493, -41.7582, 0.83 ) }
    dend_9 { pt3dadd( -24.8016, 135.164, -42.4534, 0.28 ) }
    dend_9 { pt3dadd( -25.008, 136.508, -42.5416, 0.55 ) }
    dend_9 { pt3dadd( -25.1974, 137.801, -42.5403, 0.28 ) }
    dend_9 { pt3dadd( -25.4945, 140.207, -42.4949, 0.55 ) }
    dend_9 { pt3dadd( -25.6291, 141.146, -42.4245, 0.83 ) }
    dend_9 { pt3dadd( -26.0771, 144.388, -42.3701, 0.28 ) }
    dend_9 { pt3dadd( -26.381, 146.467, -42.365, 0.55 ) }
    dend_9 { pt3dadd( -26.5998, 148.168, -42.4516, 0.28 ) }
    dend_9 { pt3dadd( -26.804, 150.252, -42.6173, 0.55 ) }
    dend_9 { pt3dadd( -27.0386, 154.529, -43.0206, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_9 { pt3dadd( -27.0417, 159.007, -43.3877, 0.55 ) }
    dend_9 { pt3dadd( -26.8307, 163.202, -43.7135, 0.28 ) }
    dend_9 { pt3dadd( -26.583, 165.984, -43.8141, 0.55 ) }
    dend_9 { pt3dadd( -26.3893, 167.886, -43.7639, 0.55 ) }
    dend_9 { pt3dadd( -26.1535, 169.778, -43.6647, 0.55 ) }
    dend_9 { pt3dadd( -25.7076, 172.696, -43.4548, 0.28 ) }
    dend_9 { pt3dadd( -25.5072, 173.927, -43.3706, 0.55 ) }
    dend_9 { pt3dadd( -25.1347, 175.804, -43.3771, 0.28 ) }
    dend_9 { pt3dadd( -24.7825, 177.628, -43.5597, 0.55 ) }
    dend_9 { pt3dadd( -24.3042, 180.461, -44.0351, 0.28 ) }
    dend_9 { pt3dadd( -23.8988, 183.126, -44.7613, 0.55 ) }
    dend_9 { pt3dadd( -23.1878, 188.216, -46.4535, 0.28 ) }
    dend_9 { pt3dadd( -23.0651, 189.137, -46.766, 0.83 ) }
    dend_9 { pt3dadd( -22.5852, 193.062, -48.1079, 0.28 ) }
    dend_9 { pt3dadd( -22.3341, 195.141, -48.8498, 0.83 ) }
    dend_9 { pt3dadd( -21.8082, 199.983, -50.5089, 0.28 ) }
    dend_9 { pt3dadd( -21.5872, 202.316, -51.238, 0.55 ) }
    dend_9 { pt3dadd( -21.4468, 204.389, -51.8291, 0.28 ) }
    dend_9 { pt3dadd( -21.3646, 205.592, -52.1696, 0.55 ) }
    dend_9 { pt3dadd( -21.2388, 207.351, -52.5861, 0.28 ) }
    dend_9 { pt3dadd( -21.05, 209.416, -53.0512, 0.55 ) }
    dend_9 { pt3dadd( -20.6611, 214.209, -53.9425, 0.55 ) }
    dend_9 { pt3dadd( -20.4256, 217.297, -54.5359, 0.28 ) }
    dend_9 { pt3dadd( -20.2433, 219.444, -54.9701, 0.55 ) }
    dend_9 { pt3dadd( -20.0174, 221.608, -55.3552, 0.28 ) }
    dend_9 { pt3dadd( -19.7206, 224.179, -55.7123, 0.55 ) }
    dend_9 { pt3dadd( -19.2672, 227.466, -56.1728, 0.55 ) }
    dend_9 { pt3dadd( -19.0031, 228.944, -56.355, 0.28 ) }
    dend_9 { pt3dadd( -18.6486, 230.729, -56.5137, 0.55 ) }
    dend_9 { pt3dadd( -18.2012, 232.976, -56.7154, 0.28 ) }
    dend_9 { pt3dadd( -17.7729, 235.069, -56.9071, 0.55 ) }
    dend_9 { pt3dadd( -17.3249, 237.223, -57.1359, 0.28 ) }
    dend_9 { pt3dadd( -16.5472, 241.119, -57.5565, 0.55 ) }
    dend_9 { pt3dadd( -15.3713, 247.821, -58.2389, 0.28 ) }
    dend_9 { pt3dadd( -15.0865, 249.627, -58.4402, 0.55 ) }
    dend_9 { pt3dadd( -14.6478, 252.453, -58.7867, 0.28 ) }
    dend_9 { pt3dadd( -14.3003, 254.769, -59.0708, 0.55 ) }
    dend_9 { pt3dadd( -13.8715, 257.824, -59.3332, 0.28 ) }
    dend_9 { pt3dadd( -13.6737, 259.471, -59.4739, 0.55 ) }
    dend_9 { pt3dadd( -13.3175, 261.836, -59.6743, 0.28 ) }
    dend_9 { pt3dadd( -12.9966, 263.772, -59.7926, 0.55 ) }
    dend_9 { pt3dadd( -12.731, 265.284, -59.9056, 0.55 ) }
    dend_9 { pt3dadd( -11.7894, 269.594, -60.1107, 0.28 ) }
    dend_9 { pt3dadd( -11.2035, 271.9, -60.326, 0.55 ) }
    dend_9 { pt3dadd( -10.3016, 275.321, -60.6372, 0.55 ) }
    dend_9 { pt3dadd( -9.65143, 277.924, -60.9579, 0.55 ) }
    dend_9 { pt3dadd( -8.46023, 282.686, -61.6671, 0.28 ) }
    dend_9 { pt3dadd( -7.35201, 286.86, -62.3718, 0.55 ) }
    dend_9 { pt3dadd( -6.13801, 291.224, -63.1592, 0.28 ) }
    dend_9 { pt3dadd( -5.16855, 294.619, -63.702, 0.55 ) }
    dend_9 { pt3dadd( -4.28485, 297.915, -64.1956, 0.28 ) }
    dend_9 { pt3dadd( -3.88024, 299.398, -64.4102, 0.55 ) }
    dend_9 { pt3dadd( -3.04959, 302.551, -64.6543, 0.28 ) }
    dend_9 { pt3dadd( -2.53598, 304.822, -64.6267, 0.55 ) }
    dend_9 { pt3dadd( -2.28852, 305.737, -64.4798, 0.28 ) }
    dend_9 { pt3dadd( -1.61556, 307.746, -64.1397, 0.55 ) }
    dend_9 { pt3dadd( -0.863148, 309.717, -63.7675, 0.28 ) }
    dend_9 { pt3dadd( -0.372501, 311.027, -63.4258, 0.55 ) }
    dend_9 { pt3dadd( 0.824106, 314.206, -62.2399, 0.55 ) }
    dend_9 { pt3dadd( 1.81212, 316.88, -61.1752, 0.55 ) }
    dend_9 { pt3dadd( 2.76022, 319.493, -60.1087, 0.28 ) }
    dend_9 { pt3dadd( 3.50061, 321.619, -59.2503, 0.55 ) }
    dend_9 { pt3dadd( 5.11337, 326.829, -57.2169, 0.28 ) }
    dend_9 { pt3dadd( 5.69282, 328.922, -56.483, 0.55 ) }
    dend_9 { pt3dadd( 6.42593, 331.502, -55.8947, 0.28 ) }
    dend_9 { pt3dadd( 6.96845, 333.615, -55.6173, 0.55 ) }
    dend_9 { pt3dadd( 7.61068, 335.962, -55.4548, 0.28 ) }
    dend_9 { pt3dadd( 8.1383, 337.715, -55.5075, 0.28 ) }
    dend_9 { pt3dadd( 8.91547, 340.07, -55.8606, 0.55 ) }
    dend_9 { pt3dadd( 10.657, 345.072, -56.6937, 0.28 ) }
    dend_9 { pt3dadd( 11.6863, 347.924, -57.0538, 0.55 ) }
    dend_9 { pt3dadd( 12.6898, 350.659, -57.3426, 0.28 ) }
    dend_9 { pt3dadd( 13.6439, 353.283, -57.615, 0.55 ) }
    dend_9 { pt3dadd( 14.3295, 355.342, -57.7697, 0.28 ) }
    dend_9 { pt3dadd( 15.0708, 357.946, -57.8635, 0.55 ) }
    dend_9 { pt3dadd( 15.7389, 361.227, -57.8157, 0.28 ) }
    dend_9 { pt3dadd( 15.8309, 361.832, -57.8174, 0.55 ) }
    dend_9 { pt3dadd( 16.3478, 367.352, -57.9071, 0.28 ) }
    dend_9 { pt3dadd( 16.5377, 371.926, -57.968, 0.28 ) }
    dend_9 { pt3dadd( 16.5202, 374.339, -58.0218, 0.55 ) }
    dend_9 { pt3dadd( 16.331, 377.88, -58.1565, 0.28 ) }
    dend_9 { pt3dadd( 16.2209, 379.183, -58.2026, 0.55 ) }
    dend_9 { pt3dadd( 15.9388, 381.887, -58.3002, 0.28 ) }
    dend_9 { pt3dadd( 15.6838, 383.515, -58.2596, 0.55 ) }
    dend_9 { pt3dadd( 15.2918, 385.796, -58.1608, 0.28 ) }
    dend_9 { pt3dadd( 14.9379, 388.06, -57.961, 0.55 ) }
    dend_9 { pt3dadd( 14.5851, 390.865, -57.6722, 0.28 ) }
    dend_9 { pt3dadd( 14.2689, 393.67, -57.3182, 0.55 ) }
    dend_9 { pt3dadd( 13.8989, 396.886, -56.8457, 0.28 ) }
    dend_9 { pt3dadd( 13.668, 398.98, -56.4748, 0.55 ) }
    dend_9 { pt3dadd( 13.3501, 401.409, -55.911, 0.28 ) }
    dend_9 { pt3dadd( 13.0203, 403.432, -55.4867, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 92/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -18.1564, 65.9545, -11.9326, 0.28 ) }
    dend_6 { pt3dadd( -19.9463, 69.0536, -11.8323, 0.28 ) }
    dend_6 { pt3dadd( -21.6893, 72.0713, -11.7346, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 95/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -21.6893, 72.0713, -11.7346, 0.28 ) }
    dend_8 { pt3dadd( -21.8781, 74.1565, -12.2499, 0.28 ) }
    dend_8 { pt3dadd( -22.0023, 75.3229, -12.5007, 0.83 ) }
    dend_8 { pt3dadd( -22.1876, 77.2439, -12.9046, 0.28 ) }
    dend_8 { pt3dadd( -22.2895, 78.2262, -13.0965, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_8 { pt3dadd( -22.5262, 80.2631, -13.4727, 0.28 ) }
    dend_8 { pt3dadd( -22.7064, 81.6837, -13.5987, 0.83 ) }
    dend_8 { pt3dadd( -22.9226, 83.2963, -13.6888, 0.28 ) }
    dend_8 { pt3dadd( -23.066, 84.2115, -13.6543, 0.83 ) }
    dend_8 { pt3dadd( -23.3001, 85.6316, -13.4526, 0.83 ) }
    dend_8 { pt3dadd( -23.5518, 87.2504, -13.1381, 0.83 ) }
    dend_8 { pt3dadd( -24.0405, 90.2053, -12.1493, 0.28 ) }
    dend_8 { pt3dadd( -24.1016, 90.6241, -11.988, 0.83 ) }
    dend_8 { pt3dadd( -24.2774, 91.9408, -11.4808, 0.28 ) }
    dend_8 { pt3dadd( -24.4607, 93.2605, -10.9792, 0.55 ) }
    dend_8 { pt3dadd( -24.7674, 95.4904, -10.1415, 0.55 ) }
    dend_8 { pt3dadd( -25.2456, 98.7563, -8.94922, 0.28 ) }
    dend_8 { pt3dadd( -25.4609, 100.253, -8.51449, 0.55 ) }
    dend_8 { pt3dadd( -25.6494, 101.685, -8.36417, 0.28 ) }
    dend_8 { pt3dadd( -25.8411, 103.198, -8.52626, 0.28 ) }
    dend_8 { pt3dadd( -25.9724, 104.178, -8.83098, 0.55 ) }
    dend_8 { pt3dadd( -26.203, 105.618, -9.5309, 0.28 ) }
    dend_8 { pt3dadd( -26.4356, 106.906, -10.3067, 0.28 ) }
    dend_8 { pt3dadd( -27.6457, 112.038, -13.3182, 0.28 ) }
    dend_8 { pt3dadd( -27.8872, 112.912, -13.8233, 0.55 ) }
    dend_8 { pt3dadd( -28.3679, 114.486, -14.7445, 0.28 ) }
    dend_8 { pt3dadd( -28.7431, 115.695, -15.4163, 0.83 ) }
    dend_8 { pt3dadd( -29.3791, 117.702, -16.3797, 0.28 ) }
    dend_8 { pt3dadd( -29.9364, 119.558, -17.1435, 0.55 ) }
    dend_8 { pt3dadd( -30.5307, 121.771, -17.8602, 0.55 ) }
    dend_8 { pt3dadd( -31.1327, 124.454, -18.8144, 0.28 ) }
    dend_8 { pt3dadd( -31.4541, 126.169, -19.4399, 0.28 ) }
    dend_8 { pt3dadd( -31.8606, 129.297, -20.6097, 0.55 ) }
    dend_8 { pt3dadd( -32.143, 132.34, -21.7294, 0.28 ) }
    dend_8 { pt3dadd( -32.2011, 133.682, -22.233, 0.55 ) }
    dend_8 { pt3dadd( -32.2169, 135.359, -22.8171, 0.28 ) }
    dend_8 { pt3dadd( -32.1806, 137.352, -23.5161, 0.55 ) }
    dend_8 { pt3dadd( -32.0831, 140.795, -24.7526, 0.28 ) }
    dend_8 { pt3dadd( -32.0296, 141.795, -25.0976, 0.55 ) }
    dend_8 { pt3dadd( -31.9221, 143.526, -25.6214, 0.28 ) }
    dend_8 { pt3dadd( -31.8184, 145.102, -26.0726, 0.83 ) }
    dend_8 { pt3dadd( -31.5276, 148.412, -26.9407, 0.28 ) }
    dend_8 { pt3dadd( -31.323, 150.108, -27.4517, 0.55 ) }
    dend_8 { pt3dadd( -31.1204, 151.926, -27.9597, 0.28 ) }
    dend_8 { pt3dadd( -30.9886, 153.152, -28.3051, 0.55 ) }
    dend_8 { pt3dadd( -30.8306, 154.746, -28.7185, 0.55 ) }
    dend_8 { pt3dadd( -30.5535, 157.649, -29.4582, 0.55 ) }
    dend_8 { pt3dadd( -30.3585, 161.053, -30.1754, 0.28 ) }
    dend_8 { pt3dadd( -30.2698, 162.611, -30.5463, 0.55 ) }
    dend_8 { pt3dadd( -30.2405, 163.627, -30.79, 0.28 ) }
    dend_8 { pt3dadd( -30.1876, 165.215, -31.2598, 0.83 ) }
    dend_8 { pt3dadd( -30.1033, 166.872, -31.7541, 0.28 ) }
    dend_8 { pt3dadd( -30.0512, 168.573, -32.2724, 0.55 ) }
    dend_8 { pt3dadd( -30.0101, 170.578, -32.8422, 0.55 ) }
    dend_8 { pt3dadd( -29.9398, 172.361, -33.5296, 0.55 ) }
    dend_8 { pt3dadd( -29.8612, 175.267, -34.7548, 0.28 ) }
    dend_8 { pt3dadd( -29.8564, 176.431, -35.262, 0.55 ) }
    dend_8 { pt3dadd( -29.8807, 178.831, -36.278, 0.28 ) }
    dend_8 { pt3dadd( -29.952, 180.332, -36.8528, 0.55 ) }
    dend_8 { pt3dadd( -30.3387, 183.55, -37.9552, 0.28 ) }
    dend_8 { pt3dadd( -30.5331, 184.789, -38.3871, 0.55 ) }
    dend_8 { pt3dadd( -31.0105, 186.88, -39.0485, 0.55 ) }
    dend_8 { pt3dadd( -31.2573, 187.815, -39.4096, 0.55 ) }
    dend_8 { pt3dadd( -31.7399, 189.55, -40.1268, 0.55 ) }
    dend_8 { pt3dadd( -32.2918, 191.371, -40.9313, 0.28 ) }
    dend_8 { pt3dadd( -32.7148, 192.651, -41.5026, 0.55 ) }
    dend_8 { pt3dadd( -33.1871, 194.081, -42.235, 0.28 ) }
    dend_8 { pt3dadd( -34.0858, 196.607, -43.6886, 0.55 ) }
    dend_8 { pt3dadd( -34.5869, 198.032, -44.5834, 0.28 ) }
    dend_8 { pt3dadd( -34.7988, 198.703, -45.0135, 0.55 ) }
    dend_8 { pt3dadd( -35.2371, 200.056, -45.699, 0.28 ) }
    dend_8 { pt3dadd( -35.4086, 200.646, -45.9485, 0.55 ) }
    dend_8 { pt3dadd( -35.6944, 201.92, -46.4156, 0.28 ) }
    dend_8 { pt3dadd( -36.1271, 204.297, -47.0838, 0.55 ) }
    dend_8 { pt3dadd( -36.3402, 206.316, -47.6702, 0.28 ) }
    dend_8 { pt3dadd( -36.4989, 208.908, -48.356, 0.55 ) }
    dend_8 { pt3dadd( -36.5705, 211.058, -48.8174, 0.55 ) }
    dend_8 { pt3dadd( -36.5604, 213.317, -49.1123, 0.28 ) }
    dend_8 { pt3dadd( -36.5317, 214.114, -49.1507, 0.55 ) }
    dend_8 { pt3dadd( -36.4131, 217.741, -49.0141, 0.28 ) }
    dend_8 { pt3dadd( -36.362, 219.026, -49.0044, 0.28 ) }
    dend_8 { pt3dadd( -36.3171, 220.632, -48.9665, 0.55 ) }
    dend_8 { pt3dadd( -36.3404, 224.173, -48.5607, 0.28 ) }
    dend_8 { pt3dadd( -36.3551, 225.557, -48.3806, 0.83 ) }
    dend_8 { pt3dadd( -36.3697, 227.849, -48.0542, 0.55 ) }
    dend_8 { pt3dadd( -36.4078, 231.841, -47.3885, 0.55 ) }
    dend_8 { pt3dadd( -36.3995, 235.083, -46.9241, 0.28 ) }
    dend_8 { pt3dadd( -36.3676, 237.254, -46.5955, 0.55 ) }
    dend_8 { pt3dadd( -36.3102, 239.736, -46.2179, 0.55 ) }
    dend_8 { pt3dadd( -36.2639, 241.179, -45.8818, 0.28 ) }
    dend_8 { pt3dadd( -36.2124, 242.385, -45.4749, 0.55 ) }
    dend_8 { pt3dadd( -36.1699, 243.559, -44.9113, 0.55 ) }
    dend_8 { pt3dadd( -36.1181, 244.989, -44.2582, 0.28 ) }
    dend_8 { pt3dadd( -36.1356, 246.476, -43.6359, 0.55 ) }
    dend_8 { pt3dadd( -36.2676, 249.101, -42.516, 0.28 ) }
    dend_8 { pt3dadd( -36.3499, 250.452, -41.9641, 0.55 ) }
    dend_8 { pt3dadd( -36.4892, 252.232, -41.228, 0.28 ) }
    dend_8 { pt3dadd( -36.6014, 253.68, -40.5768, 0.55 ) }
    dend_8 { pt3dadd( -36.864, 257.018, -39.1082, 0.28 ) }
    dend_8 { pt3dadd( -36.9481, 258.162, -38.6091, 0.55 ) }
    dend_8 { pt3dadd( -37.1552, 261.208, -37.3662, 0.28 ) }
    dend_8 { pt3dadd( -37.2816, 263.109, -36.6177, 0.55 ) }
    dend_8 { pt3dadd( -37.5305, 267.201, -34.9364, 0.28 ) }
    dend_8 { pt3dadd( -37.6075, 268.684, -34.287, 0.28 ) }
    dend_8 { pt3dadd( -37.6646, 270.197, -33.6486, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_8 { pt3dadd( -37.7119, 272.194, -32.9254, 0.28 ) }
    dend_8 { pt3dadd( -37.7304, 273.354, -32.575, 0.55 ) }
    dend_8 { pt3dadd( -37.7347, 276.035, -31.9174, 0.28 ) }
    dend_8 { pt3dadd( -37.7536, 277.224, -31.6923, 0.55 ) }
    dend_8 { pt3dadd( -37.7773, 279.255, -31.2272, 0.28 ) }
    dend_8 { pt3dadd( -37.7582, 280.915, -30.855, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 6/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -21.6893, 72.0713, -11.7346, 0.28 ) }
    dend_7 { pt3dadd( -25.0812, 74.8112, -9.38213, 0.28 ) }
    dend_7 { pt3dadd( -27.3838, 76.6712, -7.78521, 0.28 ) }
    dend_7 { pt3dadd( -29.5008, 78.3812, -6.31702, 0.55 ) }
    dend_7 { pt3dadd( -30.5276, 79.2107, -5.60486, 0.55 ) }
    dend_7 { pt3dadd( -33.8084, 81.8609, -3.32948, 0.28 ) }
    dend_7 { pt3dadd( -36.2516, 83.8344, -1.63505, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_24, dend_23, dend_16, dend_13, dend_0, dend_39, dend_30, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_10, dend_1, dend_47, dend_40, dend_32, dend_31, dend_28, dend_27, dend_22, dend_21, dend_19, dend_18, dend_12, dend_11, dend_3, dend_2, dend_49, dend_48, dend_44, dend_41, dend_36, dend_33, dend_5, dend_4, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_35, dend_34, dend_9, dend_6, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_23 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_25 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_17 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_15 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_14 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_21 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_12 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_49 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_48 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_44 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_33 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_45 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_42 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_38 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_35 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_34 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_8 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_39 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_16 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_30 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_40 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_32 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_36 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_20 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_41 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_10 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_28 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_7 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_27 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 15
    dend_13 nseg = 3
    dend_26 nseg = 3
    dend_25 nseg = 5
    dend_17 nseg = 3
    dend_15 nseg = 21
    dend_14 nseg = 15
    dend_31 nseg = 3
    dend_22 nseg = 3
    dend_21 nseg = 7
    dend_18 nseg = 3
    dend_12 nseg = 9
    dend_11 nseg = 5
    dend_2 nseg = 11
    dend_49 nseg = 15
    dend_48 nseg = 9
    dend_44 nseg = 3
    dend_33 nseg = 3
    dend_4 nseg = 9
    dend_46 nseg = 9
    dend_45 nseg = 5
    dend_43 nseg = 9
    dend_42 nseg = 5
    dend_38 nseg = 13
    dend_37 nseg = 3
    dend_35 nseg = 13
    dend_34 nseg = 5
    dend_9 nseg = 17
    dend_8 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_NBC_dc5e34b933_0_0


