// Cell: cACint209_L5_BTC_41f7db5b85_0_0
/*
{
  "id" : "cACint209_L5_BTC_41f7db5b85_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.79879, 12.4163, -5.65686, 1.10185", "-0.780248, 11.3268, -5.18349, 1.63297", "-0.761706, 10.2373, -4.71013, 2.68141", "-0.743165, 9.14783, -4.23676, 3.59289", "-0.724623, 8.05833, -3.7634, 4.52551", "-0.706081, 6.96884, -3.29004, 5.77296", "-0.687539, 5.87934, -2.81667, 7.05591", "-0.668997, 4.78984, -2.34331, 7.8981", "-0.650455, 3.70034, -1.86994, 8.60513", "-0.631913, 2.61085, -1.39658, 9.05081", "-0.613372, 1.52135, -0.923215, 9.49138", "-0.59483, 0.431853, -0.449851, 9.92405", "-0.576288, -0.657644, 0.0235132, 10.0896", "-0.557746, -1.74714, 0.496877, 9.7354", "-0.539204, -2.83664, 0.970241, 9.3741", "-0.520662, -3.92614, 1.44361, 8.98289", "-0.50212, -5.01563, 1.91697, 8.2325", "-0.483579, -6.10513, 2.39033, 7.41598", "-0.465037, -7.19463, 2.8637, 6.43666", "-0.446495, -8.28412, 3.33706, 5.40957", "-0.427953, -9.37362, 3.81043, 3.13747" ]
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "0.562971, 11.5755, -13.8565, 1.39", "1.90489, 13.3548, -6.24915, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999961371666685
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.72297, 1.55305, 2.93347, 1.11", "8.79034, 4.9517, 4.99347, 1.11", "11.8281, 7.60927, 6.53694, 1.11", "13.2197, 8.9466, 7.24533, 1.11", "15.5085, 11.1282, 8.63062, 1.66", "16.9283, 12.5248, 9.52942, 0.83", "18.7059, 14.217, 10.6461, 0.83", "19.9331, 15.3449, 11.4306, 1.11", "21.2817, 16.6164, 12.2969, 0.28", "24.7128, 19.7394, 14.7394, 0.83", "26.9965, 21.8731, 16.4368, 0.83", "29.163, 23.9105, 18.0979, 0.83", "30.8581, 25.3099, 19.4339, 0.83", "32.6944, 26.62, 20.875, 0.83", "35.6392, 28.6138, 23.1703, 0.83", "37.0165, 29.5511, 24.2287, 0.83", "39.7053, 31.2282, 26.5025, 0.83", "43.3097, 33.4362, 29.7928, 0.83", "44.9065, 34.2894, 31.2756, 0.83", "52.2373, 38.8264, 34.7291, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999961371666685,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.09703, -6.62645, 2.32347, 2.77", "-1.97085, -10.8533, 2.94624, 2.77", "-2.3451, -12.6635, 3.21297, 2.49", "-2.78363, -14.7848, 3.52551, 2.49", "-3.28136, -17.1924, 3.88024, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999961371666685
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.427953, -9.37362, 3.81043, 1.00267", "-0.172709, -24.3714, 3.81043, 1.00267", "0.0825348, -39.3693, 3.81043, 1.00267" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "1.90489, 13.3548, -6.24915, 0.55", "-4.81182, 17.3192, -15.6349, 0.55", "-5.39122, 17.6612, -16.4445, 2.49", "-10.0285, 20.3983, -22.9245, 2.22", "-12.9918, 22.1473, -27.0653, 2.22", "-17.5161, 24.8178, -33.3875, 2.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.90489, 13.3548, -6.24915, 1.39", "3.36527, 15.9314, -15.3286, 1.39", "4.78056, 18.5965, -23.2546, 1.11", "6.52362, 22.0654, -32.4525, 1.11", "7.4065, 23.8199, -36.8115, 1.11", "8.26367, 25.4115, -40.964, 1.11", "8.71156, 26.2432, -43.1338, 1.11", "9.30198, 27.3838, -45.6684, 1.11", "10.8038, 30.3376, -51.595, 1.11", "11.2553, 31.1415, -53.1378, 1.11", "13.7417, 35.6202, -63.3475, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "52.2373, 38.8264, 34.7291, 0.83", "47.5105, 33.994, 27.6416, 0.83", "42.7187, 28.3174, 21.3326, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "52.2373, 38.8264, 34.7291, 0.83", "40.8004, 32.145, 39.5335, 0.83", "30.9841, 23.8912, 45.1934, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.28136, -17.1924, 3.88024, 1.11", "-0.35322, -18.8169, 4.89265, 1.11", "1.56427, -19.8568, 5.55641, 1.11", "4.19261, -21.2401, 6.45697, 1.11", "6.85176, -22.5376, 7.54777, 1.11", "10.4741, -24.2745, 9.13833, 1.11", "15.7169, -26.7325, 11.4619, 1.11", "16.9944, -27.3123, 12.136, 1.11", "19.8105, -28.516, 13.6468, 1.11", "24.5876, -30.5257, 16.2909, 1.11", "28.3018, -32.0818, 18.4045, 1.11", "33.2911, -34.256, 21.5289, 1.11", "37.0533, -36.0322, 24.1478, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.28136, -17.1924, 3.88024, 2.49", "-6.50129, -20.4978, 9.67022, 2.49", "-7.59767, -21.6233, 11.6417, 2.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "0.0825348, -39.3693, 3.81043, 0.28", "0.337779, -54.3671, 3.81043, 0.28", "0.593023, -69.3649, 3.81043, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-17.5161, 24.8178, -33.3875, 1.11", "-18.6171, 25.0927, -38.0352, 1.11", "-19.64, 25.3481, -42.3528, 1.11", "-20.1561, 25.477, -44.5316, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-17.5161, 24.8178, -33.3875, 1.94", "-14.3497, 25.8354, -27.7757, 1.94" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "13.7417, 35.6202, -63.3475, 0.55", "14.4375, 36.4863, -65.1528, 0.55", "15.1616, 37.5627, -66.8484, 1.39", "15.8193, 38.5942, -68.1782, 0.55", "19.9869, 45.6659, -75.8899, 0.55", "20.9489, 47.4998, -77.5094, 0.55", "22.5308, 50.938, -79.754, 0.55", "23.0673, 52.278, -80.6408, 0.83", "23.6752, 53.9586, -81.673, 0.55", "24.1531, 55.402, -82.5434, 0.55", "25.202, 58.3746, -84.1454, 0.55", "26.7768, 62.1757, -86.7697, 0.83", "30.2316, 69.1223, -92.2363, 0.55", "30.9327, 70.3407, -93.4398, 0.55", "33.0537, 73.4027, -97.1125, 0.55", "34.0872, 74.5644, -98.7605, 0.55", "36.1244, 76.422, -101.644, 0.55", "37.8231, 77.7598, -103.721, 0.83", "43.1686, 81.7517, -108.963, 0.83", "45.082, 83.1303, -110.766, 0.28", "48.8929, 85.8612, -114.075, 0.28", "51.6522, 87.9091, -116.513, 0.28", "53.6064, 89.3761, -118.155, 0.55", "54.4745, 90.0169, -118.761, 0.28", "58.3245, 92.8258, -120.437, 0.28", "60.2956, 94.1943, -121.76, 0.28", "62.0183, 95.2654, -123.217, 0.28", "62.8886, 95.7545, -124.016, 0.28", "66.6788, 97.6988, -127.795, 0.28", "67.76, 98.211, -128.879, 0.28", "77.2623, 102.411, -139.566, 0.28", "80.6159, 103.697, -143.426, 0.55", "82.373, 104.332, -145.36, 0.55", "85.4359, 105.467, -148.615, 0.28", "86.886, 106.04, -150.117, 0.28", "92.8907, 108.551, -155.471, 0.28", "95.9056, 109.919, -157.686, 0.28", "99.4752, 111.685, -160.409, 0.28", "108.954, 116.772, -167.446, 0.28", "111.546, 118.19, -169.252, 0.28", "113.92, 119.549, -170.871, 0.28", "118.052, 122.07, -173.461, 0.55", "119.42, 122.943, -174.401, 0.28", "121.069, 123.992, -175.553, 0.28", "127.94, 128.243, -179.72, 0.28", "129.344, 129.041, -180.565, 0.28", "132.975, 130.945, -182.754, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "13.7417, 35.6202, -63.3475, 1.11", "18.9282, 39.8786, -61.6025, 1.11", "20.256, 41.5695, -61.8327, 1.11", "21.7822, 43.5038, -62.2144, 0.55", "22.778, 44.5648, -62.8785, 0.55", "23.5068, 45.2753, -63.4504, 0.55", "24.3265, 46.0382, -64.0992, 0.55", "25.7445, 47.445, -65.4703, 0.55", "27.1113, 48.784, -66.8355, 0.55", "30.4543, 51.8311, -70.0732, 0.55", "30.8835, 52.1741, -70.5018, 0.83", "32.0005, 52.9788, -71.6611, 0.83", "33.0182, 53.6385, -72.7652, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "37.0533, -36.0322, 24.1478, 0.55", "38.627, -38.1236, 25.7848, 0.55", "40.3758, -40.0294, 27.2962, 0.55", "41.738, -41.5138, 28.4734, 0.55", "44.2058, -44.2031, 30.6061, 0.28", "45.6455, -45.772, 31.8503, 0.28", "46.9956, -47.2433, 33.0171, 0.28", "48.3351, -48.4113, 34.3327, 0.28", "53.3802, -53.6812, 39.3835, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "37.0533, -36.0322, 24.1478, 0.83", "38.4117, -36.6906, 24.216, 0.83", "40.8678, -37.7838, 24.3896, 0.83", "43.1454, -38.6236, 24.5595, 0.83", "44.7721, -39.1888, 24.6951, 0.83", "45.824, -39.5643, 24.799, 0.83", "50.2614, -41.1308, 25.2923, 0.83", "52.6385, -42.0305, 25.6241, 0.83", "55.1054, -43.0157, 25.9475, 0.83", "56.7643, -43.7155, 26.1375, 0.83", "59.6292, -45.1708, 26.1387, 0.83", "62.8758, -47.0301, 25.9018, 0.83", "66.1398, -49.0137, 25.5785, 0.83", "69.7011, -51.1966, 25.2335, 0.83", "74.0672, -53.9017, 24.6942, 0.83", "81.4368, -58.25, 23.651, 0.83", "83.5349, -59.4254, 23.3431, 0.83", "87.0552, -61.3466, 22.8725, 0.83", "91.9041, -63.8453, 22.3945, 0.83", "97.8286, -66.7029, 22.1584, 0.55", "100.158, -67.7312, 22.1758, 0.55", "103.221, -68.9537, 22.4128, 0.55", "106.387, -70.1738, 22.6377, 0.55", "110.025, -71.59, 23.0537, 0.55", "113.923, -73.0728, 23.8651, 0.55", "115.225, -73.4612, 24.3297, 0.55", "116.019, -73.688, 24.6708, 0.28", "120.254, -74.768, 26.6947, 0.28", "124.425, -75.6942, 28.8501, 0.28", "127.492, -76.3212, 30.6005, 0.28", "132.467, -77.3566, 33.7259, 0.28", "135.478, -77.9505, 35.6745, 0.28", "136.647, -78.157, 36.4402, 0.28", "145.615, -82.9019, 35.9205, 0.28", "155.085, -86.643, 35.3333, 0.28", "163.705, -91.7371, 36.7939, 0.28", "171.741, -96.6983, 40.3688, 0.28", "179.685, -102.715, 41.784, 0.28", "187.13, -109.443, 42.0143, 0.28", "195.823, -114.637, 41.5293, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-7.59767, -21.6233, 11.6417, 0.83", "-8.96206, -23.1678, 8.87861, 0.83", "-9.9436, -24.1661, 7.20098, 0.83", "-13.8019, -27.6656, 1.33462, 0.83", "-16.8938, -30.6821, -3.48356, 0.83", "-17.9534, -31.773, -5.14575, 0.83", "-20.4464, -34.4759, -8.91349, 0.83", "-21.1888, -35.2279, -9.85608, 0.83", "-22.7035, -36.6969, -11.4462, 0.83", "-24.7086, -38.4919, -12.9899, 0.83", "-25.0783, -38.8256, -13.2853, 0.83", "-26.7994, -40.1471, -14.2909, 0.83", "-28.9456, -41.6542, -15.2235, 0.83", "-31.2797, -43.2502, -16.1375, 0.83", "-33.2158, -44.4786, -16.7561, 0.83", "-36.9504, -46.5403, -17.7561, 0.83", "-39.4069, -47.8212, -18.4337, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.59767, -21.6233, 11.6417, 2.22", "-7.44799, -23.3893, 11.6205, 2.22", "-7.27608, -25.4176, 11.5961, 2.22", "-7.18804, -26.4563, 11.5837, 2.22", "-7.11667, -27.2984, 11.5736, 2.22", "-6.80552, -30.9695, 11.5295, 2.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-20.1561, 25.477, -44.5316, 0.83", "-20.9812, 25.9485, -45.5661, 0.83", "-24.1156, 28.319, -51.2958, 0.83", "-26.6921, 30.4603, -56.4562, 0.83", "-27.7925, 31.418, -58.9428, 0.83", "-28.1453, 31.7183, -59.7381, 0.83", "-31.5172, 34.6041, -67.9644, 0.83", "-36.6448, 39.0661, -81.4099, 0.83", "-37.5889, 39.9149, -84.0074, 0.83", "-41.3686, 43.3067, -93.3574, 0.55", "-42.3935, 44.1796, -95.5787, 0.83", "-47.7728, 48.6939, -105.942, 0.55", "-48.5062, 49.2651, -107.055, 0.55", "-50.1769, 50.5505, -109.042, 0.55", "-56.2139, 55.4209, -116.064, 0.55", "-58.1674, 57.1113, -118.092, 0.83", "-65.1765, 64.0649, -125.264, 0.55", "-68.4243, 67.7099, -128.415, 0.55", "-69.5793, 69.2285, -129.802, 0.55", "-73.5823, 75.521, -135.687, 0.55", "-75.8449, 79.7805, -139.707, 0.55", "-77.7046, 83.6691, -143.17, 0.83", "-78.7858, 86.246, -145.118, 0.55", "-81.1103, 92.4188, -149.682, 0.55", "-82.2432, 95.5995, -152.232, 0.55", "-83.8548, 100.285, -155.942, 0.55", "-84.5266, 102.246, -157.726, 0.55", "-85.3716, 104.402, -159.788, 0.83", "-86.2714, 106.63, -161.731, 0.55", "-89.5693, 114.586, -167.922, 0.55", "-90.5266, 116.945, -169.864, 0.55", "-92.0213, 120.573, -172.959, 0.55", "-93.3194, 123.49, -175.395, 0.55", "-94.5497, 126.219, -177.612, 0.83", "-94.7573, 126.683, -178.009, 0.55", "-98.0709, 133.475, -183.746, 0.55", "-99.8249, 136.898, -186.965, 0.55", "-101.843, 140.802, -190.793, 0.83", "-102.968, 142.959, -193.03, 0.55", "-106.904, 150.304, -201.052, 0.55", "-107.895, 152.108, -203.011, 0.55", "-109.958, 155.462, -206.573, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-20.1561, 25.477, -44.5316, 1.11", "-19.9525, 25.1985, -43.5184, 1.11", "-19.7202, 24.8808, -42.3625, 1.11", "-17.2393, 21.4877, -30.0178, 1.11", "-16.9053, 21.0309, -28.3559, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-14.3497, 25.8354, -27.7757, 1.11", "-16.1833, 27.3175, -26.6571, 1.11", "-17.1794, 28.1572, -26.0192, 1.11", "-19.1822, 29.9988, -24.9345, 1.11", "-20.9529, 31.7205, -24.1182, 1.11", "-24.1436, 34.8503, -23.0657, 1.11", "-26.9974, 37.6894, -21.8966, 1.11", "-30.1198, 40.765, -20.4037, 1.11", "-32.8066, 43.4059, -18.8009, 1.11", "-35.3539, 45.9054, -16.9575, 0.83", "-38.4594, 48.8237, -14.5152, 0.83", "-43.6329, 53.3825, -9.93785, 0.83", "-46.3796, 55.6427, -7.39548, 0.83", "-50.2599, 58.6513, -3.66086, 0.83", "-52.1304, 59.9922, -1.8659, 0.83", "-54.3762, 61.5121, 0.151084, 0.83", "-56.229, 62.7141, 1.61216, 0.83", "-59.5017, 64.8189, 3.72597, 0.83", "-62.9464, 67.1102, 5.78825, 0.83", "-65.5252, 68.8089, 7.19036, 0.55", "-67.6397, 70.2337, 8.32814, 0.55", "-69.3107, 71.3604, 9.25375, 0.55", "-75.4577, 75.7156, 13.0478, 0.55", "-77.1394, 76.9454, 14.1486, 0.83", "-79.7315, 78.9802, 15.8197, 0.83", "-82.1839, 81.045, 17.4562, 0.83", "-84.365, 83.0066, 18.8122, 0.83", "-87.2775, 85.7141, 20.5699, 0.55", "-89.3852, 87.6877, 21.6958, 0.55", "-92.8313, 91.0441, 23.7308, 0.55", "-93.4094, 91.6615, 24.1, 0.55", "-96.0675, 94.6114, 25.8895, 0.55", "-98.4528, 97.2394, 27.4623, 0.55", "-99.1493, 97.9539, 27.8632, 0.55", "-100.226, 99.0981, 28.5863, 0.55", "-101.12, 100.142, 29.344, 0.55", "-103.025, 102.403, 31.0733, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-14.3497, 25.8354, -27.7757, 1.66", "-14.1219, 30.1931, -26.1926, 1.66", "-14.0001, 32.523, -25.3462, 1.66", "-13.7843, 36.6506, -23.8466, 1.39", "-13.5783, 40.5896, -22.4156, 1.39" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-39.4069, -47.8212, -18.4337, 0.55", "-44.2185, -50.6201, -16.9845, 0.55", "-48.5973, -53.1672, -15.6658, 0.55", "-50.0428, -54.008, -15.2304, 0.28", "-52.0073, -55.1507, -14.6388, 0.28", "-56.4962, -57.7619, -13.2868, 0.28", "-58.6989, -59.0432, -12.6234, 0.28", "-68.3363, -63.2389, -10.1813, 0.28", "-78.1565, -66.6637, -7.19605, 0.28", "-87.23, -70.6472, -2.92715, 0.28", "-97.0242, -74.2952, -0.156129, 0.28", "-107.121, -76.1107, 3.42931, 0.28", "-117.783, -76.3075, 5.6555, 0.28", "-127.954, -76.0065, 9.54932, 0.28", "-138.181, -74.003, 12.6906, 0.28", "-147.847, -70.2949, 15.9231, 0.28", "-156.955, -65.6341, 19.4233, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-39.4069, -47.8212, -18.4337, 0.55", "-40.9404, -48.0642, -19.9964, 0.55", "-44.03, -48.7372, -22.8617, 0.55", "-45.6958, -49.1224, -24.171, 0.55", "-49.299, -50.1353, -26.5487, 0.55", "-53.1135, -51.2076, -29.0658, 0.55", "-53.5483, -51.3298, -29.3526, 0.55", "-56.8796, -52.3948, -31.4522, 0.55", "-60.8491, -53.7905, -33.8791, 0.55", "-65.7712, -55.5903, -36.4369, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.80552, -30.9695, 11.5295, 0.83", "-4.26985, -33.8744, 10.5658, 0.83", "-3.60486, -34.6055, 10.3093, 0.83", "-1.98525, -36.219, 9.68372, 0.83", "-1.30726, -36.9407, 9.43282, 0.83", "3.13616, -41.4507, 7.68728, 0.83", "4.6963, -43.0342, 7.07439, 0.83", "6.07231, -44.3525, 6.41945, 0.83", "9.26177, -47.2683, 4.85171, 0.83", "11.3948, -49.094, 3.80513, 0.83", "14.3864, -51.7087, 2.36364, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.80552, -30.9695, 11.5295, 1.94", "-8.57576, -38.2752, 16.5543, 1.94", "-8.91778, -40.318, 17.9269, 1.94", "-9.04593, -41.7871, 18.9421, 1.94", "-9.12911, -43.9672, 20.3361, 1.94", "-9.18871, -45.5295, 21.3351, 1.94", "-9.24036, -46.8831, 22.2007, 1.94", "-8.56216, -49.8763, 22.8505, 1.94", "-8.2302, -51.0814, 23.2707, 1.94", "-7.85154, -52.377, 24.0418, 1.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-109.958, 155.462, -206.573, 0.55", "-110.82, 160.646, -212.552, 0.55", "-111.124, 162.476, -214.662, 0.83", "-112.237, 169.172, -222.384, 0.28" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-109.958, 155.462, -206.573, 0.28", "-114.826, 158.98, -207.993, 0.28", "-119.55, 162.394, -209.37, 0.55", "-127.886, 168.42, -211.8, 0.55", "-133.491, 172.471, -213.434, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-16.9053, 21.0309, -28.3559, 0.83", "-11.3218, 23.0817, -35.0302, 0.83", "-1.86352, 26.8857, -47.4836, 0.83", "0.394862, 27.6872, -50.794, 0.83", "2.39091, 28.3956, -53.7198, 0.83", "7.51637, 30.2146, -61.2328, 0.83", "9.53403, 30.9306, -64.1902, 0.83", "15.5735, 32.8492, -73.871, 0.83", "21.5154, 34.8693, -82.0794, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-16.9053, 21.0309, -28.3559, 0.83", "-20.0989, 25.907, -1.29962, 0.83", "-20.4429, 26.6802, 4.02335, 0.83", "-20.4395, 27.2253, 9.61692, 0.83", "-19.5784, 26.7067, 12.8222, 0.83", "-20.6597, 27.5248, 10.6054, 0.83", "-22.03, 28.4798, 8.15866, 0.83", "-24.68, 30.1327, 4.33763, 0.83", "-25.9616, 30.7915, 2.58327, 0.83", "-30.5672, 32.9242, -3.19868, 0.83", "-33.4031, 33.9251, -6.4359, 0.83", "-36.903, 34.74, -10.1052, 0.83", "-39.2226, 35.0697, -12.1681, 0.83", "-41.783, 35.2059, -13.9749, 0.83", "-46.2577, 35.1296, -16.2881, 0.83", "-49.7929, 34.8785, -17.426, 0.83", "-52.22, 34.7611, -17.9976, 0.83", "-55.1265, 34.7483, -18.5144, 0.83", "-59.7459, 34.9824, -19.5029, 0.83", "-64.2548, 35.4995, -20.7743, 0.83", "-66.6382, 35.9176, -21.2385, 0.83", "-72.661, 37.1122, -22.4197, 0.83", "-76.9029, 38.0916, -23.3497, 0.83", "-82.7782, 39.7029, -25.0508, 0.55", "-87.5483, 41.3796, -26.857, 0.55", "-97.998, 46.3104, -31.9127, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-103.025, 102.403, 31.0733, 0.55", "-104.745, 102.566, 32.515, 0.55", "-108.436, 102.915, 35.6093, 0.55", "-112.28, 103.279, 38.8322, 0.55", "-119.925, 103.286, 45.3817, 0.55", "-127.811, 103.887, 51.6077, 0.55", "-134.5, 105.695, 58.8827, 0.55", "-140.804, 106.103, 66.7172, 0.55", "-147.176, 105.129, 74.447, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-103.025, 102.403, 31.0733, 0.55", "-103.437, 104.237, 31.7844, 0.55", "-103.632, 105.293, 32.0222, 0.55", "-104.13, 108.739, 32.4641, 0.55", "-104.513, 111.664, 33.0551, 0.55", "-104.827, 114.294, 33.6782, 0.55", "-105.086, 116.303, 34.1562, 0.55", "-105.428, 119.244, 34.826, 0.55", "-105.685, 121.434, 35.2069, 0.55", "-106.294, 125.832, 35.5132, 0.28", "-106.543, 127.446, 35.6816, 0.55", "-106.887, 129.345, 35.9214, 0.28", "-107.332, 131.356, 36.2351, 0.28", "-107.777, 133.167, 36.5847, 0.55", "-108.548, 135.963, 36.8299, 0.55", "-109.57, 139.656, 36.459, 0.55", "-109.683, 146.785, 38.1812, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-13.5783, 40.5896, -22.4156, 1.11", "-13.8029, 41.9655, -21.0732, 1.11", "-14.082, 44.4277, -18.4368, 1.11", "-14.3368, 47.2262, -15.2258, 1.11", "-14.4623, 48.8261, -13.4506, 0.83", "-14.7043, 55.882, -4.92732, 1.11", "-14.704, 57.3995, -3.09206, 1.11", "-14.4959, 59.8835, 0.391511, 1.11", "-14.1484, 62.7762, 4.88845, 1.11", "-14.0023, 63.829, 6.70993, 1.11", "-13.6159, 67.2407, 12.6094, 1.11", "-13.6043, 68.3658, 14.4915, 0.55", "-13.6163, 70.8675, 18.9838, 0.55", "-13.6517, 72.1666, 21.4245, 0.55", "-13.8543, 74.114, 25.0838, 0.83", "-13.9996, 75.1054, 26.9442, 0.83", "-14.3085, 77.5228, 31.0879, 0.83", "-14.3254, 78.1843, 32.1698, 0.83", "-14.1804, 80.2532, 35.1303, 0.83", "-13.9936, 81.4234, 36.629, 0.83", "-13.3701, 85.822, 41.6586, 0.83", "-12.9577, 88.7406, 44.6978, 0.83", "-12.6958, 90.4898, 46.2907, 0.83", "-12.2389, 93.7471, 48.9721, 0.83", "-11.8426, 96.3737, 50.9029, 0.83", "-11.5116, 98.6131, 52.3913, 0.83", "-11.3419, 101.319, 53.6223, 0.83", "-11.3945, 102.458, 54.044, 0.83", "-11.6684, 104.282, 54.7078, 0.83", "-10.2537, 109.666, 63.9784, 0.83", "-7.3852, 115.347, 72.6947, 0.83", "-3.94022, 120.929, 81.271, 0.83", "0.229391, 127.01, 89.115, 0.83", "5.92003, 133.07, 95.9525, 0.83", "12.4179, 140.382, 100.232, 0.83", "17.9687, 148.727, 103.675, 0.83", "23.1567, 157.498, 106.454, 0.83", "29.274, 165.472, 109.907, 0.83", "34.6794, 174.289, 112.04, 0.83", "41.5843, 182.129, 114.057, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-13.5783, 40.5896, -22.4156, 1.11", "-10.3411, 40.9806, -22.9753, 1.11", "-7.45535, 41.3144, -23.3134, 1.11", "-4.01902, 41.8127, -23.7601, 1.11", "-1.2234, 42.2709, -24.1426, 1.11", "2.14913, 42.8699, -24.7583, 1.11", "6.15957, 43.6927, -25.6011, 1.11", "9.78139, 44.5663, -26.5144, 1.11", "18.7392, 47.1714, -29.2659, 1.11", "22.6225, 48.6391, -30.6508, 0.83", "27.043, 50.7618, -32.5888, 0.83", "29.2857, 52.1137, -33.766, 0.83", "32.7668, 54.6963, -35.9517, 0.83", "35.0567, 56.8934, -37.7168, 0.83", "37.6288, 60.2521, -40.1637, 0.83", "39.545, 63.1885, -42.1052, 0.83", "40.8708, 65.2645, -43.3332, 0.83", "41.696, 66.4258, -44.0024, 0.83", "44.5332, 69.8305, -45.8271, 0.83", "46.7494, 71.9902, -47.0786, 0.83", "48.4193, 73.2867, -47.844, 0.83", "51.2202, 75.0536, -48.9416, 0.83", "53.6696, 76.4334, -49.8719, 0.83", "56.4677, 77.8723, -50.8024, 0.83", "58.13, 78.6987, -51.2576, 0.83", "60.4115, 79.9087, -51.8841, 0.83", "64.9396, 82.582, -53.1023, 0.83", "67.1521, 84.2344, -53.9434, 0.83", "69.0939, 85.9018, -54.8411, 0.83", "71.6297, 88.2951, -56.1548, 0.83", "74.2565, 90.9882, -57.5992, 0.83", "76.63, 93.5627, -58.9867, 0.83", "81.3516, 99.2054, -62.4878, 0.83", "82.3215, 100.454, -63.3736, 0.55", "83.8838, 102.676, -65.215, 0.55", "84.8058, 104.174, -66.5326, 0.55", "86.3479, 106.832, -68.6992, 0.55", "89.5254, 112.519, -72.7211, 0.55", "90.2689, 113.805, -73.449, 0.55", "92.253, 117.215, -75.152, 0.83", "94.9201, 121.573, -76.959, 0.55", "97.8058, 126.195, -78.3951, 0.55", "99.2933, 128.624, -78.825, 0.28", "100.914, 131.307, -78.9556, 0.28", "102.432, 133.95, -78.9903, 0.55", "104.639, 137.938, -78.8688, 0.28", "105.965, 140.5, -78.9662, 0.55", "107.074, 142.986, -79.388, 0.55", "108.019, 145.196, -79.7406, 0.28", "109.057, 147.721, -80.0674, 0.28", "109.962, 149.977, -80.3109, 0.28", "112.054, 155.107, -80.8903, 0.55", "114.676, 160.99, -81.6044, 0.28", "116.781, 165.474, -82.1575, 0.28", "118.871, 169.722, -82.6579, 0.28", "119.604, 171.18, -82.7952, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-156.955, -65.6341, 19.4233, 0.28", "-165.589, -67.078, 22.4151, 0.28", "-174.293, -68.2417, 25.3439, 0.28", "-182.749, -68.9385, 29.0618, 0.28", "-191.434, -70.5648, 31.7894, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-156.955, -65.6341, 19.4233, 0.28", "-165.1, -66.7355, 21.8414, 0.28", "-172.809, -68.2984, 25.2052, 0.28", "-180.515, -70.9884, 27.6587, 0.28", "-188.167, -74.3112, 29.2932, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "14.3864, -51.7087, 2.36364, 0.83", "17.4625, -52.9465, 2.95352, 0.83", "20.5282, -53.9865, 3.12859, 0.83", "23.3696, -54.9492, 3.19145, 0.83", "24.6907, -55.4342, 3.24019, 0.83", "29.3612, -57.2901, 3.46798, 0.83", "32.4797, -58.6112, 3.55607, 0.83", "37.9735, -60.9609, 3.55518, 0.83", "40.2552, -61.9057, 3.49139, 0.55", "42.8438, -63.014, 3.48802, 0.55", "43.985, -63.5382, 3.48174, 0.55", "47.0079, -65.1275, 3.56668, 0.55", "48.6049, -66.0003, 3.62828, 0.55", "52.9414, -68.4095, 4.25281, 0.55", "54.9916, -69.3408, 4.46116, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "14.3864, -51.7087, 2.36364, 0.83", "13.5595, -55.3173, 1.84736, 0.83", "13.1821, -56.759, 1.58248, 0.83", "12.8416, -58.2133, 1.35354, 0.83", "12.2086, -61.0958, 0.936772, 0.83", "11.8248, -62.9003, 0.684592, 0.83", "11.3479, -65.0664, 0.360374, 0.83", "11.0235, -66.3391, 0.22414, 0.83", "10.4368, -68.5715, -0.132439, 0.83", "10.2104, -69.4651, -0.311285, 0.83", "9.92797, -70.7006, -0.582258, 0.83", "9.70448, -71.819, -0.766595, 0.83", "9.468, -73.3028, -0.91385, 0.83", "8.91065, -75.4429, -0.839173, 0.83", "7.91769, -78.4833, -0.394734, 0.83", "7.22811, -80.3847, 0.0256079, 0.83", "6.36425, -82.7317, 0.684882, 0.83", "5.80913, -84.1844, 1.25244, 0.83", "3.55121, -90.0725, 4.01903, 0.83", "2.84121, -92.0396, 5.05009, 0.83", "2.31006, -93.4296, 5.79115, 0.83", "1.40403, -95.6138, 6.9488, 0.83", "0.0904252, -98.5376, 8.57938, 0.83", "-0.682833, -100.3, 9.51322, 0.83", "-1.76123, -102.974, 10.6856, 0.83", "-2.67378, -105.082, 11.6083, 0.83", "-4.41787, -108.669, 13.1551, 0.83", "-6.33048, -112.275, 14.535, 0.83", "-7.29708, -113.986, 15.0457, 0.83", "-8.60902, -115.938, 15.5701, 0.83", "-9.96368, -117.687, 15.9199, 0.83", "-11.9939, -120.266, 16.2148, 0.83", "-13.595, -122.0, 16.1808, 0.83", "-15.0777, -123.484, 16.0965, 0.83", "-17.3951, -125.611, 16.0767, 0.83", "-18.5846, -126.659, 16.07, 0.83", "-19.6722, -127.586, 16.0266, 0.83", "-23.1918, -130.827, 15.8667, 0.83", "-24.6248, -132.097, 15.81, 0.55", "-25.0259, -132.52, 15.7972, 0.55", "-26.475, -134.461, 15.6975, 0.55", "-27.0303, -135.22, 15.5669, 0.28", "-27.5821, -135.959, 15.3283, 0.28", "-28.4935, -137.323, 14.4657, 0.28", "-29.8818, -139.09, 13.1305, 0.28", "-30.3889, -139.743, 12.6434, 0.28", "-31.6616, -141.45, 11.4253, 0.28", "-36.1401, -149.626, 12.4806, 0.28", "-40.6925, -157.788, 11.202, 0.28", "-44.9377, -165.677, 8.09977, 0.28", "-50.6073, -172.581, 4.71054, 0.28", "-56.7642, -179.565, 2.64257, 0.28" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-7.85154, -52.377, 24.0418, 0.55", "-7.4753, -57.0082, 29.5052, 0.55", "-7.3569, -58.4655, 31.2245, 0.55", "-7.22557, -60.0821, 33.1315, 0.55", "-7.10731, -61.5378, 34.8488, 0.55", "-4.67595, -66.86, 43.1375, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.85154, -52.377, 24.0418, 1.66", "-8.2404, -53.4914, 24.2672, 1.66", "-8.41945, -54.2407, 24.4289, 1.66", "-8.67795, -55.9929, 24.8028, 1.11", "-8.85757, -57.1696, 25.1924, 1.11", "-9.01597, -58.2713, 25.6059, 1.11", "-9.1375, -59.374, 26.1799, 1.11", "-9.1606, -60.1686, 26.708, 1.11", "-9.14268, -61.3138, 27.5461, 1.11", "-9.03329, -63.5528, 29.2671, 1.11", "-8.97137, -64.257, 29.8063, 1.11", "-8.71421, -66.5654, 31.6363, 1.11", "-8.57399, -67.4504, 32.3191, 1.11", "-8.35732, -68.6922, 33.2846, 1.11", "-8.16131, -69.5251, 33.9123, 1.39", "-7.86424, -70.3749, 34.4111, 1.39", "-7.63724, -71.0237, 34.7181, 1.11", "-7.11738, -72.677, 35.0155, 1.39", "-6.62996, -78.7267, 36.7924, 1.39", "-6.27235, -84.6537, 38.995, 1.39", "-5.57671, -90.5028, 41.3269, 1.39", "-5.48437, -96.3881, 43.6798, 1.39", "-5.58431, -102.387, 45.7081, 1.39", "-4.49118, -108.398, 47.3353, 1.39", "-3.06669, -114.504, 48.1108, 1.39", "-0.44386, -120.283, 48.1562, 1.39", "2.04848, -126.101, 47.6435, 1.39" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "21.5154, 34.8693, -82.0794, 0.55", "22.9857, 38.7972, -82.6462, 0.55", "25.8165, 45.0953, -82.6321, 0.55", "30.8333, 55.6588, -82.7956, 0.55", "32.0456, 58.3033, -83.21, 0.55", "40.784, 77.8876, -87.577, 0.55", "45.3836, 89.1843, -90.7834, 0.55", "45.8603, 90.2961, -91.1255, 0.83", "46.9327, 92.7418, -91.8729, 0.28", "49.1665, 98.1035, -95.819, 0.28", "49.523, 99.0534, -96.8433, 0.28", "50.3613, 101.257, -99.705, 0.28", "51.1288, 103.363, -102.359, 0.28", "52.2082, 105.957, -106.006, 0.28", "56.0042, 113.427, -117.093, 0.28", "56.3093, 113.9, -117.824, 0.83", "57.1476, 114.885, -119.953, 0.28", "57.5383, 115.229, -120.863, 0.83", "63.5616, 119.3, -134.516, 0.28", "64.6797, 119.879, -136.989, 0.28", "65.8937, 120.22, -139.633, 0.28", "72.9313, 121.837, -155.696, 0.28", "77.5345, 122.571, -166.972, 0.28", "78.1919, 122.572, -168.553, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "21.5154, 34.8693, -82.0794, 0.55", "28.9198, 37.2522, -89.8109, 0.55", "31.075, 37.9352, -92.5384, 1.11", "37.257, 39.7684, -100.068, 0.55", "38.6936, 40.1853, -101.709, 0.55", "39.9985, 40.5562, -103.236, 0.55", "42.9944, 41.3731, -106.526, 1.11", "54.5163, 44.4847, -118.191, 0.28", "57.5178, 45.183, -121.038, 0.28", "62.0306, 46.0859, -124.708, 0.55", "69.7318, 47.3289, -131.143, 0.28", "74.831, 48.0981, -135.211, 0.28", "77.0731, 48.4436, -136.817, 0.55", "79.7587, 48.9199, -138.254, 0.55", "85.6406, 50.1623, -141.342, 0.28", "95.2283, 52.5357, -145.841, 0.28", "101.266, 54.3922, -149.486, 0.28", "103.909, 55.2958, -151.421, 0.55", "107.958, 56.7182, -154.54, 0.28", "111.251, 57.9018, -157.18, 0.55", "114.087, 58.9763, -159.553, 0.55", "127.415, 63.9223, -170.19, 0.28", "134.066, 66.2023, -176.419, 0.28", "136.514, 66.953, -178.939, 0.28", "138.336, 67.4435, -181.01, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-97.998, 46.3104, -31.9127, 0.28", "-98.5385, 47.4291, -29.5981, 0.28", "-99.1604, 48.722, -26.4129, 0.28", "-99.5836, 49.5633, -24.4319, 0.55", "-99.7853, 49.9142, -23.7272, 0.28", "-102.54, 54.7077, -14.1015, 0.28", "-103.054, 55.6015, -12.3065, 0.28", "-105.027, 59.0862, -3.95577, 0.28", "-105.329, 59.71, -2.11694, 0.83", "-106.8, 63.3901, 10.6608, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-97.998, 46.3104, -31.9127, 0.55", "-102.79, 46.3258, -38.431, 0.55", "-105.644, 46.2977, -41.8882, 0.55", "-108.268, 46.3476, -45.4129, 0.55", "-109.994, 46.4287, -47.6624, 0.55", "-113.636, 46.6022, -52.0917, 0.55", "-116.096, 46.6818, -54.6971, 0.28", "-117.282, 46.6967, -55.6888, 0.83", "-128.998, 46.5476, -64.3147, 0.83", "-131.128, 46.4684, -65.7007, 0.83", "-134.06, 46.2982, -67.2654, 0.83", "-140.142, 45.7717, -69.7684, 0.83", "-142.772, 45.4563, -70.667, 0.28", "-146.318, 44.9844, -71.4637, 0.28", "-148.327, 44.6776, -71.5743, 0.55", "-150.625, 44.2993, -71.7698, 0.28", "-153.41, 43.8714, -72.0522, 0.28", "-156.525, 43.4533, -72.4317, 0.28", "-160.249, 43.0876, -72.8428, 0.28", "-161.516, 43.0522, -72.9188, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_20", "dend_17", "dend_0", "dend_24", "dend_21", "dend_19", "dend_18", "dend_14", "dend_1", "dend_32", "dend_25", "dend_23", "dend_22", "dend_16", "dend_15", "dend_9", "dend_2", "dend_40", "dend_33", "dend_29", "dend_26", "dend_11", "dend_10", "dend_6", "dend_3", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_4", "dend_39", "dend_38", "dend_36", "dend_35" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_20", "dend_17", "dend_0", "dend_24", "dend_21", "dend_19", "dend_18", "dend_14", "dend_1", "dend_32", "dend_25", "dend_23", "dend_22", "dend_16", "dend_15", "dend_9", "dend_2", "dend_40", "dend_33", "dend_29", "dend_26", "dend_11", "dend_10", "dend_6", "dend_3", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_4", "dend_39", "dend_38", "dend_36", "dend_35" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_20", "dend_17", "dend_0", "axon_0", "dend_24", "dend_21", "dend_19", "dend_18", "dend_14", "dend_1", "axon_1", "dend_32", "dend_25", "dend_23", "dend_22", "dend_16", "dend_15", "dend_9", "dend_2", "dend_40", "dend_33", "dend_29", "dend_26", "dend_11", "dend_10", "dend_6", "dend_3", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_13", "dend_12", "dend_8", "dend_7", "dend_5", "dend_4", "dend_39", "dend_38", "dend_36", "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "axon_1", "axon_1", "dend_32", "dend_32", "dend_32", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_BTC_41f7db5b85_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_20, dend_17, dend_0, axon_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, axon_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_30
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, axon_1, axon_1, dend_32, dend_32, dend_32, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_20(0), soma_0(0.49999961371666685)
    connect dend_17(0), soma_0(0.49999961371666685)
    connect dend_0(0), soma_0(0.49999961371666685)
    connect axon_0(0), soma_0(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.79879, 12.4163, -5.65686, 1.10185 ) }
    soma_0 { pt3dadd( -0.780248, 11.3268, -5.18349, 1.63297 ) }
    soma_0 { pt3dadd( -0.761706, 10.2373, -4.71013, 2.68141 ) }
    soma_0 { pt3dadd( -0.743165, 9.14783, -4.23676, 3.59289 ) }
    soma_0 { pt3dadd( -0.724623, 8.05833, -3.7634, 4.52551 ) }
    soma_0 { pt3dadd( -0.706081, 6.96884, -3.29004, 5.77296 ) }
    soma_0 { pt3dadd( -0.687539, 5.87934, -2.81667, 7.05591 ) }
    soma_0 { pt3dadd( -0.668997, 4.78984, -2.34331, 7.8981 ) }
    soma_0 { pt3dadd( -0.650455, 3.70034, -1.86994, 8.60513 ) }
    soma_0 { pt3dadd( -0.631913, 2.61085, -1.39658, 9.05081 ) }
    soma_0 { pt3dadd( -0.613372, 1.52135, -0.923215, 9.49138 ) }
    soma_0 { pt3dadd( -0.59483, 0.431853, -0.449851, 9.92405 ) }
    soma_0 { pt3dadd( -0.576288, -0.657644, 0.0235132, 10.0896 ) }
    soma_0 { pt3dadd( -0.557746, -1.74714, 0.496877, 9.7354 ) }
    soma_0 { pt3dadd( -0.539204, -2.83664, 0.970241, 9.3741 ) }
    soma_0 { pt3dadd( -0.520662, -3.92614, 1.44361, 8.98289 ) }
    soma_0 { pt3dadd( -0.50212, -5.01563, 1.91697, 8.2325 ) }
    soma_0 { pt3dadd( -0.483579, -6.10513, 2.39033, 7.41598 ) }
    soma_0 { pt3dadd( -0.465037, -7.19463, 2.8637, 6.43666 ) }
    soma_0 { pt3dadd( -0.446495, -8.28412, 3.33706, 5.40957 ) }
    soma_0 { pt3dadd( -0.427953, -9.37362, 3.81043, 3.13747 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 0.562971, 11.5755, -13.8565, 1.39 ) }
    dend_20 { pt3dadd( 1.90489, 13.3548, -6.24915, 1.39 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 23/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.72297, 1.55305, 2.93347, 1.11 ) }
    dend_17 { pt3dadd( 8.79034, 4.9517, 4.99347, 1.11 ) }
    dend_17 { pt3dadd( 11.8281, 7.60927, 6.53694, 1.11 ) }
    dend_17 { pt3dadd( 13.2197, 8.9466, 7.24533, 1.11 ) }
    dend_17 { pt3dadd( 15.5085, 11.1282, 8.63062, 1.66 ) }
    dend_17 { pt3dadd( 16.9283, 12.5248, 9.52942, 0.83 ) }
    dend_17 { pt3dadd( 18.7059, 14.217, 10.6461, 0.83 ) }
    dend_17 { pt3dadd( 19.9331, 15.3449, 11.4306, 1.11 ) }
    dend_17 { pt3dadd( 21.2817, 16.6164, 12.2969, 0.28 ) }
    dend_17 { pt3dadd( 24.7128, 19.7394, 14.7394, 0.83 ) }
    dend_17 { pt3dadd( 26.9965, 21.8731, 16.4368, 0.83 ) }
    dend_17 { pt3dadd( 29.163, 23.9105, 18.0979, 0.83 ) }
    dend_17 { pt3dadd( 30.8581, 25.3099, 19.4339, 0.83 ) }
    dend_17 { pt3dadd( 32.6944, 26.62, 20.875, 0.83 ) }
    dend_17 { pt3dadd( 35.6392, 28.6138, 23.1703, 0.83 ) }
    dend_17 { pt3dadd( 37.0165, 29.5511, 24.2287, 0.83 ) }
    dend_17 { pt3dadd( 39.7053, 31.2282, 26.5025, 0.83 ) }
    dend_17 { pt3dadd( 43.3097, 33.4362, 29.7928, 0.83 ) }
    dend_17 { pt3dadd( 44.9065, 34.2894, 31.2756, 0.83 ) }
    dend_17 { pt3dadd( 52.2373, 38.8264, 34.7291, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 43/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.09703, -6.62645, 2.32347, 2.77 ) }
    dend_0 { pt3dadd( -1.97085, -10.8533, 2.94624, 2.77 ) }
    dend_0 { pt3dadd( -2.3451, -12.6635, 3.21297, 2.49 ) }
    dend_0 { pt3dadd( -2.78363, -14.7848, 3.52551, 2.49 ) }
    dend_0 { pt3dadd( -3.28136, -17.1924, 3.88024, 2.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 48/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.427953, -9.37362, 3.81043, 1.00267 ) }
    axon_0 { pt3dadd( -0.172709, -24.3714, 3.81043, 1.00267 ) }
    axon_0 { pt3dadd( 0.0825348, -39.3693, 3.81043, 1.00267 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 1.90489, 13.3548, -6.24915, 0.55 ) }
    dend_24 { pt3dadd( -4.81182, 17.3192, -15.6349, 0.55 ) }
    dend_24 { pt3dadd( -5.39122, 17.6612, -16.4445, 2.49 ) }
    dend_24 { pt3dadd( -10.0285, 20.3983, -22.9245, 2.22 ) }
    dend_24 { pt3dadd( -12.9918, 22.1473, -27.0653, 2.22 ) }
    dend_24 { pt3dadd( -17.5161, 24.8178, -33.3875, 2.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.90489, 13.3548, -6.24915, 1.39 ) }
    dend_21 { pt3dadd( 3.36527, 15.9314, -15.3286, 1.39 ) }
    dend_21 { pt3dadd( 4.78056, 18.5965, -23.2546, 1.11 ) }
    dend_21 { pt3dadd( 6.52362, 22.0654, -32.4525, 1.11 ) }
    dend_21 { pt3dadd( 7.4065, 23.8199, -36.8115, 1.11 ) }
    dend_21 { pt3dadd( 8.26367, 25.4115, -40.964, 1.11 ) }
    dend_21 { pt3dadd( 8.71156, 26.2432, -43.1338, 1.11 ) }
    dend_21 { pt3dadd( 9.30198, 27.3838, -45.6684, 1.11 ) }
    dend_21 { pt3dadd( 10.8038, 30.3376, -51.595, 1.11 ) }
    dend_21 { pt3dadd( 11.2553, 31.1415, -53.1378, 1.11 ) }
    dend_21 { pt3dadd( 13.7417, 35.6202, -63.3475, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 52.2373, 38.8264, 34.7291, 0.83 ) }
    dend_19 { pt3dadd( 47.5105, 33.994, 27.6416, 0.83 ) }
    dend_19 { pt3dadd( 42.7187, 28.3174, 21.3326, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 71/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 52.2373, 38.8264, 34.7291, 0.83 ) }
    dend_18 { pt3dadd( 40.8004, 32.145, 39.5335, 0.83 ) }
    dend_18 { pt3dadd( 30.9841, 23.8912, 45.1934, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.28136, -17.1924, 3.88024, 1.11 ) }
    dend_14 { pt3dadd( -0.35322, -18.8169, 4.89265, 1.11 ) }
    dend_14 { pt3dadd( 1.56427, -19.8568, 5.55641, 1.11 ) }
    dend_14 { pt3dadd( 4.19261, -21.2401, 6.45697, 1.11 ) }
    dend_14 { pt3dadd( 6.85176, -22.5376, 7.54777, 1.11 ) }
    dend_14 { pt3dadd( 10.4741, -24.2745, 9.13833, 1.11 ) }
    dend_14 { pt3dadd( 15.7169, -26.7325, 11.4619, 1.11 ) }
    dend_14 { pt3dadd( 16.9944, -27.3123, 12.136, 1.11 ) }
    dend_14 { pt3dadd( 19.8105, -28.516, 13.6468, 1.11 ) }
    dend_14 { pt3dadd( 24.5876, -30.5257, 16.2909, 1.11 ) }
    dend_14 { pt3dadd( 28.3018, -32.0818, 18.4045, 1.11 ) }
    dend_14 { pt3dadd( 33.2911, -34.256, 21.5289, 1.11 ) }
    dend_14 { pt3dadd( 37.0533, -36.0322, 24.1478, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 87/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.28136, -17.1924, 3.88024, 2.49 ) }
    dend_1 { pt3dadd( -6.50129, -20.4978, 9.67022, 2.49 ) }
    dend_1 { pt3dadd( -7.59767, -21.6233, 11.6417, 2.49 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 90/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 0.0825348, -39.3693, 3.81043, 0.28 ) }
    axon_1 { pt3dadd( 0.337779, -54.3671, 3.81043, 0.28 ) }
    axon_1 { pt3dadd( 0.593023, -69.3649, 3.81043, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -17.5161, 24.8178, -33.3875, 1.11 ) }
    dend_32 { pt3dadd( -18.6171, 25.0927, -38.0352, 1.11 ) }
    dend_32 { pt3dadd( -19.64, 25.3481, -42.3528, 1.11 ) }
    dend_32 { pt3dadd( -20.1561, 25.477, -44.5316, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 97/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -17.5161, 24.8178, -33.3875, 1.94 ) }
    dend_25 { pt3dadd( -14.3497, 25.8354, -27.7757, 1.94 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 13.7417, 35.6202, -63.3475, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 14.4375, 36.4863, -65.1528, 0.55 ) }
    dend_23 { pt3dadd( 15.1616, 37.5627, -66.8484, 1.39 ) }
    dend_23 { pt3dadd( 15.8193, 38.5942, -68.1782, 0.55 ) }
    dend_23 { pt3dadd( 19.9869, 45.6659, -75.8899, 0.55 ) }
    dend_23 { pt3dadd( 20.9489, 47.4998, -77.5094, 0.55 ) }
    dend_23 { pt3dadd( 22.5308, 50.938, -79.754, 0.55 ) }
    dend_23 { pt3dadd( 23.0673, 52.278, -80.6408, 0.83 ) }
    dend_23 { pt3dadd( 23.6752, 53.9586, -81.673, 0.55 ) }
    dend_23 { pt3dadd( 24.1531, 55.402, -82.5434, 0.55 ) }
    dend_23 { pt3dadd( 25.202, 58.3746, -84.1454, 0.55 ) }
    dend_23 { pt3dadd( 26.7768, 62.1757, -86.7697, 0.83 ) }
    dend_23 { pt3dadd( 30.2316, 69.1223, -92.2363, 0.55 ) }
    dend_23 { pt3dadd( 30.9327, 70.3407, -93.4398, 0.55 ) }
    dend_23 { pt3dadd( 33.0537, 73.4027, -97.1125, 0.55 ) }
    dend_23 { pt3dadd( 34.0872, 74.5644, -98.7605, 0.55 ) }
    dend_23 { pt3dadd( 36.1244, 76.422, -101.644, 0.55 ) }
    dend_23 { pt3dadd( 37.8231, 77.7598, -103.721, 0.83 ) }
    dend_23 { pt3dadd( 43.1686, 81.7517, -108.963, 0.83 ) }
    dend_23 { pt3dadd( 45.082, 83.1303, -110.766, 0.28 ) }
    dend_23 { pt3dadd( 48.8929, 85.8612, -114.075, 0.28 ) }
    dend_23 { pt3dadd( 51.6522, 87.9091, -116.513, 0.28 ) }
    dend_23 { pt3dadd( 53.6064, 89.3761, -118.155, 0.55 ) }
    dend_23 { pt3dadd( 54.4745, 90.0169, -118.761, 0.28 ) }
    dend_23 { pt3dadd( 58.3245, 92.8258, -120.437, 0.28 ) }
    dend_23 { pt3dadd( 60.2956, 94.1943, -121.76, 0.28 ) }
    dend_23 { pt3dadd( 62.0183, 95.2654, -123.217, 0.28 ) }
    dend_23 { pt3dadd( 62.8886, 95.7545, -124.016, 0.28 ) }
    dend_23 { pt3dadd( 66.6788, 97.6988, -127.795, 0.28 ) }
    dend_23 { pt3dadd( 67.76, 98.211, -128.879, 0.28 ) }
    dend_23 { pt3dadd( 77.2623, 102.411, -139.566, 0.28 ) }
    dend_23 { pt3dadd( 80.6159, 103.697, -143.426, 0.55 ) }
    dend_23 { pt3dadd( 82.373, 104.332, -145.36, 0.55 ) }
    dend_23 { pt3dadd( 85.4359, 105.467, -148.615, 0.28 ) }
    dend_23 { pt3dadd( 86.886, 106.04, -150.117, 0.28 ) }
    dend_23 { pt3dadd( 92.8907, 108.551, -155.471, 0.28 ) }
    dend_23 { pt3dadd( 95.9056, 109.919, -157.686, 0.28 ) }
    dend_23 { pt3dadd( 99.4752, 111.685, -160.409, 0.28 ) }
    dend_23 { pt3dadd( 108.954, 116.772, -167.446, 0.28 ) }
    dend_23 { pt3dadd( 111.546, 118.19, -169.252, 0.28 ) }
    dend_23 { pt3dadd( 113.92, 119.549, -170.871, 0.28 ) }
    dend_23 { pt3dadd( 118.052, 122.07, -173.461, 0.55 ) }
    dend_23 { pt3dadd( 119.42, 122.943, -174.401, 0.28 ) }
    dend_23 { pt3dadd( 121.069, 123.992, -175.553, 0.28 ) }
    dend_23 { pt3dadd( 127.94, 128.243, -179.72, 0.28 ) }
    dend_23 { pt3dadd( 129.344, 129.041, -180.565, 0.28 ) }
    dend_23 { pt3dadd( 132.975, 130.945, -182.754, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 46/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 13.7417, 35.6202, -63.3475, 1.11 ) }
    dend_22 { pt3dadd( 18.9282, 39.8786, -61.6025, 1.11 ) }
    dend_22 { pt3dadd( 20.256, 41.5695, -61.8327, 1.11 ) }
    dend_22 { pt3dadd( 21.7822, 43.5038, -62.2144, 0.55 ) }
    dend_22 { pt3dadd( 22.778, 44.5648, -62.8785, 0.55 ) }
    dend_22 { pt3dadd( 23.5068, 45.2753, -63.4504, 0.55 ) }
    dend_22 { pt3dadd( 24.3265, 46.0382, -64.0992, 0.55 ) }
    dend_22 { pt3dadd( 25.7445, 47.445, -65.4703, 0.55 ) }
    dend_22 { pt3dadd( 27.1113, 48.784, -66.8355, 0.55 ) }
    dend_22 { pt3dadd( 30.4543, 51.8311, -70.0732, 0.55 ) }
    dend_22 { pt3dadd( 30.8835, 52.1741, -70.5018, 0.83 ) }
    dend_22 { pt3dadd( 32.0005, 52.9788, -71.6611, 0.83 ) }
    dend_22 { pt3dadd( 33.0182, 53.6385, -72.7652, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 59/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 37.0533, -36.0322, 24.1478, 0.55 ) }
    dend_16 { pt3dadd( 38.627, -38.1236, 25.7848, 0.55 ) }
    dend_16 { pt3dadd( 40.3758, -40.0294, 27.2962, 0.55 ) }
    dend_16 { pt3dadd( 41.738, -41.5138, 28.4734, 0.55 ) }
    dend_16 { pt3dadd( 44.2058, -44.2031, 30.6061, 0.28 ) }
    dend_16 { pt3dadd( 45.6455, -45.772, 31.8503, 0.28 ) }
    dend_16 { pt3dadd( 46.9956, -47.2433, 33.0171, 0.28 ) }
    dend_16 { pt3dadd( 48.3351, -48.4113, 34.3327, 0.28 ) }
    dend_16 { pt3dadd( 53.3802, -53.6812, 39.3835, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 37.0533, -36.0322, 24.1478, 0.83 ) }
    dend_15 { pt3dadd( 38.4117, -36.6906, 24.216, 0.83 ) }
    dend_15 { pt3dadd( 40.8678, -37.7838, 24.3896, 0.83 ) }
    dend_15 { pt3dadd( 43.1454, -38.6236, 24.5595, 0.83 ) }
    dend_15 { pt3dadd( 44.7721, -39.1888, 24.6951, 0.83 ) }
    dend_15 { pt3dadd( 45.824, -39.5643, 24.799, 0.83 ) }
    dend_15 { pt3dadd( 50.2614, -41.1308, 25.2923, 0.83 ) }
    dend_15 { pt3dadd( 52.6385, -42.0305, 25.6241, 0.83 ) }
    dend_15 { pt3dadd( 55.1054, -43.0157, 25.9475, 0.83 ) }
    dend_15 { pt3dadd( 56.7643, -43.7155, 26.1375, 0.83 ) }
    dend_15 { pt3dadd( 59.6292, -45.1708, 26.1387, 0.83 ) }
    dend_15 { pt3dadd( 62.8758, -47.0301, 25.9018, 0.83 ) }
    dend_15 { pt3dadd( 66.1398, -49.0137, 25.5785, 0.83 ) }
    dend_15 { pt3dadd( 69.7011, -51.1966, 25.2335, 0.83 ) }
    dend_15 { pt3dadd( 74.0672, -53.9017, 24.6942, 0.83 ) }
    dend_15 { pt3dadd( 81.4368, -58.25, 23.651, 0.83 ) }
    dend_15 { pt3dadd( 83.5349, -59.4254, 23.3431, 0.83 ) }
    dend_15 { pt3dadd( 87.0552, -61.3466, 22.8725, 0.83 ) }
    dend_15 { pt3dadd( 91.9041, -63.8453, 22.3945, 0.83 ) }
    dend_15 { pt3dadd( 97.8286, -66.7029, 22.1584, 0.55 ) }
    dend_15 { pt3dadd( 100.158, -67.7312, 22.1758, 0.55 ) }
    dend_15 { pt3dadd( 103.221, -68.9537, 22.4128, 0.55 ) }
    dend_15 { pt3dadd( 106.387, -70.1738, 22.6377, 0.55 ) }
    dend_15 { pt3dadd( 110.025, -71.59, 23.0537, 0.55 ) }
    dend_15 { pt3dadd( 113.923, -73.0728, 23.8651, 0.55 ) }
    dend_15 { pt3dadd( 115.225, -73.4612, 24.3297, 0.55 ) }
    dend_15 { pt3dadd( 116.019, -73.688, 24.6708, 0.28 ) }
    dend_15 { pt3dadd( 120.254, -74.768, 26.6947, 0.28 ) }
    dend_15 { pt3dadd( 124.425, -75.6942, 28.8501, 0.28 ) }
    dend_15 { pt3dadd( 127.492, -76.3212, 30.6005, 0.28 ) }
    dend_15 { pt3dadd( 132.467, -77.3566, 33.7259, 0.28 ) }
    dend_15 { pt3dadd( 135.478, -77.9505, 35.6745, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_15 { pt3dadd( 136.647, -78.157, 36.4402, 0.28 ) }
    dend_15 { pt3dadd( 145.615, -82.9019, 35.9205, 0.28 ) }
    dend_15 { pt3dadd( 155.085, -86.643, 35.3333, 0.28 ) }
    dend_15 { pt3dadd( 163.705, -91.7371, 36.7939, 0.28 ) }
    dend_15 { pt3dadd( 171.741, -96.6983, 40.3688, 0.28 ) }
    dend_15 { pt3dadd( 179.685, -102.715, 41.784, 0.28 ) }
    dend_15 { pt3dadd( 187.13, -109.443, 42.0143, 0.28 ) }
    dend_15 { pt3dadd( 195.823, -114.637, 41.5293, 0.28 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 8/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -7.59767, -21.6233, 11.6417, 0.83 ) }
    dend_9 { pt3dadd( -8.96206, -23.1678, 8.87861, 0.83 ) }
    dend_9 { pt3dadd( -9.9436, -24.1661, 7.20098, 0.83 ) }
    dend_9 { pt3dadd( -13.8019, -27.6656, 1.33462, 0.83 ) }
    dend_9 { pt3dadd( -16.8938, -30.6821, -3.48356, 0.83 ) }
    dend_9 { pt3dadd( -17.9534, -31.773, -5.14575, 0.83 ) }
    dend_9 { pt3dadd( -20.4464, -34.4759, -8.91349, 0.83 ) }
    dend_9 { pt3dadd( -21.1888, -35.2279, -9.85608, 0.83 ) }
    dend_9 { pt3dadd( -22.7035, -36.6969, -11.4462, 0.83 ) }
    dend_9 { pt3dadd( -24.7086, -38.4919, -12.9899, 0.83 ) }
    dend_9 { pt3dadd( -25.0783, -38.8256, -13.2853, 0.83 ) }
    dend_9 { pt3dadd( -26.7994, -40.1471, -14.2909, 0.83 ) }
    dend_9 { pt3dadd( -28.9456, -41.6542, -15.2235, 0.83 ) }
    dend_9 { pt3dadd( -31.2797, -43.2502, -16.1375, 0.83 ) }
    dend_9 { pt3dadd( -33.2158, -44.4786, -16.7561, 0.83 ) }
    dend_9 { pt3dadd( -36.9504, -46.5403, -17.7561, 0.83 ) }
    dend_9 { pt3dadd( -39.4069, -47.8212, -18.4337, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 25/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.59767, -21.6233, 11.6417, 2.22 ) }
    dend_2 { pt3dadd( -7.44799, -23.3893, 11.6205, 2.22 ) }
    dend_2 { pt3dadd( -7.27608, -25.4176, 11.5961, 2.22 ) }
    dend_2 { pt3dadd( -7.18804, -26.4563, 11.5837, 2.22 ) }
    dend_2 { pt3dadd( -7.11667, -27.2984, 11.5736, 2.22 ) }
    dend_2 { pt3dadd( -6.80552, -30.9695, 11.5295, 2.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -20.1561, 25.477, -44.5316, 0.83 ) }
    dend_40 { pt3dadd( -20.9812, 25.9485, -45.5661, 0.83 ) }
    dend_40 { pt3dadd( -24.1156, 28.319, -51.2958, 0.83 ) }
    dend_40 { pt3dadd( -26.6921, 30.4603, -56.4562, 0.83 ) }
    dend_40 { pt3dadd( -27.7925, 31.418, -58.9428, 0.83 ) }
    dend_40 { pt3dadd( -28.1453, 31.7183, -59.7381, 0.83 ) }
    dend_40 { pt3dadd( -31.5172, 34.6041, -67.9644, 0.83 ) }
    dend_40 { pt3dadd( -36.6448, 39.0661, -81.4099, 0.83 ) }
    dend_40 { pt3dadd( -37.5889, 39.9149, -84.0074, 0.83 ) }
    dend_40 { pt3dadd( -41.3686, 43.3067, -93.3574, 0.55 ) }
    dend_40 { pt3dadd( -42.3935, 44.1796, -95.5787, 0.83 ) }
    dend_40 { pt3dadd( -47.7728, 48.6939, -105.942, 0.55 ) }
    dend_40 { pt3dadd( -48.5062, 49.2651, -107.055, 0.55 ) }
    dend_40 { pt3dadd( -50.1769, 50.5505, -109.042, 0.55 ) }
    dend_40 { pt3dadd( -56.2139, 55.4209, -116.064, 0.55 ) }
    dend_40 { pt3dadd( -58.1674, 57.1113, -118.092, 0.83 ) }
    dend_40 { pt3dadd( -65.1765, 64.0649, -125.264, 0.55 ) }
    dend_40 { pt3dadd( -68.4243, 67.7099, -128.415, 0.55 ) }
    dend_40 { pt3dadd( -69.5793, 69.2285, -129.802, 0.55 ) }
    dend_40 { pt3dadd( -73.5823, 75.521, -135.687, 0.55 ) }
    dend_40 { pt3dadd( -75.8449, 79.7805, -139.707, 0.55 ) }
    dend_40 { pt3dadd( -77.7046, 83.6691, -143.17, 0.83 ) }
    dend_40 { pt3dadd( -78.7858, 86.246, -145.118, 0.55 ) }
    dend_40 { pt3dadd( -81.1103, 92.4188, -149.682, 0.55 ) }
    dend_40 { pt3dadd( -82.2432, 95.5995, -152.232, 0.55 ) }
    dend_40 { pt3dadd( -83.8548, 100.285, -155.942, 0.55 ) }
    dend_40 { pt3dadd( -84.5266, 102.246, -157.726, 0.55 ) }
    dend_40 { pt3dadd( -85.3716, 104.402, -159.788, 0.83 ) }
    dend_40 { pt3dadd( -86.2714, 106.63, -161.731, 0.55 ) }
    dend_40 { pt3dadd( -89.5693, 114.586, -167.922, 0.55 ) }
    dend_40 { pt3dadd( -90.5266, 116.945, -169.864, 0.55 ) }
    dend_40 { pt3dadd( -92.0213, 120.573, -172.959, 0.55 ) }
    dend_40 { pt3dadd( -93.3194, 123.49, -175.395, 0.55 ) }
    dend_40 { pt3dadd( -94.5497, 126.219, -177.612, 0.83 ) }
    dend_40 { pt3dadd( -94.7573, 126.683, -178.009, 0.55 ) }
    dend_40 { pt3dadd( -98.0709, 133.475, -183.746, 0.55 ) }
    dend_40 { pt3dadd( -99.8249, 136.898, -186.965, 0.55 ) }
    dend_40 { pt3dadd( -101.843, 140.802, -190.793, 0.83 ) }
    dend_40 { pt3dadd( -102.968, 142.959, -193.03, 0.55 ) }
    dend_40 { pt3dadd( -106.904, 150.304, -201.052, 0.55 ) }
    dend_40 { pt3dadd( -107.895, 152.108, -203.011, 0.55 ) }
    dend_40 { pt3dadd( -109.958, 155.462, -206.573, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 73/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -20.1561, 25.477, -44.5316, 1.11 ) }
    dend_33 { pt3dadd( -19.9525, 25.1985, -43.5184, 1.11 ) }
    dend_33 { pt3dadd( -19.7202, 24.8808, -42.3625, 1.11 ) }
    dend_33 { pt3dadd( -17.2393, 21.4877, -30.0178, 1.11 ) }
    dend_33 { pt3dadd( -16.9053, 21.0309, -28.3559, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 78/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -14.3497, 25.8354, -27.7757, 1.11 ) }
    dend_29 { pt3dadd( -16.1833, 27.3175, -26.6571, 1.11 ) }
    dend_29 { pt3dadd( -17.1794, 28.1572, -26.0192, 1.11 ) }
    dend_29 { pt3dadd( -19.1822, 29.9988, -24.9345, 1.11 ) }
    dend_29 { pt3dadd( -20.9529, 31.7205, -24.1182, 1.11 ) }
    dend_29 { pt3dadd( -24.1436, 34.8503, -23.0657, 1.11 ) }
    dend_29 { pt3dadd( -26.9974, 37.6894, -21.8966, 1.11 ) }
    dend_29 { pt3dadd( -30.1198, 40.765, -20.4037, 1.11 ) }
    dend_29 { pt3dadd( -32.8066, 43.4059, -18.8009, 1.11 ) }
    dend_29 { pt3dadd( -35.3539, 45.9054, -16.9575, 0.83 ) }
    dend_29 { pt3dadd( -38.4594, 48.8237, -14.5152, 0.83 ) }
    dend_29 { pt3dadd( -43.6329, 53.3825, -9.93785, 0.83 ) }
    dend_29 { pt3dadd( -46.3796, 55.6427, -7.39548, 0.83 ) }
    dend_29 { pt3dadd( -50.2599, 58.6513, -3.66086, 0.83 ) }
    dend_29 { pt3dadd( -52.1304, 59.9922, -1.8659, 0.83 ) }
    dend_29 { pt3dadd( -54.3762, 61.5121, 0.151084, 0.83 ) }
    dend_29 { pt3dadd( -56.229, 62.7141, 1.61216, 0.83 ) }
    dend_29 { pt3dadd( -59.5017, 64.8189, 3.72597, 0.83 ) }
    dend_29 { pt3dadd( -62.9464, 67.1102, 5.78825, 0.83 ) }
    dend_29 { pt3dadd( -65.5252, 68.8089, 7.19036, 0.55 ) }
    dend_29 { pt3dadd( -67.6397, 70.2337, 8.32814, 0.55 ) }
    dend_29 { pt3dadd( -69.3107, 71.3604, 9.25375, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_29 { pt3dadd( -75.4577, 75.7156, 13.0478, 0.55 ) }
    dend_29 { pt3dadd( -77.1394, 76.9454, 14.1486, 0.83 ) }
    dend_29 { pt3dadd( -79.7315, 78.9802, 15.8197, 0.83 ) }
    dend_29 { pt3dadd( -82.1839, 81.045, 17.4562, 0.83 ) }
    dend_29 { pt3dadd( -84.365, 83.0066, 18.8122, 0.83 ) }
    dend_29 { pt3dadd( -87.2775, 85.7141, 20.5699, 0.55 ) }
    dend_29 { pt3dadd( -89.3852, 87.6877, 21.6958, 0.55 ) }
    dend_29 { pt3dadd( -92.8313, 91.0441, 23.7308, 0.55 ) }
    dend_29 { pt3dadd( -93.4094, 91.6615, 24.1, 0.55 ) }
    dend_29 { pt3dadd( -96.0675, 94.6114, 25.8895, 0.55 ) }
    dend_29 { pt3dadd( -98.4528, 97.2394, 27.4623, 0.55 ) }
    dend_29 { pt3dadd( -99.1493, 97.9539, 27.8632, 0.55 ) }
    dend_29 { pt3dadd( -100.226, 99.0981, 28.5863, 0.55 ) }
    dend_29 { pt3dadd( -101.12, 100.142, 29.344, 0.55 ) }
    dend_29 { pt3dadd( -103.025, 102.403, 31.0733, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 15/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -14.3497, 25.8354, -27.7757, 1.66 ) }
    dend_26 { pt3dadd( -14.1219, 30.1931, -26.1926, 1.66 ) }
    dend_26 { pt3dadd( -14.0001, 32.523, -25.3462, 1.66 ) }
    dend_26 { pt3dadd( -13.7843, 36.6506, -23.8466, 1.39 ) }
    dend_26 { pt3dadd( -13.5783, 40.5896, -22.4156, 1.39 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 20/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -39.4069, -47.8212, -18.4337, 0.55 ) }
    dend_11 { pt3dadd( -44.2185, -50.6201, -16.9845, 0.55 ) }
    dend_11 { pt3dadd( -48.5973, -53.1672, -15.6658, 0.55 ) }
    dend_11 { pt3dadd( -50.0428, -54.008, -15.2304, 0.28 ) }
    dend_11 { pt3dadd( -52.0073, -55.1507, -14.6388, 0.28 ) }
    dend_11 { pt3dadd( -56.4962, -57.7619, -13.2868, 0.28 ) }
    dend_11 { pt3dadd( -58.6989, -59.0432, -12.6234, 0.28 ) }
    dend_11 { pt3dadd( -68.3363, -63.2389, -10.1813, 0.28 ) }
    dend_11 { pt3dadd( -78.1565, -66.6637, -7.19605, 0.28 ) }
    dend_11 { pt3dadd( -87.23, -70.6472, -2.92715, 0.28 ) }
    dend_11 { pt3dadd( -97.0242, -74.2952, -0.156129, 0.28 ) }
    dend_11 { pt3dadd( -107.121, -76.1107, 3.42931, 0.28 ) }
    dend_11 { pt3dadd( -117.783, -76.3075, 5.6555, 0.28 ) }
    dend_11 { pt3dadd( -127.954, -76.0065, 9.54932, 0.28 ) }
    dend_11 { pt3dadd( -138.181, -74.003, 12.6906, 0.28 ) }
    dend_11 { pt3dadd( -147.847, -70.2949, 15.9231, 0.28 ) }
    dend_11 { pt3dadd( -156.955, -65.6341, 19.4233, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 37/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -39.4069, -47.8212, -18.4337, 0.55 ) }
    dend_10 { pt3dadd( -40.9404, -48.0642, -19.9964, 0.55 ) }
    dend_10 { pt3dadd( -44.03, -48.7372, -22.8617, 0.55 ) }
    dend_10 { pt3dadd( -45.6958, -49.1224, -24.171, 0.55 ) }
    dend_10 { pt3dadd( -49.299, -50.1353, -26.5487, 0.55 ) }
    dend_10 { pt3dadd( -53.1135, -51.2076, -29.0658, 0.55 ) }
    dend_10 { pt3dadd( -53.5483, -51.3298, -29.3526, 0.55 ) }
    dend_10 { pt3dadd( -56.8796, -52.3948, -31.4522, 0.55 ) }
    dend_10 { pt3dadd( -60.8491, -53.7905, -33.8791, 0.55 ) }
    dend_10 { pt3dadd( -65.7712, -55.5903, -36.4369, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 47/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.80552, -30.9695, 11.5295, 0.83 ) }
    dend_6 { pt3dadd( -4.26985, -33.8744, 10.5658, 0.83 ) }
    dend_6 { pt3dadd( -3.60486, -34.6055, 10.3093, 0.83 ) }
    dend_6 { pt3dadd( -1.98525, -36.219, 9.68372, 0.83 ) }
    dend_6 { pt3dadd( -1.30726, -36.9407, 9.43282, 0.83 ) }
    dend_6 { pt3dadd( 3.13616, -41.4507, 7.68728, 0.83 ) }
    dend_6 { pt3dadd( 4.6963, -43.0342, 7.07439, 0.83 ) }
    dend_6 { pt3dadd( 6.07231, -44.3525, 6.41945, 0.83 ) }
    dend_6 { pt3dadd( 9.26177, -47.2683, 4.85171, 0.83 ) }
    dend_6 { pt3dadd( 11.3948, -49.094, 3.80513, 0.83 ) }
    dend_6 { pt3dadd( 14.3864, -51.7087, 2.36364, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 58/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.80552, -30.9695, 11.5295, 1.94 ) }
    dend_3 { pt3dadd( -8.57576, -38.2752, 16.5543, 1.94 ) }
    dend_3 { pt3dadd( -8.91778, -40.318, 17.9269, 1.94 ) }
    dend_3 { pt3dadd( -9.04593, -41.7871, 18.9421, 1.94 ) }
    dend_3 { pt3dadd( -9.12911, -43.9672, 20.3361, 1.94 ) }
    dend_3 { pt3dadd( -9.18871, -45.5295, 21.3351, 1.94 ) }
    dend_3 { pt3dadd( -9.24036, -46.8831, 22.2007, 1.94 ) }
    dend_3 { pt3dadd( -8.56216, -49.8763, 22.8505, 1.94 ) }
    dend_3 { pt3dadd( -8.2302, -51.0814, 23.2707, 1.94 ) }
    dend_3 { pt3dadd( -7.85154, -52.377, 24.0418, 1.66 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 68/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -109.958, 155.462, -206.573, 0.55 ) }
    dend_42 { pt3dadd( -110.82, 160.646, -212.552, 0.55 ) }
    dend_42 { pt3dadd( -111.124, 162.476, -214.662, 0.83 ) }
    dend_42 { pt3dadd( -112.237, 169.172, -222.384, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 72/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -109.958, 155.462, -206.573, 0.28 ) }
    dend_41 { pt3dadd( -114.826, 158.98, -207.993, 0.28 ) }
    dend_41 { pt3dadd( -119.55, 162.394, -209.37, 0.55 ) }
    dend_41 { pt3dadd( -127.886, 168.42, -211.8, 0.55 ) }
    dend_41 { pt3dadd( -133.491, 172.471, -213.434, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 77/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -16.9053, 21.0309, -28.3559, 0.83 ) }
    dend_37 { pt3dadd( -11.3218, 23.0817, -35.0302, 0.83 ) }
    dend_37 { pt3dadd( -1.86352, 26.8857, -47.4836, 0.83 ) }
    dend_37 { pt3dadd( 0.394862, 27.6872, -50.794, 0.83 ) }
    dend_37 { pt3dadd( 2.39091, 28.3956, -53.7198, 0.83 ) }
    dend_37 { pt3dadd( 7.51637, 30.2146, -61.2328, 0.83 ) }
    dend_37 { pt3dadd( 9.53403, 30.9306, -64.1902, 0.83 ) }
    dend_37 { pt3dadd( 15.5735, 32.8492, -73.871, 0.83 ) }
    dend_37 { pt3dadd( 21.5154, 34.8693, -82.0794, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 86/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -16.9053, 21.0309, -28.3559, 0.83 ) }
    dend_34 { pt3dadd( -20.0989, 25.907, -1.29962, 0.83 ) }
    dend_34 { pt3dadd( -20.4429, 26.6802, 4.02335, 0.83 ) }
    dend_34 { pt3dadd( -20.4395, 27.2253, 9.61692, 0.83 ) }
    dend_34 { pt3dadd( -19.5784, 26.7067, 12.8222, 0.83 ) }
    dend_34 { pt3dadd( -20.6597, 27.5248, 10.6054, 0.83 ) }
    dend_34 { pt3dadd( -22.03, 28.4798, 8.15866, 0.83 ) }
    dend_34 { pt3dadd( -24.68, 30.1327, 4.33763, 0.83 ) }
    dend_34 { pt3dadd( -25.9616, 30.7915, 2.58327, 0.83 ) }
    dend_34 { pt3dadd( -30.5672, 32.9242, -3.19868, 0.83 ) }
    dend_34 { pt3dadd( -33.4031, 33.9251, -6.4359, 0.83 ) }
    dend_34 { pt3dadd( -36.903, 34.74, -10.1052, 0.83 ) }
    dend_34 { pt3dadd( -39.2226, 35.0697, -12.1681, 0.83 ) }
    dend_34 { pt3dadd( -41.783, 35.2059, -13.9749, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( -46.2577, 35.1296, -16.2881, 0.83 ) }
    dend_34 { pt3dadd( -49.7929, 34.8785, -17.426, 0.83 ) }
    dend_34 { pt3dadd( -52.22, 34.7611, -17.9976, 0.83 ) }
    dend_34 { pt3dadd( -55.1265, 34.7483, -18.5144, 0.83 ) }
    dend_34 { pt3dadd( -59.7459, 34.9824, -19.5029, 0.83 ) }
    dend_34 { pt3dadd( -64.2548, 35.4995, -20.7743, 0.83 ) }
    dend_34 { pt3dadd( -66.6382, 35.9176, -21.2385, 0.83 ) }
    dend_34 { pt3dadd( -72.661, 37.1122, -22.4197, 0.83 ) }
    dend_34 { pt3dadd( -76.9029, 38.0916, -23.3497, 0.83 ) }
    dend_34 { pt3dadd( -82.7782, 39.7029, -25.0508, 0.55 ) }
    dend_34 { pt3dadd( -87.5483, 41.3796, -26.857, 0.55 ) }
    dend_34 { pt3dadd( -97.998, 46.3104, -31.9127, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 12/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -103.025, 102.403, 31.0733, 0.55 ) }
    dend_31 { pt3dadd( -104.745, 102.566, 32.515, 0.55 ) }
    dend_31 { pt3dadd( -108.436, 102.915, 35.6093, 0.55 ) }
    dend_31 { pt3dadd( -112.28, 103.279, 38.8322, 0.55 ) }
    dend_31 { pt3dadd( -119.925, 103.286, 45.3817, 0.55 ) }
    dend_31 { pt3dadd( -127.811, 103.887, 51.6077, 0.55 ) }
    dend_31 { pt3dadd( -134.5, 105.695, 58.8827, 0.55 ) }
    dend_31 { pt3dadd( -140.804, 106.103, 66.7172, 0.55 ) }
    dend_31 { pt3dadd( -147.176, 105.129, 74.447, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -103.025, 102.403, 31.0733, 0.55 ) }
    dend_30 { pt3dadd( -103.437, 104.237, 31.7844, 0.55 ) }
    dend_30 { pt3dadd( -103.632, 105.293, 32.0222, 0.55 ) }
    dend_30 { pt3dadd( -104.13, 108.739, 32.4641, 0.55 ) }
    dend_30 { pt3dadd( -104.513, 111.664, 33.0551, 0.55 ) }
    dend_30 { pt3dadd( -104.827, 114.294, 33.6782, 0.55 ) }
    dend_30 { pt3dadd( -105.086, 116.303, 34.1562, 0.55 ) }
    dend_30 { pt3dadd( -105.428, 119.244, 34.826, 0.55 ) }
    dend_30 { pt3dadd( -105.685, 121.434, 35.2069, 0.55 ) }
    dend_30 { pt3dadd( -106.294, 125.832, 35.5132, 0.28 ) }
    dend_30 { pt3dadd( -106.543, 127.446, 35.6816, 0.55 ) }
    dend_30 { pt3dadd( -106.887, 129.345, 35.9214, 0.28 ) }
    dend_30 { pt3dadd( -107.332, 131.356, 36.2351, 0.28 ) }
    dend_30 { pt3dadd( -107.777, 133.167, 36.5847, 0.55 ) }
    dend_30 { pt3dadd( -108.548, 135.963, 36.8299, 0.55 ) }
    dend_30 { pt3dadd( -109.57, 139.656, 36.459, 0.55 ) }
    dend_30 { pt3dadd( -109.683, 146.785, 38.1812, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -13.5783, 40.5896, -22.4156, 1.11 ) }
    dend_28 { pt3dadd( -13.8029, 41.9655, -21.0732, 1.11 ) }
    dend_28 { pt3dadd( -14.082, 44.4277, -18.4368, 1.11 ) }
    dend_28 { pt3dadd( -14.3368, 47.2262, -15.2258, 1.11 ) }
    dend_28 { pt3dadd( -14.4623, 48.8261, -13.4506, 0.83 ) }
    dend_28 { pt3dadd( -14.7043, 55.882, -4.92732, 1.11 ) }
    dend_28 { pt3dadd( -14.704, 57.3995, -3.09206, 1.11 ) }
    dend_28 { pt3dadd( -14.4959, 59.8835, 0.391511, 1.11 ) }
    dend_28 { pt3dadd( -14.1484, 62.7762, 4.88845, 1.11 ) }
    dend_28 { pt3dadd( -14.0023, 63.829, 6.70993, 1.11 ) }
    dend_28 { pt3dadd( -13.6159, 67.2407, 12.6094, 1.11 ) }
    dend_28 { pt3dadd( -13.6043, 68.3658, 14.4915, 0.55 ) }
    dend_28 { pt3dadd( -13.6163, 70.8675, 18.9838, 0.55 ) }
    dend_28 { pt3dadd( -13.6517, 72.1666, 21.4245, 0.55 ) }
    dend_28 { pt3dadd( -13.8543, 74.114, 25.0838, 0.83 ) }
    dend_28 { pt3dadd( -13.9996, 75.1054, 26.9442, 0.83 ) }
    dend_28 { pt3dadd( -14.3085, 77.5228, 31.0879, 0.83 ) }
    dend_28 { pt3dadd( -14.3254, 78.1843, 32.1698, 0.83 ) }
    dend_28 { pt3dadd( -14.1804, 80.2532, 35.1303, 0.83 ) }
    dend_28 { pt3dadd( -13.9936, 81.4234, 36.629, 0.83 ) }
    dend_28 { pt3dadd( -13.3701, 85.822, 41.6586, 0.83 ) }
    dend_28 { pt3dadd( -12.9577, 88.7406, 44.6978, 0.83 ) }
    dend_28 { pt3dadd( -12.6958, 90.4898, 46.2907, 0.83 ) }
    dend_28 { pt3dadd( -12.2389, 93.7471, 48.9721, 0.83 ) }
    dend_28 { pt3dadd( -11.8426, 96.3737, 50.9029, 0.83 ) }
    dend_28 { pt3dadd( -11.5116, 98.6131, 52.3913, 0.83 ) }
    dend_28 { pt3dadd( -11.3419, 101.319, 53.6223, 0.83 ) }
    dend_28 { pt3dadd( -11.3945, 102.458, 54.044, 0.83 ) }
    dend_28 { pt3dadd( -11.6684, 104.282, 54.7078, 0.83 ) }
    dend_28 { pt3dadd( -10.2537, 109.666, 63.9784, 0.83 ) }
    dend_28 { pt3dadd( -7.3852, 115.347, 72.6947, 0.83 ) }
    dend_28 { pt3dadd( -3.94022, 120.929, 81.271, 0.83 ) }
    dend_28 { pt3dadd( 0.229391, 127.01, 89.115, 0.83 ) }
    dend_28 { pt3dadd( 5.92003, 133.07, 95.9525, 0.83 ) }
    dend_28 { pt3dadd( 12.4179, 140.382, 100.232, 0.83 ) }
    dend_28 { pt3dadd( 17.9687, 148.727, 103.675, 0.83 ) }
    dend_28 { pt3dadd( 23.1567, 157.498, 106.454, 0.83 ) }
    dend_28 { pt3dadd( 29.274, 165.472, 109.907, 0.83 ) }
    dend_28 { pt3dadd( 34.6794, 174.289, 112.04, 0.83 ) }
    dend_28 { pt3dadd( 41.5843, 182.129, 114.057, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 78/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -13.5783, 40.5896, -22.4156, 1.11 ) }
    dend_27 { pt3dadd( -10.3411, 40.9806, -22.9753, 1.11 ) }
    dend_27 { pt3dadd( -7.45535, 41.3144, -23.3134, 1.11 ) }
    dend_27 { pt3dadd( -4.01902, 41.8127, -23.7601, 1.11 ) }
    dend_27 { pt3dadd( -1.2234, 42.2709, -24.1426, 1.11 ) }
    dend_27 { pt3dadd( 2.14913, 42.8699, -24.7583, 1.11 ) }
    dend_27 { pt3dadd( 6.15957, 43.6927, -25.6011, 1.11 ) }
    dend_27 { pt3dadd( 9.78139, 44.5663, -26.5144, 1.11 ) }
    dend_27 { pt3dadd( 18.7392, 47.1714, -29.2659, 1.11 ) }
    dend_27 { pt3dadd( 22.6225, 48.6391, -30.6508, 0.83 ) }
    dend_27 { pt3dadd( 27.043, 50.7618, -32.5888, 0.83 ) }
    dend_27 { pt3dadd( 29.2857, 52.1137, -33.766, 0.83 ) }
    dend_27 { pt3dadd( 32.7668, 54.6963, -35.9517, 0.83 ) }
    dend_27 { pt3dadd( 35.0567, 56.8934, -37.7168, 0.83 ) }
    dend_27 { pt3dadd( 37.6288, 60.2521, -40.1637, 0.83 ) }
    dend_27 { pt3dadd( 39.545, 63.1885, -42.1052, 0.83 ) }
    dend_27 { pt3dadd( 40.8708, 65.2645, -43.3332, 0.83 ) }
    dend_27 { pt3dadd( 41.696, 66.4258, -44.0024, 0.83 ) }
    dend_27 { pt3dadd( 44.5332, 69.8305, -45.8271, 0.83 ) }
    dend_27 { pt3dadd( 46.7494, 71.9902, -47.0786, 0.83 ) }
    dend_27 { pt3dadd( 48.4193, 73.2867, -47.844, 0.83 ) }
    dend_27 { pt3dadd( 51.2202, 75.0536, -48.9416, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_27 { pt3dadd( 53.6696, 76.4334, -49.8719, 0.83 ) }
    dend_27 { pt3dadd( 56.4677, 77.8723, -50.8024, 0.83 ) }
    dend_27 { pt3dadd( 58.13, 78.6987, -51.2576, 0.83 ) }
    dend_27 { pt3dadd( 60.4115, 79.9087, -51.8841, 0.83 ) }
    dend_27 { pt3dadd( 64.9396, 82.582, -53.1023, 0.83 ) }
    dend_27 { pt3dadd( 67.1521, 84.2344, -53.9434, 0.83 ) }
    dend_27 { pt3dadd( 69.0939, 85.9018, -54.8411, 0.83 ) }
    dend_27 { pt3dadd( 71.6297, 88.2951, -56.1548, 0.83 ) }
    dend_27 { pt3dadd( 74.2565, 90.9882, -57.5992, 0.83 ) }
    dend_27 { pt3dadd( 76.63, 93.5627, -58.9867, 0.83 ) }
    dend_27 { pt3dadd( 81.3516, 99.2054, -62.4878, 0.83 ) }
    dend_27 { pt3dadd( 82.3215, 100.454, -63.3736, 0.55 ) }
    dend_27 { pt3dadd( 83.8838, 102.676, -65.215, 0.55 ) }
    dend_27 { pt3dadd( 84.8058, 104.174, -66.5326, 0.55 ) }
    dend_27 { pt3dadd( 86.3479, 106.832, -68.6992, 0.55 ) }
    dend_27 { pt3dadd( 89.5254, 112.519, -72.7211, 0.55 ) }
    dend_27 { pt3dadd( 90.2689, 113.805, -73.449, 0.55 ) }
    dend_27 { pt3dadd( 92.253, 117.215, -75.152, 0.83 ) }
    dend_27 { pt3dadd( 94.9201, 121.573, -76.959, 0.55 ) }
    dend_27 { pt3dadd( 97.8058, 126.195, -78.3951, 0.55 ) }
    dend_27 { pt3dadd( 99.2933, 128.624, -78.825, 0.28 ) }
    dend_27 { pt3dadd( 100.914, 131.307, -78.9556, 0.28 ) }
    dend_27 { pt3dadd( 102.432, 133.95, -78.9903, 0.55 ) }
    dend_27 { pt3dadd( 104.639, 137.938, -78.8688, 0.28 ) }
    dend_27 { pt3dadd( 105.965, 140.5, -78.9662, 0.55 ) }
    dend_27 { pt3dadd( 107.074, 142.986, -79.388, 0.55 ) }
    dend_27 { pt3dadd( 108.019, 145.196, -79.7406, 0.28 ) }
    dend_27 { pt3dadd( 109.057, 147.721, -80.0674, 0.28 ) }
    dend_27 { pt3dadd( 109.962, 149.977, -80.3109, 0.28 ) }
    dend_27 { pt3dadd( 112.054, 155.107, -80.8903, 0.55 ) }
    dend_27 { pt3dadd( 114.676, 160.99, -81.6044, 0.28 ) }
    dend_27 { pt3dadd( 116.781, 165.474, -82.1575, 0.28 ) }
    dend_27 { pt3dadd( 118.871, 169.722, -82.6579, 0.28 ) }
    dend_27 { pt3dadd( 119.604, 171.18, -82.7952, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 34/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -156.955, -65.6341, 19.4233, 0.28 ) }
    dend_13 { pt3dadd( -165.589, -67.078, 22.4151, 0.28 ) }
    dend_13 { pt3dadd( -174.293, -68.2417, 25.3439, 0.28 ) }
    dend_13 { pt3dadd( -182.749, -68.9385, 29.0618, 0.28 ) }
    dend_13 { pt3dadd( -191.434, -70.5648, 31.7894, 0.28 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -156.955, -65.6341, 19.4233, 0.28 ) }
    dend_12 { pt3dadd( -165.1, -66.7355, 21.8414, 0.28 ) }
    dend_12 { pt3dadd( -172.809, -68.2984, 25.2052, 0.28 ) }
    dend_12 { pt3dadd( -180.515, -70.9884, 27.6587, 0.28 ) }
    dend_12 { pt3dadd( -188.167, -74.3112, 29.2932, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 44/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 14.3864, -51.7087, 2.36364, 0.83 ) }
    dend_8 { pt3dadd( 17.4625, -52.9465, 2.95352, 0.83 ) }
    dend_8 { pt3dadd( 20.5282, -53.9865, 3.12859, 0.83 ) }
    dend_8 { pt3dadd( 23.3696, -54.9492, 3.19145, 0.83 ) }
    dend_8 { pt3dadd( 24.6907, -55.4342, 3.24019, 0.83 ) }
    dend_8 { pt3dadd( 29.3612, -57.2901, 3.46798, 0.83 ) }
    dend_8 { pt3dadd( 32.4797, -58.6112, 3.55607, 0.83 ) }
    dend_8 { pt3dadd( 37.9735, -60.9609, 3.55518, 0.83 ) }
    dend_8 { pt3dadd( 40.2552, -61.9057, 3.49139, 0.55 ) }
    dend_8 { pt3dadd( 42.8438, -63.014, 3.48802, 0.55 ) }
    dend_8 { pt3dadd( 43.985, -63.5382, 3.48174, 0.55 ) }
    dend_8 { pt3dadd( 47.0079, -65.1275, 3.56668, 0.55 ) }
    dend_8 { pt3dadd( 48.6049, -66.0003, 3.62828, 0.55 ) }
    dend_8 { pt3dadd( 52.9414, -68.4095, 4.25281, 0.55 ) }
    dend_8 { pt3dadd( 54.9916, -69.3408, 4.46116, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 59/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 14.3864, -51.7087, 2.36364, 0.83 ) }
    dend_7 { pt3dadd( 13.5595, -55.3173, 1.84736, 0.83 ) }
    dend_7 { pt3dadd( 13.1821, -56.759, 1.58248, 0.83 ) }
    dend_7 { pt3dadd( 12.8416, -58.2133, 1.35354, 0.83 ) }
    dend_7 { pt3dadd( 12.2086, -61.0958, 0.936772, 0.83 ) }
    dend_7 { pt3dadd( 11.8248, -62.9003, 0.684592, 0.83 ) }
    dend_7 { pt3dadd( 11.3479, -65.0664, 0.360374, 0.83 ) }
    dend_7 { pt3dadd( 11.0235, -66.3391, 0.22414, 0.83 ) }
    dend_7 { pt3dadd( 10.4368, -68.5715, -0.132439, 0.83 ) }
    dend_7 { pt3dadd( 10.2104, -69.4651, -0.311285, 0.83 ) }
    dend_7 { pt3dadd( 9.92797, -70.7006, -0.582258, 0.83 ) }
    dend_7 { pt3dadd( 9.70448, -71.819, -0.766595, 0.83 ) }
    dend_7 { pt3dadd( 9.468, -73.3028, -0.91385, 0.83 ) }
    dend_7 { pt3dadd( 8.91065, -75.4429, -0.839173, 0.83 ) }
    dend_7 { pt3dadd( 7.91769, -78.4833, -0.394734, 0.83 ) }
    dend_7 { pt3dadd( 7.22811, -80.3847, 0.0256079, 0.83 ) }
    dend_7 { pt3dadd( 6.36425, -82.7317, 0.684882, 0.83 ) }
    dend_7 { pt3dadd( 5.80913, -84.1844, 1.25244, 0.83 ) }
    dend_7 { pt3dadd( 3.55121, -90.0725, 4.01903, 0.83 ) }
    dend_7 { pt3dadd( 2.84121, -92.0396, 5.05009, 0.83 ) }
    dend_7 { pt3dadd( 2.31006, -93.4296, 5.79115, 0.83 ) }
    dend_7 { pt3dadd( 1.40403, -95.6138, 6.9488, 0.83 ) }
    dend_7 { pt3dadd( 0.0904252, -98.5376, 8.57938, 0.83 ) }
    dend_7 { pt3dadd( -0.682833, -100.3, 9.51322, 0.83 ) }
    dend_7 { pt3dadd( -1.76123, -102.974, 10.6856, 0.83 ) }
    dend_7 { pt3dadd( -2.67378, -105.082, 11.6083, 0.83 ) }
    dend_7 { pt3dadd( -4.41787, -108.669, 13.1551, 0.83 ) }
    dend_7 { pt3dadd( -6.33048, -112.275, 14.535, 0.83 ) }
    dend_7 { pt3dadd( -7.29708, -113.986, 15.0457, 0.83 ) }
    dend_7 { pt3dadd( -8.60902, -115.938, 15.5701, 0.83 ) }
    dend_7 { pt3dadd( -9.96368, -117.687, 15.9199, 0.83 ) }
    dend_7 { pt3dadd( -11.9939, -120.266, 16.2148, 0.83 ) }
    dend_7 { pt3dadd( -13.595, -122.0, 16.1808, 0.83 ) }
    dend_7 { pt3dadd( -15.0777, -123.484, 16.0965, 0.83 ) }
    dend_7 { pt3dadd( -17.3951, -125.611, 16.0767, 0.83 ) }
    dend_7 { pt3dadd( -18.5846, -126.659, 16.07, 0.83 ) }
    dend_7 { pt3dadd( -19.6722, -127.586, 16.0266, 0.83 ) }
    dend_7 { pt3dadd( -23.1918, -130.827, 15.8667, 0.83 ) }
    dend_7 { pt3dadd( -24.6248, -132.097, 15.81, 0.55 ) }
    dend_7 { pt3dadd( -25.0259, -132.52, 15.7972, 0.55 ) }
    dend_7 { pt3dadd( -26.475, -134.461, 15.6975, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( -27.0303, -135.22, 15.5669, 0.28 ) }
    dend_7 { pt3dadd( -27.5821, -135.959, 15.3283, 0.28 ) }
    dend_7 { pt3dadd( -28.4935, -137.323, 14.4657, 0.28 ) }
    dend_7 { pt3dadd( -29.8818, -139.09, 13.1305, 0.28 ) }
    dend_7 { pt3dadd( -30.3889, -139.743, 12.6434, 0.28 ) }
    dend_7 { pt3dadd( -31.6616, -141.45, 11.4253, 0.28 ) }
    dend_7 { pt3dadd( -36.1401, -149.626, 12.4806, 0.28 ) }
    dend_7 { pt3dadd( -40.6925, -157.788, 11.202, 0.28 ) }
    dend_7 { pt3dadd( -44.9377, -165.677, 8.09977, 0.28 ) }
    dend_7 { pt3dadd( -50.6073, -172.581, 4.71054, 0.28 ) }
    dend_7 { pt3dadd( -56.7642, -179.565, 2.64257, 0.28 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 11/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -7.85154, -52.377, 24.0418, 0.55 ) }
    dend_5 { pt3dadd( -7.4753, -57.0082, 29.5052, 0.55 ) }
    dend_5 { pt3dadd( -7.3569, -58.4655, 31.2245, 0.55 ) }
    dend_5 { pt3dadd( -7.22557, -60.0821, 33.1315, 0.55 ) }
    dend_5 { pt3dadd( -7.10731, -61.5378, 34.8488, 0.55 ) }
    dend_5 { pt3dadd( -4.67595, -66.86, 43.1375, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 17/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.85154, -52.377, 24.0418, 1.66 ) }
    dend_4 { pt3dadd( -8.2404, -53.4914, 24.2672, 1.66 ) }
    dend_4 { pt3dadd( -8.41945, -54.2407, 24.4289, 1.66 ) }
    dend_4 { pt3dadd( -8.67795, -55.9929, 24.8028, 1.11 ) }
    dend_4 { pt3dadd( -8.85757, -57.1696, 25.1924, 1.11 ) }
    dend_4 { pt3dadd( -9.01597, -58.2713, 25.6059, 1.11 ) }
    dend_4 { pt3dadd( -9.1375, -59.374, 26.1799, 1.11 ) }
    dend_4 { pt3dadd( -9.1606, -60.1686, 26.708, 1.11 ) }
    dend_4 { pt3dadd( -9.14268, -61.3138, 27.5461, 1.11 ) }
    dend_4 { pt3dadd( -9.03329, -63.5528, 29.2671, 1.11 ) }
    dend_4 { pt3dadd( -8.97137, -64.257, 29.8063, 1.11 ) }
    dend_4 { pt3dadd( -8.71421, -66.5654, 31.6363, 1.11 ) }
    dend_4 { pt3dadd( -8.57399, -67.4504, 32.3191, 1.11 ) }
    dend_4 { pt3dadd( -8.35732, -68.6922, 33.2846, 1.11 ) }
    dend_4 { pt3dadd( -8.16131, -69.5251, 33.9123, 1.39 ) }
    dend_4 { pt3dadd( -7.86424, -70.3749, 34.4111, 1.39 ) }
    dend_4 { pt3dadd( -7.63724, -71.0237, 34.7181, 1.11 ) }
    dend_4 { pt3dadd( -7.11738, -72.677, 35.0155, 1.39 ) }
    dend_4 { pt3dadd( -6.62996, -78.7267, 36.7924, 1.39 ) }
    dend_4 { pt3dadd( -6.27235, -84.6537, 38.995, 1.39 ) }
    dend_4 { pt3dadd( -5.57671, -90.5028, 41.3269, 1.39 ) }
    dend_4 { pt3dadd( -5.48437, -96.3881, 43.6798, 1.39 ) }
    dend_4 { pt3dadd( -5.58431, -102.387, 45.7081, 1.39 ) }
    dend_4 { pt3dadd( -4.49118, -108.398, 47.3353, 1.39 ) }
    dend_4 { pt3dadd( -3.06669, -114.504, 48.1108, 1.39 ) }
    dend_4 { pt3dadd( -0.44386, -120.283, 48.1562, 1.39 ) }
    dend_4 { pt3dadd( 2.04848, -126.101, 47.6435, 1.39 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 21.5154, 34.8693, -82.0794, 0.55 ) }
    dend_39 { pt3dadd( 22.9857, 38.7972, -82.6462, 0.55 ) }
    dend_39 { pt3dadd( 25.8165, 45.0953, -82.6321, 0.55 ) }
    dend_39 { pt3dadd( 30.8333, 55.6588, -82.7956, 0.55 ) }
    dend_39 { pt3dadd( 32.0456, 58.3033, -83.21, 0.55 ) }
    dend_39 { pt3dadd( 40.784, 77.8876, -87.577, 0.55 ) }
    dend_39 { pt3dadd( 45.3836, 89.1843, -90.7834, 0.55 ) }
    dend_39 { pt3dadd( 45.8603, 90.2961, -91.1255, 0.83 ) }
    dend_39 { pt3dadd( 46.9327, 92.7418, -91.8729, 0.28 ) }
    dend_39 { pt3dadd( 49.1665, 98.1035, -95.819, 0.28 ) }
    dend_39 { pt3dadd( 49.523, 99.0534, -96.8433, 0.28 ) }
    dend_39 { pt3dadd( 50.3613, 101.257, -99.705, 0.28 ) }
    dend_39 { pt3dadd( 51.1288, 103.363, -102.359, 0.28 ) }
    dend_39 { pt3dadd( 52.2082, 105.957, -106.006, 0.28 ) }
    dend_39 { pt3dadd( 56.0042, 113.427, -117.093, 0.28 ) }
    dend_39 { pt3dadd( 56.3093, 113.9, -117.824, 0.83 ) }
    dend_39 { pt3dadd( 57.1476, 114.885, -119.953, 0.28 ) }
    dend_39 { pt3dadd( 57.5383, 115.229, -120.863, 0.83 ) }
    dend_39 { pt3dadd( 63.5616, 119.3, -134.516, 0.28 ) }
    dend_39 { pt3dadd( 64.6797, 119.879, -136.989, 0.28 ) }
    dend_39 { pt3dadd( 65.8937, 120.22, -139.633, 0.28 ) }
    dend_39 { pt3dadd( 72.9313, 121.837, -155.696, 0.28 ) }
    dend_39 { pt3dadd( 77.5345, 122.571, -166.972, 0.28 ) }
    dend_39 { pt3dadd( 78.1919, 122.572, -168.553, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 68/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 21.5154, 34.8693, -82.0794, 0.55 ) }
    dend_38 { pt3dadd( 28.9198, 37.2522, -89.8109, 0.55 ) }
    dend_38 { pt3dadd( 31.075, 37.9352, -92.5384, 1.11 ) }
    dend_38 { pt3dadd( 37.257, 39.7684, -100.068, 0.55 ) }
    dend_38 { pt3dadd( 38.6936, 40.1853, -101.709, 0.55 ) }
    dend_38 { pt3dadd( 39.9985, 40.5562, -103.236, 0.55 ) }
    dend_38 { pt3dadd( 42.9944, 41.3731, -106.526, 1.11 ) }
    dend_38 { pt3dadd( 54.5163, 44.4847, -118.191, 0.28 ) }
    dend_38 { pt3dadd( 57.5178, 45.183, -121.038, 0.28 ) }
    dend_38 { pt3dadd( 62.0306, 46.0859, -124.708, 0.55 ) }
    dend_38 { pt3dadd( 69.7318, 47.3289, -131.143, 0.28 ) }
    dend_38 { pt3dadd( 74.831, 48.0981, -135.211, 0.28 ) }
    dend_38 { pt3dadd( 77.0731, 48.4436, -136.817, 0.55 ) }
    dend_38 { pt3dadd( 79.7587, 48.9199, -138.254, 0.55 ) }
    dend_38 { pt3dadd( 85.6406, 50.1623, -141.342, 0.28 ) }
    dend_38 { pt3dadd( 95.2283, 52.5357, -145.841, 0.28 ) }
    dend_38 { pt3dadd( 101.266, 54.3922, -149.486, 0.28 ) }
    dend_38 { pt3dadd( 103.909, 55.2958, -151.421, 0.55 ) }
    dend_38 { pt3dadd( 107.958, 56.7182, -154.54, 0.28 ) }
    dend_38 { pt3dadd( 111.251, 57.9018, -157.18, 0.55 ) }
    dend_38 { pt3dadd( 114.087, 58.9763, -159.553, 0.55 ) }
    dend_38 { pt3dadd( 127.415, 63.9223, -170.19, 0.28 ) }
    dend_38 { pt3dadd( 134.066, 66.2023, -176.419, 0.28 ) }
    dend_38 { pt3dadd( 136.514, 66.953, -178.939, 0.28 ) }
    dend_38 { pt3dadd( 138.336, 67.4435, -181.01, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 93/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -97.998, 46.3104, -31.9127, 0.28 ) }
    dend_36 { pt3dadd( -98.5385, 47.4291, -29.5981, 0.28 ) }
    dend_36 { pt3dadd( -99.1604, 48.722, -26.4129, 0.28 ) }
    dend_36 { pt3dadd( -99.5836, 49.5633, -24.4319, 0.55 ) }
    dend_36 { pt3dadd( -99.7853, 49.9142, -23.7272, 0.28 ) }
    dend_36 { pt3dadd( -102.54, 54.7077, -14.1015, 0.28 ) }
    dend_36 { pt3dadd( -103.054, 55.6015, -12.3065, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( -105.027, 59.0862, -3.95577, 0.28 ) }
    dend_36 { pt3dadd( -105.329, 59.71, -2.11694, 0.83 ) }
    dend_36 { pt3dadd( -106.8, 63.3901, 10.6608, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 3/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -97.998, 46.3104, -31.9127, 0.55 ) }
    dend_35 { pt3dadd( -102.79, 46.3258, -38.431, 0.55 ) }
    dend_35 { pt3dadd( -105.644, 46.2977, -41.8882, 0.55 ) }
    dend_35 { pt3dadd( -108.268, 46.3476, -45.4129, 0.55 ) }
    dend_35 { pt3dadd( -109.994, 46.4287, -47.6624, 0.55 ) }
    dend_35 { pt3dadd( -113.636, 46.6022, -52.0917, 0.55 ) }
    dend_35 { pt3dadd( -116.096, 46.6818, -54.6971, 0.28 ) }
    dend_35 { pt3dadd( -117.282, 46.6967, -55.6888, 0.83 ) }
    dend_35 { pt3dadd( -128.998, 46.5476, -64.3147, 0.83 ) }
    dend_35 { pt3dadd( -131.128, 46.4684, -65.7007, 0.83 ) }
    dend_35 { pt3dadd( -134.06, 46.2982, -67.2654, 0.83 ) }
    dend_35 { pt3dadd( -140.142, 45.7717, -69.7684, 0.83 ) }
    dend_35 { pt3dadd( -142.772, 45.4563, -70.667, 0.28 ) }
    dend_35 { pt3dadd( -146.318, 44.9844, -71.4637, 0.28 ) }
    dend_35 { pt3dadd( -148.327, 44.6776, -71.5743, 0.55 ) }
    dend_35 { pt3dadd( -150.625, 44.2993, -71.7698, 0.28 ) }
    dend_35 { pt3dadd( -153.41, 43.8714, -72.0522, 0.28 ) }
    dend_35 { pt3dadd( -156.525, 43.4533, -72.4317, 0.28 ) }
    dend_35 { pt3dadd( -160.249, 43.0876, -72.8428, 0.28 ) }
    dend_35 { pt3dadd( -161.516, 43.0522, -72.9188, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
    ModelViewParmSubset_2 = new SectionList()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_20, dend_17, dend_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_20, dend_17, dend_0, axon_0, dend_24, dend_21, dend_19, dend_18, dend_14, dend_1, axon_1, dend_32, dend_25, dend_23, dend_22, dend_16, dend_15, dend_9, dend_2, dend_40, dend_33, dend_29, dend_26, dend_11, dend_10, dend_6, dend_3, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_28, dend_27, dend_13, dend_12, dend_8, dend_7, dend_5, dend_4, dend_39, dend_38, dend_36, dend_35]}
    ModelViewParmSubset_5 = new SectionList()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_17 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_21 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_23 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_15 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_9 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_40 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_29 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_31 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_30 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_28 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_27 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_8 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_7 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_4 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_39 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_38 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_36 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_20 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_2 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_25 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_32 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_26 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_19 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_16 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_18 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_10 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_42 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_41 OneSecGrp_SectionRef_30.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, axon_1, axon_1, dend_32, dend_32, dend_32, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 3
    dend_21 nseg = 3
    dend_14 nseg = 3
    dend_23 nseg = 11
    dend_15 nseg = 9
    dend_9 nseg = 3
    dend_40 nseg = 11
    dend_29 nseg = 7
    dend_11 nseg = 7
    dend_37 nseg = 3
    dend_34 nseg = 7
    dend_31 nseg = 3
    dend_30 nseg = 3
    dend_28 nseg = 11
    dend_27 nseg = 11
    dend_8 nseg = 3
    dend_7 nseg = 7
    dend_4 nseg = 5
    dend_39 nseg = 7
    dend_38 nseg = 7
    dend_36 nseg = 3
    dend_35 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_BTC_41f7db5b85_0_0


