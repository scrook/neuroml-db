// Cell: dNAC222_L23_LBC_df15689e81_0_0
/*
{
  "id" : "dNAC222_L23_LBC_df15689e81_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.56398, 12.1856, -3.45915, 3.25378", "-2.26706, 10.9606, -3.11058, 4.92468", "-1.97014, 9.73565, -2.76202, 6.49677", "-1.67322, 8.51066, -2.41345, 7.93038", "-1.3763, 7.28567, -2.06488, 8.78195", "-1.07938, 6.06068, -1.71632, 9.51699", "-0.782463, 4.83569, -1.36775, 10.3263", "-0.485543, 3.6107, -1.01918, 11.1493", "-0.188623, 2.38571, -0.670618, 11.9011", "0.108296, 1.16072, -0.322051, 12.0825", "0.405216, -0.0642733, 0.026515, 12.1848", "0.702136, -1.28926, 0.375081, 12.2225", "0.999056, -2.51425, 0.723648, 11.698", "1.29598, -3.73924, 1.07221, 11.5084", "1.5929, -4.96423, 1.42078, 11.8466", "1.88982, -6.18922, 1.76935, 11.6542", "2.18674, -7.41421, 2.11791, 11.2017", "2.48366, -8.6392, 2.46648, 10.0847", "2.78057, -9.86419, 2.81505, 8.25314", "3.07749, -11.0892, 3.16361, 6.3237", "3.37441, -12.3142, 3.51218, 3.70524" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "2.77471, -11.1177, 13.4707, 3.61", "2.65045, -12.3363, 13.3326, 3.61", "2.29095, -15.862, 12.9331, 3.06", "1.99357, -18.7784, 12.6026, 3.06", "1.6985, -21.6723, 12.2747, 2.78", "1.42489, -24.3556, 11.9707, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-4.14529, 11.9023, -7.22925, 2.5", "-4.94408, 12.9548, -6.40572, 2.5", "-8.94608, 17.2422, -3.04841, 1.39", "-10.2659, 18.6561, -1.94121, 1.11", "-11.9282, 20.4369, -0.546698, 0.83", "-12.5807, 21.1359, 6.67006E-4, 0.83", "-13.8736, 22.5209, 1.08528, 1.39", "-15.0529, 23.5679, 1.8617, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.59471, -1.78766, -11.6093, 3.33", "6.87057, -1.84078, -11.5667, 3.33", "8.60991, -2.17569, -11.2983, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.40529, -1.50766, -18.0493, 1.11", "-3.69219, -1.99933, -17.559, 1.11", "-6.85711, -2.55333, -17.3421, 1.11", "-8.70648, -2.95238, -17.2392, 1.11", "-11.4791, -3.83388, -17.0171, 0.83", "-14.0032, -4.75972, -17.1581, 0.83", "-17.2067, -6.01509, -17.6257, 1.11", "-20.1877, -7.33102, -18.5305, 0.83", "-22.9071, -8.53246, -19.6574, 0.83", "-26.9265, -10.0174, -21.5298, 0.83", "-32.8909, -11.8419, -24.4879, 1.11", "-34.6325, -12.3256, -25.4102, 0.56", "-36.8754, -12.8833, -26.5801, 1.11", "-39.378, -13.3397, -27.8442, 0.56", "-42.2307, -13.4613, -29.2951, 0.56", "-43.6156, -13.3249, -29.8889, 0.56", "-46.0998, -12.8943, -30.4431, 1.11", "-48.0532, -12.3935, -30.877, 0.28", "-49.0209, -12.1002, -31.0834, 0.28", "-51.3053, -11.3539, -31.7486, 1.11", "-52.9521, -10.8292, -32.3533, 0.28", "-54.6476, -10.267, -33.0261, 0.83", "-57.675, -9.16196, -34.3647, 0.56", "-59.8261, -8.35835, -35.4225, 0.56", "-62.273, -7.50433, -36.7538, 0.83", "-63.8777, -6.98681, -37.7646, 0.28", "-65.6542, -6.40598, -39.0361, 0.56", "-67.01, -5.96432, -40.2844, 0.28", "-67.9732, -5.65117, -41.3105, 1.39", "-68.3093, -5.52751, -41.7385, 1.39", "-69.4501, -5.07816, -43.3116, 0.28", "-70.2742, -4.79046, -44.4906, 1.39", "-73.1828, -4.04644, -48.7807, 0.28", "-73.8073, -3.97425, -49.5904, 0.28", "-75.1497, -3.95661, -51.1319, 0.28", "-75.3358, -3.96469, -51.3063, 0.56", "-77.6129, -4.15831, -52.96, 0.28", "-79.0625, -4.36372, -53.7863, 1.67", "-81.3989, -4.77804, -54.7884, 0.28", "-82.6446, -5.01645, -55.2848, 0.56", "-85.9306, -5.70801, -56.502, 0.28", "-87.3294, -6.0163, -57.0638, 0.83", "-90.4055, -6.73092, -58.3249, 0.28", "-91.3249, -6.98194, -58.7434, 0.83", "-92.7169, -7.41095, -59.5217, 0.28", "-93.6461, -7.68144, -60.114, 0.56", "-96.5891, -8.51511, -62.13, 0.28", "-97.3379, -8.6593, -62.6217, 1.67", "-100.637, -9.0541, -64.61, 0.28", "-103.044, -9.23275, -65.9106, 0.83", "-106.739, -9.33995, -67.6796, 0.28", "-107.67, -9.31068, -68.0718, 0.83", "-111.425, -8.9967, -69.3562, 0.28", "-112.879, -8.81675, -69.8176, 0.83", "-114.729, -8.47504, -70.288, 0.28", "-115.079, -8.40636, -70.3455, 0.56", "-118.684, -7.73167, -70.7091, 0.28", "-120.177, -7.46928, -70.8754, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.73529, -10.2177, 1.49075, 3.06", "-2.52302, -11.1566, 1.61927, 2.78", "-4.4743, -13.4823, 1.93765, 2.78", "-6.22224, -15.5657, 2.22285, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990524732351
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.37441, -12.3142, 3.51218, 0.83", "6.90787, -26.8921, 3.51218, 0.83", "10.4413, -41.47, 3.51218, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "1.42489, -24.3556, 11.9707, 0.83", "-2.21012, -28.1155, 6.83842, 0.83", "-3.60982, -29.5634, 4.8622, 1.11", "-5.5176, -31.5367, 2.16862, 1.39" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "1.42489, -24.3556, 11.9707, 1.67", "0.840301, -26.6356, 13.9317, 1.67", "0.307591, -28.7133, 15.7187, 1.67", "-0.19522, -30.6743, 17.4054, 1.39", "-0.653922, -32.4634, 18.9442, 1.39", "-0.873322, -33.3191, 19.6802, 1.67" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-15.0529, 23.5679, 1.8617, 0.56", "-17.7418, 22.0418, 3.8754, 0.56", "-19.523, 21.2606, 5.34435, 0.56", "-21.3848, 20.7054, 6.9286, 0.56", "-23.5693, 20.2464, 8.78385, 0.56", "-24.8999, 19.968, 9.91901, 0.56", "-27.9795, 19.1964, 12.3433, 0.56", "-30.1563, 18.8778, 14.0225, 0.83", "-32.2303, 18.7182, 15.6873, 0.83", "-33.5597, 18.6494, 16.7063, 0.83", "-36.1948, 18.3641, 18.7034, 0.83", "-39.0684, 17.9344, 20.8548, 0.83", "-43.4812, 16.9254, 24.1321, 0.83", "-46.7294, 15.9665, 26.5584, 0.83", "-49.2453, 15.1122, 28.4652, 0.56", "-52.8166, 13.7278, 31.0667, 0.56", "-53.9782, 13.2562, 31.9262, 0.56", "-55.8349, 12.474, 33.3993, 0.56", "-56.707, 12.0414, 34.111, 0.56", "-58.2742, 11.2365, 35.4149, 0.83", "-61.207, 9.89228, 37.943, 0.56", "-63.053, 9.19498, 39.4743, 0.56", "-66.0297, 8.00087, 42.1284, 0.56", "-68.957, 6.93935, 44.8788, 0.56" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-15.0529, 23.5679, 1.8617, 0.56", "-17.3602, 23.0731, 2.49346, 0.56", "-18.7319, 22.9974, 2.75629, 0.56", "-22.4672, 22.7913, 3.47203, 0.83", "-25.2939, 22.6354, 4.01366, 0.83", "-27.2145, 22.5295, 4.38167, 0.83", "-29.0627, 22.4275, 4.73581, 0.83", "-32.1716, 22.6212, 5.20644, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "8.60991, -2.17569, -11.2983, 0.83", "12.2829, -2.32628, -13.5103, 0.83", "16.284, -1.88563, -15.7245, 0.83", "20.0337, -0.912979, -17.5728, 0.83", "23.5767, 0.379189, -19.1103, 0.83", "27.6596, 2.11399, -20.6861, 0.83", "34.1443, 4.95658, -22.9401, 0.56", "38.4163, 7.23992, -24.1815, 0.83", "42.3358, 9.90267, -25.1716, 0.83", "43.9487, 11.2156, -25.4102, 0.56", "45.1783, 12.3482, -25.4081, 0.56", "46.5096, 14.0287, -25.1517, 0.56", "47.7905, 16.7855, -23.8861, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.60991, -2.17569, -11.2983, 1.94", "10.8484, -3.72563, -12.7728, 1.94", "14.2681, -6.0935, -15.0255, 1.94", "16.2112, -7.43888, -16.3054, 1.94", "18.4159, -8.96546, -17.7577, 1.94" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.22224, -15.5657, 2.22285, 1.11", "-4.53808, -18.2731, 5.81597, 1.11", "-3.27518, -19.7789, 8.0482, 1.11", "0.560518, -23.3374, 14.0366, 1.11", "2.24032, -24.765, 16.581, 1.11", "3.93918, -26.2087, 19.1543, 0.83", "5.57831, -27.6017, 21.6372, 0.83", "8.58306, -29.6505, 25.6897, 0.83", "11.4351, -31.3499, 29.2268, 0.83", "13.8953, -32.4878, 31.9116, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.22224, -15.5657, 2.22285, 1.39", "-10.587, -15.0358, 5.23845, 1.39", "-12.9709, -14.7463, 6.88555, 1.39", "-14.1352, -14.605, 7.68991, 1.39", "-16.6242, -14.3028, 9.40961, 1.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.4413, -41.47, 3.51218, 0.28", "13.9748, -56.0478, 3.51218, 0.28", "17.5083, -70.6257, 3.51218, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-5.5176, -31.5367, 2.16862, 0.83", "-4.94241, -32.6945, 0.982516, 0.83", "-4.45693, -34.0377, -0.287691, 0.83", "-4.20963, -35.1751, -1.28648, 0.83", "-3.77694, -37.8885, -3.6297, 0.83", "-3.14117, -42.4671, -7.36119, 0.56", "-3.03272, -43.6986, -8.26058, 0.56", "-3.05348, -45.1744, -9.29181, 1.11", "-3.08837, -46.9304, -10.4779, 0.56", "-2.99963, -48.3825, -11.5131, 0.56", "-2.74876, -49.7893, -12.4759, 0.56", "-2.19589, -51.8189, -13.698, 0.83", "-1.3515, -53.771, -15.0325, 0.56", "-0.239147, -55.7821, -16.5466, 0.56", "1.21956, -58.205, -18.4359, 1.11", "1.8197, -59.2746, -19.3454, 0.56", "2.48155, -60.5836, -20.6693, 0.56", "3.00109, -61.8249, -22.05, 0.56", "3.23498, -62.8655, -23.1489, 0.28", "3.24843, -63.7794, -24.1164, 0.83", "3.01516, -65.8888, -26.262, 0.28", "2.74227, -67.7059, -27.9172, 1.39", "2.282, -70.1267, -29.8844, 0.28", "2.0746, -71.3094, -30.7977, 0.56", "1.83738, -73.3459, -32.1746, 0.28", "1.79681, -74.497, -32.8489, 2.22", "1.94185, -77.7497, -34.2653, 0.28", "2.12767, -79.1774, -34.77, 0.56", "2.53305, -80.906, -35.3429, 0.56", "2.98884, -82.2786, -35.7988, 0.28", "3.42104, -83.3562, -36.1754, 0.83", "4.14891, -85.1173, -36.8735, 0.28", "4.67325, -86.4218, -37.4211, 0.83", "5.50125, -88.7298, -38.2541, 0.28", "5.77013, -89.6831, -38.564, 1.39", "6.5714, -92.2103, -39.2115, 0.28", "7.04603, -93.63, -39.4826, 0.28", "7.48599, -94.7789, -39.6977, 1.94", "8.43194, -96.9798, -40.0678, 0.28", "8.79551, -97.7363, -40.2164, 1.11", "11.1142, -102.157, -41.4251, 0.28", "11.4629, -102.802, -41.6254, 0.83", "13.0015, -105.666, -42.6571, 0.28", "13.192, -106.062, -42.8168, 0.83", "14.5888, -109.311, -44.2531, 0.28", "15.1976, -111.035, -45.0328, 0.56", "15.7993, -113.495, -46.1383, 0.28", "15.9755, -114.485, -46.5235, 1.39", "16.4305, -117.764, -47.6443, 0.28", "16.5185, -118.479, -47.8702, 0.83", "16.9285, -121.883, -49.2137, 0.28", "17.0879, -123.072, -49.763, 1.11", "17.4909, -125.573, -51.2517, 0.28", "17.7469, -126.979, -52.2017, 0.28", "17.9048, -127.771, -52.7878, 1.11", "18.859, -132.668, -56.7227, 0.28", "18.9464, -133.144, -57.13, 1.94", "19.594, -136.309, -59.6714, 0.28", "19.6318, -136.478, -59.7944, 0.56", "20.0229, -138.502, -61.1174, 0.28", "20.2561, -139.909, -61.9381, 1.11", "20.5313, -142.743, -63.1739, 0.28", "20.7392, -146.862, -64.8257, 0.28", "20.7209, -148.364, -65.3513, 1.39", "20.5628, -150.918, -66.1528, 0.28", "20.4314, -151.919, -66.4434, 0.83", "19.793, -155.065, -67.0939, 0.28", "19.6411, -155.5, -67.1708, 0.56", "18.937, -156.825, -67.3988, 0.28", "18.4916, -157.574, -67.5135, 0.83", "17.4688, -159.261, -67.7044, 0.28", "16.0628, -161.589, -68.0234, 1.11", "14.5484, -164.134, -68.4471, 0.28", "14.3209, -164.533, -68.538, 0.56", "13.8887, -165.34, -68.7218, 0.28", "13.6985, -165.691, -68.8658, 0.56", "13.2263, -166.511, -69.3077, 0.28", "13.0104, -166.852, -69.5416, 0.56", "12.073, -168.343, -70.5056, 0.28", "11.3356, -169.652, -71.4798, 1.11", "9.77206, -172.635, -73.9892, 0.28", "9.55373, -173.105, -74.4034, 0.56", "8.53154, -175.596, -76.6482, 0.28", "8.15021, -176.655, -77.6049, 1.39", "7.31642, -179.451, -79.9833, 0.28", "7.00773, -180.956, -81.2791, 1.39", "6.884, -182.229, -82.2556, 0.28", "6.87294, -182.549, -82.5095, 0.83", "6.97868, -183.991, -83.7253, 0.28", "7.10395, -185.469, -84.9494, 0.83", "7.25889, -187.215, -85.8538, 0.28", "7.36235, -187.917, -86.1191, 0.56" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-5.5176, -31.5367, 2.16862, 0.56", "-5.58471, -33.2377, 0.409003, 0.56", "-5.61869, -33.7513, -0.122413, 0.28", "-5.72465, -34.7419, -1.15878, 0.83", "-6.03218, -36.3279, -2.74064, 0.56", "-6.513, -38.0428, -4.45771, 1.11", "-8.26283, -43.8351, -10.2657, 0.83", "-9.07512, -46.2801, -12.8465, 0.28", "-9.25636, -46.7991, -13.4778, 0.28", "-9.79163, -48.3642, -15.6396, 0.83", "-10.0896, -49.4855, -17.5099, 0.56", "-10.2995, -50.3319, -19.0232, 0.56", "-10.483, -51.0969, -20.4162, 1.39", "-11.2945, -54.3217, -26.6047, 0.28", "-11.5298, -55.2252, -28.3096, 1.39", "-12.1836, -57.529, -32.5975, 0.56", "-12.6061, -58.7528, -34.7887, 0.56", "-13.3228, -60.3918, -37.6136, 1.39", "-14.32, -62.3532, -40.773, 0.28", "-14.6139, -62.8378, -41.3787, 0.83", "-15.7626, -64.7477, -43.3283, 0.28", "-15.9079, -65.013, -43.528, 0.56", "-17.0035, -67.3703, -44.9727, 0.28", "-17.3806, -68.3593, -45.4889, 1.39", "-18.8364, -72.8111, -47.4283, 0.28", "-19.0695, -73.7914, -47.9057, 1.39", "-19.4816, -76.3122, -49.1872, 0.28", "-19.5885, -77.2447, -49.7412, 0.83", "-19.7935, -79.9996, -51.5316, 0.28", "-19.8492, -82.0084, -52.9775, 1.11", "-19.7995, -86.9771, -56.9273, 0.28", "-19.796, -87.267, -57.147, 0.56", "-19.7875, -92.6508, -61.0125, 0.28", "-19.8077, -93.1407, -61.3116, 0.28", "-20.0452, -95.8295, -62.6401, 0.28", "-20.2214, -97.224, -63.226, 0.56", "-20.7064, -99.814, -63.913, 0.28", "-20.9241, -100.929, -64.1904, 1.39", "-21.5472, -104.13, -64.8112, 0.28", "-21.6828, -104.838, -65.0003, 0.83", "-22.218, -107.286, -65.9831, 0.28", "-22.3042, -107.725, -66.2528, 0.83", "-22.6713, -109.881, -67.9503, 0.28", "-22.7269, -110.268, -68.2972, 0.56", "-23.0147, -112.259, -70.1325, 0.28", "-23.3353, -114.401, -71.9847, 0.56", "-23.9059, -117.648, -74.6, 0.28", "-24.0438, -118.416, -75.1373, 0.56", "-24.411, -120.609, -76.3646, 0.28", "-24.6248, -123.303, -77.722, 1.11", "-24.5769, -124.941, -78.349, 0.28", "-24.4142, -125.636, -78.5397, 0.56", "-23.929, -126.834, -78.813, 0.28", "-23.6375, -127.505, -78.9264, 0.56", "-21.9099, -131.442, -79.4732, 0.28", "-21.6371, -132.125, -79.6054, 0.56", "-20.221, -136.061, -80.3296, 0.28", "-19.951, -136.951, -80.4607, 0.56", "-18.7847, -142.067, -80.9082, 0.28", "-18.6508, -143.143, -81.0035, 1.11", "-18.5856, -146.153, -81.0824, 0.28", "-18.6137, -147.241, -81.1316, 0.83", "-18.8365, -150.077, -81.3548, 0.28", "-19.0245, -151.947, -81.5093, 1.11", "-19.6371, -156.99, -81.9649, 0.28", "-20.0013, -159.886, -82.1314, 1.11", "-20.341, -162.355, -82.1933, 0.28", "-20.4936, -163.337, -82.2107, 0.56", "-21.128, -167.298, -82.2737, 0.28", "-21.3568, -168.613, -82.2399, 1.11", "-21.9538, -171.458, -81.952, 0.28", "-22.2051, -172.367, -81.8375, 0.56", "-23.5688, -176.41, -81.0734, 0.28", "-23.931, -177.413, -80.8525, 0.56", "-24.7662, -179.445, -80.3468, 0.28", "-25.1243, -180.289, -80.1081, 0.56", "-26.3733, -182.984, -79.2583, 0.28", "-26.676, -183.576, -79.0424, 1.11" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-0.873322, -33.3191, 19.6802, 1.11", "-3.6317, -36.6292, 17.5743, 1.11", "-5.70064, -39.8264, 16.6843, 1.11", "-7.6205, -43.8651, 16.4053, 1.11", "-8.61081, -46.8574, 16.5902, 1.11", "-9.14915, -49.1947, 16.8249, 1.11", "-9.72703, -53.7831, 17.1707, 1.11", "-9.42405, -58.9163, 17.599, 1.11", "-9.0339, -61.0783, 17.889, 0.83", "-8.59458, -63.0904, 18.3185, 1.11", "-8.22352, -64.7377, 18.6917, 1.11", "-7.62295, -67.9333, 19.3005, 0.83", "-7.38861, -69.9251, 19.5124, 0.83", "-7.20546, -71.7761, 19.4072, 1.11", "-7.11503, -73.7591, 19.2471, 0.83", "-7.0545, -74.8129, 19.1557, 1.11", "-6.93189, -78.2516, 18.8455, 1.11", "-7.08136, -79.8121, 18.6775, 1.11", "-7.78743, -83.5824, 17.9448, 0.83", "-8.26961, -85.3677, 17.4964, 0.83", "-8.80586, -87.2141, 16.9406, 0.83", "-9.55566, -89.5462, 16.1184, 0.83", "-11.232, -93.8791, 14.3391, 0.83", "-12.5231, -96.7332, 13.1184, 0.83", "-13.7466, -99.1402, 12.1445, 0.56", "-14.8314, -101.365, 11.2573, 0.83", "-15.765, -103.462, 10.4329, 0.56", "-16.5285, -105.599, 9.59322, 0.83", "-16.9752, -107.275, 8.91063, 0.56", "-17.3206, -108.422, 8.42309, 0.83", "-18.0377, -110.231, 7.6039, 0.83", "-18.9752, -112.244, 6.68194, 0.56", "-19.1685, -112.704, 6.53802, 0.56", "-19.7904, -114.504, 6.26421, 0.83", "-20.0218, -115.253, 6.24399, 0.83", "-20.3584, -117.263, 6.23595, 0.56", "-20.3989, -118.566, 6.26957, 0.83", "-20.2348, -121.319, 6.38012, 0.83", "-20.2171, -123.512, 6.51319, 0.83", "-20.2869, -125.155, 6.62252, 0.83", "-20.6531, -129.44, 6.87885, 0.83", "-20.7632, -130.483, 6.93521, 0.56", "-20.972, -132.056, 6.97015, 0.56", "-21.6144, -136.486, 6.73876, 0.83", "-21.92, -138.481, 6.50011, 0.56", "-22.1123, -139.522, 6.29616, 0.83", "-22.6442, -141.652, 5.9081, 0.56", "-23.2948, -145.028, 5.30308, 0.83", "-23.5278, -147.264, 4.91368, 0.83", "-23.6045, -149.23, 4.60325, 0.56", "-23.6246, -151.732, 4.32894, 1.11", "-23.5773, -154.926, 3.69656, 0.56", "-23.5806, -156.526, 3.34179, 0.56", "-23.5562, -159.284, 2.73699, 0.83", "-23.544, -161.094, 2.38527, 0.56", "-23.4618, -164.645, 1.74241, 0.83", "-23.3911, -170.503, 0.644579, 0.56", "-23.5011, -173.005, 0.0196796, 0.56", "-23.648, -174.133, -0.267971, 0.56", "-24.1287, -176.994, -0.93414, 0.28", "-24.5723, -179.276, -1.37436, 0.56", "-25.0296, -181.044, -1.47704, 0.56", "-25.4296, -183.384, -1.4367, 0.83", "-25.4674, -184.444, -1.49633, 0.28", "-25.3275, -186.532, -1.65281, 0.28", "-25.1279, -188.092, -1.82115, 0.56", "-24.7132, -191.108, -2.27952, 1.67", "-24.1117, -195.053, -3.00373, 0.83", "-23.9136, -196.575, -3.32463, 0.83", "-23.8195, -198.863, -3.91995, 0.56", "-24.0234, -200.382, -4.36863, 0.56", "-24.3162, -201.365, -4.67919, 0.28", "-24.7458, -202.401, -4.98267, 0.28", "-25.796, -204.297, -5.14236, 0.83", "-26.6071, -205.758, -5.0873, 0.56", "-28.2726, -208.822, -4.7998, 0.56", "-28.8288, -209.986, -4.62335, 0.56", "-29.4624, -211.736, -4.3567, 0.28", "-30.6193, -215.793, -3.65941, 2.22", "-31.3933, -219.095, -3.11894, 0.56", "-31.9102, -222.22, -2.6947, 0.56", "-32.0661, -223.67, -2.57771, 0.56", "-32.5887, -227.625, -2.53735, 0.56", "-33.1006, -230.666, -2.69609, 0.56", "-33.357, -232.596, -2.90793, 0.56", "-33.5241, -233.918, -3.03604, 0.28", "-33.9325, -236.656, -3.22859, 0.56", "-34.4577, -239.372, -3.39754, 0.56", "-35.0128, -242.04, -3.48849, 2.5", "-35.399, -244.914, -3.55388, 0.56", "-35.5834, -247.15, -3.47777, 0.56", "-35.7244, -249.21, -3.35095, 0.28", "-35.7979, -250.962, -3.24153, 0.56", "-35.7774, -252.653, -3.18838, 0.28", "-35.701, -254.415, -3.22157, 0.56", "-35.633, -256.256, -3.19088, 0.28", "-35.5851, -257.594, -3.1469, 0.28", "-35.6078, -259.892, -3.07441, 0.56", "-35.8642, -262.34, -3.05893, 0.28", "-36.1665, -263.863, -3.09799, 0.83", "-36.7921, -266.32, -3.26114, 0.56", "-37.4512, -268.809, -3.48244, 0.56", "-37.9521, -270.691, -3.61891, 1.11", "-38.4627, -272.69, -3.69165, 0.28", "-38.6388, -273.453, -3.73472, 0.28", "-38.7728, -274.415, -3.81437, 0.83", "-38.8634, -276.162, -3.92845, 0.83", "-38.899, -277.242, -3.88833, 0.28", "-39.0154, -279.443, -3.72628, 0.56", "-39.1601, -282.019, -3.29743, 0.83", "-39.237, -284.948, -2.78792, 0.56", "-39.2915, -286.581, -2.43509, 0.28", "-39.4656, -289.077, -1.87055, 1.11", "-39.7038, -291.149, -1.41483, 0.56", "-40.1956, -293.96, -0.793999, 0.56", "-40.9229, -297.799, 0.101573, 0.83", "-41.2625, -299.961, 0.618265, 0.56", "-41.4067, -301.319, 0.918387, 0.56", "-41.4269, -302.052, 1.06654, 0.56", "-41.4908, -303.857, 1.51264, 1.11" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-0.873322, -33.3191, 19.6802, 1.11", "2.05298, -35.0644, 23.8329, 1.11", "3.30493, -36.0326, 25.9681, 1.11", "4.15678, -36.92, 27.707, 0.83", "5.30462, -38.1158, 30.0502, 0.83", "6.30145, -39.1543, 32.0851, 0.83", "7.72086, -40.633, 34.9827, 1.11", "8.27591, -41.9664, 37.1436, 0.83", "8.49771, -42.8698, 38.6084, 0.83" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-32.1716, 22.6212, 5.20644, 0.56", "-35.4634, 25.8881, 10.2628, 0.56", "-38.3126, 28.2008, 13.3705, 0.56", "-40.3052, 29.5498, 15.1742, 0.56", "-42.0933, 30.5775, 16.6143, 0.83", "-43.8628, 31.427, 18.0793, 0.83", "-46.1445, 32.3274, 20.1168, 0.83", "-48.9348, 32.6983, 22.3285, 0.56", "-50.6124, 32.6064, 23.7816, 0.56", "-51.6693, 32.4744, 24.8127, 0.56", "-54.1389, 32.073, 27.4761, 0.56", "-56.3353, 31.6408, 30.0443, 0.56", "-57.5581, 31.4256, 31.5145, 0.56", "-59.8592, 31.0513, 34.0839, 0.56", "-62.1381, 30.871, 36.3112, 0.56", "-63.9021, 30.8183, 37.711, 0.56", "-64.4034, 30.8377, 37.9889, 0.83", "-66.6461, 31.0298, 38.8421, 0.28", "-67.1773, 31.1273, 39.0266, 0.56", "-69.0339, 31.6592, 39.6853, 0.56", "-70.8276, 32.3638, 40.4171, 0.83", "-72.9637, 33.6051, 41.4883, 0.56", "-74.5731, 34.8947, 42.5616, 1.67", "-76.6355, 37.4207, 44.4562, 0.28", "-77.1795, 38.2519, 45.0146, 0.28", "-77.5834, 39.0924, 45.5074, 0.56", "-78.2156, 41.28, 46.7701, 0.28", "-78.3328, 43.1134, 47.9014, 0.56", "-78.1882, 44.1496, 48.6305, 0.28" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-32.1716, 22.6212, 5.20644, 0.56", "-31.7978, 23.0994, 2.50201, 0.56", "-29.8259, 24.6511, -5.04764, 0.56", "-28.957, 25.2297, -7.99381, 1.39", "-28.4967, 25.5033, -9.43203, 0.28", "-27.8579, 25.9187, -11.7143, 0.28", "-27.6941, 26.0362, -12.3301, 1.11", "-26.4552, 26.9207, -16.3371, 1.11", "-24.4047, 28.6052, -22.5085, 0.56", "-23.5854, 29.4459, -25.0906, 0.83", "-20.2783, 33.4619, -36.3588, 0.28", "-20.0343, 33.7897, -37.2598, 1.11", "-18.2157, 36.4861, -44.5947, 0.28", "-17.9723, 36.9169, -45.7352, 0.56", "-17.103, 38.5747, -49.47, 0.28", "-16.5069, 39.7546, -52.868, 0.56" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "47.7905, 16.7855, -23.8861, 0.56", "49.0655, 17.4148, -24.1658, 0.56", "52.1341, 19.0652, -25.1661, 0.56", "53.9325, 20.0052, -25.6908, 0.56", "54.9795, 20.5381, -26.033, 0.56", "56.666, 21.3853, -26.5908, 0.28", "57.9316, 22.0046, -27.0029, 0.83", "59.4019, 22.7339, -27.5725, 0.28", "61.5852, 23.8516, -28.4333, 0.83", "63.3491, 24.844, -29.0532, 0.28", "64.815, 25.6767, -29.4895, 0.83", "65.5902, 26.1168, -29.6525, 0.56", "66.794, 26.8167, -29.8736, 0.56", "68.2363, 27.6306, -30.0565, 0.28", "69.6743, 28.439, -30.2495, 0.28", "71.4239, 29.3614, -30.6456, 1.11", "72.4707, 29.9313, -31.062, 0.28", "73.3278, 30.4143, -31.487, 0.56", "75.2609, 31.5537, -32.5803, 0.56", "76.6875, 32.4622, -33.5054, 1.67", "80.0596, 34.8404, -35.9088, 0.56", "82.3768, 36.6191, -37.5289, 0.28", "83.1454, 37.2379, -38.1028, 0.56", "84.3277, 38.2523, -39.0197, 0.28", "84.7618, 38.6818, -39.4034, 0.56", "85.933, 40.0014, -40.327, 0.28", "87.2781, 41.6521, -40.7085, 1.11" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "47.7905, 16.7855, -23.8861, 0.56", "49.6971, 19.5008, -21.8462, 0.56", "52.0209, 22.6426, -19.5589, 0.56", "54.1837, 25.4421, -17.5491, 0.56", "56.3048, 27.9747, -15.7719, 0.83", "58.1212, 30.0159, -14.3119, 0.56", "60.7442, 32.7278, -12.2314, 0.56", "61.875, 33.8141, -11.3702, 0.56", "63.7243, 35.3752, -9.98233, 0.83", "65.5723, 36.7977, -8.74006, 0.56", "67.6715, 38.2116, -7.50065, 0.28", "69.4406, 39.2935, -6.43279, 0.28", "71.6391, 40.5204, -5.2279, 0.83", "74.0548, 41.7913, -3.95587, 0.28", "74.8646, 42.1857, -3.55901, 0.56", "77.0906, 43.3004, -2.56745, 0.28", "77.7263, 43.612, -2.34349, 0.56", "79.8743, 44.5995, -1.82139, 0.28", "80.5574, 44.8476, -1.72577, 0.83", "82.6886, 45.5554, -1.54938, 0.28", "84.0122, 46.0004, -1.46642, 0.28", "84.9833, 46.3328, -1.45189, 0.28", "87.8523, 47.3049, -1.47992, 0.83", "91.2665, 48.4446, -1.60249, 0.28", "92.8511, 48.9611, -1.68618, 0.56", "95.975, 49.9725, -1.8919, 0.56", "98.9905, 50.9048, -2.04586, 0.56", "101.575, 51.7456, -2.16073, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "18.4159, -8.96546, -17.7577, 0.83", "22.7031, -9.37276, -20.3584, 0.83", "28.8132, -9.66178, -23.8841, 0.56", "30.6607, -9.58578, -24.8435, 0.56", "34.7836, -9.34883, -26.9032, 0.56", "38.5274, -9.17388, -28.7051, 0.83", "41.3424, -9.01791, -30.0175, 0.56", "45.671, -8.81007, -31.6854, 0.83", "49.3937, -8.27036, -32.9117, 0.56", "52.0312, -7.19672, -33.8924, 0.56", "53.857, -5.96889, -34.5816, 0.28", "54.6539, -5.38884, -34.9332, 0.28", "57.2887, -3.74489, -35.8003, 0.83", "60.682, -2.38235, -36.526, 0.56", "62.7594, -1.78457, -37.0261, 0.56", "66.8573, -1.01327, -37.9825, 1.39", "71.7802, -0.461056, -39.096, 0.56", "77.7855, -0.302451, -40.4472, 0.28", "80.4612, -0.404621, -40.9923, 0.28", "87.3921, -0.979699, -42.4489, 1.94", "91.1145, -1.25239, -43.3837, 0.28", "92.9998, -1.30555, -43.9538, 0.56", "95.8306, -1.1385, -44.9571, 0.28", "98.0935, -0.816399, -46.0062, 0.56", "101.214, -0.213595, -47.5869, 0.28", "103.091, 0.115971, -48.5461, 0.83", "105.779, 0.59623, -50.22, 0.28", "106.518, 0.715371, -50.7165, 0.56", "109.687, 1.19417, -53.0061, 0.28", "111.103, 1.3312, -54.2891, 0.56", "112.532, 1.42163, -55.5986, 0.28", "113.38, 1.46215, -56.3438, 0.83", "114.938, 1.59111, -57.5557, 0.28", "115.884, 1.73104, -58.2336, 0.56", "121.972, 2.97393, -62.2697, 0.28", "123.788, 3.40088, -63.4546, 0.28", "126.201, 4.06725, -65.1786, 0.83", "131.214, 5.61026, -68.9717, 0.28", "133.088, 6.22886, -70.4158, 1.39", "136.308, 7.35319, -72.8342, 0.28", "137.564, 7.80194, -73.7347, 1.11", "142.783, 9.66618, -77.7249, 0.28", "145.095, 10.4936, -79.5693, 0.28", "146.655, 11.0606, -80.893, 0.83", "149.133, 11.911, -83.075, 0.28", "149.656, 12.1365, -83.4939, 0.56", "152.373, 13.574, -85.2185, 0.28", "153.318, 14.1672, -85.6907, 1.11", "156.376, 16.2343, -87.0441, 0.28", "158.209, 17.5508, -87.8839, 0.83", "163.984, 21.8455, -90.7226, 0.28", "167.352, 24.4259, -92.3389, 1.11", "170.453, 26.8745, -93.7316, 0.28", "171.229, 27.4937, -94.0658, 0.83", "175.516, 31.042, -95.8084, 0.28", "178.113, 33.0586, -96.968, 1.39" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "18.4159, -8.96546, -17.7577, 1.11", "16.1029, -12.3629, -19.3593, 1.11", "14.8951, -15.3633, -19.9659, 0.83", "14.8949, -17.4245, -19.8755, 0.83", "15.3877, -20.1486, -19.5226, 0.83", "15.8274, -22.017, -19.2191, 0.83", "16.5553, -24.5867, -18.778, 0.83", "18.5334, -30.017, -17.8376, 0.83", "21.3868, -36.4509, -16.9309, 0.83", "24.1365, -41.9798, -16.4742, 0.83", "25.5291, -44.2786, -16.3759, 0.56", "27.3616, -47.0026, -16.3945, 0.83", "30.0042, -50.9588, -16.7097, 0.56", "32.6233, -54.8045, -17.348, 1.11", "34.9107, -58.0003, -18.149, 0.56", "38.6189, -62.8188, -19.5728, 0.56", "39.762, -64.3256, -20.0135, 0.56", "43.241, -69.1087, -21.5283, 0.56", "46.1388, -73.2167, -22.7991, 0.56", "48.291, -76.5113, -23.9387, 0.56", "48.9174, -77.4603, -24.2801, 0.56", "51.2426, -81.203, -25.7674, 0.83", "53.8268, -85.1549, -27.5424, 0.28", "54.5367, -86.2125, -28.0737, 0.83", "55.2155, -87.5039, -28.7325, 0.28", "56.8219, -90.7825, -30.2557, 0.28", "57.3532, -91.7676, -30.7151, 0.28", "59.1433, -95.5584, -32.3856, 1.11", "59.6868, -96.9384, -32.8422, 0.28", "60.0499, -97.9096, -33.1964, 0.28", "61.1086, -100.719, -34.2148, 1.11", "61.9979, -103.236, -35.0956, 0.28", "63.0134, -106.038, -36.0108, 0.28", "64.0102, -108.886, -36.8287, 0.28", "64.9835, -111.468, -37.518, 1.11", "66.1499, -114.822, -38.3287, 0.28", "66.4601, -115.919, -38.5416, 0.28", "67.2227, -118.508, -38.9861, 0.56", "67.841, -120.361, -39.2169, 0.28", "69.7452, -126.047, -40.1253, 0.28", "70.2952, -127.669, -40.4094, 0.28", "71.6673, -131.644, -41.223, 0.83", "73.0772, -135.682, -42.2685, 0.28", "74.249, -138.816, -43.2229, 1.67", "76.1526, -143.607, -44.87, 0.28", "76.9689, -145.712, -45.7541, 0.56", "77.4373, -146.742, -46.2462, 0.56", "78.7135, -149.28, -47.5686, 0.28", "79.8041, -151.218, -48.6688, 0.28", "81.511, -153.753, -51.2046, 0.83", "83.2444, -156.149, -53.6942, 0.56", "84.3593, -157.558, -55.3492, 0.83", "85.5117, -158.897, -57.0903, 0.28", "87.1587, -160.673, -59.7403, 0.28", "92.4668, -166.348, -71.2859, 0.28" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "13.8953, -32.4878, 31.9116, 0.28", "12.7269, -33.3932, 33.5626, 0.28", "10.3152, -35.2622, 36.9706, 0.28", "9.64885, -35.7786, 37.9122, 0.56", "8.50314, -36.6665, 39.5312, 0.56", "6.8977, -37.9107, 41.7999, 0.56", "5.94337, -38.6502, 43.1484, 0.56" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "13.8953, -32.4878, 31.9116, 0.56", "16.8867, -31.7194, 32.9825, 0.56" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-16.6242, -14.3028, 9.40961, 0.83", "-13.9439, -10.9471, 18.656, 0.83", "-13.9083, -10.0557, 19.6515, 0.83", "-14.0097, -8.8464, 20.6689, 0.83", "-14.3595, -6.89479, 22.1179, 0.83", "-15.0059, -3.49347, 24.5911, 0.56", "-15.4057, -1.19652, 26.1862, 0.56", "-16.362, 2.77262, 28.0969, 0.56", "-16.6062, 3.70086, 28.5621, 0.83", "-17.4266, 6.41944, 30.0329, 0.56", "-17.8942, 7.85526, 30.9263, 0.56", "-18.4778, 9.93968, 32.481, 0.83", "-18.8026, 11.3866, 33.5935, 0.56", "-19.215, 13.312, 35.1347, 0.56", "-19.8713, 15.5925, 36.97, 0.28", "-20.5027, 17.5065, 38.3911, 0.28", "-21.0774, 18.9015, 39.3416, 0.28", "-21.6671, 20.3269, 40.2258, 0.28", "-22.209, 21.7714, 41.0356, 0.56", "-23.3093, 24.8116, 42.5396, 0.28", "-24.1258, 27.0583, 43.5507, 0.28", "-25.1887, 29.9149, 44.6846, 0.83", "-27.2358, 35.2199, 46.7499, 0.28", "-27.8725, 36.8856, 47.3416, 0.83", "-28.5062, 38.5732, 47.9022, 0.28", "-29.2369, 40.5603, 48.4409, 0.83", "-30.3627, 43.3958, 49.1632, 0.28", "-30.6836, 44.1511, 49.2998, 0.56", "-31.8809, 46.3853, 49.4168, 0.28", "-32.1533, 46.8492, 49.4119, 0.56", "-33.6285, 49.2881, 49.2082, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-16.6242, -14.3028, 9.40961, 1.11", "-18.5252, -16.1774, 7.00708, 1.11", "-19.1369, -16.7806, 6.23404, 1.11", "-21.1366, -18.7526, 3.70677, 1.11", "-22.6702, -20.265, 1.76849, 1.11", "-24.6454, -22.2128, -0.727798, 1.11", "-25.901, -23.4511, -2.31471, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-41.4908, -303.857, 1.51264, 0.56", "-45.2277, -306.964, 2.62057, 0.56", "-48.7784, -309.918, 3.67328, 0.28", "-50.2487, -311.14, 4.1092, 0.56" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-41.4908, -303.857, 1.51264, 0.56", "-42.1546, -305.783, 2.69349, 0.56", "-42.9857, -308.428, 4.24627, 0.56", "-43.3104, -309.385, 4.75679, 0.83", "-44.1881, -311.507, 5.69296, 0.56", "-44.7177, -312.671, 6.09007, 0.56", "-46.0027, -315.497, 7.05373, 0.56", "-46.4567, -316.33, 7.26181, 0.56", "-47.1522, -317.571, 7.41635, 0.56", "-48.3993, -319.879, 7.70415, 0.28", "-49.0705, -321.245, 7.83408, 0.83" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "8.49771, -42.8698, 38.6084, 0.56", "8.04399, -44.886, 40.5021, 0.56", "7.59483, -46.8647, 42.4648, 0.56", "6.71949, -50.7207, 46.2899, 0.56", "6.41184, -52.0759, 47.6343, 0.56", "6.07696, -53.5512, 49.0977, 0.56", "5.34015, -56.7969, 52.3174, 0.56", "5.0571, -58.3481, 54.0215, 0.56" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "8.49771, -42.8698, 38.6084, 0.83", "11.6717, -48.0259, 35.0448, 0.83", "12.4654, -49.9756, 34.0259, 0.83", "14.1666, -55.1539, 31.7802, 0.56", "14.4925, -56.1787, 31.3936, 0.56", "15.455, -58.979, 30.4419, 0.56", "16.4093, -61.3361, 29.6715, 0.56", "18.3873, -65.9901, 28.6943, 0.56", "19.6888, -68.7971, 27.9468, 0.56", "20.631, -70.6341, 27.4174, 0.56", "21.6973, -72.3497, 26.8933, 0.56", "23.5682, -74.8283, 26.1133, 0.56", "24.1873, -75.5069, 25.8751, 0.56", "28.6873, -79.8782, 24.2531, 0.83", "29.9843, -81.3182, 23.7546, 0.28", "32.0653, -84.2559, 22.6284, 0.83", "32.921, -85.8166, 22.0492, 0.56", "33.7858, -87.8624, 21.367, 0.56", "34.341, -89.3532, 20.9242, 0.28", "35.3791, -92.3605, 20.1638, 0.56", "36.7057, -96.1637, 19.0257, 0.56", "37.5789, -98.4434, 18.3501, 0.56", "38.4468, -100.555, 17.8425, 0.28", "39.0292, -101.774, 17.6283, 0.83", "40.5744, -104.335, 17.4695, 0.28", "41.4018, -105.48, 17.5386, 1.11", "43.4029, -108.056, 18.0406, 0.56", "45.6527, -110.855, 18.7273, 0.56", "46.9983, -112.461, 19.0607, 0.83", "48.3873, -114.234, 19.4492, 0.28", "48.7464, -114.758, 19.5662, 0.56", "49.527, -116.011, 19.7188, 0.28", "50.6811, -117.916, 19.7594, 0.56", "52.8214, -121.216, 19.6085, 1.11", "54.7123, -124.38, 19.2581, 0.28", "55.5398, -125.816, 18.9436, 0.56", "56.8578, -128.19, 18.3304, 0.28", "57.5167, -129.489, 18.0463, 0.56", "57.9218, -130.44, 17.8933, 0.56", "58.773, -132.348, 17.7238, 0.83", "59.6755, -134.217, 17.505, 0.28", "59.9355, -134.833, 17.4566, 0.56", "61.1072, -138.035, 17.311, 0.28", "61.704, -139.703, 17.2829, 1.39", "64.235, -146.052, 17.4223, 0.28", "64.8321, -147.401, 17.513, 0.83", "65.9973, -149.712, 17.7271, 0.28", "66.3081, -150.305, 17.7747, 0.56", "67.6838, -152.838, 17.9356, 0.28", "69.6177, -156.17, 18.2192, 0.28", "70.3794, -157.502, 18.3627, 1.11", "72.0756, -160.374, 18.6142, 0.28", "73.1914, -162.162, 18.7414, 0.28", "73.3639, -162.45, 18.756, 0.56", "74.7399, -164.958, 18.807, 0.28", "75.3544, -166.172, 18.8375, 1.39", "76.7634, -169.004, 18.9551, 0.28", "77.5915, -170.567, 18.9882, 1.39", "78.7388, -172.477, 18.9792, 0.28", "79.4372, -173.607, 18.9434, 0.28", "81.1815, -176.214, 18.796, 0.28", "82.0588, -177.408, 18.7106, 0.83", "84.2499, -180.189, 18.4646, 0.28", "84.5445, -180.548, 18.4306, 0.56", "85.404, -181.544, 18.3453, 0.56", "86.8294, -183.082, 18.2605, 0.28", "87.5328, -183.801, 18.2717, 0.28", "88.4915, -184.909, 18.3619, 1.39", "90.0296, -186.91, 18.6505, 0.28", "90.9267, -188.284, 18.8503, 0.28", "91.4972, -189.328, 18.9997, 0.83", "92.4091, -191.725, 19.4095, 0.28", "93.336, -194.561, 20.0221, 0.28", "93.4171, -194.877, 20.1019, 0.56", "93.8401, -197.011, 20.7654, 0.28", "93.9522, -197.702, 21.001, 0.83", "94.3908, -200.095, 21.7389, 0.28", "94.7866, -202.083, 22.2708, 0.28", "95.1185, -203.374, 22.581, 1.39", "95.6148, -205.59, 22.9596, 0.28", "95.7495, -206.234, 23.0319, 0.83", "96.5627, -210.24, 23.2317, 0.28", "96.8844, -212.325, 23.1948, 0.28", "96.9809, -213.302, 23.1506, 0.83", "97.267, -216.863, 22.8938, 0.28", "97.3446, -217.85, 22.8005, 1.67", "97.6414, -220.916, 22.5217, 0.28", "98.042, -224.514, 22.3563, 0.28", "98.2793, -225.821, 22.3007, 0.56", "98.7253, -227.805, 22.2924, 0.28", "98.9653, -228.982, 22.3436, 0.56", "99.2073, -230.443, 22.4302, 0.28", "99.562, -232.807, 22.6078, 0.56", "100.165, -236.628, 22.9305, 0.28", "100.468, -238.767, 23.1146, 1.11", "101.881, -250.672, 24.1446, 0.28", "102.006, -252.034, 24.2457, 0.83" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "87.2781, 41.6521, -40.7085, 0.28", "89.6501, 46.5687, -44.7501, 0.28", "90.1001, 47.5056, -45.5054, 0.83", "93.1577, 53.9578, -50.0807, 0.28", "93.5681, 54.8278, -50.6419, 0.56", "96.496, 60.9935, -54.8928, 0.28", "97.9963, 63.7692, -56.8678, 0.28", "98.3795, 64.4041, -57.3657, 0.83", "99.9683, 66.6861, -59.3328, 0.28", "100.417, 67.2725, -59.8563, 0.83", "104.564, 72.2518, -64.5709, 0.56", "107.843, 75.8182, -68.102, 0.28", "109.172, 77.1528, -69.491, 0.83", "114.538, 82.4664, -75.1194, 0.56", "117.899, 85.6068, -78.5667, 0.28", "119.373, 86.9223, -79.9595, 0.28", "119.956, 87.3989, -80.4625, 0.56", "124.42, 90.9195, -84.6133, 0.28", "126.091, 92.1382, -86.1117, 0.28", "127.756, 93.2624, -87.4231, 0.83", "129.295, 94.2352, -88.6181, 0.83", "133.989, 97.2617, -92.4623, 0.28", "136.822, 99.052, -94.8485, 1.11", "138.814, 100.232, -96.562, 0.28", "140.562, 101.253, -98.1692, 0.28", "141.357, 101.787, -98.9754, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "87.2781, 41.6521, -40.7085, 0.56", "88.9863, 40.0818, -40.6607, 0.56", "90.2218, 38.6065, -40.6259, 0.28", "91.1347, 37.1636, -40.6541, 1.11", "92.7866, 33.9767, -40.5793, 0.28", "93.526, 32.2286, -40.6123, 1.11", "94.7178, 29.1525, -40.753, 0.28", "95.7793, 25.8739, -40.9657, 0.28", "96.7316, 22.6304, -41.2171, 0.28", "97.5756, 20.0009, -41.491, 1.39", "99.1062, 15.8507, -42.0838, 0.28", "99.6891, 14.578, -42.2869, 1.11", "101.551, 11.2497, -42.9294, 0.28", "101.89, 10.7387, -43.0186, 0.83", "105.048, 6.73139, -43.6994, 0.28", "105.705, 5.97766, -43.8233, 0.83", "107.683, 3.83153, -44.002, 0.28", "107.954, 3.53154, -44.0187, 0.56", "109.402, 1.90076, -44.2932, 0.28", "109.798, 1.43179, -44.4316, 0.56", "110.909, 0.120348, -45.1336, 0.28", "111.764, -0.809097, -45.7931, 0.56", "112.086, -1.15256, -46.0983, 0.56", "115.093, -4.15293, -49.2174, 0.28", "115.111, -4.16806, -49.2375, 0.56", "116.573, -5.27865, -50.9899, 0.28", "117.064, -5.5816, -51.6238, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "178.113, 33.0586, -96.968, 0.28", "184.094, 35.153, -99.6287, 0.28", "185.099, 35.5246, -100.051, 1.11", "190.17, 37.5526, -102.049, 0.28", "190.728, 37.8027, -102.237, 0.83", "195.507, 40.0662, -103.668, 0.28", "195.866, 40.2417, -103.765, 0.56", "197.18, 41.0113, -104.005, 0.28", "198.136, 41.6362, -104.157, 1.67", "202.674, 44.8461, -104.632, 0.28", "203.341, 45.3085, -104.695, 0.56", "205.579, 46.8464, -104.815, 0.28", "206.335, 47.3676, -104.868, 1.11", "208.989, 49.2816, -105.141, 0.28", "209.65, 49.7499, -105.233, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "178.113, 33.0586, -96.968, 0.28", "179.573, 33.9463, -96.2892, 0.28", "180.2, 34.2453, -95.7818, 0.83", "181.706, 34.648, -94.358, 0.28", "182.304, 34.7187, -93.7632, 0.56", "184.367, 34.775, -92.1651, 0.28", "184.734, 34.756, -91.9323, 0.56", "188.41, 33.6987, -90.1782, 0.56", "189.914, 33.0296, -89.5551, 0.28", "190.485, 32.7179, -89.3657, 1.11", "193.663, 30.733, -88.473, 0.28", "194.213, 30.349, -88.3756, 0.56", "196.932, 28.6756, -88.3113, 0.28", "198.671, 27.795, -88.6776, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "92.4668, -166.348, -71.2859, 0.83", "97.9032, -175.982, -74.4096, 0.83", "99.783, -179.032, -75.3613, 0.28", "101.002, -180.932, -75.9654, 1.39", "103.523, -184.573, -77.1493, 0.28", "104.606, -186.053, -77.6115, 0.28", "106.084, -187.979, -78.2437, 0.28", "106.739, -188.802, -78.6428, 0.28", "107.209, -189.377, -78.8295, 0.56", "109.228, -191.891, -79.3896, 0.28", "110.31, -193.272, -79.601, 1.39", "112.939, -197.108, -80.2592, 0.28", "113.726, -198.555, -80.512, 0.83", "114.531, -200.33, -80.9007, 0.28", "115.475, -202.763, -81.4913, 0.28", "115.846, -203.992, -81.8545, 0.83", "116.749, -207.464, -83.0402, 0.28", "117.18, -209.161, -83.7136, 1.11", "118.346, -213.264, -85.5493, 0.28", "118.834, -214.835, -86.3155, 1.39", "119.686, -217.243, -87.5496, 0.28", "120.031, -217.963, -87.9201, 0.56", "122.247, -221.052, -89.4796, 0.28", "122.96, -221.837, -89.8783, 0.83", "125.621, -223.879, -90.885, 0.28", "126.722, -224.498, -91.1976, 1.39", "130.332, -225.884, -91.9477, 0.28", "133.676, -226.746, -92.4922, 0.28", "133.988, -226.789, -92.5217, 0.56", "138.38, -227.15, -92.786, 0.28", "139.673, -227.212, -92.8208, 0.56", "142.604, -227.403, -92.8971, 0.28", "144.24, -227.608, -92.9115, 1.11", "146.629, -228.058, -92.9069, 0.28", "147.708, -228.363, -92.8995, 0.56", "152.528, -230.186, -92.8367, 0.28", "154.195, -230.932, -92.8128, 1.39", "157.618, -232.738, -92.7681, 0.28", "158.957, -233.537, -92.7959, 0.56", "161.712, -235.399, -92.8736, 0.28", "162.488, -235.996, -92.8807, 0.56", "164.014, -237.307, -92.8642, 0.28", "165.477, -238.667, -92.8453, 0.83", "167.429, -240.589, -92.8338, 0.28", "168.881, -242.116, -92.8113, 1.39", "170.82, -244.287, -92.7559, 0.28", "172.21, -246.013, -92.7377, 0.28", "173.349, -247.523, -92.6603, 0.28", "174.168, -248.644, -92.5284, 0.83", "174.837, -249.542, -92.3768, 0.28", "175.547, -250.414, -92.2448, 0.83", "176.622, -251.688, -91.8364, 0.28", "178.165, -253.521, -91.1631, 0.83", "179.99, -255.502, -90.315, 0.28", "181.023, -256.594, -89.7916, 0.28", "183.701, -259.22, -88.3811, 0.28", "186.426, -261.644, -86.95, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "92.4668, -166.348, -71.2859, 0.56", "99.6862, -171.87, -59.2531, 0.56", "100.85, -173.046, -57.2427, 0.28", "101.619, -173.954, -55.891, 0.28", "102.123, -174.606, -55.0258, 0.56", "104.314, -177.639, -51.3161, 0.28", "105.009, -178.643, -50.2482, 1.11", "106.923, -182.627, -47.7175, 0.28", "107.248, -183.305, -47.2917, 0.56", "108.146, -185.124, -46.2698, 0.28", "108.531, -185.913, -45.8712, 0.83", "110.085, -189.24, -44.5368, 0.28", "111.697, -192.502, -43.335, 0.28", "112.24, -193.694, -43.0013, 0.83", "113.315, -196.254, -42.3458, 0.28", "113.498, -196.767, -42.2159, 0.56", "114.316, -199.293, -41.5619, 0.28", "114.405, -199.553, -41.4648, 0.56", "115.046, -201.298, -40.8169, 0.28", "115.205, -201.64, -40.685, 0.56", "116.808, -204.307, -39.2866, 0.28", "117.221, -204.861, -38.9669, 1.11", "120.354, -208.752, -36.5484, 0.28", "120.697, -209.14, -36.2865, 0.56", "122.811, -211.386, -34.687, 0.28", "124.597, -213.21, -33.4015, 0.56", "129.086, -217.459, -30.4146, 0.28", "129.867, -218.184, -29.9096, 0.56", "131.117, -219.294, -29.1782, 0.56" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.901, -23.4511, -2.31471, 0.56", "-27.8875, -25.0929, -2.43544, 0.56", "-28.4231, -25.631, -2.51636, 0.56", "-29.4593, -26.6627, -2.67286, 0.56", "-30.7035, -27.7863, -2.83391, 0.83", "-32.3367, -29.1257, -2.99998, 0.83", "-33.9786, -30.5025, -3.19829, 0.83", "-35.1045, -31.6123, -3.48093, 0.56", "-35.5621, -32.1266, -3.60504, 0.56", "-36.2875, -32.9886, -3.81265, 0.83", "-36.9517, -33.7662, -3.92578, 0.56", "-38.0654, -35.0572, -3.94401, 0.56", "-39.0982, -36.4179, -3.86375, 0.56", "-39.6508, -37.1969, -3.77578, 0.56", "-40.0068, -37.8048, -3.73503, 0.56", "-40.5107, -38.8321, -3.74407, 0.56", "-41.1094, -40.2774, -3.83408, 1.39", "-41.7007, -41.8416, -4.03329, 0.56", "-42.365, -43.6389, -4.3861, 0.56", "-43.0887, -45.857, -5.05748, 0.83", "-43.4755, -47.3069, -5.60194, 0.56", "-43.7465, -48.5303, -6.17601, 1.11", "-44.1073, -49.9886, -7.01257, 0.56", "-44.4434, -51.1572, -7.73243, 0.83", "-45.0421, -52.8754, -8.84655, 0.28", "-45.4808, -53.8617, -9.45101, 0.28", "-46.0967, -55.1101, -10.1895, 0.83", "-47.0539, -56.9562, -11.2924, 0.28", "-47.5926, -58.0119, -11.8946, 1.11", "-48.1779, -59.1762, -12.4969, 0.28", "-48.3287, -59.4473, -12.6179, 0.83", "-49.139, -60.7834, -13.2374, 0.28", "-49.4829, -61.3415, -13.4821, 0.83", "-50.4541, -62.9552, -14.1865, 0.28", "-51.1106, -64.028, -14.6478, 0.83", "-51.8342, -65.2097, -15.1182, 0.28", "-52.8595, -66.9053, -15.751, 0.56", "-53.3423, -67.6936, -16.0208, 1.67", "-54.2494, -69.2479, -16.5241, 0.28", "-54.7756, -70.2609, -16.8326, 0.28", "-54.9798, -70.7141, -16.9756, 0.56", "-55.5025, -72.14, -17.4005, 0.28", "-55.6475, -72.6402, -17.5441, 0.56", "-55.863, -73.4463, -17.801, 0.28", "-56.1798, -74.8103, -18.2473, 1.39", "-56.5173, -76.468, -18.8365, 0.28", "-56.6196, -76.9637, -19.0242, 0.56", "-56.7729, -77.7273, -19.3309, 0.28", "-56.9526, -78.5587, -19.6704, 0.28", "-57.2163, -79.531, -19.938, 0.28", "-57.4103, -80.1082, -19.9437, 1.11", "-57.8782, -81.2048, -19.7283, 0.28", "-57.8782, -81.2048, -19.7283, 0.56", "-58.5315, -82.3931, -19.2471, 0.28", "-59.5835, -84.2186, -18.3831, 0.83", "-60.4506, -85.5952, -17.74, 0.28", "-60.7949, -86.1271, -17.498, 0.56", "-61.9318, -87.9261, -16.7114, 0.28", "-62.4355, -88.7291, -16.4186, 1.11", "-63.3472, -90.2158, -16.0481, 0.28", "-64.0624, -91.4312, -15.9317, 1.11", "-64.9049, -92.9745, -15.8593, 0.28", "-65.3302, -93.7855, -15.8341, 0.28", "-65.814, -94.6931, -15.8391, 0.56", "-66.538, -96.03, -15.8025, 0.28", "-67.0403, -96.9352, -15.7898, 0.83", "-68.0203, -98.5764, -15.6788, 0.28", "-68.3068, -98.9991, -15.6446, 0.56", "-69.1978, -100.236, -15.5774, 0.28", "-69.894, -101.132, -15.5329, 1.11", "-71.0281, -102.437, -15.6134, 0.28", "-71.5156, -102.934, -15.7637, 0.28", "-72.2126, -103.588, -16.0539, 0.56", "-73.4789, -104.818, -16.6948, 0.28", "-74.382, -105.71, -17.2082, 0.56", "-75.4063, -106.806, -17.8491, 1.39", "-77.2182, -108.923, -18.9746, 0.28", "-77.722, -109.606, -19.3341, 0.56", "-78.4034, -110.638, -19.8623, 0.28", "-78.6793, -111.141, -20.095, 0.56", "-79.1557, -112.307, -20.574, 0.28", "-79.3507, -112.924, -20.7917, 0.83", "-79.7408, -114.503, -21.2836, 0.28", "-79.855, -114.944, -21.4437, 0.83", "-80.3669, -116.624, -22.1482, 0.28", "-80.7914, -117.886, -22.7605, 0.56", "-81.335, -119.344, -23.5264, 0.28", "-81.5121, -119.791, -23.7711, 0.83", "-82.741, -122.763, -25.3895, 0.28", "-83.2487, -123.98, -26.0652, 1.94", "-84.0836, -125.87, -27.1346, 0.28", "-84.2206, -126.177, -27.3142, 0.56", "-84.7414, -127.336, -27.8833, 0.28", "-84.8974, -127.672, -27.9692, 0.56", "-85.2335, -128.373, -27.8853, 0.28", "-85.4391, -128.819, -27.7459, 0.56", "-85.9351, -129.893, -27.3019, 0.28", "-87.1044, -132.325, -26.2727, 1.39", "-88.3755, -134.878, -25.2356, 0.28", "-89.0681, -136.251, -24.7625, 0.83", "-89.7021, -137.465, -24.3904, 0.28", "-90.0952, -138.204, -24.2283, 0.83", "-91.2803, -140.439, -23.9367, 0.28", "-91.7727, -141.38, -23.951, 1.11", "-92.8428, -143.485, -24.2264, 0.28", "-93.0804, -143.963, -24.3069, 0.56", "-94.1166, -145.965, -24.8026, 0.28", "-94.6737, -147.001, -25.1075, 0.28", "-94.986, -147.455, -25.3173, 1.11", "-96.3687, -149.181, -26.2333, 0.28", "-97.2715, -150.131, -26.9011, 0.56", "-98.5854, -151.368, -27.8638, 0.28", "-99.1635, -151.836, -28.2678, 1.11", "-103.221, -154.785, -31.0512, 0.28", "-103.572, -155.016, -31.2793, 0.83", "-105.533, -156.226, -32.5775, 0.28", "-106.547, -156.836, -33.2892, 0.56", "-106.948, -157.075, -33.5606, 0.56", "-108.118, -157.731, -34.3594, 0.56", "-109.227, -158.24, -34.966, 0.56" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-25.901, -23.4511, -2.31471, 0.83", "-25.4865, -26.3451, -1.13805, 0.83", "-24.8594, -29.534, -0.338739, 0.83", "-24.5622, -31.9325, 0.165228, 0.56", "-24.3198, -35.9571, 0.924226, 0.83", "-24.3378, -38.2442, 1.33366, 0.56", "-24.4612, -40.7718, 1.7732, 0.56", "-25.218, -47.8644, 2.9216, 0.83", "-25.5157, -50.5806, 3.36565, 1.11", "-25.6368, -52.8682, 3.71448, 0.83", "-25.5867, -55.154, 4.07079, 0.83", "-25.5419, -56.4685, 4.28422, 0.83", "-25.4443, -60.317, 4.82913, 0.83", "-25.4371, -63.8755, 5.38797, 0.83", "-25.4405, -65.7264, 5.67584, 0.56", "-25.6205, -68.1524, 6.02518, 0.56", "-25.8434, -69.7235, 6.25757, 0.56", "-26.411, -72.3958, 6.62191, 0.83", "-27.2085, -75.2344, 6.94998, 0.56", "-27.9892, -78.075, 7.53252, 0.83", "-28.5988, -80.9239, 8.36778, 0.56", "-28.8963, -82.8677, 8.98997, 0.56", "-29.1505, -85.6213, 9.84999, 0.28", "-29.2149, -87.1545, 10.344, 0.83", "-29.1393, -92.1539, 11.8436, 0.28", "-29.0708, -93.853, 12.3002, 0.56", "-28.8896, -96.6023, 13.0471, 0.28", "-28.6923, -101.019, 14.1847, 0.83", "-28.6959, -103.83, 14.89, 0.56", "-28.7142, -107.102, 15.619, 1.11", "-28.6386, -109.338, 15.9893, 0.56", "-28.3537, -112.723, 16.5274, 0.56", "-28.2129, -113.724, 16.7118, 0.56", "-27.7592, -116.585, 17.3043, 0.83", "-27.432, -118.866, 17.8491, 0.28", "-27.1052, -121.247, 18.5652, 0.83", "-26.9799, -123.067, 19.1954, 0.28", "-27.0134, -124.181, 19.5304, 0.56", "-27.1844, -127.937, 20.4934, 0.83", "-27.3978, -130.902, 21.0527, 0.28", "-27.6295, -132.514, 21.2767, 0.56", "-28.2619, -136.132, 21.6072, 0.83", "-28.8788, -139.904, 21.712, 0.28", "-29.3412, -143.837, 21.3155, 0.83", "-29.5443, -146.16, 20.7308, 0.28", "-29.5901, -147.4, 20.2914, 0.28", "-29.5323, -148.675, 19.8099, 0.28", "-29.3924, -149.914, 19.3886, 1.11", "-28.8926, -153.656, 18.567, 0.28", "-28.815, -154.372, 18.4604, 0.56", "-28.7116, -156.5, 18.2337, 0.56", "-28.5598, -159.84, 17.8887, 0.28", "-28.4189, -163.128, 17.5819, 0.56", "-28.333, -165.726, 17.4801, 1.67", "-28.3143, -167.971, 17.5366, 0.56", "-28.3201, -171.965, 17.6942, 0.28", "-28.3292, -174.206, 17.8078, 1.11", "-28.2286, -176.065, 18.0038, 0.83", "-27.8309, -178.928, 18.5146, 0.28", "-27.656, -179.886, 18.7968, 0.56", "-27.3672, -181.351, 19.4806, 0.28", "-27.0648, -183.068, 20.5575, 0.28", "-26.5925, -186.225, 22.6716, 0.28", "-26.4617, -187.183, 23.3208, 0.83", "-26.1383, -188.829, 24.4114, 0.28", "-25.5795, -191.217, 25.9951, 0.83", "-25.1402, -193.191, 27.2709, 0.28", "-24.8115, -194.924, 28.289, 0.28", "-24.2775, -197.376, 29.5453, 1.39", "-23.4686, -200.633, 30.8634, 0.28", "-23.2291, -201.716, 31.1687, 0.28", "-22.8747, -203.699, 31.5368, 0.56", "-22.599, -205.91, 31.8178, 0.83", "-22.4722, -209.186, 32.2472, 0.28", "-22.4924, -211.529, 32.519, 0.56", "-22.7096, -214.265, 32.8033, 0.56", "-22.9848, -216.399, 33.0593, 0.28", "-23.3213, -218.345, 33.2205, 1.39", "-23.9127, -220.978, 33.3479, 0.28", "-24.1605, -221.899, 33.3251, 0.56", "-24.7096, -224.112, 33.2109, 0.28", "-24.9508, -225.687, 33.087, 0.56", "-25.2706, -228.689, 32.828, 0.28", "-25.3215, -229.336, 32.7728, 0.83", "-25.3464, -231.415, 32.6855, 0.28", "-25.2762, -233.668, 32.7507, 0.83", "-24.9573, -237.157, 33.0892, 0.56", "-24.613, -239.69, 33.4679, 0.28", "-24.4241, -240.982, 33.7266, 1.11", "-24.1708, -244.533, 34.5523, 0.28", "-24.156, -245.781, 34.8808, 0.83", "-24.1944, -248.352, 35.5408, 0.28", "-24.3715, -251.488, 36.2524, 0.28", "-24.4428, -252.605, 36.51, 0.56", "-25.0563, -257.617, 37.6341, 0.28", "-25.1703, -258.055, 37.7201, 0.56" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-49.0705, -321.245, 7.83408, 0.28", "-46.0835, -322.919, 9.1071, 0.28", "-45.5891, -323.196, 9.31777, 0.56", "-44.1108, -324.024, 9.94781, 0.28", "-43.7607, -324.221, 10.097, 0.56" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-49.0705, -321.245, 7.83408, 0.56", "-50.172, -324.764, 7.32197, 0.56", "-50.6567, -326.163, 7.11022, 0.56", "-51.2236, -327.645, 6.87726, 0.56", "-51.9324, -329.595, 6.42165, 0.56", "-52.6401, -331.713, 5.84902, 0.28", "-53.5389, -334.557, 4.99655, 0.56", "-53.9803, -336.095, 4.41152, 0.28", "-54.2308, -337.217, 3.94537, 0.83", "-54.6807, -340.378, 2.6848, 0.56", "-54.823, -342.891, 1.62076, 0.56", "-54.7081, -343.962, 1.18488, 0.28", "-54.1554, -346.129, 0.225457, 0.28", "-53.636, -347.679, -0.489196, 0.56", "-52.7464, -349.73, -1.40416, 1.39", "-51.5035, -351.929, -2.38636, 0.56", "-49.9787, -354.406, -3.5866, 0.56", "-48.6702, -356.395, -4.534, 0.28", "-48.0687, -357.281, -4.94529, 0.28", "-47.4862, -358.053, -5.23555, 0.83", "-46.1341, -359.78, -5.70605, 0.28", "-44.491, -362.011, -5.96205, 0.28", "-43.3499, -363.661, -6.00059, 0.28", "-42.5062, -364.894, -5.92351, 1.11", "-40.7642, -367.6, -5.72197, 0.28", "-40.0405, -368.904, -5.6476, 0.83", "-39.5084, -369.996, -5.58597, 0.28", "-38.606, -371.787, -5.50075, 0.28", "-37.9473, -373.318, -5.48883, 0.28", "-37.5247, -374.398, -5.54435, 2.22", "-36.4825, -377.402, -6.04766, 0.28", "-36.3169, -377.994, -6.15349, 0.56" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-36.3169, -377.994, -6.15349, 0.28", "-35.143, -381.001, -7.3694, 0.28", "-34.7687, -381.96, -7.75704, 0.56", "-33.7398, -384.596, -8.82281, 0.28", "-33.5946, -384.968, -8.9732, 0.56", "-32.3861, -388.064, -10.225, 0.28", "-32.1519, -388.664, -10.4675, 0.56" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-36.3169, -377.994, -6.15349, 0.28", "-37.7259, -380.601, -6.38364, 0.28", "-38.3046, -381.616, -6.54757, 0.56", "-39.8973, -384.143, -6.84026, 0.28", "-40.7817, -385.551, -6.97862, 0.56", "-42.0737, -387.656, -7.2774, 0.28", "-43.3157, -390.455, -7.64748, 0.28", "-44.1625, -393.046, -7.94477, 1.11", "-45.0326, -397.401, -8.55409, 0.28", "-45.1353, -398.502, -8.72775, 0.28", "-45.2228, -400.963, -9.13454, 0.83", "-44.8211, -408.144, -10.3785, 0.28", "-44.6746, -408.948, -10.5352, 0.56", "-43.3677, -413.723, -11.4069, 0.28", "-42.945, -414.95, -11.6717, 0.56", "-42.3315, -416.72, -12.03, 0.56", "-41.3866, -419.433, -12.4941, 0.28", "-40.261, -422.855, -13.4462, 0.28", "-39.9665, -423.525, -13.6268, 0.83" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_23", "dend_10", "dend_9", "dend_0", "apic_12", "apic_1", "dend_27", "dend_24", "dend_18", "dend_11", "dend_6", "dend_1", "apic_14", "apic_13", "apic_5", "apic_2", "dend_26", "dend_25", "dend_20", "dend_19", "dend_15", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "apic_11", "apic_6", "apic_4", "apic_3", "dend_22", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_4", "dend_3", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_23", "dend_10", "dend_9", "dend_0", "apic_12", "apic_1", "dend_27", "dend_24", "dend_18", "dend_11", "dend_6", "dend_1", "apic_14", "apic_13", "apic_5", "apic_2", "dend_26", "dend_25", "dend_20", "dend_19", "dend_15", "dend_12", "dend_8", "dend_7", "dend_5", "dend_2", "apic_11", "apic_6", "apic_4", "apic_3", "dend_22", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_4", "dend_3", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_12", "apic_12", "apic_12", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_11", "apic_11", "apic_11", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_10", "apic_10", "apic_10", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_LBC_df15689e81_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_12, id: apic_12, parent: apic_0
create apic_12
public apic_12
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_14, id: apic_14, parent: apic_12
create apic_14
public apic_14
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_5, id: apic_5, parent: apic_1
create apic_5
public apic_5
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_11, id: apic_11, parent: apic_5
create apic_11
public apic_11
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_10, id: apic_10, parent: apic_6
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, axon_0, axon_0, apic_12, apic_12, apic_12, apic_1, apic_1, apic_1, apic_1, apic_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999990524732351)
    connect dend_23(0), soma_0(0.4999990524732351)
    connect dend_10(0), soma_0(0.4999990524732351)
    connect dend_9(0), soma_0(0.4999990524732351)
    connect dend_0(0), soma_0(0.4999990524732351)
    connect axon_0(0), soma_0(1.0)
    connect apic_12(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_14(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_5(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_11(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_10(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.56398, 12.1856, -3.45915, 3.25378 ) }
    soma_0 { pt3dadd( -2.26706, 10.9606, -3.11058, 4.92468 ) }
    soma_0 { pt3dadd( -1.97014, 9.73565, -2.76202, 6.49677 ) }
    soma_0 { pt3dadd( -1.67322, 8.51066, -2.41345, 7.93038 ) }
    soma_0 { pt3dadd( -1.3763, 7.28567, -2.06488, 8.78195 ) }
    soma_0 { pt3dadd( -1.07938, 6.06068, -1.71632, 9.51699 ) }
    soma_0 { pt3dadd( -0.782463, 4.83569, -1.36775, 10.3263 ) }
    soma_0 { pt3dadd( -0.485543, 3.6107, -1.01918, 11.1493 ) }
    soma_0 { pt3dadd( -0.188623, 2.38571, -0.670618, 11.9011 ) }
    soma_0 { pt3dadd( 0.108296, 1.16072, -0.322051, 12.0825 ) }
    soma_0 { pt3dadd( 0.405216, -0.0642733, 0.026515, 12.1848 ) }
    soma_0 { pt3dadd( 0.702136, -1.28926, 0.375081, 12.2225 ) }
    soma_0 { pt3dadd( 0.999056, -2.51425, 0.723648, 11.698 ) }
    soma_0 { pt3dadd( 1.29598, -3.73924, 1.07221, 11.5084 ) }
    soma_0 { pt3dadd( 1.5929, -4.96423, 1.42078, 11.8466 ) }
    soma_0 { pt3dadd( 1.88982, -6.18922, 1.76935, 11.6542 ) }
    soma_0 { pt3dadd( 2.18674, -7.41421, 2.11791, 11.2017 ) }
    soma_0 { pt3dadd( 2.48366, -8.6392, 2.46648, 10.0847 ) }
    soma_0 { pt3dadd( 2.78057, -9.86419, 2.81505, 8.25314 ) }
    soma_0 { pt3dadd( 3.07749, -11.0892, 3.16361, 6.3237 ) }
    soma_0 { pt3dadd( 3.37441, -12.3142, 3.51218, 3.70524 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 2.77471, -11.1177, 13.4707, 3.61 ) }
    apic_0 { pt3dadd( 2.65045, -12.3363, 13.3326, 3.61 ) }
    apic_0 { pt3dadd( 2.29095, -15.862, 12.9331, 3.06 ) }
    apic_0 { pt3dadd( 1.99357, -18.7784, 12.6026, 3.06 ) }
    apic_0 { pt3dadd( 1.6985, -21.6723, 12.2747, 2.78 ) }
    apic_0 { pt3dadd( 1.42489, -24.3556, 11.9707, 2.78 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -4.14529, 11.9023, -7.22925, 2.5 ) }
    dend_23 { pt3dadd( -4.94408, 12.9548, -6.40572, 2.5 ) }
    dend_23 { pt3dadd( -8.94608, 17.2422, -3.04841, 1.39 ) }
    dend_23 { pt3dadd( -10.2659, 18.6561, -1.94121, 1.11 ) }
    dend_23 { pt3dadd( -11.9282, 20.4369, -0.546698, 0.83 ) }
    dend_23 { pt3dadd( -12.5807, 21.1359, 6.67006E-4, 0.83 ) }
    dend_23 { pt3dadd( -13.8736, 22.5209, 1.08528, 1.39 ) }
    dend_23 { pt3dadd( -15.0529, 23.5679, 1.8617, 1.39 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 35/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.59471, -1.78766, -11.6093, 3.33 ) }
    dend_10 { pt3dadd( 6.87057, -1.84078, -11.5667, 3.33 ) }
    dend_10 { pt3dadd( 8.60991, -2.17569, -11.2983, 2.5 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 38/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.40529, -1.50766, -18.0493, 1.11 ) }
    dend_9 { pt3dadd( -3.69219, -1.99933, -17.559, 1.11 ) }
    dend_9 { pt3dadd( -6.85711, -2.55333, -17.3421, 1.11 ) }
    dend_9 { pt3dadd( -8.70648, -2.95238, -17.2392, 1.11 ) }
    dend_9 { pt3dadd( -11.4791, -3.83388, -17.0171, 0.83 ) }
    dend_9 { pt3dadd( -14.0032, -4.75972, -17.1581, 0.83 ) }
    dend_9 { pt3dadd( -17.2067, -6.01509, -17.6257, 1.11 ) }
    dend_9 { pt3dadd( -20.1877, -7.33102, -18.5305, 0.83 ) }
    dend_9 { pt3dadd( -22.9071, -8.53246, -19.6574, 0.83 ) }
    dend_9 { pt3dadd( -26.9265, -10.0174, -21.5298, 0.83 ) }
    dend_9 { pt3dadd( -32.8909, -11.8419, -24.4879, 1.11 ) }
    dend_9 { pt3dadd( -34.6325, -12.3256, -25.4102, 0.56 ) }
    dend_9 { pt3dadd( -36.8754, -12.8833, -26.5801, 1.11 ) }
    dend_9 { pt3dadd( -39.378, -13.3397, -27.8442, 0.56 ) }
    dend_9 { pt3dadd( -42.2307, -13.4613, -29.2951, 0.56 ) }
    dend_9 { pt3dadd( -43.6156, -13.3249, -29.8889, 0.56 ) }
    dend_9 { pt3dadd( -46.0998, -12.8943, -30.4431, 1.11 ) }
    dend_9 { pt3dadd( -48.0532, -12.3935, -30.877, 0.28 ) }
    dend_9 { pt3dadd( -49.0209, -12.1002, -31.0834, 0.28 ) }
    dend_9 { pt3dadd( -51.3053, -11.3539, -31.7486, 1.11 ) }
    dend_9 { pt3dadd( -52.9521, -10.8292, -32.3533, 0.28 ) }
    dend_9 { pt3dadd( -54.6476, -10.267, -33.0261, 0.83 ) }
    dend_9 { pt3dadd( -57.675, -9.16196, -34.3647, 0.56 ) }
    dend_9 { pt3dadd( -59.8261, -8.35835, -35.4225, 0.56 ) }
    dend_9 { pt3dadd( -62.273, -7.50433, -36.7538, 0.83 ) }
    dend_9 { pt3dadd( -63.8777, -6.98681, -37.7646, 0.28 ) }
    dend_9 { pt3dadd( -65.6542, -6.40598, -39.0361, 0.56 ) }
    dend_9 { pt3dadd( -67.01, -5.96432, -40.2844, 0.28 ) }
    dend_9 { pt3dadd( -67.9732, -5.65117, -41.3105, 1.39 ) }
    dend_9 { pt3dadd( -68.3093, -5.52751, -41.7385, 1.39 ) }
    dend_9 { pt3dadd( -69.4501, -5.07816, -43.3116, 0.28 ) }
    dend_9 { pt3dadd( -70.2742, -4.79046, -44.4906, 1.39 ) }
    dend_9 { pt3dadd( -73.1828, -4.04644, -48.7807, 0.28 ) }
    dend_9 { pt3dadd( -73.8073, -3.97425, -49.5904, 0.28 ) }
    dend_9 { pt3dadd( -75.1497, -3.95661, -51.1319, 0.28 ) }
    dend_9 { pt3dadd( -75.3358, -3.96469, -51.3063, 0.56 ) }
    dend_9 { pt3dadd( -77.6129, -4.15831, -52.96, 0.28 ) }
    dend_9 { pt3dadd( -79.0625, -4.36372, -53.7863, 1.67 ) }
    dend_9 { pt3dadd( -81.3989, -4.77804, -54.7884, 0.28 ) }
    dend_9 { pt3dadd( -82.6446, -5.01645, -55.2848, 0.56 ) }
    dend_9 { pt3dadd( -85.9306, -5.70801, -56.502, 0.28 ) }
    dend_9 { pt3dadd( -87.3294, -6.0163, -57.0638, 0.83 ) }
    dend_9 { pt3dadd( -90.4055, -6.73092, -58.3249, 0.28 ) }
    dend_9 { pt3dadd( -91.3249, -6.98194, -58.7434, 0.83 ) }
    dend_9 { pt3dadd( -92.7169, -7.41095, -59.5217, 0.28 ) }
    dend_9 { pt3dadd( -93.6461, -7.68144, -60.114, 0.56 ) }
    dend_9 { pt3dadd( -96.5891, -8.51511, -62.13, 0.28 ) }
    dend_9 { pt3dadd( -97.3379, -8.6593, -62.6217, 1.67 ) }
    dend_9 { pt3dadd( -100.637, -9.0541, -64.61, 0.28 ) }
    dend_9 { pt3dadd( -103.044, -9.23275, -65.9106, 0.83 ) }
    dend_9 { pt3dadd( -106.739, -9.33995, -67.6796, 0.28 ) }
    dend_9 { pt3dadd( -107.67, -9.31068, -68.0718, 0.83 ) }
    dend_9 { pt3dadd( -111.425, -8.9967, -69.3562, 0.28 ) }
    dend_9 { pt3dadd( -112.879, -8.81675, -69.8176, 0.83 ) }
    dend_9 { pt3dadd( -114.729, -8.47504, -70.288, 0.28 ) }
    dend_9 { pt3dadd( -115.079, -8.40636, -70.3455, 0.56 ) }
    dend_9 { pt3dadd( -118.684, -7.73167, -70.7091, 0.28 ) }
    dend_9 { pt3dadd( -120.177, -7.46928, -70.8754, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 96/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.73529, -10.2177, 1.49075, 3.06 ) }
    dend_0 { pt3dadd( -2.52302, -11.1566, 1.61927, 2.78 ) }
    dend_0 { pt3dadd( -4.4743, -13.4823, 1.93765, 2.78 ) }
    dend_0 { pt3dadd( -6.22224, -15.5657, 2.22285, 2.78 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 0/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.37441, -12.3142, 3.51218, 0.83 ) }
    axon_0 { pt3dadd( 6.90787, -26.8921, 3.51218, 0.83 ) }
    axon_0 { pt3dadd( 10.4413, -41.47, 3.51218, 0.83 ) }
    // Section: apic_12, id: apic_12, parent: apic_0 (entry count 3/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 1.42489, -24.3556, 11.9707, 0.83 ) }
    apic_12 { pt3dadd( -2.21012, -28.1155, 6.83842, 0.83 ) }
    apic_12 { pt3dadd( -3.60982, -29.5634, 4.8622, 1.11 ) }
    apic_12 { pt3dadd( -5.5176, -31.5367, 2.16862, 1.39 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 7/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 1.42489, -24.3556, 11.9707, 1.67 ) }
    apic_1 { pt3dadd( 0.840301, -26.6356, 13.9317, 1.67 ) }
    apic_1 { pt3dadd( 0.307591, -28.7133, 15.7187, 1.67 ) }
    apic_1 { pt3dadd( -0.19522, -30.6743, 17.4054, 1.39 ) }
    apic_1 { pt3dadd( -0.653922, -32.4634, 18.9442, 1.39 ) }
    apic_1 { pt3dadd( -0.873322, -33.3191, 19.6802, 1.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -15.0529, 23.5679, 1.8617, 0.56 ) }
    dend_27 { pt3dadd( -17.7418, 22.0418, 3.8754, 0.56 ) }
    dend_27 { pt3dadd( -19.523, 21.2606, 5.34435, 0.56 ) }
    dend_27 { pt3dadd( -21.3848, 20.7054, 6.9286, 0.56 ) }
    dend_27 { pt3dadd( -23.5693, 20.2464, 8.78385, 0.56 ) }
    dend_27 { pt3dadd( -24.8999, 19.968, 9.91901, 0.56 ) }
    dend_27 { pt3dadd( -27.9795, 19.1964, 12.3433, 0.56 ) }
    dend_27 { pt3dadd( -30.1563, 18.8778, 14.0225, 0.83 ) }
    dend_27 { pt3dadd( -32.2303, 18.7182, 15.6873, 0.83 ) }
    dend_27 { pt3dadd( -33.5597, 18.6494, 16.7063, 0.83 ) }
    dend_27 { pt3dadd( -36.1948, 18.3641, 18.7034, 0.83 ) }
    dend_27 { pt3dadd( -39.0684, 17.9344, 20.8548, 0.83 ) }
    dend_27 { pt3dadd( -43.4812, 16.9254, 24.1321, 0.83 ) }
    dend_27 { pt3dadd( -46.7294, 15.9665, 26.5584, 0.83 ) }
    dend_27 { pt3dadd( -49.2453, 15.1122, 28.4652, 0.56 ) }
    dend_27 { pt3dadd( -52.8166, 13.7278, 31.0667, 0.56 ) }
    dend_27 { pt3dadd( -53.9782, 13.2562, 31.9262, 0.56 ) }
    dend_27 { pt3dadd( -55.8349, 12.474, 33.3993, 0.56 ) }
    dend_27 { pt3dadd( -56.707, 12.0414, 34.111, 0.56 ) }
    dend_27 { pt3dadd( -58.2742, 11.2365, 35.4149, 0.83 ) }
    dend_27 { pt3dadd( -61.207, 9.89228, 37.943, 0.56 ) }
    dend_27 { pt3dadd( -63.053, 9.19498, 39.4743, 0.56 ) }
    dend_27 { pt3dadd( -66.0297, 8.00087, 42.1284, 0.56 ) }
    dend_27 { pt3dadd( -68.957, 6.93935, 44.8788, 0.56 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 37/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -15.0529, 23.5679, 1.8617, 0.56 ) }
    dend_24 { pt3dadd( -17.3602, 23.0731, 2.49346, 0.56 ) }
    dend_24 { pt3dadd( -18.7319, 22.9974, 2.75629, 0.56 ) }
    dend_24 { pt3dadd( -22.4672, 22.7913, 3.47203, 0.83 ) }
    dend_24 { pt3dadd( -25.2939, 22.6354, 4.01366, 0.83 ) }
    dend_24 { pt3dadd( -27.2145, 22.5295, 4.38167, 0.83 ) }
    dend_24 { pt3dadd( -29.0627, 22.4275, 4.73581, 0.83 ) }
    dend_24 { pt3dadd( -32.1716, 22.6212, 5.20644, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 8.60991, -2.17569, -11.2983, 0.83 ) }
    dend_18 { pt3dadd( 12.2829, -2.32628, -13.5103, 0.83 ) }
    dend_18 { pt3dadd( 16.284, -1.88563, -15.7245, 0.83 ) }
    dend_18 { pt3dadd( 20.0337, -0.912979, -17.5728, 0.83 ) }
    dend_18 { pt3dadd( 23.5767, 0.379189, -19.1103, 0.83 ) }
    dend_18 { pt3dadd( 27.6596, 2.11399, -20.6861, 0.83 ) }
    dend_18 { pt3dadd( 34.1443, 4.95658, -22.9401, 0.56 ) }
    dend_18 { pt3dadd( 38.4163, 7.23992, -24.1815, 0.83 ) }
    dend_18 { pt3dadd( 42.3358, 9.90267, -25.1716, 0.83 ) }
    dend_18 { pt3dadd( 43.9487, 11.2156, -25.4102, 0.56 ) }
    dend_18 { pt3dadd( 45.1783, 12.3482, -25.4081, 0.56 ) }
    dend_18 { pt3dadd( 46.5096, 14.0287, -25.1517, 0.56 ) }
    dend_18 { pt3dadd( 47.7905, 16.7855, -23.8861, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 58/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.60991, -2.17569, -11.2983, 1.94 ) }
    dend_11 { pt3dadd( 10.8484, -3.72563, -12.7728, 1.94 ) }
    dend_11 { pt3dadd( 14.2681, -6.0935, -15.0255, 1.94 ) }
    dend_11 { pt3dadd( 16.2112, -7.43888, -16.3054, 1.94 ) }
    dend_11 { pt3dadd( 18.4159, -8.96546, -17.7577, 1.94 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 63/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.22224, -15.5657, 2.22285, 1.11 ) }
    dend_6 { pt3dadd( -4.53808, -18.2731, 5.81597, 1.11 ) }
    dend_6 { pt3dadd( -3.27518, -19.7789, 8.0482, 1.11 ) }
    dend_6 { pt3dadd( 0.560518, -23.3374, 14.0366, 1.11 ) }
    dend_6 { pt3dadd( 2.24032, -24.765, 16.581, 1.11 ) }
    dend_6 { pt3dadd( 3.93918, -26.2087, 19.1543, 0.83 ) }
    dend_6 { pt3dadd( 5.57831, -27.6017, 21.6372, 0.83 ) }
    dend_6 { pt3dadd( 8.58306, -29.6505, 25.6897, 0.83 ) }
    dend_6 { pt3dadd( 11.4351, -31.3499, 29.2268, 0.83 ) }
    dend_6 { pt3dadd( 13.8953, -32.4878, 31.9116, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 73/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.22224, -15.5657, 2.22285, 1.39 ) }
    dend_1 { pt3dadd( -10.587, -15.0358, 5.23845, 1.39 ) }
    dend_1 { pt3dadd( -12.9709, -14.7463, 6.88555, 1.39 ) }
    dend_1 { pt3dadd( -14.1352, -14.605, 7.68991, 1.39 ) }
    dend_1 { pt3dadd( -16.6242, -14.3028, 9.40961, 1.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 78/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.4413, -41.47, 3.51218, 0.28 ) }
    axon_1 { pt3dadd( 13.9748, -56.0478, 3.51218, 0.28 ) }
    axon_1 { pt3dadd( 17.5083, -70.6257, 3.51218, 0.28 ) }
    // Section: apic_14, id: apic_14, parent: apic_12 (entry count 81/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -5.5176, -31.5367, 2.16862, 0.83 ) }
    apic_14 { pt3dadd( -4.94241, -32.6945, 0.982516, 0.83 ) }
    apic_14 { pt3dadd( -4.45693, -34.0377, -0.287691, 0.83 ) }
    apic_14 { pt3dadd( -4.20963, -35.1751, -1.28648, 0.83 ) }
    apic_14 { pt3dadd( -3.77694, -37.8885, -3.6297, 0.83 ) }
    apic_14 { pt3dadd( -3.14117, -42.4671, -7.36119, 0.56 ) }
    apic_14 { pt3dadd( -3.03272, -43.6986, -8.26058, 0.56 ) }
    apic_14 { pt3dadd( -3.05348, -45.1744, -9.29181, 1.11 ) }
    apic_14 { pt3dadd( -3.08837, -46.9304, -10.4779, 0.56 ) }
    apic_14 { pt3dadd( -2.99963, -48.3825, -11.5131, 0.56 ) }
    apic_14 { pt3dadd( -2.74876, -49.7893, -12.4759, 0.56 ) }
    apic_14 { pt3dadd( -2.19589, -51.8189, -13.698, 0.83 ) }
    apic_14 { pt3dadd( -1.3515, -53.771, -15.0325, 0.56 ) }
    apic_14 { pt3dadd( -0.239147, -55.7821, -16.5466, 0.56 ) }
    apic_14 { pt3dadd( 1.21956, -58.205, -18.4359, 1.11 ) }
    apic_14 { pt3dadd( 1.8197, -59.2746, -19.3454, 0.56 ) }
    apic_14 { pt3dadd( 2.48155, -60.5836, -20.6693, 0.56 ) }
    apic_14 { pt3dadd( 3.00109, -61.8249, -22.05, 0.56 ) }
    apic_14 { pt3dadd( 3.23498, -62.8655, -23.1489, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_14 { pt3dadd( 3.24843, -63.7794, -24.1164, 0.83 ) }
    apic_14 { pt3dadd( 3.01516, -65.8888, -26.262, 0.28 ) }
    apic_14 { pt3dadd( 2.74227, -67.7059, -27.9172, 1.39 ) }
    apic_14 { pt3dadd( 2.282, -70.1267, -29.8844, 0.28 ) }
    apic_14 { pt3dadd( 2.0746, -71.3094, -30.7977, 0.56 ) }
    apic_14 { pt3dadd( 1.83738, -73.3459, -32.1746, 0.28 ) }
    apic_14 { pt3dadd( 1.79681, -74.497, -32.8489, 2.22 ) }
    apic_14 { pt3dadd( 1.94185, -77.7497, -34.2653, 0.28 ) }
    apic_14 { pt3dadd( 2.12767, -79.1774, -34.77, 0.56 ) }
    apic_14 { pt3dadd( 2.53305, -80.906, -35.3429, 0.56 ) }
    apic_14 { pt3dadd( 2.98884, -82.2786, -35.7988, 0.28 ) }
    apic_14 { pt3dadd( 3.42104, -83.3562, -36.1754, 0.83 ) }
    apic_14 { pt3dadd( 4.14891, -85.1173, -36.8735, 0.28 ) }
    apic_14 { pt3dadd( 4.67325, -86.4218, -37.4211, 0.83 ) }
    apic_14 { pt3dadd( 5.50125, -88.7298, -38.2541, 0.28 ) }
    apic_14 { pt3dadd( 5.77013, -89.6831, -38.564, 1.39 ) }
    apic_14 { pt3dadd( 6.5714, -92.2103, -39.2115, 0.28 ) }
    apic_14 { pt3dadd( 7.04603, -93.63, -39.4826, 0.28 ) }
    apic_14 { pt3dadd( 7.48599, -94.7789, -39.6977, 1.94 ) }
    apic_14 { pt3dadd( 8.43194, -96.9798, -40.0678, 0.28 ) }
    apic_14 { pt3dadd( 8.79551, -97.7363, -40.2164, 1.11 ) }
    apic_14 { pt3dadd( 11.1142, -102.157, -41.4251, 0.28 ) }
    apic_14 { pt3dadd( 11.4629, -102.802, -41.6254, 0.83 ) }
    apic_14 { pt3dadd( 13.0015, -105.666, -42.6571, 0.28 ) }
    apic_14 { pt3dadd( 13.192, -106.062, -42.8168, 0.83 ) }
    apic_14 { pt3dadd( 14.5888, -109.311, -44.2531, 0.28 ) }
    apic_14 { pt3dadd( 15.1976, -111.035, -45.0328, 0.56 ) }
    apic_14 { pt3dadd( 15.7993, -113.495, -46.1383, 0.28 ) }
    apic_14 { pt3dadd( 15.9755, -114.485, -46.5235, 1.39 ) }
    apic_14 { pt3dadd( 16.4305, -117.764, -47.6443, 0.28 ) }
    apic_14 { pt3dadd( 16.5185, -118.479, -47.8702, 0.83 ) }
    apic_14 { pt3dadd( 16.9285, -121.883, -49.2137, 0.28 ) }
    apic_14 { pt3dadd( 17.0879, -123.072, -49.763, 1.11 ) }
    apic_14 { pt3dadd( 17.4909, -125.573, -51.2517, 0.28 ) }
    apic_14 { pt3dadd( 17.7469, -126.979, -52.2017, 0.28 ) }
    apic_14 { pt3dadd( 17.9048, -127.771, -52.7878, 1.11 ) }
    apic_14 { pt3dadd( 18.859, -132.668, -56.7227, 0.28 ) }
    apic_14 { pt3dadd( 18.9464, -133.144, -57.13, 1.94 ) }
    apic_14 { pt3dadd( 19.594, -136.309, -59.6714, 0.28 ) }
    apic_14 { pt3dadd( 19.6318, -136.478, -59.7944, 0.56 ) }
    apic_14 { pt3dadd( 20.0229, -138.502, -61.1174, 0.28 ) }
    apic_14 { pt3dadd( 20.2561, -139.909, -61.9381, 1.11 ) }
    apic_14 { pt3dadd( 20.5313, -142.743, -63.1739, 0.28 ) }
    apic_14 { pt3dadd( 20.7392, -146.862, -64.8257, 0.28 ) }
    apic_14 { pt3dadd( 20.7209, -148.364, -65.3513, 1.39 ) }
    apic_14 { pt3dadd( 20.5628, -150.918, -66.1528, 0.28 ) }
    apic_14 { pt3dadd( 20.4314, -151.919, -66.4434, 0.83 ) }
    apic_14 { pt3dadd( 19.793, -155.065, -67.0939, 0.28 ) }
    apic_14 { pt3dadd( 19.6411, -155.5, -67.1708, 0.56 ) }
    apic_14 { pt3dadd( 18.937, -156.825, -67.3988, 0.28 ) }
    apic_14 { pt3dadd( 18.4916, -157.574, -67.5135, 0.83 ) }
    apic_14 { pt3dadd( 17.4688, -159.261, -67.7044, 0.28 ) }
    apic_14 { pt3dadd( 16.0628, -161.589, -68.0234, 1.11 ) }
    apic_14 { pt3dadd( 14.5484, -164.134, -68.4471, 0.28 ) }
    apic_14 { pt3dadd( 14.3209, -164.533, -68.538, 0.56 ) }
    apic_14 { pt3dadd( 13.8887, -165.34, -68.7218, 0.28 ) }
    apic_14 { pt3dadd( 13.6985, -165.691, -68.8658, 0.56 ) }
    apic_14 { pt3dadd( 13.2263, -166.511, -69.3077, 0.28 ) }
    apic_14 { pt3dadd( 13.0104, -166.852, -69.5416, 0.56 ) }
    apic_14 { pt3dadd( 12.073, -168.343, -70.5056, 0.28 ) }
    apic_14 { pt3dadd( 11.3356, -169.652, -71.4798, 1.11 ) }
    apic_14 { pt3dadd( 9.77206, -172.635, -73.9892, 0.28 ) }
    apic_14 { pt3dadd( 9.55373, -173.105, -74.4034, 0.56 ) }
    apic_14 { pt3dadd( 8.53154, -175.596, -76.6482, 0.28 ) }
    apic_14 { pt3dadd( 8.15021, -176.655, -77.6049, 1.39 ) }
    apic_14 { pt3dadd( 7.31642, -179.451, -79.9833, 0.28 ) }
    apic_14 { pt3dadd( 7.00773, -180.956, -81.2791, 1.39 ) }
    apic_14 { pt3dadd( 6.884, -182.229, -82.2556, 0.28 ) }
    apic_14 { pt3dadd( 6.87294, -182.549, -82.5095, 0.83 ) }
    apic_14 { pt3dadd( 6.97868, -183.991, -83.7253, 0.28 ) }
    apic_14 { pt3dadd( 7.10395, -185.469, -84.9494, 0.83 ) }
    apic_14 { pt3dadd( 7.25889, -187.215, -85.8538, 0.28 ) }
    apic_14 { pt3dadd( 7.36235, -187.917, -86.1191, 0.56 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 73/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -5.5176, -31.5367, 2.16862, 0.56 ) }
    apic_13 { pt3dadd( -5.58471, -33.2377, 0.409003, 0.56 ) }
    apic_13 { pt3dadd( -5.61869, -33.7513, -0.122413, 0.28 ) }
    apic_13 { pt3dadd( -5.72465, -34.7419, -1.15878, 0.83 ) }
    apic_13 { pt3dadd( -6.03218, -36.3279, -2.74064, 0.56 ) }
    apic_13 { pt3dadd( -6.513, -38.0428, -4.45771, 1.11 ) }
    apic_13 { pt3dadd( -8.26283, -43.8351, -10.2657, 0.83 ) }
    apic_13 { pt3dadd( -9.07512, -46.2801, -12.8465, 0.28 ) }
    apic_13 { pt3dadd( -9.25636, -46.7991, -13.4778, 0.28 ) }
    apic_13 { pt3dadd( -9.79163, -48.3642, -15.6396, 0.83 ) }
    apic_13 { pt3dadd( -10.0896, -49.4855, -17.5099, 0.56 ) }
    apic_13 { pt3dadd( -10.2995, -50.3319, -19.0232, 0.56 ) }
    apic_13 { pt3dadd( -10.483, -51.0969, -20.4162, 1.39 ) }
    apic_13 { pt3dadd( -11.2945, -54.3217, -26.6047, 0.28 ) }
    apic_13 { pt3dadd( -11.5298, -55.2252, -28.3096, 1.39 ) }
    apic_13 { pt3dadd( -12.1836, -57.529, -32.5975, 0.56 ) }
    apic_13 { pt3dadd( -12.6061, -58.7528, -34.7887, 0.56 ) }
    apic_13 { pt3dadd( -13.3228, -60.3918, -37.6136, 1.39 ) }
    apic_13 { pt3dadd( -14.32, -62.3532, -40.773, 0.28 ) }
    apic_13 { pt3dadd( -14.6139, -62.8378, -41.3787, 0.83 ) }
    apic_13 { pt3dadd( -15.7626, -64.7477, -43.3283, 0.28 ) }
    apic_13 { pt3dadd( -15.9079, -65.013, -43.528, 0.56 ) }
    apic_13 { pt3dadd( -17.0035, -67.3703, -44.9727, 0.28 ) }
    apic_13 { pt3dadd( -17.3806, -68.3593, -45.4889, 1.39 ) }
    apic_13 { pt3dadd( -18.8364, -72.8111, -47.4283, 0.28 ) }
    apic_13 { pt3dadd( -19.0695, -73.7914, -47.9057, 1.39 ) }
    apic_13 { pt3dadd( -19.4816, -76.3122, -49.1872, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_13 { pt3dadd( -19.5885, -77.2447, -49.7412, 0.83 ) }
    apic_13 { pt3dadd( -19.7935, -79.9996, -51.5316, 0.28 ) }
    apic_13 { pt3dadd( -19.8492, -82.0084, -52.9775, 1.11 ) }
    apic_13 { pt3dadd( -19.7995, -86.9771, -56.9273, 0.28 ) }
    apic_13 { pt3dadd( -19.796, -87.267, -57.147, 0.56 ) }
    apic_13 { pt3dadd( -19.7875, -92.6508, -61.0125, 0.28 ) }
    apic_13 { pt3dadd( -19.8077, -93.1407, -61.3116, 0.28 ) }
    apic_13 { pt3dadd( -20.0452, -95.8295, -62.6401, 0.28 ) }
    apic_13 { pt3dadd( -20.2214, -97.224, -63.226, 0.56 ) }
    apic_13 { pt3dadd( -20.7064, -99.814, -63.913, 0.28 ) }
    apic_13 { pt3dadd( -20.9241, -100.929, -64.1904, 1.39 ) }
    apic_13 { pt3dadd( -21.5472, -104.13, -64.8112, 0.28 ) }
    apic_13 { pt3dadd( -21.6828, -104.838, -65.0003, 0.83 ) }
    apic_13 { pt3dadd( -22.218, -107.286, -65.9831, 0.28 ) }
    apic_13 { pt3dadd( -22.3042, -107.725, -66.2528, 0.83 ) }
    apic_13 { pt3dadd( -22.6713, -109.881, -67.9503, 0.28 ) }
    apic_13 { pt3dadd( -22.7269, -110.268, -68.2972, 0.56 ) }
    apic_13 { pt3dadd( -23.0147, -112.259, -70.1325, 0.28 ) }
    apic_13 { pt3dadd( -23.3353, -114.401, -71.9847, 0.56 ) }
    apic_13 { pt3dadd( -23.9059, -117.648, -74.6, 0.28 ) }
    apic_13 { pt3dadd( -24.0438, -118.416, -75.1373, 0.56 ) }
    apic_13 { pt3dadd( -24.411, -120.609, -76.3646, 0.28 ) }
    apic_13 { pt3dadd( -24.6248, -123.303, -77.722, 1.11 ) }
    apic_13 { pt3dadd( -24.5769, -124.941, -78.349, 0.28 ) }
    apic_13 { pt3dadd( -24.4142, -125.636, -78.5397, 0.56 ) }
    apic_13 { pt3dadd( -23.929, -126.834, -78.813, 0.28 ) }
    apic_13 { pt3dadd( -23.6375, -127.505, -78.9264, 0.56 ) }
    apic_13 { pt3dadd( -21.9099, -131.442, -79.4732, 0.28 ) }
    apic_13 { pt3dadd( -21.6371, -132.125, -79.6054, 0.56 ) }
    apic_13 { pt3dadd( -20.221, -136.061, -80.3296, 0.28 ) }
    apic_13 { pt3dadd( -19.951, -136.951, -80.4607, 0.56 ) }
    apic_13 { pt3dadd( -18.7847, -142.067, -80.9082, 0.28 ) }
    apic_13 { pt3dadd( -18.6508, -143.143, -81.0035, 1.11 ) }
    apic_13 { pt3dadd( -18.5856, -146.153, -81.0824, 0.28 ) }
    apic_13 { pt3dadd( -18.6137, -147.241, -81.1316, 0.83 ) }
    apic_13 { pt3dadd( -18.8365, -150.077, -81.3548, 0.28 ) }
    apic_13 { pt3dadd( -19.0245, -151.947, -81.5093, 1.11 ) }
    apic_13 { pt3dadd( -19.6371, -156.99, -81.9649, 0.28 ) }
    apic_13 { pt3dadd( -20.0013, -159.886, -82.1314, 1.11 ) }
    apic_13 { pt3dadd( -20.341, -162.355, -82.1933, 0.28 ) }
    apic_13 { pt3dadd( -20.4936, -163.337, -82.2107, 0.56 ) }
    apic_13 { pt3dadd( -21.128, -167.298, -82.2737, 0.28 ) }
    apic_13 { pt3dadd( -21.3568, -168.613, -82.2399, 1.11 ) }
    apic_13 { pt3dadd( -21.9538, -171.458, -81.952, 0.28 ) }
    apic_13 { pt3dadd( -22.2051, -172.367, -81.8375, 0.56 ) }
    apic_13 { pt3dadd( -23.5688, -176.41, -81.0734, 0.28 ) }
    apic_13 { pt3dadd( -23.931, -177.413, -80.8525, 0.56 ) }
    apic_13 { pt3dadd( -24.7662, -179.445, -80.3468, 0.28 ) }
    apic_13 { pt3dadd( -25.1243, -180.289, -80.1081, 0.56 ) }
    apic_13 { pt3dadd( -26.3733, -182.984, -79.2583, 0.28 ) }
    apic_13 { pt3dadd( -26.676, -183.576, -79.0424, 1.11 ) }
    // Section: apic_5, id: apic_5, parent: apic_1 (entry count 51/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -0.873322, -33.3191, 19.6802, 1.11 ) }
    apic_5 { pt3dadd( -3.6317, -36.6292, 17.5743, 1.11 ) }
    apic_5 { pt3dadd( -5.70064, -39.8264, 16.6843, 1.11 ) }
    apic_5 { pt3dadd( -7.6205, -43.8651, 16.4053, 1.11 ) }
    apic_5 { pt3dadd( -8.61081, -46.8574, 16.5902, 1.11 ) }
    apic_5 { pt3dadd( -9.14915, -49.1947, 16.8249, 1.11 ) }
    apic_5 { pt3dadd( -9.72703, -53.7831, 17.1707, 1.11 ) }
    apic_5 { pt3dadd( -9.42405, -58.9163, 17.599, 1.11 ) }
    apic_5 { pt3dadd( -9.0339, -61.0783, 17.889, 0.83 ) }
    apic_5 { pt3dadd( -8.59458, -63.0904, 18.3185, 1.11 ) }
    apic_5 { pt3dadd( -8.22352, -64.7377, 18.6917, 1.11 ) }
    apic_5 { pt3dadd( -7.62295, -67.9333, 19.3005, 0.83 ) }
    apic_5 { pt3dadd( -7.38861, -69.9251, 19.5124, 0.83 ) }
    apic_5 { pt3dadd( -7.20546, -71.7761, 19.4072, 1.11 ) }
    apic_5 { pt3dadd( -7.11503, -73.7591, 19.2471, 0.83 ) }
    apic_5 { pt3dadd( -7.0545, -74.8129, 19.1557, 1.11 ) }
    apic_5 { pt3dadd( -6.93189, -78.2516, 18.8455, 1.11 ) }
    apic_5 { pt3dadd( -7.08136, -79.8121, 18.6775, 1.11 ) }
    apic_5 { pt3dadd( -7.78743, -83.5824, 17.9448, 0.83 ) }
    apic_5 { pt3dadd( -8.26961, -85.3677, 17.4964, 0.83 ) }
    apic_5 { pt3dadd( -8.80586, -87.2141, 16.9406, 0.83 ) }
    apic_5 { pt3dadd( -9.55566, -89.5462, 16.1184, 0.83 ) }
    apic_5 { pt3dadd( -11.232, -93.8791, 14.3391, 0.83 ) }
    apic_5 { pt3dadd( -12.5231, -96.7332, 13.1184, 0.83 ) }
    apic_5 { pt3dadd( -13.7466, -99.1402, 12.1445, 0.56 ) }
    apic_5 { pt3dadd( -14.8314, -101.365, 11.2573, 0.83 ) }
    apic_5 { pt3dadd( -15.765, -103.462, 10.4329, 0.56 ) }
    apic_5 { pt3dadd( -16.5285, -105.599, 9.59322, 0.83 ) }
    apic_5 { pt3dadd( -16.9752, -107.275, 8.91063, 0.56 ) }
    apic_5 { pt3dadd( -17.3206, -108.422, 8.42309, 0.83 ) }
    apic_5 { pt3dadd( -18.0377, -110.231, 7.6039, 0.83 ) }
    apic_5 { pt3dadd( -18.9752, -112.244, 6.68194, 0.56 ) }
    apic_5 { pt3dadd( -19.1685, -112.704, 6.53802, 0.56 ) }
    apic_5 { pt3dadd( -19.7904, -114.504, 6.26421, 0.83 ) }
    apic_5 { pt3dadd( -20.0218, -115.253, 6.24399, 0.83 ) }
    apic_5 { pt3dadd( -20.3584, -117.263, 6.23595, 0.56 ) }
    apic_5 { pt3dadd( -20.3989, -118.566, 6.26957, 0.83 ) }
    apic_5 { pt3dadd( -20.2348, -121.319, 6.38012, 0.83 ) }
    apic_5 { pt3dadd( -20.2171, -123.512, 6.51319, 0.83 ) }
    apic_5 { pt3dadd( -20.2869, -125.155, 6.62252, 0.83 ) }
    apic_5 { pt3dadd( -20.6531, -129.44, 6.87885, 0.83 ) }
    apic_5 { pt3dadd( -20.7632, -130.483, 6.93521, 0.56 ) }
    apic_5 { pt3dadd( -20.972, -132.056, 6.97015, 0.56 ) }
    apic_5 { pt3dadd( -21.6144, -136.486, 6.73876, 0.83 ) }
    apic_5 { pt3dadd( -21.92, -138.481, 6.50011, 0.56 ) }
    apic_5 { pt3dadd( -22.1123, -139.522, 6.29616, 0.83 ) }
    apic_5 { pt3dadd( -22.6442, -141.652, 5.9081, 0.56 ) }
    apic_5 { pt3dadd( -23.2948, -145.028, 5.30308, 0.83 ) }
    apic_5 { pt3dadd( -23.5278, -147.264, 4.91368, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_5 { pt3dadd( -23.6045, -149.23, 4.60325, 0.56 ) }
    apic_5 { pt3dadd( -23.6246, -151.732, 4.32894, 1.11 ) }
    apic_5 { pt3dadd( -23.5773, -154.926, 3.69656, 0.56 ) }
    apic_5 { pt3dadd( -23.5806, -156.526, 3.34179, 0.56 ) }
    apic_5 { pt3dadd( -23.5562, -159.284, 2.73699, 0.83 ) }
    apic_5 { pt3dadd( -23.544, -161.094, 2.38527, 0.56 ) }
    apic_5 { pt3dadd( -23.4618, -164.645, 1.74241, 0.83 ) }
    apic_5 { pt3dadd( -23.3911, -170.503, 0.644579, 0.56 ) }
    apic_5 { pt3dadd( -23.5011, -173.005, 0.0196796, 0.56 ) }
    apic_5 { pt3dadd( -23.648, -174.133, -0.267971, 0.56 ) }
    apic_5 { pt3dadd( -24.1287, -176.994, -0.93414, 0.28 ) }
    apic_5 { pt3dadd( -24.5723, -179.276, -1.37436, 0.56 ) }
    apic_5 { pt3dadd( -25.0296, -181.044, -1.47704, 0.56 ) }
    apic_5 { pt3dadd( -25.4296, -183.384, -1.4367, 0.83 ) }
    apic_5 { pt3dadd( -25.4674, -184.444, -1.49633, 0.28 ) }
    apic_5 { pt3dadd( -25.3275, -186.532, -1.65281, 0.28 ) }
    apic_5 { pt3dadd( -25.1279, -188.092, -1.82115, 0.56 ) }
    apic_5 { pt3dadd( -24.7132, -191.108, -2.27952, 1.67 ) }
    apic_5 { pt3dadd( -24.1117, -195.053, -3.00373, 0.83 ) }
    apic_5 { pt3dadd( -23.9136, -196.575, -3.32463, 0.83 ) }
    apic_5 { pt3dadd( -23.8195, -198.863, -3.91995, 0.56 ) }
    apic_5 { pt3dadd( -24.0234, -200.382, -4.36863, 0.56 ) }
    apic_5 { pt3dadd( -24.3162, -201.365, -4.67919, 0.28 ) }
    apic_5 { pt3dadd( -24.7458, -202.401, -4.98267, 0.28 ) }
    apic_5 { pt3dadd( -25.796, -204.297, -5.14236, 0.83 ) }
    apic_5 { pt3dadd( -26.6071, -205.758, -5.0873, 0.56 ) }
    apic_5 { pt3dadd( -28.2726, -208.822, -4.7998, 0.56 ) }
    apic_5 { pt3dadd( -28.8288, -209.986, -4.62335, 0.56 ) }
    apic_5 { pt3dadd( -29.4624, -211.736, -4.3567, 0.28 ) }
    apic_5 { pt3dadd( -30.6193, -215.793, -3.65941, 2.22 ) }
    apic_5 { pt3dadd( -31.3933, -219.095, -3.11894, 0.56 ) }
    apic_5 { pt3dadd( -31.9102, -222.22, -2.6947, 0.56 ) }
    apic_5 { pt3dadd( -32.0661, -223.67, -2.57771, 0.56 ) }
    apic_5 { pt3dadd( -32.5887, -227.625, -2.53735, 0.56 ) }
    apic_5 { pt3dadd( -33.1006, -230.666, -2.69609, 0.56 ) }
    apic_5 { pt3dadd( -33.357, -232.596, -2.90793, 0.56 ) }
    apic_5 { pt3dadd( -33.5241, -233.918, -3.03604, 0.28 ) }
    apic_5 { pt3dadd( -33.9325, -236.656, -3.22859, 0.56 ) }
    apic_5 { pt3dadd( -34.4577, -239.372, -3.39754, 0.56 ) }
    apic_5 { pt3dadd( -35.0128, -242.04, -3.48849, 2.5 ) }
    apic_5 { pt3dadd( -35.399, -244.914, -3.55388, 0.56 ) }
    apic_5 { pt3dadd( -35.5834, -247.15, -3.47777, 0.56 ) }
    apic_5 { pt3dadd( -35.7244, -249.21, -3.35095, 0.28 ) }
    apic_5 { pt3dadd( -35.7979, -250.962, -3.24153, 0.56 ) }
    apic_5 { pt3dadd( -35.7774, -252.653, -3.18838, 0.28 ) }
    apic_5 { pt3dadd( -35.701, -254.415, -3.22157, 0.56 ) }
    apic_5 { pt3dadd( -35.633, -256.256, -3.19088, 0.28 ) }
    apic_5 { pt3dadd( -35.5851, -257.594, -3.1469, 0.28 ) }
    apic_5 { pt3dadd( -35.6078, -259.892, -3.07441, 0.56 ) }
    apic_5 { pt3dadd( -35.8642, -262.34, -3.05893, 0.28 ) }
    apic_5 { pt3dadd( -36.1665, -263.863, -3.09799, 0.83 ) }
    apic_5 { pt3dadd( -36.7921, -266.32, -3.26114, 0.56 ) }
    apic_5 { pt3dadd( -37.4512, -268.809, -3.48244, 0.56 ) }
    apic_5 { pt3dadd( -37.9521, -270.691, -3.61891, 1.11 ) }
    apic_5 { pt3dadd( -38.4627, -272.69, -3.69165, 0.28 ) }
    apic_5 { pt3dadd( -38.6388, -273.453, -3.73472, 0.28 ) }
    apic_5 { pt3dadd( -38.7728, -274.415, -3.81437, 0.83 ) }
    apic_5 { pt3dadd( -38.8634, -276.162, -3.92845, 0.83 ) }
    apic_5 { pt3dadd( -38.899, -277.242, -3.88833, 0.28 ) }
    apic_5 { pt3dadd( -39.0154, -279.443, -3.72628, 0.56 ) }
    apic_5 { pt3dadd( -39.1601, -282.019, -3.29743, 0.83 ) }
    apic_5 { pt3dadd( -39.237, -284.948, -2.78792, 0.56 ) }
    apic_5 { pt3dadd( -39.2915, -286.581, -2.43509, 0.28 ) }
    apic_5 { pt3dadd( -39.4656, -289.077, -1.87055, 1.11 ) }
    apic_5 { pt3dadd( -39.7038, -291.149, -1.41483, 0.56 ) }
    apic_5 { pt3dadd( -40.1956, -293.96, -0.793999, 0.56 ) }
    apic_5 { pt3dadd( -40.9229, -297.799, 0.101573, 0.83 ) }
    apic_5 { pt3dadd( -41.2625, -299.961, 0.618265, 0.56 ) }
    apic_5 { pt3dadd( -41.4067, -301.319, 0.918387, 0.56 ) }
    apic_5 { pt3dadd( -41.4269, -302.052, 1.06654, 0.56 ) }
    apic_5 { pt3dadd( -41.4908, -303.857, 1.51264, 1.11 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 71/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -0.873322, -33.3191, 19.6802, 1.11 ) }
    apic_2 { pt3dadd( 2.05298, -35.0644, 23.8329, 1.11 ) }
    apic_2 { pt3dadd( 3.30493, -36.0326, 25.9681, 1.11 ) }
    apic_2 { pt3dadd( 4.15678, -36.92, 27.707, 0.83 ) }
    apic_2 { pt3dadd( 5.30462, -38.1158, 30.0502, 0.83 ) }
    apic_2 { pt3dadd( 6.30145, -39.1543, 32.0851, 0.83 ) }
    apic_2 { pt3dadd( 7.72086, -40.633, 34.9827, 1.11 ) }
    apic_2 { pt3dadd( 8.27591, -41.9664, 37.1436, 0.83 ) }
    apic_2 { pt3dadd( 8.49771, -42.8698, 38.6084, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 80/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -32.1716, 22.6212, 5.20644, 0.56 ) }
    dend_26 { pt3dadd( -35.4634, 25.8881, 10.2628, 0.56 ) }
    dend_26 { pt3dadd( -38.3126, 28.2008, 13.3705, 0.56 ) }
    dend_26 { pt3dadd( -40.3052, 29.5498, 15.1742, 0.56 ) }
    dend_26 { pt3dadd( -42.0933, 30.5775, 16.6143, 0.83 ) }
    dend_26 { pt3dadd( -43.8628, 31.427, 18.0793, 0.83 ) }
    dend_26 { pt3dadd( -46.1445, 32.3274, 20.1168, 0.83 ) }
    dend_26 { pt3dadd( -48.9348, 32.6983, 22.3285, 0.56 ) }
    dend_26 { pt3dadd( -50.6124, 32.6064, 23.7816, 0.56 ) }
    dend_26 { pt3dadd( -51.6693, 32.4744, 24.8127, 0.56 ) }
    dend_26 { pt3dadd( -54.1389, 32.073, 27.4761, 0.56 ) }
    dend_26 { pt3dadd( -56.3353, 31.6408, 30.0443, 0.56 ) }
    dend_26 { pt3dadd( -57.5581, 31.4256, 31.5145, 0.56 ) }
    dend_26 { pt3dadd( -59.8592, 31.0513, 34.0839, 0.56 ) }
    dend_26 { pt3dadd( -62.1381, 30.871, 36.3112, 0.56 ) }
    dend_26 { pt3dadd( -63.9021, 30.8183, 37.711, 0.56 ) }
    dend_26 { pt3dadd( -64.4034, 30.8377, 37.9889, 0.83 ) }
    dend_26 { pt3dadd( -66.6461, 31.0298, 38.8421, 0.28 ) }
    dend_26 { pt3dadd( -67.1773, 31.1273, 39.0266, 0.56 ) }
    dend_26 { pt3dadd( -69.0339, 31.6592, 39.6853, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -70.8276, 32.3638, 40.4171, 0.83 ) }
    dend_26 { pt3dadd( -72.9637, 33.6051, 41.4883, 0.56 ) }
    dend_26 { pt3dadd( -74.5731, 34.8947, 42.5616, 1.67 ) }
    dend_26 { pt3dadd( -76.6355, 37.4207, 44.4562, 0.28 ) }
    dend_26 { pt3dadd( -77.1795, 38.2519, 45.0146, 0.28 ) }
    dend_26 { pt3dadd( -77.5834, 39.0924, 45.5074, 0.56 ) }
    dend_26 { pt3dadd( -78.2156, 41.28, 46.7701, 0.28 ) }
    dend_26 { pt3dadd( -78.3328, 43.1134, 47.9014, 0.56 ) }
    dend_26 { pt3dadd( -78.1882, 44.1496, 48.6305, 0.28 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 9/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -32.1716, 22.6212, 5.20644, 0.56 ) }
    dend_25 { pt3dadd( -31.7978, 23.0994, 2.50201, 0.56 ) }
    dend_25 { pt3dadd( -29.8259, 24.6511, -5.04764, 0.56 ) }
    dend_25 { pt3dadd( -28.957, 25.2297, -7.99381, 1.39 ) }
    dend_25 { pt3dadd( -28.4967, 25.5033, -9.43203, 0.28 ) }
    dend_25 { pt3dadd( -27.8579, 25.9187, -11.7143, 0.28 ) }
    dend_25 { pt3dadd( -27.6941, 26.0362, -12.3301, 1.11 ) }
    dend_25 { pt3dadd( -26.4552, 26.9207, -16.3371, 1.11 ) }
    dend_25 { pt3dadd( -24.4047, 28.6052, -22.5085, 0.56 ) }
    dend_25 { pt3dadd( -23.5854, 29.4459, -25.0906, 0.83 ) }
    dend_25 { pt3dadd( -20.2783, 33.4619, -36.3588, 0.28 ) }
    dend_25 { pt3dadd( -20.0343, 33.7897, -37.2598, 1.11 ) }
    dend_25 { pt3dadd( -18.2157, 36.4861, -44.5947, 0.28 ) }
    dend_25 { pt3dadd( -17.9723, 36.9169, -45.7352, 0.56 ) }
    dend_25 { pt3dadd( -17.103, 38.5747, -49.47, 0.28 ) }
    dend_25 { pt3dadd( -16.5069, 39.7546, -52.868, 0.56 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 25/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 47.7905, 16.7855, -23.8861, 0.56 ) }
    dend_20 { pt3dadd( 49.0655, 17.4148, -24.1658, 0.56 ) }
    dend_20 { pt3dadd( 52.1341, 19.0652, -25.1661, 0.56 ) }
    dend_20 { pt3dadd( 53.9325, 20.0052, -25.6908, 0.56 ) }
    dend_20 { pt3dadd( 54.9795, 20.5381, -26.033, 0.56 ) }
    dend_20 { pt3dadd( 56.666, 21.3853, -26.5908, 0.28 ) }
    dend_20 { pt3dadd( 57.9316, 22.0046, -27.0029, 0.83 ) }
    dend_20 { pt3dadd( 59.4019, 22.7339, -27.5725, 0.28 ) }
    dend_20 { pt3dadd( 61.5852, 23.8516, -28.4333, 0.83 ) }
    dend_20 { pt3dadd( 63.3491, 24.844, -29.0532, 0.28 ) }
    dend_20 { pt3dadd( 64.815, 25.6767, -29.4895, 0.83 ) }
    dend_20 { pt3dadd( 65.5902, 26.1168, -29.6525, 0.56 ) }
    dend_20 { pt3dadd( 66.794, 26.8167, -29.8736, 0.56 ) }
    dend_20 { pt3dadd( 68.2363, 27.6306, -30.0565, 0.28 ) }
    dend_20 { pt3dadd( 69.6743, 28.439, -30.2495, 0.28 ) }
    dend_20 { pt3dadd( 71.4239, 29.3614, -30.6456, 1.11 ) }
    dend_20 { pt3dadd( 72.4707, 29.9313, -31.062, 0.28 ) }
    dend_20 { pt3dadd( 73.3278, 30.4143, -31.487, 0.56 ) }
    dend_20 { pt3dadd( 75.2609, 31.5537, -32.5803, 0.56 ) }
    dend_20 { pt3dadd( 76.6875, 32.4622, -33.5054, 1.67 ) }
    dend_20 { pt3dadd( 80.0596, 34.8404, -35.9088, 0.56 ) }
    dend_20 { pt3dadd( 82.3768, 36.6191, -37.5289, 0.28 ) }
    dend_20 { pt3dadd( 83.1454, 37.2379, -38.1028, 0.56 ) }
    dend_20 { pt3dadd( 84.3277, 38.2523, -39.0197, 0.28 ) }
    dend_20 { pt3dadd( 84.7618, 38.6818, -39.4034, 0.56 ) }
    dend_20 { pt3dadd( 85.933, 40.0014, -40.327, 0.28 ) }
    dend_20 { pt3dadd( 87.2781, 41.6521, -40.7085, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 52/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 47.7905, 16.7855, -23.8861, 0.56 ) }
    dend_19 { pt3dadd( 49.6971, 19.5008, -21.8462, 0.56 ) }
    dend_19 { pt3dadd( 52.0209, 22.6426, -19.5589, 0.56 ) }
    dend_19 { pt3dadd( 54.1837, 25.4421, -17.5491, 0.56 ) }
    dend_19 { pt3dadd( 56.3048, 27.9747, -15.7719, 0.83 ) }
    dend_19 { pt3dadd( 58.1212, 30.0159, -14.3119, 0.56 ) }
    dend_19 { pt3dadd( 60.7442, 32.7278, -12.2314, 0.56 ) }
    dend_19 { pt3dadd( 61.875, 33.8141, -11.3702, 0.56 ) }
    dend_19 { pt3dadd( 63.7243, 35.3752, -9.98233, 0.83 ) }
    dend_19 { pt3dadd( 65.5723, 36.7977, -8.74006, 0.56 ) }
    dend_19 { pt3dadd( 67.6715, 38.2116, -7.50065, 0.28 ) }
    dend_19 { pt3dadd( 69.4406, 39.2935, -6.43279, 0.28 ) }
    dend_19 { pt3dadd( 71.6391, 40.5204, -5.2279, 0.83 ) }
    dend_19 { pt3dadd( 74.0548, 41.7913, -3.95587, 0.28 ) }
    dend_19 { pt3dadd( 74.8646, 42.1857, -3.55901, 0.56 ) }
    dend_19 { pt3dadd( 77.0906, 43.3004, -2.56745, 0.28 ) }
    dend_19 { pt3dadd( 77.7263, 43.612, -2.34349, 0.56 ) }
    dend_19 { pt3dadd( 79.8743, 44.5995, -1.82139, 0.28 ) }
    dend_19 { pt3dadd( 80.5574, 44.8476, -1.72577, 0.83 ) }
    dend_19 { pt3dadd( 82.6886, 45.5554, -1.54938, 0.28 ) }
    dend_19 { pt3dadd( 84.0122, 46.0004, -1.46642, 0.28 ) }
    dend_19 { pt3dadd( 84.9833, 46.3328, -1.45189, 0.28 ) }
    dend_19 { pt3dadd( 87.8523, 47.3049, -1.47992, 0.83 ) }
    dend_19 { pt3dadd( 91.2665, 48.4446, -1.60249, 0.28 ) }
    dend_19 { pt3dadd( 92.8511, 48.9611, -1.68618, 0.56 ) }
    dend_19 { pt3dadd( 95.975, 49.9725, -1.8919, 0.56 ) }
    dend_19 { pt3dadd( 98.9905, 50.9048, -2.04586, 0.56 ) }
    dend_19 { pt3dadd( 101.575, 51.7456, -2.16073, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 80/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 18.4159, -8.96546, -17.7577, 0.83 ) }
    dend_15 { pt3dadd( 22.7031, -9.37276, -20.3584, 0.83 ) }
    dend_15 { pt3dadd( 28.8132, -9.66178, -23.8841, 0.56 ) }
    dend_15 { pt3dadd( 30.6607, -9.58578, -24.8435, 0.56 ) }
    dend_15 { pt3dadd( 34.7836, -9.34883, -26.9032, 0.56 ) }
    dend_15 { pt3dadd( 38.5274, -9.17388, -28.7051, 0.83 ) }
    dend_15 { pt3dadd( 41.3424, -9.01791, -30.0175, 0.56 ) }
    dend_15 { pt3dadd( 45.671, -8.81007, -31.6854, 0.83 ) }
    dend_15 { pt3dadd( 49.3937, -8.27036, -32.9117, 0.56 ) }
    dend_15 { pt3dadd( 52.0312, -7.19672, -33.8924, 0.56 ) }
    dend_15 { pt3dadd( 53.857, -5.96889, -34.5816, 0.28 ) }
    dend_15 { pt3dadd( 54.6539, -5.38884, -34.9332, 0.28 ) }
    dend_15 { pt3dadd( 57.2887, -3.74489, -35.8003, 0.83 ) }
    dend_15 { pt3dadd( 60.682, -2.38235, -36.526, 0.56 ) }
    dend_15 { pt3dadd( 62.7594, -1.78457, -37.0261, 0.56 ) }
    dend_15 { pt3dadd( 66.8573, -1.01327, -37.9825, 1.39 ) }
    dend_15 { pt3dadd( 71.7802, -0.461056, -39.096, 0.56 ) }
    dend_15 { pt3dadd( 77.7855, -0.302451, -40.4472, 0.28 ) }
    dend_15 { pt3dadd( 80.4612, -0.404621, -40.9923, 0.28 ) }
    dend_15 { pt3dadd( 87.3921, -0.979699, -42.4489, 1.94 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 91.1145, -1.25239, -43.3837, 0.28 ) }
    dend_15 { pt3dadd( 92.9998, -1.30555, -43.9538, 0.56 ) }
    dend_15 { pt3dadd( 95.8306, -1.1385, -44.9571, 0.28 ) }
    dend_15 { pt3dadd( 98.0935, -0.816399, -46.0062, 0.56 ) }
    dend_15 { pt3dadd( 101.214, -0.213595, -47.5869, 0.28 ) }
    dend_15 { pt3dadd( 103.091, 0.115971, -48.5461, 0.83 ) }
    dend_15 { pt3dadd( 105.779, 0.59623, -50.22, 0.28 ) }
    dend_15 { pt3dadd( 106.518, 0.715371, -50.7165, 0.56 ) }
    dend_15 { pt3dadd( 109.687, 1.19417, -53.0061, 0.28 ) }
    dend_15 { pt3dadd( 111.103, 1.3312, -54.2891, 0.56 ) }
    dend_15 { pt3dadd( 112.532, 1.42163, -55.5986, 0.28 ) }
    dend_15 { pt3dadd( 113.38, 1.46215, -56.3438, 0.83 ) }
    dend_15 { pt3dadd( 114.938, 1.59111, -57.5557, 0.28 ) }
    dend_15 { pt3dadd( 115.884, 1.73104, -58.2336, 0.56 ) }
    dend_15 { pt3dadd( 121.972, 2.97393, -62.2697, 0.28 ) }
    dend_15 { pt3dadd( 123.788, 3.40088, -63.4546, 0.28 ) }
    dend_15 { pt3dadd( 126.201, 4.06725, -65.1786, 0.83 ) }
    dend_15 { pt3dadd( 131.214, 5.61026, -68.9717, 0.28 ) }
    dend_15 { pt3dadd( 133.088, 6.22886, -70.4158, 1.39 ) }
    dend_15 { pt3dadd( 136.308, 7.35319, -72.8342, 0.28 ) }
    dend_15 { pt3dadd( 137.564, 7.80194, -73.7347, 1.11 ) }
    dend_15 { pt3dadd( 142.783, 9.66618, -77.7249, 0.28 ) }
    dend_15 { pt3dadd( 145.095, 10.4936, -79.5693, 0.28 ) }
    dend_15 { pt3dadd( 146.655, 11.0606, -80.893, 0.83 ) }
    dend_15 { pt3dadd( 149.133, 11.911, -83.075, 0.28 ) }
    dend_15 { pt3dadd( 149.656, 12.1365, -83.4939, 0.56 ) }
    dend_15 { pt3dadd( 152.373, 13.574, -85.2185, 0.28 ) }
    dend_15 { pt3dadd( 153.318, 14.1672, -85.6907, 1.11 ) }
    dend_15 { pt3dadd( 156.376, 16.2343, -87.0441, 0.28 ) }
    dend_15 { pt3dadd( 158.209, 17.5508, -87.8839, 0.83 ) }
    dend_15 { pt3dadd( 163.984, 21.8455, -90.7226, 0.28 ) }
    dend_15 { pt3dadd( 167.352, 24.4259, -92.3389, 1.11 ) }
    dend_15 { pt3dadd( 170.453, 26.8745, -93.7316, 0.28 ) }
    dend_15 { pt3dadd( 171.229, 27.4937, -94.0658, 0.83 ) }
    dend_15 { pt3dadd( 175.516, 31.042, -95.8084, 0.28 ) }
    dend_15 { pt3dadd( 178.113, 33.0586, -96.968, 1.39 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 36/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 18.4159, -8.96546, -17.7577, 1.11 ) }
    dend_12 { pt3dadd( 16.1029, -12.3629, -19.3593, 1.11 ) }
    dend_12 { pt3dadd( 14.8951, -15.3633, -19.9659, 0.83 ) }
    dend_12 { pt3dadd( 14.8949, -17.4245, -19.8755, 0.83 ) }
    dend_12 { pt3dadd( 15.3877, -20.1486, -19.5226, 0.83 ) }
    dend_12 { pt3dadd( 15.8274, -22.017, -19.2191, 0.83 ) }
    dend_12 { pt3dadd( 16.5553, -24.5867, -18.778, 0.83 ) }
    dend_12 { pt3dadd( 18.5334, -30.017, -17.8376, 0.83 ) }
    dend_12 { pt3dadd( 21.3868, -36.4509, -16.9309, 0.83 ) }
    dend_12 { pt3dadd( 24.1365, -41.9798, -16.4742, 0.83 ) }
    dend_12 { pt3dadd( 25.5291, -44.2786, -16.3759, 0.56 ) }
    dend_12 { pt3dadd( 27.3616, -47.0026, -16.3945, 0.83 ) }
    dend_12 { pt3dadd( 30.0042, -50.9588, -16.7097, 0.56 ) }
    dend_12 { pt3dadd( 32.6233, -54.8045, -17.348, 1.11 ) }
    dend_12 { pt3dadd( 34.9107, -58.0003, -18.149, 0.56 ) }
    dend_12 { pt3dadd( 38.6189, -62.8188, -19.5728, 0.56 ) }
    dend_12 { pt3dadd( 39.762, -64.3256, -20.0135, 0.56 ) }
    dend_12 { pt3dadd( 43.241, -69.1087, -21.5283, 0.56 ) }
    dend_12 { pt3dadd( 46.1388, -73.2167, -22.7991, 0.56 ) }
    dend_12 { pt3dadd( 48.291, -76.5113, -23.9387, 0.56 ) }
    dend_12 { pt3dadd( 48.9174, -77.4603, -24.2801, 0.56 ) }
    dend_12 { pt3dadd( 51.2426, -81.203, -25.7674, 0.83 ) }
    dend_12 { pt3dadd( 53.8268, -85.1549, -27.5424, 0.28 ) }
    dend_12 { pt3dadd( 54.5367, -86.2125, -28.0737, 0.83 ) }
    dend_12 { pt3dadd( 55.2155, -87.5039, -28.7325, 0.28 ) }
    dend_12 { pt3dadd( 56.8219, -90.7825, -30.2557, 0.28 ) }
    dend_12 { pt3dadd( 57.3532, -91.7676, -30.7151, 0.28 ) }
    dend_12 { pt3dadd( 59.1433, -95.5584, -32.3856, 1.11 ) }
    dend_12 { pt3dadd( 59.6868, -96.9384, -32.8422, 0.28 ) }
    dend_12 { pt3dadd( 60.0499, -97.9096, -33.1964, 0.28 ) }
    dend_12 { pt3dadd( 61.1086, -100.719, -34.2148, 1.11 ) }
    dend_12 { pt3dadd( 61.9979, -103.236, -35.0956, 0.28 ) }
    dend_12 { pt3dadd( 63.0134, -106.038, -36.0108, 0.28 ) }
    dend_12 { pt3dadd( 64.0102, -108.886, -36.8287, 0.28 ) }
    dend_12 { pt3dadd( 64.9835, -111.468, -37.518, 1.11 ) }
    dend_12 { pt3dadd( 66.1499, -114.822, -38.3287, 0.28 ) }
    dend_12 { pt3dadd( 66.4601, -115.919, -38.5416, 0.28 ) }
    dend_12 { pt3dadd( 67.2227, -118.508, -38.9861, 0.56 ) }
    dend_12 { pt3dadd( 67.841, -120.361, -39.2169, 0.28 ) }
    dend_12 { pt3dadd( 69.7452, -126.047, -40.1253, 0.28 ) }
    dend_12 { pt3dadd( 70.2952, -127.669, -40.4094, 0.28 ) }
    dend_12 { pt3dadd( 71.6673, -131.644, -41.223, 0.83 ) }
    dend_12 { pt3dadd( 73.0772, -135.682, -42.2685, 0.28 ) }
    dend_12 { pt3dadd( 74.249, -138.816, -43.2229, 1.67 ) }
    dend_12 { pt3dadd( 76.1526, -143.607, -44.87, 0.28 ) }
    dend_12 { pt3dadd( 76.9689, -145.712, -45.7541, 0.56 ) }
    dend_12 { pt3dadd( 77.4373, -146.742, -46.2462, 0.56 ) }
    dend_12 { pt3dadd( 78.7135, -149.28, -47.5686, 0.28 ) }
    dend_12 { pt3dadd( 79.8041, -151.218, -48.6688, 0.28 ) }
    dend_12 { pt3dadd( 81.511, -153.753, -51.2046, 0.83 ) }
    dend_12 { pt3dadd( 83.2444, -156.149, -53.6942, 0.56 ) }
    dend_12 { pt3dadd( 84.3593, -157.558, -55.3492, 0.83 ) }
    dend_12 { pt3dadd( 85.5117, -158.897, -57.0903, 0.28 ) }
    dend_12 { pt3dadd( 87.1587, -160.673, -59.7403, 0.28 ) }
    dend_12 { pt3dadd( 92.4668, -166.348, -71.2859, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 91/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 13.8953, -32.4878, 31.9116, 0.28 ) }
    dend_8 { pt3dadd( 12.7269, -33.3932, 33.5626, 0.28 ) }
    dend_8 { pt3dadd( 10.3152, -35.2622, 36.9706, 0.28 ) }
    dend_8 { pt3dadd( 9.64885, -35.7786, 37.9122, 0.56 ) }
    dend_8 { pt3dadd( 8.50314, -36.6665, 39.5312, 0.56 ) }
    dend_8 { pt3dadd( 6.8977, -37.9107, 41.7999, 0.56 ) }
    dend_8 { pt3dadd( 5.94337, -38.6502, 43.1484, 0.56 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 98/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 13.8953, -32.4878, 31.9116, 0.56 ) }
    dend_7 { pt3dadd( 16.8867, -31.7194, 32.9825, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 0/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -16.6242, -14.3028, 9.40961, 0.83 ) }
    dend_5 { pt3dadd( -13.9439, -10.9471, 18.656, 0.83 ) }
    dend_5 { pt3dadd( -13.9083, -10.0557, 19.6515, 0.83 ) }
    dend_5 { pt3dadd( -14.0097, -8.8464, 20.6689, 0.83 ) }
    dend_5 { pt3dadd( -14.3595, -6.89479, 22.1179, 0.83 ) }
    dend_5 { pt3dadd( -15.0059, -3.49347, 24.5911, 0.56 ) }
    dend_5 { pt3dadd( -15.4057, -1.19652, 26.1862, 0.56 ) }
    dend_5 { pt3dadd( -16.362, 2.77262, 28.0969, 0.56 ) }
    dend_5 { pt3dadd( -16.6062, 3.70086, 28.5621, 0.83 ) }
    dend_5 { pt3dadd( -17.4266, 6.41944, 30.0329, 0.56 ) }
    dend_5 { pt3dadd( -17.8942, 7.85526, 30.9263, 0.56 ) }
    dend_5 { pt3dadd( -18.4778, 9.93968, 32.481, 0.83 ) }
    dend_5 { pt3dadd( -18.8026, 11.3866, 33.5935, 0.56 ) }
    dend_5 { pt3dadd( -19.215, 13.312, 35.1347, 0.56 ) }
    dend_5 { pt3dadd( -19.8713, 15.5925, 36.97, 0.28 ) }
    dend_5 { pt3dadd( -20.5027, 17.5065, 38.3911, 0.28 ) }
    dend_5 { pt3dadd( -21.0774, 18.9015, 39.3416, 0.28 ) }
    dend_5 { pt3dadd( -21.6671, 20.3269, 40.2258, 0.28 ) }
    dend_5 { pt3dadd( -22.209, 21.7714, 41.0356, 0.56 ) }
    dend_5 { pt3dadd( -23.3093, 24.8116, 42.5396, 0.28 ) }
    dend_5 { pt3dadd( -24.1258, 27.0583, 43.5507, 0.28 ) }
    dend_5 { pt3dadd( -25.1887, 29.9149, 44.6846, 0.83 ) }
    dend_5 { pt3dadd( -27.2358, 35.2199, 46.7499, 0.28 ) }
    dend_5 { pt3dadd( -27.8725, 36.8856, 47.3416, 0.83 ) }
    dend_5 { pt3dadd( -28.5062, 38.5732, 47.9022, 0.28 ) }
    dend_5 { pt3dadd( -29.2369, 40.5603, 48.4409, 0.83 ) }
    dend_5 { pt3dadd( -30.3627, 43.3958, 49.1632, 0.28 ) }
    dend_5 { pt3dadd( -30.6836, 44.1511, 49.2998, 0.56 ) }
    dend_5 { pt3dadd( -31.8809, 46.3853, 49.4168, 0.28 ) }
    dend_5 { pt3dadd( -32.1533, 46.8492, 49.4119, 0.56 ) }
    dend_5 { pt3dadd( -33.6285, 49.2881, 49.2082, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 31/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -16.6242, -14.3028, 9.40961, 1.11 ) }
    dend_2 { pt3dadd( -18.5252, -16.1774, 7.00708, 1.11 ) }
    dend_2 { pt3dadd( -19.1369, -16.7806, 6.23404, 1.11 ) }
    dend_2 { pt3dadd( -21.1366, -18.7526, 3.70677, 1.11 ) }
    dend_2 { pt3dadd( -22.6702, -20.265, 1.76849, 1.11 ) }
    dend_2 { pt3dadd( -24.6454, -22.2128, -0.727798, 1.11 ) }
    dend_2 { pt3dadd( -25.901, -23.4511, -2.31471, 1.11 ) }
    // Section: apic_11, id: apic_11, parent: apic_5 (entry count 38/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -41.4908, -303.857, 1.51264, 0.56 ) }
    apic_11 { pt3dadd( -45.2277, -306.964, 2.62057, 0.56 ) }
    apic_11 { pt3dadd( -48.7784, -309.918, 3.67328, 0.28 ) }
    apic_11 { pt3dadd( -50.2487, -311.14, 4.1092, 0.56 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 42/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -41.4908, -303.857, 1.51264, 0.56 ) }
    apic_6 { pt3dadd( -42.1546, -305.783, 2.69349, 0.56 ) }
    apic_6 { pt3dadd( -42.9857, -308.428, 4.24627, 0.56 ) }
    apic_6 { pt3dadd( -43.3104, -309.385, 4.75679, 0.83 ) }
    apic_6 { pt3dadd( -44.1881, -311.507, 5.69296, 0.56 ) }
    apic_6 { pt3dadd( -44.7177, -312.671, 6.09007, 0.56 ) }
    apic_6 { pt3dadd( -46.0027, -315.497, 7.05373, 0.56 ) }
    apic_6 { pt3dadd( -46.4567, -316.33, 7.26181, 0.56 ) }
    apic_6 { pt3dadd( -47.1522, -317.571, 7.41635, 0.56 ) }
    apic_6 { pt3dadd( -48.3993, -319.879, 7.70415, 0.28 ) }
    apic_6 { pt3dadd( -49.0705, -321.245, 7.83408, 0.83 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 53/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 8.49771, -42.8698, 38.6084, 0.56 ) }
    apic_4 { pt3dadd( 8.04399, -44.886, 40.5021, 0.56 ) }
    apic_4 { pt3dadd( 7.59483, -46.8647, 42.4648, 0.56 ) }
    apic_4 { pt3dadd( 6.71949, -50.7207, 46.2899, 0.56 ) }
    apic_4 { pt3dadd( 6.41184, -52.0759, 47.6343, 0.56 ) }
    apic_4 { pt3dadd( 6.07696, -53.5512, 49.0977, 0.56 ) }
    apic_4 { pt3dadd( 5.34015, -56.7969, 52.3174, 0.56 ) }
    apic_4 { pt3dadd( 5.0571, -58.3481, 54.0215, 0.56 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 61/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 8.49771, -42.8698, 38.6084, 0.83 ) }
    apic_3 { pt3dadd( 11.6717, -48.0259, 35.0448, 0.83 ) }
    apic_3 { pt3dadd( 12.4654, -49.9756, 34.0259, 0.83 ) }
    apic_3 { pt3dadd( 14.1666, -55.1539, 31.7802, 0.56 ) }
    apic_3 { pt3dadd( 14.4925, -56.1787, 31.3936, 0.56 ) }
    apic_3 { pt3dadd( 15.455, -58.979, 30.4419, 0.56 ) }
    apic_3 { pt3dadd( 16.4093, -61.3361, 29.6715, 0.56 ) }
    apic_3 { pt3dadd( 18.3873, -65.9901, 28.6943, 0.56 ) }
    apic_3 { pt3dadd( 19.6888, -68.7971, 27.9468, 0.56 ) }
    apic_3 { pt3dadd( 20.631, -70.6341, 27.4174, 0.56 ) }
    apic_3 { pt3dadd( 21.6973, -72.3497, 26.8933, 0.56 ) }
    apic_3 { pt3dadd( 23.5682, -74.8283, 26.1133, 0.56 ) }
    apic_3 { pt3dadd( 24.1873, -75.5069, 25.8751, 0.56 ) }
    apic_3 { pt3dadd( 28.6873, -79.8782, 24.2531, 0.83 ) }
    apic_3 { pt3dadd( 29.9843, -81.3182, 23.7546, 0.28 ) }
    apic_3 { pt3dadd( 32.0653, -84.2559, 22.6284, 0.83 ) }
    apic_3 { pt3dadd( 32.921, -85.8166, 22.0492, 0.56 ) }
    apic_3 { pt3dadd( 33.7858, -87.8624, 21.367, 0.56 ) }
    apic_3 { pt3dadd( 34.341, -89.3532, 20.9242, 0.28 ) }
    apic_3 { pt3dadd( 35.3791, -92.3605, 20.1638, 0.56 ) }
    apic_3 { pt3dadd( 36.7057, -96.1637, 19.0257, 0.56 ) }
    apic_3 { pt3dadd( 37.5789, -98.4434, 18.3501, 0.56 ) }
    apic_3 { pt3dadd( 38.4468, -100.555, 17.8425, 0.28 ) }
    apic_3 { pt3dadd( 39.0292, -101.774, 17.6283, 0.83 ) }
    apic_3 { pt3dadd( 40.5744, -104.335, 17.4695, 0.28 ) }
    apic_3 { pt3dadd( 41.4018, -105.48, 17.5386, 1.11 ) }
    apic_3 { pt3dadd( 43.4029, -108.056, 18.0406, 0.56 ) }
    apic_3 { pt3dadd( 45.6527, -110.855, 18.7273, 0.56 ) }
    apic_3 { pt3dadd( 46.9983, -112.461, 19.0607, 0.83 ) }
    apic_3 { pt3dadd( 48.3873, -114.234, 19.4492, 0.28 ) }
    apic_3 { pt3dadd( 48.7464, -114.758, 19.5662, 0.56 ) }
    apic_3 { pt3dadd( 49.527, -116.011, 19.7188, 0.28 ) }
    apic_3 { pt3dadd( 50.6811, -117.916, 19.7594, 0.56 ) }
    apic_3 { pt3dadd( 52.8214, -121.216, 19.6085, 1.11 ) }
    apic_3 { pt3dadd( 54.7123, -124.38, 19.2581, 0.28 ) }
    apic_3 { pt3dadd( 55.5398, -125.816, 18.9436, 0.56 ) }
    apic_3 { pt3dadd( 56.8578, -128.19, 18.3304, 0.28 ) }
    apic_3 { pt3dadd( 57.5167, -129.489, 18.0463, 0.56 ) }
    apic_3 { pt3dadd( 57.9218, -130.44, 17.8933, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_3 { pt3dadd( 58.773, -132.348, 17.7238, 0.83 ) }
    apic_3 { pt3dadd( 59.6755, -134.217, 17.505, 0.28 ) }
    apic_3 { pt3dadd( 59.9355, -134.833, 17.4566, 0.56 ) }
    apic_3 { pt3dadd( 61.1072, -138.035, 17.311, 0.28 ) }
    apic_3 { pt3dadd( 61.704, -139.703, 17.2829, 1.39 ) }
    apic_3 { pt3dadd( 64.235, -146.052, 17.4223, 0.28 ) }
    apic_3 { pt3dadd( 64.8321, -147.401, 17.513, 0.83 ) }
    apic_3 { pt3dadd( 65.9973, -149.712, 17.7271, 0.28 ) }
    apic_3 { pt3dadd( 66.3081, -150.305, 17.7747, 0.56 ) }
    apic_3 { pt3dadd( 67.6838, -152.838, 17.9356, 0.28 ) }
    apic_3 { pt3dadd( 69.6177, -156.17, 18.2192, 0.28 ) }
    apic_3 { pt3dadd( 70.3794, -157.502, 18.3627, 1.11 ) }
    apic_3 { pt3dadd( 72.0756, -160.374, 18.6142, 0.28 ) }
    apic_3 { pt3dadd( 73.1914, -162.162, 18.7414, 0.28 ) }
    apic_3 { pt3dadd( 73.3639, -162.45, 18.756, 0.56 ) }
    apic_3 { pt3dadd( 74.7399, -164.958, 18.807, 0.28 ) }
    apic_3 { pt3dadd( 75.3544, -166.172, 18.8375, 1.39 ) }
    apic_3 { pt3dadd( 76.7634, -169.004, 18.9551, 0.28 ) }
    apic_3 { pt3dadd( 77.5915, -170.567, 18.9882, 1.39 ) }
    apic_3 { pt3dadd( 78.7388, -172.477, 18.9792, 0.28 ) }
    apic_3 { pt3dadd( 79.4372, -173.607, 18.9434, 0.28 ) }
    apic_3 { pt3dadd( 81.1815, -176.214, 18.796, 0.28 ) }
    apic_3 { pt3dadd( 82.0588, -177.408, 18.7106, 0.83 ) }
    apic_3 { pt3dadd( 84.2499, -180.189, 18.4646, 0.28 ) }
    apic_3 { pt3dadd( 84.5445, -180.548, 18.4306, 0.56 ) }
    apic_3 { pt3dadd( 85.404, -181.544, 18.3453, 0.56 ) }
    apic_3 { pt3dadd( 86.8294, -183.082, 18.2605, 0.28 ) }
    apic_3 { pt3dadd( 87.5328, -183.801, 18.2717, 0.28 ) }
    apic_3 { pt3dadd( 88.4915, -184.909, 18.3619, 1.39 ) }
    apic_3 { pt3dadd( 90.0296, -186.91, 18.6505, 0.28 ) }
    apic_3 { pt3dadd( 90.9267, -188.284, 18.8503, 0.28 ) }
    apic_3 { pt3dadd( 91.4972, -189.328, 18.9997, 0.83 ) }
    apic_3 { pt3dadd( 92.4091, -191.725, 19.4095, 0.28 ) }
    apic_3 { pt3dadd( 93.336, -194.561, 20.0221, 0.28 ) }
    apic_3 { pt3dadd( 93.4171, -194.877, 20.1019, 0.56 ) }
    apic_3 { pt3dadd( 93.8401, -197.011, 20.7654, 0.28 ) }
    apic_3 { pt3dadd( 93.9522, -197.702, 21.001, 0.83 ) }
    apic_3 { pt3dadd( 94.3908, -200.095, 21.7389, 0.28 ) }
    apic_3 { pt3dadd( 94.7866, -202.083, 22.2708, 0.28 ) }
    apic_3 { pt3dadd( 95.1185, -203.374, 22.581, 1.39 ) }
    apic_3 { pt3dadd( 95.6148, -205.59, 22.9596, 0.28 ) }
    apic_3 { pt3dadd( 95.7495, -206.234, 23.0319, 0.83 ) }
    apic_3 { pt3dadd( 96.5627, -210.24, 23.2317, 0.28 ) }
    apic_3 { pt3dadd( 96.8844, -212.325, 23.1948, 0.28 ) }
    apic_3 { pt3dadd( 96.9809, -213.302, 23.1506, 0.83 ) }
    apic_3 { pt3dadd( 97.267, -216.863, 22.8938, 0.28 ) }
    apic_3 { pt3dadd( 97.3446, -217.85, 22.8005, 1.67 ) }
    apic_3 { pt3dadd( 97.6414, -220.916, 22.5217, 0.28 ) }
    apic_3 { pt3dadd( 98.042, -224.514, 22.3563, 0.28 ) }
    apic_3 { pt3dadd( 98.2793, -225.821, 22.3007, 0.56 ) }
    apic_3 { pt3dadd( 98.7253, -227.805, 22.2924, 0.28 ) }
    apic_3 { pt3dadd( 98.9653, -228.982, 22.3436, 0.56 ) }
    apic_3 { pt3dadd( 99.2073, -230.443, 22.4302, 0.28 ) }
    apic_3 { pt3dadd( 99.562, -232.807, 22.6078, 0.56 ) }
    apic_3 { pt3dadd( 100.165, -236.628, 22.9305, 0.28 ) }
    apic_3 { pt3dadd( 100.468, -238.767, 23.1146, 1.11 ) }
    apic_3 { pt3dadd( 101.881, -250.672, 24.1446, 0.28 ) }
    apic_3 { pt3dadd( 102.006, -252.034, 24.2457, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 58/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 87.2781, 41.6521, -40.7085, 0.28 ) }
    dend_22 { pt3dadd( 89.6501, 46.5687, -44.7501, 0.28 ) }
    dend_22 { pt3dadd( 90.1001, 47.5056, -45.5054, 0.83 ) }
    dend_22 { pt3dadd( 93.1577, 53.9578, -50.0807, 0.28 ) }
    dend_22 { pt3dadd( 93.5681, 54.8278, -50.6419, 0.56 ) }
    dend_22 { pt3dadd( 96.496, 60.9935, -54.8928, 0.28 ) }
    dend_22 { pt3dadd( 97.9963, 63.7692, -56.8678, 0.28 ) }
    dend_22 { pt3dadd( 98.3795, 64.4041, -57.3657, 0.83 ) }
    dend_22 { pt3dadd( 99.9683, 66.6861, -59.3328, 0.28 ) }
    dend_22 { pt3dadd( 100.417, 67.2725, -59.8563, 0.83 ) }
    dend_22 { pt3dadd( 104.564, 72.2518, -64.5709, 0.56 ) }
    dend_22 { pt3dadd( 107.843, 75.8182, -68.102, 0.28 ) }
    dend_22 { pt3dadd( 109.172, 77.1528, -69.491, 0.83 ) }
    dend_22 { pt3dadd( 114.538, 82.4664, -75.1194, 0.56 ) }
    dend_22 { pt3dadd( 117.899, 85.6068, -78.5667, 0.28 ) }
    dend_22 { pt3dadd( 119.373, 86.9223, -79.9595, 0.28 ) }
    dend_22 { pt3dadd( 119.956, 87.3989, -80.4625, 0.56 ) }
    dend_22 { pt3dadd( 124.42, 90.9195, -84.6133, 0.28 ) }
    dend_22 { pt3dadd( 126.091, 92.1382, -86.1117, 0.28 ) }
    dend_22 { pt3dadd( 127.756, 93.2624, -87.4231, 0.83 ) }
    dend_22 { pt3dadd( 129.295, 94.2352, -88.6181, 0.83 ) }
    dend_22 { pt3dadd( 133.989, 97.2617, -92.4623, 0.28 ) }
    dend_22 { pt3dadd( 136.822, 99.052, -94.8485, 1.11 ) }
    dend_22 { pt3dadd( 138.814, 100.232, -96.562, 0.28 ) }
    dend_22 { pt3dadd( 140.562, 101.253, -98.1692, 0.28 ) }
    dend_22 { pt3dadd( 141.357, 101.787, -98.9754, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 84/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 87.2781, 41.6521, -40.7085, 0.56 ) }
    dend_21 { pt3dadd( 88.9863, 40.0818, -40.6607, 0.56 ) }
    dend_21 { pt3dadd( 90.2218, 38.6065, -40.6259, 0.28 ) }
    dend_21 { pt3dadd( 91.1347, 37.1636, -40.6541, 1.11 ) }
    dend_21 { pt3dadd( 92.7866, 33.9767, -40.5793, 0.28 ) }
    dend_21 { pt3dadd( 93.526, 32.2286, -40.6123, 1.11 ) }
    dend_21 { pt3dadd( 94.7178, 29.1525, -40.753, 0.28 ) }
    dend_21 { pt3dadd( 95.7793, 25.8739, -40.9657, 0.28 ) }
    dend_21 { pt3dadd( 96.7316, 22.6304, -41.2171, 0.28 ) }
    dend_21 { pt3dadd( 97.5756, 20.0009, -41.491, 1.39 ) }
    dend_21 { pt3dadd( 99.1062, 15.8507, -42.0838, 0.28 ) }
    dend_21 { pt3dadd( 99.6891, 14.578, -42.2869, 1.11 ) }
    dend_21 { pt3dadd( 101.551, 11.2497, -42.9294, 0.28 ) }
    dend_21 { pt3dadd( 101.89, 10.7387, -43.0186, 0.83 ) }
    dend_21 { pt3dadd( 105.048, 6.73139, -43.6994, 0.28 ) }
    dend_21 { pt3dadd( 105.705, 5.97766, -43.8233, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 107.683, 3.83153, -44.002, 0.28 ) }
    dend_21 { pt3dadd( 107.954, 3.53154, -44.0187, 0.56 ) }
    dend_21 { pt3dadd( 109.402, 1.90076, -44.2932, 0.28 ) }
    dend_21 { pt3dadd( 109.798, 1.43179, -44.4316, 0.56 ) }
    dend_21 { pt3dadd( 110.909, 0.120348, -45.1336, 0.28 ) }
    dend_21 { pt3dadd( 111.764, -0.809097, -45.7931, 0.56 ) }
    dend_21 { pt3dadd( 112.086, -1.15256, -46.0983, 0.56 ) }
    dend_21 { pt3dadd( 115.093, -4.15293, -49.2174, 0.28 ) }
    dend_21 { pt3dadd( 115.111, -4.16806, -49.2375, 0.56 ) }
    dend_21 { pt3dadd( 116.573, -5.27865, -50.9899, 0.28 ) }
    dend_21 { pt3dadd( 117.064, -5.5816, -51.6238, 0.56 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 178.113, 33.0586, -96.968, 0.28 ) }
    dend_17 { pt3dadd( 184.094, 35.153, -99.6287, 0.28 ) }
    dend_17 { pt3dadd( 185.099, 35.5246, -100.051, 1.11 ) }
    dend_17 { pt3dadd( 190.17, 37.5526, -102.049, 0.28 ) }
    dend_17 { pt3dadd( 190.728, 37.8027, -102.237, 0.83 ) }
    dend_17 { pt3dadd( 195.507, 40.0662, -103.668, 0.28 ) }
    dend_17 { pt3dadd( 195.866, 40.2417, -103.765, 0.56 ) }
    dend_17 { pt3dadd( 197.18, 41.0113, -104.005, 0.28 ) }
    dend_17 { pt3dadd( 198.136, 41.6362, -104.157, 1.67 ) }
    dend_17 { pt3dadd( 202.674, 44.8461, -104.632, 0.28 ) }
    dend_17 { pt3dadd( 203.341, 45.3085, -104.695, 0.56 ) }
    dend_17 { pt3dadd( 205.579, 46.8464, -104.815, 0.28 ) }
    dend_17 { pt3dadd( 206.335, 47.3676, -104.868, 1.11 ) }
    dend_17 { pt3dadd( 208.989, 49.2816, -105.141, 0.28 ) }
    dend_17 { pt3dadd( 209.65, 49.7499, -105.233, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 26/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 178.113, 33.0586, -96.968, 0.28 ) }
    dend_16 { pt3dadd( 179.573, 33.9463, -96.2892, 0.28 ) }
    dend_16 { pt3dadd( 180.2, 34.2453, -95.7818, 0.83 ) }
    dend_16 { pt3dadd( 181.706, 34.648, -94.358, 0.28 ) }
    dend_16 { pt3dadd( 182.304, 34.7187, -93.7632, 0.56 ) }
    dend_16 { pt3dadd( 184.367, 34.775, -92.1651, 0.28 ) }
    dend_16 { pt3dadd( 184.734, 34.756, -91.9323, 0.56 ) }
    dend_16 { pt3dadd( 188.41, 33.6987, -90.1782, 0.56 ) }
    dend_16 { pt3dadd( 189.914, 33.0296, -89.5551, 0.28 ) }
    dend_16 { pt3dadd( 190.485, 32.7179, -89.3657, 1.11 ) }
    dend_16 { pt3dadd( 193.663, 30.733, -88.473, 0.28 ) }
    dend_16 { pt3dadd( 194.213, 30.349, -88.3756, 0.56 ) }
    dend_16 { pt3dadd( 196.932, 28.6756, -88.3113, 0.28 ) }
    dend_16 { pt3dadd( 198.671, 27.795, -88.6776, 0.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 40/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 92.4668, -166.348, -71.2859, 0.83 ) }
    dend_14 { pt3dadd( 97.9032, -175.982, -74.4096, 0.83 ) }
    dend_14 { pt3dadd( 99.783, -179.032, -75.3613, 0.28 ) }
    dend_14 { pt3dadd( 101.002, -180.932, -75.9654, 1.39 ) }
    dend_14 { pt3dadd( 103.523, -184.573, -77.1493, 0.28 ) }
    dend_14 { pt3dadd( 104.606, -186.053, -77.6115, 0.28 ) }
    dend_14 { pt3dadd( 106.084, -187.979, -78.2437, 0.28 ) }
    dend_14 { pt3dadd( 106.739, -188.802, -78.6428, 0.28 ) }
    dend_14 { pt3dadd( 107.209, -189.377, -78.8295, 0.56 ) }
    dend_14 { pt3dadd( 109.228, -191.891, -79.3896, 0.28 ) }
    dend_14 { pt3dadd( 110.31, -193.272, -79.601, 1.39 ) }
    dend_14 { pt3dadd( 112.939, -197.108, -80.2592, 0.28 ) }
    dend_14 { pt3dadd( 113.726, -198.555, -80.512, 0.83 ) }
    dend_14 { pt3dadd( 114.531, -200.33, -80.9007, 0.28 ) }
    dend_14 { pt3dadd( 115.475, -202.763, -81.4913, 0.28 ) }
    dend_14 { pt3dadd( 115.846, -203.992, -81.8545, 0.83 ) }
    dend_14 { pt3dadd( 116.749, -207.464, -83.0402, 0.28 ) }
    dend_14 { pt3dadd( 117.18, -209.161, -83.7136, 1.11 ) }
    dend_14 { pt3dadd( 118.346, -213.264, -85.5493, 0.28 ) }
    dend_14 { pt3dadd( 118.834, -214.835, -86.3155, 1.39 ) }
    dend_14 { pt3dadd( 119.686, -217.243, -87.5496, 0.28 ) }
    dend_14 { pt3dadd( 120.031, -217.963, -87.9201, 0.56 ) }
    dend_14 { pt3dadd( 122.247, -221.052, -89.4796, 0.28 ) }
    dend_14 { pt3dadd( 122.96, -221.837, -89.8783, 0.83 ) }
    dend_14 { pt3dadd( 125.621, -223.879, -90.885, 0.28 ) }
    dend_14 { pt3dadd( 126.722, -224.498, -91.1976, 1.39 ) }
    dend_14 { pt3dadd( 130.332, -225.884, -91.9477, 0.28 ) }
    dend_14 { pt3dadd( 133.676, -226.746, -92.4922, 0.28 ) }
    dend_14 { pt3dadd( 133.988, -226.789, -92.5217, 0.56 ) }
    dend_14 { pt3dadd( 138.38, -227.15, -92.786, 0.28 ) }
    dend_14 { pt3dadd( 139.673, -227.212, -92.8208, 0.56 ) }
    dend_14 { pt3dadd( 142.604, -227.403, -92.8971, 0.28 ) }
    dend_14 { pt3dadd( 144.24, -227.608, -92.9115, 1.11 ) }
    dend_14 { pt3dadd( 146.629, -228.058, -92.9069, 0.28 ) }
    dend_14 { pt3dadd( 147.708, -228.363, -92.8995, 0.56 ) }
    dend_14 { pt3dadd( 152.528, -230.186, -92.8367, 0.28 ) }
    dend_14 { pt3dadd( 154.195, -230.932, -92.8128, 1.39 ) }
    dend_14 { pt3dadd( 157.618, -232.738, -92.7681, 0.28 ) }
    dend_14 { pt3dadd( 158.957, -233.537, -92.7959, 0.56 ) }
    dend_14 { pt3dadd( 161.712, -235.399, -92.8736, 0.28 ) }
    dend_14 { pt3dadd( 162.488, -235.996, -92.8807, 0.56 ) }
    dend_14 { pt3dadd( 164.014, -237.307, -92.8642, 0.28 ) }
    dend_14 { pt3dadd( 165.477, -238.667, -92.8453, 0.83 ) }
    dend_14 { pt3dadd( 167.429, -240.589, -92.8338, 0.28 ) }
    dend_14 { pt3dadd( 168.881, -242.116, -92.8113, 1.39 ) }
    dend_14 { pt3dadd( 170.82, -244.287, -92.7559, 0.28 ) }
    dend_14 { pt3dadd( 172.21, -246.013, -92.7377, 0.28 ) }
    dend_14 { pt3dadd( 173.349, -247.523, -92.6603, 0.28 ) }
    dend_14 { pt3dadd( 174.168, -248.644, -92.5284, 0.83 ) }
    dend_14 { pt3dadd( 174.837, -249.542, -92.3768, 0.28 ) }
    dend_14 { pt3dadd( 175.547, -250.414, -92.2448, 0.83 ) }
    dend_14 { pt3dadd( 176.622, -251.688, -91.8364, 0.28 ) }
    dend_14 { pt3dadd( 178.165, -253.521, -91.1631, 0.83 ) }
    dend_14 { pt3dadd( 179.99, -255.502, -90.315, 0.28 ) }
    dend_14 { pt3dadd( 181.023, -256.594, -89.7916, 0.28 ) }
    dend_14 { pt3dadd( 183.701, -259.22, -88.3811, 0.28 ) }
    dend_14 { pt3dadd( 186.426, -261.644, -86.95, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 97/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 92.4668, -166.348, -71.2859, 0.56 ) }
    dend_13 { pt3dadd( 99.6862, -171.87, -59.2531, 0.56 ) }
    dend_13 { pt3dadd( 100.85, -173.046, -57.2427, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( 101.619, -173.954, -55.891, 0.28 ) }
    dend_13 { pt3dadd( 102.123, -174.606, -55.0258, 0.56 ) }
    dend_13 { pt3dadd( 104.314, -177.639, -51.3161, 0.28 ) }
    dend_13 { pt3dadd( 105.009, -178.643, -50.2482, 1.11 ) }
    dend_13 { pt3dadd( 106.923, -182.627, -47.7175, 0.28 ) }
    dend_13 { pt3dadd( 107.248, -183.305, -47.2917, 0.56 ) }
    dend_13 { pt3dadd( 108.146, -185.124, -46.2698, 0.28 ) }
    dend_13 { pt3dadd( 108.531, -185.913, -45.8712, 0.83 ) }
    dend_13 { pt3dadd( 110.085, -189.24, -44.5368, 0.28 ) }
    dend_13 { pt3dadd( 111.697, -192.502, -43.335, 0.28 ) }
    dend_13 { pt3dadd( 112.24, -193.694, -43.0013, 0.83 ) }
    dend_13 { pt3dadd( 113.315, -196.254, -42.3458, 0.28 ) }
    dend_13 { pt3dadd( 113.498, -196.767, -42.2159, 0.56 ) }
    dend_13 { pt3dadd( 114.316, -199.293, -41.5619, 0.28 ) }
    dend_13 { pt3dadd( 114.405, -199.553, -41.4648, 0.56 ) }
    dend_13 { pt3dadd( 115.046, -201.298, -40.8169, 0.28 ) }
    dend_13 { pt3dadd( 115.205, -201.64, -40.685, 0.56 ) }
    dend_13 { pt3dadd( 116.808, -204.307, -39.2866, 0.28 ) }
    dend_13 { pt3dadd( 117.221, -204.861, -38.9669, 1.11 ) }
    dend_13 { pt3dadd( 120.354, -208.752, -36.5484, 0.28 ) }
    dend_13 { pt3dadd( 120.697, -209.14, -36.2865, 0.56 ) }
    dend_13 { pt3dadd( 122.811, -211.386, -34.687, 0.28 ) }
    dend_13 { pt3dadd( 124.597, -213.21, -33.4015, 0.56 ) }
    dend_13 { pt3dadd( 129.086, -217.459, -30.4146, 0.28 ) }
    dend_13 { pt3dadd( 129.867, -218.184, -29.9096, 0.56 ) }
    dend_13 { pt3dadd( 131.117, -219.294, -29.1782, 0.56 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 26/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.901, -23.4511, -2.31471, 0.56 ) }
    dend_4 { pt3dadd( -27.8875, -25.0929, -2.43544, 0.56 ) }
    dend_4 { pt3dadd( -28.4231, -25.631, -2.51636, 0.56 ) }
    dend_4 { pt3dadd( -29.4593, -26.6627, -2.67286, 0.56 ) }
    dend_4 { pt3dadd( -30.7035, -27.7863, -2.83391, 0.83 ) }
    dend_4 { pt3dadd( -32.3367, -29.1257, -2.99998, 0.83 ) }
    dend_4 { pt3dadd( -33.9786, -30.5025, -3.19829, 0.83 ) }
    dend_4 { pt3dadd( -35.1045, -31.6123, -3.48093, 0.56 ) }
    dend_4 { pt3dadd( -35.5621, -32.1266, -3.60504, 0.56 ) }
    dend_4 { pt3dadd( -36.2875, -32.9886, -3.81265, 0.83 ) }
    dend_4 { pt3dadd( -36.9517, -33.7662, -3.92578, 0.56 ) }
    dend_4 { pt3dadd( -38.0654, -35.0572, -3.94401, 0.56 ) }
    dend_4 { pt3dadd( -39.0982, -36.4179, -3.86375, 0.56 ) }
    dend_4 { pt3dadd( -39.6508, -37.1969, -3.77578, 0.56 ) }
    dend_4 { pt3dadd( -40.0068, -37.8048, -3.73503, 0.56 ) }
    dend_4 { pt3dadd( -40.5107, -38.8321, -3.74407, 0.56 ) }
    dend_4 { pt3dadd( -41.1094, -40.2774, -3.83408, 1.39 ) }
    dend_4 { pt3dadd( -41.7007, -41.8416, -4.03329, 0.56 ) }
    dend_4 { pt3dadd( -42.365, -43.6389, -4.3861, 0.56 ) }
    dend_4 { pt3dadd( -43.0887, -45.857, -5.05748, 0.83 ) }
    dend_4 { pt3dadd( -43.4755, -47.3069, -5.60194, 0.56 ) }
    dend_4 { pt3dadd( -43.7465, -48.5303, -6.17601, 1.11 ) }
    dend_4 { pt3dadd( -44.1073, -49.9886, -7.01257, 0.56 ) }
    dend_4 { pt3dadd( -44.4434, -51.1572, -7.73243, 0.83 ) }
    dend_4 { pt3dadd( -45.0421, -52.8754, -8.84655, 0.28 ) }
    dend_4 { pt3dadd( -45.4808, -53.8617, -9.45101, 0.28 ) }
    dend_4 { pt3dadd( -46.0967, -55.1101, -10.1895, 0.83 ) }
    dend_4 { pt3dadd( -47.0539, -56.9562, -11.2924, 0.28 ) }
    dend_4 { pt3dadd( -47.5926, -58.0119, -11.8946, 1.11 ) }
    dend_4 { pt3dadd( -48.1779, -59.1762, -12.4969, 0.28 ) }
    dend_4 { pt3dadd( -48.3287, -59.4473, -12.6179, 0.83 ) }
    dend_4 { pt3dadd( -49.139, -60.7834, -13.2374, 0.28 ) }
    dend_4 { pt3dadd( -49.4829, -61.3415, -13.4821, 0.83 ) }
    dend_4 { pt3dadd( -50.4541, -62.9552, -14.1865, 0.28 ) }
    dend_4 { pt3dadd( -51.1106, -64.028, -14.6478, 0.83 ) }
    dend_4 { pt3dadd( -51.8342, -65.2097, -15.1182, 0.28 ) }
    dend_4 { pt3dadd( -52.8595, -66.9053, -15.751, 0.56 ) }
    dend_4 { pt3dadd( -53.3423, -67.6936, -16.0208, 1.67 ) }
    dend_4 { pt3dadd( -54.2494, -69.2479, -16.5241, 0.28 ) }
    dend_4 { pt3dadd( -54.7756, -70.2609, -16.8326, 0.28 ) }
    dend_4 { pt3dadd( -54.9798, -70.7141, -16.9756, 0.56 ) }
    dend_4 { pt3dadd( -55.5025, -72.14, -17.4005, 0.28 ) }
    dend_4 { pt3dadd( -55.6475, -72.6402, -17.5441, 0.56 ) }
    dend_4 { pt3dadd( -55.863, -73.4463, -17.801, 0.28 ) }
    dend_4 { pt3dadd( -56.1798, -74.8103, -18.2473, 1.39 ) }
    dend_4 { pt3dadd( -56.5173, -76.468, -18.8365, 0.28 ) }
    dend_4 { pt3dadd( -56.6196, -76.9637, -19.0242, 0.56 ) }
    dend_4 { pt3dadd( -56.7729, -77.7273, -19.3309, 0.28 ) }
    dend_4 { pt3dadd( -56.9526, -78.5587, -19.6704, 0.28 ) }
    dend_4 { pt3dadd( -57.2163, -79.531, -19.938, 0.28 ) }
    dend_4 { pt3dadd( -57.4103, -80.1082, -19.9437, 1.11 ) }
    dend_4 { pt3dadd( -57.8782, -81.2048, -19.7283, 0.28 ) }
    dend_4 { pt3dadd( -57.8782, -81.2048, -19.7283, 0.56 ) }
    dend_4 { pt3dadd( -58.5315, -82.3931, -19.2471, 0.28 ) }
    dend_4 { pt3dadd( -59.5835, -84.2186, -18.3831, 0.83 ) }
    dend_4 { pt3dadd( -60.4506, -85.5952, -17.74, 0.28 ) }
    dend_4 { pt3dadd( -60.7949, -86.1271, -17.498, 0.56 ) }
    dend_4 { pt3dadd( -61.9318, -87.9261, -16.7114, 0.28 ) }
    dend_4 { pt3dadd( -62.4355, -88.7291, -16.4186, 1.11 ) }
    dend_4 { pt3dadd( -63.3472, -90.2158, -16.0481, 0.28 ) }
    dend_4 { pt3dadd( -64.0624, -91.4312, -15.9317, 1.11 ) }
    dend_4 { pt3dadd( -64.9049, -92.9745, -15.8593, 0.28 ) }
    dend_4 { pt3dadd( -65.3302, -93.7855, -15.8341, 0.28 ) }
    dend_4 { pt3dadd( -65.814, -94.6931, -15.8391, 0.56 ) }
    dend_4 { pt3dadd( -66.538, -96.03, -15.8025, 0.28 ) }
    dend_4 { pt3dadd( -67.0403, -96.9352, -15.7898, 0.83 ) }
    dend_4 { pt3dadd( -68.0203, -98.5764, -15.6788, 0.28 ) }
    dend_4 { pt3dadd( -68.3068, -98.9991, -15.6446, 0.56 ) }
    dend_4 { pt3dadd( -69.1978, -100.236, -15.5774, 0.28 ) }
    dend_4 { pt3dadd( -69.894, -101.132, -15.5329, 1.11 ) }
    dend_4 { pt3dadd( -71.0281, -102.437, -15.6134, 0.28 ) }
    dend_4 { pt3dadd( -71.5156, -102.934, -15.7637, 0.28 ) }
    dend_4 { pt3dadd( -72.2126, -103.588, -16.0539, 0.56 ) }
    dend_4 { pt3dadd( -73.4789, -104.818, -16.6948, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_4 { pt3dadd( -74.382, -105.71, -17.2082, 0.56 ) }
    dend_4 { pt3dadd( -75.4063, -106.806, -17.8491, 1.39 ) }
    dend_4 { pt3dadd( -77.2182, -108.923, -18.9746, 0.28 ) }
    dend_4 { pt3dadd( -77.722, -109.606, -19.3341, 0.56 ) }
    dend_4 { pt3dadd( -78.4034, -110.638, -19.8623, 0.28 ) }
    dend_4 { pt3dadd( -78.6793, -111.141, -20.095, 0.56 ) }
    dend_4 { pt3dadd( -79.1557, -112.307, -20.574, 0.28 ) }
    dend_4 { pt3dadd( -79.3507, -112.924, -20.7917, 0.83 ) }
    dend_4 { pt3dadd( -79.7408, -114.503, -21.2836, 0.28 ) }
    dend_4 { pt3dadd( -79.855, -114.944, -21.4437, 0.83 ) }
    dend_4 { pt3dadd( -80.3669, -116.624, -22.1482, 0.28 ) }
    dend_4 { pt3dadd( -80.7914, -117.886, -22.7605, 0.56 ) }
    dend_4 { pt3dadd( -81.335, -119.344, -23.5264, 0.28 ) }
    dend_4 { pt3dadd( -81.5121, -119.791, -23.7711, 0.83 ) }
    dend_4 { pt3dadd( -82.741, -122.763, -25.3895, 0.28 ) }
    dend_4 { pt3dadd( -83.2487, -123.98, -26.0652, 1.94 ) }
    dend_4 { pt3dadd( -84.0836, -125.87, -27.1346, 0.28 ) }
    dend_4 { pt3dadd( -84.2206, -126.177, -27.3142, 0.56 ) }
    dend_4 { pt3dadd( -84.7414, -127.336, -27.8833, 0.28 ) }
    dend_4 { pt3dadd( -84.8974, -127.672, -27.9692, 0.56 ) }
    dend_4 { pt3dadd( -85.2335, -128.373, -27.8853, 0.28 ) }
    dend_4 { pt3dadd( -85.4391, -128.819, -27.7459, 0.56 ) }
    dend_4 { pt3dadd( -85.9351, -129.893, -27.3019, 0.28 ) }
    dend_4 { pt3dadd( -87.1044, -132.325, -26.2727, 1.39 ) }
    dend_4 { pt3dadd( -88.3755, -134.878, -25.2356, 0.28 ) }
    dend_4 { pt3dadd( -89.0681, -136.251, -24.7625, 0.83 ) }
    dend_4 { pt3dadd( -89.7021, -137.465, -24.3904, 0.28 ) }
    dend_4 { pt3dadd( -90.0952, -138.204, -24.2283, 0.83 ) }
    dend_4 { pt3dadd( -91.2803, -140.439, -23.9367, 0.28 ) }
    dend_4 { pt3dadd( -91.7727, -141.38, -23.951, 1.11 ) }
    dend_4 { pt3dadd( -92.8428, -143.485, -24.2264, 0.28 ) }
    dend_4 { pt3dadd( -93.0804, -143.963, -24.3069, 0.56 ) }
    dend_4 { pt3dadd( -94.1166, -145.965, -24.8026, 0.28 ) }
    dend_4 { pt3dadd( -94.6737, -147.001, -25.1075, 0.28 ) }
    dend_4 { pt3dadd( -94.986, -147.455, -25.3173, 1.11 ) }
    dend_4 { pt3dadd( -96.3687, -149.181, -26.2333, 0.28 ) }
    dend_4 { pt3dadd( -97.2715, -150.131, -26.9011, 0.56 ) }
    dend_4 { pt3dadd( -98.5854, -151.368, -27.8638, 0.28 ) }
    dend_4 { pt3dadd( -99.1635, -151.836, -28.2678, 1.11 ) }
    dend_4 { pt3dadd( -103.221, -154.785, -31.0512, 0.28 ) }
    dend_4 { pt3dadd( -103.572, -155.016, -31.2793, 0.83 ) }
    dend_4 { pt3dadd( -105.533, -156.226, -32.5775, 0.28 ) }
    dend_4 { pt3dadd( -106.547, -156.836, -33.2892, 0.56 ) }
    dend_4 { pt3dadd( -106.948, -157.075, -33.5606, 0.56 ) }
    dend_4 { pt3dadd( -108.118, -157.731, -34.3594, 0.56 ) }
    dend_4 { pt3dadd( -109.227, -158.24, -34.966, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 46/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -25.901, -23.4511, -2.31471, 0.83 ) }
    dend_3 { pt3dadd( -25.4865, -26.3451, -1.13805, 0.83 ) }
    dend_3 { pt3dadd( -24.8594, -29.534, -0.338739, 0.83 ) }
    dend_3 { pt3dadd( -24.5622, -31.9325, 0.165228, 0.56 ) }
    dend_3 { pt3dadd( -24.3198, -35.9571, 0.924226, 0.83 ) }
    dend_3 { pt3dadd( -24.3378, -38.2442, 1.33366, 0.56 ) }
    dend_3 { pt3dadd( -24.4612, -40.7718, 1.7732, 0.56 ) }
    dend_3 { pt3dadd( -25.218, -47.8644, 2.9216, 0.83 ) }
    dend_3 { pt3dadd( -25.5157, -50.5806, 3.36565, 1.11 ) }
    dend_3 { pt3dadd( -25.6368, -52.8682, 3.71448, 0.83 ) }
    dend_3 { pt3dadd( -25.5867, -55.154, 4.07079, 0.83 ) }
    dend_3 { pt3dadd( -25.5419, -56.4685, 4.28422, 0.83 ) }
    dend_3 { pt3dadd( -25.4443, -60.317, 4.82913, 0.83 ) }
    dend_3 { pt3dadd( -25.4371, -63.8755, 5.38797, 0.83 ) }
    dend_3 { pt3dadd( -25.4405, -65.7264, 5.67584, 0.56 ) }
    dend_3 { pt3dadd( -25.6205, -68.1524, 6.02518, 0.56 ) }
    dend_3 { pt3dadd( -25.8434, -69.7235, 6.25757, 0.56 ) }
    dend_3 { pt3dadd( -26.411, -72.3958, 6.62191, 0.83 ) }
    dend_3 { pt3dadd( -27.2085, -75.2344, 6.94998, 0.56 ) }
    dend_3 { pt3dadd( -27.9892, -78.075, 7.53252, 0.83 ) }
    dend_3 { pt3dadd( -28.5988, -80.9239, 8.36778, 0.56 ) }
    dend_3 { pt3dadd( -28.8963, -82.8677, 8.98997, 0.56 ) }
    dend_3 { pt3dadd( -29.1505, -85.6213, 9.84999, 0.28 ) }
    dend_3 { pt3dadd( -29.2149, -87.1545, 10.344, 0.83 ) }
    dend_3 { pt3dadd( -29.1393, -92.1539, 11.8436, 0.28 ) }
    dend_3 { pt3dadd( -29.0708, -93.853, 12.3002, 0.56 ) }
    dend_3 { pt3dadd( -28.8896, -96.6023, 13.0471, 0.28 ) }
    dend_3 { pt3dadd( -28.6923, -101.019, 14.1847, 0.83 ) }
    dend_3 { pt3dadd( -28.6959, -103.83, 14.89, 0.56 ) }
    dend_3 { pt3dadd( -28.7142, -107.102, 15.619, 1.11 ) }
    dend_3 { pt3dadd( -28.6386, -109.338, 15.9893, 0.56 ) }
    dend_3 { pt3dadd( -28.3537, -112.723, 16.5274, 0.56 ) }
    dend_3 { pt3dadd( -28.2129, -113.724, 16.7118, 0.56 ) }
    dend_3 { pt3dadd( -27.7592, -116.585, 17.3043, 0.83 ) }
    dend_3 { pt3dadd( -27.432, -118.866, 17.8491, 0.28 ) }
    dend_3 { pt3dadd( -27.1052, -121.247, 18.5652, 0.83 ) }
    dend_3 { pt3dadd( -26.9799, -123.067, 19.1954, 0.28 ) }
    dend_3 { pt3dadd( -27.0134, -124.181, 19.5304, 0.56 ) }
    dend_3 { pt3dadd( -27.1844, -127.937, 20.4934, 0.83 ) }
    dend_3 { pt3dadd( -27.3978, -130.902, 21.0527, 0.28 ) }
    dend_3 { pt3dadd( -27.6295, -132.514, 21.2767, 0.56 ) }
    dend_3 { pt3dadd( -28.2619, -136.132, 21.6072, 0.83 ) }
    dend_3 { pt3dadd( -28.8788, -139.904, 21.712, 0.28 ) }
    dend_3 { pt3dadd( -29.3412, -143.837, 21.3155, 0.83 ) }
    dend_3 { pt3dadd( -29.5443, -146.16, 20.7308, 0.28 ) }
    dend_3 { pt3dadd( -29.5901, -147.4, 20.2914, 0.28 ) }
    dend_3 { pt3dadd( -29.5323, -148.675, 19.8099, 0.28 ) }
    dend_3 { pt3dadd( -29.3924, -149.914, 19.3886, 1.11 ) }
    dend_3 { pt3dadd( -28.8926, -153.656, 18.567, 0.28 ) }
    dend_3 { pt3dadd( -28.815, -154.372, 18.4604, 0.56 ) }
    dend_3 { pt3dadd( -28.7116, -156.5, 18.2337, 0.56 ) }
    dend_3 { pt3dadd( -28.5598, -159.84, 17.8887, 0.28 ) }
    dend_3 { pt3dadd( -28.4189, -163.128, 17.5819, 0.56 ) }
    dend_3 { pt3dadd( -28.333, -165.726, 17.4801, 1.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( -28.3143, -167.971, 17.5366, 0.56 ) }
    dend_3 { pt3dadd( -28.3201, -171.965, 17.6942, 0.28 ) }
    dend_3 { pt3dadd( -28.3292, -174.206, 17.8078, 1.11 ) }
    dend_3 { pt3dadd( -28.2286, -176.065, 18.0038, 0.83 ) }
    dend_3 { pt3dadd( -27.8309, -178.928, 18.5146, 0.28 ) }
    dend_3 { pt3dadd( -27.656, -179.886, 18.7968, 0.56 ) }
    dend_3 { pt3dadd( -27.3672, -181.351, 19.4806, 0.28 ) }
    dend_3 { pt3dadd( -27.0648, -183.068, 20.5575, 0.28 ) }
    dend_3 { pt3dadd( -26.5925, -186.225, 22.6716, 0.28 ) }
    dend_3 { pt3dadd( -26.4617, -187.183, 23.3208, 0.83 ) }
    dend_3 { pt3dadd( -26.1383, -188.829, 24.4114, 0.28 ) }
    dend_3 { pt3dadd( -25.5795, -191.217, 25.9951, 0.83 ) }
    dend_3 { pt3dadd( -25.1402, -193.191, 27.2709, 0.28 ) }
    dend_3 { pt3dadd( -24.8115, -194.924, 28.289, 0.28 ) }
    dend_3 { pt3dadd( -24.2775, -197.376, 29.5453, 1.39 ) }
    dend_3 { pt3dadd( -23.4686, -200.633, 30.8634, 0.28 ) }
    dend_3 { pt3dadd( -23.2291, -201.716, 31.1687, 0.28 ) }
    dend_3 { pt3dadd( -22.8747, -203.699, 31.5368, 0.56 ) }
    dend_3 { pt3dadd( -22.599, -205.91, 31.8178, 0.83 ) }
    dend_3 { pt3dadd( -22.4722, -209.186, 32.2472, 0.28 ) }
    dend_3 { pt3dadd( -22.4924, -211.529, 32.519, 0.56 ) }
    dend_3 { pt3dadd( -22.7096, -214.265, 32.8033, 0.56 ) }
    dend_3 { pt3dadd( -22.9848, -216.399, 33.0593, 0.28 ) }
    dend_3 { pt3dadd( -23.3213, -218.345, 33.2205, 1.39 ) }
    dend_3 { pt3dadd( -23.9127, -220.978, 33.3479, 0.28 ) }
    dend_3 { pt3dadd( -24.1605, -221.899, 33.3251, 0.56 ) }
    dend_3 { pt3dadd( -24.7096, -224.112, 33.2109, 0.28 ) }
    dend_3 { pt3dadd( -24.9508, -225.687, 33.087, 0.56 ) }
    dend_3 { pt3dadd( -25.2706, -228.689, 32.828, 0.28 ) }
    dend_3 { pt3dadd( -25.3215, -229.336, 32.7728, 0.83 ) }
    dend_3 { pt3dadd( -25.3464, -231.415, 32.6855, 0.28 ) }
    dend_3 { pt3dadd( -25.2762, -233.668, 32.7507, 0.83 ) }
    dend_3 { pt3dadd( -24.9573, -237.157, 33.0892, 0.56 ) }
    dend_3 { pt3dadd( -24.613, -239.69, 33.4679, 0.28 ) }
    dend_3 { pt3dadd( -24.4241, -240.982, 33.7266, 1.11 ) }
    dend_3 { pt3dadd( -24.1708, -244.533, 34.5523, 0.28 ) }
    dend_3 { pt3dadd( -24.156, -245.781, 34.8808, 0.83 ) }
    dend_3 { pt3dadd( -24.1944, -248.352, 35.5408, 0.28 ) }
    dend_3 { pt3dadd( -24.3715, -251.488, 36.2524, 0.28 ) }
    dend_3 { pt3dadd( -24.4428, -252.605, 36.51, 0.56 ) }
    dend_3 { pt3dadd( -25.0563, -257.617, 37.6341, 0.28 ) }
    dend_3 { pt3dadd( -25.1703, -258.055, 37.7201, 0.56 ) }
    // Section: apic_10, id: apic_10, parent: apic_6 (entry count 42/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -49.0705, -321.245, 7.83408, 0.28 ) }
    apic_10 { pt3dadd( -46.0835, -322.919, 9.1071, 0.28 ) }
    apic_10 { pt3dadd( -45.5891, -323.196, 9.31777, 0.56 ) }
    apic_10 { pt3dadd( -44.1108, -324.024, 9.94781, 0.28 ) }
    apic_10 { pt3dadd( -43.7607, -324.221, 10.097, 0.56 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 47/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -49.0705, -321.245, 7.83408, 0.56 ) }
    apic_7 { pt3dadd( -50.172, -324.764, 7.32197, 0.56 ) }
    apic_7 { pt3dadd( -50.6567, -326.163, 7.11022, 0.56 ) }
    apic_7 { pt3dadd( -51.2236, -327.645, 6.87726, 0.56 ) }
    apic_7 { pt3dadd( -51.9324, -329.595, 6.42165, 0.56 ) }
    apic_7 { pt3dadd( -52.6401, -331.713, 5.84902, 0.28 ) }
    apic_7 { pt3dadd( -53.5389, -334.557, 4.99655, 0.56 ) }
    apic_7 { pt3dadd( -53.9803, -336.095, 4.41152, 0.28 ) }
    apic_7 { pt3dadd( -54.2308, -337.217, 3.94537, 0.83 ) }
    apic_7 { pt3dadd( -54.6807, -340.378, 2.6848, 0.56 ) }
    apic_7 { pt3dadd( -54.823, -342.891, 1.62076, 0.56 ) }
    apic_7 { pt3dadd( -54.7081, -343.962, 1.18488, 0.28 ) }
    apic_7 { pt3dadd( -54.1554, -346.129, 0.225457, 0.28 ) }
    apic_7 { pt3dadd( -53.636, -347.679, -0.489196, 0.56 ) }
    apic_7 { pt3dadd( -52.7464, -349.73, -1.40416, 1.39 ) }
    apic_7 { pt3dadd( -51.5035, -351.929, -2.38636, 0.56 ) }
    apic_7 { pt3dadd( -49.9787, -354.406, -3.5866, 0.56 ) }
    apic_7 { pt3dadd( -48.6702, -356.395, -4.534, 0.28 ) }
    apic_7 { pt3dadd( -48.0687, -357.281, -4.94529, 0.28 ) }
    apic_7 { pt3dadd( -47.4862, -358.053, -5.23555, 0.83 ) }
    apic_7 { pt3dadd( -46.1341, -359.78, -5.70605, 0.28 ) }
    apic_7 { pt3dadd( -44.491, -362.011, -5.96205, 0.28 ) }
    apic_7 { pt3dadd( -43.3499, -363.661, -6.00059, 0.28 ) }
    apic_7 { pt3dadd( -42.5062, -364.894, -5.92351, 1.11 ) }
    apic_7 { pt3dadd( -40.7642, -367.6, -5.72197, 0.28 ) }
    apic_7 { pt3dadd( -40.0405, -368.904, -5.6476, 0.83 ) }
    apic_7 { pt3dadd( -39.5084, -369.996, -5.58597, 0.28 ) }
    apic_7 { pt3dadd( -38.606, -371.787, -5.50075, 0.28 ) }
    apic_7 { pt3dadd( -37.9473, -373.318, -5.48883, 0.28 ) }
    apic_7 { pt3dadd( -37.5247, -374.398, -5.54435, 2.22 ) }
    apic_7 { pt3dadd( -36.4825, -377.402, -6.04766, 0.28 ) }
    apic_7 { pt3dadd( -36.3169, -377.994, -6.15349, 0.56 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 79/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -36.3169, -377.994, -6.15349, 0.28 ) }
    apic_9 { pt3dadd( -35.143, -381.001, -7.3694, 0.28 ) }
    apic_9 { pt3dadd( -34.7687, -381.96, -7.75704, 0.56 ) }
    apic_9 { pt3dadd( -33.7398, -384.596, -8.82281, 0.28 ) }
    apic_9 { pt3dadd( -33.5946, -384.968, -8.9732, 0.56 ) }
    apic_9 { pt3dadd( -32.3861, -388.064, -10.225, 0.28 ) }
    apic_9 { pt3dadd( -32.1519, -388.664, -10.4675, 0.56 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 86/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -36.3169, -377.994, -6.15349, 0.28 ) }
    apic_8 { pt3dadd( -37.7259, -380.601, -6.38364, 0.28 ) }
    apic_8 { pt3dadd( -38.3046, -381.616, -6.54757, 0.56 ) }
    apic_8 { pt3dadd( -39.8973, -384.143, -6.84026, 0.28 ) }
    apic_8 { pt3dadd( -40.7817, -385.551, -6.97862, 0.56 ) }
    apic_8 { pt3dadd( -42.0737, -387.656, -7.2774, 0.28 ) }
    apic_8 { pt3dadd( -43.3157, -390.455, -7.64748, 0.28 ) }
    apic_8 { pt3dadd( -44.1625, -393.046, -7.94477, 1.11 ) }
    apic_8 { pt3dadd( -45.0326, -397.401, -8.55409, 0.28 ) }
    apic_8 { pt3dadd( -45.1353, -398.502, -8.72775, 0.28 ) }
    apic_8 { pt3dadd( -45.2228, -400.963, -9.13454, 0.83 ) }
    apic_8 { pt3dadd( -44.8211, -408.144, -10.3785, 0.28 ) }
    apic_8 { pt3dadd( -44.6746, -408.948, -10.5352, 0.56 ) }
    apic_8 { pt3dadd( -43.3677, -413.723, -11.4069, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_8 { pt3dadd( -42.945, -414.95, -11.6717, 0.56 ) }
    apic_8 { pt3dadd( -42.3315, -416.72, -12.03, 0.56 ) }
    apic_8 { pt3dadd( -41.3866, -419.433, -12.4941, 0.28 ) }
    apic_8 { pt3dadd( -40.261, -422.855, -13.4462, 0.28 ) }
    apic_8 { pt3dadd( -39.9665, -423.525, -13.6268, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_23, dend_10, dend_9, dend_0, apic_12, apic_1, dend_27, dend_24, dend_18, dend_11, dend_6, dend_1, apic_14, apic_13, apic_5, apic_2, dend_26, dend_25, dend_20, dend_19, dend_15, dend_12, dend_8, dend_7, dend_5, dend_2, apic_11, apic_6, apic_4, apic_3, dend_22, dend_21, dend_17, dend_16, dend_14, dend_13, dend_4, dend_3, apic_10, apic_7, apic_9, apic_8]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_18 = new SectionList()
    apic_13 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_5 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_26 OneSecGrp_SectionRef_21.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_25 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_19 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_15 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    apic_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_14 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_4 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_3 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_44 = new SectionList()
    apic_7 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_10 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_12 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_2 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_8 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_4 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_17 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_43 = new SectionList()
    apic_10 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, axon_0, axon_0, apic_12, apic_12, apic_12, apic_1, apic_1, apic_1, apic_1, apic_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_9 nseg = 7
    dend_27 nseg = 3
    dend_18 nseg = 3
    apic_14 nseg = 9
    apic_13 nseg = 9
    apic_5 nseg = 15
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_15 nseg = 9
    dend_12 nseg = 9
    dend_5 nseg = 5
    apic_3 nseg = 11
    dend_22 nseg = 5
    dend_21 nseg = 3
    dend_14 nseg = 7
    dend_13 nseg = 5
    dend_4 nseg = 9
    dend_3 nseg = 13
    apic_7 nseg = 3
    apic_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_LBC_df15689e81_0_0


