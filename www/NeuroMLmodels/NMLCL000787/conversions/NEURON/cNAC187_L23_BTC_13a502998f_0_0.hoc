// Cell: cNAC187_L23_BTC_13a502998f_0_0
/*
{
  "id" : "cNAC187_L23_BTC_13a502998f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.414762, -11.6197, -1.62187, 2.64004", "0.384603, -10.5465, -1.46411, 4.71198", "0.354444, -9.47334, -1.30636, 5.74801", "0.324285, -8.40018, -1.1486, 7.28344", "0.294125, -7.32702, -0.990848, 9.16307", "0.263966, -6.25385, -0.833093, 10.6182", "0.233807, -5.18069, -0.675338, 11.6398", "0.203648, -4.10753, -0.517583, 12.315", "0.173489, -3.03436, -0.359828, 12.8408", "0.14333, -1.9612, -0.202073, 12.9638", "0.113171, -0.888035, -0.0443183, 12.9997", "0.083012, 0.185129, 0.113437, 12.9186", "0.052853, 1.25829, 0.271192, 12.6149", "0.0226939, 2.33146, 0.428947, 11.9889", "-0.00746517, 3.40462, 0.586702, 11.363", "-0.0376242, 4.47778, 0.744457, 10.7371", "-0.0677833, 5.55095, 0.902211, 10.104", "-0.0979424, 6.62411, 1.05997, 9.17803", "-0.128101, 7.69727, 1.21772, 8.07035", "-0.15826, 8.77044, 1.37548, 6.54703", "-0.18842, 9.8436, 1.53323, 5.23645" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.765137, 9.68391, 2.31562, 3.33", "-0.84423, 12.5518, 2.31562, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.87486, 4.06941, -11.9444, 1.11", "4.26274, 6.3755, -12.527, 1.11", "5.99089, 8.91967, -13.3931, 0.83", "7.88979, 11.1171, -14.6646, 1.11", "9.65144, 12.7103, -16.2703, 0.56", "10.4134, 13.3993, -16.9647, 0.56", "11.172, 14.0854, -17.6562, 0.83", "12.2978, 14.9368, -18.7604, 0.83", "14.6049, 16.3197, -21.3339, 0.56", "17.5766, 17.6807, -24.9282, 0.28", "23.9335, 23.5606, -31.4281, 0.28", "31.1161, 27.6302, -38.5714, 0.28", "38.2731, 31.8371, -45.6519, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.09513, -2.68509, -11.7344, 1.11", "-3.39915, -5.65825, -13.9114, 0.83", "-4.81133, -8.87806, -16.269, 0.83", "-5.91552, -11.3956, -18.1124, 0.83", "-7.45431, -14.9041, -20.6813, 1.39", "-12.9196, -24.2179, -24.9852, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.62514, -11.3111, 1.00562, 2.78", "-2.04999, -12.7753, -1.49411, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.604862, -11.0071, 2.12562, 1.39", "1.41481, -12.6756, 3.11217, 1.39", "4.42085, -19.8389, 5.9944, 1.39", "6.06612, -23.8009, 7.18123, 1.39", "7.19614, -26.3052, 7.76755, 1.39", "9.10006, -30.3716, 8.64149, 1.11", "10.7625, -33.9222, 9.4046, 1.39", "13.8903, -40.7416, 10.5865, 1.11", "15.5734, -44.4228, 10.8814, 1.11", "18.079, -49.8773, 10.9196, 1.11", "19.4933, -52.7621, 10.8343, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.80514, 6.71991, 5.69562, 1.39", "-5.35235, 7.8116, 5.62146, 1.39", "-7.56245, 12.2208, 5.32193, 1.39", "-8.98617, 15.0611, 5.12898, 1.39", "-9.82497, 16.7345, 5.0153, 1.11", "-11.8232, 20.7209, 4.74449, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.18842, 9.8436, 1.53323, 0.83", "-0.609797, 24.8377, 1.53323, 0.83", "-1.03117, 39.8318, 1.53323, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.84423, 12.5518, 2.31562, 1.39", "-1.76856, 14.3138, 3.04139, 1.39", "-3.65009, 17.9006, 4.51874, 1.39", "-5.7779, 21.9568, 6.18946, 1.39" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.84423, 12.5518, 2.31562, 1.39", "0.612058, 15.1744, 5.36817, 1.39", "1.87221, 17.5065, 8.32739, 1.11", "2.6078, 18.8679, 10.0548, 1.11", "3.49152, 20.5033, 12.13, 1.39", "4.7556, 22.8427, 15.0985, 1.11", "5.5616, 24.3344, 16.9912, 0.83", "6.3264, 25.8122, 19.4172, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "38.2731, 31.8371, -45.6519, 0.28", "43.0094, 35.4782, -50.1746, 0.28", "48.2539, 39.964, -52.9409, 0.28", "52.6673, 45.2934, -55.495, 0.28", "57.5198, 50.7394, -56.4622, 0.28", "62.8796, 55.5386, -58.2327, 0.28", "68.7229, 59.804, -59.9862, 0.28", "74.5706, 63.5724, -62.7278, 0.28", "81.1476, 66.2119, -65.2751, 0.28", "87.4429, 68.9888, -68.3261, 0.28", "93.565, 70.711, -72.4244, 0.28", "99.7221, 73.8003, -75.4223, 0.28", "105.874, 77.2364, -77.9761, 0.28", "111.821, 81.1674, -80.1943, 0.28", "117.38, 84.5803, -83.896, 0.28", "122.706, 87.5889, -88.2726, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "38.2731, 31.8371, -45.6519, 0.28", "43.2698, 35.9101, -50.4407, 0.28", "47.364, 40.1792, -55.8438, 0.28", "51.4845, 44.3405, -61.3192, 0.28", "55.0389, 48.7225, -66.9903, 0.28", "57.7116, 52.1733, -73.743, 0.28", "60.3755, 55.7013, -80.4547, 0.28", "62.3899, 58.4365, -87.7725, 0.28", "62.7127, 61.6182, -95.1478, 0.28", "62.562, 66.4912, -101.412, 0.28", "63.1914, 71.14, -107.841, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-12.9196, -24.2179, -24.9852, 0.83", "-17.0189, -33.1257, -30.4654, 0.83", "-20.6592, -42.9745, -34.2209, 0.83", "-24.3203, -52.0306, -39.7377, 0.83", "-28.221, -60.2971, -46.3509, 0.83", "-30.3964, -67.8909, -54.4631, 0.83", "-32.2942, -74.0921, -63.8535, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-12.9196, -24.2179, -24.9852, 0.83", "-16.5184, -30.1801, -28.805, 0.83", "-19.4246, -36.7693, -32.0389, 0.83", "-23.3419, -42.5729, -35.8077, 0.83", "-26.1804, -48.1312, -40.7959, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.04999, -12.7753, -1.49411, 1.94", "-2.89572, -20.6649, 1.75802, 1.94", "-3.40157, -25.3839, 3.70319, 1.94", "-3.75024, -28.6365, 5.04395, 1.94" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "19.4933, -52.7621, 10.8343, 0.83", "22.3475, -54.2072, 13.9493, 0.83", "27.8023, -56.8939, 19.106, 0.83", "30.3138, -58.0233, 21.4883, 0.83", "34.9764, -60.0155, 26.4201, 0.83", "37.2477, -60.9832, 28.9979, 0.83", "38.9177, -61.6798, 30.9373, 0.28", "41.6013, -62.7704, 33.9146, 1.39", "46.8239, -65.0858, 39.7201, 1.11", "54.4256, -68.582, 48.4432, 0.56", "57.7311, -70.1336, 52.4212, 2.5", "59.8736, -71.2208, 55.1024, 2.5", "62.6508, -72.7332, 58.7699, 0.28", "64.4327, -73.766, 61.2146, 1.11", "65.3715, -74.3894, 62.4206, 1.11", "70.9142, -78.3127, 69.2002, 0.28", "71.425, -78.6855, 69.8205, 0.56", "73.8414, -80.479, 72.8014, 0.28", "77.082, -82.7959, 76.8012, 3.33", "80.4276, -85.173, 80.5678, 0.28", "80.7854, -85.4386, 80.8929, 0.56", "85.522, -89.2087, 84.3486, 0.28", "85.9022, -89.5226, 84.5959, 0.83", "89.1624, -92.2902, 86.4346, 0.28", "91.0533, -93.8945, 87.3417, 1.39", "101.609, -102.629, 91.8611, 0.28", "103.857, -104.464, 92.7357, 2.5", "108.118, -107.898, 94.1325, 0.28", "108.953, -108.58, 94.3557, 0.83", "113.346, -112.188, 95.1231, 0.28", "114.446, -113.055, 95.2057, 1.11", "118.559, -116.033, 94.9909, 0.28", "120.159, -117.161, 94.8597, 1.11", "123.472, -119.427, 94.3763, 0.28", "125.312, -120.707, 94.0674, 1.39", "133.052, -126.314, 92.3191, 0.28", "133.745, -126.817, 92.1538, 1.39" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "19.4933, -52.7621, 10.8343, 0.83", "21.0634, -56.0603, 11.949, 0.83", "22.1038, -58.3323, 12.7412, 0.83", "22.7023, -59.6678, 13.1895, 0.83", "23.424, -61.2667, 13.6866, 0.83", "24.2418, -63.1255, 14.2266, 0.83", "25.3485, -65.4607, 14.8249, 0.83", "27.1027, -68.5945, 15.6351, 0.83", "27.689, -69.61, 15.8605, 1.11", "28.4096, -70.8834, 16.1228, 0.83", "29.0918, -72.0769, 16.3386, 1.11", "31.7476, -76.4355, 17.0895, 0.83", "32.6921, -77.7921, 17.3323, 0.28", "32.8143, -77.9466, 17.3593, 0.83", "33.3399, -78.5957, 17.4737, 0.28", "35.4453, -81.155, 17.9505, 0.83", "36.9122, -82.9398, 18.2766, 0.56", "37.6673, -83.9327, 18.4878, 0.83", "38.2742, -84.7888, 18.6782, 0.56", "39.6023, -86.7842, 19.1422, 1.11", "40.4383, -88.1158, 19.4948, 0.56", "40.9105, -88.9526, 19.728, 0.83", "41.8124, -90.7734, 20.2625, 0.28", "41.9873, -91.158, 20.3796, 0.83", "43.23, -94.0031, 21.2525, 1.94", "43.8083, -95.3152, 21.6501, 1.11", "44.5042, -96.884, 22.08, 0.56", "45.1785, -98.2602, 22.4533, 0.83", "45.8928, -99.6341, 22.8027, 0.56", "47.3757, -102.315, 23.455, 1.39", "48.1521, -103.705, 23.7634, 0.56", "48.6488, -104.56, 23.9386, 0.83", "50.1451, -106.984, 24.4897, 0.28", "50.3552, -107.311, 24.5751, 0.83", "51.5785, -109.18, 25.097, 2.22", "55.0765, -114.394, 26.6764, 0.28", "56.2323, -116.183, 27.244, 1.39", "57.2685, -117.872, 27.8283, 0.56", "58.1772, -119.458, 28.4055, 0.28", "58.577, -120.183, 28.6967, 0.83", "59.417, -121.775, 29.413, 0.28", "60.886, -124.689, 30.8136, 1.39", "61.9931, -127.13, 31.8983, 0.28", "62.1467, -127.507, 32.0604, 0.83", "62.6323, -128.847, 32.6234, 0.28", "62.7796, -129.34, 32.8198, 0.83", "63.109, -130.812, 33.3465, 0.28", "63.2998, -131.899, 33.711, 1.94", "63.5737, -134.255, 34.4294, 0.28", "63.643, -135.198, 34.7157, 0.83", "63.8727, -137.023, 35.2469, 0.28", "64.0166, -137.849, 35.48, 0.83", "64.2187, -138.965, 35.7866, 0.56", "64.7549, -141.635, 36.4854, 0.28", "64.9153, -142.311, 36.6376, 1.67", "66.1265, -146.26, 37.6539, 0.28", "66.3852, -146.88, 37.8444, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-11.8232, 20.7209, 4.74449, 0.83", "-12.4697, 21.4044, 5.91081, 0.83", "-13.4299, 22.3678, 7.69369, 0.83", "-15.519, 24.9712, 12.3669, 0.83", "-15.7918, 25.3613, 13.1224, 0.83", "-16.5751, 26.5618, 15.4505, 0.83", "-17.7098, 28.3907, 19.058, 0.83", "-18.4439, 29.5156, 21.4479, 0.83", "-19.36, 30.9542, 24.6422, 0.83", "-20.7861, 33.2385, 29.4835, 0.56", "-21.0148, 33.6797, 30.3217, 0.83", "-21.5424, 35.0193, 32.4573, 0.83", "-22.2003, 36.6154, 34.708, 1.11", "-23.0805, 38.348, 36.847, 0.28", "-23.61, 39.1122, 37.6563, 1.11", "-25.0872, 40.7414, 39.0851, 0.56", "-26.5817, 41.9486, 40.1482, 0.28", "-29.4844, 43.3738, 41.6448, 0.56", "-30.3268, 43.6473, 42.0069, 0.56", "-33.325, 44.3683, 43.1709, 2.22", "-36.9116, 44.9798, 44.6867, 0.28", "-39.3555, 45.2431, 45.7003, 0.83", "-43.7283, 45.5571, 47.4922, 0.28", "-44.677, 45.6199, 47.854, 0.56", "-45.8221, 45.6554, 48.2896, 0.83", "-48.6044, 45.6389, 49.3299, 0.83", "-49.9805, 45.6205, 49.9076, 1.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-11.8232, 20.7209, 4.74449, 0.83", "-14.6377, 21.2295, 5.35119, 0.83", "-16.5671, 21.5292, 5.67937, 0.56", "-18.0766, 21.738, 5.89803, 0.56", "-20.5593, 22.175, 6.35307, 0.56", "-21.4141, 22.3321, 6.53318, 0.56", "-23.8643, 22.8678, 7.07284, 0.56", "-25.0445, 23.1849, 7.42417, 0.56", "-25.4301, 23.3125, 7.55677, 0.56", "-28.3642, 24.6029, 8.68358, 0.56", "-30.1187, 25.551, 9.3751, 0.56", "-32.3205, 26.8458, 10.3099, 0.56", "-34.0777, 28.0061, 11.1487, 0.56", "-36.3152, 29.554, 12.2768, 0.83", "-38.5053, 31.151, 13.3776, 1.11", "-39.2809, 31.7658, 13.7448, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.03117, 39.8318, 1.53323, 0.83", "-1.45255, 54.8258, 1.53323, 0.83", "-1.87393, 69.8199, 1.53323, 0.83" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-5.7779, 21.9568, 6.18946, 0.83", "-5.69742, 23.2352, 7.76238, 0.83", "-5.66905, 23.9893, 8.70256, 1.11", "-5.19425, 26.7015, 12.4997, 0.56", "-4.97828, 28.0404, 14.2961, 0.83", "-4.79444, 29.1954, 15.7483, 0.83", "-4.5073, 30.9784, 17.9411, 0.83", "-4.23838, 32.5812, 19.8363, 1.39", "-3.42325, 37.5716, 25.4217, 0.83", "-3.05729, 39.4002, 27.3869, 1.11", "-1.04752, 48.8296, 36.9368, 0.28", "-0.393612, 51.8612, 39.9327, 1.67", "0.448564, 55.8947, 43.7975, 0.28", "0.65833, 56.9584, 44.8092, 0.83", "1.47764, 61.5963, 48.8772, 0.28", "1.95548, 64.2892, 51.1848, 0.28", "2.25037, 66.1334, 52.6749, 0.83", "2.43852, 67.4219, 53.7728, 0.28", "2.59991, 68.4797, 55.042, 0.56", "3.43636, 73.7832, 62.5774, 0.28", "3.76836, 75.0091, 64.6585, 0.83", "4.63215, 77.4372, 69.2247, 0.56", "4.99166, 78.2836, 70.7877, 1.39", "7.16953, 82.8553, 79.3624, 0.28", "7.50719, 83.531, 80.5675, 1.39", "9.45944, 87.4294, 87.5253, 0.28", "9.79678, 88.1841, 88.6861, 1.11", "11.0189, 91.4894, 93.0633, 0.28", "11.1499, 91.9265, 93.5645, 0.83", "13.3952, 102.009, 103.185, 0.28", "13.7582, 103.993, 104.964, 1.67", "14.3334, 108.97, 108.982, 0.28", "14.4003, 109.549, 109.445, 0.83", "14.4915, 111.069, 110.636, 0.28", "14.5116, 111.901, 111.278, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-5.7779, 21.9568, 6.18946, 1.11", "-8.57441, 25.0223, 5.35524, 1.11", "-10.5956, 27.2378, 4.75233, 1.11", "-11.8567, 28.6203, 4.37611, 1.11", "-13.932, 30.8951, 3.75707, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "6.3264, 25.8122, 19.4172, 0.56", "6.23895, 29.1141, 23.547, 0.56", "6.77719, 32.1973, 28.0558, 0.83", "7.24005, 33.8306, 30.6338, 0.56", "8.44317, 37.0271, 35.6187, 1.11", "9.87721, 40.6063, 41.0649, 0.56", "10.8348, 42.9174, 44.4678, 1.39", "13.0747, 47.3262, 50.7006, 0.28", "14.3645, 49.6672, 54.0292, 1.67", "16.235, 52.8755, 58.5834, 0.28", "16.6094, 53.6267, 59.4833, 0.56", "17.3256, 55.4504, 61.1686, 0.28", "17.4744, 55.8923, 61.5287, 0.83", "18.2646, 58.6358, 63.5383, 0.28", "18.9167, 60.8312, 65.1136, 1.67", "22.7678, 73.6656, 74.1158, 0.28", "23.6937, 76.8009, 76.3637, 2.22", "25.2613, 82.4395, 80.3654, 0.28", "25.5209, 83.4226, 81.0578, 0.83", "26.6305, 87.8694, 84.1177, 0.28", "26.9729, 89.5391, 85.1976, 0.56", "27.9495, 95.6545, 88.7408, 0.28", "28.1223, 97.658, 89.8146, 1.11", "28.2183, 101.067, 91.3368, 0.28", "28.2282, 102.473, 91.9003, 0.83", "28.0285, 105.794, 92.9778, 0.28", "27.6679, 110.014, 94.1667, 1.11", "26.5651, 119.624, 96.3265, 0.28", "26.3433, 120.967, 96.6339, 0.28", "25.9619, 122.794, 97.053, 1.11", "24.4159, 129.465, 98.6025, 0.28", "24.2753, 129.973, 98.7183, 0.28", "23.24, 133.045, 99.2786, 1.39", "21.775, 136.085, 99.9874, 0.28", "20.7098, 138.221, 100.66, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "6.3264, 25.8122, 19.4172, 0.28", "7.55552, 29.4671, 21.4994, 0.28", "7.93706, 30.4128, 22.1193, 0.83", "8.75225, 32.0661, 23.2539, 1.11", "9.68378, 33.8515, 24.4444, 0.83", "10.0869, 34.594, 24.9075, 0.28", "10.3799, 35.1072, 25.2325, 0.28", "12.0337, 37.5532, 26.8044, 1.39", "13.5872, 39.4812, 28.186, 0.83", "15.3407, 41.5373, 29.653, 0.28", "16.0617, 42.3403, 30.184, 0.83", "17.8987, 44.3515, 31.4193, 0.28", "19.8747, 46.3932, 32.5702, 1.39", "22.0995, 48.5938, 33.6522, 0.28", "23.9848, 50.3645, 34.4242, 0.28", "25.3831, 51.5918, 34.8841, 0.56", "26.5466, 52.4838, 35.2866, 0.83", "28.986, 54.1865, 36.0685, 0.28", "29.3422, 54.4155, 36.1769, 0.83", "31.9255, 55.8848, 37.2321, 0.28", "33.2031, 56.5431, 37.8375, 0.83", "38.7243, 59.2243, 40.7237, 0.28", "39.426, 59.5526, 41.1077, 1.39", "42.3019, 60.9191, 42.7909, 1.94", "47.8046, 63.5998, 46.1089, 0.28", "48.5444, 63.9921, 46.589, 0.56", "50.8661, 65.4123, 48.0915, 0.28", "51.6698, 65.9922, 48.5806, 1.11", "54.1183, 67.9272, 50.1117, 0.28", "55.0102, 68.7429, 50.7108, 1.39", "57.3805, 71.3416, 52.2437, 0.28", "59.7202, 74.436, 53.9036, 0.56", "60.5613, 75.7627, 54.5318, 0.56", "61.689, 77.8297, 55.4118, 0.83", "62.7827, 80.3099, 56.2862, 0.28", "63.5272, 82.3509, 56.9286, 1.39", "64.6231, 86.3197, 57.9514, 0.28", "64.8717, 87.7296, 58.315, 0.56", "65.1119, 89.4321, 58.7455, 0.28", "65.4494, 91.7623, 59.3709, 1.39", "65.7347, 93.5099, 59.9258, 0.28", "65.9002, 94.3725, 60.2743, 0.56", "67.1293, 99.9473, 62.8323, 0.28", "67.3616, 100.877, 63.3015, 1.39", "68.615, 105.202, 65.6179, 0.28", "69.2105, 107.115, 66.6602, 0.83", "70.7759, 112.413, 69.3984, 0.28", "70.9416, 112.989, 69.6763, 0.56", "71.533, 115.825, 70.7603, 0.28", "71.6571, 116.705, 71.0293, 0.28", "71.8566, 118.778, 71.5505, 1.39", "72.3074, 125.796, 72.9939, 0.28", "72.3568, 127.913, 73.3317, 1.11", "72.3052, 135.202, 74.3739, 0.28", "72.2597, 136.141, 74.4771, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-26.1804, -48.1312, -40.7959, 0.28", "-30.2602, -55.0219, -45.4442, 0.28", "-34.0912, -62.5932, -48.992, 0.28", "-37.7073, -69.8137, -53.4804, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-26.1804, -48.1312, -40.7959, 0.28", "-29.0464, -55.1356, -45.1279, 0.28", "-31.0187, -62.3091, -49.6795, 0.28", "-31.2056, -69.7254, -54.2809, 0.28", "-29.7623, -76.1874, -60.1272, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-3.75024, -28.6365, 5.04395, 0.83", "-4.57764, -31.2013, 4.10703, 0.83", "-4.92011, -32.9495, 3.50154, 1.11", "-5.42714, -36.3525, 2.04117, 1.11", "-5.82213, -39.3824, 0.717181, 1.11", "-6.10663, -41.5648, -0.236454, 1.11", "-6.86437, -47.3775, -2.77642, 1.11", "-7.0849, -49.9295, -3.94422, 0.83", "-7.24176, -54.4735, -5.96875, 0.83", "-7.129, -57.3829, -7.14166, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.75024, -28.6365, 5.04395, 1.11", "-3.78383, -30.2228, 7.44182, 1.11", "-3.74937, -30.939, 8.69319, 1.11", "-3.73283, -32.277, 11.094, 1.11", "-3.83365, -33.7402, 13.6934, 1.11", "-4.13994, -36.8475, 19.2352, 1.11", "-4.36809, -38.5931, 22.3942, 1.11", "-4.63167, -40.0856, 25.2442, 0.83", "-4.75041, -40.775, 26.5982, 0.83", "-4.92056, -42.2867, 29.5681, 0.83", "-4.91742, -43.1611, 31.132, 0.83", "-4.84863, -45.2569, 34.5455, 0.56", "-4.72771, -46.4007, 36.3548, 0.56", "-4.58168, -47.0527, 37.3825, 0.28", "-4.02791, -48.5812, 39.8467, 1.67", "-2.67839, -51.6967, 45.293, 0.28", "-2.31436, -52.4997, 46.9127, 1.94", "-2.04251, -53.0645, 48.2111, 3.33", "-1.62707, -53.9979, 50.7371, 0.83", "-1.22919, -55.0336, 53.8162, 0.28", "-0.630752, -57.0761, 59.9778, 2.22", "-0.0486618, -59.3059, 66.804, 0.28", "0.122896, -60.0426, 69.1269, 1.94", "0.501609, -62.1952, 76.1833, 0.28", "0.536863, -62.5397, 77.3367, 1.94", "0.618895, -63.6551, 81.1708, 0.28", "0.63452, -63.8179, 81.6787, 0.56" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-39.2809, 31.7658, 13.7448, 0.28", "-41.4586, 34.3923, 14.1948, 0.28", "-43.0715, 36.2797, 14.638, 0.56", "-44.1503, 37.5014, 14.9485, 0.83", "-45.5491, 38.7092, 15.4389, 1.67", "-47.4009, 40.1897, 15.9774, 0.56", "-48.4062, 40.9697, 16.2326, 0.56", "-50.7024, 42.5974, 16.8704, 0.28", "-51.4073, 43.0766, 17.0656, 0.83", "-59.7153, 48.6551, 19.2825, 0.28", "-62.1535, 50.2855, 19.8802, 1.11", "-64.0149, 51.4992, 20.2451, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-39.2809, 31.7658, 13.7448, 0.28", "-44.1532, 31.0462, 13.7865, 0.28", "-45.6882, 30.824, 13.8339, 0.56", "-47.411, 30.5544, 13.9962, 0.28", "-48.3046, 30.3982, 14.0977, 0.56", "-51.0473, 29.8523, 14.5859, 0.28", "-52.9825, 29.489, 14.9953, 0.56", "-53.6014, 29.3917, 15.2118, 0.28", "-56.3071, 29.3166, 16.4779, 0.56", "-57.1799, 29.4069, 16.9422, 0.56", "-60.5172, 30.6198, 18.1038, 0.28", "-61.6288, 31.2991, 18.2587, 0.56", "-63.1061, 32.4476, 18.1792, 1.67", "-67.3512, 36.1447, 17.4494, 0.28", "-68.6028, 37.3571, 17.1276, 1.39", "-75.8237, 44.8892, 14.6948, 0.28", "-76.3949, 45.5368, 14.4232, 0.83", "-80.0354, 49.6939, 12.2669, 0.28", "-80.4974, 50.2249, 11.9088, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-13.932, 30.8951, 3.75707, 0.56", "-15.6027, 33.8599, 3.34874, 0.56", "-16.3766, 35.2333, 3.15959, 0.83", "-17.2097, 36.7115, 2.95601, 0.28", "-17.9954, 38.1059, 2.76397, 0.56", "-20.3461, 42.2772, 2.18948, 0.56", "-22.2184, 45.5997, 1.73189, 0.56", "-27.4152, 55.7245, 1.45998, 0.56" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-13.932, 30.8951, 3.75707, 0.83", "-17.3107, 34.5675, 0.43981, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-7.129, -57.3829, -7.14166, 0.83", "-8.42557, -59.4262, -7.82261, 0.83", "-9.9841, -62.8094, -8.96194, 0.83", "-10.6801, -64.4331, -9.50739, 0.83", "-11.4121, -66.1406, -10.081, 0.83", "-12.8563, -69.5099, -11.2128, 0.83", "-13.9928, -72.1614, -12.1035, 0.83", "-15.3432, -76.2161, -13.4854, 0.83", "-15.8874, -78.5041, -14.3222, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-7.129, -57.3829, -7.14166, 0.83", "-7.94249, -64.2669, -5.54256, 0.83", "-8.1969, -67.3804, -4.78958, 0.83", "-8.25293, -68.5624, -4.44662, 0.56", "-8.43382, -73.539, -2.8039, 0.56", "-8.45173, -75.0154, -2.3002, 0.56", "-8.4483, -79.1688, -0.890245, 0.56", "-8.41616, -82.3465, 0.106081, 0.56", "-8.37777, -85.2059, 1.17277, 0.56", "-8.46066, -88.0627, 2.34625, 0.28", "-8.62166, -89.903, 3.15718, 0.83", "-8.80914, -91.4918, 3.84134, 0.83", "-9.55374, -96.1163, 5.70002, 0.28", "-9.93914, -98.1209, 6.37871, 0.83", "-11.4045, -105.222, 8.45539, 0.28", "-11.6764, -106.529, 8.78774, 1.11", "-12.3962, -110.493, 9.72325, 0.28", "-12.722, -112.865, 10.2205, 1.39", "-13.0771, -120.352, 11.5767, 0.28", "-13.0447, -121.166, 11.7195, 1.39", "-12.7493, -122.779, 12.0139, 1.94", "-11.3987, -127.513, 13.0288, 0.28", "-10.891, -128.788, 13.3413, 1.11", "-9.02983, -132.438, 14.3132, 0.28", "-8.70575, -132.951, 14.4614, 0.83", "-5.03762, -138.393, 15.7909, 0.28", "-4.21489, -139.529, 16.0216, 0.28", "-3.44094, -140.512, 16.0852, 0.56", "-2.50437, -141.675, 15.9808, 0.28", "-1.94295, -142.314, 15.7233, 0.83", "0.345135, -144.485, 14.2353, 0.28", "0.529926, -144.622, 14.0663, 0.56", "1.75114, -145.463, 12.8946, 0.28", "2.60298, -146.029, 12.0826, 0.56", "5.73132, -147.956, 9.44504, 0.28", "5.93352, -148.076, 9.27642, 0.56", "7.50025, -149.032, 8.00938, 0.28", "8.56681, -149.677, 7.14936, 0.83", "12.0006, -151.698, 4.4211, 0.28", "16.1462, -154.061, 1.14441, 0.28", "17.402, -154.729, 0.0490941, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-27.4152, 55.7245, 1.45998, 0.56", "-33.2478, 63.9314, 1.07077, 0.56", "-39.5382, 71.7532, 2.37333, 0.56", "-44.6123, 80.4191, 2.32956, 0.56", "-50.7993, 88.368, 1.67489, 0.56", "-57.9548, 95.5377, 2.5359, 0.56", "-64.741, 102.958, 3.93565, 0.56", "-71.2216, 110.681, 4.88302, 0.56", "-77.2938, 118.53, 6.89939, 0.56", "-81.3874, 127.473, 8.93661, 0.56", "-87.2831, 135.604, 9.95088, 0.56", "-93.2886, 143.318, 12.6621, 0.56", "-100.063, 150.696, 14.3503, 0.56", "-107.303, 157.822, 14.7222, 0.56", "-115.113, 164.35, 14.0674, 0.56", "-122.765, 171.071, 14.5293, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-27.4152, 55.7245, 1.45998, 0.28", "-29.7947, 61.0823, 0.953903, 0.56", "-32.4847, 66.3243, 1.04722, 0.56", "-34.9519, 71.6232, 1.7558, 0.56", "-37.9262, 76.7236, 1.81356, 0.56", "-40.9877, 81.7275, 1.06269, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-17.3107, 34.5675, 0.43981, 0.56", "-20.6597, 35.5833, -1.57694, 0.56", "-22.5178, 36.2333, -2.66925, 0.56", "-24.3324, 36.8735, -3.66134, 0.28", "-27.4158, 37.9314, -5.18447, 0.83", "-34.0751, 40.1968, -8.45987, 0.56", "-35.8521, 40.8569, -9.33015, 0.56", "-37.2249, 41.3981, -9.97593, 0.56", "-38.4932, 41.9447, -10.5801, 0.56", "-39.7736, 42.6511, -11.2439, 0.56", "-43.6067, 45.2648, -13.1364, 0.56", "-45.0394, 46.3243, -13.6744, 0.56", "-46.1688, 47.1482, -14.1526, 0.56", "-47.2775, 48.0077, -14.687, 0.83", "-50.7711, 51.0771, -16.5929, 0.28", "-52.1714, 52.4621, -17.4173, 0.56", "-59.7247, 57.4715, -23.0829, 0.56", "-66.5583, 63.3598, -28.7229, 0.56", "-72.9135, 69.7504, -34.3166, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-17.3107, 34.5675, 0.43981, 0.56", "-17.9279, 35.7431, -0.523952, 0.56", "-18.9038, 37.3763, -1.8328, 0.56", "-19.8549, 38.8589, -3.00337, 0.56", "-20.9846, 40.5285, -4.25293, 0.56", "-23.4281, 44.1027, -6.82184, 0.56", "-25.1114, 46.5769, -8.49758, 0.56", "-26.2835, 48.2037, -9.59055, 0.56", "-27.5689, 50.0074, -10.778, 0.56", "-28.2176, 50.9546, -11.3362, 0.56", "-29.1113, 52.3048, -12.0653, 0.56", "-30.2371, 53.8742, -12.89, 0.56", "-31.8955, 56.3455, -14.092, 0.56", "-32.4257, 57.1513, -14.5308, 0.28", "-32.9493, 57.9491, -14.9829, 0.56", "-34.6282, 60.4877, -16.5641, 0.56", "-36.3066, 62.8397, -18.1277, 0.56", "-41.3001, 69.8667, -21.3773, 0.56", "-45.4547, 76.3181, -26.5388, 0.56", "-49.0038, 82.9559, -31.8891, 0.56", "-54.4026, 88.5365, -37.0235, 0.56", "-57.55, 95.6148, -41.9936, 0.56", "-60.2423, 103.073, -46.6138, 0.56", "-63.0884, 109.644, -52.4553, 0.56", "-64.0527, 117.0, -57.8847, 0.56", "-64.5864, 124.06, -63.7879, 0.56", "-64.5005, 130.346, -70.6138, 0.56", "-63.908, 135.492, -78.4098, 0.56", "-62.8163, 141.999, -84.926, 0.56", "-61.6877, 148.726, -91.1869, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-15.8874, -78.5041, -14.3222, 0.83", "-16.8888, -81.8474, -12.7905, 0.83", "-17.5713, -83.7999, -12.3653, 0.83", "-18.0471, -85.1882, -12.185, 0.83", "-18.4248, -86.265, -12.1153, 0.83", "-18.8057, -87.3576, -12.095, 0.83", "-19.5668, -89.5249, -12.1031, 0.83", "-21.4247, -94.4566, -12.4014, 0.83", "-22.4938, -97.3378, -12.5905, 0.83", "-24.0593, -101.675, -12.8673, 0.83", "-24.8815, -104.029, -13.0408, 1.11", "-25.6841, -106.512, -13.2466, 0.83", "-26.5285, -109.315, -13.4899, 0.83", "-27.5147, -112.878, -13.7545, 0.83", "-27.9261, -114.456, -13.8613, 0.83", "-29.0175, -119.159, -14.0977, 0.83", "-29.2135, -120.078, -14.1371, 0.83", "-30.2106, -124.029, -14.3831, 0.83", "-30.5424, -125.297, -14.497, 0.83", "-31.9423, -130.157, -15.0693, 0.83", "-33.8408, -136.397, -15.8457, 0.83", "-34.5004, -138.486, -16.1072, 0.83", "-36.4149, -144.334, -16.9067, 0.83", "-37.2096, -146.66, -17.2712, 0.83", "-38.2322, -149.342, -17.7369, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-15.8874, -78.5041, -14.3222, 0.83", "-17.767, -79.439, -15.8272, 0.83", "-19.2654, -80.2972, -16.8765, 0.83", "-23.3149, -82.5071, -19.9236, 0.56", "-24.4328, -83.0822, -20.7869, 0.56", "-25.8149, -83.7465, -21.9056, 0.56", "-27.8421, -84.721, -23.5465, 0.56", "-29.9275, -85.7265, -25.4324, 0.56", "-31.8801, -86.6968, -27.2517, 0.56", "-34.2607, -87.79, -29.1207, 0.56", "-35.8281, -88.4519, -30.4888, 0.83", "-44.0423, -91.8768, -36.5131, 0.83", "-53.4437, -93.6928, -41.4854, 0.83", "-62.1357, -94.645, -47.8263, 0.83", "-70.6212, -96.3592, -54.2686, 0.83", "-78.8268, -98.142, -61.0443, 0.83", "-87.1693, -97.7047, -67.8966, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-38.2322, -149.342, -17.7369, 0.56", "-38.9561, -153.014, -18.4102, 0.56", "-39.4961, -155.753, -18.9126, 0.56", "-39.6947, -156.76, -19.0973, 0.56", "-40.3516, -160.092, -19.7084, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-38.2322, -149.342, -17.7369, 0.56", "-38.009, -150.338, -16.1729, 0.56", "-37.8308, -151.369, -14.6718, 0.56", "-37.305, -154.812, -9.84362, 0.56", "-37.1607, -156.166, -8.06269, 0.28", "-37.1199, -156.481, -7.64403, 0.83", "-36.887, -158.288, -5.25084, 0.28", "-36.8128, -158.954, -4.2818, 0.56", "-36.7345, -160.052, -2.57807, 0.28", "-36.7247, -160.821, -1.4825, 0.56", "-36.7673, -162.351, 0.554422, 0.28", "-36.7469, -162.683, 0.951471, 0.56", "-36.5045, -164.199, 2.61555, 0.28", "-36.0873, -165.811, 4.2489, 1.11", "-35.8559, -166.614, 4.96928, 1.11", "-35.2929, -168.539, 6.53979, 0.56", "-33.9004, -173.654, 10.4107, 0.28", "-33.5969, -174.681, 11.1574, 1.39", "-32.8108, -177.135, 12.804, 0.28", "-32.3255, -178.551, 13.7063, 1.11", "-31.4447, -181.169, 15.4162, 0.28", "-31.12, -182.2, 16.1392, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-40.3516, -160.092, -19.7084, 0.56", "-41.6063, -163.318, -19.7734, 0.56", "-42.5116, -165.859, -19.9138, 0.56", "-43.4423, -168.555, -20.1064, 0.56", "-45.0333, -173.163, -20.4358, 0.56", "-45.5362, -174.62, -20.5399, 0.56", "-47.0853, -179.107, -20.8606, 0.56", "-47.5347, -180.571, -20.99, 0.56", "-47.8641, -181.726, -21.1161, 0.56", "-49.7597, -191.806, -20.5223, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-40.3516, -160.092, -19.7084, 0.28", "-40.6789, -162.297, -18.2562, 0.28", "-40.8564, -163.107, -17.6336, 0.56", "-41.1687, -164.543, -16.5146, 0.28", "-41.3687, -165.491, -15.7093, 0.28", "-41.6384, -166.77, -14.6226, 0.28", "-41.994, -168.455, -13.1906, 0.56", "-42.5216, -170.333, -11.6449, 0.28", "-42.8622, -171.551, -10.5884, 0.28", "-43.1382, -172.686, -9.60865, 0.56", "-43.1406, -180.394, -4.88468, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_25", "dend_20", "dend_8", "dend_5", "dend_0", "dend_32", "dend_29", "dend_27", "dend_26", "dend_24", "dend_21", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_23", "dend_22", "dend_11", "dend_10", "dend_3", "dend_2", "dend_37", "dend_34", "dend_13", "dend_12", "dend_39", "dend_38", "dend_36", "dend_35", "dend_15", "dend_14", "dend_17", "dend_16", "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_25", "dend_20", "dend_8", "dend_5", "dend_0", "dend_32", "dend_29", "dend_27", "dend_26", "dend_24", "dend_21", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_23", "dend_22", "dend_11", "dend_10", "dend_3", "dend_2", "dend_37", "dend_34", "dend_13", "dend_12", "dend_39", "dend_38", "dend_36", "dend_35", "dend_15", "dend_14", "dend_17", "dend_16", "dend_19", "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_BTC_13a502998f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.450000697082259)
    connect dend_25(0), soma_0(0.450000697082259)
    connect dend_20(0), soma_0(0.450000697082259)
    connect dend_8(0), soma_0(0.450000697082259)
    connect dend_5(0), soma_0(0.450000697082259)
    connect dend_0(0), soma_0(0.450000697082259)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.414762, -11.6197, -1.62187, 2.64004 ) }
    soma_0 { pt3dadd( 0.384603, -10.5465, -1.46411, 4.71198 ) }
    soma_0 { pt3dadd( 0.354444, -9.47334, -1.30636, 5.74801 ) }
    soma_0 { pt3dadd( 0.324285, -8.40018, -1.1486, 7.28344 ) }
    soma_0 { pt3dadd( 0.294125, -7.32702, -0.990848, 9.16307 ) }
    soma_0 { pt3dadd( 0.263966, -6.25385, -0.833093, 10.6182 ) }
    soma_0 { pt3dadd( 0.233807, -5.18069, -0.675338, 11.6398 ) }
    soma_0 { pt3dadd( 0.203648, -4.10753, -0.517583, 12.315 ) }
    soma_0 { pt3dadd( 0.173489, -3.03436, -0.359828, 12.8408 ) }
    soma_0 { pt3dadd( 0.14333, -1.9612, -0.202073, 12.9638 ) }
    soma_0 { pt3dadd( 0.113171, -0.888035, -0.0443183, 12.9997 ) }
    soma_0 { pt3dadd( 0.083012, 0.185129, 0.113437, 12.9186 ) }
    soma_0 { pt3dadd( 0.052853, 1.25829, 0.271192, 12.6149 ) }
    soma_0 { pt3dadd( 0.0226939, 2.33146, 0.428947, 11.9889 ) }
    soma_0 { pt3dadd( -0.00746517, 3.40462, 0.586702, 11.363 ) }
    soma_0 { pt3dadd( -0.0376242, 4.47778, 0.744457, 10.7371 ) }
    soma_0 { pt3dadd( -0.0677833, 5.55095, 0.902211, 10.104 ) }
    soma_0 { pt3dadd( -0.0979424, 6.62411, 1.05997, 9.17803 ) }
    soma_0 { pt3dadd( -0.128101, 7.69727, 1.21772, 8.07035 ) }
    soma_0 { pt3dadd( -0.15826, 8.77044, 1.37548, 6.54703 ) }
    soma_0 { pt3dadd( -0.18842, 9.8436, 1.53323, 5.23645 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.765137, 9.68391, 2.31562, 3.33 ) }
    dend_28 { pt3dadd( -0.84423, 12.5518, 2.31562, 3.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.87486, 4.06941, -11.9444, 1.11 ) }
    dend_25 { pt3dadd( 4.26274, 6.3755, -12.527, 1.11 ) }
    dend_25 { pt3dadd( 5.99089, 8.91967, -13.3931, 0.83 ) }
    dend_25 { pt3dadd( 7.88979, 11.1171, -14.6646, 1.11 ) }
    dend_25 { pt3dadd( 9.65144, 12.7103, -16.2703, 0.56 ) }
    dend_25 { pt3dadd( 10.4134, 13.3993, -16.9647, 0.56 ) }
    dend_25 { pt3dadd( 11.172, 14.0854, -17.6562, 0.83 ) }
    dend_25 { pt3dadd( 12.2978, 14.9368, -18.7604, 0.83 ) }
    dend_25 { pt3dadd( 14.6049, 16.3197, -21.3339, 0.56 ) }
    dend_25 { pt3dadd( 17.5766, 17.6807, -24.9282, 0.28 ) }
    dend_25 { pt3dadd( 23.9335, 23.5606, -31.4281, 0.28 ) }
    dend_25 { pt3dadd( 31.1161, 27.6302, -38.5714, 0.28 ) }
    dend_25 { pt3dadd( 38.2731, 31.8371, -45.6519, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 36/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.09513, -2.68509, -11.7344, 1.11 ) }
    dend_20 { pt3dadd( -3.39915, -5.65825, -13.9114, 0.83 ) }
    dend_20 { pt3dadd( -4.81133, -8.87806, -16.269, 0.83 ) }
    dend_20 { pt3dadd( -5.91552, -11.3956, -18.1124, 0.83 ) }
    dend_20 { pt3dadd( -7.45431, -14.9041, -20.6813, 1.39 ) }
    dend_20 { pt3dadd( -12.9196, -24.2179, -24.9852, 1.39 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 42/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.62514, -11.3111, 1.00562, 2.78 ) }
    dend_8 { pt3dadd( -2.04999, -12.7753, -1.49411, 2.22 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.604862, -11.0071, 2.12562, 1.39 ) }
    dend_5 { pt3dadd( 1.41481, -12.6756, 3.11217, 1.39 ) }
    dend_5 { pt3dadd( 4.42085, -19.8389, 5.9944, 1.39 ) }
    dend_5 { pt3dadd( 6.06612, -23.8009, 7.18123, 1.39 ) }
    dend_5 { pt3dadd( 7.19614, -26.3052, 7.76755, 1.39 ) }
    dend_5 { pt3dadd( 9.10006, -30.3716, 8.64149, 1.11 ) }
    dend_5 { pt3dadd( 10.7625, -33.9222, 9.4046, 1.39 ) }
    dend_5 { pt3dadd( 13.8903, -40.7416, 10.5865, 1.11 ) }
    dend_5 { pt3dadd( 15.5734, -44.4228, 10.8814, 1.11 ) }
    dend_5 { pt3dadd( 18.079, -49.8773, 10.9196, 1.11 ) }
    dend_5 { pt3dadd( 19.4933, -52.7621, 10.8343, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.80514, 6.71991, 5.69562, 1.39 ) }
    dend_0 { pt3dadd( -5.35235, 7.8116, 5.62146, 1.39 ) }
    dend_0 { pt3dadd( -7.56245, 12.2208, 5.32193, 1.39 ) }
    dend_0 { pt3dadd( -8.98617, 15.0611, 5.12898, 1.39 ) }
    dend_0 { pt3dadd( -9.82497, 16.7345, 5.0153, 1.11 ) }
    dend_0 { pt3dadd( -11.8232, 20.7209, 4.74449, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 61/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.18842, 9.8436, 1.53323, 0.83 ) }
    axon_0 { pt3dadd( -0.609797, 24.8377, 1.53323, 0.83 ) }
    axon_0 { pt3dadd( -1.03117, 39.8318, 1.53323, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.84423, 12.5518, 2.31562, 1.39 ) }
    dend_32 { pt3dadd( -1.76856, 14.3138, 3.04139, 1.39 ) }
    dend_32 { pt3dadd( -3.65009, 17.9006, 4.51874, 1.39 ) }
    dend_32 { pt3dadd( -5.7779, 21.9568, 6.18946, 1.39 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 68/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.84423, 12.5518, 2.31562, 1.39 ) }
    dend_29 { pt3dadd( 0.612058, 15.1744, 5.36817, 1.39 ) }
    dend_29 { pt3dadd( 1.87221, 17.5065, 8.32739, 1.11 ) }
    dend_29 { pt3dadd( 2.6078, 18.8679, 10.0548, 1.11 ) }
    dend_29 { pt3dadd( 3.49152, 20.5033, 12.13, 1.39 ) }
    dend_29 { pt3dadd( 4.7556, 22.8427, 15.0985, 1.11 ) }
    dend_29 { pt3dadd( 5.5616, 24.3344, 16.9912, 0.83 ) }
    dend_29 { pt3dadd( 6.3264, 25.8122, 19.4172, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 38.2731, 31.8371, -45.6519, 0.28 ) }
    dend_27 { pt3dadd( 43.0094, 35.4782, -50.1746, 0.28 ) }
    dend_27 { pt3dadd( 48.2539, 39.964, -52.9409, 0.28 ) }
    dend_27 { pt3dadd( 52.6673, 45.2934, -55.495, 0.28 ) }
    dend_27 { pt3dadd( 57.5198, 50.7394, -56.4622, 0.28 ) }
    dend_27 { pt3dadd( 62.8796, 55.5386, -58.2327, 0.28 ) }
    dend_27 { pt3dadd( 68.7229, 59.804, -59.9862, 0.28 ) }
    dend_27 { pt3dadd( 74.5706, 63.5724, -62.7278, 0.28 ) }
    dend_27 { pt3dadd( 81.1476, 66.2119, -65.2751, 0.28 ) }
    dend_27 { pt3dadd( 87.4429, 68.9888, -68.3261, 0.28 ) }
    dend_27 { pt3dadd( 93.565, 70.711, -72.4244, 0.28 ) }
    dend_27 { pt3dadd( 99.7221, 73.8003, -75.4223, 0.28 ) }
    dend_27 { pt3dadd( 105.874, 77.2364, -77.9761, 0.28 ) }
    dend_27 { pt3dadd( 111.821, 81.1674, -80.1943, 0.28 ) }
    dend_27 { pt3dadd( 117.38, 84.5803, -83.896, 0.28 ) }
    dend_27 { pt3dadd( 122.706, 87.5889, -88.2726, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 92/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 38.2731, 31.8371, -45.6519, 0.28 ) }
    dend_26 { pt3dadd( 43.2698, 35.9101, -50.4407, 0.28 ) }
    dend_26 { pt3dadd( 47.364, 40.1792, -55.8438, 0.28 ) }
    dend_26 { pt3dadd( 51.4845, 44.3405, -61.3192, 0.28 ) }
    dend_26 { pt3dadd( 55.0389, 48.7225, -66.9903, 0.28 ) }
    dend_26 { pt3dadd( 57.7116, 52.1733, -73.743, 0.28 ) }
    dend_26 { pt3dadd( 60.3755, 55.7013, -80.4547, 0.28 ) }
    dend_26 { pt3dadd( 62.3899, 58.4365, -87.7725, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_26 { pt3dadd( 62.7127, 61.6182, -95.1478, 0.28 ) }
    dend_26 { pt3dadd( 62.562, 66.4912, -101.412, 0.28 ) }
    dend_26 { pt3dadd( 63.1914, 71.14, -107.841, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -12.9196, -24.2179, -24.9852, 0.83 ) }
    dend_24 { pt3dadd( -17.0189, -33.1257, -30.4654, 0.83 ) }
    dend_24 { pt3dadd( -20.6592, -42.9745, -34.2209, 0.83 ) }
    dend_24 { pt3dadd( -24.3203, -52.0306, -39.7377, 0.83 ) }
    dend_24 { pt3dadd( -28.221, -60.2971, -46.3509, 0.83 ) }
    dend_24 { pt3dadd( -30.3964, -67.8909, -54.4631, 0.83 ) }
    dend_24 { pt3dadd( -32.2942, -74.0921, -63.8535, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 10/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -12.9196, -24.2179, -24.9852, 0.83 ) }
    dend_21 { pt3dadd( -16.5184, -30.1801, -28.805, 0.83 ) }
    dend_21 { pt3dadd( -19.4246, -36.7693, -32.0389, 0.83 ) }
    dend_21 { pt3dadd( -23.3419, -42.5729, -35.8077, 0.83 ) }
    dend_21 { pt3dadd( -26.1804, -48.1312, -40.7959, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 15/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.04999, -12.7753, -1.49411, 1.94 ) }
    dend_9 { pt3dadd( -2.89572, -20.6649, 1.75802, 1.94 ) }
    dend_9 { pt3dadd( -3.40157, -25.3839, 3.70319, 1.94 ) }
    dend_9 { pt3dadd( -3.75024, -28.6365, 5.04395, 1.94 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 19/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 19.4933, -52.7621, 10.8343, 0.83 ) }
    dend_7 { pt3dadd( 22.3475, -54.2072, 13.9493, 0.83 ) }
    dend_7 { pt3dadd( 27.8023, -56.8939, 19.106, 0.83 ) }
    dend_7 { pt3dadd( 30.3138, -58.0233, 21.4883, 0.83 ) }
    dend_7 { pt3dadd( 34.9764, -60.0155, 26.4201, 0.83 ) }
    dend_7 { pt3dadd( 37.2477, -60.9832, 28.9979, 0.83 ) }
    dend_7 { pt3dadd( 38.9177, -61.6798, 30.9373, 0.28 ) }
    dend_7 { pt3dadd( 41.6013, -62.7704, 33.9146, 1.39 ) }
    dend_7 { pt3dadd( 46.8239, -65.0858, 39.7201, 1.11 ) }
    dend_7 { pt3dadd( 54.4256, -68.582, 48.4432, 0.56 ) }
    dend_7 { pt3dadd( 57.7311, -70.1336, 52.4212, 2.5 ) }
    dend_7 { pt3dadd( 59.8736, -71.2208, 55.1024, 2.5 ) }
    dend_7 { pt3dadd( 62.6508, -72.7332, 58.7699, 0.28 ) }
    dend_7 { pt3dadd( 64.4327, -73.766, 61.2146, 1.11 ) }
    dend_7 { pt3dadd( 65.3715, -74.3894, 62.4206, 1.11 ) }
    dend_7 { pt3dadd( 70.9142, -78.3127, 69.2002, 0.28 ) }
    dend_7 { pt3dadd( 71.425, -78.6855, 69.8205, 0.56 ) }
    dend_7 { pt3dadd( 73.8414, -80.479, 72.8014, 0.28 ) }
    dend_7 { pt3dadd( 77.082, -82.7959, 76.8012, 3.33 ) }
    dend_7 { pt3dadd( 80.4276, -85.173, 80.5678, 0.28 ) }
    dend_7 { pt3dadd( 80.7854, -85.4386, 80.8929, 0.56 ) }
    dend_7 { pt3dadd( 85.522, -89.2087, 84.3486, 0.28 ) }
    dend_7 { pt3dadd( 85.9022, -89.5226, 84.5959, 0.83 ) }
    dend_7 { pt3dadd( 89.1624, -92.2902, 86.4346, 0.28 ) }
    dend_7 { pt3dadd( 91.0533, -93.8945, 87.3417, 1.39 ) }
    dend_7 { pt3dadd( 101.609, -102.629, 91.8611, 0.28 ) }
    dend_7 { pt3dadd( 103.857, -104.464, 92.7357, 2.5 ) }
    dend_7 { pt3dadd( 108.118, -107.898, 94.1325, 0.28 ) }
    dend_7 { pt3dadd( 108.953, -108.58, 94.3557, 0.83 ) }
    dend_7 { pt3dadd( 113.346, -112.188, 95.1231, 0.28 ) }
    dend_7 { pt3dadd( 114.446, -113.055, 95.2057, 1.11 ) }
    dend_7 { pt3dadd( 118.559, -116.033, 94.9909, 0.28 ) }
    dend_7 { pt3dadd( 120.159, -117.161, 94.8597, 1.11 ) }
    dend_7 { pt3dadd( 123.472, -119.427, 94.3763, 0.28 ) }
    dend_7 { pt3dadd( 125.312, -120.707, 94.0674, 1.39 ) }
    dend_7 { pt3dadd( 133.052, -126.314, 92.3191, 0.28 ) }
    dend_7 { pt3dadd( 133.745, -126.817, 92.1538, 1.39 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 56/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 19.4933, -52.7621, 10.8343, 0.83 ) }
    dend_6 { pt3dadd( 21.0634, -56.0603, 11.949, 0.83 ) }
    dend_6 { pt3dadd( 22.1038, -58.3323, 12.7412, 0.83 ) }
    dend_6 { pt3dadd( 22.7023, -59.6678, 13.1895, 0.83 ) }
    dend_6 { pt3dadd( 23.424, -61.2667, 13.6866, 0.83 ) }
    dend_6 { pt3dadd( 24.2418, -63.1255, 14.2266, 0.83 ) }
    dend_6 { pt3dadd( 25.3485, -65.4607, 14.8249, 0.83 ) }
    dend_6 { pt3dadd( 27.1027, -68.5945, 15.6351, 0.83 ) }
    dend_6 { pt3dadd( 27.689, -69.61, 15.8605, 1.11 ) }
    dend_6 { pt3dadd( 28.4096, -70.8834, 16.1228, 0.83 ) }
    dend_6 { pt3dadd( 29.0918, -72.0769, 16.3386, 1.11 ) }
    dend_6 { pt3dadd( 31.7476, -76.4355, 17.0895, 0.83 ) }
    dend_6 { pt3dadd( 32.6921, -77.7921, 17.3323, 0.28 ) }
    dend_6 { pt3dadd( 32.8143, -77.9466, 17.3593, 0.83 ) }
    dend_6 { pt3dadd( 33.3399, -78.5957, 17.4737, 0.28 ) }
    dend_6 { pt3dadd( 35.4453, -81.155, 17.9505, 0.83 ) }
    dend_6 { pt3dadd( 36.9122, -82.9398, 18.2766, 0.56 ) }
    dend_6 { pt3dadd( 37.6673, -83.9327, 18.4878, 0.83 ) }
    dend_6 { pt3dadd( 38.2742, -84.7888, 18.6782, 0.56 ) }
    dend_6 { pt3dadd( 39.6023, -86.7842, 19.1422, 1.11 ) }
    dend_6 { pt3dadd( 40.4383, -88.1158, 19.4948, 0.56 ) }
    dend_6 { pt3dadd( 40.9105, -88.9526, 19.728, 0.83 ) }
    dend_6 { pt3dadd( 41.8124, -90.7734, 20.2625, 0.28 ) }
    dend_6 { pt3dadd( 41.9873, -91.158, 20.3796, 0.83 ) }
    dend_6 { pt3dadd( 43.23, -94.0031, 21.2525, 1.94 ) }
    dend_6 { pt3dadd( 43.8083, -95.3152, 21.6501, 1.11 ) }
    dend_6 { pt3dadd( 44.5042, -96.884, 22.08, 0.56 ) }
    dend_6 { pt3dadd( 45.1785, -98.2602, 22.4533, 0.83 ) }
    dend_6 { pt3dadd( 45.8928, -99.6341, 22.8027, 0.56 ) }
    dend_6 { pt3dadd( 47.3757, -102.315, 23.455, 1.39 ) }
    dend_6 { pt3dadd( 48.1521, -103.705, 23.7634, 0.56 ) }
    dend_6 { pt3dadd( 48.6488, -104.56, 23.9386, 0.83 ) }
    dend_6 { pt3dadd( 50.1451, -106.984, 24.4897, 0.28 ) }
    dend_6 { pt3dadd( 50.3552, -107.311, 24.5751, 0.83 ) }
    dend_6 { pt3dadd( 51.5785, -109.18, 25.097, 2.22 ) }
    dend_6 { pt3dadd( 55.0765, -114.394, 26.6764, 0.28 ) }
    dend_6 { pt3dadd( 56.2323, -116.183, 27.244, 1.39 ) }
    dend_6 { pt3dadd( 57.2685, -117.872, 27.8283, 0.56 ) }
    dend_6 { pt3dadd( 58.1772, -119.458, 28.4055, 0.28 ) }
    dend_6 { pt3dadd( 58.577, -120.183, 28.6967, 0.83 ) }
    dend_6 { pt3dadd( 59.417, -121.775, 29.413, 0.28 ) }
    dend_6 { pt3dadd( 60.886, -124.689, 30.8136, 1.39 ) }
    dend_6 { pt3dadd( 61.9931, -127.13, 31.8983, 0.28 ) }
    dend_6 { pt3dadd( 62.1467, -127.507, 32.0604, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 62.6323, -128.847, 32.6234, 0.28 ) }
    dend_6 { pt3dadd( 62.7796, -129.34, 32.8198, 0.83 ) }
    dend_6 { pt3dadd( 63.109, -130.812, 33.3465, 0.28 ) }
    dend_6 { pt3dadd( 63.2998, -131.899, 33.711, 1.94 ) }
    dend_6 { pt3dadd( 63.5737, -134.255, 34.4294, 0.28 ) }
    dend_6 { pt3dadd( 63.643, -135.198, 34.7157, 0.83 ) }
    dend_6 { pt3dadd( 63.8727, -137.023, 35.2469, 0.28 ) }
    dend_6 { pt3dadd( 64.0166, -137.849, 35.48, 0.83 ) }
    dend_6 { pt3dadd( 64.2187, -138.965, 35.7866, 0.56 ) }
    dend_6 { pt3dadd( 64.7549, -141.635, 36.4854, 0.28 ) }
    dend_6 { pt3dadd( 64.9153, -142.311, 36.6376, 1.67 ) }
    dend_6 { pt3dadd( 66.1265, -146.26, 37.6539, 0.28 ) }
    dend_6 { pt3dadd( 66.3852, -146.88, 37.8444, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 13/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -11.8232, 20.7209, 4.74449, 0.83 ) }
    dend_4 { pt3dadd( -12.4697, 21.4044, 5.91081, 0.83 ) }
    dend_4 { pt3dadd( -13.4299, 22.3678, 7.69369, 0.83 ) }
    dend_4 { pt3dadd( -15.519, 24.9712, 12.3669, 0.83 ) }
    dend_4 { pt3dadd( -15.7918, 25.3613, 13.1224, 0.83 ) }
    dend_4 { pt3dadd( -16.5751, 26.5618, 15.4505, 0.83 ) }
    dend_4 { pt3dadd( -17.7098, 28.3907, 19.058, 0.83 ) }
    dend_4 { pt3dadd( -18.4439, 29.5156, 21.4479, 0.83 ) }
    dend_4 { pt3dadd( -19.36, 30.9542, 24.6422, 0.83 ) }
    dend_4 { pt3dadd( -20.7861, 33.2385, 29.4835, 0.56 ) }
    dend_4 { pt3dadd( -21.0148, 33.6797, 30.3217, 0.83 ) }
    dend_4 { pt3dadd( -21.5424, 35.0193, 32.4573, 0.83 ) }
    dend_4 { pt3dadd( -22.2003, 36.6154, 34.708, 1.11 ) }
    dend_4 { pt3dadd( -23.0805, 38.348, 36.847, 0.28 ) }
    dend_4 { pt3dadd( -23.61, 39.1122, 37.6563, 1.11 ) }
    dend_4 { pt3dadd( -25.0872, 40.7414, 39.0851, 0.56 ) }
    dend_4 { pt3dadd( -26.5817, 41.9486, 40.1482, 0.28 ) }
    dend_4 { pt3dadd( -29.4844, 43.3738, 41.6448, 0.56 ) }
    dend_4 { pt3dadd( -30.3268, 43.6473, 42.0069, 0.56 ) }
    dend_4 { pt3dadd( -33.325, 44.3683, 43.1709, 2.22 ) }
    dend_4 { pt3dadd( -36.9116, 44.9798, 44.6867, 0.28 ) }
    dend_4 { pt3dadd( -39.3555, 45.2431, 45.7003, 0.83 ) }
    dend_4 { pt3dadd( -43.7283, 45.5571, 47.4922, 0.28 ) }
    dend_4 { pt3dadd( -44.677, 45.6199, 47.854, 0.56 ) }
    dend_4 { pt3dadd( -45.8221, 45.6554, 48.2896, 0.83 ) }
    dend_4 { pt3dadd( -48.6044, 45.6389, 49.3299, 0.83 ) }
    dend_4 { pt3dadd( -49.9805, 45.6205, 49.9076, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -11.8232, 20.7209, 4.74449, 0.83 ) }
    dend_1 { pt3dadd( -14.6377, 21.2295, 5.35119, 0.83 ) }
    dend_1 { pt3dadd( -16.5671, 21.5292, 5.67937, 0.56 ) }
    dend_1 { pt3dadd( -18.0766, 21.738, 5.89803, 0.56 ) }
    dend_1 { pt3dadd( -20.5593, 22.175, 6.35307, 0.56 ) }
    dend_1 { pt3dadd( -21.4141, 22.3321, 6.53318, 0.56 ) }
    dend_1 { pt3dadd( -23.8643, 22.8678, 7.07284, 0.56 ) }
    dend_1 { pt3dadd( -25.0445, 23.1849, 7.42417, 0.56 ) }
    dend_1 { pt3dadd( -25.4301, 23.3125, 7.55677, 0.56 ) }
    dend_1 { pt3dadd( -28.3642, 24.6029, 8.68358, 0.56 ) }
    dend_1 { pt3dadd( -30.1187, 25.551, 9.3751, 0.56 ) }
    dend_1 { pt3dadd( -32.3205, 26.8458, 10.3099, 0.56 ) }
    dend_1 { pt3dadd( -34.0777, 28.0061, 11.1487, 0.56 ) }
    dend_1 { pt3dadd( -36.3152, 29.554, 12.2768, 0.83 ) }
    dend_1 { pt3dadd( -38.5053, 31.151, 13.3776, 1.11 ) }
    dend_1 { pt3dadd( -39.2809, 31.7658, 13.7448, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.03117, 39.8318, 1.53323, 0.83 ) }
    axon_1 { pt3dadd( -1.45255, 54.8258, 1.53323, 0.83 ) }
    axon_1 { pt3dadd( -1.87393, 69.8199, 1.53323, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 59/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -5.7779, 21.9568, 6.18946, 0.83 ) }
    dend_40 { pt3dadd( -5.69742, 23.2352, 7.76238, 0.83 ) }
    dend_40 { pt3dadd( -5.66905, 23.9893, 8.70256, 1.11 ) }
    dend_40 { pt3dadd( -5.19425, 26.7015, 12.4997, 0.56 ) }
    dend_40 { pt3dadd( -4.97828, 28.0404, 14.2961, 0.83 ) }
    dend_40 { pt3dadd( -4.79444, 29.1954, 15.7483, 0.83 ) }
    dend_40 { pt3dadd( -4.5073, 30.9784, 17.9411, 0.83 ) }
    dend_40 { pt3dadd( -4.23838, 32.5812, 19.8363, 1.39 ) }
    dend_40 { pt3dadd( -3.42325, 37.5716, 25.4217, 0.83 ) }
    dend_40 { pt3dadd( -3.05729, 39.4002, 27.3869, 1.11 ) }
    dend_40 { pt3dadd( -1.04752, 48.8296, 36.9368, 0.28 ) }
    dend_40 { pt3dadd( -0.393612, 51.8612, 39.9327, 1.67 ) }
    dend_40 { pt3dadd( 0.448564, 55.8947, 43.7975, 0.28 ) }
    dend_40 { pt3dadd( 0.65833, 56.9584, 44.8092, 0.83 ) }
    dend_40 { pt3dadd( 1.47764, 61.5963, 48.8772, 0.28 ) }
    dend_40 { pt3dadd( 1.95548, 64.2892, 51.1848, 0.28 ) }
    dend_40 { pt3dadd( 2.25037, 66.1334, 52.6749, 0.83 ) }
    dend_40 { pt3dadd( 2.43852, 67.4219, 53.7728, 0.28 ) }
    dend_40 { pt3dadd( 2.59991, 68.4797, 55.042, 0.56 ) }
    dend_40 { pt3dadd( 3.43636, 73.7832, 62.5774, 0.28 ) }
    dend_40 { pt3dadd( 3.76836, 75.0091, 64.6585, 0.83 ) }
    dend_40 { pt3dadd( 4.63215, 77.4372, 69.2247, 0.56 ) }
    dend_40 { pt3dadd( 4.99166, 78.2836, 70.7877, 1.39 ) }
    dend_40 { pt3dadd( 7.16953, 82.8553, 79.3624, 0.28 ) }
    dend_40 { pt3dadd( 7.50719, 83.531, 80.5675, 1.39 ) }
    dend_40 { pt3dadd( 9.45944, 87.4294, 87.5253, 0.28 ) }
    dend_40 { pt3dadd( 9.79678, 88.1841, 88.6861, 1.11 ) }
    dend_40 { pt3dadd( 11.0189, 91.4894, 93.0633, 0.28 ) }
    dend_40 { pt3dadd( 11.1499, 91.9265, 93.5645, 0.83 ) }
    dend_40 { pt3dadd( 13.3952, 102.009, 103.185, 0.28 ) }
    dend_40 { pt3dadd( 13.7582, 103.993, 104.964, 1.67 ) }
    dend_40 { pt3dadd( 14.3334, 108.97, 108.982, 0.28 ) }
    dend_40 { pt3dadd( 14.4003, 109.549, 109.445, 0.83 ) }
    dend_40 { pt3dadd( 14.4915, 111.069, 110.636, 0.28 ) }
    dend_40 { pt3dadd( 14.5116, 111.901, 111.278, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -5.7779, 21.9568, 6.18946, 1.11 ) }
    dend_33 { pt3dadd( -8.57441, 25.0223, 5.35524, 1.11 ) }
    dend_33 { pt3dadd( -10.5956, 27.2378, 4.75233, 1.11 ) }
    dend_33 { pt3dadd( -11.8567, 28.6203, 4.37611, 1.11 ) }
    dend_33 { pt3dadd( -13.932, 30.8951, 3.75707, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 99/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 6.3264, 25.8122, 19.4172, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_31 { pt3dadd( 6.23895, 29.1141, 23.547, 0.56 ) }
    dend_31 { pt3dadd( 6.77719, 32.1973, 28.0558, 0.83 ) }
    dend_31 { pt3dadd( 7.24005, 33.8306, 30.6338, 0.56 ) }
    dend_31 { pt3dadd( 8.44317, 37.0271, 35.6187, 1.11 ) }
    dend_31 { pt3dadd( 9.87721, 40.6063, 41.0649, 0.56 ) }
    dend_31 { pt3dadd( 10.8348, 42.9174, 44.4678, 1.39 ) }
    dend_31 { pt3dadd( 13.0747, 47.3262, 50.7006, 0.28 ) }
    dend_31 { pt3dadd( 14.3645, 49.6672, 54.0292, 1.67 ) }
    dend_31 { pt3dadd( 16.235, 52.8755, 58.5834, 0.28 ) }
    dend_31 { pt3dadd( 16.6094, 53.6267, 59.4833, 0.56 ) }
    dend_31 { pt3dadd( 17.3256, 55.4504, 61.1686, 0.28 ) }
    dend_31 { pt3dadd( 17.4744, 55.8923, 61.5287, 0.83 ) }
    dend_31 { pt3dadd( 18.2646, 58.6358, 63.5383, 0.28 ) }
    dend_31 { pt3dadd( 18.9167, 60.8312, 65.1136, 1.67 ) }
    dend_31 { pt3dadd( 22.7678, 73.6656, 74.1158, 0.28 ) }
    dend_31 { pt3dadd( 23.6937, 76.8009, 76.3637, 2.22 ) }
    dend_31 { pt3dadd( 25.2613, 82.4395, 80.3654, 0.28 ) }
    dend_31 { pt3dadd( 25.5209, 83.4226, 81.0578, 0.83 ) }
    dend_31 { pt3dadd( 26.6305, 87.8694, 84.1177, 0.28 ) }
    dend_31 { pt3dadd( 26.9729, 89.5391, 85.1976, 0.56 ) }
    dend_31 { pt3dadd( 27.9495, 95.6545, 88.7408, 0.28 ) }
    dend_31 { pt3dadd( 28.1223, 97.658, 89.8146, 1.11 ) }
    dend_31 { pt3dadd( 28.2183, 101.067, 91.3368, 0.28 ) }
    dend_31 { pt3dadd( 28.2282, 102.473, 91.9003, 0.83 ) }
    dend_31 { pt3dadd( 28.0285, 105.794, 92.9778, 0.28 ) }
    dend_31 { pt3dadd( 27.6679, 110.014, 94.1667, 1.11 ) }
    dend_31 { pt3dadd( 26.5651, 119.624, 96.3265, 0.28 ) }
    dend_31 { pt3dadd( 26.3433, 120.967, 96.6339, 0.28 ) }
    dend_31 { pt3dadd( 25.9619, 122.794, 97.053, 1.11 ) }
    dend_31 { pt3dadd( 24.4159, 129.465, 98.6025, 0.28 ) }
    dend_31 { pt3dadd( 24.2753, 129.973, 98.7183, 0.28 ) }
    dend_31 { pt3dadd( 23.24, 133.045, 99.2786, 1.39 ) }
    dend_31 { pt3dadd( 21.775, 136.085, 99.9874, 0.28 ) }
    dend_31 { pt3dadd( 20.7098, 138.221, 100.66, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 34/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 6.3264, 25.8122, 19.4172, 0.28 ) }
    dend_30 { pt3dadd( 7.55552, 29.4671, 21.4994, 0.28 ) }
    dend_30 { pt3dadd( 7.93706, 30.4128, 22.1193, 0.83 ) }
    dend_30 { pt3dadd( 8.75225, 32.0661, 23.2539, 1.11 ) }
    dend_30 { pt3dadd( 9.68378, 33.8515, 24.4444, 0.83 ) }
    dend_30 { pt3dadd( 10.0869, 34.594, 24.9075, 0.28 ) }
    dend_30 { pt3dadd( 10.3799, 35.1072, 25.2325, 0.28 ) }
    dend_30 { pt3dadd( 12.0337, 37.5532, 26.8044, 1.39 ) }
    dend_30 { pt3dadd( 13.5872, 39.4812, 28.186, 0.83 ) }
    dend_30 { pt3dadd( 15.3407, 41.5373, 29.653, 0.28 ) }
    dend_30 { pt3dadd( 16.0617, 42.3403, 30.184, 0.83 ) }
    dend_30 { pt3dadd( 17.8987, 44.3515, 31.4193, 0.28 ) }
    dend_30 { pt3dadd( 19.8747, 46.3932, 32.5702, 1.39 ) }
    dend_30 { pt3dadd( 22.0995, 48.5938, 33.6522, 0.28 ) }
    dend_30 { pt3dadd( 23.9848, 50.3645, 34.4242, 0.28 ) }
    dend_30 { pt3dadd( 25.3831, 51.5918, 34.8841, 0.56 ) }
    dend_30 { pt3dadd( 26.5466, 52.4838, 35.2866, 0.83 ) }
    dend_30 { pt3dadd( 28.986, 54.1865, 36.0685, 0.28 ) }
    dend_30 { pt3dadd( 29.3422, 54.4155, 36.1769, 0.83 ) }
    dend_30 { pt3dadd( 31.9255, 55.8848, 37.2321, 0.28 ) }
    dend_30 { pt3dadd( 33.2031, 56.5431, 37.8375, 0.83 ) }
    dend_30 { pt3dadd( 38.7243, 59.2243, 40.7237, 0.28 ) }
    dend_30 { pt3dadd( 39.426, 59.5526, 41.1077, 1.39 ) }
    dend_30 { pt3dadd( 42.3019, 60.9191, 42.7909, 1.94 ) }
    dend_30 { pt3dadd( 47.8046, 63.5998, 46.1089, 0.28 ) }
    dend_30 { pt3dadd( 48.5444, 63.9921, 46.589, 0.56 ) }
    dend_30 { pt3dadd( 50.8661, 65.4123, 48.0915, 0.28 ) }
    dend_30 { pt3dadd( 51.6698, 65.9922, 48.5806, 1.11 ) }
    dend_30 { pt3dadd( 54.1183, 67.9272, 50.1117, 0.28 ) }
    dend_30 { pt3dadd( 55.0102, 68.7429, 50.7108, 1.39 ) }
    dend_30 { pt3dadd( 57.3805, 71.3416, 52.2437, 0.28 ) }
    dend_30 { pt3dadd( 59.7202, 74.436, 53.9036, 0.56 ) }
    dend_30 { pt3dadd( 60.5613, 75.7627, 54.5318, 0.56 ) }
    dend_30 { pt3dadd( 61.689, 77.8297, 55.4118, 0.83 ) }
    dend_30 { pt3dadd( 62.7827, 80.3099, 56.2862, 0.28 ) }
    dend_30 { pt3dadd( 63.5272, 82.3509, 56.9286, 1.39 ) }
    dend_30 { pt3dadd( 64.6231, 86.3197, 57.9514, 0.28 ) }
    dend_30 { pt3dadd( 64.8717, 87.7296, 58.315, 0.56 ) }
    dend_30 { pt3dadd( 65.1119, 89.4321, 58.7455, 0.28 ) }
    dend_30 { pt3dadd( 65.4494, 91.7623, 59.3709, 1.39 ) }
    dend_30 { pt3dadd( 65.7347, 93.5099, 59.9258, 0.28 ) }
    dend_30 { pt3dadd( 65.9002, 94.3725, 60.2743, 0.56 ) }
    dend_30 { pt3dadd( 67.1293, 99.9473, 62.8323, 0.28 ) }
    dend_30 { pt3dadd( 67.3616, 100.877, 63.3015, 1.39 ) }
    dend_30 { pt3dadd( 68.615, 105.202, 65.6179, 0.28 ) }
    dend_30 { pt3dadd( 69.2105, 107.115, 66.6602, 0.83 ) }
    dend_30 { pt3dadd( 70.7759, 112.413, 69.3984, 0.28 ) }
    dend_30 { pt3dadd( 70.9416, 112.989, 69.6763, 0.56 ) }
    dend_30 { pt3dadd( 71.533, 115.825, 70.7603, 0.28 ) }
    dend_30 { pt3dadd( 71.6571, 116.705, 71.0293, 0.28 ) }
    dend_30 { pt3dadd( 71.8566, 118.778, 71.5505, 1.39 ) }
    dend_30 { pt3dadd( 72.3074, 125.796, 72.9939, 0.28 ) }
    dend_30 { pt3dadd( 72.3568, 127.913, 73.3317, 1.11 ) }
    dend_30 { pt3dadd( 72.3052, 135.202, 74.3739, 0.28 ) }
    dend_30 { pt3dadd( 72.2597, 136.141, 74.4771, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 89/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -26.1804, -48.1312, -40.7959, 0.28 ) }
    dend_23 { pt3dadd( -30.2602, -55.0219, -45.4442, 0.28 ) }
    dend_23 { pt3dadd( -34.0912, -62.5932, -48.992, 0.28 ) }
    dend_23 { pt3dadd( -37.7073, -69.8137, -53.4804, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 93/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -26.1804, -48.1312, -40.7959, 0.28 ) }
    dend_22 { pt3dadd( -29.0464, -55.1356, -45.1279, 0.28 ) }
    dend_22 { pt3dadd( -31.0187, -62.3091, -49.6795, 0.28 ) }
    dend_22 { pt3dadd( -31.2056, -69.7254, -54.2809, 0.28 ) }
    dend_22 { pt3dadd( -29.7623, -76.1874, -60.1272, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 98/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -3.75024, -28.6365, 5.04395, 0.83 ) }
    dend_11 { pt3dadd( -4.57764, -31.2013, 4.10703, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_11 { pt3dadd( -4.92011, -32.9495, 3.50154, 1.11 ) }
    dend_11 { pt3dadd( -5.42714, -36.3525, 2.04117, 1.11 ) }
    dend_11 { pt3dadd( -5.82213, -39.3824, 0.717181, 1.11 ) }
    dend_11 { pt3dadd( -6.10663, -41.5648, -0.236454, 1.11 ) }
    dend_11 { pt3dadd( -6.86437, -47.3775, -2.77642, 1.11 ) }
    dend_11 { pt3dadd( -7.0849, -49.9295, -3.94422, 0.83 ) }
    dend_11 { pt3dadd( -7.24176, -54.4735, -5.96875, 0.83 ) }
    dend_11 { pt3dadd( -7.129, -57.3829, -7.14166, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 8/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.75024, -28.6365, 5.04395, 1.11 ) }
    dend_10 { pt3dadd( -3.78383, -30.2228, 7.44182, 1.11 ) }
    dend_10 { pt3dadd( -3.74937, -30.939, 8.69319, 1.11 ) }
    dend_10 { pt3dadd( -3.73283, -32.277, 11.094, 1.11 ) }
    dend_10 { pt3dadd( -3.83365, -33.7402, 13.6934, 1.11 ) }
    dend_10 { pt3dadd( -4.13994, -36.8475, 19.2352, 1.11 ) }
    dend_10 { pt3dadd( -4.36809, -38.5931, 22.3942, 1.11 ) }
    dend_10 { pt3dadd( -4.63167, -40.0856, 25.2442, 0.83 ) }
    dend_10 { pt3dadd( -4.75041, -40.775, 26.5982, 0.83 ) }
    dend_10 { pt3dadd( -4.92056, -42.2867, 29.5681, 0.83 ) }
    dend_10 { pt3dadd( -4.91742, -43.1611, 31.132, 0.83 ) }
    dend_10 { pt3dadd( -4.84863, -45.2569, 34.5455, 0.56 ) }
    dend_10 { pt3dadd( -4.72771, -46.4007, 36.3548, 0.56 ) }
    dend_10 { pt3dadd( -4.58168, -47.0527, 37.3825, 0.28 ) }
    dend_10 { pt3dadd( -4.02791, -48.5812, 39.8467, 1.67 ) }
    dend_10 { pt3dadd( -2.67839, -51.6967, 45.293, 0.28 ) }
    dend_10 { pt3dadd( -2.31436, -52.4997, 46.9127, 1.94 ) }
    dend_10 { pt3dadd( -2.04251, -53.0645, 48.2111, 3.33 ) }
    dend_10 { pt3dadd( -1.62707, -53.9979, 50.7371, 0.83 ) }
    dend_10 { pt3dadd( -1.22919, -55.0336, 53.8162, 0.28 ) }
    dend_10 { pt3dadd( -0.630752, -57.0761, 59.9778, 2.22 ) }
    dend_10 { pt3dadd( -0.0486618, -59.3059, 66.804, 0.28 ) }
    dend_10 { pt3dadd( 0.122896, -60.0426, 69.1269, 1.94 ) }
    dend_10 { pt3dadd( 0.501609, -62.1952, 76.1833, 0.28 ) }
    dend_10 { pt3dadd( 0.536863, -62.5397, 77.3367, 1.94 ) }
    dend_10 { pt3dadd( 0.618895, -63.6551, 81.1708, 0.28 ) }
    dend_10 { pt3dadd( 0.63452, -63.8179, 81.6787, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -39.2809, 31.7658, 13.7448, 0.28 ) }
    dend_3 { pt3dadd( -41.4586, 34.3923, 14.1948, 0.28 ) }
    dend_3 { pt3dadd( -43.0715, 36.2797, 14.638, 0.56 ) }
    dend_3 { pt3dadd( -44.1503, 37.5014, 14.9485, 0.83 ) }
    dend_3 { pt3dadd( -45.5491, 38.7092, 15.4389, 1.67 ) }
    dend_3 { pt3dadd( -47.4009, 40.1897, 15.9774, 0.56 ) }
    dend_3 { pt3dadd( -48.4062, 40.9697, 16.2326, 0.56 ) }
    dend_3 { pt3dadd( -50.7024, 42.5974, 16.8704, 0.28 ) }
    dend_3 { pt3dadd( -51.4073, 43.0766, 17.0656, 0.83 ) }
    dend_3 { pt3dadd( -59.7153, 48.6551, 19.2825, 0.28 ) }
    dend_3 { pt3dadd( -62.1535, 50.2855, 19.8802, 1.11 ) }
    dend_3 { pt3dadd( -64.0149, 51.4992, 20.2451, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -39.2809, 31.7658, 13.7448, 0.28 ) }
    dend_2 { pt3dadd( -44.1532, 31.0462, 13.7865, 0.28 ) }
    dend_2 { pt3dadd( -45.6882, 30.824, 13.8339, 0.56 ) }
    dend_2 { pt3dadd( -47.411, 30.5544, 13.9962, 0.28 ) }
    dend_2 { pt3dadd( -48.3046, 30.3982, 14.0977, 0.56 ) }
    dend_2 { pt3dadd( -51.0473, 29.8523, 14.5859, 0.28 ) }
    dend_2 { pt3dadd( -52.9825, 29.489, 14.9953, 0.56 ) }
    dend_2 { pt3dadd( -53.6014, 29.3917, 15.2118, 0.28 ) }
    dend_2 { pt3dadd( -56.3071, 29.3166, 16.4779, 0.56 ) }
    dend_2 { pt3dadd( -57.1799, 29.4069, 16.9422, 0.56 ) }
    dend_2 { pt3dadd( -60.5172, 30.6198, 18.1038, 0.28 ) }
    dend_2 { pt3dadd( -61.6288, 31.2991, 18.2587, 0.56 ) }
    dend_2 { pt3dadd( -63.1061, 32.4476, 18.1792, 1.67 ) }
    dend_2 { pt3dadd( -67.3512, 36.1447, 17.4494, 0.28 ) }
    dend_2 { pt3dadd( -68.6028, 37.3571, 17.1276, 1.39 ) }
    dend_2 { pt3dadd( -75.8237, 44.8892, 14.6948, 0.28 ) }
    dend_2 { pt3dadd( -76.3949, 45.5368, 14.4232, 0.83 ) }
    dend_2 { pt3dadd( -80.0354, 49.6939, 12.2669, 0.28 ) }
    dend_2 { pt3dadd( -80.4974, 50.2249, 11.9088, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -13.932, 30.8951, 3.75707, 0.56 ) }
    dend_37 { pt3dadd( -15.6027, 33.8599, 3.34874, 0.56 ) }
    dend_37 { pt3dadd( -16.3766, 35.2333, 3.15959, 0.83 ) }
    dend_37 { pt3dadd( -17.2097, 36.7115, 2.95601, 0.28 ) }
    dend_37 { pt3dadd( -17.9954, 38.1059, 2.76397, 0.56 ) }
    dend_37 { pt3dadd( -20.3461, 42.2772, 2.18948, 0.56 ) }
    dend_37 { pt3dadd( -22.2184, 45.5997, 1.73189, 0.56 ) }
    dend_37 { pt3dadd( -27.4152, 55.7245, 1.45998, 0.56 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 74/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -13.932, 30.8951, 3.75707, 0.83 ) }
    dend_34 { pt3dadd( -17.3107, 34.5675, 0.43981, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -7.129, -57.3829, -7.14166, 0.83 ) }
    dend_13 { pt3dadd( -8.42557, -59.4262, -7.82261, 0.83 ) }
    dend_13 { pt3dadd( -9.9841, -62.8094, -8.96194, 0.83 ) }
    dend_13 { pt3dadd( -10.6801, -64.4331, -9.50739, 0.83 ) }
    dend_13 { pt3dadd( -11.4121, -66.1406, -10.081, 0.83 ) }
    dend_13 { pt3dadd( -12.8563, -69.5099, -11.2128, 0.83 ) }
    dend_13 { pt3dadd( -13.9928, -72.1614, -12.1035, 0.83 ) }
    dend_13 { pt3dadd( -15.3432, -76.2161, -13.4854, 0.83 ) }
    dend_13 { pt3dadd( -15.8874, -78.5041, -14.3222, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -7.129, -57.3829, -7.14166, 0.83 ) }
    dend_12 { pt3dadd( -7.94249, -64.2669, -5.54256, 0.83 ) }
    dend_12 { pt3dadd( -8.1969, -67.3804, -4.78958, 0.83 ) }
    dend_12 { pt3dadd( -8.25293, -68.5624, -4.44662, 0.56 ) }
    dend_12 { pt3dadd( -8.43382, -73.539, -2.8039, 0.56 ) }
    dend_12 { pt3dadd( -8.45173, -75.0154, -2.3002, 0.56 ) }
    dend_12 { pt3dadd( -8.4483, -79.1688, -0.890245, 0.56 ) }
    dend_12 { pt3dadd( -8.41616, -82.3465, 0.106081, 0.56 ) }
    dend_12 { pt3dadd( -8.37777, -85.2059, 1.17277, 0.56 ) }
    dend_12 { pt3dadd( -8.46066, -88.0627, 2.34625, 0.28 ) }
    dend_12 { pt3dadd( -8.62166, -89.903, 3.15718, 0.83 ) }
    dend_12 { pt3dadd( -8.80914, -91.4918, 3.84134, 0.83 ) }
    dend_12 { pt3dadd( -9.55374, -96.1163, 5.70002, 0.28 ) }
    dend_12 { pt3dadd( -9.93914, -98.1209, 6.37871, 0.83 ) }
    dend_12 { pt3dadd( -11.4045, -105.222, 8.45539, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -11.6764, -106.529, 8.78774, 1.11 ) }
    dend_12 { pt3dadd( -12.3962, -110.493, 9.72325, 0.28 ) }
    dend_12 { pt3dadd( -12.722, -112.865, 10.2205, 1.39 ) }
    dend_12 { pt3dadd( -13.0771, -120.352, 11.5767, 0.28 ) }
    dend_12 { pt3dadd( -13.0447, -121.166, 11.7195, 1.39 ) }
    dend_12 { pt3dadd( -12.7493, -122.779, 12.0139, 1.94 ) }
    dend_12 { pt3dadd( -11.3987, -127.513, 13.0288, 0.28 ) }
    dend_12 { pt3dadd( -10.891, -128.788, 13.3413, 1.11 ) }
    dend_12 { pt3dadd( -9.02983, -132.438, 14.3132, 0.28 ) }
    dend_12 { pt3dadd( -8.70575, -132.951, 14.4614, 0.83 ) }
    dend_12 { pt3dadd( -5.03762, -138.393, 15.7909, 0.28 ) }
    dend_12 { pt3dadd( -4.21489, -139.529, 16.0216, 0.28 ) }
    dend_12 { pt3dadd( -3.44094, -140.512, 16.0852, 0.56 ) }
    dend_12 { pt3dadd( -2.50437, -141.675, 15.9808, 0.28 ) }
    dend_12 { pt3dadd( -1.94295, -142.314, 15.7233, 0.83 ) }
    dend_12 { pt3dadd( 0.345135, -144.485, 14.2353, 0.28 ) }
    dend_12 { pt3dadd( 0.529926, -144.622, 14.0663, 0.56 ) }
    dend_12 { pt3dadd( 1.75114, -145.463, 12.8946, 0.28 ) }
    dend_12 { pt3dadd( 2.60298, -146.029, 12.0826, 0.56 ) }
    dend_12 { pt3dadd( 5.73132, -147.956, 9.44504, 0.28 ) }
    dend_12 { pt3dadd( 5.93352, -148.076, 9.27642, 0.56 ) }
    dend_12 { pt3dadd( 7.50025, -149.032, 8.00938, 0.28 ) }
    dend_12 { pt3dadd( 8.56681, -149.677, 7.14936, 0.83 ) }
    dend_12 { pt3dadd( 12.0006, -151.698, 4.4211, 0.28 ) }
    dend_12 { pt3dadd( 16.1462, -154.061, 1.14441, 0.28 ) }
    dend_12 { pt3dadd( 17.402, -154.729, 0.0490941, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 26/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -27.4152, 55.7245, 1.45998, 0.56 ) }
    dend_39 { pt3dadd( -33.2478, 63.9314, 1.07077, 0.56 ) }
    dend_39 { pt3dadd( -39.5382, 71.7532, 2.37333, 0.56 ) }
    dend_39 { pt3dadd( -44.6123, 80.4191, 2.32956, 0.56 ) }
    dend_39 { pt3dadd( -50.7993, 88.368, 1.67489, 0.56 ) }
    dend_39 { pt3dadd( -57.9548, 95.5377, 2.5359, 0.56 ) }
    dend_39 { pt3dadd( -64.741, 102.958, 3.93565, 0.56 ) }
    dend_39 { pt3dadd( -71.2216, 110.681, 4.88302, 0.56 ) }
    dend_39 { pt3dadd( -77.2938, 118.53, 6.89939, 0.56 ) }
    dend_39 { pt3dadd( -81.3874, 127.473, 8.93661, 0.56 ) }
    dend_39 { pt3dadd( -87.2831, 135.604, 9.95088, 0.56 ) }
    dend_39 { pt3dadd( -93.2886, 143.318, 12.6621, 0.56 ) }
    dend_39 { pt3dadd( -100.063, 150.696, 14.3503, 0.56 ) }
    dend_39 { pt3dadd( -107.303, 157.822, 14.7222, 0.56 ) }
    dend_39 { pt3dadd( -115.113, 164.35, 14.0674, 0.56 ) }
    dend_39 { pt3dadd( -122.765, 171.071, 14.5293, 0.56 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 42/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -27.4152, 55.7245, 1.45998, 0.28 ) }
    dend_38 { pt3dadd( -29.7947, 61.0823, 0.953903, 0.56 ) }
    dend_38 { pt3dadd( -32.4847, 66.3243, 1.04722, 0.56 ) }
    dend_38 { pt3dadd( -34.9519, 71.6232, 1.7558, 0.56 ) }
    dend_38 { pt3dadd( -37.9262, 76.7236, 1.81356, 0.56 ) }
    dend_38 { pt3dadd( -40.9877, 81.7275, 1.06269, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 48/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -17.3107, 34.5675, 0.43981, 0.56 ) }
    dend_36 { pt3dadd( -20.6597, 35.5833, -1.57694, 0.56 ) }
    dend_36 { pt3dadd( -22.5178, 36.2333, -2.66925, 0.56 ) }
    dend_36 { pt3dadd( -24.3324, 36.8735, -3.66134, 0.28 ) }
    dend_36 { pt3dadd( -27.4158, 37.9314, -5.18447, 0.83 ) }
    dend_36 { pt3dadd( -34.0751, 40.1968, -8.45987, 0.56 ) }
    dend_36 { pt3dadd( -35.8521, 40.8569, -9.33015, 0.56 ) }
    dend_36 { pt3dadd( -37.2249, 41.3981, -9.97593, 0.56 ) }
    dend_36 { pt3dadd( -38.4932, 41.9447, -10.5801, 0.56 ) }
    dend_36 { pt3dadd( -39.7736, 42.6511, -11.2439, 0.56 ) }
    dend_36 { pt3dadd( -43.6067, 45.2648, -13.1364, 0.56 ) }
    dend_36 { pt3dadd( -45.0394, 46.3243, -13.6744, 0.56 ) }
    dend_36 { pt3dadd( -46.1688, 47.1482, -14.1526, 0.56 ) }
    dend_36 { pt3dadd( -47.2775, 48.0077, -14.687, 0.83 ) }
    dend_36 { pt3dadd( -50.7711, 51.0771, -16.5929, 0.28 ) }
    dend_36 { pt3dadd( -52.1714, 52.4621, -17.4173, 0.56 ) }
    dend_36 { pt3dadd( -59.7247, 57.4715, -23.0829, 0.56 ) }
    dend_36 { pt3dadd( -66.5583, 63.3598, -28.7229, 0.56 ) }
    dend_36 { pt3dadd( -72.9135, 69.7504, -34.3166, 0.56 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -17.3107, 34.5675, 0.43981, 0.56 ) }
    dend_35 { pt3dadd( -17.9279, 35.7431, -0.523952, 0.56 ) }
    dend_35 { pt3dadd( -18.9038, 37.3763, -1.8328, 0.56 ) }
    dend_35 { pt3dadd( -19.8549, 38.8589, -3.00337, 0.56 ) }
    dend_35 { pt3dadd( -20.9846, 40.5285, -4.25293, 0.56 ) }
    dend_35 { pt3dadd( -23.4281, 44.1027, -6.82184, 0.56 ) }
    dend_35 { pt3dadd( -25.1114, 46.5769, -8.49758, 0.56 ) }
    dend_35 { pt3dadd( -26.2835, 48.2037, -9.59055, 0.56 ) }
    dend_35 { pt3dadd( -27.5689, 50.0074, -10.778, 0.56 ) }
    dend_35 { pt3dadd( -28.2176, 50.9546, -11.3362, 0.56 ) }
    dend_35 { pt3dadd( -29.1113, 52.3048, -12.0653, 0.56 ) }
    dend_35 { pt3dadd( -30.2371, 53.8742, -12.89, 0.56 ) }
    dend_35 { pt3dadd( -31.8955, 56.3455, -14.092, 0.56 ) }
    dend_35 { pt3dadd( -32.4257, 57.1513, -14.5308, 0.28 ) }
    dend_35 { pt3dadd( -32.9493, 57.9491, -14.9829, 0.56 ) }
    dend_35 { pt3dadd( -34.6282, 60.4877, -16.5641, 0.56 ) }
    dend_35 { pt3dadd( -36.3066, 62.8397, -18.1277, 0.56 ) }
    dend_35 { pt3dadd( -41.3001, 69.8667, -21.3773, 0.56 ) }
    dend_35 { pt3dadd( -45.4547, 76.3181, -26.5388, 0.56 ) }
    dend_35 { pt3dadd( -49.0038, 82.9559, -31.8891, 0.56 ) }
    dend_35 { pt3dadd( -54.4026, 88.5365, -37.0235, 0.56 ) }
    dend_35 { pt3dadd( -57.55, 95.6148, -41.9936, 0.56 ) }
    dend_35 { pt3dadd( -60.2423, 103.073, -46.6138, 0.56 ) }
    dend_35 { pt3dadd( -63.0884, 109.644, -52.4553, 0.56 ) }
    dend_35 { pt3dadd( -64.0527, 117.0, -57.8847, 0.56 ) }
    dend_35 { pt3dadd( -64.5864, 124.06, -63.7879, 0.56 ) }
    dend_35 { pt3dadd( -64.5005, 130.346, -70.6138, 0.56 ) }
    dend_35 { pt3dadd( -63.908, 135.492, -78.4098, 0.56 ) }
    dend_35 { pt3dadd( -62.8163, 141.999, -84.926, 0.56 ) }
    dend_35 { pt3dadd( -61.6877, 148.726, -91.1869, 0.56 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 97/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -15.8874, -78.5041, -14.3222, 0.83 ) }
    dend_15 { pt3dadd( -16.8888, -81.8474, -12.7905, 0.83 ) }
    dend_15 { pt3dadd( -17.5713, -83.7999, -12.3653, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( -18.0471, -85.1882, -12.185, 0.83 ) }
    dend_15 { pt3dadd( -18.4248, -86.265, -12.1153, 0.83 ) }
    dend_15 { pt3dadd( -18.8057, -87.3576, -12.095, 0.83 ) }
    dend_15 { pt3dadd( -19.5668, -89.5249, -12.1031, 0.83 ) }
    dend_15 { pt3dadd( -21.4247, -94.4566, -12.4014, 0.83 ) }
    dend_15 { pt3dadd( -22.4938, -97.3378, -12.5905, 0.83 ) }
    dend_15 { pt3dadd( -24.0593, -101.675, -12.8673, 0.83 ) }
    dend_15 { pt3dadd( -24.8815, -104.029, -13.0408, 1.11 ) }
    dend_15 { pt3dadd( -25.6841, -106.512, -13.2466, 0.83 ) }
    dend_15 { pt3dadd( -26.5285, -109.315, -13.4899, 0.83 ) }
    dend_15 { pt3dadd( -27.5147, -112.878, -13.7545, 0.83 ) }
    dend_15 { pt3dadd( -27.9261, -114.456, -13.8613, 0.83 ) }
    dend_15 { pt3dadd( -29.0175, -119.159, -14.0977, 0.83 ) }
    dend_15 { pt3dadd( -29.2135, -120.078, -14.1371, 0.83 ) }
    dend_15 { pt3dadd( -30.2106, -124.029, -14.3831, 0.83 ) }
    dend_15 { pt3dadd( -30.5424, -125.297, -14.497, 0.83 ) }
    dend_15 { pt3dadd( -31.9423, -130.157, -15.0693, 0.83 ) }
    dend_15 { pt3dadd( -33.8408, -136.397, -15.8457, 0.83 ) }
    dend_15 { pt3dadd( -34.5004, -138.486, -16.1072, 0.83 ) }
    dend_15 { pt3dadd( -36.4149, -144.334, -16.9067, 0.83 ) }
    dend_15 { pt3dadd( -37.2096, -146.66, -17.2712, 0.83 ) }
    dend_15 { pt3dadd( -38.2322, -149.342, -17.7369, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 22/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -15.8874, -78.5041, -14.3222, 0.83 ) }
    dend_14 { pt3dadd( -17.767, -79.439, -15.8272, 0.83 ) }
    dend_14 { pt3dadd( -19.2654, -80.2972, -16.8765, 0.83 ) }
    dend_14 { pt3dadd( -23.3149, -82.5071, -19.9236, 0.56 ) }
    dend_14 { pt3dadd( -24.4328, -83.0822, -20.7869, 0.56 ) }
    dend_14 { pt3dadd( -25.8149, -83.7465, -21.9056, 0.56 ) }
    dend_14 { pt3dadd( -27.8421, -84.721, -23.5465, 0.56 ) }
    dend_14 { pt3dadd( -29.9275, -85.7265, -25.4324, 0.56 ) }
    dend_14 { pt3dadd( -31.8801, -86.6968, -27.2517, 0.56 ) }
    dend_14 { pt3dadd( -34.2607, -87.79, -29.1207, 0.56 ) }
    dend_14 { pt3dadd( -35.8281, -88.4519, -30.4888, 0.83 ) }
    dend_14 { pt3dadd( -44.0423, -91.8768, -36.5131, 0.83 ) }
    dend_14 { pt3dadd( -53.4437, -93.6928, -41.4854, 0.83 ) }
    dend_14 { pt3dadd( -62.1357, -94.645, -47.8263, 0.83 ) }
    dend_14 { pt3dadd( -70.6212, -96.3592, -54.2686, 0.83 ) }
    dend_14 { pt3dadd( -78.8268, -98.142, -61.0443, 0.83 ) }
    dend_14 { pt3dadd( -87.1693, -97.7047, -67.8966, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 39/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -38.2322, -149.342, -17.7369, 0.56 ) }
    dend_17 { pt3dadd( -38.9561, -153.014, -18.4102, 0.56 ) }
    dend_17 { pt3dadd( -39.4961, -155.753, -18.9126, 0.56 ) }
    dend_17 { pt3dadd( -39.6947, -156.76, -19.0973, 0.56 ) }
    dend_17 { pt3dadd( -40.3516, -160.092, -19.7084, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 44/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -38.2322, -149.342, -17.7369, 0.56 ) }
    dend_16 { pt3dadd( -38.009, -150.338, -16.1729, 0.56 ) }
    dend_16 { pt3dadd( -37.8308, -151.369, -14.6718, 0.56 ) }
    dend_16 { pt3dadd( -37.305, -154.812, -9.84362, 0.56 ) }
    dend_16 { pt3dadd( -37.1607, -156.166, -8.06269, 0.28 ) }
    dend_16 { pt3dadd( -37.1199, -156.481, -7.64403, 0.83 ) }
    dend_16 { pt3dadd( -36.887, -158.288, -5.25084, 0.28 ) }
    dend_16 { pt3dadd( -36.8128, -158.954, -4.2818, 0.56 ) }
    dend_16 { pt3dadd( -36.7345, -160.052, -2.57807, 0.28 ) }
    dend_16 { pt3dadd( -36.7247, -160.821, -1.4825, 0.56 ) }
    dend_16 { pt3dadd( -36.7673, -162.351, 0.554422, 0.28 ) }
    dend_16 { pt3dadd( -36.7469, -162.683, 0.951471, 0.56 ) }
    dend_16 { pt3dadd( -36.5045, -164.199, 2.61555, 0.28 ) }
    dend_16 { pt3dadd( -36.0873, -165.811, 4.2489, 1.11 ) }
    dend_16 { pt3dadd( -35.8559, -166.614, 4.96928, 1.11 ) }
    dend_16 { pt3dadd( -35.2929, -168.539, 6.53979, 0.56 ) }
    dend_16 { pt3dadd( -33.9004, -173.654, 10.4107, 0.28 ) }
    dend_16 { pt3dadd( -33.5969, -174.681, 11.1574, 1.39 ) }
    dend_16 { pt3dadd( -32.8108, -177.135, 12.804, 0.28 ) }
    dend_16 { pt3dadd( -32.3255, -178.551, 13.7063, 1.11 ) }
    dend_16 { pt3dadd( -31.4447, -181.169, 15.4162, 0.28 ) }
    dend_16 { pt3dadd( -31.12, -182.2, 16.1392, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 66/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -40.3516, -160.092, -19.7084, 0.56 ) }
    dend_19 { pt3dadd( -41.6063, -163.318, -19.7734, 0.56 ) }
    dend_19 { pt3dadd( -42.5116, -165.859, -19.9138, 0.56 ) }
    dend_19 { pt3dadd( -43.4423, -168.555, -20.1064, 0.56 ) }
    dend_19 { pt3dadd( -45.0333, -173.163, -20.4358, 0.56 ) }
    dend_19 { pt3dadd( -45.5362, -174.62, -20.5399, 0.56 ) }
    dend_19 { pt3dadd( -47.0853, -179.107, -20.8606, 0.56 ) }
    dend_19 { pt3dadd( -47.5347, -180.571, -20.99, 0.56 ) }
    dend_19 { pt3dadd( -47.8641, -181.726, -21.1161, 0.56 ) }
    dend_19 { pt3dadd( -49.7597, -191.806, -20.5223, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -40.3516, -160.092, -19.7084, 0.28 ) }
    dend_18 { pt3dadd( -40.6789, -162.297, -18.2562, 0.28 ) }
    dend_18 { pt3dadd( -40.8564, -163.107, -17.6336, 0.56 ) }
    dend_18 { pt3dadd( -41.1687, -164.543, -16.5146, 0.28 ) }
    dend_18 { pt3dadd( -41.3687, -165.491, -15.7093, 0.28 ) }
    dend_18 { pt3dadd( -41.6384, -166.77, -14.6226, 0.28 ) }
    dend_18 { pt3dadd( -41.994, -168.455, -13.1906, 0.56 ) }
    dend_18 { pt3dadd( -42.5216, -170.333, -11.6449, 0.28 ) }
    dend_18 { pt3dadd( -42.8622, -171.551, -10.5884, 0.28 ) }
    dend_18 { pt3dadd( -43.1382, -172.686, -9.60865, 0.56 ) }
    dend_18 { pt3dadd( -43.1406, -180.394, -4.88468, 0.56 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_27 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_26 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_24 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_6 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_40 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_10 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_36 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_14 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_32 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_9 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_20 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_1 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_11 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_13 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_18 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 3
    dend_5 nseg = 3
    dend_27 nseg = 5
    dend_26 nseg = 5
    dend_24 nseg = 3
    dend_7 nseg = 9
    dend_6 nseg = 5
    dend_4 nseg = 3
    dend_40 nseg = 7
    dend_31 nseg = 7
    dend_30 nseg = 7
    dend_10 nseg = 5
    dend_2 nseg = 3
    dend_12 nseg = 5
    dend_39 nseg = 7
    dend_36 nseg = 3
    dend_35 nseg = 7
    dend_15 nseg = 3
    dend_14 nseg = 5
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_BTC_13a502998f_0_0


