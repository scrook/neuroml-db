// Cell: cNAC187_L1_NGCSA_eb27dd33ff_0_0
/*
{
  "id" : "cNAC187_L1_NGCSA_eb27dd33ff_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.350391, -9.41656, 0.0, 4.32533", "0.293599, -8.55234, 0.0, 7.62884", "0.236808, -7.68812, 0.0, 9.56404", "0.180016, -6.82391, 0.0, 10.7584", "0.123224, -5.95969, 0.0, 11.7217", "0.0664316, -5.09547, 0.0, 12.6849", "0.00963968, -4.23125, 0.0, 13.3199", "-0.0471523, -3.36703, 0.0, 13.7072", "-0.103944, -2.50281, 0.0, 14.0604", "-0.160736, -1.63859, 0.0, 14.2058", "-0.217528, -0.774368, 0.0, 14.2427", "-0.27432, 0.0898521, 0.0, 14.2795", "-0.331112, 0.954072, 0.0, 14.3164", "-0.387904, 1.81829, 0.0, 14.1674", "-0.444696, 2.68251, 0.0, 13.8532", "-0.501488, 3.54673, 0.0, 13.4816", "-0.55828, 4.41095, 0.0, 12.7477", "-0.615072, 5.27517, 0.0, 11.8933", "-0.671864, 6.13939, 0.0, 10.7718", "-0.728656, 7.00361, 0.0, 8.90581", "-0.785448, 7.86783, 0.0, 4.9322" ]
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-5.7257, 2.7796, 3.48, 0.88", "-6.18257, 2.62522, 3.8149, 0.88", "-7.32919, 2.44111, 4.71661, 1.25", "-7.88979, 2.46124, 5.25564, 0.81", "-8.52482, 2.57399, 5.9322, 0.95", "-9.38657, 2.8308, 6.88309, 1.47", "-10.5349, 3.30826, 8.13253, 0.51", "-11.0358, 3.60537, 8.70391, 0.88", "-12.1901, 4.44299, 10.0003, 1.1", "-12.9324, 5.03909, 10.7904, 1.1", "-14.064, 6.00437, 11.9037, 1.47", "-15.0203, 6.78801, 12.7256, 0.59", "-16.0398, 7.5834, 13.5202, 0.29", "-16.8086, 8.14236, 14.1249, 0.29", "-17.6263, 8.64694, 14.7696, 0.07", "-18.1157, 8.86311, 15.1913, 1.03", "-18.9635, 8.85368, 16.1316, 0.29", "-19.4088, 8.35345, 16.8911, 0.59", "-19.7291, 7.42065, 17.7348, 0.59", "-19.9153, 6.26409, 18.5715, 0.22", "-19.9517, 5.34408, 19.1295, 0.22", "-19.8672, 3.90573, 19.8553, 1.18", "-19.6133, 2.28814, 20.5356, 0.22", "-19.3672, 1.19977, 20.8778, 0.22", "-19.1831, 0.478068, 21.0028, 0.59", "-18.9827, -0.29101, 21.036, 0.59", "-18.8065, -1.03044, 21.0031, 0.22", "-18.6599, -2.13256, 20.827, 0.22", "-18.7615, -3.55342, 20.471, 0.59", "-18.9998, -4.84781, 20.1017, 0.22", "-19.268, -5.77086, 19.8116, 0.22", "-19.7804, -7.03475, 19.3752, 0.22", "-20.4656, -8.31624, 18.8797, 0.22", "-21.2794, -9.48411, 18.3684, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998252865138,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-0.195725, -8.8124, 10.99, 1.18", "-0.0753551, -9.39361, 11.5128, 0.51", "0.237364, -10.1583, 12.2337, 0.88", "0.650411, -10.9611, 13.1295, 0.15", "1.17824, -11.8115, 14.1888, 1.18", "1.97035, -12.87, 15.672, 0.29", "2.58002, -13.5804, 16.8364, 0.59", "3.2261, -14.0828, 17.8769, 0.59", "3.91201, -14.4036, 18.7603, 0.37", "4.2276, -14.5001, 19.0991, 0.37", "4.80933, -14.621, 19.6724, 0.37", "5.58817, -14.7864, 20.4079, 1.1", "6.59578, -14.9975, 21.3857, 0.15", "7.38772, -15.1877, 22.0579, 0.15", "7.93433, -15.3661, 22.4644, 0.15", "8.79335, -15.705, 23.0836, 0.81", "9.53498, -16.0405, 23.5401, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998252865138
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "4.22432, -1.2524, 13.6, 1.47", "5.0118, -0.175301, 13.6565, 0.29", "5.62663, 0.589518, 13.6511, 0.51", "6.21845, 1.28767, 13.6259, 0.51", "7.0575, 2.30263, 13.5652, 0.73", "7.72267, 3.11013, 13.5027, 0.73", "8.78769, 4.36944, 13.3836, 0.22", "9.44226, 5.10115, 13.2876, 0.22", "9.89692, 5.54103, 13.2115, 1.32", "10.7624, 6.30352, 13.0987, 0.22", "11.1368, 6.62813, 13.0628, 0.22", "11.9005, 7.34682, 13.0198, 0.22", "12.3639, 7.85356, 13.0181, 0.22", "12.8897, 8.52464, 13.057, 1.4", "13.9826, 9.95629, 13.1667, 0.37", "14.4589, 10.5994, 13.2334, 0.37", "14.9623, 11.3643, 13.3252, 1.4", "15.7182, 12.7505, 13.5082, 0.07", "16.1236, 13.6577, 13.6229, 0.07" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998252865138
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "4.55427, -7.97239, 2.6, 0.66", "5.56099, -7.6642, 2.27531, 0.51", "6.91498, -7.16065, 1.96014, 1.18", "8.7119, -6.35139, 1.68007, 1.4", "10.0745, -5.61679, 1.53483, 0.44", "11.4369, -4.78992, 1.46758, 0.81", "12.2264, -4.24926, 1.45919, 1.18", "13.1693, -3.41868, 1.53796, 1.18", "13.911, -2.56686, 1.71226, 0.81", "14.4736, -1.74363, 1.92233, 1.18", "15.0664, -0.703978, 2.18862, 1.62", "15.5191, 0.286134, 2.39262, 1.18", "15.8877, 1.24278, 2.54017, 0.37", "16.3777, 2.72971, 2.68434, 0.37", "16.7786, 4.0329, 2.75777, 1.03", "16.9294, 4.55951, 2.77149, 0.59", "17.2291, 5.77457, 2.76867, 0.95", "17.4663, 6.75908, 2.75866, 0.81", "17.6352, 7.43163, 2.75558, 0.95", "17.9674, 8.58875, 2.75499, 0.29", "18.2659, 9.47109, 2.80097, 0.37", "18.5422, 10.219, 2.87079, 0.37", "18.9656, 11.3489, 3.0201, 0.95", "19.3563, 12.4688, 3.22122, 1.25", "19.5958, 13.1783, 3.36475, 1.62", "20.1352, 14.7294, 3.73701, 0.29", "20.3502, 15.2986, 3.88683, 0.29", "20.6543, 16.0741, 4.09772, 0.29", "20.9705, 16.9087, 4.33603, 0.29", "21.1449, 17.407, 4.47944, 0.29", "21.4609, 18.3756, 4.78047, 1.54", "21.6581, 18.9594, 4.97133, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998252865138
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-5.73571, -6.77539, -1.72, 0.73", "-6.33243, -6.83331, -1.73183, 0.37", "-7.60015, -6.85559, -1.78265, 1.03", "-9.24366, -6.8157, -1.86281, 0.29", "-10.5594, -6.74956, -1.94821, 0.29", "-12.3099, -6.61333, -2.14084, 1.4", "-13.7055, -6.47251, -2.36918, 0.22", "-14.5212, -6.34479, -2.54345, 0.22", "-15.4902, -6.15229, -2.84204, 1.4", "-16.8066, -5.87985, -3.33116, 0.66", "-18.3479, -5.60782, -4.00252, 0.07", "-19.8281, -5.39967, -4.68986, 1.25", "-20.6287, -5.31379, -5.06998, 1.54", "-23.0453, -5.10263, -6.27367, 0.07", "-24.1239, -5.01406, -6.83747, 0.07", "-25.3872, -4.9364, -7.50584, 0.07", "-26.5684, -4.91948, -8.09155, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998252865138
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "6.69429, -2.4179, -5.43, 1.69", "6.81121, -2.39394, -5.35643, 1.69", "7.92749, -2.28507, -4.74065, 0.73", "9.19312, -2.22624, -4.07471, 0.29", "10.0542, -2.18366, -3.61657, 0.66", "11.0666, -2.10093, -3.08509, 1.25", "11.9161, -2.01226, -2.66531, 1.25", "13.886, -1.82164, -1.76833, 0.81", "14.8865, -1.74076, -1.37944, 0.44", "16.3272, -1.66191, -0.953373, 1.18", "17.4709, -1.59601, -0.72649, 0.51", "18.8221, -1.47023, -0.538498, 1.76", "20.2162, -1.28013, -0.423959, 0.29", "21.28, -1.1095, -0.412061, 0.51", "22.4014, -0.933943, -0.470474, 0.88", "23.6906, -0.771525, -0.633422, 0.29", "24.9966, -0.638786, -0.849334, 2.28", "25.9509, -0.497767, -1.03247, 2.42" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998252865138
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "4.6443, 3.2626, 7.59, 1.47", "5.71307, 3.97746, 8.40063, 1.62", "6.75437, 4.81908, 9.1786, 1.1", "7.72087, 5.79973, 9.94287, 1.62", "8.64779, 7.04556, 10.79, 0.95", "9.12302, 7.89959, 11.2977, 0.95", "9.42404, 8.54252, 11.6448, 1.18", "9.74132, 9.65724, 12.1407, 1.18", "9.90798, 10.8065, 12.5271, 0.95", "9.91844, 12.3169, 12.9169, 1.62", "9.76418, 13.4327, 13.2139, 0.51", "9.63023, 14.0431, 13.3872, 0.51", "9.47145, 14.7698, 13.6031, 1.18", "9.34933, 15.4282, 13.8187, 1.32", "9.18666, 16.3427, 14.1177, 1.1", "8.93843, 17.761, 14.5881, 1.62", "8.78325, 18.6352, 14.9085, 1.62", "8.51054, 19.8862, 15.3863, 0.73", "8.30544, 20.8614, 15.7694, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998252865138
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.92433, 7.77761, -6.72, 4.04", "2.92433, 7.77761, -6.72, 4.04", "3.05591, 9.31809, -6.84, 3.45", "3.07702, 9.56522, -6.85925, 3.45" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998252865138
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.32567, 7.0531, 5.74, 1.32", "-3.36053, 7.96292, 5.58517, 1.32", "-3.41124, 9.42969, 5.33994, 1.32", "-3.45197, 10.5886, 5.12525, 1.62", "-3.49986, 11.9511, 4.87284, 1.91", "-3.54515, 13.2398, 4.63411, 1.18", "-3.58675, 14.4234, 4.41484, 1.25", "-3.62657, 15.5761, 4.18184, 1.69", "-3.65532, 16.7734, 3.92151, 1.76" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998252865138
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.785448, 7.86783, 0.0, 0.532275", "-1.76905, 22.8355, 0.0, 0.532275", "-2.75265, 37.8033, 0.0, 0.532275" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "21.6581, 18.9594, 4.97133, 0.15", "23.3587, 18.943, 4.60648, 0.15", "24.1365, 18.9834, 4.41655, 0.15", "24.6344, 19.0383, 4.28426, 0.44", "25.0515, 19.0843, 4.17345, 0.15", "25.6662, 19.1521, 4.01012, 0.37", "26.647, 19.2603, 3.74951, 0.15", "27.557, 19.3458, 3.50552, 0.51", "28.5735, 19.5056, 3.1854, 0.51" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "21.6581, 18.9594, 4.97133, 0.81", "21.9071, 19.857, 5.51147, 0.81", "22.1204, 20.6262, 5.97436, 1.03" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-26.5684, -4.91948, -8.09155, 0.07", "-27.995, -4.31471, -8.01528, 0.07", "-28.62, -4.02262, -8.00891, 0.95", "-29.5118, -3.60587, -7.99982, 0.07", "-31.3262, -2.75794, -7.98132, 1.4", "-32.7814, -2.07785, -7.96648, 0.07", "-33.6733, -1.661, -7.95738, 0.22", "-34.5639, -1.21624, -7.95646, 0.22" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-26.5684, -4.91948, -8.09155, 0.73", "-28.0682, -5.71323, -9.46991, 0.73", "-28.6128, -5.948, -9.91426, 0.73", "-29.2118, -6.15981, -10.3511, 1.1", "-30.9293, -6.65675, -11.5923, 0.15", "-32.139, -6.95634, -12.4392, 0.51", "-33.0423, -7.16021, -13.0624, 0.15", "-34.0926, -7.3171, -13.741, 0.29", "-34.7888, -7.39886, -14.1716, 0.07", "-35.8141, -7.48507, -14.7456, 1.32", "-36.3549, -7.52758, -14.983, 1.32", "-38.089, -7.69468, -15.7049, 0.07", "-38.6736, -7.77874, -16.0034, 0.29", "-39.1959, -7.88225, -16.3064, 0.07", "-39.5913, -7.98743, -16.4762, 0.37", "-40.4581, -8.28625, -16.6588, 0.07", "-41.7118, -8.76377, -16.7106, 0.37", "-43.7286, -9.47127, -16.4175, 0.51", "-44.439, -9.73016, -16.2779, 1.18", "-48.0181, -11.0691, -15.3126, 0.07", "-49.2262, -11.5324, -14.8537, 0.22", "-50.3287, -11.9634, -14.2282, 0.88", "-51.3932, -12.4014, -13.3663, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "25.9509, -0.497767, -1.03247, 0.44", "27.8773, -0.879276, -0.736815, 0.44", "29.0022, -1.13814, -0.674023, 0.81", "29.7828, -1.32642, -0.669277, 0.81", "30.9781, -1.59864, -0.751917, 1.25", "32.1669, -1.8637, -0.877227, 0.44", "33.156, -2.0716, -1.06238, 0.66", "34.8002, -2.44587, -1.60595, 0.22", "35.82, -2.67473, -2.02174, 0.22", "37.2136, -2.94467, -2.66402, 2.2", "37.7538, -3.02512, -2.93057, 2.2", "39.8823, -3.26942, -3.96761, 0.51", "41.4013, -3.39698, -4.67829, 0.15", "42.7916, -3.47392, -5.26906, 1.76", "44.3189, -3.51731, -5.81878, 0.15", "45.0774, -3.53508, -6.01768, 0.15", "46.4076, -3.58388, -6.26249, 1.76", "48.5579, -3.71924, -6.4259, 0.07", "49.3752, -3.79542, -6.43649, 0.07", "50.868, -4.01279, -6.39764, 2.2", "52.6463, -4.4357, -6.25648, 0.07", "53.9641, -4.88655, -6.12034, 1.84", "54.7352, -5.27125, -5.99484, 0.07", "55.0671, -5.51698, -5.89289, 0.07", "55.4939, -5.89705, -5.74814, 0.95", "56.0817, -6.56048, -5.50445, 0.07", "56.5019, -7.14653, -5.27615, 0.07", "57.1557, -8.15017, -4.85209, 1.54", "57.9731, -9.41806, -4.32566, 0.07" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "25.9509, -0.497767, -1.03247, 0.22", "27.0162, -0.272635, -2.84102, 0.22", "27.706, -0.0650882, -4.05144, 0.37", "28.3971, 0.230487, -5.39863, 0.44", "28.9086, 0.480128, -6.54738, 1.18", "29.7145, 0.973265, -8.54075, 0.66", "30.0435, 1.21341, -9.40445, 0.15", "30.1326, 1.31811, -9.70731, 0.15", "30.4151, 1.70003, -10.7097, 0.15", "30.7125, 2.13341, -11.7056, 0.88", "30.9783, 2.47062, -12.4816, 1.25", "31.3773, 2.87713, -13.4864, 0.95", "31.9976, 3.39844, -14.8106, 0.59", "32.8455, 4.02777, -16.4382, 1.1", "33.2661, 4.34026, -17.1851, 2.35", "33.9142, 4.8952, -18.3557, 0.66", "34.7764, 5.77628, -20.0609, 0.29", "35.1231, 6.20686, -20.8756, 0.07", "35.5071, 6.78342, -21.9674, 0.59", "35.9928, 7.67149, -23.7417, 2.5", "36.5272, 8.85112, -26.3918, 0.07", "36.9099, 9.7936, -28.7696, 2.13", "37.2518, 10.727, -31.4021, 2.06", "37.4405, 11.3202, -33.267, 2.06", "37.5892, 11.8608, -35.2247, 1.84", "37.6765, 12.2566, -36.9497, 1.84", "37.7132, 12.5036, -38.1881, 1.84", "37.7387, 12.7153, -39.114, 1.84", "37.7694, 12.9989, -39.9591, 1.84", "37.8226, 13.4766, -41.0759, 1.03", "37.9286, 14.4671, -42.9688, 0.59", "38.0126, 15.4107, -44.4784, 0.59", "38.092, 16.5793, -46.2003, 2.64", "38.1988, 17.8028, -47.9189, 0.59", "38.2772, 18.5029, -48.8544, 0.95", "38.3722, 19.2748, -49.7738, 0.22", "38.4618, 19.9562, -50.4902, 1.32", "38.6677, 21.3531, -51.778, 0.22", "38.8421, 22.3762, -52.6036, 0.22", "38.983, 23.082, -53.0801, 0.22", "39.2706, 24.4454, -53.8627, 2.13", "39.6002, 25.8961, -54.5806, 0.07", "39.8981, 27.1739, -55.1409, 0.07", "40.1059, 28.0727, -55.4784, 0.44", "40.3804, 29.2727, -55.9109, 1.91", "40.5646, 29.9855, -56.18, 0.44", "40.6775, 30.3806, -56.3476, 0.88", "40.9647, 31.4645, -56.803, 0.07", "41.2007, 32.3803, -57.1916, 0.07", "41.2954, 32.7582, -57.354, 0.81", "41.6578, 34.0094, -57.8573, 1.98", "42.0176, 35.0344, -58.2167, 0.07", "42.3025, 35.7045, -58.4273, 0.73", "42.7644, 36.6028, -58.6596, 0.22", "43.1943, 37.3186, -58.81, 1.18", "43.9612, 38.4607, -59.0509, 0.29", "44.3972, 39.053, -59.2078, 1.03", "45.2361, 40.0922, -59.5408, 0.15", "45.6648, 40.5974, -59.7243, 1.47", "46.3036, 41.3246, -60.0279, 0.07", "46.9475, 42.0581, -60.3744, 1.62", "48.1701, 43.5104, -61.1487, 0.29", "48.6421, 44.0806, -61.4723, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "8.30544, 20.8614, 15.7694, 0.29", "9.39728, 21.5598, 16.1546, 0.29", "9.68151, 21.7761, 16.2719, 0.73", "10.1638, 22.2406, 16.5779, 0.44", "10.7221, 22.8245, 17.0919, 0.22", "11.1895, 23.305, 17.6174, 0.22", "11.6989, 23.7656, 18.2212, 0.44", "12.1669, 24.0838, 18.8224, 0.44", "12.8904, 24.2711, 19.8321, 0.44", "13.5422, 24.1087, 20.7751, 0.44", "13.84, 23.8876, 21.1915, 0.44", "14.1962, 23.5019, 21.7614, 1.03", "14.7578, 22.7744, 22.7492, 0.29", "15.1498, 22.2306, 23.3512, 0.15", "15.5321, 21.6731, 23.8616, 0.44", "15.9663, 20.9506, 24.465, 0.44", "16.6263, 19.7543, 25.5272, 0.44", "16.8612, 19.2104, 26.1197, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "8.30544, 20.8614, 15.7694, 1.1", "7.94782, 21.9578, 16.1676, 1.1", "7.52431, 23.0517, 16.6436, 0.81", "7.2259, 23.7129, 16.9365, 0.95", "6.59328, 25.0507, 17.5277, 0.66", "5.79934, 26.7367, 18.2884, 0.73", "5.2652, 27.8748, 18.7952, 0.73", "4.6906, 29.096, 19.3755, 0.73", "4.14896, 30.2559, 19.9502, 1.1", "4.05535, 30.4577, 20.0542, 1.32", "3.35036, 31.8618, 20.8005, 0.37", "2.99872, 32.4807, 21.138, 1.1", "2.37538, 33.4398, 21.6784, 0.29", "1.72715, 34.3151, 22.1887, 0.44", "1.30823, 34.8063, 22.4956, 0.22", "0.446395, 35.6615, 23.0166, 1.4", "-0.285163, 36.2818, 23.3057, 0.15", "-1.11863, 36.9627, 23.4907, 0.59", "-1.84792, 37.5067, 23.5784, 0.95", "-2.14712, 37.7333, 23.5804, 0.15", "-2.87365, 38.3483, 23.5212, 1.1", "-3.98081, 39.5248, 23.1767, 0.44", "-4.49011, 40.2001, 22.8599, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.07702, 9.56522, -6.85925, 3.45", "3.25701, 10.8042, -7.74925, 3.45" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "3.07702, 9.56522, -6.85925, 0.29", "3.13317, 9.27744, -8.21882, 0.29", "2.97741, 8.8168, -10.3414, 0.44", "2.62459, 8.38573, -12.2019, 0.66", "1.91763, 7.81501, -14.4439, 0.81", "0.944623, 7.18435, -16.4958, 0.81", "0.0645451, 6.64687, -17.9325, 0.73", "-0.66445, 6.25627, -18.7423, 0.59", "-1.6493, 5.78546, -19.4996, 0.59", "-2.79721, 5.28393, -20.1426, 0.59", "-4.47286, 4.58449, -20.8368, 0.59", "-6.04096, 3.87204, -21.3965, 0.59", "-7.27844, 3.24365, -21.8182, 0.59", "-8.73579, 2.46223, -22.2828, 0.29", "-10.0094, 1.76777, -22.6819, 0.29", "-11.3876, 1.01333, -23.1018, 1.25", "-13.0518, 0.136933, -23.5322, 0.29", "-14.0457, -0.369471, -23.7058, 0.07", "-15.4558, -1.12779, -23.8781, 3.16" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.65532, 16.7734, 3.92151, 0.37", "-3.33178, 18.6619, 4.97203, 0.37", "-3.14603, 19.7461, 5.57515, 0.95", "-2.84102, 21.5264, 6.56548, 1.76", "-2.59283, 22.975, 7.37136, 2.57" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.65532, 16.7734, 3.92151, 0.22", "-4.96878, 16.7174, 3.14329, 0.22", "-5.76161, 16.6749, 2.67126, 0.22", "-6.34465, 16.6546, 2.317, 0.95", "-6.95095, 16.6829, 1.81925, 1.32", "-8.25121, 16.7733, 0.566213, 0.07", "-8.8791, 16.8231, -0.114332, 0.07", "-9.56713, 16.8623, -0.871332, 0.73", "-10.093, 16.8765, -1.46515, 1.91", "-12.1418, 16.9541, -3.88335, 0.37", "-13.5285, 17.0378, -5.62334, 1.18", "-14.6515, 17.1496, -7.13171, 1.1", "-15.6343, 17.2372, -8.48793, 0.22", "-17.3733, 17.3241, -10.8334, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.75265, 37.8033, 0.0, 0.22", "-3.73624, 52.771, 0.0, 0.22", "-4.71984, 67.7387, 0.0, 0.22" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "22.1204, 20.6262, 5.97436, 0.15", "21.6564, 21.6232, 5.52872, 0.15", "21.2731, 22.39, 5.17226, 0.15", "20.8633, 23.2099, 4.79114, 0.15", "20.5102, 23.9161, 4.46282, 0.15", "20.0282, 24.8804, 4.01458, 0.44", "19.6367, 25.6635, 3.65051, 0.07", "19.4375, 26.1032, 3.39358, 0.44" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "22.1204, 20.6262, 5.97436, 0.15", "22.9402, 20.9782, 6.48701, 0.15", "23.672, 21.1227, 6.75946, 0.37", "24.7851, 21.1439, 6.92631, 0.22", "25.0396, 21.1259, 6.94221, 0.51", "26.1731, 20.9805, 6.94511, 0.73", "27.037, 20.8696, 6.94732, 0.07", "28.3816, 20.5952, 6.85877, 0.15", "29.8165, 20.2234, 6.66138, 0.95", "30.4317, 20.035, 6.5324, 0.07", "31.7513, 19.5843, 6.21769, 0.66" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-4.49011, 40.2001, 22.8599, 1.25", "-4.31479, 41.4707, 22.1265, 1.25", "-4.28349, 42.3969, 21.6349, 0.51", "-4.34329, 43.6069, 21.052, 0.15", "-4.463, 44.6067, 20.6019, 0.88", "-4.62298, 45.9428, 20.0004, 0.07", "-4.73737, 46.8983, 19.5703, 0.07", "-4.92331, 47.6452, 19.255, 0.44", "-5.18145, 48.3292, 19.034, 0.22", "-5.36039, 48.6642, 18.9748, 0.95" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-4.49011, 40.2001, 22.8599, 0.22", "-4.27828, 41.0245, 22.5137, 0.22", "-3.90278, 42.1074, 22.1203, 0.22", "-3.70162, 42.6073, 21.9636, 0.22", "-3.27762, 43.5609, 21.6977, 1.4", "-2.54607, 45.141, 21.2726, 0.07", "-2.07434, 46.16, 20.9984, 0.07", "-1.7433, 46.7624, 20.8474, 0.07", "-1.29871, 47.4708, 20.708, 0.07", "-0.975725, 47.9609, 20.6284, 0.73", "-0.27818, 48.9437, 20.4871, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.25701, 10.8042, -7.74925, 0.73", "4.63806, 12.2789, -6.97885, 0.73", "5.54957, 13.4021, -6.33007, 0.73", "6.22238, 14.3287, -5.69249, 1.03", "6.96384, 15.4174, -4.90481, 0.07", "7.35744, 15.9731, -4.45003, 0.73", "8.08154, 16.9162, -3.61414, 0.22", "8.88661, 17.8841, -2.57257, 1.4", "9.80113, 18.7011, -1.44871, 0.95", "10.0505, 18.8262, -1.16796, 1.32", "11.4448, 19.0118, 0.138951, 0.22", "12.0638, 18.928, 0.61175, 0.22", "13.0513, 18.5961, 1.19011, 0.59", "14.5096, 17.9227, 1.8389, 0.07", "15.9998, 17.1498, 2.28725, 0.37", "16.7761, 16.7278, 2.4546, 0.07", "17.234, 16.4698, 2.50468, 0.07", "18.0231, 16.0402, 2.55052, 0.37", "18.7243, 15.6645, 2.54076, 0.81", "19.8958, 15.0121, 2.43157, 0.07", "20.4141, 14.707, 2.3601, 0.07", "20.8241, 14.4516, 2.27826, 0.07", "21.3532, 14.1111, 2.15573, 0.44", "23.0244, 13.0001, 1.75194, 0.07", "24.0884, 12.2636, 1.49022, 0.51", "25.4383, 11.2803, 1.16537, 1.98", "26.8771, 10.208, 0.780621, 0.07", "27.3274, 9.87359, 0.645086, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "3.25701, 10.8042, -7.74925, 2.42", "3.38701, 12.0327, -8.32925, 2.42" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-15.4558, -1.12779, -23.8781, 0.37", "-15.2525, -2.91423, -23.775, 0.37", "-15.1601, -4.45797, -23.6701, 0.95", "-15.1424, -5.77117, -23.6163, 0.95", "-15.2107, -7.80484, -23.3801, 0.15", "-15.2738, -8.885, -23.2003, 0.15", "-15.3472, -9.65304, -23.0615, 0.15", "-15.5027, -10.9271, -22.7581, 0.22", "-15.7765, -12.6596, -22.2519, 1.98", "-16.2446, -14.9098, -21.5833, 0.22", "-16.4612, -15.6628, -21.3817, 0.81", "-16.8259, -16.7377, -21.0342, 0.07" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-15.4558, -1.12779, -23.8781, 0.66", "-16.1038, -1.05053, -25.353, 0.66", "-16.5519, -1.0249, -28.1002, 1.25", "-16.5612, -1.03169, -28.5625, 1.25", "-16.5291, -1.09844, -29.4989, 1.25", "-16.4689, -1.21766, -30.3162, 1.25", "-16.1845, -1.6901, -32.7149, 0.81", "-15.5171, -2.40174, -35.4679, 0.81", "-15.2104, -2.75384, -36.4875, 1.1", "-14.7802, -3.28275, -37.9655, 0.73", "-14.4883, -3.69649, -39.1151, 0.37", "-14.2534, -4.14801, -40.4243, 1.03", "-14.1408, -4.99232, -42.7617, 1.03", "-14.2823, -5.46453, -44.1183, 1.03", "-14.478, -5.80027, -45.395, 1.03", "-14.7267, -6.03654, -46.6909, 1.03", "-15.0175, -6.16516, -47.9329, 0.66", "-15.4136, -6.18116, -49.6376, 1.32", "-15.8145, -6.03491, -51.6297, 0.95", "-16.1067, -5.7616, -53.6693, 0.95", "-16.2329, -5.51988, -55.0235, 0.66", "-16.3064, -5.1167, -56.8634, 1.84", "-16.2912, -4.03515, -61.1309, 1.4", "-16.2342, -3.6072, -62.6526, 1.76", "-15.9856, -2.55592, -66.3839, 0.88", "-15.8543, -2.09538, -68.0072, 0.88", "-15.6835, -1.64363, -69.6433, 1.18", "-15.5916, -1.47034, -70.4419, 1.18", "-15.5074, -1.39041, -71.3542, 1.18", "-15.4979, -1.42845, -72.0374, 1.18", "-15.7029, -1.67214, -73.8353, 1.18", "-16.093, -1.94268, -75.5939, 1.18", "-16.7885, -2.23836, -77.8684, 1.18", "-17.6772, -2.43967, -80.1629, 1.18", "-18.6, -2.52891, -82.147, 1.84", "-20.15, -2.55658, -85.0253, 0.22", "-20.7299, -2.51907, -85.8895, 0.22", "-21.7451, -2.2918, -87.0921, 1.54", "-22.9797, -1.78054, -88.2835, 1.03", "-24.0987, -1.09822, -89.291, 0.37", "-24.6078, -0.677209, -89.8504, 1.4", "-25.2758, 0.0797785, -90.9279, 0.29", "-25.7047, 0.754176, -92.0782, 1.25", "-26.1001, 1.69483, -93.9974, 0.37", "-26.215, 2.41491, -95.8085, 0.66", "-26.1524, 3.30228, -98.7932, 1.4", "-26.0106, 3.77854, -101.131, 1.4", "-25.8107, 4.14297, -103.4, 1.4", "-25.5851, 4.38204, -105.449, 1.69", "-25.2301, 4.57302, -108.235, 1.69", "-24.8058, 4.67643, -111.279, 1.32", "-24.5209, 4.68613, -113.304, 1.18" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-2.59283, 22.975, 7.37136, 0.66", "-3.61063, 24.4847, 7.54904, 0.66", "-3.95532, 24.8928, 7.60075, 0.66", "-4.60913, 25.5434, 7.63188, 0.66", "-5.18288, 26.0692, 7.63116, 0.66", "-5.9567, 26.6698, 7.60817, 0.66", "-6.55614, 27.0967, 7.62274, 0.22", "-7.63625, 27.7384, 7.74319, 0.95", "-8.62267, 28.282, 7.90521, 0.95", "-9.15823, 28.5869, 8.03871, 1.1", "-10.8554, 29.6026, 8.6447, 0.51", "-11.8966, 30.2291, 9.14766, 0.37", "-13.0997, 30.9534, 9.84277, 1.4", "-13.9082, 31.4206, 10.4208, 1.69", "-15.6542, 32.3338, 11.9977, 0.15", "-16.5442, 32.7526, 12.9953, 0.22", "-17.3407, 33.1064, 14.1139, 0.59", "-17.7194, 33.2687, 14.6799, 1.18", "-18.5652, 33.6429, 15.9542, 0.44", "-19.6343, 34.1498, 17.5416, 0.88", "-20.7181, 34.7603, 19.0253, 1.18", "-21.5046, 35.3898, 19.953, 1.69", "-22.2103, 36.2237, 20.5906, 1.84", "-23.253, 37.6721, 21.3546, 0.44", "-23.93, 38.7613, 21.6008, 0.95", "-24.4629, 39.7141, 21.5608, 0.37", "-24.8077, 40.3851, 21.4023, 0.37", "-25.4143, 41.6753, 20.9523, 1.03" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-2.59283, 22.975, 7.37136, 1.32", "-2.56079, 24.0498, 5.98987, 1.32", "-2.59272, 25.1665, 4.74341, 1.1", "-2.60031, 25.5908, 4.30211, 1.1", "-2.53742, 26.5997, 3.26932, 0.37", "-2.44227, 27.245, 2.62536, 0.37", "-2.27735, 27.9465, 1.93357, 1.03", "-2.14161, 28.4664, 1.48817, 1.03", "-1.85931, 29.2932, 0.831458, 0.59", "-1.50263, 30.1532, 0.168732, 0.66", "-1.18292, 30.8387, -0.366893, 0.66", "-0.694945, 31.8096, -1.19684, 0.44", "-0.324369, 32.5257, -1.85808, 1.03", "-0.0223138, 33.2033, -2.52417, 1.76", "0.343529, 34.237, -3.57321, 0.88", "0.71805, 35.4792, -4.86522, 0.51", "1.00812, 36.5149, -5.96535, 0.51", "1.32977, 37.7474, -7.2741, 2.06", "1.62774, 39.0519, -8.62583, 0.73", "1.84705, 40.2004, -9.81011, 0.88", "1.98852, 41.0776, -10.712, 1.1", "2.04501, 41.7567, -11.405, 0.37", "2.039, 42.1315, -11.7885, 0.37", "1.98043, 42.9795, -12.6349, 1.03", "1.86346, 44.3431, -13.9639, 0.59", "1.72692, 45.3201, -14.8733, 1.62", "1.47794, 46.5471, -15.95, 1.69", "1.10012, 48.1141, -17.2357, 0.37", "0.90227, 48.8794, -17.8013, 0.88", "0.760915, 49.4276, -18.1807, 0.07", "0.470482, 50.416, -18.6828, 0.51", "0.269029, 51.0545, -18.8996, 0.51", "0.0629955, 51.7802, -19.0125, 0.51", "-0.231044, 52.6719, -19.0212, 1.03" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-17.3733, 17.3241, -10.8334, 0.37", "-18.1227, 16.4745, -11.6973, 0.37", "-18.7893, 15.7187, -12.466, 0.37", "-19.4692, 14.9478, -13.2498, 0.07", "-20.2649, 14.0458, -14.1672, 0.88", "-21.1822, 13.0057, -15.2248, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-17.3733, 17.3241, -10.8334, 0.66", "-17.4847, 18.0016, -13.5174, 0.66", "-17.5236, 18.1607, -14.0268, 0.66", "-17.7328, 18.6056, -15.2992, 0.88", "-18.1339, 19.3559, -17.1861, 0.88", "-18.7489, 20.6286, -20.4473, 0.88", "-18.9215, 21.0022, -21.4823, 0.88", "-19.17, 21.4045, -22.7072, 1.47", "-19.7078, 22.0224, -25.0898, 0.59", "-19.8717, 22.1568, -25.8893, 1.18", "-20.1547, 22.3113, -28.7382, 0.81", "-20.0834, 22.2644, -30.1093, 0.81", "-19.8964, 22.1701, -31.5077, 0.51", "-19.5777, 22.0332, -33.283, 0.51", "-19.0282, 21.8879, -35.749, 0.51", "-18.4373, 21.7316, -38.3313, 0.51", "-17.5496, 21.6133, -42.082, 0.51", "-17.2216, 21.6185, -43.2958, 0.51", "-16.8858, 21.6641, -44.3728, 0.51", "-16.6331, 21.738, -45.1575, 0.51" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "3.38701, 12.0327, -8.32925, 0.51", "2.44783, 13.4192, -8.34841, 0.51", "1.84486, 14.059, -8.39877, 0.51", "1.22129, 14.5144, -8.45434, 0.51", "0.4542, 14.9764, -8.51768, 0.51", "-0.507768, 15.4664, -8.58915, 0.22", "-1.17508, 15.7817, -8.64841, 0.59", "-2.68563, 16.39, -8.82941, 1.62", "-4.39691, 17.0176, -9.06453, 0.22", "-5.51729, 17.4258, -9.24286, 0.95", "-6.60258, 17.8417, -9.42854, 1.1", "-7.77941, 18.3324, -9.64392, 0.59", "-9.0038, 18.896, -9.90151, 1.76", "-9.43103, 19.1074, -10.0064, 1.76", "-10.7335, 19.7777, -10.3807, 0.07", "-11.5537, 20.1988, -10.6507, 0.59", "-12.3379, 20.6268, -10.9261, 0.37", "-13.1194, 21.0803, -11.2473, 1.03", "-14.0356, 21.6797, -11.7486, 0.59", "-14.3618, 21.9412, -11.9576, 0.59", "-14.9181, 22.4681, -12.3445, 0.22", "-15.536, 23.1464, -12.8162, 0.22", "-16.3933, 24.2296, -13.5527, 2.2", "-17.0871, 25.2002, -14.2218, 2.2", "-17.9482, 26.4942, -15.0897, 0.15", "-18.3601, 27.1154, -15.5006, 0.15", "-18.717, 27.6701, -15.8313, 0.66", "-19.7063, 29.1776, -16.6467, 0.07", "-20.2817, 29.9774, -17.0228, 0.95", "-20.8521, 30.694, -17.3486, 0.07", "-21.998, 31.9587, -17.9385, 0.44", "-23.3283, 33.2142, -18.4912, 0.15", "-24.1781, 33.9035, -18.759, 1.32", "-25.909, 35.1278, -19.1455, 0.07", "-26.813, 35.7301, -19.3054, 0.07", "-28.0001, 36.4883, -19.48, 0.07", "-29.4078, 37.3631, -19.6489, 1.1", "-30.0835, 37.787, -19.7367, 0.07", "-30.7427, 38.262, -19.8137, 0.73", "-31.8729, 39.2932, -19.9086, 0.15", "-32.4003, 39.8797, -19.942, 0.15", "-32.8712, 40.4986, -19.9927, 0.15", "-33.4079, 41.2709, -20.0922, 1.84", "-33.8068, 41.8509, -20.1732, 1.84", "-34.6649, 43.0495, -20.359, 0.07", "-35.194, 43.745, -20.4818, 0.95", "-35.9366, 44.7215, -20.6647, 0.07", "-36.527, 45.5358, -20.827, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "3.38701, 12.0327, -8.32925, 1.25", "3.62364, 12.4728, -9.85859, 1.25", "3.77967, 13.0468, -12.1895, 2.06", "3.83117, 13.3672, -13.694, 1.76", "3.83121, 13.7122, -15.8164, 1.76", "3.83124, 13.9421, -17.2305, 1.76", "3.83127, 14.1798, -18.6929, 1.76", "3.72804, 14.3232, -19.9795, 1.76", "3.64763, 14.34, -20.3971, 1.76", "2.99897, 14.3954, -22.7169, 1.76" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-25.4143, 41.6753, 20.9523, 0.37", "-25.525, 42.9858, 21.2477, 0.37", "-25.6307, 44.0508, 21.4667, 0.66", "-25.7559, 44.9297, 21.6339, 0.29", "-25.9109, 45.7508, 21.778, 0.66", "-26.0767, 46.4097, 21.9014, 0.66", "-26.2284, 47.0125, 22.0143, 0.66", "-26.4327, 47.5958, 22.1332, 0.07", "-26.6603, 48.1449, 22.2376, 0.07", "-26.8895, 48.6367, 22.2901, 0.07", "-27.2462, 49.2631, 22.3415, 1.03" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-25.4143, 41.6753, 20.9523, 0.51", "-25.4871, 42.3513, 21.3132, 0.51", "-25.6307, 43.5755, 21.9227, 0.44", "-25.7259, 44.4977, 22.3385, 0.29", "-25.8001, 45.3335, 22.73, 0.29", "-25.8776, 46.0308, 23.0712, 0.29", "-25.9953, 46.8527, 23.4772, 0.29", "-26.1218, 47.5431, 23.8178, 0.29", "-26.3868, 48.6506, 24.3138, 0.29", "-26.6892, 49.7011, 24.8121, 0.29", "-26.9178, 50.4593, 25.2051, 0.29", "-27.1609, 51.339, 25.7085, 0.29", "-27.3668, 52.3315, 26.3378, 0.29", "-27.4546, 53.2555, 26.9837, 0.29", "-27.4154, 53.7364, 27.3746, 0.29", "-27.2873, 54.211, 27.7728, 0.29", "-26.9514, 54.9809, 28.4632, 0.29", "-26.5922, 55.5664, 29.043, 0.29", "-26.0673, 56.2608, 29.7768, 0.29", "-25.7333, 56.6617, 30.2552, 0.44", "-25.4898, 56.965, 30.6031, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-0.231044, 52.6719, -19.0212, 0.15", "-1.48773, 53.0309, -19.9019, 0.15", "-2.35951, 53.2371, -20.5359, 0.15", "-2.99619, 53.4116, -21.0027, 0.22", "-3.69465, 53.6308, -21.523, 0.88", "-4.76543, 54.0161, -22.3059, 0.07", "-6.23028, 54.5775, -23.3505, 1.25", "-7.97262, 55.2488, -24.5396, 0.07", "-8.87789, 55.5933, -25.1149, 0.66", "-9.31929, 55.756, -25.3711, 0.59", "-10.107, 56.0343, -25.7979, 0.07", "-10.4236, 56.1356, -25.9645, 0.07", "-11.3992, 56.4099, -26.4204, 0.07", "-12.6622, 56.6922, -26.9454, 2.13", "-13.8852, 56.8669, -27.4475, 0.07", "-15.0055, 56.9671, -27.9121, 2.06", "-16.8871, 57.0395, -28.7464, 0.07" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.231044, 52.6719, -19.0212, 0.44", "0.784246, 53.2704, -18.5466, 0.44", "1.3241, 53.6533, -18.361, 1.03", "1.65327, 53.9448, -18.2683, 1.03", "2.27875, 54.6679, -18.215, 0.07", "2.66026, 55.2527, -18.2547, 0.73", "3.12574, 56.1846, -18.4619, 0.22", "3.33779, 56.874, -18.7387, 0.22", "3.50243, 57.5101, -19.062, 1.03", "3.86578, 58.7744, -19.9151, 0.07", "4.0289, 59.2262, -20.2849, 0.51", "4.40525, 59.972, -20.9664, 0.07", "4.63284, 60.2949, -21.2902, 0.07", "5.37247, 61.059, -22.0542, 0.88", "6.34793, 61.8642, -22.9024, 0.44", "6.90766, 62.23, -23.2836, 0.81", "7.68624, 62.6608, -23.7619, 0.29", "7.95634, 62.7884, -23.9004, 0.29", "8.58237, 63.0504, -24.1979, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "2.99897, 14.3954, -22.7169, 1.1", "3.7804, 14.706, -22.2292, 1.1", "4.36474, 14.8379, -21.8832, 1.1", "4.99564, 14.9729, -21.5368, 1.1", "6.03913, 15.2313, -21.0282, 1.1", "7.48114, 15.6705, -20.3838, 1.32", "9.13493, 16.2443, -19.7411, 1.32", "10.748, 16.9811, -19.2411, 1.03", "11.3253, 17.2648, -19.0582, 1.03", "12.3298, 17.773, -18.7397, 1.03", "13.5421, 18.3779, -18.3771, 1.03", "14.5437, 18.8477, -18.2407, 1.03", "15.8873, 19.6397, -18.2923, 2.2" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "2.99897, 14.3954, -22.7169, 0.95", "2.27022, 14.2124, -23.7113, 0.95", "1.68662, 14.0144, -24.4882, 1.18", "0.267788, 13.6026, -26.241, 0.73", "-0.412473, 13.5284, -26.9925, 0.73", "-1.1791, 13.5848, -27.7701, 0.73", "-1.70628, 13.6919, -28.2602, 0.73", "-1.99343, 13.7845, -28.4772, 1.03", "-2.80578, 14.0889, -28.9603, 0.29", "-4.28047, 14.7234, -29.6822, 0.15", "-5.22467, 15.2007, -30.17, 0.15", "-6.44646, 15.9147, -30.8474, 1.76", "-7.43307, 16.4658, -31.4106, 2.13", "-8.23783, 16.8501, -31.9424, 2.13", "-9.38338, 17.3153, -32.8489, 0.81", "-10.2777, 17.6522, -33.6312, 0.44", "-11.069, 18.0226, -34.3586, 0.81", "-12.0619, 18.6912, -35.412, 0.88", "-13.1282, 19.7041, -36.7919, 0.44", "-13.8181, 20.5403, -37.7857, 0.44", "-14.2493, 21.1507, -38.3953, 1.98", "-14.8137, 22.1173, -39.2708, 2.35", "-15.4026, 23.6434, -40.5579, 0.29", "-15.6438, 24.6935, -41.4134, 0.29", "-15.7822, 25.6027, -42.1553, 1.84", "-15.902, 26.4696, -42.9514, 1.84", "-16.1396, 27.8247, -44.4368, 0.15", "-16.4397, 29.0718, -46.0629, 1.84", "-16.8609, 30.4881, -48.0892, 0.73", "-17.1718, 31.4757, -49.5675, 2.42", "-17.6345, 32.9475, -51.8972, 0.95", "-18.0828, 34.226, -54.0635, 0.59", "-18.5769, 35.2333, -55.8829, 1.25", "-18.9254, 35.7313, -56.8526, 2.72" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-27.2462, 49.2631, 22.3415, 0.29", "-27.3306, 49.9066, 23.0004, 0.29", "-27.2692, 50.7825, 23.966, 0.59", "-27.2238, 51.0747, 24.303, 0.22", "-27.1113, 51.6107, 24.9244, 0.44", "-26.9431, 52.4229, 25.8132, 0.59", "-26.7228, 53.6268, 27.003, 0.22", "-26.5034, 54.6552, 27.931, 0.22", "-26.3468, 55.2682, 28.4822, 0.22", "-26.1892, 55.8743, 29.0262, 0.37", "-26.0145, 56.5354, 29.5811, 0.37", "-25.7994, 57.4906, 30.2007, 0.07", "-25.7596, 58.0941, 30.454, 0.37" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-27.2462, 49.2631, 22.3415, 0.22", "-27.9634, 48.7175, 22.9957, 0.22", "-28.7469, 48.0599, 23.5253, 0.22", "-29.7644, 47.2332, 23.9853, 1.1", "-30.8356, 46.4158, 24.3136, 1.47", "-32.0984, 45.5665, 24.553, 0.22", "-33.2938, 44.8665, 24.7014, 0.22", "-33.9812, 44.5337, 24.6852, 0.22", "-35.1129, 44.1732, 24.5201, 0.88", "-36.1085, 44.0263, 24.2922, 0.15", "-37.3102, 44.1236, 23.9936, 0.07", "-38.0671, 44.3217, 23.834, 0.07", "-38.5186, 44.5114, 23.7566, 1.03", "-40.0338, 45.3654, 23.5101, 0.07", "-40.4088, 45.6508, 23.457, 0.07", "-41.0571, 46.296, 23.3629, 1.47" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "15.8873, 19.6397, -18.2923, 0.22", "16.9619, 20.0144, -17.1738, 0.22", "18.0971, 20.5204, -16.0395, 0.22", "19.3131, 21.1835, -14.8249, 1.76", "20.844, 22.1523, -13.2497, 0.37", "21.2624, 22.4378, -12.804, 0.37", "21.9622, 22.9318, -12.0275, 0.73", "22.6564, 23.4565, -11.1972, 0.29", "23.1547, 23.8418, -10.654, 0.29", "23.7313, 24.2738, -10.1089, 0.29", "24.2708, 24.6091, -9.68238, 0.29", "24.8301, 24.8863, -9.24418, 0.29", "25.3461, 25.0927, -8.86013, 1.03", "26.0592, 25.3571, -8.35234, 1.54", "27.0864, 25.7704, -7.60272, 0.07", "27.9119, 26.1787, -7.01842, 0.07", "28.9112, 26.7654, -6.31015, 2.28", "29.3931, 27.081, -5.97552, 2.28", "30.8113, 28.0834, -4.94396, 0.29", "32.3597, 29.2626, -3.79714, 2.13", "33.3846, 30.0722, -3.0381, 0.07", "33.5856, 30.2401, -2.90188, 0.07", "34.3233, 30.891, -2.41731, 0.44", "35.0549, 31.5643, -1.95149, 0.07", "35.5166, 32.0149, -1.69824, 0.07", "36.7083, 33.1738, -1.10089, 2.35", "37.6823, 34.0695, -0.568027, 0.07", "38.2226, 34.5678, -0.308629, 0.07", "38.4774, 34.8119, -0.201317, 0.07", "39.4284, 35.7256, 0.157257, 2.35", "40.9152, 37.0952, 0.679772, 0.37", "41.9826, 38.0098, 0.987159, 0.73", "43.24, 38.9688, 1.32762, 1.76", "43.7969, 39.3766, 1.45437, 2.72" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "15.8873, 19.6397, -18.2923, 0.37", "14.9922, 19.4791, -19.2153, 0.37", "14.1097, 19.2579, -20.2555, 0.37", "13.474, 19.0837, -21.0544, 1.62", "12.669, 18.8917, -22.0118, 1.62", "11.1041, 18.5206, -23.9547, 0.15", "9.51138, 18.1482, -25.9114, 1.69", "8.12095, 17.7769, -27.667, 1.91", "6.80807, 17.3775, -29.454, 0.29", "5.9613, 17.0767, -30.8553, 1.84", "4.79298, 16.5732, -33.1591, 2.06", "4.24734, 16.3048, -34.448, 0.15", "3.43964, 15.9042, -36.5231, 0.15", "2.24801, 15.3835, -39.6593, 1.18", "1.00675, 14.9063, -43.1393, 0.88", "0.62225, 14.7827, -44.2852, 1.1", "-0.0285912, 14.711, -46.145, 1.1", "-0.757823, 14.8504, -48.2367, 1.4", "-1.27244, 15.2372, -49.4197, 0.22", "-1.55916, 15.665, -49.8573, 0.59", "-1.71578, 15.9811, -50.0062, 1.1", "-2.14111, 17.2587, -50.401, 0.15", "-2.43462, 18.5833, -50.6842, 2.13", "-2.6632, 20.3413, -51.0588, 0.07", "-2.74182, 21.1557, -51.2752, 0.07", "-2.83294, 22.3059, -51.6125, 1.54", "-2.97354, 24.3108, -52.2268, 0.07", "-3.0989, 25.6343, -52.6962, 1.54", "-3.27071, 27.1108, -53.2483, 0.59", "-3.38931, 27.9172, -53.5895, 1.76", "-3.55786, 28.7964, -54.039, 0.95", "-3.76352, 29.6293, -54.5852, 1.69", "-4.27375, 31.3661, -56.0012, 0.07", "-4.47063, 32.0234, -56.6106, 0.88", "-4.75997, 32.9561, -57.5615, 0.07", "-5.17756, 34.2679, -59.0043, 1.32", "-5.78674, 36.0128, -61.1112, 0.29", "-6.18248, 37.0449, -62.4733, 0.29", "-6.2207, 37.1751, -62.6513, 0.29", "-6.29425, 37.524, -63.1951, 0.44", "-6.32307, 37.8185, -63.6674, 0.44", "-6.29868, 38.2451, -64.3689, 0.44", "-6.07664, 39.2502, -66.2515, 1.98", "-5.76996, 40.0079, -68.255, 0.07", "-5.20794, 40.758, -71.6074, 0.22", "-5.02516, 40.8832, -72.6542, 1.4", "-4.75051, 40.9432, -74.16, 1.4", "-4.42314, 40.8225, -75.9913, 1.54", "-4.02255, 40.2538, -78.8887, 0.51", "-3.90739, 39.4354, -81.4489, 0.29", "-3.94364, 38.9964, -82.4574, 0.29", "-3.99134, 38.7907, -82.8619, 0.29", "-4.38546, 37.7906, -84.5667, 2.06", "-5.12545, 36.4886, -86.4975, 2.28", "-6.29064, 34.8866, -88.3819, 0.44", "-7.01182, 34.0169, -89.1183, 0.95", "-7.49358, 33.4677, -89.4447, 0.22", "-8.3029, 32.6073, -89.7805, 0.88", "-9.21192, 31.6833, -89.9841, 0.07", "-10.4595, 30.4176, -90.1061, 2.06", "-11.884, 29.0131, -90.1613, 0.07", "-13.1601, 27.794, -90.2326, 0.15", "-14.3523, 26.7213, -90.3641, 1.84", "-15.7522, 25.5448, -90.5917, 0.07", "-16.1821, 25.2221, -90.6953, 0.44", "-16.8533, 24.7995, -90.9063, 0.07", "-17.4438, 24.4686, -91.2244, 1.25", "-18.6412, 23.8527, -91.9429, 0.07", "-19.4539, 23.4545, -92.4722, 1.25", "-20.9804, 22.7317, -93.4903, 0.07", "-21.7437, 22.3497, -94.0462, 1.54", "-24.5265, 20.8041, -96.2927, 0.07" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-18.9254, 35.7313, -56.8526, 0.29", "-19.1485, 37.1224, -58.5335, 0.29", "-19.194, 37.3723, -58.888, 0.66", "-19.3367, 37.9383, -59.9207, 0.95", "-19.5933, 38.6275, -61.2409, 0.07", "-19.9963, 39.3731, -62.7355, 2.2", "-21.1699, 41.0337, -66.3331, 0.51", "-21.8087, 41.6793, -67.9606, 0.95", "-23.0888, 42.7407, -70.9938, 0.07", "-23.7956, 43.1965, -72.5287, 1.54", "-24.7198, 43.6216, -74.2943, 0.07", "-25.6679, 43.9004, -75.8483, 1.54", "-26.2719, 43.9905, -76.6257, 0.15", "-27.283, 44.0503, -77.7161, 0.44", "-28.1056, 44.0478, -78.4753, 0.44", "-28.8538, 43.9927, -79.1641, 1.25", "-29.2585, 43.9518, -79.4888, 1.25", "-30.558, 43.8077, -80.3764, 0.22", "-31.5414, 43.6833, -80.973, 1.62", "-33.2516, 43.4953, -82.0284, 0.07", "-34.6245, 43.4103, -83.0222, 0.07", "-35.5478, 43.3781, -83.7619, 1.69", "-37.2041, 43.3144, -85.1355, 0.29", "-37.7899, 43.2848, -85.6213, 0.66", "-40.2516, 43.0902, -87.7171, 1.91", "-42.758, 42.7653, -89.8138, 0.07", "-43.2089, 42.6753, -90.1852, 0.44", "-44.1639, 42.4171, -90.9501, 0.07", "-45.0807, 42.1052, -91.616, 0.59", "-45.8944, 41.7674, -92.2814, 0.07", "-46.7915, 41.3233, -93.0014, 1.98", "-48.0339, 40.6598, -94.0426, 0.07", "-48.4816, 40.4228, -94.4181, 1.18", "-49.8647, 39.6803, -95.5821, 0.15", "-52.8288, 37.9993, -98.0377, 0.07", "-53.712, 37.4555, -98.7189, 0.07", "-55.06, 36.6022, -99.7894, 1.98", "-56.4011, 35.7328, -100.808, 0.07", "-56.9841, 35.317, -101.218, 0.73", "-57.5538, 34.8263, -101.458, 0.22", "-58.4127, 34.0035, -101.343, 1.1" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-18.9254, 35.7313, -56.8526, 0.15", "-19.9763, 36.4229, -57.5781, 0.15", "-20.5781, 37.0196, -58.0776, 0.15", "-20.8164, 37.301, -58.2771, 0.07", "-21.0247, 37.5545, -58.4627, 0.73", "-21.7193, 38.3229, -59.0098, 0.07", "-22.321, 38.8981, -59.4853, 1.76", "-22.964, 39.5793, -60.0469, 0.15", "-23.3828, 40.0244, -60.4073, 0.51", "-24.273, 40.9203, -61.1707, 0.07", "-25.1066, 41.6854, -61.8515, 1.1", "-26.4262, 42.7135, -62.7864, 0.15" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "43.7969, 39.3766, 1.45437, 0.59", "45.6877, 40.9606, 4.88977, 0.59", "46.3889, 41.6712, 6.21275, 0.59", "46.8042, 42.1306, 6.97659, 0.59", "47.3903, 42.779, 8.05444, 2.2", "48.0346, 43.4918, 9.23928, 1.03", "48.6492, 44.1717, 10.3696, 0.66", "48.7907, 44.4279, 10.6166, 0.66", "48.9953, 44.9175, 10.9923, 0.66" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "43.7969, 39.3766, 1.45437, 0.66", "45.3902, 39.7406, 1.12075, 0.66", "46.0621, 39.8825, 0.997294, 0.95", "46.8474, 40.0485, 0.852998, 1.03", "47.9885, 40.2896, 0.643328, 1.69", "49.9226, 40.6983, 0.287939, 0.07", "50.74, 40.8711, 0.137746, 0.07", "51.6625, 41.0231, -0.147454, 1.1" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_47", "dend_46", "dend_41", "dend_38", "dend_35", "dend_30", "dend_13", "dend_0", "dend_45", "dend_42", "dend_40", "dend_39", "dend_37", "dend_36", "dend_34", "dend_31", "dend_17", "dend_14", "dend_4", "dend_1", "dend_44", "dend_43", "dend_33", "dend_32", "dend_29", "dend_18", "dend_16", "dend_15", "dend_8", "dend_5", "dend_3", "dend_2", "dend_28", "dend_19", "dend_10", "dend_9", "dend_7", "dend_6", "dend_23", "dend_20", "dend_12", "dend_11", "dend_25", "dend_24", "dend_22", "dend_21", "dend_27", "dend_26" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_48", "dend_47", "dend_46", "dend_41", "dend_38", "dend_35", "dend_30", "dend_13", "dend_0", "dend_45", "dend_42", "dend_40", "dend_39", "dend_37", "dend_36", "dend_34", "dend_31", "dend_17", "dend_14", "dend_4", "dend_1", "dend_44", "dend_43", "dend_33", "dend_32", "dend_29", "dend_18", "dend_16", "dend_15", "dend_8", "dend_5", "dend_3", "dend_2", "dend_28", "dend_19", "dend_10", "dend_9", "dend_7", "dend_6", "dend_23", "dend_20", "dend_12", "dend_11", "dend_25", "dend_24", "dend_22", "dend_21", "dend_27", "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_NGCSA_eb27dd33ff_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_17
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_28, id: dend_28, parent: dend_18
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_47, dend_46, dend_41, dend_38, dend_35, dend_30, dend_13, dend_0, dend_45, dend_42, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_17, dend_14, dend_4, dend_1, dend_44, dend_43, dend_33, dend_32, dend_29, dend_18, dend_16, dend_15, dend_8, dend_5, dend_3, dend_2, dend_28, dend_19, dend_10, dend_9, dend_7, dend_6, dend_23, dend_20, dend_12, dend_11, dend_25, dend_24, dend_22, dend_21, dend_27, dend_26]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_47, dend_46, dend_41, dend_38, dend_35, dend_30, dend_13, dend_0, dend_45, dend_42, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_17, dend_14, dend_4, dend_1, dend_44, dend_43, dend_33, dend_32, dend_29, dend_18, dend_16, dend_15, dend_8, dend_5, dend_3, dend_2, dend_28, dend_19, dend_10, dend_9, dend_7, dend_6, dend_23, dend_20, dend_12, dend_11, dend_25, dend_24, dend_22, dend_21, dend_27, dend_26]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_51
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_48(0), soma_0(0.4999998252865138)
    connect dend_47(0), soma_0(0.4999998252865138)
    connect dend_46(0), soma_0(0.4999998252865138)
    connect dend_41(0), soma_0(0.4999998252865138)
    connect dend_38(0), soma_0(0.4999998252865138)
    connect dend_35(0), soma_0(0.4999998252865138)
    connect dend_30(0), soma_0(0.4999998252865138)
    connect dend_13(0), soma_0(0.4999998252865138)
    connect dend_0(0), soma_0(0.4999998252865138)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_28(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.350391, -9.41656, 0.0, 4.32533 ) }
    soma_0 { pt3dadd( 0.293599, -8.55234, 0.0, 7.62884 ) }
    soma_0 { pt3dadd( 0.236808, -7.68812, 0.0, 9.56404 ) }
    soma_0 { pt3dadd( 0.180016, -6.82391, 0.0, 10.7584 ) }
    soma_0 { pt3dadd( 0.123224, -5.95969, 0.0, 11.7217 ) }
    soma_0 { pt3dadd( 0.0664316, -5.09547, 0.0, 12.6849 ) }
    soma_0 { pt3dadd( 0.00963968, -4.23125, 0.0, 13.3199 ) }
    soma_0 { pt3dadd( -0.0471523, -3.36703, 0.0, 13.7072 ) }
    soma_0 { pt3dadd( -0.103944, -2.50281, 0.0, 14.0604 ) }
    soma_0 { pt3dadd( -0.160736, -1.63859, 0.0, 14.2058 ) }
    soma_0 { pt3dadd( -0.217528, -0.774368, 0.0, 14.2427 ) }
    soma_0 { pt3dadd( -0.27432, 0.0898521, 0.0, 14.2795 ) }
    soma_0 { pt3dadd( -0.331112, 0.954072, 0.0, 14.3164 ) }
    soma_0 { pt3dadd( -0.387904, 1.81829, 0.0, 14.1674 ) }
    soma_0 { pt3dadd( -0.444696, 2.68251, 0.0, 13.8532 ) }
    soma_0 { pt3dadd( -0.501488, 3.54673, 0.0, 13.4816 ) }
    soma_0 { pt3dadd( -0.55828, 4.41095, 0.0, 12.7477 ) }
    soma_0 { pt3dadd( -0.615072, 5.27517, 0.0, 11.8933 ) }
    soma_0 { pt3dadd( -0.671864, 6.13939, 0.0, 10.7718 ) }
    soma_0 { pt3dadd( -0.728656, 7.00361, 0.0, 8.90581 ) }
    soma_0 { pt3dadd( -0.785448, 7.86783, 0.0, 4.9322 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 21/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -5.7257, 2.7796, 3.48, 0.88 ) }
    dend_48 { pt3dadd( -6.18257, 2.62522, 3.8149, 0.88 ) }
    dend_48 { pt3dadd( -7.32919, 2.44111, 4.71661, 1.25 ) }
    dend_48 { pt3dadd( -7.88979, 2.46124, 5.25564, 0.81 ) }
    dend_48 { pt3dadd( -8.52482, 2.57399, 5.9322, 0.95 ) }
    dend_48 { pt3dadd( -9.38657, 2.8308, 6.88309, 1.47 ) }
    dend_48 { pt3dadd( -10.5349, 3.30826, 8.13253, 0.51 ) }
    dend_48 { pt3dadd( -11.0358, 3.60537, 8.70391, 0.88 ) }
    dend_48 { pt3dadd( -12.1901, 4.44299, 10.0003, 1.1 ) }
    dend_48 { pt3dadd( -12.9324, 5.03909, 10.7904, 1.1 ) }
    dend_48 { pt3dadd( -14.064, 6.00437, 11.9037, 1.47 ) }
    dend_48 { pt3dadd( -15.0203, 6.78801, 12.7256, 0.59 ) }
    dend_48 { pt3dadd( -16.0398, 7.5834, 13.5202, 0.29 ) }
    dend_48 { pt3dadd( -16.8086, 8.14236, 14.1249, 0.29 ) }
    dend_48 { pt3dadd( -17.6263, 8.64694, 14.7696, 0.07 ) }
    dend_48 { pt3dadd( -18.1157, 8.86311, 15.1913, 1.03 ) }
    dend_48 { pt3dadd( -18.9635, 8.85368, 16.1316, 0.29 ) }
    dend_48 { pt3dadd( -19.4088, 8.35345, 16.8911, 0.59 ) }
    dend_48 { pt3dadd( -19.7291, 7.42065, 17.7348, 0.59 ) }
    dend_48 { pt3dadd( -19.9153, 6.26409, 18.5715, 0.22 ) }
    dend_48 { pt3dadd( -19.9517, 5.34408, 19.1295, 0.22 ) }
    dend_48 { pt3dadd( -19.8672, 3.90573, 19.8553, 1.18 ) }
    dend_48 { pt3dadd( -19.6133, 2.28814, 20.5356, 0.22 ) }
    dend_48 { pt3dadd( -19.3672, 1.19977, 20.8778, 0.22 ) }
    dend_48 { pt3dadd( -19.1831, 0.478068, 21.0028, 0.59 ) }
    dend_48 { pt3dadd( -18.9827, -0.29101, 21.036, 0.59 ) }
    dend_48 { pt3dadd( -18.8065, -1.03044, 21.0031, 0.22 ) }
    dend_48 { pt3dadd( -18.6599, -2.13256, 20.827, 0.22 ) }
    dend_48 { pt3dadd( -18.7615, -3.55342, 20.471, 0.59 ) }
    dend_48 { pt3dadd( -18.9998, -4.84781, 20.1017, 0.22 ) }
    dend_48 { pt3dadd( -19.268, -5.77086, 19.8116, 0.22 ) }
    dend_48 { pt3dadd( -19.7804, -7.03475, 19.3752, 0.22 ) }
    dend_48 { pt3dadd( -20.4656, -8.31624, 18.8797, 0.22 ) }
    dend_48 { pt3dadd( -21.2794, -9.48411, 18.3684, 0.29 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 55/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -0.195725, -8.8124, 10.99, 1.18 ) }
    dend_47 { pt3dadd( -0.0753551, -9.39361, 11.5128, 0.51 ) }
    dend_47 { pt3dadd( 0.237364, -10.1583, 12.2337, 0.88 ) }
    dend_47 { pt3dadd( 0.650411, -10.9611, 13.1295, 0.15 ) }
    dend_47 { pt3dadd( 1.17824, -11.8115, 14.1888, 1.18 ) }
    dend_47 { pt3dadd( 1.97035, -12.87, 15.672, 0.29 ) }
    dend_47 { pt3dadd( 2.58002, -13.5804, 16.8364, 0.59 ) }
    dend_47 { pt3dadd( 3.2261, -14.0828, 17.8769, 0.59 ) }
    dend_47 { pt3dadd( 3.91201, -14.4036, 18.7603, 0.37 ) }
    dend_47 { pt3dadd( 4.2276, -14.5001, 19.0991, 0.37 ) }
    dend_47 { pt3dadd( 4.80933, -14.621, 19.6724, 0.37 ) }
    dend_47 { pt3dadd( 5.58817, -14.7864, 20.4079, 1.1 ) }
    dend_47 { pt3dadd( 6.59578, -14.9975, 21.3857, 0.15 ) }
    dend_47 { pt3dadd( 7.38772, -15.1877, 22.0579, 0.15 ) }
    dend_47 { pt3dadd( 7.93433, -15.3661, 22.4644, 0.15 ) }
    dend_47 { pt3dadd( 8.79335, -15.705, 23.0836, 0.81 ) }
    dend_47 { pt3dadd( 9.53498, -16.0405, 23.5401, 1.18 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 72/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 4.22432, -1.2524, 13.6, 1.47 ) }
    dend_46 { pt3dadd( 5.0118, -0.175301, 13.6565, 0.29 ) }
    dend_46 { pt3dadd( 5.62663, 0.589518, 13.6511, 0.51 ) }
    dend_46 { pt3dadd( 6.21845, 1.28767, 13.6259, 0.51 ) }
    dend_46 { pt3dadd( 7.0575, 2.30263, 13.5652, 0.73 ) }
    dend_46 { pt3dadd( 7.72267, 3.11013, 13.5027, 0.73 ) }
    dend_46 { pt3dadd( 8.78769, 4.36944, 13.3836, 0.22 ) }
    dend_46 { pt3dadd( 9.44226, 5.10115, 13.2876, 0.22 ) }
    dend_46 { pt3dadd( 9.89692, 5.54103, 13.2115, 1.32 ) }
    dend_46 { pt3dadd( 10.7624, 6.30352, 13.0987, 0.22 ) }
    dend_46 { pt3dadd( 11.1368, 6.62813, 13.0628, 0.22 ) }
    dend_46 { pt3dadd( 11.9005, 7.34682, 13.0198, 0.22 ) }
    dend_46 { pt3dadd( 12.3639, 7.85356, 13.0181, 0.22 ) }
    dend_46 { pt3dadd( 12.8897, 8.52464, 13.057, 1.4 ) }
    dend_46 { pt3dadd( 13.9826, 9.95629, 13.1667, 0.37 ) }
    dend_46 { pt3dadd( 14.4589, 10.5994, 13.2334, 0.37 ) }
    dend_46 { pt3dadd( 14.9623, 11.3643, 13.3252, 1.4 ) }
    dend_46 { pt3dadd( 15.7182, 12.7505, 13.5082, 0.07 ) }
    dend_46 { pt3dadd( 16.1236, 13.6577, 13.6229, 0.07 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 91/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 4.55427, -7.97239, 2.6, 0.66 ) }
    dend_41 { pt3dadd( 5.56099, -7.6642, 2.27531, 0.51 ) }
    dend_41 { pt3dadd( 6.91498, -7.16065, 1.96014, 1.18 ) }
    dend_41 { pt3dadd( 8.7119, -6.35139, 1.68007, 1.4 ) }
    dend_41 { pt3dadd( 10.0745, -5.61679, 1.53483, 0.44 ) }
    dend_41 { pt3dadd( 11.4369, -4.78992, 1.46758, 0.81 ) }
    dend_41 { pt3dadd( 12.2264, -4.24926, 1.45919, 1.18 ) }
    dend_41 { pt3dadd( 13.1693, -3.41868, 1.53796, 1.18 ) }
    dend_41 { pt3dadd( 13.911, -2.56686, 1.71226, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_41 { pt3dadd( 14.4736, -1.74363, 1.92233, 1.18 ) }
    dend_41 { pt3dadd( 15.0664, -0.703978, 2.18862, 1.62 ) }
    dend_41 { pt3dadd( 15.5191, 0.286134, 2.39262, 1.18 ) }
    dend_41 { pt3dadd( 15.8877, 1.24278, 2.54017, 0.37 ) }
    dend_41 { pt3dadd( 16.3777, 2.72971, 2.68434, 0.37 ) }
    dend_41 { pt3dadd( 16.7786, 4.0329, 2.75777, 1.03 ) }
    dend_41 { pt3dadd( 16.9294, 4.55951, 2.77149, 0.59 ) }
    dend_41 { pt3dadd( 17.2291, 5.77457, 2.76867, 0.95 ) }
    dend_41 { pt3dadd( 17.4663, 6.75908, 2.75866, 0.81 ) }
    dend_41 { pt3dadd( 17.6352, 7.43163, 2.75558, 0.95 ) }
    dend_41 { pt3dadd( 17.9674, 8.58875, 2.75499, 0.29 ) }
    dend_41 { pt3dadd( 18.2659, 9.47109, 2.80097, 0.37 ) }
    dend_41 { pt3dadd( 18.5422, 10.219, 2.87079, 0.37 ) }
    dend_41 { pt3dadd( 18.9656, 11.3489, 3.0201, 0.95 ) }
    dend_41 { pt3dadd( 19.3563, 12.4688, 3.22122, 1.25 ) }
    dend_41 { pt3dadd( 19.5958, 13.1783, 3.36475, 1.62 ) }
    dend_41 { pt3dadd( 20.1352, 14.7294, 3.73701, 0.29 ) }
    dend_41 { pt3dadd( 20.3502, 15.2986, 3.88683, 0.29 ) }
    dend_41 { pt3dadd( 20.6543, 16.0741, 4.09772, 0.29 ) }
    dend_41 { pt3dadd( 20.9705, 16.9087, 4.33603, 0.29 ) }
    dend_41 { pt3dadd( 21.1449, 17.407, 4.47944, 0.29 ) }
    dend_41 { pt3dadd( 21.4609, 18.3756, 4.78047, 1.54 ) }
    dend_41 { pt3dadd( 21.6581, 18.9594, 4.97133, 1.25 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 23/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -5.73571, -6.77539, -1.72, 0.73 ) }
    dend_38 { pt3dadd( -6.33243, -6.83331, -1.73183, 0.37 ) }
    dend_38 { pt3dadd( -7.60015, -6.85559, -1.78265, 1.03 ) }
    dend_38 { pt3dadd( -9.24366, -6.8157, -1.86281, 0.29 ) }
    dend_38 { pt3dadd( -10.5594, -6.74956, -1.94821, 0.29 ) }
    dend_38 { pt3dadd( -12.3099, -6.61333, -2.14084, 1.4 ) }
    dend_38 { pt3dadd( -13.7055, -6.47251, -2.36918, 0.22 ) }
    dend_38 { pt3dadd( -14.5212, -6.34479, -2.54345, 0.22 ) }
    dend_38 { pt3dadd( -15.4902, -6.15229, -2.84204, 1.4 ) }
    dend_38 { pt3dadd( -16.8066, -5.87985, -3.33116, 0.66 ) }
    dend_38 { pt3dadd( -18.3479, -5.60782, -4.00252, 0.07 ) }
    dend_38 { pt3dadd( -19.8281, -5.39967, -4.68986, 1.25 ) }
    dend_38 { pt3dadd( -20.6287, -5.31379, -5.06998, 1.54 ) }
    dend_38 { pt3dadd( -23.0453, -5.10263, -6.27367, 0.07 ) }
    dend_38 { pt3dadd( -24.1239, -5.01406, -6.83747, 0.07 ) }
    dend_38 { pt3dadd( -25.3872, -4.9364, -7.50584, 0.07 ) }
    dend_38 { pt3dadd( -26.5684, -4.91948, -8.09155, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 40/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 6.69429, -2.4179, -5.43, 1.69 ) }
    dend_35 { pt3dadd( 6.81121, -2.39394, -5.35643, 1.69 ) }
    dend_35 { pt3dadd( 7.92749, -2.28507, -4.74065, 0.73 ) }
    dend_35 { pt3dadd( 9.19312, -2.22624, -4.07471, 0.29 ) }
    dend_35 { pt3dadd( 10.0542, -2.18366, -3.61657, 0.66 ) }
    dend_35 { pt3dadd( 11.0666, -2.10093, -3.08509, 1.25 ) }
    dend_35 { pt3dadd( 11.9161, -2.01226, -2.66531, 1.25 ) }
    dend_35 { pt3dadd( 13.886, -1.82164, -1.76833, 0.81 ) }
    dend_35 { pt3dadd( 14.8865, -1.74076, -1.37944, 0.44 ) }
    dend_35 { pt3dadd( 16.3272, -1.66191, -0.953373, 1.18 ) }
    dend_35 { pt3dadd( 17.4709, -1.59601, -0.72649, 0.51 ) }
    dend_35 { pt3dadd( 18.8221, -1.47023, -0.538498, 1.76 ) }
    dend_35 { pt3dadd( 20.2162, -1.28013, -0.423959, 0.29 ) }
    dend_35 { pt3dadd( 21.28, -1.1095, -0.412061, 0.51 ) }
    dend_35 { pt3dadd( 22.4014, -0.933943, -0.470474, 0.88 ) }
    dend_35 { pt3dadd( 23.6906, -0.771525, -0.633422, 0.29 ) }
    dend_35 { pt3dadd( 24.9966, -0.638786, -0.849334, 2.28 ) }
    dend_35 { pt3dadd( 25.9509, -0.497767, -1.03247, 2.42 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 58/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 4.6443, 3.2626, 7.59, 1.47 ) }
    dend_30 { pt3dadd( 5.71307, 3.97746, 8.40063, 1.62 ) }
    dend_30 { pt3dadd( 6.75437, 4.81908, 9.1786, 1.1 ) }
    dend_30 { pt3dadd( 7.72087, 5.79973, 9.94287, 1.62 ) }
    dend_30 { pt3dadd( 8.64779, 7.04556, 10.79, 0.95 ) }
    dend_30 { pt3dadd( 9.12302, 7.89959, 11.2977, 0.95 ) }
    dend_30 { pt3dadd( 9.42404, 8.54252, 11.6448, 1.18 ) }
    dend_30 { pt3dadd( 9.74132, 9.65724, 12.1407, 1.18 ) }
    dend_30 { pt3dadd( 9.90798, 10.8065, 12.5271, 0.95 ) }
    dend_30 { pt3dadd( 9.91844, 12.3169, 12.9169, 1.62 ) }
    dend_30 { pt3dadd( 9.76418, 13.4327, 13.2139, 0.51 ) }
    dend_30 { pt3dadd( 9.63023, 14.0431, 13.3872, 0.51 ) }
    dend_30 { pt3dadd( 9.47145, 14.7698, 13.6031, 1.18 ) }
    dend_30 { pt3dadd( 9.34933, 15.4282, 13.8187, 1.32 ) }
    dend_30 { pt3dadd( 9.18666, 16.3427, 14.1177, 1.1 ) }
    dend_30 { pt3dadd( 8.93843, 17.761, 14.5881, 1.62 ) }
    dend_30 { pt3dadd( 8.78325, 18.6352, 14.9085, 1.62 ) }
    dend_30 { pt3dadd( 8.51054, 19.8862, 15.3863, 0.73 ) }
    dend_30 { pt3dadd( 8.30544, 20.8614, 15.7694, 1.03 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 77/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.92433, 7.77761, -6.72, 4.04 ) }
    dend_13 { pt3dadd( 2.92433, 7.77761, -6.72, 4.04 ) }
    dend_13 { pt3dadd( 3.05591, 9.31809, -6.84, 3.45 ) }
    dend_13 { pt3dadd( 3.07702, 9.56522, -6.85925, 3.45 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 81/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.32567, 7.0531, 5.74, 1.32 ) }
    dend_0 { pt3dadd( -3.36053, 7.96292, 5.58517, 1.32 ) }
    dend_0 { pt3dadd( -3.41124, 9.42969, 5.33994, 1.32 ) }
    dend_0 { pt3dadd( -3.45197, 10.5886, 5.12525, 1.62 ) }
    dend_0 { pt3dadd( -3.49986, 11.9511, 4.87284, 1.91 ) }
    dend_0 { pt3dadd( -3.54515, 13.2398, 4.63411, 1.18 ) }
    dend_0 { pt3dadd( -3.58675, 14.4234, 4.41484, 1.25 ) }
    dend_0 { pt3dadd( -3.62657, 15.5761, 4.18184, 1.69 ) }
    dend_0 { pt3dadd( -3.65532, 16.7734, 3.92151, 1.76 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 90/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.785448, 7.86783, 0.0, 0.532275 ) }
    axon_0 { pt3dadd( -1.76905, 22.8355, 0.0, 0.532275 ) }
    axon_0 { pt3dadd( -2.75265, 37.8033, 0.0, 0.532275 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 93/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 21.6581, 18.9594, 4.97133, 0.15 ) }
    dend_45 { pt3dadd( 23.3587, 18.943, 4.60648, 0.15 ) }
    dend_45 { pt3dadd( 24.1365, 18.9834, 4.41655, 0.15 ) }
    dend_45 { pt3dadd( 24.6344, 19.0383, 4.28426, 0.44 ) }
    dend_45 { pt3dadd( 25.0515, 19.0843, 4.17345, 0.15 ) }
    dend_45 { pt3dadd( 25.6662, 19.1521, 4.01012, 0.37 ) }
    dend_45 { pt3dadd( 26.647, 19.2603, 3.74951, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( 27.557, 19.3458, 3.50552, 0.51 ) }
    dend_45 { pt3dadd( 28.5735, 19.5056, 3.1854, 0.51 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 2/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 21.6581, 18.9594, 4.97133, 0.81 ) }
    dend_42 { pt3dadd( 21.9071, 19.857, 5.51147, 0.81 ) }
    dend_42 { pt3dadd( 22.1204, 20.6262, 5.97436, 1.03 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 5/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -26.5684, -4.91948, -8.09155, 0.07 ) }
    dend_40 { pt3dadd( -27.995, -4.31471, -8.01528, 0.07 ) }
    dend_40 { pt3dadd( -28.62, -4.02262, -8.00891, 0.95 ) }
    dend_40 { pt3dadd( -29.5118, -3.60587, -7.99982, 0.07 ) }
    dend_40 { pt3dadd( -31.3262, -2.75794, -7.98132, 1.4 ) }
    dend_40 { pt3dadd( -32.7814, -2.07785, -7.96648, 0.07 ) }
    dend_40 { pt3dadd( -33.6733, -1.661, -7.95738, 0.22 ) }
    dend_40 { pt3dadd( -34.5639, -1.21624, -7.95646, 0.22 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 13/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -26.5684, -4.91948, -8.09155, 0.73 ) }
    dend_39 { pt3dadd( -28.0682, -5.71323, -9.46991, 0.73 ) }
    dend_39 { pt3dadd( -28.6128, -5.948, -9.91426, 0.73 ) }
    dend_39 { pt3dadd( -29.2118, -6.15981, -10.3511, 1.1 ) }
    dend_39 { pt3dadd( -30.9293, -6.65675, -11.5923, 0.15 ) }
    dend_39 { pt3dadd( -32.139, -6.95634, -12.4392, 0.51 ) }
    dend_39 { pt3dadd( -33.0423, -7.16021, -13.0624, 0.15 ) }
    dend_39 { pt3dadd( -34.0926, -7.3171, -13.741, 0.29 ) }
    dend_39 { pt3dadd( -34.7888, -7.39886, -14.1716, 0.07 ) }
    dend_39 { pt3dadd( -35.8141, -7.48507, -14.7456, 1.32 ) }
    dend_39 { pt3dadd( -36.3549, -7.52758, -14.983, 1.32 ) }
    dend_39 { pt3dadd( -38.089, -7.69468, -15.7049, 0.07 ) }
    dend_39 { pt3dadd( -38.6736, -7.77874, -16.0034, 0.29 ) }
    dend_39 { pt3dadd( -39.1959, -7.88225, -16.3064, 0.07 ) }
    dend_39 { pt3dadd( -39.5913, -7.98743, -16.4762, 0.37 ) }
    dend_39 { pt3dadd( -40.4581, -8.28625, -16.6588, 0.07 ) }
    dend_39 { pt3dadd( -41.7118, -8.76377, -16.7106, 0.37 ) }
    dend_39 { pt3dadd( -43.7286, -9.47127, -16.4175, 0.51 ) }
    dend_39 { pt3dadd( -44.439, -9.73016, -16.2779, 1.18 ) }
    dend_39 { pt3dadd( -48.0181, -11.0691, -15.3126, 0.07 ) }
    dend_39 { pt3dadd( -49.2262, -11.5324, -14.8537, 0.22 ) }
    dend_39 { pt3dadd( -50.3287, -11.9634, -14.2282, 0.88 ) }
    dend_39 { pt3dadd( -51.3932, -12.4014, -13.3663, 0.88 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 36/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 25.9509, -0.497767, -1.03247, 0.44 ) }
    dend_37 { pt3dadd( 27.8773, -0.879276, -0.736815, 0.44 ) }
    dend_37 { pt3dadd( 29.0022, -1.13814, -0.674023, 0.81 ) }
    dend_37 { pt3dadd( 29.7828, -1.32642, -0.669277, 0.81 ) }
    dend_37 { pt3dadd( 30.9781, -1.59864, -0.751917, 1.25 ) }
    dend_37 { pt3dadd( 32.1669, -1.8637, -0.877227, 0.44 ) }
    dend_37 { pt3dadd( 33.156, -2.0716, -1.06238, 0.66 ) }
    dend_37 { pt3dadd( 34.8002, -2.44587, -1.60595, 0.22 ) }
    dend_37 { pt3dadd( 35.82, -2.67473, -2.02174, 0.22 ) }
    dend_37 { pt3dadd( 37.2136, -2.94467, -2.66402, 2.2 ) }
    dend_37 { pt3dadd( 37.7538, -3.02512, -2.93057, 2.2 ) }
    dend_37 { pt3dadd( 39.8823, -3.26942, -3.96761, 0.51 ) }
    dend_37 { pt3dadd( 41.4013, -3.39698, -4.67829, 0.15 ) }
    dend_37 { pt3dadd( 42.7916, -3.47392, -5.26906, 1.76 ) }
    dend_37 { pt3dadd( 44.3189, -3.51731, -5.81878, 0.15 ) }
    dend_37 { pt3dadd( 45.0774, -3.53508, -6.01768, 0.15 ) }
    dend_37 { pt3dadd( 46.4076, -3.58388, -6.26249, 1.76 ) }
    dend_37 { pt3dadd( 48.5579, -3.71924, -6.4259, 0.07 ) }
    dend_37 { pt3dadd( 49.3752, -3.79542, -6.43649, 0.07 ) }
    dend_37 { pt3dadd( 50.868, -4.01279, -6.39764, 2.2 ) }
    dend_37 { pt3dadd( 52.6463, -4.4357, -6.25648, 0.07 ) }
    dend_37 { pt3dadd( 53.9641, -4.88655, -6.12034, 1.84 ) }
    dend_37 { pt3dadd( 54.7352, -5.27125, -5.99484, 0.07 ) }
    dend_37 { pt3dadd( 55.0671, -5.51698, -5.89289, 0.07 ) }
    dend_37 { pt3dadd( 55.4939, -5.89705, -5.74814, 0.95 ) }
    dend_37 { pt3dadd( 56.0817, -6.56048, -5.50445, 0.07 ) }
    dend_37 { pt3dadd( 56.5019, -7.14653, -5.27615, 0.07 ) }
    dend_37 { pt3dadd( 57.1557, -8.15017, -4.85209, 1.54 ) }
    dend_37 { pt3dadd( 57.9731, -9.41806, -4.32566, 0.07 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 65/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 25.9509, -0.497767, -1.03247, 0.22 ) }
    dend_36 { pt3dadd( 27.0162, -0.272635, -2.84102, 0.22 ) }
    dend_36 { pt3dadd( 27.706, -0.0650882, -4.05144, 0.37 ) }
    dend_36 { pt3dadd( 28.3971, 0.230487, -5.39863, 0.44 ) }
    dend_36 { pt3dadd( 28.9086, 0.480128, -6.54738, 1.18 ) }
    dend_36 { pt3dadd( 29.7145, 0.973265, -8.54075, 0.66 ) }
    dend_36 { pt3dadd( 30.0435, 1.21341, -9.40445, 0.15 ) }
    dend_36 { pt3dadd( 30.1326, 1.31811, -9.70731, 0.15 ) }
    dend_36 { pt3dadd( 30.4151, 1.70003, -10.7097, 0.15 ) }
    dend_36 { pt3dadd( 30.7125, 2.13341, -11.7056, 0.88 ) }
    dend_36 { pt3dadd( 30.9783, 2.47062, -12.4816, 1.25 ) }
    dend_36 { pt3dadd( 31.3773, 2.87713, -13.4864, 0.95 ) }
    dend_36 { pt3dadd( 31.9976, 3.39844, -14.8106, 0.59 ) }
    dend_36 { pt3dadd( 32.8455, 4.02777, -16.4382, 1.1 ) }
    dend_36 { pt3dadd( 33.2661, 4.34026, -17.1851, 2.35 ) }
    dend_36 { pt3dadd( 33.9142, 4.8952, -18.3557, 0.66 ) }
    dend_36 { pt3dadd( 34.7764, 5.77628, -20.0609, 0.29 ) }
    dend_36 { pt3dadd( 35.1231, 6.20686, -20.8756, 0.07 ) }
    dend_36 { pt3dadd( 35.5071, 6.78342, -21.9674, 0.59 ) }
    dend_36 { pt3dadd( 35.9928, 7.67149, -23.7417, 2.5 ) }
    dend_36 { pt3dadd( 36.5272, 8.85112, -26.3918, 0.07 ) }
    dend_36 { pt3dadd( 36.9099, 9.7936, -28.7696, 2.13 ) }
    dend_36 { pt3dadd( 37.2518, 10.727, -31.4021, 2.06 ) }
    dend_36 { pt3dadd( 37.4405, 11.3202, -33.267, 2.06 ) }
    dend_36 { pt3dadd( 37.5892, 11.8608, -35.2247, 1.84 ) }
    dend_36 { pt3dadd( 37.6765, 12.2566, -36.9497, 1.84 ) }
    dend_36 { pt3dadd( 37.7132, 12.5036, -38.1881, 1.84 ) }
    dend_36 { pt3dadd( 37.7387, 12.7153, -39.114, 1.84 ) }
    dend_36 { pt3dadd( 37.7694, 12.9989, -39.9591, 1.84 ) }
    dend_36 { pt3dadd( 37.8226, 13.4766, -41.0759, 1.03 ) }
    dend_36 { pt3dadd( 37.9286, 14.4671, -42.9688, 0.59 ) }
    dend_36 { pt3dadd( 38.0126, 15.4107, -44.4784, 0.59 ) }
    dend_36 { pt3dadd( 38.092, 16.5793, -46.2003, 2.64 ) }
    dend_36 { pt3dadd( 38.1988, 17.8028, -47.9189, 0.59 ) }
    dend_36 { pt3dadd( 38.2772, 18.5029, -48.8544, 0.95 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( 38.3722, 19.2748, -49.7738, 0.22 ) }
    dend_36 { pt3dadd( 38.4618, 19.9562, -50.4902, 1.32 ) }
    dend_36 { pt3dadd( 38.6677, 21.3531, -51.778, 0.22 ) }
    dend_36 { pt3dadd( 38.8421, 22.3762, -52.6036, 0.22 ) }
    dend_36 { pt3dadd( 38.983, 23.082, -53.0801, 0.22 ) }
    dend_36 { pt3dadd( 39.2706, 24.4454, -53.8627, 2.13 ) }
    dend_36 { pt3dadd( 39.6002, 25.8961, -54.5806, 0.07 ) }
    dend_36 { pt3dadd( 39.8981, 27.1739, -55.1409, 0.07 ) }
    dend_36 { pt3dadd( 40.1059, 28.0727, -55.4784, 0.44 ) }
    dend_36 { pt3dadd( 40.3804, 29.2727, -55.9109, 1.91 ) }
    dend_36 { pt3dadd( 40.5646, 29.9855, -56.18, 0.44 ) }
    dend_36 { pt3dadd( 40.6775, 30.3806, -56.3476, 0.88 ) }
    dend_36 { pt3dadd( 40.9647, 31.4645, -56.803, 0.07 ) }
    dend_36 { pt3dadd( 41.2007, 32.3803, -57.1916, 0.07 ) }
    dend_36 { pt3dadd( 41.2954, 32.7582, -57.354, 0.81 ) }
    dend_36 { pt3dadd( 41.6578, 34.0094, -57.8573, 1.98 ) }
    dend_36 { pt3dadd( 42.0176, 35.0344, -58.2167, 0.07 ) }
    dend_36 { pt3dadd( 42.3025, 35.7045, -58.4273, 0.73 ) }
    dend_36 { pt3dadd( 42.7644, 36.6028, -58.6596, 0.22 ) }
    dend_36 { pt3dadd( 43.1943, 37.3186, -58.81, 1.18 ) }
    dend_36 { pt3dadd( 43.9612, 38.4607, -59.0509, 0.29 ) }
    dend_36 { pt3dadd( 44.3972, 39.053, -59.2078, 1.03 ) }
    dend_36 { pt3dadd( 45.2361, 40.0922, -59.5408, 0.15 ) }
    dend_36 { pt3dadd( 45.6648, 40.5974, -59.7243, 1.47 ) }
    dend_36 { pt3dadd( 46.3036, 41.3246, -60.0279, 0.07 ) }
    dend_36 { pt3dadd( 46.9475, 42.0581, -60.3744, 1.62 ) }
    dend_36 { pt3dadd( 48.1701, 43.5104, -61.1487, 0.29 ) }
    dend_36 { pt3dadd( 48.6421, 44.0806, -61.4723, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 28/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 8.30544, 20.8614, 15.7694, 0.29 ) }
    dend_34 { pt3dadd( 9.39728, 21.5598, 16.1546, 0.29 ) }
    dend_34 { pt3dadd( 9.68151, 21.7761, 16.2719, 0.73 ) }
    dend_34 { pt3dadd( 10.1638, 22.2406, 16.5779, 0.44 ) }
    dend_34 { pt3dadd( 10.7221, 22.8245, 17.0919, 0.22 ) }
    dend_34 { pt3dadd( 11.1895, 23.305, 17.6174, 0.22 ) }
    dend_34 { pt3dadd( 11.6989, 23.7656, 18.2212, 0.44 ) }
    dend_34 { pt3dadd( 12.1669, 24.0838, 18.8224, 0.44 ) }
    dend_34 { pt3dadd( 12.8904, 24.2711, 19.8321, 0.44 ) }
    dend_34 { pt3dadd( 13.5422, 24.1087, 20.7751, 0.44 ) }
    dend_34 { pt3dadd( 13.84, 23.8876, 21.1915, 0.44 ) }
    dend_34 { pt3dadd( 14.1962, 23.5019, 21.7614, 1.03 ) }
    dend_34 { pt3dadd( 14.7578, 22.7744, 22.7492, 0.29 ) }
    dend_34 { pt3dadd( 15.1498, 22.2306, 23.3512, 0.15 ) }
    dend_34 { pt3dadd( 15.5321, 21.6731, 23.8616, 0.44 ) }
    dend_34 { pt3dadd( 15.9663, 20.9506, 24.465, 0.44 ) }
    dend_34 { pt3dadd( 16.6263, 19.7543, 25.5272, 0.44 ) }
    dend_34 { pt3dadd( 16.8612, 19.2104, 26.1197, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 46/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 8.30544, 20.8614, 15.7694, 1.1 ) }
    dend_31 { pt3dadd( 7.94782, 21.9578, 16.1676, 1.1 ) }
    dend_31 { pt3dadd( 7.52431, 23.0517, 16.6436, 0.81 ) }
    dend_31 { pt3dadd( 7.2259, 23.7129, 16.9365, 0.95 ) }
    dend_31 { pt3dadd( 6.59328, 25.0507, 17.5277, 0.66 ) }
    dend_31 { pt3dadd( 5.79934, 26.7367, 18.2884, 0.73 ) }
    dend_31 { pt3dadd( 5.2652, 27.8748, 18.7952, 0.73 ) }
    dend_31 { pt3dadd( 4.6906, 29.096, 19.3755, 0.73 ) }
    dend_31 { pt3dadd( 4.14896, 30.2559, 19.9502, 1.1 ) }
    dend_31 { pt3dadd( 4.05535, 30.4577, 20.0542, 1.32 ) }
    dend_31 { pt3dadd( 3.35036, 31.8618, 20.8005, 0.37 ) }
    dend_31 { pt3dadd( 2.99872, 32.4807, 21.138, 1.1 ) }
    dend_31 { pt3dadd( 2.37538, 33.4398, 21.6784, 0.29 ) }
    dend_31 { pt3dadd( 1.72715, 34.3151, 22.1887, 0.44 ) }
    dend_31 { pt3dadd( 1.30823, 34.8063, 22.4956, 0.22 ) }
    dend_31 { pt3dadd( 0.446395, 35.6615, 23.0166, 1.4 ) }
    dend_31 { pt3dadd( -0.285163, 36.2818, 23.3057, 0.15 ) }
    dend_31 { pt3dadd( -1.11863, 36.9627, 23.4907, 0.59 ) }
    dend_31 { pt3dadd( -1.84792, 37.5067, 23.5784, 0.95 ) }
    dend_31 { pt3dadd( -2.14712, 37.7333, 23.5804, 0.15 ) }
    dend_31 { pt3dadd( -2.87365, 38.3483, 23.5212, 1.1 ) }
    dend_31 { pt3dadd( -3.98081, 39.5248, 23.1767, 0.44 ) }
    dend_31 { pt3dadd( -4.49011, 40.2001, 22.8599, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 69/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.07702, 9.56522, -6.85925, 3.45 ) }
    dend_17 { pt3dadd( 3.25701, 10.8042, -7.74925, 3.45 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 71/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 3.07702, 9.56522, -6.85925, 0.29 ) }
    dend_14 { pt3dadd( 3.13317, 9.27744, -8.21882, 0.29 ) }
    dend_14 { pt3dadd( 2.97741, 8.8168, -10.3414, 0.44 ) }
    dend_14 { pt3dadd( 2.62459, 8.38573, -12.2019, 0.66 ) }
    dend_14 { pt3dadd( 1.91763, 7.81501, -14.4439, 0.81 ) }
    dend_14 { pt3dadd( 0.944623, 7.18435, -16.4958, 0.81 ) }
    dend_14 { pt3dadd( 0.0645451, 6.64687, -17.9325, 0.73 ) }
    dend_14 { pt3dadd( -0.66445, 6.25627, -18.7423, 0.59 ) }
    dend_14 { pt3dadd( -1.6493, 5.78546, -19.4996, 0.59 ) }
    dend_14 { pt3dadd( -2.79721, 5.28393, -20.1426, 0.59 ) }
    dend_14 { pt3dadd( -4.47286, 4.58449, -20.8368, 0.59 ) }
    dend_14 { pt3dadd( -6.04096, 3.87204, -21.3965, 0.59 ) }
    dend_14 { pt3dadd( -7.27844, 3.24365, -21.8182, 0.59 ) }
    dend_14 { pt3dadd( -8.73579, 2.46223, -22.2828, 0.29 ) }
    dend_14 { pt3dadd( -10.0094, 1.76777, -22.6819, 0.29 ) }
    dend_14 { pt3dadd( -11.3876, 1.01333, -23.1018, 1.25 ) }
    dend_14 { pt3dadd( -13.0518, 0.136933, -23.5322, 0.29 ) }
    dend_14 { pt3dadd( -14.0457, -0.369471, -23.7058, 0.07 ) }
    dend_14 { pt3dadd( -15.4558, -1.12779, -23.8781, 3.16 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 90/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.65532, 16.7734, 3.92151, 0.37 ) }
    dend_4 { pt3dadd( -3.33178, 18.6619, 4.97203, 0.37 ) }
    dend_4 { pt3dadd( -3.14603, 19.7461, 5.57515, 0.95 ) }
    dend_4 { pt3dadd( -2.84102, 21.5264, 6.56548, 1.76 ) }
    dend_4 { pt3dadd( -2.59283, 22.975, 7.37136, 2.57 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 95/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.65532, 16.7734, 3.92151, 0.22 ) }
    dend_1 { pt3dadd( -4.96878, 16.7174, 3.14329, 0.22 ) }
    dend_1 { pt3dadd( -5.76161, 16.6749, 2.67126, 0.22 ) }
    dend_1 { pt3dadd( -6.34465, 16.6546, 2.317, 0.95 ) }
    dend_1 { pt3dadd( -6.95095, 16.6829, 1.81925, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( -8.25121, 16.7733, 0.566213, 0.07 ) }
    dend_1 { pt3dadd( -8.8791, 16.8231, -0.114332, 0.07 ) }
    dend_1 { pt3dadd( -9.56713, 16.8623, -0.871332, 0.73 ) }
    dend_1 { pt3dadd( -10.093, 16.8765, -1.46515, 1.91 ) }
    dend_1 { pt3dadd( -12.1418, 16.9541, -3.88335, 0.37 ) }
    dend_1 { pt3dadd( -13.5285, 17.0378, -5.62334, 1.18 ) }
    dend_1 { pt3dadd( -14.6515, 17.1496, -7.13171, 1.1 ) }
    dend_1 { pt3dadd( -15.6343, 17.2372, -8.48793, 0.22 ) }
    dend_1 { pt3dadd( -17.3733, 17.3241, -10.8334, 2.06 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 9/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.75265, 37.8033, 0.0, 0.22 ) }
    axon_1 { pt3dadd( -3.73624, 52.771, 0.0, 0.22 ) }
    axon_1 { pt3dadd( -4.71984, 67.7387, 0.0, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 12/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 22.1204, 20.6262, 5.97436, 0.15 ) }
    dend_44 { pt3dadd( 21.6564, 21.6232, 5.52872, 0.15 ) }
    dend_44 { pt3dadd( 21.2731, 22.39, 5.17226, 0.15 ) }
    dend_44 { pt3dadd( 20.8633, 23.2099, 4.79114, 0.15 ) }
    dend_44 { pt3dadd( 20.5102, 23.9161, 4.46282, 0.15 ) }
    dend_44 { pt3dadd( 20.0282, 24.8804, 4.01458, 0.44 ) }
    dend_44 { pt3dadd( 19.6367, 25.6635, 3.65051, 0.07 ) }
    dend_44 { pt3dadd( 19.4375, 26.1032, 3.39358, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 20/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 22.1204, 20.6262, 5.97436, 0.15 ) }
    dend_43 { pt3dadd( 22.9402, 20.9782, 6.48701, 0.15 ) }
    dend_43 { pt3dadd( 23.672, 21.1227, 6.75946, 0.37 ) }
    dend_43 { pt3dadd( 24.7851, 21.1439, 6.92631, 0.22 ) }
    dend_43 { pt3dadd( 25.0396, 21.1259, 6.94221, 0.51 ) }
    dend_43 { pt3dadd( 26.1731, 20.9805, 6.94511, 0.73 ) }
    dend_43 { pt3dadd( 27.037, 20.8696, 6.94732, 0.07 ) }
    dend_43 { pt3dadd( 28.3816, 20.5952, 6.85877, 0.15 ) }
    dend_43 { pt3dadd( 29.8165, 20.2234, 6.66138, 0.95 ) }
    dend_43 { pt3dadd( 30.4317, 20.035, 6.5324, 0.07 ) }
    dend_43 { pt3dadd( 31.7513, 19.5843, 6.21769, 0.66 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 31/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -4.49011, 40.2001, 22.8599, 1.25 ) }
    dend_33 { pt3dadd( -4.31479, 41.4707, 22.1265, 1.25 ) }
    dend_33 { pt3dadd( -4.28349, 42.3969, 21.6349, 0.51 ) }
    dend_33 { pt3dadd( -4.34329, 43.6069, 21.052, 0.15 ) }
    dend_33 { pt3dadd( -4.463, 44.6067, 20.6019, 0.88 ) }
    dend_33 { pt3dadd( -4.62298, 45.9428, 20.0004, 0.07 ) }
    dend_33 { pt3dadd( -4.73737, 46.8983, 19.5703, 0.07 ) }
    dend_33 { pt3dadd( -4.92331, 47.6452, 19.255, 0.44 ) }
    dend_33 { pt3dadd( -5.18145, 48.3292, 19.034, 0.22 ) }
    dend_33 { pt3dadd( -5.36039, 48.6642, 18.9748, 0.95 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -4.49011, 40.2001, 22.8599, 0.22 ) }
    dend_32 { pt3dadd( -4.27828, 41.0245, 22.5137, 0.22 ) }
    dend_32 { pt3dadd( -3.90278, 42.1074, 22.1203, 0.22 ) }
    dend_32 { pt3dadd( -3.70162, 42.6073, 21.9636, 0.22 ) }
    dend_32 { pt3dadd( -3.27762, 43.5609, 21.6977, 1.4 ) }
    dend_32 { pt3dadd( -2.54607, 45.141, 21.2726, 0.07 ) }
    dend_32 { pt3dadd( -2.07434, 46.16, 20.9984, 0.07 ) }
    dend_32 { pt3dadd( -1.7433, 46.7624, 20.8474, 0.07 ) }
    dend_32 { pt3dadd( -1.29871, 47.4708, 20.708, 0.07 ) }
    dend_32 { pt3dadd( -0.975725, 47.9609, 20.6284, 0.73 ) }
    dend_32 { pt3dadd( -0.27818, 48.9437, 20.4871, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_17 (entry count 52/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.25701, 10.8042, -7.74925, 0.73 ) }
    dend_29 { pt3dadd( 4.63806, 12.2789, -6.97885, 0.73 ) }
    dend_29 { pt3dadd( 5.54957, 13.4021, -6.33007, 0.73 ) }
    dend_29 { pt3dadd( 6.22238, 14.3287, -5.69249, 1.03 ) }
    dend_29 { pt3dadd( 6.96384, 15.4174, -4.90481, 0.07 ) }
    dend_29 { pt3dadd( 7.35744, 15.9731, -4.45003, 0.73 ) }
    dend_29 { pt3dadd( 8.08154, 16.9162, -3.61414, 0.22 ) }
    dend_29 { pt3dadd( 8.88661, 17.8841, -2.57257, 1.4 ) }
    dend_29 { pt3dadd( 9.80113, 18.7011, -1.44871, 0.95 ) }
    dend_29 { pt3dadd( 10.0505, 18.8262, -1.16796, 1.32 ) }
    dend_29 { pt3dadd( 11.4448, 19.0118, 0.138951, 0.22 ) }
    dend_29 { pt3dadd( 12.0638, 18.928, 0.61175, 0.22 ) }
    dend_29 { pt3dadd( 13.0513, 18.5961, 1.19011, 0.59 ) }
    dend_29 { pt3dadd( 14.5096, 17.9227, 1.8389, 0.07 ) }
    dend_29 { pt3dadd( 15.9998, 17.1498, 2.28725, 0.37 ) }
    dend_29 { pt3dadd( 16.7761, 16.7278, 2.4546, 0.07 ) }
    dend_29 { pt3dadd( 17.234, 16.4698, 2.50468, 0.07 ) }
    dend_29 { pt3dadd( 18.0231, 16.0402, 2.55052, 0.37 ) }
    dend_29 { pt3dadd( 18.7243, 15.6645, 2.54076, 0.81 ) }
    dend_29 { pt3dadd( 19.8958, 15.0121, 2.43157, 0.07 ) }
    dend_29 { pt3dadd( 20.4141, 14.707, 2.3601, 0.07 ) }
    dend_29 { pt3dadd( 20.8241, 14.4516, 2.27826, 0.07 ) }
    dend_29 { pt3dadd( 21.3532, 14.1111, 2.15573, 0.44 ) }
    dend_29 { pt3dadd( 23.0244, 13.0001, 1.75194, 0.07 ) }
    dend_29 { pt3dadd( 24.0884, 12.2636, 1.49022, 0.51 ) }
    dend_29 { pt3dadd( 25.4383, 11.2803, 1.16537, 1.98 ) }
    dend_29 { pt3dadd( 26.8771, 10.208, 0.780621, 0.07 ) }
    dend_29 { pt3dadd( 27.3274, 9.87359, 0.645086, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 80/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 3.25701, 10.8042, -7.74925, 2.42 ) }
    dend_18 { pt3dadd( 3.38701, 12.0327, -8.32925, 2.42 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 82/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -15.4558, -1.12779, -23.8781, 0.37 ) }
    dend_16 { pt3dadd( -15.2525, -2.91423, -23.775, 0.37 ) }
    dend_16 { pt3dadd( -15.1601, -4.45797, -23.6701, 0.95 ) }
    dend_16 { pt3dadd( -15.1424, -5.77117, -23.6163, 0.95 ) }
    dend_16 { pt3dadd( -15.2107, -7.80484, -23.3801, 0.15 ) }
    dend_16 { pt3dadd( -15.2738, -8.885, -23.2003, 0.15 ) }
    dend_16 { pt3dadd( -15.3472, -9.65304, -23.0615, 0.15 ) }
    dend_16 { pt3dadd( -15.5027, -10.9271, -22.7581, 0.22 ) }
    dend_16 { pt3dadd( -15.7765, -12.6596, -22.2519, 1.98 ) }
    dend_16 { pt3dadd( -16.2446, -14.9098, -21.5833, 0.22 ) }
    dend_16 { pt3dadd( -16.4612, -15.6628, -21.3817, 0.81 ) }
    dend_16 { pt3dadd( -16.8259, -16.7377, -21.0342, 0.07 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 94/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -15.4558, -1.12779, -23.8781, 0.66 ) }
    dend_15 { pt3dadd( -16.1038, -1.05053, -25.353, 0.66 ) }
    dend_15 { pt3dadd( -16.5519, -1.0249, -28.1002, 1.25 ) }
    dend_15 { pt3dadd( -16.5612, -1.03169, -28.5625, 1.25 ) }
    dend_15 { pt3dadd( -16.5291, -1.09844, -29.4989, 1.25 ) }
    dend_15 { pt3dadd( -16.4689, -1.21766, -30.3162, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_15 { pt3dadd( -16.1845, -1.6901, -32.7149, 0.81 ) }
    dend_15 { pt3dadd( -15.5171, -2.40174, -35.4679, 0.81 ) }
    dend_15 { pt3dadd( -15.2104, -2.75384, -36.4875, 1.1 ) }
    dend_15 { pt3dadd( -14.7802, -3.28275, -37.9655, 0.73 ) }
    dend_15 { pt3dadd( -14.4883, -3.69649, -39.1151, 0.37 ) }
    dend_15 { pt3dadd( -14.2534, -4.14801, -40.4243, 1.03 ) }
    dend_15 { pt3dadd( -14.1408, -4.99232, -42.7617, 1.03 ) }
    dend_15 { pt3dadd( -14.2823, -5.46453, -44.1183, 1.03 ) }
    dend_15 { pt3dadd( -14.478, -5.80027, -45.395, 1.03 ) }
    dend_15 { pt3dadd( -14.7267, -6.03654, -46.6909, 1.03 ) }
    dend_15 { pt3dadd( -15.0175, -6.16516, -47.9329, 0.66 ) }
    dend_15 { pt3dadd( -15.4136, -6.18116, -49.6376, 1.32 ) }
    dend_15 { pt3dadd( -15.8145, -6.03491, -51.6297, 0.95 ) }
    dend_15 { pt3dadd( -16.1067, -5.7616, -53.6693, 0.95 ) }
    dend_15 { pt3dadd( -16.2329, -5.51988, -55.0235, 0.66 ) }
    dend_15 { pt3dadd( -16.3064, -5.1167, -56.8634, 1.84 ) }
    dend_15 { pt3dadd( -16.2912, -4.03515, -61.1309, 1.4 ) }
    dend_15 { pt3dadd( -16.2342, -3.6072, -62.6526, 1.76 ) }
    dend_15 { pt3dadd( -15.9856, -2.55592, -66.3839, 0.88 ) }
    dend_15 { pt3dadd( -15.8543, -2.09538, -68.0072, 0.88 ) }
    dend_15 { pt3dadd( -15.6835, -1.64363, -69.6433, 1.18 ) }
    dend_15 { pt3dadd( -15.5916, -1.47034, -70.4419, 1.18 ) }
    dend_15 { pt3dadd( -15.5074, -1.39041, -71.3542, 1.18 ) }
    dend_15 { pt3dadd( -15.4979, -1.42845, -72.0374, 1.18 ) }
    dend_15 { pt3dadd( -15.7029, -1.67214, -73.8353, 1.18 ) }
    dend_15 { pt3dadd( -16.093, -1.94268, -75.5939, 1.18 ) }
    dend_15 { pt3dadd( -16.7885, -2.23836, -77.8684, 1.18 ) }
    dend_15 { pt3dadd( -17.6772, -2.43967, -80.1629, 1.18 ) }
    dend_15 { pt3dadd( -18.6, -2.52891, -82.147, 1.84 ) }
    dend_15 { pt3dadd( -20.15, -2.55658, -85.0253, 0.22 ) }
    dend_15 { pt3dadd( -20.7299, -2.51907, -85.8895, 0.22 ) }
    dend_15 { pt3dadd( -21.7451, -2.2918, -87.0921, 1.54 ) }
    dend_15 { pt3dadd( -22.9797, -1.78054, -88.2835, 1.03 ) }
    dend_15 { pt3dadd( -24.0987, -1.09822, -89.291, 0.37 ) }
    dend_15 { pt3dadd( -24.6078, -0.677209, -89.8504, 1.4 ) }
    dend_15 { pt3dadd( -25.2758, 0.0797785, -90.9279, 0.29 ) }
    dend_15 { pt3dadd( -25.7047, 0.754176, -92.0782, 1.25 ) }
    dend_15 { pt3dadd( -26.1001, 1.69483, -93.9974, 0.37 ) }
    dend_15 { pt3dadd( -26.215, 2.41491, -95.8085, 0.66 ) }
    dend_15 { pt3dadd( -26.1524, 3.30228, -98.7932, 1.4 ) }
    dend_15 { pt3dadd( -26.0106, 3.77854, -101.131, 1.4 ) }
    dend_15 { pt3dadd( -25.8107, 4.14297, -103.4, 1.4 ) }
    dend_15 { pt3dadd( -25.5851, 4.38204, -105.449, 1.69 ) }
    dend_15 { pt3dadd( -25.2301, 4.57302, -108.235, 1.69 ) }
    dend_15 { pt3dadd( -24.8058, 4.67643, -111.279, 1.32 ) }
    dend_15 { pt3dadd( -24.5209, 4.68613, -113.304, 1.18 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 46/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -2.59283, 22.975, 7.37136, 0.66 ) }
    dend_8 { pt3dadd( -3.61063, 24.4847, 7.54904, 0.66 ) }
    dend_8 { pt3dadd( -3.95532, 24.8928, 7.60075, 0.66 ) }
    dend_8 { pt3dadd( -4.60913, 25.5434, 7.63188, 0.66 ) }
    dend_8 { pt3dadd( -5.18288, 26.0692, 7.63116, 0.66 ) }
    dend_8 { pt3dadd( -5.9567, 26.6698, 7.60817, 0.66 ) }
    dend_8 { pt3dadd( -6.55614, 27.0967, 7.62274, 0.22 ) }
    dend_8 { pt3dadd( -7.63625, 27.7384, 7.74319, 0.95 ) }
    dend_8 { pt3dadd( -8.62267, 28.282, 7.90521, 0.95 ) }
    dend_8 { pt3dadd( -9.15823, 28.5869, 8.03871, 1.1 ) }
    dend_8 { pt3dadd( -10.8554, 29.6026, 8.6447, 0.51 ) }
    dend_8 { pt3dadd( -11.8966, 30.2291, 9.14766, 0.37 ) }
    dend_8 { pt3dadd( -13.0997, 30.9534, 9.84277, 1.4 ) }
    dend_8 { pt3dadd( -13.9082, 31.4206, 10.4208, 1.69 ) }
    dend_8 { pt3dadd( -15.6542, 32.3338, 11.9977, 0.15 ) }
    dend_8 { pt3dadd( -16.5442, 32.7526, 12.9953, 0.22 ) }
    dend_8 { pt3dadd( -17.3407, 33.1064, 14.1139, 0.59 ) }
    dend_8 { pt3dadd( -17.7194, 33.2687, 14.6799, 1.18 ) }
    dend_8 { pt3dadd( -18.5652, 33.6429, 15.9542, 0.44 ) }
    dend_8 { pt3dadd( -19.6343, 34.1498, 17.5416, 0.88 ) }
    dend_8 { pt3dadd( -20.7181, 34.7603, 19.0253, 1.18 ) }
    dend_8 { pt3dadd( -21.5046, 35.3898, 19.953, 1.69 ) }
    dend_8 { pt3dadd( -22.2103, 36.2237, 20.5906, 1.84 ) }
    dend_8 { pt3dadd( -23.253, 37.6721, 21.3546, 0.44 ) }
    dend_8 { pt3dadd( -23.93, 38.7613, 21.6008, 0.95 ) }
    dend_8 { pt3dadd( -24.4629, 39.7141, 21.5608, 0.37 ) }
    dend_8 { pt3dadd( -24.8077, 40.3851, 21.4023, 0.37 ) }
    dend_8 { pt3dadd( -25.4143, 41.6753, 20.9523, 1.03 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -2.59283, 22.975, 7.37136, 1.32 ) }
    dend_5 { pt3dadd( -2.56079, 24.0498, 5.98987, 1.32 ) }
    dend_5 { pt3dadd( -2.59272, 25.1665, 4.74341, 1.1 ) }
    dend_5 { pt3dadd( -2.60031, 25.5908, 4.30211, 1.1 ) }
    dend_5 { pt3dadd( -2.53742, 26.5997, 3.26932, 0.37 ) }
    dend_5 { pt3dadd( -2.44227, 27.245, 2.62536, 0.37 ) }
    dend_5 { pt3dadd( -2.27735, 27.9465, 1.93357, 1.03 ) }
    dend_5 { pt3dadd( -2.14161, 28.4664, 1.48817, 1.03 ) }
    dend_5 { pt3dadd( -1.85931, 29.2932, 0.831458, 0.59 ) }
    dend_5 { pt3dadd( -1.50263, 30.1532, 0.168732, 0.66 ) }
    dend_5 { pt3dadd( -1.18292, 30.8387, -0.366893, 0.66 ) }
    dend_5 { pt3dadd( -0.694945, 31.8096, -1.19684, 0.44 ) }
    dend_5 { pt3dadd( -0.324369, 32.5257, -1.85808, 1.03 ) }
    dend_5 { pt3dadd( -0.0223138, 33.2033, -2.52417, 1.76 ) }
    dend_5 { pt3dadd( 0.343529, 34.237, -3.57321, 0.88 ) }
    dend_5 { pt3dadd( 0.71805, 35.4792, -4.86522, 0.51 ) }
    dend_5 { pt3dadd( 1.00812, 36.5149, -5.96535, 0.51 ) }
    dend_5 { pt3dadd( 1.32977, 37.7474, -7.2741, 2.06 ) }
    dend_5 { pt3dadd( 1.62774, 39.0519, -8.62583, 0.73 ) }
    dend_5 { pt3dadd( 1.84705, 40.2004, -9.81011, 0.88 ) }
    dend_5 { pt3dadd( 1.98852, 41.0776, -10.712, 1.1 ) }
    dend_5 { pt3dadd( 2.04501, 41.7567, -11.405, 0.37 ) }
    dend_5 { pt3dadd( 2.039, 42.1315, -11.7885, 0.37 ) }
    dend_5 { pt3dadd( 1.98043, 42.9795, -12.6349, 1.03 ) }
    dend_5 { pt3dadd( 1.86346, 44.3431, -13.9639, 0.59 ) }
    dend_5 { pt3dadd( 1.72692, 45.3201, -14.8733, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_5 { pt3dadd( 1.47794, 46.5471, -15.95, 1.69 ) }
    dend_5 { pt3dadd( 1.10012, 48.1141, -17.2357, 0.37 ) }
    dend_5 { pt3dadd( 0.90227, 48.8794, -17.8013, 0.88 ) }
    dend_5 { pt3dadd( 0.760915, 49.4276, -18.1807, 0.07 ) }
    dend_5 { pt3dadd( 0.470482, 50.416, -18.6828, 0.51 ) }
    dend_5 { pt3dadd( 0.269029, 51.0545, -18.8996, 0.51 ) }
    dend_5 { pt3dadd( 0.0629955, 51.7802, -19.0125, 0.51 ) }
    dend_5 { pt3dadd( -0.231044, 52.6719, -19.0212, 1.03 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 8/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -17.3733, 17.3241, -10.8334, 0.37 ) }
    dend_3 { pt3dadd( -18.1227, 16.4745, -11.6973, 0.37 ) }
    dend_3 { pt3dadd( -18.7893, 15.7187, -12.466, 0.37 ) }
    dend_3 { pt3dadd( -19.4692, 14.9478, -13.2498, 0.07 ) }
    dend_3 { pt3dadd( -20.2649, 14.0458, -14.1672, 0.88 ) }
    dend_3 { pt3dadd( -21.1822, 13.0057, -15.2248, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 14/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -17.3733, 17.3241, -10.8334, 0.66 ) }
    dend_2 { pt3dadd( -17.4847, 18.0016, -13.5174, 0.66 ) }
    dend_2 { pt3dadd( -17.5236, 18.1607, -14.0268, 0.66 ) }
    dend_2 { pt3dadd( -17.7328, 18.6056, -15.2992, 0.88 ) }
    dend_2 { pt3dadd( -18.1339, 19.3559, -17.1861, 0.88 ) }
    dend_2 { pt3dadd( -18.7489, 20.6286, -20.4473, 0.88 ) }
    dend_2 { pt3dadd( -18.9215, 21.0022, -21.4823, 0.88 ) }
    dend_2 { pt3dadd( -19.17, 21.4045, -22.7072, 1.47 ) }
    dend_2 { pt3dadd( -19.7078, 22.0224, -25.0898, 0.59 ) }
    dend_2 { pt3dadd( -19.8717, 22.1568, -25.8893, 1.18 ) }
    dend_2 { pt3dadd( -20.1547, 22.3113, -28.7382, 0.81 ) }
    dend_2 { pt3dadd( -20.0834, 22.2644, -30.1093, 0.81 ) }
    dend_2 { pt3dadd( -19.8964, 22.1701, -31.5077, 0.51 ) }
    dend_2 { pt3dadd( -19.5777, 22.0332, -33.283, 0.51 ) }
    dend_2 { pt3dadd( -19.0282, 21.8879, -35.749, 0.51 ) }
    dend_2 { pt3dadd( -18.4373, 21.7316, -38.3313, 0.51 ) }
    dend_2 { pt3dadd( -17.5496, 21.6133, -42.082, 0.51 ) }
    dend_2 { pt3dadd( -17.2216, 21.6185, -43.2958, 0.51 ) }
    dend_2 { pt3dadd( -16.8858, 21.6641, -44.3728, 0.51 ) }
    dend_2 { pt3dadd( -16.6331, 21.738, -45.1575, 0.51 ) }
    // Section: dend_28, id: dend_28, parent: dend_18 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 3.38701, 12.0327, -8.32925, 0.51 ) }
    dend_28 { pt3dadd( 2.44783, 13.4192, -8.34841, 0.51 ) }
    dend_28 { pt3dadd( 1.84486, 14.059, -8.39877, 0.51 ) }
    dend_28 { pt3dadd( 1.22129, 14.5144, -8.45434, 0.51 ) }
    dend_28 { pt3dadd( 0.4542, 14.9764, -8.51768, 0.51 ) }
    dend_28 { pt3dadd( -0.507768, 15.4664, -8.58915, 0.22 ) }
    dend_28 { pt3dadd( -1.17508, 15.7817, -8.64841, 0.59 ) }
    dend_28 { pt3dadd( -2.68563, 16.39, -8.82941, 1.62 ) }
    dend_28 { pt3dadd( -4.39691, 17.0176, -9.06453, 0.22 ) }
    dend_28 { pt3dadd( -5.51729, 17.4258, -9.24286, 0.95 ) }
    dend_28 { pt3dadd( -6.60258, 17.8417, -9.42854, 1.1 ) }
    dend_28 { pt3dadd( -7.77941, 18.3324, -9.64392, 0.59 ) }
    dend_28 { pt3dadd( -9.0038, 18.896, -9.90151, 1.76 ) }
    dend_28 { pt3dadd( -9.43103, 19.1074, -10.0064, 1.76 ) }
    dend_28 { pt3dadd( -10.7335, 19.7777, -10.3807, 0.07 ) }
    dend_28 { pt3dadd( -11.5537, 20.1988, -10.6507, 0.59 ) }
    dend_28 { pt3dadd( -12.3379, 20.6268, -10.9261, 0.37 ) }
    dend_28 { pt3dadd( -13.1194, 21.0803, -11.2473, 1.03 ) }
    dend_28 { pt3dadd( -14.0356, 21.6797, -11.7486, 0.59 ) }
    dend_28 { pt3dadd( -14.3618, 21.9412, -11.9576, 0.59 ) }
    dend_28 { pt3dadd( -14.9181, 22.4681, -12.3445, 0.22 ) }
    dend_28 { pt3dadd( -15.536, 23.1464, -12.8162, 0.22 ) }
    dend_28 { pt3dadd( -16.3933, 24.2296, -13.5527, 2.2 ) }
    dend_28 { pt3dadd( -17.0871, 25.2002, -14.2218, 2.2 ) }
    dend_28 { pt3dadd( -17.9482, 26.4942, -15.0897, 0.15 ) }
    dend_28 { pt3dadd( -18.3601, 27.1154, -15.5006, 0.15 ) }
    dend_28 { pt3dadd( -18.717, 27.6701, -15.8313, 0.66 ) }
    dend_28 { pt3dadd( -19.7063, 29.1776, -16.6467, 0.07 ) }
    dend_28 { pt3dadd( -20.2817, 29.9774, -17.0228, 0.95 ) }
    dend_28 { pt3dadd( -20.8521, 30.694, -17.3486, 0.07 ) }
    dend_28 { pt3dadd( -21.998, 31.9587, -17.9385, 0.44 ) }
    dend_28 { pt3dadd( -23.3283, 33.2142, -18.4912, 0.15 ) }
    dend_28 { pt3dadd( -24.1781, 33.9035, -18.759, 1.32 ) }
    dend_28 { pt3dadd( -25.909, 35.1278, -19.1455, 0.07 ) }
    dend_28 { pt3dadd( -26.813, 35.7301, -19.3054, 0.07 ) }
    dend_28 { pt3dadd( -28.0001, 36.4883, -19.48, 0.07 ) }
    dend_28 { pt3dadd( -29.4078, 37.3631, -19.6489, 1.1 ) }
    dend_28 { pt3dadd( -30.0835, 37.787, -19.7367, 0.07 ) }
    dend_28 { pt3dadd( -30.7427, 38.262, -19.8137, 0.73 ) }
    dend_28 { pt3dadd( -31.8729, 39.2932, -19.9086, 0.15 ) }
    dend_28 { pt3dadd( -32.4003, 39.8797, -19.942, 0.15 ) }
    dend_28 { pt3dadd( -32.8712, 40.4986, -19.9927, 0.15 ) }
    dend_28 { pt3dadd( -33.4079, 41.2709, -20.0922, 1.84 ) }
    dend_28 { pt3dadd( -33.8068, 41.8509, -20.1732, 1.84 ) }
    dend_28 { pt3dadd( -34.6649, 43.0495, -20.359, 0.07 ) }
    dend_28 { pt3dadd( -35.194, 43.745, -20.4818, 0.95 ) }
    dend_28 { pt3dadd( -35.9366, 44.7215, -20.6647, 0.07 ) }
    dend_28 { pt3dadd( -36.527, 45.5358, -20.827, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 82/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 3.38701, 12.0327, -8.32925, 1.25 ) }
    dend_19 { pt3dadd( 3.62364, 12.4728, -9.85859, 1.25 ) }
    dend_19 { pt3dadd( 3.77967, 13.0468, -12.1895, 2.06 ) }
    dend_19 { pt3dadd( 3.83117, 13.3672, -13.694, 1.76 ) }
    dend_19 { pt3dadd( 3.83121, 13.7122, -15.8164, 1.76 ) }
    dend_19 { pt3dadd( 3.83124, 13.9421, -17.2305, 1.76 ) }
    dend_19 { pt3dadd( 3.83127, 14.1798, -18.6929, 1.76 ) }
    dend_19 { pt3dadd( 3.72804, 14.3232, -19.9795, 1.76 ) }
    dend_19 { pt3dadd( 3.64763, 14.34, -20.3971, 1.76 ) }
    dend_19 { pt3dadd( 2.99897, 14.3954, -22.7169, 1.76 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 92/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -25.4143, 41.6753, 20.9523, 0.37 ) }
    dend_10 { pt3dadd( -25.525, 42.9858, 21.2477, 0.37 ) }
    dend_10 { pt3dadd( -25.6307, 44.0508, 21.4667, 0.66 ) }
    dend_10 { pt3dadd( -25.7559, 44.9297, 21.6339, 0.29 ) }
    dend_10 { pt3dadd( -25.9109, 45.7508, 21.778, 0.66 ) }
    dend_10 { pt3dadd( -26.0767, 46.4097, 21.9014, 0.66 ) }
    dend_10 { pt3dadd( -26.2284, 47.0125, 22.0143, 0.66 ) }
    dend_10 { pt3dadd( -26.4327, 47.5958, 22.1332, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_10 { pt3dadd( -26.6603, 48.1449, 22.2376, 0.07 ) }
    dend_10 { pt3dadd( -26.8895, 48.6367, 22.2901, 0.07 ) }
    dend_10 { pt3dadd( -27.2462, 49.2631, 22.3415, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 3/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -25.4143, 41.6753, 20.9523, 0.51 ) }
    dend_9 { pt3dadd( -25.4871, 42.3513, 21.3132, 0.51 ) }
    dend_9 { pt3dadd( -25.6307, 43.5755, 21.9227, 0.44 ) }
    dend_9 { pt3dadd( -25.7259, 44.4977, 22.3385, 0.29 ) }
    dend_9 { pt3dadd( -25.8001, 45.3335, 22.73, 0.29 ) }
    dend_9 { pt3dadd( -25.8776, 46.0308, 23.0712, 0.29 ) }
    dend_9 { pt3dadd( -25.9953, 46.8527, 23.4772, 0.29 ) }
    dend_9 { pt3dadd( -26.1218, 47.5431, 23.8178, 0.29 ) }
    dend_9 { pt3dadd( -26.3868, 48.6506, 24.3138, 0.29 ) }
    dend_9 { pt3dadd( -26.6892, 49.7011, 24.8121, 0.29 ) }
    dend_9 { pt3dadd( -26.9178, 50.4593, 25.2051, 0.29 ) }
    dend_9 { pt3dadd( -27.1609, 51.339, 25.7085, 0.29 ) }
    dend_9 { pt3dadd( -27.3668, 52.3315, 26.3378, 0.29 ) }
    dend_9 { pt3dadd( -27.4546, 53.2555, 26.9837, 0.29 ) }
    dend_9 { pt3dadd( -27.4154, 53.7364, 27.3746, 0.29 ) }
    dend_9 { pt3dadd( -27.2873, 54.211, 27.7728, 0.29 ) }
    dend_9 { pt3dadd( -26.9514, 54.9809, 28.4632, 0.29 ) }
    dend_9 { pt3dadd( -26.5922, 55.5664, 29.043, 0.29 ) }
    dend_9 { pt3dadd( -26.0673, 56.2608, 29.7768, 0.29 ) }
    dend_9 { pt3dadd( -25.7333, 56.6617, 30.2552, 0.44 ) }
    dend_9 { pt3dadd( -25.4898, 56.965, 30.6031, 0.44 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 24/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -0.231044, 52.6719, -19.0212, 0.15 ) }
    dend_7 { pt3dadd( -1.48773, 53.0309, -19.9019, 0.15 ) }
    dend_7 { pt3dadd( -2.35951, 53.2371, -20.5359, 0.15 ) }
    dend_7 { pt3dadd( -2.99619, 53.4116, -21.0027, 0.22 ) }
    dend_7 { pt3dadd( -3.69465, 53.6308, -21.523, 0.88 ) }
    dend_7 { pt3dadd( -4.76543, 54.0161, -22.3059, 0.07 ) }
    dend_7 { pt3dadd( -6.23028, 54.5775, -23.3505, 1.25 ) }
    dend_7 { pt3dadd( -7.97262, 55.2488, -24.5396, 0.07 ) }
    dend_7 { pt3dadd( -8.87789, 55.5933, -25.1149, 0.66 ) }
    dend_7 { pt3dadd( -9.31929, 55.756, -25.3711, 0.59 ) }
    dend_7 { pt3dadd( -10.107, 56.0343, -25.7979, 0.07 ) }
    dend_7 { pt3dadd( -10.4236, 56.1356, -25.9645, 0.07 ) }
    dend_7 { pt3dadd( -11.3992, 56.4099, -26.4204, 0.07 ) }
    dend_7 { pt3dadd( -12.6622, 56.6922, -26.9454, 2.13 ) }
    dend_7 { pt3dadd( -13.8852, 56.8669, -27.4475, 0.07 ) }
    dend_7 { pt3dadd( -15.0055, 56.9671, -27.9121, 2.06 ) }
    dend_7 { pt3dadd( -16.8871, 57.0395, -28.7464, 0.07 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 41/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.231044, 52.6719, -19.0212, 0.44 ) }
    dend_6 { pt3dadd( 0.784246, 53.2704, -18.5466, 0.44 ) }
    dend_6 { pt3dadd( 1.3241, 53.6533, -18.361, 1.03 ) }
    dend_6 { pt3dadd( 1.65327, 53.9448, -18.2683, 1.03 ) }
    dend_6 { pt3dadd( 2.27875, 54.6679, -18.215, 0.07 ) }
    dend_6 { pt3dadd( 2.66026, 55.2527, -18.2547, 0.73 ) }
    dend_6 { pt3dadd( 3.12574, 56.1846, -18.4619, 0.22 ) }
    dend_6 { pt3dadd( 3.33779, 56.874, -18.7387, 0.22 ) }
    dend_6 { pt3dadd( 3.50243, 57.5101, -19.062, 1.03 ) }
    dend_6 { pt3dadd( 3.86578, 58.7744, -19.9151, 0.07 ) }
    dend_6 { pt3dadd( 4.0289, 59.2262, -20.2849, 0.51 ) }
    dend_6 { pt3dadd( 4.40525, 59.972, -20.9664, 0.07 ) }
    dend_6 { pt3dadd( 4.63284, 60.2949, -21.2902, 0.07 ) }
    dend_6 { pt3dadd( 5.37247, 61.059, -22.0542, 0.88 ) }
    dend_6 { pt3dadd( 6.34793, 61.8642, -22.9024, 0.44 ) }
    dend_6 { pt3dadd( 6.90766, 62.23, -23.2836, 0.81 ) }
    dend_6 { pt3dadd( 7.68624, 62.6608, -23.7619, 0.29 ) }
    dend_6 { pt3dadd( 7.95634, 62.7884, -23.9004, 0.29 ) }
    dend_6 { pt3dadd( 8.58237, 63.0504, -24.1979, 0.66 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 60/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 2.99897, 14.3954, -22.7169, 1.1 ) }
    dend_23 { pt3dadd( 3.7804, 14.706, -22.2292, 1.1 ) }
    dend_23 { pt3dadd( 4.36474, 14.8379, -21.8832, 1.1 ) }
    dend_23 { pt3dadd( 4.99564, 14.9729, -21.5368, 1.1 ) }
    dend_23 { pt3dadd( 6.03913, 15.2313, -21.0282, 1.1 ) }
    dend_23 { pt3dadd( 7.48114, 15.6705, -20.3838, 1.32 ) }
    dend_23 { pt3dadd( 9.13493, 16.2443, -19.7411, 1.32 ) }
    dend_23 { pt3dadd( 10.748, 16.9811, -19.2411, 1.03 ) }
    dend_23 { pt3dadd( 11.3253, 17.2648, -19.0582, 1.03 ) }
    dend_23 { pt3dadd( 12.3298, 17.773, -18.7397, 1.03 ) }
    dend_23 { pt3dadd( 13.5421, 18.3779, -18.3771, 1.03 ) }
    dend_23 { pt3dadd( 14.5437, 18.8477, -18.2407, 1.03 ) }
    dend_23 { pt3dadd( 15.8873, 19.6397, -18.2923, 2.2 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 73/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 2.99897, 14.3954, -22.7169, 0.95 ) }
    dend_20 { pt3dadd( 2.27022, 14.2124, -23.7113, 0.95 ) }
    dend_20 { pt3dadd( 1.68662, 14.0144, -24.4882, 1.18 ) }
    dend_20 { pt3dadd( 0.267788, 13.6026, -26.241, 0.73 ) }
    dend_20 { pt3dadd( -0.412473, 13.5284, -26.9925, 0.73 ) }
    dend_20 { pt3dadd( -1.1791, 13.5848, -27.7701, 0.73 ) }
    dend_20 { pt3dadd( -1.70628, 13.6919, -28.2602, 0.73 ) }
    dend_20 { pt3dadd( -1.99343, 13.7845, -28.4772, 1.03 ) }
    dend_20 { pt3dadd( -2.80578, 14.0889, -28.9603, 0.29 ) }
    dend_20 { pt3dadd( -4.28047, 14.7234, -29.6822, 0.15 ) }
    dend_20 { pt3dadd( -5.22467, 15.2007, -30.17, 0.15 ) }
    dend_20 { pt3dadd( -6.44646, 15.9147, -30.8474, 1.76 ) }
    dend_20 { pt3dadd( -7.43307, 16.4658, -31.4106, 2.13 ) }
    dend_20 { pt3dadd( -8.23783, 16.8501, -31.9424, 2.13 ) }
    dend_20 { pt3dadd( -9.38338, 17.3153, -32.8489, 0.81 ) }
    dend_20 { pt3dadd( -10.2777, 17.6522, -33.6312, 0.44 ) }
    dend_20 { pt3dadd( -11.069, 18.0226, -34.3586, 0.81 ) }
    dend_20 { pt3dadd( -12.0619, 18.6912, -35.412, 0.88 ) }
    dend_20 { pt3dadd( -13.1282, 19.7041, -36.7919, 0.44 ) }
    dend_20 { pt3dadd( -13.8181, 20.5403, -37.7857, 0.44 ) }
    dend_20 { pt3dadd( -14.2493, 21.1507, -38.3953, 1.98 ) }
    dend_20 { pt3dadd( -14.8137, 22.1173, -39.2708, 2.35 ) }
    dend_20 { pt3dadd( -15.4026, 23.6434, -40.5579, 0.29 ) }
    dend_20 { pt3dadd( -15.6438, 24.6935, -41.4134, 0.29 ) }
    dend_20 { pt3dadd( -15.7822, 25.6027, -42.1553, 1.84 ) }
    dend_20 { pt3dadd( -15.902, 26.4696, -42.9514, 1.84 ) }
    dend_20 { pt3dadd( -16.1396, 27.8247, -44.4368, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_20 { pt3dadd( -16.4397, 29.0718, -46.0629, 1.84 ) }
    dend_20 { pt3dadd( -16.8609, 30.4881, -48.0892, 0.73 ) }
    dend_20 { pt3dadd( -17.1718, 31.4757, -49.5675, 2.42 ) }
    dend_20 { pt3dadd( -17.6345, 32.9475, -51.8972, 0.95 ) }
    dend_20 { pt3dadd( -18.0828, 34.226, -54.0635, 0.59 ) }
    dend_20 { pt3dadd( -18.5769, 35.2333, -55.8829, 1.25 ) }
    dend_20 { pt3dadd( -18.9254, 35.7313, -56.8526, 2.72 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 7/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -27.2462, 49.2631, 22.3415, 0.29 ) }
    dend_12 { pt3dadd( -27.3306, 49.9066, 23.0004, 0.29 ) }
    dend_12 { pt3dadd( -27.2692, 50.7825, 23.966, 0.59 ) }
    dend_12 { pt3dadd( -27.2238, 51.0747, 24.303, 0.22 ) }
    dend_12 { pt3dadd( -27.1113, 51.6107, 24.9244, 0.44 ) }
    dend_12 { pt3dadd( -26.9431, 52.4229, 25.8132, 0.59 ) }
    dend_12 { pt3dadd( -26.7228, 53.6268, 27.003, 0.22 ) }
    dend_12 { pt3dadd( -26.5034, 54.6552, 27.931, 0.22 ) }
    dend_12 { pt3dadd( -26.3468, 55.2682, 28.4822, 0.22 ) }
    dend_12 { pt3dadd( -26.1892, 55.8743, 29.0262, 0.37 ) }
    dend_12 { pt3dadd( -26.0145, 56.5354, 29.5811, 0.37 ) }
    dend_12 { pt3dadd( -25.7994, 57.4906, 30.2007, 0.07 ) }
    dend_12 { pt3dadd( -25.7596, 58.0941, 30.454, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 20/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -27.2462, 49.2631, 22.3415, 0.22 ) }
    dend_11 { pt3dadd( -27.9634, 48.7175, 22.9957, 0.22 ) }
    dend_11 { pt3dadd( -28.7469, 48.0599, 23.5253, 0.22 ) }
    dend_11 { pt3dadd( -29.7644, 47.2332, 23.9853, 1.1 ) }
    dend_11 { pt3dadd( -30.8356, 46.4158, 24.3136, 1.47 ) }
    dend_11 { pt3dadd( -32.0984, 45.5665, 24.553, 0.22 ) }
    dend_11 { pt3dadd( -33.2938, 44.8665, 24.7014, 0.22 ) }
    dend_11 { pt3dadd( -33.9812, 44.5337, 24.6852, 0.22 ) }
    dend_11 { pt3dadd( -35.1129, 44.1732, 24.5201, 0.88 ) }
    dend_11 { pt3dadd( -36.1085, 44.0263, 24.2922, 0.15 ) }
    dend_11 { pt3dadd( -37.3102, 44.1236, 23.9936, 0.07 ) }
    dend_11 { pt3dadd( -38.0671, 44.3217, 23.834, 0.07 ) }
    dend_11 { pt3dadd( -38.5186, 44.5114, 23.7566, 1.03 ) }
    dend_11 { pt3dadd( -40.0338, 45.3654, 23.5101, 0.07 ) }
    dend_11 { pt3dadd( -40.4088, 45.6508, 23.457, 0.07 ) }
    dend_11 { pt3dadd( -41.0571, 46.296, 23.3629, 1.47 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 36/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 15.8873, 19.6397, -18.2923, 0.22 ) }
    dend_25 { pt3dadd( 16.9619, 20.0144, -17.1738, 0.22 ) }
    dend_25 { pt3dadd( 18.0971, 20.5204, -16.0395, 0.22 ) }
    dend_25 { pt3dadd( 19.3131, 21.1835, -14.8249, 1.76 ) }
    dend_25 { pt3dadd( 20.844, 22.1523, -13.2497, 0.37 ) }
    dend_25 { pt3dadd( 21.2624, 22.4378, -12.804, 0.37 ) }
    dend_25 { pt3dadd( 21.9622, 22.9318, -12.0275, 0.73 ) }
    dend_25 { pt3dadd( 22.6564, 23.4565, -11.1972, 0.29 ) }
    dend_25 { pt3dadd( 23.1547, 23.8418, -10.654, 0.29 ) }
    dend_25 { pt3dadd( 23.7313, 24.2738, -10.1089, 0.29 ) }
    dend_25 { pt3dadd( 24.2708, 24.6091, -9.68238, 0.29 ) }
    dend_25 { pt3dadd( 24.8301, 24.8863, -9.24418, 0.29 ) }
    dend_25 { pt3dadd( 25.3461, 25.0927, -8.86013, 1.03 ) }
    dend_25 { pt3dadd( 26.0592, 25.3571, -8.35234, 1.54 ) }
    dend_25 { pt3dadd( 27.0864, 25.7704, -7.60272, 0.07 ) }
    dend_25 { pt3dadd( 27.9119, 26.1787, -7.01842, 0.07 ) }
    dend_25 { pt3dadd( 28.9112, 26.7654, -6.31015, 2.28 ) }
    dend_25 { pt3dadd( 29.3931, 27.081, -5.97552, 2.28 ) }
    dend_25 { pt3dadd( 30.8113, 28.0834, -4.94396, 0.29 ) }
    dend_25 { pt3dadd( 32.3597, 29.2626, -3.79714, 2.13 ) }
    dend_25 { pt3dadd( 33.3846, 30.0722, -3.0381, 0.07 ) }
    dend_25 { pt3dadd( 33.5856, 30.2401, -2.90188, 0.07 ) }
    dend_25 { pt3dadd( 34.3233, 30.891, -2.41731, 0.44 ) }
    dend_25 { pt3dadd( 35.0549, 31.5643, -1.95149, 0.07 ) }
    dend_25 { pt3dadd( 35.5166, 32.0149, -1.69824, 0.07 ) }
    dend_25 { pt3dadd( 36.7083, 33.1738, -1.10089, 2.35 ) }
    dend_25 { pt3dadd( 37.6823, 34.0695, -0.568027, 0.07 ) }
    dend_25 { pt3dadd( 38.2226, 34.5678, -0.308629, 0.07 ) }
    dend_25 { pt3dadd( 38.4774, 34.8119, -0.201317, 0.07 ) }
    dend_25 { pt3dadd( 39.4284, 35.7256, 0.157257, 2.35 ) }
    dend_25 { pt3dadd( 40.9152, 37.0952, 0.679772, 0.37 ) }
    dend_25 { pt3dadd( 41.9826, 38.0098, 0.987159, 0.73 ) }
    dend_25 { pt3dadd( 43.24, 38.9688, 1.32762, 1.76 ) }
    dend_25 { pt3dadd( 43.7969, 39.3766, 1.45437, 2.72 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 70/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 15.8873, 19.6397, -18.2923, 0.37 ) }
    dend_24 { pt3dadd( 14.9922, 19.4791, -19.2153, 0.37 ) }
    dend_24 { pt3dadd( 14.1097, 19.2579, -20.2555, 0.37 ) }
    dend_24 { pt3dadd( 13.474, 19.0837, -21.0544, 1.62 ) }
    dend_24 { pt3dadd( 12.669, 18.8917, -22.0118, 1.62 ) }
    dend_24 { pt3dadd( 11.1041, 18.5206, -23.9547, 0.15 ) }
    dend_24 { pt3dadd( 9.51138, 18.1482, -25.9114, 1.69 ) }
    dend_24 { pt3dadd( 8.12095, 17.7769, -27.667, 1.91 ) }
    dend_24 { pt3dadd( 6.80807, 17.3775, -29.454, 0.29 ) }
    dend_24 { pt3dadd( 5.9613, 17.0767, -30.8553, 1.84 ) }
    dend_24 { pt3dadd( 4.79298, 16.5732, -33.1591, 2.06 ) }
    dend_24 { pt3dadd( 4.24734, 16.3048, -34.448, 0.15 ) }
    dend_24 { pt3dadd( 3.43964, 15.9042, -36.5231, 0.15 ) }
    dend_24 { pt3dadd( 2.24801, 15.3835, -39.6593, 1.18 ) }
    dend_24 { pt3dadd( 1.00675, 14.9063, -43.1393, 0.88 ) }
    dend_24 { pt3dadd( 0.62225, 14.7827, -44.2852, 1.1 ) }
    dend_24 { pt3dadd( -0.0285912, 14.711, -46.145, 1.1 ) }
    dend_24 { pt3dadd( -0.757823, 14.8504, -48.2367, 1.4 ) }
    dend_24 { pt3dadd( -1.27244, 15.2372, -49.4197, 0.22 ) }
    dend_24 { pt3dadd( -1.55916, 15.665, -49.8573, 0.59 ) }
    dend_24 { pt3dadd( -1.71578, 15.9811, -50.0062, 1.1 ) }
    dend_24 { pt3dadd( -2.14111, 17.2587, -50.401, 0.15 ) }
    dend_24 { pt3dadd( -2.43462, 18.5833, -50.6842, 2.13 ) }
    dend_24 { pt3dadd( -2.6632, 20.3413, -51.0588, 0.07 ) }
    dend_24 { pt3dadd( -2.74182, 21.1557, -51.2752, 0.07 ) }
    dend_24 { pt3dadd( -2.83294, 22.3059, -51.6125, 1.54 ) }
    dend_24 { pt3dadd( -2.97354, 24.3108, -52.2268, 0.07 ) }
    dend_24 { pt3dadd( -3.0989, 25.6343, -52.6962, 1.54 ) }
    dend_24 { pt3dadd( -3.27071, 27.1108, -53.2483, 0.59 ) }
    dend_24 { pt3dadd( -3.38931, 27.9172, -53.5895, 1.76 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_24 { pt3dadd( -3.55786, 28.7964, -54.039, 0.95 ) }
    dend_24 { pt3dadd( -3.76352, 29.6293, -54.5852, 1.69 ) }
    dend_24 { pt3dadd( -4.27375, 31.3661, -56.0012, 0.07 ) }
    dend_24 { pt3dadd( -4.47063, 32.0234, -56.6106, 0.88 ) }
    dend_24 { pt3dadd( -4.75997, 32.9561, -57.5615, 0.07 ) }
    dend_24 { pt3dadd( -5.17756, 34.2679, -59.0043, 1.32 ) }
    dend_24 { pt3dadd( -5.78674, 36.0128, -61.1112, 0.29 ) }
    dend_24 { pt3dadd( -6.18248, 37.0449, -62.4733, 0.29 ) }
    dend_24 { pt3dadd( -6.2207, 37.1751, -62.6513, 0.29 ) }
    dend_24 { pt3dadd( -6.29425, 37.524, -63.1951, 0.44 ) }
    dend_24 { pt3dadd( -6.32307, 37.8185, -63.6674, 0.44 ) }
    dend_24 { pt3dadd( -6.29868, 38.2451, -64.3689, 0.44 ) }
    dend_24 { pt3dadd( -6.07664, 39.2502, -66.2515, 1.98 ) }
    dend_24 { pt3dadd( -5.76996, 40.0079, -68.255, 0.07 ) }
    dend_24 { pt3dadd( -5.20794, 40.758, -71.6074, 0.22 ) }
    dend_24 { pt3dadd( -5.02516, 40.8832, -72.6542, 1.4 ) }
    dend_24 { pt3dadd( -4.75051, 40.9432, -74.16, 1.4 ) }
    dend_24 { pt3dadd( -4.42314, 40.8225, -75.9913, 1.54 ) }
    dend_24 { pt3dadd( -4.02255, 40.2538, -78.8887, 0.51 ) }
    dend_24 { pt3dadd( -3.90739, 39.4354, -81.4489, 0.29 ) }
    dend_24 { pt3dadd( -3.94364, 38.9964, -82.4574, 0.29 ) }
    dend_24 { pt3dadd( -3.99134, 38.7907, -82.8619, 0.29 ) }
    dend_24 { pt3dadd( -4.38546, 37.7906, -84.5667, 2.06 ) }
    dend_24 { pt3dadd( -5.12545, 36.4886, -86.4975, 2.28 ) }
    dend_24 { pt3dadd( -6.29064, 34.8866, -88.3819, 0.44 ) }
    dend_24 { pt3dadd( -7.01182, 34.0169, -89.1183, 0.95 ) }
    dend_24 { pt3dadd( -7.49358, 33.4677, -89.4447, 0.22 ) }
    dend_24 { pt3dadd( -8.3029, 32.6073, -89.7805, 0.88 ) }
    dend_24 { pt3dadd( -9.21192, 31.6833, -89.9841, 0.07 ) }
    dend_24 { pt3dadd( -10.4595, 30.4176, -90.1061, 2.06 ) }
    dend_24 { pt3dadd( -11.884, 29.0131, -90.1613, 0.07 ) }
    dend_24 { pt3dadd( -13.1601, 27.794, -90.2326, 0.15 ) }
    dend_24 { pt3dadd( -14.3523, 26.7213, -90.3641, 1.84 ) }
    dend_24 { pt3dadd( -15.7522, 25.5448, -90.5917, 0.07 ) }
    dend_24 { pt3dadd( -16.1821, 25.2221, -90.6953, 0.44 ) }
    dend_24 { pt3dadd( -16.8533, 24.7995, -90.9063, 0.07 ) }
    dend_24 { pt3dadd( -17.4438, 24.4686, -91.2244, 1.25 ) }
    dend_24 { pt3dadd( -18.6412, 23.8527, -91.9429, 0.07 ) }
    dend_24 { pt3dadd( -19.4539, 23.4545, -92.4722, 1.25 ) }
    dend_24 { pt3dadd( -20.9804, 22.7317, -93.4903, 0.07 ) }
    dend_24 { pt3dadd( -21.7437, 22.3497, -94.0462, 1.54 ) }
    dend_24 { pt3dadd( -24.5265, 20.8041, -96.2927, 0.07 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 42/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -18.9254, 35.7313, -56.8526, 0.29 ) }
    dend_22 { pt3dadd( -19.1485, 37.1224, -58.5335, 0.29 ) }
    dend_22 { pt3dadd( -19.194, 37.3723, -58.888, 0.66 ) }
    dend_22 { pt3dadd( -19.3367, 37.9383, -59.9207, 0.95 ) }
    dend_22 { pt3dadd( -19.5933, 38.6275, -61.2409, 0.07 ) }
    dend_22 { pt3dadd( -19.9963, 39.3731, -62.7355, 2.2 ) }
    dend_22 { pt3dadd( -21.1699, 41.0337, -66.3331, 0.51 ) }
    dend_22 { pt3dadd( -21.8087, 41.6793, -67.9606, 0.95 ) }
    dend_22 { pt3dadd( -23.0888, 42.7407, -70.9938, 0.07 ) }
    dend_22 { pt3dadd( -23.7956, 43.1965, -72.5287, 1.54 ) }
    dend_22 { pt3dadd( -24.7198, 43.6216, -74.2943, 0.07 ) }
    dend_22 { pt3dadd( -25.6679, 43.9004, -75.8483, 1.54 ) }
    dend_22 { pt3dadd( -26.2719, 43.9905, -76.6257, 0.15 ) }
    dend_22 { pt3dadd( -27.283, 44.0503, -77.7161, 0.44 ) }
    dend_22 { pt3dadd( -28.1056, 44.0478, -78.4753, 0.44 ) }
    dend_22 { pt3dadd( -28.8538, 43.9927, -79.1641, 1.25 ) }
    dend_22 { pt3dadd( -29.2585, 43.9518, -79.4888, 1.25 ) }
    dend_22 { pt3dadd( -30.558, 43.8077, -80.3764, 0.22 ) }
    dend_22 { pt3dadd( -31.5414, 43.6833, -80.973, 1.62 ) }
    dend_22 { pt3dadd( -33.2516, 43.4953, -82.0284, 0.07 ) }
    dend_22 { pt3dadd( -34.6245, 43.4103, -83.0222, 0.07 ) }
    dend_22 { pt3dadd( -35.5478, 43.3781, -83.7619, 1.69 ) }
    dend_22 { pt3dadd( -37.2041, 43.3144, -85.1355, 0.29 ) }
    dend_22 { pt3dadd( -37.7899, 43.2848, -85.6213, 0.66 ) }
    dend_22 { pt3dadd( -40.2516, 43.0902, -87.7171, 1.91 ) }
    dend_22 { pt3dadd( -42.758, 42.7653, -89.8138, 0.07 ) }
    dend_22 { pt3dadd( -43.2089, 42.6753, -90.1852, 0.44 ) }
    dend_22 { pt3dadd( -44.1639, 42.4171, -90.9501, 0.07 ) }
    dend_22 { pt3dadd( -45.0807, 42.1052, -91.616, 0.59 ) }
    dend_22 { pt3dadd( -45.8944, 41.7674, -92.2814, 0.07 ) }
    dend_22 { pt3dadd( -46.7915, 41.3233, -93.0014, 1.98 ) }
    dend_22 { pt3dadd( -48.0339, 40.6598, -94.0426, 0.07 ) }
    dend_22 { pt3dadd( -48.4816, 40.4228, -94.4181, 1.18 ) }
    dend_22 { pt3dadd( -49.8647, 39.6803, -95.5821, 0.15 ) }
    dend_22 { pt3dadd( -52.8288, 37.9993, -98.0377, 0.07 ) }
    dend_22 { pt3dadd( -53.712, 37.4555, -98.7189, 0.07 ) }
    dend_22 { pt3dadd( -55.06, 36.6022, -99.7894, 1.98 ) }
    dend_22 { pt3dadd( -56.4011, 35.7328, -100.808, 0.07 ) }
    dend_22 { pt3dadd( -56.9841, 35.317, -101.218, 0.73 ) }
    dend_22 { pt3dadd( -57.5538, 34.8263, -101.458, 0.22 ) }
    dend_22 { pt3dadd( -58.4127, 34.0035, -101.343, 1.1 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 83/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -18.9254, 35.7313, -56.8526, 0.15 ) }
    dend_21 { pt3dadd( -19.9763, 36.4229, -57.5781, 0.15 ) }
    dend_21 { pt3dadd( -20.5781, 37.0196, -58.0776, 0.15 ) }
    dend_21 { pt3dadd( -20.8164, 37.301, -58.2771, 0.07 ) }
    dend_21 { pt3dadd( -21.0247, 37.5545, -58.4627, 0.73 ) }
    dend_21 { pt3dadd( -21.7193, 38.3229, -59.0098, 0.07 ) }
    dend_21 { pt3dadd( -22.321, 38.8981, -59.4853, 1.76 ) }
    dend_21 { pt3dadd( -22.964, 39.5793, -60.0469, 0.15 ) }
    dend_21 { pt3dadd( -23.3828, 40.0244, -60.4073, 0.51 ) }
    dend_21 { pt3dadd( -24.273, 40.9203, -61.1707, 0.07 ) }
    dend_21 { pt3dadd( -25.1066, 41.6854, -61.8515, 1.1 ) }
    dend_21 { pt3dadd( -26.4262, 42.7135, -62.7864, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 95/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 43.7969, 39.3766, 1.45437, 0.59 ) }
    dend_27 { pt3dadd( 45.6877, 40.9606, 4.88977, 0.59 ) }
    dend_27 { pt3dadd( 46.3889, 41.6712, 6.21275, 0.59 ) }
    dend_27 { pt3dadd( 46.8042, 42.1306, 6.97659, 0.59 ) }
    dend_27 { pt3dadd( 47.3903, 42.779, 8.05444, 2.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 48.0346, 43.4918, 9.23928, 1.03 ) }
    dend_27 { pt3dadd( 48.6492, 44.1717, 10.3696, 0.66 ) }
    dend_27 { pt3dadd( 48.7907, 44.4279, 10.6166, 0.66 ) }
    dend_27 { pt3dadd( 48.9953, 44.9175, 10.9923, 0.66 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 4/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 43.7969, 39.3766, 1.45437, 0.66 ) }
    dend_26 { pt3dadd( 45.3902, 39.7406, 1.12075, 0.66 ) }
    dend_26 { pt3dadd( 46.0621, 39.8825, 0.997294, 0.95 ) }
    dend_26 { pt3dadd( 46.8474, 40.0485, 0.852998, 1.03 ) }
    dend_26 { pt3dadd( 47.9885, 40.2896, 0.643328, 1.69 ) }
    dend_26 { pt3dadd( 49.9226, 40.6983, 0.287939, 0.07 ) }
    dend_26 { pt3dadd( 50.74, 40.8711, 0.137746, 0.07 ) }
    dend_26 { pt3dadd( 51.6625, 41.0231, -0.147454, 1.1 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_47, dend_46, dend_41, dend_38, dend_35, dend_30, dend_13, dend_0, dend_45, dend_42, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_17, dend_14, dend_4, dend_1, dend_44, dend_43, dend_33, dend_32, dend_29, dend_18, dend_16, dend_15, dend_8, dend_5, dend_3, dend_2, dend_28, dend_19, dend_10, dend_9, dend_7, dend_6, dend_23, dend_20, dend_12, dend_11, dend_25, dend_24, dend_22, dend_21, dend_27, dend_26]}
    ModelViewParmSubset_2 = new SectionList()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_47, dend_46, dend_41, dend_38, dend_35, dend_30, dend_13, dend_0, dend_45, dend_42, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_17, dend_14, dend_4, dend_1, dend_44, dend_43, dend_33, dend_32, dend_29, dend_18, dend_16, dend_15, dend_8, dend_5, dend_3, dend_2, dend_28, dend_19, dend_10, dend_9, dend_7, dend_6, dend_23, dend_20, dend_12, dend_11, dend_25, dend_24, dend_22, dend_21, dend_27, dend_26]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_48 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_36 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_15 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_5 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_28 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_20 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_25 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_24 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_13 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_17 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_18 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_47 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_46 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_19 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_35 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_30 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_38 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_40 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_23 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_41 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_29 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_34 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_45 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_44 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_31 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_16 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_39 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_8 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_37 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_2 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_12 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_6 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_11 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_21 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_26 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_27 OneSecGrp_SectionRef_51.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_48 nseg = 3
    dend_36 nseg = 5
    dend_15 nseg = 5
    dend_5 nseg = 3
    dend_28 nseg = 3
    dend_20 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 5
    dend_22 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_NGCSA_eb27dd33ff_0_0


