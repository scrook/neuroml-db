// Cell: cNAC187_L1_NGCDA_35e9de081b_0_0
/*
{
  "id" : "cNAC187_L1_NGCDA_35e9de081b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.65332, -8.14477, 0.0, 3.38868", "2.3235, -7.30837, 0.0, 5.83516", "1.99367, -6.47197, 0.0, 8.36487", "1.66385, -5.63557, 0.0, 10.3053", "1.33402, -4.79917, 0.0, 11.2702", "1.0042, -3.96277, 0.0, 12.1037", "0.674371, -3.12636, 0.0, 12.478", "0.344546, -2.28996, 0.0, 12.8036", "0.0147201, -1.45356, 0.0, 13.3328", "-0.315105, -0.617159, 0.0, 13.8945", "-0.644931, 0.219243, 0.0, 14.1853", "-0.974756, 1.05564, 0.0, 14.2726", "-1.30458, 1.89205, 0.0, 14.0804", "-1.63441, 2.72845, 0.0, 13.7203", "-1.96423, 3.56485, 0.0, 13.3603", "-2.29406, 4.40125, 0.0, 12.7772", "-2.62388, 5.23765, 0.0, 12.1069", "-2.95371, 6.07405, 0.0, 11.425", "-3.28353, 6.91045, 0.0, 9.72987", "-3.61336, 7.74686, 0.0, 7.67118", "-3.94319, 8.58326, 0.0, 4.32164" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "2.92163, -8.4076, 0.209999, 1.37", "3.39339, -9.16167, 0.0642883, 1.37", "3.97412, -9.89874, -0.176853, 1.37", "4.78947, -10.9265, -0.542348, 1.37", "5.25913, -11.5008, -0.67203, 1.37", "6.02131, -12.4184, -0.780328, 1.37", "6.84297, -13.38, -0.829793, 0.91", "8.26811, -14.9642, -0.882558, 0.91", "9.24, -15.9327, -0.962243, 0.91", "10.9006, -17.3032, -1.21538, 0.91", "12.1078, -18.1434, -1.46695, 0.68", "13.641, -19.0194, -1.92352, 0.91", "15.3998, -19.7486, -2.6474, 0.68", "17.3432, -20.2388, -3.66061, 0.68", "19.2788, -20.3186, -5.04793, 0.68", "20.1989, -20.1293, -5.91363, 0.68", "21.3398, -19.437, -7.37673, 0.68", "22.013, -18.6148, -8.58693, 0.68", "22.4555, -17.7665, -9.70918, 0.68", "22.7884, -16.8575, -11.0676, 0.91", "22.9517, -16.3662, -12.1, 1.37", "23.2803, -15.7994, -14.1541, 0.68", "23.5681, -15.6142, -15.6409, 0.68", "23.9406, -15.5293, -17.3215, 0.68", "24.6091, -15.546, -19.6848, 0.68", "25.3603, -15.6738, -21.882, 0.68", "26.1444, -15.8182, -23.6887, 0.68", "26.7345, -15.9061, -24.6844, 0.68", "27.2414, -15.9283, -25.4271, 0.68", "28.1655, -15.8455, -26.6269, 0.91", "28.5887, -15.7924, -27.1555, 0.91", "29.9679, -15.6021, -29.0282, 0.46", "31.0213, -15.4602, -30.6747, 0.91", "32.0008, -15.3934, -32.564, 0.91", "33.1429, -15.3539, -35.0912, 0.91", "33.6829, -15.3446, -36.4872, 0.91", "34.1334, -15.3384, -37.8778, 0.91", "34.4046, -15.3484, -39.0219, 0.91", "34.8206, -15.3532, -41.2552, 0.91", "35.4381, -15.4244, -44.2484, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.55163, -2.9546, 7.25, 1.37", "6.5771, -2.94833, 7.26462, 1.37", "8.33553, -2.47549, 8.07704, 1.37", "9.62397, -2.08696, 8.49684, 1.14", "11.4867, -1.51884, 8.90596, 1.37", "13.5488, -0.883788, 9.15457, 1.14", "15.1968, -0.376428, 9.16124, 0.91", "16.2413, -0.0693348, 8.95016, 0.91", "17.7473, 0.299248, 8.23469, 0.91", "18.8839, 0.461882, 7.45014, 1.14", "19.7803, 0.477878, 6.69494, 1.37", "21.1637, 0.3558, 5.50512, 1.82", "22.5477, 0.157414, 4.31327, 1.37", "23.7863, -0.110675, 3.25727, 1.14", "25.3696, -0.565968, 1.93185, 1.14", "26.5557, -0.96817, 0.918259, 1.14", "28.1239, -1.58814, -0.28779, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.741626, 9.1199, -6.69, 3.19", "0.951917, 9.72518, -8.48264, 2.73", "1.3136, 10.7662, -11.5658, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.36163, 3.4209, 7.23, 1.37", "4.80219, 4.24991, 7.56008, 1.37", "5.5495, 5.65613, 8.11998, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-7.36837, 5.29665, -1.97, 1.59", "-7.36837, 5.29665, -1.97, 1.59", "-8.08468, 6.31509, -2.64004, 1.37", "-8.76588, 7.59249, -3.80732, 1.37", "-9.29996, 8.83124, -5.17593, 1.59", "-9.59941, 9.51346, -5.96506, 1.37", "-10.1348, 10.7332, -7.37594, 1.14", "-10.4906, 11.6505, -8.51819, 1.14", "-10.973, 13.3226, -10.8888, 1.14", "-11.1404, 14.1518, -12.2895, 1.14", "-11.1893, 14.812, -13.5123, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.09837, -7.33135, 5.48, 1.14", "-3.72792, -7.57302, 5.38368, 1.14", "-5.26145, -8.04776, 5.14794, 0.91", "-6.5181, -8.37065, 5.00621, 0.91", "-7.95442, -8.64437, 4.87867, 1.14", "-9.41174, -8.83805, 4.80437, 0.91", "-11.8726, -9.02504, 4.74002, 1.14", "-14.222, -8.98057, 4.79166, 1.14", "-15.57, -8.78989, 4.92535, 1.14", "-16.9856, -8.44609, 5.17659, 0.91", "-18.1593, -8.09248, 5.45434, 0.91", "-19.1433, -7.77986, 5.76069, 1.14", "-20.5029, -7.40491, 6.39822, 0.91", "-21.5893, -7.33728, 7.07761, 0.91", "-22.3398, -7.40342, 7.5681, 1.14", "-23.5498, -7.7672, 8.41046, 1.14", "-24.3815, -8.18764, 8.98041, 0.91", "-25.8026, -9.1976, 10.0041, 0.91", "-27.193, -10.4779, 10.9948, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.371626, -6.81885, 10.68, 3.19", "0.378597, -7.44868, 11.3241, 3.19", "0.391583, -8.62191, 12.524, 2.73", "0.40451, -9.78983, 13.7184, 2.73", "0.419596, -11.1528, 15.1123, 2.51", "0.434802, -12.5267, 16.5173, 2.28", "0.448384, -13.7537, 17.7723, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-3.94319, 8.58326, 0.0, 0.567227", "-9.44588, 22.5375, 0.0, 0.567227", "-14.9486, 36.4917, 0.0, 0.567227" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "28.1239, -1.58814, -0.28779, 0.91", "28.7574, -2.11253, 0.514864, 0.91", "29.5544, -2.74633, 1.63639, 0.91", "30.238, -3.33832, 2.72011, 0.68", "30.9199, -4.04512, 3.89214, 0.91", "31.4978, -4.80643, 4.91632, 0.91", "32.4013, -6.28051, 6.47148, 0.68", "33.0652, -7.54374, 7.5457, 0.68", "33.5861, -8.73679, 8.39973, 0.91", "34.0389, -9.90434, 9.14799, 0.68", "34.7848, -11.9648, 10.371, 0.68", "35.4785, -13.8841, 11.4705, 0.91", "36.0301, -15.238, 12.2412, 0.68", "36.9618, -17.2635, 13.4662, 1.14", "37.7917, -18.9344, 14.5952, 0.91", "38.6698, -20.6262, 15.846, 0.91", "39.335, -21.8931, 16.8699, 0.68", "40.0361, -23.1613, 17.9175, 0.68", "40.5707, -24.1618, 18.6985, 0.68", "41.3542, -25.7001, 19.7835, 0.91", "41.9624, -26.9631, 20.5523, 0.68", "42.9462, -29.0983, 21.6463, 0.68", "44.093, -31.5362, 22.7299, 0.68", "44.8422, -33.083, 23.3183, 0.68", "45.5992, -34.5155, 23.7771, 0.68", "46.6892, -36.5467, 24.3063, 0.68", "47.8362, -38.7638, 24.8204, 0.68", "48.3731, -39.8281, 25.0098, 0.68", "49.283, -41.5929, 25.3223, 0.68", "50.5141, -43.6563, 25.7066, 0.68", "51.8329, -45.5932, 26.1215, 0.68", "53.073, -47.2594, 26.5289, 0.68", "53.9507, -48.3549, 26.7951, 0.91", "55.4738, -50.2019, 27.203, 0.68", "56.6813, -51.5803, 27.4681, 0.68", "58.2431, -53.3282, 27.7141, 0.91", "59.2161, -54.438, 27.8567, 0.68", "60.329, -55.8681, 28.0563, 0.68", "61.2158, -57.2056, 28.264, 0.68", "62.0811, -58.771, 28.5067, 0.91", "62.9884, -60.6394, 28.8752, 0.68", "64.0195, -62.8189, 29.4852, 0.46", "64.9406, -64.8134, 30.2745, 0.46", "65.4113, -65.9421, 30.8566, 0.91", "66.0338, -67.4898, 31.7526, 0.68", "66.6293, -69.0262, 32.6893, 0.46", "67.3045, -70.8315, 33.7165, 0.46", "68.0291, -72.8375, 34.682, 0.46", "68.9034, -75.3415, 35.6044, 0.46", "69.5907, -77.3417, 36.3282, 0.46", "69.9773, -78.5111, 36.7044, 0.46", "70.5976, -80.6758, 37.1238, 0.46", "70.8583, -81.6699, 37.1192, 1.14", "71.3493, -83.3479, 36.7437, 1.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "28.1239, -1.58814, -0.28779, 0.91", "29.156, -0.914811, -0.713601, 0.91", "30.2863, -0.577186, -1.13462, 0.91", "31.3948, -0.443876, -1.49525, 0.91", "32.3318, -0.450094, -1.74925, 0.91", "34.4062, -0.630907, -2.19574, 0.91", "36.5335, -0.886819, -2.57832, 0.91", "38.3916, -1.24118, -2.91142, 0.91", "39.7336, -1.58234, -3.13344, 0.91", "41.6852, -2.20274, -3.42094, 0.68", "43.2474, -2.77995, -3.5923, 0.68", "44.3364, -3.21922, -3.60505, 0.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "1.3136, 10.7662, -11.5658, 1.59", "2.5174, 10.4093, -13.2056, 1.59", "3.78246, 10.0725, -15.1463, 1.37", "5.11768, 9.76587, -17.5209, 1.37", "6.21335, 9.57966, -19.5937, 1.37", "7.38484, 9.38056, -21.8099, 1.37", "8.30415, 9.22432, -23.549, 1.14", "9.64138, 9.03494, -26.3006, 1.14", "10.9077, 8.96612, -29.2879, 1.14", "11.216, 9.00254, -30.1112, 1.14" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "1.3136, 10.7662, -11.5658, 1.82", "1.28625, 11.8148, -12.8024, 1.82", "1.40141, 13.5953, -14.9605, 1.82", "1.55333, 15.0166, -16.5966, 1.82", "1.63143, 15.8775, -17.514, 1.82", "1.72593, 16.926, -18.5629, 1.37", "1.83398, 18.185, -19.8179, 1.37", "1.96468, 19.4846, -21.1414, 1.37", "2.08079, 20.5954, -22.241, 1.37", "2.19326, 21.9273, -23.5934, 1.14", "2.26917, 23.1379, -24.9165, 1.14", "2.34678, 24.4656, -26.5076, 1.14", "2.47966, 26.0158, -28.5678, 1.14", "2.59775, 27.1485, -30.2946, 1.14", "2.67601, 27.8695, -31.5634, 1.14", "2.7498, 28.6344, -33.2722, 1.14", "2.79815, 29.1618, -34.7692, 1.37", "2.92801, 29.6523, -36.725, 1.37", "3.16379, 29.9578, -38.6312, 1.37", "3.34079, 30.0634, -39.6871, 0.91", "3.7896, 30.232, -42.1041, 0.91", "4.16762, 30.302, -43.8922, 0.91", "4.82124, 30.3809, -46.6542, 0.91", "5.60335, 30.4744, -49.2921, 0.91", "6.24288, 30.5289, -50.9306, 0.91" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "5.5495, 5.65613, 8.11998, 0.91", "7.26807, 6.30181, 8.67007, 0.91", "9.46949, 7.1289, 9.37471, 1.14", "11.8034, 8.00578, 10.1218, 1.14", "12.776, 8.3712, 10.4331, 1.14", "14.0597, 8.85349, 10.844, 1.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.5495, 5.65613, 8.11998, 1.14", "5.81481, 7.78327, 7.69384, 1.14", "6.01243, 9.28556, 7.41148, 1.14", "6.16055, 10.4277, 7.16975, 1.14", "6.36786, 11.9592, 6.8385, 1.14", "6.62275, 13.8422, 6.43124, 1.14", "6.93704, 16.1641, 5.92907, 0.91", "7.15815, 17.5679, 5.59793, 0.91", "7.39578, 19.0257, 5.22676, 0.91", "7.68144, 21.0068, 4.71017, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-11.1893, 14.812, -13.5123, 1.14", "-11.4137, 15.0091, -13.5538, 1.14", "-12.4301, 15.9019, -13.7415, 1.14", "-13.3916, 16.7466, -13.9191, 0.91", "-14.4259, 17.655, -14.1102, 0.91", "-15.7005, 18.7747, -14.3456, 0.91" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-11.1893, 14.812, -13.5123, 1.14", "-12.0973, 15.3452, -14.8086, 1.14", "-13.5876, 16.0915, -16.8238, 0.91", "-14.5727, 16.572, -18.2975, 0.91", "-15.3768, 16.9677, -19.6272, 1.14", "-16.1754, 17.3528, -21.1434, 0.91", "-17.0594, 17.7835, -23.0935, 1.14", "-17.9874, 18.2844, -25.6501, 1.14", "-18.8231, 18.7081, -28.0611, 1.14", "-19.4934, 19.0044, -30.3184, 1.14", "-19.9704, 19.2069, -32.4653, 0.68", "-20.2176, 19.271, -34.0163, 0.68", "-20.28, 19.2663, -35.7243, 0.68" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-27.193, -10.4779, 10.9948, 0.91", "-29.0716, -10.8949, 11.6315, 0.91", "-31.138, -11.1745, 11.9226, 0.91", "-33.215, -11.263, 11.7831, 0.91", "-34.2709, -11.2422, 11.4937, 0.68", "-36.8029, -11.2003, 10.3322, 0.46", "-38.1882, -11.2412, 9.49464, 0.46", "-39.6315, -11.3673, 8.19639, 0.46", "-40.83, -11.5687, 6.87435, 0.68", "-42.081, -11.8406, 5.35189, 0.68", "-43.6532, -12.1741, 3.47152, 0.68", "-44.8492, -12.4586, 2.13026, 0.68", "-46.2146, -12.8347, 0.725291, 0.68", "-47.0406, -13.078, 0.0345733, 0.46", "-48.2362, -13.4747, -0.754192, 0.46", "-50.4974, -14.2637, -1.96934, 0.46", "-52.1017, -14.7529, -2.79242, 0.46", "-53.4657, -15.1068, -3.53443, 0.46", "-55.315, -15.5407, -4.68603, 0.46", "-56.6873, -15.8859, -5.68349, 0.23", "-58.2878, -16.406, -7.02377, 0.46", "-59.8872, -17.0943, -8.56295, 0.46", "-60.9231, -17.5555, -9.63611, 0.68", "-61.5283, -17.7612, -10.2923, 0.68", "-61.8199, -17.8219, -10.6184, 0.46", "-62.8849, -17.9343, -11.651, 0.46", "-63.9741, -18.0134, -12.4928, 0.46", "-64.6817, -18.0912, -12.9828, 0.46", "-66.1329, -18.2403, -14.0259, 0.46", "-67.8099, -18.3416, -15.3255, 0.46", "-69.1988, -18.3864, -16.4967, 0.68", "-70.5471, -18.4351, -17.7008, 0.68", "-71.5691, -18.4868, -18.6432, 0.68", "-72.4385, -18.5816, -19.4894, 0.68", "-73.6397, -18.8398, -20.6625, 0.46", "-74.6435, -19.1405, -21.6279, 0.46", "-75.705, -19.5262, -22.548, 0.46", "-76.1483, -19.6948, -22.8106, 0.46", "-76.9926, -20.0173, -23.109, 0.46", "-78.308, -20.6093, -23.4796, 0.23", "-79.1087, -21.01, -23.6853, 0.68", "-80.2835, -21.4983, -24.0218, 0.46", "-81.2659, -21.9057, -24.3666, 0.46", "-82.3312, -22.4185, -24.8278, 0.68", "-83.6236, -23.0667, -25.429, 0.46", "-84.0126, -23.2512, -25.623, 0.91", "-85.6624, -23.9001, -26.4667, 0.23", "-86.9947, -24.2912, -27.2029, 0.23", "-87.8693, -24.4862, -27.7158, 0.46", "-89.2622, -24.6452, -28.5322, 1.14", "-90.4613, -24.707, -29.2529, 0.23", "-91.385, -24.7569, -29.875, 0.23", "-92.7546, -24.8925, -30.9122, 0.23", "-94.0446, -25.0822, -31.9302, 0.23", "-95.1244, -25.4107, -32.8845, 0.68", "-96.05, -25.9005, -33.8246, 0.23", "-97.1511, -26.6423, -35.0042, 0.23", "-98.1438, -27.4458, -36.047, 0.23", "-98.8629, -28.1415, -36.7904, 0.68", "-99.7741, -29.2507, -37.7941, 0.46", "-100.065, -29.6805, -38.1217, 0.68" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-27.193, -10.4779, 10.9948, 1.14", "-26.5312, -11.3944, 12.6366, 1.14", "-25.985, -12.2537, 14.1768, 0.91", "-25.5689, -13.0655, 15.6564, 0.91", "-25.2441, -13.8817, 17.2317, 0.91", "-25.0681, -14.5243, 18.5854, 0.91", "-24.9679, -15.4758, 20.7254, 0.91", "-25.2856, -15.9852, 22.1192, 0.91", "-26.1727, -16.1291, 23.0072, 0.91", "-27.6182, -16.1166, 23.8866, 0.91", "-29.4077, -16.0618, 24.8275, 0.68", "-31.1269, -16.0699, 25.6219, 0.68", "-32.2432, -16.1634, 26.133, 0.68", "-33.3519, -16.432, 26.8055, 0.68", "-34.8042, -17.2646, 28.228, 0.68", "-35.5803, -18.0055, 29.3863, 0.91", "-36.0423, -18.5883, 30.2725, 0.91", "-36.7649, -19.5644, 31.7322, 0.68", "-37.5449, -20.655, 33.2413, 0.68", "-38.3319, -21.7962, 34.6878, 0.68", "-39.3636, -23.336, 36.4057, 0.91", "-40.1794, -24.5451, 37.6514, 0.91", "-41.4711, -26.1638, 39.344, 0.91", "-42.2203, -27.0718, 40.2269, 0.91", "-42.7552, -27.7032, 40.7575, 0.91", "-43.695, -28.7509, 41.5425, 0.91", "-45.1374, -30.4607, 42.6095, 0.91", "-46.8694, -32.5872, 43.9397, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.448384, -13.7537, 17.7723, 2.73", "-0.094174, -14.6659, 17.5748, 2.73", "-0.691902, -15.6708, 17.3573, 2.51" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.448384, -13.7537, 17.7723, 2.05", "2.85283, -15.8886, 17.1622, 2.05", "4.53227, -17.3798, 16.7361, 1.82", "5.72713, -18.4407, 16.4329, 1.82" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-14.9486, 36.4917, 0.0, 0.46", "-20.4513, 50.4459, 0.0, 0.46", "-25.954, 64.4002, 0.0, 0.46" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "44.3364, -3.21922, -3.60505, 0.46", "44.7576, -2.99755, -2.29781, 0.46", "45.68, -2.74466, 0.0935272, 0.46", "46.3626, -2.6396, 1.50719, 0.46", "47.2344, -2.5295, 2.9231, 0.46", "48.0349, -2.45091, 3.95702, 0.23", "48.7357, -2.34067, 4.76483, 0.23", "49.6928, -2.22772, 5.69694, 0.23", "50.6048, -2.05875, 6.51598, 0.46", "51.6727, -1.81821, 7.42754, 0.46", "52.959, -1.50759, 8.48437, 0.46", "54.3247, -1.07042, 9.64842, 0.46", "55.9276, -0.402793, 11.1713, 0.46", "57.3538, 0.299816, 12.7007, 0.46" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "44.3364, -3.21922, -3.60505, 0.46", "44.6635, -3.9417, -4.98508, 0.46", "44.9769, -4.43775, -6.22559, 0.46", "45.4297, -4.94546, -7.90975, 0.46", "45.7374, -5.15335, -8.91389, 0.46", "46.3623, -5.3866, -10.5887, 0.46", "46.8612, -5.4894, -11.6203, 0.46", "47.7907, -5.49361, -12.8767, 0.46", "48.4963, -5.51368, -13.3726, 0.46", "49.3838, -5.60024, -13.7808, 0.68", "50.2362, -5.74346, -14.1843, 0.68", "51.419, -6.04018, -14.8236, 0.46", "53.2778, -6.64782, -16.083, 0.46", "55.045, -7.36015, -17.6141, 0.46", "56.2199, -7.90502, -18.9485, 0.46", "57.6059, -8.56332, -20.9434, 0.46", "58.7387, -9.02877, -22.9494, 0.46", "59.4235, -9.12785, -24.3862, 0.46", "59.8889, -8.96118, -25.5633, 0.46", "60.4985, -8.30448, -27.0889, 0.46", "60.8257, -7.69595, -27.6284, 0.46", "61.2811, -6.75192, -28.1368, 0.46", "62.3031, -4.66644, -29.0197, 0.68", "63.058, -3.21804, -29.6021, 0.68", "64.02, -1.51588, -30.4373, 0.68", "64.7071, -0.275116, -31.1767, 0.46", "65.6732, 1.40658, -32.4243, 0.68", "66.0274, 2.03469, -32.9644, 0.46", "66.5206, 2.91206, -33.7819, 0.46", "67.6124, 4.94732, -35.7979, 0.46", "68.2356, 6.13555, -36.9831, 0.68", "68.7965, 7.16763, -38.0138, 0.46", "69.5302, 8.43649, -39.3578, 0.68", "70.0323, 9.1893, -40.19, 0.46", "71.0661, 10.4192, -41.5167, 0.46", "71.9982, 11.3631, -42.5231, 0.46", "73.5378, 12.5468, -43.9864, 0.46", "74.695, 13.1617, -44.9608, 0.46", "75.9173, 13.4823, -45.8466, 0.23", "77.3461, 13.6424, -46.7788, 0.23" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "14.0597, 8.85349, 10.844, 0.91", "15.0766, 8.58686, 11.7277, 0.91", "15.735, 8.33179, 12.3708, 0.91", "16.9232, 7.74794, 13.6756, 0.91", "17.816, 7.19867, 14.7963, 1.14", "18.8166, 6.44793, 16.1867, 0.91", "19.5831, 5.71383, 17.3549, 0.91", "20.4057, 4.77134, 18.8313, 1.14", "20.851, 4.13927, 19.76, 0.91", "21.3218, 3.23334, 20.9445, 0.91", "21.5203, 2.61731, 21.6456, 0.91", "21.6945, 1.28704, 22.904, 1.14" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "14.0597, 8.85349, 10.844, 1.37", "13.9616, 10.0735, 10.2384, 1.37", "13.7168, 11.66, 9.32043, 0.91", "13.4513, 13.1015, 8.35304, 0.91", "13.1564, 14.9934, 6.99784, 0.91", "12.9235, 17.1369, 5.38465, 0.91", "12.8937, 18.7146, 4.18374, 0.91", "12.9833, 20.0512, 3.11043, 0.91", "13.2328, 21.6688, 1.7011, 0.91", "13.5583, 22.9551, 0.513708, 0.91", "14.0906, 24.41, -0.750373, 0.91", "15.0331, 26.2881, -2.25924, 0.91", "15.6504, 27.4073, -3.02995, 0.91", "15.7575, 27.5995, -3.15781, 0.91", "16.6781, 29.5645, -4.5718, 0.68", "17.2199, 31.0435, -5.88959, 0.68", "17.5247, 32.1048, -7.09128, 0.46", "17.6602, 32.8515, -8.07894, 0.68", "17.7948, 34.0233, -9.75388, 0.68", "17.9133, 35.3766, -11.7912, 0.68", "17.9943, 36.3637, -13.3788, 0.68", "18.0229, 37.3471, -15.0865, 0.68", "17.974, 38.3392, -16.7697, 0.23", "17.8908, 39.5096, -18.7248, 0.23", "17.8529, 40.045, -19.4796, 0.23", "17.8261, 40.6291, -20.1248, 0.23" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-15.7005, 18.7747, -14.3456, 0.91", "-17.0217, 19.2603, -15.6296, 0.91", "-18.5563, 19.7173, -17.2727, 0.91", "-20.2148, 20.0994, -19.0667, 0.91", "-21.3868, 20.3694, -20.3345, 0.91", "-23.3391, 20.8191, -22.4463, 0.91", "-24.7708, 21.1489, -23.995, 0.91", "-26.2294, 21.4434, -25.6804, 0.91", "-27.6487, 21.6012, -27.4362, 0.68" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-15.7005, 18.7747, -14.3456, 0.68", "-15.4899, 20.1238, -15.0225, 0.68", "-15.3135, 21.5144, -15.6255, 0.68", "-15.2402, 22.9111, -16.0962, 0.91", "-15.2746, 24.4039, -16.6777, 0.91", "-15.2927, 25.1858, -16.9823, 0.68", "-15.3116, 26.0054, -17.3015, 0.68", "-15.409, 27.4387, -17.8467, 0.68", "-15.663, 29.654, -18.6109, 0.68", "-16.042, 31.688, -19.2996, 0.91" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-0.691902, -15.6708, 17.3573, 1.14", "-1.84734, -15.887, 16.8593, 1.14", "-3.8648, -16.1299, 15.8944, 1.14", "-5.92042, -16.235, 14.8035, 1.14", "-7.6128, -16.2242, 13.83, 1.14", "-9.337, -16.1392, 12.7665, 0.91", "-10.7554, -16.0302, 11.8637, 1.14", "-12.1882, -15.8424, 10.867, 0.91", "-13.8481, -15.4843, 9.5914, 0.91", "-15.0368, -15.0949, 8.62227, 1.14", "-15.7495, -14.8036, 8.01198, 1.37", "-16.0301, -14.6792, 7.74993, 1.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.691902, -15.6708, 17.3573, 1.14", "0.0041422, -18.39, 17.152, 1.14", "0.365561, -19.8019, 17.0454, 1.14", "0.890494, -21.8525, 16.8905, 1.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.72713, -18.4407, 16.4329, 1.37", "7.02115, -18.5381, 16.07, 1.37", "8.35215, -18.6491, 15.562, 1.37", "9.1699, -18.7593, 15.2018, 1.37", "10.4989, -18.976, 14.6027, 1.37", "12.0749, -19.2484, 13.8881, 1.37", "13.2283, -19.4458, 13.3297, 1.37", "14.6095, -19.7062, 12.6423, 1.37", "16.0314, -20.0324, 11.9331, 1.37", "16.8237, -20.2551, 11.5355, 1.37", "18.4879, -20.9349, 10.6662, 1.14", "20.0808, -21.8709, 9.85075, 1.14", "21.4043, -22.7215, 9.21268, 1.14", "22.2651, -23.3441, 8.81343, 1.14", "22.9366, -23.9094, 8.48859, 1.14", "24.1235, -25.2215, 7.84755, 1.14", "24.9179, -26.6792, 7.35461, 1.14" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.72713, -18.4407, 16.4329, 1.82", "5.17355, -20.783, 16.7761, 1.82", "4.70505, -22.7653, 17.0665, 1.82", "4.16932, -25.0321, 17.3986, 1.59", "3.76604, -26.7385, 17.6486, 1.59", "3.41559, -28.2213, 17.8658, 1.59", "2.86817, -30.5376, 18.2052, 1.82" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "21.6945, 1.28704, 22.904, 0.68", "20.0356, 1.46136, 23.9407, 0.68", "17.5883, 1.55783, 25.2978, 1.14", "15.9724, 1.52619, 26.1856, 0.91", "14.1702, 1.38831, 27.2199, 0.68", "13.108, 1.23655, 27.8727, 0.68", "11.7775, 0.975797, 28.7665, 0.91", "9.81598, 0.442963, 30.1742, 0.68", "8.37407, -0.0884252, 31.3271, 0.68", "7.48659, -0.535144, 32.2122, 0.91", "6.51426, -1.16844, 33.3535, 0.91", "5.5031, -1.905, 34.6371, 0.91", "4.64318, -2.59503, 35.784, 0.91", "4.04581, -3.10195, 36.5526, 0.91", "3.19164, -3.79392, 37.5352, 0.91", "2.65187, -4.17213, 38.0842, 0.91", "1.38315, -5.0346, 39.3152, 0.68", "0.134952, -5.93276, 40.5089, 0.68", "-1.28535, -6.95454, 41.8103, 0.68", "-2.3073, -7.69301, 42.7408, 0.68", "-3.61295, -8.56, 43.8964, 0.68", "-4.73855, -9.2639, 45.0004, 0.68", "-5.83234, -9.97186, 46.3353, 0.91" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "21.6945, 1.28704, 22.904, 0.68", "22.2475, 1.41801, 23.6025, 0.68", "23.5493, 1.62611, 25.3165, 0.68", "24.0855, 1.68002, 26.1062, 0.68", "25.416, 1.70132, 28.2381, 0.68", "26.3665, 1.62563, 29.7756, 0.68", "27.3504, 1.48105, 31.3382, 0.68", "28.2287, 1.30944, 32.7062, 0.68", "29.0658, 1.06693, 33.8676, 0.68", "29.7852, 0.741533, 34.848, 0.68", "30.4058, 0.316351, 35.6614, 0.68", "31.0341, -0.200945, 36.484, 0.68", "31.7252, -0.834522, 37.5017, 0.68", "32.4791, -1.56735, 38.7779, 0.46", "33.075, -2.14544, 39.7909, 0.46", "33.8825, -2.95264, 41.2823, 0.68", "34.9238, -4.08991, 43.5367, 0.68", "35.6631, -5.04435, 45.4984, 0.68", "36.0805, -5.70991, 46.9813, 0.46" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-16.0301, -14.6792, 7.74993, 0.68", "-15.4516, -13.6518, 5.38779, 0.68", "-14.7623, -12.6151, 3.24888, 0.68", "-14.4591, -12.1801, 2.41316, 0.46", "-13.7061, -11.0484, 0.300307, 0.68", "-13.0551, -9.96455, -1.76383, 0.68", "-12.5652, -9.0457, -3.60356, 0.68", "-12.1078, -8.11115, -5.47814, 0.68", "-11.8723, -7.57315, -6.71524, 0.68", "-11.6967, -7.04713, -8.36106, 0.91", "-11.6786, -6.60412, -10.5927, 0.91", "-11.8323, -6.50786, -12.2068, 0.91", "-11.9433, -6.55979, -12.7272, 0.68", "-12.7716, -7.17783, -15.062, 0.68", "-13.9902, -8.16755, -17.3329, 0.68", "-14.4746, -8.56303, -17.9313, 0.68", "-15.1944, -9.177, -18.65, 0.46", "-16.5542, -10.2991, -19.7404, 0.23", "-17.4705, -10.985, -20.2975, 0.23", "-19.2724, -12.0888, -20.828, 0.23", "-20.5374, -12.7175, -21.0165, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-16.0301, -14.6792, 7.74993, 1.14", "-16.9079, -14.5637, 7.37537, 1.14", "-18.84, -14.3094, 6.55096, 1.14", "-20.0244, -14.1535, 6.04561, 1.14", "-21.5699, -13.95, 5.38616, 1.14" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "24.9179, -26.6792, 7.35461, 1.37", "25.0717, -26.8716, 7.30074, 1.37", "26.3669, -28.2189, 6.98087, 1.37", "27.322, -29.0577, 6.80309, 0.91", "28.6182, -30.0503, 6.61774, 1.14", "29.6496, -30.7903, 6.52991, 0.68", "31.4379, -32.015, 6.5112, 0.68", "33.0094, -32.9974, 6.62006, 0.68", "34.2225, -33.6727, 6.80381, 0.68", "35.8591, -34.4893, 7.09861, 0.68", "37.2198, -35.0962, 7.37112, 0.68", "39.2299, -35.9061, 7.81249, 0.91", "40.2728, -36.2896, 8.07241, 0.68", "41.4399, -36.6707, 8.35534, 0.68", "42.3233, -36.9626, 8.58137, 0.68", "43.5825, -37.3899, 8.89662, 0.68", "44.8835, -37.8345, 9.17985, 0.23", "46.1746, -38.3057, 9.42236, 0.68", "47.8591, -39.033, 9.7323, 0.46", "49.2358, -39.7145, 9.96491, 0.46", "50.5011, -40.3896, 10.174, 0.46", "51.109, -40.701, 10.2714, 0.68", "52.7711, -41.4833, 10.5065, 0.68", "53.9307, -41.9615, 10.6343, 0.46", "54.8409, -42.2661, 10.6845, 0.46", "55.5533, -42.4292, 10.6844, 0.46", "57.9269, -42.7544, 10.6413, 0.68", "58.8726, -42.8729, 10.6072, 0.68", "59.3268, -42.948, 10.578, 0.68", "60.7227, -43.2445, 10.462, 0.23", "61.4187, -43.4977, 10.3928, 0.46", "62.704, -44.261, 10.2446, 0.23", "64.189, -45.6418, 10.0543, 0.91", "65.6728, -47.5329, 9.85244, 0.91", "65.9615, -48.0017, 9.7895, 0.91", "67.0066, -50.081, 9.45411, 0.68", "67.7136, -51.7275, 9.09851, 0.68", "68.4982, -53.8658, 8.47945, 0.91", "69.1749, -55.8227, 7.71077, 0.68", "69.794, -57.4525, 6.93347, 1.14", "70.2933, -58.4676, 6.33278, 0.91", "71.0325, -59.5354, 5.55478, 0.91", "72.3935, -60.9388, 4.32911, 0.91", "73.9654, -62.1823, 3.08112, 0.46", "75.103, -62.9787, 2.2732, 0.46", "76.9609, -64.3031, 1.07943, 0.46", "78.4529, -65.4152, 0.14306, 0.68", "79.9482, -66.5509, -0.739202, 0.46", "82.0026, -68.0776, -1.84131, 0.68", "82.8488, -68.7509, -2.25271, 0.46", "84.0626, -69.8455, -2.88075, 0.23", "84.8955, -70.7458, -3.31053, 0.23", "85.4184, -71.4454, -3.61522, 0.46", "86.1682, -72.5934, -3.9962, 0.68", "87.3673, -74.1443, -4.35415, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "24.9179, -26.6792, 7.35461, 0.68", "25.0898, -25.538, 3.52073, 0.68", "25.4507, -24.6797, 1.22161, 0.68", "25.9956, -23.8325, -0.630778, 0.68", "26.5956, -23.1136, -2.01894, 0.68", "27.2269, -22.4787, -3.1779, 0.46", "28.0681, -21.7968, -4.47324, 0.46", "29.1321, -21.1154, -5.48535, 0.46", "30.2951, -20.5662, -6.30699, 0.68", "31.4091, -20.2186, -6.9723, 0.68", "32.0078, -20.1306, -7.30111, 0.68", "34.0108, -20.0456, -8.50066, 0.46", "34.9715, -20.0332, -9.15201, 0.46", "36.286, -20.0226, -10.0811, 0.46", "37.5848, -20.0663, -10.9541, 0.46", "39.2632, -20.1797, -12.0101, 0.46", "41.298, -20.3447, -13.1803, 0.46", "43.3413, -20.5443, -14.1451, 0.23", "44.4326, -20.6715, -14.5773, 0.46", "45.6291, -20.8564, -14.9913, 0.23", "46.9532, -21.0689, -15.3487, 0.68", "48.0811, -21.1977, -15.6334, 0.23", "49.88, -21.3817, -16.0437, 0.46", "51.4276, -21.4914, -16.3983, 0.46", "53.1302, -21.5572, -16.9076, 0.23", "55.32, -21.6115, -17.7194, 0.68", "57.4492, -21.7023, -18.6464, 0.46", "59.0489, -21.8471, -19.4243, 0.46", "60.7205, -22.1209, -20.3002, 0.68", "63.1061, -22.6934, -21.5578, 0.46", "64.5409, -23.2234, -22.2598, 0.46", "65.388, -23.7302, -22.6339, 0.46", "66.7789, -24.9918, -23.201, 0.46", "67.7664, -26.2475, -23.6111, 0.46", "68.1823, -27.0161, -23.8295, 0.46", "68.8436, -28.846, -24.3352, 0.46", "69.2931, -30.5717, -24.9606, 0.23", "69.6897, -32.4952, -25.8378, 0.23", "69.8406, -33.3595, -26.2952, 0.68", "70.1884, -35.1522, -27.3444, 0.23", "70.6053, -36.7747, -28.3901, 0.68", "71.2269, -38.6737, -29.7088, 0.23", "71.7589, -40.0042, -30.684, 0.23", "72.2053, -40.8938, -31.3326, 0.68", "72.835, -41.9567, -32.0972, 0.23", "73.9733, -43.5887, -33.1563, 0.68", "75.4482, -45.5136, -34.2396, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "2.86817, -30.5376, 18.2052, 1.37", "1.73109, -32.2892, 18.0313, 1.37", "1.0451, -33.346, 17.9264, 1.37", "-0.40476, -35.5795, 17.7046, 1.37", "-1.34153, -37.0225, 17.5614, 1.37", "-3.04394, -39.6451, 17.301, 1.59", "-4.39146, -41.7209, 17.0949, 1.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "2.86817, -30.5376, 18.2052, 1.14", "2.34625, -30.774, 19.3977, 1.14", "1.2795, -31.1556, 21.6632, 1.14", "0.338099, -31.4834, 23.6349, 1.14", "-0.459684, -31.7182, 25.18, 1.14", "-1.10048, -31.9101, 26.3456, 0.91", "-2.09348, -32.2354, 28.073, 0.91", "-3.04976, -32.5772, 29.6193, 0.91", "-3.79502, -32.9052, 30.7538, 0.91", "-4.57613, -33.3642, 31.9209, 0.91", "-5.05162, -33.7247, 32.5748, 1.14", "-5.8525, -34.5323, 33.5338, 1.14", "-6.58542, -35.6269, 34.0575, 1.14", "-7.08045, -36.3866, 34.0828, 1.14", "-7.74039, -37.2894, 34.0222, 0.91", "-9.35208, -39.0687, 34.0232, 0.91", "-10.8922, -40.2368, 34.3657, 0.91", "-11.9755, -40.8668, 34.8515, 1.14", "-13.1034, -41.4221, 35.6623, 0.91", "-14.5345, -42.0135, 37.2035, 0.91", "-15.753, -42.3999, 39.0804, 0.91", "-16.5344, -42.4966, 40.6601, 0.91", "-17.0875, -42.4484, 41.9954, 0.91", "-17.4473, -42.3428, 42.9487, 0.91", "-18.0322, -42.1288, 44.4148, 0.91", "-18.3449, -42.0383, 44.9407, 1.14", "-19.6397, -41.6337, 46.7884, 1.14", "-20.6131, -41.3232, 47.8673, 1.14", "-21.9847, -40.9061, 49.1335, 0.91", "-23.4983, -40.5433, 50.3375, 0.91", "-25.5489, -40.2735, 51.7694, 1.14" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-21.5699, -13.95, 5.38616, 0.91", "-23.1276, -14.5316, 5.05549, 0.91", "-25.0126, -15.1557, 4.82311, 0.68", "-26.9103, -15.6821, 4.66616, 0.68", "-28.6581, -16.072, 4.57018, 0.91", "-29.5389, -16.2166, 4.50489, 0.68", "-31.4269, -16.4259, 4.3427, 0.68", "-32.765, -16.445, 4.30179, 0.68", "-33.6601, -16.3683, 4.23849, 0.91", "-34.3701, -16.2326, 4.08574, 0.68", "-35.8478, -15.8907, 3.49381, 0.68", "-37.0629, -15.6584, 2.83574, 1.37", "-37.4363, -15.6068, 2.58753, 0.91", "-38.9388, -15.5331, 1.4749, 0.91", "-40.2828, -15.5943, 0.47646, 0.91", "-41.8933, -15.746, -0.666066, 0.91", "-43.912, -15.9947, -2.00968, 0.68", "-45.3609, -16.2, -2.89985, 0.68", "-46.5139, -16.3771, -3.52053, 0.46", "-47.6603, -16.5675, -3.99723, 0.46", "-49.3695, -16.821, -4.56163, 0.68", "-51.1769, -17.0655, -5.01946, 0.68", "-53.1427, -17.3051, -5.40262, 0.46", "-55.779, -17.5565, -5.80392, 0.46", "-58.5201, -17.6956, -6.15465, 0.46", "-59.7909, -17.7379, -6.29822, 0.68", "-60.8545, -17.7769, -6.3975, 0.68", "-62.8744, -17.8888, -6.51493, 0.23", "-64.2349, -17.9722, -6.60129, 0.46", "-65.8471, -18.0745, -6.69036, 0.23", "-67.3255, -18.1423, -6.75251, 0.23", "-67.6956, -18.1467, -6.75835, 0.46", "-70.0387, -18.0189, -6.73756, 0.23", "-71.1103, -17.9358, -6.71229, 0.23", "-72.9228, -17.7849, -6.64962, 0.91", "-74.8201, -17.5785, -6.55091, 0.91", "-76.6871, -17.2181, -6.40486, 0.91", "-78.0044, -16.8419, -6.25805, 1.14" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-21.5699, -13.95, 5.38616, 0.46", "-21.7236, -14.2691, 6.38814, 0.46", "-21.8427, -14.5414, 7.32635, 0.46", "-21.9817, -14.891, 8.54861, 0.68", "-22.2364, -15.6446, 11.1341, 0.68", "-22.4635, -16.3958, 13.6236, 0.68", "-22.6231, -17.0077, 15.568, 0.68", "-22.752, -17.3966, 16.9498, 0.91", "-22.9775, -17.7627, 18.4224, 0.91", "-23.3637, -18.1063, 19.9363, 0.91", "-23.8706, -18.3218, 20.9751, 0.91", "-24.8374, -18.3947, 21.8567, 0.68", "-26.1292, -18.353, 22.5957, 0.68", "-28.3091, -18.204, 23.5695, 0.91", "-30.4292, -18.0356, 24.3586, 0.91", "-32.8283, -17.8307, 25.2083, 0.68", "-35.0323, -17.6446, 26.0441, 0.68", "-36.7834, -17.5477, 26.8496, 0.68", "-38.328, -17.6435, 27.9961, 0.68", "-38.7202, -17.7414, 28.4647, 1.14", "-39.5483, -18.1259, 29.717, 1.14", "-40.4781, -18.7161, 31.2512, 1.14", "-41.3236, -19.3529, 32.4917, 0.91", "-42.2501, -20.041, 33.5779, 0.91", "-44.0047, -21.2421, 35.3442, 0.91", "-45.3588, -22.0704, 36.5422, 0.91", "-46.3824, -22.6188, 37.3721, 1.14", "-47.8035, -23.2519, 38.5433, 0.68", "-49.1265, -23.6884, 39.8049, 0.68", "-49.8171, -23.8878, 40.7389, 0.68", "-50.1028, -23.9628, 41.4111, 0.91", "-50.6806, -23.9536, 43.3301, 0.91", "-51.1619, -23.8423, 45.4171, 0.91", "-51.4525, -23.7937, 47.0538, 0.91", "-51.7862, -23.9067, 49.2341, 0.91", "-51.9537, -24.0795, 50.1788, 0.91", "-52.2039, -24.5012, 51.2015, 0.91", "-52.5586, -25.5156, 52.1958, 0.91", "-52.9903, -27.1343, 53.0905, 0.91", "-53.3455, -28.2122, 53.5362, 0.91", "-54.1767, -29.8286, 54.145, 0.68", "-54.808, -30.7851, 54.5701, 0.46", "-55.4727, -31.6334, 55.0661, 0.46", "-56.6798, -32.6644, 55.9133, 0.46", "-57.6984, -33.3463, 56.677, 0.46", "-58.7495, -33.9441, 57.5489, 0.46", "-59.955, -34.5093, 58.6125, 0.46", "-60.7333, -34.7872, 59.2247, 0.46", "-61.9925, -35.1216, 60.1782, 0.68" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-4.39146, -41.7209, 17.0949, 1.37", "-4.80442, -43.1019, 16.6889, 1.37", "-5.63212, -45.8698, 15.875, 1.14", "-6.3058, -48.1227, 15.2126, 1.14", "-6.72373, -49.5203, 14.8017, 1.14", "-7.18802, -51.0729, 14.3452, 1.14", "-7.84058, -53.2552, 13.7035, 1.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.39146, -41.7209, 17.0949, 0.68", "-5.1765, -41.4155, 14.7599, 0.68", "-5.93086, -41.0858, 13.1322, 0.68", "-6.68833, -40.7192, 11.9453, 0.68", "-8.14598, -40.0387, 10.0222, 0.68", "-9.0297, -39.5939, 8.96665, 0.68", "-9.83677, -39.1615, 8.04826, 0.68", "-10.6026, -38.6775, 7.33135, 0.68", "-11.6978, -37.8783, 6.3039, 0.23", "-12.976, -36.9111, 4.98787, 0.23", "-13.5723, -36.5133, 4.32074, 0.23", "-13.751, -36.401, 4.09859, 0.68", "-14.8988, -35.6565, 2.64377, 0.91", "-16.4659, -34.5708, 0.706135, 0.91", "-17.7333, -33.6878, -0.789798, 0.68", "-19.1947, -32.6481, -2.35543, 0.68", "-20.4509, -31.7667, -3.68415, 0.91", "-21.6832, -30.9241, -5.02681, 0.68", "-23.3387, -29.8217, -6.93384, 0.46", "-24.4407, -29.0782, -8.26912, 0.68", "-25.9826, -27.9589, -10.3195, 0.46", "-27.0353, -27.1684, -11.8295, 0.46", "-28.627, -26.0337, -14.3693, 0.46", "-29.8392, -25.2392, -16.488, 0.46", "-30.471, -24.8302, -17.6908, 0.68", "-30.8935, -24.5538, -18.5812, 0.68", "-31.5644, -24.1025, -20.2357, 0.46", "-32.5837, -23.3871, -22.7301, 0.46", "-33.2038, -22.911, -24.2894, 0.46", "-33.9493, -22.3241, -26.3078, 0.46", "-34.8471, -21.6292, -29.1039, 0.46", "-35.6167, -21.1033, -31.6674, 0.46" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-25.5489, -40.2735, 51.7694, 0.46", "-26.4582, -41.775, 54.1049, 0.46", "-26.9746, -42.9178, 55.5177, 0.46", "-27.2747, -43.6774, 56.546, 0.46", "-27.4816, -44.1914, 57.3602, 0.46", "-27.6943, -44.6543, 58.1245, 0.46", "-28.2138, -45.6068, 59.7074, 0.46", "-28.8582, -46.6484, 61.4844, 0.68", "-29.7278, -47.7542, 63.4893, 0.68", "-30.839, -48.8258, 65.6315, 0.68", "-31.6754, -49.4712, 67.037, 0.68", "-32.5418, -50.0712, 68.1906, 0.46", "-33.5722, -50.7505, 69.248, 0.46", "-34.3729, -51.2637, 69.9388, 0.46", "-35.0504, -51.7338, 70.4477, 0.68", "-35.981, -52.4932, 71.2299, 0.68", "-37.8637, -54.23, 73.2546, 0.46", "-39.0677, -55.4565, 74.8613, 0.46", "-40.0411, -56.5377, 76.5547, 0.46", "-40.2268, -56.7412, 76.9773, 0.46", "-41.2181, -57.7722, 79.8502, 0.46", "-41.6706, -58.2029, 81.5163, 0.46", "-41.8674, -58.3125, 82.4389, 0.46", "-42.2493, -58.4253, 84.4041, 0.46", "-42.5552, -58.4353, 85.7438, 0.46", "-42.9061, -58.3552, 87.1686, 0.46" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.5489, -40.2735, 51.7694, 0.46", "-27.7031, -39.5411, 51.4185, 0.46", "-28.7303, -39.1237, 51.3689, 0.23", "-30.2703, -38.4634, 51.3857, 0.23", "-32.7965, -37.4105, 51.4892, 0.23", "-33.5006, -37.1671, 51.5272, 0.46", "-36.175, -36.3856, 51.6873, 0.46", "-37.7804, -35.9549, 51.859, 0.46", "-39.1007, -35.6363, 52.0179, 0.46", "-40.6876, -35.3152, 52.235, 0.46", "-42.8655, -35.1218, 52.4569, 0.46", "-44.2615, -35.2291, 52.4903, 0.23", "-45.6343, -35.6393, 52.3823, 0.23", "-46.6667, -36.0991, 52.2158, 0.23", "-48.0524, -36.8484, 51.955, 0.46", "-49.484, -37.6673, 51.6791, 0.46", "-51.2056, -38.6567, 51.4906, 0.46", "-52.1539, -39.239, 51.4757, 0.23", "-53.8645, -40.3079, 51.5883, 0.23", "-54.8955, -40.8921, 51.7274, 0.23", "-56.9042, -41.7938, 52.0903, 0.23", "-59.0547, -42.5652, 52.5084, 0.23", "-60.4158, -42.9758, 52.7596, 0.46", "-62.4787, -43.5056, 53.0092, 0.46", "-64.778, -44.0424, 53.1584, 0.46", "-66.7947, -44.4314, 53.1762, 0.46", "-68.3232, -44.653, 53.1679, 0.68", "-70.6525, -44.9216, 53.1089, 0.46", "-73.0755, -45.1265, 53.0976, 0.46", "-75.2362, -45.2183, 53.1491, 0.46", "-77.7571, -45.2823, 53.3261, 0.46", "-79.8458, -45.3288, 53.6045, 0.46", "-82.1247, -45.3239, 54.0479, 0.46", "-83.1668, -45.2935, 54.3129, 0.46", "-84.7077, -45.1959, 54.8014, 0.46", "-86.9122, -44.9702, 55.5239, 0.46", "-88.3811, -44.7565, 55.9807, 0.46", "-89.0834, -44.6191, 56.1653, 0.46", "-90.9842, -44.1476, 56.6426, 0.46", "-93.1526, -43.6639, 57.0729, 0.91", "-94.8485, -43.324, 57.2972, 0.68", "-96.6232, -42.9984, 57.3687, 0.68", "-98.0158, -42.8203, 57.3109, 0.68", "-99.1415, -42.729, 57.1712, 0.68", "-101.051, -42.6342, 56.7376, 0.68", "-102.402, -42.602, 56.2937, 0.68", "-105.24, -42.451, 55.0951, 0.68", "-106.784, -42.4168, 54.3952, 0.68", "-108.669, -42.3753, 53.4787, 0.68", "-110.016, -42.3021, 52.7887, 0.68", "-111.151, -42.1429, 52.1916, 0.68", "-112.696, -41.8479, 51.2625, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-61.9925, -35.1216, 60.1782, 0.46", "-63.1205, -34.4554, 59.0568, 0.46", "-64.6586, -33.547, 57.5279, 0.23", "-66.3594, -32.5424, 55.8371, 0.23", "-67.1242, -32.0907, 55.0768, 0.23" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-61.9925, -35.1216, 60.1782, 0.46", "-62.4072, -34.6671, 61.2798, 0.46", "-63.0956, -33.9125, 63.1083, 0.46", "-63.7723, -33.1708, 64.9059, 0.68", "-64.2935, -32.5995, 66.2903, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.84058, -53.2552, 13.7035, 0.91", "-9.17736, -54.52, 14.14, 0.91", "-10.3727, -55.804, 14.5651, 0.91", "-11.2583, -56.9597, 14.8337, 0.68", "-12.0504, -58.3979, 15.0242, 0.68", "-12.4211, -59.3246, 15.0876, 0.68", "-12.6638, -60.1251, 15.1426, 0.68", "-12.941, -61.6178, 15.2588, 0.68", "-13.155, -63.4373, 15.482, 0.68", "-13.2952, -65.3025, 15.8001, 0.91", "-13.3818, -66.475, 16.0333, 0.68", "-13.5345, -67.9753, 16.361, 0.68", "-13.8292, -70.1562, 16.8608, 0.68", "-14.2013, -71.9223, 17.2896, 0.68", "-14.3542, -72.4613, 17.4334, 0.68", "-14.8218, -73.8408, 17.7417, 0.46", "-15.1237, -74.684, 17.9002, 0.91", "-15.5449, -75.8669, 18.0993, 1.37", "-16.0067, -77.3252, 18.3602, 0.91", "-16.6874, -79.4731, 18.9134, 0.68", "-17.1356, -80.8616, 19.3509, 0.91", "-17.628, -82.4535, 19.8824, 0.68", "-18.328, -84.6122, 20.6144, 0.68", "-18.8015, -86.0623, 21.0932, 0.68", "-19.3713, -87.9237, 21.6886, 0.68", "-19.7919, -89.2967, 22.0808, 1.14", "-20.5288, -91.3531, 22.6063, 0.68", "-21.1067, -92.7078, 22.8618, 0.68", "-21.7458, -94.0119, 23.0173, 0.46", "-22.3537, -95.101, 23.1094, 0.46", "-23.043, -96.2744, 23.1808, 0.23", "-23.9537, -97.7187, 23.244, 0.23", "-24.4991, -98.559, 23.2668, 0.91", "-25.5964, -100.302, 23.2488, 0.23", "-26.5213, -101.81, 23.1858, 1.14", "-27.426, -103.384, 23.0886, 0.46", "-28.3006, -105.083, 22.9424, 0.46", "-29.1125, -106.982, 22.6992, 0.46", "-29.5242, -108.201, 22.5151, 0.91", "-29.8694, -109.601, 22.2768, 0.46", "-30.1107, -111.38, 21.9677, 0.46", "-30.1946, -112.483, 21.7761, 0.46", "-30.2607, -114.325, 21.487, 0.46", "-30.2504, -116.043, 21.2141, 0.46", "-30.2266, -117.22, 20.9873, 0.91", "-30.2237, -119.061, 20.4959, 0.68", "-30.3018, -120.733, 19.9252, 0.68", "-30.4539, -121.801, 19.4642, 0.68", "-30.9559, -123.45, 18.4725, 0.68", "-31.6427, -125.049, 17.1608, 0.68", "-32.257, -126.342, 15.847, 0.68", "-32.6303, -127.022, 15.0028, 1.14", "-33.2888, -127.99, 13.6204, 0.91", "-34.273, -129.11, 11.813, 0.68", "-34.9389, -129.735, 10.6837, 0.68", "-35.7665, -130.525, 9.27508, 0.91", "-36.7883, -131.626, 7.56377, 0.68", "-37.7635, -132.846, 5.9981, 0.91", "-38.5809, -134.029, 4.8512, 0.91", "-39.6197, -135.65, 3.66513, 0.91", "-40.5912, -137.12, 2.84114, 0.68", "-41.6837, -138.781, 2.18222, 0.68", "-42.7891, -140.509, 1.73033, 0.68", "-44.2188, -142.738, 1.35046, 0.68", "-45.2552, -144.298, 1.19191, 0.68", "-46.3172, -145.771, 1.127, 0.91", "-47.7315, -147.512, 1.11803, 0.68", "-48.8197, -148.732, 1.06427, 0.68", "-49.6971, -149.641, 0.986787, 0.68", "-50.9014, -150.841, 0.834826, 0.23", "-51.8486, -151.799, 0.703242, 0.68", "-53.5543, -153.623, 0.449726, 0.23", "-54.7652, -155.005, 0.268409, 0.23", "-55.3623, -155.777, 0.183644, 0.46", "-56.2185, -157.042, 0.0245026, 0.23", "-56.7434, -157.934, -0.123437, 0.23", "-57.1077, -158.74, -0.346044, 0.46", "-57.5941, -160.016, -0.87725, 0.23", "-57.9459, -161.016, -1.41966, 0.46", "-58.4987, -162.796, -2.60808, 0.46", "-58.8716, -164.138, -3.79318, 0.46", "-59.2082, -165.834, -5.47094, 0.46", "-59.5148, -167.438, -7.173, 0.46", "-59.7893, -168.895, -8.84939, 0.46", "-59.9828, -169.932, -10.1292, 0.91", "-60.3996, -172.398, -13.3443, 0.91", "-60.6923, -174.796, -16.6014, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-7.84058, -53.2552, 13.7035, 0.68", "-7.28676, -53.7142, 12.5497, 0.68", "-6.19239, -54.5783, 11.0936, 0.68", "-4.94454, -55.4571, 9.81011, 0.68", "-3.678, -56.2182, 8.73335, 0.68", "-2.41295, -56.8624, 7.79205, 0.46", "-0.688986, -57.6561, 6.59807, 0.46", "1.36917, -58.5306, 5.44995, 0.46", "2.28924, -58.891, 5.03469, 0.46", "3.39908, -59.2848, 4.5912, 0.68", "4.92314, -59.7645, 3.94328, 0.46", "7.03414, -60.3163, 2.94307, 0.68", "9.14437, -60.781, 1.94169, 0.46", "10.1928, -60.9811, 1.4349, 0.46", "11.476, -61.2375, 0.800363, 0.46", "13.3022, -61.5604, -0.0634472, 0.46", "14.177, -61.671, -0.427327, 0.68", "16.5155, -61.828, -1.28611, 0.23", "18.4865, -61.9364, -1.97626, 0.23", "19.902, -62.0364, -2.44175, 0.23", "21.4517, -62.1456, -2.87672, 0.23", "23.024, -62.2671, -3.2567, 0.23", "24.9316, -62.4439, -3.68461, 0.46", "26.9719, -62.6042, -4.11205, 0.46", "28.855, -62.7276, -4.44389, 0.46", "31.2531, -62.917, -4.80666, 0.46", "33.1109, -63.083, -5.07631, 0.46", "34.7053, -63.2087, -5.28281, 0.46", "36.4125, -63.311, -5.45197, 0.23", "37.2461, -63.3429, -5.51396, 0.46", "38.7189, -63.4042, -5.59584, 0.23", "39.8864, -63.4824, -5.62773, 0.23", "40.8465, -63.5527, -5.62233, 0.68", "41.7949, -63.6397, -5.59626, 0.23", "42.6985, -63.7605, -5.5538, 0.23", "44.6186, -63.9946, -5.31198, 0.23", "46.2703, -64.1411, -5.00232, 0.68", "46.9397, -64.212, -4.86598, 0.68", "47.4641, -64.2938, -4.76044, 0.68", "49.8898, -64.7989, -4.30521, 0.23", "52.3599, -65.53, -3.88466, 0.23", "53.0465, -65.8119, -3.8332, 0.46", "54.3118, -66.4692, -3.98562, 0.46", "56.081, -67.6235, -4.71652, 0.23", "57.2295, -68.4792, -5.50814, 0.46", "58.2334, -69.2886, -6.61342, 0.46", "59.5013, -70.4022, -8.57071, 0.46", "60.5839, -71.4149, -10.7331, 0.23", "61.3682, -72.162, -12.6138, 0.68", "61.6091, -72.3691, -13.2169, 0.68", "62.5882, -73.1857, -15.8261, 0.23", "63.7124, -74.0263, -18.8022, 0.46", "64.6863, -74.7176, -21.2068, 0.46", "65.431, -75.288, -23.0753, 0.46", "66.6059, -76.2875, -26.1704, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_41", "dend_38", "dend_31", "dend_26", "dend_23", "dend_0", "dend_45", "dend_42", "dend_40", "dend_39", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_14", "dend_1", "dend_44", "dend_43", "dend_35", "dend_34", "dend_30", "dend_29", "dend_16", "dend_15", "dend_11", "dend_2", "dend_37", "dend_36", "dend_22", "dend_17", "dend_13", "dend_12", "dend_6", "dend_3", "dend_21", "dend_18", "dend_8", "dend_7", "dend_5", "dend_4", "dend_20", "dend_19", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_41", "dend_38", "dend_31", "dend_26", "dend_23", "dend_0", "dend_45", "dend_42", "dend_40", "dend_39", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_14", "dend_1", "dend_44", "dend_43", "dend_35", "dend_34", "dend_30", "dend_29", "dend_16", "dend_15", "dend_11", "dend_2", "dend_37", "dend_36", "dend_22", "dend_17", "dend_13", "dend_12", "dend_6", "dend_3", "dend_21", "dend_18", "dend_8", "dend_7", "dend_5", "dend_4", "dend_20", "dend_19", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_NGCDA_35e9de081b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.49999981492465656)
    connect dend_41(0), soma_0(0.49999981492465656)
    connect dend_38(0), soma_0(0.49999981492465656)
    connect dend_31(0), soma_0(0.49999981492465656)
    connect dend_26(0), soma_0(0.49999981492465656)
    connect dend_23(0), soma_0(0.49999981492465656)
    connect dend_0(0), soma_0(0.49999981492465656)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.65332, -8.14477, 0.0, 3.38868 ) }
    soma_0 { pt3dadd( 2.3235, -7.30837, 0.0, 5.83516 ) }
    soma_0 { pt3dadd( 1.99367, -6.47197, 0.0, 8.36487 ) }
    soma_0 { pt3dadd( 1.66385, -5.63557, 0.0, 10.3053 ) }
    soma_0 { pt3dadd( 1.33402, -4.79917, 0.0, 11.2702 ) }
    soma_0 { pt3dadd( 1.0042, -3.96277, 0.0, 12.1037 ) }
    soma_0 { pt3dadd( 0.674371, -3.12636, 0.0, 12.478 ) }
    soma_0 { pt3dadd( 0.344546, -2.28996, 0.0, 12.8036 ) }
    soma_0 { pt3dadd( 0.0147201, -1.45356, 0.0, 13.3328 ) }
    soma_0 { pt3dadd( -0.315105, -0.617159, 0.0, 13.8945 ) }
    soma_0 { pt3dadd( -0.644931, 0.219243, 0.0, 14.1853 ) }
    soma_0 { pt3dadd( -0.974756, 1.05564, 0.0, 14.2726 ) }
    soma_0 { pt3dadd( -1.30458, 1.89205, 0.0, 14.0804 ) }
    soma_0 { pt3dadd( -1.63441, 2.72845, 0.0, 13.7203 ) }
    soma_0 { pt3dadd( -1.96423, 3.56485, 0.0, 13.3603 ) }
    soma_0 { pt3dadd( -2.29406, 4.40125, 0.0, 12.7772 ) }
    soma_0 { pt3dadd( -2.62388, 5.23765, 0.0, 12.1069 ) }
    soma_0 { pt3dadd( -2.95371, 6.07405, 0.0, 11.425 ) }
    soma_0 { pt3dadd( -3.28353, 6.91045, 0.0, 9.72987 ) }
    soma_0 { pt3dadd( -3.61336, 7.74686, 0.0, 7.67118 ) }
    soma_0 { pt3dadd( -3.94319, 8.58326, 0.0, 4.32164 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 2.92163, -8.4076, 0.209999, 1.37 ) }
    dend_46 { pt3dadd( 3.39339, -9.16167, 0.0642883, 1.37 ) }
    dend_46 { pt3dadd( 3.97412, -9.89874, -0.176853, 1.37 ) }
    dend_46 { pt3dadd( 4.78947, -10.9265, -0.542348, 1.37 ) }
    dend_46 { pt3dadd( 5.25913, -11.5008, -0.67203, 1.37 ) }
    dend_46 { pt3dadd( 6.02131, -12.4184, -0.780328, 1.37 ) }
    dend_46 { pt3dadd( 6.84297, -13.38, -0.829793, 0.91 ) }
    dend_46 { pt3dadd( 8.26811, -14.9642, -0.882558, 0.91 ) }
    dend_46 { pt3dadd( 9.24, -15.9327, -0.962243, 0.91 ) }
    dend_46 { pt3dadd( 10.9006, -17.3032, -1.21538, 0.91 ) }
    dend_46 { pt3dadd( 12.1078, -18.1434, -1.46695, 0.68 ) }
    dend_46 { pt3dadd( 13.641, -19.0194, -1.92352, 0.91 ) }
    dend_46 { pt3dadd( 15.3998, -19.7486, -2.6474, 0.68 ) }
    dend_46 { pt3dadd( 17.3432, -20.2388, -3.66061, 0.68 ) }
    dend_46 { pt3dadd( 19.2788, -20.3186, -5.04793, 0.68 ) }
    dend_46 { pt3dadd( 20.1989, -20.1293, -5.91363, 0.68 ) }
    dend_46 { pt3dadd( 21.3398, -19.437, -7.37673, 0.68 ) }
    dend_46 { pt3dadd( 22.013, -18.6148, -8.58693, 0.68 ) }
    dend_46 { pt3dadd( 22.4555, -17.7665, -9.70918, 0.68 ) }
    dend_46 { pt3dadd( 22.7884, -16.8575, -11.0676, 0.91 ) }
    dend_46 { pt3dadd( 22.9517, -16.3662, -12.1, 1.37 ) }
    dend_46 { pt3dadd( 23.2803, -15.7994, -14.1541, 0.68 ) }
    dend_46 { pt3dadd( 23.5681, -15.6142, -15.6409, 0.68 ) }
    dend_46 { pt3dadd( 23.9406, -15.5293, -17.3215, 0.68 ) }
    dend_46 { pt3dadd( 24.6091, -15.546, -19.6848, 0.68 ) }
    dend_46 { pt3dadd( 25.3603, -15.6738, -21.882, 0.68 ) }
    dend_46 { pt3dadd( 26.1444, -15.8182, -23.6887, 0.68 ) }
    dend_46 { pt3dadd( 26.7345, -15.9061, -24.6844, 0.68 ) }
    dend_46 { pt3dadd( 27.2414, -15.9283, -25.4271, 0.68 ) }
    dend_46 { pt3dadd( 28.1655, -15.8455, -26.6269, 0.91 ) }
    dend_46 { pt3dadd( 28.5887, -15.7924, -27.1555, 0.91 ) }
    dend_46 { pt3dadd( 29.9679, -15.6021, -29.0282, 0.46 ) }
    dend_46 { pt3dadd( 31.0213, -15.4602, -30.6747, 0.91 ) }
    dend_46 { pt3dadd( 32.0008, -15.3934, -32.564, 0.91 ) }
    dend_46 { pt3dadd( 33.1429, -15.3539, -35.0912, 0.91 ) }
    dend_46 { pt3dadd( 33.6829, -15.3446, -36.4872, 0.91 ) }
    dend_46 { pt3dadd( 34.1334, -15.3384, -37.8778, 0.91 ) }
    dend_46 { pt3dadd( 34.4046, -15.3484, -39.0219, 0.91 ) }
    dend_46 { pt3dadd( 34.8206, -15.3532, -41.2552, 0.91 ) }
    dend_46 { pt3dadd( 35.4381, -15.4244, -44.2484, 0.46 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.55163, -2.9546, 7.25, 1.37 ) }
    dend_41 { pt3dadd( 6.5771, -2.94833, 7.26462, 1.37 ) }
    dend_41 { pt3dadd( 8.33553, -2.47549, 8.07704, 1.37 ) }
    dend_41 { pt3dadd( 9.62397, -2.08696, 8.49684, 1.14 ) }
    dend_41 { pt3dadd( 11.4867, -1.51884, 8.90596, 1.37 ) }
    dend_41 { pt3dadd( 13.5488, -0.883788, 9.15457, 1.14 ) }
    dend_41 { pt3dadd( 15.1968, -0.376428, 9.16124, 0.91 ) }
    dend_41 { pt3dadd( 16.2413, -0.0693348, 8.95016, 0.91 ) }
    dend_41 { pt3dadd( 17.7473, 0.299248, 8.23469, 0.91 ) }
    dend_41 { pt3dadd( 18.8839, 0.461882, 7.45014, 1.14 ) }
    dend_41 { pt3dadd( 19.7803, 0.477878, 6.69494, 1.37 ) }
    dend_41 { pt3dadd( 21.1637, 0.3558, 5.50512, 1.82 ) }
    dend_41 { pt3dadd( 22.5477, 0.157414, 4.31327, 1.37 ) }
    dend_41 { pt3dadd( 23.7863, -0.110675, 3.25727, 1.14 ) }
    dend_41 { pt3dadd( 25.3696, -0.565968, 1.93185, 1.14 ) }
    dend_41 { pt3dadd( 26.5557, -0.96817, 0.918259, 1.14 ) }
    dend_41 { pt3dadd( 28.1239, -1.58814, -0.28779, 1.14 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.741626, 9.1199, -6.69, 3.19 ) }
    dend_38 { pt3dadd( 0.951917, 9.72518, -8.48264, 2.73 ) }
    dend_38 { pt3dadd( 1.3136, 10.7662, -11.5658, 2.73 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 81/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.36163, 3.4209, 7.23, 1.37 ) }
    dend_31 { pt3dadd( 4.80219, 4.24991, 7.56008, 1.37 ) }
    dend_31 { pt3dadd( 5.5495, 5.65613, 8.11998, 1.59 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 84/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -7.36837, 5.29665, -1.97, 1.59 ) }
    dend_26 { pt3dadd( -7.36837, 5.29665, -1.97, 1.59 ) }
    dend_26 { pt3dadd( -8.08468, 6.31509, -2.64004, 1.37 ) }
    dend_26 { pt3dadd( -8.76588, 7.59249, -3.80732, 1.37 ) }
    dend_26 { pt3dadd( -9.29996, 8.83124, -5.17593, 1.59 ) }
    dend_26 { pt3dadd( -9.59941, 9.51346, -5.96506, 1.37 ) }
    dend_26 { pt3dadd( -10.1348, 10.7332, -7.37594, 1.14 ) }
    dend_26 { pt3dadd( -10.4906, 11.6505, -8.51819, 1.14 ) }
    dend_26 { pt3dadd( -10.973, 13.3226, -10.8888, 1.14 ) }
    dend_26 { pt3dadd( -11.1404, 14.1518, -12.2895, 1.14 ) }
    dend_26 { pt3dadd( -11.1893, 14.812, -13.5123, 1.14 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 95/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.09837, -7.33135, 5.48, 1.14 ) }
    dend_23 { pt3dadd( -3.72792, -7.57302, 5.38368, 1.14 ) }
    dend_23 { pt3dadd( -5.26145, -8.04776, 5.14794, 0.91 ) }
    dend_23 { pt3dadd( -6.5181, -8.37065, 5.00621, 0.91 ) }
    dend_23 { pt3dadd( -7.95442, -8.64437, 4.87867, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( -9.41174, -8.83805, 4.80437, 0.91 ) }
    dend_23 { pt3dadd( -11.8726, -9.02504, 4.74002, 1.14 ) }
    dend_23 { pt3dadd( -14.222, -8.98057, 4.79166, 1.14 ) }
    dend_23 { pt3dadd( -15.57, -8.78989, 4.92535, 1.14 ) }
    dend_23 { pt3dadd( -16.9856, -8.44609, 5.17659, 0.91 ) }
    dend_23 { pt3dadd( -18.1593, -8.09248, 5.45434, 0.91 ) }
    dend_23 { pt3dadd( -19.1433, -7.77986, 5.76069, 1.14 ) }
    dend_23 { pt3dadd( -20.5029, -7.40491, 6.39822, 0.91 ) }
    dend_23 { pt3dadd( -21.5893, -7.33728, 7.07761, 0.91 ) }
    dend_23 { pt3dadd( -22.3398, -7.40342, 7.5681, 1.14 ) }
    dend_23 { pt3dadd( -23.5498, -7.7672, 8.41046, 1.14 ) }
    dend_23 { pt3dadd( -24.3815, -8.18764, 8.98041, 0.91 ) }
    dend_23 { pt3dadd( -25.8026, -9.1976, 10.0041, 0.91 ) }
    dend_23 { pt3dadd( -27.193, -10.4779, 10.9948, 1.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.371626, -6.81885, 10.68, 3.19 ) }
    dend_0 { pt3dadd( 0.378597, -7.44868, 11.3241, 3.19 ) }
    dend_0 { pt3dadd( 0.391583, -8.62191, 12.524, 2.73 ) }
    dend_0 { pt3dadd( 0.40451, -9.78983, 13.7184, 2.73 ) }
    dend_0 { pt3dadd( 0.419596, -11.1528, 15.1123, 2.51 ) }
    dend_0 { pt3dadd( 0.434802, -12.5267, 16.5173, 2.28 ) }
    dend_0 { pt3dadd( 0.448384, -13.7537, 17.7723, 2.73 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 21/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -3.94319, 8.58326, 0.0, 0.567227 ) }
    axon_0 { pt3dadd( -9.44588, 22.5375, 0.0, 0.567227 ) }
    axon_0 { pt3dadd( -14.9486, 36.4917, 0.0, 0.567227 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 24/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 28.1239, -1.58814, -0.28779, 0.91 ) }
    dend_45 { pt3dadd( 28.7574, -2.11253, 0.514864, 0.91 ) }
    dend_45 { pt3dadd( 29.5544, -2.74633, 1.63639, 0.91 ) }
    dend_45 { pt3dadd( 30.238, -3.33832, 2.72011, 0.68 ) }
    dend_45 { pt3dadd( 30.9199, -4.04512, 3.89214, 0.91 ) }
    dend_45 { pt3dadd( 31.4978, -4.80643, 4.91632, 0.91 ) }
    dend_45 { pt3dadd( 32.4013, -6.28051, 6.47148, 0.68 ) }
    dend_45 { pt3dadd( 33.0652, -7.54374, 7.5457, 0.68 ) }
    dend_45 { pt3dadd( 33.5861, -8.73679, 8.39973, 0.91 ) }
    dend_45 { pt3dadd( 34.0389, -9.90434, 9.14799, 0.68 ) }
    dend_45 { pt3dadd( 34.7848, -11.9648, 10.371, 0.68 ) }
    dend_45 { pt3dadd( 35.4785, -13.8841, 11.4705, 0.91 ) }
    dend_45 { pt3dadd( 36.0301, -15.238, 12.2412, 0.68 ) }
    dend_45 { pt3dadd( 36.9618, -17.2635, 13.4662, 1.14 ) }
    dend_45 { pt3dadd( 37.7917, -18.9344, 14.5952, 0.91 ) }
    dend_45 { pt3dadd( 38.6698, -20.6262, 15.846, 0.91 ) }
    dend_45 { pt3dadd( 39.335, -21.8931, 16.8699, 0.68 ) }
    dend_45 { pt3dadd( 40.0361, -23.1613, 17.9175, 0.68 ) }
    dend_45 { pt3dadd( 40.5707, -24.1618, 18.6985, 0.68 ) }
    dend_45 { pt3dadd( 41.3542, -25.7001, 19.7835, 0.91 ) }
    dend_45 { pt3dadd( 41.9624, -26.9631, 20.5523, 0.68 ) }
    dend_45 { pt3dadd( 42.9462, -29.0983, 21.6463, 0.68 ) }
    dend_45 { pt3dadd( 44.093, -31.5362, 22.7299, 0.68 ) }
    dend_45 { pt3dadd( 44.8422, -33.083, 23.3183, 0.68 ) }
    dend_45 { pt3dadd( 45.5992, -34.5155, 23.7771, 0.68 ) }
    dend_45 { pt3dadd( 46.6892, -36.5467, 24.3063, 0.68 ) }
    dend_45 { pt3dadd( 47.8362, -38.7638, 24.8204, 0.68 ) }
    dend_45 { pt3dadd( 48.3731, -39.8281, 25.0098, 0.68 ) }
    dend_45 { pt3dadd( 49.283, -41.5929, 25.3223, 0.68 ) }
    dend_45 { pt3dadd( 50.5141, -43.6563, 25.7066, 0.68 ) }
    dend_45 { pt3dadd( 51.8329, -45.5932, 26.1215, 0.68 ) }
    dend_45 { pt3dadd( 53.073, -47.2594, 26.5289, 0.68 ) }
    dend_45 { pt3dadd( 53.9507, -48.3549, 26.7951, 0.91 ) }
    dend_45 { pt3dadd( 55.4738, -50.2019, 27.203, 0.68 ) }
    dend_45 { pt3dadd( 56.6813, -51.5803, 27.4681, 0.68 ) }
    dend_45 { pt3dadd( 58.2431, -53.3282, 27.7141, 0.91 ) }
    dend_45 { pt3dadd( 59.2161, -54.438, 27.8567, 0.68 ) }
    dend_45 { pt3dadd( 60.329, -55.8681, 28.0563, 0.68 ) }
    dend_45 { pt3dadd( 61.2158, -57.2056, 28.264, 0.68 ) }
    dend_45 { pt3dadd( 62.0811, -58.771, 28.5067, 0.91 ) }
    dend_45 { pt3dadd( 62.9884, -60.6394, 28.8752, 0.68 ) }
    dend_45 { pt3dadd( 64.0195, -62.8189, 29.4852, 0.46 ) }
    dend_45 { pt3dadd( 64.9406, -64.8134, 30.2745, 0.46 ) }
    dend_45 { pt3dadd( 65.4113, -65.9421, 30.8566, 0.91 ) }
    dend_45 { pt3dadd( 66.0338, -67.4898, 31.7526, 0.68 ) }
    dend_45 { pt3dadd( 66.6293, -69.0262, 32.6893, 0.46 ) }
    dend_45 { pt3dadd( 67.3045, -70.8315, 33.7165, 0.46 ) }
    dend_45 { pt3dadd( 68.0291, -72.8375, 34.682, 0.46 ) }
    dend_45 { pt3dadd( 68.9034, -75.3415, 35.6044, 0.46 ) }
    dend_45 { pt3dadd( 69.5907, -77.3417, 36.3282, 0.46 ) }
    dend_45 { pt3dadd( 69.9773, -78.5111, 36.7044, 0.46 ) }
    dend_45 { pt3dadd( 70.5976, -80.6758, 37.1238, 0.46 ) }
    dend_45 { pt3dadd( 70.8583, -81.6699, 37.1192, 1.14 ) }
    dend_45 { pt3dadd( 71.3493, -83.3479, 36.7437, 1.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 28.1239, -1.58814, -0.28779, 0.91 ) }
    dend_42 { pt3dadd( 29.156, -0.914811, -0.713601, 0.91 ) }
    dend_42 { pt3dadd( 30.2863, -0.577186, -1.13462, 0.91 ) }
    dend_42 { pt3dadd( 31.3948, -0.443876, -1.49525, 0.91 ) }
    dend_42 { pt3dadd( 32.3318, -0.450094, -1.74925, 0.91 ) }
    dend_42 { pt3dadd( 34.4062, -0.630907, -2.19574, 0.91 ) }
    dend_42 { pt3dadd( 36.5335, -0.886819, -2.57832, 0.91 ) }
    dend_42 { pt3dadd( 38.3916, -1.24118, -2.91142, 0.91 ) }
    dend_42 { pt3dadd( 39.7336, -1.58234, -3.13344, 0.91 ) }
    dend_42 { pt3dadd( 41.6852, -2.20274, -3.42094, 0.68 ) }
    dend_42 { pt3dadd( 43.2474, -2.77995, -3.5923, 0.68 ) }
    dend_42 { pt3dadd( 44.3364, -3.21922, -3.60505, 0.68 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 90/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 1.3136, 10.7662, -11.5658, 1.59 ) }
    dend_40 { pt3dadd( 2.5174, 10.4093, -13.2056, 1.59 ) }
    dend_40 { pt3dadd( 3.78246, 10.0725, -15.1463, 1.37 ) }
    dend_40 { pt3dadd( 5.11768, 9.76587, -17.5209, 1.37 ) }
    dend_40 { pt3dadd( 6.21335, 9.57966, -19.5937, 1.37 ) }
    dend_40 { pt3dadd( 7.38484, 9.38056, -21.8099, 1.37 ) }
    dend_40 { pt3dadd( 8.30415, 9.22432, -23.549, 1.14 ) }
    dend_40 { pt3dadd( 9.64138, 9.03494, -26.3006, 1.14 ) }
    dend_40 { pt3dadd( 10.9077, 8.96612, -29.2879, 1.14 ) }
    dend_40 { pt3dadd( 11.216, 9.00254, -30.1112, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 0/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 1.3136, 10.7662, -11.5658, 1.82 ) }
    dend_39 { pt3dadd( 1.28625, 11.8148, -12.8024, 1.82 ) }
    dend_39 { pt3dadd( 1.40141, 13.5953, -14.9605, 1.82 ) }
    dend_39 { pt3dadd( 1.55333, 15.0166, -16.5966, 1.82 ) }
    dend_39 { pt3dadd( 1.63143, 15.8775, -17.514, 1.82 ) }
    dend_39 { pt3dadd( 1.72593, 16.926, -18.5629, 1.37 ) }
    dend_39 { pt3dadd( 1.83398, 18.185, -19.8179, 1.37 ) }
    dend_39 { pt3dadd( 1.96468, 19.4846, -21.1414, 1.37 ) }
    dend_39 { pt3dadd( 2.08079, 20.5954, -22.241, 1.37 ) }
    dend_39 { pt3dadd( 2.19326, 21.9273, -23.5934, 1.14 ) }
    dend_39 { pt3dadd( 2.26917, 23.1379, -24.9165, 1.14 ) }
    dend_39 { pt3dadd( 2.34678, 24.4656, -26.5076, 1.14 ) }
    dend_39 { pt3dadd( 2.47966, 26.0158, -28.5678, 1.14 ) }
    dend_39 { pt3dadd( 2.59775, 27.1485, -30.2946, 1.14 ) }
    dend_39 { pt3dadd( 2.67601, 27.8695, -31.5634, 1.14 ) }
    dend_39 { pt3dadd( 2.7498, 28.6344, -33.2722, 1.14 ) }
    dend_39 { pt3dadd( 2.79815, 29.1618, -34.7692, 1.37 ) }
    dend_39 { pt3dadd( 2.92801, 29.6523, -36.725, 1.37 ) }
    dend_39 { pt3dadd( 3.16379, 29.9578, -38.6312, 1.37 ) }
    dend_39 { pt3dadd( 3.34079, 30.0634, -39.6871, 0.91 ) }
    dend_39 { pt3dadd( 3.7896, 30.232, -42.1041, 0.91 ) }
    dend_39 { pt3dadd( 4.16762, 30.302, -43.8922, 0.91 ) }
    dend_39 { pt3dadd( 4.82124, 30.3809, -46.6542, 0.91 ) }
    dend_39 { pt3dadd( 5.60335, 30.4744, -49.2921, 0.91 ) }
    dend_39 { pt3dadd( 6.24288, 30.5289, -50.9306, 0.91 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 25/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 5.5495, 5.65613, 8.11998, 0.91 ) }
    dend_33 { pt3dadd( 7.26807, 6.30181, 8.67007, 0.91 ) }
    dend_33 { pt3dadd( 9.46949, 7.1289, 9.37471, 1.14 ) }
    dend_33 { pt3dadd( 11.8034, 8.00578, 10.1218, 1.14 ) }
    dend_33 { pt3dadd( 12.776, 8.3712, 10.4331, 1.14 ) }
    dend_33 { pt3dadd( 14.0597, 8.85349, 10.844, 1.37 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 31/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.5495, 5.65613, 8.11998, 1.14 ) }
    dend_32 { pt3dadd( 5.81481, 7.78327, 7.69384, 1.14 ) }
    dend_32 { pt3dadd( 6.01243, 9.28556, 7.41148, 1.14 ) }
    dend_32 { pt3dadd( 6.16055, 10.4277, 7.16975, 1.14 ) }
    dend_32 { pt3dadd( 6.36786, 11.9592, 6.8385, 1.14 ) }
    dend_32 { pt3dadd( 6.62275, 13.8422, 6.43124, 1.14 ) }
    dend_32 { pt3dadd( 6.93704, 16.1641, 5.92907, 0.91 ) }
    dend_32 { pt3dadd( 7.15815, 17.5679, 5.59793, 0.91 ) }
    dend_32 { pt3dadd( 7.39578, 19.0257, 5.22676, 0.91 ) }
    dend_32 { pt3dadd( 7.68144, 21.0068, 4.71017, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 41/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -11.1893, 14.812, -13.5123, 1.14 ) }
    dend_28 { pt3dadd( -11.4137, 15.0091, -13.5538, 1.14 ) }
    dend_28 { pt3dadd( -12.4301, 15.9019, -13.7415, 1.14 ) }
    dend_28 { pt3dadd( -13.3916, 16.7466, -13.9191, 0.91 ) }
    dend_28 { pt3dadd( -14.4259, 17.655, -14.1102, 0.91 ) }
    dend_28 { pt3dadd( -15.7005, 18.7747, -14.3456, 0.91 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 47/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -11.1893, 14.812, -13.5123, 1.14 ) }
    dend_27 { pt3dadd( -12.0973, 15.3452, -14.8086, 1.14 ) }
    dend_27 { pt3dadd( -13.5876, 16.0915, -16.8238, 0.91 ) }
    dend_27 { pt3dadd( -14.5727, 16.572, -18.2975, 0.91 ) }
    dend_27 { pt3dadd( -15.3768, 16.9677, -19.6272, 1.14 ) }
    dend_27 { pt3dadd( -16.1754, 17.3528, -21.1434, 0.91 ) }
    dend_27 { pt3dadd( -17.0594, 17.7835, -23.0935, 1.14 ) }
    dend_27 { pt3dadd( -17.9874, 18.2844, -25.6501, 1.14 ) }
    dend_27 { pt3dadd( -18.8231, 18.7081, -28.0611, 1.14 ) }
    dend_27 { pt3dadd( -19.4934, 19.0044, -30.3184, 1.14 ) }
    dend_27 { pt3dadd( -19.9704, 19.2069, -32.4653, 0.68 ) }
    dend_27 { pt3dadd( -20.2176, 19.271, -34.0163, 0.68 ) }
    dend_27 { pt3dadd( -20.28, 19.2663, -35.7243, 0.68 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 60/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -27.193, -10.4779, 10.9948, 0.91 ) }
    dend_25 { pt3dadd( -29.0716, -10.8949, 11.6315, 0.91 ) }
    dend_25 { pt3dadd( -31.138, -11.1745, 11.9226, 0.91 ) }
    dend_25 { pt3dadd( -33.215, -11.263, 11.7831, 0.91 ) }
    dend_25 { pt3dadd( -34.2709, -11.2422, 11.4937, 0.68 ) }
    dend_25 { pt3dadd( -36.8029, -11.2003, 10.3322, 0.46 ) }
    dend_25 { pt3dadd( -38.1882, -11.2412, 9.49464, 0.46 ) }
    dend_25 { pt3dadd( -39.6315, -11.3673, 8.19639, 0.46 ) }
    dend_25 { pt3dadd( -40.83, -11.5687, 6.87435, 0.68 ) }
    dend_25 { pt3dadd( -42.081, -11.8406, 5.35189, 0.68 ) }
    dend_25 { pt3dadd( -43.6532, -12.1741, 3.47152, 0.68 ) }
    dend_25 { pt3dadd( -44.8492, -12.4586, 2.13026, 0.68 ) }
    dend_25 { pt3dadd( -46.2146, -12.8347, 0.725291, 0.68 ) }
    dend_25 { pt3dadd( -47.0406, -13.078, 0.0345733, 0.46 ) }
    dend_25 { pt3dadd( -48.2362, -13.4747, -0.754192, 0.46 ) }
    dend_25 { pt3dadd( -50.4974, -14.2637, -1.96934, 0.46 ) }
    dend_25 { pt3dadd( -52.1017, -14.7529, -2.79242, 0.46 ) }
    dend_25 { pt3dadd( -53.4657, -15.1068, -3.53443, 0.46 ) }
    dend_25 { pt3dadd( -55.315, -15.5407, -4.68603, 0.46 ) }
    dend_25 { pt3dadd( -56.6873, -15.8859, -5.68349, 0.23 ) }
    dend_25 { pt3dadd( -58.2878, -16.406, -7.02377, 0.46 ) }
    dend_25 { pt3dadd( -59.8872, -17.0943, -8.56295, 0.46 ) }
    dend_25 { pt3dadd( -60.9231, -17.5555, -9.63611, 0.68 ) }
    dend_25 { pt3dadd( -61.5283, -17.7612, -10.2923, 0.68 ) }
    dend_25 { pt3dadd( -61.8199, -17.8219, -10.6184, 0.46 ) }
    dend_25 { pt3dadd( -62.8849, -17.9343, -11.651, 0.46 ) }
    dend_25 { pt3dadd( -63.9741, -18.0134, -12.4928, 0.46 ) }
    dend_25 { pt3dadd( -64.6817, -18.0912, -12.9828, 0.46 ) }
    dend_25 { pt3dadd( -66.1329, -18.2403, -14.0259, 0.46 ) }
    dend_25 { pt3dadd( -67.8099, -18.3416, -15.3255, 0.46 ) }
    dend_25 { pt3dadd( -69.1988, -18.3864, -16.4967, 0.68 ) }
    dend_25 { pt3dadd( -70.5471, -18.4351, -17.7008, 0.68 ) }
    dend_25 { pt3dadd( -71.5691, -18.4868, -18.6432, 0.68 ) }
    dend_25 { pt3dadd( -72.4385, -18.5816, -19.4894, 0.68 ) }
    dend_25 { pt3dadd( -73.6397, -18.8398, -20.6625, 0.46 ) }
    dend_25 { pt3dadd( -74.6435, -19.1405, -21.6279, 0.46 ) }
    dend_25 { pt3dadd( -75.705, -19.5262, -22.548, 0.46 ) }
    dend_25 { pt3dadd( -76.1483, -19.6948, -22.8106, 0.46 ) }
    dend_25 { pt3dadd( -76.9926, -20.0173, -23.109, 0.46 ) }
    dend_25 { pt3dadd( -78.308, -20.6093, -23.4796, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_25 { pt3dadd( -79.1087, -21.01, -23.6853, 0.68 ) }
    dend_25 { pt3dadd( -80.2835, -21.4983, -24.0218, 0.46 ) }
    dend_25 { pt3dadd( -81.2659, -21.9057, -24.3666, 0.46 ) }
    dend_25 { pt3dadd( -82.3312, -22.4185, -24.8278, 0.68 ) }
    dend_25 { pt3dadd( -83.6236, -23.0667, -25.429, 0.46 ) }
    dend_25 { pt3dadd( -84.0126, -23.2512, -25.623, 0.91 ) }
    dend_25 { pt3dadd( -85.6624, -23.9001, -26.4667, 0.23 ) }
    dend_25 { pt3dadd( -86.9947, -24.2912, -27.2029, 0.23 ) }
    dend_25 { pt3dadd( -87.8693, -24.4862, -27.7158, 0.46 ) }
    dend_25 { pt3dadd( -89.2622, -24.6452, -28.5322, 1.14 ) }
    dend_25 { pt3dadd( -90.4613, -24.707, -29.2529, 0.23 ) }
    dend_25 { pt3dadd( -91.385, -24.7569, -29.875, 0.23 ) }
    dend_25 { pt3dadd( -92.7546, -24.8925, -30.9122, 0.23 ) }
    dend_25 { pt3dadd( -94.0446, -25.0822, -31.9302, 0.23 ) }
    dend_25 { pt3dadd( -95.1244, -25.4107, -32.8845, 0.68 ) }
    dend_25 { pt3dadd( -96.05, -25.9005, -33.8246, 0.23 ) }
    dend_25 { pt3dadd( -97.1511, -26.6423, -35.0042, 0.23 ) }
    dend_25 { pt3dadd( -98.1438, -27.4458, -36.047, 0.23 ) }
    dend_25 { pt3dadd( -98.8629, -28.1415, -36.7904, 0.68 ) }
    dend_25 { pt3dadd( -99.7741, -29.2507, -37.7941, 0.46 ) }
    dend_25 { pt3dadd( -100.065, -29.6805, -38.1217, 0.68 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -27.193, -10.4779, 10.9948, 1.14 ) }
    dend_24 { pt3dadd( -26.5312, -11.3944, 12.6366, 1.14 ) }
    dend_24 { pt3dadd( -25.985, -12.2537, 14.1768, 0.91 ) }
    dend_24 { pt3dadd( -25.5689, -13.0655, 15.6564, 0.91 ) }
    dend_24 { pt3dadd( -25.2441, -13.8817, 17.2317, 0.91 ) }
    dend_24 { pt3dadd( -25.0681, -14.5243, 18.5854, 0.91 ) }
    dend_24 { pt3dadd( -24.9679, -15.4758, 20.7254, 0.91 ) }
    dend_24 { pt3dadd( -25.2856, -15.9852, 22.1192, 0.91 ) }
    dend_24 { pt3dadd( -26.1727, -16.1291, 23.0072, 0.91 ) }
    dend_24 { pt3dadd( -27.6182, -16.1166, 23.8866, 0.91 ) }
    dend_24 { pt3dadd( -29.4077, -16.0618, 24.8275, 0.68 ) }
    dend_24 { pt3dadd( -31.1269, -16.0699, 25.6219, 0.68 ) }
    dend_24 { pt3dadd( -32.2432, -16.1634, 26.133, 0.68 ) }
    dend_24 { pt3dadd( -33.3519, -16.432, 26.8055, 0.68 ) }
    dend_24 { pt3dadd( -34.8042, -17.2646, 28.228, 0.68 ) }
    dend_24 { pt3dadd( -35.5803, -18.0055, 29.3863, 0.91 ) }
    dend_24 { pt3dadd( -36.0423, -18.5883, 30.2725, 0.91 ) }
    dend_24 { pt3dadd( -36.7649, -19.5644, 31.7322, 0.68 ) }
    dend_24 { pt3dadd( -37.5449, -20.655, 33.2413, 0.68 ) }
    dend_24 { pt3dadd( -38.3319, -21.7962, 34.6878, 0.68 ) }
    dend_24 { pt3dadd( -39.3636, -23.336, 36.4057, 0.91 ) }
    dend_24 { pt3dadd( -40.1794, -24.5451, 37.6514, 0.91 ) }
    dend_24 { pt3dadd( -41.4711, -26.1638, 39.344, 0.91 ) }
    dend_24 { pt3dadd( -42.2203, -27.0718, 40.2269, 0.91 ) }
    dend_24 { pt3dadd( -42.7552, -27.7032, 40.7575, 0.91 ) }
    dend_24 { pt3dadd( -43.695, -28.7509, 41.5425, 0.91 ) }
    dend_24 { pt3dadd( -45.1374, -30.4607, 42.6095, 0.91 ) }
    dend_24 { pt3dadd( -46.8694, -32.5872, 43.9397, 0.46 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 49/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.448384, -13.7537, 17.7723, 2.73 ) }
    dend_14 { pt3dadd( -0.094174, -14.6659, 17.5748, 2.73 ) }
    dend_14 { pt3dadd( -0.691902, -15.6708, 17.3573, 2.51 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 52/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.448384, -13.7537, 17.7723, 2.05 ) }
    dend_1 { pt3dadd( 2.85283, -15.8886, 17.1622, 2.05 ) }
    dend_1 { pt3dadd( 4.53227, -17.3798, 16.7361, 1.82 ) }
    dend_1 { pt3dadd( 5.72713, -18.4407, 16.4329, 1.82 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -14.9486, 36.4917, 0.0, 0.46 ) }
    axon_1 { pt3dadd( -20.4513, 50.4459, 0.0, 0.46 ) }
    axon_1 { pt3dadd( -25.954, 64.4002, 0.0, 0.46 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 59/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 44.3364, -3.21922, -3.60505, 0.46 ) }
    dend_44 { pt3dadd( 44.7576, -2.99755, -2.29781, 0.46 ) }
    dend_44 { pt3dadd( 45.68, -2.74466, 0.0935272, 0.46 ) }
    dend_44 { pt3dadd( 46.3626, -2.6396, 1.50719, 0.46 ) }
    dend_44 { pt3dadd( 47.2344, -2.5295, 2.9231, 0.46 ) }
    dend_44 { pt3dadd( 48.0349, -2.45091, 3.95702, 0.23 ) }
    dend_44 { pt3dadd( 48.7357, -2.34067, 4.76483, 0.23 ) }
    dend_44 { pt3dadd( 49.6928, -2.22772, 5.69694, 0.23 ) }
    dend_44 { pt3dadd( 50.6048, -2.05875, 6.51598, 0.46 ) }
    dend_44 { pt3dadd( 51.6727, -1.81821, 7.42754, 0.46 ) }
    dend_44 { pt3dadd( 52.959, -1.50759, 8.48437, 0.46 ) }
    dend_44 { pt3dadd( 54.3247, -1.07042, 9.64842, 0.46 ) }
    dend_44 { pt3dadd( 55.9276, -0.402793, 11.1713, 0.46 ) }
    dend_44 { pt3dadd( 57.3538, 0.299816, 12.7007, 0.46 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 44.3364, -3.21922, -3.60505, 0.46 ) }
    dend_43 { pt3dadd( 44.6635, -3.9417, -4.98508, 0.46 ) }
    dend_43 { pt3dadd( 44.9769, -4.43775, -6.22559, 0.46 ) }
    dend_43 { pt3dadd( 45.4297, -4.94546, -7.90975, 0.46 ) }
    dend_43 { pt3dadd( 45.7374, -5.15335, -8.91389, 0.46 ) }
    dend_43 { pt3dadd( 46.3623, -5.3866, -10.5887, 0.46 ) }
    dend_43 { pt3dadd( 46.8612, -5.4894, -11.6203, 0.46 ) }
    dend_43 { pt3dadd( 47.7907, -5.49361, -12.8767, 0.46 ) }
    dend_43 { pt3dadd( 48.4963, -5.51368, -13.3726, 0.46 ) }
    dend_43 { pt3dadd( 49.3838, -5.60024, -13.7808, 0.68 ) }
    dend_43 { pt3dadd( 50.2362, -5.74346, -14.1843, 0.68 ) }
    dend_43 { pt3dadd( 51.419, -6.04018, -14.8236, 0.46 ) }
    dend_43 { pt3dadd( 53.2778, -6.64782, -16.083, 0.46 ) }
    dend_43 { pt3dadd( 55.045, -7.36015, -17.6141, 0.46 ) }
    dend_43 { pt3dadd( 56.2199, -7.90502, -18.9485, 0.46 ) }
    dend_43 { pt3dadd( 57.6059, -8.56332, -20.9434, 0.46 ) }
    dend_43 { pt3dadd( 58.7387, -9.02877, -22.9494, 0.46 ) }
    dend_43 { pt3dadd( 59.4235, -9.12785, -24.3862, 0.46 ) }
    dend_43 { pt3dadd( 59.8889, -8.96118, -25.5633, 0.46 ) }
    dend_43 { pt3dadd( 60.4985, -8.30448, -27.0889, 0.46 ) }
    dend_43 { pt3dadd( 60.8257, -7.69595, -27.6284, 0.46 ) }
    dend_43 { pt3dadd( 61.2811, -6.75192, -28.1368, 0.46 ) }
    dend_43 { pt3dadd( 62.3031, -4.66644, -29.0197, 0.68 ) }
    dend_43 { pt3dadd( 63.058, -3.21804, -29.6021, 0.68 ) }
    dend_43 { pt3dadd( 64.02, -1.51588, -30.4373, 0.68 ) }
    dend_43 { pt3dadd( 64.7071, -0.275116, -31.1767, 0.46 ) }
    dend_43 { pt3dadd( 65.6732, 1.40658, -32.4243, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_43 { pt3dadd( 66.0274, 2.03469, -32.9644, 0.46 ) }
    dend_43 { pt3dadd( 66.5206, 2.91206, -33.7819, 0.46 ) }
    dend_43 { pt3dadd( 67.6124, 4.94732, -35.7979, 0.46 ) }
    dend_43 { pt3dadd( 68.2356, 6.13555, -36.9831, 0.68 ) }
    dend_43 { pt3dadd( 68.7965, 7.16763, -38.0138, 0.46 ) }
    dend_43 { pt3dadd( 69.5302, 8.43649, -39.3578, 0.68 ) }
    dend_43 { pt3dadd( 70.0323, 9.1893, -40.19, 0.46 ) }
    dend_43 { pt3dadd( 71.0661, 10.4192, -41.5167, 0.46 ) }
    dend_43 { pt3dadd( 71.9982, 11.3631, -42.5231, 0.46 ) }
    dend_43 { pt3dadd( 73.5378, 12.5468, -43.9864, 0.46 ) }
    dend_43 { pt3dadd( 74.695, 13.1617, -44.9608, 0.46 ) }
    dend_43 { pt3dadd( 75.9173, 13.4823, -45.8466, 0.23 ) }
    dend_43 { pt3dadd( 77.3461, 13.6424, -46.7788, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 13/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 14.0597, 8.85349, 10.844, 0.91 ) }
    dend_35 { pt3dadd( 15.0766, 8.58686, 11.7277, 0.91 ) }
    dend_35 { pt3dadd( 15.735, 8.33179, 12.3708, 0.91 ) }
    dend_35 { pt3dadd( 16.9232, 7.74794, 13.6756, 0.91 ) }
    dend_35 { pt3dadd( 17.816, 7.19867, 14.7963, 1.14 ) }
    dend_35 { pt3dadd( 18.8166, 6.44793, 16.1867, 0.91 ) }
    dend_35 { pt3dadd( 19.5831, 5.71383, 17.3549, 0.91 ) }
    dend_35 { pt3dadd( 20.4057, 4.77134, 18.8313, 1.14 ) }
    dend_35 { pt3dadd( 20.851, 4.13927, 19.76, 0.91 ) }
    dend_35 { pt3dadd( 21.3218, 3.23334, 20.9445, 0.91 ) }
    dend_35 { pt3dadd( 21.5203, 2.61731, 21.6456, 0.91 ) }
    dend_35 { pt3dadd( 21.6945, 1.28704, 22.904, 1.14 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 14.0597, 8.85349, 10.844, 1.37 ) }
    dend_34 { pt3dadd( 13.9616, 10.0735, 10.2384, 1.37 ) }
    dend_34 { pt3dadd( 13.7168, 11.66, 9.32043, 0.91 ) }
    dend_34 { pt3dadd( 13.4513, 13.1015, 8.35304, 0.91 ) }
    dend_34 { pt3dadd( 13.1564, 14.9934, 6.99784, 0.91 ) }
    dend_34 { pt3dadd( 12.9235, 17.1369, 5.38465, 0.91 ) }
    dend_34 { pt3dadd( 12.8937, 18.7146, 4.18374, 0.91 ) }
    dend_34 { pt3dadd( 12.9833, 20.0512, 3.11043, 0.91 ) }
    dend_34 { pt3dadd( 13.2328, 21.6688, 1.7011, 0.91 ) }
    dend_34 { pt3dadd( 13.5583, 22.9551, 0.513708, 0.91 ) }
    dend_34 { pt3dadd( 14.0906, 24.41, -0.750373, 0.91 ) }
    dend_34 { pt3dadd( 15.0331, 26.2881, -2.25924, 0.91 ) }
    dend_34 { pt3dadd( 15.6504, 27.4073, -3.02995, 0.91 ) }
    dend_34 { pt3dadd( 15.7575, 27.5995, -3.15781, 0.91 ) }
    dend_34 { pt3dadd( 16.6781, 29.5645, -4.5718, 0.68 ) }
    dend_34 { pt3dadd( 17.2199, 31.0435, -5.88959, 0.68 ) }
    dend_34 { pt3dadd( 17.5247, 32.1048, -7.09128, 0.46 ) }
    dend_34 { pt3dadd( 17.6602, 32.8515, -8.07894, 0.68 ) }
    dend_34 { pt3dadd( 17.7948, 34.0233, -9.75388, 0.68 ) }
    dend_34 { pt3dadd( 17.9133, 35.3766, -11.7912, 0.68 ) }
    dend_34 { pt3dadd( 17.9943, 36.3637, -13.3788, 0.68 ) }
    dend_34 { pt3dadd( 18.0229, 37.3471, -15.0865, 0.68 ) }
    dend_34 { pt3dadd( 17.974, 38.3392, -16.7697, 0.23 ) }
    dend_34 { pt3dadd( 17.8908, 39.5096, -18.7248, 0.23 ) }
    dend_34 { pt3dadd( 17.8529, 40.045, -19.4796, 0.23 ) }
    dend_34 { pt3dadd( 17.8261, 40.6291, -20.1248, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -15.7005, 18.7747, -14.3456, 0.91 ) }
    dend_30 { pt3dadd( -17.0217, 19.2603, -15.6296, 0.91 ) }
    dend_30 { pt3dadd( -18.5563, 19.7173, -17.2727, 0.91 ) }
    dend_30 { pt3dadd( -20.2148, 20.0994, -19.0667, 0.91 ) }
    dend_30 { pt3dadd( -21.3868, 20.3694, -20.3345, 0.91 ) }
    dend_30 { pt3dadd( -23.3391, 20.8191, -22.4463, 0.91 ) }
    dend_30 { pt3dadd( -24.7708, 21.1489, -23.995, 0.91 ) }
    dend_30 { pt3dadd( -26.2294, 21.4434, -25.6804, 0.91 ) }
    dend_30 { pt3dadd( -27.6487, 21.6012, -27.4362, 0.68 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -15.7005, 18.7747, -14.3456, 0.68 ) }
    dend_29 { pt3dadd( -15.4899, 20.1238, -15.0225, 0.68 ) }
    dend_29 { pt3dadd( -15.3135, 21.5144, -15.6255, 0.68 ) }
    dend_29 { pt3dadd( -15.2402, 22.9111, -16.0962, 0.91 ) }
    dend_29 { pt3dadd( -15.2746, 24.4039, -16.6777, 0.91 ) }
    dend_29 { pt3dadd( -15.2927, 25.1858, -16.9823, 0.68 ) }
    dend_29 { pt3dadd( -15.3116, 26.0054, -17.3015, 0.68 ) }
    dend_29 { pt3dadd( -15.409, 27.4387, -17.8467, 0.68 ) }
    dend_29 { pt3dadd( -15.663, 29.654, -18.6109, 0.68 ) }
    dend_29 { pt3dadd( -16.042, 31.688, -19.2996, 0.91 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 70/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -0.691902, -15.6708, 17.3573, 1.14 ) }
    dend_16 { pt3dadd( -1.84734, -15.887, 16.8593, 1.14 ) }
    dend_16 { pt3dadd( -3.8648, -16.1299, 15.8944, 1.14 ) }
    dend_16 { pt3dadd( -5.92042, -16.235, 14.8035, 1.14 ) }
    dend_16 { pt3dadd( -7.6128, -16.2242, 13.83, 1.14 ) }
    dend_16 { pt3dadd( -9.337, -16.1392, 12.7665, 0.91 ) }
    dend_16 { pt3dadd( -10.7554, -16.0302, 11.8637, 1.14 ) }
    dend_16 { pt3dadd( -12.1882, -15.8424, 10.867, 0.91 ) }
    dend_16 { pt3dadd( -13.8481, -15.4843, 9.5914, 0.91 ) }
    dend_16 { pt3dadd( -15.0368, -15.0949, 8.62227, 1.14 ) }
    dend_16 { pt3dadd( -15.7495, -14.8036, 8.01198, 1.37 ) }
    dend_16 { pt3dadd( -16.0301, -14.6792, 7.74993, 1.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.691902, -15.6708, 17.3573, 1.14 ) }
    dend_15 { pt3dadd( 0.0041422, -18.39, 17.152, 1.14 ) }
    dend_15 { pt3dadd( 0.365561, -19.8019, 17.0454, 1.14 ) }
    dend_15 { pt3dadd( 0.890494, -21.8525, 16.8905, 1.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.72713, -18.4407, 16.4329, 1.37 ) }
    dend_11 { pt3dadd( 7.02115, -18.5381, 16.07, 1.37 ) }
    dend_11 { pt3dadd( 8.35215, -18.6491, 15.562, 1.37 ) }
    dend_11 { pt3dadd( 9.1699, -18.7593, 15.2018, 1.37 ) }
    dend_11 { pt3dadd( 10.4989, -18.976, 14.6027, 1.37 ) }
    dend_11 { pt3dadd( 12.0749, -19.2484, 13.8881, 1.37 ) }
    dend_11 { pt3dadd( 13.2283, -19.4458, 13.3297, 1.37 ) }
    dend_11 { pt3dadd( 14.6095, -19.7062, 12.6423, 1.37 ) }
    dend_11 { pt3dadd( 16.0314, -20.0324, 11.9331, 1.37 ) }
    dend_11 { pt3dadd( 16.8237, -20.2551, 11.5355, 1.37 ) }
    dend_11 { pt3dadd( 18.4879, -20.9349, 10.6662, 1.14 ) }
    dend_11 { pt3dadd( 20.0808, -21.8709, 9.85075, 1.14 ) }
    dend_11 { pt3dadd( 21.4043, -22.7215, 9.21268, 1.14 ) }
    dend_11 { pt3dadd( 22.2651, -23.3441, 8.81343, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_11 { pt3dadd( 22.9366, -23.9094, 8.48859, 1.14 ) }
    dend_11 { pt3dadd( 24.1235, -25.2215, 7.84755, 1.14 ) }
    dend_11 { pt3dadd( 24.9179, -26.6792, 7.35461, 1.14 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 3/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.72713, -18.4407, 16.4329, 1.82 ) }
    dend_2 { pt3dadd( 5.17355, -20.783, 16.7761, 1.82 ) }
    dend_2 { pt3dadd( 4.70505, -22.7653, 17.0665, 1.82 ) }
    dend_2 { pt3dadd( 4.16932, -25.0321, 17.3986, 1.59 ) }
    dend_2 { pt3dadd( 3.76604, -26.7385, 17.6486, 1.59 ) }
    dend_2 { pt3dadd( 3.41559, -28.2213, 17.8658, 1.59 ) }
    dend_2 { pt3dadd( 2.86817, -30.5376, 18.2052, 1.82 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 10/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 21.6945, 1.28704, 22.904, 0.68 ) }
    dend_37 { pt3dadd( 20.0356, 1.46136, 23.9407, 0.68 ) }
    dend_37 { pt3dadd( 17.5883, 1.55783, 25.2978, 1.14 ) }
    dend_37 { pt3dadd( 15.9724, 1.52619, 26.1856, 0.91 ) }
    dend_37 { pt3dadd( 14.1702, 1.38831, 27.2199, 0.68 ) }
    dend_37 { pt3dadd( 13.108, 1.23655, 27.8727, 0.68 ) }
    dend_37 { pt3dadd( 11.7775, 0.975797, 28.7665, 0.91 ) }
    dend_37 { pt3dadd( 9.81598, 0.442963, 30.1742, 0.68 ) }
    dend_37 { pt3dadd( 8.37407, -0.0884252, 31.3271, 0.68 ) }
    dend_37 { pt3dadd( 7.48659, -0.535144, 32.2122, 0.91 ) }
    dend_37 { pt3dadd( 6.51426, -1.16844, 33.3535, 0.91 ) }
    dend_37 { pt3dadd( 5.5031, -1.905, 34.6371, 0.91 ) }
    dend_37 { pt3dadd( 4.64318, -2.59503, 35.784, 0.91 ) }
    dend_37 { pt3dadd( 4.04581, -3.10195, 36.5526, 0.91 ) }
    dend_37 { pt3dadd( 3.19164, -3.79392, 37.5352, 0.91 ) }
    dend_37 { pt3dadd( 2.65187, -4.17213, 38.0842, 0.91 ) }
    dend_37 { pt3dadd( 1.38315, -5.0346, 39.3152, 0.68 ) }
    dend_37 { pt3dadd( 0.134952, -5.93276, 40.5089, 0.68 ) }
    dend_37 { pt3dadd( -1.28535, -6.95454, 41.8103, 0.68 ) }
    dend_37 { pt3dadd( -2.3073, -7.69301, 42.7408, 0.68 ) }
    dend_37 { pt3dadd( -3.61295, -8.56, 43.8964, 0.68 ) }
    dend_37 { pt3dadd( -4.73855, -9.2639, 45.0004, 0.68 ) }
    dend_37 { pt3dadd( -5.83234, -9.97186, 46.3353, 0.91 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 33/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 21.6945, 1.28704, 22.904, 0.68 ) }
    dend_36 { pt3dadd( 22.2475, 1.41801, 23.6025, 0.68 ) }
    dend_36 { pt3dadd( 23.5493, 1.62611, 25.3165, 0.68 ) }
    dend_36 { pt3dadd( 24.0855, 1.68002, 26.1062, 0.68 ) }
    dend_36 { pt3dadd( 25.416, 1.70132, 28.2381, 0.68 ) }
    dend_36 { pt3dadd( 26.3665, 1.62563, 29.7756, 0.68 ) }
    dend_36 { pt3dadd( 27.3504, 1.48105, 31.3382, 0.68 ) }
    dend_36 { pt3dadd( 28.2287, 1.30944, 32.7062, 0.68 ) }
    dend_36 { pt3dadd( 29.0658, 1.06693, 33.8676, 0.68 ) }
    dend_36 { pt3dadd( 29.7852, 0.741533, 34.848, 0.68 ) }
    dend_36 { pt3dadd( 30.4058, 0.316351, 35.6614, 0.68 ) }
    dend_36 { pt3dadd( 31.0341, -0.200945, 36.484, 0.68 ) }
    dend_36 { pt3dadd( 31.7252, -0.834522, 37.5017, 0.68 ) }
    dend_36 { pt3dadd( 32.4791, -1.56735, 38.7779, 0.46 ) }
    dend_36 { pt3dadd( 33.075, -2.14544, 39.7909, 0.46 ) }
    dend_36 { pt3dadd( 33.8825, -2.95264, 41.2823, 0.68 ) }
    dend_36 { pt3dadd( 34.9238, -4.08991, 43.5367, 0.68 ) }
    dend_36 { pt3dadd( 35.6631, -5.04435, 45.4984, 0.68 ) }
    dend_36 { pt3dadd( 36.0805, -5.70991, 46.9813, 0.46 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -16.0301, -14.6792, 7.74993, 0.68 ) }
    dend_22 { pt3dadd( -15.4516, -13.6518, 5.38779, 0.68 ) }
    dend_22 { pt3dadd( -14.7623, -12.6151, 3.24888, 0.68 ) }
    dend_22 { pt3dadd( -14.4591, -12.1801, 2.41316, 0.46 ) }
    dend_22 { pt3dadd( -13.7061, -11.0484, 0.300307, 0.68 ) }
    dend_22 { pt3dadd( -13.0551, -9.96455, -1.76383, 0.68 ) }
    dend_22 { pt3dadd( -12.5652, -9.0457, -3.60356, 0.68 ) }
    dend_22 { pt3dadd( -12.1078, -8.11115, -5.47814, 0.68 ) }
    dend_22 { pt3dadd( -11.8723, -7.57315, -6.71524, 0.68 ) }
    dend_22 { pt3dadd( -11.6967, -7.04713, -8.36106, 0.91 ) }
    dend_22 { pt3dadd( -11.6786, -6.60412, -10.5927, 0.91 ) }
    dend_22 { pt3dadd( -11.8323, -6.50786, -12.2068, 0.91 ) }
    dend_22 { pt3dadd( -11.9433, -6.55979, -12.7272, 0.68 ) }
    dend_22 { pt3dadd( -12.7716, -7.17783, -15.062, 0.68 ) }
    dend_22 { pt3dadd( -13.9902, -8.16755, -17.3329, 0.68 ) }
    dend_22 { pt3dadd( -14.4746, -8.56303, -17.9313, 0.68 ) }
    dend_22 { pt3dadd( -15.1944, -9.177, -18.65, 0.46 ) }
    dend_22 { pt3dadd( -16.5542, -10.2991, -19.7404, 0.23 ) }
    dend_22 { pt3dadd( -17.4705, -10.985, -20.2975, 0.23 ) }
    dend_22 { pt3dadd( -19.2724, -12.0888, -20.828, 0.23 ) }
    dend_22 { pt3dadd( -20.5374, -12.7175, -21.0165, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -16.0301, -14.6792, 7.74993, 1.14 ) }
    dend_17 { pt3dadd( -16.9079, -14.5637, 7.37537, 1.14 ) }
    dend_17 { pt3dadd( -18.84, -14.3094, 6.55096, 1.14 ) }
    dend_17 { pt3dadd( -20.0244, -14.1535, 6.04561, 1.14 ) }
    dend_17 { pt3dadd( -21.5699, -13.95, 5.38616, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 78/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 24.9179, -26.6792, 7.35461, 1.37 ) }
    dend_13 { pt3dadd( 25.0717, -26.8716, 7.30074, 1.37 ) }
    dend_13 { pt3dadd( 26.3669, -28.2189, 6.98087, 1.37 ) }
    dend_13 { pt3dadd( 27.322, -29.0577, 6.80309, 0.91 ) }
    dend_13 { pt3dadd( 28.6182, -30.0503, 6.61774, 1.14 ) }
    dend_13 { pt3dadd( 29.6496, -30.7903, 6.52991, 0.68 ) }
    dend_13 { pt3dadd( 31.4379, -32.015, 6.5112, 0.68 ) }
    dend_13 { pt3dadd( 33.0094, -32.9974, 6.62006, 0.68 ) }
    dend_13 { pt3dadd( 34.2225, -33.6727, 6.80381, 0.68 ) }
    dend_13 { pt3dadd( 35.8591, -34.4893, 7.09861, 0.68 ) }
    dend_13 { pt3dadd( 37.2198, -35.0962, 7.37112, 0.68 ) }
    dend_13 { pt3dadd( 39.2299, -35.9061, 7.81249, 0.91 ) }
    dend_13 { pt3dadd( 40.2728, -36.2896, 8.07241, 0.68 ) }
    dend_13 { pt3dadd( 41.4399, -36.6707, 8.35534, 0.68 ) }
    dend_13 { pt3dadd( 42.3233, -36.9626, 8.58137, 0.68 ) }
    dend_13 { pt3dadd( 43.5825, -37.3899, 8.89662, 0.68 ) }
    dend_13 { pt3dadd( 44.8835, -37.8345, 9.17985, 0.23 ) }
    dend_13 { pt3dadd( 46.1746, -38.3057, 9.42236, 0.68 ) }
    dend_13 { pt3dadd( 47.8591, -39.033, 9.7323, 0.46 ) }
    dend_13 { pt3dadd( 49.2358, -39.7145, 9.96491, 0.46 ) }
    dend_13 { pt3dadd( 50.5011, -40.3896, 10.174, 0.46 ) }
    dend_13 { pt3dadd( 51.109, -40.701, 10.2714, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_13 { pt3dadd( 52.7711, -41.4833, 10.5065, 0.68 ) }
    dend_13 { pt3dadd( 53.9307, -41.9615, 10.6343, 0.46 ) }
    dend_13 { pt3dadd( 54.8409, -42.2661, 10.6845, 0.46 ) }
    dend_13 { pt3dadd( 55.5533, -42.4292, 10.6844, 0.46 ) }
    dend_13 { pt3dadd( 57.9269, -42.7544, 10.6413, 0.68 ) }
    dend_13 { pt3dadd( 58.8726, -42.8729, 10.6072, 0.68 ) }
    dend_13 { pt3dadd( 59.3268, -42.948, 10.578, 0.68 ) }
    dend_13 { pt3dadd( 60.7227, -43.2445, 10.462, 0.23 ) }
    dend_13 { pt3dadd( 61.4187, -43.4977, 10.3928, 0.46 ) }
    dend_13 { pt3dadd( 62.704, -44.261, 10.2446, 0.23 ) }
    dend_13 { pt3dadd( 64.189, -45.6418, 10.0543, 0.91 ) }
    dend_13 { pt3dadd( 65.6728, -47.5329, 9.85244, 0.91 ) }
    dend_13 { pt3dadd( 65.9615, -48.0017, 9.7895, 0.91 ) }
    dend_13 { pt3dadd( 67.0066, -50.081, 9.45411, 0.68 ) }
    dend_13 { pt3dadd( 67.7136, -51.7275, 9.09851, 0.68 ) }
    dend_13 { pt3dadd( 68.4982, -53.8658, 8.47945, 0.91 ) }
    dend_13 { pt3dadd( 69.1749, -55.8227, 7.71077, 0.68 ) }
    dend_13 { pt3dadd( 69.794, -57.4525, 6.93347, 1.14 ) }
    dend_13 { pt3dadd( 70.2933, -58.4676, 6.33278, 0.91 ) }
    dend_13 { pt3dadd( 71.0325, -59.5354, 5.55478, 0.91 ) }
    dend_13 { pt3dadd( 72.3935, -60.9388, 4.32911, 0.91 ) }
    dend_13 { pt3dadd( 73.9654, -62.1823, 3.08112, 0.46 ) }
    dend_13 { pt3dadd( 75.103, -62.9787, 2.2732, 0.46 ) }
    dend_13 { pt3dadd( 76.9609, -64.3031, 1.07943, 0.46 ) }
    dend_13 { pt3dadd( 78.4529, -65.4152, 0.14306, 0.68 ) }
    dend_13 { pt3dadd( 79.9482, -66.5509, -0.739202, 0.46 ) }
    dend_13 { pt3dadd( 82.0026, -68.0776, -1.84131, 0.68 ) }
    dend_13 { pt3dadd( 82.8488, -68.7509, -2.25271, 0.46 ) }
    dend_13 { pt3dadd( 84.0626, -69.8455, -2.88075, 0.23 ) }
    dend_13 { pt3dadd( 84.8955, -70.7458, -3.31053, 0.23 ) }
    dend_13 { pt3dadd( 85.4184, -71.4454, -3.61522, 0.46 ) }
    dend_13 { pt3dadd( 86.1682, -72.5934, -3.9962, 0.68 ) }
    dend_13 { pt3dadd( 87.3673, -74.1443, -4.35415, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 33/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 24.9179, -26.6792, 7.35461, 0.68 ) }
    dend_12 { pt3dadd( 25.0898, -25.538, 3.52073, 0.68 ) }
    dend_12 { pt3dadd( 25.4507, -24.6797, 1.22161, 0.68 ) }
    dend_12 { pt3dadd( 25.9956, -23.8325, -0.630778, 0.68 ) }
    dend_12 { pt3dadd( 26.5956, -23.1136, -2.01894, 0.68 ) }
    dend_12 { pt3dadd( 27.2269, -22.4787, -3.1779, 0.46 ) }
    dend_12 { pt3dadd( 28.0681, -21.7968, -4.47324, 0.46 ) }
    dend_12 { pt3dadd( 29.1321, -21.1154, -5.48535, 0.46 ) }
    dend_12 { pt3dadd( 30.2951, -20.5662, -6.30699, 0.68 ) }
    dend_12 { pt3dadd( 31.4091, -20.2186, -6.9723, 0.68 ) }
    dend_12 { pt3dadd( 32.0078, -20.1306, -7.30111, 0.68 ) }
    dend_12 { pt3dadd( 34.0108, -20.0456, -8.50066, 0.46 ) }
    dend_12 { pt3dadd( 34.9715, -20.0332, -9.15201, 0.46 ) }
    dend_12 { pt3dadd( 36.286, -20.0226, -10.0811, 0.46 ) }
    dend_12 { pt3dadd( 37.5848, -20.0663, -10.9541, 0.46 ) }
    dend_12 { pt3dadd( 39.2632, -20.1797, -12.0101, 0.46 ) }
    dend_12 { pt3dadd( 41.298, -20.3447, -13.1803, 0.46 ) }
    dend_12 { pt3dadd( 43.3413, -20.5443, -14.1451, 0.23 ) }
    dend_12 { pt3dadd( 44.4326, -20.6715, -14.5773, 0.46 ) }
    dend_12 { pt3dadd( 45.6291, -20.8564, -14.9913, 0.23 ) }
    dend_12 { pt3dadd( 46.9532, -21.0689, -15.3487, 0.68 ) }
    dend_12 { pt3dadd( 48.0811, -21.1977, -15.6334, 0.23 ) }
    dend_12 { pt3dadd( 49.88, -21.3817, -16.0437, 0.46 ) }
    dend_12 { pt3dadd( 51.4276, -21.4914, -16.3983, 0.46 ) }
    dend_12 { pt3dadd( 53.1302, -21.5572, -16.9076, 0.23 ) }
    dend_12 { pt3dadd( 55.32, -21.6115, -17.7194, 0.68 ) }
    dend_12 { pt3dadd( 57.4492, -21.7023, -18.6464, 0.46 ) }
    dend_12 { pt3dadd( 59.0489, -21.8471, -19.4243, 0.46 ) }
    dend_12 { pt3dadd( 60.7205, -22.1209, -20.3002, 0.68 ) }
    dend_12 { pt3dadd( 63.1061, -22.6934, -21.5578, 0.46 ) }
    dend_12 { pt3dadd( 64.5409, -23.2234, -22.2598, 0.46 ) }
    dend_12 { pt3dadd( 65.388, -23.7302, -22.6339, 0.46 ) }
    dend_12 { pt3dadd( 66.7789, -24.9918, -23.201, 0.46 ) }
    dend_12 { pt3dadd( 67.7664, -26.2475, -23.6111, 0.46 ) }
    dend_12 { pt3dadd( 68.1823, -27.0161, -23.8295, 0.46 ) }
    dend_12 { pt3dadd( 68.8436, -28.846, -24.3352, 0.46 ) }
    dend_12 { pt3dadd( 69.2931, -30.5717, -24.9606, 0.23 ) }
    dend_12 { pt3dadd( 69.6897, -32.4952, -25.8378, 0.23 ) }
    dend_12 { pt3dadd( 69.8406, -33.3595, -26.2952, 0.68 ) }
    dend_12 { pt3dadd( 70.1884, -35.1522, -27.3444, 0.23 ) }
    dend_12 { pt3dadd( 70.6053, -36.7747, -28.3901, 0.68 ) }
    dend_12 { pt3dadd( 71.2269, -38.6737, -29.7088, 0.23 ) }
    dend_12 { pt3dadd( 71.7589, -40.0042, -30.684, 0.23 ) }
    dend_12 { pt3dadd( 72.2053, -40.8938, -31.3326, 0.68 ) }
    dend_12 { pt3dadd( 72.835, -41.9567, -32.0972, 0.23 ) }
    dend_12 { pt3dadd( 73.9733, -43.5887, -33.1563, 0.68 ) }
    dend_12 { pt3dadd( 75.4482, -45.5136, -34.2396, 0.23 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 80/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 2.86817, -30.5376, 18.2052, 1.37 ) }
    dend_6 { pt3dadd( 1.73109, -32.2892, 18.0313, 1.37 ) }
    dend_6 { pt3dadd( 1.0451, -33.346, 17.9264, 1.37 ) }
    dend_6 { pt3dadd( -0.40476, -35.5795, 17.7046, 1.37 ) }
    dend_6 { pt3dadd( -1.34153, -37.0225, 17.5614, 1.37 ) }
    dend_6 { pt3dadd( -3.04394, -39.6451, 17.301, 1.59 ) }
    dend_6 { pt3dadd( -4.39146, -41.7209, 17.0949, 1.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 2.86817, -30.5376, 18.2052, 1.14 ) }
    dend_3 { pt3dadd( 2.34625, -30.774, 19.3977, 1.14 ) }
    dend_3 { pt3dadd( 1.2795, -31.1556, 21.6632, 1.14 ) }
    dend_3 { pt3dadd( 0.338099, -31.4834, 23.6349, 1.14 ) }
    dend_3 { pt3dadd( -0.459684, -31.7182, 25.18, 1.14 ) }
    dend_3 { pt3dadd( -1.10048, -31.9101, 26.3456, 0.91 ) }
    dend_3 { pt3dadd( -2.09348, -32.2354, 28.073, 0.91 ) }
    dend_3 { pt3dadd( -3.04976, -32.5772, 29.6193, 0.91 ) }
    dend_3 { pt3dadd( -3.79502, -32.9052, 30.7538, 0.91 ) }
    dend_3 { pt3dadd( -4.57613, -33.3642, 31.9209, 0.91 ) }
    dend_3 { pt3dadd( -5.05162, -33.7247, 32.5748, 1.14 ) }
    dend_3 { pt3dadd( -5.8525, -34.5323, 33.5338, 1.14 ) }
    dend_3 { pt3dadd( -6.58542, -35.6269, 34.0575, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( -7.08045, -36.3866, 34.0828, 1.14 ) }
    dend_3 { pt3dadd( -7.74039, -37.2894, 34.0222, 0.91 ) }
    dend_3 { pt3dadd( -9.35208, -39.0687, 34.0232, 0.91 ) }
    dend_3 { pt3dadd( -10.8922, -40.2368, 34.3657, 0.91 ) }
    dend_3 { pt3dadd( -11.9755, -40.8668, 34.8515, 1.14 ) }
    dend_3 { pt3dadd( -13.1034, -41.4221, 35.6623, 0.91 ) }
    dend_3 { pt3dadd( -14.5345, -42.0135, 37.2035, 0.91 ) }
    dend_3 { pt3dadd( -15.753, -42.3999, 39.0804, 0.91 ) }
    dend_3 { pt3dadd( -16.5344, -42.4966, 40.6601, 0.91 ) }
    dend_3 { pt3dadd( -17.0875, -42.4484, 41.9954, 0.91 ) }
    dend_3 { pt3dadd( -17.4473, -42.3428, 42.9487, 0.91 ) }
    dend_3 { pt3dadd( -18.0322, -42.1288, 44.4148, 0.91 ) }
    dend_3 { pt3dadd( -18.3449, -42.0383, 44.9407, 1.14 ) }
    dend_3 { pt3dadd( -19.6397, -41.6337, 46.7884, 1.14 ) }
    dend_3 { pt3dadd( -20.6131, -41.3232, 47.8673, 1.14 ) }
    dend_3 { pt3dadd( -21.9847, -40.9061, 49.1335, 0.91 ) }
    dend_3 { pt3dadd( -23.4983, -40.5433, 50.3375, 0.91 ) }
    dend_3 { pt3dadd( -25.5489, -40.2735, 51.7694, 1.14 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 18/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -21.5699, -13.95, 5.38616, 0.91 ) }
    dend_21 { pt3dadd( -23.1276, -14.5316, 5.05549, 0.91 ) }
    dend_21 { pt3dadd( -25.0126, -15.1557, 4.82311, 0.68 ) }
    dend_21 { pt3dadd( -26.9103, -15.6821, 4.66616, 0.68 ) }
    dend_21 { pt3dadd( -28.6581, -16.072, 4.57018, 0.91 ) }
    dend_21 { pt3dadd( -29.5389, -16.2166, 4.50489, 0.68 ) }
    dend_21 { pt3dadd( -31.4269, -16.4259, 4.3427, 0.68 ) }
    dend_21 { pt3dadd( -32.765, -16.445, 4.30179, 0.68 ) }
    dend_21 { pt3dadd( -33.6601, -16.3683, 4.23849, 0.91 ) }
    dend_21 { pt3dadd( -34.3701, -16.2326, 4.08574, 0.68 ) }
    dend_21 { pt3dadd( -35.8478, -15.8907, 3.49381, 0.68 ) }
    dend_21 { pt3dadd( -37.0629, -15.6584, 2.83574, 1.37 ) }
    dend_21 { pt3dadd( -37.4363, -15.6068, 2.58753, 0.91 ) }
    dend_21 { pt3dadd( -38.9388, -15.5331, 1.4749, 0.91 ) }
    dend_21 { pt3dadd( -40.2828, -15.5943, 0.47646, 0.91 ) }
    dend_21 { pt3dadd( -41.8933, -15.746, -0.666066, 0.91 ) }
    dend_21 { pt3dadd( -43.912, -15.9947, -2.00968, 0.68 ) }
    dend_21 { pt3dadd( -45.3609, -16.2, -2.89985, 0.68 ) }
    dend_21 { pt3dadd( -46.5139, -16.3771, -3.52053, 0.46 ) }
    dend_21 { pt3dadd( -47.6603, -16.5675, -3.99723, 0.46 ) }
    dend_21 { pt3dadd( -49.3695, -16.821, -4.56163, 0.68 ) }
    dend_21 { pt3dadd( -51.1769, -17.0655, -5.01946, 0.68 ) }
    dend_21 { pt3dadd( -53.1427, -17.3051, -5.40262, 0.46 ) }
    dend_21 { pt3dadd( -55.779, -17.5565, -5.80392, 0.46 ) }
    dend_21 { pt3dadd( -58.5201, -17.6956, -6.15465, 0.46 ) }
    dend_21 { pt3dadd( -59.7909, -17.7379, -6.29822, 0.68 ) }
    dend_21 { pt3dadd( -60.8545, -17.7769, -6.3975, 0.68 ) }
    dend_21 { pt3dadd( -62.8744, -17.8888, -6.51493, 0.23 ) }
    dend_21 { pt3dadd( -64.2349, -17.9722, -6.60129, 0.46 ) }
    dend_21 { pt3dadd( -65.8471, -18.0745, -6.69036, 0.23 ) }
    dend_21 { pt3dadd( -67.3255, -18.1423, -6.75251, 0.23 ) }
    dend_21 { pt3dadd( -67.6956, -18.1467, -6.75835, 0.46 ) }
    dend_21 { pt3dadd( -70.0387, -18.0189, -6.73756, 0.23 ) }
    dend_21 { pt3dadd( -71.1103, -17.9358, -6.71229, 0.23 ) }
    dend_21 { pt3dadd( -72.9228, -17.7849, -6.64962, 0.91 ) }
    dend_21 { pt3dadd( -74.8201, -17.5785, -6.55091, 0.91 ) }
    dend_21 { pt3dadd( -76.6871, -17.2181, -6.40486, 0.91 ) }
    dend_21 { pt3dadd( -78.0044, -16.8419, -6.25805, 1.14 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 56/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -21.5699, -13.95, 5.38616, 0.46 ) }
    dend_18 { pt3dadd( -21.7236, -14.2691, 6.38814, 0.46 ) }
    dend_18 { pt3dadd( -21.8427, -14.5414, 7.32635, 0.46 ) }
    dend_18 { pt3dadd( -21.9817, -14.891, 8.54861, 0.68 ) }
    dend_18 { pt3dadd( -22.2364, -15.6446, 11.1341, 0.68 ) }
    dend_18 { pt3dadd( -22.4635, -16.3958, 13.6236, 0.68 ) }
    dend_18 { pt3dadd( -22.6231, -17.0077, 15.568, 0.68 ) }
    dend_18 { pt3dadd( -22.752, -17.3966, 16.9498, 0.91 ) }
    dend_18 { pt3dadd( -22.9775, -17.7627, 18.4224, 0.91 ) }
    dend_18 { pt3dadd( -23.3637, -18.1063, 19.9363, 0.91 ) }
    dend_18 { pt3dadd( -23.8706, -18.3218, 20.9751, 0.91 ) }
    dend_18 { pt3dadd( -24.8374, -18.3947, 21.8567, 0.68 ) }
    dend_18 { pt3dadd( -26.1292, -18.353, 22.5957, 0.68 ) }
    dend_18 { pt3dadd( -28.3091, -18.204, 23.5695, 0.91 ) }
    dend_18 { pt3dadd( -30.4292, -18.0356, 24.3586, 0.91 ) }
    dend_18 { pt3dadd( -32.8283, -17.8307, 25.2083, 0.68 ) }
    dend_18 { pt3dadd( -35.0323, -17.6446, 26.0441, 0.68 ) }
    dend_18 { pt3dadd( -36.7834, -17.5477, 26.8496, 0.68 ) }
    dend_18 { pt3dadd( -38.328, -17.6435, 27.9961, 0.68 ) }
    dend_18 { pt3dadd( -38.7202, -17.7414, 28.4647, 1.14 ) }
    dend_18 { pt3dadd( -39.5483, -18.1259, 29.717, 1.14 ) }
    dend_18 { pt3dadd( -40.4781, -18.7161, 31.2512, 1.14 ) }
    dend_18 { pt3dadd( -41.3236, -19.3529, 32.4917, 0.91 ) }
    dend_18 { pt3dadd( -42.2501, -20.041, 33.5779, 0.91 ) }
    dend_18 { pt3dadd( -44.0047, -21.2421, 35.3442, 0.91 ) }
    dend_18 { pt3dadd( -45.3588, -22.0704, 36.5422, 0.91 ) }
    dend_18 { pt3dadd( -46.3824, -22.6188, 37.3721, 1.14 ) }
    dend_18 { pt3dadd( -47.8035, -23.2519, 38.5433, 0.68 ) }
    dend_18 { pt3dadd( -49.1265, -23.6884, 39.8049, 0.68 ) }
    dend_18 { pt3dadd( -49.8171, -23.8878, 40.7389, 0.68 ) }
    dend_18 { pt3dadd( -50.1028, -23.9628, 41.4111, 0.91 ) }
    dend_18 { pt3dadd( -50.6806, -23.9536, 43.3301, 0.91 ) }
    dend_18 { pt3dadd( -51.1619, -23.8423, 45.4171, 0.91 ) }
    dend_18 { pt3dadd( -51.4525, -23.7937, 47.0538, 0.91 ) }
    dend_18 { pt3dadd( -51.7862, -23.9067, 49.2341, 0.91 ) }
    dend_18 { pt3dadd( -51.9537, -24.0795, 50.1788, 0.91 ) }
    dend_18 { pt3dadd( -52.2039, -24.5012, 51.2015, 0.91 ) }
    dend_18 { pt3dadd( -52.5586, -25.5156, 52.1958, 0.91 ) }
    dend_18 { pt3dadd( -52.9903, -27.1343, 53.0905, 0.91 ) }
    dend_18 { pt3dadd( -53.3455, -28.2122, 53.5362, 0.91 ) }
    dend_18 { pt3dadd( -54.1767, -29.8286, 54.145, 0.68 ) }
    dend_18 { pt3dadd( -54.808, -30.7851, 54.5701, 0.46 ) }
    dend_18 { pt3dadd( -55.4727, -31.6334, 55.0661, 0.46 ) }
    dend_18 { pt3dadd( -56.6798, -32.6644, 55.9133, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( -57.6984, -33.3463, 56.677, 0.46 ) }
    dend_18 { pt3dadd( -58.7495, -33.9441, 57.5489, 0.46 ) }
    dend_18 { pt3dadd( -59.955, -34.5093, 58.6125, 0.46 ) }
    dend_18 { pt3dadd( -60.7333, -34.7872, 59.2247, 0.46 ) }
    dend_18 { pt3dadd( -61.9925, -35.1216, 60.1782, 0.68 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 5/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -4.39146, -41.7209, 17.0949, 1.37 ) }
    dend_8 { pt3dadd( -4.80442, -43.1019, 16.6889, 1.37 ) }
    dend_8 { pt3dadd( -5.63212, -45.8698, 15.875, 1.14 ) }
    dend_8 { pt3dadd( -6.3058, -48.1227, 15.2126, 1.14 ) }
    dend_8 { pt3dadd( -6.72373, -49.5203, 14.8017, 1.14 ) }
    dend_8 { pt3dadd( -7.18802, -51.0729, 14.3452, 1.14 ) }
    dend_8 { pt3dadd( -7.84058, -53.2552, 13.7035, 1.14 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 12/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.39146, -41.7209, 17.0949, 0.68 ) }
    dend_7 { pt3dadd( -5.1765, -41.4155, 14.7599, 0.68 ) }
    dend_7 { pt3dadd( -5.93086, -41.0858, 13.1322, 0.68 ) }
    dend_7 { pt3dadd( -6.68833, -40.7192, 11.9453, 0.68 ) }
    dend_7 { pt3dadd( -8.14598, -40.0387, 10.0222, 0.68 ) }
    dend_7 { pt3dadd( -9.0297, -39.5939, 8.96665, 0.68 ) }
    dend_7 { pt3dadd( -9.83677, -39.1615, 8.04826, 0.68 ) }
    dend_7 { pt3dadd( -10.6026, -38.6775, 7.33135, 0.68 ) }
    dend_7 { pt3dadd( -11.6978, -37.8783, 6.3039, 0.23 ) }
    dend_7 { pt3dadd( -12.976, -36.9111, 4.98787, 0.23 ) }
    dend_7 { pt3dadd( -13.5723, -36.5133, 4.32074, 0.23 ) }
    dend_7 { pt3dadd( -13.751, -36.401, 4.09859, 0.68 ) }
    dend_7 { pt3dadd( -14.8988, -35.6565, 2.64377, 0.91 ) }
    dend_7 { pt3dadd( -16.4659, -34.5708, 0.706135, 0.91 ) }
    dend_7 { pt3dadd( -17.7333, -33.6878, -0.789798, 0.68 ) }
    dend_7 { pt3dadd( -19.1947, -32.6481, -2.35543, 0.68 ) }
    dend_7 { pt3dadd( -20.4509, -31.7667, -3.68415, 0.91 ) }
    dend_7 { pt3dadd( -21.6832, -30.9241, -5.02681, 0.68 ) }
    dend_7 { pt3dadd( -23.3387, -29.8217, -6.93384, 0.46 ) }
    dend_7 { pt3dadd( -24.4407, -29.0782, -8.26912, 0.68 ) }
    dend_7 { pt3dadd( -25.9826, -27.9589, -10.3195, 0.46 ) }
    dend_7 { pt3dadd( -27.0353, -27.1684, -11.8295, 0.46 ) }
    dend_7 { pt3dadd( -28.627, -26.0337, -14.3693, 0.46 ) }
    dend_7 { pt3dadd( -29.8392, -25.2392, -16.488, 0.46 ) }
    dend_7 { pt3dadd( -30.471, -24.8302, -17.6908, 0.68 ) }
    dend_7 { pt3dadd( -30.8935, -24.5538, -18.5812, 0.68 ) }
    dend_7 { pt3dadd( -31.5644, -24.1025, -20.2357, 0.46 ) }
    dend_7 { pt3dadd( -32.5837, -23.3871, -22.7301, 0.46 ) }
    dend_7 { pt3dadd( -33.2038, -22.911, -24.2894, 0.46 ) }
    dend_7 { pt3dadd( -33.9493, -22.3241, -26.3078, 0.46 ) }
    dend_7 { pt3dadd( -34.8471, -21.6292, -29.1039, 0.46 ) }
    dend_7 { pt3dadd( -35.6167, -21.1033, -31.6674, 0.46 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -25.5489, -40.2735, 51.7694, 0.46 ) }
    dend_5 { pt3dadd( -26.4582, -41.775, 54.1049, 0.46 ) }
    dend_5 { pt3dadd( -26.9746, -42.9178, 55.5177, 0.46 ) }
    dend_5 { pt3dadd( -27.2747, -43.6774, 56.546, 0.46 ) }
    dend_5 { pt3dadd( -27.4816, -44.1914, 57.3602, 0.46 ) }
    dend_5 { pt3dadd( -27.6943, -44.6543, 58.1245, 0.46 ) }
    dend_5 { pt3dadd( -28.2138, -45.6068, 59.7074, 0.46 ) }
    dend_5 { pt3dadd( -28.8582, -46.6484, 61.4844, 0.68 ) }
    dend_5 { pt3dadd( -29.7278, -47.7542, 63.4893, 0.68 ) }
    dend_5 { pt3dadd( -30.839, -48.8258, 65.6315, 0.68 ) }
    dend_5 { pt3dadd( -31.6754, -49.4712, 67.037, 0.68 ) }
    dend_5 { pt3dadd( -32.5418, -50.0712, 68.1906, 0.46 ) }
    dend_5 { pt3dadd( -33.5722, -50.7505, 69.248, 0.46 ) }
    dend_5 { pt3dadd( -34.3729, -51.2637, 69.9388, 0.46 ) }
    dend_5 { pt3dadd( -35.0504, -51.7338, 70.4477, 0.68 ) }
    dend_5 { pt3dadd( -35.981, -52.4932, 71.2299, 0.68 ) }
    dend_5 { pt3dadd( -37.8637, -54.23, 73.2546, 0.46 ) }
    dend_5 { pt3dadd( -39.0677, -55.4565, 74.8613, 0.46 ) }
    dend_5 { pt3dadd( -40.0411, -56.5377, 76.5547, 0.46 ) }
    dend_5 { pt3dadd( -40.2268, -56.7412, 76.9773, 0.46 ) }
    dend_5 { pt3dadd( -41.2181, -57.7722, 79.8502, 0.46 ) }
    dend_5 { pt3dadd( -41.6706, -58.2029, 81.5163, 0.46 ) }
    dend_5 { pt3dadd( -41.8674, -58.3125, 82.4389, 0.46 ) }
    dend_5 { pt3dadd( -42.2493, -58.4253, 84.4041, 0.46 ) }
    dend_5 { pt3dadd( -42.5552, -58.4353, 85.7438, 0.46 ) }
    dend_5 { pt3dadd( -42.9061, -58.3552, 87.1686, 0.46 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.5489, -40.2735, 51.7694, 0.46 ) }
    dend_4 { pt3dadd( -27.7031, -39.5411, 51.4185, 0.46 ) }
    dend_4 { pt3dadd( -28.7303, -39.1237, 51.3689, 0.23 ) }
    dend_4 { pt3dadd( -30.2703, -38.4634, 51.3857, 0.23 ) }
    dend_4 { pt3dadd( -32.7965, -37.4105, 51.4892, 0.23 ) }
    dend_4 { pt3dadd( -33.5006, -37.1671, 51.5272, 0.46 ) }
    dend_4 { pt3dadd( -36.175, -36.3856, 51.6873, 0.46 ) }
    dend_4 { pt3dadd( -37.7804, -35.9549, 51.859, 0.46 ) }
    dend_4 { pt3dadd( -39.1007, -35.6363, 52.0179, 0.46 ) }
    dend_4 { pt3dadd( -40.6876, -35.3152, 52.235, 0.46 ) }
    dend_4 { pt3dadd( -42.8655, -35.1218, 52.4569, 0.46 ) }
    dend_4 { pt3dadd( -44.2615, -35.2291, 52.4903, 0.23 ) }
    dend_4 { pt3dadd( -45.6343, -35.6393, 52.3823, 0.23 ) }
    dend_4 { pt3dadd( -46.6667, -36.0991, 52.2158, 0.23 ) }
    dend_4 { pt3dadd( -48.0524, -36.8484, 51.955, 0.46 ) }
    dend_4 { pt3dadd( -49.484, -37.6673, 51.6791, 0.46 ) }
    dend_4 { pt3dadd( -51.2056, -38.6567, 51.4906, 0.46 ) }
    dend_4 { pt3dadd( -52.1539, -39.239, 51.4757, 0.23 ) }
    dend_4 { pt3dadd( -53.8645, -40.3079, 51.5883, 0.23 ) }
    dend_4 { pt3dadd( -54.8955, -40.8921, 51.7274, 0.23 ) }
    dend_4 { pt3dadd( -56.9042, -41.7938, 52.0903, 0.23 ) }
    dend_4 { pt3dadd( -59.0547, -42.5652, 52.5084, 0.23 ) }
    dend_4 { pt3dadd( -60.4158, -42.9758, 52.7596, 0.46 ) }
    dend_4 { pt3dadd( -62.4787, -43.5056, 53.0092, 0.46 ) }
    dend_4 { pt3dadd( -64.778, -44.0424, 53.1584, 0.46 ) }
    dend_4 { pt3dadd( -66.7947, -44.4314, 53.1762, 0.46 ) }
    dend_4 { pt3dadd( -68.3232, -44.653, 53.1679, 0.68 ) }
    dend_4 { pt3dadd( -70.6525, -44.9216, 53.1089, 0.46 ) }
    dend_4 { pt3dadd( -73.0755, -45.1265, 53.0976, 0.46 ) }
    dend_4 { pt3dadd( -75.2362, -45.2183, 53.1491, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_4 { pt3dadd( -77.7571, -45.2823, 53.3261, 0.46 ) }
    dend_4 { pt3dadd( -79.8458, -45.3288, 53.6045, 0.46 ) }
    dend_4 { pt3dadd( -82.1247, -45.3239, 54.0479, 0.46 ) }
    dend_4 { pt3dadd( -83.1668, -45.2935, 54.3129, 0.46 ) }
    dend_4 { pt3dadd( -84.7077, -45.1959, 54.8014, 0.46 ) }
    dend_4 { pt3dadd( -86.9122, -44.9702, 55.5239, 0.46 ) }
    dend_4 { pt3dadd( -88.3811, -44.7565, 55.9807, 0.46 ) }
    dend_4 { pt3dadd( -89.0834, -44.6191, 56.1653, 0.46 ) }
    dend_4 { pt3dadd( -90.9842, -44.1476, 56.6426, 0.46 ) }
    dend_4 { pt3dadd( -93.1526, -43.6639, 57.0729, 0.91 ) }
    dend_4 { pt3dadd( -94.8485, -43.324, 57.2972, 0.68 ) }
    dend_4 { pt3dadd( -96.6232, -42.9984, 57.3687, 0.68 ) }
    dend_4 { pt3dadd( -98.0158, -42.8203, 57.3109, 0.68 ) }
    dend_4 { pt3dadd( -99.1415, -42.729, 57.1712, 0.68 ) }
    dend_4 { pt3dadd( -101.051, -42.6342, 56.7376, 0.68 ) }
    dend_4 { pt3dadd( -102.402, -42.602, 56.2937, 0.68 ) }
    dend_4 { pt3dadd( -105.24, -42.451, 55.0951, 0.68 ) }
    dend_4 { pt3dadd( -106.784, -42.4168, 54.3952, 0.68 ) }
    dend_4 { pt3dadd( -108.669, -42.3753, 53.4787, 0.68 ) }
    dend_4 { pt3dadd( -110.016, -42.3021, 52.7887, 0.68 ) }
    dend_4 { pt3dadd( -111.151, -42.1429, 52.1916, 0.68 ) }
    dend_4 { pt3dadd( -112.696, -41.8479, 51.2625, 0.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -61.9925, -35.1216, 60.1782, 0.46 ) }
    dend_20 { pt3dadd( -63.1205, -34.4554, 59.0568, 0.46 ) }
    dend_20 { pt3dadd( -64.6586, -33.547, 57.5279, 0.23 ) }
    dend_20 { pt3dadd( -66.3594, -32.5424, 55.8371, 0.23 ) }
    dend_20 { pt3dadd( -67.1242, -32.0907, 55.0768, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -61.9925, -35.1216, 60.1782, 0.46 ) }
    dend_19 { pt3dadd( -62.4072, -34.6671, 61.2798, 0.46 ) }
    dend_19 { pt3dadd( -63.0956, -33.9125, 63.1083, 0.46 ) }
    dend_19 { pt3dadd( -63.7723, -33.1708, 64.9059, 0.68 ) }
    dend_19 { pt3dadd( -64.2935, -32.5995, 66.2903, 0.68 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 32/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.84058, -53.2552, 13.7035, 0.91 ) }
    dend_10 { pt3dadd( -9.17736, -54.52, 14.14, 0.91 ) }
    dend_10 { pt3dadd( -10.3727, -55.804, 14.5651, 0.91 ) }
    dend_10 { pt3dadd( -11.2583, -56.9597, 14.8337, 0.68 ) }
    dend_10 { pt3dadd( -12.0504, -58.3979, 15.0242, 0.68 ) }
    dend_10 { pt3dadd( -12.4211, -59.3246, 15.0876, 0.68 ) }
    dend_10 { pt3dadd( -12.6638, -60.1251, 15.1426, 0.68 ) }
    dend_10 { pt3dadd( -12.941, -61.6178, 15.2588, 0.68 ) }
    dend_10 { pt3dadd( -13.155, -63.4373, 15.482, 0.68 ) }
    dend_10 { pt3dadd( -13.2952, -65.3025, 15.8001, 0.91 ) }
    dend_10 { pt3dadd( -13.3818, -66.475, 16.0333, 0.68 ) }
    dend_10 { pt3dadd( -13.5345, -67.9753, 16.361, 0.68 ) }
    dend_10 { pt3dadd( -13.8292, -70.1562, 16.8608, 0.68 ) }
    dend_10 { pt3dadd( -14.2013, -71.9223, 17.2896, 0.68 ) }
    dend_10 { pt3dadd( -14.3542, -72.4613, 17.4334, 0.68 ) }
    dend_10 { pt3dadd( -14.8218, -73.8408, 17.7417, 0.46 ) }
    dend_10 { pt3dadd( -15.1237, -74.684, 17.9002, 0.91 ) }
    dend_10 { pt3dadd( -15.5449, -75.8669, 18.0993, 1.37 ) }
    dend_10 { pt3dadd( -16.0067, -77.3252, 18.3602, 0.91 ) }
    dend_10 { pt3dadd( -16.6874, -79.4731, 18.9134, 0.68 ) }
    dend_10 { pt3dadd( -17.1356, -80.8616, 19.3509, 0.91 ) }
    dend_10 { pt3dadd( -17.628, -82.4535, 19.8824, 0.68 ) }
    dend_10 { pt3dadd( -18.328, -84.6122, 20.6144, 0.68 ) }
    dend_10 { pt3dadd( -18.8015, -86.0623, 21.0932, 0.68 ) }
    dend_10 { pt3dadd( -19.3713, -87.9237, 21.6886, 0.68 ) }
    dend_10 { pt3dadd( -19.7919, -89.2967, 22.0808, 1.14 ) }
    dend_10 { pt3dadd( -20.5288, -91.3531, 22.6063, 0.68 ) }
    dend_10 { pt3dadd( -21.1067, -92.7078, 22.8618, 0.68 ) }
    dend_10 { pt3dadd( -21.7458, -94.0119, 23.0173, 0.46 ) }
    dend_10 { pt3dadd( -22.3537, -95.101, 23.1094, 0.46 ) }
    dend_10 { pt3dadd( -23.043, -96.2744, 23.1808, 0.23 ) }
    dend_10 { pt3dadd( -23.9537, -97.7187, 23.244, 0.23 ) }
    dend_10 { pt3dadd( -24.4991, -98.559, 23.2668, 0.91 ) }
    dend_10 { pt3dadd( -25.5964, -100.302, 23.2488, 0.23 ) }
    dend_10 { pt3dadd( -26.5213, -101.81, 23.1858, 1.14 ) }
    dend_10 { pt3dadd( -27.426, -103.384, 23.0886, 0.46 ) }
    dend_10 { pt3dadd( -28.3006, -105.083, 22.9424, 0.46 ) }
    dend_10 { pt3dadd( -29.1125, -106.982, 22.6992, 0.46 ) }
    dend_10 { pt3dadd( -29.5242, -108.201, 22.5151, 0.91 ) }
    dend_10 { pt3dadd( -29.8694, -109.601, 22.2768, 0.46 ) }
    dend_10 { pt3dadd( -30.1107, -111.38, 21.9677, 0.46 ) }
    dend_10 { pt3dadd( -30.1946, -112.483, 21.7761, 0.46 ) }
    dend_10 { pt3dadd( -30.2607, -114.325, 21.487, 0.46 ) }
    dend_10 { pt3dadd( -30.2504, -116.043, 21.2141, 0.46 ) }
    dend_10 { pt3dadd( -30.2266, -117.22, 20.9873, 0.91 ) }
    dend_10 { pt3dadd( -30.2237, -119.061, 20.4959, 0.68 ) }
    dend_10 { pt3dadd( -30.3018, -120.733, 19.9252, 0.68 ) }
    dend_10 { pt3dadd( -30.4539, -121.801, 19.4642, 0.68 ) }
    dend_10 { pt3dadd( -30.9559, -123.45, 18.4725, 0.68 ) }
    dend_10 { pt3dadd( -31.6427, -125.049, 17.1608, 0.68 ) }
    dend_10 { pt3dadd( -32.257, -126.342, 15.847, 0.68 ) }
    dend_10 { pt3dadd( -32.6303, -127.022, 15.0028, 1.14 ) }
    dend_10 { pt3dadd( -33.2888, -127.99, 13.6204, 0.91 ) }
    dend_10 { pt3dadd( -34.273, -129.11, 11.813, 0.68 ) }
    dend_10 { pt3dadd( -34.9389, -129.735, 10.6837, 0.68 ) }
    dend_10 { pt3dadd( -35.7665, -130.525, 9.27508, 0.91 ) }
    dend_10 { pt3dadd( -36.7883, -131.626, 7.56377, 0.68 ) }
    dend_10 { pt3dadd( -37.7635, -132.846, 5.9981, 0.91 ) }
    dend_10 { pt3dadd( -38.5809, -134.029, 4.8512, 0.91 ) }
    dend_10 { pt3dadd( -39.6197, -135.65, 3.66513, 0.91 ) }
    dend_10 { pt3dadd( -40.5912, -137.12, 2.84114, 0.68 ) }
    dend_10 { pt3dadd( -41.6837, -138.781, 2.18222, 0.68 ) }
    dend_10 { pt3dadd( -42.7891, -140.509, 1.73033, 0.68 ) }
    dend_10 { pt3dadd( -44.2188, -142.738, 1.35046, 0.68 ) }
    dend_10 { pt3dadd( -45.2552, -144.298, 1.19191, 0.68 ) }
    dend_10 { pt3dadd( -46.3172, -145.771, 1.127, 0.91 ) }
    dend_10 { pt3dadd( -47.7315, -147.512, 1.11803, 0.68 ) }
    dend_10 { pt3dadd( -48.8197, -148.732, 1.06427, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( -49.6971, -149.641, 0.986787, 0.68 ) }
    dend_10 { pt3dadd( -50.9014, -150.841, 0.834826, 0.23 ) }
    dend_10 { pt3dadd( -51.8486, -151.799, 0.703242, 0.68 ) }
    dend_10 { pt3dadd( -53.5543, -153.623, 0.449726, 0.23 ) }
    dend_10 { pt3dadd( -54.7652, -155.005, 0.268409, 0.23 ) }
    dend_10 { pt3dadd( -55.3623, -155.777, 0.183644, 0.46 ) }
    dend_10 { pt3dadd( -56.2185, -157.042, 0.0245026, 0.23 ) }
    dend_10 { pt3dadd( -56.7434, -157.934, -0.123437, 0.23 ) }
    dend_10 { pt3dadd( -57.1077, -158.74, -0.346044, 0.46 ) }
    dend_10 { pt3dadd( -57.5941, -160.016, -0.87725, 0.23 ) }
    dend_10 { pt3dadd( -57.9459, -161.016, -1.41966, 0.46 ) }
    dend_10 { pt3dadd( -58.4987, -162.796, -2.60808, 0.46 ) }
    dend_10 { pt3dadd( -58.8716, -164.138, -3.79318, 0.46 ) }
    dend_10 { pt3dadd( -59.2082, -165.834, -5.47094, 0.46 ) }
    dend_10 { pt3dadd( -59.5148, -167.438, -7.173, 0.46 ) }
    dend_10 { pt3dadd( -59.7893, -168.895, -8.84939, 0.46 ) }
    dend_10 { pt3dadd( -59.9828, -169.932, -10.1292, 0.91 ) }
    dend_10 { pt3dadd( -60.3996, -172.398, -13.3443, 0.91 ) }
    dend_10 { pt3dadd( -60.6923, -174.796, -16.6014, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 19/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -7.84058, -53.2552, 13.7035, 0.68 ) }
    dend_9 { pt3dadd( -7.28676, -53.7142, 12.5497, 0.68 ) }
    dend_9 { pt3dadd( -6.19239, -54.5783, 11.0936, 0.68 ) }
    dend_9 { pt3dadd( -4.94454, -55.4571, 9.81011, 0.68 ) }
    dend_9 { pt3dadd( -3.678, -56.2182, 8.73335, 0.68 ) }
    dend_9 { pt3dadd( -2.41295, -56.8624, 7.79205, 0.46 ) }
    dend_9 { pt3dadd( -0.688986, -57.6561, 6.59807, 0.46 ) }
    dend_9 { pt3dadd( 1.36917, -58.5306, 5.44995, 0.46 ) }
    dend_9 { pt3dadd( 2.28924, -58.891, 5.03469, 0.46 ) }
    dend_9 { pt3dadd( 3.39908, -59.2848, 4.5912, 0.68 ) }
    dend_9 { pt3dadd( 4.92314, -59.7645, 3.94328, 0.46 ) }
    dend_9 { pt3dadd( 7.03414, -60.3163, 2.94307, 0.68 ) }
    dend_9 { pt3dadd( 9.14437, -60.781, 1.94169, 0.46 ) }
    dend_9 { pt3dadd( 10.1928, -60.9811, 1.4349, 0.46 ) }
    dend_9 { pt3dadd( 11.476, -61.2375, 0.800363, 0.46 ) }
    dend_9 { pt3dadd( 13.3022, -61.5604, -0.0634472, 0.46 ) }
    dend_9 { pt3dadd( 14.177, -61.671, -0.427327, 0.68 ) }
    dend_9 { pt3dadd( 16.5155, -61.828, -1.28611, 0.23 ) }
    dend_9 { pt3dadd( 18.4865, -61.9364, -1.97626, 0.23 ) }
    dend_9 { pt3dadd( 19.902, -62.0364, -2.44175, 0.23 ) }
    dend_9 { pt3dadd( 21.4517, -62.1456, -2.87672, 0.23 ) }
    dend_9 { pt3dadd( 23.024, -62.2671, -3.2567, 0.23 ) }
    dend_9 { pt3dadd( 24.9316, -62.4439, -3.68461, 0.46 ) }
    dend_9 { pt3dadd( 26.9719, -62.6042, -4.11205, 0.46 ) }
    dend_9 { pt3dadd( 28.855, -62.7276, -4.44389, 0.46 ) }
    dend_9 { pt3dadd( 31.2531, -62.917, -4.80666, 0.46 ) }
    dend_9 { pt3dadd( 33.1109, -63.083, -5.07631, 0.46 ) }
    dend_9 { pt3dadd( 34.7053, -63.2087, -5.28281, 0.46 ) }
    dend_9 { pt3dadd( 36.4125, -63.311, -5.45197, 0.23 ) }
    dend_9 { pt3dadd( 37.2461, -63.3429, -5.51396, 0.46 ) }
    dend_9 { pt3dadd( 38.7189, -63.4042, -5.59584, 0.23 ) }
    dend_9 { pt3dadd( 39.8864, -63.4824, -5.62773, 0.23 ) }
    dend_9 { pt3dadd( 40.8465, -63.5527, -5.62233, 0.68 ) }
    dend_9 { pt3dadd( 41.7949, -63.6397, -5.59626, 0.23 ) }
    dend_9 { pt3dadd( 42.6985, -63.7605, -5.5538, 0.23 ) }
    dend_9 { pt3dadd( 44.6186, -63.9946, -5.31198, 0.23 ) }
    dend_9 { pt3dadd( 46.2703, -64.1411, -5.00232, 0.68 ) }
    dend_9 { pt3dadd( 46.9397, -64.212, -4.86598, 0.68 ) }
    dend_9 { pt3dadd( 47.4641, -64.2938, -4.76044, 0.68 ) }
    dend_9 { pt3dadd( 49.8898, -64.7989, -4.30521, 0.23 ) }
    dend_9 { pt3dadd( 52.3599, -65.53, -3.88466, 0.23 ) }
    dend_9 { pt3dadd( 53.0465, -65.8119, -3.8332, 0.46 ) }
    dend_9 { pt3dadd( 54.3118, -66.4692, -3.98562, 0.46 ) }
    dend_9 { pt3dadd( 56.081, -67.6235, -4.71652, 0.23 ) }
    dend_9 { pt3dadd( 57.2295, -68.4792, -5.50814, 0.46 ) }
    dend_9 { pt3dadd( 58.2334, -69.2886, -6.61342, 0.46 ) }
    dend_9 { pt3dadd( 59.5013, -70.4022, -8.57071, 0.46 ) }
    dend_9 { pt3dadd( 60.5839, -71.4149, -10.7331, 0.23 ) }
    dend_9 { pt3dadd( 61.3682, -72.162, -12.6138, 0.68 ) }
    dend_9 { pt3dadd( 61.6091, -72.3691, -13.2169, 0.68 ) }
    dend_9 { pt3dadd( 62.5882, -73.1857, -15.8261, 0.23 ) }
    dend_9 { pt3dadd( 63.7124, -74.0263, -18.8022, 0.46 ) }
    dend_9 { pt3dadd( 64.6863, -74.7176, -21.2068, 0.46 ) }
    dend_9 { pt3dadd( 65.431, -75.288, -23.0753, 0.46 ) }
    dend_9 { pt3dadd( 66.6059, -76.2875, -26.1704, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_39 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_25 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_24 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_43 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_34 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_3 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_18 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_7 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_5 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_38 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_14 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_32 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_15 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_41 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_40 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_35 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_30 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_27 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_42 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_44 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_19 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_20 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_46 nseg = 3
    dend_45 nseg = 5
    dend_39 nseg = 3
    dend_25 nseg = 5
    dend_24 nseg = 3
    dend_43 nseg = 3
    dend_34 nseg = 3
    dend_13 nseg = 5
    dend_12 nseg = 5
    dend_3 nseg = 3
    dend_21 nseg = 3
    dend_18 nseg = 3
    dend_7 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 5
    dend_10 nseg = 7
    dend_9 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_NGCDA_35e9de081b_0_0


