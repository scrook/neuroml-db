// Cell: cSTUT189_L4_LBC_fe3c0498a4_0_0
/*
{
  "id" : "cSTUT189_L4_LBC_fe3c0498a4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.4489, -11.1277, 1.96857, 2.53905", "-2.21373, -9.99102, 1.77288, 4.60052", "-1.97857, -8.85434, 1.57719, 5.7745", "-1.74341, -7.71767, 1.3815, 6.94848", "-1.50825, -6.581, 1.18581, 8.08333", "-1.27308, -5.44432, 0.990126, 9.17802", "-1.03792, -4.30765, 0.794438, 10.2727", "-0.802757, -3.17097, 0.59875, 11.3674", "-0.567594, -2.0343, 0.403062, 12.0266", "-0.332431, -0.897626, 0.207374, 12.2828", "-0.0972679, 0.239047, 0.0116859, 12.3212", "0.137895, 1.37572, -0.184002, 11.9564", "0.373058, 2.5124, -0.37969, 10.9173", "0.608221, 3.64907, -0.575378, 9.90283", "0.843384, 4.78574, -0.771067, 9.18979", "1.07855, 5.92242, -0.966755, 8.44172", "1.31371, 7.05909, -1.16244, 7.69366", "1.54887, 8.19576, -1.35813, 6.80206", "1.78404, 9.33244, -1.55382, 5.87376", "2.0192, 10.4691, -1.74951, 4.94547", "2.25436, 11.6058, -1.9452, 2.87974" ]
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "6.41062, 0.895911, -2.60158, 1.33", "6.94063, 3.73374, -1.44776, 1.33", "7.81713, 8.42683, 0.460363, 0.67", "8.99701, 14.7443, 3.02894, 0.67", "9.65247, 18.2538, 4.45585, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.05938, -10.2191, 1.30842, 3.33", "-3.55284, -11.2688, 1.30842, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-2.75938, 9.97316, -11.0115, 1.33", "-5.35112, 10.0332, -12.8584, 1.33", "-9.05263, 10.1189, -15.4961, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.30938, 11.1041, -10.0116, 1.33", "-2.97055, 16.6893, -8.02916, 1.33", "-3.44321, 22.45, -6.1889, 2.0", "-3.87633, 27.382, -4.8054, 1.33", "-4.22027, 30.7637, -4.02211, 1.33", "-4.57241, 34.958, -3.07268, 2.0", "-4.79597, 38.4201, -2.40375, 1.33", "-4.8549, 40.2121, -2.15696, 1.33", "-4.90178, 43.6561, -2.02504, 1.33", "-5.11878, 48.1491, -2.04128, 1.33", "-5.40447, 53.0061, -2.28111, 1.33", "-5.73097, 56.6792, -2.51685, 1.33", "-6.02945, 59.0842, -2.69613, 0.67", "-6.5857, 63.0046, -2.93087, 0.67", "-6.99334, 65.8049, -3.12908, 0.67", "-7.43259, 68.4952, -3.31508, 0.67", "-7.77913, 70.3918, -3.45089, 0.67", "-8.29078, 73.12, -3.55735, 0.67", "-9.00216, 77.2318, -3.66507, 0.67", "-9.93811, 82.9942, -3.6829, 0.67", "-10.5565, 87.77, -3.71544, 0.67", "-10.7576, 89.2657, -3.73115, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.750619, 12.0694, 0.238424, 2.67", "0.95819, 14.0257, 3.91414, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.25436, 11.6058, -1.9452, 0.959978", "5.29331, 26.2947, -1.9452, 0.959978", "8.33225, 40.9837, -1.9452, 0.959978" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "9.65247, 18.2538, 4.45585, 0.67", "17.8315, 22.2923, 7.3267, 0.67", "24.994, 25.2332, 10.2924, 0.67", "30.4832, 26.8123, 12.5989, 0.67", "34.404, 27.7728, 14.1714, 0.33", "38.9036, 28.729, 15.9945, 0.67", "41.6125, 29.2507, 17.0862, 0.67", "44.7907, 29.4276, 18.3652, 0.67", "51.8049, 29.4686, 21.1914, 0.67", "56.3827, 29.3972, 22.6929, 0.67", "58.8167, 29.4329, 23.2612, 0.67", "60.3406, 29.5117, 23.5314, 0.67", "64.4161, 29.9677, 23.8275, 0.67", "70.7693, 30.9696, 23.6975, 0.67", "73.5924, 31.4851, 23.5529, 0.33", "76.5523, 32.0143, 23.2509, 0.67", "78.4725, 32.3606, 23.0283, 0.33", "87.6765, 34.1478, 21.9898, 0.67", "90.7172, 34.7204, 21.6753, 0.67", "95.7414, 35.5032, 21.2734, 0.67", "101.044, 36.2848, 20.8293, 0.67", "107.839, 37.224, 20.2847, 0.67", "111.006, 37.5794, 20.0886, 0.67", "114.921, 37.8423, 19.9901, 0.67", "117.828, 37.9726, 19.9719, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "9.65247, 18.2538, 4.45585, 0.67", "10.1044, 20.8088, 4.49864, 0.67", "12.9118, 34.129, 4.5962, 0.67", "13.8306, 38.1669, 4.57905, 0.67", "15.4518, 44.7898, 4.49008, 0.67", "18.2119, 54.8519, 4.2461, 0.67", "19.1268, 57.825, 4.20559, 0.67", "20.4715, 61.21, 4.16591, 0.67", "21.2057, 62.5505, 4.16605, 0.67", "22.6807, 64.6453, 4.19093, 0.67", "24.6499, 66.8293, 4.13371, 0.67", "28.8536, 70.3844, 4.18261, 0.67", "31.2297, 72.2792, 4.16381, 0.67", "37.6514, 77.0838, 4.03123, 0.67", "41.5845, 79.9362, 3.88957, 0.67", "43.7177, 81.3878, 3.73766, 0.67", "45.5803, 82.6176, 3.51938, 0.67", "48.3079, 84.4069, 3.02241, 0.67", "50.5154, 85.9498, 2.58924, 0.67", "52.8283, 87.8325, 2.15003, 0.67", "55.0085, 90.1506, 1.79051, 0.67", "56.3819, 91.9271, 1.62139, 0.67", "58.416, 95.1513, 1.48092, 0.67", "60.0262, 98.3823, 1.53699, 0.67", "61.7925, 103.143, 1.77896, 0.67", "62.4382, 105.267, 1.93822, 0.67", "63.1433, 108.021, 2.18947, 0.67", "63.5578, 109.748, 2.38044, 0.67", "65.0423, 115.673, 3.0846, 0.67", "65.4784, 117.518, 3.32511, 0.67", "66.0909, 119.88, 3.6323, 0.33", "66.9023, 123.755, 4.00345, 0.67", "67.2262, 125.517, 4.11214, 0.67", "67.8906, 129.259, 4.20063, 0.67", "68.0894, 130.852, 4.18283, 0.67", "68.3701, 133.685, 4.04245, 0.67", "68.7218, 138.651, 3.63382, 0.67", "68.7962, 139.941, 3.52636, 0.67", "68.9107, 142.051, 3.36787, 0.33", "69.0352, 144.336, 3.2815, 0.33", "69.2755, 147.696, 3.32574, 0.67", "69.3972, 149.263, 3.44458, 0.67", "69.6739, 152.333, 3.91721, 0.67", "69.679, 154.005, 4.13135, 0.33", "69.5052, 156.508, 4.39987, 0.67", "69.2497, 159.168, 4.62056, 0.33", "69.181, 159.61, 4.65405, 0.67", "68.84, 161.489, 4.61045, 0.33", "68.2994, 165.341, 3.95174, 0.67", "68.0683, 167.853, 3.31551, 0.67", "68.036, 169.395, 2.86786, 0.67", "68.1074, 171.343, 2.33113, 0.67", "68.3965, 174.619, 1.53421, 0.67", "68.9116, 177.814, 0.872648, 0.67", "69.4237, 179.969, 0.57441, 0.33", "70.227, 182.972, 0.373098, 0.67", "70.8312, 184.988, 0.415504, 0.33", "71.1756, 186.062, 0.543088, 0.67", "71.5767, 187.54, 0.927667, 0.33", "71.7833, 188.714, 1.31498, 0.67", "72.0806, 190.978, 2.00633, 0.67", "72.2259, 193.109, 2.61408, 0.33", "72.2682, 193.791, 2.78477, 0.67", "72.2949, 195.315, 3.1825, 0.33", "72.2624, 196.451, 3.4834, 0.67", "72.1371, 198.963, 4.09774, 0.33", "72.0593, 199.895, 4.2723, 0.67", "71.9393, 202.432, 4.77612, 0.33" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-3.55284, -11.2688, 1.30842, 0.67", "-2.48264, -13.8272, 0.721024, 0.67", "-0.785357, -19.6965, -0.811305, 1.33", "-0.159433, -22.7643, -1.46162, 1.33", "0.251224, -25.8991, -2.01871, 1.33", "1.12548, -31.1478, -2.57112, 1.33", "1.4431, -33.7054, -2.87502, 0.67", "1.73991, -37.6389, -3.37401, 1.33", "1.86581, -40.7513, -3.76473, 1.33", "1.97219, -42.4874, -3.90512, 0.67", "3.55401, -57.645, -4.36329, 0.67", "4.28329, -63.5886, -4.1044, 0.67", "4.39729, -64.6829, -4.02317, 0.67", "4.68533, -67.2153, -3.7661, 0.67", "5.47092, -73.0097, -3.10455, 0.67", "5.79195, -75.1873, -2.7716, 0.67", "6.30492, -81.0092, -1.54154, 1.33", "6.77715, -85.92, -0.553359, 0.67", "7.07927, -89.3697, -0.0679481, 0.67", "7.34496, -93.2308, 0.352165, 0.67", "7.66374, -98.3974, 0.632768, 0.67", "8.04185, -104.005, 0.817437, 0.67", "8.6635, -109.641, 0.687452, 0.67", "9.09982, -112.661, 0.512947, 0.67" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.55284, -11.2688, 1.30842, 1.33", "-2.9782, -14.4369, 0.18499, 1.33", "-2.03262, -19.65, -1.66366, 1.33", "-1.52293, -22.46, -2.66012, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-9.05263, 10.1189, -15.4961, 1.33", "-14.0105, 7.53335, -14.5745, 1.33", "-19.0606, 4.38536, -13.4786, 1.33", "-21.7813, 2.691, -12.8975, 0.67", "-25.7775, 0.52266, -12.0585, 0.67", "-30.3857, -1.59232, -10.9695, 0.67", "-37.0257, -4.62762, -9.06613, 0.67", "-38.8157, -5.45854, -8.63361, 0.67", "-43.3097, -7.50889, -8.03658, 0.67", "-47.4429, -9.0904, -7.96648, 0.67", "-53.4921, -11.013, -8.49872, 0.67", "-60.3829, -13.3241, -9.62481, 0.67", "-69.2826, -16.2421, -11.4633, 0.67", "-73.5655, -17.7313, -12.5285, 0.67", "-78.7099, -19.6897, -14.0346, 0.67", "-86.4487, -22.8988, -16.588, 0.67", "-91.939, -25.2242, -18.5364, 0.67", "-98.67, -28.0266, -20.7112, 0.67", "-101.195, -29.1038, -21.1508, 0.67", "-103.0, -29.9448, -21.3535, 0.33", "-103.504, -30.181, -21.39, 0.67", "-105.653, -31.061, -21.3985, 0.33", "-107.849, -31.7888, -21.2852, 1.33", "-112.857, -33.4772, -20.9971, 0.33", "-114.796, -33.9447, -20.998, 0.33", "-116.351, -34.234, -21.1199, 1.33", "-120.852, -34.9147, -22.1034, 0.33", "-122.4, -35.0961, -22.6271, 0.67", "-126.961, -35.4249, -24.6208, 0.33", "-132.728, -35.6054, -27.7709, 0.67", "-135.37, -35.5185, -29.3347, 0.67", "-141.001, -35.0877, -33.1426, 0.33", "-141.977, -34.944, -33.8779, 0.67", "-143.688, -34.6169, -35.232, 0.33", "-144.99, -34.3386, -36.2357, 0.67", "-147.993, -33.743, -38.2589, 0.33", "-150.308, -33.4094, -39.435, 1.33", "-155.798, -32.8666, -41.5104, 0.33", "-157.16, -32.8558, -41.9901, 1.33", "-161.181, -33.1348, -43.2055, 0.33", "-166.564, -33.9227, -44.4891, 0.33", "-169.02, -34.4649, -44.922, 0.33", "-169.877, -34.6978, -44.9937, 1.33", "-173.79, -36.1476, -45.1385, 0.33", "-176.148, -37.0529, -45.1837, 0.67", "-178.214, -37.9297, -45.3662, 0.33", "-179.006, -38.2879, -45.4925, 0.67", "-181.331, -39.169, -45.8735, 0.33", "-183.794, -39.9043, -46.1862, 1.33", "-189.863, -41.4686, -46.7959, 0.33", "-193.083, -42.1642, -47.0112, 0.67", "-194.824, -42.4981, -47.075, 0.33", "-197.5, -42.9593, -47.1045, 0.67", "-205.269, -44.1868, -47.3341, 0.33", "-206.948, -44.4219, -47.3358, 1.33", "-215.99, -45.6307, -47.1857, 0.33", "-216.628, -45.7077, -47.1557, 0.67", "-219.049, -45.9988, -47.0832, 0.33", "-223.679, -46.5854, -47.1175, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-9.05263, 10.1189, -15.4961, 0.67", "-11.4186, 14.5581, -16.2535, 0.67", "-14.8505, 18.9836, -17.7322, 0.67", "-16.6331, 21.1426, -18.6916, 0.67", "-17.9143, 22.6942, -19.3812, 1.33", "-19.4977, 24.6119, -20.2333, 0.67", "-20.9935, 26.4235, -21.0384, 1.33", "-24.3567, 29.4087, -22.6323, 0.67", "-25.9743, 30.4116, -23.4839, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-10.7576, 89.2657, -3.73115, 0.67", "-3.65447, 94.4256, -5.45827, 0.67", "-1.57463, 96.1212, -6.02635, 0.67", "5.25144, 101.839, -7.989, 0.33", "7.16579, 103.376, -8.59031, 0.67", "11.2014, 106.727, -9.91024, 0.33", "14.6038, 109.639, -11.0842, 0.67", "18.2756, 113.112, -12.3055, 0.67", "19.8515, 114.865, -12.9765, 0.33", "22.4025, 117.911, -14.5686, 0.67", "24.397, 120.879, -16.0721, 0.67", "25.8575, 123.696, -17.5453, 0.33", "26.8332, 125.893, -18.9064, 0.67", "27.8636, 128.14, -20.6478, 0.67", "29.931, 133.147, -24.7491, 0.33", "31.5701, 137.532, -28.3079, 0.67", "33.1253, 141.594, -31.4656, 0.67", "34.6393, 145.718, -34.2524, 0.67", "36.113, 149.933, -36.5515, 0.67", "37.1381, 153.087, -37.9528, 0.67", "37.8866, 155.637, -38.7722, 0.33", "39.6764, 161.335, -40.191, 0.67", "40.5612, 164.85, -40.6483, 0.33", "41.5702, 169.889, -40.9002, 0.67", "42.3416, 175.326, -41.1929, 0.33", "42.5079, 176.66, -41.3541, 0.67", "42.7139, 178.299, -41.8228, 0.33", "42.924, 180.923, -42.9216, 0.67", "43.0423, 182.839, -43.8906, 0.67", "43.182, 188.91, -47.166, 0.67", "43.2502, 191.517, -48.5687, 1.33", "43.5469, 197.941, -52.2634, 0.33", "43.7008, 200.293, -53.6897, 0.67", "43.8875, 201.787, -54.6243, 0.67", "44.3012, 204.237, -56.1103, 0.33", "45.533, 209.795, -59.0268, 0.67", "46.2954, 212.886, -60.3708, 0.33", "46.4416, 213.444, -60.578, 0.67", "48.1573, 218.998, -62.7137, 0.33", "48.609, 220.375, -63.2555, 0.67", "50.3185, 224.976, -65.0305, 0.33", "50.8976, 226.573, -65.5174, 1.33" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.7576, 89.2657, -3.73115, 0.67", "-9.70678, 93.4389, -4.6202, 0.67", "-7.83861, 99.2003, -5.93232, 0.67", "-7.15201, 101.817, -6.47642, 0.67", "-6.66405, 104.442, -7.00779, 0.67", "-6.165, 107.9, -7.62428, 0.67", "-5.94675, 109.92, -7.941, 0.67", "-5.57841, 112.979, -8.1385, 0.67", "-5.23135, 116.591, -8.0721, 0.67", "-5.02629, 120.047, -8.13797, 0.67", "-4.94448, 123.936, -8.25939, 0.67", "-4.99139, 126.84, -8.33494, 0.67", "-5.09349, 134.063, -8.38891, 0.67", "-5.01479, 138.007, -8.2683, 0.67", "-4.66917, 141.934, -8.14174, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "0.95819, 14.0257, 3.91414, 0.67", "1.72148, 15.568, 4.86052, 0.67", "2.29346, 17.3363, 5.93044, 0.67", "3.06336, 20.9066, 7.60944, 0.67", "3.16948, 21.6535, 7.93766, 1.33", "3.33121, 23.2008, 8.5938, 0.67", "3.4164, 24.6754, 9.21438, 0.67", "3.57127, 28.8077, 10.8859, 0.67", "3.56144, 33.7144, 12.7934, 0.67", "3.49876, 35.0081, 13.2572, 0.67", "3.28541, 37.7752, 14.318, 0.67", "3.14667, 39.3606, 14.8665, 0.67", "3.0843, 40.2501, 15.1418, 0.67", "3.12428, 42.6939, 15.7124, 0.67", "3.3402, 46.1945, 16.3913, 0.67", "3.48271, 47.3913, 16.5644, 0.67", "4.06891, 51.0738, 16.8716, 0.67", "4.26089, 52.1882, 16.9274, 0.67", "4.76944, 54.8773, 17.0611, 0.67", "4.97806, 56.0109, 17.1066, 0.67", "5.31647, 57.625, 17.1613, 0.67", "5.94526, 60.529, 17.3819, 0.67", "6.1916, 61.8123, 17.5718, 0.67", "6.71771, 64.8214, 18.1121, 0.67", "6.94264, 66.4209, 18.465, 0.67", "7.16715, 68.002, 18.8179, 0.67", "7.5484, 70.8622, 19.4981, 0.67", "7.71179, 72.0987, 19.8087, 0.67", "8.05902, 74.5544, 20.3873, 0.67", "8.12185, 75.3807, 20.5559, 0.67", "8.33146, 77.9967, 21.1434, 0.67", "7.66592, 84.6213, 22.4649, 0.67", "8.22873, 91.1833, 24.1326, 0.67", "7.70375, 97.8021, 25.5459, 0.67", "8.38155, 104.268, 27.5328, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.95819, 14.0257, 3.91414, 1.33", "-2.16627, 19.3816, 6.03972, 1.33", "-4.71135, 23.2177, 7.31472, 1.33", "-7.70064, 27.7488, 8.6084, 1.33", "-13.2771, 36.3865, 10.8145, 1.33", "-15.0178, 39.2261, 11.4809, 1.33", "-16.3648, 41.5558, 11.9982, 0.67", "-19.9748, 47.7237, 13.3969, 0.67", "-21.5418, 50.5509, 13.9896, 0.67", "-22.9076, 52.9907, 14.2928, 0.67", "-23.9151, 54.8635, 14.3546, 0.67", "-25.3743, 57.6149, 14.5458, 0.67", "-27.3317, 61.185, 14.8844, 0.67", "-29.2046, 64.3761, 15.2892, 0.67", "-31.2499, 67.373, 15.6941, 0.67", "-32.9814, 69.63, 16.0001, 0.67", "-35.0824, 72.0424, 16.3297, 0.67", "-37.4682, 74.5385, 16.6423, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.33225, 40.9837, -1.9452, 0.33", "11.3712, 55.6726, -1.9452, 0.33", "14.4101, 70.3615, -1.9452, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "117.828, 37.9726, 19.9719, 1.33", "118.53, 38.3399, 23.5375, 1.33", "118.837, 38.5007, 25.0986, 0.67", "120.199, 39.2138, 32.0208, 0.67", "120.915, 39.3673, 42.6862, 0.67", "123.806, 37.8152, 52.8656, 0.67", "126.137, 37.2083, 63.2852, 0.67" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "117.828, 37.9726, 19.9719, 0.33", "119.732, 38.5035, 20.1624, 0.33", "120.881, 38.6946, 20.2903, 0.67", "123.045, 38.8782, 20.5523, 0.33", "125.626, 38.7505, 20.9118, 0.33", "127.22, 38.5013, 21.1577, 0.67", "129.128, 38.0762, 21.4698, 0.33", "131.726, 37.1948, 21.9361, 0.67", "133.494, 36.384, 22.2828, 0.67", "136.433, 34.6912, 22.9082, 0.67", "137.931, 33.7017, 23.2746, 0.33", "138.751, 33.1335, 23.495, 0.67", "139.855, 32.377, 23.8101, 0.33", "140.958, 31.6962, 24.1313, 0.67", "142.74, 30.8055, 24.6305, 0.33", "143.939, 30.4209, 25.0196, 0.67", "146.649, 29.6624, 25.9109, 0.33", "147.887, 29.3499, 26.3255, 0.67", "149.73, 28.9515, 26.9538, 0.33", "152.167, 28.4878, 27.8064, 0.67", "157.618, 27.6403, 29.7517, 0.67", "166.518, 25.1399, 32.9165, 0.67", "175.622, 22.5169, 35.3113, 0.67", "185.052, 20.1575, 36.3573, 0.67" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "9.09982, -112.661, 0.512947, 0.67", "9.82784, -113.749, -0.0196915, 0.67", "10.7766, -115.465, -0.658516, 0.67", "11.8324, -117.651, -1.28853, 0.67", "13.3665, -120.825, -2.19221, 0.67", "15.2114, -124.661, -3.25213, 0.67", "16.1038, -126.626, -3.76422, 0.67", "17.8509, -130.88, -4.68762, 0.67", "18.4755, -132.749, -5.00374, 0.67", "19.205, -135.04, -5.38848, 0.33", "19.6035, -136.258, -5.56121, 0.67", "20.0683, -137.703, -5.80082, 0.67", "21.796, -142.919, -6.7993, 0.67", "23.1059, -147.329, -7.66079, 0.67", "24.1762, -150.916, -8.29854, 0.33", "24.612, -152.543, -8.52486, 1.33", "24.8765, -153.546, -8.64876, 0.33", "25.3459, -155.166, -8.78129, 0.33", "26.0516, -157.79, -9.0054, 0.67", "26.7403, -160.381, -9.18892, 0.67", "27.3413, -162.917, -9.31954, 0.67", "28.2159, -166.197, -9.56618, 0.67", "28.9006, -168.699, -9.82953, 0.67", "30.1385, -172.689, -10.3461, 0.67", "30.5692, -173.834, -10.5336, 0.33", "31.0482, -174.912, -10.7457, 0.33", "31.7934, -176.171, -11.0128, 0.67", "34.7699, -180.417, -11.9481, 0.67", "35.9459, -181.841, -12.2774, 0.67", "37.9626, -183.965, -12.6537, 0.67", "39.585, -185.525, -12.9081, 0.67", "41.05, -186.968, -13.1643, 0.67", "41.8784, -187.833, -13.3247, 0.33", "44.1593, -190.182, -13.7063, 0.67", "45.5231, -191.777, -13.9715, 0.67", "46.8595, -193.57, -14.2429, 0.33", "49.2255, -196.964, -14.469, 0.67", "50.4031, -198.736, -14.4997, 0.33", "51.0299, -199.606, -14.4218, 0.67", "52.6325, -201.609, -14.0074, 0.33", "53.6183, -202.629, -13.6137, 1.33", "55.7638, -204.562, -12.704, 0.33", "57.1822, -205.598, -12.0193, 0.33", "59.7479, -207.324, -10.7687, 0.33", "61.3607, -208.396, -9.96245, 0.67", "63.8619, -210.03, -8.5319, 0.33", "65.6244, -211.102, -7.56435, 0.67", "68.1871, -212.49, -6.39829, 0.33" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "9.09982, -112.661, 0.512947, 0.67", "8.53752, -115.552, 0.0105924, 0.67", "7.99641, -118.078, -0.092769, 0.67", "7.03158, -123.321, 0.112771, 0.67", "6.61783, -126.704, 0.165248, 0.67", "6.37721, -129.295, -0.0174547, 0.67", "6.3207, -131.361, -0.207893, 0.67", "6.51635, -134.768, -0.52685, 0.67", "7.02133, -137.874, -0.770107, 0.67", "7.61311, -140.957, -0.88767, 0.67", "8.14358, -144.627, -1.25869, 0.67", "8.48663, -148.024, -1.62761, 0.67", "8.62141, -150.995, -1.97653, 0.67", "8.60365, -153.567, -2.29231, 0.67", "8.38394, -157.75, -2.6525, 0.67", "8.11656, -161.605, -2.8361, 0.67", "7.73919, -166.622, -3.01449, 0.67", "7.45613, -169.734, -3.20143, 0.33", "7.24989, -173.44, -3.273, 0.67", "7.23066, -174.184, -3.25679, 0.33", "7.30138, -176.167, -3.08055, 0.67", "7.4138, -177.847, -2.84554, 0.33", "7.65812, -181.468, -2.17659, 0.67", "7.87569, -184.787, -1.45133, 0.67", "7.98154, -191.036, -0.0102921, 0.67", "7.94572, -193.553, 0.577281, 0.33", "7.76327, -196.976, 1.43703, 0.67" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.52293, -22.46, -2.66012, 0.67", "-4.70647, -23.3038, -3.20653, 0.67", "-7.61485, -24.1537, -3.97822, 0.67", "-9.11929, -24.6498, -4.4605, 0.67", "-13.2135, -26.0978, -5.95841, 0.67", "-19.242, -28.1384, -8.56744, 0.67", "-21.4994, -28.9347, -9.58098, 0.67", "-23.6679, -29.7201, -10.6297, 0.67", "-25.3348, -30.3306, -11.4615, 0.67", "-27.2989, -31.0137, -12.5224, 0.67", "-30.898, -32.237, -14.676, 0.67", "-33.4544, -32.9265, -15.9153, 0.67", "-35.9925, -33.5012, -17.1053, 0.67", "-37.5519, -33.8232, -17.752, 0.33", "-38.9615, -34.0676, -18.3085, 0.33", "-40.6973, -34.3606, -18.9361, 0.33", "-44.3544, -35.0584, -20.1265, 0.67", "-46.9199, -35.3838, -21.3054, 0.33", "-54.6141, -37.2286, -26.0495, 0.33", "-61.9369, -39.6736, -31.0888, 0.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.52293, -22.46, -2.66012, 1.33", "-2.01726, -26.1897, -1.6655, 1.33", "-2.15616, -29.2186, -1.09119, 1.33", "-2.22779, -34.0118, -0.383328, 1.33", "-2.29208, -38.314, 0.252032, 1.33", "-2.36984, -43.5178, 1.02053, 1.33", "-2.43725, -48.0293, 1.68678, 1.33", "-2.58424, -54.5906, 2.28235, 1.33", "-2.54069, -57.8713, 2.49218, 1.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-25.9743, 30.4116, -23.4839, 0.67", "-27.0697, 30.281, -24.8696, 0.67", "-28.9177, 30.0259, -27.3896, 0.67", "-29.7251, 29.9271, -28.4742, 0.67", "-31.4204, 29.7497, -30.6198, 0.67", "-32.5662, 29.6457, -32.0996, 0.67", "-35.316, 29.3961, -35.6509, 0.67", "-37.062, 29.2762, -37.9083, 0.33", "-37.6076, 29.2608, -38.5519, 0.67", "-38.4323, 29.2474, -39.5999, 0.33", "-39.9031, 29.2476, -41.5117, 0.67" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-25.9743, 30.4116, -23.4839, 0.67", "-27.1984, 31.8773, -23.6835, 0.67", "-28.7917, 33.7519, -23.9484, 0.67", "-30.2066, 35.4258, -24.2517, 0.67", "-31.762, 37.3794, -24.7254, 0.67", "-33.9045, 40.0704, -25.3781, 0.67", "-35.7804, 42.4264, -25.9495, 0.67", "-37.3177, 44.3553, -26.5114, 0.67", "-38.6452, 46.167, -27.0998, 0.67", "-40.2189, 48.4427, -27.9319, 2.0" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "50.8976, 226.573, -65.5174, 0.33", "50.0633, 227.361, -65.7619, 0.33", "49.8221, 227.589, -65.8326, 0.67" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "50.8976, 226.573, -65.5174, 0.33", "51.6138, 227.559, -68.4481, 0.33", "51.9822, 228.067, -69.9557, 0.67" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-4.66917, 141.934, -8.14174, 0.67", "-5.48418, 146.368, -11.4981, 0.67", "-7.26169, 152.024, -15.9284, 0.67", "-7.96637, 154.267, -17.6848, 0.67", "-9.5591, 159.335, -21.6546, 0.67", "-10.1491, 161.213, -23.1251, 0.33", "-11.1325, 164.342, -25.5762, 0.33", "-12.0511, 166.395, -27.6, 0.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.66917, 141.934, -8.14174, 0.67", "-5.51449, 143.754, -10.6447, 0.67", "-6.02028, 144.843, -12.1423, 0.67", "-7.49211, 148.012, -16.5002, 1.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "8.38155, 104.268, 27.5328, 0.67", "8.27213, 110.984, 28.7303, 0.67", "6.98428, 117.387, 30.7657, 0.67" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "8.38155, 104.268, 27.5328, 0.67", "10.1621, 113.993, 31.0476, 0.67", "12.5924, 123.124, 35.6688, 0.67" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-37.4682, 74.5385, 16.6423, 0.67", "-39.5747, 80.5092, 16.091, 0.67", "-40.5183, 82.9332, 16.0744, 0.67", "-42.0036, 86.7173, 16.1657, 0.67", "-43.5152, 90.5031, 16.3136, 0.67", "-44.8831, 93.9827, 16.3834, 0.67", "-47.0325, 99.5373, 16.4214, 0.67", "-49.3626, 105.265, 16.5358, 0.67", "-50.1121, 107.149, 16.5517, 0.67", "-51.0303, 109.381, 16.5498, 0.67", "-52.9327, 114.532, 16.3107, 0.67", "-54.3175, 118.627, 15.942, 0.67", "-55.1495, 121.799, 15.4985, 0.67", "-55.9129, 125.003, 15.0063, 0.67", "-56.349, 127.07, 14.6873, 0.67", "-57.2053, 131.989, 13.9532, 0.67", "-57.4256, 133.897, 13.6648, 0.67", "-57.5667, 138.18, 12.9085, 0.67", "-57.3576, 142.031, 12.187, 0.67", "-57.1494, 144.779, 11.8382, 0.67", "-57.0235, 146.469, 11.7472, 0.67", "-56.7981, 149.679, 12.0063, 0.67", "-56.6499, 152.058, 12.3521, 0.67", "-56.4962, 155.398, 13.0302, 0.67", "-56.4151, 159.915, 14.0618, 0.67", "-56.4424, 162.458, 14.6272, 0.67", "-56.4535, 166.512, 15.2909, 0.67", "-56.5785, 169.145, 15.5656, 0.67", "-56.7227, 171.169, 15.5362, 0.67", "-56.8482, 173.28, 15.2416, 0.67", "-56.9828, 177.539, 14.3203, 0.67", "-57.0663, 181.619, 13.2538, 0.67", "-57.2891, 186.457, 11.6795, 0.67", "-57.4501, 190.27, 10.3468, 0.67", "-57.6052, 193.087, 9.32749, 0.67", "-60.4688, 202.441, 7.16918, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-37.4682, 74.5385, 16.6423, 0.67", "-38.4113, 78.2057, 15.9694, 0.67", "-39.4514, 82.1068, 15.5489, 0.67", "-40.3729, 84.7049, 15.5648, 0.67", "-42.4998, 89.9972, 16.1677, 1.33", "-43.7932, 93.0767, 16.7534, 0.67", "-45.041, 95.7732, 17.4687, 1.33", "-48.3062, 102.364, 19.9303, 0.67", "-50.8453, 107.179, 22.5116, 0.67", "-52.2439, 109.481, 24.239, 0.67", "-53.9235, 111.808, 26.565, 0.67", "-55.579, 113.989, 29.0969, 0.67", "-56.9387, 115.707, 31.3565, 0.67", "-58.9281, 118.092, 34.8247, 0.67", "-60.4228, 120.358, 37.7269, 0.67", "-61.0072, 121.197, 38.7529, 0.67", "-68.4962, 131.331, 41.9533, 0.67", "-74.2466, 141.749, 47.1729, 0.67", "-79.9641, 152.449, 51.7901, 0.67", "-88.6999, 161.391, 55.5216, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "7.76327, -196.976, 1.43703, 0.67", "9.17222, -196.361, 4.07931, 0.67", "10.0859, -195.963, 5.79269, 0.67", "15.5292, -195.488, 15.4729, 0.67", "19.5301, -196.581, 25.7901, 0.67", "23.6696, -198.172, 35.9861, 0.67", "27.3859, -197.601, 46.445, 0.67", "30.6598, -195.734, 56.8867, 0.67", "34.3387, -193.843, 67.1882, 0.67", "38.4571, -193.275, 77.4959, 0.67", "42.8373, -191.494, 87.5417, 0.67", "48.6994, -190.772, 96.9569, 0.67", "53.948, -192.128, 106.665, 0.67", "60.222, -195.239, 115.285, 0.67", "68.3574, -198.581, 122.057, 0.67", "76.7375, -203.517, 127.343, 0.67", "84.9163, -206.254, 134.343, 0.67" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "7.76327, -196.976, 1.43703, 0.33", "7.69567, -199.744, 0.0737484, 0.33", "7.61297, -202.615, -1.27089, 0.67", "7.48804, -204.865, -2.24369, 0.33", "6.9313, -209.881, -4.28927, 0.67", "6.76189, -211.236, -4.79914, 0.67", "6.45944, -213.323, -5.53222, 0.67", "6.17166, -214.716, -5.95806, 0.33", "5.44662, -217.417, -6.70396, 0.67", "4.69327, -219.729, -7.14293, 0.33", "4.02638, -221.655, -7.33596, 0.67", "3.38594, -223.418, -7.50211, 0.33", "3.12388, -224.16, -7.56166, 0.67", "2.41479, -225.892, -7.68862, 0.33", "1.84523, -227.35, -7.73701, 0.67", "-0.0351156, -237.503, -9.53177, 0.67", "-1.47329, -247.702, -11.4542, 0.67" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-61.9369, -39.6736, -31.0888, 0.67", "-69.9037, -41.9769, -34.56, 0.67", "-78.0058, -45.3529, -36.4271, 0.67", "-85.7511, -49.5807, -37.9558, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-61.9369, -39.6736, -31.0888, 0.67", "-69.7521, -41.8495, -34.4312, 0.67", "-77.3038, -43.134, -38.7311, 0.67", "-84.4778, -44.5576, -43.596, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-2.54069, -57.8713, 2.49218, 0.67", "-1.47814, -67.6789, 5.70226, 0.67", "-0.728966, -73.1152, 6.86142, 0.67", "-0.449232, -75.4034, 7.18191, 0.67", "0.0783354, -78.6738, 7.50978, 0.67", "1.48198, -85.9026, 8.08945, 0.67", "2.54341, -90.1821, 8.44182, 0.67", "5.03162, -96.2292, 8.6964, 0.67", "6.41123, -98.8402, 8.8215, 0.67", "8.55971, -103.005, 8.59942, 0.67", "9.41657, -104.737, 8.33004, 0.67", "10.7936, -107.681, 7.74577, 0.67", "12.0864, -110.921, 7.23617, 0.67", "14.6626, -117.562, 6.6125, 0.67", "16.6954, -122.994, 6.00464, 0.67", "17.966, -127.17, 5.43727, 0.67", "18.8153, -130.621, 4.9237, 0.67", "19.0845, -132.317, 4.65417, 0.67", "19.2846, -135.091, 4.30644, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-2.54069, -57.8713, 2.49218, 0.67", "-4.15298, -62.1749, 0.83329, 0.67", "-6.38352, -69.2245, -1.66988, 0.67", "-9.43017, -78.5744, -4.89078, 0.67", "-10.9086, -82.8584, -6.3461, 0.67", "-11.2534, -83.8471, -6.66344, 0.67", "-12.4217, -87.3662, -7.70112, 0.67", "-13.4283, -91.3449, -8.64757, 0.67", "-14.45, -95.4005, -9.24057, 0.67", "-14.9718, -97.1336, -9.26707, 0.67", "-16.0597, -100.576, -9.21969, 0.67", "-16.9593, -103.347, -9.12585, 0.67", "-19.3157, -110.229, -8.76136, 0.67", "-20.9529, -114.632, -8.43191, 0.67", "-22.6393, -118.488, -8.12399, 0.67", "-23.1466, -119.443, -8.06539, 0.67", "-25.2025, -122.706, -8.05183, 0.67", "-26.0114, -123.978, -8.05114, 0.67", "-28.5586, -128.344, -8.06501, 0.67", "-32.0193, -134.621, -8.22163, 0.67", "-34.0099, -138.246, -8.31612, 0.67", "-35.7566, -141.383, -8.38381, 0.67", "-38.8762, -146.916, -8.49789, 0.67", "-42.5646, -153.936, -8.56384, 0.67", "-44.4408, -158.118, -8.51797, 0.67", "-45.1183, -159.801, -8.49516, 0.67", "-46.3329, -162.565, -8.4212, 0.67", "-47.2298, -164.302, -8.34294, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-40.2189, 48.4427, -27.9319, 0.33", "-42.4309, 51.7509, -28.1627, 0.33", "-43.8503, 53.7449, -28.6854, 0.67", "-44.7336, 54.9893, -29.0916, 0.67", "-45.7114, 56.3875, -29.5639, 0.33", "-46.5444, 57.6531, -29.9553, 0.67", "-48.1404, 60.0318, -30.7315, 0.33", "-49.9717, 62.8716, -31.7938, 0.67", "-51.5705, 65.2849, -32.6366, 0.33", "-52.219, 66.2966, -33.0147, 0.67", "-53.3747, 68.1382, -33.7421, 0.33", "-55.0277, 70.9046, -34.8456, 0.33", "-55.8764, 72.3737, -35.4069, 0.33", "-56.5838, 73.6243, -35.7671, 1.33", "-58.1569, 76.2872, -36.7672, 0.33" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-40.2189, 48.4427, -27.9319, 0.33", "-40.0189, 52.172, -26.744, 0.33", "-39.9855, 53.0775, -26.5184, 0.33", "-39.8421, 55.8312, -26.0356, 0.67", "-39.6278, 59.406, -25.5489, 0.33", "-39.566, 60.2122, -25.4597, 0.67", "-39.3398, 62.6766, -25.2534, 0.33", "-39.2125, 64.486, -25.2759, 0.67", "-38.9817, 67.3582, -25.4794, 0.33", "-38.9272, 68.1285, -25.5897, 0.67", "-38.9179, 69.2575, -25.7885, 0.33", "-38.9472, 70.2058, -25.9465, 0.67", "-39.2366, 74.0405, -26.5024, 0.33", "-39.4238, 75.6051, -26.7091, 0.33", "-39.6605, 77.0766, -26.8779, 0.67", "-40.6062, 81.6684, -27.2142, 0.67", "-41.042, 83.389, -27.3622, 0.33", "-41.4026, 84.7347, -27.4437, 0.67", "-41.9608, 86.7739, -27.5227, 0.33", "-42.1084, 87.3267, -27.5507, 0.67", "-42.6939, 89.7869, -27.6497, 0.33", "-43.2901, 92.702, -27.6793, 0.67", "-43.6305, 95.8219, -27.6112, 0.67", "-43.7035, 97.4355, -27.4819, 0.33", "-43.662, 98.8867, -27.3217, 0.33", "-43.3935, 101.868, -26.9573, 0.67", "-43.1233, 103.95, -26.6366, 0.33", "-42.7753, 106.279, -26.1541, 0.67", "-42.3197, 109.346, -25.7105, 0.67", "-41.9919, 111.556, -25.4734, 0.33", "-41.7476, 113.164, -25.3695, 0.67", "-41.5896, 114.941, -25.4162, 0.33", "-41.5561, 116.323, -25.5524, 0.33", "-41.6436, 119.562, -26.0456, 0.33", "-41.6649, 120.312, -26.2135, 0.67", "-41.8048, 121.572, -26.4512, 0.33", "-42.1987, 124.144, -26.8791, 0.67", "-42.646, 126.392, -27.2187, 0.33", "-43.2012, 128.647, -27.4485, 0.33", "-43.5292, 129.842, -27.4937, 0.67", "-44.755, 133.922, -27.5984, 0.33", "-44.8692, 134.273, -27.6021, 0.67", "-45.3126, 135.667, -27.5852, 0.33", "-45.6869, 136.927, -27.6248, 0.67", "-46.1691, 138.737, -27.7182, 0.33", "-46.3992, 139.858, -27.7894, 0.33", "-46.4335, 140.118, -27.816, 0.67", "-46.6457, 141.964, -28.0658, 0.33", "-46.9834, 144.967, -28.6524, 0.67", "-47.1671, 146.552, -28.9803, 0.33", "-47.275, 147.58, -29.2257, 0.67", "-47.5696, 149.934, -29.8207, 0.33", "-47.7381, 151.035, -30.107, 0.67", "-48.0753, 153.131, -30.6534, 0.33", "-48.3982, 154.78, -31.0436, 0.67", "-48.8177, 156.683, -31.448, 0.33", "-49.0916, 158.029, -31.7018, 0.33", "-49.2005, 158.582, -31.7844, 0.67", "-49.5597, 160.419, -31.955, 0.33", "-49.7502, 161.491, -31.9682, 0.33", "-49.8917, 161.992, -31.9394, 0.67", "-50.7142, 164.192, -31.6287, 0.33", "-51.0643, 165.042, -31.4936, 0.33", "-51.4178, 165.765, -31.3458, 0.67", "-53.2439, 169.084, -30.5527, 0.33", "-54.9045, 172.001, -29.8318, 0.33", "-56.0557, 174.03, -29.3297, 0.67", "-57.4049, 176.346, -28.9671, 0.33", "-58.2819, 177.82, -28.8786, 0.33", "-58.5473, 178.262, -28.8743, 0.67", "-59.5677, 179.975, -29.0563, 0.33", "-60.3501, 181.591, -29.4162, 0.33", "-62.2926, 185.707, -30.7527, 0.33", "-62.8313, 186.802, -31.2619, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-7.49211, 148.012, -16.5002, 0.67", "-6.31629, 151.391, -15.2443, 0.67", "-5.30679, 154.291, -14.166, 0.67", "-3.91595, 158.287, -12.6803, 0.67", "-2.88499, 161.249, -11.5791, 0.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-7.49211, 148.012, -16.5002, 0.67", "-9.06282, 153.138, -20.4196, 0.67", "-9.53201, 154.478, -21.5462, 0.67", "-10.5408, 157.047, -23.8275, 0.67", "-11.5766, 159.31, -26.0049, 0.67", "-13.5983, 163.727, -30.1666, 0.67", "-14.7773, 166.197, -32.3166, 0.67", "-15.2836, 167.104, -33.0531, 0.33", "-15.6106, 167.733, -33.4623, 0.67", "-16.8314, 170.349, -34.8421, 0.67", "-18.0966, 173.053, -36.1225, 0.67", "-20.1255, 177.154, -38.1201, 0.67", "-22.3299, 181.693, -40.2886, 0.67", "-23.1332, 183.401, -41.1404, 0.67", "-25.3737, 188.093, -43.5752, 0.67", "-26.4694, 190.294, -44.7768, 0.67", "-28.4164, 193.784, -47.0549, 0.67", "-29.2589, 195.25, -48.1687, 0.33", "-29.6942, 195.9, -48.7093, 0.67", "-30.8162, 197.192, -49.8024, 0.33", "-31.0895, 197.438, -49.9744, 0.67", "-32.7875, 198.805, -50.5035, 0.33", "-33.8146, 199.609, -50.5235, 0.67", "-36.2076, 201.321, -50.2156, 0.33", "-37.9515, 202.611, -49.9495, 0.33", "-39.4635, 203.822, -49.6901, 0.67", "-42.557, 206.368, -49.2114, 0.33", "-44.1636, 207.715, -48.9704, 0.33", "-46.3291, 209.745, -48.6524, 0.33", "-48.476, 212.234, -48.3862, 0.67", "-49.7135, 213.834, -48.2977, 0.33", "-51.2113, 215.777, -48.4425, 0.67", "-51.9165, 216.69, -48.5212, 0.67", "-53.8082, 219.082, -48.5319, 0.67", "-54.7835, 220.428, -48.4301, 0.33", "-56.0735, 221.995, -48.062, 0.33", "-57.2174, 223.363, -47.8858, 0.67", "-60.3133, 227.186, -48.0879, 0.67", "-61.386, 228.463, -48.2283, 0.67", "-62.5042, 229.706, -48.5225, 0.33", "-65.0343, 232.473, -49.3457, 0.33", "-69.5285, 237.804, -51.4516, 0.67", "-71.2586, 239.798, -52.9677, 0.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-88.6999, 161.391, 55.5216, 0.67", "-92.5867, 167.808, 58.6256, 0.67", "-96.3276, 173.922, 62.4817, 0.67", "-98.3034, 180.899, 66.1516, 0.67", "-99.2126, 188.526, 68.7354, 0.67", "-100.273, 195.872, 72.0303, 0.67", "-100.513, 203.109, 75.7442, 0.67", "-101.947, 210.323, 79.1905, 0.67", "-103.529, 216.646, 84.1055, 0.67", "-103.873, 222.952, 89.3003, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-88.6999, 161.391, 55.5216, 0.67", "-90.9615, 166.268, 57.8832, 0.67", "-94.0986, 170.043, 61.1816, 0.67", "-96.4205, 173.137, 65.6807, 0.67", "-99.6302, 176.983, 68.8206, 0.67", "-102.116, 181.554, 71.5674, 0.67", "-104.361, 186.111, 74.5392, 0.67", "-106.462, 190.813, 77.3741, 0.67", "-109.167, 195.048, 80.4614, 0.67", "-110.646, 199.292, 84.2791, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-85.7511, -49.5807, -37.9558, 0.67", "-93.4465, -51.0798, -33.2268, 0.67", "-100.498, -53.3166, -27.8351, 0.67", "-108.147, -56.14, -23.6877, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-85.7511, -49.5807, -37.9558, 0.67", "-92.292, -53.4032, -43.0056, 0.67", "-98.3648, -57.6804, -48.2494, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-84.4778, -44.5576, -43.596, 0.67", "-90.3971, -45.8538, -46.1429, 0.67", "-96.4801, -46.7488, -48.4767, 0.67" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-84.4778, -44.5576, -43.596, 0.67", "-93.0017, -46.714, -49.5098, 0.67", "-101.88, -47.8228, -55.1991, 0.67" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "19.2846, -135.091, 4.30644, 0.67", "21.2299, -138.22, 4.01311, 0.67", "22.2285, -139.653, 3.78521, 0.67", "23.8226, -142.051, 3.37221, 0.33", "24.6619, -143.281, 3.07303, 0.67", "25.7107, -144.725, 2.67214, 0.33", "26.9946, -146.362, 2.12204, 0.67", "28.0845, -147.774, 1.47405, 0.33", "28.8657, -148.66, 1.04303, 0.67", "30.8755, -150.446, 0.369143, 0.33", "31.5688, -151.018, 0.219944, 0.67", "32.8587, -152.184, 0.171501, 0.33", "33.4731, -152.849, 0.316985, 0.67", "34.8003, -154.235, 0.993891, 0.33", "36.6587, -156.214, 2.23197, 0.67", "37.9653, -157.526, 3.10938, 0.33", "39.8416, -159.35, 4.02674, 0.67", "41.8205, -161.296, 5.04707, 0.33", "43.748, -163.172, 5.98165, 0.67", "45.1143, -164.417, 6.53072, 0.33", "48.1133, -167.029, 7.25394, 0.33", "52.1227, -169.975, 7.70162, 0.33" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "19.2846, -135.091, 4.30644, 0.67", "19.1716, -138.748, 4.31906, 0.67", "19.2106, -143.055, 4.3937, 0.67", "19.2915, -145.913, 4.47187, 0.33", "19.3589, -146.948, 4.46893, 0.67", "19.7225, -151.1, 4.85484, 0.33", "19.9238, -152.808, 5.12374, 0.67", "20.3824, -154.569, 5.57695, 0.33", "20.6457, -155.154, 5.85345, 0.67", "22.0461, -157.512, 7.43231, 0.33", "25.1945, -162.025, 10.7712, 0.33", "25.8032, -162.744, 11.3631, 0.67", "27.6379, -164.881, 13.1406, 0.33", "29.2744, -166.693, 14.7278, 0.67", "30.7724, -168.28, 16.1507, 0.33", "32.2626, -169.802, 17.5269, 0.67", "33.2765, -170.885, 18.0447, 0.33", "33.5695, -171.25, 18.2227, 0.67", "34.7036, -173.328, 19.2171, 0.33", "38.633, -182.128, 23.2952, 0.33", "44.5588, -190.072, 26.769, 0.33", "51.1227, -197.371, 30.5698, 0.33", "57.8896, -203.681, 35.6525, 0.33", "65.0618, -209.164, 41.1731, 0.33", "73.3844, -214.444, 45.0508, 0.33", "81.3284, -219.663, 49.7237, 0.33", "89.2756, -224.716, 54.579, 0.33", "97.4653, -229.988, 58.7404, 0.33" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-47.2298, -164.302, -8.34294, 0.67", "-47.9918, -167.495, -9.74487, 0.67", "-48.3105, -168.83, -10.3311, 0.67", "-49.7359, -174.801, -12.9534, 0.67", "-50.6272, -178.535, -14.5933, 0.67", "-50.9822, -180.023, -15.2464, 0.67", "-51.6318, -182.744, -16.4414, 0.67" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-47.2298, -164.302, -8.34294, 0.67", "-47.2201, -166.615, -7.70011, 0.67", "-47.1388, -168.664, -7.04276, 0.67", "-47.2152, -172.53, -5.71158, 0.67", "-47.6134, -178.321, -3.511, 0.67", "-48.1575, -182.553, -1.80999, 0.67", "-48.4129, -184.539, -1.0117, 0.67", "-48.8975, -187.436, 0.210192, 0.67", "-49.6069, -190.822, 1.76257, 0.67", "-50.1887, -192.657, 2.69759, 0.67", "-50.9579, -194.765, 4.15844, 0.67" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-58.1569, 76.2872, -36.7672, 0.67", "-57.42, 74.9769, -38.5165, 0.67", "-54.2017, 70.1861, -44.4435, 0.67", "-52.094, 67.1524, -47.8971, 0.67", "-50.7066, 64.8555, -50.3341, 0.33", "-49.4473, 62.777, -52.4251, 0.67", "-48.1059, 60.6968, -54.5424, 0.33", "-46.963, 58.9493, -56.2507, 0.33", "-44.5486, 55.5451, -59.3157, 0.67", "-41.8948, 51.8334, -62.6936, 0.33", "-40.6699, 50.0904, -64.6388, 0.67", "-39.2164, 47.8452, -67.6095, 0.33", "-37.8312, 45.5919, -70.6876, 0.33", "-37.2495, 44.6678, -72.0789, 0.67", "-35.8028, 42.6332, -75.5507, 0.67", "-32.7186, 38.6964, -83.2145, 0.33", "-31.3722, 36.5949, -87.5764, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-58.1569, 76.2872, -36.7672, 0.67", "-59.5364, 78.6318, -36.9471, 0.67", "-60.5204, 80.4097, -36.9856, 0.67", "-61.2111, 81.6372, -37.0381, 0.67", "-62.2826, 83.6745, -37.1773, 0.67", "-63.2206, 85.6072, -37.3458, 0.33", "-63.5336, 86.2914, -37.4133, 0.67", "-64.865, 89.4456, -37.7315, 0.33", "-65.378, 90.7308, -37.9178, 1.33", "-66.6135, 93.7763, -38.3566, 0.33", "-67.6909, 96.5373, -38.8954, 0.33", "-67.9249, 97.1521, -39.0255, 0.67", "-68.4387, 98.5349, -39.3414, 0.33", "-69.2536, 100.715, -39.901, 0.67", "-70.6599, 104.479, -40.7541, 0.33", "-71.7599, 106.898, -41.344, 1.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-2.88499, 161.249, -11.5791, 0.67", "-2.98956, 164.621, -12.5321, 0.67", "-3.12154, 168.305, -13.6753, 0.67", "-3.33766, 173.473, -15.3263, 0.67", "-3.43509, 176.236, -16.1793, 0.67", "-3.5026, 178.147, -16.7459, 0.67", "-3.60877, 180.276, -17.329, 0.67", "-3.80553, 182.879, -17.9478, 0.33", "-3.81737, 183.365, -18.0501, 0.67", "-3.91807, 184.968, -18.228, 0.33", "-4.0011, 186.122, -18.2419, 0.67", "-3.96277, 187.852, -18.127, 0.33", "-3.87904, 188.517, -18.0162, 0.67", "-3.46594, 189.97, -17.6254, 0.33", "-3.10459, 190.84, -17.382, 0.67", "-2.46601, 192.045, -16.9563, 0.33", "-1.33887, 193.833, -16.2496, 0.33", "-0.491127, 195.066, -15.7649, 0.67", "0.575438, 196.623, -15.2514, 0.33", "0.575438, 196.623, -15.2514, 0.67", "2.19799, 199.39, -14.6395, 0.33", "3.09835, 201.083, -14.3472, 0.33", "3.99893, 203.012, -14.1825, 0.67", "5.08275, 205.71, -14.1757, 0.33", "5.69921, 207.388, -14.2334, 0.33", "6.37312, 209.228, -14.384, 0.33", "6.69857, 210.123, -14.5517, 0.67", "7.61738, 212.947, -15.1992, 0.33", "7.77627, 213.508, -15.3544, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.88499, 161.249, -11.5791, 0.67", "-6.22031, 166.321, -11.3693, 0.67", "-9.84268, 171.83, -11.1414, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-51.6318, -182.744, -16.4414, 0.33", "-57.4906, -187.036, -16.6972, 0.33", "-59.469, -189.096, -17.0108, 0.67", "-60.7126, -190.781, -17.3534, 0.33", "-61.5459, -192.142, -17.6224, 0.67", "-63.2385, -194.79, -17.9962, 0.67", "-65.0708, -197.824, -18.2428, 0.67", "-66.6479, -201.043, -18.4666, 0.67", "-67.9324, -203.93, -18.3427, 0.67", "-68.8847, -206.06, -18.1078, 0.67", "-70.6808, -209.605, -17.6101, 0.33", "-72.0879, -212.015, -17.1473, 0.67", "-73.9171, -214.6, -16.5135, 0.33", "-74.9438, -215.809, -16.1873, 0.67", "-76.6774, -217.989, -15.6855, 0.67", "-78.085, -219.86, -15.4054, 0.67", "-79.2845, -221.535, -15.2933, 0.67", "-80.8391, -223.746, -15.1852, 0.67", "-82.8814, -226.627, -15.0212, 0.67", "-85.7574, -230.824, -14.6475, 0.67", "-86.8786, -232.422, -14.4918, 0.67", "-88.5186, -234.799, -14.3107, 0.67", "-90.0674, -236.931, -14.395, 0.67", "-92.406, -240.175, -14.7305, 0.67", "-94.4733, -243.02, -15.1893, 0.67", "-96.4057, -245.852, -15.7604, 0.67", "-98.9772, -250.031, -16.5707, 0.67", "-102.884, -256.695, -17.9862, 0.67", "-104.791, -260.063, -18.7619, 0.67", "-106.485, -263.283, -19.5388, 0.33", "-109.046, -268.342, -20.7148, 0.67", "-110.341, -271.052, -21.3026, 0.33", "-111.788, -274.203, -21.892, 0.33", "-112.254, -275.272, -21.9543, 0.67", "-113.327, -277.816, -21.9255, 0.33", "-114.377, -280.372, -21.7381, 0.33", "-115.722, -283.204, -21.4084, 0.33", "-116.69, -285.48, -21.0703, 0.33", "-118.257, -290.279, -19.7936, 0.33", "-119.123, -293.237, -18.7689, 0.33", "-123.713, -304.034, -18.6596, 0.33" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-51.6318, -182.744, -16.4414, 0.67", "-52.6558, -184.345, -17.6458, 0.67", "-54.0215, -186.353, -19.0331, 0.67", "-55.8204, -189.452, -20.8074, 0.67", "-56.5573, -191.026, -21.6106, 0.33", "-57.5155, -193.255, -22.6911, 0.67", "-58.5007, -195.642, -23.8007, 0.33", "-58.713, -196.247, -24.0611, 0.33", "-59.683, -199.689, -25.3064, 0.67", "-60.3911, -202.186, -26.1822, 0.33", "-60.9758, -204.426, -27.0084, 0.33", "-61.3102, -205.848, -27.5314, 0.67", "-61.859, -208.407, -28.4238, 0.33", "-62.229, -210.016, -28.9647, 0.33", "-62.8456, -212.344, -29.6488, 0.33", "-62.9332, -212.668, -29.7242, 0.67", "-63.5081, -215.024, -30.1206, 0.33", "-63.8057, -216.371, -30.2623, 0.67", "-64.2033, -218.317, -30.3394, 0.33", "-64.7127, -220.707, -30.4337, 0.33", "-65.0426, -222.405, -30.4448, 0.67", "-65.8138, -226.188, -30.466, 0.33", "-66.5081, -229.311, -30.5, 0.67", "-67.2932, -232.34, -30.4851, 0.67", "-68.1817, -235.47, -30.3732, 0.33", "-69.0539, -238.522, -30.1942, 0.33", "-69.2701, -239.262, -30.1353, 0.33", "-70.0778, -241.76, -29.9185, 0.33", "-70.9126, -243.772, -29.7323, 0.67", "-71.5222, -245.098, -29.5757, 0.33", "-71.664, -245.41, -29.5503, 0.67", "-72.4813, -247.089, -29.558, 0.33", "-72.8745, -247.749, -29.6786, 0.67", "-75.4857, -251.479, -30.9771, 0.33", "-76.3319, -252.505, -31.529, 0.67", "-78.166, -254.459, -32.8362, 0.33", "-78.8421, -255.126, -33.413, 1.33", "-82.7136, -258.735, -37.1517, 0.33", "-82.9815, -259.015, -37.4579, 0.67", "-84.305, -260.528, -39.219, 0.33", "-84.305, -260.528, -39.219, 0.67", "-86.3578, -263.461, -41.9237, 0.33", "-86.7743, -264.211, -42.5231, 0.67", "-88.2316, -267.686, -44.86, 0.33", "-89.1768, -270.203, -46.2025, 0.33", "-89.2955, -270.637, -46.3957, 0.67", "-89.7954, -272.519, -47.1418, 0.33", "-89.9103, -272.982, -47.2771, 0.67", "-90.499, -275.266, -47.9296, 0.33", "-91.424, -278.597, -48.6848, 0.33", "-91.8598, -281.654, -49.1644, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-50.9579, -194.765, 4.15844, 0.33", "-52.4724, -196.776, 5.68368, 0.33", "-53.7726, -198.364, 6.71991, 0.67", "-54.6194, -199.286, 7.26025, 0.33", "-56.4516, -200.798, 8.44139, 0.67", "-59.1795, -202.651, 10.0662, 0.33", "-60.4732, -203.247, 10.7437, 0.67", "-61.9971, -203.524, 11.4232, 0.33", "-63.2338, -203.644, 11.935, 0.67", "-68.7189, -203.786, 14.0928, 0.33", "-70.3536, -203.699, 14.6892, 0.67", "-74.7655, -203.2, 16.3634, 0.67", "-77.5255, -202.777, 17.5762, 1.33", "-84.3831, -205.018, 22.6394, 1.33", "-89.9709, -208.361, 28.5385, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-50.9579, -194.765, 4.15844, 0.67", "-52.0283, -195.885, 4.71154, 0.67", "-53.237, -197.15, 5.33611, 0.67", "-54.3852, -198.352, 5.92946, 0.33", "-55.2763, -199.285, 6.3899, 0.67", "-57.3999, -201.508, 7.48727, 0.33", "-58.6408, -202.807, 8.12847, 0.33", "-63.8509, -207.442, 10.4318, 0.33", "-69.2848, -210.933, 13.9953, 0.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.84268, 171.83, -11.1414, 0.67", "-10.4276, 173.888, -11.392, 0.67", "-10.9903, 175.895, -11.7008, 0.67", "-12.153, 180.138, -12.3991, 0.67", "-12.4295, 181.208, -12.5729, 0.67", "-13.2341, 184.595, -13.1561, 0.67", "-13.582, 185.942, -13.3904, 0.67", "-14.0776, 187.885, -13.7694, 0.67", "-14.3259, 188.919, -13.9376, 0.67", "-14.7729, 190.702, -14.1619, 0.33", "-15.4551, 193.408, -14.3141, 0.67", "-15.9334, 195.335, -14.257, 0.67", "-16.1401, 196.095, -14.2245, 1.33", "-17.0133, 199.534, -14.0136, 0.33", "-17.4179, 201.035, -13.8774, 1.33", "-17.7921, 202.315, -13.7604, 0.33", "-18.05, 203.101, -13.7189, 0.67", "-18.8755, 205.369, -13.7805, 0.67", "-19.5772, 207.075, -13.954, 0.67", "-20.292, 208.458, -14.3066, 0.33", "-21.1356, 209.807, -14.8485, 0.67", "-22.5858, 211.609, -15.9414, 0.33", "-23.8038, 212.643, -17.039, 0.67", "-24.7525, 212.916, -18.3355, 0.67", "-26.2669, 212.894, -20.7015, 0.67", "-27.1938, 212.738, -22.2664, 0.67", "-28.1379, 212.4, -23.9439, 0.67", "-29.0975, 211.849, -25.7793, 0.33", "-31.7399, 209.943, -31.1167, 0.33", "-31.9903, 209.749, -31.6269, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.84268, 171.83, -11.1414, 0.67", "-11.637, 172.979, -10.661, 0.67", "-12.4129, 173.527, -10.4571, 0.67", "-13.0825, 174.058, -10.2951, 0.67", "-15.623, 176.416, -9.52971, 0.67", "-17.062, 177.781, -9.10524, 0.67", "-18.6134, 179.317, -8.6668, 0.33", "-18.9367, 179.708, -8.62402, 2.0", "-19.8736, 180.945, -8.71306, 0.67", "-21.7263, 183.485, -9.36621, 0.33", "-22.6553, 184.818, -9.98973, 0.67", "-23.4092, 185.886, -10.6116, 0.67", "-26.5784, 189.638, -13.2476, 0.33", "-27.5786, 190.681, -13.8762, 0.33", "-28.3242, 191.368, -14.2624, 1.33", "-29.4769, 192.342, -14.7262, 0.67", "-30.1759, 192.911, -14.9111, 0.67", "-32.0142, 194.23, -15.0074, 0.33", "-35.6146, 196.57, -14.2943, 1.33", "-36.3361, 197.078, -14.0941, 0.67", "-37.3414, 197.847, -13.7302, 0.33" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_56", "dend_31", "dend_22", "dend_9", "dend_0", "dend_58", "dend_57", "dend_51", "dend_32", "dend_30", "dend_23", "dend_19", "dend_10", "dend_6", "dend_1", "dend_60", "dend_59", "dend_55", "dend_52", "dend_44", "dend_33", "dend_29", "dend_24", "dend_21", "dend_20", "dend_18", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_54", "dend_53", "dend_48", "dend_45", "dend_41", "dend_34", "dend_26", "dend_25", "dend_13", "dend_12", "dend_4", "dend_3", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_42", "dend_38", "dend_35", "dend_28", "dend_27", "dend_17", "dend_14", "dend_40", "dend_39", "dend_37", "dend_36", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_56", "dend_31", "dend_22", "dend_9", "dend_0", "dend_58", "dend_57", "dend_51", "dend_32", "dend_30", "dend_23", "dend_19", "dend_10", "dend_6", "dend_1", "dend_60", "dend_59", "dend_55", "dend_52", "dend_44", "dend_33", "dend_29", "dend_24", "dend_21", "dend_20", "dend_18", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_54", "dend_53", "dend_48", "dend_45", "dend_41", "dend_34", "dend_26", "dend_25", "dend_13", "dend_12", "dend_4", "dend_3", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_42", "dend_38", "dend_35", "dend_28", "dend_27", "dend_17", "dend_14", "dend_40", "dend_39", "dend_37", "dend_36", "dend_16", "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_31", "dend_22", "dend_22", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "axon_0", "axon_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L4_LBC_fe3c0498a4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_31
create dend_51
public dend_51
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_9
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_32
create dend_44
public dend_44
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_28
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_56, dend_56, dend_56, dend_56, dend_31, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, axon_0, axon_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_8, dend_8, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_50, dend_50, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_56(0), soma_0(0.49999988841484605)
    connect dend_31(0), soma_0(0.49999988841484605)
    connect dend_22(0), soma_0(0.49999988841484605)
    connect dend_9(0), soma_0(0.49999988841484605)
    connect dend_0(0), soma_0(0.49999988841484605)
    connect axon_0(0), soma_0(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.4489, -11.1277, 1.96857, 2.53905 ) }
    soma_0 { pt3dadd( -2.21373, -9.99102, 1.77288, 4.60052 ) }
    soma_0 { pt3dadd( -1.97857, -8.85434, 1.57719, 5.7745 ) }
    soma_0 { pt3dadd( -1.74341, -7.71767, 1.3815, 6.94848 ) }
    soma_0 { pt3dadd( -1.50825, -6.581, 1.18581, 8.08333 ) }
    soma_0 { pt3dadd( -1.27308, -5.44432, 0.990126, 9.17802 ) }
    soma_0 { pt3dadd( -1.03792, -4.30765, 0.794438, 10.2727 ) }
    soma_0 { pt3dadd( -0.802757, -3.17097, 0.59875, 11.3674 ) }
    soma_0 { pt3dadd( -0.567594, -2.0343, 0.403062, 12.0266 ) }
    soma_0 { pt3dadd( -0.332431, -0.897626, 0.207374, 12.2828 ) }
    soma_0 { pt3dadd( -0.0972679, 0.239047, 0.0116859, 12.3212 ) }
    soma_0 { pt3dadd( 0.137895, 1.37572, -0.184002, 11.9564 ) }
    soma_0 { pt3dadd( 0.373058, 2.5124, -0.37969, 10.9173 ) }
    soma_0 { pt3dadd( 0.608221, 3.64907, -0.575378, 9.90283 ) }
    soma_0 { pt3dadd( 0.843384, 4.78574, -0.771067, 9.18979 ) }
    soma_0 { pt3dadd( 1.07855, 5.92242, -0.966755, 8.44172 ) }
    soma_0 { pt3dadd( 1.31371, 7.05909, -1.16244, 7.69366 ) }
    soma_0 { pt3dadd( 1.54887, 8.19576, -1.35813, 6.80206 ) }
    soma_0 { pt3dadd( 1.78404, 9.33244, -1.55382, 5.87376 ) }
    soma_0 { pt3dadd( 2.0192, 10.4691, -1.74951, 4.94547 ) }
    soma_0 { pt3dadd( 2.25436, 11.6058, -1.9452, 2.87974 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 21/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 6.41062, 0.895911, -2.60158, 1.33 ) }
    dend_56 { pt3dadd( 6.94063, 3.73374, -1.44776, 1.33 ) }
    dend_56 { pt3dadd( 7.81713, 8.42683, 0.460363, 0.67 ) }
    dend_56 { pt3dadd( 8.99701, 14.7443, 3.02894, 0.67 ) }
    dend_56 { pt3dadd( 9.65247, 18.2538, 4.45585, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 26/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.05938, -10.2191, 1.30842, 3.33 ) }
    dend_31 { pt3dadd( -3.55284, -11.2688, 1.30842, 3.33 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 28/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -2.75938, 9.97316, -11.0115, 1.33 ) }
    dend_22 { pt3dadd( -5.35112, 10.0332, -12.8584, 1.33 ) }
    dend_22 { pt3dadd( -9.05263, 10.1189, -15.4961, 2.0 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.30938, 11.1041, -10.0116, 1.33 ) }
    dend_9 { pt3dadd( -2.97055, 16.6893, -8.02916, 1.33 ) }
    dend_9 { pt3dadd( -3.44321, 22.45, -6.1889, 2.0 ) }
    dend_9 { pt3dadd( -3.87633, 27.382, -4.8054, 1.33 ) }
    dend_9 { pt3dadd( -4.22027, 30.7637, -4.02211, 1.33 ) }
    dend_9 { pt3dadd( -4.57241, 34.958, -3.07268, 2.0 ) }
    dend_9 { pt3dadd( -4.79597, 38.4201, -2.40375, 1.33 ) }
    dend_9 { pt3dadd( -4.8549, 40.2121, -2.15696, 1.33 ) }
    dend_9 { pt3dadd( -4.90178, 43.6561, -2.02504, 1.33 ) }
    dend_9 { pt3dadd( -5.11878, 48.1491, -2.04128, 1.33 ) }
    dend_9 { pt3dadd( -5.40447, 53.0061, -2.28111, 1.33 ) }
    dend_9 { pt3dadd( -5.73097, 56.6792, -2.51685, 1.33 ) }
    dend_9 { pt3dadd( -6.02945, 59.0842, -2.69613, 0.67 ) }
    dend_9 { pt3dadd( -6.5857, 63.0046, -2.93087, 0.67 ) }
    dend_9 { pt3dadd( -6.99334, 65.8049, -3.12908, 0.67 ) }
    dend_9 { pt3dadd( -7.43259, 68.4952, -3.31508, 0.67 ) }
    dend_9 { pt3dadd( -7.77913, 70.3918, -3.45089, 0.67 ) }
    dend_9 { pt3dadd( -8.29078, 73.12, -3.55735, 0.67 ) }
    dend_9 { pt3dadd( -9.00216, 77.2318, -3.66507, 0.67 ) }
    dend_9 { pt3dadd( -9.93811, 82.9942, -3.6829, 0.67 ) }
    dend_9 { pt3dadd( -10.5565, 87.77, -3.71544, 0.67 ) }
    dend_9 { pt3dadd( -10.7576, 89.2657, -3.73115, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 53/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.750619, 12.0694, 0.238424, 2.67 ) }
    dend_0 { pt3dadd( 0.95819, 14.0257, 3.91414, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 55/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.25436, 11.6058, -1.9452, 0.959978 ) }
    axon_0 { pt3dadd( 5.29331, 26.2947, -1.9452, 0.959978 ) }
    axon_0 { pt3dadd( 8.33225, 40.9837, -1.9452, 0.959978 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 58/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 9.65247, 18.2538, 4.45585, 0.67 ) }
    dend_58 { pt3dadd( 17.8315, 22.2923, 7.3267, 0.67 ) }
    dend_58 { pt3dadd( 24.994, 25.2332, 10.2924, 0.67 ) }
    dend_58 { pt3dadd( 30.4832, 26.8123, 12.5989, 0.67 ) }
    dend_58 { pt3dadd( 34.404, 27.7728, 14.1714, 0.33 ) }
    dend_58 { pt3dadd( 38.9036, 28.729, 15.9945, 0.67 ) }
    dend_58 { pt3dadd( 41.6125, 29.2507, 17.0862, 0.67 ) }
    dend_58 { pt3dadd( 44.7907, 29.4276, 18.3652, 0.67 ) }
    dend_58 { pt3dadd( 51.8049, 29.4686, 21.1914, 0.67 ) }
    dend_58 { pt3dadd( 56.3827, 29.3972, 22.6929, 0.67 ) }
    dend_58 { pt3dadd( 58.8167, 29.4329, 23.2612, 0.67 ) }
    dend_58 { pt3dadd( 60.3406, 29.5117, 23.5314, 0.67 ) }
    dend_58 { pt3dadd( 64.4161, 29.9677, 23.8275, 0.67 ) }
    dend_58 { pt3dadd( 70.7693, 30.9696, 23.6975, 0.67 ) }
    dend_58 { pt3dadd( 73.5924, 31.4851, 23.5529, 0.33 ) }
    dend_58 { pt3dadd( 76.5523, 32.0143, 23.2509, 0.67 ) }
    dend_58 { pt3dadd( 78.4725, 32.3606, 23.0283, 0.33 ) }
    dend_58 { pt3dadd( 87.6765, 34.1478, 21.9898, 0.67 ) }
    dend_58 { pt3dadd( 90.7172, 34.7204, 21.6753, 0.67 ) }
    dend_58 { pt3dadd( 95.7414, 35.5032, 21.2734, 0.67 ) }
    dend_58 { pt3dadd( 101.044, 36.2848, 20.8293, 0.67 ) }
    dend_58 { pt3dadd( 107.839, 37.224, 20.2847, 0.67 ) }
    dend_58 { pt3dadd( 111.006, 37.5794, 20.0886, 0.67 ) }
    dend_58 { pt3dadd( 114.921, 37.8423, 19.9901, 0.67 ) }
    dend_58 { pt3dadd( 117.828, 37.9726, 19.9719, 0.67 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 83/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 9.65247, 18.2538, 4.45585, 0.67 ) }
    dend_57 { pt3dadd( 10.1044, 20.8088, 4.49864, 0.67 ) }
    dend_57 { pt3dadd( 12.9118, 34.129, 4.5962, 0.67 ) }
    dend_57 { pt3dadd( 13.8306, 38.1669, 4.57905, 0.67 ) }
    dend_57 { pt3dadd( 15.4518, 44.7898, 4.49008, 0.67 ) }
    dend_57 { pt3dadd( 18.2119, 54.8519, 4.2461, 0.67 ) }
    dend_57 { pt3dadd( 19.1268, 57.825, 4.20559, 0.67 ) }
    dend_57 { pt3dadd( 20.4715, 61.21, 4.16591, 0.67 ) }
    dend_57 { pt3dadd( 21.2057, 62.5505, 4.16605, 0.67 ) }
    dend_57 { pt3dadd( 22.6807, 64.6453, 4.19093, 0.67 ) }
    dend_57 { pt3dadd( 24.6499, 66.8293, 4.13371, 0.67 ) }
    dend_57 { pt3dadd( 28.8536, 70.3844, 4.18261, 0.67 ) }
    dend_57 { pt3dadd( 31.2297, 72.2792, 4.16381, 0.67 ) }
    dend_57 { pt3dadd( 37.6514, 77.0838, 4.03123, 0.67 ) }
    dend_57 { pt3dadd( 41.5845, 79.9362, 3.88957, 0.67 ) }
    dend_57 { pt3dadd( 43.7177, 81.3878, 3.73766, 0.67 ) }
    dend_57 { pt3dadd( 45.5803, 82.6176, 3.51938, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_57 { pt3dadd( 48.3079, 84.4069, 3.02241, 0.67 ) }
    dend_57 { pt3dadd( 50.5154, 85.9498, 2.58924, 0.67 ) }
    dend_57 { pt3dadd( 52.8283, 87.8325, 2.15003, 0.67 ) }
    dend_57 { pt3dadd( 55.0085, 90.1506, 1.79051, 0.67 ) }
    dend_57 { pt3dadd( 56.3819, 91.9271, 1.62139, 0.67 ) }
    dend_57 { pt3dadd( 58.416, 95.1513, 1.48092, 0.67 ) }
    dend_57 { pt3dadd( 60.0262, 98.3823, 1.53699, 0.67 ) }
    dend_57 { pt3dadd( 61.7925, 103.143, 1.77896, 0.67 ) }
    dend_57 { pt3dadd( 62.4382, 105.267, 1.93822, 0.67 ) }
    dend_57 { pt3dadd( 63.1433, 108.021, 2.18947, 0.67 ) }
    dend_57 { pt3dadd( 63.5578, 109.748, 2.38044, 0.67 ) }
    dend_57 { pt3dadd( 65.0423, 115.673, 3.0846, 0.67 ) }
    dend_57 { pt3dadd( 65.4784, 117.518, 3.32511, 0.67 ) }
    dend_57 { pt3dadd( 66.0909, 119.88, 3.6323, 0.33 ) }
    dend_57 { pt3dadd( 66.9023, 123.755, 4.00345, 0.67 ) }
    dend_57 { pt3dadd( 67.2262, 125.517, 4.11214, 0.67 ) }
    dend_57 { pt3dadd( 67.8906, 129.259, 4.20063, 0.67 ) }
    dend_57 { pt3dadd( 68.0894, 130.852, 4.18283, 0.67 ) }
    dend_57 { pt3dadd( 68.3701, 133.685, 4.04245, 0.67 ) }
    dend_57 { pt3dadd( 68.7218, 138.651, 3.63382, 0.67 ) }
    dend_57 { pt3dadd( 68.7962, 139.941, 3.52636, 0.67 ) }
    dend_57 { pt3dadd( 68.9107, 142.051, 3.36787, 0.33 ) }
    dend_57 { pt3dadd( 69.0352, 144.336, 3.2815, 0.33 ) }
    dend_57 { pt3dadd( 69.2755, 147.696, 3.32574, 0.67 ) }
    dend_57 { pt3dadd( 69.3972, 149.263, 3.44458, 0.67 ) }
    dend_57 { pt3dadd( 69.6739, 152.333, 3.91721, 0.67 ) }
    dend_57 { pt3dadd( 69.679, 154.005, 4.13135, 0.33 ) }
    dend_57 { pt3dadd( 69.5052, 156.508, 4.39987, 0.67 ) }
    dend_57 { pt3dadd( 69.2497, 159.168, 4.62056, 0.33 ) }
    dend_57 { pt3dadd( 69.181, 159.61, 4.65405, 0.67 ) }
    dend_57 { pt3dadd( 68.84, 161.489, 4.61045, 0.33 ) }
    dend_57 { pt3dadd( 68.2994, 165.341, 3.95174, 0.67 ) }
    dend_57 { pt3dadd( 68.0683, 167.853, 3.31551, 0.67 ) }
    dend_57 { pt3dadd( 68.036, 169.395, 2.86786, 0.67 ) }
    dend_57 { pt3dadd( 68.1074, 171.343, 2.33113, 0.67 ) }
    dend_57 { pt3dadd( 68.3965, 174.619, 1.53421, 0.67 ) }
    dend_57 { pt3dadd( 68.9116, 177.814, 0.872648, 0.67 ) }
    dend_57 { pt3dadd( 69.4237, 179.969, 0.57441, 0.33 ) }
    dend_57 { pt3dadd( 70.227, 182.972, 0.373098, 0.67 ) }
    dend_57 { pt3dadd( 70.8312, 184.988, 0.415504, 0.33 ) }
    dend_57 { pt3dadd( 71.1756, 186.062, 0.543088, 0.67 ) }
    dend_57 { pt3dadd( 71.5767, 187.54, 0.927667, 0.33 ) }
    dend_57 { pt3dadd( 71.7833, 188.714, 1.31498, 0.67 ) }
    dend_57 { pt3dadd( 72.0806, 190.978, 2.00633, 0.67 ) }
    dend_57 { pt3dadd( 72.2259, 193.109, 2.61408, 0.33 ) }
    dend_57 { pt3dadd( 72.2682, 193.791, 2.78477, 0.67 ) }
    dend_57 { pt3dadd( 72.2949, 195.315, 3.1825, 0.33 ) }
    dend_57 { pt3dadd( 72.2624, 196.451, 3.4834, 0.67 ) }
    dend_57 { pt3dadd( 72.1371, 198.963, 4.09774, 0.33 ) }
    dend_57 { pt3dadd( 72.0593, 199.895, 4.2723, 0.67 ) }
    dend_57 { pt3dadd( 71.9393, 202.432, 4.77612, 0.33 ) }
    // Section: dend_51, id: dend_51, parent: dend_31 (entry count 51/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -3.55284, -11.2688, 1.30842, 0.67 ) }
    dend_51 { pt3dadd( -2.48264, -13.8272, 0.721024, 0.67 ) }
    dend_51 { pt3dadd( -0.785357, -19.6965, -0.811305, 1.33 ) }
    dend_51 { pt3dadd( -0.159433, -22.7643, -1.46162, 1.33 ) }
    dend_51 { pt3dadd( 0.251224, -25.8991, -2.01871, 1.33 ) }
    dend_51 { pt3dadd( 1.12548, -31.1478, -2.57112, 1.33 ) }
    dend_51 { pt3dadd( 1.4431, -33.7054, -2.87502, 0.67 ) }
    dend_51 { pt3dadd( 1.73991, -37.6389, -3.37401, 1.33 ) }
    dend_51 { pt3dadd( 1.86581, -40.7513, -3.76473, 1.33 ) }
    dend_51 { pt3dadd( 1.97219, -42.4874, -3.90512, 0.67 ) }
    dend_51 { pt3dadd( 3.55401, -57.645, -4.36329, 0.67 ) }
    dend_51 { pt3dadd( 4.28329, -63.5886, -4.1044, 0.67 ) }
    dend_51 { pt3dadd( 4.39729, -64.6829, -4.02317, 0.67 ) }
    dend_51 { pt3dadd( 4.68533, -67.2153, -3.7661, 0.67 ) }
    dend_51 { pt3dadd( 5.47092, -73.0097, -3.10455, 0.67 ) }
    dend_51 { pt3dadd( 5.79195, -75.1873, -2.7716, 0.67 ) }
    dend_51 { pt3dadd( 6.30492, -81.0092, -1.54154, 1.33 ) }
    dend_51 { pt3dadd( 6.77715, -85.92, -0.553359, 0.67 ) }
    dend_51 { pt3dadd( 7.07927, -89.3697, -0.0679481, 0.67 ) }
    dend_51 { pt3dadd( 7.34496, -93.2308, 0.352165, 0.67 ) }
    dend_51 { pt3dadd( 7.66374, -98.3974, 0.632768, 0.67 ) }
    dend_51 { pt3dadd( 8.04185, -104.005, 0.817437, 0.67 ) }
    dend_51 { pt3dadd( 8.6635, -109.641, 0.687452, 0.67 ) }
    dend_51 { pt3dadd( 9.09982, -112.661, 0.512947, 0.67 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 75/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.55284, -11.2688, 1.30842, 1.33 ) }
    dend_32 { pt3dadd( -2.9782, -14.4369, 0.18499, 1.33 ) }
    dend_32 { pt3dadd( -2.03262, -19.65, -1.66366, 1.33 ) }
    dend_32 { pt3dadd( -1.52293, -22.46, -2.66012, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 79/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -9.05263, 10.1189, -15.4961, 1.33 ) }
    dend_30 { pt3dadd( -14.0105, 7.53335, -14.5745, 1.33 ) }
    dend_30 { pt3dadd( -19.0606, 4.38536, -13.4786, 1.33 ) }
    dend_30 { pt3dadd( -21.7813, 2.691, -12.8975, 0.67 ) }
    dend_30 { pt3dadd( -25.7775, 0.52266, -12.0585, 0.67 ) }
    dend_30 { pt3dadd( -30.3857, -1.59232, -10.9695, 0.67 ) }
    dend_30 { pt3dadd( -37.0257, -4.62762, -9.06613, 0.67 ) }
    dend_30 { pt3dadd( -38.8157, -5.45854, -8.63361, 0.67 ) }
    dend_30 { pt3dadd( -43.3097, -7.50889, -8.03658, 0.67 ) }
    dend_30 { pt3dadd( -47.4429, -9.0904, -7.96648, 0.67 ) }
    dend_30 { pt3dadd( -53.4921, -11.013, -8.49872, 0.67 ) }
    dend_30 { pt3dadd( -60.3829, -13.3241, -9.62481, 0.67 ) }
    dend_30 { pt3dadd( -69.2826, -16.2421, -11.4633, 0.67 ) }
    dend_30 { pt3dadd( -73.5655, -17.7313, -12.5285, 0.67 ) }
    dend_30 { pt3dadd( -78.7099, -19.6897, -14.0346, 0.67 ) }
    dend_30 { pt3dadd( -86.4487, -22.8988, -16.588, 0.67 ) }
    dend_30 { pt3dadd( -91.939, -25.2242, -18.5364, 0.67 ) }
    dend_30 { pt3dadd( -98.67, -28.0266, -20.7112, 0.67 ) }
    dend_30 { pt3dadd( -101.195, -29.1038, -21.1508, 0.67 ) }
    dend_30 { pt3dadd( -103.0, -29.9448, -21.3535, 0.33 ) }
    dend_30 { pt3dadd( -103.504, -30.181, -21.39, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( -105.653, -31.061, -21.3985, 0.33 ) }
    dend_30 { pt3dadd( -107.849, -31.7888, -21.2852, 1.33 ) }
    dend_30 { pt3dadd( -112.857, -33.4772, -20.9971, 0.33 ) }
    dend_30 { pt3dadd( -114.796, -33.9447, -20.998, 0.33 ) }
    dend_30 { pt3dadd( -116.351, -34.234, -21.1199, 1.33 ) }
    dend_30 { pt3dadd( -120.852, -34.9147, -22.1034, 0.33 ) }
    dend_30 { pt3dadd( -122.4, -35.0961, -22.6271, 0.67 ) }
    dend_30 { pt3dadd( -126.961, -35.4249, -24.6208, 0.33 ) }
    dend_30 { pt3dadd( -132.728, -35.6054, -27.7709, 0.67 ) }
    dend_30 { pt3dadd( -135.37, -35.5185, -29.3347, 0.67 ) }
    dend_30 { pt3dadd( -141.001, -35.0877, -33.1426, 0.33 ) }
    dend_30 { pt3dadd( -141.977, -34.944, -33.8779, 0.67 ) }
    dend_30 { pt3dadd( -143.688, -34.6169, -35.232, 0.33 ) }
    dend_30 { pt3dadd( -144.99, -34.3386, -36.2357, 0.67 ) }
    dend_30 { pt3dadd( -147.993, -33.743, -38.2589, 0.33 ) }
    dend_30 { pt3dadd( -150.308, -33.4094, -39.435, 1.33 ) }
    dend_30 { pt3dadd( -155.798, -32.8666, -41.5104, 0.33 ) }
    dend_30 { pt3dadd( -157.16, -32.8558, -41.9901, 1.33 ) }
    dend_30 { pt3dadd( -161.181, -33.1348, -43.2055, 0.33 ) }
    dend_30 { pt3dadd( -166.564, -33.9227, -44.4891, 0.33 ) }
    dend_30 { pt3dadd( -169.02, -34.4649, -44.922, 0.33 ) }
    dend_30 { pt3dadd( -169.877, -34.6978, -44.9937, 1.33 ) }
    dend_30 { pt3dadd( -173.79, -36.1476, -45.1385, 0.33 ) }
    dend_30 { pt3dadd( -176.148, -37.0529, -45.1837, 0.67 ) }
    dend_30 { pt3dadd( -178.214, -37.9297, -45.3662, 0.33 ) }
    dend_30 { pt3dadd( -179.006, -38.2879, -45.4925, 0.67 ) }
    dend_30 { pt3dadd( -181.331, -39.169, -45.8735, 0.33 ) }
    dend_30 { pt3dadd( -183.794, -39.9043, -46.1862, 1.33 ) }
    dend_30 { pt3dadd( -189.863, -41.4686, -46.7959, 0.33 ) }
    dend_30 { pt3dadd( -193.083, -42.1642, -47.0112, 0.67 ) }
    dend_30 { pt3dadd( -194.824, -42.4981, -47.075, 0.33 ) }
    dend_30 { pt3dadd( -197.5, -42.9593, -47.1045, 0.67 ) }
    dend_30 { pt3dadd( -205.269, -44.1868, -47.3341, 0.33 ) }
    dend_30 { pt3dadd( -206.948, -44.4219, -47.3358, 1.33 ) }
    dend_30 { pt3dadd( -215.99, -45.6307, -47.1857, 0.33 ) }
    dend_30 { pt3dadd( -216.628, -45.7077, -47.1557, 0.67 ) }
    dend_30 { pt3dadd( -219.049, -45.9988, -47.0832, 0.33 ) }
    dend_30 { pt3dadd( -223.679, -46.5854, -47.1175, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -9.05263, 10.1189, -15.4961, 0.67 ) }
    dend_23 { pt3dadd( -11.4186, 14.5581, -16.2535, 0.67 ) }
    dend_23 { pt3dadd( -14.8505, 18.9836, -17.7322, 0.67 ) }
    dend_23 { pt3dadd( -16.6331, 21.1426, -18.6916, 0.67 ) }
    dend_23 { pt3dadd( -17.9143, 22.6942, -19.3812, 1.33 ) }
    dend_23 { pt3dadd( -19.4977, 24.6119, -20.2333, 0.67 ) }
    dend_23 { pt3dadd( -20.9935, 26.4235, -21.0384, 1.33 ) }
    dend_23 { pt3dadd( -24.3567, 29.4087, -22.6323, 0.67 ) }
    dend_23 { pt3dadd( -25.9743, 30.4116, -23.4839, 1.33 ) }
    // Section: dend_19, id: dend_19, parent: dend_9 (entry count 47/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -10.7576, 89.2657, -3.73115, 0.67 ) }
    dend_19 { pt3dadd( -3.65447, 94.4256, -5.45827, 0.67 ) }
    dend_19 { pt3dadd( -1.57463, 96.1212, -6.02635, 0.67 ) }
    dend_19 { pt3dadd( 5.25144, 101.839, -7.989, 0.33 ) }
    dend_19 { pt3dadd( 7.16579, 103.376, -8.59031, 0.67 ) }
    dend_19 { pt3dadd( 11.2014, 106.727, -9.91024, 0.33 ) }
    dend_19 { pt3dadd( 14.6038, 109.639, -11.0842, 0.67 ) }
    dend_19 { pt3dadd( 18.2756, 113.112, -12.3055, 0.67 ) }
    dend_19 { pt3dadd( 19.8515, 114.865, -12.9765, 0.33 ) }
    dend_19 { pt3dadd( 22.4025, 117.911, -14.5686, 0.67 ) }
    dend_19 { pt3dadd( 24.397, 120.879, -16.0721, 0.67 ) }
    dend_19 { pt3dadd( 25.8575, 123.696, -17.5453, 0.33 ) }
    dend_19 { pt3dadd( 26.8332, 125.893, -18.9064, 0.67 ) }
    dend_19 { pt3dadd( 27.8636, 128.14, -20.6478, 0.67 ) }
    dend_19 { pt3dadd( 29.931, 133.147, -24.7491, 0.33 ) }
    dend_19 { pt3dadd( 31.5701, 137.532, -28.3079, 0.67 ) }
    dend_19 { pt3dadd( 33.1253, 141.594, -31.4656, 0.67 ) }
    dend_19 { pt3dadd( 34.6393, 145.718, -34.2524, 0.67 ) }
    dend_19 { pt3dadd( 36.113, 149.933, -36.5515, 0.67 ) }
    dend_19 { pt3dadd( 37.1381, 153.087, -37.9528, 0.67 ) }
    dend_19 { pt3dadd( 37.8866, 155.637, -38.7722, 0.33 ) }
    dend_19 { pt3dadd( 39.6764, 161.335, -40.191, 0.67 ) }
    dend_19 { pt3dadd( 40.5612, 164.85, -40.6483, 0.33 ) }
    dend_19 { pt3dadd( 41.5702, 169.889, -40.9002, 0.67 ) }
    dend_19 { pt3dadd( 42.3416, 175.326, -41.1929, 0.33 ) }
    dend_19 { pt3dadd( 42.5079, 176.66, -41.3541, 0.67 ) }
    dend_19 { pt3dadd( 42.7139, 178.299, -41.8228, 0.33 ) }
    dend_19 { pt3dadd( 42.924, 180.923, -42.9216, 0.67 ) }
    dend_19 { pt3dadd( 43.0423, 182.839, -43.8906, 0.67 ) }
    dend_19 { pt3dadd( 43.182, 188.91, -47.166, 0.67 ) }
    dend_19 { pt3dadd( 43.2502, 191.517, -48.5687, 1.33 ) }
    dend_19 { pt3dadd( 43.5469, 197.941, -52.2634, 0.33 ) }
    dend_19 { pt3dadd( 43.7008, 200.293, -53.6897, 0.67 ) }
    dend_19 { pt3dadd( 43.8875, 201.787, -54.6243, 0.67 ) }
    dend_19 { pt3dadd( 44.3012, 204.237, -56.1103, 0.33 ) }
    dend_19 { pt3dadd( 45.533, 209.795, -59.0268, 0.67 ) }
    dend_19 { pt3dadd( 46.2954, 212.886, -60.3708, 0.33 ) }
    dend_19 { pt3dadd( 46.4416, 213.444, -60.578, 0.67 ) }
    dend_19 { pt3dadd( 48.1573, 218.998, -62.7137, 0.33 ) }
    dend_19 { pt3dadd( 48.609, 220.375, -63.2555, 0.67 ) }
    dend_19 { pt3dadd( 50.3185, 224.976, -65.0305, 0.33 ) }
    dend_19 { pt3dadd( 50.8976, 226.573, -65.5174, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.7576, 89.2657, -3.73115, 0.67 ) }
    dend_10 { pt3dadd( -9.70678, 93.4389, -4.6202, 0.67 ) }
    dend_10 { pt3dadd( -7.83861, 99.2003, -5.93232, 0.67 ) }
    dend_10 { pt3dadd( -7.15201, 101.817, -6.47642, 0.67 ) }
    dend_10 { pt3dadd( -6.66405, 104.442, -7.00779, 0.67 ) }
    dend_10 { pt3dadd( -6.165, 107.9, -7.62428, 0.67 ) }
    dend_10 { pt3dadd( -5.94675, 109.92, -7.941, 0.67 ) }
    dend_10 { pt3dadd( -5.57841, 112.979, -8.1385, 0.67 ) }
    dend_10 { pt3dadd( -5.23135, 116.591, -8.0721, 0.67 ) }
    dend_10 { pt3dadd( -5.02629, 120.047, -8.13797, 0.67 ) }
    dend_10 { pt3dadd( -4.94448, 123.936, -8.25939, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( -4.99139, 126.84, -8.33494, 0.67 ) }
    dend_10 { pt3dadd( -5.09349, 134.063, -8.38891, 0.67 ) }
    dend_10 { pt3dadd( -5.01479, 138.007, -8.2683, 0.67 ) }
    dend_10 { pt3dadd( -4.66917, 141.934, -8.14174, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 4/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 0.95819, 14.0257, 3.91414, 0.67 ) }
    dend_6 { pt3dadd( 1.72148, 15.568, 4.86052, 0.67 ) }
    dend_6 { pt3dadd( 2.29346, 17.3363, 5.93044, 0.67 ) }
    dend_6 { pt3dadd( 3.06336, 20.9066, 7.60944, 0.67 ) }
    dend_6 { pt3dadd( 3.16948, 21.6535, 7.93766, 1.33 ) }
    dend_6 { pt3dadd( 3.33121, 23.2008, 8.5938, 0.67 ) }
    dend_6 { pt3dadd( 3.4164, 24.6754, 9.21438, 0.67 ) }
    dend_6 { pt3dadd( 3.57127, 28.8077, 10.8859, 0.67 ) }
    dend_6 { pt3dadd( 3.56144, 33.7144, 12.7934, 0.67 ) }
    dend_6 { pt3dadd( 3.49876, 35.0081, 13.2572, 0.67 ) }
    dend_6 { pt3dadd( 3.28541, 37.7752, 14.318, 0.67 ) }
    dend_6 { pt3dadd( 3.14667, 39.3606, 14.8665, 0.67 ) }
    dend_6 { pt3dadd( 3.0843, 40.2501, 15.1418, 0.67 ) }
    dend_6 { pt3dadd( 3.12428, 42.6939, 15.7124, 0.67 ) }
    dend_6 { pt3dadd( 3.3402, 46.1945, 16.3913, 0.67 ) }
    dend_6 { pt3dadd( 3.48271, 47.3913, 16.5644, 0.67 ) }
    dend_6 { pt3dadd( 4.06891, 51.0738, 16.8716, 0.67 ) }
    dend_6 { pt3dadd( 4.26089, 52.1882, 16.9274, 0.67 ) }
    dend_6 { pt3dadd( 4.76944, 54.8773, 17.0611, 0.67 ) }
    dend_6 { pt3dadd( 4.97806, 56.0109, 17.1066, 0.67 ) }
    dend_6 { pt3dadd( 5.31647, 57.625, 17.1613, 0.67 ) }
    dend_6 { pt3dadd( 5.94526, 60.529, 17.3819, 0.67 ) }
    dend_6 { pt3dadd( 6.1916, 61.8123, 17.5718, 0.67 ) }
    dend_6 { pt3dadd( 6.71771, 64.8214, 18.1121, 0.67 ) }
    dend_6 { pt3dadd( 6.94264, 66.4209, 18.465, 0.67 ) }
    dend_6 { pt3dadd( 7.16715, 68.002, 18.8179, 0.67 ) }
    dend_6 { pt3dadd( 7.5484, 70.8622, 19.4981, 0.67 ) }
    dend_6 { pt3dadd( 7.71179, 72.0987, 19.8087, 0.67 ) }
    dend_6 { pt3dadd( 8.05902, 74.5544, 20.3873, 0.67 ) }
    dend_6 { pt3dadd( 8.12185, 75.3807, 20.5559, 0.67 ) }
    dend_6 { pt3dadd( 8.33146, 77.9967, 21.1434, 0.67 ) }
    dend_6 { pt3dadd( 7.66592, 84.6213, 22.4649, 0.67 ) }
    dend_6 { pt3dadd( 8.22873, 91.1833, 24.1326, 0.67 ) }
    dend_6 { pt3dadd( 7.70375, 97.8021, 25.5459, 0.67 ) }
    dend_6 { pt3dadd( 8.38155, 104.268, 27.5328, 0.67 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 39/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.95819, 14.0257, 3.91414, 1.33 ) }
    dend_1 { pt3dadd( -2.16627, 19.3816, 6.03972, 1.33 ) }
    dend_1 { pt3dadd( -4.71135, 23.2177, 7.31472, 1.33 ) }
    dend_1 { pt3dadd( -7.70064, 27.7488, 8.6084, 1.33 ) }
    dend_1 { pt3dadd( -13.2771, 36.3865, 10.8145, 1.33 ) }
    dend_1 { pt3dadd( -15.0178, 39.2261, 11.4809, 1.33 ) }
    dend_1 { pt3dadd( -16.3648, 41.5558, 11.9982, 0.67 ) }
    dend_1 { pt3dadd( -19.9748, 47.7237, 13.3969, 0.67 ) }
    dend_1 { pt3dadd( -21.5418, 50.5509, 13.9896, 0.67 ) }
    dend_1 { pt3dadd( -22.9076, 52.9907, 14.2928, 0.67 ) }
    dend_1 { pt3dadd( -23.9151, 54.8635, 14.3546, 0.67 ) }
    dend_1 { pt3dadd( -25.3743, 57.6149, 14.5458, 0.67 ) }
    dend_1 { pt3dadd( -27.3317, 61.185, 14.8844, 0.67 ) }
    dend_1 { pt3dadd( -29.2046, 64.3761, 15.2892, 0.67 ) }
    dend_1 { pt3dadd( -31.2499, 67.373, 15.6941, 0.67 ) }
    dend_1 { pt3dadd( -32.9814, 69.63, 16.0001, 0.67 ) }
    dend_1 { pt3dadd( -35.0824, 72.0424, 16.3297, 0.67 ) }
    dend_1 { pt3dadd( -37.4682, 74.5385, 16.6423, 0.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 57/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.33225, 40.9837, -1.9452, 0.33 ) }
    axon_1 { pt3dadd( 11.3712, 55.6726, -1.9452, 0.33 ) }
    axon_1 { pt3dadd( 14.4101, 70.3615, -1.9452, 0.33 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 117.828, 37.9726, 19.9719, 1.33 ) }
    dend_60 { pt3dadd( 118.53, 38.3399, 23.5375, 1.33 ) }
    dend_60 { pt3dadd( 118.837, 38.5007, 25.0986, 0.67 ) }
    dend_60 { pt3dadd( 120.199, 39.2138, 32.0208, 0.67 ) }
    dend_60 { pt3dadd( 120.915, 39.3673, 42.6862, 0.67 ) }
    dend_60 { pt3dadd( 123.806, 37.8152, 52.8656, 0.67 ) }
    dend_60 { pt3dadd( 126.137, 37.2083, 63.2852, 0.67 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 67/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 117.828, 37.9726, 19.9719, 0.33 ) }
    dend_59 { pt3dadd( 119.732, 38.5035, 20.1624, 0.33 ) }
    dend_59 { pt3dadd( 120.881, 38.6946, 20.2903, 0.67 ) }
    dend_59 { pt3dadd( 123.045, 38.8782, 20.5523, 0.33 ) }
    dend_59 { pt3dadd( 125.626, 38.7505, 20.9118, 0.33 ) }
    dend_59 { pt3dadd( 127.22, 38.5013, 21.1577, 0.67 ) }
    dend_59 { pt3dadd( 129.128, 38.0762, 21.4698, 0.33 ) }
    dend_59 { pt3dadd( 131.726, 37.1948, 21.9361, 0.67 ) }
    dend_59 { pt3dadd( 133.494, 36.384, 22.2828, 0.67 ) }
    dend_59 { pt3dadd( 136.433, 34.6912, 22.9082, 0.67 ) }
    dend_59 { pt3dadd( 137.931, 33.7017, 23.2746, 0.33 ) }
    dend_59 { pt3dadd( 138.751, 33.1335, 23.495, 0.67 ) }
    dend_59 { pt3dadd( 139.855, 32.377, 23.8101, 0.33 ) }
    dend_59 { pt3dadd( 140.958, 31.6962, 24.1313, 0.67 ) }
    dend_59 { pt3dadd( 142.74, 30.8055, 24.6305, 0.33 ) }
    dend_59 { pt3dadd( 143.939, 30.4209, 25.0196, 0.67 ) }
    dend_59 { pt3dadd( 146.649, 29.6624, 25.9109, 0.33 ) }
    dend_59 { pt3dadd( 147.887, 29.3499, 26.3255, 0.67 ) }
    dend_59 { pt3dadd( 149.73, 28.9515, 26.9538, 0.33 ) }
    dend_59 { pt3dadd( 152.167, 28.4878, 27.8064, 0.67 ) }
    dend_59 { pt3dadd( 157.618, 27.6403, 29.7517, 0.67 ) }
    dend_59 { pt3dadd( 166.518, 25.1399, 32.9165, 0.67 ) }
    dend_59 { pt3dadd( 175.622, 22.5169, 35.3113, 0.67 ) }
    dend_59 { pt3dadd( 185.052, 20.1575, 36.3573, 0.67 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 91/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 9.09982, -112.661, 0.512947, 0.67 ) }
    dend_55 { pt3dadd( 9.82784, -113.749, -0.0196915, 0.67 ) }
    dend_55 { pt3dadd( 10.7766, -115.465, -0.658516, 0.67 ) }
    dend_55 { pt3dadd( 11.8324, -117.651, -1.28853, 0.67 ) }
    dend_55 { pt3dadd( 13.3665, -120.825, -2.19221, 0.67 ) }
    dend_55 { pt3dadd( 15.2114, -124.661, -3.25213, 0.67 ) }
    dend_55 { pt3dadd( 16.1038, -126.626, -3.76422, 0.67 ) }
    dend_55 { pt3dadd( 17.8509, -130.88, -4.68762, 0.67 ) }
    dend_55 { pt3dadd( 18.4755, -132.749, -5.00374, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_55 { pt3dadd( 19.205, -135.04, -5.38848, 0.33 ) }
    dend_55 { pt3dadd( 19.6035, -136.258, -5.56121, 0.67 ) }
    dend_55 { pt3dadd( 20.0683, -137.703, -5.80082, 0.67 ) }
    dend_55 { pt3dadd( 21.796, -142.919, -6.7993, 0.67 ) }
    dend_55 { pt3dadd( 23.1059, -147.329, -7.66079, 0.67 ) }
    dend_55 { pt3dadd( 24.1762, -150.916, -8.29854, 0.33 ) }
    dend_55 { pt3dadd( 24.612, -152.543, -8.52486, 1.33 ) }
    dend_55 { pt3dadd( 24.8765, -153.546, -8.64876, 0.33 ) }
    dend_55 { pt3dadd( 25.3459, -155.166, -8.78129, 0.33 ) }
    dend_55 { pt3dadd( 26.0516, -157.79, -9.0054, 0.67 ) }
    dend_55 { pt3dadd( 26.7403, -160.381, -9.18892, 0.67 ) }
    dend_55 { pt3dadd( 27.3413, -162.917, -9.31954, 0.67 ) }
    dend_55 { pt3dadd( 28.2159, -166.197, -9.56618, 0.67 ) }
    dend_55 { pt3dadd( 28.9006, -168.699, -9.82953, 0.67 ) }
    dend_55 { pt3dadd( 30.1385, -172.689, -10.3461, 0.67 ) }
    dend_55 { pt3dadd( 30.5692, -173.834, -10.5336, 0.33 ) }
    dend_55 { pt3dadd( 31.0482, -174.912, -10.7457, 0.33 ) }
    dend_55 { pt3dadd( 31.7934, -176.171, -11.0128, 0.67 ) }
    dend_55 { pt3dadd( 34.7699, -180.417, -11.9481, 0.67 ) }
    dend_55 { pt3dadd( 35.9459, -181.841, -12.2774, 0.67 ) }
    dend_55 { pt3dadd( 37.9626, -183.965, -12.6537, 0.67 ) }
    dend_55 { pt3dadd( 39.585, -185.525, -12.9081, 0.67 ) }
    dend_55 { pt3dadd( 41.05, -186.968, -13.1643, 0.67 ) }
    dend_55 { pt3dadd( 41.8784, -187.833, -13.3247, 0.33 ) }
    dend_55 { pt3dadd( 44.1593, -190.182, -13.7063, 0.67 ) }
    dend_55 { pt3dadd( 45.5231, -191.777, -13.9715, 0.67 ) }
    dend_55 { pt3dadd( 46.8595, -193.57, -14.2429, 0.33 ) }
    dend_55 { pt3dadd( 49.2255, -196.964, -14.469, 0.67 ) }
    dend_55 { pt3dadd( 50.4031, -198.736, -14.4997, 0.33 ) }
    dend_55 { pt3dadd( 51.0299, -199.606, -14.4218, 0.67 ) }
    dend_55 { pt3dadd( 52.6325, -201.609, -14.0074, 0.33 ) }
    dend_55 { pt3dadd( 53.6183, -202.629, -13.6137, 1.33 ) }
    dend_55 { pt3dadd( 55.7638, -204.562, -12.704, 0.33 ) }
    dend_55 { pt3dadd( 57.1822, -205.598, -12.0193, 0.33 ) }
    dend_55 { pt3dadd( 59.7479, -207.324, -10.7687, 0.33 ) }
    dend_55 { pt3dadd( 61.3607, -208.396, -9.96245, 0.67 ) }
    dend_55 { pt3dadd( 63.8619, -210.03, -8.5319, 0.33 ) }
    dend_55 { pt3dadd( 65.6244, -211.102, -7.56435, 0.67 ) }
    dend_55 { pt3dadd( 68.1871, -212.49, -6.39829, 0.33 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 39/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 9.09982, -112.661, 0.512947, 0.67 ) }
    dend_52 { pt3dadd( 8.53752, -115.552, 0.0105924, 0.67 ) }
    dend_52 { pt3dadd( 7.99641, -118.078, -0.092769, 0.67 ) }
    dend_52 { pt3dadd( 7.03158, -123.321, 0.112771, 0.67 ) }
    dend_52 { pt3dadd( 6.61783, -126.704, 0.165248, 0.67 ) }
    dend_52 { pt3dadd( 6.37721, -129.295, -0.0174547, 0.67 ) }
    dend_52 { pt3dadd( 6.3207, -131.361, -0.207893, 0.67 ) }
    dend_52 { pt3dadd( 6.51635, -134.768, -0.52685, 0.67 ) }
    dend_52 { pt3dadd( 7.02133, -137.874, -0.770107, 0.67 ) }
    dend_52 { pt3dadd( 7.61311, -140.957, -0.88767, 0.67 ) }
    dend_52 { pt3dadd( 8.14358, -144.627, -1.25869, 0.67 ) }
    dend_52 { pt3dadd( 8.48663, -148.024, -1.62761, 0.67 ) }
    dend_52 { pt3dadd( 8.62141, -150.995, -1.97653, 0.67 ) }
    dend_52 { pt3dadd( 8.60365, -153.567, -2.29231, 0.67 ) }
    dend_52 { pt3dadd( 8.38394, -157.75, -2.6525, 0.67 ) }
    dend_52 { pt3dadd( 8.11656, -161.605, -2.8361, 0.67 ) }
    dend_52 { pt3dadd( 7.73919, -166.622, -3.01449, 0.67 ) }
    dend_52 { pt3dadd( 7.45613, -169.734, -3.20143, 0.33 ) }
    dend_52 { pt3dadd( 7.24989, -173.44, -3.273, 0.67 ) }
    dend_52 { pt3dadd( 7.23066, -174.184, -3.25679, 0.33 ) }
    dend_52 { pt3dadd( 7.30138, -176.167, -3.08055, 0.67 ) }
    dend_52 { pt3dadd( 7.4138, -177.847, -2.84554, 0.33 ) }
    dend_52 { pt3dadd( 7.65812, -181.468, -2.17659, 0.67 ) }
    dend_52 { pt3dadd( 7.87569, -184.787, -1.45133, 0.67 ) }
    dend_52 { pt3dadd( 7.98154, -191.036, -0.0102921, 0.67 ) }
    dend_52 { pt3dadd( 7.94572, -193.553, 0.577281, 0.33 ) }
    dend_52 { pt3dadd( 7.76327, -196.976, 1.43703, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_32 (entry count 66/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.52293, -22.46, -2.66012, 0.67 ) }
    dend_44 { pt3dadd( -4.70647, -23.3038, -3.20653, 0.67 ) }
    dend_44 { pt3dadd( -7.61485, -24.1537, -3.97822, 0.67 ) }
    dend_44 { pt3dadd( -9.11929, -24.6498, -4.4605, 0.67 ) }
    dend_44 { pt3dadd( -13.2135, -26.0978, -5.95841, 0.67 ) }
    dend_44 { pt3dadd( -19.242, -28.1384, -8.56744, 0.67 ) }
    dend_44 { pt3dadd( -21.4994, -28.9347, -9.58098, 0.67 ) }
    dend_44 { pt3dadd( -23.6679, -29.7201, -10.6297, 0.67 ) }
    dend_44 { pt3dadd( -25.3348, -30.3306, -11.4615, 0.67 ) }
    dend_44 { pt3dadd( -27.2989, -31.0137, -12.5224, 0.67 ) }
    dend_44 { pt3dadd( -30.898, -32.237, -14.676, 0.67 ) }
    dend_44 { pt3dadd( -33.4544, -32.9265, -15.9153, 0.67 ) }
    dend_44 { pt3dadd( -35.9925, -33.5012, -17.1053, 0.67 ) }
    dend_44 { pt3dadd( -37.5519, -33.8232, -17.752, 0.33 ) }
    dend_44 { pt3dadd( -38.9615, -34.0676, -18.3085, 0.33 ) }
    dend_44 { pt3dadd( -40.6973, -34.3606, -18.9361, 0.33 ) }
    dend_44 { pt3dadd( -44.3544, -35.0584, -20.1265, 0.67 ) }
    dend_44 { pt3dadd( -46.9199, -35.3838, -21.3054, 0.33 ) }
    dend_44 { pt3dadd( -54.6141, -37.2286, -26.0495, 0.33 ) }
    dend_44 { pt3dadd( -61.9369, -39.6736, -31.0888, 0.33 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 86/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.52293, -22.46, -2.66012, 1.33 ) }
    dend_33 { pt3dadd( -2.01726, -26.1897, -1.6655, 1.33 ) }
    dend_33 { pt3dadd( -2.15616, -29.2186, -1.09119, 1.33 ) }
    dend_33 { pt3dadd( -2.22779, -34.0118, -0.383328, 1.33 ) }
    dend_33 { pt3dadd( -2.29208, -38.314, 0.252032, 1.33 ) }
    dend_33 { pt3dadd( -2.36984, -43.5178, 1.02053, 1.33 ) }
    dend_33 { pt3dadd( -2.43725, -48.0293, 1.68678, 1.33 ) }
    dend_33 { pt3dadd( -2.58424, -54.5906, 2.28235, 1.33 ) }
    dend_33 { pt3dadd( -2.54069, -57.8713, 2.49218, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 95/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -25.9743, 30.4116, -23.4839, 0.67 ) }
    dend_29 { pt3dadd( -27.0697, 30.281, -24.8696, 0.67 ) }
    dend_29 { pt3dadd( -28.9177, 30.0259, -27.3896, 0.67 ) }
    dend_29 { pt3dadd( -29.7251, 29.9271, -28.4742, 0.67 ) }
    dend_29 { pt3dadd( -31.4204, 29.7497, -30.6198, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_29 { pt3dadd( -32.5662, 29.6457, -32.0996, 0.67 ) }
    dend_29 { pt3dadd( -35.316, 29.3961, -35.6509, 0.67 ) }
    dend_29 { pt3dadd( -37.062, 29.2762, -37.9083, 0.33 ) }
    dend_29 { pt3dadd( -37.6076, 29.2608, -38.5519, 0.67 ) }
    dend_29 { pt3dadd( -38.4323, 29.2474, -39.5999, 0.33 ) }
    dend_29 { pt3dadd( -39.9031, 29.2476, -41.5117, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -25.9743, 30.4116, -23.4839, 0.67 ) }
    dend_24 { pt3dadd( -27.1984, 31.8773, -23.6835, 0.67 ) }
    dend_24 { pt3dadd( -28.7917, 33.7519, -23.9484, 0.67 ) }
    dend_24 { pt3dadd( -30.2066, 35.4258, -24.2517, 0.67 ) }
    dend_24 { pt3dadd( -31.762, 37.3794, -24.7254, 0.67 ) }
    dend_24 { pt3dadd( -33.9045, 40.0704, -25.3781, 0.67 ) }
    dend_24 { pt3dadd( -35.7804, 42.4264, -25.9495, 0.67 ) }
    dend_24 { pt3dadd( -37.3177, 44.3553, -26.5114, 0.67 ) }
    dend_24 { pt3dadd( -38.6452, 46.167, -27.0998, 0.67 ) }
    dend_24 { pt3dadd( -40.2189, 48.4427, -27.9319, 2.0 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 16/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 50.8976, 226.573, -65.5174, 0.33 ) }
    dend_21 { pt3dadd( 50.0633, 227.361, -65.7619, 0.33 ) }
    dend_21 { pt3dadd( 49.8221, 227.589, -65.8326, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 19/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 50.8976, 226.573, -65.5174, 0.33 ) }
    dend_20 { pt3dadd( 51.6138, 227.559, -68.4481, 0.33 ) }
    dend_20 { pt3dadd( 51.9822, 228.067, -69.9557, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -4.66917, 141.934, -8.14174, 0.67 ) }
    dend_18 { pt3dadd( -5.48418, 146.368, -11.4981, 0.67 ) }
    dend_18 { pt3dadd( -7.26169, 152.024, -15.9284, 0.67 ) }
    dend_18 { pt3dadd( -7.96637, 154.267, -17.6848, 0.67 ) }
    dend_18 { pt3dadd( -9.5591, 159.335, -21.6546, 0.67 ) }
    dend_18 { pt3dadd( -10.1491, 161.213, -23.1251, 0.33 ) }
    dend_18 { pt3dadd( -11.1325, 164.342, -25.5762, 0.33 ) }
    dend_18 { pt3dadd( -12.0511, 166.395, -27.6, 0.33 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 30/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.66917, 141.934, -8.14174, 0.67 ) }
    dend_11 { pt3dadd( -5.51449, 143.754, -10.6447, 0.67 ) }
    dend_11 { pt3dadd( -6.02028, 144.843, -12.1423, 0.67 ) }
    dend_11 { pt3dadd( -7.49211, 148.012, -16.5002, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 34/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 8.38155, 104.268, 27.5328, 0.67 ) }
    dend_8 { pt3dadd( 8.27213, 110.984, 28.7303, 0.67 ) }
    dend_8 { pt3dadd( 6.98428, 117.387, 30.7657, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 8.38155, 104.268, 27.5328, 0.67 ) }
    dend_7 { pt3dadd( 10.1621, 113.993, 31.0476, 0.67 ) }
    dend_7 { pt3dadd( 12.5924, 123.124, 35.6688, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 40/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -37.4682, 74.5385, 16.6423, 0.67 ) }
    dend_5 { pt3dadd( -39.5747, 80.5092, 16.091, 0.67 ) }
    dend_5 { pt3dadd( -40.5183, 82.9332, 16.0744, 0.67 ) }
    dend_5 { pt3dadd( -42.0036, 86.7173, 16.1657, 0.67 ) }
    dend_5 { pt3dadd( -43.5152, 90.5031, 16.3136, 0.67 ) }
    dend_5 { pt3dadd( -44.8831, 93.9827, 16.3834, 0.67 ) }
    dend_5 { pt3dadd( -47.0325, 99.5373, 16.4214, 0.67 ) }
    dend_5 { pt3dadd( -49.3626, 105.265, 16.5358, 0.67 ) }
    dend_5 { pt3dadd( -50.1121, 107.149, 16.5517, 0.67 ) }
    dend_5 { pt3dadd( -51.0303, 109.381, 16.5498, 0.67 ) }
    dend_5 { pt3dadd( -52.9327, 114.532, 16.3107, 0.67 ) }
    dend_5 { pt3dadd( -54.3175, 118.627, 15.942, 0.67 ) }
    dend_5 { pt3dadd( -55.1495, 121.799, 15.4985, 0.67 ) }
    dend_5 { pt3dadd( -55.9129, 125.003, 15.0063, 0.67 ) }
    dend_5 { pt3dadd( -56.349, 127.07, 14.6873, 0.67 ) }
    dend_5 { pt3dadd( -57.2053, 131.989, 13.9532, 0.67 ) }
    dend_5 { pt3dadd( -57.4256, 133.897, 13.6648, 0.67 ) }
    dend_5 { pt3dadd( -57.5667, 138.18, 12.9085, 0.67 ) }
    dend_5 { pt3dadd( -57.3576, 142.031, 12.187, 0.67 ) }
    dend_5 { pt3dadd( -57.1494, 144.779, 11.8382, 0.67 ) }
    dend_5 { pt3dadd( -57.0235, 146.469, 11.7472, 0.67 ) }
    dend_5 { pt3dadd( -56.7981, 149.679, 12.0063, 0.67 ) }
    dend_5 { pt3dadd( -56.6499, 152.058, 12.3521, 0.67 ) }
    dend_5 { pt3dadd( -56.4962, 155.398, 13.0302, 0.67 ) }
    dend_5 { pt3dadd( -56.4151, 159.915, 14.0618, 0.67 ) }
    dend_5 { pt3dadd( -56.4424, 162.458, 14.6272, 0.67 ) }
    dend_5 { pt3dadd( -56.4535, 166.512, 15.2909, 0.67 ) }
    dend_5 { pt3dadd( -56.5785, 169.145, 15.5656, 0.67 ) }
    dend_5 { pt3dadd( -56.7227, 171.169, 15.5362, 0.67 ) }
    dend_5 { pt3dadd( -56.8482, 173.28, 15.2416, 0.67 ) }
    dend_5 { pt3dadd( -56.9828, 177.539, 14.3203, 0.67 ) }
    dend_5 { pt3dadd( -57.0663, 181.619, 13.2538, 0.67 ) }
    dend_5 { pt3dadd( -57.2891, 186.457, 11.6795, 0.67 ) }
    dend_5 { pt3dadd( -57.4501, 190.27, 10.3468, 0.67 ) }
    dend_5 { pt3dadd( -57.6052, 193.087, 9.32749, 0.67 ) }
    dend_5 { pt3dadd( -60.4688, 202.441, 7.16918, 0.67 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 76/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -37.4682, 74.5385, 16.6423, 0.67 ) }
    dend_2 { pt3dadd( -38.4113, 78.2057, 15.9694, 0.67 ) }
    dend_2 { pt3dadd( -39.4514, 82.1068, 15.5489, 0.67 ) }
    dend_2 { pt3dadd( -40.3729, 84.7049, 15.5648, 0.67 ) }
    dend_2 { pt3dadd( -42.4998, 89.9972, 16.1677, 1.33 ) }
    dend_2 { pt3dadd( -43.7932, 93.0767, 16.7534, 0.67 ) }
    dend_2 { pt3dadd( -45.041, 95.7732, 17.4687, 1.33 ) }
    dend_2 { pt3dadd( -48.3062, 102.364, 19.9303, 0.67 ) }
    dend_2 { pt3dadd( -50.8453, 107.179, 22.5116, 0.67 ) }
    dend_2 { pt3dadd( -52.2439, 109.481, 24.239, 0.67 ) }
    dend_2 { pt3dadd( -53.9235, 111.808, 26.565, 0.67 ) }
    dend_2 { pt3dadd( -55.579, 113.989, 29.0969, 0.67 ) }
    dend_2 { pt3dadd( -56.9387, 115.707, 31.3565, 0.67 ) }
    dend_2 { pt3dadd( -58.9281, 118.092, 34.8247, 0.67 ) }
    dend_2 { pt3dadd( -60.4228, 120.358, 37.7269, 0.67 ) }
    dend_2 { pt3dadd( -61.0072, 121.197, 38.7529, 0.67 ) }
    dend_2 { pt3dadd( -68.4962, 131.331, 41.9533, 0.67 ) }
    dend_2 { pt3dadd( -74.2466, 141.749, 47.1729, 0.67 ) }
    dend_2 { pt3dadd( -79.9641, 152.449, 51.7901, 0.67 ) }
    dend_2 { pt3dadd( -88.6999, 161.391, 55.5216, 0.67 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 96/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 7.76327, -196.976, 1.43703, 0.67 ) }
    dend_54 { pt3dadd( 9.17222, -196.361, 4.07931, 0.67 ) }
    dend_54 { pt3dadd( 10.0859, -195.963, 5.79269, 0.67 ) }
    dend_54 { pt3dadd( 15.5292, -195.488, 15.4729, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_54 { pt3dadd( 19.5301, -196.581, 25.7901, 0.67 ) }
    dend_54 { pt3dadd( 23.6696, -198.172, 35.9861, 0.67 ) }
    dend_54 { pt3dadd( 27.3859, -197.601, 46.445, 0.67 ) }
    dend_54 { pt3dadd( 30.6598, -195.734, 56.8867, 0.67 ) }
    dend_54 { pt3dadd( 34.3387, -193.843, 67.1882, 0.67 ) }
    dend_54 { pt3dadd( 38.4571, -193.275, 77.4959, 0.67 ) }
    dend_54 { pt3dadd( 42.8373, -191.494, 87.5417, 0.67 ) }
    dend_54 { pt3dadd( 48.6994, -190.772, 96.9569, 0.67 ) }
    dend_54 { pt3dadd( 53.948, -192.128, 106.665, 0.67 ) }
    dend_54 { pt3dadd( 60.222, -195.239, 115.285, 0.67 ) }
    dend_54 { pt3dadd( 68.3574, -198.581, 122.057, 0.67 ) }
    dend_54 { pt3dadd( 76.7375, -203.517, 127.343, 0.67 ) }
    dend_54 { pt3dadd( 84.9163, -206.254, 134.343, 0.67 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 13/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 7.76327, -196.976, 1.43703, 0.33 ) }
    dend_53 { pt3dadd( 7.69567, -199.744, 0.0737484, 0.33 ) }
    dend_53 { pt3dadd( 7.61297, -202.615, -1.27089, 0.67 ) }
    dend_53 { pt3dadd( 7.48804, -204.865, -2.24369, 0.33 ) }
    dend_53 { pt3dadd( 6.9313, -209.881, -4.28927, 0.67 ) }
    dend_53 { pt3dadd( 6.76189, -211.236, -4.79914, 0.67 ) }
    dend_53 { pt3dadd( 6.45944, -213.323, -5.53222, 0.67 ) }
    dend_53 { pt3dadd( 6.17166, -214.716, -5.95806, 0.33 ) }
    dend_53 { pt3dadd( 5.44662, -217.417, -6.70396, 0.67 ) }
    dend_53 { pt3dadd( 4.69327, -219.729, -7.14293, 0.33 ) }
    dend_53 { pt3dadd( 4.02638, -221.655, -7.33596, 0.67 ) }
    dend_53 { pt3dadd( 3.38594, -223.418, -7.50211, 0.33 ) }
    dend_53 { pt3dadd( 3.12388, -224.16, -7.56166, 0.67 ) }
    dend_53 { pt3dadd( 2.41479, -225.892, -7.68862, 0.33 ) }
    dend_53 { pt3dadd( 1.84523, -227.35, -7.73701, 0.67 ) }
    dend_53 { pt3dadd( -0.0351156, -237.503, -9.53177, 0.67 ) }
    dend_53 { pt3dadd( -1.47329, -247.702, -11.4542, 0.67 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 30/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -61.9369, -39.6736, -31.0888, 0.67 ) }
    dend_48 { pt3dadd( -69.9037, -41.9769, -34.56, 0.67 ) }
    dend_48 { pt3dadd( -78.0058, -45.3529, -36.4271, 0.67 ) }
    dend_48 { pt3dadd( -85.7511, -49.5807, -37.9558, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 34/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -61.9369, -39.6736, -31.0888, 0.67 ) }
    dend_45 { pt3dadd( -69.7521, -41.8495, -34.4312, 0.67 ) }
    dend_45 { pt3dadd( -77.3038, -43.134, -38.7311, 0.67 ) }
    dend_45 { pt3dadd( -84.4778, -44.5576, -43.596, 0.67 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 38/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -2.54069, -57.8713, 2.49218, 0.67 ) }
    dend_41 { pt3dadd( -1.47814, -67.6789, 5.70226, 0.67 ) }
    dend_41 { pt3dadd( -0.728966, -73.1152, 6.86142, 0.67 ) }
    dend_41 { pt3dadd( -0.449232, -75.4034, 7.18191, 0.67 ) }
    dend_41 { pt3dadd( 0.0783354, -78.6738, 7.50978, 0.67 ) }
    dend_41 { pt3dadd( 1.48198, -85.9026, 8.08945, 0.67 ) }
    dend_41 { pt3dadd( 2.54341, -90.1821, 8.44182, 0.67 ) }
    dend_41 { pt3dadd( 5.03162, -96.2292, 8.6964, 0.67 ) }
    dend_41 { pt3dadd( 6.41123, -98.8402, 8.8215, 0.67 ) }
    dend_41 { pt3dadd( 8.55971, -103.005, 8.59942, 0.67 ) }
    dend_41 { pt3dadd( 9.41657, -104.737, 8.33004, 0.67 ) }
    dend_41 { pt3dadd( 10.7936, -107.681, 7.74577, 0.67 ) }
    dend_41 { pt3dadd( 12.0864, -110.921, 7.23617, 0.67 ) }
    dend_41 { pt3dadd( 14.6626, -117.562, 6.6125, 0.67 ) }
    dend_41 { pt3dadd( 16.6954, -122.994, 6.00464, 0.67 ) }
    dend_41 { pt3dadd( 17.966, -127.17, 5.43727, 0.67 ) }
    dend_41 { pt3dadd( 18.8153, -130.621, 4.9237, 0.67 ) }
    dend_41 { pt3dadd( 19.0845, -132.317, 4.65417, 0.67 ) }
    dend_41 { pt3dadd( 19.2846, -135.091, 4.30644, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 57/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -2.54069, -57.8713, 2.49218, 0.67 ) }
    dend_34 { pt3dadd( -4.15298, -62.1749, 0.83329, 0.67 ) }
    dend_34 { pt3dadd( -6.38352, -69.2245, -1.66988, 0.67 ) }
    dend_34 { pt3dadd( -9.43017, -78.5744, -4.89078, 0.67 ) }
    dend_34 { pt3dadd( -10.9086, -82.8584, -6.3461, 0.67 ) }
    dend_34 { pt3dadd( -11.2534, -83.8471, -6.66344, 0.67 ) }
    dend_34 { pt3dadd( -12.4217, -87.3662, -7.70112, 0.67 ) }
    dend_34 { pt3dadd( -13.4283, -91.3449, -8.64757, 0.67 ) }
    dend_34 { pt3dadd( -14.45, -95.4005, -9.24057, 0.67 ) }
    dend_34 { pt3dadd( -14.9718, -97.1336, -9.26707, 0.67 ) }
    dend_34 { pt3dadd( -16.0597, -100.576, -9.21969, 0.67 ) }
    dend_34 { pt3dadd( -16.9593, -103.347, -9.12585, 0.67 ) }
    dend_34 { pt3dadd( -19.3157, -110.229, -8.76136, 0.67 ) }
    dend_34 { pt3dadd( -20.9529, -114.632, -8.43191, 0.67 ) }
    dend_34 { pt3dadd( -22.6393, -118.488, -8.12399, 0.67 ) }
    dend_34 { pt3dadd( -23.1466, -119.443, -8.06539, 0.67 ) }
    dend_34 { pt3dadd( -25.2025, -122.706, -8.05183, 0.67 ) }
    dend_34 { pt3dadd( -26.0114, -123.978, -8.05114, 0.67 ) }
    dend_34 { pt3dadd( -28.5586, -128.344, -8.06501, 0.67 ) }
    dend_34 { pt3dadd( -32.0193, -134.621, -8.22163, 0.67 ) }
    dend_34 { pt3dadd( -34.0099, -138.246, -8.31612, 0.67 ) }
    dend_34 { pt3dadd( -35.7566, -141.383, -8.38381, 0.67 ) }
    dend_34 { pt3dadd( -38.8762, -146.916, -8.49789, 0.67 ) }
    dend_34 { pt3dadd( -42.5646, -153.936, -8.56384, 0.67 ) }
    dend_34 { pt3dadd( -44.4408, -158.118, -8.51797, 0.67 ) }
    dend_34 { pt3dadd( -45.1183, -159.801, -8.49516, 0.67 ) }
    dend_34 { pt3dadd( -46.3329, -162.565, -8.4212, 0.67 ) }
    dend_34 { pt3dadd( -47.2298, -164.302, -8.34294, 0.67 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -40.2189, 48.4427, -27.9319, 0.33 ) }
    dend_26 { pt3dadd( -42.4309, 51.7509, -28.1627, 0.33 ) }
    dend_26 { pt3dadd( -43.8503, 53.7449, -28.6854, 0.67 ) }
    dend_26 { pt3dadd( -44.7336, 54.9893, -29.0916, 0.67 ) }
    dend_26 { pt3dadd( -45.7114, 56.3875, -29.5639, 0.33 ) }
    dend_26 { pt3dadd( -46.5444, 57.6531, -29.9553, 0.67 ) }
    dend_26 { pt3dadd( -48.1404, 60.0318, -30.7315, 0.33 ) }
    dend_26 { pt3dadd( -49.9717, 62.8716, -31.7938, 0.67 ) }
    dend_26 { pt3dadd( -51.5705, 65.2849, -32.6366, 0.33 ) }
    dend_26 { pt3dadd( -52.219, 66.2966, -33.0147, 0.67 ) }
    dend_26 { pt3dadd( -53.3747, 68.1382, -33.7421, 0.33 ) }
    dend_26 { pt3dadd( -55.0277, 70.9046, -34.8456, 0.33 ) }
    dend_26 { pt3dadd( -55.8764, 72.3737, -35.4069, 0.33 ) }
    dend_26 { pt3dadd( -56.5838, 73.6243, -35.7671, 1.33 ) }
    dend_26 { pt3dadd( -58.1569, 76.2872, -36.7672, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 0/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -40.2189, 48.4427, -27.9319, 0.33 ) }
    dend_25 { pt3dadd( -40.0189, 52.172, -26.744, 0.33 ) }
    dend_25 { pt3dadd( -39.9855, 53.0775, -26.5184, 0.33 ) }
    dend_25 { pt3dadd( -39.8421, 55.8312, -26.0356, 0.67 ) }
    dend_25 { pt3dadd( -39.6278, 59.406, -25.5489, 0.33 ) }
    dend_25 { pt3dadd( -39.566, 60.2122, -25.4597, 0.67 ) }
    dend_25 { pt3dadd( -39.3398, 62.6766, -25.2534, 0.33 ) }
    dend_25 { pt3dadd( -39.2125, 64.486, -25.2759, 0.67 ) }
    dend_25 { pt3dadd( -38.9817, 67.3582, -25.4794, 0.33 ) }
    dend_25 { pt3dadd( -38.9272, 68.1285, -25.5897, 0.67 ) }
    dend_25 { pt3dadd( -38.9179, 69.2575, -25.7885, 0.33 ) }
    dend_25 { pt3dadd( -38.9472, 70.2058, -25.9465, 0.67 ) }
    dend_25 { pt3dadd( -39.2366, 74.0405, -26.5024, 0.33 ) }
    dend_25 { pt3dadd( -39.4238, 75.6051, -26.7091, 0.33 ) }
    dend_25 { pt3dadd( -39.6605, 77.0766, -26.8779, 0.67 ) }
    dend_25 { pt3dadd( -40.6062, 81.6684, -27.2142, 0.67 ) }
    dend_25 { pt3dadd( -41.042, 83.389, -27.3622, 0.33 ) }
    dend_25 { pt3dadd( -41.4026, 84.7347, -27.4437, 0.67 ) }
    dend_25 { pt3dadd( -41.9608, 86.7739, -27.5227, 0.33 ) }
    dend_25 { pt3dadd( -42.1084, 87.3267, -27.5507, 0.67 ) }
    dend_25 { pt3dadd( -42.6939, 89.7869, -27.6497, 0.33 ) }
    dend_25 { pt3dadd( -43.2901, 92.702, -27.6793, 0.67 ) }
    dend_25 { pt3dadd( -43.6305, 95.8219, -27.6112, 0.67 ) }
    dend_25 { pt3dadd( -43.7035, 97.4355, -27.4819, 0.33 ) }
    dend_25 { pt3dadd( -43.662, 98.8867, -27.3217, 0.33 ) }
    dend_25 { pt3dadd( -43.3935, 101.868, -26.9573, 0.67 ) }
    dend_25 { pt3dadd( -43.1233, 103.95, -26.6366, 0.33 ) }
    dend_25 { pt3dadd( -42.7753, 106.279, -26.1541, 0.67 ) }
    dend_25 { pt3dadd( -42.3197, 109.346, -25.7105, 0.67 ) }
    dend_25 { pt3dadd( -41.9919, 111.556, -25.4734, 0.33 ) }
    dend_25 { pt3dadd( -41.7476, 113.164, -25.3695, 0.67 ) }
    dend_25 { pt3dadd( -41.5896, 114.941, -25.4162, 0.33 ) }
    dend_25 { pt3dadd( -41.5561, 116.323, -25.5524, 0.33 ) }
    dend_25 { pt3dadd( -41.6436, 119.562, -26.0456, 0.33 ) }
    dend_25 { pt3dadd( -41.6649, 120.312, -26.2135, 0.67 ) }
    dend_25 { pt3dadd( -41.8048, 121.572, -26.4512, 0.33 ) }
    dend_25 { pt3dadd( -42.1987, 124.144, -26.8791, 0.67 ) }
    dend_25 { pt3dadd( -42.646, 126.392, -27.2187, 0.33 ) }
    dend_25 { pt3dadd( -43.2012, 128.647, -27.4485, 0.33 ) }
    dend_25 { pt3dadd( -43.5292, 129.842, -27.4937, 0.67 ) }
    dend_25 { pt3dadd( -44.755, 133.922, -27.5984, 0.33 ) }
    dend_25 { pt3dadd( -44.8692, 134.273, -27.6021, 0.67 ) }
    dend_25 { pt3dadd( -45.3126, 135.667, -27.5852, 0.33 ) }
    dend_25 { pt3dadd( -45.6869, 136.927, -27.6248, 0.67 ) }
    dend_25 { pt3dadd( -46.1691, 138.737, -27.7182, 0.33 ) }
    dend_25 { pt3dadd( -46.3992, 139.858, -27.7894, 0.33 ) }
    dend_25 { pt3dadd( -46.4335, 140.118, -27.816, 0.67 ) }
    dend_25 { pt3dadd( -46.6457, 141.964, -28.0658, 0.33 ) }
    dend_25 { pt3dadd( -46.9834, 144.967, -28.6524, 0.67 ) }
    dend_25 { pt3dadd( -47.1671, 146.552, -28.9803, 0.33 ) }
    dend_25 { pt3dadd( -47.275, 147.58, -29.2257, 0.67 ) }
    dend_25 { pt3dadd( -47.5696, 149.934, -29.8207, 0.33 ) }
    dend_25 { pt3dadd( -47.7381, 151.035, -30.107, 0.67 ) }
    dend_25 { pt3dadd( -48.0753, 153.131, -30.6534, 0.33 ) }
    dend_25 { pt3dadd( -48.3982, 154.78, -31.0436, 0.67 ) }
    dend_25 { pt3dadd( -48.8177, 156.683, -31.448, 0.33 ) }
    dend_25 { pt3dadd( -49.0916, 158.029, -31.7018, 0.33 ) }
    dend_25 { pt3dadd( -49.2005, 158.582, -31.7844, 0.67 ) }
    dend_25 { pt3dadd( -49.5597, 160.419, -31.955, 0.33 ) }
    dend_25 { pt3dadd( -49.7502, 161.491, -31.9682, 0.33 ) }
    dend_25 { pt3dadd( -49.8917, 161.992, -31.9394, 0.67 ) }
    dend_25 { pt3dadd( -50.7142, 164.192, -31.6287, 0.33 ) }
    dend_25 { pt3dadd( -51.0643, 165.042, -31.4936, 0.33 ) }
    dend_25 { pt3dadd( -51.4178, 165.765, -31.3458, 0.67 ) }
    dend_25 { pt3dadd( -53.2439, 169.084, -30.5527, 0.33 ) }
    dend_25 { pt3dadd( -54.9045, 172.001, -29.8318, 0.33 ) }
    dend_25 { pt3dadd( -56.0557, 174.03, -29.3297, 0.67 ) }
    dend_25 { pt3dadd( -57.4049, 176.346, -28.9671, 0.33 ) }
    dend_25 { pt3dadd( -58.2819, 177.82, -28.8786, 0.33 ) }
    dend_25 { pt3dadd( -58.5473, 178.262, -28.8743, 0.67 ) }
    dend_25 { pt3dadd( -59.5677, 179.975, -29.0563, 0.33 ) }
    dend_25 { pt3dadd( -60.3501, 181.591, -29.4162, 0.33 ) }
    dend_25 { pt3dadd( -62.2926, 185.707, -30.7527, 0.33 ) }
    dend_25 { pt3dadd( -62.8313, 186.802, -31.2619, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -7.49211, 148.012, -16.5002, 0.67 ) }
    dend_13 { pt3dadd( -6.31629, 151.391, -15.2443, 0.67 ) }
    dend_13 { pt3dadd( -5.30679, 154.291, -14.166, 0.67 ) }
    dend_13 { pt3dadd( -3.91595, 158.287, -12.6803, 0.67 ) }
    dend_13 { pt3dadd( -2.88499, 161.249, -11.5791, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -7.49211, 148.012, -16.5002, 0.67 ) }
    dend_12 { pt3dadd( -9.06282, 153.138, -20.4196, 0.67 ) }
    dend_12 { pt3dadd( -9.53201, 154.478, -21.5462, 0.67 ) }
    dend_12 { pt3dadd( -10.5408, 157.047, -23.8275, 0.67 ) }
    dend_12 { pt3dadd( -11.5766, 159.31, -26.0049, 0.67 ) }
    dend_12 { pt3dadd( -13.5983, 163.727, -30.1666, 0.67 ) }
    dend_12 { pt3dadd( -14.7773, 166.197, -32.3166, 0.67 ) }
    dend_12 { pt3dadd( -15.2836, 167.104, -33.0531, 0.33 ) }
    dend_12 { pt3dadd( -15.6106, 167.733, -33.4623, 0.67 ) }
    dend_12 { pt3dadd( -16.8314, 170.349, -34.8421, 0.67 ) }
    dend_12 { pt3dadd( -18.0966, 173.053, -36.1225, 0.67 ) }
    dend_12 { pt3dadd( -20.1255, 177.154, -38.1201, 0.67 ) }
    dend_12 { pt3dadd( -22.3299, 181.693, -40.2886, 0.67 ) }
    dend_12 { pt3dadd( -23.1332, 183.401, -41.1404, 0.67 ) }
    dend_12 { pt3dadd( -25.3737, 188.093, -43.5752, 0.67 ) }
    dend_12 { pt3dadd( -26.4694, 190.294, -44.7768, 0.67 ) }
    dend_12 { pt3dadd( -28.4164, 193.784, -47.0549, 0.67 ) }
    dend_12 { pt3dadd( -29.2589, 195.25, -48.1687, 0.33 ) }
    dend_12 { pt3dadd( -29.6942, 195.9, -48.7093, 0.67 ) }
    dend_12 { pt3dadd( -30.8162, 197.192, -49.8024, 0.33 ) }
    dend_12 { pt3dadd( -31.0895, 197.438, -49.9744, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -32.7875, 198.805, -50.5035, 0.33 ) }
    dend_12 { pt3dadd( -33.8146, 199.609, -50.5235, 0.67 ) }
    dend_12 { pt3dadd( -36.2076, 201.321, -50.2156, 0.33 ) }
    dend_12 { pt3dadd( -37.9515, 202.611, -49.9495, 0.33 ) }
    dend_12 { pt3dadd( -39.4635, 203.822, -49.6901, 0.67 ) }
    dend_12 { pt3dadd( -42.557, 206.368, -49.2114, 0.33 ) }
    dend_12 { pt3dadd( -44.1636, 207.715, -48.9704, 0.33 ) }
    dend_12 { pt3dadd( -46.3291, 209.745, -48.6524, 0.33 ) }
    dend_12 { pt3dadd( -48.476, 212.234, -48.3862, 0.67 ) }
    dend_12 { pt3dadd( -49.7135, 213.834, -48.2977, 0.33 ) }
    dend_12 { pt3dadd( -51.2113, 215.777, -48.4425, 0.67 ) }
    dend_12 { pt3dadd( -51.9165, 216.69, -48.5212, 0.67 ) }
    dend_12 { pt3dadd( -53.8082, 219.082, -48.5319, 0.67 ) }
    dend_12 { pt3dadd( -54.7835, 220.428, -48.4301, 0.33 ) }
    dend_12 { pt3dadd( -56.0735, 221.995, -48.062, 0.33 ) }
    dend_12 { pt3dadd( -57.2174, 223.363, -47.8858, 0.67 ) }
    dend_12 { pt3dadd( -60.3133, 227.186, -48.0879, 0.67 ) }
    dend_12 { pt3dadd( -61.386, 228.463, -48.2283, 0.67 ) }
    dend_12 { pt3dadd( -62.5042, 229.706, -48.5225, 0.33 ) }
    dend_12 { pt3dadd( -65.0343, 232.473, -49.3457, 0.33 ) }
    dend_12 { pt3dadd( -69.5285, 237.804, -51.4516, 0.67 ) }
    dend_12 { pt3dadd( -71.2586, 239.798, -52.9677, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 22/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -88.6999, 161.391, 55.5216, 0.67 ) }
    dend_4 { pt3dadd( -92.5867, 167.808, 58.6256, 0.67 ) }
    dend_4 { pt3dadd( -96.3276, 173.922, 62.4817, 0.67 ) }
    dend_4 { pt3dadd( -98.3034, 180.899, 66.1516, 0.67 ) }
    dend_4 { pt3dadd( -99.2126, 188.526, 68.7354, 0.67 ) }
    dend_4 { pt3dadd( -100.273, 195.872, 72.0303, 0.67 ) }
    dend_4 { pt3dadd( -100.513, 203.109, 75.7442, 0.67 ) }
    dend_4 { pt3dadd( -101.947, 210.323, 79.1905, 0.67 ) }
    dend_4 { pt3dadd( -103.529, 216.646, 84.1055, 0.67 ) }
    dend_4 { pt3dadd( -103.873, 222.952, 89.3003, 0.67 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -88.6999, 161.391, 55.5216, 0.67 ) }
    dend_3 { pt3dadd( -90.9615, 166.268, 57.8832, 0.67 ) }
    dend_3 { pt3dadd( -94.0986, 170.043, 61.1816, 0.67 ) }
    dend_3 { pt3dadd( -96.4205, 173.137, 65.6807, 0.67 ) }
    dend_3 { pt3dadd( -99.6302, 176.983, 68.8206, 0.67 ) }
    dend_3 { pt3dadd( -102.116, 181.554, 71.5674, 0.67 ) }
    dend_3 { pt3dadd( -104.361, 186.111, 74.5392, 0.67 ) }
    dend_3 { pt3dadd( -106.462, 190.813, 77.3741, 0.67 ) }
    dend_3 { pt3dadd( -109.167, 195.048, 80.4614, 0.67 ) }
    dend_3 { pt3dadd( -110.646, 199.292, 84.2791, 0.67 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 42/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -85.7511, -49.5807, -37.9558, 0.67 ) }
    dend_50 { pt3dadd( -93.4465, -51.0798, -33.2268, 0.67 ) }
    dend_50 { pt3dadd( -100.498, -53.3166, -27.8351, 0.67 ) }
    dend_50 { pt3dadd( -108.147, -56.14, -23.6877, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 46/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -85.7511, -49.5807, -37.9558, 0.67 ) }
    dend_49 { pt3dadd( -92.292, -53.4032, -43.0056, 0.67 ) }
    dend_49 { pt3dadd( -98.3648, -57.6804, -48.2494, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 49/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -84.4778, -44.5576, -43.596, 0.67 ) }
    dend_47 { pt3dadd( -90.3971, -45.8538, -46.1429, 0.67 ) }
    dend_47 { pt3dadd( -96.4801, -46.7488, -48.4767, 0.67 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 52/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -84.4778, -44.5576, -43.596, 0.67 ) }
    dend_46 { pt3dadd( -93.0017, -46.714, -49.5098, 0.67 ) }
    dend_46 { pt3dadd( -101.88, -47.8228, -55.1991, 0.67 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 55/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 19.2846, -135.091, 4.30644, 0.67 ) }
    dend_43 { pt3dadd( 21.2299, -138.22, 4.01311, 0.67 ) }
    dend_43 { pt3dadd( 22.2285, -139.653, 3.78521, 0.67 ) }
    dend_43 { pt3dadd( 23.8226, -142.051, 3.37221, 0.33 ) }
    dend_43 { pt3dadd( 24.6619, -143.281, 3.07303, 0.67 ) }
    dend_43 { pt3dadd( 25.7107, -144.725, 2.67214, 0.33 ) }
    dend_43 { pt3dadd( 26.9946, -146.362, 2.12204, 0.67 ) }
    dend_43 { pt3dadd( 28.0845, -147.774, 1.47405, 0.33 ) }
    dend_43 { pt3dadd( 28.8657, -148.66, 1.04303, 0.67 ) }
    dend_43 { pt3dadd( 30.8755, -150.446, 0.369143, 0.33 ) }
    dend_43 { pt3dadd( 31.5688, -151.018, 0.219944, 0.67 ) }
    dend_43 { pt3dadd( 32.8587, -152.184, 0.171501, 0.33 ) }
    dend_43 { pt3dadd( 33.4731, -152.849, 0.316985, 0.67 ) }
    dend_43 { pt3dadd( 34.8003, -154.235, 0.993891, 0.33 ) }
    dend_43 { pt3dadd( 36.6587, -156.214, 2.23197, 0.67 ) }
    dend_43 { pt3dadd( 37.9653, -157.526, 3.10938, 0.33 ) }
    dend_43 { pt3dadd( 39.8416, -159.35, 4.02674, 0.67 ) }
    dend_43 { pt3dadd( 41.8205, -161.296, 5.04707, 0.33 ) }
    dend_43 { pt3dadd( 43.748, -163.172, 5.98165, 0.67 ) }
    dend_43 { pt3dadd( 45.1143, -164.417, 6.53072, 0.33 ) }
    dend_43 { pt3dadd( 48.1133, -167.029, 7.25394, 0.33 ) }
    dend_43 { pt3dadd( 52.1227, -169.975, 7.70162, 0.33 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 19.2846, -135.091, 4.30644, 0.67 ) }
    dend_42 { pt3dadd( 19.1716, -138.748, 4.31906, 0.67 ) }
    dend_42 { pt3dadd( 19.2106, -143.055, 4.3937, 0.67 ) }
    dend_42 { pt3dadd( 19.2915, -145.913, 4.47187, 0.33 ) }
    dend_42 { pt3dadd( 19.3589, -146.948, 4.46893, 0.67 ) }
    dend_42 { pt3dadd( 19.7225, -151.1, 4.85484, 0.33 ) }
    dend_42 { pt3dadd( 19.9238, -152.808, 5.12374, 0.67 ) }
    dend_42 { pt3dadd( 20.3824, -154.569, 5.57695, 0.33 ) }
    dend_42 { pt3dadd( 20.6457, -155.154, 5.85345, 0.67 ) }
    dend_42 { pt3dadd( 22.0461, -157.512, 7.43231, 0.33 ) }
    dend_42 { pt3dadd( 25.1945, -162.025, 10.7712, 0.33 ) }
    dend_42 { pt3dadd( 25.8032, -162.744, 11.3631, 0.67 ) }
    dend_42 { pt3dadd( 27.6379, -164.881, 13.1406, 0.33 ) }
    dend_42 { pt3dadd( 29.2744, -166.693, 14.7278, 0.67 ) }
    dend_42 { pt3dadd( 30.7724, -168.28, 16.1507, 0.33 ) }
    dend_42 { pt3dadd( 32.2626, -169.802, 17.5269, 0.67 ) }
    dend_42 { pt3dadd( 33.2765, -170.885, 18.0447, 0.33 ) }
    dend_42 { pt3dadd( 33.5695, -171.25, 18.2227, 0.67 ) }
    dend_42 { pt3dadd( 34.7036, -173.328, 19.2171, 0.33 ) }
    dend_42 { pt3dadd( 38.633, -182.128, 23.2952, 0.33 ) }
    dend_42 { pt3dadd( 44.5588, -190.072, 26.769, 0.33 ) }
    dend_42 { pt3dadd( 51.1227, -197.371, 30.5698, 0.33 ) }
    dend_42 { pt3dadd( 57.8896, -203.681, 35.6525, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_42 { pt3dadd( 65.0618, -209.164, 41.1731, 0.33 ) }
    dend_42 { pt3dadd( 73.3844, -214.444, 45.0508, 0.33 ) }
    dend_42 { pt3dadd( 81.3284, -219.663, 49.7237, 0.33 ) }
    dend_42 { pt3dadd( 89.2756, -224.716, 54.579, 0.33 ) }
    dend_42 { pt3dadd( 97.4653, -229.988, 58.7404, 0.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 5/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -47.2298, -164.302, -8.34294, 0.67 ) }
    dend_38 { pt3dadd( -47.9918, -167.495, -9.74487, 0.67 ) }
    dend_38 { pt3dadd( -48.3105, -168.83, -10.3311, 0.67 ) }
    dend_38 { pt3dadd( -49.7359, -174.801, -12.9534, 0.67 ) }
    dend_38 { pt3dadd( -50.6272, -178.535, -14.5933, 0.67 ) }
    dend_38 { pt3dadd( -50.9822, -180.023, -15.2464, 0.67 ) }
    dend_38 { pt3dadd( -51.6318, -182.744, -16.4414, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 12/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -47.2298, -164.302, -8.34294, 0.67 ) }
    dend_35 { pt3dadd( -47.2201, -166.615, -7.70011, 0.67 ) }
    dend_35 { pt3dadd( -47.1388, -168.664, -7.04276, 0.67 ) }
    dend_35 { pt3dadd( -47.2152, -172.53, -5.71158, 0.67 ) }
    dend_35 { pt3dadd( -47.6134, -178.321, -3.511, 0.67 ) }
    dend_35 { pt3dadd( -48.1575, -182.553, -1.80999, 0.67 ) }
    dend_35 { pt3dadd( -48.4129, -184.539, -1.0117, 0.67 ) }
    dend_35 { pt3dadd( -48.8975, -187.436, 0.210192, 0.67 ) }
    dend_35 { pt3dadd( -49.6069, -190.822, 1.76257, 0.67 ) }
    dend_35 { pt3dadd( -50.1887, -192.657, 2.69759, 0.67 ) }
    dend_35 { pt3dadd( -50.9579, -194.765, 4.15844, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 23/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -58.1569, 76.2872, -36.7672, 0.67 ) }
    dend_28 { pt3dadd( -57.42, 74.9769, -38.5165, 0.67 ) }
    dend_28 { pt3dadd( -54.2017, 70.1861, -44.4435, 0.67 ) }
    dend_28 { pt3dadd( -52.094, 67.1524, -47.8971, 0.67 ) }
    dend_28 { pt3dadd( -50.7066, 64.8555, -50.3341, 0.33 ) }
    dend_28 { pt3dadd( -49.4473, 62.777, -52.4251, 0.67 ) }
    dend_28 { pt3dadd( -48.1059, 60.6968, -54.5424, 0.33 ) }
    dend_28 { pt3dadd( -46.963, 58.9493, -56.2507, 0.33 ) }
    dend_28 { pt3dadd( -44.5486, 55.5451, -59.3157, 0.67 ) }
    dend_28 { pt3dadd( -41.8948, 51.8334, -62.6936, 0.33 ) }
    dend_28 { pt3dadd( -40.6699, 50.0904, -64.6388, 0.67 ) }
    dend_28 { pt3dadd( -39.2164, 47.8452, -67.6095, 0.33 ) }
    dend_28 { pt3dadd( -37.8312, 45.5919, -70.6876, 0.33 ) }
    dend_28 { pt3dadd( -37.2495, 44.6678, -72.0789, 0.67 ) }
    dend_28 { pt3dadd( -35.8028, 42.6332, -75.5507, 0.67 ) }
    dend_28 { pt3dadd( -32.7186, 38.6964, -83.2145, 0.33 ) }
    dend_28 { pt3dadd( -31.3722, 36.5949, -87.5764, 0.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -58.1569, 76.2872, -36.7672, 0.67 ) }
    dend_27 { pt3dadd( -59.5364, 78.6318, -36.9471, 0.67 ) }
    dend_27 { pt3dadd( -60.5204, 80.4097, -36.9856, 0.67 ) }
    dend_27 { pt3dadd( -61.2111, 81.6372, -37.0381, 0.67 ) }
    dend_27 { pt3dadd( -62.2826, 83.6745, -37.1773, 0.67 ) }
    dend_27 { pt3dadd( -63.2206, 85.6072, -37.3458, 0.33 ) }
    dend_27 { pt3dadd( -63.5336, 86.2914, -37.4133, 0.67 ) }
    dend_27 { pt3dadd( -64.865, 89.4456, -37.7315, 0.33 ) }
    dend_27 { pt3dadd( -65.378, 90.7308, -37.9178, 1.33 ) }
    dend_27 { pt3dadd( -66.6135, 93.7763, -38.3566, 0.33 ) }
    dend_27 { pt3dadd( -67.6909, 96.5373, -38.8954, 0.33 ) }
    dend_27 { pt3dadd( -67.9249, 97.1521, -39.0255, 0.67 ) }
    dend_27 { pt3dadd( -68.4387, 98.5349, -39.3414, 0.33 ) }
    dend_27 { pt3dadd( -69.2536, 100.715, -39.901, 0.67 ) }
    dend_27 { pt3dadd( -70.6599, 104.479, -40.7541, 0.33 ) }
    dend_27 { pt3dadd( -71.7599, 106.898, -41.344, 1.33 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 56/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -2.88499, 161.249, -11.5791, 0.67 ) }
    dend_17 { pt3dadd( -2.98956, 164.621, -12.5321, 0.67 ) }
    dend_17 { pt3dadd( -3.12154, 168.305, -13.6753, 0.67 ) }
    dend_17 { pt3dadd( -3.33766, 173.473, -15.3263, 0.67 ) }
    dend_17 { pt3dadd( -3.43509, 176.236, -16.1793, 0.67 ) }
    dend_17 { pt3dadd( -3.5026, 178.147, -16.7459, 0.67 ) }
    dend_17 { pt3dadd( -3.60877, 180.276, -17.329, 0.67 ) }
    dend_17 { pt3dadd( -3.80553, 182.879, -17.9478, 0.33 ) }
    dend_17 { pt3dadd( -3.81737, 183.365, -18.0501, 0.67 ) }
    dend_17 { pt3dadd( -3.91807, 184.968, -18.228, 0.33 ) }
    dend_17 { pt3dadd( -4.0011, 186.122, -18.2419, 0.67 ) }
    dend_17 { pt3dadd( -3.96277, 187.852, -18.127, 0.33 ) }
    dend_17 { pt3dadd( -3.87904, 188.517, -18.0162, 0.67 ) }
    dend_17 { pt3dadd( -3.46594, 189.97, -17.6254, 0.33 ) }
    dend_17 { pt3dadd( -3.10459, 190.84, -17.382, 0.67 ) }
    dend_17 { pt3dadd( -2.46601, 192.045, -16.9563, 0.33 ) }
    dend_17 { pt3dadd( -1.33887, 193.833, -16.2496, 0.33 ) }
    dend_17 { pt3dadd( -0.491127, 195.066, -15.7649, 0.67 ) }
    dend_17 { pt3dadd( 0.575438, 196.623, -15.2514, 0.33 ) }
    dend_17 { pt3dadd( 0.575438, 196.623, -15.2514, 0.67 ) }
    dend_17 { pt3dadd( 2.19799, 199.39, -14.6395, 0.33 ) }
    dend_17 { pt3dadd( 3.09835, 201.083, -14.3472, 0.33 ) }
    dend_17 { pt3dadd( 3.99893, 203.012, -14.1825, 0.67 ) }
    dend_17 { pt3dadd( 5.08275, 205.71, -14.1757, 0.33 ) }
    dend_17 { pt3dadd( 5.69921, 207.388, -14.2334, 0.33 ) }
    dend_17 { pt3dadd( 6.37312, 209.228, -14.384, 0.33 ) }
    dend_17 { pt3dadd( 6.69857, 210.123, -14.5517, 0.67 ) }
    dend_17 { pt3dadd( 7.61738, 212.947, -15.1992, 0.33 ) }
    dend_17 { pt3dadd( 7.77627, 213.508, -15.3544, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.88499, 161.249, -11.5791, 0.67 ) }
    dend_14 { pt3dadd( -6.22031, 166.321, -11.3693, 0.67 ) }
    dend_14 { pt3dadd( -9.84268, 171.83, -11.1414, 0.67 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 88/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -51.6318, -182.744, -16.4414, 0.33 ) }
    dend_40 { pt3dadd( -57.4906, -187.036, -16.6972, 0.33 ) }
    dend_40 { pt3dadd( -59.469, -189.096, -17.0108, 0.67 ) }
    dend_40 { pt3dadd( -60.7126, -190.781, -17.3534, 0.33 ) }
    dend_40 { pt3dadd( -61.5459, -192.142, -17.6224, 0.67 ) }
    dend_40 { pt3dadd( -63.2385, -194.79, -17.9962, 0.67 ) }
    dend_40 { pt3dadd( -65.0708, -197.824, -18.2428, 0.67 ) }
    dend_40 { pt3dadd( -66.6479, -201.043, -18.4666, 0.67 ) }
    dend_40 { pt3dadd( -67.9324, -203.93, -18.3427, 0.67 ) }
    dend_40 { pt3dadd( -68.8847, -206.06, -18.1078, 0.67 ) }
    dend_40 { pt3dadd( -70.6808, -209.605, -17.6101, 0.33 ) }
    dend_40 { pt3dadd( -72.0879, -212.015, -17.1473, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_40 { pt3dadd( -73.9171, -214.6, -16.5135, 0.33 ) }
    dend_40 { pt3dadd( -74.9438, -215.809, -16.1873, 0.67 ) }
    dend_40 { pt3dadd( -76.6774, -217.989, -15.6855, 0.67 ) }
    dend_40 { pt3dadd( -78.085, -219.86, -15.4054, 0.67 ) }
    dend_40 { pt3dadd( -79.2845, -221.535, -15.2933, 0.67 ) }
    dend_40 { pt3dadd( -80.8391, -223.746, -15.1852, 0.67 ) }
    dend_40 { pt3dadd( -82.8814, -226.627, -15.0212, 0.67 ) }
    dend_40 { pt3dadd( -85.7574, -230.824, -14.6475, 0.67 ) }
    dend_40 { pt3dadd( -86.8786, -232.422, -14.4918, 0.67 ) }
    dend_40 { pt3dadd( -88.5186, -234.799, -14.3107, 0.67 ) }
    dend_40 { pt3dadd( -90.0674, -236.931, -14.395, 0.67 ) }
    dend_40 { pt3dadd( -92.406, -240.175, -14.7305, 0.67 ) }
    dend_40 { pt3dadd( -94.4733, -243.02, -15.1893, 0.67 ) }
    dend_40 { pt3dadd( -96.4057, -245.852, -15.7604, 0.67 ) }
    dend_40 { pt3dadd( -98.9772, -250.031, -16.5707, 0.67 ) }
    dend_40 { pt3dadd( -102.884, -256.695, -17.9862, 0.67 ) }
    dend_40 { pt3dadd( -104.791, -260.063, -18.7619, 0.67 ) }
    dend_40 { pt3dadd( -106.485, -263.283, -19.5388, 0.33 ) }
    dend_40 { pt3dadd( -109.046, -268.342, -20.7148, 0.67 ) }
    dend_40 { pt3dadd( -110.341, -271.052, -21.3026, 0.33 ) }
    dend_40 { pt3dadd( -111.788, -274.203, -21.892, 0.33 ) }
    dend_40 { pt3dadd( -112.254, -275.272, -21.9543, 0.67 ) }
    dend_40 { pt3dadd( -113.327, -277.816, -21.9255, 0.33 ) }
    dend_40 { pt3dadd( -114.377, -280.372, -21.7381, 0.33 ) }
    dend_40 { pt3dadd( -115.722, -283.204, -21.4084, 0.33 ) }
    dend_40 { pt3dadd( -116.69, -285.48, -21.0703, 0.33 ) }
    dend_40 { pt3dadd( -118.257, -290.279, -19.7936, 0.33 ) }
    dend_40 { pt3dadd( -119.123, -293.237, -18.7689, 0.33 ) }
    dend_40 { pt3dadd( -123.713, -304.034, -18.6596, 0.33 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 29/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -51.6318, -182.744, -16.4414, 0.67 ) }
    dend_39 { pt3dadd( -52.6558, -184.345, -17.6458, 0.67 ) }
    dend_39 { pt3dadd( -54.0215, -186.353, -19.0331, 0.67 ) }
    dend_39 { pt3dadd( -55.8204, -189.452, -20.8074, 0.67 ) }
    dend_39 { pt3dadd( -56.5573, -191.026, -21.6106, 0.33 ) }
    dend_39 { pt3dadd( -57.5155, -193.255, -22.6911, 0.67 ) }
    dend_39 { pt3dadd( -58.5007, -195.642, -23.8007, 0.33 ) }
    dend_39 { pt3dadd( -58.713, -196.247, -24.0611, 0.33 ) }
    dend_39 { pt3dadd( -59.683, -199.689, -25.3064, 0.67 ) }
    dend_39 { pt3dadd( -60.3911, -202.186, -26.1822, 0.33 ) }
    dend_39 { pt3dadd( -60.9758, -204.426, -27.0084, 0.33 ) }
    dend_39 { pt3dadd( -61.3102, -205.848, -27.5314, 0.67 ) }
    dend_39 { pt3dadd( -61.859, -208.407, -28.4238, 0.33 ) }
    dend_39 { pt3dadd( -62.229, -210.016, -28.9647, 0.33 ) }
    dend_39 { pt3dadd( -62.8456, -212.344, -29.6488, 0.33 ) }
    dend_39 { pt3dadd( -62.9332, -212.668, -29.7242, 0.67 ) }
    dend_39 { pt3dadd( -63.5081, -215.024, -30.1206, 0.33 ) }
    dend_39 { pt3dadd( -63.8057, -216.371, -30.2623, 0.67 ) }
    dend_39 { pt3dadd( -64.2033, -218.317, -30.3394, 0.33 ) }
    dend_39 { pt3dadd( -64.7127, -220.707, -30.4337, 0.33 ) }
    dend_39 { pt3dadd( -65.0426, -222.405, -30.4448, 0.67 ) }
    dend_39 { pt3dadd( -65.8138, -226.188, -30.466, 0.33 ) }
    dend_39 { pt3dadd( -66.5081, -229.311, -30.5, 0.67 ) }
    dend_39 { pt3dadd( -67.2932, -232.34, -30.4851, 0.67 ) }
    dend_39 { pt3dadd( -68.1817, -235.47, -30.3732, 0.33 ) }
    dend_39 { pt3dadd( -69.0539, -238.522, -30.1942, 0.33 ) }
    dend_39 { pt3dadd( -69.2701, -239.262, -30.1353, 0.33 ) }
    dend_39 { pt3dadd( -70.0778, -241.76, -29.9185, 0.33 ) }
    dend_39 { pt3dadd( -70.9126, -243.772, -29.7323, 0.67 ) }
    dend_39 { pt3dadd( -71.5222, -245.098, -29.5757, 0.33 ) }
    dend_39 { pt3dadd( -71.664, -245.41, -29.5503, 0.67 ) }
    dend_39 { pt3dadd( -72.4813, -247.089, -29.558, 0.33 ) }
    dend_39 { pt3dadd( -72.8745, -247.749, -29.6786, 0.67 ) }
    dend_39 { pt3dadd( -75.4857, -251.479, -30.9771, 0.33 ) }
    dend_39 { pt3dadd( -76.3319, -252.505, -31.529, 0.67 ) }
    dend_39 { pt3dadd( -78.166, -254.459, -32.8362, 0.33 ) }
    dend_39 { pt3dadd( -78.8421, -255.126, -33.413, 1.33 ) }
    dend_39 { pt3dadd( -82.7136, -258.735, -37.1517, 0.33 ) }
    dend_39 { pt3dadd( -82.9815, -259.015, -37.4579, 0.67 ) }
    dend_39 { pt3dadd( -84.305, -260.528, -39.219, 0.33 ) }
    dend_39 { pt3dadd( -84.305, -260.528, -39.219, 0.67 ) }
    dend_39 { pt3dadd( -86.3578, -263.461, -41.9237, 0.33 ) }
    dend_39 { pt3dadd( -86.7743, -264.211, -42.5231, 0.67 ) }
    dend_39 { pt3dadd( -88.2316, -267.686, -44.86, 0.33 ) }
    dend_39 { pt3dadd( -89.1768, -270.203, -46.2025, 0.33 ) }
    dend_39 { pt3dadd( -89.2955, -270.637, -46.3957, 0.67 ) }
    dend_39 { pt3dadd( -89.7954, -272.519, -47.1418, 0.33 ) }
    dend_39 { pt3dadd( -89.9103, -272.982, -47.2771, 0.67 ) }
    dend_39 { pt3dadd( -90.499, -275.266, -47.9296, 0.33 ) }
    dend_39 { pt3dadd( -91.424, -278.597, -48.6848, 0.33 ) }
    dend_39 { pt3dadd( -91.8598, -281.654, -49.1644, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 80/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -50.9579, -194.765, 4.15844, 0.33 ) }
    dend_37 { pt3dadd( -52.4724, -196.776, 5.68368, 0.33 ) }
    dend_37 { pt3dadd( -53.7726, -198.364, 6.71991, 0.67 ) }
    dend_37 { pt3dadd( -54.6194, -199.286, 7.26025, 0.33 ) }
    dend_37 { pt3dadd( -56.4516, -200.798, 8.44139, 0.67 ) }
    dend_37 { pt3dadd( -59.1795, -202.651, 10.0662, 0.33 ) }
    dend_37 { pt3dadd( -60.4732, -203.247, 10.7437, 0.67 ) }
    dend_37 { pt3dadd( -61.9971, -203.524, 11.4232, 0.33 ) }
    dend_37 { pt3dadd( -63.2338, -203.644, 11.935, 0.67 ) }
    dend_37 { pt3dadd( -68.7189, -203.786, 14.0928, 0.33 ) }
    dend_37 { pt3dadd( -70.3536, -203.699, 14.6892, 0.67 ) }
    dend_37 { pt3dadd( -74.7655, -203.2, 16.3634, 0.67 ) }
    dend_37 { pt3dadd( -77.5255, -202.777, 17.5762, 1.33 ) }
    dend_37 { pt3dadd( -84.3831, -205.018, 22.6394, 1.33 ) }
    dend_37 { pt3dadd( -89.9709, -208.361, 28.5385, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 95/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -50.9579, -194.765, 4.15844, 0.67 ) }
    dend_36 { pt3dadd( -52.0283, -195.885, 4.71154, 0.67 ) }
    dend_36 { pt3dadd( -53.237, -197.15, 5.33611, 0.67 ) }
    dend_36 { pt3dadd( -54.3852, -198.352, 5.92946, 0.33 ) }
    dend_36 { pt3dadd( -55.2763, -199.285, 6.3899, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_36 { pt3dadd( -57.3999, -201.508, 7.48727, 0.33 ) }
    dend_36 { pt3dadd( -58.6408, -202.807, 8.12847, 0.33 ) }
    dend_36 { pt3dadd( -63.8509, -207.442, 10.4318, 0.33 ) }
    dend_36 { pt3dadd( -69.2848, -210.933, 13.9953, 0.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 4/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.84268, 171.83, -11.1414, 0.67 ) }
    dend_16 { pt3dadd( -10.4276, 173.888, -11.392, 0.67 ) }
    dend_16 { pt3dadd( -10.9903, 175.895, -11.7008, 0.67 ) }
    dend_16 { pt3dadd( -12.153, 180.138, -12.3991, 0.67 ) }
    dend_16 { pt3dadd( -12.4295, 181.208, -12.5729, 0.67 ) }
    dend_16 { pt3dadd( -13.2341, 184.595, -13.1561, 0.67 ) }
    dend_16 { pt3dadd( -13.582, 185.942, -13.3904, 0.67 ) }
    dend_16 { pt3dadd( -14.0776, 187.885, -13.7694, 0.67 ) }
    dend_16 { pt3dadd( -14.3259, 188.919, -13.9376, 0.67 ) }
    dend_16 { pt3dadd( -14.7729, 190.702, -14.1619, 0.33 ) }
    dend_16 { pt3dadd( -15.4551, 193.408, -14.3141, 0.67 ) }
    dend_16 { pt3dadd( -15.9334, 195.335, -14.257, 0.67 ) }
    dend_16 { pt3dadd( -16.1401, 196.095, -14.2245, 1.33 ) }
    dend_16 { pt3dadd( -17.0133, 199.534, -14.0136, 0.33 ) }
    dend_16 { pt3dadd( -17.4179, 201.035, -13.8774, 1.33 ) }
    dend_16 { pt3dadd( -17.7921, 202.315, -13.7604, 0.33 ) }
    dend_16 { pt3dadd( -18.05, 203.101, -13.7189, 0.67 ) }
    dend_16 { pt3dadd( -18.8755, 205.369, -13.7805, 0.67 ) }
    dend_16 { pt3dadd( -19.5772, 207.075, -13.954, 0.67 ) }
    dend_16 { pt3dadd( -20.292, 208.458, -14.3066, 0.33 ) }
    dend_16 { pt3dadd( -21.1356, 209.807, -14.8485, 0.67 ) }
    dend_16 { pt3dadd( -22.5858, 211.609, -15.9414, 0.33 ) }
    dend_16 { pt3dadd( -23.8038, 212.643, -17.039, 0.67 ) }
    dend_16 { pt3dadd( -24.7525, 212.916, -18.3355, 0.67 ) }
    dend_16 { pt3dadd( -26.2669, 212.894, -20.7015, 0.67 ) }
    dend_16 { pt3dadd( -27.1938, 212.738, -22.2664, 0.67 ) }
    dend_16 { pt3dadd( -28.1379, 212.4, -23.9439, 0.67 ) }
    dend_16 { pt3dadd( -29.0975, 211.849, -25.7793, 0.33 ) }
    dend_16 { pt3dadd( -31.7399, 209.943, -31.1167, 0.33 ) }
    dend_16 { pt3dadd( -31.9903, 209.749, -31.6269, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 34/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.84268, 171.83, -11.1414, 0.67 ) }
    dend_15 { pt3dadd( -11.637, 172.979, -10.661, 0.67 ) }
    dend_15 { pt3dadd( -12.4129, 173.527, -10.4571, 0.67 ) }
    dend_15 { pt3dadd( -13.0825, 174.058, -10.2951, 0.67 ) }
    dend_15 { pt3dadd( -15.623, 176.416, -9.52971, 0.67 ) }
    dend_15 { pt3dadd( -17.062, 177.781, -9.10524, 0.67 ) }
    dend_15 { pt3dadd( -18.6134, 179.317, -8.6668, 0.33 ) }
    dend_15 { pt3dadd( -18.9367, 179.708, -8.62402, 2.0 ) }
    dend_15 { pt3dadd( -19.8736, 180.945, -8.71306, 0.67 ) }
    dend_15 { pt3dadd( -21.7263, 183.485, -9.36621, 0.33 ) }
    dend_15 { pt3dadd( -22.6553, 184.818, -9.98973, 0.67 ) }
    dend_15 { pt3dadd( -23.4092, 185.886, -10.6116, 0.67 ) }
    dend_15 { pt3dadd( -26.5784, 189.638, -13.2476, 0.33 ) }
    dend_15 { pt3dadd( -27.5786, 190.681, -13.8762, 0.33 ) }
    dend_15 { pt3dadd( -28.3242, 191.368, -14.2624, 1.33 ) }
    dend_15 { pt3dadd( -29.4769, 192.342, -14.7262, 0.67 ) }
    dend_15 { pt3dadd( -30.1759, 192.911, -14.9111, 0.67 ) }
    dend_15 { pt3dadd( -32.0142, 194.23, -15.0074, 0.33 ) }
    dend_15 { pt3dadd( -35.6146, 196.57, -14.2943, 1.33 ) }
    dend_15 { pt3dadd( -36.3361, 197.078, -14.0941, 0.67 ) }
    dend_15 { pt3dadd( -37.3414, 197.847, -13.7302, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_56 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_58 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_57 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_51 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_19 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_6 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_60 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_59 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_55 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_52 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_44 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_5 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_54 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_53 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_25 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_4 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_3 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_43 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_42 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_40 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_39 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_37 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_16 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_31 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_32 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_56 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_24 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_26 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_45 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_48 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_7 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_27 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_49 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_50 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_11 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_38 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_35 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_15 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_36 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_21 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_20 OneSecGrp_SectionRef_28.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_56, dend_56, dend_56, dend_56, dend_31, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, axon_0, axon_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_8, dend_8, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_50, dend_50, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_9 nseg = 3
    dend_58 nseg = 5
    dend_57 nseg = 11
    dend_51 nseg = 5
    dend_30 nseg = 11
    dend_19 nseg = 9
    dend_10 nseg = 3
    dend_6 nseg = 5
    dend_1 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 3
    dend_55 nseg = 7
    dend_52 nseg = 5
    dend_44 nseg = 3
    dend_5 nseg = 7
    dend_2 nseg = 5
    dend_54 nseg = 9
    dend_53 nseg = 3
    dend_41 nseg = 5
    dend_34 nseg = 5
    dend_25 nseg = 7
    dend_12 nseg = 7
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 7
    dend_28 nseg = 3
    dend_17 nseg = 3
    dend_40 nseg = 7
    dend_39 nseg = 5
    dend_37 nseg = 3
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L4_LBC_fe3c0498a4_0_0


