// Cell: cACint209_L23_NBC_2d5f9c7a57_0_0
/*
{
  "id" : "cACint209_L23_NBC_2d5f9c7a57_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.3022, -4.91444, 0.0966793, 4.52114", "-9.29583, -4.38505, 0.0928107, 5.29403", "-8.28943, -3.85565, 0.0889422, 6.87895", "-7.28303, -3.32626, 0.0850736, 8.2055", "-6.27664, -2.79687, 0.0812051, 9.69593", "-5.27024, -2.26748, 0.0773365, 11.1864", "-4.26385, -1.73809, 0.073468, 12.1576", "-3.25745, -1.20869, 0.0695994, 12.1028", "-2.25106, -0.679302, 0.0657309, 12.5691", "-1.24466, -0.14991, 0.0618623, 13.5271", "-0.238266, 0.379482, 0.0579938, 14.6432", "0.76813, 0.908874, 0.0541252, 15.6577", "1.77453, 1.43827, 0.0502567, 15.7754", "2.78092, 1.96766, 0.0463882, 15.433", "3.78732, 2.49705, 0.0425196, 14.9368", "4.79371, 3.02644, 0.0386511, 14.4352", "5.80011, 3.55583, 0.0347825, 13.7953", "6.8065, 4.08523, 0.030914, 12.9353", "7.8129, 4.61462, 0.0270454, 10.4207", "8.81929, 5.14401, 0.0231769, 6.43383", "9.82569, 5.6734, 0.0193083, 3.7421" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.0327, 0.453743, 12.0695, 1.38", "1.98332, 2.73122, 7.99215, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "4.5927, -1.21701, -10.1505, 1.66", "4.91608, -1.57013, -11.7329, 1.66", "6.61496, -3.4253, -20.0466, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-8.7473, 1.29425, 5.4595, 1.66", "-10.9385, 1.94194, 7.05144, 1.66", "-14.5645, 2.80736, 9.51484, 1.66", "-17.2618, 3.26133, 11.0646, 1.66", "-20.6492, 3.83144, 13.0109, 1.66", "-24.3889, 4.46088, 15.1596, 1.66", "-29.6684, 5.34946, 18.193, 1.66", "-33.0971, 5.81172, 20.1634, 1.66", "-38.498, 6.26218, 22.9676, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-10.3073, -6.10625, 1.9395, 2.77", "-13.807, -7.08651, 0.7009, 2.77", "-19.6331, -8.71837, -1.36105, 2.77", "-24.4422, -10.0654, -3.06308, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-11.2873, -5.5015, 6.9695, 1.11", "-13.4966, -7.45603, 8.69963, 1.11", "-15.5423, -9.25665, 10.2434, 1.11", "-17.8976, -11.3307, 12.0352, 1.11", "-19.2962, -12.5403, 13.0796, 1.38", "-21.759, -14.6455, 15.0142, 0.83", "-23.7903, -16.4061, 16.6986, 1.11", "-24.5875, -17.1245, 17.4208, 1.11", "-26.4653, -18.7732, 19.132, 1.11", "-27.3039, -19.5308, 19.9423, 1.11", "-29.0504, -21.1613, 21.7864, 1.11", "-30.0413, -22.1664, 22.8793, 1.11", "-30.6523, -22.8437, 23.5931, 1.11", "-31.6525, -23.9574, 24.7261, 1.66", "-34.0126, -26.4921, 27.3275, 1.66", "-35.9513, -28.5614, 29.4643, 1.38", "-38.0457, -30.9, 31.6944, 1.38", "-39.5578, -32.6623, 33.3404, 1.38", "-41.3434, -34.8639, 35.431, 1.11", "-42.8354, -36.7984, 37.2848, 1.11", "-45.0737, -39.7898, 40.2302, 1.11", "-47.4217, -43.064, 43.4843, 0.83", "-48.8209, -45.0889, 45.5345, 0.83", "-50.8702, -48.2207, 48.5992, 1.38", "-51.9668, -50.0216, 50.291, 1.38", "-53.1693, -52.0599, 52.1298, 0.83", "-54.3139, -53.9549, 53.8088, 0.83", "-55.1511, -55.3116, 55.0237, 1.11", "-56.1805, -56.9686, 56.4291, 0.83", "-57.0866, -58.4046, 57.5869, 1.11", "-57.9109, -59.7156, 58.6549, 0.55", "-58.8303, -61.1685, 59.8231, 1.11", "-59.8937, -62.8002, 61.1879, 0.55", "-60.8787, -64.2611, 62.4082, 1.94", "-62.2013, -66.2064, 64.065, 0.55", "-63.0209, -67.4244, 65.1183, 0.55", "-64.0084, -68.9633, 66.4374, 0.55", "-64.9141, -70.5132, 67.7587, 1.11", "-66.218, -73.0478, 69.7424, 0.28", "-66.605, -73.976, 70.3606, 1.11", "-67.2156, -75.9379, 71.6767, 0.28", "-67.4106, -76.8176, 72.2934, 0.55", "-67.6676, -78.41, 73.5029, 0.28", "-67.786, -79.3713, 74.2163, 0.28", "-67.9794, -81.524, 75.8107, 1.66", "-68.377, -85.4411, 78.6845, 0.28", "-68.5317, -86.8663, 79.729, 0.28", "-68.7282, -88.3305, 80.8941, 0.83", "-68.9996, -90.1633, 82.5099, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-3.7273, -6.39325, 11.6495, 2.77", "-4.20603, -8.00846, 11.6495, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.6827, -2.775, 1.6195, 2.49", "10.0217, -3.40494, 1.81445, 2.22", "12.1522, -4.40714, 2.12461, 2.22", "13.5304, -5.05549, 2.32526, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.0827, 8.87925, -4.97829E-4, 2.22", "6.19094, 10.0276, -0.348021, 2.22", "6.33265, 11.531, -0.802994, 2.22", "6.4783, 13.0764, -1.27065, 2.22", "6.70367, 15.4675, -1.99423, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.82569, 5.6734, 0.0193083, 0.896597", "23.101, 12.6566, 0.0193083, 0.896597", "36.3764, 19.6398, 0.0193083, 0.896597" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "1.98332, 2.73122, 7.99215, 0.83", "-1.51009, 9.58515, 6.63368, 0.83", "-3.22849, 12.9392, 6.05082, 0.83", "-4.48597, 15.3621, 5.64234, 0.83", "-5.34632, 16.9671, 5.38735, 1.38", "-7.54275, 20.974, 4.9646, 0.83", "-9.1064, 23.8266, 4.66364, 1.38", "-11.4925, 27.8698, 4.61463, 0.83", "-13.9309, 31.8945, 4.60835, 0.83", "-14.9601, 33.5332, 4.64343, 0.83", "-16.7839, 36.5413, 4.63851, 1.94" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "1.98332, 2.73122, 7.99215, 1.38", "2.76101, 3.64225, 8.98164, 1.38", "3.75913, 4.81151, 10.2516, 1.38", "4.68775, 5.89935, 11.4332, 1.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "6.61496, -3.4253, -20.0466, 0.83", "7.38828, 0.230559, -26.9138, 0.83", "7.90131, 2.65594, -31.4697, 0.83", "8.54944, 5.71997, -37.2253, 0.83", "8.75517, 6.69254, -39.0521, 0.55", "9.35885, 9.54645, -44.4129, 0.55", "9.90395, 12.1232, -49.2533, 0.55", "10.8344, 18.0774, -60.5798, 0.55", "10.8892, 26.0585, -70.6901, 0.55", "12.0485, 33.3248, -81.2399, 0.55", "15.0026, 42.7322, -89.6077, 0.55", "20.3001, 53.0311, -95.4491, 0.55", "25.9235, 62.3997, -102.375, 0.55", "34.0061, 69.841, -109.095, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "6.61496, -3.4253, -20.0466, 1.66", "6.24557, -4.96147, -21.7063, 1.66", "5.92542, -6.29288, -23.1446, 1.11" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-38.498, 6.26218, 22.9676, 0.55", "-40.7038, 5.37677, 23.4562, 0.55", "-46.569, 2.87772, 24.6836, 0.55", "-47.6321, 2.45247, 24.8816, 0.55", "-50.5876, 1.34064, 25.3832, 0.55", "-51.4043, 1.02827, 25.5181, 0.83", "-54.5022, -0.195524, 26.0855, 0.55", "-57.7772, -1.5496, 26.6869, 1.11", "-61.4255, -3.08828, 27.3474, 0.55", "-63.847, -4.13351, 27.7206, 1.94", "-66.0571, -5.06082, 27.9881, 1.94", "-68.722, -6.16332, 28.2426, 0.55", "-70.338, -6.88798, 28.3051, 0.55", "-72.9435, -8.0734, 28.2674, 0.28", "-75.5791, -9.28261, 28.0737, 1.94", "-79.3909, -10.8974, 27.6353, 0.55", "-80.5466, -11.3552, 27.4819, 1.66", "-84.841, -12.907, 26.7717, 0.55", "-87.5338, -13.7755, 26.379, 1.11", "-91.7204, -15.0173, 25.8106, 0.55", "-93.5965, -15.5273, 25.6135, 0.55", "-95.6156, -16.0437, 25.4319, 1.38", "-101.935, -17.5361, 25.0007, 0.28", "-108.263, -18.8609, 24.7431, 0.28", "-109.843, -19.1924, 24.7019, 1.38", "-115.248, -20.3349, 24.683, 0.28", "-118.306, -20.9839, 24.6864, 0.83", "-120.309, -21.3831, 24.7057, 0.28", "-123.101, -21.9565, 24.8928, 0.55", "-124.933, -22.3356, 25.0389, 0.28", "-127.286, -22.7985, 25.2821, 1.94" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-38.498, 6.26218, 22.9676, 0.83", "-43.6651, 5.9512, 25.8732, 0.83", "-46.9897, 5.74582, 27.5001, 1.66", "-49.9949, 5.59944, 28.8099, 1.11", "-53.132, 5.49993, 30.0382, 1.11", "-56.5777, 5.55512, 31.2655, 1.11", "-59.4711, 5.67262, 32.2707, 1.11", "-61.9735, 5.83454, 32.9851, 0.83", "-64.8382, 6.11572, 33.7808, 1.11", "-67.6355, 6.48351, 34.6385, 1.38", "-72.8642, 7.32597, 36.5233, 0.55", "-75.0941, 7.72086, 37.4287, 0.55", "-77.9476, 8.1851, 38.6674, 0.55", "-80.8503, 8.61134, 40.0463, 1.66", "-83.8452, 8.9432, 41.5691, 1.66", "-87.7924, 9.21254, 43.6405, 1.11", "-90.2106, 9.26255, 44.9619, 1.66", "-93.6118, 9.33446, 46.8756, 0.83", "-95.9444, 9.33033, 48.2081, 1.11", "-97.6575, 9.28921, 49.2055, 0.55", "-99.9211, 9.10894, 50.4893, 0.83", "-102.276, 8.74852, 51.893, 1.38", "-104.896, 8.20523, 53.7677, 0.55", "-106.359, 7.79402, 55.1883, 0.55", "-106.912, 7.57696, 55.8118, 0.28", "-107.978, 7.05457, 57.2176, 0.55", "-110.107, 5.83382, 60.4014, 0.28", "-111.621, 4.89979, 62.785, 1.66", "-114.691, 2.95171, 67.8491, 0.28", "-115.325, 2.62813, 68.9206, 1.11", "-116.916, 1.98104, 71.5952, 0.28", "-117.868, 1.75641, 73.2358, 0.83", "-119.371, 1.63567, 75.7214, 0.28", "-119.806, 1.65262, 76.4083, 0.83", "-122.338, 2.05255, 80.2979, 0.28", "-123.512, 2.33826, 82.0655, 1.66", "-126.916, 3.30944, 87.0329, 0.55", "-128.207, 3.68385, 88.8587, 0.28", "-129.725, 4.12327, 90.9109, 1.11", "-131.672, 4.59292, 93.3998, 0.55", "-133.668, 4.93986, 95.7542, 0.55", "-135.41, 5.12001, 97.6528, 1.11", "-138.318, 5.20803, 100.609, 0.28", "-139.1, 5.15926, 101.437, 0.28", "-141.737, 4.67271, 104.386, 1.38", "-144.452, 3.74631, 107.625, 0.55", "-145.798, 3.02984, 109.409, 0.28", "-146.71, 2.33827, 110.731, 1.11", "-148.836, 0.232069, 114.019, 0.28", "-150.123, -1.24275, 116.146, 1.38", "-151.302, -2.84682, 118.234, 0.55", "-152.248, -4.3809, 120.056, 1.11", "-153.529, -6.62005, 122.614, 0.28", "-154.555, -8.49671, 124.599, 0.28", "-155.585, -10.3116, 126.413, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-24.4422, -10.0654, -3.06308, 1.38", "-30.3645, -10.2779, -2.72862, 1.38", "-33.3331, -10.1735, -2.83991, 1.38", "-41.5868, -9.43169, -3.04172, 1.38", "-44.4702, -9.01734, -3.06628, 1.38", "-47.8834, -8.36206, -3.02592, 1.11", "-51.6716, -7.53812, -2.81074, 1.11", "-60.2734, -5.11451, -2.17855, 1.11", "-64.9285, -3.52012, -1.67585, 1.11", "-70.4738, -1.25486, -0.921839, 0.83", "-75.1839, 0.799746, -0.182029, 0.83", "-79.791, 2.86854, 0.65974, 1.38", "-83.0531, 4.35304, 1.32798, 0.55", "-86.1407, 5.80339, 2.04607, 0.55", "-89.812, 7.44364, 2.72325, 0.55", "-93.662, 9.0843, 3.32994, 1.66", "-97.815, 10.7789, 3.81134, 0.55", "-99.716, 11.7142, 3.89839, 1.11", "-103.895, 14.1751, 3.99486, 0.55", "-105.879, 15.6655, 3.97195, 0.83", "-107.731, 17.2686, 3.88198, 0.28", "-109.755, 19.2426, 3.70505, 0.83", "-116.312, 26.4522, 2.85801, 0.28", "-118.864, 29.5022, 2.57321, 1.11", "-122.775, 34.6575, 2.39157, 0.55", "-125.434, 38.4074, 2.46288, 2.22", "-127.377, 41.2837, 2.65845, 0.55", "-130.492, 46.1033, 3.06379, 0.28", "-132.487, 49.1265, 3.514, 0.83", "-136.078, 54.6562, 4.51359, 0.28", "-136.73, 55.7158, 4.74465, 1.94", "-138.012, 58.0914, 5.29838, 0.55", "-141.131, 64.2219, 6.75771, 0.28", "-142.576, 67.0567, 7.32323, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-24.4422, -10.0654, -3.06308, 1.66", "-25.3426, -13.2653, -2.85814, 1.66", "-26.7029, -18.099, -2.54856, 1.66", "-28.5534, -24.6749, -2.12739, 1.66", "-29.5895, -28.357, -1.89157, 1.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.20603, -8.00846, 11.6495, 0.83", "-3.58455, -7.59912, 14.0793, 0.83", "-2.58412, -6.75105, 18.1359, 0.83", "-1.92627, -6.19339, 20.8034, 0.83", "-1.30434, -5.66619, 23.3253, 0.83", "-0.473879, -4.96221, 26.6927, 0.83", "-0.194421, -4.72531, 27.8258, 1.38", "-0.161636, -4.65879, 28.0349, 1.38" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "13.5304, -5.05549, 2.32526, 0.83", "20.8629, -7.73435, 2.51359, 0.83", "27.9597, -10.1896, 2.92738, 0.83", "37.1235, -13.4676, 3.40373, 0.83", "44.063, -16.0605, 3.74029, 0.83", "48.5271, -17.7099, 4.01884, 1.11", "51.9301, -18.9693, 4.29724, 0.83", "56.3891, -20.4605, 4.92159, 1.11", "60.0686, -21.6997, 5.56369, 1.11", "65.5932, -24.0348, 6.80734, 0.83", "70.0027, -26.3811, 7.82734, 0.83", "72.2188, -27.7579, 8.30327, 0.83", "76.517, -30.6614, 9.24816, 1.38", "79.6481, -32.9582, 10.0071, 0.83", "82.7778, -35.3419, 10.7855, 0.83", "85.6534, -37.5452, 11.4392, 0.55", "88.1131, -39.3805, 11.8969, 0.83", "91.4173, -41.7249, 12.4292, 0.83", "94.5132, -43.7656, 12.9502, 0.83", "98.3994, -46.1643, 13.6493, 0.83", "105.62, -50.4261, 15.0731, 0.83", "109.106, -52.4167, 15.795, 1.11", "113.039, -54.5424, 16.5661, 1.11", "116.634, -56.5323, 17.0607, 0.55", "117.76, -57.1501, 17.2013, 0.55", "121.304, -59.324, 17.5957, 1.11", "124.08, -61.2173, 17.6919, 0.55", "126.51, -62.9117, 17.6415, 0.55", "131.769, -66.469, 16.8743, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "13.5304, -5.05549, 2.32526, 0.83", "14.8951, -5.79551, 4.45246, 0.83", "18.1343, -7.55212, 9.5019, 0.83", "20.2073, -8.67625, 12.7333, 0.83", "21.3029, -9.27037, 14.4411, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "6.70367, 15.4675, -1.99423, 1.38", "4.81543, 17.3832, -2.08583, 1.38", "2.97974, 19.2456, -2.17488, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.70367, 15.4675, -1.99423, 1.94", "10.3734, 18.9247, -3.74649, 1.94", "11.8667, 20.3314, -4.45951, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "36.3764, 19.6398, 0.0193083, 0.860546", "49.6517, 26.623, 0.0193083, 0.860546", "62.9271, 33.6062, 0.0193083, 0.860546" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-16.7839, 36.5413, 4.63851, 0.83", "-19.1516, 36.5233, 3.52725, 0.83", "-22.466, 36.4981, 1.97165, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-16.7839, 36.5413, 4.63851, 0.55", "-17.2613, 40.8684, 4.86533, 0.55", "-17.3812, 42.9226, 5.01324, 0.55", "-17.4776, 45.5245, 5.22019, 1.11", "-17.7047, 50.7422, 5.65218, 0.83", "-17.8135, 52.9531, 5.8273, 0.28", "-17.8542, 54.1543, 5.91063, 0.83", "-17.8974, 57.0893, 6.05475, 0.28", "-17.8825, 60.0157, 6.20797, 0.83", "-17.8084, 62.4955, 6.34848, 0.28", "-17.7225, 65.9907, 6.57595, 1.38", "-17.7362, 68.0614, 6.70452, 0.28", "-17.7631, 68.9874, 6.7439, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.68775, 5.89935, 11.4332, 0.83", "7.68552, 7.78908, 16.1228, 0.83", "9.16025, 8.84899, 18.4681, 0.83", "10.5679, 9.98985, 20.6366, 1.38", "12.4486, 11.756, 23.6678, 1.11", "13.4971, 12.8297, 25.3489, 1.11", "14.103, 13.4901, 26.3011, 1.11", "15.6374, 15.4177, 28.7485, 0.83", "17.0098, 17.218, 30.7401, 1.11", "18.3251, 18.9633, 32.4977, 0.55", "18.9946, 19.9131, 33.3731, 1.11", "20.5653, 22.206, 35.4412, 1.11", "22.5443, 24.9887, 37.9992, 1.66", "24.6519, 27.6935, 40.5914, 0.83", "25.7955, 29.0633, 41.9758, 1.66" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "34.0061, 69.841, -109.095, 0.28", "37.1007, 78.3135, -119.412, 0.28", "40.8889, 85.4212, -130.451, 0.28", "44.8485, 92.9566, -141.154, 0.28", "46.8506, 102.478, -150.855, 0.28", "47.6455, 110.96, -161.598, 0.28", "50.1041, 119.038, -172.38, 0.28", "51.7592, 127.635, -182.933, 0.28", "52.1893, 136.433, -193.454, 0.28", "51.4865, 145.408, -203.821, 0.28", "52.7262, 153.183, -215.02, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "34.0061, 69.841, -109.095, 0.28", "36.0723, 76.1633, -116.921, 0.28", "37.4119, 81.5734, -125.517, 0.28", "39.4864, 86.2915, -134.352, 0.28", "43.5014, 90.0989, -142.933, 0.28", "46.1412, 94.0841, -151.958, 0.28", "48.9486, 97.9742, -160.973, 0.28", "49.8022, 101.497, -170.513, 0.28", "49.5715, 105.594, -179.869, 0.28", "49.2025, 109.264, -189.389, 0.28", "49.3849, 111.069, -199.41, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.92542, -6.29288, -23.1446, 0.55", "6.46572, -7.52794, -28.385, 0.55", "6.65214, -7.95409, -30.1931, 0.55", "6.80062, -8.2935, -31.6332, 0.55", "7.97062, -9.90779, -38.145, 0.55", "8.58805, -11.7424, -44.6741, 0.55", "8.56616, -13.6258, -51.2169, 0.55", "9.67085, -15.8348, -57.5701, 0.55", "11.3254, -16.5041, -64.1367, 0.55", "12.3766, -16.6792, -70.8556, 0.55", "12.5974, -16.9497, -77.6496, 0.55", "13.9785, -17.9908, -84.2322, 0.55", "16.8114, -19.9938, -90.1083, 0.55", "19.5648, -22.5301, -95.8244, 0.55", "23.378, -24.5671, -101.115, 0.55", "27.2267, -26.9869, -106.225, 0.55", "30.6686, -29.9513, -111.351, 0.55", "34.0011, -32.3159, -116.829, 0.55", "37.0829, -36.3916, -121.43, 0.55", "41.5079, -40.7854, -124.401, 0.55", "45.8209, -44.8808, -127.887, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "5.92542, -6.29288, -23.1446, 0.55", "5.72577, -6.70131, -23.9742, 0.55", "4.90264, -8.38513, -27.3943, 0.55", "4.21988, -9.78184, -30.2313, 0.55", "3.45294, -12.6707, -36.3754, 0.55", "3.75276, -14.201, -43.0094, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-29.5895, -28.357, -1.89157, 0.55", "-31.284, -33.551, -3.82466, 0.55", "-33.1526, -39.5024, -5.79681, 0.28", "-33.9282, -42.4352, -6.57279, 0.28", "-34.5592, -45.6379, -7.39445, 0.28", "-35.4289, -51.7711, -8.92728, 0.55", "-35.985, -55.6932, -9.90752, 0.55", "-36.6013, -61.6133, -11.0012, 0.55", "-36.9999, -66.6105, -11.732, 0.55", "-37.1179, -71.6499, -12.5231, 0.55", "-36.9925, -74.0972, -12.9046, 0.28", "-37.7725, -88.0711, -14.1011, 0.28", "-36.3664, -101.999, -15.2058, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-29.5895, -28.357, -1.89157, 1.11", "-30.2731, -33.5971, -0.904768, 1.11", "-30.9384, -38.6967, 0.0555756, 1.11", "-31.6024, -43.7865, 1.01407, 1.11", "-32.1795, -48.2099, 1.84709, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.161636, -4.65879, 28.0349, 0.55", "0.78176, -5.69628, 31.7711, 0.55", "1.06169, -5.96039, 32.7842, 0.83", "4.48535, -8.67127, 43.9096, 0.28", "5.07067, -9.12842, 45.8819, 0.83", "6.36363, -10.2002, 50.4515, 0.55", "7.0503, -10.763, 53.0718, 1.11", "8.7664, -12.0771, 59.8159, 0.55", "9.86575, -12.8501, 64.0594, 1.38", "11.9438, -14.2893, 71.9373, 0.55", "13.0497, -15.0536, 76.0921, 1.38", "15.3209, -16.5098, 84.5916, 0.28", "15.9884, -16.9151, 87.0231, 1.11", "16.8391, -17.4596, 90.1068, 0.55", "17.9457, -18.0829, 93.8435, 1.66", "19.5793, -18.7263, 98.699, 0.55", "20.8258, -19.0296, 102.191, 0.83", "22.2141, -19.2422, 105.852, 0.28", "22.9368, -19.3125, 107.817, 1.11", "24.4721, -19.3486, 112.092, 0.55", "25.3853, -19.2615, 114.635, 1.38", "28.3892, -18.6433, 122.917, 0.28", "29.6192, -18.3732, 126.231, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.161636, -4.65879, 28.0349, 1.38", "0.91958, -4.87016, 29.6128, 1.38", "4.3251, -5.53593, 34.5829, 1.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "131.769, -66.469, 16.8743, 0.28", "134.099, -65.4053, 16.839, 0.28", "135.877, -64.5937, 16.8121, 0.55", "137.354, -63.9194, 16.7898, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "131.769, -66.469, 16.8743, 0.83", "133.112, -67.3369, 16.9502, 0.83", "134.558, -68.2887, 17.0327, 1.94", "135.693, -69.0485, 17.098, 1.11", "138.71, -71.053, 17.269, 0.83", "141.121, -72.6249, 17.402, 0.83", "142.766, -73.6699, 17.4897, 1.38", "144.412, -74.6296, 17.5924, 0.55", "146.019, -75.507, 17.7046, 1.94", "147.732, -76.424, 17.8389, 0.55", "148.928, -77.0426, 17.9648, 0.55", "150.305, -77.7277, 18.1406, 1.11", "153.307, -79.2594, 18.6196, 0.55", "153.919, -79.5683, 18.7587, 0.55", "155.929, -80.6261, 19.3239, 1.11", "157.269, -81.409, 19.8058, 0.55", "158.216, -81.9969, 20.1916, 0.55", "160.223, -83.3119, 21.1389, 0.83", "162.151, -84.6167, 22.1789, 0.28", "163.147, -85.2425, 22.7298, 1.38", "164.847, -86.2085, 23.6513, 0.55", "166.418, -86.9837, 24.4954, 0.55", "167.359, -87.4083, 25.0009, 0.83", "168.904, -87.9911, 25.8131, 0.55", "170.138, -88.3986, 26.4455, 0.55", "171.663, -88.8158, 27.2521, 1.66", "174.266, -89.4385, 28.6386, 0.55", "175.603, -89.7998, 29.4065, 0.28", "176.988, -90.2009, 30.2497, 0.83", "178.689, -90.7189, 31.4942, 0.55", "180.535, -91.3023, 33.0093, 0.55", "181.281, -91.5495, 33.6579, 1.38", "183.641, -92.3861, 35.7804, 0.28", "185.162, -92.9331, 37.2334, 1.11", "188.382, -94.1823, 40.4827, 0.28", "188.883, -94.3834, 41.0302, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "21.3029, -9.27037, 14.4411, 0.28", "22.7087, -11.1653, 15.7631, 0.28", "22.8417, -11.3383, 15.8819, 0.83", "23.8484, -12.5978, 16.6681, 0.83", "25.0711, -14.0868, 17.4991, 0.28", "25.7643, -14.8714, 17.9251, 0.83", "27.0824, -16.4005, 18.7112, 0.28", "27.5394, -16.9526, 18.9485, 0.55", "28.979, -18.7665, 19.7155, 0.28", "29.8372, -19.8853, 20.1577, 0.55", "31.5257, -22.1332, 21.0182, 0.28", "33.2136, -24.4934, 21.9825, 0.28", "34.6018, -26.4618, 22.7696, 1.11", "36.7355, -29.6123, 24.0605, 0.55", "37.7499, -31.1776, 24.726, 1.66", "38.715, -32.7416, 25.4105, 0.28", "39.4935, -34.108, 25.9978, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "21.3029, -9.27037, 14.4411, 0.55", "23.7206, -10.4685, 19.1413, 0.55", "28.0989, -12.638, 27.6526, 0.55", "29.6794, -13.4213, 30.7254, 0.55", "31.0493, -14.1002, 33.3885, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.97974, 19.2456, -2.17488, 0.55", "1.72813, 20.7879, -2.59608, 0.55", "-0.500179, 23.5338, -3.34597, 0.55", "-2.0485, 25.4417, -3.86702, 0.55", "-3.30078, 26.9849, -4.28845, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.97974, 19.2456, -2.17488, 0.83", "-1.19682, 21.4043, -4.76187, 0.83", "-2.77497, 22.2493, -5.62778, 0.83", "-4.69008, 23.4328, -6.53991, 0.83", "-7.80973, 25.4053, -7.97771, 0.83", "-12.5592, 28.3878, -10.0301, 0.83", "-14.1706, 29.3496, -10.6957, 1.38", "-16.8866, 31.0158, -11.6827, 0.83", "-20.2563, 33.2015, -13.0472, 0.83", "-23.2201, 35.2483, -14.4172, 0.83", "-24.9151, 36.4758, -15.307, 1.38", "-27.8446, 38.7938, -17.1766, 0.55", "-30.0884, 40.6978, -18.9809, 0.83", "-32.264, 42.6529, -21.1835, 0.83", "-34.0261, 44.3294, -23.4165, 0.83", "-35.6335, 46.1061, -25.8136, 1.38", "-38.0271, 49.0602, -29.9314, 0.55", "-38.3684, 49.5122, -30.5697, 0.55", "-39.1869, 50.53, -31.9868, 1.11", "-40.9781, 52.651, -34.5897, 0.55", "-41.9888, 53.8991, -35.8197, 0.55", "-43.3993, 55.6746, -37.1324, 1.11", "-44.8144, 57.4649, -37.9874, 0.55", "-46.5483, 59.734, -38.7544, 1.11", "-47.8837, 61.5049, -39.1974, 0.28", "-49.1703, 63.2597, -39.4816, 0.83", "-50.9849, 65.7593, -39.822, 0.28", "-52.8521, 68.4546, -40.022, 0.28", "-54.6372, 71.2219, -40.1248, 1.11", "-61.3983, 76.217, -46.0538, 1.11", "-67.5388, 81.2046, -52.6292, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "11.8667, 20.3314, -4.45951, 1.11", "13.3046, 20.9521, -3.71693, 1.11", "16.1917, 22.2, -2.09019, 0.83", "19.0532, 23.4301, -0.415919, 0.83", "21.4396, 24.4164, 1.04855, 0.83", "22.57, 24.8651, 1.74096, 0.55", "24.8394, 25.7651, 3.15634, 1.11", "26.7855, 26.5516, 4.45696, 0.55", "28.2575, 27.122, 5.4712, 1.38", "29.99, 27.821, 6.71557, 0.55", "31.2457, 28.3576, 7.59937, 0.55", "33.4579, 29.3956, 9.16045, 0.83", "35.1975, 30.2963, 10.3365, 0.28", "35.8504, 30.6657, 10.7831, 0.83", "37.174, 31.5054, 11.6911, 0.28", "39.0532, 32.7651, 12.9579, 1.11", "40.8709, 34.018, 14.2576, 0.28", "41.8936, 34.7209, 15.0319, 1.66", "44.1791, 36.2822, 16.9383, 0.55", "45.1751, 36.9378, 17.8023, 0.55", "46.0326, 37.4647, 18.5443, 0.55", "48.1861, 38.6904, 20.3861, 1.38", "49.718, 39.4775, 21.6313, 0.28", "51.4235, 40.2576, 23.0687, 0.83", "52.8964, 40.8413, 24.3695, 1.11", "53.7892, 41.1454, 25.1531, 1.11", "54.5335, 41.371, 25.7767, 0.28", "55.4664, 41.6004, 26.5375, 0.83", "59.5807, 42.446, 29.8894, 0.28", "61.5104, 42.7627, 31.5174, 1.38", "62.4449, 42.8932, 32.3469, 0.28", "63.5247, 43.0711, 33.3573, 1.11", "65.5163, 43.4873, 35.3792, 0.28", "65.756, 43.5519, 35.6338, 0.55", "67.4648, 44.1492, 37.4617, 0.28", "68.0771, 44.453, 38.1969, 1.38", "70.5262, 46.0177, 41.4744, 0.28", "71.7124, 47.0736, 43.4743, 0.83", "72.295, 47.6939, 44.5536, 0.28", "72.6624, 48.1109, 45.2635, 1.11", "74.157, 49.9186, 48.2331, 0.28", "74.6264, 50.5064, 49.1868, 1.11", "77.7191, 54.5026, 55.4585, 0.28", "78.1884, 55.1216, 56.389, 1.38", "79.4731, 56.8824, 58.9105, 0.28", "79.8141, 57.3473, 59.5705, 1.38", "81.0782, 59.0466, 61.9224, 0.28", "81.2825, 59.3167, 62.283, 0.83", "82.9474, 61.5773, 64.6415, 0.55", "83.4713, 62.4159, 65.5089, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "11.8667, 20.3314, -4.45951, 1.38", "12.8863, 22.1313, -6.88908, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "25.7955, 29.0633, 41.9758, 0.55", "26.9736, 28.8163, 42.5645, 0.55", "28.3347, 28.5561, 43.2135, 0.55", "30.98, 28.109, 44.373, 0.55", "32.5913, 27.8661, 45.0588, 1.11", "35.4333, 27.4173, 46.0675, 0.55", "37.5191, 27.0962, 46.7432, 0.55", "38.7538, 26.9016, 47.1065, 0.28", "40.0621, 26.7402, 47.4598, 0.83", "42.1692, 26.5013, 47.9542, 0.55", "45.0472, 26.1874, 48.6225, 0.83", "47.4316, 25.9548, 49.1627, 0.28", "50.1796, 25.7201, 49.8631, 0.83", "52.7687, 25.5413, 50.5789, 0.28", "53.1704, 25.522, 50.7052, 0.28", "54.5126, 25.5171, 51.1614, 0.83", "55.9771, 25.6065, 51.7307, 0.28", "57.128, 25.7305, 52.1923, 0.83", "58.4904, 25.9702, 52.8228, 0.28", "59.5504, 26.1561, 53.2754, 0.83", "60.5081, 26.3431, 53.6871, 0.28", "61.8022, 26.6319, 54.238, 0.83", "63.8402, 27.135, 55.2017, 0.28", "64.81, 27.3952, 55.7162, 0.55", "66.7688, 28.0538, 56.8725, 0.28" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "25.7955, 29.0633, 41.9758, 0.83", "26.9123, 30.6699, 43.8767, 0.83", "27.9592, 32.1866, 45.8573, 0.83", "29.0273, 33.7208, 47.933, 0.55", "29.3995, 34.2516, 48.8097, 0.55", "30.3678, 35.5828, 51.1453, 0.83", "31.1726, 36.6919, 53.1438, 0.55", "31.9164, 37.669, 55.0214, 0.83", "32.3201, 38.2141, 56.0034, 1.38", "34.6681, 41.6396, 61.7562, 0.55", "35.8298, 43.4833, 64.6148, 1.38", "37.0528, 45.6921, 67.5856, 0.55", "37.2791, 46.1735, 68.1223, 1.11", "38.1768, 48.5076, 70.2964, 0.55", "38.5877, 49.891, 71.376, 0.83", "38.7867, 50.8187, 71.9317, 0.83", "39.1618, 53.3142, 73.3679, 0.55", "39.5187, 56.2849, 75.0166, 0.83", "39.759, 58.7277, 76.4389, 1.11", "39.9272, 60.9139, 77.8103, 0.55", "39.9581, 61.3729, 78.1105, 0.83", "40.0955, 63.2486, 79.4031, 0.28", "40.2728, 65.4753, 80.9823, 0.83" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-36.3664, -101.999, -15.2058, 0.28", "-37.6021, -112.681, -17.8439, 0.28", "-36.7229, -123.518, -20.005, 0.28", "-35.4333, -134.46, -21.3158, 0.28", "-33.978, -145.091, -24.0508, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-36.3664, -101.999, -15.2058, 0.28", "-37.3209, -111.931, -17.3642, 0.28", "-37.7522, -121.965, -19.2338, 0.28", "-36.5457, -132.067, -20.259, 0.28", "-35.0831, -142.067, -21.7615, 0.28", "-32.7366, -151.914, -23.1008, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-32.1795, -48.2099, 1.84709, 1.11", "-32.3318, -50.1078, 3.21406, 1.11", "-32.5532, -52.065, 4.7846, 1.11", "-32.9686, -55.7372, 7.73138, 1.11", "-33.2079, -57.8534, 9.4295, 1.11", "-33.4333, -59.847, 11.0294, 1.11", "-33.6637, -61.8847, 12.6645, 1.38", "-34.0317, -65.2793, 15.5581, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-32.1795, -48.2099, 1.84709, 0.83", "-32.6641, -52.1798, 1.65411, 0.83", "-33.4679, -57.0101, 1.43366, 0.83", "-34.3354, -61.7845, 1.24603, 0.83", "-36.2907, -71.9414, 0.889965, 0.83", "-37.6024, -78.9781, 0.66065, 0.83", "-38.7001, -84.688, 0.497842, 0.83", "-39.8114, -90.0638, 0.525397, 0.83", "-40.5658, -94.1082, 0.657481, 0.83", "-41.0216, -96.7249, 0.752459, 0.83", "-41.6148, -100.536, 1.15227, 0.83", "-42.5976, -109.039, 2.25269, 0.83", "-43.265, -115.147, 3.22738, 0.55", "-43.4571, -119.661, 4.0666, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "4.3251, -5.53593, 34.5829, 0.55", "3.40766, -6.03445, 38.8924, 0.55", "2.07839, -6.65014, 45.5725, 1.11", "0.93783, -7.1748, 51.3559, 0.83", "-0.170226, -7.59995, 56.5475, 1.66", "-2.36834, -8.22583, 66.3921, 1.11", "-3.15697, -8.3943, 69.8316, 1.38", "-5.38453, -8.55848, 78.5816, 0.83", "-6.35066, -8.60726, 82.0963, 1.66", "-8.33078, -8.70885, 88.4559, 0.83", "-9.32177, -8.80111, 91.2102, 0.83", "-10.6155, -9.07768, 94.1562, 1.38", "-11.885, -9.40748, 96.5554, 1.38", "-14.2817, -9.96634, 100.092, 0.83", "-17.2724, -10.6234, 103.853, 0.55", "-17.9597, -10.8104, 104.668, 0.55", "-19.7322, -11.4019, 106.852, 0.83", "-21.7833, -12.2153, 109.565, 0.55", "-22.586, -12.5768, 110.825, 0.55", "-24.7096, -13.6, 114.541, 1.11", "-27.3519, -14.9671, 119.514, 0.55", "-28.8993, -15.7486, 122.414, 0.83", "-30.8239, -16.7228, 125.857, 1.38", "-33.8774, -18.4409, 131.551, 0.55", "-34.6161, -18.8908, 132.972, 0.83", "-36.3503, -19.9726, 136.271, 0.83", "-37.9864, -20.7464, 138.864, 0.55", "-39.398, -21.2045, 140.778, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "4.3251, -5.53593, 34.5829, 0.83", "8.03471, -6.64098, 38.0488, 0.83", "11.6329, -7.75384, 41.5338, 0.83", "15.9291, -9.08254, 45.6947, 0.83", "19.2955, -10.1237, 48.9553, 0.83", "23.6203, -11.4614, 53.1441, 0.83", "28.737, -13.0439, 58.0998, 1.66", "33.258, -14.5437, 62.9976, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.30078, 26.9849, -4.28845, 0.55", "-2.11779, 29.4444, -1.69988, 0.55", "-0.581428, 32.7743, 1.48631, 0.28", "-0.340614, 33.3223, 1.9823, 0.83", "3.00538, 40.6583, 8.27327, 0.28", "3.60084, 41.9147, 9.29546, 1.38", "8.4705, 51.9926, 16.6211, 0.28", "9.29585, 53.6799, 17.6983, 1.66", "11.9447, 58.9142, 20.6482, 0.28", "13.3203, 61.4917, 21.97, 0.28", "14.4009, 63.3969, 22.753, 1.66", "17.9394, 69.4314, 24.9454, 0.28", "19.913, 72.5919, 25.7917, 1.38", "21.883, 75.6705, 26.6141, 0.28", "22.8153, 77.1065, 26.9355, 0.55", "24.7384, 80.299, 27.7757, 0.28", "25.368, 81.3676, 28.1054, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.30078, 26.9849, -4.28845, 0.28", "-8.36687, 29.9583, -4.60562, 0.28", "-9.35903, 30.5724, -4.75476, 0.83", "-11.5935, 32.0056, -5.12045, 0.28", "-12.889, 32.9216, -5.19883, 0.83", "-15.2875, 34.6746, -5.27119, 0.28", "-16.2289, 35.3843, -5.28548, 0.83", "-20.6101, 39.0718, -5.27864, 0.28", "-21.6467, 39.9941, -5.25776, 0.83", "-30.8964, 47.5332, -4.54484, 0.28", "-31.2274, 47.7873, -4.50715, 1.38", "-32.0666, 48.4151, -4.36653, 1.38", "-33.9663, 49.7903, -3.97581, 0.28", "-34.7037, 50.3443, -3.81074, 0.55", "-43.077, 56.7068, -2.15724, 0.28", "-44.5745, 57.7916, -1.88072, 1.11", "-48.7113, 60.7188, -1.12222, 0.28", "-49.3983, 61.1895, -0.998127, 0.83", "-54.7583, 64.7781, -0.0655459, 0.28", "-54.9995, 64.9576, -0.0284706, 0.55", "-63.0024, 72.0055, 0.223788, 0.55", "-70.4794, 79.3631, 2.2164, 0.55", "-76.9268, 87.9159, 2.65739, 0.55", "-82.2312, 97.2651, 2.4187, 0.55", "-88.8371, 105.458, 0.456064, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "12.8863, 22.1313, -6.88908, 0.83", "16.4123, 21.5889, -9.14814, 0.83", "20.7927, 21.0375, -11.7312, 0.83", "22.8162, 20.9358, -12.7747, 0.83", "26.7409, 20.8569, -14.7046, 0.55", "28.383, 20.9348, -15.4228, 0.55", "31.5602, 21.1491, -16.7588, 0.83", "35.4201, 21.5993, -18.173, 0.83", "39.3554, 22.2537, -19.5737, 0.83", "41.7157, 22.6628, -20.3828, 1.11", "47.2888, 23.6779, -22.0787, 1.11", "50.54, 24.3197, -23.1243, 0.55", "52.7254, 24.767, -23.8345, 0.55", "54.6395, 25.1426, -24.5001, 1.11", "57.5815, 25.646, -25.5494, 0.55", "59.8317, 26.0447, -26.3173, 0.55", "62.7509, 26.5339, -27.2918, 1.11", "64.6483, 26.8904, -27.8256, 0.55", "66.9668, 27.2819, -28.4077, 0.28", "69.9462, 27.732, -29.0295, 0.83", "75.6488, 28.354, -29.8657, 0.28", "77.6418, 28.4368, -30.0435, 0.55", "79.8878, 28.3415, -30.0821, 0.28", "81.3743, 28.1675, -30.0467, 0.28", "83.4303, 27.7295, -29.8885, 1.11", "86.9599, 26.73, -29.4983, 0.55", "89.9946, 25.6129, -29.021, 1.66", "93.8931, 24.0545, -28.3978, 0.28", "95.5379, 23.3676, -28.1466, 0.28", "98.3817, 22.2219, -27.6785, 0.83", "109.09, 21.9392, -28.9111, 0.83", "119.763, 20.4218, -28.5122, 0.83", "130.504, 21.013, -27.758, 0.83", "141.031, 21.2069, -25.4295, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.8863, 22.1313, -6.88908, 1.11", "13.044, 24.3201, -7.20526, 1.11", "13.3486, 26.8832, -7.64102, 0.83", "13.745, 28.8756, -8.00745, 0.83", "14.2828, 31.2836, -8.49055, 1.38", "15.2561, 35.8585, -9.61679, 0.83", "15.7631, 38.3801, -10.3492, 0.83", "16.1063, 40.0431, -10.914, 0.83", "16.8944, 44.215, -12.7492, 0.83", "17.1509, 45.6716, -13.4886, 0.83", "17.6493, 49.121, -15.4897, 0.83", "17.8855, 51.3192, -16.8707, 1.11", "18.0044, 52.8149, -17.8047, 1.11", "18.3153, 56.7239, -20.1045, 0.83", "18.5245, 58.8471, -21.304, 0.83", "18.8741, 61.2482, -22.5743, 1.11", "19.0882, 62.6378, -23.252, 0.28", "19.3604, 64.5684, -24.163, 0.83", "19.6735, 69.536, -26.1727, 0.83", "19.7463, 72.6416, -27.1913, 1.66", "19.7297, 76.6064, -28.3544, 0.55", "19.6786, 79.4216, -29.0903, 0.55", "19.5744, 82.4173, -29.8129, 0.55", "19.0035, 92.7735, -32.3746, 0.28", "18.885, 94.6315, -32.8344, 1.66", "18.6926, 99.5432, -33.9865, 0.28", "18.6863, 100.143, -34.1109, 0.83", "18.7113, 101.756, -34.4317, 0.28", "18.8246, 105.924, -35.2037, 1.66", "19.0618, 111.143, -36.2126, 0.28", "19.1087, 112.679, -36.4837, 1.38", "19.253, 120.385, -37.576, 0.28", "19.2008, 121.905, -37.7472, 1.66", "18.834, 126.158, -38.0704, 0.28", "18.7221, 126.83, -38.1342, 0.83", "17.5431, 131.97, -38.8203, 0.28", "17.306, 132.891, -38.9668, 0.83", "15.0724, 140.547, -40.5367, 0.28", "14.4291, 142.592, -41.0102, 1.11", "10.9087, 152.488, -43.6677, 0.28", "10.8004, 152.766, -43.7505, 0.83", "12.7158, 163.599, -45.0035, 0.83", "15.0679, 174.418, -45.2749, 0.83", "17.7029, 184.914, -47.5342, 0.83", "21.6318, 195.191, -48.5635, 0.83", "26.0746, 205.158, -50.215, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "33.258, -14.5437, 62.9976, 0.28", "34.2869, -15.8495, 63.9942, 0.28", "34.7393, -16.445, 64.5202, 0.83", "35.7849, -17.7104, 65.791, 0.28", "36.2157, -18.1871, 66.368, 0.83", "37.7506, -19.9435, 68.6953, 0.28", "37.9985, -20.2518, 69.1227, 0.83", "39.0034, -21.5908, 71.2316, 0.28", "39.9175, -22.8171, 73.2662, 0.83", "40.9539, -24.2639, 75.7654, 0.28", "41.8573, -25.6346, 78.168, 1.38", "42.5822, -26.808, 80.2877, 0.28", "43.0694, -27.6181, 81.819, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "33.258, -14.5437, 62.9976, 0.55", "37.3787, -14.974, 67.0184, 0.55", "38.001, -15.0256, 67.6723, 0.28", "40.1936, -15.2343, 70.0104, 0.83", "44.5078, -15.6768, 74.6001, 0.83", "47.9918, -16.0082, 78.1998, 0.83", "50.1968, -16.1989, 80.4162, 1.38", "54.3763, -16.429, 84.585, 0.55", "55.6643, -16.4822, 85.819, 0.55", "58.8896, -16.576, 88.6897, 0.55", "62.0662, -16.6227, 91.2391, 1.11", "65.429, -16.6557, 93.6304, 0.55", "68.3893, -16.6368, 95.5797, 1.38", "71.5694, -16.5969, 97.4731, 1.11", "75.0208, -16.4715, 99.4406, 0.55", "78.575, -16.2418, 101.41, 0.55", "80.4693, -16.0803, 102.481, 0.55", "82.0809, -15.9027, 103.446, 0.83", "84.3645, -15.5883, 104.906, 0.83", "85.8026, -15.3252, 106.005, 0.83", "88.2621, -14.7187, 108.306, 0.55", "89.3573, -14.3744, 109.517, 0.83", "91.1727, -13.6294, 111.647, 0.55", "91.7834, -13.3415, 112.412, 0.83", "94.2146, -12.0521, 115.51, 0.55", "95.2872, -11.5421, 116.743, 0.55", "96.8544, -10.8183, 118.437, 0.55", "97.2881, -10.6229, 118.866, 0.83", "99.7789, -9.59906, 121.198, 0.55", "102.601, -8.54711, 123.714, 1.11", "106.995, -7.00836, 127.44, 0.55", "109.104, -6.32204, 129.171, 1.11", "112.607, -5.24412, 131.991, 0.55", "114.673, -4.65723, 133.626, 0.83", "117.116, -4.02143, 135.477, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_39", "dend_36", "dend_27", "dend_26", "dend_18", "dend_11", "dend_0", "dend_51", "dend_47", "dend_43", "dend_40", "dend_38", "dend_37", "dend_35", "dend_28", "dend_19", "dend_15", "dend_12", "dend_6", "dend_1", "dend_53", "dend_52", "dend_48", "dend_45", "dend_44", "dend_42", "dend_41", "dend_32", "dend_29", "dend_25", "dend_20", "dend_17", "dend_16", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_50", "dend_49", "dend_34", "dend_33", "dend_31", "dend_30", "dend_24", "dend_21", "dend_10", "dend_9", "dend_4", "dend_3", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_39", "dend_36", "dend_27", "dend_26", "dend_18", "dend_11", "dend_0", "dend_51", "dend_47", "dend_43", "dend_40", "dend_38", "dend_37", "dend_35", "dend_28", "dend_19", "dend_15", "dend_12", "dend_6", "dend_1", "dend_53", "dend_52", "dend_48", "dend_45", "dend_44", "dend_42", "dend_41", "dend_32", "dend_29", "dend_25", "dend_20", "dend_17", "dend_16", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_50", "dend_49", "dend_34", "dend_33", "dend_31", "dend_30", "dend_24", "dend_21", "dend_10", "dend_9", "dend_4", "dend_3", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_39", "dend_36", "dend_27", "dend_26", "dend_18", "dend_11", "dend_0", "axon_0", "dend_51", "dend_47", "dend_43", "dend_40", "dend_38", "dend_37", "dend_35", "dend_28", "dend_19", "dend_15", "dend_12", "dend_6", "dend_1", "axon_1", "dend_53", "dend_52", "dend_48", "dend_45", "dend_44", "dend_42", "dend_41", "dend_32", "dend_29", "dend_25", "dend_20", "dend_17", "dend_16", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_50", "dend_49", "dend_34", "dend_33", "dend_31", "dend_30", "dend_24", "dend_21", "dend_10", "dend_9", "dend_4", "dend_3", "dend_23", "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_NBC_2d5f9c7a57_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_46
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_27
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, axon_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, axon_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.4999996128858968)
    connect dend_39(0), soma_0(0.4999996128858968)
    connect dend_36(0), soma_0(0.4999996128858968)
    connect dend_27(0), soma_0(0.4999996128858968)
    connect dend_26(0), soma_0(0.4999996128858968)
    connect dend_18(0), soma_0(0.4999996128858968)
    connect dend_11(0), soma_0(0.4999996128858968)
    connect dend_0(0), soma_0(0.4999996128858968)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.3022, -4.91444, 0.0966793, 4.52114 ) }
    soma_0 { pt3dadd( -9.29583, -4.38505, 0.0928107, 5.29403 ) }
    soma_0 { pt3dadd( -8.28943, -3.85565, 0.0889422, 6.87895 ) }
    soma_0 { pt3dadd( -7.28303, -3.32626, 0.0850736, 8.2055 ) }
    soma_0 { pt3dadd( -6.27664, -2.79687, 0.0812051, 9.69593 ) }
    soma_0 { pt3dadd( -5.27024, -2.26748, 0.0773365, 11.1864 ) }
    soma_0 { pt3dadd( -4.26385, -1.73809, 0.073468, 12.1576 ) }
    soma_0 { pt3dadd( -3.25745, -1.20869, 0.0695994, 12.1028 ) }
    soma_0 { pt3dadd( -2.25106, -0.679302, 0.0657309, 12.5691 ) }
    soma_0 { pt3dadd( -1.24466, -0.14991, 0.0618623, 13.5271 ) }
    soma_0 { pt3dadd( -0.238266, 0.379482, 0.0579938, 14.6432 ) }
    soma_0 { pt3dadd( 0.76813, 0.908874, 0.0541252, 15.6577 ) }
    soma_0 { pt3dadd( 1.77453, 1.43827, 0.0502567, 15.7754 ) }
    soma_0 { pt3dadd( 2.78092, 1.96766, 0.0463882, 15.433 ) }
    soma_0 { pt3dadd( 3.78732, 2.49705, 0.0425196, 14.9368 ) }
    soma_0 { pt3dadd( 4.79371, 3.02644, 0.0386511, 14.4352 ) }
    soma_0 { pt3dadd( 5.80011, 3.55583, 0.0347825, 13.7953 ) }
    soma_0 { pt3dadd( 6.8065, 4.08523, 0.030914, 12.9353 ) }
    soma_0 { pt3dadd( 7.8129, 4.61462, 0.0270454, 10.4207 ) }
    soma_0 { pt3dadd( 8.81929, 5.14401, 0.0231769, 6.43383 ) }
    soma_0 { pt3dadd( 9.82569, 5.6734, 0.0193083, 3.7421 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.0327, 0.453743, 12.0695, 1.38 ) }
    dend_46 { pt3dadd( 1.98332, 2.73122, 7.99215, 1.38 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 23/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 4.5927, -1.21701, -10.1505, 1.66 ) }
    dend_39 { pt3dadd( 4.91608, -1.57013, -11.7329, 1.66 ) }
    dend_39 { pt3dadd( 6.61496, -3.4253, -20.0466, 1.66 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 26/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -8.7473, 1.29425, 5.4595, 1.66 ) }
    dend_36 { pt3dadd( -10.9385, 1.94194, 7.05144, 1.66 ) }
    dend_36 { pt3dadd( -14.5645, 2.80736, 9.51484, 1.66 ) }
    dend_36 { pt3dadd( -17.2618, 3.26133, 11.0646, 1.66 ) }
    dend_36 { pt3dadd( -20.6492, 3.83144, 13.0109, 1.66 ) }
    dend_36 { pt3dadd( -24.3889, 4.46088, 15.1596, 1.66 ) }
    dend_36 { pt3dadd( -29.6684, 5.34946, 18.193, 1.66 ) }
    dend_36 { pt3dadd( -33.0971, 5.81172, 20.1634, 1.66 ) }
    dend_36 { pt3dadd( -38.498, 6.26218, 22.9676, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 35/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -10.3073, -6.10625, 1.9395, 2.77 ) }
    dend_27 { pt3dadd( -13.807, -7.08651, 0.7009, 2.77 ) }
    dend_27 { pt3dadd( -19.6331, -8.71837, -1.36105, 2.77 ) }
    dend_27 { pt3dadd( -24.4422, -10.0654, -3.06308, 2.49 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 39/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -11.2873, -5.5015, 6.9695, 1.11 ) }
    dend_26 { pt3dadd( -13.4966, -7.45603, 8.69963, 1.11 ) }
    dend_26 { pt3dadd( -15.5423, -9.25665, 10.2434, 1.11 ) }
    dend_26 { pt3dadd( -17.8976, -11.3307, 12.0352, 1.11 ) }
    dend_26 { pt3dadd( -19.2962, -12.5403, 13.0796, 1.38 ) }
    dend_26 { pt3dadd( -21.759, -14.6455, 15.0142, 0.83 ) }
    dend_26 { pt3dadd( -23.7903, -16.4061, 16.6986, 1.11 ) }
    dend_26 { pt3dadd( -24.5875, -17.1245, 17.4208, 1.11 ) }
    dend_26 { pt3dadd( -26.4653, -18.7732, 19.132, 1.11 ) }
    dend_26 { pt3dadd( -27.3039, -19.5308, 19.9423, 1.11 ) }
    dend_26 { pt3dadd( -29.0504, -21.1613, 21.7864, 1.11 ) }
    dend_26 { pt3dadd( -30.0413, -22.1664, 22.8793, 1.11 ) }
    dend_26 { pt3dadd( -30.6523, -22.8437, 23.5931, 1.11 ) }
    dend_26 { pt3dadd( -31.6525, -23.9574, 24.7261, 1.66 ) }
    dend_26 { pt3dadd( -34.0126, -26.4921, 27.3275, 1.66 ) }
    dend_26 { pt3dadd( -35.9513, -28.5614, 29.4643, 1.38 ) }
    dend_26 { pt3dadd( -38.0457, -30.9, 31.6944, 1.38 ) }
    dend_26 { pt3dadd( -39.5578, -32.6623, 33.3404, 1.38 ) }
    dend_26 { pt3dadd( -41.3434, -34.8639, 35.431, 1.11 ) }
    dend_26 { pt3dadd( -42.8354, -36.7984, 37.2848, 1.11 ) }
    dend_26 { pt3dadd( -45.0737, -39.7898, 40.2302, 1.11 ) }
    dend_26 { pt3dadd( -47.4217, -43.064, 43.4843, 0.83 ) }
    dend_26 { pt3dadd( -48.8209, -45.0889, 45.5345, 0.83 ) }
    dend_26 { pt3dadd( -50.8702, -48.2207, 48.5992, 1.38 ) }
    dend_26 { pt3dadd( -51.9668, -50.0216, 50.291, 1.38 ) }
    dend_26 { pt3dadd( -53.1693, -52.0599, 52.1298, 0.83 ) }
    dend_26 { pt3dadd( -54.3139, -53.9549, 53.8088, 0.83 ) }
    dend_26 { pt3dadd( -55.1511, -55.3116, 55.0237, 1.11 ) }
    dend_26 { pt3dadd( -56.1805, -56.9686, 56.4291, 0.83 ) }
    dend_26 { pt3dadd( -57.0866, -58.4046, 57.5869, 1.11 ) }
    dend_26 { pt3dadd( -57.9109, -59.7156, 58.6549, 0.55 ) }
    dend_26 { pt3dadd( -58.8303, -61.1685, 59.8231, 1.11 ) }
    dend_26 { pt3dadd( -59.8937, -62.8002, 61.1879, 0.55 ) }
    dend_26 { pt3dadd( -60.8787, -64.2611, 62.4082, 1.94 ) }
    dend_26 { pt3dadd( -62.2013, -66.2064, 64.065, 0.55 ) }
    dend_26 { pt3dadd( -63.0209, -67.4244, 65.1183, 0.55 ) }
    dend_26 { pt3dadd( -64.0084, -68.9633, 66.4374, 0.55 ) }
    dend_26 { pt3dadd( -64.9141, -70.5132, 67.7587, 1.11 ) }
    dend_26 { pt3dadd( -66.218, -73.0478, 69.7424, 0.28 ) }
    dend_26 { pt3dadd( -66.605, -73.976, 70.3606, 1.11 ) }
    dend_26 { pt3dadd( -67.2156, -75.9379, 71.6767, 0.28 ) }
    dend_26 { pt3dadd( -67.4106, -76.8176, 72.2934, 0.55 ) }
    dend_26 { pt3dadd( -67.6676, -78.41, 73.5029, 0.28 ) }
    dend_26 { pt3dadd( -67.786, -79.3713, 74.2163, 0.28 ) }
    dend_26 { pt3dadd( -67.9794, -81.524, 75.8107, 1.66 ) }
    dend_26 { pt3dadd( -68.377, -85.4411, 78.6845, 0.28 ) }
    dend_26 { pt3dadd( -68.5317, -86.8663, 79.729, 0.28 ) }
    dend_26 { pt3dadd( -68.7282, -88.3305, 80.8941, 0.83 ) }
    dend_26 { pt3dadd( -68.9996, -90.1633, 82.5099, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 88/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -3.7273, -6.39325, 11.6495, 2.77 ) }
    dend_18 { pt3dadd( -4.20603, -8.00846, 11.6495, 2.77 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 90/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.6827, -2.775, 1.6195, 2.49 ) }
    dend_11 { pt3dadd( 10.0217, -3.40494, 1.81445, 2.22 ) }
    dend_11 { pt3dadd( 12.1522, -4.40714, 2.12461, 2.22 ) }
    dend_11 { pt3dadd( 13.5304, -5.05549, 2.32526, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 94/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.0827, 8.87925, -4.97829E-4, 2.22 ) }
    dend_0 { pt3dadd( 6.19094, 10.0276, -0.348021, 2.22 ) }
    dend_0 { pt3dadd( 6.33265, 11.531, -0.802994, 2.22 ) }
    dend_0 { pt3dadd( 6.4783, 13.0764, -1.27065, 2.22 ) }
    dend_0 { pt3dadd( 6.70367, 15.4675, -1.99423, 2.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 99/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.82569, 5.6734, 0.0193083, 0.896597 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    axon_0 { pt3dadd( 23.101, 12.6566, 0.0193083, 0.896597 ) }
    axon_0 { pt3dadd( 36.3764, 19.6398, 0.0193083, 0.896597 ) }
    // Section: dend_51, id: dend_51, parent: dend_46 (entry count 2/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 1.98332, 2.73122, 7.99215, 0.83 ) }
    dend_51 { pt3dadd( -1.51009, 9.58515, 6.63368, 0.83 ) }
    dend_51 { pt3dadd( -3.22849, 12.9392, 6.05082, 0.83 ) }
    dend_51 { pt3dadd( -4.48597, 15.3621, 5.64234, 0.83 ) }
    dend_51 { pt3dadd( -5.34632, 16.9671, 5.38735, 1.38 ) }
    dend_51 { pt3dadd( -7.54275, 20.974, 4.9646, 0.83 ) }
    dend_51 { pt3dadd( -9.1064, 23.8266, 4.66364, 1.38 ) }
    dend_51 { pt3dadd( -11.4925, 27.8698, 4.61463, 0.83 ) }
    dend_51 { pt3dadd( -13.9309, 31.8945, 4.60835, 0.83 ) }
    dend_51 { pt3dadd( -14.9601, 33.5332, 4.64343, 0.83 ) }
    dend_51 { pt3dadd( -16.7839, 36.5413, 4.63851, 1.94 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 13/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 1.98332, 2.73122, 7.99215, 1.38 ) }
    dend_47 { pt3dadd( 2.76101, 3.64225, 8.98164, 1.38 ) }
    dend_47 { pt3dadd( 3.75913, 4.81151, 10.2516, 1.38 ) }
    dend_47 { pt3dadd( 4.68775, 5.89935, 11.4332, 1.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 17/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 6.61496, -3.4253, -20.0466, 0.83 ) }
    dend_43 { pt3dadd( 7.38828, 0.230559, -26.9138, 0.83 ) }
    dend_43 { pt3dadd( 7.90131, 2.65594, -31.4697, 0.83 ) }
    dend_43 { pt3dadd( 8.54944, 5.71997, -37.2253, 0.83 ) }
    dend_43 { pt3dadd( 8.75517, 6.69254, -39.0521, 0.55 ) }
    dend_43 { pt3dadd( 9.35885, 9.54645, -44.4129, 0.55 ) }
    dend_43 { pt3dadd( 9.90395, 12.1232, -49.2533, 0.55 ) }
    dend_43 { pt3dadd( 10.8344, 18.0774, -60.5798, 0.55 ) }
    dend_43 { pt3dadd( 10.8892, 26.0585, -70.6901, 0.55 ) }
    dend_43 { pt3dadd( 12.0485, 33.3248, -81.2399, 0.55 ) }
    dend_43 { pt3dadd( 15.0026, 42.7322, -89.6077, 0.55 ) }
    dend_43 { pt3dadd( 20.3001, 53.0311, -95.4491, 0.55 ) }
    dend_43 { pt3dadd( 25.9235, 62.3997, -102.375, 0.55 ) }
    dend_43 { pt3dadd( 34.0061, 69.841, -109.095, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 6.61496, -3.4253, -20.0466, 1.66 ) }
    dend_40 { pt3dadd( 6.24557, -4.96147, -21.7063, 1.66 ) }
    dend_40 { pt3dadd( 5.92542, -6.29288, -23.1446, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 34/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -38.498, 6.26218, 22.9676, 0.55 ) }
    dend_38 { pt3dadd( -40.7038, 5.37677, 23.4562, 0.55 ) }
    dend_38 { pt3dadd( -46.569, 2.87772, 24.6836, 0.55 ) }
    dend_38 { pt3dadd( -47.6321, 2.45247, 24.8816, 0.55 ) }
    dend_38 { pt3dadd( -50.5876, 1.34064, 25.3832, 0.55 ) }
    dend_38 { pt3dadd( -51.4043, 1.02827, 25.5181, 0.83 ) }
    dend_38 { pt3dadd( -54.5022, -0.195524, 26.0855, 0.55 ) }
    dend_38 { pt3dadd( -57.7772, -1.5496, 26.6869, 1.11 ) }
    dend_38 { pt3dadd( -61.4255, -3.08828, 27.3474, 0.55 ) }
    dend_38 { pt3dadd( -63.847, -4.13351, 27.7206, 1.94 ) }
    dend_38 { pt3dadd( -66.0571, -5.06082, 27.9881, 1.94 ) }
    dend_38 { pt3dadd( -68.722, -6.16332, 28.2426, 0.55 ) }
    dend_38 { pt3dadd( -70.338, -6.88798, 28.3051, 0.55 ) }
    dend_38 { pt3dadd( -72.9435, -8.0734, 28.2674, 0.28 ) }
    dend_38 { pt3dadd( -75.5791, -9.28261, 28.0737, 1.94 ) }
    dend_38 { pt3dadd( -79.3909, -10.8974, 27.6353, 0.55 ) }
    dend_38 { pt3dadd( -80.5466, -11.3552, 27.4819, 1.66 ) }
    dend_38 { pt3dadd( -84.841, -12.907, 26.7717, 0.55 ) }
    dend_38 { pt3dadd( -87.5338, -13.7755, 26.379, 1.11 ) }
    dend_38 { pt3dadd( -91.7204, -15.0173, 25.8106, 0.55 ) }
    dend_38 { pt3dadd( -93.5965, -15.5273, 25.6135, 0.55 ) }
    dend_38 { pt3dadd( -95.6156, -16.0437, 25.4319, 1.38 ) }
    dend_38 { pt3dadd( -101.935, -17.5361, 25.0007, 0.28 ) }
    dend_38 { pt3dadd( -108.263, -18.8609, 24.7431, 0.28 ) }
    dend_38 { pt3dadd( -109.843, -19.1924, 24.7019, 1.38 ) }
    dend_38 { pt3dadd( -115.248, -20.3349, 24.683, 0.28 ) }
    dend_38 { pt3dadd( -118.306, -20.9839, 24.6864, 0.83 ) }
    dend_38 { pt3dadd( -120.309, -21.3831, 24.7057, 0.28 ) }
    dend_38 { pt3dadd( -123.101, -21.9565, 24.8928, 0.55 ) }
    dend_38 { pt3dadd( -124.933, -22.3356, 25.0389, 0.28 ) }
    dend_38 { pt3dadd( -127.286, -22.7985, 25.2821, 1.94 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -38.498, 6.26218, 22.9676, 0.83 ) }
    dend_37 { pt3dadd( -43.6651, 5.9512, 25.8732, 0.83 ) }
    dend_37 { pt3dadd( -46.9897, 5.74582, 27.5001, 1.66 ) }
    dend_37 { pt3dadd( -49.9949, 5.59944, 28.8099, 1.11 ) }
    dend_37 { pt3dadd( -53.132, 5.49993, 30.0382, 1.11 ) }
    dend_37 { pt3dadd( -56.5777, 5.55512, 31.2655, 1.11 ) }
    dend_37 { pt3dadd( -59.4711, 5.67262, 32.2707, 1.11 ) }
    dend_37 { pt3dadd( -61.9735, 5.83454, 32.9851, 0.83 ) }
    dend_37 { pt3dadd( -64.8382, 6.11572, 33.7808, 1.11 ) }
    dend_37 { pt3dadd( -67.6355, 6.48351, 34.6385, 1.38 ) }
    dend_37 { pt3dadd( -72.8642, 7.32597, 36.5233, 0.55 ) }
    dend_37 { pt3dadd( -75.0941, 7.72086, 37.4287, 0.55 ) }
    dend_37 { pt3dadd( -77.9476, 8.1851, 38.6674, 0.55 ) }
    dend_37 { pt3dadd( -80.8503, 8.61134, 40.0463, 1.66 ) }
    dend_37 { pt3dadd( -83.8452, 8.9432, 41.5691, 1.66 ) }
    dend_37 { pt3dadd( -87.7924, 9.21254, 43.6405, 1.11 ) }
    dend_37 { pt3dadd( -90.2106, 9.26255, 44.9619, 1.66 ) }
    dend_37 { pt3dadd( -93.6118, 9.33446, 46.8756, 0.83 ) }
    dend_37 { pt3dadd( -95.9444, 9.33033, 48.2081, 1.11 ) }
    dend_37 { pt3dadd( -97.6575, 9.28921, 49.2055, 0.55 ) }
    dend_37 { pt3dadd( -99.9211, 9.10894, 50.4893, 0.83 ) }
    dend_37 { pt3dadd( -102.276, 8.74852, 51.893, 1.38 ) }
    dend_37 { pt3dadd( -104.896, 8.20523, 53.7677, 0.55 ) }
    dend_37 { pt3dadd( -106.359, 7.79402, 55.1883, 0.55 ) }
    dend_37 { pt3dadd( -106.912, 7.57696, 55.8118, 0.28 ) }
    dend_37 { pt3dadd( -107.978, 7.05457, 57.2176, 0.55 ) }
    dend_37 { pt3dadd( -110.107, 5.83382, 60.4014, 0.28 ) }
    dend_37 { pt3dadd( -111.621, 4.89979, 62.785, 1.66 ) }
    dend_37 { pt3dadd( -114.691, 2.95171, 67.8491, 0.28 ) }
    dend_37 { pt3dadd( -115.325, 2.62813, 68.9206, 1.11 ) }
    dend_37 { pt3dadd( -116.916, 1.98104, 71.5952, 0.28 ) }
    dend_37 { pt3dadd( -117.868, 1.75641, 73.2358, 0.83 ) }
    dend_37 { pt3dadd( -119.371, 1.63567, 75.7214, 0.28 ) }
    dend_37 { pt3dadd( -119.806, 1.65262, 76.4083, 0.83 ) }
    dend_37 { pt3dadd( -122.338, 2.05255, 80.2979, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( -123.512, 2.33826, 82.0655, 1.66 ) }
    dend_37 { pt3dadd( -126.916, 3.30944, 87.0329, 0.55 ) }
    dend_37 { pt3dadd( -128.207, 3.68385, 88.8587, 0.28 ) }
    dend_37 { pt3dadd( -129.725, 4.12327, 90.9109, 1.11 ) }
    dend_37 { pt3dadd( -131.672, 4.59292, 93.3998, 0.55 ) }
    dend_37 { pt3dadd( -133.668, 4.93986, 95.7542, 0.55 ) }
    dend_37 { pt3dadd( -135.41, 5.12001, 97.6528, 1.11 ) }
    dend_37 { pt3dadd( -138.318, 5.20803, 100.609, 0.28 ) }
    dend_37 { pt3dadd( -139.1, 5.15926, 101.437, 0.28 ) }
    dend_37 { pt3dadd( -141.737, 4.67271, 104.386, 1.38 ) }
    dend_37 { pt3dadd( -144.452, 3.74631, 107.625, 0.55 ) }
    dend_37 { pt3dadd( -145.798, 3.02984, 109.409, 0.28 ) }
    dend_37 { pt3dadd( -146.71, 2.33827, 110.731, 1.11 ) }
    dend_37 { pt3dadd( -148.836, 0.232069, 114.019, 0.28 ) }
    dend_37 { pt3dadd( -150.123, -1.24275, 116.146, 1.38 ) }
    dend_37 { pt3dadd( -151.302, -2.84682, 118.234, 0.55 ) }
    dend_37 { pt3dadd( -152.248, -4.3809, 120.056, 1.11 ) }
    dend_37 { pt3dadd( -153.529, -6.62005, 122.614, 0.28 ) }
    dend_37 { pt3dadd( -154.555, -8.49671, 124.599, 0.28 ) }
    dend_37 { pt3dadd( -155.585, -10.3116, 126.413, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_27 (entry count 20/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -24.4422, -10.0654, -3.06308, 1.38 ) }
    dend_35 { pt3dadd( -30.3645, -10.2779, -2.72862, 1.38 ) }
    dend_35 { pt3dadd( -33.3331, -10.1735, -2.83991, 1.38 ) }
    dend_35 { pt3dadd( -41.5868, -9.43169, -3.04172, 1.38 ) }
    dend_35 { pt3dadd( -44.4702, -9.01734, -3.06628, 1.38 ) }
    dend_35 { pt3dadd( -47.8834, -8.36206, -3.02592, 1.11 ) }
    dend_35 { pt3dadd( -51.6716, -7.53812, -2.81074, 1.11 ) }
    dend_35 { pt3dadd( -60.2734, -5.11451, -2.17855, 1.11 ) }
    dend_35 { pt3dadd( -64.9285, -3.52012, -1.67585, 1.11 ) }
    dend_35 { pt3dadd( -70.4738, -1.25486, -0.921839, 0.83 ) }
    dend_35 { pt3dadd( -75.1839, 0.799746, -0.182029, 0.83 ) }
    dend_35 { pt3dadd( -79.791, 2.86854, 0.65974, 1.38 ) }
    dend_35 { pt3dadd( -83.0531, 4.35304, 1.32798, 0.55 ) }
    dend_35 { pt3dadd( -86.1407, 5.80339, 2.04607, 0.55 ) }
    dend_35 { pt3dadd( -89.812, 7.44364, 2.72325, 0.55 ) }
    dend_35 { pt3dadd( -93.662, 9.0843, 3.32994, 1.66 ) }
    dend_35 { pt3dadd( -97.815, 10.7789, 3.81134, 0.55 ) }
    dend_35 { pt3dadd( -99.716, 11.7142, 3.89839, 1.11 ) }
    dend_35 { pt3dadd( -103.895, 14.1751, 3.99486, 0.55 ) }
    dend_35 { pt3dadd( -105.879, 15.6655, 3.97195, 0.83 ) }
    dend_35 { pt3dadd( -107.731, 17.2686, 3.88198, 0.28 ) }
    dend_35 { pt3dadd( -109.755, 19.2426, 3.70505, 0.83 ) }
    dend_35 { pt3dadd( -116.312, 26.4522, 2.85801, 0.28 ) }
    dend_35 { pt3dadd( -118.864, 29.5022, 2.57321, 1.11 ) }
    dend_35 { pt3dadd( -122.775, 34.6575, 2.39157, 0.55 ) }
    dend_35 { pt3dadd( -125.434, 38.4074, 2.46288, 2.22 ) }
    dend_35 { pt3dadd( -127.377, 41.2837, 2.65845, 0.55 ) }
    dend_35 { pt3dadd( -130.492, 46.1033, 3.06379, 0.28 ) }
    dend_35 { pt3dadd( -132.487, 49.1265, 3.514, 0.83 ) }
    dend_35 { pt3dadd( -136.078, 54.6562, 4.51359, 0.28 ) }
    dend_35 { pt3dadd( -136.73, 55.7158, 4.74465, 1.94 ) }
    dend_35 { pt3dadd( -138.012, 58.0914, 5.29838, 0.55 ) }
    dend_35 { pt3dadd( -141.131, 64.2219, 6.75771, 0.28 ) }
    dend_35 { pt3dadd( -142.576, 67.0567, 7.32323, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 54/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -24.4422, -10.0654, -3.06308, 1.66 ) }
    dend_28 { pt3dadd( -25.3426, -13.2653, -2.85814, 1.66 ) }
    dend_28 { pt3dadd( -26.7029, -18.099, -2.54856, 1.66 ) }
    dend_28 { pt3dadd( -28.5534, -24.6749, -2.12739, 1.66 ) }
    dend_28 { pt3dadd( -29.5895, -28.357, -1.89157, 1.66 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 59/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.20603, -8.00846, 11.6495, 0.83 ) }
    dend_19 { pt3dadd( -3.58455, -7.59912, 14.0793, 0.83 ) }
    dend_19 { pt3dadd( -2.58412, -6.75105, 18.1359, 0.83 ) }
    dend_19 { pt3dadd( -1.92627, -6.19339, 20.8034, 0.83 ) }
    dend_19 { pt3dadd( -1.30434, -5.66619, 23.3253, 0.83 ) }
    dend_19 { pt3dadd( -0.473879, -4.96221, 26.6927, 0.83 ) }
    dend_19 { pt3dadd( -0.194421, -4.72531, 27.8258, 1.38 ) }
    dend_19 { pt3dadd( -0.161636, -4.65879, 28.0349, 1.38 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 67/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 13.5304, -5.05549, 2.32526, 0.83 ) }
    dend_15 { pt3dadd( 20.8629, -7.73435, 2.51359, 0.83 ) }
    dend_15 { pt3dadd( 27.9597, -10.1896, 2.92738, 0.83 ) }
    dend_15 { pt3dadd( 37.1235, -13.4676, 3.40373, 0.83 ) }
    dend_15 { pt3dadd( 44.063, -16.0605, 3.74029, 0.83 ) }
    dend_15 { pt3dadd( 48.5271, -17.7099, 4.01884, 1.11 ) }
    dend_15 { pt3dadd( 51.9301, -18.9693, 4.29724, 0.83 ) }
    dend_15 { pt3dadd( 56.3891, -20.4605, 4.92159, 1.11 ) }
    dend_15 { pt3dadd( 60.0686, -21.6997, 5.56369, 1.11 ) }
    dend_15 { pt3dadd( 65.5932, -24.0348, 6.80734, 0.83 ) }
    dend_15 { pt3dadd( 70.0027, -26.3811, 7.82734, 0.83 ) }
    dend_15 { pt3dadd( 72.2188, -27.7579, 8.30327, 0.83 ) }
    dend_15 { pt3dadd( 76.517, -30.6614, 9.24816, 1.38 ) }
    dend_15 { pt3dadd( 79.6481, -32.9582, 10.0071, 0.83 ) }
    dend_15 { pt3dadd( 82.7778, -35.3419, 10.7855, 0.83 ) }
    dend_15 { pt3dadd( 85.6534, -37.5452, 11.4392, 0.55 ) }
    dend_15 { pt3dadd( 88.1131, -39.3805, 11.8969, 0.83 ) }
    dend_15 { pt3dadd( 91.4173, -41.7249, 12.4292, 0.83 ) }
    dend_15 { pt3dadd( 94.5132, -43.7656, 12.9502, 0.83 ) }
    dend_15 { pt3dadd( 98.3994, -46.1643, 13.6493, 0.83 ) }
    dend_15 { pt3dadd( 105.62, -50.4261, 15.0731, 0.83 ) }
    dend_15 { pt3dadd( 109.106, -52.4167, 15.795, 1.11 ) }
    dend_15 { pt3dadd( 113.039, -54.5424, 16.5661, 1.11 ) }
    dend_15 { pt3dadd( 116.634, -56.5323, 17.0607, 0.55 ) }
    dend_15 { pt3dadd( 117.76, -57.1501, 17.2013, 0.55 ) }
    dend_15 { pt3dadd( 121.304, -59.324, 17.5957, 1.11 ) }
    dend_15 { pt3dadd( 124.08, -61.2173, 17.6919, 0.55 ) }
    dend_15 { pt3dadd( 126.51, -62.9117, 17.6415, 0.55 ) }
    dend_15 { pt3dadd( 131.769, -66.469, 16.8743, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 13.5304, -5.05549, 2.32526, 0.83 ) }
    dend_12 { pt3dadd( 14.8951, -5.79551, 4.45246, 0.83 ) }
    dend_12 { pt3dadd( 18.1343, -7.55212, 9.5019, 0.83 ) }
    dend_12 { pt3dadd( 20.2073, -8.67625, 12.7333, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_12 { pt3dadd( 21.3029, -9.27037, 14.4411, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 1/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 6.70367, 15.4675, -1.99423, 1.38 ) }
    dend_6 { pt3dadd( 4.81543, 17.3832, -2.08583, 1.38 ) }
    dend_6 { pt3dadd( 2.97974, 19.2456, -2.17488, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 4/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.70367, 15.4675, -1.99423, 1.94 ) }
    dend_1 { pt3dadd( 10.3734, 18.9247, -3.74649, 1.94 ) }
    dend_1 { pt3dadd( 11.8667, 20.3314, -4.45951, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 7/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 36.3764, 19.6398, 0.0193083, 0.860546 ) }
    axon_1 { pt3dadd( 49.6517, 26.623, 0.0193083, 0.860546 ) }
    axon_1 { pt3dadd( 62.9271, 33.6062, 0.0193083, 0.860546 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 10/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -16.7839, 36.5413, 4.63851, 0.83 ) }
    dend_53 { pt3dadd( -19.1516, 36.5233, 3.52725, 0.83 ) }
    dend_53 { pt3dadd( -22.466, 36.4981, 1.97165, 0.83 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -16.7839, 36.5413, 4.63851, 0.55 ) }
    dend_52 { pt3dadd( -17.2613, 40.8684, 4.86533, 0.55 ) }
    dend_52 { pt3dadd( -17.3812, 42.9226, 5.01324, 0.55 ) }
    dend_52 { pt3dadd( -17.4776, 45.5245, 5.22019, 1.11 ) }
    dend_52 { pt3dadd( -17.7047, 50.7422, 5.65218, 0.83 ) }
    dend_52 { pt3dadd( -17.8135, 52.9531, 5.8273, 0.28 ) }
    dend_52 { pt3dadd( -17.8542, 54.1543, 5.91063, 0.83 ) }
    dend_52 { pt3dadd( -17.8974, 57.0893, 6.05475, 0.28 ) }
    dend_52 { pt3dadd( -17.8825, 60.0157, 6.20797, 0.83 ) }
    dend_52 { pt3dadd( -17.8084, 62.4955, 6.34848, 0.28 ) }
    dend_52 { pt3dadd( -17.7225, 65.9907, 6.57595, 1.38 ) }
    dend_52 { pt3dadd( -17.7362, 68.0614, 6.70452, 0.28 ) }
    dend_52 { pt3dadd( -17.7631, 68.9874, 6.7439, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 26/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.68775, 5.89935, 11.4332, 0.83 ) }
    dend_48 { pt3dadd( 7.68552, 7.78908, 16.1228, 0.83 ) }
    dend_48 { pt3dadd( 9.16025, 8.84899, 18.4681, 0.83 ) }
    dend_48 { pt3dadd( 10.5679, 9.98985, 20.6366, 1.38 ) }
    dend_48 { pt3dadd( 12.4486, 11.756, 23.6678, 1.11 ) }
    dend_48 { pt3dadd( 13.4971, 12.8297, 25.3489, 1.11 ) }
    dend_48 { pt3dadd( 14.103, 13.4901, 26.3011, 1.11 ) }
    dend_48 { pt3dadd( 15.6374, 15.4177, 28.7485, 0.83 ) }
    dend_48 { pt3dadd( 17.0098, 17.218, 30.7401, 1.11 ) }
    dend_48 { pt3dadd( 18.3251, 18.9633, 32.4977, 0.55 ) }
    dend_48 { pt3dadd( 18.9946, 19.9131, 33.3731, 1.11 ) }
    dend_48 { pt3dadd( 20.5653, 22.206, 35.4412, 1.11 ) }
    dend_48 { pt3dadd( 22.5443, 24.9887, 37.9992, 1.66 ) }
    dend_48 { pt3dadd( 24.6519, 27.6935, 40.5914, 0.83 ) }
    dend_48 { pt3dadd( 25.7955, 29.0633, 41.9758, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 34.0061, 69.841, -109.095, 0.28 ) }
    dend_45 { pt3dadd( 37.1007, 78.3135, -119.412, 0.28 ) }
    dend_45 { pt3dadd( 40.8889, 85.4212, -130.451, 0.28 ) }
    dend_45 { pt3dadd( 44.8485, 92.9566, -141.154, 0.28 ) }
    dend_45 { pt3dadd( 46.8506, 102.478, -150.855, 0.28 ) }
    dend_45 { pt3dadd( 47.6455, 110.96, -161.598, 0.28 ) }
    dend_45 { pt3dadd( 50.1041, 119.038, -172.38, 0.28 ) }
    dend_45 { pt3dadd( 51.7592, 127.635, -182.933, 0.28 ) }
    dend_45 { pt3dadd( 52.1893, 136.433, -193.454, 0.28 ) }
    dend_45 { pt3dadd( 51.4865, 145.408, -203.821, 0.28 ) }
    dend_45 { pt3dadd( 52.7262, 153.183, -215.02, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 52/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 34.0061, 69.841, -109.095, 0.28 ) }
    dend_44 { pt3dadd( 36.0723, 76.1633, -116.921, 0.28 ) }
    dend_44 { pt3dadd( 37.4119, 81.5734, -125.517, 0.28 ) }
    dend_44 { pt3dadd( 39.4864, 86.2915, -134.352, 0.28 ) }
    dend_44 { pt3dadd( 43.5014, 90.0989, -142.933, 0.28 ) }
    dend_44 { pt3dadd( 46.1412, 94.0841, -151.958, 0.28 ) }
    dend_44 { pt3dadd( 48.9486, 97.9742, -160.973, 0.28 ) }
    dend_44 { pt3dadd( 49.8022, 101.497, -170.513, 0.28 ) }
    dend_44 { pt3dadd( 49.5715, 105.594, -179.869, 0.28 ) }
    dend_44 { pt3dadd( 49.2025, 109.264, -189.389, 0.28 ) }
    dend_44 { pt3dadd( 49.3849, 111.069, -199.41, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 63/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.92542, -6.29288, -23.1446, 0.55 ) }
    dend_42 { pt3dadd( 6.46572, -7.52794, -28.385, 0.55 ) }
    dend_42 { pt3dadd( 6.65214, -7.95409, -30.1931, 0.55 ) }
    dend_42 { pt3dadd( 6.80062, -8.2935, -31.6332, 0.55 ) }
    dend_42 { pt3dadd( 7.97062, -9.90779, -38.145, 0.55 ) }
    dend_42 { pt3dadd( 8.58805, -11.7424, -44.6741, 0.55 ) }
    dend_42 { pt3dadd( 8.56616, -13.6258, -51.2169, 0.55 ) }
    dend_42 { pt3dadd( 9.67085, -15.8348, -57.5701, 0.55 ) }
    dend_42 { pt3dadd( 11.3254, -16.5041, -64.1367, 0.55 ) }
    dend_42 { pt3dadd( 12.3766, -16.6792, -70.8556, 0.55 ) }
    dend_42 { pt3dadd( 12.5974, -16.9497, -77.6496, 0.55 ) }
    dend_42 { pt3dadd( 13.9785, -17.9908, -84.2322, 0.55 ) }
    dend_42 { pt3dadd( 16.8114, -19.9938, -90.1083, 0.55 ) }
    dend_42 { pt3dadd( 19.5648, -22.5301, -95.8244, 0.55 ) }
    dend_42 { pt3dadd( 23.378, -24.5671, -101.115, 0.55 ) }
    dend_42 { pt3dadd( 27.2267, -26.9869, -106.225, 0.55 ) }
    dend_42 { pt3dadd( 30.6686, -29.9513, -111.351, 0.55 ) }
    dend_42 { pt3dadd( 34.0011, -32.3159, -116.829, 0.55 ) }
    dend_42 { pt3dadd( 37.0829, -36.3916, -121.43, 0.55 ) }
    dend_42 { pt3dadd( 41.5079, -40.7854, -124.401, 0.55 ) }
    dend_42 { pt3dadd( 45.8209, -44.8808, -127.887, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 84/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 5.92542, -6.29288, -23.1446, 0.55 ) }
    dend_41 { pt3dadd( 5.72577, -6.70131, -23.9742, 0.55 ) }
    dend_41 { pt3dadd( 4.90264, -8.38513, -27.3943, 0.55 ) }
    dend_41 { pt3dadd( 4.21988, -9.78184, -30.2313, 0.55 ) }
    dend_41 { pt3dadd( 3.45294, -12.6707, -36.3754, 0.55 ) }
    dend_41 { pt3dadd( 3.75276, -14.201, -43.0094, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -29.5895, -28.357, -1.89157, 0.55 ) }
    dend_32 { pt3dadd( -31.284, -33.551, -3.82466, 0.55 ) }
    dend_32 { pt3dadd( -33.1526, -39.5024, -5.79681, 0.28 ) }
    dend_32 { pt3dadd( -33.9282, -42.4352, -6.57279, 0.28 ) }
    dend_32 { pt3dadd( -34.5592, -45.6379, -7.39445, 0.28 ) }
    dend_32 { pt3dadd( -35.4289, -51.7711, -8.92728, 0.55 ) }
    dend_32 { pt3dadd( -35.985, -55.6932, -9.90752, 0.55 ) }
    dend_32 { pt3dadd( -36.6013, -61.6133, -11.0012, 0.55 ) }
    dend_32 { pt3dadd( -36.9999, -66.6105, -11.732, 0.55 ) }
    dend_32 { pt3dadd( -37.1179, -71.6499, -12.5231, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -36.9925, -74.0972, -12.9046, 0.28 ) }
    dend_32 { pt3dadd( -37.7725, -88.0711, -14.1011, 0.28 ) }
    dend_32 { pt3dadd( -36.3664, -101.999, -15.2058, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -29.5895, -28.357, -1.89157, 1.11 ) }
    dend_29 { pt3dadd( -30.2731, -33.5971, -0.904768, 1.11 ) }
    dend_29 { pt3dadd( -30.9384, -38.6967, 0.0555756, 1.11 ) }
    dend_29 { pt3dadd( -31.6024, -43.7865, 1.01407, 1.11 ) }
    dend_29 { pt3dadd( -32.1795, -48.2099, 1.84709, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 8/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.161636, -4.65879, 28.0349, 0.55 ) }
    dend_25 { pt3dadd( 0.78176, -5.69628, 31.7711, 0.55 ) }
    dend_25 { pt3dadd( 1.06169, -5.96039, 32.7842, 0.83 ) }
    dend_25 { pt3dadd( 4.48535, -8.67127, 43.9096, 0.28 ) }
    dend_25 { pt3dadd( 5.07067, -9.12842, 45.8819, 0.83 ) }
    dend_25 { pt3dadd( 6.36363, -10.2002, 50.4515, 0.55 ) }
    dend_25 { pt3dadd( 7.0503, -10.763, 53.0718, 1.11 ) }
    dend_25 { pt3dadd( 8.7664, -12.0771, 59.8159, 0.55 ) }
    dend_25 { pt3dadd( 9.86575, -12.8501, 64.0594, 1.38 ) }
    dend_25 { pt3dadd( 11.9438, -14.2893, 71.9373, 0.55 ) }
    dend_25 { pt3dadd( 13.0497, -15.0536, 76.0921, 1.38 ) }
    dend_25 { pt3dadd( 15.3209, -16.5098, 84.5916, 0.28 ) }
    dend_25 { pt3dadd( 15.9884, -16.9151, 87.0231, 1.11 ) }
    dend_25 { pt3dadd( 16.8391, -17.4596, 90.1068, 0.55 ) }
    dend_25 { pt3dadd( 17.9457, -18.0829, 93.8435, 1.66 ) }
    dend_25 { pt3dadd( 19.5793, -18.7263, 98.699, 0.55 ) }
    dend_25 { pt3dadd( 20.8258, -19.0296, 102.191, 0.83 ) }
    dend_25 { pt3dadd( 22.2141, -19.2422, 105.852, 0.28 ) }
    dend_25 { pt3dadd( 22.9368, -19.3125, 107.817, 1.11 ) }
    dend_25 { pt3dadd( 24.4721, -19.3486, 112.092, 0.55 ) }
    dend_25 { pt3dadd( 25.3853, -19.2615, 114.635, 1.38 ) }
    dend_25 { pt3dadd( 28.3892, -18.6433, 122.917, 0.28 ) }
    dend_25 { pt3dadd( 29.6192, -18.3732, 126.231, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 31/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.161636, -4.65879, 28.0349, 1.38 ) }
    dend_20 { pt3dadd( 0.91958, -4.87016, 29.6128, 1.38 ) }
    dend_20 { pt3dadd( 4.3251, -5.53593, 34.5829, 1.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 34/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 131.769, -66.469, 16.8743, 0.28 ) }
    dend_17 { pt3dadd( 134.099, -65.4053, 16.839, 0.28 ) }
    dend_17 { pt3dadd( 135.877, -64.5937, 16.8121, 0.55 ) }
    dend_17 { pt3dadd( 137.354, -63.9194, 16.7898, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 131.769, -66.469, 16.8743, 0.83 ) }
    dend_16 { pt3dadd( 133.112, -67.3369, 16.9502, 0.83 ) }
    dend_16 { pt3dadd( 134.558, -68.2887, 17.0327, 1.94 ) }
    dend_16 { pt3dadd( 135.693, -69.0485, 17.098, 1.11 ) }
    dend_16 { pt3dadd( 138.71, -71.053, 17.269, 0.83 ) }
    dend_16 { pt3dadd( 141.121, -72.6249, 17.402, 0.83 ) }
    dend_16 { pt3dadd( 142.766, -73.6699, 17.4897, 1.38 ) }
    dend_16 { pt3dadd( 144.412, -74.6296, 17.5924, 0.55 ) }
    dend_16 { pt3dadd( 146.019, -75.507, 17.7046, 1.94 ) }
    dend_16 { pt3dadd( 147.732, -76.424, 17.8389, 0.55 ) }
    dend_16 { pt3dadd( 148.928, -77.0426, 17.9648, 0.55 ) }
    dend_16 { pt3dadd( 150.305, -77.7277, 18.1406, 1.11 ) }
    dend_16 { pt3dadd( 153.307, -79.2594, 18.6196, 0.55 ) }
    dend_16 { pt3dadd( 153.919, -79.5683, 18.7587, 0.55 ) }
    dend_16 { pt3dadd( 155.929, -80.6261, 19.3239, 1.11 ) }
    dend_16 { pt3dadd( 157.269, -81.409, 19.8058, 0.55 ) }
    dend_16 { pt3dadd( 158.216, -81.9969, 20.1916, 0.55 ) }
    dend_16 { pt3dadd( 160.223, -83.3119, 21.1389, 0.83 ) }
    dend_16 { pt3dadd( 162.151, -84.6167, 22.1789, 0.28 ) }
    dend_16 { pt3dadd( 163.147, -85.2425, 22.7298, 1.38 ) }
    dend_16 { pt3dadd( 164.847, -86.2085, 23.6513, 0.55 ) }
    dend_16 { pt3dadd( 166.418, -86.9837, 24.4954, 0.55 ) }
    dend_16 { pt3dadd( 167.359, -87.4083, 25.0009, 0.83 ) }
    dend_16 { pt3dadd( 168.904, -87.9911, 25.8131, 0.55 ) }
    dend_16 { pt3dadd( 170.138, -88.3986, 26.4455, 0.55 ) }
    dend_16 { pt3dadd( 171.663, -88.8158, 27.2521, 1.66 ) }
    dend_16 { pt3dadd( 174.266, -89.4385, 28.6386, 0.55 ) }
    dend_16 { pt3dadd( 175.603, -89.7998, 29.4065, 0.28 ) }
    dend_16 { pt3dadd( 176.988, -90.2009, 30.2497, 0.83 ) }
    dend_16 { pt3dadd( 178.689, -90.7189, 31.4942, 0.55 ) }
    dend_16 { pt3dadd( 180.535, -91.3023, 33.0093, 0.55 ) }
    dend_16 { pt3dadd( 181.281, -91.5495, 33.6579, 1.38 ) }
    dend_16 { pt3dadd( 183.641, -92.3861, 35.7804, 0.28 ) }
    dend_16 { pt3dadd( 185.162, -92.9331, 37.2334, 1.11 ) }
    dend_16 { pt3dadd( 188.382, -94.1823, 40.4827, 0.28 ) }
    dend_16 { pt3dadd( 188.883, -94.3834, 41.0302, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 21.3029, -9.27037, 14.4411, 0.28 ) }
    dend_14 { pt3dadd( 22.7087, -11.1653, 15.7631, 0.28 ) }
    dend_14 { pt3dadd( 22.8417, -11.3383, 15.8819, 0.83 ) }
    dend_14 { pt3dadd( 23.8484, -12.5978, 16.6681, 0.83 ) }
    dend_14 { pt3dadd( 25.0711, -14.0868, 17.4991, 0.28 ) }
    dend_14 { pt3dadd( 25.7643, -14.8714, 17.9251, 0.83 ) }
    dend_14 { pt3dadd( 27.0824, -16.4005, 18.7112, 0.28 ) }
    dend_14 { pt3dadd( 27.5394, -16.9526, 18.9485, 0.55 ) }
    dend_14 { pt3dadd( 28.979, -18.7665, 19.7155, 0.28 ) }
    dend_14 { pt3dadd( 29.8372, -19.8853, 20.1577, 0.55 ) }
    dend_14 { pt3dadd( 31.5257, -22.1332, 21.0182, 0.28 ) }
    dend_14 { pt3dadd( 33.2136, -24.4934, 21.9825, 0.28 ) }
    dend_14 { pt3dadd( 34.6018, -26.4618, 22.7696, 1.11 ) }
    dend_14 { pt3dadd( 36.7355, -29.6123, 24.0605, 0.55 ) }
    dend_14 { pt3dadd( 37.7499, -31.1776, 24.726, 1.66 ) }
    dend_14 { pt3dadd( 38.715, -32.7416, 25.4105, 0.28 ) }
    dend_14 { pt3dadd( 39.4935, -34.108, 25.9978, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 91/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 21.3029, -9.27037, 14.4411, 0.55 ) }
    dend_13 { pt3dadd( 23.7206, -10.4685, 19.1413, 0.55 ) }
    dend_13 { pt3dadd( 28.0989, -12.638, 27.6526, 0.55 ) }
    dend_13 { pt3dadd( 29.6794, -13.4213, 30.7254, 0.55 ) }
    dend_13 { pt3dadd( 31.0493, -14.1002, 33.3885, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 96/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.97974, 19.2456, -2.17488, 0.55 ) }
    dend_8 { pt3dadd( 1.72813, 20.7879, -2.59608, 0.55 ) }
    dend_8 { pt3dadd( -0.500179, 23.5338, -3.34597, 0.55 ) }
    dend_8 { pt3dadd( -2.0485, 25.4417, -3.86702, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( -3.30078, 26.9849, -4.28845, 1.11 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 1/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.97974, 19.2456, -2.17488, 0.83 ) }
    dend_7 { pt3dadd( -1.19682, 21.4043, -4.76187, 0.83 ) }
    dend_7 { pt3dadd( -2.77497, 22.2493, -5.62778, 0.83 ) }
    dend_7 { pt3dadd( -4.69008, 23.4328, -6.53991, 0.83 ) }
    dend_7 { pt3dadd( -7.80973, 25.4053, -7.97771, 0.83 ) }
    dend_7 { pt3dadd( -12.5592, 28.3878, -10.0301, 0.83 ) }
    dend_7 { pt3dadd( -14.1706, 29.3496, -10.6957, 1.38 ) }
    dend_7 { pt3dadd( -16.8866, 31.0158, -11.6827, 0.83 ) }
    dend_7 { pt3dadd( -20.2563, 33.2015, -13.0472, 0.83 ) }
    dend_7 { pt3dadd( -23.2201, 35.2483, -14.4172, 0.83 ) }
    dend_7 { pt3dadd( -24.9151, 36.4758, -15.307, 1.38 ) }
    dend_7 { pt3dadd( -27.8446, 38.7938, -17.1766, 0.55 ) }
    dend_7 { pt3dadd( -30.0884, 40.6978, -18.9809, 0.83 ) }
    dend_7 { pt3dadd( -32.264, 42.6529, -21.1835, 0.83 ) }
    dend_7 { pt3dadd( -34.0261, 44.3294, -23.4165, 0.83 ) }
    dend_7 { pt3dadd( -35.6335, 46.1061, -25.8136, 1.38 ) }
    dend_7 { pt3dadd( -38.0271, 49.0602, -29.9314, 0.55 ) }
    dend_7 { pt3dadd( -38.3684, 49.5122, -30.5697, 0.55 ) }
    dend_7 { pt3dadd( -39.1869, 50.53, -31.9868, 1.11 ) }
    dend_7 { pt3dadd( -40.9781, 52.651, -34.5897, 0.55 ) }
    dend_7 { pt3dadd( -41.9888, 53.8991, -35.8197, 0.55 ) }
    dend_7 { pt3dadd( -43.3993, 55.6746, -37.1324, 1.11 ) }
    dend_7 { pt3dadd( -44.8144, 57.4649, -37.9874, 0.55 ) }
    dend_7 { pt3dadd( -46.5483, 59.734, -38.7544, 1.11 ) }
    dend_7 { pt3dadd( -47.8837, 61.5049, -39.1974, 0.28 ) }
    dend_7 { pt3dadd( -49.1703, 63.2597, -39.4816, 0.83 ) }
    dend_7 { pt3dadd( -50.9849, 65.7593, -39.822, 0.28 ) }
    dend_7 { pt3dadd( -52.8521, 68.4546, -40.022, 0.28 ) }
    dend_7 { pt3dadd( -54.6372, 71.2219, -40.1248, 1.11 ) }
    dend_7 { pt3dadd( -61.3983, 76.217, -46.0538, 1.11 ) }
    dend_7 { pt3dadd( -67.5388, 81.2046, -52.6292, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 11.8667, 20.3314, -4.45951, 1.11 ) }
    dend_5 { pt3dadd( 13.3046, 20.9521, -3.71693, 1.11 ) }
    dend_5 { pt3dadd( 16.1917, 22.2, -2.09019, 0.83 ) }
    dend_5 { pt3dadd( 19.0532, 23.4301, -0.415919, 0.83 ) }
    dend_5 { pt3dadd( 21.4396, 24.4164, 1.04855, 0.83 ) }
    dend_5 { pt3dadd( 22.57, 24.8651, 1.74096, 0.55 ) }
    dend_5 { pt3dadd( 24.8394, 25.7651, 3.15634, 1.11 ) }
    dend_5 { pt3dadd( 26.7855, 26.5516, 4.45696, 0.55 ) }
    dend_5 { pt3dadd( 28.2575, 27.122, 5.4712, 1.38 ) }
    dend_5 { pt3dadd( 29.99, 27.821, 6.71557, 0.55 ) }
    dend_5 { pt3dadd( 31.2457, 28.3576, 7.59937, 0.55 ) }
    dend_5 { pt3dadd( 33.4579, 29.3956, 9.16045, 0.83 ) }
    dend_5 { pt3dadd( 35.1975, 30.2963, 10.3365, 0.28 ) }
    dend_5 { pt3dadd( 35.8504, 30.6657, 10.7831, 0.83 ) }
    dend_5 { pt3dadd( 37.174, 31.5054, 11.6911, 0.28 ) }
    dend_5 { pt3dadd( 39.0532, 32.7651, 12.9579, 1.11 ) }
    dend_5 { pt3dadd( 40.8709, 34.018, 14.2576, 0.28 ) }
    dend_5 { pt3dadd( 41.8936, 34.7209, 15.0319, 1.66 ) }
    dend_5 { pt3dadd( 44.1791, 36.2822, 16.9383, 0.55 ) }
    dend_5 { pt3dadd( 45.1751, 36.9378, 17.8023, 0.55 ) }
    dend_5 { pt3dadd( 46.0326, 37.4647, 18.5443, 0.55 ) }
    dend_5 { pt3dadd( 48.1861, 38.6904, 20.3861, 1.38 ) }
    dend_5 { pt3dadd( 49.718, 39.4775, 21.6313, 0.28 ) }
    dend_5 { pt3dadd( 51.4235, 40.2576, 23.0687, 0.83 ) }
    dend_5 { pt3dadd( 52.8964, 40.8413, 24.3695, 1.11 ) }
    dend_5 { pt3dadd( 53.7892, 41.1454, 25.1531, 1.11 ) }
    dend_5 { pt3dadd( 54.5335, 41.371, 25.7767, 0.28 ) }
    dend_5 { pt3dadd( 55.4664, 41.6004, 26.5375, 0.83 ) }
    dend_5 { pt3dadd( 59.5807, 42.446, 29.8894, 0.28 ) }
    dend_5 { pt3dadd( 61.5104, 42.7627, 31.5174, 1.38 ) }
    dend_5 { pt3dadd( 62.4449, 42.8932, 32.3469, 0.28 ) }
    dend_5 { pt3dadd( 63.5247, 43.0711, 33.3573, 1.11 ) }
    dend_5 { pt3dadd( 65.5163, 43.4873, 35.3792, 0.28 ) }
    dend_5 { pt3dadd( 65.756, 43.5519, 35.6338, 0.55 ) }
    dend_5 { pt3dadd( 67.4648, 44.1492, 37.4617, 0.28 ) }
    dend_5 { pt3dadd( 68.0771, 44.453, 38.1969, 1.38 ) }
    dend_5 { pt3dadd( 70.5262, 46.0177, 41.4744, 0.28 ) }
    dend_5 { pt3dadd( 71.7124, 47.0736, 43.4743, 0.83 ) }
    dend_5 { pt3dadd( 72.295, 47.6939, 44.5536, 0.28 ) }
    dend_5 { pt3dadd( 72.6624, 48.1109, 45.2635, 1.11 ) }
    dend_5 { pt3dadd( 74.157, 49.9186, 48.2331, 0.28 ) }
    dend_5 { pt3dadd( 74.6264, 50.5064, 49.1868, 1.11 ) }
    dend_5 { pt3dadd( 77.7191, 54.5026, 55.4585, 0.28 ) }
    dend_5 { pt3dadd( 78.1884, 55.1216, 56.389, 1.38 ) }
    dend_5 { pt3dadd( 79.4731, 56.8824, 58.9105, 0.28 ) }
    dend_5 { pt3dadd( 79.8141, 57.3473, 59.5705, 1.38 ) }
    dend_5 { pt3dadd( 81.0782, 59.0466, 61.9224, 0.28 ) }
    dend_5 { pt3dadd( 81.2825, 59.3167, 62.283, 0.83 ) }
    dend_5 { pt3dadd( 82.9474, 61.5773, 64.6415, 0.55 ) }
    dend_5 { pt3dadd( 83.4713, 62.4159, 65.5089, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 82/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 11.8667, 20.3314, -4.45951, 1.38 ) }
    dend_2 { pt3dadd( 12.8863, 22.1313, -6.88908, 1.38 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 84/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 25.7955, 29.0633, 41.9758, 0.55 ) }
    dend_50 { pt3dadd( 26.9736, 28.8163, 42.5645, 0.55 ) }
    dend_50 { pt3dadd( 28.3347, 28.5561, 43.2135, 0.55 ) }
    dend_50 { pt3dadd( 30.98, 28.109, 44.373, 0.55 ) }
    dend_50 { pt3dadd( 32.5913, 27.8661, 45.0588, 1.11 ) }
    dend_50 { pt3dadd( 35.4333, 27.4173, 46.0675, 0.55 ) }
    dend_50 { pt3dadd( 37.5191, 27.0962, 46.7432, 0.55 ) }
    dend_50 { pt3dadd( 38.7538, 26.9016, 47.1065, 0.28 ) }
    dend_50 { pt3dadd( 40.0621, 26.7402, 47.4598, 0.83 ) }
    dend_50 { pt3dadd( 42.1692, 26.5013, 47.9542, 0.55 ) }
    dend_50 { pt3dadd( 45.0472, 26.1874, 48.6225, 0.83 ) }
    dend_50 { pt3dadd( 47.4316, 25.9548, 49.1627, 0.28 ) }
    dend_50 { pt3dadd( 50.1796, 25.7201, 49.8631, 0.83 ) }
    dend_50 { pt3dadd( 52.7687, 25.5413, 50.5789, 0.28 ) }
    dend_50 { pt3dadd( 53.1704, 25.522, 50.7052, 0.28 ) }
    dend_50 { pt3dadd( 54.5126, 25.5171, 51.1614, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( 55.9771, 25.6065, 51.7307, 0.28 ) }
    dend_50 { pt3dadd( 57.128, 25.7305, 52.1923, 0.83 ) }
    dend_50 { pt3dadd( 58.4904, 25.9702, 52.8228, 0.28 ) }
    dend_50 { pt3dadd( 59.5504, 26.1561, 53.2754, 0.83 ) }
    dend_50 { pt3dadd( 60.5081, 26.3431, 53.6871, 0.28 ) }
    dend_50 { pt3dadd( 61.8022, 26.6319, 54.238, 0.83 ) }
    dend_50 { pt3dadd( 63.8402, 27.135, 55.2017, 0.28 ) }
    dend_50 { pt3dadd( 64.81, 27.3952, 55.7162, 0.55 ) }
    dend_50 { pt3dadd( 66.7688, 28.0538, 56.8725, 0.28 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 9/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 25.7955, 29.0633, 41.9758, 0.83 ) }
    dend_49 { pt3dadd( 26.9123, 30.6699, 43.8767, 0.83 ) }
    dend_49 { pt3dadd( 27.9592, 32.1866, 45.8573, 0.83 ) }
    dend_49 { pt3dadd( 29.0273, 33.7208, 47.933, 0.55 ) }
    dend_49 { pt3dadd( 29.3995, 34.2516, 48.8097, 0.55 ) }
    dend_49 { pt3dadd( 30.3678, 35.5828, 51.1453, 0.83 ) }
    dend_49 { pt3dadd( 31.1726, 36.6919, 53.1438, 0.55 ) }
    dend_49 { pt3dadd( 31.9164, 37.669, 55.0214, 0.83 ) }
    dend_49 { pt3dadd( 32.3201, 38.2141, 56.0034, 1.38 ) }
    dend_49 { pt3dadd( 34.6681, 41.6396, 61.7562, 0.55 ) }
    dend_49 { pt3dadd( 35.8298, 43.4833, 64.6148, 1.38 ) }
    dend_49 { pt3dadd( 37.0528, 45.6921, 67.5856, 0.55 ) }
    dend_49 { pt3dadd( 37.2791, 46.1735, 68.1223, 1.11 ) }
    dend_49 { pt3dadd( 38.1768, 48.5076, 70.2964, 0.55 ) }
    dend_49 { pt3dadd( 38.5877, 49.891, 71.376, 0.83 ) }
    dend_49 { pt3dadd( 38.7867, 50.8187, 71.9317, 0.83 ) }
    dend_49 { pt3dadd( 39.1618, 53.3142, 73.3679, 0.55 ) }
    dend_49 { pt3dadd( 39.5187, 56.2849, 75.0166, 0.83 ) }
    dend_49 { pt3dadd( 39.759, 58.7277, 76.4389, 1.11 ) }
    dend_49 { pt3dadd( 39.9272, 60.9139, 77.8103, 0.55 ) }
    dend_49 { pt3dadd( 39.9581, 61.3729, 78.1105, 0.83 ) }
    dend_49 { pt3dadd( 40.0955, 63.2486, 79.4031, 0.28 ) }
    dend_49 { pt3dadd( 40.2728, 65.4753, 80.9823, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 32/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -36.3664, -101.999, -15.2058, 0.28 ) }
    dend_34 { pt3dadd( -37.6021, -112.681, -17.8439, 0.28 ) }
    dend_34 { pt3dadd( -36.7229, -123.518, -20.005, 0.28 ) }
    dend_34 { pt3dadd( -35.4333, -134.46, -21.3158, 0.28 ) }
    dend_34 { pt3dadd( -33.978, -145.091, -24.0508, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 37/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -36.3664, -101.999, -15.2058, 0.28 ) }
    dend_33 { pt3dadd( -37.3209, -111.931, -17.3642, 0.28 ) }
    dend_33 { pt3dadd( -37.7522, -121.965, -19.2338, 0.28 ) }
    dend_33 { pt3dadd( -36.5457, -132.067, -20.259, 0.28 ) }
    dend_33 { pt3dadd( -35.0831, -142.067, -21.7615, 0.28 ) }
    dend_33 { pt3dadd( -32.7366, -151.914, -23.1008, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 43/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -32.1795, -48.2099, 1.84709, 1.11 ) }
    dend_31 { pt3dadd( -32.3318, -50.1078, 3.21406, 1.11 ) }
    dend_31 { pt3dadd( -32.5532, -52.065, 4.7846, 1.11 ) }
    dend_31 { pt3dadd( -32.9686, -55.7372, 7.73138, 1.11 ) }
    dend_31 { pt3dadd( -33.2079, -57.8534, 9.4295, 1.11 ) }
    dend_31 { pt3dadd( -33.4333, -59.847, 11.0294, 1.11 ) }
    dend_31 { pt3dadd( -33.6637, -61.8847, 12.6645, 1.38 ) }
    dend_31 { pt3dadd( -34.0317, -65.2793, 15.5581, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -32.1795, -48.2099, 1.84709, 0.83 ) }
    dend_30 { pt3dadd( -32.6641, -52.1798, 1.65411, 0.83 ) }
    dend_30 { pt3dadd( -33.4679, -57.0101, 1.43366, 0.83 ) }
    dend_30 { pt3dadd( -34.3354, -61.7845, 1.24603, 0.83 ) }
    dend_30 { pt3dadd( -36.2907, -71.9414, 0.889965, 0.83 ) }
    dend_30 { pt3dadd( -37.6024, -78.9781, 0.66065, 0.83 ) }
    dend_30 { pt3dadd( -38.7001, -84.688, 0.497842, 0.83 ) }
    dend_30 { pt3dadd( -39.8114, -90.0638, 0.525397, 0.83 ) }
    dend_30 { pt3dadd( -40.5658, -94.1082, 0.657481, 0.83 ) }
    dend_30 { pt3dadd( -41.0216, -96.7249, 0.752459, 0.83 ) }
    dend_30 { pt3dadd( -41.6148, -100.536, 1.15227, 0.83 ) }
    dend_30 { pt3dadd( -42.5976, -109.039, 2.25269, 0.83 ) }
    dend_30 { pt3dadd( -43.265, -115.147, 3.22738, 0.55 ) }
    dend_30 { pt3dadd( -43.4571, -119.661, 4.0666, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 65/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 4.3251, -5.53593, 34.5829, 0.55 ) }
    dend_24 { pt3dadd( 3.40766, -6.03445, 38.8924, 0.55 ) }
    dend_24 { pt3dadd( 2.07839, -6.65014, 45.5725, 1.11 ) }
    dend_24 { pt3dadd( 0.93783, -7.1748, 51.3559, 0.83 ) }
    dend_24 { pt3dadd( -0.170226, -7.59995, 56.5475, 1.66 ) }
    dend_24 { pt3dadd( -2.36834, -8.22583, 66.3921, 1.11 ) }
    dend_24 { pt3dadd( -3.15697, -8.3943, 69.8316, 1.38 ) }
    dend_24 { pt3dadd( -5.38453, -8.55848, 78.5816, 0.83 ) }
    dend_24 { pt3dadd( -6.35066, -8.60726, 82.0963, 1.66 ) }
    dend_24 { pt3dadd( -8.33078, -8.70885, 88.4559, 0.83 ) }
    dend_24 { pt3dadd( -9.32177, -8.80111, 91.2102, 0.83 ) }
    dend_24 { pt3dadd( -10.6155, -9.07768, 94.1562, 1.38 ) }
    dend_24 { pt3dadd( -11.885, -9.40748, 96.5554, 1.38 ) }
    dend_24 { pt3dadd( -14.2817, -9.96634, 100.092, 0.83 ) }
    dend_24 { pt3dadd( -17.2724, -10.6234, 103.853, 0.55 ) }
    dend_24 { pt3dadd( -17.9597, -10.8104, 104.668, 0.55 ) }
    dend_24 { pt3dadd( -19.7322, -11.4019, 106.852, 0.83 ) }
    dend_24 { pt3dadd( -21.7833, -12.2153, 109.565, 0.55 ) }
    dend_24 { pt3dadd( -22.586, -12.5768, 110.825, 0.55 ) }
    dend_24 { pt3dadd( -24.7096, -13.6, 114.541, 1.11 ) }
    dend_24 { pt3dadd( -27.3519, -14.9671, 119.514, 0.55 ) }
    dend_24 { pt3dadd( -28.8993, -15.7486, 122.414, 0.83 ) }
    dend_24 { pt3dadd( -30.8239, -16.7228, 125.857, 1.38 ) }
    dend_24 { pt3dadd( -33.8774, -18.4409, 131.551, 0.55 ) }
    dend_24 { pt3dadd( -34.6161, -18.8908, 132.972, 0.83 ) }
    dend_24 { pt3dadd( -36.3503, -19.9726, 136.271, 0.83 ) }
    dend_24 { pt3dadd( -37.9864, -20.7464, 138.864, 0.55 ) }
    dend_24 { pt3dadd( -39.398, -21.2045, 140.778, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 93/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 4.3251, -5.53593, 34.5829, 0.83 ) }
    dend_21 { pt3dadd( 8.03471, -6.64098, 38.0488, 0.83 ) }
    dend_21 { pt3dadd( 11.6329, -7.75384, 41.5338, 0.83 ) }
    dend_21 { pt3dadd( 15.9291, -9.08254, 45.6947, 0.83 ) }
    dend_21 { pt3dadd( 19.2955, -10.1237, 48.9553, 0.83 ) }
    dend_21 { pt3dadd( 23.6203, -11.4614, 53.1441, 0.83 ) }
    dend_21 { pt3dadd( 28.737, -13.0439, 58.0998, 1.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_21 { pt3dadd( 33.258, -14.5437, 62.9976, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 1/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.30078, 26.9849, -4.28845, 0.55 ) }
    dend_10 { pt3dadd( -2.11779, 29.4444, -1.69988, 0.55 ) }
    dend_10 { pt3dadd( -0.581428, 32.7743, 1.48631, 0.28 ) }
    dend_10 { pt3dadd( -0.340614, 33.3223, 1.9823, 0.83 ) }
    dend_10 { pt3dadd( 3.00538, 40.6583, 8.27327, 0.28 ) }
    dend_10 { pt3dadd( 3.60084, 41.9147, 9.29546, 1.38 ) }
    dend_10 { pt3dadd( 8.4705, 51.9926, 16.6211, 0.28 ) }
    dend_10 { pt3dadd( 9.29585, 53.6799, 17.6983, 1.66 ) }
    dend_10 { pt3dadd( 11.9447, 58.9142, 20.6482, 0.28 ) }
    dend_10 { pt3dadd( 13.3203, 61.4917, 21.97, 0.28 ) }
    dend_10 { pt3dadd( 14.4009, 63.3969, 22.753, 1.66 ) }
    dend_10 { pt3dadd( 17.9394, 69.4314, 24.9454, 0.28 ) }
    dend_10 { pt3dadd( 19.913, 72.5919, 25.7917, 1.38 ) }
    dend_10 { pt3dadd( 21.883, 75.6705, 26.6141, 0.28 ) }
    dend_10 { pt3dadd( 22.8153, 77.1065, 26.9355, 0.55 ) }
    dend_10 { pt3dadd( 24.7384, 80.299, 27.7757, 0.28 ) }
    dend_10 { pt3dadd( 25.368, 81.3676, 28.1054, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.30078, 26.9849, -4.28845, 0.28 ) }
    dend_9 { pt3dadd( -8.36687, 29.9583, -4.60562, 0.28 ) }
    dend_9 { pt3dadd( -9.35903, 30.5724, -4.75476, 0.83 ) }
    dend_9 { pt3dadd( -11.5935, 32.0056, -5.12045, 0.28 ) }
    dend_9 { pt3dadd( -12.889, 32.9216, -5.19883, 0.83 ) }
    dend_9 { pt3dadd( -15.2875, 34.6746, -5.27119, 0.28 ) }
    dend_9 { pt3dadd( -16.2289, 35.3843, -5.28548, 0.83 ) }
    dend_9 { pt3dadd( -20.6101, 39.0718, -5.27864, 0.28 ) }
    dend_9 { pt3dadd( -21.6467, 39.9941, -5.25776, 0.83 ) }
    dend_9 { pt3dadd( -30.8964, 47.5332, -4.54484, 0.28 ) }
    dend_9 { pt3dadd( -31.2274, 47.7873, -4.50715, 1.38 ) }
    dend_9 { pt3dadd( -32.0666, 48.4151, -4.36653, 1.38 ) }
    dend_9 { pt3dadd( -33.9663, 49.7903, -3.97581, 0.28 ) }
    dend_9 { pt3dadd( -34.7037, 50.3443, -3.81074, 0.55 ) }
    dend_9 { pt3dadd( -43.077, 56.7068, -2.15724, 0.28 ) }
    dend_9 { pt3dadd( -44.5745, 57.7916, -1.88072, 1.11 ) }
    dend_9 { pt3dadd( -48.7113, 60.7188, -1.12222, 0.28 ) }
    dend_9 { pt3dadd( -49.3983, 61.1895, -0.998127, 0.83 ) }
    dend_9 { pt3dadd( -54.7583, 64.7781, -0.0655459, 0.28 ) }
    dend_9 { pt3dadd( -54.9995, 64.9576, -0.0284706, 0.55 ) }
    dend_9 { pt3dadd( -63.0024, 72.0055, 0.223788, 0.55 ) }
    dend_9 { pt3dadd( -70.4794, 79.3631, 2.2164, 0.55 ) }
    dend_9 { pt3dadd( -76.9268, 87.9159, 2.65739, 0.55 ) }
    dend_9 { pt3dadd( -82.2312, 97.2651, 2.4187, 0.55 ) }
    dend_9 { pt3dadd( -88.8371, 105.458, 0.456064, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 12.8863, 22.1313, -6.88908, 0.83 ) }
    dend_4 { pt3dadd( 16.4123, 21.5889, -9.14814, 0.83 ) }
    dend_4 { pt3dadd( 20.7927, 21.0375, -11.7312, 0.83 ) }
    dend_4 { pt3dadd( 22.8162, 20.9358, -12.7747, 0.83 ) }
    dend_4 { pt3dadd( 26.7409, 20.8569, -14.7046, 0.55 ) }
    dend_4 { pt3dadd( 28.383, 20.9348, -15.4228, 0.55 ) }
    dend_4 { pt3dadd( 31.5602, 21.1491, -16.7588, 0.83 ) }
    dend_4 { pt3dadd( 35.4201, 21.5993, -18.173, 0.83 ) }
    dend_4 { pt3dadd( 39.3554, 22.2537, -19.5737, 0.83 ) }
    dend_4 { pt3dadd( 41.7157, 22.6628, -20.3828, 1.11 ) }
    dend_4 { pt3dadd( 47.2888, 23.6779, -22.0787, 1.11 ) }
    dend_4 { pt3dadd( 50.54, 24.3197, -23.1243, 0.55 ) }
    dend_4 { pt3dadd( 52.7254, 24.767, -23.8345, 0.55 ) }
    dend_4 { pt3dadd( 54.6395, 25.1426, -24.5001, 1.11 ) }
    dend_4 { pt3dadd( 57.5815, 25.646, -25.5494, 0.55 ) }
    dend_4 { pt3dadd( 59.8317, 26.0447, -26.3173, 0.55 ) }
    dend_4 { pt3dadd( 62.7509, 26.5339, -27.2918, 1.11 ) }
    dend_4 { pt3dadd( 64.6483, 26.8904, -27.8256, 0.55 ) }
    dend_4 { pt3dadd( 66.9668, 27.2819, -28.4077, 0.28 ) }
    dend_4 { pt3dadd( 69.9462, 27.732, -29.0295, 0.83 ) }
    dend_4 { pt3dadd( 75.6488, 28.354, -29.8657, 0.28 ) }
    dend_4 { pt3dadd( 77.6418, 28.4368, -30.0435, 0.55 ) }
    dend_4 { pt3dadd( 79.8878, 28.3415, -30.0821, 0.28 ) }
    dend_4 { pt3dadd( 81.3743, 28.1675, -30.0467, 0.28 ) }
    dend_4 { pt3dadd( 83.4303, 27.7295, -29.8885, 1.11 ) }
    dend_4 { pt3dadd( 86.9599, 26.73, -29.4983, 0.55 ) }
    dend_4 { pt3dadd( 89.9946, 25.6129, -29.021, 1.66 ) }
    dend_4 { pt3dadd( 93.8931, 24.0545, -28.3978, 0.28 ) }
    dend_4 { pt3dadd( 95.5379, 23.3676, -28.1466, 0.28 ) }
    dend_4 { pt3dadd( 98.3817, 22.2219, -27.6785, 0.83 ) }
    dend_4 { pt3dadd( 109.09, 21.9392, -28.9111, 0.83 ) }
    dend_4 { pt3dadd( 119.763, 20.4218, -28.5122, 0.83 ) }
    dend_4 { pt3dadd( 130.504, 21.013, -27.758, 0.83 ) }
    dend_4 { pt3dadd( 141.031, 21.2069, -25.4295, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 77/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.8863, 22.1313, -6.88908, 1.11 ) }
    dend_3 { pt3dadd( 13.044, 24.3201, -7.20526, 1.11 ) }
    dend_3 { pt3dadd( 13.3486, 26.8832, -7.64102, 0.83 ) }
    dend_3 { pt3dadd( 13.745, 28.8756, -8.00745, 0.83 ) }
    dend_3 { pt3dadd( 14.2828, 31.2836, -8.49055, 1.38 ) }
    dend_3 { pt3dadd( 15.2561, 35.8585, -9.61679, 0.83 ) }
    dend_3 { pt3dadd( 15.7631, 38.3801, -10.3492, 0.83 ) }
    dend_3 { pt3dadd( 16.1063, 40.0431, -10.914, 0.83 ) }
    dend_3 { pt3dadd( 16.8944, 44.215, -12.7492, 0.83 ) }
    dend_3 { pt3dadd( 17.1509, 45.6716, -13.4886, 0.83 ) }
    dend_3 { pt3dadd( 17.6493, 49.121, -15.4897, 0.83 ) }
    dend_3 { pt3dadd( 17.8855, 51.3192, -16.8707, 1.11 ) }
    dend_3 { pt3dadd( 18.0044, 52.8149, -17.8047, 1.11 ) }
    dend_3 { pt3dadd( 18.3153, 56.7239, -20.1045, 0.83 ) }
    dend_3 { pt3dadd( 18.5245, 58.8471, -21.304, 0.83 ) }
    dend_3 { pt3dadd( 18.8741, 61.2482, -22.5743, 1.11 ) }
    dend_3 { pt3dadd( 19.0882, 62.6378, -23.252, 0.28 ) }
    dend_3 { pt3dadd( 19.3604, 64.5684, -24.163, 0.83 ) }
    dend_3 { pt3dadd( 19.6735, 69.536, -26.1727, 0.83 ) }
    dend_3 { pt3dadd( 19.7463, 72.6416, -27.1913, 1.66 ) }
    dend_3 { pt3dadd( 19.7297, 76.6064, -28.3544, 0.55 ) }
    dend_3 { pt3dadd( 19.6786, 79.4216, -29.0903, 0.55 ) }
    dend_3 { pt3dadd( 19.5744, 82.4173, -29.8129, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( 19.0035, 92.7735, -32.3746, 0.28 ) }
    dend_3 { pt3dadd( 18.885, 94.6315, -32.8344, 1.66 ) }
    dend_3 { pt3dadd( 18.6926, 99.5432, -33.9865, 0.28 ) }
    dend_3 { pt3dadd( 18.6863, 100.143, -34.1109, 0.83 ) }
    dend_3 { pt3dadd( 18.7113, 101.756, -34.4317, 0.28 ) }
    dend_3 { pt3dadd( 18.8246, 105.924, -35.2037, 1.66 ) }
    dend_3 { pt3dadd( 19.0618, 111.143, -36.2126, 0.28 ) }
    dend_3 { pt3dadd( 19.1087, 112.679, -36.4837, 1.38 ) }
    dend_3 { pt3dadd( 19.253, 120.385, -37.576, 0.28 ) }
    dend_3 { pt3dadd( 19.2008, 121.905, -37.7472, 1.66 ) }
    dend_3 { pt3dadd( 18.834, 126.158, -38.0704, 0.28 ) }
    dend_3 { pt3dadd( 18.7221, 126.83, -38.1342, 0.83 ) }
    dend_3 { pt3dadd( 17.5431, 131.97, -38.8203, 0.28 ) }
    dend_3 { pt3dadd( 17.306, 132.891, -38.9668, 0.83 ) }
    dend_3 { pt3dadd( 15.0724, 140.547, -40.5367, 0.28 ) }
    dend_3 { pt3dadd( 14.4291, 142.592, -41.0102, 1.11 ) }
    dend_3 { pt3dadd( 10.9087, 152.488, -43.6677, 0.28 ) }
    dend_3 { pt3dadd( 10.8004, 152.766, -43.7505, 0.83 ) }
    dend_3 { pt3dadd( 12.7158, 163.599, -45.0035, 0.83 ) }
    dend_3 { pt3dadd( 15.0679, 174.418, -45.2749, 0.83 ) }
    dend_3 { pt3dadd( 17.7029, 184.914, -47.5342, 0.83 ) }
    dend_3 { pt3dadd( 21.6318, 195.191, -48.5635, 0.83 ) }
    dend_3 { pt3dadd( 26.0746, 205.158, -50.215, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 33.258, -14.5437, 62.9976, 0.28 ) }
    dend_23 { pt3dadd( 34.2869, -15.8495, 63.9942, 0.28 ) }
    dend_23 { pt3dadd( 34.7393, -16.445, 64.5202, 0.83 ) }
    dend_23 { pt3dadd( 35.7849, -17.7104, 65.791, 0.28 ) }
    dend_23 { pt3dadd( 36.2157, -18.1871, 66.368, 0.83 ) }
    dend_23 { pt3dadd( 37.7506, -19.9435, 68.6953, 0.28 ) }
    dend_23 { pt3dadd( 37.9985, -20.2518, 69.1227, 0.83 ) }
    dend_23 { pt3dadd( 39.0034, -21.5908, 71.2316, 0.28 ) }
    dend_23 { pt3dadd( 39.9175, -22.8171, 73.2662, 0.83 ) }
    dend_23 { pt3dadd( 40.9539, -24.2639, 75.7654, 0.28 ) }
    dend_23 { pt3dadd( 41.8573, -25.6346, 78.168, 1.38 ) }
    dend_23 { pt3dadd( 42.5822, -26.808, 80.2877, 0.28 ) }
    dend_23 { pt3dadd( 43.0694, -27.6181, 81.819, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 33.258, -14.5437, 62.9976, 0.55 ) }
    dend_22 { pt3dadd( 37.3787, -14.974, 67.0184, 0.55 ) }
    dend_22 { pt3dadd( 38.001, -15.0256, 67.6723, 0.28 ) }
    dend_22 { pt3dadd( 40.1936, -15.2343, 70.0104, 0.83 ) }
    dend_22 { pt3dadd( 44.5078, -15.6768, 74.6001, 0.83 ) }
    dend_22 { pt3dadd( 47.9918, -16.0082, 78.1998, 0.83 ) }
    dend_22 { pt3dadd( 50.1968, -16.1989, 80.4162, 1.38 ) }
    dend_22 { pt3dadd( 54.3763, -16.429, 84.585, 0.55 ) }
    dend_22 { pt3dadd( 55.6643, -16.4822, 85.819, 0.55 ) }
    dend_22 { pt3dadd( 58.8896, -16.576, 88.6897, 0.55 ) }
    dend_22 { pt3dadd( 62.0662, -16.6227, 91.2391, 1.11 ) }
    dend_22 { pt3dadd( 65.429, -16.6557, 93.6304, 0.55 ) }
    dend_22 { pt3dadd( 68.3893, -16.6368, 95.5797, 1.38 ) }
    dend_22 { pt3dadd( 71.5694, -16.5969, 97.4731, 1.11 ) }
    dend_22 { pt3dadd( 75.0208, -16.4715, 99.4406, 0.55 ) }
    dend_22 { pt3dadd( 78.575, -16.2418, 101.41, 0.55 ) }
    dend_22 { pt3dadd( 80.4693, -16.0803, 102.481, 0.55 ) }
    dend_22 { pt3dadd( 82.0809, -15.9027, 103.446, 0.83 ) }
    dend_22 { pt3dadd( 84.3645, -15.5883, 104.906, 0.83 ) }
    dend_22 { pt3dadd( 85.8026, -15.3252, 106.005, 0.83 ) }
    dend_22 { pt3dadd( 88.2621, -14.7187, 108.306, 0.55 ) }
    dend_22 { pt3dadd( 89.3573, -14.3744, 109.517, 0.83 ) }
    dend_22 { pt3dadd( 91.1727, -13.6294, 111.647, 0.55 ) }
    dend_22 { pt3dadd( 91.7834, -13.3415, 112.412, 0.83 ) }
    dend_22 { pt3dadd( 94.2146, -12.0521, 115.51, 0.55 ) }
    dend_22 { pt3dadd( 95.2872, -11.5421, 116.743, 0.55 ) }
    dend_22 { pt3dadd( 96.8544, -10.8183, 118.437, 0.55 ) }
    dend_22 { pt3dadd( 97.2881, -10.6229, 118.866, 0.83 ) }
    dend_22 { pt3dadd( 99.7789, -9.59906, 121.198, 0.55 ) }
    dend_22 { pt3dadd( 102.601, -8.54711, 123.714, 1.11 ) }
    dend_22 { pt3dadd( 106.995, -7.00836, 127.44, 0.55 ) }
    dend_22 { pt3dadd( 109.104, -6.32204, 129.171, 1.11 ) }
    dend_22 { pt3dadd( 112.607, -5.24412, 131.991, 0.55 ) }
    dend_22 { pt3dadd( 114.673, -4.65723, 133.626, 0.83 ) }
    dend_22 { pt3dadd( 117.116, -4.02143, 135.477, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, axon_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, axon_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
    ModelViewParmSubset_5 = new SectionList()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_43 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_38 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_37 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_48 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_45 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_44 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_42 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_32 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_5 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_50 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_49 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_34 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_30 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_24 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_21 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_4 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_3 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_22 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_18 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_11 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_47 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_6 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_40 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_2 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_8 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_20 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_36 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_41 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_51 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_53 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_14 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_29 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_31 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_23 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 7
    dend_43 nseg = 7
    dend_38 nseg = 5
    dend_37 nseg = 9
    dend_35 nseg = 7
    dend_15 nseg = 7
    dend_48 nseg = 3
    dend_45 nseg = 7
    dend_44 nseg = 5
    dend_42 nseg = 7
    dend_32 nseg = 3
    dend_25 nseg = 5
    dend_16 nseg = 3
    dend_7 nseg = 5
    dend_5 nseg = 5
    dend_50 nseg = 3
    dend_49 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_30 nseg = 3
    dend_24 nseg = 5
    dend_21 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 5
    dend_4 nseg = 7
    dend_3 nseg = 9
    dend_22 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_NBC_2d5f9c7a57_0_0


