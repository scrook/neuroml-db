// Cell: cACint209_L4_LBC_66ec8fed8f_0_0
/*
{
  "id" : "cACint209_L4_LBC_66ec8fed8f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.73047, 10.9289, -0.109913, 2.97676", "-4.27116, 9.94502, -0.0979061, 5.12241", "-3.81185, 8.96111, -0.0858989, 5.98423", "-3.35253, 7.9772, -0.0738916, 6.89486", "-2.89322, 6.99329, -0.0618844, 7.89654", "-2.43391, 6.00938, -0.0498771, 8.40692", "-1.9746, 5.02548, -0.0378699, 9.08975", "-1.51528, 4.04157, -0.0258627, 10.1163", "-1.05597, 3.05766, -0.0138554, 11.1552", "-0.59666, 2.07375, -0.00184817, 12.1857", "-0.137347, 1.08984, 0.0101591, 12.9947", "0.321965, 0.10593, 0.0221663, 13.6358", "0.781277, -0.87798, 0.0341736, 13.9465", "1.24059, -1.86189, 0.0461808, 13.7148", "1.6999, -2.8458, 0.058188, 13.1835", "2.15921, -3.82971, 0.0701953, 12.6298", "2.61853, -4.81362, 0.0822025, 11.4903", "3.07784, -5.79753, 0.0942098, 9.98962", "3.53715, -6.78143, 0.106217, 8.61442", "3.99646, -7.76534, 0.118224, 6.00494", "4.45578, -8.74925, 0.130231, 3.45172" ]
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-4.51463, 9.13276, 8.93646, 1.38", "-4.98611, 10.4401, 9.77132, 1.38", "-5.82566, 12.4859, 11.1571, 1.38", "-7.04915, 16.0028, 13.3083, 1.38", "-7.97078, 18.7727, 14.8692, 1.38", "-9.27861, 22.6624, 16.9166, 1.11", "-10.3336, 25.6025, 18.393, 1.38", "-11.0213, 27.4979, 19.3012, 1.11", "-12.5174, 31.8365, 21.1524, 1.11", "-13.3462, 34.353, 22.0079, 0.83", "-14.131, 37.2591, 22.6576, 0.83", "-14.5696, 39.392, 22.8854, 0.83", "-14.847, 41.3483, 22.9304, 0.83", "-15.2348, 44.8073, 22.8286, 0.83", "-15.4737, 47.0583, 22.7057, 1.11", "-15.6666, 50.4854, 22.412, 0.83", "-15.7082, 53.9923, 22.0051, 0.83", "-15.6379, 58.2943, 21.4298, 0.83", "-15.6395, 61.7334, 20.9068, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999933530368673,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-1.91463, 10.5678, -6.97355, 4.43", "-1.67285, 13.3558, -6.97355, 4.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999933530368673
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "2.97537, 4.80726, -7.96354, 1.94", "3.11431, 6.18075, -8.8174, 1.66", "3.44222, 9.42235, -10.8326, 1.66", "3.86936, 13.6449, -13.4577, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999933530368673
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "7.41537, 0.184505, 9.55646, 1.66", "10.1232, 2.08509, 9.55646, 1.66", "18.5462, 7.23522, 9.31543, 1.66", "26.6606, 12.8194, 10.1675, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999933530368673
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-6.57463, 9.39926, -2.93354, 1.94", "-7.14427, 9.96612, -2.93354, 1.94", "-9.4478, 12.2584, -2.93354, 1.94", "-12.7435, 15.5381, -2.93354, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999933530368673
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-5.27463, -4.13074, 9.55646, 1.11", "-7.58632, -4.0596, 8.58872, 1.11", "-9.78059, -3.91266, 7.61861, 1.11", "-11.5076, -3.82081, 6.87881, 1.38", "-14.7962, -3.72559, 5.6573, 1.11", "-19.9892, -3.75631, 3.98765, 0.83", "-20.9603, -3.77068, 3.71683, 1.66", "-22.7851, -3.81063, 3.27601, 1.11", "-24.998, -4.02676, 2.8704, 1.38", "-28.956, -4.66946, 2.45039, 1.38", "-30.7713, -5.07719, 2.4285, 1.38", "-33.5822, -5.68261, 2.66887, 1.38", "-35.3779, -6.05088, 2.92851, 1.11", "-37.9779, -6.44776, 3.51131, 1.38", "-39.75, -6.63041, 4.00368, 0.55", "-41.3987, -6.67339, 4.55185, 0.83", "-44.6227, -6.5834, 5.71814, 0.83", "-48.4388, -6.40123, 7.13892, 1.11", "-53.0722, -5.90485, 8.80587, 0.83", "-55.2498, -5.60772, 9.54037, 0.83", "-58.339, -5.13541, 10.4884, 0.83", "-61.5697, -4.67843, 11.3213, 0.83", "-64.3009, -4.30088, 11.8803, 0.83", "-67.0227, -3.86333, 12.2229, 0.83", "-70.9996, -3.26202, 12.5615, 0.83", "-73.5571, -2.83118, 12.7208, 0.83", "-78.04, -2.26361, 12.8641, 0.83", "-79.9103, -2.0828, 12.8974, 0.83", "-82.3331, -1.97214, 12.9346, 0.83", "-85.0432, -2.09199, 12.9622, 0.83", "-87.9351, -2.27976, 12.9672, 0.83", "-90.7415, -2.5415, 12.9659, 0.83", "-93.5738, -2.7259, 12.9585, 0.83", "-97.6497, -2.85245, 13.0281, 0.55", "-99.6781, -2.8254, 13.0952, 0.55", "-102.949, -2.60964, 13.2488, 0.83", "-105.851, -2.23497, 13.4378, 0.83", "-108.577, -1.7075, 13.7438, 0.83", "-111.197, -1.16203, 14.127, 0.83", "-112.872, -0.841493, 14.4022, 0.83", "-114.971, -0.511801, 14.7402, 0.55", "-117.139, -0.307303, 15.0519, 0.55", "-120.733, -0.0781453, 15.4741, 0.55", "-124.277, -0.0714673, 15.778, 0.55", "-127.658, -0.210109, 15.9447, 0.55", "-128.8, -0.270428, 15.9348, 0.55", "-130.186, -0.417805, 15.8282, 0.28", "-131.382, -0.711183, 15.625, 0.55", "-132.613, -1.21089, 15.1476, 0.28", "-133.388, -1.72467, 14.7159, 0.83", "-135.386, -3.56799, 13.3063, 0.55", "-136.806, -5.13684, 12.0781, 0.55", "-137.514, -5.953, 11.4265, 0.55", "-139.017, -7.66373, 10.103, 0.55", "-139.569, -8.21177, 9.65319, 0.55", "-141.519, -9.89612, 8.21959, 0.83", "-143.575, -11.5323, 6.90106, 0.83", "-146.306, -13.4572, 5.29587, 0.55", "-148.657, -15.1233, 4.0071, 0.55", "-150.39, -16.3353, 3.15818, 1.38", "-152.274, -17.5528, 2.27092, 0.83", "-154.112, -18.6288, 1.44615, 0.83", "-155.463, -19.4119, 0.795124, 0.83", "-157.129, -20.5899, -0.360458, 0.83", "-158.341, -21.5179, -1.34315, 0.83", "-159.411, -22.4766, -2.3344, 1.38", "-161.045, -24.0838, -4.12455, 0.55", "-162.409, -25.4576, -5.90426, 1.11", "-164.318, -27.5111, -8.82763, 0.83", "-174.076, -27.7596, -11.5695, 0.83", "-184.012, -26.2979, -13.0589, 0.83", "-193.374, -23.0189, -15.3639, 0.83", "-202.948, -19.9954, -17.0433, 0.83", "-212.409, -18.3674, -20.3578, 0.83", "-221.428, -16.6308, -24.6959, 0.83", "-230.757, -15.9185, -28.6196, 0.83", "-240.639, -15.8641, -30.8927, 0.83", "-250.388, -17.8948, -32.7874, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999933530368673,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.46537, -8.76374, -2.28354, 3.6", "4.34623, -11.0567, -2.02607, 3.6", "4.19551, -14.1477, -1.71295, 3.05", "4.02985, -17.5451, -1.36878, 2.77", "3.74403, -23.4066, -0.774995, 2.77", "3.46529, -29.123, -0.195908, 2.49", "3.27434, -33.0391, 0.200799, 2.77", "3.08097, -35.8258, 0.481641, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999933530368673
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.45578, -8.74925, 0.130231, 0.83", "10.8008, -22.3412, 0.130231, 0.83", "17.1459, -35.9331, 0.130231, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-15.6395, 61.7334, 20.9068, 0.83", "-15.5509, 64.833, 22.6808, 0.83", "-15.5964, 66.7648, 23.8175, 1.11", "-15.7014, 69.31, 25.2021, 0.83", "-15.8573, 71.5857, 26.3982, 1.11", "-16.161, 75.7937, 28.5836, 1.11", "-16.5966, 81.2736, 31.3296, 0.83", "-16.8484, 83.9254, 32.608, 1.11", "-17.202, 87.5237, 34.2281, 1.11", "-17.4387, 89.2468, 34.9354, 0.83", "-17.7712, 91.3373, 35.6859, 0.83", "-18.1117, 93.7549, 36.3815, 0.55", "-18.263, 95.0253, 36.5965, 0.83", "-18.6067, 97.5815, 36.9848, 0.55", "-18.9721, 99.7851, 37.2948, 0.55", "-19.1172, 100.844, 37.4376, 0.55", "-19.4348, 103.614, 37.8027, 1.11", "-19.7306, 107.501, 38.3781, 0.83", "-19.8715, 109.308, 38.6782, 0.83", "-19.9685, 111.004, 39.0053, 0.83", "-20.0894, 113.564, 39.551, 0.83", "-20.2222, 115.472, 39.9496, 0.55", "-20.2984, 116.523, 40.1781, 1.11", "-20.4686, 119.17, 40.8239, 0.55", "-20.5418, 120.581, 41.1683, 1.11", "-20.8043, 123.078, 41.7081, 0.83", "-21.0562, 124.316, 41.9603, 0.83", "-21.7603, 127.333, 42.6422, 1.38", "-21.2924, 138.404, 49.2246, 1.38", "-23.2321, 149.419, 55.6036, 1.38", "-26.5671, 160.316, 61.5703, 1.38", "-29.6374, 171.28, 67.5653, 1.38" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-15.6395, 61.7334, 20.9068, 0.83", "-17.6666, 64.9245, 20.9828, 0.83", "-20.1993, 68.978, 21.0615, 0.83", "-21.6811, 71.3637, 21.0981, 0.83", "-23.8634, 74.953, 21.1349, 0.83", "-25.8222, 78.1835, 21.169, 0.83", "-26.9534, 80.0281, 21.1859, 0.55", "-27.9723, 81.7993, 21.1951, 0.55", "-28.8605, 83.2572, 21.1832, 0.55", "-29.8754, 84.7567, 21.1318, 0.55", "-30.979, 86.2445, 21.0705, 0.55", "-32.2982, 87.9835, 20.9927, 1.66", "-33.7541, 89.7633, 20.8717, 0.55", "-35.2113, 91.4752, 20.7241, 0.55", "-36.9523, 93.5416, 20.5493, 0.55", "-38.3836, 95.3231, 20.4076, 0.55", "-39.6854, 96.9694, 20.2653, 0.55", "-40.7627, 98.3596, 20.1483, 0.55", "-42.6054, 100.785, 19.9602, 0.83", "-43.8268, 102.646, 19.8314, 0.55", "-44.8568, 104.407, 19.7238, 0.83" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-1.67285, 13.3558, -6.97355, 2.49", "-2.97453, 16.771, -7.92836, 2.49", "-4.46556, 20.8541, -9.67285, 1.38", "-5.74557, 25.1685, -12.0469, 1.38", "-6.72657, 29.5523, -14.9118, 1.38", "-7.29842, 33.7842, -17.8477, 1.38", "-7.41966, 36.0209, -19.4121, 1.94", "-7.27413, 41.7281, -23.8305, 1.38", "-6.86934, 47.1875, -28.454, 1.38", "-6.44308, 50.6684, -31.5331, 1.38", "-6.02893, 54.0057, -34.49, 1.38", "-5.63431, 56.8094, -36.9629, 1.38", "-5.04036, 61.4, -40.8164, 1.38", "-4.50876, 66.8452, -44.9031, 1.38", "-4.51691, 71.7757, -48.4825, 1.38", "-5.0228, 76.2856, -51.6807, 1.66" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-1.67285, 13.3558, -6.97355, 2.49", "0.827245, 16.2177, -8.54744, 2.49", "4.18143, 20.0573, -10.659, 2.49" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "3.86936, 13.6449, -13.4577, 1.11", "3.79722, 13.4771, -15.7572, 1.11", "3.7894, 13.398, -16.7403, 1.11", "3.74206, 12.6018, -23.8584, 0.83", "3.76156, 12.2295, -26.5932, 0.83", "3.8123, 11.3105, -32.4956, 0.83", "3.83838, 10.5671, -36.6194, 1.11", "3.78876, 10.1856, -38.5672, 0.55", "3.70568, 9.92441, -40.3514, 0.55", "3.55846, 9.61582, -43.3349, 0.83", "3.34825, 9.46526, -46.8669, 0.28", "3.28492, 9.4567, -48.1311, 1.66", "2.754, 9.66511, -58.6854, 1.38", "2.41195, 9.96282, -66.3531, 0.55", "2.32286, 10.119, -69.3115, 1.11", "2.1713, 10.387, -75.1389, 0.55", "2.14643, 10.4414, -76.6439, 0.55", "2.03626, 10.5043, -81.7642, 1.66", "1.83553, 10.2771, -87.7562, 0.28", "1.74156, 10.1647, -88.9548, 1.11", "1.13507, 9.49236, -94.5535, 0.28", "0.977764, 9.30788, -95.8176, 0.55", "0.192232, 8.44512, -101.847, 0.28", "0.0199407, 8.23278, -103.27, 1.38", "-0.955486, 6.58372, -113.732, 0.28", "-0.993529, 6.43601, -114.606, 0.83", "-0.949853, 6.19571, -115.849, 0.83", "-0.719046, 5.72902, -117.888, 0.55", "-0.17176, 4.98729, -120.241, 1.11", "1.28158, 3.18194, -124.858, 0.28", "1.8726, 2.45479, -126.383, 0.83", "2.23263, 1.94477, -127.475, 0.28", "2.31871, 1.79762, -127.783, 0.55", "3.37093, -0.497278, -132.381, 0.28", "3.43818, -0.651957, -132.691, 0.83", "4.15057, -2.29632, -136.118, 0.28", "4.29528, -2.7125, -137.126, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "3.86936, 13.6449, -13.4577, 1.66", "5.11205, 16.7204, -20.1, 1.66", "6.40804, 19.65, -25.5962, 1.66", "7.05089, 20.9705, -28.2381, 1.66", "7.55271, 21.9182, -30.3375, 1.11", "8.39027, 23.3751, -33.6496, 1.11", "9.46941, 25.0085, -37.2413, 1.11", "10.0926, 25.7284, -38.7495, 1.11", "11.5755, 27.3288, -41.7743, 1.11", "13.7703, 29.6502, -45.5778, 0.83", "14.466, 30.3309, -46.5877, 0.55", "16.552, 31.9535, -48.863, 0.83", "17.8687, 32.8687, -49.8348, 0.55", "18.5282, 33.3048, -50.1209, 0.55", "20.6799, 34.6622, -50.472, 0.83", "22.7594, 35.824, -50.4187, 0.83", "23.8852, 36.45, -50.4054, 0.55", "24.6668, 36.8826, -50.4222, 0.55", "27.1771, 38.2174, -50.6662, 0.83", "29.0214, 39.2342, -51.0979, 0.83", "30.4841, 40.0945, -51.6941, 0.55", "32.8117, 41.4766, -52.9247, 0.83", "34.5166, 42.4619, -53.9446, 0.83", "36.0251, 43.39, -54.9202, 0.83", "38.1523, 44.8406, -56.3676, 1.38", "40.2331, 46.2872, -57.7934, 0.55", "42.0534, 47.534, -59.0868, 0.83", "43.8711, 48.7069, -60.5115, 1.11", "45.7717, 49.9373, -62.1992, 0.83", "47.127, 50.8086, -63.5675, 0.83", "48.825, 51.9159, -65.5337, 0.83", "51.0543, 53.3504, -68.2395, 0.55", "53.6222, 55.0772, -71.399, 0.83", "54.7306, 55.8428, -72.7169, 1.94", "58.0037, 58.0763, -76.4381, 0.55", "59.5095, 59.0804, -78.1065, 0.55", "60.7893, 59.9867, -79.3974, 0.55", "62.363, 61.1868, -80.682, 0.55", "63.9433, 62.4761, -81.6666, 1.11", "66.0733, 64.2862, -82.9146, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "26.6606, 12.8194, 10.1675, 0.83", "38.096, 18.7038, 10.194, 0.83", "48.987, 25.3003, 12.0207, 0.83", "59.9976, 30.7814, 15.6586, 0.83", "72.1957, 33.5231, 18.3523, 0.83", "84.2919, 35.0412, 22.1683, 0.83", "96.7964, 37.6735, 22.8409, 0.83", "109.388, 39.3095, 24.3025, 0.83", "121.899, 41.7191, 25.4385, 0.83", "134.399, 43.8765, 27.0488, 0.83", "146.81, 45.4751, 29.638, 0.83", "158.932, 49.4307, 30.8986, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "26.6606, 12.8194, 10.1675, 0.83", "34.7658, 17.8195, 10.2661, 0.83", "43.1223, 22.0587, 11.8472, 0.83", "50.9643, 26.6941, 14.5747, 0.83", "59.1758, 29.8892, 18.0714, 0.83", "67.2244, 32.9538, 22.0263, 0.83", "75.6291, 34.74, 25.9881, 0.83", "84.206, 37.9158, 28.4859, 0.83", "93.3614, 39.1908, 30.4932, 0.83", "102.348, 40.7633, 33.0008, 0.83", "111.369, 40.584, 35.8231, 0.83", "120.222, 38.519, 38.4537, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-12.7435, 15.5381, -2.93354, 1.66", "-14.1506, 18.4335, -4.05063, 1.66", "-15.4966, 20.7814, -5.01103, 1.66", "-17.2856, 23.6202, -6.17107, 1.66", "-19.4502, 26.9781, -7.53664, 1.38", "-21.5502, 30.2358, -8.86143, 1.66", "-23.6085, 33.4288, -10.16, 1.38", "-25.5869, 36.1835, -11.4068, 1.38", "-27.9492, 39.2266, -12.8617, 1.38", "-29.1805, 40.7453, -13.5485, 1.38" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-12.7435, 15.5381, -2.93354, 1.38", "-16.7916, 16.3926, -6.04136, 1.38", "-24.6272, 17.4119, -11.9127, 1.66", "-29.4802, 17.947, -15.4415, 1.38", "-32.4305, 18.2558, -17.2583, 1.38", "-36.0519, 18.6349, -19.4883, 1.38", "-40.7752, 19.1293, -22.3968, 1.38", "-43.6072, 19.4192, -24.171, 1.11", "-46.8398, 19.507, -25.4078, 1.11", "-53.0072, 19.1334, -26.7117, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.08097, -35.8258, 0.481641, 2.49", "4.88786, -37.8231, -0.0694089, 2.49", "9.1308, -42.513, -1.36338, 1.66", "10.8661, -44.4311, -1.89259, 1.38", "11.4889, -45.1194, -2.0825, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.08097, -35.8258, 0.481641, 1.38", "2.25703, -38.657, 0.352947, 1.38", "1.33113, -41.8385, 0.208326, 1.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "17.1459, -35.9331, 0.130231, 0.83", "23.4909, -49.525, 0.130231, 0.83", "29.836, -63.1169, 0.130231, 0.83" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-44.8568, 104.407, 19.7238, 0.55", "-44.6045, 105.605, 21.159, 0.55", "-44.3444, 106.923, 22.6006, 0.55", "-44.1402, 108.617, 24.3027, 0.28", "-44.0944, 109.464, 25.0377, 1.11", "-44.0405, 113.736, 28.5578, 0.55", "-44.0547, 114.842, 29.4508, 0.55", "-44.1624, 115.944, 30.3268, 0.83", "-44.3696, 117.341, 31.3292, 0.55", "-44.8362, 119.707, 32.8179, 0.55", "-45.315, 121.329, 33.7379, 0.55", "-45.4905, 121.767, 33.9103, 0.83", "-46.09, 123.075, 34.4637, 0.55", "-46.5696, 124.093, 34.9372, 0.83", "-47.0297, 125.088, 35.4143, 0.55", "-47.7325, 126.194, 35.8968, 0.55", "-48.2085, 126.878, 36.0683, 0.83", "-49.3606, 132.531, 40.5794, 0.83", "-51.6539, 137.814, 45.0857, 0.83", "-54.3787, 141.806, 50.5241, 0.83", "-56.2419, 145.558, 56.464, 0.83", "-58.3301, 149.773, 62.0198, 0.83", "-60.5187, 152.94, 68.1721, 0.83" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-44.8568, 104.407, 19.7238, 0.55", "-47.5974, 106.884, 19.6063, 0.55", "-48.855, 108.021, 19.5523, 0.55", "-50.6481, 109.643, 19.4754, 0.55", "-52.6262, 111.431, 19.3906, 0.55", "-54.9023, 113.489, 19.293, 0.55", "-56.6211, 115.043, 19.2193, 0.55" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-5.0228, 76.2856, -51.6807, 0.83", "-7.77057, 76.6121, -52.0424, 0.83", "-9.82726, 76.8186, -52.2172, 0.83", "-11.5866, 77.058, -52.3389, 0.83", "-15.5614, 77.8193, -52.5801, 0.55", "-18.7561, 78.5566, -52.762, 0.55", "-23.6235, 79.7401, -53.0375, 0.83", "-27.6437, 80.8291, -53.1688, 0.83", "-30.3953, 81.7229, -53.2102, 0.83", "-32.7651, 82.6574, -53.1198, 0.55", "-34.1431, 83.2817, -52.9998, 0.55", "-36.0062, 84.3064, -52.7001, 0.55", "-39.4189, 86.4673, -51.9379, 0.55", "-42.603, 88.434, -51.1334, 1.11", "-45.7559, 90.3401, -50.1626, 0.28", "-46.8341, 90.9777, -49.8047, 0.55", "-48.9452, 92.2663, -49.0641, 0.28", "-50.014, 92.9245, -48.6945, 0.55", "-53.4867, 94.9868, -47.5796, 0.55", "-55.7683, 96.3473, -46.9336, 0.28", "-58.3783, 97.9667, -46.2739, 0.55", "-60.1524, 99.1064, -45.835, 0.55", "-62.9999, 100.94, -45.2058, 0.55", "-64.08, 101.653, -44.9705, 0.55", "-67.5513, 104.014, -44.2944, 1.66", "-70.0636, 105.725, -43.8838, 0.28", "-70.8988, 106.321, -43.7351, 0.55", "-72.6193, 107.507, -43.4385, 0.28", "-73.1459, 107.856, -43.3538, 0.55", "-75.116, 109.0, -43.0947, 0.28", "-75.5365, 109.219, -43.0641, 0.55", "-77.4703, 110.146, -43.1857, 0.28", "-79.0665, 110.966, -43.3811, 0.55", "-80.6157, 111.844, -43.6489, 0.55", "-82.3637, 112.911, -44.0023, 0.28", "-83.6165, 113.769, -44.2965, 0.83", "-85.9882, 115.635, -44.9827, 0.28", "-87.6779, 117.3, -45.5452, 0.83", "-88.9984, 118.886, -45.9824, 0.28", "-89.6543, 119.807, -46.2267, 0.28", "-91.071, 122.101, -46.9134, 0.28", "-91.8939, 123.587, -47.3593, 0.55", "-93.6535, 127.108, -48.4075, 0.28", "-94.6985, 129.33, -49.1488, 0.83", "-95.8821, 131.999, -50.0439, 0.28", "-97.0077, 134.599, -50.9081, 0.28", "-97.286, 135.236, -51.1918, 0.55", "-98.0018, 136.793, -51.9137, 0.28", "-98.3974, 137.63, -52.4871, 0.55", "-99.3371, 139.614, -53.9747, 0.28", "-99.8654, 140.73, -54.7936, 0.83", "-102.361, 145.991, -58.717, 0.28", "-103.178, 147.738, -60.1225, 0.55", "-105.543, 152.977, -64.7444, 0.28", "-106.256, 154.519, -66.287, 0.55", "-106.891, 155.871, -67.9007, 0.55" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-5.0228, 76.2856, -51.6807, 0.83", "-3.80418, 78.9309, -53.7588, 0.83" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "4.18143, 20.0573, -10.659, 0.83", "5.10404, 20.2624, -10.6133, 0.83", "6.57997, 20.3636, -10.6566, 0.83", "7.27297, 20.2735, -10.8101, 1.38", "8.78049, 20.1239, -11.2617, 0.83", "9.91225, 20.0661, -11.7089, 0.83", "10.8554, 20.0391, -12.0826, 0.83", "13.2824, 19.9625, -13.0945, 1.11", "15.0083, 19.9345, -13.8206, 1.11", "17.0816, 20.0959, -14.7192, 1.11", "19.2097, 20.3371, -15.6173, 1.11", "21.0294, 20.5119, -16.3749, 1.11", "22.552, 20.6642, -16.9944, 1.11", "24.012, 20.8338, -17.5293, 1.11", "26.567, 21.0507, -18.4272, 1.11", "28.0652, 21.1003, -18.9719, 1.11", "30.1049, 21.1979, -19.6866, 1.11", "31.3671, 21.2439, -20.0853, 0.83", "32.793, 21.2693, -20.5247, 0.83", "33.6959, 21.2731, -20.7863, 0.83", "34.7668, 21.2643, -21.0091, 1.66", "36.5559, 21.5489, -21.2888, 0.55", "38.5734, 22.1409, -21.386, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.18143, 20.0573, -10.659, 1.66", "8.76432, 24.9597, -13.5543, 1.66", "11.1062, 27.4648, -15.0338, 1.66", "14.5915, 31.1931, -17.2356, 1.66", "16.9054, 33.6683, -18.6974, 1.66", "18.7254, 35.6152, -19.8472, 1.66" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "66.0733, 64.2862, -82.9146, 2.22", "66.8801, 64.5803, -84.1112, 2.22", "68.8248, 65.3229, -86.7932, 0.28", "69.8087, 65.6913, -88.1412, 0.28", "70.1391, 65.8143, -88.5627, 0.83", "70.5825, 66.0049, -89.0887, 0.83", "71.9385, 66.6369, -90.6132, 0.55", "72.5668, 66.9712, -91.2642, 0.55", "73.7641, 67.6685, -92.1383, 0.28", "74.4815, 68.1395, -92.6066, 0.83", "75.6646, 68.9978, -93.4485, 0.55", "76.0175, 69.2821, -93.7096, 0.83", "76.5891, 69.7909, -94.1065, 0.28", "77.2072, 70.383, -94.6275, 0.83", "78.5031, 71.6636, -95.976, 0.55", "79.2277, 72.3278, -96.8776, 0.28", "79.6224, 72.6364, -97.4006, 1.38", "80.3821, 73.1017, -98.465, 0.55", "81.3879, 73.5921, -99.9095, 0.28", "82.2038, 73.8586, -101.177, 0.55", "82.7546, 73.9546, -101.999, 0.28", "83.1295, 73.9937, -102.556, 1.38", "84.8404, 74.0963, -105.142, 0.28", "85.081, 74.1035, -105.534, 0.83", "87.0632, 74.2223, -108.773, 0.28", "87.3417, 74.2565, -109.246, 0.83", "87.6849, 74.3266, -109.891, 0.55", "88.4606, 74.5787, -111.457, 2.49", "89.8197, 75.1576, -114.247, 0.55", "90.2195, 75.3528, -115.044, 0.55", "91.2421, 75.9472, -116.913, 0.55", "92.3853, 76.6281, -118.921, 0.83", "93.399, 77.2169, -120.54, 0.28", "93.7139, 77.4099, -120.976, 0.55", "94.2998, 77.7732, -121.635, 0.28", "95.3113, 78.4513, -122.723, 0.28", "96.4064, 79.2994, -123.78, 1.11", "97.3505, 80.1181, -124.614, 0.28", "97.8461, 80.6052, -125.057, 0.28", "98.275, 81.1093, -125.475, 1.11", "99.4605, 82.7788, -126.684, 0.28", "99.7461, 83.3578, -127.017, 0.83", "99.9362, 84.0253, -127.268, 0.28", "100.001, 84.4402, -127.398, 0.55", "100.054, 85.2138, -127.604, 0.28", "100.021, 85.9341, -127.706, 1.11", "99.7825, 87.3034, -127.47, 0.28", "99.6133, 87.8549, -127.355, 0.83" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "66.0733, 64.2862, -82.9146, 0.55", "67.7269, 65.7011, -83.1984, 0.55", "69.5036, 67.263, -83.5463, 0.28", "70.5435, 68.1413, -83.7617, 0.83", "71.8165, 69.1598, -83.9853, 0.28", "72.5726, 69.7093, -84.1651, 0.55", "73.6167, 70.4265, -84.4404, 0.28", "74.2055, 70.8002, -84.6207, 0.55", "75.3102, 71.4982, -84.9765, 0.28", "76.6053, 72.3092, -85.3811, 1.38", "79.1254, 73.8708, -86.1131, 0.55", "80.6042, 74.8034, -86.4868, 0.83", "82.5563, 76.0426, -86.9151, 0.28", "83.6626, 76.7987, -87.1601, 0.83", "85.5101, 78.1527, -87.5649, 0.28", "86.3804, 78.8572, -87.7537, 0.55", "87.5222, 79.8507, -87.9493, 0.28", "88.6992, 80.9327, -88.2196, 0.83", "89.9928, 82.1626, -88.5887, 0.28", "90.3825, 82.5462, -88.7627, 0.55", "91.4364, 83.647, -89.389, 0.28", "91.7793, 84.0197, -89.6473, 0.55", "92.8024, 85.0496, -90.4826, 0.28", "93.3803, 85.584, -90.9566, 0.55", "95.5161, 87.2907, -92.3314, 0.28", "95.7527, 87.4829, -92.5095, 0.55", "98.0889, 89.4159, -94.4184, 0.28", "99.0317, 90.2707, -95.2779, 1.11", "100.898, 92.0939, -97.137, 0.28", "102.712, 94.054, -99.197, 1.38", "106.211, 98.1083, -103.53, 0.28", "106.716, 98.7162, -104.191, 0.55", "108.81, 101.404, -107.156, 0.28", "109.329, 102.117, -107.949, 0.83", "110.349, 103.543, -109.564, 0.28", "110.596, 103.873, -109.942, 0.55", "111.588, 104.861, -110.836, 0.28", "112.133, 105.273, -111.145, 0.55", "114.132, 106.428, -111.773, 0.28", "115.006, 106.88, -111.972, 0.83", "116.319, 107.511, -112.149, 0.28", "116.961, 107.831, -112.228, 0.55", "119.238, 109.015, -112.459, 0.28", "121.237, 109.98, -112.524, 0.83" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "158.932, 49.4307, 30.8986, 0.55", "167.438, 51.5988, 32.3322, 0.55", "175.476, 54.9868, 34.163, 0.55", "184.147, 56.8414, 34.8264, 0.55", "192.805, 58.1173, 36.3488, 0.55", "201.642, 59.0103, 36.4268, 0.55", "210.148, 60.9779, 34.7032, 0.55", "218.374, 63.9792, 33.0101, 0.55", "226.297, 67.2194, 30.483, 0.55", "233.75, 70.4005, 26.7331, 0.55", "241.448, 74.4743, 24.701, 0.55", "248.643, 78.8052, 21.592, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "158.932, 49.4307, 30.8986, 0.55", "168.283, 52.0724, 32.3238, 0.55", "177.623, 54.9422, 33.3682, 0.55", "187.284, 56.6514, 33.5608, 0.55", "196.706, 58.7141, 31.6835, 0.55", "206.094, 60.5842, 29.4752, 0.55", "214.996, 63.2668, 26.2447, 0.55", "223.648, 67.1814, 23.5646, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "120.222, 38.519, 38.4537, 0.55", "129.262, 40.9945, 41.4108, 0.55", "138.586, 42.9113, 43.8482, 0.55", "148.268, 44.0596, 45.0625, 0.55", "157.627, 46.7403, 46.5034, 0.55", "167.086, 47.2563, 49.0727, 0.55", "176.749, 48.0376, 50.6393, 0.55", "186.53, 47.3139, 51.0066, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "120.222, 38.519, 38.4537, 0.55", "126.039, 40.107, 40.2375, 0.55", "132.017, 42.0401, 40.7098, 0.55", "137.735, 44.6714, 41.2073, 0.55", "143.112, 47.6348, 42.6679, 0.55", "148.584, 50.5942, 43.7532, 0.55", "154.116, 52.5334, 46.0304, 0.55", "159.87, 54.9094, 47.0287, 0.55", "165.519, 57.1898, 48.628, 0.55", "170.586, 59.6158, 51.4605, 0.55", "175.433, 61.5935, 54.9343, 0.55", "180.365, 62.4006, 58.7333, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-29.1805, 40.7453, -13.5485, 1.11", "-32.0488, 43.5172, -12.2579, 1.11", "-34.6234, 46.37, -11.4614, 1.11", "-38.0542, 50.6879, -10.8093, 1.11", "-40.7382, 54.42, -10.6303, 1.11", "-42.948, 57.4652, -10.541, 1.11", "-46.3162, 62.0362, -10.5564, 1.11", "-49.5169, 66.4923, -10.9294, 1.11", "-51.4708, 69.2078, -11.4569, 1.11", "-53.1771, 71.6469, -12.1137, 0.83", "-55.9996, 75.4054, -13.3664, 1.38", "-58.8005, 78.865, -14.6926, 1.11", "-60.6421, 80.9718, -15.545, 1.11", "-62.5338, 83.0912, -16.1416, 0.83", "-64.5, 85.5065, -16.663, 0.83", "-67.5131, 89.3496, -17.4707, 0.83", "-70.1354, 93.0337, -18.3196, 0.83", "-72.8865, 97.1127, -19.0801, 0.83", "-76.0082, 102.021, -19.7644, 1.11", "-78.047, 105.584, -20.0354, 0.83" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-29.1805, 40.7453, -13.5485, 1.11", "-30.2876, 44.0727, -12.8776, 1.11", "-31.2368, 46.7944, -12.3476, 1.11", "-32.4326, 49.7777, -11.7567, 1.11", "-34.6511, 54.6147, -10.8124, 1.11", "-36.4543, 58.428, -10.0422, 1.11", "-38.1334, 61.8756, -9.19076, 1.11", "-40.69, 66.8661, -7.94503, 1.11", "-42.3179, 70.1666, -7.13548, 1.11", "-44.6581, 75.0719, -6.15348, 1.11", "-47.3526, 81.0491, -5.26532, 1.11", "-49.9477, 87.4383, -4.65014, 1.11", "-51.333, 91.4123, -4.34648, 1.11", "-52.3671, 95.2689, -4.06066, 0.83", "-53.4725, 100.877, -3.61973, 0.55", "-54.2861, 106.373, -3.15964, 0.83", "-55.0798, 113.411, -2.54278, 0.83", "-55.469, 117.619, -2.11259, 0.83", "-55.6957, 120.396, -1.64748, 0.83", "-56.0957, 125.701, -0.52107, 0.83", "-56.2535, 128.856, 0.312186, 0.83", "-56.42, 132.813, 1.37671, 0.83", "-56.6548, 136.646, 2.37434, 0.83", "-56.7631, 138.123, 2.70423, 0.83", "-56.9457, 140.121, 3.10706, 0.55", "-57.0725, 142.049, 3.44484, 0.28", "-57.0941, 142.379, 3.49167, 0.55", "-57.3041, 144.545, 3.71072, 0.28", "-57.4713, 145.787, 3.75965, 0.55", "-57.8414, 147.632, 3.62529, 0.28", "-58.0755, 148.63, 3.50281, 0.55", "-58.6557, 150.706, 3.06251, 0.55", "-58.7266, 151.016, 2.97237, 0.55", "-59.1208, 153.203, 2.1613, 0.83", "-59.5743, 155.947, 1.15611, 0.83", "-59.8836, 158.433, 0.355212, 0.55", "-60.2304, 161.778, -0.599425, 0.83", "-60.6845, 166.737, -1.95978, 0.83", "-60.8687, 169.074, -2.59761, 0.55", "-61.1366, 173.843, -3.87232, 0.55", "-61.2951, 177.52, -4.76851, 0.55", "-61.3594, 180.5, -5.48001, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-53.0072, 19.1334, -26.7117, 1.11", "-54.5958, 19.786, -29.0749, 1.11", "-57.5001, 20.979, -33.3952, 1.11", "-59.7287, 21.8945, -36.7103, 1.11", "-62.6333, 23.0876, -41.031, 1.38", "-64.5037, 23.856, -43.8133, 1.38", "-67.5226, 25.0961, -48.3042, 1.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-53.0072, 19.1334, -26.7117, 0.55", "-55.3961, 19.3572, -24.1741, 0.55", "-56.8314, 19.4845, -22.4269, 1.38", "-58.512, 19.8651, -19.9797, 0.55", "-59.5332, 20.1652, -18.4455, 0.55", "-62.2296, 20.8349, -14.3141, 0.83", "-65.4163, 21.8015, -8.92822, 0.55", "-65.7613, 21.9109, -8.28687, 0.83", "-67.8441, 22.6121, -4.5559, 0.55", "-69.2677, 23.007, -2.15566, 0.55", "-72.1522, 23.6094, 1.96362, 0.55", "-76.9841, 24.6498, 7.58075, 0.55", "-80.2395, 25.3448, 10.7352, 0.55", "-82.738, 25.9582, 12.8734, 0.55", "-87.5755, 27.1581, 16.346, 0.55", "-92.3205, 28.5653, 19.3316, 0.55", "-96.7409, 30.1262, 21.6306, 0.55", "-99.7014, 31.2522, 22.8691, 0.55", "-103.703, 33.1133, 24.4291, 0.55", "-107.179, 34.9119, 25.707, 0.55", "-109.071, 36.0797, 26.2745, 0.55", "-110.283, 36.9419, 26.6668, 0.28", "-110.94, 37.428, 26.8684, 0.55", "-113.486, 39.3929, 27.5473, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "11.4889, -45.1194, -2.0825, 1.38", "11.4763, -45.7261, -1.97394, 1.38", "11.7188, -49.0645, -1.66177, 1.38", "12.255, -52.0007, -1.56757, 1.38", "13.3278, -56.0668, -1.7136, 1.38", "14.2868, -58.6003, -1.87198, 1.66", "15.8104, -61.966, -1.99559, 1.66", "18.2883, -66.5104, -2.15565, 1.38", "20.3133, -69.8657, -2.27484, 2.49", "21.7554, -72.1269, -2.32295, 1.94", "24.4301, -76.2243, -2.39593, 1.66", "27.0017, -80.3027, -2.36337, 1.38", "28.7582, -83.3654, -2.26622, 1.38", "30.8672, -87.7056, -2.00533, 1.38", "32.7265, -91.9525, -1.78323, 1.38", "34.697, -96.6642, -1.63278, 1.38", "36.1437, -100.378, -1.66548, 1.38", "37.1352, -102.924, -1.76943, 1.38", "37.9321, -104.97, -1.85548, 1.38", "39.5407, -109.41, -2.02794, 1.38", "40.3798, -111.927, -2.12518, 1.38", "41.8349, -116.299, -2.25905, 1.38", "43.2971, -120.293, -2.40957, 1.38", "44.5723, -123.537, -2.55681, 1.38", "46.3098, -127.992, -2.76585, 1.38", "47.3114, -130.414, -2.78781, 1.38", "47.9436, -131.878, -2.80033, 1.38", "48.7415, -133.475, -2.8412, 0.83", "50.4665, -136.494, -2.9125, 1.38", "52.7797, -140.113, -2.9594, 1.38", "56.7214, -145.621, -2.9351, 1.38" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "11.4889, -45.1194, -2.0825, 0.55", "13.3593, -46.1131, -2.01675, 0.55", "16.7189, -48.0431, -1.78353, 0.83", "19.4686, -49.5021, -1.61514, 0.83", "21.9022, -50.6604, -1.51624, 0.83", "25.8657, -52.3808, -1.4452, 0.55", "29.5808, -53.9032, -1.42508, 0.55", "31.3447, -54.5865, -1.38065, 0.55", "33.4596, -55.2765, -1.31314, 0.55", "35.327, -55.9355, -1.27979, 0.83", "36.6252, -56.3525, -1.26191, 0.83", "39.7695, -57.0902, -1.81483, 0.83", "51.0802, -60.4235, -3.64575, 0.83", "62.6949, -63.1145, -3.94714, 0.83", "73.5169, -68.1952, -3.45769, 0.83", "84.1144, -73.5252, -5.04296, 0.83", "94.9349, -78.3569, -6.64269, 0.83", "105.571, -83.8436, -6.26272, 0.83", "116.057, -89.5157, -5.08962, 0.83", "126.15, -95.5526, -2.75811, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "1.33113, -41.8385, 0.208326, 0.83", "-0.9595, -42.5864, -0.014416, 0.83", "-4.57148, -44.0576, 0.00904689, 0.83", "-6.59936, -44.9503, 0.105745, 0.83", "-8.56933, -45.8806, 0.303815, 0.83", "-10.7374, -47.0516, 0.627511, 0.55", "-12.221, -47.9837, 0.902835, 1.11", "-15.4736, -50.4106, 1.7506, 0.83", "-17.145, -51.8451, 2.2796, 0.83", "-18.7938, -53.3771, 2.84924, 1.11", "-20.5134, -55.0233, 3.42068, 0.83", "-22.5645, -57.1463, 4.13543, 0.83", "-25.5121, -60.4325, 5.20031, 0.83", "-26.6457, -61.7817, 5.58141, 0.83", "-27.8416, -63.257, 6.0325, 0.83", "-30.144, -66.1809, 6.92474, 0.83", "-32.1638, -68.7435, 7.72604, 1.11", "-33.6848, -70.7322, 8.39302, 0.83", "-34.9296, -72.5058, 9.04839, 0.83", "-36.6019, -74.7998, 10.0378, 0.55", "-37.5996, -76.1352, 10.6681, 0.55", "-38.3498, -77.2185, 11.2281, 0.55", "-39.5004, -78.925, 12.0921, 1.11", "-40.6112, -80.4772, 12.9388, 0.83", "-41.9371, -82.2382, 14.0264, 0.55", "-49.2756, -86.5258, 16.0931, 0.55", "-56.878, -89.388, 19.2604, 0.55", "-64.0264, -92.1579, 23.4102, 0.55", "-69.8737, -95.4864, 28.9673, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.33113, -41.8385, 0.208326, 0.83", "1.27245, -44.7829, 0.531108, 0.83", "1.3025, -49.1556, 1.026, 0.83", "1.42013, -52.2666, 1.40214, 0.83", "1.81172, -56.3575, 1.92469, 0.83", "2.15747, -60.1704, 2.20068, 1.11", "2.41488, -63.03, 2.30503, 1.11", "2.67982, -65.4836, 2.30996, 1.11", "3.07373, -67.8615, 2.09882, 1.11", "3.69163, -71.3019, 1.30992, 1.11", "4.5033, -75.8893, -0.304426, 0.83", "4.77294, -77.5315, -0.995509, 0.83", "5.00453, -79.5754, -1.92727, 1.11", "5.40008, -84.2926, -3.7931, 0.83", "5.56326, -88.1151, -5.05607, 0.83", "5.54758, -90.9687, -5.85361, 0.83", "5.462, -95.0823, -6.75262, 0.83", "5.33028, -98.7341, -7.48412, 0.83", "5.11281, -104.506, -8.41866, 0.83", "4.97533, -107.804, -8.77416, 0.83", "4.84543, -111.079, -9.05568, 0.83", "4.81679, -114.517, -9.3784, 0.83", "4.9332, -117.493, -9.60504, 0.83", "5.19373, -121.398, -9.90303, 0.83", "5.39844, -124.693, -10.1622, 0.83", "5.67228, -127.875, -10.2543, 0.83", "6.00947, -131.786, -10.188, 0.83", "6.24016, -137.416, -9.982, 0.83", "6.19795, -139.235, -9.92677, 0.83", "5.88572, -144.134, -9.80257, 0.83", "5.53287, -147.771, -9.64508, 0.83", "5.11036, -150.69, -9.48468, 0.83", "4.46488, -153.986, -9.25352, 0.83", "3.50135, -158.032, -8.91606, 0.83", "2.37847, -162.71, -8.41002, 0.83", "1.38471, -166.669, -7.90351, 0.83", "1.10286, -167.71, -7.75678, 0.83", "0.389695, -170.634, -7.30469, 1.66", "-0.251376, -173.872, -6.78538, 0.83", "-0.568361, -175.645, -6.47852, 0.83", "-1.23575, -179.937, -5.83981, 0.83", "-1.53138, -182.114, -5.55753, 0.83", "-1.76917, -184.683, -5.18804, 0.83", "-2.04571, -189.243, -4.49142, 0.83", "-2.10351, -191.844, -4.14257, 0.83", "-2.13921, -194.935, -3.78668, 0.83", "-2.14839, -198.945, -3.39573, 0.83", "-2.25649, -203.12, -3.11042, 0.83", "-2.57724, -208.645, -3.02109, 0.83", "-2.79299, -211.749, -3.02205, 0.83", "-3.12461, -215.326, -3.30568, 0.83", "-3.38926, -217.299, -3.64727, 0.83", "-3.94716, -220.494, -4.53083, 0.83", "-4.76655, -223.281, -5.48506, 0.83", "-6.34877, -227.83, -7.16001, 0.83", "-8.68105, -233.457, -9.25636, 0.83", "-10.1154, -236.71, -10.4483, 0.83", "-11.6758, -240.034, -11.589, 0.55", "-14.3988, -245.623, -13.3472, 0.55", "-15.3568, -247.686, -13.8655, 0.55", "-17.1357, -251.597, -14.5786, 0.55", "-18.4555, -254.738, -14.6641, 0.55", "-19.5396, -257.67, -14.6201, 0.55", "-20.4365, -260.374, -14.5911, 0.55", "-21.5235, -263.933, -14.7517, 0.55", "-22.5514, -266.875, -14.9111, 1.38", "-23.6633, -270.133, -14.9028, 0.83", "-24.8305, -273.394, -14.9139, 0.55", "-26.3107, -277.196, -14.964, 0.55", "-27.6538, -280.049, -15.0703, 0.55", "-28.9975, -282.485, -15.3151, 0.55", "-31.0482, -286.623, -15.8832, 0.28", "-31.7956, -288.424, -15.9119, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "-56.6211, 115.043, 19.2193, 0.55", "-57.9035, 116.136, 20.5944, 0.55", "-59.2178, 117.355, 21.9191, 0.55", "-61.8696, 120.102, 24.5635, 0.83", "-63.4526, 121.967, 26.1678, 0.55", "-64.7019, 123.628, 27.5063, 0.55", "-66.0164, 125.691, 28.9622, 0.55", "-66.3935, 126.565, 29.4113, 0.83", "-66.8357, 128.172, 29.8821, 0.55", "-67.0349, 129.555, 30.0149, 0.83", "-67.1255, 130.946, 30.0647, 0.28", "-67.2663, 133.51, 30.0316, 0.55", "-67.476, 136.989, 29.9713, 0.55", "-67.7353, 139.908, 29.9123, 0.55", "-68.3292, 144.042, 29.8645, 0.55", "-68.6141, 145.707, 29.8583, 0.55", "-68.9607, 147.636, 29.9329, 0.55", "-69.6447, 151.211, 30.2834, 0.55", "-69.9854, 153.04, 30.5347, 0.55", "-70.4179, 155.514, 30.9376, 0.55", "-70.8248, 158.209, 31.3777, 0.55", "-71.011, 161.465, 31.8434, 0.28", "-70.9872, 162.694, 31.9832, 0.55", "-70.906, 164.31, 32.0941, 0.28", "-70.6917, 167.575, 32.2131, 0.55", "-70.309, 171.375, 32.2361, 0.55", "-70.0345, 174.47, 32.1782, 0.55", "-69.65, 178.255, 31.9487, 0.55", "-69.4335, 180.445, 31.8061, 0.28", "-69.2121, 182.524, 31.6764, 0.28", "-68.9595, 184.593, 31.5535, 0.55", "-68.6018, 187.4, 31.3996, 0.55", "-68.3358, 189.955, 31.3245, 0.28", "-68.1124, 192.038, 31.3168, 0.83", "-67.9658, 193.415, 31.3503, 0.55", "-67.7239, 196.043, 31.6496, 0.55", "-67.4813, 199.442, 32.1153, 0.55", "-67.3738, 200.63, 32.3253, 0.83", "-67.2248, 202.456, 32.7325, 0.28", "-67.0337, 204.366, 33.2172, 1.66", "-66.8263, 208.879, 34.5142, 0.55" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "-56.6211, 115.043, 19.2193, 0.55", "-57.804, 116.839, 18.6189, 0.55", "-58.6781, 118.112, 18.1481, 0.83", "-60.0356, 120.035, 17.437, 0.55", "-60.361, 120.486, 17.2658, 0.83", "-61.0788, 121.526, 16.8931, 0.55", "-62.3028, 123.286, 16.4428, 1.11", "-63.1747, 124.449, 16.3321, 0.55", "-63.7905, 125.28, 16.4141, 0.83", "-64.4169, 126.223, 16.6637, 0.55", "-65.4023, 127.823, 17.3056, 0.55", "-66.6447, 130.011, 18.5621, 1.38", "-67.5784, 131.941, 19.9556, 0.28", "-67.6588, 132.122, 20.1098, 0.55", "-68.284, 133.626, 21.4563, 0.55", "-68.9589, 135.102, 22.8847, 0.28", "-69.5714, 136.363, 24.0559, 0.83", "-70.9364, 138.975, 26.1096, 0.83", "-71.9055, 140.63, 27.2895, 0.55", "-72.4766, 141.542, 27.9574, 0.55", "-73.682, 143.219, 29.239, 0.28", "-74.7489, 144.593, 30.1116, 0.28", "-76.0291, 146.0, 30.7891, 0.28", "-76.4293, 146.309, 30.8598, 1.11", "-80.0449, 151.016, 33.4101, 1.11", "-83.3897, 155.899, 36.0148, 1.11", "-86.7999, 160.866, 38.3714, 1.11", "-90.0603, 166.256, 39.9123, 1.11", "-92.3725, 172.337, 40.2629, 1.11" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-106.891, 155.871, -67.9007, 0.28", "-107.721, 156.27, -68.977, 0.28", "-108.205, 156.529, -69.5757, 0.55", "-109.949, 157.77, -71.7181, 0.28", "-111.371, 158.984, -73.6042, 1.11", "-112.092, 159.813, -74.7571, 0.28", "-112.722, 160.76, -75.9566, 0.55", "-113.232, 162.038, -77.4236, 0.28", "-113.482, 163.509, -78.8077, 0.28", "-113.412, 164.696, -79.6773, 0.55", "-113.056, 166.735, -81.0495, 0.28", "-112.836, 167.679, -81.6174, 0.28", "-112.477, 169.128, -82.3175, 0.83", "-112.148, 170.547, -82.9574, 0.28", "-111.918, 172.039, -83.5884, 0.28", "-111.788, 173.733, -84.2116, 0.55", "-111.719, 176.599, -85.2207, 0.28", "-111.745, 179.26, -86.1464, 0.28", "-111.848, 181.507, -86.9064, 0.28", "-112.01, 184.318, -87.8489, 0.28", "-112.13, 185.69, -88.2902, 0.55" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-106.891, 155.871, -67.9007, 0.28", "-105.403, 159.163, -74.8707, 0.28", "-105.238, 159.465, -75.4914, 0.55", "-104.176, 161.219, -78.9471, 0.28", "-103.916, 161.622, -79.7261, 0.55", "-103.398, 162.374, -81.0875, 0.28", "-102.375, 163.75, -83.4657, 0.83", "-101.746, 164.514, -84.4624, 0.28", "-101.361, 164.94, -84.9697, 0.28", "-100.508, 165.912, -86.033, 0.55", "-99.575, 167.053, -87.2129, 0.28", "-98.8925, 167.997, -88.0759, 0.55", "-97.9229, 169.557, -89.5315, 0.28", "-97.3961, 170.507, -90.4781, 1.11", "-96.0586, 173.037, -93.2693, 0.28", "-95.6227, 173.95, -94.3108, 0.28", "-95.2531, 174.827, -95.3667, 1.11", "-93.9537, 178.384, -99.7946, 0.28", "-93.7637, 178.979, -100.57, 0.55", "-93.151, 181.088, -103.503, 0.28", "-93.0058, 181.654, -104.321, 0.55", "-92.8019, 182.699, -105.988, 0.55", "-92.653, 183.989, -107.999, 0.28", "-92.63, 184.838, -109.182, 0.83", "-92.634, 187.297, -112.354, 0.28", "-92.6397, 187.582, -112.697, 0.55", "-92.6909, 191.461, -117.161, 0.28", "-92.7239, 192.867, -118.746, 1.66", "-92.7583, 194.738, -120.803, 0.28", "-92.7434, 195.51, -121.654, 0.55", "-92.6474, 197.665, -123.945, 0.28", "-92.5976, 198.303, -124.639, 0.55", "-92.2929, 200.871, -127.449, 0.28", "-92.1155, 201.892, -128.731, 0.55", "-91.8273, 203.296, -130.688, 0.55", "-91.6333, 204.096, -131.921, 0.28", "-91.5992, 204.214, -132.116, 0.55" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-3.80418, 78.9309, -53.7588, 0.55", "-3.26144, 82.6427, -55.1999, 0.55", "-2.64786, 85.496, -56.5885, 1.38", "-1.6948, 88.9656, -58.3753, 0.55", "-1.20825, 90.6251, -59.2956, 0.55", "-0.334506, 93.3527, -60.873, 0.55", "1.24534, 97.7928, -63.6412, 0.55", "2.59562, 101.231, -66.2122, 0.55", "3.09987, 102.384, -67.1501, 0.55", "4.33074, 105.029, -69.4502, 0.83", "5.34864, 107.016, -71.2912, 0.55", "7.70636, 111.153, -75.3697, 1.94", "10.4154, 116.169, -80.544, 1.38" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-3.80418, 78.9309, -53.7588, 0.55", "-4.49885, 81.2841, -56.3528, 0.55", "-4.64371, 82.3163, -57.2131, 0.55", "-4.79147, 86.2142, -60.0654, 0.55", "-4.80252, 87.0392, -60.6585, 0.28", "-4.83472, 89.4124, -62.3108, 0.55", "-4.88266, 91.8296, -63.9463, 1.66", "-4.81912, 95.734, -66.4215, 0.55", "-4.74639, 98.18, -67.9233, 0.55", "-4.71707, 99.6897, -68.8161, 0.28", "-4.77911, 100.571, -69.4703, 0.55", "-5.0141, 101.666, -70.4681, 0.28", "-5.74544, 103.545, -72.6323, 0.55", "-5.93254, 103.894, -73.0933, 0.28", "-7.08997, 105.856, -75.6169, 1.11", "-8.75697, 108.76, -79.0928, 0.28", "-9.09317, 109.35, -79.7671, 0.83", "-10.6311, 111.995, -82.6378, 0.28", "-11.3834, 113.315, -83.8685, 1.11", "-12.2738, 115.05, -85.2823, 0.55", "-12.7004, 115.968, -85.9366, 0.28", "-12.8711, 116.357, -86.1806, 0.55", "-13.8922, 118.887, -87.712, 0.28", "-14.5883, 120.662, -88.6919, 1.11", "-15.7976, 123.987, -90.4586, 0.28", "-16.1702, 125.043, -91.1214, 0.55", "-17.1211, 127.755, -92.9208, 0.28", "-17.6302, 129.158, -93.9044, 0.83", "-18.4605, 131.344, -95.6948, 0.28", "-19.103, 132.982, -97.3482, 0.83", "-20.6657, 136.93, -101.762, 0.28", "-21.0425, 137.843, -102.898, 0.55", "-21.553, 138.997, -104.482, 0.83", "-22.9477, 141.859, -108.765, 0.55", "-23.8189, 143.564, -111.527, 0.28", "-24.0697, 144.007, -112.284, 0.55", "-25.0265, 145.669, -114.832, 0.28", "-25.636, 146.665, -116.328, 0.55", "-26.3873, 147.867, -118.004, 0.28", "-26.4664, 147.99, -118.179, 0.55", "-27.6725, 149.855, -121.146, 0.28", "-28.0057, 150.443, -122.29, 1.11", "-28.668, 152.008, -125.757, 0.55", "-29.0562, 153.105, -128.582, 0.83", "-29.3557, 154.181, -131.424, 0.28", "-29.4124, 154.389, -131.978, 0.55", "-29.7465, 155.809, -135.712, 0.28", "-29.9005, 156.455, -137.377, 0.83", "-30.4105, 158.409, -141.996, 0.28", "-30.6406, 159.132, -143.591, 0.55", "-31.3188, 161.058, -147.445, 0.28", "-31.4926, 161.616, -148.481, 0.83", "-31.6749, 162.275, -149.569, 0.28", "-31.8583, 163.057, -150.734, 0.55", "-32.4568, 166.426, -155.233, 0.28", "-32.6061, 167.352, -156.405, 1.38", "-32.9841, 169.897, -159.326, 0.28", "-33.1263, 170.787, -160.311, 0.83", "-33.3599, 172.113, -161.667, 0.28", "-33.7059, 173.783, -163.223, 0.55", "-34.0418, 175.264, -164.407, 0.28", "-34.1457, 175.649, -164.712, 0.55", "-34.6899, 177.314, -166.014, 0.28", "-34.9686, 178.178, -166.77, 0.55", "-35.7532, 180.908, -169.365, 0.28", "-35.8932, 181.558, -169.985, 0.55" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "38.5734, 22.1409, -21.386, 0.83", "39.0249, 22.3307, -21.8305, 0.83", "40.0823, 22.9696, -23.0883, 1.38", "42.4341, 24.6632, -26.4609, 0.55", "43.2639, 25.3146, -27.7453, 0.55", "44.4917, 26.2745, -29.6395, 0.55", "45.5983, 27.0939, -31.3854, 0.55", "48.2319, 29.008, -35.5882, 0.55", "50.0148, 30.2234, -38.2922, 0.83", "51.2192, 30.9842, -39.9993, 0.55", "52.3328, 31.6594, -41.494, 0.55", "54.0738, 32.5612, -43.6418, 0.55", "55.3575, 33.0045, -44.9857, 0.83", "57.3095, 33.4342, -46.5157, 0.55", "58.7759, 33.788, -47.5284, 0.55", "59.9029, 34.0878, -48.3895, 0.55", "60.609, 34.3097, -49.0385, 0.28", "61.8793, 34.7847, -50.341, 0.55", "63.7844, 35.5633, -52.5458, 1.11", "65.451, 36.3294, -54.7588, 0.55", "67.4773, 37.3303, -57.6563, 0.83", "69.1626, 38.2413, -60.2772, 0.83", "69.4524, 38.405, -60.7297, 0.83", "69.9783, 38.702, -61.5524, 0.83", "71.5732, 39.6603, -64.0282, 0.28", "72.7657, 40.525, -65.8493, 0.83", "74.0102, 41.6536, -67.655, 0.28", "74.7704, 42.3975, -68.6423, 0.28", "75.253, 42.8808, -69.1963, 0.28", "76.9114, 44.4607, -70.8233, 1.11", "79.6369, 46.8143, -72.88, 0.28", "80.1499, 47.2146, -73.2262, 0.28", "81.9143, 48.453, -74.3815, 0.83", "84.141, 49.8811, -75.8923, 0.55", "85.5856, 50.7702, -76.9569, 0.55", "86.8519, 51.5142, -77.8897, 0.55", "89.1278, 52.9398, -79.5682, 1.94", "91.5616, 54.7432, -81.5745, 0.55", "92.9156, 55.9191, -82.7796, 0.83", "94.852, 57.9306, -84.5594, 0.28", "95.418, 58.648, -85.1361, 0.28", "96.5802, 60.3089, -86.3531, 1.11", "98.0655, 62.6623, -87.8764, 0.28", "98.7949, 63.8708, -88.6124, 0.55", "100.101, 66.1371, -90.0523, 0.55", "101.415, 68.4524, -91.5887, 0.28", "101.79, 69.1187, -92.0803, 0.55", "102.753, 70.9608, -93.6126, 0.28", "103.69, 72.901, -95.3038, 0.55", "104.626, 75.0222, -97.2539, 0.83", "105.268, 76.5296, -98.5909, 0.28", "105.463, 76.9751, -98.9744, 0.55", "106.605, 79.5699, -101.32, 0.28", "106.761, 79.8963, -101.651, 0.55", "107.864, 81.8707, -103.883, 0.28", "108.566, 82.8712, -105.152, 0.55", "109.607, 84.1885, -107.066, 0.28", "110.371, 85.0013, -108.388, 0.55", "112.109, 86.4052, -111.005, 0.28", "113.039, 86.9918, -112.223, 0.55", "114.784, 87.818, -114.087, 0.28", "115.758, 88.2834, -114.922, 0.55", "117.575, 89.1746, -115.996, 0.28", "118.99, 89.9656, -116.486, 0.55", "120.976, 91.2664, -116.708, 0.28", "123.009, 92.7087, -116.696, 0.55", "125.556, 94.5982, -116.322, 0.28", "125.742, 94.7465, -116.28, 0.55", "126.826, 95.8227, -115.965, 0.28", "127.175, 96.2753, -115.887, 0.55" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "38.5734, 22.1409, -21.386, 0.55", "40.7309, 22.166, -21.8015, 0.55", "43.6269, 22.0153, -21.9078, 0.83", "46.2773, 21.6686, -21.47, 0.83", "48.6378, 21.1484, -20.7885, 0.55", "50.1254, 20.7793, -20.1985, 0.55", "52.5651, 20.1133, -19.1212, 0.55", "55.7781, 19.0731, -17.3464, 0.83", "58.7829, 18.0457, -15.484, 0.83", "60.9113, 17.3566, -14.1216, 0.55", "63.7895, 16.5261, -12.311, 0.55", "67.665, 15.6463, -10.1751, 0.55", "69.5802, 15.3709, -9.37596, 0.83", "71.9783, 15.2031, -8.7305, 0.55", "73.7992, 15.182, -8.45758, 0.83", "77.0099, 15.3494, -8.21428, 0.55", "79.4613, 15.4579, -8.26078, 0.28", "82.3306, 15.5885, -8.48423, 0.83", "84.0814, 15.6762, -8.79358, 0.55", "86.4518, 15.832, -9.34461, 0.55", "88.9435, 15.9152, -10.024, 0.55", "92.2369, 15.8977, -11.0419, 0.55", "94.5581, 15.8417, -11.7494, 0.55", "99.6037, 15.5771, -13.2983, 0.55", "100.503, 15.5114, -13.6236, 0.55", "103.267, 15.3029, -14.7365, 0.55", "104.701, 15.1732, -15.3671, 0.55", "106.442, 15.0809, -16.1705, 0.28", "108.044, 14.8804, -16.9021, 0.55", "110.008, 14.3492, -17.5828, 0.83", "112.365, 13.6883, -18.475, 0.55" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "18.7254, 35.6152, -19.8472, 1.66", "19.0181, 35.5666, -19.8076, 1.66", "22.1097, 35.0529, -19.3887, 1.94", "26.0499, 34.3982, -18.8548, 1.38" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "18.7254, 35.6152, -19.8472, 0.83", "19.2086, 36.1646, -19.0972, 0.83", "19.5002, 36.4594, -18.5325, 0.83", "20.2799, 37.1333, -17.0424, 0.83", "21.5379, 38.1967, -14.6964, 0.83", "23.4668, 39.7814, -11.5365, 0.83", "23.8744, 40.1365, -10.8961, 1.11", "25.338, 41.4536, -8.65423, 0.83", "26.073, 42.093, -7.6614, 0.55", "26.6765, 42.6039, -6.97626, 0.55", "28.2784, 43.9379, -5.5612, 0.55", "29.4022, 44.9285, -4.84853, 0.55", "30.4556, 45.9435, -4.2602, 0.55", "31.7162, 47.217, -3.74806, 0.55", "33.2102, 48.7869, -3.06524, 0.55" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-78.047, 105.584, -20.0354, 0.28", "-79.3592, 107.345, -20.2246, 0.28", "-79.8995, 107.952, -20.3041, 0.55", "-80.865, 108.917, -20.4357, 0.28", "-82.5848, 110.664, -20.6429, 0.55", "-83.9825, 112.02, -20.7957, 0.55", "-85.8992, 113.799, -20.9962, 0.83", "-87.9242, 115.478, -21.1956, 0.55", "-90.7241, 117.62, -21.4748, 0.55", "-92.9779, 119.159, -21.7026, 0.55", "-95.8831, 120.873, -21.9963, 0.55", "-96.9626, 121.388, -22.1187, 0.55", "-98.3775, 121.867, -22.3162, 0.55", "-99.5838, 122.103, -22.5948, 0.55", "-101.103, 122.156, -23.191, 0.28", "-102.214, 122.132, -23.8864, 0.55", "-103.579, 122.216, -25.1226, 0.28", "-104.705, 122.382, -26.3435, 0.55", "-106.209, 122.708, -28.2805, 0.55", "-107.885, 123.129, -30.6835, 0.55", "-109.912, 123.705, -33.7255, 0.55", "-111.634, 124.234, -36.3328, 0.55", "-112.725, 124.588, -37.9434, 1.11", "-114.796, 125.253, -40.8539, 0.28", "-114.931, 125.288, -41.0167, 0.55", "-116.071, 125.514, -42.0999, 0.28", "-116.882, 125.661, -42.6732, 0.55", "-118.115, 125.92, -43.3551, 0.28", "-118.903, 126.246, -43.7842, 0.83", "-120.701, 127.375, -44.7553, 0.28", "-121.34, 128.102, -45.324, 0.55", "-122.487, 129.863, -46.6256, 0.28", "-122.936, 130.711, -47.241, 0.83", "-124.011, 133.068, -48.9345, 0.28", "-124.366, 133.958, -49.5693, 0.83", "-126.072, 139.105, -53.1377, 0.28", "-126.419, 140.274, -53.938, 0.83", "-126.858, 141.879, -54.9912, 0.28", "-127.032, 142.539, -55.4402, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-78.047, 105.584, -20.0354, 0.55", "-80.6273, 109.363, -20.1536, 0.55", "-83.3945, 113.585, -20.3976, 0.55", "-86.3253, 118.054, -20.8217, 0.83", "-87.9419, 120.555, -21.1003, 0.55", "-89.5544, 123.041, -21.4084, 0.83", "-91.231, 125.639, -21.7652, 0.55", "-92.1445, 127.149, -22.0343, 0.83", "-93.246, 128.944, -22.4175, 0.55", "-94.8314, 131.436, -23.0108, 0.55", "-95.9432, 133.225, -23.3709, 0.83", "-97.5122, 135.642, -23.807, 0.55", "-98.6116, 137.267, -24.0256, 1.11", "-99.9857, 139.434, -24.1835, 0.55", "-100.559, 140.396, -24.128, 0.83", "-101.886, 142.653, -23.7738, 0.28", "-102.495, 143.789, -23.4656, 0.55", "-103.287, 145.428, -22.8448, 0.28", "-104.415, 147.874, -21.4716, 0.83", "-105.866, 151.266, -19.2346, 0.55", "-106.177, 152.104, -18.6466, 0.55", "-106.842, 154.059, -17.2431, 0.83", "-107.494, 155.963, -15.8057, 0.83", "-108.757, 159.745, -12.7494, 0.55", "-109.106, 160.876, -11.8605, 0.55", "-109.71, 162.985, -10.3971, 0.55", "-110.036, 164.051, -9.67147, 0.55", "-110.764, 166.269, -8.30007, 0.83", "-112.063, 169.712, -6.46376, 0.28", "-112.819, 171.544, -5.63873, 1.66", "-114.064, 174.247, -4.45429, 0.83", "-115.303, 176.7, -3.43032, 0.28", "-116.974, 179.926, -2.1978, 0.55", "-118.443, 182.575, -1.32193, 0.55", "-119.075, 183.66, -1.03455, 0.28", "-119.645, 184.71, -0.751454, 0.55", "-119.983, 185.493, -0.543944, 0.28", "-120.135, 186.052, -0.394644, 0.55", "-120.201, 187.732, 0.0671813, 0.28", "-119.87, 190.166, 0.703421, 0.55", "-119.272, 192.995, 1.3816, 0.28", "-118.953, 194.224, 1.63462, 0.28", "-118.381, 196.428, 2.01175, 0.55", "-117.559, 199.67, 2.4218, 0.28", "-117.037, 201.85, 2.59842, 0.28", "-116.81, 203.051, 2.63146, 0.55", "-116.598, 205.119, 2.57619, 0.28", "-116.65, 207.812, 2.40224, 0.55", "-116.944, 210.05, 2.19767, 0.28", "-117.18, 211.084, 2.09229, 0.55", "-117.547, 212.435, 1.93218, 0.28", "-117.969, 214.099, 1.73303, 1.11", "-118.556, 216.573, 1.46186, 0.55", "-118.689, 217.221, 1.41902, 0.83", "-118.98, 218.736, 1.37579, 0.28", "-119.266, 220.508, 1.41229, 0.55", "-119.853, 224.414, 1.66657, 0.28", "-120.076, 225.879, 1.82952, 0.83", "-120.594, 228.716, 2.27107, 0.28", "-120.87, 229.93, 2.50628, 0.55", "-121.388, 231.832, 2.9477, 0.28", "-121.583, 232.518, 3.14076, 0.55", "-122.242, 234.824, 3.66073, 0.28", "-122.423, 235.648, 3.78615, 0.55", "-123.138, 239.776, 4.16088, 0.28", "-123.263, 240.701, 4.21997, 0.83", "-123.723, 245.383, 4.38152, 0.28", "-123.861, 249.469, 4.35026, 2.77", "-123.8, 252.506, 4.1695, 0.28", "-123.657, 253.681, 4.04012, 0.55", "-123.358, 254.836, 3.83067, 0.28", "-123.04, 255.83, 3.62095, 0.55", "-121.592, 259.146, 2.70889, 0.28", "-121.049, 260.159, 2.50101, 0.55", "-118.914, 263.187, 1.48744, 0.28", "-117.871, 264.368, 0.992778, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-61.3594, 180.5, -5.48001, 0.55", "-62.9914, 180.871, -6.23058, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-61.3594, 180.5, -5.48001, 0.55", "-61.4927, 183.048, -5.84697, 0.55", "-61.6, 184.821, -6.08715, 1.94", "-61.7843, 187.517, -6.43072, 0.55", "-61.8761, 188.73, -6.59281, 0.55", "-62.1246, 191.472, -6.96238, 0.28", "-62.2528, 192.679, -7.14103, 0.55", "-62.4189, 193.82, -7.3376, 0.28", "-62.5028, 194.263, -7.40949, 0.55", "-62.9752, 195.973, -7.85606, 0.28", "-63.2915, 196.821, -8.15381, 0.55", "-63.761, 198.187, -8.92135, 0.28", "-64.3439, 200.13, -10.2905, 0.55", "-64.7075, 201.677, -11.5865, 0.83", "-64.9344, 203.98, -13.8098, 0.28", "-64.928, 204.974, -14.8562, 1.38", "-64.3475, 209.086, -19.4135, 0.55", "-64.0745, 210.209, -20.6679, 0.55", "-63.5005, 211.796, -22.4365, 0.83", "-62.407, 214.456, -25.2886, 0.28", "-62.1539, 215.077, -25.88, 0.83", "-61.213, 217.671, -28.1131, 0.28", "-60.7847, 219.252, -29.2767, 0.83", "-60.0034, 224.035, -32.6037, 0.28", "-60.0235, 225.077, -33.2802, 0.83", "-60.4949, 226.717, -34.4366, 0.83", "-61.4313, 228.528, -35.9502, 0.28", "-61.7679, 228.927, -36.3113, 0.83", "-63.4631, 230.257, -37.7433, 0.28", "-64.3671, 230.675, -38.2823, 0.55", "-66.7267, 231.676, -40.0978, 0.28", "-67.6586, 232.122, -41.2033, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-67.5226, 25.0961, -48.3042, 1.38", "-68.1209, 25.153, -48.421, 1.38", "-71.0325, 25.7653, -48.9691, 0.83", "-73.2456, 26.4859, -49.6987, 0.83", "-76.6105, 27.7451, -50.9947, 0.83", "-80.3196, 29.1312, -52.6089, 0.83", "-82.6221, 29.9916, -53.611, 0.55", "-84.9749, 30.9634, -54.6294, 1.38", "-89.1405, 33.0171, -56.5113, 0.83", "-90.8979, 34.0929, -57.4689, 0.83", "-92.9879, 35.5941, -59.0855, 1.11" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-67.5226, 25.0961, -48.3042, 0.83", "-68.6502, 25.9938, -50.6177, 0.83", "-70.0266, 27.8443, -54.6809, 0.28", "-70.4068, 28.3766, -56.0122, 0.83", "-71.0105, 29.1844, -57.9863, 0.28", "-71.2447, 29.5055, -58.7075, 0.83", "-72.2398, 30.755, -61.7822, 0.28", "-72.6607, 31.4226, -63.4388, 0.83", "-73.5537, 33.0963, -67.2356, 0.28", "-74.0219, 33.6453, -68.6725, 0.83", "-74.6129, 34.1689, -70.0712, 0.83", "-76.3927, 35.3757, -73.6865, 0.28", "-76.8972, 35.6657, -74.5921, 0.83", "-77.8448, 36.1042, -76.2113, 0.83", "-80.5509, 37.418, -80.7201, 0.28", "-81.2983, 37.7526, -82.0178, 0.55", "-83.3793, 38.7071, -85.6255, 0.28", "-83.7823, 38.8982, -86.3163, 0.83", "-86.0438, 39.9835, -90.2072, 0.28", "-86.9846, 40.4167, -92.0372, 1.11", "-88.7382, 41.3038, -95.779, 0.28", "-89.3529, 41.5109, -97.1107, 0.55", "-90.9709, 41.8738, -100.567, 0.28", "-91.8296, 42.0624, -102.389, 0.83", "-94.8975, 42.7447, -108.894, 0.55", "-95.8101, 42.9581, -110.774, 0.55", "-99.1343, 43.7756, -117.416, 0.83", "-101.745, 44.4991, -122.525, 0.55", "-103.196, 45.0018, -125.337, 0.55", "-106.214, 46.2709, -131.181, 1.66", "-108.224, 47.4173, -134.857, 0.28", "-108.792, 47.8262, -135.885, 0.55", "-110.471, 49.3863, -138.817, 0.28", "-111.053, 49.9626, -139.762, 0.55", "-113.694, 52.4895, -143.644, 0.28", "-114.958, 53.7094, -145.125, 0.83", "-116.192, 54.816, -146.336, 0.28", "-116.416, 55.0128, -146.529, 0.55", "-118.712, 56.9118, -148.212, 0.28", "-119.761, 57.6417, -148.976, 1.11", "-123.14, 59.7841, -151.325, 0.28", "-123.98, 60.2393, -151.961, 0.55", "-125.309, 60.9004, -153.016, 0.28", "-126.607, 61.5784, -154.074, 0.55", "-131.247, 64.0425, -158.018, 0.28", "-131.923, 64.4146, -158.676, 0.55", "-133.917, 65.6138, -160.854, 0.28", "-134.37, 65.9248, -161.441, 0.55", "-135.451, 66.8001, -163.131, 0.28", "-135.451, 66.8001, -163.131, 0.55", "-136.351, 69.29, -166.162, 0.28", "-136.561, 70.2519, -167.286, 0.55", "-136.833, 72.6296, -169.86, 0.28", "-136.88, 73.9419, -171.122, 0.55", "-136.822, 76.4883, -173.26, 0.28", "-136.811, 77.2591, -173.89, 0.55", "-136.774, 79.0409, -175.243, 0.28", "-136.779, 80.0399, -176.094, 0.55", "-136.838, 83.2147, -178.975, 0.28", "-136.92, 84.7177, -180.644, 0.83", "-137.19, 87.8743, -184.972, 0.28", "-137.202, 88.0588, -185.265, 0.55", "-137.27, 89.9595, -188.863, 0.28", "-137.312, 90.5159, -190.246, 0.55", "-137.436, 91.3759, -193.092, 0.28", "-137.482, 91.5733, -193.868, 0.55", "-137.55, 92.1117, -195.785, 0.28", "-137.615, 92.3247, -196.491, 0.55", "-138.015, 93.4099, -199.848, 0.28", "-138.196, 93.8629, -201.24, 0.55", "-138.632, 95.0935, -204.6, 0.28", "-138.822, 95.6446, -205.971, 1.11", "-139.621, 97.9041, -211.401, 0.28", "-139.775, 98.4117, -212.588, 0.55", "-140.194, 100.491, -217.056, 0.28", "-140.334, 101.259, -218.697, 0.28", "-140.383, 102.01, -220.145, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-113.486, 39.3929, 27.5473, 0.55", "-118.217, 37.9481, 23.8359, 0.55", "-125.427, 35.8013, 15.2897, 0.55", "-132.509, 32.8893, 6.8611, 0.55", "-140.393, 31.9636, -1.29971, 0.55", "-149.535, 30.0236, -7.80298, 0.55", "-158.355, 30.0946, -15.0081, 0.55", "-167.15, 30.2071, -22.2418, 0.55", "-175.821, 31.632, -29.5046, 0.55", "-185.105, 35.683, -34.8097, 0.55", "-194.348, 41.0668, -38.9165, 0.55", "-204.011, 46.3167, -42.1059, 0.55", "-214.009, 49.9676, -46.2494, 0.55", "-223.682, 52.8347, -51.5856, 0.55", "-234.2, 53.7888, -55.8495, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-113.486, 39.3929, 27.5473, 0.83", "-114.667, 40.2539, 27.167, 0.83", "-116.636, 41.6889, 26.5333, 0.55", "-117.499, 42.3186, 26.2552, 0.55", "-120.161, 44.259, 25.3982, 0.55", "-124.911, 50.153, 23.6205, 0.55", "-130.149, 55.311, 21.1618, 0.55", "-136.385, 59.56, 19.5173, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "56.7214, -145.621, -2.9351, 1.11", "58.5243, -150.919, -4.67343, 1.11", "59.634, -154.496, -5.80288, 1.11", "60.5966, -157.865, -6.82517, 1.11", "61.2954, -160.441, -7.57679, 1.11", "62.3541, -164.775, -8.83783, 1.11", "63.1462, -168.241, -9.73063, 1.11", "64.1082, -172.931, -10.5391, 0.83", "64.6285, -175.687, -10.9725, 0.83", "64.9693, -177.331, -11.205, 0.83", "65.4318, -179.604, -11.5117, 0.83", "66.2427, -184.02, -12.038, 0.83", "67.0192, -187.891, -12.3894, 0.83", "67.5829, -190.278, -12.601, 0.83", "68.1404, -192.326, -12.7796, 0.55", "69.2745, -196.18, -13.0699, 0.83", "70.1449, -198.847, -13.3335, 0.83", "71.3077, -202.739, -13.99, 0.83", "72.1276, -205.85, -14.6212, 0.83", "72.7953, -208.661, -15.2589, 0.83", "73.9651, -213.5, -16.5727, 0.83", "74.9701, -217.324, -17.7247, 0.83", "75.8957, -221.126, -18.9818, 0.83", "76.5164, -224.052, -20.0591, 0.83", "77.1508, -227.529, -21.4744, 0.83", "77.7545, -230.978, -23.0472, 0.83", "78.7458, -236.712, -25.9152, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "56.7214, -145.621, -2.9351, 0.55", "57.6279, -147.289, -3.31023, 0.55", "58.165, -148.254, -3.55013, 0.55", "59.1629, -150.225, -3.99897, 1.11", "60.247, -152.406, -4.367, 0.55", "61.072, -154.077, -4.59369, 1.38", "61.9477, -155.85, -4.83428, 1.38", "62.9912, -158.071, -5.08198, 0.55", "63.6892, -159.535, -5.22937, 0.55", "65.0303, -162.316, -5.43694, 0.28", "65.6175, -163.612, -5.44595, 0.83", "67.2456, -171.489, -6.45602, 0.83", "67.7972, -179.418, -8.03635, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "126.15, -95.5526, -2.75811, 0.83", "132.53, -96.0996, 2.41173, 0.83", "139.576, -95.849, 6.65765, 0.83", "145.449, -95.6265, 12.421, 0.83", "151.481, -94.9317, 17.981, 0.83", "156.839, -93.7233, 24.1205, 0.83", "161.92, -93.9844, 30.5899, 0.83", "167.274, -95.243, 36.714, 0.83", "173.137, -98.4342, 41.5672, 0.83", "178.265, -101.115, 47.4393, 0.83", "182.76, -103.169, 54.0282, 0.83", "187.062, -104.025, 60.9915, 0.83", "190.232, -104.908, 68.5346, 0.83", "194.587, -106.785, 75.2671, 0.83", "199.609, -108.309, 81.6105, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "126.15, -95.5526, -2.75811, 0.55", "137.704, -101.929, -4.56448, 0.83", "148.944, -109.119, -4.56753, 0.83", "160.778, -115.191, -5.15402, 0.83", "171.471, -122.968, -7.03803, 0.83", "182.818, -129.124, -10.296, 0.83", "193.312, -135.615, -15.308, 0.83", "203.727, -140.497, -21.9553, 0.83", "213.04, -145.941, -29.7248, 0.83", "222.061, -152.82, -36.7143, 0.83", "230.066, -160.297, -44.3265, 0.83", "237.821, -167.824, -52.1466, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-69.8737, -95.4864, 28.9673, 0.55", "-77.1582, -101.017, 32.0394, 0.55", "-83.5436, -107.127, 35.9519, 0.55", "-90.6125, -113.249, 38.3947, 0.55", "-98.7362, -117.941, 40.5553, 0.55", "-106.684, -122.928, 42.7369, 0.55", "-114.372, -128.402, 44.7342, 0.55", "-121.899, -134.098, 46.7501, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-69.8737, -95.4864, 28.9673, 0.55", "-78.2952, -101.717, 32.0005, 0.55", "-85.5888, -108.974, 35.7059, 0.55", "-93.8415, -114.346, 40.3419, 0.55", "-101.478, -120.097, 45.5646, 0.55", "-109.174, -126.431, 49.9968, 0.55", "-118.09, -131.33, 53.836, 0.55", "-126.349, -137.509, 57.3749, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "-66.8263, 208.879, 34.5142, 0.55", "-66.7319, 210.396, 34.651, 0.55", "-66.5726, 212.954, 34.8819, 0.83", "-64.8408, 222.766, 37.1859, 0.83", "-64.5135, 232.492, 40.3185, 0.83", "-64.0971, 242.025, 43.9674, 0.83" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "-66.8263, 208.879, 34.5142, 0.55", "-64.8275, 208.619, 34.9632, 0.55", "-56.5064, 209.05, 38.4604, 0.55", "-48.2996, 208.063, 42.1059, 0.55" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "10.4154, 116.169, -80.544, 0.55", "9.689, 117.709, -80.2235, 0.55", "8.95609, 118.977, -79.9159, 0.55", "7.99913, 120.409, -79.4144, 0.28", "6.96208, 121.777, -78.8534, 0.55", "5.44812, 123.647, -78.0431, 0.55", "4.46268, 124.751, -77.443, 0.55", "3.18643, 126.039, -76.5725, 0.83", "1.21532, 127.796, -75.0923, 0.55", "0.04442, 128.745, -74.2456, 0.28", "-0.189583, 128.919, -74.0614, 0.55", "-2.68187, 130.727, -72.0646, 0.28", "-3.19016, 131.089, -71.6258, 0.55", "-5.06492, 132.383, -69.9318, 0.28", "-6.45432, 133.349, -68.6952, 1.66", "-10.3016, 136.118, -65.0941, 0.28", "-11.4766, 136.99, -63.9736, 0.55", "-14.0615, 139.016, -61.4886, 0.55", "-15.4434, 140.148, -60.1177, 0.28", "-16.5932, 141.187, -58.9307, 0.83", "-18.9551, 143.737, -56.191, 0.28", "-19.1942, 144.116, -55.8832, 0.55", "-19.699, 145.247, -55.154, 0.28", "-20.0077, 146.114, -54.7199, 0.55", "-20.5409, 147.717, -54.034, 0.28", "-20.9684, 148.999, -53.4977, 0.83", "-21.7879, 151.1, -52.5212, 0.55", "-23.1521, 154.009, -50.9903, 0.55", "-24.3381, 156.243, -49.7636, 0.83", "-25.1048, 157.616, -49.0568, 0.28", "-26.3444, 159.659, -48.1022, 0.55", "-28.4706, 163.046, -46.537, 0.28", "-29.3439, 164.435, -45.9623, 0.55", "-30.3969, 166.263, -45.3138, 0.55", "-31.6154, 168.761, -44.5951, 0.55", "-32.6946, 171.088, -44.0287, 0.55", "-33.9971, 174.018, -43.5033, 0.28", "-34.5936, 175.509, -43.303, 0.55", "-35.6732, 178.264, -42.7599, 0.28", "-36.1825, 179.585, -42.3831, 0.28", "-36.7548, 181.164, -41.81, 0.28", "-37.0309, 182.287, -41.3894, 0.55", "-37.2596, 183.568, -40.9576, 0.28", "-37.3794, 184.578, -40.5588, 0.55", "-37.4478, 186.256, -39.7707, 0.28", "-37.4661, 187.036, -39.3798, 0.55", "-37.3956, 188.66, -38.5914, 0.28", "-37.3025, 189.976, -37.9498, 0.28", "-37.174, 191.56, -37.1629, 0.55", "-36.9927, 193.907, -35.9938, 0.28", "-36.89, 195.541, -35.2267, 0.28", "-36.8355, 197.985, -34.1145, 0.83" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "10.4154, 116.169, -80.544, 0.55", "11.4101, 119.372, -83.4313, 0.55", "11.9088, 120.92, -85.0219, 1.38", "12.6223, 123.244, -87.6046, 0.28", "12.8991, 124.122, -88.663, 0.55", "13.4275, 125.936, -90.9083, 0.55", "14.5796, 129.448, -95.5707, 0.28", "14.8121, 130.097, -96.5584, 0.83", "15.2684, 131.05, -98.2633, 0.83", "15.9472, 132.425, -100.843, 0.28", "16.2144, 132.921, -101.855, 0.55", "17.7925, 135.881, -108.036, 0.28", "18.0676, 136.468, -109.188, 0.55", "19.61, 139.587, -115.314, 0.28", "19.9975, 140.371, -116.85, 1.38", "21.2858, 143.345, -122.577, 0.28", "21.5314, 144.044, -123.884, 0.28", "21.6468, 144.729, -125.028, 0.83", "21.9721, 147.651, -129.428, 0.28", "22.0207, 148.436, -130.443, 0.55", "22.1222, 149.981, -132.296, 0.28", "22.254, 151.938, -134.502, 0.83", "22.5411, 155.294, -138.168, 0.28", "22.9542, 159.178, -142.081, 1.11", "23.2819, 161.582, -144.323, 0.28", "23.4199, 162.176, -144.894, 0.55", "24.4869, 165.299, -147.839, 0.28", "25.0982, 166.56, -149.088, 0.28", "26.0241, 168.061, -150.663, 1.66", "27.6271, 170.267, -153.168, 0.55", "30.162, 173.336, -156.84, 0.28", "31.3459, 174.693, -158.453, 0.83", "34.2879, 177.989, -162.292, 0.28", "35.3199, 179.156, -163.699, 0.55", "37.2465, 181.539, -166.456, 0.28", "37.8697, 182.447, -167.355, 0.28", "38.8941, 184.463, -168.957, 0.28", "39.286, 185.598, -169.685, 0.83", "39.6973, 187.791, -170.568, 0.28", "39.9294, 189.972, -171.201, 0.28", "39.975, 192.007, -171.6, 1.66", "39.9495, 195.113, -172.116, 0.28", "39.9827, 196.531, -172.327, 0.55", "40.0693, 197.787, -172.515, 0.28", "40.2269, 198.888, -172.66, 0.55", "40.3753, 200.018, -172.739, 0.28", "40.4657, 201.048, -172.742, 0.83", "40.5301, 204.414, -172.16, 0.28", "40.5161, 205.536, -171.863, 0.55", "40.4843, 207.565, -171.165, 0.55", "40.4732, 210.708, -169.867, 0.28", "40.4716, 211.748, -169.346, 0.55", "40.4993, 214.296, -167.891, 0.28", "40.5347, 216.333, -166.66, 0.55", "40.587, 217.382, -165.984, 0.28", "40.6466, 218.397, -165.337, 0.55", "40.9009, 220.613, -163.963, 0.28", "41.2103, 222.741, -162.639, 0.28", "41.4439, 224.118, -161.813, 0.55", "42.2699, 228.545, -159.264, 0.28", "42.4747, 229.562, -158.723, 0.55", "42.8331, 231.358, -157.806, 0.28", "43.1762, 233.133, -156.987, 0.28", "43.3073, 233.864, -156.674, 0.55", "43.8729, 236.798, -155.66, 0.28", "44.2938, 239.106, -155.019, 0.28", "44.5826, 240.718, -154.568, 0.55", "44.7227, 241.665, -154.314, 0.28", "44.9251, 243.205, -153.883, 0.28", "45.2115, 246.062, -153.044, 0.28", "45.2729, 249.03, -152.104, 0.55" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "112.365, 13.6883, -18.475, 0.28", "115.0, 15.7669, -17.5129, 0.28", "116.013, 16.5661, -17.143, 0.55", "118.165, 18.263, -16.3576, 0.28", "118.963, 18.8922, -16.0664, 0.55" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "112.365, 13.6883, -18.475, 0.55", "114.426, 13.2217, -18.5256, 0.55", "116.023, 12.8228, -18.4994, 0.55", "117.632, 12.4323, -18.4802, 0.83", "119.24, 12.057, -18.4702, 0.55", "121.301, 11.5371, -18.4475, 0.55", "122.76, 11.1485, -18.4299, 0.28", "124.39, 10.7568, -18.3995, 0.83", "126.504, 10.1982, -18.2424, 0.55", "126.96, 10.0477, -18.1564, 0.83", "128.316, 9.5585, -17.7607, 0.28", "128.608, 9.45454, -17.6475, 0.55", "129.796, 9.07603, -17.1204, 0.28", "131.695, 8.59643, -16.1708, 0.55", "134.071, 8.08558, -14.9161, 0.55", "135.129, 7.9073, -14.3765, 0.83", "137.299, 7.6626, -13.3282, 0.28", "137.78, 7.62006, -13.1145, 0.55", "139.379, 7.48861, -12.4982, 0.28", "140.405, 7.4951, -12.3007, 0.55", "141.692, 7.67892, -12.2441, 0.28", "142.157, 7.76196, -12.2675, 0.55", "143.145, 7.9613, -12.4027, 0.28", "144.034, 8.15855, -12.565, 0.55", "147.977, 9.23721, -13.5814, 0.28", "149.356, 9.72959, -14.0164, 0.55", "150.448, 10.206, -14.4541, 0.55" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "26.0499, 34.3982, -18.8548, 0.83", "26.9139, 35.4966, -21.2914, 0.83", "27.8216, 36.9157, -24.0956, 0.83", "30.7022, 42.2984, -34.3351, 0.83", "31.5212, 44.1373, -37.6038, 0.83", "32.1354, 45.8654, -40.5745, 1.11", "32.5646, 47.3964, -43.0872, 0.83", "32.8731, 48.7731, -45.3301, 0.83", "33.0307, 50.2453, -47.487, 0.55", "32.857, 52.0213, -49.8005, 0.55", "32.6689, 53.5891, -52.0908, 0.55", "32.4897, 55.6159, -55.3619, 0.83", "32.4023, 57.3325, -58.3521, 0.28", "32.4329, 58.2784, -60.0504, 0.83", "32.7013, 60.8113, -64.4248, 0.55", "32.951, 62.6348, -67.5634, 0.55", "33.2647, 64.5233, -70.7045, 0.55", "33.6287, 66.617, -73.8806, 0.83", "33.7915, 68.0322, -75.5998, 0.55", "33.9798, 69.3312, -77.0518, 0.83", "34.3963, 72.1513, -79.625, 0.55", "34.6227, 74.6881, -81.6812, 1.11", "34.8499, 77.6776, -83.642, 0.55", "35.1932, 86.08, -87.5368, 0.55" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "26.0499, 34.3982, -18.8548, 1.11", "27.8493, 35.6359, -19.1196, 1.11", "29.6645, 36.7478, -19.4764, 1.11", "31.9929, 38.2445, -19.9395, 1.11", "33.902, 39.544, -20.3284, 0.83", "35.2682, 40.3865, -20.6699, 0.83", "38.5616, 42.1694, -21.5609, 0.83", "39.8092, 42.7808, -21.9455, 0.83", "42.1108, 43.8158, -22.7048, 0.83", "44.3218, 44.8138, -23.4934, 0.83", "47.1472, 46.2178, -24.5437, 0.83", "48.534, 47.0347, -25.0479, 0.83", "50.3749, 48.2059, -25.5965, 0.55", "52.7202, 49.5879, -26.267, 1.11", "54.4464, 50.4954, -26.7328, 0.55", "55.338, 50.9846, -26.9295, 0.55", "56.2018, 51.5118, -27.0658, 0.55", "57.1926, 52.1182, -27.2016, 0.55", "58.6494, 52.8028, -27.4755, 0.55", "60.4697, 53.5392, -27.9201, 0.55", "62.0983, 54.2004, -28.3617, 0.55", "63.7676, 54.9674, -28.8081, 0.55", "66.0107, 56.1921, -29.4688, 0.55", "69.1014, 58.2011, -30.4952, 0.55", "71.1774, 59.7066, -31.222, 0.83", "72.509, 60.7454, -31.6803, 0.55", "74.4483, 62.2213, -32.2934, 0.83", "76.9119, 64.1826, -32.991, 0.55", "78.4039, 65.3873, -33.3702, 0.55", "79.9718, 66.638, -33.6547, 1.38", "81.5582, 67.7511, -33.8845, 0.55", "83.4926, 68.953, -34.1309, 0.55", "86.0036, 70.4148, -34.4975, 0.55", "87.9888, 71.6301, -34.8725, 0.55", "89.4271, 72.5506, -35.2266, 0.55", "90.8382, 73.5663, -35.69, 0.55", "92.4645, 74.7229, -36.4673, 0.55", "94.66, 76.3153, -37.8658, 1.11", "96.9568, 78.0016, -39.6544, 0.55", "97.8565, 78.6848, -40.4122, 0.55", "99.5382, 79.9232, -41.8343, 1.66", "102.654, 81.9606, -44.2807, 0.83", "105.076, 83.3208, -45.9458, 0.55", "107.161, 84.4149, -47.15, 0.55", "108.458, 85.0737, -47.7636, 0.55", "110.285, 85.9433, -48.5244, 0.55", "112.689, 86.9703, -49.2774, 0.83", "114.889, 87.9849, -49.6881, 2.77", "117.5, 89.1612, -50.0696, 0.55", "118.318, 89.5334, -50.2001, 0.83", "120.605, 90.7166, -50.6578, 0.28", "122.056, 91.5765, -51.0277, 0.55", "123.915, 92.8077, -51.5761, 1.11", "126.033, 94.233, -52.199, 0.55", "127.042, 94.9387, -52.5073, 0.55", "128.479, 96.0851, -52.9566, 1.38", "130.112, 97.6202, -53.4683, 0.55", "131.188, 98.6683, -53.9119, 0.83" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "33.2102, 48.7869, -3.06524, 0.55", "33.4837, 50.9017, -2.35152, 0.55", "33.6925, 52.5152, -1.80697, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "33.2102, 48.7869, -3.06524, 0.55", "34.2182, 49.3319, -2.18158, 0.55", "35.2369, 49.8332, -1.34642, 0.55", "37.3888, 51.1801, 0.515945, 0.55", "38.8456, 51.9719, 1.86237, 0.55", "39.5784, 52.3095, 2.50959, 0.55", "41.8041, 53.1816, 4.33012, 0.55", "42.6103, 53.4275, 4.92925, 0.55", "45.4373, 53.972, 6.77159, 0.55", "48.4869, 54.3813, 8.42045, 0.55", "50.2962, 54.5148, 9.38983, 0.55", "51.9284, 54.5502, 10.2032, 0.55", "53.4767, 54.5073, 10.8552, 0.55", "55.3055, 54.3478, 11.5278, 0.55", "57.0641, 53.9919, 11.9454, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-92.9879, 35.5941, -59.0855, 0.55", "-94.8504, 35.7241, -61.9778, 0.55", "-96.7071, 35.7545, -64.6443, 0.55", "-98.5068, 35.7968, -67.2136, 0.55", "-99.141, 35.8161, -68.1274, 0.55", "-100.086, 35.8392, -69.4766, 1.11", "-101.56, 35.9067, -71.6581, 0.28", "-102.675, 36.002, -73.2404, 0.83", "-103.97, 36.0997, -75.0815, 0.83", "-105.586, 36.2417, -77.5621, 0.28", "-106.303, 36.3149, -78.7716, 0.83", "-108.255, 36.451, -82.4133, 0.28", "-108.677, 36.4577, -83.2389, 0.28", "-109.761, 36.4118, -85.3069, 0.83", "-111.815, 36.151, -89.0278, 0.28", "-112.341, 36.0543, -89.9093, 0.55", "-114.814, 35.4492, -93.7035, 0.28", "-116.41, 34.9324, -95.8745, 1.11", "-117.461, 34.5929, -97.2471, 0.55", "-117.932, 34.4493, -97.8393, 0.83", "-119.015, 34.1835, -99.1525, 0.55", "-119.58, 34.0787, -99.8854, 0.55", "-121.877, 33.787, -103.133, 1.11", "-124.778, 33.5278, -107.545, 1.11", "-126.393, 33.4305, -110.237, 0.28", "-126.886, 33.4121, -111.125, 0.55", "-128.616, 33.3999, -114.554, 0.28", "-129.336, 33.4375, -116.064, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-92.9879, 35.5941, -59.0855, 0.28", "-94.7116, 37.4705, -59.0328, 0.28", "-95.2736, 38.0271, -59.0485, 0.55", "-96.1823, 38.8893, -59.1016, 0.28", "-97.2696, 39.9513, -59.3027, 0.55", "-99.0206, 41.6365, -59.7469, 0.28", "-99.6386, 42.231, -60.0349, 0.55", "-101.653, 44.193, -61.2173, 0.28", "-102.498, 44.9861, -61.7712, 0.83", "-104.477, 46.7914, -63.2473, 0.28", "-105.322, 47.5718, -63.9501, 0.83", "-108.423, 50.4331, -66.7601, 0.28", "-109.548, 51.4898, -67.8873, 0.83", "-111.048, 52.9538, -69.6225, 0.28", "-112.207, 54.074, -71.0058, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-136.385, 59.56, 19.5173, 0.55", "-143.382, 66.3696, 17.3669, 0.55", "-150.086, 73.4456, 15.1095, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-136.385, 59.56, 19.5173, 0.55", "-142.543, 66.0034, 18.0889, 0.55", "-148.276, 72.5594, 15.7129, 0.55", "-155.265, 78.0493, 14.3012, 0.55", "-161.307, 84.739, 13.6465, 0.55", "-168.66, 89.8619, 12.9193, 0.55", "-176.797, 93.5013, 12.0017, 0.55", "-184.222, 97.9954, 9.72246, 0.55", "-191.81, 102.438, 7.93389, 0.55", "-199.792, 106.29, 6.58837, 0.55", "-207.494, 110.876, 6.07084, 0.55", "-215.623, 114.53, 7.04056, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "78.7458, -236.712, -25.9152, 0.83", "79.5509, -240.999, -26.9576, 0.83", "80.2619, -243.725, -27.6006, 0.83", "81.7756, -248.865, -28.7626, 0.83", "82.9259, -252.41, -29.5206, 0.83", "83.6408, -254.475, -29.9367, 0.83", "84.8061, -257.792, -30.6135, 0.83", "86.0686, -261.1, -31.2797, 0.83", "87.3834, -264.212, -31.8541, 0.83", "88.9872, -267.878, -32.5014, 0.83", "89.6609, -269.349, -32.7703, 0.83", "90.9062, -272.158, -33.2911, 0.83", "91.904, -274.72, -33.7837, 0.83", "92.5287, -276.445, -34.1096, 0.83", "94.0504, -280.518, -34.9272, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "78.7458, -236.712, -25.9152, 0.55", "78.0617, -237.199, -26.4275, 0.55", "76.8684, -238.284, -27.5279, 0.55", "75.9186, -239.401, -28.7637, 0.55", "75.4742, -240.024, -29.5479, 0.28", "75.3544, -240.238, -29.8181, 0.55", "74.8854, -241.204, -31.0271, 0.28", "74.7229, -241.659, -31.688, 0.83", "74.3582, -243.19, -34.1571, 0.55", "74.2087, -244.002, -35.6298, 0.55", "74.1136, -244.51, -36.6662, 0.28", "74.1007, -244.591, -36.8844, 0.83", "74.0935, -245.397, -39.9391, 0.28", "74.1472, -245.506, -40.698, 0.55", "74.5973, -245.693, -43.1959, 0.28", "74.69, -245.708, -43.5391, 0.55", "75.5865, -245.735, -45.9909, 0.28", "76.1214, -245.734, -46.9864, 1.94", "77.4317, -245.729, -48.6314, 0.55", "78.5345, -245.701, -49.752, 0.55", "79.4169, -245.722, -50.5162, 0.83", "80.1538, -245.801, -51.115, 0.28", "81.1325, -245.986, -51.8829, 0.55", "82.2452, -246.242, -52.8144, 0.28", "83.2437, -246.513, -53.7254, 0.55", "84.2985, -246.83, -55.0447, 0.28", "84.8061, -247.002, -55.7749, 1.38", "85.9142, -247.398, -57.4299, 0.55", "86.3813, -247.585, -58.2162, 0.55", "87.0134, -247.842, -59.3551, 0.55", "88.5877, -248.439, -62.5038, 0.28", "89.1569, -248.603, -63.6716, 0.28", "89.5651, -248.691, -64.5548, 1.11", "91.0902, -249.011, -67.7903, 0.28", "91.4723, -249.088, -68.6714, 1.11", "92.4742, -249.292, -71.0083, 0.28", "92.5912, -249.331, -71.2996, 0.55", "93.0827, -249.556, -72.7111, 0.55", "93.4691, -249.757, -73.9193, 0.55", "94.5157, -250.353, -77.2102, 0.28", "94.6048, -250.42, -77.5074, 0.55", "95.2345, -251.072, -79.7155, 0.28", "95.3088, -251.165, -80.0103, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "35.1932, 86.08, -87.5368, 0.83", "33.8329, 86.5355, -84.3454, 0.83", "38.6195, 87.1711, -86.0471, 0.55", "39.8628, 87.3828, -86.2741, 0.55", "41.6994, 87.6716, -86.5023, 1.11", "46.3279, 88.3893, -86.9629, 0.28", "47.0757, 88.5119, -87.0173, 0.55", "50.8825, 88.9468, -87.6126, 0.28", "52.088, 89.0735, -87.8468, 1.11", "53.9581, 89.1916, -88.293, 0.28", "54.9559, 89.2176, -88.5507, 0.55", "55.9475, 89.2174, -88.833, 0.55", "59.9896, 89.1031, -90.1546, 0.28", "60.4498, 89.0852, -90.3076, 0.55", "63.2587, 89.0095, -91.2877, 0.28", "63.4884, 89.0118, -91.3729, 0.55", "68.947, 89.2185, -93.4104, 0.28", "69.4251, 89.2476, -93.5971, 0.55", "70.6879, 89.3758, -94.0647, 0.28", "71.5679, 89.4957, -94.365, 0.55", "75.0712, 90.0792, -95.3244, 0.28", "75.6553, 90.1639, -95.4679, 0.83", "79.8846, 90.7213, -96.4002, 0.28", "81.651, 90.9153, -96.9421, 0.28", "82.8493, 91.0352, -97.3657, 0.28", "84.4421, 91.188, -97.9589, 0.28", "88.2247, 91.5545, -99.6489, 0.83", "90.8526, 91.8464, -100.941, 0.55", "96.4742, 92.5299, -103.885, 0.28", "97.0925, 92.6034, -104.239, 0.28", "98.2236, 92.7333, -104.938, 0.55", "103.747, 93.4496, -108.637, 0.28", "104.341, 93.5444, -109.041, 0.55" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "35.1932, 86.08, -87.5368, 1.94", "35.9561, 88.2402, -88.3334, 1.94" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "131.188, 98.6683, -53.9119, 0.83", "132.451, 100.738, -54.8908, 0.83", "133.166, 101.956, -55.6067, 0.83", "134.542, 104.448, -57.08, 0.55", "135.304, 105.944, -57.9303, 1.11", "136.534, 108.506, -59.4272, 0.28", "136.834, 109.17, -59.8178, 0.55", "137.909, 111.761, -61.4919, 0.28", "138.411, 113.223, -62.5337, 0.55", "139.042, 115.485, -64.1613, 1.38", "139.562, 117.47, -65.6266, 0.55", "139.728, 118.174, -66.1335, 0.28", "140.365, 121.082, -68.2908, 0.83", "140.916, 123.997, -70.469, 0.55" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "131.188, 98.6683, -53.9119, 0.55", "133.024, 101.275, -60.9246, 0.55", "133.39, 101.794, -62.3218, 0.55", "134.288, 103.07, -65.7556, 0.28", "134.475, 103.335, -66.4682, 0.55" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "57.0641, 53.9919, 11.9454, 0.55", "58.5758, 55.7106, 13.8972, 0.55", "60.0469, 57.6804, 15.6813, 0.55", "62.0075, 60.7353, 17.9804, 0.55", "63.1126, 62.9189, 19.1493, 0.55", "63.893, 64.7804, 19.9596, 0.55", "64.4019, 66.1772, 20.5137, 0.55", "65.3672, 70.2296, 21.7273, 0.28", "65.4769, 71.1517, 21.9062, 0.83", "65.7039, 74.5801, 22.6387, 0.55", "65.8459, 75.799, 23.2633, 0.28", "66.0755, 76.4088, 23.973, 0.83", "67.0374, 77.9438, 26.6215, 0.55", "67.2614, 78.2287, 27.2189, 0.55", "68.5609, 79.5135, 30.5186, 0.55", "69.0717, 79.885, 31.7733, 0.28", "69.2776, 80.0262, 32.2173, 0.55", "70.183, 80.6545, 33.9752, 0.28", "70.4333, 80.8451, 34.4285, 0.83", "74.0126, 87.6459, 38.0091, 0.83" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "57.0641, 53.9919, 11.9454, 0.55", "58.6156, 53.4177, 11.5817, 0.55", "60.0494, 52.8871, 11.2457, 1.11", "70.1803, 48.0749, 9.82085, 1.11", "80.9362, 44.7094, 9.80067, 1.11", "91.4588, 41.183, 11.7334, 1.11", "102.123, 39.6831, 14.9454, 1.11", "112.219, 39.7396, 19.8704, 1.11", "121.854, 38.104, 25.4148, 1.11" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-129.336, 33.4375, -116.064, 0.28", "-131.812, 34.2902, -120.347, 0.28", "-132.07, 34.379, -120.793, 1.11" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-129.336, 33.4375, -116.064, 0.28", "-130.444, 32.6243, -117.341, 0.28", "-130.826, 32.3642, -117.759, 0.83", "-132.407, 31.3665, -119.499, 0.28", "-133.399, 30.8033, -120.587, 0.83", "-135.27, 29.8315, -122.694, 0.28", "-136.174, 29.4057, -123.787, 0.28", "-137.019, 29.0632, -124.811, 0.83", "-138.281, 28.582, -126.381, 0.28", "-138.92, 28.3521, -127.186, 0.55", "-140.857, 27.6404, -129.717, 0.55", "-142.623, 26.9495, -132.099, 0.55", "-143.317, 26.6493, -133.027, 0.55", "-144.672, 25.9675, -134.838, 0.28", "-144.985, 25.7818, -135.231, 0.55", "-146.18, 24.9489, -136.625, 0.28", "-146.273, 24.8762, -136.72, 0.55", "-147.341, 23.9901, -137.685, 0.28", "-147.946, 23.5072, -138.252, 0.55", "-148.454, 23.1639, -138.665, 0.28", "-148.747, 22.993, -138.899, 0.55", "-150.652, 21.9836, -140.313, 0.28", "-150.871, 21.8731, -140.481, 0.55", "-152.158, 21.2768, -141.518, 0.28", "-153.002, 20.9428, -142.19, 0.28", "-154.038, 20.5951, -143.065, 0.83" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "94.0504, -280.518, -34.9272, 1.11", "94.2893, -285.503, -37.27, 1.11", "94.3273, -287.646, -38.5243, 0.83", "94.3854, -290.927, -40.4455, 0.83", "94.5045, -297.649, -44.381, 0.83", "94.601, -303.094, -47.5696, 0.83", "94.6557, -306.181, -49.3767, 0.83", "94.8646, -311.232, -52.5287, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "94.0504, -280.518, -34.9272, 0.83", "95.4233, -284.052, -35.0196, 0.83", "96.3672, -287.126, -35.2629, 0.83", "96.8465, -289.253, -35.5407, 0.83", "97.4842, -292.502, -36.0262, 0.83", "98.1414, -296.149, -36.7049, 0.83", "98.7201, -299.123, -37.4311, 0.83", "99.3461, -302.087, -38.3887, 1.38", "100.115, -305.81, -39.6989, 0.83", "100.59, -308.429, -40.7334, 0.83", "101.094, -311.361, -42.0435, 0.83", "101.862, -314.805, -43.7529, 0.83", "102.855, -318.076, -45.5692, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "35.9561, 88.2402, -88.3334, 0.55", "35.416, 90.2992, -89.3002, 0.55", "35.181, 91.1083, -89.6439, 0.55", "34.4319, 93.4548, -90.714, 0.28", "34.0734, 94.5231, -91.2245, 0.55", "33.563, 95.864, -91.8333, 0.28", "32.9383, 97.4168, -92.519, 0.55", "32.3005, 98.7542, -93.1119, 0.28", "31.4543, 100.326, -93.8093, 0.28", "30.3793, 102.102, -94.5596, 1.38", "29.046, 104.181, -95.4481, 0.28", "28.5143, 104.913, -95.7634, 0.55", "27.6449, 105.959, -96.2598, 0.28", "27.4641, 106.162, -96.3662, 0.55", "26.2869, 107.46, -97.0514, 0.55", "25.2165, 108.733, -97.7717, 0.28", "23.7602, 110.69, -98.9269, 1.66", "22.3828, 113.007, -100.348, 0.55", "21.5445, 114.719, -101.443, 0.55", "21.232, 115.496, -101.939, 0.83", "20.3684, 118.207, -103.66, 0.28", "20.0583, 119.563, -104.482, 1.11", "19.5607, 123.005, -106.472, 0.28", "19.4224, 124.35, -107.229, 0.55", "19.2774, 126.031, -108.178, 0.55", "19.1725, 127.36, -108.922, 0.55", "18.9615, 130.039, -110.36, 0.28", "18.91, 130.638, -110.655, 0.55" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "35.9561, 88.2402, -88.3334, 0.55", "37.5107, 90.5389, -92.0069, 0.55", "38.182, 91.4674, -93.2887, 0.28", "38.3573, 91.6831, -93.5817, 0.55", "39.107, 92.6611, -94.7485, 0.28", "39.4063, 93.0666, -95.1646, 0.55", "40.6912, 95.0871, -96.843, 0.28", "41.0447, 95.7181, -97.2259, 0.55", "42.1827, 97.6069, -98.6024, 0.28", "42.9764, 98.9651, -99.6841, 1.66", "44.3824, 101.406, -102.077, 0.28", "45.4789, 103.377, -104.266, 0.28", "46.0004, 104.406, -105.475, 1.38", "47.9663, 108.43, -110.452, 0.28", "48.3496, 109.29, -111.551, 0.55", "49.5237, 112.156, -115.396, 0.28", "50.0353, 113.633, -117.512, 0.55", "50.3276, 114.613, -118.91, 0.28", "50.38, 114.883, -119.231, 0.55", "50.4618, 116.2, -120.358, 0.28", "50.5061, 117.436, -121.442, 1.11", "50.4986, 120.625, -124.247, 0.28", "50.5254, 121.628, -125.289, 0.55", "50.5784, 122.529, -126.267, 0.28", "50.791, 124.475, -128.481, 0.83", "51.3553, 128.663, -133.36, 0.28", "51.555, 129.836, -134.748, 0.55", "51.9792, 132.146, -137.374, 0.28", "52.2429, 133.405, -138.848, 0.83", "52.945, 136.732, -142.621, 0.28", "53.1628, 137.712, -143.677, 0.55", "53.6545, 140.031, -145.947, 0.28", "53.8105, 140.878, -146.735, 0.55", "54.4995, 145.57, -150.876, 0.28", "54.7053, 146.882, -151.998, 1.11", "55.1103, 149.494, -154.036, 0.28", "55.277, 150.393, -154.727, 0.55", "55.8868, 153.693, -157.15, 0.28", "56.1843, 155.111, -158.173, 1.66", "56.6543, 157.149, -159.506, 0.28", "56.6543, 157.149, -159.506, 0.55", "57.0761, 158.934, -160.617, 0.28", "57.1668, 159.29, -160.845, 0.55", "57.7435, 161.587, -162.356, 0.28", "57.9113, 162.309, -162.863, 0.83", "58.2581, 164.559, -164.519, 0.28", "58.3589, 165.312, -165.034, 0.55" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "140.916, 123.997, -70.469, 0.55", "141.247, 126.012, -71.8701, 0.55", "141.459, 127.393, -72.8014, 0.28", "141.707, 128.863, -73.7005, 1.11", "142.239, 132.032, -75.5157, 0.28", "142.887, 134.881, -77.1492, 0.83", "143.319, 136.593, -78.0861, 0.28", "143.511, 137.146, -78.4207, 0.55", "144.15, 138.655, -79.3636, 0.28", "144.423, 139.145, -79.7332, 0.55", "146.641, 142.573, -82.5028, 0.28", "148.048, 144.19, -84.1584, 0.83", "150.675, 146.941, -87.1402, 0.28", "151.801, 148.027, -88.4393, 0.55", "154.761, 150.736, -91.9762, 0.28", "155.711, 151.565, -93.1479, 0.55", "159.67, 155.032, -98.3395, 0.28", "161.035, 156.279, -100.275, 1.11", "163.328, 158.651, -103.941, 0.28", "163.928, 159.363, -105.051, 0.55", "165.214, 161.381, -108.064, 0.28", "165.736, 162.465, -109.722, 0.28", "166.041, 163.506, -111.269, 1.11", "166.52, 165.397, -114.292, 0.28", "166.597, 165.986, -115.158, 0.55", "166.808, 168.365, -118.611, 0.28", "166.819, 168.814, -119.24, 0.55" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "140.916, 123.997, -70.469, 0.28", "140.116, 125.287, -70.5289, 0.28", "139.905, 125.738, -70.607, 0.55", "139.187, 127.486, -70.956, 0.28", "138.75, 128.581, -71.2782, 0.83", "138.043, 130.308, -71.8313, 0.28", "137.651, 131.217, -72.1401, 0.83", "136.268, 134.322, -73.2836, 0.28", "135.785, 135.385, -73.7276, 0.55", "134.715, 137.749, -74.8103, 0.28", "134.101, 139.115, -75.4654, 0.83", "132.978, 141.611, -76.5909, 0.28", "132.758, 142.065, -76.7957, 0.55", "131.908, 143.665, -77.4934, 0.28", "131.369, 144.698, -77.9294, 0.55", "130.411, 146.711, -78.614, 0.28", "129.887, 147.988, -79.091, 0.83" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "74.0126, 87.6459, 38.0091, 0.83", "77.189, 94.6871, 42.8535, 0.83", "80.2675, 101.839, 47.6056, 0.83", "82.6577, 109.378, 52.1833, 0.83", "85.2857, 117.07, 56.3661, 0.83", "88.8793, 124.498, 60.2701, 0.83", "92.5453, 131.276, 65.1239, 0.83", "95.4615, 137.643, 70.9302, 0.83" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "74.0126, 87.6459, 38.0091, 0.55", "78.1481, 95.2574, 44.321, 0.83", "83.4688, 102.465, 50.1597, 0.83", "87.4307, 110.37, 56.2313, 0.83", "92.4342, 118.56, 60.9986, 0.83", "97.2651, 127.612, 64.1281, 0.83", "101.617, 136.549, 68.1887, 0.83", "104.666, 146.395, 71.2976, 0.83", "107.829, 155.487, 76.1041, 0.83", "111.128, 164.053, 81.6957, 0.83", "114.063, 172.175, 88.0877, 0.83", "116.205, 180.949, 93.9464, 0.83" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "121.854, 38.104, 25.4148, 0.83", "133.126, 35.4493, 24.8206, 0.83", "143.744, 30.8155, 25.735, 0.83", "153.979, 25.472, 24.1507, 0.83", "164.468, 20.4822, 23.3976, 0.83", "174.832, 15.5035, 21.5377, 0.83", "184.825, 9.55, 20.6854, 0.83", "193.96, 2.37367, 19.2702, 0.83", "204.259, -3.05537, 18.9513, 0.83", "214.46, -8.63288, 19.5746, 0.83" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "121.854, 38.104, 25.4148, 0.55", "131.012, 36.0363, 29.898, 0.83", "139.876, 33.0413, 34.4733, 0.83", "148.735, 29.0984, 38.315, 0.83", "157.285, 24.4528, 42.1104, 0.83", "166.137, 19.8107, 45.1497, 0.83", "174.18, 14.3628, 49.0292, 0.83", "181.496, 8.58141, 53.7778, 0.83", "188.198, 1.28804, 57.2972, 0.83", "195.138, -5.85087, 60.6562, 0.83", "201.569, -13.2582, 64.4379, 0.83", "207.515, -21.5085, 67.2323, 0.83", "214.187, -28.9155, 70.579, 0.83", "219.957, -36.5835, 74.8824, 0.83", "225.719, -44.3872, 78.9603, 0.83", "232.731, -50.8355, 83.3343, 0.83" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "94.8646, -311.232, -52.5287, 0.55", "94.8283, -315.197, -56.8155, 0.55", "94.7763, -317.702, -59.1575, 0.55", "94.6577, -320.748, -61.551, 0.55", "94.5837, -323.856, -63.5736, 0.55", "94.499, -325.186, -64.3173, 0.55", "94.3623, -326.72, -65.0992, 0.55", "94.0828, -328.876, -65.8362, 0.83", "93.6674, -332.036, -66.7977, 0.83", "93.1451, -335.271, -67.786, 0.83", "92.6757, -338.25, -68.7858, 0.55", "92.532, -339.23, -69.1386, 0.55", "92.1696, -341.645, -70.0733, 0.55", "91.4693, -346.485, -72.0659, 0.55", "91.0024, -349.957, -73.5854, 0.55", "90.6435, -352.898, -74.9142, 0.55", "90.5585, -354.165, -75.4677, 0.28", "90.522, -354.754, -75.7074, 0.55", "90.4422, -355.858, -76.1039, 0.28", "90.4239, -356.245, -76.2243, 0.55", "90.3773, -357.237, -76.565, 0.28", "90.1429, -359.084, -77.3348, 0.55", "89.8643, -360.668, -78.0571, 0.28", "89.493, -362.328, -78.892, 1.94", "88.9307, -364.623, -80.1146, 0.28", "88.6754, -365.64, -80.6963, 0.55", "88.1714, -367.587, -81.8782, 0.28", "88.0509, -368.058, -82.1768, 0.55", "87.6087, -369.915, -83.328, 0.28", "87.4697, -370.626, -83.7569, 0.55", "87.2774, -372.161, -84.6258, 0.28", "87.2432, -373.189, -85.1911, 0.55", "87.3376, -374.421, -85.8115, 0.28", "87.4894, -375.353, -86.2463, 0.28", "87.7061, -376.174, -86.5256, 0.55", "88.2807, -377.798, -86.8695, 0.28", "88.5286, -378.386, -86.9327, 0.83", "89.747, -381.012, -87.0086, 0.55", "90.1611, -381.944, -86.8797, 0.83", "91.0885, -384.208, -86.4181, 0.28", "92.0948, -386.777, -85.771, 0.55", "92.5998, -388.073, -85.3818, 0.55", "93.4487, -390.27, -84.6487, 0.55", "95.1934, -394.469, -83.0128, 0.55", "96.0051, -396.222, -82.2755, 0.28", "96.3893, -396.935, -81.8791, 0.28", "96.9404, -397.74, -81.2454, 0.55", "98.1459, -398.856, -79.9681, 0.28", "99.3335, -399.406, -78.9182, 0.55", "100.913, -399.836, -77.8414, 0.55", "104.183, -400.465, -75.5235, 0.55", "105.592, -400.667, -74.5028, 1.11", "107.378, -400.78, -73.2047, 0.55", "109.424, -400.737, -71.7845, 0.55", "111.674, -400.692, -70.2979, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "94.8646, -311.232, -52.5287, 0.55", "93.0759, -310.704, -54.1715, 0.55", "91.5522, -310.253, -55.5709, 0.55", "89.1154, -309.534, -57.809, 0.55", "87.812, -309.149, -59.006, 0.28", "86.3626, -308.72, -60.3372, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "102.855, -318.076, -45.5692, 0.83", "104.737, -324.363, -47.0684, 0.83", "105.92, -328.247, -48.1142, 0.83", "107.053, -332.35, -49.3214, 0.83", "108.857, -338.621, -51.2414, 0.83", "110.417, -343.77, -52.813, 0.83", "111.963, -348.626, -54.3353, 0.83", "112.812, -351.01, -55.064, 0.83", "114.161, -354.796, -56.3068, 0.55", "115.73, -359.085, -57.7081, 0.55", "116.479, -360.733, -58.223, 0.55", "118.131, -363.944, -59.1254, 0.55", "119.927, -367.548, -59.8478, 0.55", "121.475, -370.498, -60.4128, 0.83", "123.28, -373.754, -60.979, 0.83", "125.698, -378.328, -61.7338, 0.55", "127.768, -382.3, -62.361, 0.55", "128.99, -384.614, -62.6395, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "102.855, -318.076, -45.5692, 0.55", "105.754, -318.549, -44.6866, 0.55", "107.582, -318.848, -44.1303, 0.28", "109.947, -319.233, -43.4101, 0.55", "112.048, -319.576, -42.7705, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "18.91, 130.638, -110.655, 0.55", "18.5112, 132.597, -111.107, 0.55", "18.309, 133.629, -111.354, 0.55", "18.0243, 134.838, -111.677, 0.83", "17.5134, 136.849, -112.246, 0.28", "17.2661, 137.856, -112.581, 0.55", "16.8397, 139.629, -113.231, 0.28", "16.7194, 140.165, -113.467, 0.55", "15.5131, 144.276, -115.375, 0.28", "15.3269, 144.797, -115.629, 0.55", "14.379, 147.138, -116.806, 0.28", "13.8869, 148.173, -117.327, 0.83", "12.7697, 150.273, -118.426, 0.28", "11.3606, 152.798, -119.749, 1.94", "9.90335, 155.161, -120.996, 0.28", "9.44051, 155.865, -121.347, 0.83", "7.61193, 158.331, -122.43, 0.28", "7.03335, 159.076, -122.734, 0.55" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "18.91, 130.638, -110.655, 0.55", "19.9917, 131.81, -109.923, 0.55", "21.2199, 133.141, -109.091, 0.55" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "128.99, -384.614, -62.6395, 0.55", "124.196, -381.487, -60.4413, 0.55", "118.678, -377.887, -57.9114, 0.28", "117.161, -376.898, -57.2161, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "128.99, -384.614, -62.6395, 0.55", "130.19, -386.83, -63.1185, 0.55", "130.619, -387.611, -63.2882, 0.55", "131.353, -388.963, -63.5185, 0.28", "131.913, -390.0, -63.6686, 0.55", "133.017, -392.247, -63.5377, 0.28", "134.143, -394.627, -63.1126, 0.28", "134.537, -395.755, -62.6299, 0.55", "134.948, -397.418, -61.651, 0.28", "135.097, -398.147, -61.1405, 0.55", "135.845, -402.857, -57.1862, 0.28", "135.888, -403.425, -56.6061, 0.55", "135.853, -406.508, -52.9016, 0.28", "135.783, -407.267, -51.9043, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_96", "dend_57", "dend_52", "dend_45", "dend_24", "dend_23", "dend_0", "dend_104", "dend_97", "dend_87", "dend_58", "dend_56", "dend_53", "dend_49", "dend_46", "dend_38", "dend_25", "dend_6", "dend_1", "dend_103", "dend_98", "dend_93", "dend_88", "dend_82", "dend_59", "dend_55", "dend_54", "dend_51", "dend_50", "dend_48", "dend_47", "dend_42", "dend_39", "dend_31", "dend_26", "dend_10", "dend_7", "dend_3", "dend_2", "dend_100", "dend_99", "dend_95", "dend_94", "dend_90", "dend_89", "dend_86", "dend_83", "dend_69", "dend_60", "dend_44", "dend_43", "dend_41", "dend_40", "dend_33", "dend_32", "dend_30", "dend_27", "dend_12", "dend_11", "dend_9", "dend_8", "dend_5", "dend_4", "dend_102", "dend_101", "dend_92", "dend_91", "dend_85", "dend_84", "dend_75", "dend_70", "dend_68", "dend_61", "dend_35", "dend_34", "dend_29", "dend_28", "dend_14", "dend_13", "dend_81", "dend_76", "dend_72", "dend_71", "dend_65", "dend_62", "dend_37", "dend_36", "dend_20", "dend_15", "dend_78", "dend_77", "dend_74", "dend_73", "dend_67", "dend_66", "dend_64", "dend_63", "dend_22", "dend_21", "dend_17", "dend_16", "dend_80", "dend_79", "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_96", "dend_57", "dend_52", "dend_45", "dend_24", "dend_23", "dend_0", "dend_104", "dend_97", "dend_87", "dend_58", "dend_56", "dend_53", "dend_49", "dend_46", "dend_38", "dend_25", "dend_6", "dend_1", "dend_103", "dend_98", "dend_93", "dend_88", "dend_82", "dend_59", "dend_55", "dend_54", "dend_51", "dend_50", "dend_48", "dend_47", "dend_42", "dend_39", "dend_31", "dend_26", "dend_10", "dend_7", "dend_3", "dend_2", "dend_100", "dend_99", "dend_95", "dend_94", "dend_90", "dend_89", "dend_86", "dend_83", "dend_69", "dend_60", "dend_44", "dend_43", "dend_41", "dend_40", "dend_33", "dend_32", "dend_30", "dend_27", "dend_12", "dend_11", "dend_9", "dend_8", "dend_5", "dend_4", "dend_102", "dend_101", "dend_92", "dend_91", "dend_85", "dend_84", "dend_75", "dend_70", "dend_68", "dend_61", "dend_35", "dend_34", "dend_29", "dend_28", "dend_14", "dend_13", "dend_81", "dend_76", "dend_72", "dend_71", "dend_65", "dend_62", "dend_37", "dend_36", "dend_20", "dend_15", "dend_78", "dend_77", "dend_74", "dend_73", "dend_67", "dend_66", "dend_64", "dend_63", "dend_22", "dend_21", "dend_17", "dend_16", "dend_80", "dend_79", "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_96", "dend_57", "dend_52", "dend_45", "dend_24", "dend_23", "dend_0", "axon_0", "dend_104", "dend_97", "dend_87", "dend_58", "dend_56", "dend_53", "dend_49", "dend_46", "dend_38", "dend_25", "dend_6", "dend_1", "axon_1", "dend_103", "dend_98", "dend_93", "dend_88", "dend_82", "dend_59", "dend_55", "dend_54", "dend_51", "dend_50", "dend_48", "dend_47", "dend_42", "dend_39", "dend_31", "dend_26", "dend_10", "dend_7", "dend_3", "dend_2", "dend_100", "dend_99", "dend_95", "dend_94", "dend_90", "dend_89", "dend_86", "dend_83", "dend_69", "dend_60", "dend_44", "dend_43", "dend_41", "dend_40", "dend_33", "dend_32", "dend_30", "dend_27", "dend_12", "dend_11", "dend_9", "dend_8", "dend_5", "dend_4", "dend_102", "dend_101", "dend_92", "dend_91", "dend_85", "dend_84", "dend_75", "dend_70", "dend_68", "dend_61", "dend_35", "dend_34", "dend_29", "dend_28", "dend_14", "dend_13", "dend_81", "dend_76", "dend_72", "dend_71", "dend_65", "dend_62", "dend_37", "dend_36", "dend_20", "dend_15", "dend_78", "dend_77", "dend_74", "dend_73", "dend_67", "dend_66", "dend_64", "dend_63", "dend_22", "dend_21", "dend_17", "dend_16", "dend_80", "dend_79", "dend_19", "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_57", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_58", "dend_58", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "axon_1", "axon_1", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_88", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_69", "dend_69", "dend_69", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_101", "dend_101", "dend_101", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_68", "dend_68", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_LBC_66ec8fed8f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_96, id: dend_96, parent: soma_0
create dend_96
public dend_96
// Section: dend_57, id: dend_57, parent: soma_0
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_104, id: dend_104, parent: dend_96
create dend_104
public dend_104
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_87, id: dend_87, parent: dend_57
create dend_87
public dend_87
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_38, id: dend_38, parent: dend_24
create dend_38
public dend_38
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_103, id: dend_103, parent: dend_97
create dend_103
public dend_103
// Section: dend_98, id: dend_98, parent: dend_97
create dend_98
public dend_98
// Section: dend_93, id: dend_93, parent: dend_87
create dend_93
public dend_93
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_82, id: dend_82, parent: dend_58
create dend_82
public dend_82
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_100, id: dend_100, parent: dend_98
create dend_100
public dend_100
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_95, id: dend_95, parent: dend_93
create dend_95
public dend_95
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_82
create dend_86
public dend_86
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_69, id: dend_69, parent: dend_59
create dend_69
public dend_69
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_102, id: dend_102, parent: dend_100
create dend_102
public dend_102
// Section: dend_101, id: dend_101, parent: dend_100
create dend_101
public dend_101
// Section: dend_92, id: dend_92, parent: dend_90
create dend_92
public dend_92
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_75, id: dend_75, parent: dend_69
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_68, id: dend_68, parent: dend_60
create dend_68
public dend_68
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_81, id: dend_81, parent: dend_75
create dend_81
public dend_81
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_96, dend_57, dend_52, dend_45, dend_24, dend_23, dend_0, dend_104, dend_97, dend_87, dend_58, dend_56, dend_53, dend_49, dend_46, dend_38, dend_25, dend_6, dend_1, dend_103, dend_98, dend_93, dend_88, dend_82, dend_59, dend_55, dend_54, dend_51, dend_50, dend_48, dend_47, dend_42, dend_39, dend_31, dend_26, dend_10, dend_7, dend_3, dend_2, dend_100, dend_99, dend_95, dend_94, dend_90, dend_89, dend_86, dend_83, dend_69, dend_60, dend_44, dend_43, dend_41, dend_40, dend_33, dend_32, dend_30, dend_27, dend_12, dend_11, dend_9, dend_8, dend_5, dend_4, dend_102, dend_101, dend_92, dend_91, dend_85, dend_84, dend_75, dend_70, dend_68, dend_61, dend_35, dend_34, dend_29, dend_28, dend_14, dend_13, dend_81, dend_76, dend_72, dend_71, dend_65, dend_62, dend_37, dend_36, dend_20, dend_15, dend_78, dend_77, dend_74, dend_73, dend_67, dend_66, dend_64, dend_63, dend_22, dend_21, dend_17, dend_16, dend_80, dend_79, dend_19, dend_18]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_96, dend_57, dend_52, dend_45, dend_24, dend_23, dend_0, dend_104, dend_97, dend_87, dend_58, dend_56, dend_53, dend_49, dend_46, dend_38, dend_25, dend_6, dend_1, dend_103, dend_98, dend_93, dend_88, dend_82, dend_59, dend_55, dend_54, dend_51, dend_50, dend_48, dend_47, dend_42, dend_39, dend_31, dend_26, dend_10, dend_7, dend_3, dend_2, dend_100, dend_99, dend_95, dend_94, dend_90, dend_89, dend_86, dend_83, dend_69, dend_60, dend_44, dend_43, dend_41, dend_40, dend_33, dend_32, dend_30, dend_27, dend_12, dend_11, dend_9, dend_8, dend_5, dend_4, dend_102, dend_101, dend_92, dend_91, dend_85, dend_84, dend_75, dend_70, dend_68, dend_61, dend_35, dend_34, dend_29, dend_28, dend_14, dend_13, dend_81, dend_76, dend_72, dend_71, dend_65, dend_62, dend_37, dend_36, dend_20, dend_15, dend_78, dend_77, dend_74, dend_73, dend_67, dend_66, dend_64, dend_63, dend_22, dend_21, dend_17, dend_16, dend_80, dend_79, dend_19, dend_18]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_96, dend_57, dend_52, dend_45, dend_24, dend_23, dend_0, axon_0, dend_104, dend_97, dend_87, dend_58, dend_56, dend_53, dend_49, dend_46, dend_38, dend_25, dend_6, dend_1, axon_1, dend_103, dend_98, dend_93, dend_88, dend_82, dend_59, dend_55, dend_54, dend_51, dend_50, dend_48, dend_47, dend_42, dend_39, dend_31, dend_26, dend_10, dend_7, dend_3, dend_2, dend_100, dend_99, dend_95, dend_94, dend_90, dend_89, dend_86, dend_83, dend_69, dend_60, dend_44, dend_43, dend_41, dend_40, dend_33, dend_32, dend_30, dend_27, dend_12, dend_11, dend_9, dend_8, dend_5, dend_4, dend_102, dend_101, dend_92, dend_91, dend_85, dend_84, dend_75, dend_70, dend_68, dend_61, dend_35, dend_34, dend_29, dend_28, dend_14, dend_13, dend_81, dend_76, dend_72, dend_71, dend_65, dend_62, dend_37, dend_36, dend_20, dend_15, dend_78, dend_77, dend_74, dend_73, dend_67, dend_66, dend_64, dend_63, dend_22, dend_21, dend_17, dend_16, dend_80, dend_79, dend_19, dend_18]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_108
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_57, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, axon_1, axon_1, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_88, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_69, dend_69, dend_69, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_96(0), soma_0(0.49999933530368673)
    connect dend_57(0), soma_0(0.49999933530368673)
    connect dend_52(0), soma_0(0.49999933530368673)
    connect dend_45(0), soma_0(0.49999933530368673)
    connect dend_24(0), soma_0(0.49999933530368673)
    connect dend_23(0), soma_0(0.49999933530368673)
    connect dend_0(0), soma_0(0.49999933530368673)
    connect axon_0(0), soma_0(1.0)
    connect dend_104(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_87(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_38(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_103(0), dend_97(1.0)
    connect dend_98(0), dend_97(1.0)
    connect dend_93(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_82(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_100(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_95(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_86(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_69(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_102(0), dend_100(1.0)
    connect dend_101(0), dend_100(1.0)
    connect dend_92(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_75(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_68(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_81(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.73047, 10.9289, -0.109913, 2.97676 ) }
    soma_0 { pt3dadd( -4.27116, 9.94502, -0.0979061, 5.12241 ) }
    soma_0 { pt3dadd( -3.81185, 8.96111, -0.0858989, 5.98423 ) }
    soma_0 { pt3dadd( -3.35253, 7.9772, -0.0738916, 6.89486 ) }
    soma_0 { pt3dadd( -2.89322, 6.99329, -0.0618844, 7.89654 ) }
    soma_0 { pt3dadd( -2.43391, 6.00938, -0.0498771, 8.40692 ) }
    soma_0 { pt3dadd( -1.9746, 5.02548, -0.0378699, 9.08975 ) }
    soma_0 { pt3dadd( -1.51528, 4.04157, -0.0258627, 10.1163 ) }
    soma_0 { pt3dadd( -1.05597, 3.05766, -0.0138554, 11.1552 ) }
    soma_0 { pt3dadd( -0.59666, 2.07375, -0.00184817, 12.1857 ) }
    soma_0 { pt3dadd( -0.137347, 1.08984, 0.0101591, 12.9947 ) }
    soma_0 { pt3dadd( 0.321965, 0.10593, 0.0221663, 13.6358 ) }
    soma_0 { pt3dadd( 0.781277, -0.87798, 0.0341736, 13.9465 ) }
    soma_0 { pt3dadd( 1.24059, -1.86189, 0.0461808, 13.7148 ) }
    soma_0 { pt3dadd( 1.6999, -2.8458, 0.058188, 13.1835 ) }
    soma_0 { pt3dadd( 2.15921, -3.82971, 0.0701953, 12.6298 ) }
    soma_0 { pt3dadd( 2.61853, -4.81362, 0.0822025, 11.4903 ) }
    soma_0 { pt3dadd( 3.07784, -5.79753, 0.0942098, 9.98962 ) }
    soma_0 { pt3dadd( 3.53715, -6.78143, 0.106217, 8.61442 ) }
    soma_0 { pt3dadd( 3.99646, -7.76534, 0.118224, 6.00494 ) }
    soma_0 { pt3dadd( 4.45578, -8.74925, 0.130231, 3.45172 ) }
    // Section: dend_96, id: dend_96, parent: soma_0 (entry count 21/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -4.51463, 9.13276, 8.93646, 1.38 ) }
    dend_96 { pt3dadd( -4.98611, 10.4401, 9.77132, 1.38 ) }
    dend_96 { pt3dadd( -5.82566, 12.4859, 11.1571, 1.38 ) }
    dend_96 { pt3dadd( -7.04915, 16.0028, 13.3083, 1.38 ) }
    dend_96 { pt3dadd( -7.97078, 18.7727, 14.8692, 1.38 ) }
    dend_96 { pt3dadd( -9.27861, 22.6624, 16.9166, 1.11 ) }
    dend_96 { pt3dadd( -10.3336, 25.6025, 18.393, 1.38 ) }
    dend_96 { pt3dadd( -11.0213, 27.4979, 19.3012, 1.11 ) }
    dend_96 { pt3dadd( -12.5174, 31.8365, 21.1524, 1.11 ) }
    dend_96 { pt3dadd( -13.3462, 34.353, 22.0079, 0.83 ) }
    dend_96 { pt3dadd( -14.131, 37.2591, 22.6576, 0.83 ) }
    dend_96 { pt3dadd( -14.5696, 39.392, 22.8854, 0.83 ) }
    dend_96 { pt3dadd( -14.847, 41.3483, 22.9304, 0.83 ) }
    dend_96 { pt3dadd( -15.2348, 44.8073, 22.8286, 0.83 ) }
    dend_96 { pt3dadd( -15.4737, 47.0583, 22.7057, 1.11 ) }
    dend_96 { pt3dadd( -15.6666, 50.4854, 22.412, 0.83 ) }
    dend_96 { pt3dadd( -15.7082, 53.9923, 22.0051, 0.83 ) }
    dend_96 { pt3dadd( -15.6379, 58.2943, 21.4298, 0.83 ) }
    dend_96 { pt3dadd( -15.6395, 61.7334, 20.9068, 0.83 ) }
    // Section: dend_57, id: dend_57, parent: soma_0 (entry count 40/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -1.91463, 10.5678, -6.97355, 4.43 ) }
    dend_57 { pt3dadd( -1.67285, 13.3558, -6.97355, 4.43 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 42/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 2.97537, 4.80726, -7.96354, 1.94 ) }
    dend_52 { pt3dadd( 3.11431, 6.18075, -8.8174, 1.66 ) }
    dend_52 { pt3dadd( 3.44222, 9.42235, -10.8326, 1.66 ) }
    dend_52 { pt3dadd( 3.86936, 13.6449, -13.4577, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 46/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 7.41537, 0.184505, 9.55646, 1.66 ) }
    dend_45 { pt3dadd( 10.1232, 2.08509, 9.55646, 1.66 ) }
    dend_45 { pt3dadd( 18.5462, 7.23522, 9.31543, 1.66 ) }
    dend_45 { pt3dadd( 26.6606, 12.8194, 10.1675, 1.66 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 50/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -6.57463, 9.39926, -2.93354, 1.94 ) }
    dend_24 { pt3dadd( -7.14427, 9.96612, -2.93354, 1.94 ) }
    dend_24 { pt3dadd( -9.4478, 12.2584, -2.93354, 1.94 ) }
    dend_24 { pt3dadd( -12.7435, 15.5381, -2.93354, 2.77 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 54/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -5.27463, -4.13074, 9.55646, 1.11 ) }
    dend_23 { pt3dadd( -7.58632, -4.0596, 8.58872, 1.11 ) }
    dend_23 { pt3dadd( -9.78059, -3.91266, 7.61861, 1.11 ) }
    dend_23 { pt3dadd( -11.5076, -3.82081, 6.87881, 1.38 ) }
    dend_23 { pt3dadd( -14.7962, -3.72559, 5.6573, 1.11 ) }
    dend_23 { pt3dadd( -19.9892, -3.75631, 3.98765, 0.83 ) }
    dend_23 { pt3dadd( -20.9603, -3.77068, 3.71683, 1.66 ) }
    dend_23 { pt3dadd( -22.7851, -3.81063, 3.27601, 1.11 ) }
    dend_23 { pt3dadd( -24.998, -4.02676, 2.8704, 1.38 ) }
    dend_23 { pt3dadd( -28.956, -4.66946, 2.45039, 1.38 ) }
    dend_23 { pt3dadd( -30.7713, -5.07719, 2.4285, 1.38 ) }
    dend_23 { pt3dadd( -33.5822, -5.68261, 2.66887, 1.38 ) }
    dend_23 { pt3dadd( -35.3779, -6.05088, 2.92851, 1.11 ) }
    dend_23 { pt3dadd( -37.9779, -6.44776, 3.51131, 1.38 ) }
    dend_23 { pt3dadd( -39.75, -6.63041, 4.00368, 0.55 ) }
    dend_23 { pt3dadd( -41.3987, -6.67339, 4.55185, 0.83 ) }
    dend_23 { pt3dadd( -44.6227, -6.5834, 5.71814, 0.83 ) }
    dend_23 { pt3dadd( -48.4388, -6.40123, 7.13892, 1.11 ) }
    dend_23 { pt3dadd( -53.0722, -5.90485, 8.80587, 0.83 ) }
    dend_23 { pt3dadd( -55.2498, -5.60772, 9.54037, 0.83 ) }
    dend_23 { pt3dadd( -58.339, -5.13541, 10.4884, 0.83 ) }
    dend_23 { pt3dadd( -61.5697, -4.67843, 11.3213, 0.83 ) }
    dend_23 { pt3dadd( -64.3009, -4.30088, 11.8803, 0.83 ) }
    dend_23 { pt3dadd( -67.0227, -3.86333, 12.2229, 0.83 ) }
    dend_23 { pt3dadd( -70.9996, -3.26202, 12.5615, 0.83 ) }
    dend_23 { pt3dadd( -73.5571, -2.83118, 12.7208, 0.83 ) }
    dend_23 { pt3dadd( -78.04, -2.26361, 12.8641, 0.83 ) }
    dend_23 { pt3dadd( -79.9103, -2.0828, 12.8974, 0.83 ) }
    dend_23 { pt3dadd( -82.3331, -1.97214, 12.9346, 0.83 ) }
    dend_23 { pt3dadd( -85.0432, -2.09199, 12.9622, 0.83 ) }
    dend_23 { pt3dadd( -87.9351, -2.27976, 12.9672, 0.83 ) }
    dend_23 { pt3dadd( -90.7415, -2.5415, 12.9659, 0.83 ) }
    dend_23 { pt3dadd( -93.5738, -2.7259, 12.9585, 0.83 ) }
    dend_23 { pt3dadd( -97.6497, -2.85245, 13.0281, 0.55 ) }
    dend_23 { pt3dadd( -99.6781, -2.8254, 13.0952, 0.55 ) }
    dend_23 { pt3dadd( -102.949, -2.60964, 13.2488, 0.83 ) }
    dend_23 { pt3dadd( -105.851, -2.23497, 13.4378, 0.83 ) }
    dend_23 { pt3dadd( -108.577, -1.7075, 13.7438, 0.83 ) }
    dend_23 { pt3dadd( -111.197, -1.16203, 14.127, 0.83 ) }
    dend_23 { pt3dadd( -112.872, -0.841493, 14.4022, 0.83 ) }
    dend_23 { pt3dadd( -114.971, -0.511801, 14.7402, 0.55 ) }
    dend_23 { pt3dadd( -117.139, -0.307303, 15.0519, 0.55 ) }
    dend_23 { pt3dadd( -120.733, -0.0781453, 15.4741, 0.55 ) }
    dend_23 { pt3dadd( -124.277, -0.0714673, 15.778, 0.55 ) }
    dend_23 { pt3dadd( -127.658, -0.210109, 15.9447, 0.55 ) }
    dend_23 { pt3dadd( -128.8, -0.270428, 15.9348, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( -130.186, -0.417805, 15.8282, 0.28 ) }
    dend_23 { pt3dadd( -131.382, -0.711183, 15.625, 0.55 ) }
    dend_23 { pt3dadd( -132.613, -1.21089, 15.1476, 0.28 ) }
    dend_23 { pt3dadd( -133.388, -1.72467, 14.7159, 0.83 ) }
    dend_23 { pt3dadd( -135.386, -3.56799, 13.3063, 0.55 ) }
    dend_23 { pt3dadd( -136.806, -5.13684, 12.0781, 0.55 ) }
    dend_23 { pt3dadd( -137.514, -5.953, 11.4265, 0.55 ) }
    dend_23 { pt3dadd( -139.017, -7.66373, 10.103, 0.55 ) }
    dend_23 { pt3dadd( -139.569, -8.21177, 9.65319, 0.55 ) }
    dend_23 { pt3dadd( -141.519, -9.89612, 8.21959, 0.83 ) }
    dend_23 { pt3dadd( -143.575, -11.5323, 6.90106, 0.83 ) }
    dend_23 { pt3dadd( -146.306, -13.4572, 5.29587, 0.55 ) }
    dend_23 { pt3dadd( -148.657, -15.1233, 4.0071, 0.55 ) }
    dend_23 { pt3dadd( -150.39, -16.3353, 3.15818, 1.38 ) }
    dend_23 { pt3dadd( -152.274, -17.5528, 2.27092, 0.83 ) }
    dend_23 { pt3dadd( -154.112, -18.6288, 1.44615, 0.83 ) }
    dend_23 { pt3dadd( -155.463, -19.4119, 0.795124, 0.83 ) }
    dend_23 { pt3dadd( -157.129, -20.5899, -0.360458, 0.83 ) }
    dend_23 { pt3dadd( -158.341, -21.5179, -1.34315, 0.83 ) }
    dend_23 { pt3dadd( -159.411, -22.4766, -2.3344, 1.38 ) }
    dend_23 { pt3dadd( -161.045, -24.0838, -4.12455, 0.55 ) }
    dend_23 { pt3dadd( -162.409, -25.4576, -5.90426, 1.11 ) }
    dend_23 { pt3dadd( -164.318, -27.5111, -8.82763, 0.83 ) }
    dend_23 { pt3dadd( -174.076, -27.7596, -11.5695, 0.83 ) }
    dend_23 { pt3dadd( -184.012, -26.2979, -13.0589, 0.83 ) }
    dend_23 { pt3dadd( -193.374, -23.0189, -15.3639, 0.83 ) }
    dend_23 { pt3dadd( -202.948, -19.9954, -17.0433, 0.83 ) }
    dend_23 { pt3dadd( -212.409, -18.3674, -20.3578, 0.83 ) }
    dend_23 { pt3dadd( -221.428, -16.6308, -24.6959, 0.83 ) }
    dend_23 { pt3dadd( -230.757, -15.9185, -28.6196, 0.83 ) }
    dend_23 { pt3dadd( -240.639, -15.8641, -30.8927, 0.83 ) }
    dend_23 { pt3dadd( -250.388, -17.8948, -32.7874, 0.83 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.46537, -8.76374, -2.28354, 3.6 ) }
    dend_0 { pt3dadd( 4.34623, -11.0567, -2.02607, 3.6 ) }
    dend_0 { pt3dadd( 4.19551, -14.1477, -1.71295, 3.05 ) }
    dend_0 { pt3dadd( 4.02985, -17.5451, -1.36878, 2.77 ) }
    dend_0 { pt3dadd( 3.74403, -23.4066, -0.774995, 2.77 ) }
    dend_0 { pt3dadd( 3.46529, -29.123, -0.195908, 2.49 ) }
    dend_0 { pt3dadd( 3.27434, -33.0391, 0.200799, 2.77 ) }
    dend_0 { pt3dadd( 3.08097, -35.8258, 0.481641, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.45578, -8.74925, 0.130231, 0.83 ) }
    axon_0 { pt3dadd( 10.8008, -22.3412, 0.130231, 0.83 ) }
    axon_0 { pt3dadd( 17.1459, -35.9331, 0.130231, 0.83 ) }
    // Section: dend_104, id: dend_104, parent: dend_96 (entry count 43/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -15.6395, 61.7334, 20.9068, 0.83 ) }
    dend_104 { pt3dadd( -15.5509, 64.833, 22.6808, 0.83 ) }
    dend_104 { pt3dadd( -15.5964, 66.7648, 23.8175, 1.11 ) }
    dend_104 { pt3dadd( -15.7014, 69.31, 25.2021, 0.83 ) }
    dend_104 { pt3dadd( -15.8573, 71.5857, 26.3982, 1.11 ) }
    dend_104 { pt3dadd( -16.161, 75.7937, 28.5836, 1.11 ) }
    dend_104 { pt3dadd( -16.5966, 81.2736, 31.3296, 0.83 ) }
    dend_104 { pt3dadd( -16.8484, 83.9254, 32.608, 1.11 ) }
    dend_104 { pt3dadd( -17.202, 87.5237, 34.2281, 1.11 ) }
    dend_104 { pt3dadd( -17.4387, 89.2468, 34.9354, 0.83 ) }
    dend_104 { pt3dadd( -17.7712, 91.3373, 35.6859, 0.83 ) }
    dend_104 { pt3dadd( -18.1117, 93.7549, 36.3815, 0.55 ) }
    dend_104 { pt3dadd( -18.263, 95.0253, 36.5965, 0.83 ) }
    dend_104 { pt3dadd( -18.6067, 97.5815, 36.9848, 0.55 ) }
    dend_104 { pt3dadd( -18.9721, 99.7851, 37.2948, 0.55 ) }
    dend_104 { pt3dadd( -19.1172, 100.844, 37.4376, 0.55 ) }
    dend_104 { pt3dadd( -19.4348, 103.614, 37.8027, 1.11 ) }
    dend_104 { pt3dadd( -19.7306, 107.501, 38.3781, 0.83 ) }
    dend_104 { pt3dadd( -19.8715, 109.308, 38.6782, 0.83 ) }
    dend_104 { pt3dadd( -19.9685, 111.004, 39.0053, 0.83 ) }
    dend_104 { pt3dadd( -20.0894, 113.564, 39.551, 0.83 ) }
    dend_104 { pt3dadd( -20.2222, 115.472, 39.9496, 0.55 ) }
    dend_104 { pt3dadd( -20.2984, 116.523, 40.1781, 1.11 ) }
    dend_104 { pt3dadd( -20.4686, 119.17, 40.8239, 0.55 ) }
    dend_104 { pt3dadd( -20.5418, 120.581, 41.1683, 1.11 ) }
    dend_104 { pt3dadd( -20.8043, 123.078, 41.7081, 0.83 ) }
    dend_104 { pt3dadd( -21.0562, 124.316, 41.9603, 0.83 ) }
    dend_104 { pt3dadd( -21.7603, 127.333, 42.6422, 1.38 ) }
    dend_104 { pt3dadd( -21.2924, 138.404, 49.2246, 1.38 ) }
    dend_104 { pt3dadd( -23.2321, 149.419, 55.6036, 1.38 ) }
    dend_104 { pt3dadd( -26.5671, 160.316, 61.5703, 1.38 ) }
    dend_104 { pt3dadd( -29.6374, 171.28, 67.5653, 1.38 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 75/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -15.6395, 61.7334, 20.9068, 0.83 ) }
    dend_97 { pt3dadd( -17.6666, 64.9245, 20.9828, 0.83 ) }
    dend_97 { pt3dadd( -20.1993, 68.978, 21.0615, 0.83 ) }
    dend_97 { pt3dadd( -21.6811, 71.3637, 21.0981, 0.83 ) }
    dend_97 { pt3dadd( -23.8634, 74.953, 21.1349, 0.83 ) }
    dend_97 { pt3dadd( -25.8222, 78.1835, 21.169, 0.83 ) }
    dend_97 { pt3dadd( -26.9534, 80.0281, 21.1859, 0.55 ) }
    dend_97 { pt3dadd( -27.9723, 81.7993, 21.1951, 0.55 ) }
    dend_97 { pt3dadd( -28.8605, 83.2572, 21.1832, 0.55 ) }
    dend_97 { pt3dadd( -29.8754, 84.7567, 21.1318, 0.55 ) }
    dend_97 { pt3dadd( -30.979, 86.2445, 21.0705, 0.55 ) }
    dend_97 { pt3dadd( -32.2982, 87.9835, 20.9927, 1.66 ) }
    dend_97 { pt3dadd( -33.7541, 89.7633, 20.8717, 0.55 ) }
    dend_97 { pt3dadd( -35.2113, 91.4752, 20.7241, 0.55 ) }
    dend_97 { pt3dadd( -36.9523, 93.5416, 20.5493, 0.55 ) }
    dend_97 { pt3dadd( -38.3836, 95.3231, 20.4076, 0.55 ) }
    dend_97 { pt3dadd( -39.6854, 96.9694, 20.2653, 0.55 ) }
    dend_97 { pt3dadd( -40.7627, 98.3596, 20.1483, 0.55 ) }
    dend_97 { pt3dadd( -42.6054, 100.785, 19.9602, 0.83 ) }
    dend_97 { pt3dadd( -43.8268, 102.646, 19.8314, 0.55 ) }
    dend_97 { pt3dadd( -44.8568, 104.407, 19.7238, 0.83 ) }
    // Section: dend_87, id: dend_87, parent: dend_57 (entry count 96/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -1.67285, 13.3558, -6.97355, 2.49 ) }
    dend_87 { pt3dadd( -2.97453, 16.771, -7.92836, 2.49 ) }
    dend_87 { pt3dadd( -4.46556, 20.8541, -9.67285, 1.38 ) }
    dend_87 { pt3dadd( -5.74557, 25.1685, -12.0469, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_87 { pt3dadd( -6.72657, 29.5523, -14.9118, 1.38 ) }
    dend_87 { pt3dadd( -7.29842, 33.7842, -17.8477, 1.38 ) }
    dend_87 { pt3dadd( -7.41966, 36.0209, -19.4121, 1.94 ) }
    dend_87 { pt3dadd( -7.27413, 41.7281, -23.8305, 1.38 ) }
    dend_87 { pt3dadd( -6.86934, 47.1875, -28.454, 1.38 ) }
    dend_87 { pt3dadd( -6.44308, 50.6684, -31.5331, 1.38 ) }
    dend_87 { pt3dadd( -6.02893, 54.0057, -34.49, 1.38 ) }
    dend_87 { pt3dadd( -5.63431, 56.8094, -36.9629, 1.38 ) }
    dend_87 { pt3dadd( -5.04036, 61.4, -40.8164, 1.38 ) }
    dend_87 { pt3dadd( -4.50876, 66.8452, -44.9031, 1.38 ) }
    dend_87 { pt3dadd( -4.51691, 71.7757, -48.4825, 1.38 ) }
    dend_87 { pt3dadd( -5.0228, 76.2856, -51.6807, 1.66 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 12/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -1.67285, 13.3558, -6.97355, 2.49 ) }
    dend_58 { pt3dadd( 0.827245, 16.2177, -8.54744, 2.49 ) }
    dend_58 { pt3dadd( 4.18143, 20.0573, -10.659, 2.49 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 15/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 3.86936, 13.6449, -13.4577, 1.11 ) }
    dend_56 { pt3dadd( 3.79722, 13.4771, -15.7572, 1.11 ) }
    dend_56 { pt3dadd( 3.7894, 13.398, -16.7403, 1.11 ) }
    dend_56 { pt3dadd( 3.74206, 12.6018, -23.8584, 0.83 ) }
    dend_56 { pt3dadd( 3.76156, 12.2295, -26.5932, 0.83 ) }
    dend_56 { pt3dadd( 3.8123, 11.3105, -32.4956, 0.83 ) }
    dend_56 { pt3dadd( 3.83838, 10.5671, -36.6194, 1.11 ) }
    dend_56 { pt3dadd( 3.78876, 10.1856, -38.5672, 0.55 ) }
    dend_56 { pt3dadd( 3.70568, 9.92441, -40.3514, 0.55 ) }
    dend_56 { pt3dadd( 3.55846, 9.61582, -43.3349, 0.83 ) }
    dend_56 { pt3dadd( 3.34825, 9.46526, -46.8669, 0.28 ) }
    dend_56 { pt3dadd( 3.28492, 9.4567, -48.1311, 1.66 ) }
    dend_56 { pt3dadd( 2.754, 9.66511, -58.6854, 1.38 ) }
    dend_56 { pt3dadd( 2.41195, 9.96282, -66.3531, 0.55 ) }
    dend_56 { pt3dadd( 2.32286, 10.119, -69.3115, 1.11 ) }
    dend_56 { pt3dadd( 2.1713, 10.387, -75.1389, 0.55 ) }
    dend_56 { pt3dadd( 2.14643, 10.4414, -76.6439, 0.55 ) }
    dend_56 { pt3dadd( 2.03626, 10.5043, -81.7642, 1.66 ) }
    dend_56 { pt3dadd( 1.83553, 10.2771, -87.7562, 0.28 ) }
    dend_56 { pt3dadd( 1.74156, 10.1647, -88.9548, 1.11 ) }
    dend_56 { pt3dadd( 1.13507, 9.49236, -94.5535, 0.28 ) }
    dend_56 { pt3dadd( 0.977764, 9.30788, -95.8176, 0.55 ) }
    dend_56 { pt3dadd( 0.192232, 8.44512, -101.847, 0.28 ) }
    dend_56 { pt3dadd( 0.0199407, 8.23278, -103.27, 1.38 ) }
    dend_56 { pt3dadd( -0.955486, 6.58372, -113.732, 0.28 ) }
    dend_56 { pt3dadd( -0.993529, 6.43601, -114.606, 0.83 ) }
    dend_56 { pt3dadd( -0.949853, 6.19571, -115.849, 0.83 ) }
    dend_56 { pt3dadd( -0.719046, 5.72902, -117.888, 0.55 ) }
    dend_56 { pt3dadd( -0.17176, 4.98729, -120.241, 1.11 ) }
    dend_56 { pt3dadd( 1.28158, 3.18194, -124.858, 0.28 ) }
    dend_56 { pt3dadd( 1.8726, 2.45479, -126.383, 0.83 ) }
    dend_56 { pt3dadd( 2.23263, 1.94477, -127.475, 0.28 ) }
    dend_56 { pt3dadd( 2.31871, 1.79762, -127.783, 0.55 ) }
    dend_56 { pt3dadd( 3.37093, -0.497278, -132.381, 0.28 ) }
    dend_56 { pt3dadd( 3.43818, -0.651957, -132.691, 0.83 ) }
    dend_56 { pt3dadd( 4.15057, -2.29632, -136.118, 0.28 ) }
    dend_56 { pt3dadd( 4.29528, -2.7125, -137.126, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 52/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 3.86936, 13.6449, -13.4577, 1.66 ) }
    dend_53 { pt3dadd( 5.11205, 16.7204, -20.1, 1.66 ) }
    dend_53 { pt3dadd( 6.40804, 19.65, -25.5962, 1.66 ) }
    dend_53 { pt3dadd( 7.05089, 20.9705, -28.2381, 1.66 ) }
    dend_53 { pt3dadd( 7.55271, 21.9182, -30.3375, 1.11 ) }
    dend_53 { pt3dadd( 8.39027, 23.3751, -33.6496, 1.11 ) }
    dend_53 { pt3dadd( 9.46941, 25.0085, -37.2413, 1.11 ) }
    dend_53 { pt3dadd( 10.0926, 25.7284, -38.7495, 1.11 ) }
    dend_53 { pt3dadd( 11.5755, 27.3288, -41.7743, 1.11 ) }
    dend_53 { pt3dadd( 13.7703, 29.6502, -45.5778, 0.83 ) }
    dend_53 { pt3dadd( 14.466, 30.3309, -46.5877, 0.55 ) }
    dend_53 { pt3dadd( 16.552, 31.9535, -48.863, 0.83 ) }
    dend_53 { pt3dadd( 17.8687, 32.8687, -49.8348, 0.55 ) }
    dend_53 { pt3dadd( 18.5282, 33.3048, -50.1209, 0.55 ) }
    dend_53 { pt3dadd( 20.6799, 34.6622, -50.472, 0.83 ) }
    dend_53 { pt3dadd( 22.7594, 35.824, -50.4187, 0.83 ) }
    dend_53 { pt3dadd( 23.8852, 36.45, -50.4054, 0.55 ) }
    dend_53 { pt3dadd( 24.6668, 36.8826, -50.4222, 0.55 ) }
    dend_53 { pt3dadd( 27.1771, 38.2174, -50.6662, 0.83 ) }
    dend_53 { pt3dadd( 29.0214, 39.2342, -51.0979, 0.83 ) }
    dend_53 { pt3dadd( 30.4841, 40.0945, -51.6941, 0.55 ) }
    dend_53 { pt3dadd( 32.8117, 41.4766, -52.9247, 0.83 ) }
    dend_53 { pt3dadd( 34.5166, 42.4619, -53.9446, 0.83 ) }
    dend_53 { pt3dadd( 36.0251, 43.39, -54.9202, 0.83 ) }
    dend_53 { pt3dadd( 38.1523, 44.8406, -56.3676, 1.38 ) }
    dend_53 { pt3dadd( 40.2331, 46.2872, -57.7934, 0.55 ) }
    dend_53 { pt3dadd( 42.0534, 47.534, -59.0868, 0.83 ) }
    dend_53 { pt3dadd( 43.8711, 48.7069, -60.5115, 1.11 ) }
    dend_53 { pt3dadd( 45.7717, 49.9373, -62.1992, 0.83 ) }
    dend_53 { pt3dadd( 47.127, 50.8086, -63.5675, 0.83 ) }
    dend_53 { pt3dadd( 48.825, 51.9159, -65.5337, 0.83 ) }
    dend_53 { pt3dadd( 51.0543, 53.3504, -68.2395, 0.55 ) }
    dend_53 { pt3dadd( 53.6222, 55.0772, -71.399, 0.83 ) }
    dend_53 { pt3dadd( 54.7306, 55.8428, -72.7169, 1.94 ) }
    dend_53 { pt3dadd( 58.0037, 58.0763, -76.4381, 0.55 ) }
    dend_53 { pt3dadd( 59.5095, 59.0804, -78.1065, 0.55 ) }
    dend_53 { pt3dadd( 60.7893, 59.9867, -79.3974, 0.55 ) }
    dend_53 { pt3dadd( 62.363, 61.1868, -80.682, 0.55 ) }
    dend_53 { pt3dadd( 63.9433, 62.4761, -81.6666, 1.11 ) }
    dend_53 { pt3dadd( 66.0733, 64.2862, -82.9146, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 92/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 26.6606, 12.8194, 10.1675, 0.83 ) }
    dend_49 { pt3dadd( 38.096, 18.7038, 10.194, 0.83 ) }
    dend_49 { pt3dadd( 48.987, 25.3003, 12.0207, 0.83 ) }
    dend_49 { pt3dadd( 59.9976, 30.7814, 15.6586, 0.83 ) }
    dend_49 { pt3dadd( 72.1957, 33.5231, 18.3523, 0.83 ) }
    dend_49 { pt3dadd( 84.2919, 35.0412, 22.1683, 0.83 ) }
    dend_49 { pt3dadd( 96.7964, 37.6735, 22.8409, 0.83 ) }
    dend_49 { pt3dadd( 109.388, 39.3095, 24.3025, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_49 { pt3dadd( 121.899, 41.7191, 25.4385, 0.83 ) }
    dend_49 { pt3dadd( 134.399, 43.8765, 27.0488, 0.83 ) }
    dend_49 { pt3dadd( 146.81, 45.4751, 29.638, 0.83 ) }
    dend_49 { pt3dadd( 158.932, 49.4307, 30.8986, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 4/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 26.6606, 12.8194, 10.1675, 0.83 ) }
    dend_46 { pt3dadd( 34.7658, 17.8195, 10.2661, 0.83 ) }
    dend_46 { pt3dadd( 43.1223, 22.0587, 11.8472, 0.83 ) }
    dend_46 { pt3dadd( 50.9643, 26.6941, 14.5747, 0.83 ) }
    dend_46 { pt3dadd( 59.1758, 29.8892, 18.0714, 0.83 ) }
    dend_46 { pt3dadd( 67.2244, 32.9538, 22.0263, 0.83 ) }
    dend_46 { pt3dadd( 75.6291, 34.74, 25.9881, 0.83 ) }
    dend_46 { pt3dadd( 84.206, 37.9158, 28.4859, 0.83 ) }
    dend_46 { pt3dadd( 93.3614, 39.1908, 30.4932, 0.83 ) }
    dend_46 { pt3dadd( 102.348, 40.7633, 33.0008, 0.83 ) }
    dend_46 { pt3dadd( 111.369, 40.584, 35.8231, 0.83 ) }
    dend_46 { pt3dadd( 120.222, 38.519, 38.4537, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_24 (entry count 16/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -12.7435, 15.5381, -2.93354, 1.66 ) }
    dend_38 { pt3dadd( -14.1506, 18.4335, -4.05063, 1.66 ) }
    dend_38 { pt3dadd( -15.4966, 20.7814, -5.01103, 1.66 ) }
    dend_38 { pt3dadd( -17.2856, 23.6202, -6.17107, 1.66 ) }
    dend_38 { pt3dadd( -19.4502, 26.9781, -7.53664, 1.38 ) }
    dend_38 { pt3dadd( -21.5502, 30.2358, -8.86143, 1.66 ) }
    dend_38 { pt3dadd( -23.6085, 33.4288, -10.16, 1.38 ) }
    dend_38 { pt3dadd( -25.5869, 36.1835, -11.4068, 1.38 ) }
    dend_38 { pt3dadd( -27.9492, 39.2266, -12.8617, 1.38 ) }
    dend_38 { pt3dadd( -29.1805, 40.7453, -13.5485, 1.38 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -12.7435, 15.5381, -2.93354, 1.38 ) }
    dend_25 { pt3dadd( -16.7916, 16.3926, -6.04136, 1.38 ) }
    dend_25 { pt3dadd( -24.6272, 17.4119, -11.9127, 1.66 ) }
    dend_25 { pt3dadd( -29.4802, 17.947, -15.4415, 1.38 ) }
    dend_25 { pt3dadd( -32.4305, 18.2558, -17.2583, 1.38 ) }
    dend_25 { pt3dadd( -36.0519, 18.6349, -19.4883, 1.38 ) }
    dend_25 { pt3dadd( -40.7752, 19.1293, -22.3968, 1.38 ) }
    dend_25 { pt3dadd( -43.6072, 19.4192, -24.171, 1.11 ) }
    dend_25 { pt3dadd( -46.8398, 19.507, -25.4078, 1.11 ) }
    dend_25 { pt3dadd( -53.0072, 19.1334, -26.7117, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 36/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.08097, -35.8258, 0.481641, 2.49 ) }
    dend_6 { pt3dadd( 4.88786, -37.8231, -0.0694089, 2.49 ) }
    dend_6 { pt3dadd( 9.1308, -42.513, -1.36338, 1.66 ) }
    dend_6 { pt3dadd( 10.8661, -44.4311, -1.89259, 1.38 ) }
    dend_6 { pt3dadd( 11.4889, -45.1194, -2.0825, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 41/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.08097, -35.8258, 0.481641, 1.38 ) }
    dend_1 { pt3dadd( 2.25703, -38.657, 0.352947, 1.38 ) }
    dend_1 { pt3dadd( 1.33113, -41.8385, 0.208326, 1.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 44/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 17.1459, -35.9331, 0.130231, 0.83 ) }
    axon_1 { pt3dadd( 23.4909, -49.525, 0.130231, 0.83 ) }
    axon_1 { pt3dadd( 29.836, -63.1169, 0.130231, 0.83 ) }
    // Section: dend_103, id: dend_103, parent: dend_97 (entry count 47/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -44.8568, 104.407, 19.7238, 0.55 ) }
    dend_103 { pt3dadd( -44.6045, 105.605, 21.159, 0.55 ) }
    dend_103 { pt3dadd( -44.3444, 106.923, 22.6006, 0.55 ) }
    dend_103 { pt3dadd( -44.1402, 108.617, 24.3027, 0.28 ) }
    dend_103 { pt3dadd( -44.0944, 109.464, 25.0377, 1.11 ) }
    dend_103 { pt3dadd( -44.0405, 113.736, 28.5578, 0.55 ) }
    dend_103 { pt3dadd( -44.0547, 114.842, 29.4508, 0.55 ) }
    dend_103 { pt3dadd( -44.1624, 115.944, 30.3268, 0.83 ) }
    dend_103 { pt3dadd( -44.3696, 117.341, 31.3292, 0.55 ) }
    dend_103 { pt3dadd( -44.8362, 119.707, 32.8179, 0.55 ) }
    dend_103 { pt3dadd( -45.315, 121.329, 33.7379, 0.55 ) }
    dend_103 { pt3dadd( -45.4905, 121.767, 33.9103, 0.83 ) }
    dend_103 { pt3dadd( -46.09, 123.075, 34.4637, 0.55 ) }
    dend_103 { pt3dadd( -46.5696, 124.093, 34.9372, 0.83 ) }
    dend_103 { pt3dadd( -47.0297, 125.088, 35.4143, 0.55 ) }
    dend_103 { pt3dadd( -47.7325, 126.194, 35.8968, 0.55 ) }
    dend_103 { pt3dadd( -48.2085, 126.878, 36.0683, 0.83 ) }
    dend_103 { pt3dadd( -49.3606, 132.531, 40.5794, 0.83 ) }
    dend_103 { pt3dadd( -51.6539, 137.814, 45.0857, 0.83 ) }
    dend_103 { pt3dadd( -54.3787, 141.806, 50.5241, 0.83 ) }
    dend_103 { pt3dadd( -56.2419, 145.558, 56.464, 0.83 ) }
    dend_103 { pt3dadd( -58.3301, 149.773, 62.0198, 0.83 ) }
    dend_103 { pt3dadd( -60.5187, 152.94, 68.1721, 0.83 ) }
    // Section: dend_98, id: dend_98, parent: dend_97 (entry count 70/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -44.8568, 104.407, 19.7238, 0.55 ) }
    dend_98 { pt3dadd( -47.5974, 106.884, 19.6063, 0.55 ) }
    dend_98 { pt3dadd( -48.855, 108.021, 19.5523, 0.55 ) }
    dend_98 { pt3dadd( -50.6481, 109.643, 19.4754, 0.55 ) }
    dend_98 { pt3dadd( -52.6262, 111.431, 19.3906, 0.55 ) }
    dend_98 { pt3dadd( -54.9023, 113.489, 19.293, 0.55 ) }
    dend_98 { pt3dadd( -56.6211, 115.043, 19.2193, 0.55 ) }
    // Section: dend_93, id: dend_93, parent: dend_87 (entry count 77/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -5.0228, 76.2856, -51.6807, 0.83 ) }
    dend_93 { pt3dadd( -7.77057, 76.6121, -52.0424, 0.83 ) }
    dend_93 { pt3dadd( -9.82726, 76.8186, -52.2172, 0.83 ) }
    dend_93 { pt3dadd( -11.5866, 77.058, -52.3389, 0.83 ) }
    dend_93 { pt3dadd( -15.5614, 77.8193, -52.5801, 0.55 ) }
    dend_93 { pt3dadd( -18.7561, 78.5566, -52.762, 0.55 ) }
    dend_93 { pt3dadd( -23.6235, 79.7401, -53.0375, 0.83 ) }
    dend_93 { pt3dadd( -27.6437, 80.8291, -53.1688, 0.83 ) }
    dend_93 { pt3dadd( -30.3953, 81.7229, -53.2102, 0.83 ) }
    dend_93 { pt3dadd( -32.7651, 82.6574, -53.1198, 0.55 ) }
    dend_93 { pt3dadd( -34.1431, 83.2817, -52.9998, 0.55 ) }
    dend_93 { pt3dadd( -36.0062, 84.3064, -52.7001, 0.55 ) }
    dend_93 { pt3dadd( -39.4189, 86.4673, -51.9379, 0.55 ) }
    dend_93 { pt3dadd( -42.603, 88.434, -51.1334, 1.11 ) }
    dend_93 { pt3dadd( -45.7559, 90.3401, -50.1626, 0.28 ) }
    dend_93 { pt3dadd( -46.8341, 90.9777, -49.8047, 0.55 ) }
    dend_93 { pt3dadd( -48.9452, 92.2663, -49.0641, 0.28 ) }
    dend_93 { pt3dadd( -50.014, 92.9245, -48.6945, 0.55 ) }
    dend_93 { pt3dadd( -53.4867, 94.9868, -47.5796, 0.55 ) }
    dend_93 { pt3dadd( -55.7683, 96.3473, -46.9336, 0.28 ) }
    dend_93 { pt3dadd( -58.3783, 97.9667, -46.2739, 0.55 ) }
    dend_93 { pt3dadd( -60.1524, 99.1064, -45.835, 0.55 ) }
    dend_93 { pt3dadd( -62.9999, 100.94, -45.2058, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_93 { pt3dadd( -64.08, 101.653, -44.9705, 0.55 ) }
    dend_93 { pt3dadd( -67.5513, 104.014, -44.2944, 1.66 ) }
    dend_93 { pt3dadd( -70.0636, 105.725, -43.8838, 0.28 ) }
    dend_93 { pt3dadd( -70.8988, 106.321, -43.7351, 0.55 ) }
    dend_93 { pt3dadd( -72.6193, 107.507, -43.4385, 0.28 ) }
    dend_93 { pt3dadd( -73.1459, 107.856, -43.3538, 0.55 ) }
    dend_93 { pt3dadd( -75.116, 109.0, -43.0947, 0.28 ) }
    dend_93 { pt3dadd( -75.5365, 109.219, -43.0641, 0.55 ) }
    dend_93 { pt3dadd( -77.4703, 110.146, -43.1857, 0.28 ) }
    dend_93 { pt3dadd( -79.0665, 110.966, -43.3811, 0.55 ) }
    dend_93 { pt3dadd( -80.6157, 111.844, -43.6489, 0.55 ) }
    dend_93 { pt3dadd( -82.3637, 112.911, -44.0023, 0.28 ) }
    dend_93 { pt3dadd( -83.6165, 113.769, -44.2965, 0.83 ) }
    dend_93 { pt3dadd( -85.9882, 115.635, -44.9827, 0.28 ) }
    dend_93 { pt3dadd( -87.6779, 117.3, -45.5452, 0.83 ) }
    dend_93 { pt3dadd( -88.9984, 118.886, -45.9824, 0.28 ) }
    dend_93 { pt3dadd( -89.6543, 119.807, -46.2267, 0.28 ) }
    dend_93 { pt3dadd( -91.071, 122.101, -46.9134, 0.28 ) }
    dend_93 { pt3dadd( -91.8939, 123.587, -47.3593, 0.55 ) }
    dend_93 { pt3dadd( -93.6535, 127.108, -48.4075, 0.28 ) }
    dend_93 { pt3dadd( -94.6985, 129.33, -49.1488, 0.83 ) }
    dend_93 { pt3dadd( -95.8821, 131.999, -50.0439, 0.28 ) }
    dend_93 { pt3dadd( -97.0077, 134.599, -50.9081, 0.28 ) }
    dend_93 { pt3dadd( -97.286, 135.236, -51.1918, 0.55 ) }
    dend_93 { pt3dadd( -98.0018, 136.793, -51.9137, 0.28 ) }
    dend_93 { pt3dadd( -98.3974, 137.63, -52.4871, 0.55 ) }
    dend_93 { pt3dadd( -99.3371, 139.614, -53.9747, 0.28 ) }
    dend_93 { pt3dadd( -99.8654, 140.73, -54.7936, 0.83 ) }
    dend_93 { pt3dadd( -102.361, 145.991, -58.717, 0.28 ) }
    dend_93 { pt3dadd( -103.178, 147.738, -60.1225, 0.55 ) }
    dend_93 { pt3dadd( -105.543, 152.977, -64.7444, 0.28 ) }
    dend_93 { pt3dadd( -106.256, 154.519, -66.287, 0.55 ) }
    dend_93 { pt3dadd( -106.891, 155.871, -67.9007, 0.55 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 33/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -5.0228, 76.2856, -51.6807, 0.83 ) }
    dend_88 { pt3dadd( -3.80418, 78.9309, -53.7588, 0.83 ) }
    // Section: dend_82, id: dend_82, parent: dend_58 (entry count 35/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 4.18143, 20.0573, -10.659, 0.83 ) }
    dend_82 { pt3dadd( 5.10404, 20.2624, -10.6133, 0.83 ) }
    dend_82 { pt3dadd( 6.57997, 20.3636, -10.6566, 0.83 ) }
    dend_82 { pt3dadd( 7.27297, 20.2735, -10.8101, 1.38 ) }
    dend_82 { pt3dadd( 8.78049, 20.1239, -11.2617, 0.83 ) }
    dend_82 { pt3dadd( 9.91225, 20.0661, -11.7089, 0.83 ) }
    dend_82 { pt3dadd( 10.8554, 20.0391, -12.0826, 0.83 ) }
    dend_82 { pt3dadd( 13.2824, 19.9625, -13.0945, 1.11 ) }
    dend_82 { pt3dadd( 15.0083, 19.9345, -13.8206, 1.11 ) }
    dend_82 { pt3dadd( 17.0816, 20.0959, -14.7192, 1.11 ) }
    dend_82 { pt3dadd( 19.2097, 20.3371, -15.6173, 1.11 ) }
    dend_82 { pt3dadd( 21.0294, 20.5119, -16.3749, 1.11 ) }
    dend_82 { pt3dadd( 22.552, 20.6642, -16.9944, 1.11 ) }
    dend_82 { pt3dadd( 24.012, 20.8338, -17.5293, 1.11 ) }
    dend_82 { pt3dadd( 26.567, 21.0507, -18.4272, 1.11 ) }
    dend_82 { pt3dadd( 28.0652, 21.1003, -18.9719, 1.11 ) }
    dend_82 { pt3dadd( 30.1049, 21.1979, -19.6866, 1.11 ) }
    dend_82 { pt3dadd( 31.3671, 21.2439, -20.0853, 0.83 ) }
    dend_82 { pt3dadd( 32.793, 21.2693, -20.5247, 0.83 ) }
    dend_82 { pt3dadd( 33.6959, 21.2731, -20.7863, 0.83 ) }
    dend_82 { pt3dadd( 34.7668, 21.2643, -21.0091, 1.66 ) }
    dend_82 { pt3dadd( 36.5559, 21.5489, -21.2888, 0.55 ) }
    dend_82 { pt3dadd( 38.5734, 22.1409, -21.386, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 58/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.18143, 20.0573, -10.659, 1.66 ) }
    dend_59 { pt3dadd( 8.76432, 24.9597, -13.5543, 1.66 ) }
    dend_59 { pt3dadd( 11.1062, 27.4648, -15.0338, 1.66 ) }
    dend_59 { pt3dadd( 14.5915, 31.1931, -17.2356, 1.66 ) }
    dend_59 { pt3dadd( 16.9054, 33.6683, -18.6974, 1.66 ) }
    dend_59 { pt3dadd( 18.7254, 35.6152, -19.8472, 1.66 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 64/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 66.0733, 64.2862, -82.9146, 2.22 ) }
    dend_55 { pt3dadd( 66.8801, 64.5803, -84.1112, 2.22 ) }
    dend_55 { pt3dadd( 68.8248, 65.3229, -86.7932, 0.28 ) }
    dend_55 { pt3dadd( 69.8087, 65.6913, -88.1412, 0.28 ) }
    dend_55 { pt3dadd( 70.1391, 65.8143, -88.5627, 0.83 ) }
    dend_55 { pt3dadd( 70.5825, 66.0049, -89.0887, 0.83 ) }
    dend_55 { pt3dadd( 71.9385, 66.6369, -90.6132, 0.55 ) }
    dend_55 { pt3dadd( 72.5668, 66.9712, -91.2642, 0.55 ) }
    dend_55 { pt3dadd( 73.7641, 67.6685, -92.1383, 0.28 ) }
    dend_55 { pt3dadd( 74.4815, 68.1395, -92.6066, 0.83 ) }
    dend_55 { pt3dadd( 75.6646, 68.9978, -93.4485, 0.55 ) }
    dend_55 { pt3dadd( 76.0175, 69.2821, -93.7096, 0.83 ) }
    dend_55 { pt3dadd( 76.5891, 69.7909, -94.1065, 0.28 ) }
    dend_55 { pt3dadd( 77.2072, 70.383, -94.6275, 0.83 ) }
    dend_55 { pt3dadd( 78.5031, 71.6636, -95.976, 0.55 ) }
    dend_55 { pt3dadd( 79.2277, 72.3278, -96.8776, 0.28 ) }
    dend_55 { pt3dadd( 79.6224, 72.6364, -97.4006, 1.38 ) }
    dend_55 { pt3dadd( 80.3821, 73.1017, -98.465, 0.55 ) }
    dend_55 { pt3dadd( 81.3879, 73.5921, -99.9095, 0.28 ) }
    dend_55 { pt3dadd( 82.2038, 73.8586, -101.177, 0.55 ) }
    dend_55 { pt3dadd( 82.7546, 73.9546, -101.999, 0.28 ) }
    dend_55 { pt3dadd( 83.1295, 73.9937, -102.556, 1.38 ) }
    dend_55 { pt3dadd( 84.8404, 74.0963, -105.142, 0.28 ) }
    dend_55 { pt3dadd( 85.081, 74.1035, -105.534, 0.83 ) }
    dend_55 { pt3dadd( 87.0632, 74.2223, -108.773, 0.28 ) }
    dend_55 { pt3dadd( 87.3417, 74.2565, -109.246, 0.83 ) }
    dend_55 { pt3dadd( 87.6849, 74.3266, -109.891, 0.55 ) }
    dend_55 { pt3dadd( 88.4606, 74.5787, -111.457, 2.49 ) }
    dend_55 { pt3dadd( 89.8197, 75.1576, -114.247, 0.55 ) }
    dend_55 { pt3dadd( 90.2195, 75.3528, -115.044, 0.55 ) }
    dend_55 { pt3dadd( 91.2421, 75.9472, -116.913, 0.55 ) }
    dend_55 { pt3dadd( 92.3853, 76.6281, -118.921, 0.83 ) }
    dend_55 { pt3dadd( 93.399, 77.2169, -120.54, 0.28 ) }
    dend_55 { pt3dadd( 93.7139, 77.4099, -120.976, 0.55 ) }
    dend_55 { pt3dadd( 94.2998, 77.7732, -121.635, 0.28 ) }
    dend_55 { pt3dadd( 95.3113, 78.4513, -122.723, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_55 { pt3dadd( 96.4064, 79.2994, -123.78, 1.11 ) }
    dend_55 { pt3dadd( 97.3505, 80.1181, -124.614, 0.28 ) }
    dend_55 { pt3dadd( 97.8461, 80.6052, -125.057, 0.28 ) }
    dend_55 { pt3dadd( 98.275, 81.1093, -125.475, 1.11 ) }
    dend_55 { pt3dadd( 99.4605, 82.7788, -126.684, 0.28 ) }
    dend_55 { pt3dadd( 99.7461, 83.3578, -127.017, 0.83 ) }
    dend_55 { pt3dadd( 99.9362, 84.0253, -127.268, 0.28 ) }
    dend_55 { pt3dadd( 100.001, 84.4402, -127.398, 0.55 ) }
    dend_55 { pt3dadd( 100.054, 85.2138, -127.604, 0.28 ) }
    dend_55 { pt3dadd( 100.021, 85.9341, -127.706, 1.11 ) }
    dend_55 { pt3dadd( 99.7825, 87.3034, -127.47, 0.28 ) }
    dend_55 { pt3dadd( 99.6133, 87.8549, -127.355, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 12/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 66.0733, 64.2862, -82.9146, 0.55 ) }
    dend_54 { pt3dadd( 67.7269, 65.7011, -83.1984, 0.55 ) }
    dend_54 { pt3dadd( 69.5036, 67.263, -83.5463, 0.28 ) }
    dend_54 { pt3dadd( 70.5435, 68.1413, -83.7617, 0.83 ) }
    dend_54 { pt3dadd( 71.8165, 69.1598, -83.9853, 0.28 ) }
    dend_54 { pt3dadd( 72.5726, 69.7093, -84.1651, 0.55 ) }
    dend_54 { pt3dadd( 73.6167, 70.4265, -84.4404, 0.28 ) }
    dend_54 { pt3dadd( 74.2055, 70.8002, -84.6207, 0.55 ) }
    dend_54 { pt3dadd( 75.3102, 71.4982, -84.9765, 0.28 ) }
    dend_54 { pt3dadd( 76.6053, 72.3092, -85.3811, 1.38 ) }
    dend_54 { pt3dadd( 79.1254, 73.8708, -86.1131, 0.55 ) }
    dend_54 { pt3dadd( 80.6042, 74.8034, -86.4868, 0.83 ) }
    dend_54 { pt3dadd( 82.5563, 76.0426, -86.9151, 0.28 ) }
    dend_54 { pt3dadd( 83.6626, 76.7987, -87.1601, 0.83 ) }
    dend_54 { pt3dadd( 85.5101, 78.1527, -87.5649, 0.28 ) }
    dend_54 { pt3dadd( 86.3804, 78.8572, -87.7537, 0.55 ) }
    dend_54 { pt3dadd( 87.5222, 79.8507, -87.9493, 0.28 ) }
    dend_54 { pt3dadd( 88.6992, 80.9327, -88.2196, 0.83 ) }
    dend_54 { pt3dadd( 89.9928, 82.1626, -88.5887, 0.28 ) }
    dend_54 { pt3dadd( 90.3825, 82.5462, -88.7627, 0.55 ) }
    dend_54 { pt3dadd( 91.4364, 83.647, -89.389, 0.28 ) }
    dend_54 { pt3dadd( 91.7793, 84.0197, -89.6473, 0.55 ) }
    dend_54 { pt3dadd( 92.8024, 85.0496, -90.4826, 0.28 ) }
    dend_54 { pt3dadd( 93.3803, 85.584, -90.9566, 0.55 ) }
    dend_54 { pt3dadd( 95.5161, 87.2907, -92.3314, 0.28 ) }
    dend_54 { pt3dadd( 95.7527, 87.4829, -92.5095, 0.55 ) }
    dend_54 { pt3dadd( 98.0889, 89.4159, -94.4184, 0.28 ) }
    dend_54 { pt3dadd( 99.0317, 90.2707, -95.2779, 1.11 ) }
    dend_54 { pt3dadd( 100.898, 92.0939, -97.137, 0.28 ) }
    dend_54 { pt3dadd( 102.712, 94.054, -99.197, 1.38 ) }
    dend_54 { pt3dadd( 106.211, 98.1083, -103.53, 0.28 ) }
    dend_54 { pt3dadd( 106.716, 98.7162, -104.191, 0.55 ) }
    dend_54 { pt3dadd( 108.81, 101.404, -107.156, 0.28 ) }
    dend_54 { pt3dadd( 109.329, 102.117, -107.949, 0.83 ) }
    dend_54 { pt3dadd( 110.349, 103.543, -109.564, 0.28 ) }
    dend_54 { pt3dadd( 110.596, 103.873, -109.942, 0.55 ) }
    dend_54 { pt3dadd( 111.588, 104.861, -110.836, 0.28 ) }
    dend_54 { pt3dadd( 112.133, 105.273, -111.145, 0.55 ) }
    dend_54 { pt3dadd( 114.132, 106.428, -111.773, 0.28 ) }
    dend_54 { pt3dadd( 115.006, 106.88, -111.972, 0.83 ) }
    dend_54 { pt3dadd( 116.319, 107.511, -112.149, 0.28 ) }
    dend_54 { pt3dadd( 116.961, 107.831, -112.228, 0.55 ) }
    dend_54 { pt3dadd( 119.238, 109.015, -112.459, 0.28 ) }
    dend_54 { pt3dadd( 121.237, 109.98, -112.524, 0.83 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 56/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 158.932, 49.4307, 30.8986, 0.55 ) }
    dend_51 { pt3dadd( 167.438, 51.5988, 32.3322, 0.55 ) }
    dend_51 { pt3dadd( 175.476, 54.9868, 34.163, 0.55 ) }
    dend_51 { pt3dadd( 184.147, 56.8414, 34.8264, 0.55 ) }
    dend_51 { pt3dadd( 192.805, 58.1173, 36.3488, 0.55 ) }
    dend_51 { pt3dadd( 201.642, 59.0103, 36.4268, 0.55 ) }
    dend_51 { pt3dadd( 210.148, 60.9779, 34.7032, 0.55 ) }
    dend_51 { pt3dadd( 218.374, 63.9792, 33.0101, 0.55 ) }
    dend_51 { pt3dadd( 226.297, 67.2194, 30.483, 0.55 ) }
    dend_51 { pt3dadd( 233.75, 70.4005, 26.7331, 0.55 ) }
    dend_51 { pt3dadd( 241.448, 74.4743, 24.701, 0.55 ) }
    dend_51 { pt3dadd( 248.643, 78.8052, 21.592, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 68/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 158.932, 49.4307, 30.8986, 0.55 ) }
    dend_50 { pt3dadd( 168.283, 52.0724, 32.3238, 0.55 ) }
    dend_50 { pt3dadd( 177.623, 54.9422, 33.3682, 0.55 ) }
    dend_50 { pt3dadd( 187.284, 56.6514, 33.5608, 0.55 ) }
    dend_50 { pt3dadd( 196.706, 58.7141, 31.6835, 0.55 ) }
    dend_50 { pt3dadd( 206.094, 60.5842, 29.4752, 0.55 ) }
    dend_50 { pt3dadd( 214.996, 63.2668, 26.2447, 0.55 ) }
    dend_50 { pt3dadd( 223.648, 67.1814, 23.5646, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 76/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 120.222, 38.519, 38.4537, 0.55 ) }
    dend_48 { pt3dadd( 129.262, 40.9945, 41.4108, 0.55 ) }
    dend_48 { pt3dadd( 138.586, 42.9113, 43.8482, 0.55 ) }
    dend_48 { pt3dadd( 148.268, 44.0596, 45.0625, 0.55 ) }
    dend_48 { pt3dadd( 157.627, 46.7403, 46.5034, 0.55 ) }
    dend_48 { pt3dadd( 167.086, 47.2563, 49.0727, 0.55 ) }
    dend_48 { pt3dadd( 176.749, 48.0376, 50.6393, 0.55 ) }
    dend_48 { pt3dadd( 186.53, 47.3139, 51.0066, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 84/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 120.222, 38.519, 38.4537, 0.55 ) }
    dend_47 { pt3dadd( 126.039, 40.107, 40.2375, 0.55 ) }
    dend_47 { pt3dadd( 132.017, 42.0401, 40.7098, 0.55 ) }
    dend_47 { pt3dadd( 137.735, 44.6714, 41.2073, 0.55 ) }
    dend_47 { pt3dadd( 143.112, 47.6348, 42.6679, 0.55 ) }
    dend_47 { pt3dadd( 148.584, 50.5942, 43.7532, 0.55 ) }
    dend_47 { pt3dadd( 154.116, 52.5334, 46.0304, 0.55 ) }
    dend_47 { pt3dadd( 159.87, 54.9094, 47.0287, 0.55 ) }
    dend_47 { pt3dadd( 165.519, 57.1898, 48.628, 0.55 ) }
    dend_47 { pt3dadd( 170.586, 59.6158, 51.4605, 0.55 ) }
    dend_47 { pt3dadd( 175.433, 61.5935, 54.9343, 0.55 ) }
    dend_47 { pt3dadd( 180.365, 62.4006, 58.7333, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 96/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -29.1805, 40.7453, -13.5485, 1.11 ) }
    dend_42 { pt3dadd( -32.0488, 43.5172, -12.2579, 1.11 ) }
    dend_42 { pt3dadd( -34.6234, 46.37, -11.4614, 1.11 ) }
    dend_42 { pt3dadd( -38.0542, 50.6879, -10.8093, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_42 { pt3dadd( -40.7382, 54.42, -10.6303, 1.11 ) }
    dend_42 { pt3dadd( -42.948, 57.4652, -10.541, 1.11 ) }
    dend_42 { pt3dadd( -46.3162, 62.0362, -10.5564, 1.11 ) }
    dend_42 { pt3dadd( -49.5169, 66.4923, -10.9294, 1.11 ) }
    dend_42 { pt3dadd( -51.4708, 69.2078, -11.4569, 1.11 ) }
    dend_42 { pt3dadd( -53.1771, 71.6469, -12.1137, 0.83 ) }
    dend_42 { pt3dadd( -55.9996, 75.4054, -13.3664, 1.38 ) }
    dend_42 { pt3dadd( -58.8005, 78.865, -14.6926, 1.11 ) }
    dend_42 { pt3dadd( -60.6421, 80.9718, -15.545, 1.11 ) }
    dend_42 { pt3dadd( -62.5338, 83.0912, -16.1416, 0.83 ) }
    dend_42 { pt3dadd( -64.5, 85.5065, -16.663, 0.83 ) }
    dend_42 { pt3dadd( -67.5131, 89.3496, -17.4707, 0.83 ) }
    dend_42 { pt3dadd( -70.1354, 93.0337, -18.3196, 0.83 ) }
    dend_42 { pt3dadd( -72.8865, 97.1127, -19.0801, 0.83 ) }
    dend_42 { pt3dadd( -76.0082, 102.021, -19.7644, 1.11 ) }
    dend_42 { pt3dadd( -78.047, 105.584, -20.0354, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 16/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -29.1805, 40.7453, -13.5485, 1.11 ) }
    dend_39 { pt3dadd( -30.2876, 44.0727, -12.8776, 1.11 ) }
    dend_39 { pt3dadd( -31.2368, 46.7944, -12.3476, 1.11 ) }
    dend_39 { pt3dadd( -32.4326, 49.7777, -11.7567, 1.11 ) }
    dend_39 { pt3dadd( -34.6511, 54.6147, -10.8124, 1.11 ) }
    dend_39 { pt3dadd( -36.4543, 58.428, -10.0422, 1.11 ) }
    dend_39 { pt3dadd( -38.1334, 61.8756, -9.19076, 1.11 ) }
    dend_39 { pt3dadd( -40.69, 66.8661, -7.94503, 1.11 ) }
    dend_39 { pt3dadd( -42.3179, 70.1666, -7.13548, 1.11 ) }
    dend_39 { pt3dadd( -44.6581, 75.0719, -6.15348, 1.11 ) }
    dend_39 { pt3dadd( -47.3526, 81.0491, -5.26532, 1.11 ) }
    dend_39 { pt3dadd( -49.9477, 87.4383, -4.65014, 1.11 ) }
    dend_39 { pt3dadd( -51.333, 91.4123, -4.34648, 1.11 ) }
    dend_39 { pt3dadd( -52.3671, 95.2689, -4.06066, 0.83 ) }
    dend_39 { pt3dadd( -53.4725, 100.877, -3.61973, 0.55 ) }
    dend_39 { pt3dadd( -54.2861, 106.373, -3.15964, 0.83 ) }
    dend_39 { pt3dadd( -55.0798, 113.411, -2.54278, 0.83 ) }
    dend_39 { pt3dadd( -55.469, 117.619, -2.11259, 0.83 ) }
    dend_39 { pt3dadd( -55.6957, 120.396, -1.64748, 0.83 ) }
    dend_39 { pt3dadd( -56.0957, 125.701, -0.52107, 0.83 ) }
    dend_39 { pt3dadd( -56.2535, 128.856, 0.312186, 0.83 ) }
    dend_39 { pt3dadd( -56.42, 132.813, 1.37671, 0.83 ) }
    dend_39 { pt3dadd( -56.6548, 136.646, 2.37434, 0.83 ) }
    dend_39 { pt3dadd( -56.7631, 138.123, 2.70423, 0.83 ) }
    dend_39 { pt3dadd( -56.9457, 140.121, 3.10706, 0.55 ) }
    dend_39 { pt3dadd( -57.0725, 142.049, 3.44484, 0.28 ) }
    dend_39 { pt3dadd( -57.0941, 142.379, 3.49167, 0.55 ) }
    dend_39 { pt3dadd( -57.3041, 144.545, 3.71072, 0.28 ) }
    dend_39 { pt3dadd( -57.4713, 145.787, 3.75965, 0.55 ) }
    dend_39 { pt3dadd( -57.8414, 147.632, 3.62529, 0.28 ) }
    dend_39 { pt3dadd( -58.0755, 148.63, 3.50281, 0.55 ) }
    dend_39 { pt3dadd( -58.6557, 150.706, 3.06251, 0.55 ) }
    dend_39 { pt3dadd( -58.7266, 151.016, 2.97237, 0.55 ) }
    dend_39 { pt3dadd( -59.1208, 153.203, 2.1613, 0.83 ) }
    dend_39 { pt3dadd( -59.5743, 155.947, 1.15611, 0.83 ) }
    dend_39 { pt3dadd( -59.8836, 158.433, 0.355212, 0.55 ) }
    dend_39 { pt3dadd( -60.2304, 161.778, -0.599425, 0.83 ) }
    dend_39 { pt3dadd( -60.6845, 166.737, -1.95978, 0.83 ) }
    dend_39 { pt3dadd( -60.8687, 169.074, -2.59761, 0.55 ) }
    dend_39 { pt3dadd( -61.1366, 173.843, -3.87232, 0.55 ) }
    dend_39 { pt3dadd( -61.2951, 177.52, -4.76851, 0.55 ) }
    dend_39 { pt3dadd( -61.3594, 180.5, -5.48001, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 58/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -53.0072, 19.1334, -26.7117, 1.11 ) }
    dend_31 { pt3dadd( -54.5958, 19.786, -29.0749, 1.11 ) }
    dend_31 { pt3dadd( -57.5001, 20.979, -33.3952, 1.11 ) }
    dend_31 { pt3dadd( -59.7287, 21.8945, -36.7103, 1.11 ) }
    dend_31 { pt3dadd( -62.6333, 23.0876, -41.031, 1.38 ) }
    dend_31 { pt3dadd( -64.5037, 23.856, -43.8133, 1.38 ) }
    dend_31 { pt3dadd( -67.5226, 25.0961, -48.3042, 1.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 65/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -53.0072, 19.1334, -26.7117, 0.55 ) }
    dend_26 { pt3dadd( -55.3961, 19.3572, -24.1741, 0.55 ) }
    dend_26 { pt3dadd( -56.8314, 19.4845, -22.4269, 1.38 ) }
    dend_26 { pt3dadd( -58.512, 19.8651, -19.9797, 0.55 ) }
    dend_26 { pt3dadd( -59.5332, 20.1652, -18.4455, 0.55 ) }
    dend_26 { pt3dadd( -62.2296, 20.8349, -14.3141, 0.83 ) }
    dend_26 { pt3dadd( -65.4163, 21.8015, -8.92822, 0.55 ) }
    dend_26 { pt3dadd( -65.7613, 21.9109, -8.28687, 0.83 ) }
    dend_26 { pt3dadd( -67.8441, 22.6121, -4.5559, 0.55 ) }
    dend_26 { pt3dadd( -69.2677, 23.007, -2.15566, 0.55 ) }
    dend_26 { pt3dadd( -72.1522, 23.6094, 1.96362, 0.55 ) }
    dend_26 { pt3dadd( -76.9841, 24.6498, 7.58075, 0.55 ) }
    dend_26 { pt3dadd( -80.2395, 25.3448, 10.7352, 0.55 ) }
    dend_26 { pt3dadd( -82.738, 25.9582, 12.8734, 0.55 ) }
    dend_26 { pt3dadd( -87.5755, 27.1581, 16.346, 0.55 ) }
    dend_26 { pt3dadd( -92.3205, 28.5653, 19.3316, 0.55 ) }
    dend_26 { pt3dadd( -96.7409, 30.1262, 21.6306, 0.55 ) }
    dend_26 { pt3dadd( -99.7014, 31.2522, 22.8691, 0.55 ) }
    dend_26 { pt3dadd( -103.703, 33.1133, 24.4291, 0.55 ) }
    dend_26 { pt3dadd( -107.179, 34.9119, 25.707, 0.55 ) }
    dend_26 { pt3dadd( -109.071, 36.0797, 26.2745, 0.55 ) }
    dend_26 { pt3dadd( -110.283, 36.9419, 26.6668, 0.28 ) }
    dend_26 { pt3dadd( -110.94, 37.428, 26.8684, 0.55 ) }
    dend_26 { pt3dadd( -113.486, 39.3929, 27.5473, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 11.4889, -45.1194, -2.0825, 1.38 ) }
    dend_10 { pt3dadd( 11.4763, -45.7261, -1.97394, 1.38 ) }
    dend_10 { pt3dadd( 11.7188, -49.0645, -1.66177, 1.38 ) }
    dend_10 { pt3dadd( 12.255, -52.0007, -1.56757, 1.38 ) }
    dend_10 { pt3dadd( 13.3278, -56.0668, -1.7136, 1.38 ) }
    dend_10 { pt3dadd( 14.2868, -58.6003, -1.87198, 1.66 ) }
    dend_10 { pt3dadd( 15.8104, -61.966, -1.99559, 1.66 ) }
    dend_10 { pt3dadd( 18.2883, -66.5104, -2.15565, 1.38 ) }
    dend_10 { pt3dadd( 20.3133, -69.8657, -2.27484, 2.49 ) }
    dend_10 { pt3dadd( 21.7554, -72.1269, -2.32295, 1.94 ) }
    dend_10 { pt3dadd( 24.4301, -76.2243, -2.39593, 1.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_10 { pt3dadd( 27.0017, -80.3027, -2.36337, 1.38 ) }
    dend_10 { pt3dadd( 28.7582, -83.3654, -2.26622, 1.38 ) }
    dend_10 { pt3dadd( 30.8672, -87.7056, -2.00533, 1.38 ) }
    dend_10 { pt3dadd( 32.7265, -91.9525, -1.78323, 1.38 ) }
    dend_10 { pt3dadd( 34.697, -96.6642, -1.63278, 1.38 ) }
    dend_10 { pt3dadd( 36.1437, -100.378, -1.66548, 1.38 ) }
    dend_10 { pt3dadd( 37.1352, -102.924, -1.76943, 1.38 ) }
    dend_10 { pt3dadd( 37.9321, -104.97, -1.85548, 1.38 ) }
    dend_10 { pt3dadd( 39.5407, -109.41, -2.02794, 1.38 ) }
    dend_10 { pt3dadd( 40.3798, -111.927, -2.12518, 1.38 ) }
    dend_10 { pt3dadd( 41.8349, -116.299, -2.25905, 1.38 ) }
    dend_10 { pt3dadd( 43.2971, -120.293, -2.40957, 1.38 ) }
    dend_10 { pt3dadd( 44.5723, -123.537, -2.55681, 1.38 ) }
    dend_10 { pt3dadd( 46.3098, -127.992, -2.76585, 1.38 ) }
    dend_10 { pt3dadd( 47.3114, -130.414, -2.78781, 1.38 ) }
    dend_10 { pt3dadd( 47.9436, -131.878, -2.80033, 1.38 ) }
    dend_10 { pt3dadd( 48.7415, -133.475, -2.8412, 0.83 ) }
    dend_10 { pt3dadd( 50.4665, -136.494, -2.9125, 1.38 ) }
    dend_10 { pt3dadd( 52.7797, -140.113, -2.9594, 1.38 ) }
    dend_10 { pt3dadd( 56.7214, -145.621, -2.9351, 1.38 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 20/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 11.4889, -45.1194, -2.0825, 0.55 ) }
    dend_7 { pt3dadd( 13.3593, -46.1131, -2.01675, 0.55 ) }
    dend_7 { pt3dadd( 16.7189, -48.0431, -1.78353, 0.83 ) }
    dend_7 { pt3dadd( 19.4686, -49.5021, -1.61514, 0.83 ) }
    dend_7 { pt3dadd( 21.9022, -50.6604, -1.51624, 0.83 ) }
    dend_7 { pt3dadd( 25.8657, -52.3808, -1.4452, 0.55 ) }
    dend_7 { pt3dadd( 29.5808, -53.9032, -1.42508, 0.55 ) }
    dend_7 { pt3dadd( 31.3447, -54.5865, -1.38065, 0.55 ) }
    dend_7 { pt3dadd( 33.4596, -55.2765, -1.31314, 0.55 ) }
    dend_7 { pt3dadd( 35.327, -55.9355, -1.27979, 0.83 ) }
    dend_7 { pt3dadd( 36.6252, -56.3525, -1.26191, 0.83 ) }
    dend_7 { pt3dadd( 39.7695, -57.0902, -1.81483, 0.83 ) }
    dend_7 { pt3dadd( 51.0802, -60.4235, -3.64575, 0.83 ) }
    dend_7 { pt3dadd( 62.6949, -63.1145, -3.94714, 0.83 ) }
    dend_7 { pt3dadd( 73.5169, -68.1952, -3.45769, 0.83 ) }
    dend_7 { pt3dadd( 84.1144, -73.5252, -5.04296, 0.83 ) }
    dend_7 { pt3dadd( 94.9349, -78.3569, -6.64269, 0.83 ) }
    dend_7 { pt3dadd( 105.571, -83.8436, -6.26272, 0.83 ) }
    dend_7 { pt3dadd( 116.057, -89.5157, -5.08962, 0.83 ) }
    dend_7 { pt3dadd( 126.15, -95.5526, -2.75811, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 40/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 1.33113, -41.8385, 0.208326, 0.83 ) }
    dend_3 { pt3dadd( -0.9595, -42.5864, -0.014416, 0.83 ) }
    dend_3 { pt3dadd( -4.57148, -44.0576, 0.00904689, 0.83 ) }
    dend_3 { pt3dadd( -6.59936, -44.9503, 0.105745, 0.83 ) }
    dend_3 { pt3dadd( -8.56933, -45.8806, 0.303815, 0.83 ) }
    dend_3 { pt3dadd( -10.7374, -47.0516, 0.627511, 0.55 ) }
    dend_3 { pt3dadd( -12.221, -47.9837, 0.902835, 1.11 ) }
    dend_3 { pt3dadd( -15.4736, -50.4106, 1.7506, 0.83 ) }
    dend_3 { pt3dadd( -17.145, -51.8451, 2.2796, 0.83 ) }
    dend_3 { pt3dadd( -18.7938, -53.3771, 2.84924, 1.11 ) }
    dend_3 { pt3dadd( -20.5134, -55.0233, 3.42068, 0.83 ) }
    dend_3 { pt3dadd( -22.5645, -57.1463, 4.13543, 0.83 ) }
    dend_3 { pt3dadd( -25.5121, -60.4325, 5.20031, 0.83 ) }
    dend_3 { pt3dadd( -26.6457, -61.7817, 5.58141, 0.83 ) }
    dend_3 { pt3dadd( -27.8416, -63.257, 6.0325, 0.83 ) }
    dend_3 { pt3dadd( -30.144, -66.1809, 6.92474, 0.83 ) }
    dend_3 { pt3dadd( -32.1638, -68.7435, 7.72604, 1.11 ) }
    dend_3 { pt3dadd( -33.6848, -70.7322, 8.39302, 0.83 ) }
    dend_3 { pt3dadd( -34.9296, -72.5058, 9.04839, 0.83 ) }
    dend_3 { pt3dadd( -36.6019, -74.7998, 10.0378, 0.55 ) }
    dend_3 { pt3dadd( -37.5996, -76.1352, 10.6681, 0.55 ) }
    dend_3 { pt3dadd( -38.3498, -77.2185, 11.2281, 0.55 ) }
    dend_3 { pt3dadd( -39.5004, -78.925, 12.0921, 1.11 ) }
    dend_3 { pt3dadd( -40.6112, -80.4772, 12.9388, 0.83 ) }
    dend_3 { pt3dadd( -41.9371, -82.2382, 14.0264, 0.55 ) }
    dend_3 { pt3dadd( -49.2756, -86.5258, 16.0931, 0.55 ) }
    dend_3 { pt3dadd( -56.878, -89.388, 19.2604, 0.55 ) }
    dend_3 { pt3dadd( -64.0264, -92.1579, 23.4102, 0.55 ) }
    dend_3 { pt3dadd( -69.8737, -95.4864, 28.9673, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.33113, -41.8385, 0.208326, 0.83 ) }
    dend_2 { pt3dadd( 1.27245, -44.7829, 0.531108, 0.83 ) }
    dend_2 { pt3dadd( 1.3025, -49.1556, 1.026, 0.83 ) }
    dend_2 { pt3dadd( 1.42013, -52.2666, 1.40214, 0.83 ) }
    dend_2 { pt3dadd( 1.81172, -56.3575, 1.92469, 0.83 ) }
    dend_2 { pt3dadd( 2.15747, -60.1704, 2.20068, 1.11 ) }
    dend_2 { pt3dadd( 2.41488, -63.03, 2.30503, 1.11 ) }
    dend_2 { pt3dadd( 2.67982, -65.4836, 2.30996, 1.11 ) }
    dend_2 { pt3dadd( 3.07373, -67.8615, 2.09882, 1.11 ) }
    dend_2 { pt3dadd( 3.69163, -71.3019, 1.30992, 1.11 ) }
    dend_2 { pt3dadd( 4.5033, -75.8893, -0.304426, 0.83 ) }
    dend_2 { pt3dadd( 4.77294, -77.5315, -0.995509, 0.83 ) }
    dend_2 { pt3dadd( 5.00453, -79.5754, -1.92727, 1.11 ) }
    dend_2 { pt3dadd( 5.40008, -84.2926, -3.7931, 0.83 ) }
    dend_2 { pt3dadd( 5.56326, -88.1151, -5.05607, 0.83 ) }
    dend_2 { pt3dadd( 5.54758, -90.9687, -5.85361, 0.83 ) }
    dend_2 { pt3dadd( 5.462, -95.0823, -6.75262, 0.83 ) }
    dend_2 { pt3dadd( 5.33028, -98.7341, -7.48412, 0.83 ) }
    dend_2 { pt3dadd( 5.11281, -104.506, -8.41866, 0.83 ) }
    dend_2 { pt3dadd( 4.97533, -107.804, -8.77416, 0.83 ) }
    dend_2 { pt3dadd( 4.84543, -111.079, -9.05568, 0.83 ) }
    dend_2 { pt3dadd( 4.81679, -114.517, -9.3784, 0.83 ) }
    dend_2 { pt3dadd( 4.9332, -117.493, -9.60504, 0.83 ) }
    dend_2 { pt3dadd( 5.19373, -121.398, -9.90303, 0.83 ) }
    dend_2 { pt3dadd( 5.39844, -124.693, -10.1622, 0.83 ) }
    dend_2 { pt3dadd( 5.67228, -127.875, -10.2543, 0.83 ) }
    dend_2 { pt3dadd( 6.00947, -131.786, -10.188, 0.83 ) }
    dend_2 { pt3dadd( 6.24016, -137.416, -9.982, 0.83 ) }
    dend_2 { pt3dadd( 6.19795, -139.235, -9.92677, 0.83 ) }
    dend_2 { pt3dadd( 5.88572, -144.134, -9.80257, 0.83 ) }
    dend_2 { pt3dadd( 5.53287, -147.771, -9.64508, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_2 { pt3dadd( 5.11036, -150.69, -9.48468, 0.83 ) }
    dend_2 { pt3dadd( 4.46488, -153.986, -9.25352, 0.83 ) }
    dend_2 { pt3dadd( 3.50135, -158.032, -8.91606, 0.83 ) }
    dend_2 { pt3dadd( 2.37847, -162.71, -8.41002, 0.83 ) }
    dend_2 { pt3dadd( 1.38471, -166.669, -7.90351, 0.83 ) }
    dend_2 { pt3dadd( 1.10286, -167.71, -7.75678, 0.83 ) }
    dend_2 { pt3dadd( 0.389695, -170.634, -7.30469, 1.66 ) }
    dend_2 { pt3dadd( -0.251376, -173.872, -6.78538, 0.83 ) }
    dend_2 { pt3dadd( -0.568361, -175.645, -6.47852, 0.83 ) }
    dend_2 { pt3dadd( -1.23575, -179.937, -5.83981, 0.83 ) }
    dend_2 { pt3dadd( -1.53138, -182.114, -5.55753, 0.83 ) }
    dend_2 { pt3dadd( -1.76917, -184.683, -5.18804, 0.83 ) }
    dend_2 { pt3dadd( -2.04571, -189.243, -4.49142, 0.83 ) }
    dend_2 { pt3dadd( -2.10351, -191.844, -4.14257, 0.83 ) }
    dend_2 { pt3dadd( -2.13921, -194.935, -3.78668, 0.83 ) }
    dend_2 { pt3dadd( -2.14839, -198.945, -3.39573, 0.83 ) }
    dend_2 { pt3dadd( -2.25649, -203.12, -3.11042, 0.83 ) }
    dend_2 { pt3dadd( -2.57724, -208.645, -3.02109, 0.83 ) }
    dend_2 { pt3dadd( -2.79299, -211.749, -3.02205, 0.83 ) }
    dend_2 { pt3dadd( -3.12461, -215.326, -3.30568, 0.83 ) }
    dend_2 { pt3dadd( -3.38926, -217.299, -3.64727, 0.83 ) }
    dend_2 { pt3dadd( -3.94716, -220.494, -4.53083, 0.83 ) }
    dend_2 { pt3dadd( -4.76655, -223.281, -5.48506, 0.83 ) }
    dend_2 { pt3dadd( -6.34877, -227.83, -7.16001, 0.83 ) }
    dend_2 { pt3dadd( -8.68105, -233.457, -9.25636, 0.83 ) }
    dend_2 { pt3dadd( -10.1154, -236.71, -10.4483, 0.83 ) }
    dend_2 { pt3dadd( -11.6758, -240.034, -11.589, 0.55 ) }
    dend_2 { pt3dadd( -14.3988, -245.623, -13.3472, 0.55 ) }
    dend_2 { pt3dadd( -15.3568, -247.686, -13.8655, 0.55 ) }
    dend_2 { pt3dadd( -17.1357, -251.597, -14.5786, 0.55 ) }
    dend_2 { pt3dadd( -18.4555, -254.738, -14.6641, 0.55 ) }
    dend_2 { pt3dadd( -19.5396, -257.67, -14.6201, 0.55 ) }
    dend_2 { pt3dadd( -20.4365, -260.374, -14.5911, 0.55 ) }
    dend_2 { pt3dadd( -21.5235, -263.933, -14.7517, 0.55 ) }
    dend_2 { pt3dadd( -22.5514, -266.875, -14.9111, 1.38 ) }
    dend_2 { pt3dadd( -23.6633, -270.133, -14.9028, 0.83 ) }
    dend_2 { pt3dadd( -24.8305, -273.394, -14.9139, 0.55 ) }
    dend_2 { pt3dadd( -26.3107, -277.196, -14.964, 0.55 ) }
    dend_2 { pt3dadd( -27.6538, -280.049, -15.0703, 0.55 ) }
    dend_2 { pt3dadd( -28.9975, -282.485, -15.3151, 0.55 ) }
    dend_2 { pt3dadd( -31.0482, -286.623, -15.8832, 0.28 ) }
    dend_2 { pt3dadd( -31.7956, -288.424, -15.9119, 0.55 ) }
    // Section: dend_100, id: dend_100, parent: dend_98 (entry count 42/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( -56.6211, 115.043, 19.2193, 0.55 ) }
    dend_100 { pt3dadd( -57.9035, 116.136, 20.5944, 0.55 ) }
    dend_100 { pt3dadd( -59.2178, 117.355, 21.9191, 0.55 ) }
    dend_100 { pt3dadd( -61.8696, 120.102, 24.5635, 0.83 ) }
    dend_100 { pt3dadd( -63.4526, 121.967, 26.1678, 0.55 ) }
    dend_100 { pt3dadd( -64.7019, 123.628, 27.5063, 0.55 ) }
    dend_100 { pt3dadd( -66.0164, 125.691, 28.9622, 0.55 ) }
    dend_100 { pt3dadd( -66.3935, 126.565, 29.4113, 0.83 ) }
    dend_100 { pt3dadd( -66.8357, 128.172, 29.8821, 0.55 ) }
    dend_100 { pt3dadd( -67.0349, 129.555, 30.0149, 0.83 ) }
    dend_100 { pt3dadd( -67.1255, 130.946, 30.0647, 0.28 ) }
    dend_100 { pt3dadd( -67.2663, 133.51, 30.0316, 0.55 ) }
    dend_100 { pt3dadd( -67.476, 136.989, 29.9713, 0.55 ) }
    dend_100 { pt3dadd( -67.7353, 139.908, 29.9123, 0.55 ) }
    dend_100 { pt3dadd( -68.3292, 144.042, 29.8645, 0.55 ) }
    dend_100 { pt3dadd( -68.6141, 145.707, 29.8583, 0.55 ) }
    dend_100 { pt3dadd( -68.9607, 147.636, 29.9329, 0.55 ) }
    dend_100 { pt3dadd( -69.6447, 151.211, 30.2834, 0.55 ) }
    dend_100 { pt3dadd( -69.9854, 153.04, 30.5347, 0.55 ) }
    dend_100 { pt3dadd( -70.4179, 155.514, 30.9376, 0.55 ) }
    dend_100 { pt3dadd( -70.8248, 158.209, 31.3777, 0.55 ) }
    dend_100 { pt3dadd( -71.011, 161.465, 31.8434, 0.28 ) }
    dend_100 { pt3dadd( -70.9872, 162.694, 31.9832, 0.55 ) }
    dend_100 { pt3dadd( -70.906, 164.31, 32.0941, 0.28 ) }
    dend_100 { pt3dadd( -70.6917, 167.575, 32.2131, 0.55 ) }
    dend_100 { pt3dadd( -70.309, 171.375, 32.2361, 0.55 ) }
    dend_100 { pt3dadd( -70.0345, 174.47, 32.1782, 0.55 ) }
    dend_100 { pt3dadd( -69.65, 178.255, 31.9487, 0.55 ) }
    dend_100 { pt3dadd( -69.4335, 180.445, 31.8061, 0.28 ) }
    dend_100 { pt3dadd( -69.2121, 182.524, 31.6764, 0.28 ) }
    dend_100 { pt3dadd( -68.9595, 184.593, 31.5535, 0.55 ) }
    dend_100 { pt3dadd( -68.6018, 187.4, 31.3996, 0.55 ) }
    dend_100 { pt3dadd( -68.3358, 189.955, 31.3245, 0.28 ) }
    dend_100 { pt3dadd( -68.1124, 192.038, 31.3168, 0.83 ) }
    dend_100 { pt3dadd( -67.9658, 193.415, 31.3503, 0.55 ) }
    dend_100 { pt3dadd( -67.7239, 196.043, 31.6496, 0.55 ) }
    dend_100 { pt3dadd( -67.4813, 199.442, 32.1153, 0.55 ) }
    dend_100 { pt3dadd( -67.3738, 200.63, 32.3253, 0.83 ) }
    dend_100 { pt3dadd( -67.2248, 202.456, 32.7325, 0.28 ) }
    dend_100 { pt3dadd( -67.0337, 204.366, 33.2172, 1.66 ) }
    dend_100 { pt3dadd( -66.8263, 208.879, 34.5142, 0.55 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 83/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( -56.6211, 115.043, 19.2193, 0.55 ) }
    dend_99 { pt3dadd( -57.804, 116.839, 18.6189, 0.55 ) }
    dend_99 { pt3dadd( -58.6781, 118.112, 18.1481, 0.83 ) }
    dend_99 { pt3dadd( -60.0356, 120.035, 17.437, 0.55 ) }
    dend_99 { pt3dadd( -60.361, 120.486, 17.2658, 0.83 ) }
    dend_99 { pt3dadd( -61.0788, 121.526, 16.8931, 0.55 ) }
    dend_99 { pt3dadd( -62.3028, 123.286, 16.4428, 1.11 ) }
    dend_99 { pt3dadd( -63.1747, 124.449, 16.3321, 0.55 ) }
    dend_99 { pt3dadd( -63.7905, 125.28, 16.4141, 0.83 ) }
    dend_99 { pt3dadd( -64.4169, 126.223, 16.6637, 0.55 ) }
    dend_99 { pt3dadd( -65.4023, 127.823, 17.3056, 0.55 ) }
    dend_99 { pt3dadd( -66.6447, 130.011, 18.5621, 1.38 ) }
    dend_99 { pt3dadd( -67.5784, 131.941, 19.9556, 0.28 ) }
    dend_99 { pt3dadd( -67.6588, 132.122, 20.1098, 0.55 ) }
    dend_99 { pt3dadd( -68.284, 133.626, 21.4563, 0.55 ) }
    dend_99 { pt3dadd( -68.9589, 135.102, 22.8847, 0.28 ) }
    dend_99 { pt3dadd( -69.5714, 136.363, 24.0559, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_99 { pt3dadd( -70.9364, 138.975, 26.1096, 0.83 ) }
    dend_99 { pt3dadd( -71.9055, 140.63, 27.2895, 0.55 ) }
    dend_99 { pt3dadd( -72.4766, 141.542, 27.9574, 0.55 ) }
    dend_99 { pt3dadd( -73.682, 143.219, 29.239, 0.28 ) }
    dend_99 { pt3dadd( -74.7489, 144.593, 30.1116, 0.28 ) }
    dend_99 { pt3dadd( -76.0291, 146.0, 30.7891, 0.28 ) }
    dend_99 { pt3dadd( -76.4293, 146.309, 30.8598, 1.11 ) }
    dend_99 { pt3dadd( -80.0449, 151.016, 33.4101, 1.11 ) }
    dend_99 { pt3dadd( -83.3897, 155.899, 36.0148, 1.11 ) }
    dend_99 { pt3dadd( -86.7999, 160.866, 38.3714, 1.11 ) }
    dend_99 { pt3dadd( -90.0603, 166.256, 39.9123, 1.11 ) }
    dend_99 { pt3dadd( -92.3725, 172.337, 40.2629, 1.11 ) }
    // Section: dend_95, id: dend_95, parent: dend_93 (entry count 12/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -106.891, 155.871, -67.9007, 0.28 ) }
    dend_95 { pt3dadd( -107.721, 156.27, -68.977, 0.28 ) }
    dend_95 { pt3dadd( -108.205, 156.529, -69.5757, 0.55 ) }
    dend_95 { pt3dadd( -109.949, 157.77, -71.7181, 0.28 ) }
    dend_95 { pt3dadd( -111.371, 158.984, -73.6042, 1.11 ) }
    dend_95 { pt3dadd( -112.092, 159.813, -74.7571, 0.28 ) }
    dend_95 { pt3dadd( -112.722, 160.76, -75.9566, 0.55 ) }
    dend_95 { pt3dadd( -113.232, 162.038, -77.4236, 0.28 ) }
    dend_95 { pt3dadd( -113.482, 163.509, -78.8077, 0.28 ) }
    dend_95 { pt3dadd( -113.412, 164.696, -79.6773, 0.55 ) }
    dend_95 { pt3dadd( -113.056, 166.735, -81.0495, 0.28 ) }
    dend_95 { pt3dadd( -112.836, 167.679, -81.6174, 0.28 ) }
    dend_95 { pt3dadd( -112.477, 169.128, -82.3175, 0.83 ) }
    dend_95 { pt3dadd( -112.148, 170.547, -82.9574, 0.28 ) }
    dend_95 { pt3dadd( -111.918, 172.039, -83.5884, 0.28 ) }
    dend_95 { pt3dadd( -111.788, 173.733, -84.2116, 0.55 ) }
    dend_95 { pt3dadd( -111.719, 176.599, -85.2207, 0.28 ) }
    dend_95 { pt3dadd( -111.745, 179.26, -86.1464, 0.28 ) }
    dend_95 { pt3dadd( -111.848, 181.507, -86.9064, 0.28 ) }
    dend_95 { pt3dadd( -112.01, 184.318, -87.8489, 0.28 ) }
    dend_95 { pt3dadd( -112.13, 185.69, -88.2902, 0.55 ) }
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 33/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -106.891, 155.871, -67.9007, 0.28 ) }
    dend_94 { pt3dadd( -105.403, 159.163, -74.8707, 0.28 ) }
    dend_94 { pt3dadd( -105.238, 159.465, -75.4914, 0.55 ) }
    dend_94 { pt3dadd( -104.176, 161.219, -78.9471, 0.28 ) }
    dend_94 { pt3dadd( -103.916, 161.622, -79.7261, 0.55 ) }
    dend_94 { pt3dadd( -103.398, 162.374, -81.0875, 0.28 ) }
    dend_94 { pt3dadd( -102.375, 163.75, -83.4657, 0.83 ) }
    dend_94 { pt3dadd( -101.746, 164.514, -84.4624, 0.28 ) }
    dend_94 { pt3dadd( -101.361, 164.94, -84.9697, 0.28 ) }
    dend_94 { pt3dadd( -100.508, 165.912, -86.033, 0.55 ) }
    dend_94 { pt3dadd( -99.575, 167.053, -87.2129, 0.28 ) }
    dend_94 { pt3dadd( -98.8925, 167.997, -88.0759, 0.55 ) }
    dend_94 { pt3dadd( -97.9229, 169.557, -89.5315, 0.28 ) }
    dend_94 { pt3dadd( -97.3961, 170.507, -90.4781, 1.11 ) }
    dend_94 { pt3dadd( -96.0586, 173.037, -93.2693, 0.28 ) }
    dend_94 { pt3dadd( -95.6227, 173.95, -94.3108, 0.28 ) }
    dend_94 { pt3dadd( -95.2531, 174.827, -95.3667, 1.11 ) }
    dend_94 { pt3dadd( -93.9537, 178.384, -99.7946, 0.28 ) }
    dend_94 { pt3dadd( -93.7637, 178.979, -100.57, 0.55 ) }
    dend_94 { pt3dadd( -93.151, 181.088, -103.503, 0.28 ) }
    dend_94 { pt3dadd( -93.0058, 181.654, -104.321, 0.55 ) }
    dend_94 { pt3dadd( -92.8019, 182.699, -105.988, 0.55 ) }
    dend_94 { pt3dadd( -92.653, 183.989, -107.999, 0.28 ) }
    dend_94 { pt3dadd( -92.63, 184.838, -109.182, 0.83 ) }
    dend_94 { pt3dadd( -92.634, 187.297, -112.354, 0.28 ) }
    dend_94 { pt3dadd( -92.6397, 187.582, -112.697, 0.55 ) }
    dend_94 { pt3dadd( -92.6909, 191.461, -117.161, 0.28 ) }
    dend_94 { pt3dadd( -92.7239, 192.867, -118.746, 1.66 ) }
    dend_94 { pt3dadd( -92.7583, 194.738, -120.803, 0.28 ) }
    dend_94 { pt3dadd( -92.7434, 195.51, -121.654, 0.55 ) }
    dend_94 { pt3dadd( -92.6474, 197.665, -123.945, 0.28 ) }
    dend_94 { pt3dadd( -92.5976, 198.303, -124.639, 0.55 ) }
    dend_94 { pt3dadd( -92.2929, 200.871, -127.449, 0.28 ) }
    dend_94 { pt3dadd( -92.1155, 201.892, -128.731, 0.55 ) }
    dend_94 { pt3dadd( -91.8273, 203.296, -130.688, 0.55 ) }
    dend_94 { pt3dadd( -91.6333, 204.096, -131.921, 0.28 ) }
    dend_94 { pt3dadd( -91.5992, 204.214, -132.116, 0.55 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 70/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -3.80418, 78.9309, -53.7588, 0.55 ) }
    dend_90 { pt3dadd( -3.26144, 82.6427, -55.1999, 0.55 ) }
    dend_90 { pt3dadd( -2.64786, 85.496, -56.5885, 1.38 ) }
    dend_90 { pt3dadd( -1.6948, 88.9656, -58.3753, 0.55 ) }
    dend_90 { pt3dadd( -1.20825, 90.6251, -59.2956, 0.55 ) }
    dend_90 { pt3dadd( -0.334506, 93.3527, -60.873, 0.55 ) }
    dend_90 { pt3dadd( 1.24534, 97.7928, -63.6412, 0.55 ) }
    dend_90 { pt3dadd( 2.59562, 101.231, -66.2122, 0.55 ) }
    dend_90 { pt3dadd( 3.09987, 102.384, -67.1501, 0.55 ) }
    dend_90 { pt3dadd( 4.33074, 105.029, -69.4502, 0.83 ) }
    dend_90 { pt3dadd( 5.34864, 107.016, -71.2912, 0.55 ) }
    dend_90 { pt3dadd( 7.70636, 111.153, -75.3697, 1.94 ) }
    dend_90 { pt3dadd( 10.4154, 116.169, -80.544, 1.38 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 83/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -3.80418, 78.9309, -53.7588, 0.55 ) }
    dend_89 { pt3dadd( -4.49885, 81.2841, -56.3528, 0.55 ) }
    dend_89 { pt3dadd( -4.64371, 82.3163, -57.2131, 0.55 ) }
    dend_89 { pt3dadd( -4.79147, 86.2142, -60.0654, 0.55 ) }
    dend_89 { pt3dadd( -4.80252, 87.0392, -60.6585, 0.28 ) }
    dend_89 { pt3dadd( -4.83472, 89.4124, -62.3108, 0.55 ) }
    dend_89 { pt3dadd( -4.88266, 91.8296, -63.9463, 1.66 ) }
    dend_89 { pt3dadd( -4.81912, 95.734, -66.4215, 0.55 ) }
    dend_89 { pt3dadd( -4.74639, 98.18, -67.9233, 0.55 ) }
    dend_89 { pt3dadd( -4.71707, 99.6897, -68.8161, 0.28 ) }
    dend_89 { pt3dadd( -4.77911, 100.571, -69.4703, 0.55 ) }
    dend_89 { pt3dadd( -5.0141, 101.666, -70.4681, 0.28 ) }
    dend_89 { pt3dadd( -5.74544, 103.545, -72.6323, 0.55 ) }
    dend_89 { pt3dadd( -5.93254, 103.894, -73.0933, 0.28 ) }
    dend_89 { pt3dadd( -7.08997, 105.856, -75.6169, 1.11 ) }
    dend_89 { pt3dadd( -8.75697, 108.76, -79.0928, 0.28 ) }
    dend_89 { pt3dadd( -9.09317, 109.35, -79.7671, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_89 { pt3dadd( -10.6311, 111.995, -82.6378, 0.28 ) }
    dend_89 { pt3dadd( -11.3834, 113.315, -83.8685, 1.11 ) }
    dend_89 { pt3dadd( -12.2738, 115.05, -85.2823, 0.55 ) }
    dend_89 { pt3dadd( -12.7004, 115.968, -85.9366, 0.28 ) }
    dend_89 { pt3dadd( -12.8711, 116.357, -86.1806, 0.55 ) }
    dend_89 { pt3dadd( -13.8922, 118.887, -87.712, 0.28 ) }
    dend_89 { pt3dadd( -14.5883, 120.662, -88.6919, 1.11 ) }
    dend_89 { pt3dadd( -15.7976, 123.987, -90.4586, 0.28 ) }
    dend_89 { pt3dadd( -16.1702, 125.043, -91.1214, 0.55 ) }
    dend_89 { pt3dadd( -17.1211, 127.755, -92.9208, 0.28 ) }
    dend_89 { pt3dadd( -17.6302, 129.158, -93.9044, 0.83 ) }
    dend_89 { pt3dadd( -18.4605, 131.344, -95.6948, 0.28 ) }
    dend_89 { pt3dadd( -19.103, 132.982, -97.3482, 0.83 ) }
    dend_89 { pt3dadd( -20.6657, 136.93, -101.762, 0.28 ) }
    dend_89 { pt3dadd( -21.0425, 137.843, -102.898, 0.55 ) }
    dend_89 { pt3dadd( -21.553, 138.997, -104.482, 0.83 ) }
    dend_89 { pt3dadd( -22.9477, 141.859, -108.765, 0.55 ) }
    dend_89 { pt3dadd( -23.8189, 143.564, -111.527, 0.28 ) }
    dend_89 { pt3dadd( -24.0697, 144.007, -112.284, 0.55 ) }
    dend_89 { pt3dadd( -25.0265, 145.669, -114.832, 0.28 ) }
    dend_89 { pt3dadd( -25.636, 146.665, -116.328, 0.55 ) }
    dend_89 { pt3dadd( -26.3873, 147.867, -118.004, 0.28 ) }
    dend_89 { pt3dadd( -26.4664, 147.99, -118.179, 0.55 ) }
    dend_89 { pt3dadd( -27.6725, 149.855, -121.146, 0.28 ) }
    dend_89 { pt3dadd( -28.0057, 150.443, -122.29, 1.11 ) }
    dend_89 { pt3dadd( -28.668, 152.008, -125.757, 0.55 ) }
    dend_89 { pt3dadd( -29.0562, 153.105, -128.582, 0.83 ) }
    dend_89 { pt3dadd( -29.3557, 154.181, -131.424, 0.28 ) }
    dend_89 { pt3dadd( -29.4124, 154.389, -131.978, 0.55 ) }
    dend_89 { pt3dadd( -29.7465, 155.809, -135.712, 0.28 ) }
    dend_89 { pt3dadd( -29.9005, 156.455, -137.377, 0.83 ) }
    dend_89 { pt3dadd( -30.4105, 158.409, -141.996, 0.28 ) }
    dend_89 { pt3dadd( -30.6406, 159.132, -143.591, 0.55 ) }
    dend_89 { pt3dadd( -31.3188, 161.058, -147.445, 0.28 ) }
    dend_89 { pt3dadd( -31.4926, 161.616, -148.481, 0.83 ) }
    dend_89 { pt3dadd( -31.6749, 162.275, -149.569, 0.28 ) }
    dend_89 { pt3dadd( -31.8583, 163.057, -150.734, 0.55 ) }
    dend_89 { pt3dadd( -32.4568, 166.426, -155.233, 0.28 ) }
    dend_89 { pt3dadd( -32.6061, 167.352, -156.405, 1.38 ) }
    dend_89 { pt3dadd( -32.9841, 169.897, -159.326, 0.28 ) }
    dend_89 { pt3dadd( -33.1263, 170.787, -160.311, 0.83 ) }
    dend_89 { pt3dadd( -33.3599, 172.113, -161.667, 0.28 ) }
    dend_89 { pt3dadd( -33.7059, 173.783, -163.223, 0.55 ) }
    dend_89 { pt3dadd( -34.0418, 175.264, -164.407, 0.28 ) }
    dend_89 { pt3dadd( -34.1457, 175.649, -164.712, 0.55 ) }
    dend_89 { pt3dadd( -34.6899, 177.314, -166.014, 0.28 ) }
    dend_89 { pt3dadd( -34.9686, 178.178, -166.77, 0.55 ) }
    dend_89 { pt3dadd( -35.7532, 180.908, -169.365, 0.28 ) }
    dend_89 { pt3dadd( -35.8932, 181.558, -169.985, 0.55 ) }
    // Section: dend_86, id: dend_86, parent: dend_82 (entry count 49/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 38.5734, 22.1409, -21.386, 0.83 ) }
    dend_86 { pt3dadd( 39.0249, 22.3307, -21.8305, 0.83 ) }
    dend_86 { pt3dadd( 40.0823, 22.9696, -23.0883, 1.38 ) }
    dend_86 { pt3dadd( 42.4341, 24.6632, -26.4609, 0.55 ) }
    dend_86 { pt3dadd( 43.2639, 25.3146, -27.7453, 0.55 ) }
    dend_86 { pt3dadd( 44.4917, 26.2745, -29.6395, 0.55 ) }
    dend_86 { pt3dadd( 45.5983, 27.0939, -31.3854, 0.55 ) }
    dend_86 { pt3dadd( 48.2319, 29.008, -35.5882, 0.55 ) }
    dend_86 { pt3dadd( 50.0148, 30.2234, -38.2922, 0.83 ) }
    dend_86 { pt3dadd( 51.2192, 30.9842, -39.9993, 0.55 ) }
    dend_86 { pt3dadd( 52.3328, 31.6594, -41.494, 0.55 ) }
    dend_86 { pt3dadd( 54.0738, 32.5612, -43.6418, 0.55 ) }
    dend_86 { pt3dadd( 55.3575, 33.0045, -44.9857, 0.83 ) }
    dend_86 { pt3dadd( 57.3095, 33.4342, -46.5157, 0.55 ) }
    dend_86 { pt3dadd( 58.7759, 33.788, -47.5284, 0.55 ) }
    dend_86 { pt3dadd( 59.9029, 34.0878, -48.3895, 0.55 ) }
    dend_86 { pt3dadd( 60.609, 34.3097, -49.0385, 0.28 ) }
    dend_86 { pt3dadd( 61.8793, 34.7847, -50.341, 0.55 ) }
    dend_86 { pt3dadd( 63.7844, 35.5633, -52.5458, 1.11 ) }
    dend_86 { pt3dadd( 65.451, 36.3294, -54.7588, 0.55 ) }
    dend_86 { pt3dadd( 67.4773, 37.3303, -57.6563, 0.83 ) }
    dend_86 { pt3dadd( 69.1626, 38.2413, -60.2772, 0.83 ) }
    dend_86 { pt3dadd( 69.4524, 38.405, -60.7297, 0.83 ) }
    dend_86 { pt3dadd( 69.9783, 38.702, -61.5524, 0.83 ) }
    dend_86 { pt3dadd( 71.5732, 39.6603, -64.0282, 0.28 ) }
    dend_86 { pt3dadd( 72.7657, 40.525, -65.8493, 0.83 ) }
    dend_86 { pt3dadd( 74.0102, 41.6536, -67.655, 0.28 ) }
    dend_86 { pt3dadd( 74.7704, 42.3975, -68.6423, 0.28 ) }
    dend_86 { pt3dadd( 75.253, 42.8808, -69.1963, 0.28 ) }
    dend_86 { pt3dadd( 76.9114, 44.4607, -70.8233, 1.11 ) }
    dend_86 { pt3dadd( 79.6369, 46.8143, -72.88, 0.28 ) }
    dend_86 { pt3dadd( 80.1499, 47.2146, -73.2262, 0.28 ) }
    dend_86 { pt3dadd( 81.9143, 48.453, -74.3815, 0.83 ) }
    dend_86 { pt3dadd( 84.141, 49.8811, -75.8923, 0.55 ) }
    dend_86 { pt3dadd( 85.5856, 50.7702, -76.9569, 0.55 ) }
    dend_86 { pt3dadd( 86.8519, 51.5142, -77.8897, 0.55 ) }
    dend_86 { pt3dadd( 89.1278, 52.9398, -79.5682, 1.94 ) }
    dend_86 { pt3dadd( 91.5616, 54.7432, -81.5745, 0.55 ) }
    dend_86 { pt3dadd( 92.9156, 55.9191, -82.7796, 0.83 ) }
    dend_86 { pt3dadd( 94.852, 57.9306, -84.5594, 0.28 ) }
    dend_86 { pt3dadd( 95.418, 58.648, -85.1361, 0.28 ) }
    dend_86 { pt3dadd( 96.5802, 60.3089, -86.3531, 1.11 ) }
    dend_86 { pt3dadd( 98.0655, 62.6623, -87.8764, 0.28 ) }
    dend_86 { pt3dadd( 98.7949, 63.8708, -88.6124, 0.55 ) }
    dend_86 { pt3dadd( 100.101, 66.1371, -90.0523, 0.55 ) }
    dend_86 { pt3dadd( 101.415, 68.4524, -91.5887, 0.28 ) }
    dend_86 { pt3dadd( 101.79, 69.1187, -92.0803, 0.55 ) }
    dend_86 { pt3dadd( 102.753, 70.9608, -93.6126, 0.28 ) }
    dend_86 { pt3dadd( 103.69, 72.901, -95.3038, 0.55 ) }
    dend_86 { pt3dadd( 104.626, 75.0222, -97.2539, 0.83 ) }
    dend_86 { pt3dadd( 105.268, 76.5296, -98.5909, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_86 { pt3dadd( 105.463, 76.9751, -98.9744, 0.55 ) }
    dend_86 { pt3dadd( 106.605, 79.5699, -101.32, 0.28 ) }
    dend_86 { pt3dadd( 106.761, 79.8963, -101.651, 0.55 ) }
    dend_86 { pt3dadd( 107.864, 81.8707, -103.883, 0.28 ) }
    dend_86 { pt3dadd( 108.566, 82.8712, -105.152, 0.55 ) }
    dend_86 { pt3dadd( 109.607, 84.1885, -107.066, 0.28 ) }
    dend_86 { pt3dadd( 110.371, 85.0013, -108.388, 0.55 ) }
    dend_86 { pt3dadd( 112.109, 86.4052, -111.005, 0.28 ) }
    dend_86 { pt3dadd( 113.039, 86.9918, -112.223, 0.55 ) }
    dend_86 { pt3dadd( 114.784, 87.818, -114.087, 0.28 ) }
    dend_86 { pt3dadd( 115.758, 88.2834, -114.922, 0.55 ) }
    dend_86 { pt3dadd( 117.575, 89.1746, -115.996, 0.28 ) }
    dend_86 { pt3dadd( 118.99, 89.9656, -116.486, 0.55 ) }
    dend_86 { pt3dadd( 120.976, 91.2664, -116.708, 0.28 ) }
    dend_86 { pt3dadd( 123.009, 92.7087, -116.696, 0.55 ) }
    dend_86 { pt3dadd( 125.556, 94.5982, -116.322, 0.28 ) }
    dend_86 { pt3dadd( 125.742, 94.7465, -116.28, 0.55 ) }
    dend_86 { pt3dadd( 126.826, 95.8227, -115.965, 0.28 ) }
    dend_86 { pt3dadd( 127.175, 96.2753, -115.887, 0.55 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 19/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 38.5734, 22.1409, -21.386, 0.55 ) }
    dend_83 { pt3dadd( 40.7309, 22.166, -21.8015, 0.55 ) }
    dend_83 { pt3dadd( 43.6269, 22.0153, -21.9078, 0.83 ) }
    dend_83 { pt3dadd( 46.2773, 21.6686, -21.47, 0.83 ) }
    dend_83 { pt3dadd( 48.6378, 21.1484, -20.7885, 0.55 ) }
    dend_83 { pt3dadd( 50.1254, 20.7793, -20.1985, 0.55 ) }
    dend_83 { pt3dadd( 52.5651, 20.1133, -19.1212, 0.55 ) }
    dend_83 { pt3dadd( 55.7781, 19.0731, -17.3464, 0.83 ) }
    dend_83 { pt3dadd( 58.7829, 18.0457, -15.484, 0.83 ) }
    dend_83 { pt3dadd( 60.9113, 17.3566, -14.1216, 0.55 ) }
    dend_83 { pt3dadd( 63.7895, 16.5261, -12.311, 0.55 ) }
    dend_83 { pt3dadd( 67.665, 15.6463, -10.1751, 0.55 ) }
    dend_83 { pt3dadd( 69.5802, 15.3709, -9.37596, 0.83 ) }
    dend_83 { pt3dadd( 71.9783, 15.2031, -8.7305, 0.55 ) }
    dend_83 { pt3dadd( 73.7992, 15.182, -8.45758, 0.83 ) }
    dend_83 { pt3dadd( 77.0099, 15.3494, -8.21428, 0.55 ) }
    dend_83 { pt3dadd( 79.4613, 15.4579, -8.26078, 0.28 ) }
    dend_83 { pt3dadd( 82.3306, 15.5885, -8.48423, 0.83 ) }
    dend_83 { pt3dadd( 84.0814, 15.6762, -8.79358, 0.55 ) }
    dend_83 { pt3dadd( 86.4518, 15.832, -9.34461, 0.55 ) }
    dend_83 { pt3dadd( 88.9435, 15.9152, -10.024, 0.55 ) }
    dend_83 { pt3dadd( 92.2369, 15.8977, -11.0419, 0.55 ) }
    dend_83 { pt3dadd( 94.5581, 15.8417, -11.7494, 0.55 ) }
    dend_83 { pt3dadd( 99.6037, 15.5771, -13.2983, 0.55 ) }
    dend_83 { pt3dadd( 100.503, 15.5114, -13.6236, 0.55 ) }
    dend_83 { pt3dadd( 103.267, 15.3029, -14.7365, 0.55 ) }
    dend_83 { pt3dadd( 104.701, 15.1732, -15.3671, 0.55 ) }
    dend_83 { pt3dadd( 106.442, 15.0809, -16.1705, 0.28 ) }
    dend_83 { pt3dadd( 108.044, 14.8804, -16.9021, 0.55 ) }
    dend_83 { pt3dadd( 110.008, 14.3492, -17.5828, 0.83 ) }
    dend_83 { pt3dadd( 112.365, 13.6883, -18.475, 0.55 ) }
    // Section: dend_69, id: dend_69, parent: dend_59 (entry count 50/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 18.7254, 35.6152, -19.8472, 1.66 ) }
    dend_69 { pt3dadd( 19.0181, 35.5666, -19.8076, 1.66 ) }
    dend_69 { pt3dadd( 22.1097, 35.0529, -19.3887, 1.94 ) }
    dend_69 { pt3dadd( 26.0499, 34.3982, -18.8548, 1.38 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 54/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 18.7254, 35.6152, -19.8472, 0.83 ) }
    dend_60 { pt3dadd( 19.2086, 36.1646, -19.0972, 0.83 ) }
    dend_60 { pt3dadd( 19.5002, 36.4594, -18.5325, 0.83 ) }
    dend_60 { pt3dadd( 20.2799, 37.1333, -17.0424, 0.83 ) }
    dend_60 { pt3dadd( 21.5379, 38.1967, -14.6964, 0.83 ) }
    dend_60 { pt3dadd( 23.4668, 39.7814, -11.5365, 0.83 ) }
    dend_60 { pt3dadd( 23.8744, 40.1365, -10.8961, 1.11 ) }
    dend_60 { pt3dadd( 25.338, 41.4536, -8.65423, 0.83 ) }
    dend_60 { pt3dadd( 26.073, 42.093, -7.6614, 0.55 ) }
    dend_60 { pt3dadd( 26.6765, 42.6039, -6.97626, 0.55 ) }
    dend_60 { pt3dadd( 28.2784, 43.9379, -5.5612, 0.55 ) }
    dend_60 { pt3dadd( 29.4022, 44.9285, -4.84853, 0.55 ) }
    dend_60 { pt3dadd( 30.4556, 45.9435, -4.2602, 0.55 ) }
    dend_60 { pt3dadd( 31.7162, 47.217, -3.74806, 0.55 ) }
    dend_60 { pt3dadd( 33.2102, 48.7869, -3.06524, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 69/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -78.047, 105.584, -20.0354, 0.28 ) }
    dend_44 { pt3dadd( -79.3592, 107.345, -20.2246, 0.28 ) }
    dend_44 { pt3dadd( -79.8995, 107.952, -20.3041, 0.55 ) }
    dend_44 { pt3dadd( -80.865, 108.917, -20.4357, 0.28 ) }
    dend_44 { pt3dadd( -82.5848, 110.664, -20.6429, 0.55 ) }
    dend_44 { pt3dadd( -83.9825, 112.02, -20.7957, 0.55 ) }
    dend_44 { pt3dadd( -85.8992, 113.799, -20.9962, 0.83 ) }
    dend_44 { pt3dadd( -87.9242, 115.478, -21.1956, 0.55 ) }
    dend_44 { pt3dadd( -90.7241, 117.62, -21.4748, 0.55 ) }
    dend_44 { pt3dadd( -92.9779, 119.159, -21.7026, 0.55 ) }
    dend_44 { pt3dadd( -95.8831, 120.873, -21.9963, 0.55 ) }
    dend_44 { pt3dadd( -96.9626, 121.388, -22.1187, 0.55 ) }
    dend_44 { pt3dadd( -98.3775, 121.867, -22.3162, 0.55 ) }
    dend_44 { pt3dadd( -99.5838, 122.103, -22.5948, 0.55 ) }
    dend_44 { pt3dadd( -101.103, 122.156, -23.191, 0.28 ) }
    dend_44 { pt3dadd( -102.214, 122.132, -23.8864, 0.55 ) }
    dend_44 { pt3dadd( -103.579, 122.216, -25.1226, 0.28 ) }
    dend_44 { pt3dadd( -104.705, 122.382, -26.3435, 0.55 ) }
    dend_44 { pt3dadd( -106.209, 122.708, -28.2805, 0.55 ) }
    dend_44 { pt3dadd( -107.885, 123.129, -30.6835, 0.55 ) }
    dend_44 { pt3dadd( -109.912, 123.705, -33.7255, 0.55 ) }
    dend_44 { pt3dadd( -111.634, 124.234, -36.3328, 0.55 ) }
    dend_44 { pt3dadd( -112.725, 124.588, -37.9434, 1.11 ) }
    dend_44 { pt3dadd( -114.796, 125.253, -40.8539, 0.28 ) }
    dend_44 { pt3dadd( -114.931, 125.288, -41.0167, 0.55 ) }
    dend_44 { pt3dadd( -116.071, 125.514, -42.0999, 0.28 ) }
    dend_44 { pt3dadd( -116.882, 125.661, -42.6732, 0.55 ) }
    dend_44 { pt3dadd( -118.115, 125.92, -43.3551, 0.28 ) }
    dend_44 { pt3dadd( -118.903, 126.246, -43.7842, 0.83 ) }
    dend_44 { pt3dadd( -120.701, 127.375, -44.7553, 0.28 ) }
    dend_44 { pt3dadd( -121.34, 128.102, -45.324, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( -122.487, 129.863, -46.6256, 0.28 ) }
    dend_44 { pt3dadd( -122.936, 130.711, -47.241, 0.83 ) }
    dend_44 { pt3dadd( -124.011, 133.068, -48.9345, 0.28 ) }
    dend_44 { pt3dadd( -124.366, 133.958, -49.5693, 0.83 ) }
    dend_44 { pt3dadd( -126.072, 139.105, -53.1377, 0.28 ) }
    dend_44 { pt3dadd( -126.419, 140.274, -53.938, 0.83 ) }
    dend_44 { pt3dadd( -126.858, 141.879, -54.9912, 0.28 ) }
    dend_44 { pt3dadd( -127.032, 142.539, -55.4402, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 8/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -78.047, 105.584, -20.0354, 0.55 ) }
    dend_43 { pt3dadd( -80.6273, 109.363, -20.1536, 0.55 ) }
    dend_43 { pt3dadd( -83.3945, 113.585, -20.3976, 0.55 ) }
    dend_43 { pt3dadd( -86.3253, 118.054, -20.8217, 0.83 ) }
    dend_43 { pt3dadd( -87.9419, 120.555, -21.1003, 0.55 ) }
    dend_43 { pt3dadd( -89.5544, 123.041, -21.4084, 0.83 ) }
    dend_43 { pt3dadd( -91.231, 125.639, -21.7652, 0.55 ) }
    dend_43 { pt3dadd( -92.1445, 127.149, -22.0343, 0.83 ) }
    dend_43 { pt3dadd( -93.246, 128.944, -22.4175, 0.55 ) }
    dend_43 { pt3dadd( -94.8314, 131.436, -23.0108, 0.55 ) }
    dend_43 { pt3dadd( -95.9432, 133.225, -23.3709, 0.83 ) }
    dend_43 { pt3dadd( -97.5122, 135.642, -23.807, 0.55 ) }
    dend_43 { pt3dadd( -98.6116, 137.267, -24.0256, 1.11 ) }
    dend_43 { pt3dadd( -99.9857, 139.434, -24.1835, 0.55 ) }
    dend_43 { pt3dadd( -100.559, 140.396, -24.128, 0.83 ) }
    dend_43 { pt3dadd( -101.886, 142.653, -23.7738, 0.28 ) }
    dend_43 { pt3dadd( -102.495, 143.789, -23.4656, 0.55 ) }
    dend_43 { pt3dadd( -103.287, 145.428, -22.8448, 0.28 ) }
    dend_43 { pt3dadd( -104.415, 147.874, -21.4716, 0.83 ) }
    dend_43 { pt3dadd( -105.866, 151.266, -19.2346, 0.55 ) }
    dend_43 { pt3dadd( -106.177, 152.104, -18.6466, 0.55 ) }
    dend_43 { pt3dadd( -106.842, 154.059, -17.2431, 0.83 ) }
    dend_43 { pt3dadd( -107.494, 155.963, -15.8057, 0.83 ) }
    dend_43 { pt3dadd( -108.757, 159.745, -12.7494, 0.55 ) }
    dend_43 { pt3dadd( -109.106, 160.876, -11.8605, 0.55 ) }
    dend_43 { pt3dadd( -109.71, 162.985, -10.3971, 0.55 ) }
    dend_43 { pt3dadd( -110.036, 164.051, -9.67147, 0.55 ) }
    dend_43 { pt3dadd( -110.764, 166.269, -8.30007, 0.83 ) }
    dend_43 { pt3dadd( -112.063, 169.712, -6.46376, 0.28 ) }
    dend_43 { pt3dadd( -112.819, 171.544, -5.63873, 1.66 ) }
    dend_43 { pt3dadd( -114.064, 174.247, -4.45429, 0.83 ) }
    dend_43 { pt3dadd( -115.303, 176.7, -3.43032, 0.28 ) }
    dend_43 { pt3dadd( -116.974, 179.926, -2.1978, 0.55 ) }
    dend_43 { pt3dadd( -118.443, 182.575, -1.32193, 0.55 ) }
    dend_43 { pt3dadd( -119.075, 183.66, -1.03455, 0.28 ) }
    dend_43 { pt3dadd( -119.645, 184.71, -0.751454, 0.55 ) }
    dend_43 { pt3dadd( -119.983, 185.493, -0.543944, 0.28 ) }
    dend_43 { pt3dadd( -120.135, 186.052, -0.394644, 0.55 ) }
    dend_43 { pt3dadd( -120.201, 187.732, 0.0671813, 0.28 ) }
    dend_43 { pt3dadd( -119.87, 190.166, 0.703421, 0.55 ) }
    dend_43 { pt3dadd( -119.272, 192.995, 1.3816, 0.28 ) }
    dend_43 { pt3dadd( -118.953, 194.224, 1.63462, 0.28 ) }
    dend_43 { pt3dadd( -118.381, 196.428, 2.01175, 0.55 ) }
    dend_43 { pt3dadd( -117.559, 199.67, 2.4218, 0.28 ) }
    dend_43 { pt3dadd( -117.037, 201.85, 2.59842, 0.28 ) }
    dend_43 { pt3dadd( -116.81, 203.051, 2.63146, 0.55 ) }
    dend_43 { pt3dadd( -116.598, 205.119, 2.57619, 0.28 ) }
    dend_43 { pt3dadd( -116.65, 207.812, 2.40224, 0.55 ) }
    dend_43 { pt3dadd( -116.944, 210.05, 2.19767, 0.28 ) }
    dend_43 { pt3dadd( -117.18, 211.084, 2.09229, 0.55 ) }
    dend_43 { pt3dadd( -117.547, 212.435, 1.93218, 0.28 ) }
    dend_43 { pt3dadd( -117.969, 214.099, 1.73303, 1.11 ) }
    dend_43 { pt3dadd( -118.556, 216.573, 1.46186, 0.55 ) }
    dend_43 { pt3dadd( -118.689, 217.221, 1.41902, 0.83 ) }
    dend_43 { pt3dadd( -118.98, 218.736, 1.37579, 0.28 ) }
    dend_43 { pt3dadd( -119.266, 220.508, 1.41229, 0.55 ) }
    dend_43 { pt3dadd( -119.853, 224.414, 1.66657, 0.28 ) }
    dend_43 { pt3dadd( -120.076, 225.879, 1.82952, 0.83 ) }
    dend_43 { pt3dadd( -120.594, 228.716, 2.27107, 0.28 ) }
    dend_43 { pt3dadd( -120.87, 229.93, 2.50628, 0.55 ) }
    dend_43 { pt3dadd( -121.388, 231.832, 2.9477, 0.28 ) }
    dend_43 { pt3dadd( -121.583, 232.518, 3.14076, 0.55 ) }
    dend_43 { pt3dadd( -122.242, 234.824, 3.66073, 0.28 ) }
    dend_43 { pt3dadd( -122.423, 235.648, 3.78615, 0.55 ) }
    dend_43 { pt3dadd( -123.138, 239.776, 4.16088, 0.28 ) }
    dend_43 { pt3dadd( -123.263, 240.701, 4.21997, 0.83 ) }
    dend_43 { pt3dadd( -123.723, 245.383, 4.38152, 0.28 ) }
    dend_43 { pt3dadd( -123.861, 249.469, 4.35026, 2.77 ) }
    dend_43 { pt3dadd( -123.8, 252.506, 4.1695, 0.28 ) }
    dend_43 { pt3dadd( -123.657, 253.681, 4.04012, 0.55 ) }
    dend_43 { pt3dadd( -123.358, 254.836, 3.83067, 0.28 ) }
    dend_43 { pt3dadd( -123.04, 255.83, 3.62095, 0.55 ) }
    dend_43 { pt3dadd( -121.592, 259.146, 2.70889, 0.28 ) }
    dend_43 { pt3dadd( -121.049, 260.159, 2.50101, 0.55 ) }
    dend_43 { pt3dadd( -118.914, 263.187, 1.48744, 0.28 ) }
    dend_43 { pt3dadd( -117.871, 264.368, 0.992778, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 84/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -61.3594, 180.5, -5.48001, 0.55 ) }
    dend_41 { pt3dadd( -62.9914, 180.871, -6.23058, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 86/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -61.3594, 180.5, -5.48001, 0.55 ) }
    dend_40 { pt3dadd( -61.4927, 183.048, -5.84697, 0.55 ) }
    dend_40 { pt3dadd( -61.6, 184.821, -6.08715, 1.94 ) }
    dend_40 { pt3dadd( -61.7843, 187.517, -6.43072, 0.55 ) }
    dend_40 { pt3dadd( -61.8761, 188.73, -6.59281, 0.55 ) }
    dend_40 { pt3dadd( -62.1246, 191.472, -6.96238, 0.28 ) }
    dend_40 { pt3dadd( -62.2528, 192.679, -7.14103, 0.55 ) }
    dend_40 { pt3dadd( -62.4189, 193.82, -7.3376, 0.28 ) }
    dend_40 { pt3dadd( -62.5028, 194.263, -7.40949, 0.55 ) }
    dend_40 { pt3dadd( -62.9752, 195.973, -7.85606, 0.28 ) }
    dend_40 { pt3dadd( -63.2915, 196.821, -8.15381, 0.55 ) }
    dend_40 { pt3dadd( -63.761, 198.187, -8.92135, 0.28 ) }
    dend_40 { pt3dadd( -64.3439, 200.13, -10.2905, 0.55 ) }
    dend_40 { pt3dadd( -64.7075, 201.677, -11.5865, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_40 { pt3dadd( -64.9344, 203.98, -13.8098, 0.28 ) }
    dend_40 { pt3dadd( -64.928, 204.974, -14.8562, 1.38 ) }
    dend_40 { pt3dadd( -64.3475, 209.086, -19.4135, 0.55 ) }
    dend_40 { pt3dadd( -64.0745, 210.209, -20.6679, 0.55 ) }
    dend_40 { pt3dadd( -63.5005, 211.796, -22.4365, 0.83 ) }
    dend_40 { pt3dadd( -62.407, 214.456, -25.2886, 0.28 ) }
    dend_40 { pt3dadd( -62.1539, 215.077, -25.88, 0.83 ) }
    dend_40 { pt3dadd( -61.213, 217.671, -28.1131, 0.28 ) }
    dend_40 { pt3dadd( -60.7847, 219.252, -29.2767, 0.83 ) }
    dend_40 { pt3dadd( -60.0034, 224.035, -32.6037, 0.28 ) }
    dend_40 { pt3dadd( -60.0235, 225.077, -33.2802, 0.83 ) }
    dend_40 { pt3dadd( -60.4949, 226.717, -34.4366, 0.83 ) }
    dend_40 { pt3dadd( -61.4313, 228.528, -35.9502, 0.28 ) }
    dend_40 { pt3dadd( -61.7679, 228.927, -36.3113, 0.83 ) }
    dend_40 { pt3dadd( -63.4631, 230.257, -37.7433, 0.28 ) }
    dend_40 { pt3dadd( -64.3671, 230.675, -38.2823, 0.55 ) }
    dend_40 { pt3dadd( -66.7267, 231.676, -40.0978, 0.28 ) }
    dend_40 { pt3dadd( -67.6586, 232.122, -41.2033, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -67.5226, 25.0961, -48.3042, 1.38 ) }
    dend_33 { pt3dadd( -68.1209, 25.153, -48.421, 1.38 ) }
    dend_33 { pt3dadd( -71.0325, 25.7653, -48.9691, 0.83 ) }
    dend_33 { pt3dadd( -73.2456, 26.4859, -49.6987, 0.83 ) }
    dend_33 { pt3dadd( -76.6105, 27.7451, -50.9947, 0.83 ) }
    dend_33 { pt3dadd( -80.3196, 29.1312, -52.6089, 0.83 ) }
    dend_33 { pt3dadd( -82.6221, 29.9916, -53.611, 0.55 ) }
    dend_33 { pt3dadd( -84.9749, 30.9634, -54.6294, 1.38 ) }
    dend_33 { pt3dadd( -89.1405, 33.0171, -56.5113, 0.83 ) }
    dend_33 { pt3dadd( -90.8979, 34.0929, -57.4689, 0.83 ) }
    dend_33 { pt3dadd( -92.9879, 35.5941, -59.0855, 1.11 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 29/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -67.5226, 25.0961, -48.3042, 0.83 ) }
    dend_32 { pt3dadd( -68.6502, 25.9938, -50.6177, 0.83 ) }
    dend_32 { pt3dadd( -70.0266, 27.8443, -54.6809, 0.28 ) }
    dend_32 { pt3dadd( -70.4068, 28.3766, -56.0122, 0.83 ) }
    dend_32 { pt3dadd( -71.0105, 29.1844, -57.9863, 0.28 ) }
    dend_32 { pt3dadd( -71.2447, 29.5055, -58.7075, 0.83 ) }
    dend_32 { pt3dadd( -72.2398, 30.755, -61.7822, 0.28 ) }
    dend_32 { pt3dadd( -72.6607, 31.4226, -63.4388, 0.83 ) }
    dend_32 { pt3dadd( -73.5537, 33.0963, -67.2356, 0.28 ) }
    dend_32 { pt3dadd( -74.0219, 33.6453, -68.6725, 0.83 ) }
    dend_32 { pt3dadd( -74.6129, 34.1689, -70.0712, 0.83 ) }
    dend_32 { pt3dadd( -76.3927, 35.3757, -73.6865, 0.28 ) }
    dend_32 { pt3dadd( -76.8972, 35.6657, -74.5921, 0.83 ) }
    dend_32 { pt3dadd( -77.8448, 36.1042, -76.2113, 0.83 ) }
    dend_32 { pt3dadd( -80.5509, 37.418, -80.7201, 0.28 ) }
    dend_32 { pt3dadd( -81.2983, 37.7526, -82.0178, 0.55 ) }
    dend_32 { pt3dadd( -83.3793, 38.7071, -85.6255, 0.28 ) }
    dend_32 { pt3dadd( -83.7823, 38.8982, -86.3163, 0.83 ) }
    dend_32 { pt3dadd( -86.0438, 39.9835, -90.2072, 0.28 ) }
    dend_32 { pt3dadd( -86.9846, 40.4167, -92.0372, 1.11 ) }
    dend_32 { pt3dadd( -88.7382, 41.3038, -95.779, 0.28 ) }
    dend_32 { pt3dadd( -89.3529, 41.5109, -97.1107, 0.55 ) }
    dend_32 { pt3dadd( -90.9709, 41.8738, -100.567, 0.28 ) }
    dend_32 { pt3dadd( -91.8296, 42.0624, -102.389, 0.83 ) }
    dend_32 { pt3dadd( -94.8975, 42.7447, -108.894, 0.55 ) }
    dend_32 { pt3dadd( -95.8101, 42.9581, -110.774, 0.55 ) }
    dend_32 { pt3dadd( -99.1343, 43.7756, -117.416, 0.83 ) }
    dend_32 { pt3dadd( -101.745, 44.4991, -122.525, 0.55 ) }
    dend_32 { pt3dadd( -103.196, 45.0018, -125.337, 0.55 ) }
    dend_32 { pt3dadd( -106.214, 46.2709, -131.181, 1.66 ) }
    dend_32 { pt3dadd( -108.224, 47.4173, -134.857, 0.28 ) }
    dend_32 { pt3dadd( -108.792, 47.8262, -135.885, 0.55 ) }
    dend_32 { pt3dadd( -110.471, 49.3863, -138.817, 0.28 ) }
    dend_32 { pt3dadd( -111.053, 49.9626, -139.762, 0.55 ) }
    dend_32 { pt3dadd( -113.694, 52.4895, -143.644, 0.28 ) }
    dend_32 { pt3dadd( -114.958, 53.7094, -145.125, 0.83 ) }
    dend_32 { pt3dadd( -116.192, 54.816, -146.336, 0.28 ) }
    dend_32 { pt3dadd( -116.416, 55.0128, -146.529, 0.55 ) }
    dend_32 { pt3dadd( -118.712, 56.9118, -148.212, 0.28 ) }
    dend_32 { pt3dadd( -119.761, 57.6417, -148.976, 1.11 ) }
    dend_32 { pt3dadd( -123.14, 59.7841, -151.325, 0.28 ) }
    dend_32 { pt3dadd( -123.98, 60.2393, -151.961, 0.55 ) }
    dend_32 { pt3dadd( -125.309, 60.9004, -153.016, 0.28 ) }
    dend_32 { pt3dadd( -126.607, 61.5784, -154.074, 0.55 ) }
    dend_32 { pt3dadd( -131.247, 64.0425, -158.018, 0.28 ) }
    dend_32 { pt3dadd( -131.923, 64.4146, -158.676, 0.55 ) }
    dend_32 { pt3dadd( -133.917, 65.6138, -160.854, 0.28 ) }
    dend_32 { pt3dadd( -134.37, 65.9248, -161.441, 0.55 ) }
    dend_32 { pt3dadd( -135.451, 66.8001, -163.131, 0.28 ) }
    dend_32 { pt3dadd( -135.451, 66.8001, -163.131, 0.55 ) }
    dend_32 { pt3dadd( -136.351, 69.29, -166.162, 0.28 ) }
    dend_32 { pt3dadd( -136.561, 70.2519, -167.286, 0.55 ) }
    dend_32 { pt3dadd( -136.833, 72.6296, -169.86, 0.28 ) }
    dend_32 { pt3dadd( -136.88, 73.9419, -171.122, 0.55 ) }
    dend_32 { pt3dadd( -136.822, 76.4883, -173.26, 0.28 ) }
    dend_32 { pt3dadd( -136.811, 77.2591, -173.89, 0.55 ) }
    dend_32 { pt3dadd( -136.774, 79.0409, -175.243, 0.28 ) }
    dend_32 { pt3dadd( -136.779, 80.0399, -176.094, 0.55 ) }
    dend_32 { pt3dadd( -136.838, 83.2147, -178.975, 0.28 ) }
    dend_32 { pt3dadd( -136.92, 84.7177, -180.644, 0.83 ) }
    dend_32 { pt3dadd( -137.19, 87.8743, -184.972, 0.28 ) }
    dend_32 { pt3dadd( -137.202, 88.0588, -185.265, 0.55 ) }
    dend_32 { pt3dadd( -137.27, 89.9595, -188.863, 0.28 ) }
    dend_32 { pt3dadd( -137.312, 90.5159, -190.246, 0.55 ) }
    dend_32 { pt3dadd( -137.436, 91.3759, -193.092, 0.28 ) }
    dend_32 { pt3dadd( -137.482, 91.5733, -193.868, 0.55 ) }
    dend_32 { pt3dadd( -137.55, 92.1117, -195.785, 0.28 ) }
    dend_32 { pt3dadd( -137.615, 92.3247, -196.491, 0.55 ) }
    dend_32 { pt3dadd( -138.015, 93.4099, -199.848, 0.28 ) }
    dend_32 { pt3dadd( -138.196, 93.8629, -201.24, 0.55 ) }
    dend_32 { pt3dadd( -138.632, 95.0935, -204.6, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_32 { pt3dadd( -138.822, 95.6446, -205.971, 1.11 ) }
    dend_32 { pt3dadd( -139.621, 97.9041, -211.401, 0.28 ) }
    dend_32 { pt3dadd( -139.775, 98.4117, -212.588, 0.55 ) }
    dend_32 { pt3dadd( -140.194, 100.491, -217.056, 0.28 ) }
    dend_32 { pt3dadd( -140.334, 101.259, -218.697, 0.28 ) }
    dend_32 { pt3dadd( -140.383, 102.01, -220.145, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 6/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -113.486, 39.3929, 27.5473, 0.55 ) }
    dend_30 { pt3dadd( -118.217, 37.9481, 23.8359, 0.55 ) }
    dend_30 { pt3dadd( -125.427, 35.8013, 15.2897, 0.55 ) }
    dend_30 { pt3dadd( -132.509, 32.8893, 6.8611, 0.55 ) }
    dend_30 { pt3dadd( -140.393, 31.9636, -1.29971, 0.55 ) }
    dend_30 { pt3dadd( -149.535, 30.0236, -7.80298, 0.55 ) }
    dend_30 { pt3dadd( -158.355, 30.0946, -15.0081, 0.55 ) }
    dend_30 { pt3dadd( -167.15, 30.2071, -22.2418, 0.55 ) }
    dend_30 { pt3dadd( -175.821, 31.632, -29.5046, 0.55 ) }
    dend_30 { pt3dadd( -185.105, 35.683, -34.8097, 0.55 ) }
    dend_30 { pt3dadd( -194.348, 41.0668, -38.9165, 0.55 ) }
    dend_30 { pt3dadd( -204.011, 46.3167, -42.1059, 0.55 ) }
    dend_30 { pt3dadd( -214.009, 49.9676, -46.2494, 0.55 ) }
    dend_30 { pt3dadd( -223.682, 52.8347, -51.5856, 0.55 ) }
    dend_30 { pt3dadd( -234.2, 53.7888, -55.8495, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 21/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -113.486, 39.3929, 27.5473, 0.83 ) }
    dend_27 { pt3dadd( -114.667, 40.2539, 27.167, 0.83 ) }
    dend_27 { pt3dadd( -116.636, 41.6889, 26.5333, 0.55 ) }
    dend_27 { pt3dadd( -117.499, 42.3186, 26.2552, 0.55 ) }
    dend_27 { pt3dadd( -120.161, 44.259, 25.3982, 0.55 ) }
    dend_27 { pt3dadd( -124.911, 50.153, 23.6205, 0.55 ) }
    dend_27 { pt3dadd( -130.149, 55.311, 21.1618, 0.55 ) }
    dend_27 { pt3dadd( -136.385, 59.56, 19.5173, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 29/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 56.7214, -145.621, -2.9351, 1.11 ) }
    dend_12 { pt3dadd( 58.5243, -150.919, -4.67343, 1.11 ) }
    dend_12 { pt3dadd( 59.634, -154.496, -5.80288, 1.11 ) }
    dend_12 { pt3dadd( 60.5966, -157.865, -6.82517, 1.11 ) }
    dend_12 { pt3dadd( 61.2954, -160.441, -7.57679, 1.11 ) }
    dend_12 { pt3dadd( 62.3541, -164.775, -8.83783, 1.11 ) }
    dend_12 { pt3dadd( 63.1462, -168.241, -9.73063, 1.11 ) }
    dend_12 { pt3dadd( 64.1082, -172.931, -10.5391, 0.83 ) }
    dend_12 { pt3dadd( 64.6285, -175.687, -10.9725, 0.83 ) }
    dend_12 { pt3dadd( 64.9693, -177.331, -11.205, 0.83 ) }
    dend_12 { pt3dadd( 65.4318, -179.604, -11.5117, 0.83 ) }
    dend_12 { pt3dadd( 66.2427, -184.02, -12.038, 0.83 ) }
    dend_12 { pt3dadd( 67.0192, -187.891, -12.3894, 0.83 ) }
    dend_12 { pt3dadd( 67.5829, -190.278, -12.601, 0.83 ) }
    dend_12 { pt3dadd( 68.1404, -192.326, -12.7796, 0.55 ) }
    dend_12 { pt3dadd( 69.2745, -196.18, -13.0699, 0.83 ) }
    dend_12 { pt3dadd( 70.1449, -198.847, -13.3335, 0.83 ) }
    dend_12 { pt3dadd( 71.3077, -202.739, -13.99, 0.83 ) }
    dend_12 { pt3dadd( 72.1276, -205.85, -14.6212, 0.83 ) }
    dend_12 { pt3dadd( 72.7953, -208.661, -15.2589, 0.83 ) }
    dend_12 { pt3dadd( 73.9651, -213.5, -16.5727, 0.83 ) }
    dend_12 { pt3dadd( 74.9701, -217.324, -17.7247, 0.83 ) }
    dend_12 { pt3dadd( 75.8957, -221.126, -18.9818, 0.83 ) }
    dend_12 { pt3dadd( 76.5164, -224.052, -20.0591, 0.83 ) }
    dend_12 { pt3dadd( 77.1508, -227.529, -21.4744, 0.83 ) }
    dend_12 { pt3dadd( 77.7545, -230.978, -23.0472, 0.83 ) }
    dend_12 { pt3dadd( 78.7458, -236.712, -25.9152, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 56/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 56.7214, -145.621, -2.9351, 0.55 ) }
    dend_11 { pt3dadd( 57.6279, -147.289, -3.31023, 0.55 ) }
    dend_11 { pt3dadd( 58.165, -148.254, -3.55013, 0.55 ) }
    dend_11 { pt3dadd( 59.1629, -150.225, -3.99897, 1.11 ) }
    dend_11 { pt3dadd( 60.247, -152.406, -4.367, 0.55 ) }
    dend_11 { pt3dadd( 61.072, -154.077, -4.59369, 1.38 ) }
    dend_11 { pt3dadd( 61.9477, -155.85, -4.83428, 1.38 ) }
    dend_11 { pt3dadd( 62.9912, -158.071, -5.08198, 0.55 ) }
    dend_11 { pt3dadd( 63.6892, -159.535, -5.22937, 0.55 ) }
    dend_11 { pt3dadd( 65.0303, -162.316, -5.43694, 0.28 ) }
    dend_11 { pt3dadd( 65.6175, -163.612, -5.44595, 0.83 ) }
    dend_11 { pt3dadd( 67.2456, -171.489, -6.45602, 0.83 ) }
    dend_11 { pt3dadd( 67.7972, -179.418, -8.03635, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 69/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 126.15, -95.5526, -2.75811, 0.83 ) }
    dend_9 { pt3dadd( 132.53, -96.0996, 2.41173, 0.83 ) }
    dend_9 { pt3dadd( 139.576, -95.849, 6.65765, 0.83 ) }
    dend_9 { pt3dadd( 145.449, -95.6265, 12.421, 0.83 ) }
    dend_9 { pt3dadd( 151.481, -94.9317, 17.981, 0.83 ) }
    dend_9 { pt3dadd( 156.839, -93.7233, 24.1205, 0.83 ) }
    dend_9 { pt3dadd( 161.92, -93.9844, 30.5899, 0.83 ) }
    dend_9 { pt3dadd( 167.274, -95.243, 36.714, 0.83 ) }
    dend_9 { pt3dadd( 173.137, -98.4342, 41.5672, 0.83 ) }
    dend_9 { pt3dadd( 178.265, -101.115, 47.4393, 0.83 ) }
    dend_9 { pt3dadd( 182.76, -103.169, 54.0282, 0.83 ) }
    dend_9 { pt3dadd( 187.062, -104.025, 60.9915, 0.83 ) }
    dend_9 { pt3dadd( 190.232, -104.908, 68.5346, 0.83 ) }
    dend_9 { pt3dadd( 194.587, -106.785, 75.2671, 0.83 ) }
    dend_9 { pt3dadd( 199.609, -108.309, 81.6105, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 84/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 126.15, -95.5526, -2.75811, 0.55 ) }
    dend_8 { pt3dadd( 137.704, -101.929, -4.56448, 0.83 ) }
    dend_8 { pt3dadd( 148.944, -109.119, -4.56753, 0.83 ) }
    dend_8 { pt3dadd( 160.778, -115.191, -5.15402, 0.83 ) }
    dend_8 { pt3dadd( 171.471, -122.968, -7.03803, 0.83 ) }
    dend_8 { pt3dadd( 182.818, -129.124, -10.296, 0.83 ) }
    dend_8 { pt3dadd( 193.312, -135.615, -15.308, 0.83 ) }
    dend_8 { pt3dadd( 203.727, -140.497, -21.9553, 0.83 ) }
    dend_8 { pt3dadd( 213.04, -145.941, -29.7248, 0.83 ) }
    dend_8 { pt3dadd( 222.061, -152.82, -36.7143, 0.83 ) }
    dend_8 { pt3dadd( 230.066, -160.297, -44.3265, 0.83 ) }
    dend_8 { pt3dadd( 237.821, -167.824, -52.1466, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 96/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -69.8737, -95.4864, 28.9673, 0.55 ) }
    dend_5 { pt3dadd( -77.1582, -101.017, 32.0394, 0.55 ) }
    dend_5 { pt3dadd( -83.5436, -107.127, 35.9519, 0.55 ) }
    dend_5 { pt3dadd( -90.6125, -113.249, 38.3947, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( -98.7362, -117.941, 40.5553, 0.55 ) }
    dend_5 { pt3dadd( -106.684, -122.928, 42.7369, 0.55 ) }
    dend_5 { pt3dadd( -114.372, -128.402, 44.7342, 0.55 ) }
    dend_5 { pt3dadd( -121.899, -134.098, 46.7501, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 4/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -69.8737, -95.4864, 28.9673, 0.55 ) }
    dend_4 { pt3dadd( -78.2952, -101.717, 32.0005, 0.55 ) }
    dend_4 { pt3dadd( -85.5888, -108.974, 35.7059, 0.55 ) }
    dend_4 { pt3dadd( -93.8415, -114.346, 40.3419, 0.55 ) }
    dend_4 { pt3dadd( -101.478, -120.097, 45.5646, 0.55 ) }
    dend_4 { pt3dadd( -109.174, -126.431, 49.9968, 0.55 ) }
    dend_4 { pt3dadd( -118.09, -131.33, 53.836, 0.55 ) }
    dend_4 { pt3dadd( -126.349, -137.509, 57.3749, 0.55 ) }
    // Section: dend_102, id: dend_102, parent: dend_100 (entry count 12/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( -66.8263, 208.879, 34.5142, 0.55 ) }
    dend_102 { pt3dadd( -66.7319, 210.396, 34.651, 0.55 ) }
    dend_102 { pt3dadd( -66.5726, 212.954, 34.8819, 0.83 ) }
    dend_102 { pt3dadd( -64.8408, 222.766, 37.1859, 0.83 ) }
    dend_102 { pt3dadd( -64.5135, 232.492, 40.3185, 0.83 ) }
    dend_102 { pt3dadd( -64.0971, 242.025, 43.9674, 0.83 ) }
    // Section: dend_101, id: dend_101, parent: dend_100 (entry count 18/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( -66.8263, 208.879, 34.5142, 0.55 ) }
    dend_101 { pt3dadd( -64.8275, 208.619, 34.9632, 0.55 ) }
    dend_101 { pt3dadd( -56.5064, 209.05, 38.4604, 0.55 ) }
    dend_101 { pt3dadd( -48.2996, 208.063, 42.1059, 0.55 ) }
    // Section: dend_92, id: dend_92, parent: dend_90 (entry count 22/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 10.4154, 116.169, -80.544, 0.55 ) }
    dend_92 { pt3dadd( 9.689, 117.709, -80.2235, 0.55 ) }
    dend_92 { pt3dadd( 8.95609, 118.977, -79.9159, 0.55 ) }
    dend_92 { pt3dadd( 7.99913, 120.409, -79.4144, 0.28 ) }
    dend_92 { pt3dadd( 6.96208, 121.777, -78.8534, 0.55 ) }
    dend_92 { pt3dadd( 5.44812, 123.647, -78.0431, 0.55 ) }
    dend_92 { pt3dadd( 4.46268, 124.751, -77.443, 0.55 ) }
    dend_92 { pt3dadd( 3.18643, 126.039, -76.5725, 0.83 ) }
    dend_92 { pt3dadd( 1.21532, 127.796, -75.0923, 0.55 ) }
    dend_92 { pt3dadd( 0.04442, 128.745, -74.2456, 0.28 ) }
    dend_92 { pt3dadd( -0.189583, 128.919, -74.0614, 0.55 ) }
    dend_92 { pt3dadd( -2.68187, 130.727, -72.0646, 0.28 ) }
    dend_92 { pt3dadd( -3.19016, 131.089, -71.6258, 0.55 ) }
    dend_92 { pt3dadd( -5.06492, 132.383, -69.9318, 0.28 ) }
    dend_92 { pt3dadd( -6.45432, 133.349, -68.6952, 1.66 ) }
    dend_92 { pt3dadd( -10.3016, 136.118, -65.0941, 0.28 ) }
    dend_92 { pt3dadd( -11.4766, 136.99, -63.9736, 0.55 ) }
    dend_92 { pt3dadd( -14.0615, 139.016, -61.4886, 0.55 ) }
    dend_92 { pt3dadd( -15.4434, 140.148, -60.1177, 0.28 ) }
    dend_92 { pt3dadd( -16.5932, 141.187, -58.9307, 0.83 ) }
    dend_92 { pt3dadd( -18.9551, 143.737, -56.191, 0.28 ) }
    dend_92 { pt3dadd( -19.1942, 144.116, -55.8832, 0.55 ) }
    dend_92 { pt3dadd( -19.699, 145.247, -55.154, 0.28 ) }
    dend_92 { pt3dadd( -20.0077, 146.114, -54.7199, 0.55 ) }
    dend_92 { pt3dadd( -20.5409, 147.717, -54.034, 0.28 ) }
    dend_92 { pt3dadd( -20.9684, 148.999, -53.4977, 0.83 ) }
    dend_92 { pt3dadd( -21.7879, 151.1, -52.5212, 0.55 ) }
    dend_92 { pt3dadd( -23.1521, 154.009, -50.9903, 0.55 ) }
    dend_92 { pt3dadd( -24.3381, 156.243, -49.7636, 0.83 ) }
    dend_92 { pt3dadd( -25.1048, 157.616, -49.0568, 0.28 ) }
    dend_92 { pt3dadd( -26.3444, 159.659, -48.1022, 0.55 ) }
    dend_92 { pt3dadd( -28.4706, 163.046, -46.537, 0.28 ) }
    dend_92 { pt3dadd( -29.3439, 164.435, -45.9623, 0.55 ) }
    dend_92 { pt3dadd( -30.3969, 166.263, -45.3138, 0.55 ) }
    dend_92 { pt3dadd( -31.6154, 168.761, -44.5951, 0.55 ) }
    dend_92 { pt3dadd( -32.6946, 171.088, -44.0287, 0.55 ) }
    dend_92 { pt3dadd( -33.9971, 174.018, -43.5033, 0.28 ) }
    dend_92 { pt3dadd( -34.5936, 175.509, -43.303, 0.55 ) }
    dend_92 { pt3dadd( -35.6732, 178.264, -42.7599, 0.28 ) }
    dend_92 { pt3dadd( -36.1825, 179.585, -42.3831, 0.28 ) }
    dend_92 { pt3dadd( -36.7548, 181.164, -41.81, 0.28 ) }
    dend_92 { pt3dadd( -37.0309, 182.287, -41.3894, 0.55 ) }
    dend_92 { pt3dadd( -37.2596, 183.568, -40.9576, 0.28 ) }
    dend_92 { pt3dadd( -37.3794, 184.578, -40.5588, 0.55 ) }
    dend_92 { pt3dadd( -37.4478, 186.256, -39.7707, 0.28 ) }
    dend_92 { pt3dadd( -37.4661, 187.036, -39.3798, 0.55 ) }
    dend_92 { pt3dadd( -37.3956, 188.66, -38.5914, 0.28 ) }
    dend_92 { pt3dadd( -37.3025, 189.976, -37.9498, 0.28 ) }
    dend_92 { pt3dadd( -37.174, 191.56, -37.1629, 0.55 ) }
    dend_92 { pt3dadd( -36.9927, 193.907, -35.9938, 0.28 ) }
    dend_92 { pt3dadd( -36.89, 195.541, -35.2267, 0.28 ) }
    dend_92 { pt3dadd( -36.8355, 197.985, -34.1145, 0.83 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 74/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 10.4154, 116.169, -80.544, 0.55 ) }
    dend_91 { pt3dadd( 11.4101, 119.372, -83.4313, 0.55 ) }
    dend_91 { pt3dadd( 11.9088, 120.92, -85.0219, 1.38 ) }
    dend_91 { pt3dadd( 12.6223, 123.244, -87.6046, 0.28 ) }
    dend_91 { pt3dadd( 12.8991, 124.122, -88.663, 0.55 ) }
    dend_91 { pt3dadd( 13.4275, 125.936, -90.9083, 0.55 ) }
    dend_91 { pt3dadd( 14.5796, 129.448, -95.5707, 0.28 ) }
    dend_91 { pt3dadd( 14.8121, 130.097, -96.5584, 0.83 ) }
    dend_91 { pt3dadd( 15.2684, 131.05, -98.2633, 0.83 ) }
    dend_91 { pt3dadd( 15.9472, 132.425, -100.843, 0.28 ) }
    dend_91 { pt3dadd( 16.2144, 132.921, -101.855, 0.55 ) }
    dend_91 { pt3dadd( 17.7925, 135.881, -108.036, 0.28 ) }
    dend_91 { pt3dadd( 18.0676, 136.468, -109.188, 0.55 ) }
    dend_91 { pt3dadd( 19.61, 139.587, -115.314, 0.28 ) }
    dend_91 { pt3dadd( 19.9975, 140.371, -116.85, 1.38 ) }
    dend_91 { pt3dadd( 21.2858, 143.345, -122.577, 0.28 ) }
    dend_91 { pt3dadd( 21.5314, 144.044, -123.884, 0.28 ) }
    dend_91 { pt3dadd( 21.6468, 144.729, -125.028, 0.83 ) }
    dend_91 { pt3dadd( 21.9721, 147.651, -129.428, 0.28 ) }
    dend_91 { pt3dadd( 22.0207, 148.436, -130.443, 0.55 ) }
    dend_91 { pt3dadd( 22.1222, 149.981, -132.296, 0.28 ) }
    dend_91 { pt3dadd( 22.254, 151.938, -134.502, 0.83 ) }
    dend_91 { pt3dadd( 22.5411, 155.294, -138.168, 0.28 ) }
    dend_91 { pt3dadd( 22.9542, 159.178, -142.081, 1.11 ) }
    dend_91 { pt3dadd( 23.2819, 161.582, -144.323, 0.28 ) }
    dend_91 { pt3dadd( 23.4199, 162.176, -144.894, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_91 { pt3dadd( 24.4869, 165.299, -147.839, 0.28 ) }
    dend_91 { pt3dadd( 25.0982, 166.56, -149.088, 0.28 ) }
    dend_91 { pt3dadd( 26.0241, 168.061, -150.663, 1.66 ) }
    dend_91 { pt3dadd( 27.6271, 170.267, -153.168, 0.55 ) }
    dend_91 { pt3dadd( 30.162, 173.336, -156.84, 0.28 ) }
    dend_91 { pt3dadd( 31.3459, 174.693, -158.453, 0.83 ) }
    dend_91 { pt3dadd( 34.2879, 177.989, -162.292, 0.28 ) }
    dend_91 { pt3dadd( 35.3199, 179.156, -163.699, 0.55 ) }
    dend_91 { pt3dadd( 37.2465, 181.539, -166.456, 0.28 ) }
    dend_91 { pt3dadd( 37.8697, 182.447, -167.355, 0.28 ) }
    dend_91 { pt3dadd( 38.8941, 184.463, -168.957, 0.28 ) }
    dend_91 { pt3dadd( 39.286, 185.598, -169.685, 0.83 ) }
    dend_91 { pt3dadd( 39.6973, 187.791, -170.568, 0.28 ) }
    dend_91 { pt3dadd( 39.9294, 189.972, -171.201, 0.28 ) }
    dend_91 { pt3dadd( 39.975, 192.007, -171.6, 1.66 ) }
    dend_91 { pt3dadd( 39.9495, 195.113, -172.116, 0.28 ) }
    dend_91 { pt3dadd( 39.9827, 196.531, -172.327, 0.55 ) }
    dend_91 { pt3dadd( 40.0693, 197.787, -172.515, 0.28 ) }
    dend_91 { pt3dadd( 40.2269, 198.888, -172.66, 0.55 ) }
    dend_91 { pt3dadd( 40.3753, 200.018, -172.739, 0.28 ) }
    dend_91 { pt3dadd( 40.4657, 201.048, -172.742, 0.83 ) }
    dend_91 { pt3dadd( 40.5301, 204.414, -172.16, 0.28 ) }
    dend_91 { pt3dadd( 40.5161, 205.536, -171.863, 0.55 ) }
    dend_91 { pt3dadd( 40.4843, 207.565, -171.165, 0.55 ) }
    dend_91 { pt3dadd( 40.4732, 210.708, -169.867, 0.28 ) }
    dend_91 { pt3dadd( 40.4716, 211.748, -169.346, 0.55 ) }
    dend_91 { pt3dadd( 40.4993, 214.296, -167.891, 0.28 ) }
    dend_91 { pt3dadd( 40.5347, 216.333, -166.66, 0.55 ) }
    dend_91 { pt3dadd( 40.587, 217.382, -165.984, 0.28 ) }
    dend_91 { pt3dadd( 40.6466, 218.397, -165.337, 0.55 ) }
    dend_91 { pt3dadd( 40.9009, 220.613, -163.963, 0.28 ) }
    dend_91 { pt3dadd( 41.2103, 222.741, -162.639, 0.28 ) }
    dend_91 { pt3dadd( 41.4439, 224.118, -161.813, 0.55 ) }
    dend_91 { pt3dadd( 42.2699, 228.545, -159.264, 0.28 ) }
    dend_91 { pt3dadd( 42.4747, 229.562, -158.723, 0.55 ) }
    dend_91 { pt3dadd( 42.8331, 231.358, -157.806, 0.28 ) }
    dend_91 { pt3dadd( 43.1762, 233.133, -156.987, 0.28 ) }
    dend_91 { pt3dadd( 43.3073, 233.864, -156.674, 0.55 ) }
    dend_91 { pt3dadd( 43.8729, 236.798, -155.66, 0.28 ) }
    dend_91 { pt3dadd( 44.2938, 239.106, -155.019, 0.28 ) }
    dend_91 { pt3dadd( 44.5826, 240.718, -154.568, 0.55 ) }
    dend_91 { pt3dadd( 44.7227, 241.665, -154.314, 0.28 ) }
    dend_91 { pt3dadd( 44.9251, 243.205, -153.883, 0.28 ) }
    dend_91 { pt3dadd( 45.2115, 246.062, -153.044, 0.28 ) }
    dend_91 { pt3dadd( 45.2729, 249.03, -152.104, 0.55 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 45/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 112.365, 13.6883, -18.475, 0.28 ) }
    dend_85 { pt3dadd( 115.0, 15.7669, -17.5129, 0.28 ) }
    dend_85 { pt3dadd( 116.013, 16.5661, -17.143, 0.55 ) }
    dend_85 { pt3dadd( 118.165, 18.263, -16.3576, 0.28 ) }
    dend_85 { pt3dadd( 118.963, 18.8922, -16.0664, 0.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 50/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 112.365, 13.6883, -18.475, 0.55 ) }
    dend_84 { pt3dadd( 114.426, 13.2217, -18.5256, 0.55 ) }
    dend_84 { pt3dadd( 116.023, 12.8228, -18.4994, 0.55 ) }
    dend_84 { pt3dadd( 117.632, 12.4323, -18.4802, 0.83 ) }
    dend_84 { pt3dadd( 119.24, 12.057, -18.4702, 0.55 ) }
    dend_84 { pt3dadd( 121.301, 11.5371, -18.4475, 0.55 ) }
    dend_84 { pt3dadd( 122.76, 11.1485, -18.4299, 0.28 ) }
    dend_84 { pt3dadd( 124.39, 10.7568, -18.3995, 0.83 ) }
    dend_84 { pt3dadd( 126.504, 10.1982, -18.2424, 0.55 ) }
    dend_84 { pt3dadd( 126.96, 10.0477, -18.1564, 0.83 ) }
    dend_84 { pt3dadd( 128.316, 9.5585, -17.7607, 0.28 ) }
    dend_84 { pt3dadd( 128.608, 9.45454, -17.6475, 0.55 ) }
    dend_84 { pt3dadd( 129.796, 9.07603, -17.1204, 0.28 ) }
    dend_84 { pt3dadd( 131.695, 8.59643, -16.1708, 0.55 ) }
    dend_84 { pt3dadd( 134.071, 8.08558, -14.9161, 0.55 ) }
    dend_84 { pt3dadd( 135.129, 7.9073, -14.3765, 0.83 ) }
    dend_84 { pt3dadd( 137.299, 7.6626, -13.3282, 0.28 ) }
    dend_84 { pt3dadd( 137.78, 7.62006, -13.1145, 0.55 ) }
    dend_84 { pt3dadd( 139.379, 7.48861, -12.4982, 0.28 ) }
    dend_84 { pt3dadd( 140.405, 7.4951, -12.3007, 0.55 ) }
    dend_84 { pt3dadd( 141.692, 7.67892, -12.2441, 0.28 ) }
    dend_84 { pt3dadd( 142.157, 7.76196, -12.2675, 0.55 ) }
    dend_84 { pt3dadd( 143.145, 7.9613, -12.4027, 0.28 ) }
    dend_84 { pt3dadd( 144.034, 8.15855, -12.565, 0.55 ) }
    dend_84 { pt3dadd( 147.977, 9.23721, -13.5814, 0.28 ) }
    dend_84 { pt3dadd( 149.356, 9.72959, -14.0164, 0.55 ) }
    dend_84 { pt3dadd( 150.448, 10.206, -14.4541, 0.55 ) }
    // Section: dend_75, id: dend_75, parent: dend_69 (entry count 77/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 26.0499, 34.3982, -18.8548, 0.83 ) }
    dend_75 { pt3dadd( 26.9139, 35.4966, -21.2914, 0.83 ) }
    dend_75 { pt3dadd( 27.8216, 36.9157, -24.0956, 0.83 ) }
    dend_75 { pt3dadd( 30.7022, 42.2984, -34.3351, 0.83 ) }
    dend_75 { pt3dadd( 31.5212, 44.1373, -37.6038, 0.83 ) }
    dend_75 { pt3dadd( 32.1354, 45.8654, -40.5745, 1.11 ) }
    dend_75 { pt3dadd( 32.5646, 47.3964, -43.0872, 0.83 ) }
    dend_75 { pt3dadd( 32.8731, 48.7731, -45.3301, 0.83 ) }
    dend_75 { pt3dadd( 33.0307, 50.2453, -47.487, 0.55 ) }
    dend_75 { pt3dadd( 32.857, 52.0213, -49.8005, 0.55 ) }
    dend_75 { pt3dadd( 32.6689, 53.5891, -52.0908, 0.55 ) }
    dend_75 { pt3dadd( 32.4897, 55.6159, -55.3619, 0.83 ) }
    dend_75 { pt3dadd( 32.4023, 57.3325, -58.3521, 0.28 ) }
    dend_75 { pt3dadd( 32.4329, 58.2784, -60.0504, 0.83 ) }
    dend_75 { pt3dadd( 32.7013, 60.8113, -64.4248, 0.55 ) }
    dend_75 { pt3dadd( 32.951, 62.6348, -67.5634, 0.55 ) }
    dend_75 { pt3dadd( 33.2647, 64.5233, -70.7045, 0.55 ) }
    dend_75 { pt3dadd( 33.6287, 66.617, -73.8806, 0.83 ) }
    dend_75 { pt3dadd( 33.7915, 68.0322, -75.5998, 0.55 ) }
    dend_75 { pt3dadd( 33.9798, 69.3312, -77.0518, 0.83 ) }
    dend_75 { pt3dadd( 34.3963, 72.1513, -79.625, 0.55 ) }
    dend_75 { pt3dadd( 34.6227, 74.6881, -81.6812, 1.11 ) }
    dend_75 { pt3dadd( 34.8499, 77.6776, -83.642, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 35.1932, 86.08, -87.5368, 0.55 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 1/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 26.0499, 34.3982, -18.8548, 1.11 ) }
    dend_70 { pt3dadd( 27.8493, 35.6359, -19.1196, 1.11 ) }
    dend_70 { pt3dadd( 29.6645, 36.7478, -19.4764, 1.11 ) }
    dend_70 { pt3dadd( 31.9929, 38.2445, -19.9395, 1.11 ) }
    dend_70 { pt3dadd( 33.902, 39.544, -20.3284, 0.83 ) }
    dend_70 { pt3dadd( 35.2682, 40.3865, -20.6699, 0.83 ) }
    dend_70 { pt3dadd( 38.5616, 42.1694, -21.5609, 0.83 ) }
    dend_70 { pt3dadd( 39.8092, 42.7808, -21.9455, 0.83 ) }
    dend_70 { pt3dadd( 42.1108, 43.8158, -22.7048, 0.83 ) }
    dend_70 { pt3dadd( 44.3218, 44.8138, -23.4934, 0.83 ) }
    dend_70 { pt3dadd( 47.1472, 46.2178, -24.5437, 0.83 ) }
    dend_70 { pt3dadd( 48.534, 47.0347, -25.0479, 0.83 ) }
    dend_70 { pt3dadd( 50.3749, 48.2059, -25.5965, 0.55 ) }
    dend_70 { pt3dadd( 52.7202, 49.5879, -26.267, 1.11 ) }
    dend_70 { pt3dadd( 54.4464, 50.4954, -26.7328, 0.55 ) }
    dend_70 { pt3dadd( 55.338, 50.9846, -26.9295, 0.55 ) }
    dend_70 { pt3dadd( 56.2018, 51.5118, -27.0658, 0.55 ) }
    dend_70 { pt3dadd( 57.1926, 52.1182, -27.2016, 0.55 ) }
    dend_70 { pt3dadd( 58.6494, 52.8028, -27.4755, 0.55 ) }
    dend_70 { pt3dadd( 60.4697, 53.5392, -27.9201, 0.55 ) }
    dend_70 { pt3dadd( 62.0983, 54.2004, -28.3617, 0.55 ) }
    dend_70 { pt3dadd( 63.7676, 54.9674, -28.8081, 0.55 ) }
    dend_70 { pt3dadd( 66.0107, 56.1921, -29.4688, 0.55 ) }
    dend_70 { pt3dadd( 69.1014, 58.2011, -30.4952, 0.55 ) }
    dend_70 { pt3dadd( 71.1774, 59.7066, -31.222, 0.83 ) }
    dend_70 { pt3dadd( 72.509, 60.7454, -31.6803, 0.55 ) }
    dend_70 { pt3dadd( 74.4483, 62.2213, -32.2934, 0.83 ) }
    dend_70 { pt3dadd( 76.9119, 64.1826, -32.991, 0.55 ) }
    dend_70 { pt3dadd( 78.4039, 65.3873, -33.3702, 0.55 ) }
    dend_70 { pt3dadd( 79.9718, 66.638, -33.6547, 1.38 ) }
    dend_70 { pt3dadd( 81.5582, 67.7511, -33.8845, 0.55 ) }
    dend_70 { pt3dadd( 83.4926, 68.953, -34.1309, 0.55 ) }
    dend_70 { pt3dadd( 86.0036, 70.4148, -34.4975, 0.55 ) }
    dend_70 { pt3dadd( 87.9888, 71.6301, -34.8725, 0.55 ) }
    dend_70 { pt3dadd( 89.4271, 72.5506, -35.2266, 0.55 ) }
    dend_70 { pt3dadd( 90.8382, 73.5663, -35.69, 0.55 ) }
    dend_70 { pt3dadd( 92.4645, 74.7229, -36.4673, 0.55 ) }
    dend_70 { pt3dadd( 94.66, 76.3153, -37.8658, 1.11 ) }
    dend_70 { pt3dadd( 96.9568, 78.0016, -39.6544, 0.55 ) }
    dend_70 { pt3dadd( 97.8565, 78.6848, -40.4122, 0.55 ) }
    dend_70 { pt3dadd( 99.5382, 79.9232, -41.8343, 1.66 ) }
    dend_70 { pt3dadd( 102.654, 81.9606, -44.2807, 0.83 ) }
    dend_70 { pt3dadd( 105.076, 83.3208, -45.9458, 0.55 ) }
    dend_70 { pt3dadd( 107.161, 84.4149, -47.15, 0.55 ) }
    dend_70 { pt3dadd( 108.458, 85.0737, -47.7636, 0.55 ) }
    dend_70 { pt3dadd( 110.285, 85.9433, -48.5244, 0.55 ) }
    dend_70 { pt3dadd( 112.689, 86.9703, -49.2774, 0.83 ) }
    dend_70 { pt3dadd( 114.889, 87.9849, -49.6881, 2.77 ) }
    dend_70 { pt3dadd( 117.5, 89.1612, -50.0696, 0.55 ) }
    dend_70 { pt3dadd( 118.318, 89.5334, -50.2001, 0.83 ) }
    dend_70 { pt3dadd( 120.605, 90.7166, -50.6578, 0.28 ) }
    dend_70 { pt3dadd( 122.056, 91.5765, -51.0277, 0.55 ) }
    dend_70 { pt3dadd( 123.915, 92.8077, -51.5761, 1.11 ) }
    dend_70 { pt3dadd( 126.033, 94.233, -52.199, 0.55 ) }
    dend_70 { pt3dadd( 127.042, 94.9387, -52.5073, 0.55 ) }
    dend_70 { pt3dadd( 128.479, 96.0851, -52.9566, 1.38 ) }
    dend_70 { pt3dadd( 130.112, 97.6202, -53.4683, 0.55 ) }
    dend_70 { pt3dadd( 131.188, 98.6683, -53.9119, 0.83 ) }
    // Section: dend_68, id: dend_68, parent: dend_60 (entry count 59/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 33.2102, 48.7869, -3.06524, 0.55 ) }
    dend_68 { pt3dadd( 33.4837, 50.9017, -2.35152, 0.55 ) }
    dend_68 { pt3dadd( 33.6925, 52.5152, -1.80697, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 62/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 33.2102, 48.7869, -3.06524, 0.55 ) }
    dend_61 { pt3dadd( 34.2182, 49.3319, -2.18158, 0.55 ) }
    dend_61 { pt3dadd( 35.2369, 49.8332, -1.34642, 0.55 ) }
    dend_61 { pt3dadd( 37.3888, 51.1801, 0.515945, 0.55 ) }
    dend_61 { pt3dadd( 38.8456, 51.9719, 1.86237, 0.55 ) }
    dend_61 { pt3dadd( 39.5784, 52.3095, 2.50959, 0.55 ) }
    dend_61 { pt3dadd( 41.8041, 53.1816, 4.33012, 0.55 ) }
    dend_61 { pt3dadd( 42.6103, 53.4275, 4.92925, 0.55 ) }
    dend_61 { pt3dadd( 45.4373, 53.972, 6.77159, 0.55 ) }
    dend_61 { pt3dadd( 48.4869, 54.3813, 8.42045, 0.55 ) }
    dend_61 { pt3dadd( 50.2962, 54.5148, 9.38983, 0.55 ) }
    dend_61 { pt3dadd( 51.9284, 54.5502, 10.2032, 0.55 ) }
    dend_61 { pt3dadd( 53.4767, 54.5073, 10.8552, 0.55 ) }
    dend_61 { pt3dadd( 55.3055, 54.3478, 11.5278, 0.55 ) }
    dend_61 { pt3dadd( 57.0641, 53.9919, 11.9454, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 77/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -92.9879, 35.5941, -59.0855, 0.55 ) }
    dend_35 { pt3dadd( -94.8504, 35.7241, -61.9778, 0.55 ) }
    dend_35 { pt3dadd( -96.7071, 35.7545, -64.6443, 0.55 ) }
    dend_35 { pt3dadd( -98.5068, 35.7968, -67.2136, 0.55 ) }
    dend_35 { pt3dadd( -99.141, 35.8161, -68.1274, 0.55 ) }
    dend_35 { pt3dadd( -100.086, 35.8392, -69.4766, 1.11 ) }
    dend_35 { pt3dadd( -101.56, 35.9067, -71.6581, 0.28 ) }
    dend_35 { pt3dadd( -102.675, 36.002, -73.2404, 0.83 ) }
    dend_35 { pt3dadd( -103.97, 36.0997, -75.0815, 0.83 ) }
    dend_35 { pt3dadd( -105.586, 36.2417, -77.5621, 0.28 ) }
    dend_35 { pt3dadd( -106.303, 36.3149, -78.7716, 0.83 ) }
    dend_35 { pt3dadd( -108.255, 36.451, -82.4133, 0.28 ) }
    dend_35 { pt3dadd( -108.677, 36.4577, -83.2389, 0.28 ) }
    dend_35 { pt3dadd( -109.761, 36.4118, -85.3069, 0.83 ) }
    dend_35 { pt3dadd( -111.815, 36.151, -89.0278, 0.28 ) }
    dend_35 { pt3dadd( -112.341, 36.0543, -89.9093, 0.55 ) }
    dend_35 { pt3dadd( -114.814, 35.4492, -93.7035, 0.28 ) }
    dend_35 { pt3dadd( -116.41, 34.9324, -95.8745, 1.11 ) }
    dend_35 { pt3dadd( -117.461, 34.5929, -97.2471, 0.55 ) }
    dend_35 { pt3dadd( -117.932, 34.4493, -97.8393, 0.83 ) }
    dend_35 { pt3dadd( -119.015, 34.1835, -99.1525, 0.55 ) }
    dend_35 { pt3dadd( -119.58, 34.0787, -99.8854, 0.55 ) }
    dend_35 { pt3dadd( -121.877, 33.787, -103.133, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_35 { pt3dadd( -124.778, 33.5278, -107.545, 1.11 ) }
    dend_35 { pt3dadd( -126.393, 33.4305, -110.237, 0.28 ) }
    dend_35 { pt3dadd( -126.886, 33.4121, -111.125, 0.55 ) }
    dend_35 { pt3dadd( -128.616, 33.3999, -114.554, 0.28 ) }
    dend_35 { pt3dadd( -129.336, 33.4375, -116.064, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 5/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -92.9879, 35.5941, -59.0855, 0.28 ) }
    dend_34 { pt3dadd( -94.7116, 37.4705, -59.0328, 0.28 ) }
    dend_34 { pt3dadd( -95.2736, 38.0271, -59.0485, 0.55 ) }
    dend_34 { pt3dadd( -96.1823, 38.8893, -59.1016, 0.28 ) }
    dend_34 { pt3dadd( -97.2696, 39.9513, -59.3027, 0.55 ) }
    dend_34 { pt3dadd( -99.0206, 41.6365, -59.7469, 0.28 ) }
    dend_34 { pt3dadd( -99.6386, 42.231, -60.0349, 0.55 ) }
    dend_34 { pt3dadd( -101.653, 44.193, -61.2173, 0.28 ) }
    dend_34 { pt3dadd( -102.498, 44.9861, -61.7712, 0.83 ) }
    dend_34 { pt3dadd( -104.477, 46.7914, -63.2473, 0.28 ) }
    dend_34 { pt3dadd( -105.322, 47.5718, -63.9501, 0.83 ) }
    dend_34 { pt3dadd( -108.423, 50.4331, -66.7601, 0.28 ) }
    dend_34 { pt3dadd( -109.548, 51.4898, -67.8873, 0.83 ) }
    dend_34 { pt3dadd( -111.048, 52.9538, -69.6225, 0.28 ) }
    dend_34 { pt3dadd( -112.207, 54.074, -71.0058, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 20/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -136.385, 59.56, 19.5173, 0.55 ) }
    dend_29 { pt3dadd( -143.382, 66.3696, 17.3669, 0.55 ) }
    dend_29 { pt3dadd( -150.086, 73.4456, 15.1095, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 23/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -136.385, 59.56, 19.5173, 0.55 ) }
    dend_28 { pt3dadd( -142.543, 66.0034, 18.0889, 0.55 ) }
    dend_28 { pt3dadd( -148.276, 72.5594, 15.7129, 0.55 ) }
    dend_28 { pt3dadd( -155.265, 78.0493, 14.3012, 0.55 ) }
    dend_28 { pt3dadd( -161.307, 84.739, 13.6465, 0.55 ) }
    dend_28 { pt3dadd( -168.66, 89.8619, 12.9193, 0.55 ) }
    dend_28 { pt3dadd( -176.797, 93.5013, 12.0017, 0.55 ) }
    dend_28 { pt3dadd( -184.222, 97.9954, 9.72246, 0.55 ) }
    dend_28 { pt3dadd( -191.81, 102.438, 7.93389, 0.55 ) }
    dend_28 { pt3dadd( -199.792, 106.29, 6.58837, 0.55 ) }
    dend_28 { pt3dadd( -207.494, 110.876, 6.07084, 0.55 ) }
    dend_28 { pt3dadd( -215.623, 114.53, 7.04056, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 35/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 78.7458, -236.712, -25.9152, 0.83 ) }
    dend_14 { pt3dadd( 79.5509, -240.999, -26.9576, 0.83 ) }
    dend_14 { pt3dadd( 80.2619, -243.725, -27.6006, 0.83 ) }
    dend_14 { pt3dadd( 81.7756, -248.865, -28.7626, 0.83 ) }
    dend_14 { pt3dadd( 82.9259, -252.41, -29.5206, 0.83 ) }
    dend_14 { pt3dadd( 83.6408, -254.475, -29.9367, 0.83 ) }
    dend_14 { pt3dadd( 84.8061, -257.792, -30.6135, 0.83 ) }
    dend_14 { pt3dadd( 86.0686, -261.1, -31.2797, 0.83 ) }
    dend_14 { pt3dadd( 87.3834, -264.212, -31.8541, 0.83 ) }
    dend_14 { pt3dadd( 88.9872, -267.878, -32.5014, 0.83 ) }
    dend_14 { pt3dadd( 89.6609, -269.349, -32.7703, 0.83 ) }
    dend_14 { pt3dadd( 90.9062, -272.158, -33.2911, 0.83 ) }
    dend_14 { pt3dadd( 91.904, -274.72, -33.7837, 0.83 ) }
    dend_14 { pt3dadd( 92.5287, -276.445, -34.1096, 0.83 ) }
    dend_14 { pt3dadd( 94.0504, -280.518, -34.9272, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 50/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 78.7458, -236.712, -25.9152, 0.55 ) }
    dend_13 { pt3dadd( 78.0617, -237.199, -26.4275, 0.55 ) }
    dend_13 { pt3dadd( 76.8684, -238.284, -27.5279, 0.55 ) }
    dend_13 { pt3dadd( 75.9186, -239.401, -28.7637, 0.55 ) }
    dend_13 { pt3dadd( 75.4742, -240.024, -29.5479, 0.28 ) }
    dend_13 { pt3dadd( 75.3544, -240.238, -29.8181, 0.55 ) }
    dend_13 { pt3dadd( 74.8854, -241.204, -31.0271, 0.28 ) }
    dend_13 { pt3dadd( 74.7229, -241.659, -31.688, 0.83 ) }
    dend_13 { pt3dadd( 74.3582, -243.19, -34.1571, 0.55 ) }
    dend_13 { pt3dadd( 74.2087, -244.002, -35.6298, 0.55 ) }
    dend_13 { pt3dadd( 74.1136, -244.51, -36.6662, 0.28 ) }
    dend_13 { pt3dadd( 74.1007, -244.591, -36.8844, 0.83 ) }
    dend_13 { pt3dadd( 74.0935, -245.397, -39.9391, 0.28 ) }
    dend_13 { pt3dadd( 74.1472, -245.506, -40.698, 0.55 ) }
    dend_13 { pt3dadd( 74.5973, -245.693, -43.1959, 0.28 ) }
    dend_13 { pt3dadd( 74.69, -245.708, -43.5391, 0.55 ) }
    dend_13 { pt3dadd( 75.5865, -245.735, -45.9909, 0.28 ) }
    dend_13 { pt3dadd( 76.1214, -245.734, -46.9864, 1.94 ) }
    dend_13 { pt3dadd( 77.4317, -245.729, -48.6314, 0.55 ) }
    dend_13 { pt3dadd( 78.5345, -245.701, -49.752, 0.55 ) }
    dend_13 { pt3dadd( 79.4169, -245.722, -50.5162, 0.83 ) }
    dend_13 { pt3dadd( 80.1538, -245.801, -51.115, 0.28 ) }
    dend_13 { pt3dadd( 81.1325, -245.986, -51.8829, 0.55 ) }
    dend_13 { pt3dadd( 82.2452, -246.242, -52.8144, 0.28 ) }
    dend_13 { pt3dadd( 83.2437, -246.513, -53.7254, 0.55 ) }
    dend_13 { pt3dadd( 84.2985, -246.83, -55.0447, 0.28 ) }
    dend_13 { pt3dadd( 84.8061, -247.002, -55.7749, 1.38 ) }
    dend_13 { pt3dadd( 85.9142, -247.398, -57.4299, 0.55 ) }
    dend_13 { pt3dadd( 86.3813, -247.585, -58.2162, 0.55 ) }
    dend_13 { pt3dadd( 87.0134, -247.842, -59.3551, 0.55 ) }
    dend_13 { pt3dadd( 88.5877, -248.439, -62.5038, 0.28 ) }
    dend_13 { pt3dadd( 89.1569, -248.603, -63.6716, 0.28 ) }
    dend_13 { pt3dadd( 89.5651, -248.691, -64.5548, 1.11 ) }
    dend_13 { pt3dadd( 91.0902, -249.011, -67.7903, 0.28 ) }
    dend_13 { pt3dadd( 91.4723, -249.088, -68.6714, 1.11 ) }
    dend_13 { pt3dadd( 92.4742, -249.292, -71.0083, 0.28 ) }
    dend_13 { pt3dadd( 92.5912, -249.331, -71.2996, 0.55 ) }
    dend_13 { pt3dadd( 93.0827, -249.556, -72.7111, 0.55 ) }
    dend_13 { pt3dadd( 93.4691, -249.757, -73.9193, 0.55 ) }
    dend_13 { pt3dadd( 94.5157, -250.353, -77.2102, 0.28 ) }
    dend_13 { pt3dadd( 94.6048, -250.42, -77.5074, 0.55 ) }
    dend_13 { pt3dadd( 95.2345, -251.072, -79.7155, 0.28 ) }
    dend_13 { pt3dadd( 95.3088, -251.165, -80.0103, 0.55 ) }
    // Section: dend_81, id: dend_81, parent: dend_75 (entry count 93/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 35.1932, 86.08, -87.5368, 0.83 ) }
    dend_81 { pt3dadd( 33.8329, 86.5355, -84.3454, 0.83 ) }
    dend_81 { pt3dadd( 38.6195, 87.1711, -86.0471, 0.55 ) }
    dend_81 { pt3dadd( 39.8628, 87.3828, -86.2741, 0.55 ) }
    dend_81 { pt3dadd( 41.6994, 87.6716, -86.5023, 1.11 ) }
    dend_81 { pt3dadd( 46.3279, 88.3893, -86.9629, 0.28 ) }
    dend_81 { pt3dadd( 47.0757, 88.5119, -87.0173, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_81 { pt3dadd( 50.8825, 88.9468, -87.6126, 0.28 ) }
    dend_81 { pt3dadd( 52.088, 89.0735, -87.8468, 1.11 ) }
    dend_81 { pt3dadd( 53.9581, 89.1916, -88.293, 0.28 ) }
    dend_81 { pt3dadd( 54.9559, 89.2176, -88.5507, 0.55 ) }
    dend_81 { pt3dadd( 55.9475, 89.2174, -88.833, 0.55 ) }
    dend_81 { pt3dadd( 59.9896, 89.1031, -90.1546, 0.28 ) }
    dend_81 { pt3dadd( 60.4498, 89.0852, -90.3076, 0.55 ) }
    dend_81 { pt3dadd( 63.2587, 89.0095, -91.2877, 0.28 ) }
    dend_81 { pt3dadd( 63.4884, 89.0118, -91.3729, 0.55 ) }
    dend_81 { pt3dadd( 68.947, 89.2185, -93.4104, 0.28 ) }
    dend_81 { pt3dadd( 69.4251, 89.2476, -93.5971, 0.55 ) }
    dend_81 { pt3dadd( 70.6879, 89.3758, -94.0647, 0.28 ) }
    dend_81 { pt3dadd( 71.5679, 89.4957, -94.365, 0.55 ) }
    dend_81 { pt3dadd( 75.0712, 90.0792, -95.3244, 0.28 ) }
    dend_81 { pt3dadd( 75.6553, 90.1639, -95.4679, 0.83 ) }
    dend_81 { pt3dadd( 79.8846, 90.7213, -96.4002, 0.28 ) }
    dend_81 { pt3dadd( 81.651, 90.9153, -96.9421, 0.28 ) }
    dend_81 { pt3dadd( 82.8493, 91.0352, -97.3657, 0.28 ) }
    dend_81 { pt3dadd( 84.4421, 91.188, -97.9589, 0.28 ) }
    dend_81 { pt3dadd( 88.2247, 91.5545, -99.6489, 0.83 ) }
    dend_81 { pt3dadd( 90.8526, 91.8464, -100.941, 0.55 ) }
    dend_81 { pt3dadd( 96.4742, 92.5299, -103.885, 0.28 ) }
    dend_81 { pt3dadd( 97.0925, 92.6034, -104.239, 0.28 ) }
    dend_81 { pt3dadd( 98.2236, 92.7333, -104.938, 0.55 ) }
    dend_81 { pt3dadd( 103.747, 93.4496, -108.637, 0.28 ) }
    dend_81 { pt3dadd( 104.341, 93.5444, -109.041, 0.55 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 26/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 35.1932, 86.08, -87.5368, 1.94 ) }
    dend_76 { pt3dadd( 35.9561, 88.2402, -88.3334, 1.94 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 28/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 131.188, 98.6683, -53.9119, 0.83 ) }
    dend_72 { pt3dadd( 132.451, 100.738, -54.8908, 0.83 ) }
    dend_72 { pt3dadd( 133.166, 101.956, -55.6067, 0.83 ) }
    dend_72 { pt3dadd( 134.542, 104.448, -57.08, 0.55 ) }
    dend_72 { pt3dadd( 135.304, 105.944, -57.9303, 1.11 ) }
    dend_72 { pt3dadd( 136.534, 108.506, -59.4272, 0.28 ) }
    dend_72 { pt3dadd( 136.834, 109.17, -59.8178, 0.55 ) }
    dend_72 { pt3dadd( 137.909, 111.761, -61.4919, 0.28 ) }
    dend_72 { pt3dadd( 138.411, 113.223, -62.5337, 0.55 ) }
    dend_72 { pt3dadd( 139.042, 115.485, -64.1613, 1.38 ) }
    dend_72 { pt3dadd( 139.562, 117.47, -65.6266, 0.55 ) }
    dend_72 { pt3dadd( 139.728, 118.174, -66.1335, 0.28 ) }
    dend_72 { pt3dadd( 140.365, 121.082, -68.2908, 0.83 ) }
    dend_72 { pt3dadd( 140.916, 123.997, -70.469, 0.55 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 42/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 131.188, 98.6683, -53.9119, 0.55 ) }
    dend_71 { pt3dadd( 133.024, 101.275, -60.9246, 0.55 ) }
    dend_71 { pt3dadd( 133.39, 101.794, -62.3218, 0.55 ) }
    dend_71 { pt3dadd( 134.288, 103.07, -65.7556, 0.28 ) }
    dend_71 { pt3dadd( 134.475, 103.335, -66.4682, 0.55 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 47/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 57.0641, 53.9919, 11.9454, 0.55 ) }
    dend_65 { pt3dadd( 58.5758, 55.7106, 13.8972, 0.55 ) }
    dend_65 { pt3dadd( 60.0469, 57.6804, 15.6813, 0.55 ) }
    dend_65 { pt3dadd( 62.0075, 60.7353, 17.9804, 0.55 ) }
    dend_65 { pt3dadd( 63.1126, 62.9189, 19.1493, 0.55 ) }
    dend_65 { pt3dadd( 63.893, 64.7804, 19.9596, 0.55 ) }
    dend_65 { pt3dadd( 64.4019, 66.1772, 20.5137, 0.55 ) }
    dend_65 { pt3dadd( 65.3672, 70.2296, 21.7273, 0.28 ) }
    dend_65 { pt3dadd( 65.4769, 71.1517, 21.9062, 0.83 ) }
    dend_65 { pt3dadd( 65.7039, 74.5801, 22.6387, 0.55 ) }
    dend_65 { pt3dadd( 65.8459, 75.799, 23.2633, 0.28 ) }
    dend_65 { pt3dadd( 66.0755, 76.4088, 23.973, 0.83 ) }
    dend_65 { pt3dadd( 67.0374, 77.9438, 26.6215, 0.55 ) }
    dend_65 { pt3dadd( 67.2614, 78.2287, 27.2189, 0.55 ) }
    dend_65 { pt3dadd( 68.5609, 79.5135, 30.5186, 0.55 ) }
    dend_65 { pt3dadd( 69.0717, 79.885, 31.7733, 0.28 ) }
    dend_65 { pt3dadd( 69.2776, 80.0262, 32.2173, 0.55 ) }
    dend_65 { pt3dadd( 70.183, 80.6545, 33.9752, 0.28 ) }
    dend_65 { pt3dadd( 70.4333, 80.8451, 34.4285, 0.83 ) }
    dend_65 { pt3dadd( 74.0126, 87.6459, 38.0091, 0.83 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 67/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 57.0641, 53.9919, 11.9454, 0.55 ) }
    dend_62 { pt3dadd( 58.6156, 53.4177, 11.5817, 0.55 ) }
    dend_62 { pt3dadd( 60.0494, 52.8871, 11.2457, 1.11 ) }
    dend_62 { pt3dadd( 70.1803, 48.0749, 9.82085, 1.11 ) }
    dend_62 { pt3dadd( 80.9362, 44.7094, 9.80067, 1.11 ) }
    dend_62 { pt3dadd( 91.4588, 41.183, 11.7334, 1.11 ) }
    dend_62 { pt3dadd( 102.123, 39.6831, 14.9454, 1.11 ) }
    dend_62 { pt3dadd( 112.219, 39.7396, 19.8704, 1.11 ) }
    dend_62 { pt3dadd( 121.854, 38.104, 25.4148, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -129.336, 33.4375, -116.064, 0.28 ) }
    dend_37 { pt3dadd( -131.812, 34.2902, -120.347, 0.28 ) }
    dend_37 { pt3dadd( -132.07, 34.379, -120.793, 1.11 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 79/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -129.336, 33.4375, -116.064, 0.28 ) }
    dend_36 { pt3dadd( -130.444, 32.6243, -117.341, 0.28 ) }
    dend_36 { pt3dadd( -130.826, 32.3642, -117.759, 0.83 ) }
    dend_36 { pt3dadd( -132.407, 31.3665, -119.499, 0.28 ) }
    dend_36 { pt3dadd( -133.399, 30.8033, -120.587, 0.83 ) }
    dend_36 { pt3dadd( -135.27, 29.8315, -122.694, 0.28 ) }
    dend_36 { pt3dadd( -136.174, 29.4057, -123.787, 0.28 ) }
    dend_36 { pt3dadd( -137.019, 29.0632, -124.811, 0.83 ) }
    dend_36 { pt3dadd( -138.281, 28.582, -126.381, 0.28 ) }
    dend_36 { pt3dadd( -138.92, 28.3521, -127.186, 0.55 ) }
    dend_36 { pt3dadd( -140.857, 27.6404, -129.717, 0.55 ) }
    dend_36 { pt3dadd( -142.623, 26.9495, -132.099, 0.55 ) }
    dend_36 { pt3dadd( -143.317, 26.6493, -133.027, 0.55 ) }
    dend_36 { pt3dadd( -144.672, 25.9675, -134.838, 0.28 ) }
    dend_36 { pt3dadd( -144.985, 25.7818, -135.231, 0.55 ) }
    dend_36 { pt3dadd( -146.18, 24.9489, -136.625, 0.28 ) }
    dend_36 { pt3dadd( -146.273, 24.8762, -136.72, 0.55 ) }
    dend_36 { pt3dadd( -147.341, 23.9901, -137.685, 0.28 ) }
    dend_36 { pt3dadd( -147.946, 23.5072, -138.252, 0.55 ) }
    dend_36 { pt3dadd( -148.454, 23.1639, -138.665, 0.28 ) }
    dend_36 { pt3dadd( -148.747, 22.993, -138.899, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_36 { pt3dadd( -150.652, 21.9836, -140.313, 0.28 ) }
    dend_36 { pt3dadd( -150.871, 21.8731, -140.481, 0.55 ) }
    dend_36 { pt3dadd( -152.158, 21.2768, -141.518, 0.28 ) }
    dend_36 { pt3dadd( -153.002, 20.9428, -142.19, 0.28 ) }
    dend_36 { pt3dadd( -154.038, 20.5951, -143.065, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 5/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 94.0504, -280.518, -34.9272, 1.11 ) }
    dend_20 { pt3dadd( 94.2893, -285.503, -37.27, 1.11 ) }
    dend_20 { pt3dadd( 94.3273, -287.646, -38.5243, 0.83 ) }
    dend_20 { pt3dadd( 94.3854, -290.927, -40.4455, 0.83 ) }
    dend_20 { pt3dadd( 94.5045, -297.649, -44.381, 0.83 ) }
    dend_20 { pt3dadd( 94.601, -303.094, -47.5696, 0.83 ) }
    dend_20 { pt3dadd( 94.6557, -306.181, -49.3767, 0.83 ) }
    dend_20 { pt3dadd( 94.8646, -311.232, -52.5287, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 13/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 94.0504, -280.518, -34.9272, 0.83 ) }
    dend_15 { pt3dadd( 95.4233, -284.052, -35.0196, 0.83 ) }
    dend_15 { pt3dadd( 96.3672, -287.126, -35.2629, 0.83 ) }
    dend_15 { pt3dadd( 96.8465, -289.253, -35.5407, 0.83 ) }
    dend_15 { pt3dadd( 97.4842, -292.502, -36.0262, 0.83 ) }
    dend_15 { pt3dadd( 98.1414, -296.149, -36.7049, 0.83 ) }
    dend_15 { pt3dadd( 98.7201, -299.123, -37.4311, 0.83 ) }
    dend_15 { pt3dadd( 99.3461, -302.087, -38.3887, 1.38 ) }
    dend_15 { pt3dadd( 100.115, -305.81, -39.6989, 0.83 ) }
    dend_15 { pt3dadd( 100.59, -308.429, -40.7334, 0.83 ) }
    dend_15 { pt3dadd( 101.094, -311.361, -42.0435, 0.83 ) }
    dend_15 { pt3dadd( 101.862, -314.805, -43.7529, 0.83 ) }
    dend_15 { pt3dadd( 102.855, -318.076, -45.5692, 0.83 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 26/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 35.9561, 88.2402, -88.3334, 0.55 ) }
    dend_78 { pt3dadd( 35.416, 90.2992, -89.3002, 0.55 ) }
    dend_78 { pt3dadd( 35.181, 91.1083, -89.6439, 0.55 ) }
    dend_78 { pt3dadd( 34.4319, 93.4548, -90.714, 0.28 ) }
    dend_78 { pt3dadd( 34.0734, 94.5231, -91.2245, 0.55 ) }
    dend_78 { pt3dadd( 33.563, 95.864, -91.8333, 0.28 ) }
    dend_78 { pt3dadd( 32.9383, 97.4168, -92.519, 0.55 ) }
    dend_78 { pt3dadd( 32.3005, 98.7542, -93.1119, 0.28 ) }
    dend_78 { pt3dadd( 31.4543, 100.326, -93.8093, 0.28 ) }
    dend_78 { pt3dadd( 30.3793, 102.102, -94.5596, 1.38 ) }
    dend_78 { pt3dadd( 29.046, 104.181, -95.4481, 0.28 ) }
    dend_78 { pt3dadd( 28.5143, 104.913, -95.7634, 0.55 ) }
    dend_78 { pt3dadd( 27.6449, 105.959, -96.2598, 0.28 ) }
    dend_78 { pt3dadd( 27.4641, 106.162, -96.3662, 0.55 ) }
    dend_78 { pt3dadd( 26.2869, 107.46, -97.0514, 0.55 ) }
    dend_78 { pt3dadd( 25.2165, 108.733, -97.7717, 0.28 ) }
    dend_78 { pt3dadd( 23.7602, 110.69, -98.9269, 1.66 ) }
    dend_78 { pt3dadd( 22.3828, 113.007, -100.348, 0.55 ) }
    dend_78 { pt3dadd( 21.5445, 114.719, -101.443, 0.55 ) }
    dend_78 { pt3dadd( 21.232, 115.496, -101.939, 0.83 ) }
    dend_78 { pt3dadd( 20.3684, 118.207, -103.66, 0.28 ) }
    dend_78 { pt3dadd( 20.0583, 119.563, -104.482, 1.11 ) }
    dend_78 { pt3dadd( 19.5607, 123.005, -106.472, 0.28 ) }
    dend_78 { pt3dadd( 19.4224, 124.35, -107.229, 0.55 ) }
    dend_78 { pt3dadd( 19.2774, 126.031, -108.178, 0.55 ) }
    dend_78 { pt3dadd( 19.1725, 127.36, -108.922, 0.55 ) }
    dend_78 { pt3dadd( 18.9615, 130.039, -110.36, 0.28 ) }
    dend_78 { pt3dadd( 18.91, 130.638, -110.655, 0.55 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 54/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 35.9561, 88.2402, -88.3334, 0.55 ) }
    dend_77 { pt3dadd( 37.5107, 90.5389, -92.0069, 0.55 ) }
    dend_77 { pt3dadd( 38.182, 91.4674, -93.2887, 0.28 ) }
    dend_77 { pt3dadd( 38.3573, 91.6831, -93.5817, 0.55 ) }
    dend_77 { pt3dadd( 39.107, 92.6611, -94.7485, 0.28 ) }
    dend_77 { pt3dadd( 39.4063, 93.0666, -95.1646, 0.55 ) }
    dend_77 { pt3dadd( 40.6912, 95.0871, -96.843, 0.28 ) }
    dend_77 { pt3dadd( 41.0447, 95.7181, -97.2259, 0.55 ) }
    dend_77 { pt3dadd( 42.1827, 97.6069, -98.6024, 0.28 ) }
    dend_77 { pt3dadd( 42.9764, 98.9651, -99.6841, 1.66 ) }
    dend_77 { pt3dadd( 44.3824, 101.406, -102.077, 0.28 ) }
    dend_77 { pt3dadd( 45.4789, 103.377, -104.266, 0.28 ) }
    dend_77 { pt3dadd( 46.0004, 104.406, -105.475, 1.38 ) }
    dend_77 { pt3dadd( 47.9663, 108.43, -110.452, 0.28 ) }
    dend_77 { pt3dadd( 48.3496, 109.29, -111.551, 0.55 ) }
    dend_77 { pt3dadd( 49.5237, 112.156, -115.396, 0.28 ) }
    dend_77 { pt3dadd( 50.0353, 113.633, -117.512, 0.55 ) }
    dend_77 { pt3dadd( 50.3276, 114.613, -118.91, 0.28 ) }
    dend_77 { pt3dadd( 50.38, 114.883, -119.231, 0.55 ) }
    dend_77 { pt3dadd( 50.4618, 116.2, -120.358, 0.28 ) }
    dend_77 { pt3dadd( 50.5061, 117.436, -121.442, 1.11 ) }
    dend_77 { pt3dadd( 50.4986, 120.625, -124.247, 0.28 ) }
    dend_77 { pt3dadd( 50.5254, 121.628, -125.289, 0.55 ) }
    dend_77 { pt3dadd( 50.5784, 122.529, -126.267, 0.28 ) }
    dend_77 { pt3dadd( 50.791, 124.475, -128.481, 0.83 ) }
    dend_77 { pt3dadd( 51.3553, 128.663, -133.36, 0.28 ) }
    dend_77 { pt3dadd( 51.555, 129.836, -134.748, 0.55 ) }
    dend_77 { pt3dadd( 51.9792, 132.146, -137.374, 0.28 ) }
    dend_77 { pt3dadd( 52.2429, 133.405, -138.848, 0.83 ) }
    dend_77 { pt3dadd( 52.945, 136.732, -142.621, 0.28 ) }
    dend_77 { pt3dadd( 53.1628, 137.712, -143.677, 0.55 ) }
    dend_77 { pt3dadd( 53.6545, 140.031, -145.947, 0.28 ) }
    dend_77 { pt3dadd( 53.8105, 140.878, -146.735, 0.55 ) }
    dend_77 { pt3dadd( 54.4995, 145.57, -150.876, 0.28 ) }
    dend_77 { pt3dadd( 54.7053, 146.882, -151.998, 1.11 ) }
    dend_77 { pt3dadd( 55.1103, 149.494, -154.036, 0.28 ) }
    dend_77 { pt3dadd( 55.277, 150.393, -154.727, 0.55 ) }
    dend_77 { pt3dadd( 55.8868, 153.693, -157.15, 0.28 ) }
    dend_77 { pt3dadd( 56.1843, 155.111, -158.173, 1.66 ) }
    dend_77 { pt3dadd( 56.6543, 157.149, -159.506, 0.28 ) }
    dend_77 { pt3dadd( 56.6543, 157.149, -159.506, 0.55 ) }
    dend_77 { pt3dadd( 57.0761, 158.934, -160.617, 0.28 ) }
    dend_77 { pt3dadd( 57.1668, 159.29, -160.845, 0.55 ) }
    dend_77 { pt3dadd( 57.7435, 161.587, -162.356, 0.28 ) }
    dend_77 { pt3dadd( 57.9113, 162.309, -162.863, 0.83 ) }
    dend_77 { pt3dadd( 58.2581, 164.559, -164.519, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_77 { pt3dadd( 58.3589, 165.312, -165.034, 0.55 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 1/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 140.916, 123.997, -70.469, 0.55 ) }
    dend_74 { pt3dadd( 141.247, 126.012, -71.8701, 0.55 ) }
    dend_74 { pt3dadd( 141.459, 127.393, -72.8014, 0.28 ) }
    dend_74 { pt3dadd( 141.707, 128.863, -73.7005, 1.11 ) }
    dend_74 { pt3dadd( 142.239, 132.032, -75.5157, 0.28 ) }
    dend_74 { pt3dadd( 142.887, 134.881, -77.1492, 0.83 ) }
    dend_74 { pt3dadd( 143.319, 136.593, -78.0861, 0.28 ) }
    dend_74 { pt3dadd( 143.511, 137.146, -78.4207, 0.55 ) }
    dend_74 { pt3dadd( 144.15, 138.655, -79.3636, 0.28 ) }
    dend_74 { pt3dadd( 144.423, 139.145, -79.7332, 0.55 ) }
    dend_74 { pt3dadd( 146.641, 142.573, -82.5028, 0.28 ) }
    dend_74 { pt3dadd( 148.048, 144.19, -84.1584, 0.83 ) }
    dend_74 { pt3dadd( 150.675, 146.941, -87.1402, 0.28 ) }
    dend_74 { pt3dadd( 151.801, 148.027, -88.4393, 0.55 ) }
    dend_74 { pt3dadd( 154.761, 150.736, -91.9762, 0.28 ) }
    dend_74 { pt3dadd( 155.711, 151.565, -93.1479, 0.55 ) }
    dend_74 { pt3dadd( 159.67, 155.032, -98.3395, 0.28 ) }
    dend_74 { pt3dadd( 161.035, 156.279, -100.275, 1.11 ) }
    dend_74 { pt3dadd( 163.328, 158.651, -103.941, 0.28 ) }
    dend_74 { pt3dadd( 163.928, 159.363, -105.051, 0.55 ) }
    dend_74 { pt3dadd( 165.214, 161.381, -108.064, 0.28 ) }
    dend_74 { pt3dadd( 165.736, 162.465, -109.722, 0.28 ) }
    dend_74 { pt3dadd( 166.041, 163.506, -111.269, 1.11 ) }
    dend_74 { pt3dadd( 166.52, 165.397, -114.292, 0.28 ) }
    dend_74 { pt3dadd( 166.597, 165.986, -115.158, 0.55 ) }
    dend_74 { pt3dadd( 166.808, 168.365, -118.611, 0.28 ) }
    dend_74 { pt3dadd( 166.819, 168.814, -119.24, 0.55 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 140.916, 123.997, -70.469, 0.28 ) }
    dend_73 { pt3dadd( 140.116, 125.287, -70.5289, 0.28 ) }
    dend_73 { pt3dadd( 139.905, 125.738, -70.607, 0.55 ) }
    dend_73 { pt3dadd( 139.187, 127.486, -70.956, 0.28 ) }
    dend_73 { pt3dadd( 138.75, 128.581, -71.2782, 0.83 ) }
    dend_73 { pt3dadd( 138.043, 130.308, -71.8313, 0.28 ) }
    dend_73 { pt3dadd( 137.651, 131.217, -72.1401, 0.83 ) }
    dend_73 { pt3dadd( 136.268, 134.322, -73.2836, 0.28 ) }
    dend_73 { pt3dadd( 135.785, 135.385, -73.7276, 0.55 ) }
    dend_73 { pt3dadd( 134.715, 137.749, -74.8103, 0.28 ) }
    dend_73 { pt3dadd( 134.101, 139.115, -75.4654, 0.83 ) }
    dend_73 { pt3dadd( 132.978, 141.611, -76.5909, 0.28 ) }
    dend_73 { pt3dadd( 132.758, 142.065, -76.7957, 0.55 ) }
    dend_73 { pt3dadd( 131.908, 143.665, -77.4934, 0.28 ) }
    dend_73 { pt3dadd( 131.369, 144.698, -77.9294, 0.55 ) }
    dend_73 { pt3dadd( 130.411, 146.711, -78.614, 0.28 ) }
    dend_73 { pt3dadd( 129.887, 147.988, -79.091, 0.83 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 45/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 74.0126, 87.6459, 38.0091, 0.83 ) }
    dend_67 { pt3dadd( 77.189, 94.6871, 42.8535, 0.83 ) }
    dend_67 { pt3dadd( 80.2675, 101.839, 47.6056, 0.83 ) }
    dend_67 { pt3dadd( 82.6577, 109.378, 52.1833, 0.83 ) }
    dend_67 { pt3dadd( 85.2857, 117.07, 56.3661, 0.83 ) }
    dend_67 { pt3dadd( 88.8793, 124.498, 60.2701, 0.83 ) }
    dend_67 { pt3dadd( 92.5453, 131.276, 65.1239, 0.83 ) }
    dend_67 { pt3dadd( 95.4615, 137.643, 70.9302, 0.83 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 53/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 74.0126, 87.6459, 38.0091, 0.55 ) }
    dend_66 { pt3dadd( 78.1481, 95.2574, 44.321, 0.83 ) }
    dend_66 { pt3dadd( 83.4688, 102.465, 50.1597, 0.83 ) }
    dend_66 { pt3dadd( 87.4307, 110.37, 56.2313, 0.83 ) }
    dend_66 { pt3dadd( 92.4342, 118.56, 60.9986, 0.83 ) }
    dend_66 { pt3dadd( 97.2651, 127.612, 64.1281, 0.83 ) }
    dend_66 { pt3dadd( 101.617, 136.549, 68.1887, 0.83 ) }
    dend_66 { pt3dadd( 104.666, 146.395, 71.2976, 0.83 ) }
    dend_66 { pt3dadd( 107.829, 155.487, 76.1041, 0.83 ) }
    dend_66 { pt3dadd( 111.128, 164.053, 81.6957, 0.83 ) }
    dend_66 { pt3dadd( 114.063, 172.175, 88.0877, 0.83 ) }
    dend_66 { pt3dadd( 116.205, 180.949, 93.9464, 0.83 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 65/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 121.854, 38.104, 25.4148, 0.83 ) }
    dend_64 { pt3dadd( 133.126, 35.4493, 24.8206, 0.83 ) }
    dend_64 { pt3dadd( 143.744, 30.8155, 25.735, 0.83 ) }
    dend_64 { pt3dadd( 153.979, 25.472, 24.1507, 0.83 ) }
    dend_64 { pt3dadd( 164.468, 20.4822, 23.3976, 0.83 ) }
    dend_64 { pt3dadd( 174.832, 15.5035, 21.5377, 0.83 ) }
    dend_64 { pt3dadd( 184.825, 9.55, 20.6854, 0.83 ) }
    dend_64 { pt3dadd( 193.96, 2.37367, 19.2702, 0.83 ) }
    dend_64 { pt3dadd( 204.259, -3.05537, 18.9513, 0.83 ) }
    dend_64 { pt3dadd( 214.46, -8.63288, 19.5746, 0.83 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 75/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 121.854, 38.104, 25.4148, 0.55 ) }
    dend_63 { pt3dadd( 131.012, 36.0363, 29.898, 0.83 ) }
    dend_63 { pt3dadd( 139.876, 33.0413, 34.4733, 0.83 ) }
    dend_63 { pt3dadd( 148.735, 29.0984, 38.315, 0.83 ) }
    dend_63 { pt3dadd( 157.285, 24.4528, 42.1104, 0.83 ) }
    dend_63 { pt3dadd( 166.137, 19.8107, 45.1497, 0.83 ) }
    dend_63 { pt3dadd( 174.18, 14.3628, 49.0292, 0.83 ) }
    dend_63 { pt3dadd( 181.496, 8.58141, 53.7778, 0.83 ) }
    dend_63 { pt3dadd( 188.198, 1.28804, 57.2972, 0.83 ) }
    dend_63 { pt3dadd( 195.138, -5.85087, 60.6562, 0.83 ) }
    dend_63 { pt3dadd( 201.569, -13.2582, 64.4379, 0.83 ) }
    dend_63 { pt3dadd( 207.515, -21.5085, 67.2323, 0.83 ) }
    dend_63 { pt3dadd( 214.187, -28.9155, 70.579, 0.83 ) }
    dend_63 { pt3dadd( 219.957, -36.5835, 74.8824, 0.83 ) }
    dend_63 { pt3dadd( 225.719, -44.3872, 78.9603, 0.83 ) }
    dend_63 { pt3dadd( 232.731, -50.8355, 83.3343, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 91/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 94.8646, -311.232, -52.5287, 0.55 ) }
    dend_22 { pt3dadd( 94.8283, -315.197, -56.8155, 0.55 ) }
    dend_22 { pt3dadd( 94.7763, -317.702, -59.1575, 0.55 ) }
    dend_22 { pt3dadd( 94.6577, -320.748, -61.551, 0.55 ) }
    dend_22 { pt3dadd( 94.5837, -323.856, -63.5736, 0.55 ) }
    dend_22 { pt3dadd( 94.499, -325.186, -64.3173, 0.55 ) }
    dend_22 { pt3dadd( 94.3623, -326.72, -65.0992, 0.55 ) }
    dend_22 { pt3dadd( 94.0828, -328.876, -65.8362, 0.83 ) }
    dend_22 { pt3dadd( 93.6674, -332.036, -66.7977, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_22 { pt3dadd( 93.1451, -335.271, -67.786, 0.83 ) }
    dend_22 { pt3dadd( 92.6757, -338.25, -68.7858, 0.55 ) }
    dend_22 { pt3dadd( 92.532, -339.23, -69.1386, 0.55 ) }
    dend_22 { pt3dadd( 92.1696, -341.645, -70.0733, 0.55 ) }
    dend_22 { pt3dadd( 91.4693, -346.485, -72.0659, 0.55 ) }
    dend_22 { pt3dadd( 91.0024, -349.957, -73.5854, 0.55 ) }
    dend_22 { pt3dadd( 90.6435, -352.898, -74.9142, 0.55 ) }
    dend_22 { pt3dadd( 90.5585, -354.165, -75.4677, 0.28 ) }
    dend_22 { pt3dadd( 90.522, -354.754, -75.7074, 0.55 ) }
    dend_22 { pt3dadd( 90.4422, -355.858, -76.1039, 0.28 ) }
    dend_22 { pt3dadd( 90.4239, -356.245, -76.2243, 0.55 ) }
    dend_22 { pt3dadd( 90.3773, -357.237, -76.565, 0.28 ) }
    dend_22 { pt3dadd( 90.1429, -359.084, -77.3348, 0.55 ) }
    dend_22 { pt3dadd( 89.8643, -360.668, -78.0571, 0.28 ) }
    dend_22 { pt3dadd( 89.493, -362.328, -78.892, 1.94 ) }
    dend_22 { pt3dadd( 88.9307, -364.623, -80.1146, 0.28 ) }
    dend_22 { pt3dadd( 88.6754, -365.64, -80.6963, 0.55 ) }
    dend_22 { pt3dadd( 88.1714, -367.587, -81.8782, 0.28 ) }
    dend_22 { pt3dadd( 88.0509, -368.058, -82.1768, 0.55 ) }
    dend_22 { pt3dadd( 87.6087, -369.915, -83.328, 0.28 ) }
    dend_22 { pt3dadd( 87.4697, -370.626, -83.7569, 0.55 ) }
    dend_22 { pt3dadd( 87.2774, -372.161, -84.6258, 0.28 ) }
    dend_22 { pt3dadd( 87.2432, -373.189, -85.1911, 0.55 ) }
    dend_22 { pt3dadd( 87.3376, -374.421, -85.8115, 0.28 ) }
    dend_22 { pt3dadd( 87.4894, -375.353, -86.2463, 0.28 ) }
    dend_22 { pt3dadd( 87.7061, -376.174, -86.5256, 0.55 ) }
    dend_22 { pt3dadd( 88.2807, -377.798, -86.8695, 0.28 ) }
    dend_22 { pt3dadd( 88.5286, -378.386, -86.9327, 0.83 ) }
    dend_22 { pt3dadd( 89.747, -381.012, -87.0086, 0.55 ) }
    dend_22 { pt3dadd( 90.1611, -381.944, -86.8797, 0.83 ) }
    dend_22 { pt3dadd( 91.0885, -384.208, -86.4181, 0.28 ) }
    dend_22 { pt3dadd( 92.0948, -386.777, -85.771, 0.55 ) }
    dend_22 { pt3dadd( 92.5998, -388.073, -85.3818, 0.55 ) }
    dend_22 { pt3dadd( 93.4487, -390.27, -84.6487, 0.55 ) }
    dend_22 { pt3dadd( 95.1934, -394.469, -83.0128, 0.55 ) }
    dend_22 { pt3dadd( 96.0051, -396.222, -82.2755, 0.28 ) }
    dend_22 { pt3dadd( 96.3893, -396.935, -81.8791, 0.28 ) }
    dend_22 { pt3dadd( 96.9404, -397.74, -81.2454, 0.55 ) }
    dend_22 { pt3dadd( 98.1459, -398.856, -79.9681, 0.28 ) }
    dend_22 { pt3dadd( 99.3335, -399.406, -78.9182, 0.55 ) }
    dend_22 { pt3dadd( 100.913, -399.836, -77.8414, 0.55 ) }
    dend_22 { pt3dadd( 104.183, -400.465, -75.5235, 0.55 ) }
    dend_22 { pt3dadd( 105.592, -400.667, -74.5028, 1.11 ) }
    dend_22 { pt3dadd( 107.378, -400.78, -73.2047, 0.55 ) }
    dend_22 { pt3dadd( 109.424, -400.737, -71.7845, 0.55 ) }
    dend_22 { pt3dadd( 111.674, -400.692, -70.2979, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 46/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 94.8646, -311.232, -52.5287, 0.55 ) }
    dend_21 { pt3dadd( 93.0759, -310.704, -54.1715, 0.55 ) }
    dend_21 { pt3dadd( 91.5522, -310.253, -55.5709, 0.55 ) }
    dend_21 { pt3dadd( 89.1154, -309.534, -57.809, 0.55 ) }
    dend_21 { pt3dadd( 87.812, -309.149, -59.006, 0.28 ) }
    dend_21 { pt3dadd( 86.3626, -308.72, -60.3372, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 102.855, -318.076, -45.5692, 0.83 ) }
    dend_17 { pt3dadd( 104.737, -324.363, -47.0684, 0.83 ) }
    dend_17 { pt3dadd( 105.92, -328.247, -48.1142, 0.83 ) }
    dend_17 { pt3dadd( 107.053, -332.35, -49.3214, 0.83 ) }
    dend_17 { pt3dadd( 108.857, -338.621, -51.2414, 0.83 ) }
    dend_17 { pt3dadd( 110.417, -343.77, -52.813, 0.83 ) }
    dend_17 { pt3dadd( 111.963, -348.626, -54.3353, 0.83 ) }
    dend_17 { pt3dadd( 112.812, -351.01, -55.064, 0.83 ) }
    dend_17 { pt3dadd( 114.161, -354.796, -56.3068, 0.55 ) }
    dend_17 { pt3dadd( 115.73, -359.085, -57.7081, 0.55 ) }
    dend_17 { pt3dadd( 116.479, -360.733, -58.223, 0.55 ) }
    dend_17 { pt3dadd( 118.131, -363.944, -59.1254, 0.55 ) }
    dend_17 { pt3dadd( 119.927, -367.548, -59.8478, 0.55 ) }
    dend_17 { pt3dadd( 121.475, -370.498, -60.4128, 0.83 ) }
    dend_17 { pt3dadd( 123.28, -373.754, -60.979, 0.83 ) }
    dend_17 { pt3dadd( 125.698, -378.328, -61.7338, 0.55 ) }
    dend_17 { pt3dadd( 127.768, -382.3, -62.361, 0.55 ) }
    dend_17 { pt3dadd( 128.99, -384.614, -62.6395, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 70/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 102.855, -318.076, -45.5692, 0.55 ) }
    dend_16 { pt3dadd( 105.754, -318.549, -44.6866, 0.55 ) }
    dend_16 { pt3dadd( 107.582, -318.848, -44.1303, 0.28 ) }
    dend_16 { pt3dadd( 109.947, -319.233, -43.4101, 0.55 ) }
    dend_16 { pt3dadd( 112.048, -319.576, -42.7705, 0.55 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 75/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 18.91, 130.638, -110.655, 0.55 ) }
    dend_80 { pt3dadd( 18.5112, 132.597, -111.107, 0.55 ) }
    dend_80 { pt3dadd( 18.309, 133.629, -111.354, 0.55 ) }
    dend_80 { pt3dadd( 18.0243, 134.838, -111.677, 0.83 ) }
    dend_80 { pt3dadd( 17.5134, 136.849, -112.246, 0.28 ) }
    dend_80 { pt3dadd( 17.2661, 137.856, -112.581, 0.55 ) }
    dend_80 { pt3dadd( 16.8397, 139.629, -113.231, 0.28 ) }
    dend_80 { pt3dadd( 16.7194, 140.165, -113.467, 0.55 ) }
    dend_80 { pt3dadd( 15.5131, 144.276, -115.375, 0.28 ) }
    dend_80 { pt3dadd( 15.3269, 144.797, -115.629, 0.55 ) }
    dend_80 { pt3dadd( 14.379, 147.138, -116.806, 0.28 ) }
    dend_80 { pt3dadd( 13.8869, 148.173, -117.327, 0.83 ) }
    dend_80 { pt3dadd( 12.7697, 150.273, -118.426, 0.28 ) }
    dend_80 { pt3dadd( 11.3606, 152.798, -119.749, 1.94 ) }
    dend_80 { pt3dadd( 9.90335, 155.161, -120.996, 0.28 ) }
    dend_80 { pt3dadd( 9.44051, 155.865, -121.347, 0.83 ) }
    dend_80 { pt3dadd( 7.61193, 158.331, -122.43, 0.28 ) }
    dend_80 { pt3dadd( 7.03335, 159.076, -122.734, 0.55 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 93/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 18.91, 130.638, -110.655, 0.55 ) }
    dend_79 { pt3dadd( 19.9917, 131.81, -109.923, 0.55 ) }
    dend_79 { pt3dadd( 21.2199, 133.141, -109.091, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 96/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 128.99, -384.614, -62.6395, 0.55 ) }
    dend_19 { pt3dadd( 124.196, -381.487, -60.4413, 0.55 ) }
    dend_19 { pt3dadd( 118.678, -377.887, -57.9114, 0.28 ) }
    dend_19 { pt3dadd( 117.161, -376.898, -57.2161, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 0/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 128.99, -384.614, -62.6395, 0.55 ) }
    dend_18 { pt3dadd( 130.19, -386.83, -63.1185, 0.55 ) }
    dend_18 { pt3dadd( 130.619, -387.611, -63.2882, 0.55 ) }
    dend_18 { pt3dadd( 131.353, -388.963, -63.5185, 0.28 ) }
    dend_18 { pt3dadd( 131.913, -390.0, -63.6686, 0.55 ) }
    dend_18 { pt3dadd( 133.017, -392.247, -63.5377, 0.28 ) }
    dend_18 { pt3dadd( 134.143, -394.627, -63.1126, 0.28 ) }
    dend_18 { pt3dadd( 134.537, -395.755, -62.6299, 0.55 ) }
    dend_18 { pt3dadd( 134.948, -397.418, -61.651, 0.28 ) }
    dend_18 { pt3dadd( 135.097, -398.147, -61.1405, 0.55 ) }
    dend_18 { pt3dadd( 135.845, -402.857, -57.1862, 0.28 ) }
    dend_18 { pt3dadd( 135.888, -403.425, -56.6061, 0.55 ) }
    dend_18 { pt3dadd( 135.853, -406.508, -52.9016, 0.28 ) }
    dend_18 { pt3dadd( 135.783, -407.267, -51.9043, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_96, dend_57, dend_52, dend_45, dend_24, dend_23, dend_0, dend_104, dend_97, dend_87, dend_58, dend_56, dend_53, dend_49, dend_46, dend_38, dend_25, dend_6, dend_1, dend_103, dend_98, dend_93, dend_88, dend_82, dend_59, dend_55, dend_54, dend_51, dend_50, dend_48, dend_47, dend_42, dend_39, dend_31, dend_26, dend_10, dend_7, dend_3, dend_2, dend_100, dend_99, dend_95, dend_94, dend_90, dend_89, dend_86, dend_83, dend_69, dend_60, dend_44, dend_43, dend_41, dend_40, dend_33, dend_32, dend_30, dend_27, dend_12, dend_11, dend_9, dend_8, dend_5, dend_4, dend_102, dend_101, dend_92, dend_91, dend_85, dend_84, dend_75, dend_70, dend_68, dend_61, dend_35, dend_34, dend_29, dend_28, dend_14, dend_13, dend_81, dend_76, dend_72, dend_71, dend_65, dend_62, dend_37, dend_36, dend_20, dend_15, dend_78, dend_77, dend_74, dend_73, dend_67, dend_66, dend_64, dend_63, dend_22, dend_21, dend_17, dend_16, dend_80, dend_79, dend_19, dend_18]}
    ModelViewParmSubset_2 = new SectionList()
    dend_96 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_96, dend_57, dend_52, dend_45, dend_24, dend_23, dend_0, dend_104, dend_97, dend_87, dend_58, dend_56, dend_53, dend_49, dend_46, dend_38, dend_25, dend_6, dend_1, dend_103, dend_98, dend_93, dend_88, dend_82, dend_59, dend_55, dend_54, dend_51, dend_50, dend_48, dend_47, dend_42, dend_39, dend_31, dend_26, dend_10, dend_7, dend_3, dend_2, dend_100, dend_99, dend_95, dend_94, dend_90, dend_89, dend_86, dend_83, dend_69, dend_60, dend_44, dend_43, dend_41, dend_40, dend_33, dend_32, dend_30, dend_27, dend_12, dend_11, dend_9, dend_8, dend_5, dend_4, dend_102, dend_101, dend_92, dend_91, dend_85, dend_84, dend_75, dend_70, dend_68, dend_61, dend_35, dend_34, dend_29, dend_28, dend_14, dend_13, dend_81, dend_76, dend_72, dend_71, dend_65, dend_62, dend_37, dend_36, dend_20, dend_15, dend_78, dend_77, dend_74, dend_73, dend_67, dend_66, dend_64, dend_63, dend_22, dend_21, dend_17, dend_16, dend_80, dend_79, dend_19, dend_18]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_96, dend_57, dend_52, dend_45, dend_24, dend_23, dend_0, axon_0, dend_104, dend_97, dend_87, dend_58, dend_56, dend_53, dend_49, dend_46, dend_38, dend_25, dend_6, dend_1, axon_1, dend_103, dend_98, dend_93, dend_88, dend_82, dend_59, dend_55, dend_54, dend_51, dend_50, dend_48, dend_47, dend_42, dend_39, dend_31, dend_26, dend_10, dend_7, dend_3, dend_2, dend_100, dend_99, dend_95, dend_94, dend_90, dend_89, dend_86, dend_83, dend_69, dend_60, dend_44, dend_43, dend_41, dend_40, dend_33, dend_32, dend_30, dend_27, dend_12, dend_11, dend_9, dend_8, dend_5, dend_4, dend_102, dend_101, dend_92, dend_91, dend_85, dend_84, dend_75, dend_70, dend_68, dend_61, dend_35, dend_34, dend_29, dend_28, dend_14, dend_13, dend_81, dend_76, dend_72, dend_71, dend_65, dend_62, dend_37, dend_36, dend_20, dend_15, dend_78, dend_77, dend_74, dend_73, dend_67, dend_66, dend_64, dend_63, dend_22, dend_21, dend_17, dend_16, dend_80, dend_79, dend_19, dend_18]}
    ModelViewParmSubset_5 = new SectionList()
    dend_96 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_71 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_96 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_104 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_97 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_87 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_56 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_53 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_49 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_25 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_103 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_93 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_55 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_54 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_51 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_50 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_48 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_42 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_39 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_26 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_7 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_3 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_2 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_100 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_99 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_94 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_90 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_89 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_86 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_83 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_44 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_43 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_40 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_32 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_30 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_12 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_9 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_8 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_5 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_4 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_92 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_91 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_84 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_75 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_70 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_35 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_28 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_14 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_13 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_81 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_65 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_62 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_15 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_78 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_77 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_74 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_67 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_66 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_64 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_63 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_22 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_17 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_57 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_52 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_58 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_45 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_59 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_6 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_38 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_69 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_82 OneSecGrp_SectionRef_27.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_60 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_68 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_31 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_88 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_61 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_33 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_98 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_76 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_85 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_34 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_27 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_37 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_71 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_11 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_79 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_41 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_29 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_72 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_36 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_80 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_73 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_101 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_102 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_95 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_20 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_21 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_16 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_19 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_18 OneSecGrp_SectionRef_108.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_57, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, axon_1, axon_1, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_88, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_69, dend_69, dend_69, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_104 all.append()
    dend_104 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_88 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_96 nseg = 3
    dend_23 nseg = 13
    dend_104 nseg = 7
    dend_97 nseg = 3
    dend_87 nseg = 3
    dend_56 nseg = 7
    dend_53 nseg = 5
    dend_49 nseg = 7
    dend_46 nseg = 5
    dend_25 nseg = 3
    dend_103 nseg = 3
    dend_93 nseg = 7
    dend_55 nseg = 3
    dend_54 nseg = 5
    dend_51 nseg = 5
    dend_50 nseg = 3
    dend_48 nseg = 3
    dend_47 nseg = 3
    dend_42 nseg = 5
    dend_39 nseg = 7
    dend_26 nseg = 5
    dend_10 nseg = 5
    dend_7 nseg = 7
    dend_3 nseg = 5
    dend_2 nseg = 13
    dend_100 nseg = 5
    dend_99 nseg = 3
    dend_94 nseg = 5
    dend_90 nseg = 3
    dend_89 nseg = 9
    dend_86 nseg = 7
    dend_83 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 9
    dend_40 nseg = 3
    dend_32 nseg = 11
    dend_30 nseg = 7
    dend_12 nseg = 5
    dend_9 nseg = 5
    dend_8 nseg = 7
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_92 nseg = 5
    dend_91 nseg = 9
    dend_84 nseg = 3
    dend_75 nseg = 5
    dend_70 nseg = 7
    dend_35 nseg = 3
    dend_28 nseg = 5
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_81 nseg = 3
    dend_65 nseg = 3
    dend_62 nseg = 3
    dend_15 nseg = 3
    dend_78 nseg = 3
    dend_77 nseg = 5
    dend_74 nseg = 3
    dend_67 nseg = 3
    dend_66 nseg = 5
    dend_64 nseg = 5
    dend_63 nseg = 7
    dend_22 nseg = 5
    dend_17 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_LBC_66ec8fed8f_0_0


