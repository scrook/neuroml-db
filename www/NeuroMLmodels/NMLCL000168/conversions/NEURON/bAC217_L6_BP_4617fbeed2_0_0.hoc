// Cell: bAC217_L6_BP_4617fbeed2_0_0
/*
{
  "id" : "bAC217_L6_BP_4617fbeed2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.40462, 8.60746, 2.90988, 0.83", "-6.69494, 11.1578, 3.4061, 1.11", "-8.63494, 12.6604, 3.66423, 0.83", "-10.5198, 14.1076, 3.89551, 0.83", "-11.6357, 14.9329, 4.02225, 1.11", "-15.1303, 17.5116, 4.42843, 1.11", "-21.3807, 21.9265, 5.14645, 0.83", "-23.6325, 23.4564, 5.38356, 0.83", "-25.4157, 24.6319, 5.53083, 0.83", "-27.1546, 25.7969, 5.65832, 0.83", "-28.5701, 26.7571, 5.7271, 0.55", "-29.634, 27.4073, 5.79691, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.70228, 6.28408, -6.25398, 0.55", "7.52052, 6.89372, -6.88334, 0.55", "9.15584, 7.04762, -7.71612, 0.83", "11.744, 7.21139, -9.26307, 0.55", "12.9934, 7.29045, -10.0098, 1.38", "16.0653, 7.48484, -11.8459, 0.55", "17.3737, 7.41901, -12.7219, 0.83", "24.1416, 6.21183, -17.6442, 0.55", "24.7964, 6.04949, -18.1857, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.695522, -11.4929, 3.59312, 1.11", "-0.765517, -17.6686, 5.8071, 1.11", "-0.794024, -20.1837, 6.70877, 0.83", "-0.831895, -23.5252, 7.90669, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.774718, 8.3158, -1.29661, 1.11", "0.797301, 8.94873, -1.29123, 1.11", "0.829598, 9.98142, -1.24492, 1.38", "0.832343, 10.0389, -1.24127, 1.38", "0.908762, 10.7509, -1.18677, 0.83", "1.01812, 11.5039, -1.0875, 0.83", "1.20913, 12.3546, -0.869283, 0.83", "1.31951, 12.6774, -0.744988, 0.83", "1.4296, 12.9114, -0.629976, 1.11", "1.7543, 13.4816, -0.331304, 0.55", "2.13219, 14.0771, 0.0252094, 0.83", "2.63134, 14.6901, 0.43289, 0.55", "2.88741, 14.9449, 0.618903, 0.83", "3.24424, 15.2902, 0.907546, 0.55", "3.68486, 15.7293, 1.29682, 0.55", "4.29782, 16.3899, 1.88935, 0.55", "4.97303, 17.1449, 2.54352, 0.55", "5.39568, 17.6348, 3.02935, 0.55", "5.90975, 18.2542, 3.71232, 0.55", "6.01607, 18.3784, 3.86692, 0.83", "6.29567, 18.7067, 4.30232, 0.55", "6.53218, 18.9628, 4.64475, 0.83", "7.07488, 19.6618, 5.45601, 0.55", "7.28222, 19.9171, 5.69473, 0.83", "7.47927, 20.1054, 5.8587, 0.55", "7.67648, 20.2677, 5.98616, 0.83", "8.11633, 20.5698, 6.22018, 0.83", "8.70021, 20.981, 6.47559, 0.83", "9.05994, 21.2526, 6.59203, 0.55", "9.33397, 21.4875, 6.68238, 0.55", "10.0528, 22.0944, 6.90807, 0.83", "10.5179, 22.4836, 7.03447, 0.55", "11.2253, 23.0538, 7.19677, 0.55", "11.8748, 23.5322, 7.31883, 0.55", "12.4565, 23.9376, 7.412, 0.55", "13.1932, 24.4128, 7.49561, 0.55", "13.6444, 24.6461, 7.53183, 0.55", "13.9538, 24.7775, 7.51919, 0.55", "14.3667, 24.8766, 7.46749, 0.55", "14.9852, 24.9244, 7.33993, 0.55", "15.3718, 24.9055, 7.2456, 0.55", "15.9354, 24.8627, 7.14711, 0.55", "17.0055, 24.8152, 7.05491, 0.55", "17.8428, 24.8167, 7.04222, 0.55", "18.7282, 24.8606, 7.08176, 0.55", "19.2941, 24.9082, 7.15206, 0.55", "20.7601, 25.1658, 7.43207, 0.55", "21.6247, 25.3856, 7.66366, 0.55", "22.2706, 25.5935, 7.89882, 0.55", "22.662, 25.7861, 8.05721, 0.55", "23.1153, 26.0718, 8.23851, 0.55", "23.8844, 26.6343, 8.47539, 0.55", "24.0616, 26.7697, 8.50483, 0.55", "24.5715, 27.1318, 8.55524, 0.55", "25.0396, 27.5172, 8.59977, 0.83", "25.2952, 27.731, 8.61997, 0.55", "25.6781, 28.0975, 8.63481, 0.83", "27.6758, 30.0552, 9.25092, 0.83", "29.4136, 32.2972, 9.64597, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-29.634, 27.4073, 5.79691, 0.55", "-30.8839, 28.4505, 4.95094, 0.55", "-32.2431, 29.5848, 4.03104, 0.55", "-33.8834, 30.9537, 2.92092, 0.55", "-35.2378, 32.0841, 2.00427, 0.83", "-36.3728, 33.0313, 1.23611, 0.55", "-38.4795, 34.7895, -0.189703, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-29.634, 27.4073, 5.79691, 0.55", "-32.2139, 27.7734, 5.83052, 0.55", "-34.9141, 28.121, 6.14286, 0.55", "-37.9641, 28.5219, 6.5711, 0.55", "-42.3165, 29.1182, 7.59814, 0.55", "-45.913, 29.5512, 8.73312, 0.55", "-49.6566, 29.9717, 10.0961, 0.55", "-53.201, 30.1883, 11.8515, 0.55", "-56.1892, 30.1101, 13.7197, 0.55", "-59.8326, 29.7991, 16.5175, 0.55", "-61.3728, 29.574, 17.9952, 0.55", "-63.0229, 29.3234, 19.6753, 0.55", "-65.9455, 28.6053, 22.5274, 0.55", "-67.5448, 28.1847, 23.7676, 0.55", "-69.219, 27.6854, 25.0646, 0.55", "-71.2462, 27.0845, 26.3808, 0.55", "-73.4619, 26.4711, 27.7384, 0.55", "-76.6353, 25.5754, 29.6033, 0.55", "-80.9519, 24.6205, 31.6403, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "24.7964, 6.04949, -18.1857, 0.55", "28.6724, 7.32857, -19.05, 0.55", "30.928, 7.90184, -19.8553, 0.55", "33.1639, 8.3639, -20.6731, 0.55", "34.6967, 8.61851, -21.2254, 0.55", "36.941, 8.94036, -22.0104, 0.55", "41.6089, 9.50434, -23.7755, 0.55", "46.9185, 10.0771, -26.1269, 0.55", "49.5124, 10.1783, -27.4292, 0.55", "50.9074, 10.1902, -28.2134, 0.55", "52.4382, 10.2047, -29.1352, 0.55", "55.1761, 10.1567, -30.7623, 0.55", "56.1763, 10.079, -31.3802, 0.55", "60.4119, 9.82249, -34.3249, 0.55", "63.4128, 9.66693, -36.6303, 0.55", "65.1392, 9.6056, -38.0071, 0.55", "66.8623, 9.52978, -39.3776, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "24.7964, 6.04949, -18.1857, 0.83", "26.6666, 7.64452, -18.4171, 0.83", "27.7395, 8.54428, -18.6032, 0.55", "29.3228, 9.87676, -19.0334, 0.83", "30.3849, 10.7951, -19.3644, 0.55", "31.8411, 12.1092, -19.8062, 0.83", "33.5811, 13.7412, -20.2736, 0.55", "34.4655, 14.4993, -20.4531, 0.55", "36.5391, 15.974, -20.6434, 0.83", "38.4429, 17.1235, -20.4988, 0.55", "39.5015, 17.7764, -20.306, 0.83", "41.0712, 18.8296, -19.8443, 0.55", "43.2968, 20.4496, -18.8753, 0.55", "46.4038, 22.5607, -17.3167, 0.55", "49.3694, 24.5037, -15.5802, 0.55", "51.7201, 26.0253, -14.1521, 0.55", "55.5907, 28.5579, -11.7796, 0.55", "58.4032, 30.513, -9.99404, 0.55", "60.0707, 31.8631, -8.87976, 0.55", "63.081, 34.7065, -6.86998, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.831895, -23.5252, 7.90669, 0.83", "-1.10225, -26.6095, 7.78231, 0.83", "-1.36564, -29.6145, 7.66113, 0.83", "-1.65972, -32.9696, 7.52583, 0.83", "-1.81329, -34.7216, 7.45518, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.831895, -23.5252, 7.90669, 0.55", "-0.270697, -25.002, 8.88705, 0.55", "0.24219, -26.8071, 10.1768, 0.55", "0.560921, -29.1661, 11.9835, 0.55", "0.622249, -30.082, 12.7146, 0.83", "0.581128, -32.416, 14.8605, 0.55", "0.462367, -33.6195, 15.9979, 0.55", "0.187921, -35.9592, 18.3125, 0.83", "-0.109544, -37.695, 20.1484, 0.55", "-0.484178, -39.1243, 21.6485, 0.55", "-1.25813, -41.8299, 24.4441, 0.55", "-1.87437, -43.9863, 26.6467, 0.55", "-2.33153, -45.7157, 28.4346, 0.55", "-2.7187, -47.5538, 30.2681, 0.28", "-2.81709, -48.3205, 30.9981, 0.55", "-2.9669, -49.7372, 32.2636, 0.28", "-2.92029, -51.9534, 33.8752, 0.55", "-4.51781, -59.2933, 39.7484, 0.55", "-6.25807, -66.0725, 46.2243, 0.55", "-7.47412, -71.6534, 53.8594, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-38.4795, 34.7895, -0.189703, 0.55", "-40.5125, 34.9906, 0.786282, 0.55", "-41.3731, 35.0238, 1.29824, 0.83", "-42.3863, 35.0065, 2.02539, 0.55", "-43.1642, 34.9891, 2.65031, 0.83", "-45.2002, 35.0146, 4.27429, 0.55", "-45.971, 35.0363, 4.8958, 0.28", "-47.2599, 35.0806, 6.03852, 0.55", "-48.9887, 35.1503, 7.56449, 0.55", "-50.2991, 35.2068, 8.66457, 0.55", "-52.0476, 35.2851, 10.0797, 0.28", "-52.4998, 35.3117, 10.3941, 0.55", "-53.4342, 35.3795, 11.0107, 0.28", "-54.0659, 35.4449, 11.3719, 0.55", "-55.3518, 35.5758, 11.9985, 0.28", "-56.1064, 35.6138, 12.3252, 0.55", "-57.4408, 35.5844, 12.9071, 0.28", "-58.3361, 35.5606, 13.2665, 0.55", "-63.8932, 34.8539, 17.8281, 0.55", "-69.0223, 33.4341, 22.7135, 0.55", "-73.9799, 31.3348, 27.5306, 0.55", "-78.916, 28.4342, 31.9365, 0.55", "-83.0903, 25.7508, 37.1866, 0.55", "-87.7726, 23.3638, 42.1432, 0.55", "-92.5198, 22.1277, 47.4467, 0.55", "-97.2546, 20.3313, 52.5988, 0.55", "-101.854, 18.9922, 58.0063, 0.55", "-106.137, 17.5246, 63.6353, 0.55", "-109.753, 15.2125, 69.4465, 0.55", "-113.424, 13.5559, 75.4442, 0.55", "-117.195, 11.2066, 81.1408, 0.55", "-120.158, 8.5072, 87.1507, 0.55", "-121.943, 6.21711, 93.7659, 0.55", "-123.694, 2.65073, 99.7995, 0.55", "-124.426, -1.08892, 105.936, 0.55", "-125.538, -4.52592, 112.193, 0.55", "-127.406, -7.42728, 118.54, 0.55", "-130.716, -9.14844, 124.726, 0.55", "-133.432, -11.6872, 130.92, 0.55", "-134.809, -13.1292, 137.864, 0.55", "-137.303, -13.9881, 144.589, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-38.4795, 34.7895, -0.189703, 0.55", "-39.6065, 35.5377, -1.8302, 0.55", "-40.4102, 36.3477, -3.61316, 0.55", "-41.131, 37.3167, -5.47906, 0.55", "-41.5824, 37.9236, -6.64746, 0.55", "-42.4059, 39.0305, -8.77877, 0.83", "-43.0083, 39.8404, -10.338, 0.55", "-43.6398, 40.9493, -12.6086, 0.83", "-43.8143, 41.6721, -13.8587, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-80.9519, 24.6205, 31.6403, 0.28", "-81.8234, 22.8389, 31.831, 0.28", "-82.2543, 22.0584, 31.8611, 0.28", "-82.8201, 20.9488, 31.8575, 0.55", "-83.2844, 19.9759, 31.8564, 0.28", "-83.9656, 18.4984, 31.8676, 0.55", "-85.8451, 14.1734, 31.9452, 0.28", "-86.4771, 12.6345, 31.8534, 0.55", "-87.4481, 10.2496, 31.637, 0.28", "-88.0168, 8.81144, 31.446, 0.55", "-88.4137, 7.81572, 31.2933, 0.28", "-88.8645, 6.67481, 31.1258, 0.55", "-90.2147, 2.89001, 30.6247, 0.28", "-90.646, 1.73677, 30.44, 0.55", "-91.428, -0.0647654, 30.013, 0.28", "-92.0792, -1.24185, 29.6764, 0.28", "-92.6575, -2.03821, 29.4505, 0.55", "-94.6384, -4.27429, 28.9318, 0.28", "-95.5507, -5.17986, 28.7571, 0.55", "-97.7973, -7.27054, 28.2766, 0.28", "-100.04, -9.13738, 27.8556, 0.28", "-102.483, -10.9445, 27.4265, 0.28", "-103.594, -11.6329, 27.2912, 0.55", "-108.862, -18.6681, 26.4361, 0.55", "-114.411, -25.4864, 27.2614, 0.55", "-120.099, -32.2216, 26.757, 0.55", "-126.1, -38.5705, 25.4692, 0.55", "-132.347, -44.446, 23.3674, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-80.9519, 24.6205, 31.6403, 0.55", "-81.7173, 24.5583, 31.8843, 0.55", "-83.8304, 24.4367, 32.8559, 0.55", "-84.6165, 24.3775, 33.2685, 0.55", "-86.4574, 24.1843, 34.2788, 0.55", "-89.3134, 23.8919, 35.6834, 0.55", "-90.8041, 23.7832, 36.3776, 0.28", "-93.1292, 23.5525, 37.4199, 0.55", "-94.8647, 23.3325, 38.1361, 0.55", "-95.597, 23.2349, 38.4411, 0.28", "-99.9905, 22.6456, 40.2647, 0.55", "-102.06, 22.2483, 41.0048, 0.28", "-104.878, 21.6712, 41.8378, 0.28", "-107.333, 21.1843, 42.4056, 0.55", "-116.64, 21.0815, 46.4596, 0.55", "-125.437, 20.9185, 51.5252, 0.55", "-133.49, 19.9221, 57.6259, 0.55", "-141.238, 20.7405, 64.1354, 0.55", "-147.455, 21.5425, 72.1212, 0.55", "-152.044, 23.1476, 81.0338, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "66.8623, 9.52978, -39.3776, 0.55", "71.8814, 11.0216, -43.5877, 0.55", "73.4766, 11.4104, -45.0102, 0.55", "75.4783, 11.8342, -46.7583, 0.55", "79.1187, 12.5445, -50.1401, 0.55", "82.9343, 13.1173, -53.7437, 0.55", "84.8116, 13.2542, -55.4397, 0.83", "86.3691, 13.2466, -56.938, 0.55", "87.5453, 13.1313, -58.1625, 0.83", "90.4184, 12.4408, -61.2562, 0.55", "92.8033, 11.6562, -63.7924, 0.55", "95.5447, 10.7521, -66.5773, 0.55", "98.591, 9.82229, -69.7484, 0.55", "100.64, 9.14589, -71.9184, 0.55", "102.954, 8.36706, -74.4363, 0.55", "104.95, 7.74526, -76.7549, 0.55", "106.201, 7.44463, -78.3882, 0.55", "107.823, 6.82762, -81.6985, 0.55", "108.722, 6.3659, -83.7623, 0.55", "109.542, 5.59813, -86.4944, 0.55", "110.712, 4.13851, -91.0975, 0.55", "110.958, 3.76755, -92.1304, 0.28", "114.121, -0.87406, -104.666, 0.28", "115.161, -2.20063, -108.347, 0.83", "119.211, -7.11713, -121.364, 0.83", "121.282, -9.63698, -127.373, 0.83", "122.262, -10.7493, -129.79, 0.55", "123.366, -11.8322, -132.141, 0.55", "126.305, -13.8735, -136.465, 0.55", "129.407, -15.6656, -140.247, 0.28", "130.305, -15.9059, -140.428, 0.55", "132.253, -16.2126, -140.159, 0.28", "133.446, -16.2962, -139.833, 0.55", "134.688, -16.3862, -139.385, 0.28", "136.172, -16.4116, -138.789, 0.55", "138.388, -16.3629, -138.149, 0.28", "140.174, -16.3859, -137.687, 0.55", "142.144, -16.3011, -137.349, 0.28", "144.827, -16.2073, -137.128, 0.55", "147.835, -16.056, -137.069, 0.55", "150.483, -15.9142, -137.197, 0.28", "154.151, -15.7105, -137.58, 0.55", "160.495, -15.2707, -138.937, 0.55", "163.296, -14.9755, -139.893, 0.55", "164.498, -14.8154, -140.439, 0.83", "166.794, -14.5211, -141.69, 0.55", "168.385, -14.2654, -142.667, 0.83", "172.657, -13.4713, -145.358, 0.55", "175.282, -13.1747, -147.044, 0.28", "176.389, -13.1022, -147.622, 0.55", "179.437, -13.1385, -148.835, 0.28", "180.512, -13.239, -149.177, 0.55", "182.727, -13.5384, -149.531, 0.28", "184.989, -14.0079, -149.48, 0.55", "189.557, -15.0935, -148.564, 0.28", "191.665, -15.6562, -147.911, 0.55", "194.809, -16.6469, -146.754, 0.28", "198.777, -17.8654, -145.154, 0.55", "201.642, -18.7027, -143.958, 0.55", "206.59, -19.9914, -141.827, 0.28", "208.617, -20.4499, -141.128, 0.55", "212.107, -21.0942, -140.325, 0.28", "215.569, -21.5068, -139.797, 0.55", "217.457, -21.5556, -139.795, 0.28", "219.148, -21.3902, -139.957, 0.55", "223.911, -20.6979, -140.9, 0.28", "227.294, -19.9753, -141.66, 0.28", "230.218, -19.1373, -142.393, 0.55", "233.444, -18.1425, -143.38, 0.28", "234.251, -17.8367, -143.608, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "66.8623, 9.52978, -39.3776, 0.55", "67.5783, 7.56093, -40.5861, 0.55", "68.0346, 5.8824, -41.4929, 0.28", "68.4485, 4.34762, -42.1934, 0.55", "69.4913, 1.11039, -43.7071, 0.28", "69.5519, 0.905402, -43.8312, 0.55", "69.9007, -0.167601, -44.5686, 0.28", "70.1116, -1.06663, -45.3197, 0.55", "70.2815, -2.01285, -46.2096, 0.28", "70.4779, -3.30856, -47.4823, 0.55", "70.9678, -6.56092, -50.618, 0.55", "71.3825, -9.52978, -53.5277, 0.55", "71.6914, -11.905, -55.8568, 0.55", "71.9529, -14.2431, -58.1062, 0.55", "72.0181, -14.8468, -58.6624, 0.28", "72.1045, -15.4886, -59.2043, 0.55", "72.3028, -16.3679, -59.8737, 0.28", "72.8117, -17.9253, -60.9302, 0.55", "74.028, -20.8719, -62.4813, 0.55", "74.6931, -22.4517, -63.1726, 0.28", "75.2777, -24.0685, -63.947, 0.55", "75.934, -26.3508, -65.1182, 0.28", "76.3487, -28.2051, -66.1074, 0.55", "76.8536, -30.989, -67.5928, 0.28", "77.3946, -33.8652, -69.0421, 0.55", "78.1271, -38.0476, -71.183, 0.28", "78.4704, -40.2817, -72.3318, 0.55", "78.7867, -42.5718, -73.56, 0.28", "79.0471, -44.5934, -74.7639, 0.28", "79.4608, -47.12, -76.4809, 0.55", "79.9996, -49.4456, -78.0142, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "63.081, 34.7065, -6.86998, 0.55", "66.1315, 34.6849, -6.45239, 0.55", "68.3484, 34.5985, -6.36143, 0.55", "73.1878, 34.3698, -6.41572, 0.55", "75.3536, 34.2343, -6.63458, 0.55", "77.7014, 34.1434, -6.98878, 0.55", "80.8285, 34.0899, -7.68303, 0.55", "84.1112, 33.965, -8.73656, 0.55", "85.8202, 33.8888, -9.49012, 0.55", "89.2521, 33.7623, -11.5049, 0.55", "90.8266, 33.7206, -12.4838, 0.55", "94.5162, 33.5558, -14.8819, 0.55", "97.0291, 33.3386, -16.4926, 0.55", "98.8875, 33.1614, -17.5918, 0.83", "101.873, 32.7626, -19.3221, 0.55", "104.824, 32.2187, -20.9113, 0.83", "107.35, 31.6348, -22.1778, 0.55", "109.604, 31.141, -23.1839, 0.55", "110.886, 30.9123, -23.6808, 0.83", "113.891, 30.378, -24.6814, 0.28", "115.387, 30.1684, -25.0795, 0.28", "116.838, 29.8783, -25.5464, 0.28", "118.401, 29.6069, -26.0549, 0.28", "120.892, 29.223, -26.9168, 0.28", "121.896, 29.0791, -27.2327, 0.55", "124.315, 28.7453, -27.7507, 0.55", "128.693, 28.0894, -28.4681, 0.55", "129.912, 27.873, -28.6165, 0.55", "131.01, 27.642, -28.7057, 0.83", "133.403, 27.2006, -28.7063, 0.55", "135.485, 26.8189, -28.6741, 0.55", "137.452, 26.4658, -28.6341, 0.55", "138.975, 26.1691, -28.6471, 0.55", "141.398, 25.5416, -28.7954, 0.55", "144.266, 24.5673, -29.1427, 0.55", "148.749, 22.5863, -30.0232, 0.55", "151.234, 21.1588, -30.6852, 0.55", "153.417, 19.5758, -31.3908, 0.28", "154.079, 18.9708, -31.6479, 0.55", "155.579, 17.2261, -32.3205, 0.28", "156.916, 15.2183, -33.0022, 0.55", "158.252, 12.6514, -33.608, 0.55", "159.158, 10.962, -33.9226, 0.28", "159.49, 10.3646, -34.0037, 0.55", "160.346, 8.8836, -34.1858, 0.28", "161.509, 6.96022, -34.377, 0.55", "164.508, 2.34507, -34.7304, 0.55", "166.067, 0.0222416, -34.8598, 0.55", "167.513, -2.10548, -34.9594, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "63.081, 34.7065, -6.86998, 0.55", "65.1416, 35.7445, -5.1185, 0.55", "65.8067, 36.0673, -4.59594, 0.55", "68.3191, 37.1205, -2.74039, 0.55", "71.1091, 38.3631, -0.635577, 0.55", "74.677, 39.9664, 2.1662, 0.55", "75.6629, 40.4091, 2.93274, 0.55", "77.4471, 41.1275, 4.3031, 0.55", "79.4016, 41.9478, 5.71702, 0.55", "81.6714, 42.9481, 7.23851, 0.55", "83.8036, 43.9243, 8.67436, 0.55", "84.9681, 44.5055, 9.39287, 0.55", "86.3276, 45.2294, 10.2259, 0.55", "88.0025, 46.1708, 11.2136, 0.83", "90.776, 47.6479, 12.5193, 0.55", "92.6358, 48.5311, 13.3034, 0.83", "95.25, 49.6151, 14.3212, 0.55", "96.0625, 49.9003, 14.6302, 0.55", "98.6124, 50.6468, 15.5586, 0.55", "103.245, 51.6683, 17.0853, 0.55", "106.68, 52.2134, 18.1602, 0.55", "109.417, 52.5323, 19.0985, 0.55", "112.225, 52.7312, 20.1774, 0.55", "112.819, 52.7581, 20.4102, 0.28", "114.031, 52.7655, 20.8883, 0.83", "119.02, 52.7308, 22.8931, 0.55", "122.515, 52.6983, 24.2287, 0.55", "125.364, 52.7544, 25.3821, 0.55", "127.066, 52.7859, 26.0882, 0.83", "128.402, 52.83, 26.643, 0.28", "129.615, 52.8698, 27.1346, 0.55", "138.525, 55.6613, 31.888, 0.55", "148.423, 56.6903, 35.1639, 0.55", "158.01, 59.024, 38.688, 0.55", "166.631, 60.1273, 44.5393, 0.55", "174.849, 59.8404, 51.0328, 0.55", "184.323, 57.7387, 54.9803, 0.55", "193.954, 54.3692, 57.3639, 0.55", "204.208, 52.8283, 58.8645, 0.55", "214.326, 51.2375, 61.0702, 0.55", "224.698, 50.6936, 62.4509, 0.55", "234.842, 50.8215, 65.0685, 0.55", "244.616, 49.2224, 68.4869, 0.55", "254.24, 49.619, 72.61, 0.55", "263.067, 51.6774, 77.866, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.81329, -34.7216, 7.45518, 1.38", "1.27637, -37.7282, 7.08581, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.81329, -34.7216, 7.45518, 0.55", "-3.51955, -36.8281, 7.36283, 0.55", "-5.40275, -39.5277, 7.26364, 0.55", "-6.87327, -41.3157, 7.2018, 0.55", "-8.09566, -42.8113, 6.94947, 0.55", "-10.7419, -45.911, 6.13408, 0.55", "-12.5942, -47.9818, 5.50734, 0.55", "-14.2354, -49.8386, 4.88422, 0.55", "-18.4548, -54.3592, 3.28641, 0.55", "-23.5302, -59.5939, 1.40842, 0.55", "-27.4556, -63.5595, -0.118585, 0.55", "-29.9569, -66.1633, -1.13131, 0.55", "-32.8262, -69.2867, -2.28345, 0.55", "-36.4654, -73.764, -3.69204, 0.55", "-38.5932, -76.9381, -4.46606, 0.55", "-41.2325, -81.501, -5.17345, 0.55", "-43.3388, -85.7751, -5.64691, 0.55", "-45.4619, -91.107, -6.08284, 0.55", "-47.4608, -97.3652, -6.39797, 0.55", "-48.5322, -102.147, -6.48358, 0.55", "-48.9179, -104.525, -6.35726, 0.55", "-49.5166, -110.111, -5.72787, 0.55", "-49.996, -115.337, -4.99469, 0.55", "-50.2429, -120.597, -3.84443, 0.55", "-50.4301, -123.615, -3.02321, 0.55", "-50.9819, -132.942, -0.137504, 0.55", "-51.0282, -133.628, 0.0865896, 0.55", "-51.2412, -137.833, 1.56867, 0.55", "-51.987, -145.352, 4.36441, 0.55", "-52.2382, -147.867, 5.14908, 0.55", "-52.6696, -151.803, 5.69537, 0.55", "-52.7634, -153.267, 5.5685, 0.55", "-52.783, -158.229, 4.2329, 0.55", "-52.5596, -161.446, 2.71057, 0.55", "-51.9753, -166.578, -0.735186, 0.55", "-50.9668, -172.858, -5.40975, 0.28", "-50.6755, -174.411, -6.77113, 0.55", "-50.2083, -176.768, -9.03998, 0.28", "-50.1395, -177.123, -9.40084, 0.55", "-49.7893, -179.067, -11.213, 0.28", "-49.7281, -179.727, -11.6817, 0.55", "-49.5436, -183.151, -13.4689, 0.28", "-49.5268, -184.316, -14.0663, 0.55", "-49.5366, -187.686, -15.6074, 0.28", "-49.5353, -188.746, -16.0883, 0.55", "-49.5657, -192.405, -17.691, 0.28", "-49.5702, -194.088, -18.436, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.47412, -71.6534, 53.8594, 0.55", "-10.1097, -78.0063, 61.4527, 0.55", "-13.292, -83.268, 69.6472, 0.55", "-16.5809, -89.2011, 77.3247, 0.55", "-20.093, -95.1084, 84.9229, 0.55", "-23.2327, -102.327, 91.48, 0.55", "-26.0142, -109.301, 98.45, 0.55", "-28.9428, -117.915, 103.16, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.47412, -71.6534, 53.8594, 0.55", "-6.23134, -79.8273, 60.991, 0.55", "-5.10439, -89.1876, 66.4981, 0.55", "-5.68491, -98.3681, 72.3799, 0.55", "-7.17771, -107.932, 77.4304, 0.55", "-8.20335, -117.527, 82.54, 0.55", "-8.93391, -126.777, 88.2946, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-43.8143, 41.6721, -13.8587, 0.83", "-43.4375, 42.9947, -15.5491, 0.83", "-42.6144, 46.2158, -19.346, 0.55", "-42.2545, 47.6158, -20.8548, 0.83", "-41.8608, 49.1228, -22.3556, 0.55", "-41.4509, 50.6934, -23.6578, 0.55", "-41.2358, 51.4913, -24.202, 0.28", "-41.1253, 52.0337, -24.419, 0.55", "-40.6894, 53.8752, -24.7425, 0.28", "-40.482, 54.6653, -24.841, 0.55", "-39.792, 57.4229, -25.0683, 0.28", "-39.3001, 59.6172, -25.1714, 0.55", "-38.694, 63.0609, -25.2195, 0.28", "-38.2656, 66.0979, -25.1997, 0.28", "-38.1228, 67.8052, -25.1522, 0.55", "-38.0769, 69.8351, -25.0904, 0.28", "-38.1176, 70.8076, -25.0453, 0.55", "-38.3394, 73.0923, -25.037, 0.28", "-38.5895, 74.613, -25.1067, 0.28", "-38.8679, 76.1042, -25.2193, 0.28", "-38.9854, 76.8906, -25.2828, 0.55", "-39.2944, 80.0603, -25.6202, 0.28", "-39.539, 83.8051, -26.0928, 0.55", "-39.6048, 85.0974, -26.2617, 0.55", "-39.6905, 86.3959, -26.4025, 0.55", "-40.0188, 89.1559, -26.7413, 0.55", "-40.3511, 90.9683, -26.9989, 0.28", "-40.5559, 91.656, -27.1028, 0.55", "-41.2389, 93.525, -27.3407, 0.28", "-42.0485, 95.5108, -27.6694, 0.55", "-43.4782, 98.364, -28.2434, 0.28", "-44.2036, 99.5553, -28.517, 0.28", "-45.4276, 101.204, -29.0553, 0.55", "-46.8194, 102.918, -29.7029, 0.28", "-47.0785, 103.186, -29.8167, 0.55", "-48.0261, 104.044, -30.2107, 0.28", "-51.3176, 106.794, -31.4856, 0.55", "-55.9543, 110.176, -33.4045, 0.28", "-56.8201, 110.739, -33.808, 0.55", "-59.2102, 112.187, -34.9491, 0.28", "-60.2168, 112.779, -35.4552, 0.28", "-61.0964, 113.266, -35.9363, 0.55", "-63.7172, 114.362, -37.5206, 0.28", "-65.5869, 114.952, -38.5487, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-43.8143, 41.6721, -13.8587, 0.55", "-43.948, 43.4468, -14.18, 0.55", "-44.0511, 44.5014, -14.2711, 0.28", "-44.2694, 45.274, -14.1495, 0.55", "-44.7705, 47.0483, -13.8703, 0.28", "-45.1225, 48.2945, -13.6741, 0.55", "-45.7715, 50.592, -13.3125, 0.28", "-46.2345, 51.8415, -12.9078, 0.55", "-48.1587, 54.9176, -10.914, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-132.347, -44.446, 23.3674, 0.55", "-137.96, -52.7526, 23.5091, 0.55", "-142.034, -61.9025, 23.0563, 0.55", "-145.566, -70.9081, 20.4207, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-132.347, -44.446, 23.3674, 0.55", "-139.506, -53.4123, 21.4586, 0.55", "-145.685, -62.7063, 18.1835, 0.55", "-151.422, -72.1909, 14.661, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-152.044, 23.1476, 81.0338, 0.55", "-158.289, 24.3332, 86.9953, 0.55", "-165.242, 26.1944, 91.9105, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-152.044, 23.1476, 81.0338, 0.55", "-159.378, 22.4519, 85.3086, 0.55", "-166.808, 23.1521, 89.4141, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "79.9996, -49.4456, -78.0142, 0.28", "88.8889, -53.971, -90.2668, 0.28", "89.7475, -54.4887, -91.3511, 0.55", "91.1972, -55.3627, -93.1817, 0.28", "92.4178, -56.0986, -94.723, 0.28", "94.0336, -57.0728, -96.7634, 0.55", "96.1639, -58.3572, -99.4534, 0.55", "98.6635, -60.6347, -100.707, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "79.9996, -49.4456, -78.0142, 0.55", "80.7459, -50.5898, -79.2064, 0.55", "80.9806, -51.1024, -79.7453, 0.28", "81.3351, -51.9798, -80.6929, 0.55", "82.116, -53.9126, -82.7806, 0.28", "82.6572, -55.252, -84.2273, 0.55", "83.5741, -57.5214, -86.6785, 0.28", "84.6298, -60.2838, -89.9153, 0.28", "85.0593, -61.5523, -91.4363, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "167.513, -2.10548, -34.9594, 0.28", "169.398, -3.92212, -34.3327, 0.28", "171.809, -6.31571, -33.2576, 0.28", "173.343, -7.8676, -32.4812, 0.55", "174.258, -8.70775, -32.0026, 0.28", "174.745, -9.16047, -31.7391, 0.28", "177.158, -11.3984, -30.4827, 0.55", "177.714, -11.885, -30.1216, 0.28", "179.058, -13.1791, -29.0533, 0.55", "180.206, -14.3134, -28.1842, 0.28", "181.195, -15.2279, -27.5022, 0.55", "182.355, -16.3343, -26.7736, 0.55", "184.19, -18.1199, -25.8974, 0.55", "184.632, -18.5613, -25.702, 0.55", "186.228, -20.2221, -24.9932, 0.28", "186.85, -20.9081, -24.7247, 0.55", "187.707, -21.7736, -24.3876, 0.28", "188.914, -23.0108, -23.9777, 0.55", "190.886, -24.9819, -23.6798, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "167.513, -2.10548, -34.9594, 0.55", "163.656, -2.40798, -34.9192, 0.55", "160.524, -2.65364, -34.8866, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.27637, -37.7282, 7.08581, 0.83", "1.40543, -37.9644, 7.08967, 0.83", "2.83709, -40.0377, 7.31457, 0.83", "4.11501, -41.8536, 7.38765, 0.55", "5.13452, -43.3023, 7.44596, 0.55", "7.30153, -46.3815, 7.56989, 0.83", "9.92996, -50.1164, 7.72022, 0.55", "11.3511, -52.0685, 7.84866, 0.83", "13.8204, -55.1616, 8.24, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.27637, -37.7282, 7.08581, 0.55", "0.0366008, -38.8899, 3.99212, 0.55", "-1.29415, -40.1368, 0.671413, 0.55", "-2.86511, -41.6088, -3.24871, 0.55", "-4.77276, -43.3963, -8.009, 0.55", "-5.85529, -44.4107, -10.7103, 0.55", "-6.07275, -44.6144, -11.2529, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.93391, -126.777, 88.2946, 0.55", "-8.68145, -133.852, 93.152, 0.55", "-7.43897, -141.438, 96.9765, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-8.93391, -126.777, 88.2946, 0.55", "-9.5991, -135.373, 93.1613, 0.55", "-10.6164, -143.716, 98.3926, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-48.1587, 54.9176, -10.914, 0.28", "-48.8551, 56.05, -9.95633, 0.28", "-49.1134, 56.4825, -9.54584, 0.55", "-49.8471, 57.7368, -8.33249, 0.28", "-50.2173, 58.354, -7.79176, 0.55", "-51.2366, 60.021, -6.38414, 0.28", "-52.2725, 61.7154, -4.95348, 0.55", "-53.9964, 64.3862, -2.55001, 0.28", "-54.3629, 64.9594, -2.03808, 0.55", "-55.1663, 66.291, -0.962085, 0.28", "-55.4764, 66.8402, -0.542034, 0.55", "-59.2917, 70.6574, 3.2133, 0.55", "-63.6056, 75.0824, 5.45806, 0.55", "-67.172, 79.7043, 8.48272, 0.55", "-69.8355, 85.0444, 11.243, 0.55", "-73.2247, 90.1441, 13.638, 0.55", "-77.1839, 94.3432, 16.7878, 0.55", "-80.6913, 98.0972, 20.891, 0.55", "-83.5847, 101.236, 25.8919, 0.55", "-86.4766, 104.728, 30.6533, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-48.1587, 54.9176, -10.914, 0.55", "-50.7298, 54.2798, -9.6983, 0.55", "-52.0687, 53.9031, -9.06586, 0.28", "-53.065, 53.6228, -8.59522, 0.55", "-53.8954, 53.3891, -8.20296, 0.28", "-54.4771, 53.2255, -7.92821, 0.55", "-56.081, 52.7743, -7.1706, 0.28", "-57.1589, 52.3734, -6.79665, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-145.566, -70.9081, 20.4207, 0.55", "-148.671, -78.847, 20.6768, 0.55", "-151.361, -86.8612, 21.8037, 0.55", "-153.823, -95.012, 21.3185, 0.55", "-156.829, -102.952, 22.1217, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-145.566, -70.9081, 20.4207, 0.55", "-149.473, -74.8674, 16.7368, 0.55", "-153.288, -78.0299, 12.27, 0.55", "-157.412, -81.8696, 8.69892, 0.55", "-162.744, -84.6675, 5.82608, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-151.422, -72.1909, 14.661, 0.55", "-157.308, -73.9979, 10.1227, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-151.422, -72.1909, 14.661, 0.55", "-155.649, -82.3908, 12.1764, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "98.6635, -60.6347, -100.707, 0.28", "101.499, -62.1958, -101.991, 0.28", "102.817, -62.921, -102.588, 0.55", "105.328, -64.3038, -103.725, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "98.6635, -60.6347, -100.707, 0.55", "98.4028, -61.0658, -102.238, 0.55", "97.8813, -61.928, -105.301, 0.28", "97.7114, -62.2089, -106.299, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "85.0593, -61.5523, -91.4363, 0.28", "85.9114, -63.6243, -93.4973, 0.28", "86.3334, -64.6503, -94.5178, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "85.0593, -61.5523, -91.4363, 0.55", "83.603, -62.4205, -90.3799, 0.55", "79.5423, -64.8414, -87.4342, 0.28", "78.5776, -65.4165, -86.7344, 0.55", "75.9387, -66.9897, -84.8201, 0.28", "74.2378, -68.0038, -83.5862, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "13.8204, -55.1616, 8.24, 0.83", "13.8782, -55.4955, 8.21388, 0.83", "14.688, -59.8561, 8.00006, 0.83", "14.9897, -63.1313, 8.01945, 0.83", "15.0255, -66.2933, 8.34169, 0.83", "14.8915, -70.4976, 9.07254, 0.83", "14.5847, -75.3417, 10.0797, 0.83", "14.2354, -80.7384, 11.4904, 0.83", "13.8723, -85.9713, 13.1034, 0.83", "13.0216, -92.4235, 14.891, 0.83", "12.4854, -95.4027, 15.5268, 0.83", "12.0882, -97.6491, 15.8632, 0.83", "11.2445, -101.967, 16.4084, 0.83", "10.6012, -105.838, 16.6938, 0.83", "9.76948, -114.106, 16.4336, 0.83", "9.42771, -118.648, 15.7121, 0.83", "9.14157, -122.845, 14.7454, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.8204, -55.1616, 8.24, 0.55", "12.7084, -57.8799, 8.51849, 0.55", "11.8673, -59.843, 8.86638, 0.55", "11.3577, -61.0874, 9.21576, 0.55", "10.646, -63.0165, 9.95637, 0.55", "9.3277, -66.813, 11.6761, 0.55", "8.29282, -69.6629, 13.2998, 0.55", "7.45573, -71.9279, 14.8525, 0.55", "6.54574, -74.205, 16.5871, 0.55", "5.77055, -76.0861, 18.1281, 0.28", "5.10478, -77.606, 19.6222, 0.55", "3.80947, -80.3424, 22.7508, 0.55", "2.90936, -82.0087, 24.8594, 0.55", "2.3943, -82.9434, 26.0302, 0.55", "1.72885, -84.053, 27.3466, 0.83", "-0.267019, -87.3632, 31.0122, 0.28", "-0.925172, -88.4612, 32.1934, 0.55", "-2.04466, -90.4461, 34.2592, 0.28", "-2.39098, -91.0542, 34.9436, 0.55", "-3.11738, -92.4813, 36.5236, 0.28", "-3.52217, -93.2976, 37.3581, 0.55", "-4.98664, -96.0205, 39.304, 0.55", "-7.12631, -103.051, 47.6061, 0.55", "-8.7702, -109.671, 56.3476, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.07275, -44.6144, -11.2529, 0.55", "-7.69235, -45.6513, -14.2319, 0.55", "-8.18117, -45.8986, -15.0798, 0.55", "-9.42917, -46.52, -17.1442, 0.55", "-12.2114, -47.7614, -21.5078, 0.28", "-12.6364, -47.9327, -22.1229, 0.55", "-14.4357, -48.7134, -24.5978, 0.55", "-16.9905, -49.7833, -27.6858, 0.55", "-17.9774, -50.1536, -28.8391, 0.28", "-18.8612, -50.4042, -29.7918, 0.28", "-20.4398, -50.7947, -31.1815, 0.55", "-22.3458, -51.167, -32.9594, 0.28", "-24.0984, -51.3356, -34.6497, 0.55", "-25.4648, -51.3347, -35.9298, 0.55", "-26.3989, -51.243, -36.8464, 0.55", "-29.1213, -50.8292, -39.6358, 0.55", "-32.0098, -50.1643, -42.5147, 0.55", "-33.2143, -49.8126, -43.672, 0.28", "-34.3519, -49.4996, -44.795, 0.55", "-36.6639, -49.0381, -47.0433, 0.28", "-37.4439, -48.9088, -47.7905, 0.83", "-38.9322, -48.6471, -49.0755, 0.28", "-40.0448, -48.5497, -49.8461, 0.55", "-41.6686, -48.4699, -50.9295, 0.28", "-42.3216, -48.429, -51.3387, 0.55", "-43.5493, -48.3776, -52.0286, 0.55", "-45.4271, -48.1029, -53.0014, 0.55", "-46.6733, -47.8439, -53.568, 0.28", "-47.7001, -47.507, -53.9467, 0.55", "-48.9115, -46.9605, -54.4011, 0.28", "-49.1095, -46.8547, -54.4828, 0.55", "-50.8645, -45.8376, -55.552, 0.28", "-52.1057, -45.0731, -56.4686, 0.55", "-53.6883, -43.9483, -57.9193, 0.83", "-54.954, -42.9889, -59.2756, 0.28", "-55.272, -42.7439, -59.6625, 0.55", "-57.6721, -40.908, -62.7874, 0.28", "-58.0799, -40.5954, -63.3832, 0.55", "-59.2613, -39.5711, -65.2359, 0.28", "-59.5656, -39.3077, -65.717, 0.55", "-60.3637, -38.6216, -66.8845, 0.28", "-60.9405, -38.1272, -67.6677, 0.55", "-62.2888, -37.0229, -69.1829, 0.28", "-63.0986, -36.4341, -70.046, 0.55", "-64.8541, -35.3044, -71.7804, 0.28", "-65.3795, -35.001, -72.2872, 0.55", "-66.212, -34.5986, -73.047, 0.28", "-66.927, -34.2598, -73.6524, 0.55", "-68.4364, -33.5786, -74.8111, 0.28", "-68.8951, -33.3848, -75.1438, 0.55", "-72.3444, -31.8712, -77.4462, 0.28", "-73.5806, -31.2473, -78.1426, 0.55", "-75.8193, -30.0217, -79.2388, 0.28", "-76.8353, -29.4275, -79.7015, 0.55", "-79.1947, -28.0821, -80.6251, 0.28", "-80.0691, -27.6278, -80.9253, 0.55", "-83.2681, -26.2726, -81.8357, 0.28", "-84.605, -25.8761, -82.2005, 0.55", "-86.5184, -25.6255, -82.6941, 0.55", "-87.701, -25.5464, -82.9684, 0.55", "-90.146, -25.4471, -83.3421, 0.28", "-92.5765, -25.3727, -83.5599, 0.28", "-94.6103, -25.3032, -83.6837, 0.55", "-97.1336, -25.0069, -83.5719, 0.28", "-98.4008, -24.709, -83.3563, 0.55", "-101.44, -23.5353, -82.5604, 0.28", "-103.025, -22.6355, -81.7969, 0.55", "-104.054, -21.9009, -81.0914, 0.28", "-105.208, -21.0697, -80.0295, 0.55", "-106.647, -19.9776, -78.5304, 0.28", "-107.196, -19.5939, -77.9685, 0.55", "-110.068, -17.8854, -75.393, 0.28", "-111.04, -17.3485, -74.5345, 0.55", "-113.35, -16.1622, -72.4335, 0.28", "-114.605, -15.5333, -71.2926, 0.55", "-115.639, -15.0182, -70.3569, 0.55", "-116.877, -14.4129, -69.2717, 0.28", "-117.534, -14.1068, -68.8151, 0.55", "-119.746, -13.0098, -67.4202, 0.28", "-120.898, -12.3014, -66.6673, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.07275, -44.6144, -11.2529, 0.55", "-5.81351, -44.6527, -12.3874, 0.55", "-5.53205, -44.5626, -13.5136, 0.55", "-5.12037, -44.346, -14.891, 0.55", "-4.74641, -44.0744, -15.9905, 0.55", "-1.8533, -41.4893, -22.9235, 0.55", "-1.23179, -40.7258, -24.4868, 0.55", "-0.367188, -39.4294, -26.8121, 0.55", "0.231405, -38.4562, -28.4602, 0.55", "0.833668, -37.4112, -30.0361, 0.28", "1.84189, -35.6558, -32.3739, 0.55", "3.49028, -32.9186, -35.715, 0.28", "3.58166, -32.7477, -36.0658, 0.55", "3.65365, -32.1443, -38.5996, 0.28", "3.42685, -31.8802, -40.3314, 0.55", "3.02193, -31.7507, -42.1994, 0.55", "2.26829, -31.696, -45.5604, 0.55", "0.813016, -31.6329, -52.1635, 0.55", "-0.0805746, -31.6253, -56.6172, 0.55", "-0.346664, -31.6304, -58.1629, 0.55", "-1.86712, -31.5485, -68.3517, 0.55", "-2.16836, -31.4695, -71.1227, 0.55", "-2.22142, -31.4085, -72.6889, 0.55", "-2.018, -31.3094, -76.3543, 0.55", "-0.963222, -31.433, -85.1502, 0.55", "-0.566352, -31.5459, -87.5142, 0.28", "-0.231862, -31.6543, -88.8478, 0.55", "0.311276, -31.8885, -90.8212, 0.28", "0.60491, -32.0559, -91.6215, 0.55", "2.08419, -32.8387, -93.7613, 0.28", "3.82735, -34.0244, -94.5506, 0.55", "4.91581, -34.8939, -94.9643, 0.28", "5.97594, -35.8784, -95.2357, 0.55", "6.95727, -36.9769, -95.4087, 0.28", "7.38843, -37.5514, -95.5012, 0.55", "8.43251, -39.0709, -95.6514, 0.28", "8.68612, -39.5277, -95.7616, 0.55", "10.0807, -42.1439, -96.5436, 0.28", "10.7106, -43.3448, -97.0796, 0.55", "12.059, -45.8876, -98.5597, 0.28", "12.5623, -46.815, -99.2291, 0.55", "14.281, -49.835, -101.669, 0.28", "14.6933, -50.5675, -102.298, 0.55", "15.9001, -52.8955, -104.359, 0.28", "16.1628, -53.4475, -104.786, 0.55", "16.8099, -54.9145, -105.883, 0.28", "17.166, -55.7621, -106.61, 0.55", "17.524, -56.5878, -107.406, 0.55", "18.2435, -58.2353, -108.98, 0.28", "18.7502, -59.2354, -110.114, 0.55", "20.3546, -61.6324, -113.751, 0.28", "20.9598, -62.3795, -115.208, 0.55", "21.3908, -62.8427, -116.201, 0.28", "21.8401, -63.2516, -117.197, 0.55", "23.2701, -64.3566, -120.228, 0.28", "24.3877, -65.2195, -122.481, 0.55", "26.4531, -66.9139, -126.123, 0.28", "27.1068, -67.4391, -127.265, 0.55", "28.4553, -68.3891, -129.309, 0.28", "28.9333, -68.6987, -129.944, 0.55", "29.807, -69.1904, -130.807, 0.28", "30.6156, -69.5987, -131.495, 0.55", "32.9217, -70.5778, -133.119, 0.28", "35.5829, -71.5832, -134.933, 0.28", "36.9721, -72.0269, -135.753, 0.28", "38.3316, -72.4268, -136.66, 0.55", "40.3091, -72.9108, -137.99, 0.28", "41.1969, -73.1118, -138.562, 0.83", "43.5036, -73.658, -139.936, 0.28", "44.48, -73.9184, -140.587, 0.55", "48.687, -75.2391, -143.661, 0.28", "50.7081, -75.9255, -145.372, 0.28", "52.1267, -76.4236, -146.718, 0.55", "52.9015, -76.7341, -147.604, 0.55", "54.858, -77.594, -150.143, 0.28", "56.6424, -78.5104, -152.611, 0.55", "58.2702, -79.4155, -154.861, 0.28", "59.6895, -80.264, -156.992, 0.55", "60.8671, -80.9448, -158.744, 0.28", "61.8649, -81.4018, -160.109, 0.55", "64.3432, -82.3136, -163.261, 0.28", "65.6351, -82.7731, -164.797, 0.55", "67.6234, -83.4702, -167.022, 0.28", "69.2722, -83.9798, -168.797, 0.55", "73.1178, -84.9563, -172.952, 0.28", "74.6112, -85.2401, -174.757, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-7.43897, -141.438, 96.9765, 0.55", "-6.6795, -151.187, 101.688, 0.55", "-4.52878, -161.549, 104.104, 0.55", "-3.21155, -171.632, 107.902, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-7.43897, -141.438, 96.9765, 0.55", "-5.94127, -152.184, 103.654, 0.55", "-5.1406, -161.27, 112.549, 0.55", "-3.34666, -168.427, 122.935, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.6164, -143.716, 98.3926, 0.55", "-10.3015, -154.046, 104.051, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-10.6164, -143.716, 98.3926, 0.55", "-12.0305, -151.222, 103.197, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "9.14157, -122.845, 14.7454, 0.83", "10.5534, -127.652, 15.4512, 0.83", "12.0013, -131.676, 16.2901, 0.83", "13.4406, -135.676, 17.1241, 0.83", "14.8074, -139.475, 17.916, 0.83", "16.9137, -145.33, 19.1365, 0.83", "19.0048, -151.142, 20.3482, 0.83", "20.82, -154.945, 21.5578, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "9.14157, -122.845, 14.7454, 0.55", "10.4042, -124.429, 15.0804, 0.55", "11.4243, -125.673, 15.1188, 0.55", "12.1562, -126.599, 15.0449, 0.55", "12.8782, -127.7, 14.7823, 0.83", "13.6494, -128.962, 14.3136, 0.55", "14.4037, -130.196, 13.855, 0.83", "15.1739, -131.543, 13.2178, 0.55", "15.6352, -132.328, 12.7757, 0.83", "17.0659, -134.878, 11.1267, 0.55", "18.0542, -136.895, 9.67332, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.7702, -109.671, 56.3476, 0.55", "-12.172, -117.191, 62.4714, 0.55", "-16.9391, -123.712, 68.826, 0.55", "-22.3747, -129.247, 75.5667, 0.55", "-28.6569, -133.582, 82.449, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-8.7702, -109.671, 56.3476, 0.55", "-9.95692, -116.427, 63.7193, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "20.82, -154.945, 21.5578, 0.55", "21.208, -156.726, 22.0971, 0.55", "21.7889, -158.996, 22.8019, 0.55", "22.3315, -161.14, 23.4565, 0.55", "22.6892, -162.666, 23.9111, 0.55", "23.2777, -165.393, 24.7021, 0.55", "24.9284, -173.083, 26.6917, 0.55", "25.4831, -175.709, 27.2354, 0.55", "25.8303, -177.571, 27.5345, 0.55", "26.1505, -179.716, 27.7203, 0.55", "26.2957, -181.388, 27.7535, 0.55", "26.6486, -185.319, 27.6336, 0.55", "26.8264, -188.299, 27.5941, 0.55", "27.0182, -190.252, 27.5888, 0.55", "27.6374, -195.289, 27.8028, 0.55", "28.1153, -198.66, 28.0852, 0.55", "28.8801, -202.98, 28.6456, 0.55", "30.0062, -207.845, 29.5692, 0.55", "30.9939, -211.076, 30.279, 0.55", "31.6457, -212.982, 30.7171, 0.55", "32.2154, -214.738, 31.1347, 0.55", "32.9121, -216.974, 31.5519, 0.55", "34.3366, -222.403, 32.2781, 0.55", "34.9067, -224.513, 32.4537, 0.55", "35.4848, -226.864, 32.666, 0.55", "36.3181, -230.395, 32.9851, 0.55", "36.8647, -233.103, 33.3211, 0.55", "37.2382, -235.674, 33.693, 0.55", "37.5009, -238.122, 34.1073, 0.55", "37.7409, -240.506, 34.5636, 0.55", "37.9115, -242.206, 34.8683, 0.55", "38.1533, -244.996, 35.2749, 0.55", "38.2657, -248.371, 35.5701, 0.55", "38.2904, -250.025, 35.5856, 0.55", "38.267, -251.489, 35.4978, 0.55", "38.2429, -254.271, 35.127, 0.55", "38.1869, -256.039, 34.8604, 0.55", "38.1815, -258.21, 34.5876, 0.55", "38.178, -259.726, 34.5035, 0.55", "38.1906, -263.648, 34.4525, 0.55", "38.2505, -266.561, 34.6306, 0.55", "38.4762, -271.03, 35.2614, 0.55", "38.8218, -273.887, 35.8682, 0.55", "39.2174, -276.877, 36.6026, 0.28", "39.3774, -278.072, 36.9571, 0.28", "39.8978, -280.945, 38.0555, 0.28", "40.473, -283.575, 39.2701, 0.28", "41.7193, -287.024, 41.0158, 0.28", "44.3232, -295.028, 42.5879, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "20.82, -154.945, 21.5578, 0.55", "22.6919, -155.533, 21.6393, 0.55", "26.588, -157.018, 22.0967, 0.55", "29.9755, -158.476, 22.6405, 0.28", "33.627, -160.128, 23.333, 0.55", "35.8729, -161.154, 24.0265, 0.28", "39.8147, -162.971, 25.5584, 0.55", "41.5183, -163.906, 26.64, 0.28", "42.1453, -164.233, 27.1299, 0.28", "43.2295, -164.68, 27.9759, 0.55", "47.442, -166.113, 30.9304, 0.28", "49.2334, -166.667, 32.1129, 0.55", "54.6353, -168.32, 35.092, 0.28", "57.5634, -169.137, 36.498, 0.28", "61.2065, -170.217, 38.0507, 0.55", "66.6091, -171.961, 39.9241, 0.28", "67.3358, -172.2, 40.1031, 0.55", "70.8962, -173.391, 40.7553, 0.28", "71.2161, -173.505, 40.7815, 0.55", "74.0528, -174.872, 41.1349, 0.28", "75.4123, -175.614, 41.3918, 0.55", "86.5962, -181.053, 43.5261, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-28.6569, -133.582, 82.449, 0.55", "-30.2181, -136.295, 89.1607, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-28.6569, -133.582, 82.449, 0.55", "-32.6563, -138.8, 86.1583, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_BP_4617fbeed2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.40462, 8.60746, 2.90988, 0.83 ) }
    dend_43 { pt3dadd( -6.69494, 11.1578, 3.4061, 1.11 ) }
    dend_43 { pt3dadd( -8.63494, 12.6604, 3.66423, 0.83 ) }
    dend_43 { pt3dadd( -10.5198, 14.1076, 3.89551, 0.83 ) }
    dend_43 { pt3dadd( -11.6357, 14.9329, 4.02225, 1.11 ) }
    dend_43 { pt3dadd( -15.1303, 17.5116, 4.42843, 1.11 ) }
    dend_43 { pt3dadd( -21.3807, 21.9265, 5.14645, 0.83 ) }
    dend_43 { pt3dadd( -23.6325, 23.4564, 5.38356, 0.83 ) }
    dend_43 { pt3dadd( -25.4157, 24.6319, 5.53083, 0.83 ) }
    dend_43 { pt3dadd( -27.1546, 25.7969, 5.65832, 0.83 ) }
    dend_43 { pt3dadd( -28.5701, 26.7571, 5.7271, 0.55 ) }
    dend_43 { pt3dadd( -29.634, 27.4073, 5.79691, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.70228, 6.28408, -6.25398, 0.55 ) }
    dend_28 { pt3dadd( 7.52052, 6.89372, -6.88334, 0.55 ) }
    dend_28 { pt3dadd( 9.15584, 7.04762, -7.71612, 0.83 ) }
    dend_28 { pt3dadd( 11.744, 7.21139, -9.26307, 0.55 ) }
    dend_28 { pt3dadd( 12.9934, 7.29045, -10.0098, 1.38 ) }
    dend_28 { pt3dadd( 16.0653, 7.48484, -11.8459, 0.55 ) }
    dend_28 { pt3dadd( 17.3737, 7.41901, -12.7219, 0.83 ) }
    dend_28 { pt3dadd( 24.1416, 6.21183, -17.6442, 0.55 ) }
    dend_28 { pt3dadd( 24.7964, 6.04949, -18.1857, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.695522, -11.4929, 3.59312, 1.11 ) }
    dend_1 { pt3dadd( -0.765517, -17.6686, 5.8071, 1.11 ) }
    dend_1 { pt3dadd( -0.794024, -20.1837, 6.70877, 0.83 ) }
    dend_1 { pt3dadd( -0.831895, -23.5252, 7.90669, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.774718, 8.3158, -1.29661, 1.11 ) }
    dend_0 { pt3dadd( 0.797301, 8.94873, -1.29123, 1.11 ) }
    dend_0 { pt3dadd( 0.829598, 9.98142, -1.24492, 1.38 ) }
    dend_0 { pt3dadd( 0.832343, 10.0389, -1.24127, 1.38 ) }
    dend_0 { pt3dadd( 0.908762, 10.7509, -1.18677, 0.83 ) }
    dend_0 { pt3dadd( 1.01812, 11.5039, -1.0875, 0.83 ) }
    dend_0 { pt3dadd( 1.20913, 12.3546, -0.869283, 0.83 ) }
    dend_0 { pt3dadd( 1.31951, 12.6774, -0.744988, 0.83 ) }
    dend_0 { pt3dadd( 1.4296, 12.9114, -0.629976, 1.11 ) }
    dend_0 { pt3dadd( 1.7543, 13.4816, -0.331304, 0.55 ) }
    dend_0 { pt3dadd( 2.13219, 14.0771, 0.0252094, 0.83 ) }
    dend_0 { pt3dadd( 2.63134, 14.6901, 0.43289, 0.55 ) }
    dend_0 { pt3dadd( 2.88741, 14.9449, 0.618903, 0.83 ) }
    dend_0 { pt3dadd( 3.24424, 15.2902, 0.907546, 0.55 ) }
    dend_0 { pt3dadd( 3.68486, 15.7293, 1.29682, 0.55 ) }
    dend_0 { pt3dadd( 4.29782, 16.3899, 1.88935, 0.55 ) }
    dend_0 { pt3dadd( 4.97303, 17.1449, 2.54352, 0.55 ) }
    dend_0 { pt3dadd( 5.39568, 17.6348, 3.02935, 0.55 ) }
    dend_0 { pt3dadd( 5.90975, 18.2542, 3.71232, 0.55 ) }
    dend_0 { pt3dadd( 6.01607, 18.3784, 3.86692, 0.83 ) }
    dend_0 { pt3dadd( 6.29567, 18.7067, 4.30232, 0.55 ) }
    dend_0 { pt3dadd( 6.53218, 18.9628, 4.64475, 0.83 ) }
    dend_0 { pt3dadd( 7.07488, 19.6618, 5.45601, 0.55 ) }
    dend_0 { pt3dadd( 7.28222, 19.9171, 5.69473, 0.83 ) }
    dend_0 { pt3dadd( 7.47927, 20.1054, 5.8587, 0.55 ) }
    dend_0 { pt3dadd( 7.67648, 20.2677, 5.98616, 0.83 ) }
    dend_0 { pt3dadd( 8.11633, 20.5698, 6.22018, 0.83 ) }
    dend_0 { pt3dadd( 8.70021, 20.981, 6.47559, 0.83 ) }
    dend_0 { pt3dadd( 9.05994, 21.2526, 6.59203, 0.55 ) }
    dend_0 { pt3dadd( 9.33397, 21.4875, 6.68238, 0.55 ) }
    dend_0 { pt3dadd( 10.0528, 22.0944, 6.90807, 0.83 ) }
    dend_0 { pt3dadd( 10.5179, 22.4836, 7.03447, 0.55 ) }
    dend_0 { pt3dadd( 11.2253, 23.0538, 7.19677, 0.55 ) }
    dend_0 { pt3dadd( 11.8748, 23.5322, 7.31883, 0.55 ) }
    dend_0 { pt3dadd( 12.4565, 23.9376, 7.412, 0.55 ) }
    dend_0 { pt3dadd( 13.1932, 24.4128, 7.49561, 0.55 ) }
    dend_0 { pt3dadd( 13.6444, 24.6461, 7.53183, 0.55 ) }
    dend_0 { pt3dadd( 13.9538, 24.7775, 7.51919, 0.55 ) }
    dend_0 { pt3dadd( 14.3667, 24.8766, 7.46749, 0.55 ) }
    dend_0 { pt3dadd( 14.9852, 24.9244, 7.33993, 0.55 ) }
    dend_0 { pt3dadd( 15.3718, 24.9055, 7.2456, 0.55 ) }
    dend_0 { pt3dadd( 15.9354, 24.8627, 7.14711, 0.55 ) }
    dend_0 { pt3dadd( 17.0055, 24.8152, 7.05491, 0.55 ) }
    dend_0 { pt3dadd( 17.8428, 24.8167, 7.04222, 0.55 ) }
    dend_0 { pt3dadd( 18.7282, 24.8606, 7.08176, 0.55 ) }
    dend_0 { pt3dadd( 19.2941, 24.9082, 7.15206, 0.55 ) }
    dend_0 { pt3dadd( 20.7601, 25.1658, 7.43207, 0.55 ) }
    dend_0 { pt3dadd( 21.6247, 25.3856, 7.66366, 0.55 ) }
    dend_0 { pt3dadd( 22.2706, 25.5935, 7.89882, 0.55 ) }
    dend_0 { pt3dadd( 22.662, 25.7861, 8.05721, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 23.1153, 26.0718, 8.23851, 0.55 ) }
    dend_0 { pt3dadd( 23.8844, 26.6343, 8.47539, 0.55 ) }
    dend_0 { pt3dadd( 24.0616, 26.7697, 8.50483, 0.55 ) }
    dend_0 { pt3dadd( 24.5715, 27.1318, 8.55524, 0.55 ) }
    dend_0 { pt3dadd( 25.0396, 27.5172, 8.59977, 0.83 ) }
    dend_0 { pt3dadd( 25.2952, 27.731, 8.61997, 0.55 ) }
    dend_0 { pt3dadd( 25.6781, 28.0975, 8.63481, 0.83 ) }
    dend_0 { pt3dadd( 27.6758, 30.0552, 9.25092, 0.83 ) }
    dend_0 { pt3dadd( 29.4136, 32.2972, 9.64597, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -29.634, 27.4073, 5.79691, 0.55 ) }
    dend_55 { pt3dadd( -30.8839, 28.4505, 4.95094, 0.55 ) }
    dend_55 { pt3dadd( -32.2431, 29.5848, 4.03104, 0.55 ) }
    dend_55 { pt3dadd( -33.8834, 30.9537, 2.92092, 0.55 ) }
    dend_55 { pt3dadd( -35.2378, 32.0841, 2.00427, 0.83 ) }
    dend_55 { pt3dadd( -36.3728, 33.0313, 1.23611, 0.55 ) }
    dend_55 { pt3dadd( -38.4795, 34.7895, -0.189703, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -29.634, 27.4073, 5.79691, 0.55 ) }
    dend_44 { pt3dadd( -32.2139, 27.7734, 5.83052, 0.55 ) }
    dend_44 { pt3dadd( -34.9141, 28.121, 6.14286, 0.55 ) }
    dend_44 { pt3dadd( -37.9641, 28.5219, 6.5711, 0.55 ) }
    dend_44 { pt3dadd( -42.3165, 29.1182, 7.59814, 0.55 ) }
    dend_44 { pt3dadd( -45.913, 29.5512, 8.73312, 0.55 ) }
    dend_44 { pt3dadd( -49.6566, 29.9717, 10.0961, 0.55 ) }
    dend_44 { pt3dadd( -53.201, 30.1883, 11.8515, 0.55 ) }
    dend_44 { pt3dadd( -56.1892, 30.1101, 13.7197, 0.55 ) }
    dend_44 { pt3dadd( -59.8326, 29.7991, 16.5175, 0.55 ) }
    dend_44 { pt3dadd( -61.3728, 29.574, 17.9952, 0.55 ) }
    dend_44 { pt3dadd( -63.0229, 29.3234, 19.6753, 0.55 ) }
    dend_44 { pt3dadd( -65.9455, 28.6053, 22.5274, 0.55 ) }
    dend_44 { pt3dadd( -67.5448, 28.1847, 23.7676, 0.55 ) }
    dend_44 { pt3dadd( -69.219, 27.6854, 25.0646, 0.55 ) }
    dend_44 { pt3dadd( -71.2462, 27.0845, 26.3808, 0.55 ) }
    dend_44 { pt3dadd( -73.4619, 26.4711, 27.7384, 0.55 ) }
    dend_44 { pt3dadd( -76.6353, 25.5754, 29.6033, 0.55 ) }
    dend_44 { pt3dadd( -80.9519, 24.6205, 31.6403, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 24.7964, 6.04949, -18.1857, 0.55 ) }
    dend_34 { pt3dadd( 28.6724, 7.32857, -19.05, 0.55 ) }
    dend_34 { pt3dadd( 30.928, 7.90184, -19.8553, 0.55 ) }
    dend_34 { pt3dadd( 33.1639, 8.3639, -20.6731, 0.55 ) }
    dend_34 { pt3dadd( 34.6967, 8.61851, -21.2254, 0.55 ) }
    dend_34 { pt3dadd( 36.941, 8.94036, -22.0104, 0.55 ) }
    dend_34 { pt3dadd( 41.6089, 9.50434, -23.7755, 0.55 ) }
    dend_34 { pt3dadd( 46.9185, 10.0771, -26.1269, 0.55 ) }
    dend_34 { pt3dadd( 49.5124, 10.1783, -27.4292, 0.55 ) }
    dend_34 { pt3dadd( 50.9074, 10.1902, -28.2134, 0.55 ) }
    dend_34 { pt3dadd( 52.4382, 10.2047, -29.1352, 0.55 ) }
    dend_34 { pt3dadd( 55.1761, 10.1567, -30.7623, 0.55 ) }
    dend_34 { pt3dadd( 56.1763, 10.079, -31.3802, 0.55 ) }
    dend_34 { pt3dadd( 60.4119, 9.82249, -34.3249, 0.55 ) }
    dend_34 { pt3dadd( 63.4128, 9.66693, -36.6303, 0.55 ) }
    dend_34 { pt3dadd( 65.1392, 9.6056, -38.0071, 0.55 ) }
    dend_34 { pt3dadd( 66.8623, 9.52978, -39.3776, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 24.7964, 6.04949, -18.1857, 0.83 ) }
    dend_29 { pt3dadd( 26.6666, 7.64452, -18.4171, 0.83 ) }
    dend_29 { pt3dadd( 27.7395, 8.54428, -18.6032, 0.55 ) }
    dend_29 { pt3dadd( 29.3228, 9.87676, -19.0334, 0.83 ) }
    dend_29 { pt3dadd( 30.3849, 10.7951, -19.3644, 0.55 ) }
    dend_29 { pt3dadd( 31.8411, 12.1092, -19.8062, 0.83 ) }
    dend_29 { pt3dadd( 33.5811, 13.7412, -20.2736, 0.55 ) }
    dend_29 { pt3dadd( 34.4655, 14.4993, -20.4531, 0.55 ) }
    dend_29 { pt3dadd( 36.5391, 15.974, -20.6434, 0.83 ) }
    dend_29 { pt3dadd( 38.4429, 17.1235, -20.4988, 0.55 ) }
    dend_29 { pt3dadd( 39.5015, 17.7764, -20.306, 0.83 ) }
    dend_29 { pt3dadd( 41.0712, 18.8296, -19.8443, 0.55 ) }
    dend_29 { pt3dadd( 43.2968, 20.4496, -18.8753, 0.55 ) }
    dend_29 { pt3dadd( 46.4038, 22.5607, -17.3167, 0.55 ) }
    dend_29 { pt3dadd( 49.3694, 24.5037, -15.5802, 0.55 ) }
    dend_29 { pt3dadd( 51.7201, 26.0253, -14.1521, 0.55 ) }
    dend_29 { pt3dadd( 55.5907, 28.5579, -11.7796, 0.55 ) }
    dend_29 { pt3dadd( 58.4032, 30.513, -9.99404, 0.55 ) }
    dend_29 { pt3dadd( 60.0707, 31.8631, -8.87976, 0.55 ) }
    dend_29 { pt3dadd( 63.081, 34.7065, -6.86998, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.831895, -23.5252, 7.90669, 0.83 ) }
    dend_11 { pt3dadd( -1.10225, -26.6095, 7.78231, 0.83 ) }
    dend_11 { pt3dadd( -1.36564, -29.6145, 7.66113, 0.83 ) }
    dend_11 { pt3dadd( -1.65972, -32.9696, 7.52583, 0.83 ) }
    dend_11 { pt3dadd( -1.81329, -34.7216, 7.45518, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.831895, -23.5252, 7.90669, 0.55 ) }
    dend_2 { pt3dadd( -0.270697, -25.002, 8.88705, 0.55 ) }
    dend_2 { pt3dadd( 0.24219, -26.8071, 10.1768, 0.55 ) }
    dend_2 { pt3dadd( 0.560921, -29.1661, 11.9835, 0.55 ) }
    dend_2 { pt3dadd( 0.622249, -30.082, 12.7146, 0.83 ) }
    dend_2 { pt3dadd( 0.581128, -32.416, 14.8605, 0.55 ) }
    dend_2 { pt3dadd( 0.462367, -33.6195, 15.9979, 0.55 ) }
    dend_2 { pt3dadd( 0.187921, -35.9592, 18.3125, 0.83 ) }
    dend_2 { pt3dadd( -0.109544, -37.695, 20.1484, 0.55 ) }
    dend_2 { pt3dadd( -0.484178, -39.1243, 21.6485, 0.55 ) }
    dend_2 { pt3dadd( -1.25813, -41.8299, 24.4441, 0.55 ) }
    dend_2 { pt3dadd( -1.87437, -43.9863, 26.6467, 0.55 ) }
    dend_2 { pt3dadd( -2.33153, -45.7157, 28.4346, 0.55 ) }
    dend_2 { pt3dadd( -2.7187, -47.5538, 30.2681, 0.28 ) }
    dend_2 { pt3dadd( -2.81709, -48.3205, 30.9981, 0.55 ) }
    dend_2 { pt3dadd( -2.9669, -49.7372, 32.2636, 0.28 ) }
    dend_2 { pt3dadd( -2.92029, -51.9534, 33.8752, 0.55 ) }
    dend_2 { pt3dadd( -4.51781, -59.2933, 39.7484, 0.55 ) }
    dend_2 { pt3dadd( -6.25807, -66.0725, 46.2243, 0.55 ) }
    dend_2 { pt3dadd( -7.47412, -71.6534, 53.8594, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -38.4795, 34.7895, -0.189703, 0.55 ) }
    dend_61 { pt3dadd( -40.5125, 34.9906, 0.786282, 0.55 ) }
    dend_61 { pt3dadd( -41.3731, 35.0238, 1.29824, 0.83 ) }
    dend_61 { pt3dadd( -42.3863, 35.0065, 2.02539, 0.55 ) }
    dend_61 { pt3dadd( -43.1642, 34.9891, 2.65031, 0.83 ) }
    dend_61 { pt3dadd( -45.2002, 35.0146, 4.27429, 0.55 ) }
    dend_61 { pt3dadd( -45.971, 35.0363, 4.8958, 0.28 ) }
    dend_61 { pt3dadd( -47.2599, 35.0806, 6.03852, 0.55 ) }
    dend_61 { pt3dadd( -48.9887, 35.1503, 7.56449, 0.55 ) }
    dend_61 { pt3dadd( -50.2991, 35.2068, 8.66457, 0.55 ) }
    dend_61 { pt3dadd( -52.0476, 35.2851, 10.0797, 0.28 ) }
    dend_61 { pt3dadd( -52.4998, 35.3117, 10.3941, 0.55 ) }
    dend_61 { pt3dadd( -53.4342, 35.3795, 11.0107, 0.28 ) }
    dend_61 { pt3dadd( -54.0659, 35.4449, 11.3719, 0.55 ) }
    dend_61 { pt3dadd( -55.3518, 35.5758, 11.9985, 0.28 ) }
    dend_61 { pt3dadd( -56.1064, 35.6138, 12.3252, 0.55 ) }
    dend_61 { pt3dadd( -57.4408, 35.5844, 12.9071, 0.28 ) }
    dend_61 { pt3dadd( -58.3361, 35.5606, 13.2665, 0.55 ) }
    dend_61 { pt3dadd( -63.8932, 34.8539, 17.8281, 0.55 ) }
    dend_61 { pt3dadd( -69.0223, 33.4341, 22.7135, 0.55 ) }
    dend_61 { pt3dadd( -73.9799, 31.3348, 27.5306, 0.55 ) }
    dend_61 { pt3dadd( -78.916, 28.4342, 31.9365, 0.55 ) }
    dend_61 { pt3dadd( -83.0903, 25.7508, 37.1866, 0.55 ) }
    dend_61 { pt3dadd( -87.7726, 23.3638, 42.1432, 0.55 ) }
    dend_61 { pt3dadd( -92.5198, 22.1277, 47.4467, 0.55 ) }
    dend_61 { pt3dadd( -97.2546, 20.3313, 52.5988, 0.55 ) }
    dend_61 { pt3dadd( -101.854, 18.9922, 58.0063, 0.55 ) }
    dend_61 { pt3dadd( -106.137, 17.5246, 63.6353, 0.55 ) }
    dend_61 { pt3dadd( -109.753, 15.2125, 69.4465, 0.55 ) }
    dend_61 { pt3dadd( -113.424, 13.5559, 75.4442, 0.55 ) }
    dend_61 { pt3dadd( -117.195, 11.2066, 81.1408, 0.55 ) }
    dend_61 { pt3dadd( -120.158, 8.5072, 87.1507, 0.55 ) }
    dend_61 { pt3dadd( -121.943, 6.21711, 93.7659, 0.55 ) }
    dend_61 { pt3dadd( -123.694, 2.65073, 99.7995, 0.55 ) }
    dend_61 { pt3dadd( -124.426, -1.08892, 105.936, 0.55 ) }
    dend_61 { pt3dadd( -125.538, -4.52592, 112.193, 0.55 ) }
    dend_61 { pt3dadd( -127.406, -7.42728, 118.54, 0.55 ) }
    dend_61 { pt3dadd( -130.716, -9.14844, 124.726, 0.55 ) }
    dend_61 { pt3dadd( -133.432, -11.6872, 130.92, 0.55 ) }
    dend_61 { pt3dadd( -134.809, -13.1292, 137.864, 0.55 ) }
    dend_61 { pt3dadd( -137.303, -13.9881, 144.589, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -38.4795, 34.7895, -0.189703, 0.55 ) }
    dend_56 { pt3dadd( -39.6065, 35.5377, -1.8302, 0.55 ) }
    dend_56 { pt3dadd( -40.4102, 36.3477, -3.61316, 0.55 ) }
    dend_56 { pt3dadd( -41.131, 37.3167, -5.47906, 0.55 ) }
    dend_56 { pt3dadd( -41.5824, 37.9236, -6.64746, 0.55 ) }
    dend_56 { pt3dadd( -42.4059, 39.0305, -8.77877, 0.83 ) }
    dend_56 { pt3dadd( -43.0083, 39.8404, -10.338, 0.55 ) }
    dend_56 { pt3dadd( -43.6398, 40.9493, -12.6086, 0.83 ) }
    dend_56 { pt3dadd( -43.8143, 41.6721, -13.8587, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -80.9519, 24.6205, 31.6403, 0.28 ) }
    dend_48 { pt3dadd( -81.8234, 22.8389, 31.831, 0.28 ) }
    dend_48 { pt3dadd( -82.2543, 22.0584, 31.8611, 0.28 ) }
    dend_48 { pt3dadd( -82.8201, 20.9488, 31.8575, 0.55 ) }
    dend_48 { pt3dadd( -83.2844, 19.9759, 31.8564, 0.28 ) }
    dend_48 { pt3dadd( -83.9656, 18.4984, 31.8676, 0.55 ) }
    dend_48 { pt3dadd( -85.8451, 14.1734, 31.9452, 0.28 ) }
    dend_48 { pt3dadd( -86.4771, 12.6345, 31.8534, 0.55 ) }
    dend_48 { pt3dadd( -87.4481, 10.2496, 31.637, 0.28 ) }
    dend_48 { pt3dadd( -88.0168, 8.81144, 31.446, 0.55 ) }
    dend_48 { pt3dadd( -88.4137, 7.81572, 31.2933, 0.28 ) }
    dend_48 { pt3dadd( -88.8645, 6.67481, 31.1258, 0.55 ) }
    dend_48 { pt3dadd( -90.2147, 2.89001, 30.6247, 0.28 ) }
    dend_48 { pt3dadd( -90.646, 1.73677, 30.44, 0.55 ) }
    dend_48 { pt3dadd( -91.428, -0.0647654, 30.013, 0.28 ) }
    dend_48 { pt3dadd( -92.0792, -1.24185, 29.6764, 0.28 ) }
    dend_48 { pt3dadd( -92.6575, -2.03821, 29.4505, 0.55 ) }
    dend_48 { pt3dadd( -94.6384, -4.27429, 28.9318, 0.28 ) }
    dend_48 { pt3dadd( -95.5507, -5.17986, 28.7571, 0.55 ) }
    dend_48 { pt3dadd( -97.7973, -7.27054, 28.2766, 0.28 ) }
    dend_48 { pt3dadd( -100.04, -9.13738, 27.8556, 0.28 ) }
    dend_48 { pt3dadd( -102.483, -10.9445, 27.4265, 0.28 ) }
    dend_48 { pt3dadd( -103.594, -11.6329, 27.2912, 0.55 ) }
    dend_48 { pt3dadd( -108.862, -18.6681, 26.4361, 0.55 ) }
    dend_48 { pt3dadd( -114.411, -25.4864, 27.2614, 0.55 ) }
    dend_48 { pt3dadd( -120.099, -32.2216, 26.757, 0.55 ) }
    dend_48 { pt3dadd( -126.1, -38.5705, 25.4692, 0.55 ) }
    dend_48 { pt3dadd( -132.347, -44.446, 23.3674, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -80.9519, 24.6205, 31.6403, 0.55 ) }
    dend_45 { pt3dadd( -81.7173, 24.5583, 31.8843, 0.55 ) }
    dend_45 { pt3dadd( -83.8304, 24.4367, 32.8559, 0.55 ) }
    dend_45 { pt3dadd( -84.6165, 24.3775, 33.2685, 0.55 ) }
    dend_45 { pt3dadd( -86.4574, 24.1843, 34.2788, 0.55 ) }
    dend_45 { pt3dadd( -89.3134, 23.8919, 35.6834, 0.55 ) }
    dend_45 { pt3dadd( -90.8041, 23.7832, 36.3776, 0.28 ) }
    dend_45 { pt3dadd( -93.1292, 23.5525, 37.4199, 0.55 ) }
    dend_45 { pt3dadd( -94.8647, 23.3325, 38.1361, 0.55 ) }
    dend_45 { pt3dadd( -95.597, 23.2349, 38.4411, 0.28 ) }
    dend_45 { pt3dadd( -99.9905, 22.6456, 40.2647, 0.55 ) }
    dend_45 { pt3dadd( -102.06, 22.2483, 41.0048, 0.28 ) }
    dend_45 { pt3dadd( -104.878, 21.6712, 41.8378, 0.28 ) }
    dend_45 { pt3dadd( -107.333, 21.1843, 42.4056, 0.55 ) }
    dend_45 { pt3dadd( -116.64, 21.0815, 46.4596, 0.55 ) }
    dend_45 { pt3dadd( -125.437, 20.9185, 51.5252, 0.55 ) }
    dend_45 { pt3dadd( -133.49, 19.9221, 57.6259, 0.55 ) }
    dend_45 { pt3dadd( -141.238, 20.7405, 64.1354, 0.55 ) }
    dend_45 { pt3dadd( -147.455, 21.5425, 72.1212, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -152.044, 23.1476, 81.0338, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 66.8623, 9.52978, -39.3776, 0.55 ) }
    dend_42 { pt3dadd( 71.8814, 11.0216, -43.5877, 0.55 ) }
    dend_42 { pt3dadd( 73.4766, 11.4104, -45.0102, 0.55 ) }
    dend_42 { pt3dadd( 75.4783, 11.8342, -46.7583, 0.55 ) }
    dend_42 { pt3dadd( 79.1187, 12.5445, -50.1401, 0.55 ) }
    dend_42 { pt3dadd( 82.9343, 13.1173, -53.7437, 0.55 ) }
    dend_42 { pt3dadd( 84.8116, 13.2542, -55.4397, 0.83 ) }
    dend_42 { pt3dadd( 86.3691, 13.2466, -56.938, 0.55 ) }
    dend_42 { pt3dadd( 87.5453, 13.1313, -58.1625, 0.83 ) }
    dend_42 { pt3dadd( 90.4184, 12.4408, -61.2562, 0.55 ) }
    dend_42 { pt3dadd( 92.8033, 11.6562, -63.7924, 0.55 ) }
    dend_42 { pt3dadd( 95.5447, 10.7521, -66.5773, 0.55 ) }
    dend_42 { pt3dadd( 98.591, 9.82229, -69.7484, 0.55 ) }
    dend_42 { pt3dadd( 100.64, 9.14589, -71.9184, 0.55 ) }
    dend_42 { pt3dadd( 102.954, 8.36706, -74.4363, 0.55 ) }
    dend_42 { pt3dadd( 104.95, 7.74526, -76.7549, 0.55 ) }
    dend_42 { pt3dadd( 106.201, 7.44463, -78.3882, 0.55 ) }
    dend_42 { pt3dadd( 107.823, 6.82762, -81.6985, 0.55 ) }
    dend_42 { pt3dadd( 108.722, 6.3659, -83.7623, 0.55 ) }
    dend_42 { pt3dadd( 109.542, 5.59813, -86.4944, 0.55 ) }
    dend_42 { pt3dadd( 110.712, 4.13851, -91.0975, 0.55 ) }
    dend_42 { pt3dadd( 110.958, 3.76755, -92.1304, 0.28 ) }
    dend_42 { pt3dadd( 114.121, -0.87406, -104.666, 0.28 ) }
    dend_42 { pt3dadd( 115.161, -2.20063, -108.347, 0.83 ) }
    dend_42 { pt3dadd( 119.211, -7.11713, -121.364, 0.83 ) }
    dend_42 { pt3dadd( 121.282, -9.63698, -127.373, 0.83 ) }
    dend_42 { pt3dadd( 122.262, -10.7493, -129.79, 0.55 ) }
    dend_42 { pt3dadd( 123.366, -11.8322, -132.141, 0.55 ) }
    dend_42 { pt3dadd( 126.305, -13.8735, -136.465, 0.55 ) }
    dend_42 { pt3dadd( 129.407, -15.6656, -140.247, 0.28 ) }
    dend_42 { pt3dadd( 130.305, -15.9059, -140.428, 0.55 ) }
    dend_42 { pt3dadd( 132.253, -16.2126, -140.159, 0.28 ) }
    dend_42 { pt3dadd( 133.446, -16.2962, -139.833, 0.55 ) }
    dend_42 { pt3dadd( 134.688, -16.3862, -139.385, 0.28 ) }
    dend_42 { pt3dadd( 136.172, -16.4116, -138.789, 0.55 ) }
    dend_42 { pt3dadd( 138.388, -16.3629, -138.149, 0.28 ) }
    dend_42 { pt3dadd( 140.174, -16.3859, -137.687, 0.55 ) }
    dend_42 { pt3dadd( 142.144, -16.3011, -137.349, 0.28 ) }
    dend_42 { pt3dadd( 144.827, -16.2073, -137.128, 0.55 ) }
    dend_42 { pt3dadd( 147.835, -16.056, -137.069, 0.55 ) }
    dend_42 { pt3dadd( 150.483, -15.9142, -137.197, 0.28 ) }
    dend_42 { pt3dadd( 154.151, -15.7105, -137.58, 0.55 ) }
    dend_42 { pt3dadd( 160.495, -15.2707, -138.937, 0.55 ) }
    dend_42 { pt3dadd( 163.296, -14.9755, -139.893, 0.55 ) }
    dend_42 { pt3dadd( 164.498, -14.8154, -140.439, 0.83 ) }
    dend_42 { pt3dadd( 166.794, -14.5211, -141.69, 0.55 ) }
    dend_42 { pt3dadd( 168.385, -14.2654, -142.667, 0.83 ) }
    dend_42 { pt3dadd( 172.657, -13.4713, -145.358, 0.55 ) }
    dend_42 { pt3dadd( 175.282, -13.1747, -147.044, 0.28 ) }
    dend_42 { pt3dadd( 176.389, -13.1022, -147.622, 0.55 ) }
    dend_42 { pt3dadd( 179.437, -13.1385, -148.835, 0.28 ) }
    dend_42 { pt3dadd( 180.512, -13.239, -149.177, 0.55 ) }
    dend_42 { pt3dadd( 182.727, -13.5384, -149.531, 0.28 ) }
    dend_42 { pt3dadd( 184.989, -14.0079, -149.48, 0.55 ) }
    dend_42 { pt3dadd( 189.557, -15.0935, -148.564, 0.28 ) }
    dend_42 { pt3dadd( 191.665, -15.6562, -147.911, 0.55 ) }
    dend_42 { pt3dadd( 194.809, -16.6469, -146.754, 0.28 ) }
    dend_42 { pt3dadd( 198.777, -17.8654, -145.154, 0.55 ) }
    dend_42 { pt3dadd( 201.642, -18.7027, -143.958, 0.55 ) }
    dend_42 { pt3dadd( 206.59, -19.9914, -141.827, 0.28 ) }
    dend_42 { pt3dadd( 208.617, -20.4499, -141.128, 0.55 ) }
    dend_42 { pt3dadd( 212.107, -21.0942, -140.325, 0.28 ) }
    dend_42 { pt3dadd( 215.569, -21.5068, -139.797, 0.55 ) }
    dend_42 { pt3dadd( 217.457, -21.5556, -139.795, 0.28 ) }
    dend_42 { pt3dadd( 219.148, -21.3902, -139.957, 0.55 ) }
    dend_42 { pt3dadd( 223.911, -20.6979, -140.9, 0.28 ) }
    dend_42 { pt3dadd( 227.294, -19.9753, -141.66, 0.28 ) }
    dend_42 { pt3dadd( 230.218, -19.1373, -142.393, 0.55 ) }
    dend_42 { pt3dadd( 233.444, -18.1425, -143.38, 0.28 ) }
    dend_42 { pt3dadd( 234.251, -17.8367, -143.608, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 66.8623, 9.52978, -39.3776, 0.55 ) }
    dend_35 { pt3dadd( 67.5783, 7.56093, -40.5861, 0.55 ) }
    dend_35 { pt3dadd( 68.0346, 5.8824, -41.4929, 0.28 ) }
    dend_35 { pt3dadd( 68.4485, 4.34762, -42.1934, 0.55 ) }
    dend_35 { pt3dadd( 69.4913, 1.11039, -43.7071, 0.28 ) }
    dend_35 { pt3dadd( 69.5519, 0.905402, -43.8312, 0.55 ) }
    dend_35 { pt3dadd( 69.9007, -0.167601, -44.5686, 0.28 ) }
    dend_35 { pt3dadd( 70.1116, -1.06663, -45.3197, 0.55 ) }
    dend_35 { pt3dadd( 70.2815, -2.01285, -46.2096, 0.28 ) }
    dend_35 { pt3dadd( 70.4779, -3.30856, -47.4823, 0.55 ) }
    dend_35 { pt3dadd( 70.9678, -6.56092, -50.618, 0.55 ) }
    dend_35 { pt3dadd( 71.3825, -9.52978, -53.5277, 0.55 ) }
    dend_35 { pt3dadd( 71.6914, -11.905, -55.8568, 0.55 ) }
    dend_35 { pt3dadd( 71.9529, -14.2431, -58.1062, 0.55 ) }
    dend_35 { pt3dadd( 72.0181, -14.8468, -58.6624, 0.28 ) }
    dend_35 { pt3dadd( 72.1045, -15.4886, -59.2043, 0.55 ) }
    dend_35 { pt3dadd( 72.3028, -16.3679, -59.8737, 0.28 ) }
    dend_35 { pt3dadd( 72.8117, -17.9253, -60.9302, 0.55 ) }
    dend_35 { pt3dadd( 74.028, -20.8719, -62.4813, 0.55 ) }
    dend_35 { pt3dadd( 74.6931, -22.4517, -63.1726, 0.28 ) }
    dend_35 { pt3dadd( 75.2777, -24.0685, -63.947, 0.55 ) }
    dend_35 { pt3dadd( 75.934, -26.3508, -65.1182, 0.28 ) }
    dend_35 { pt3dadd( 76.3487, -28.2051, -66.1074, 0.55 ) }
    dend_35 { pt3dadd( 76.8536, -30.989, -67.5928, 0.28 ) }
    dend_35 { pt3dadd( 77.3946, -33.8652, -69.0421, 0.55 ) }
    dend_35 { pt3dadd( 78.1271, -38.0476, -71.183, 0.28 ) }
    dend_35 { pt3dadd( 78.4704, -40.2817, -72.3318, 0.55 ) }
    dend_35 { pt3dadd( 78.7867, -42.5718, -73.56, 0.28 ) }
    dend_35 { pt3dadd( 79.0471, -44.5934, -74.7639, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 79.4608, -47.12, -76.4809, 0.55 ) }
    dend_35 { pt3dadd( 79.9996, -49.4456, -78.0142, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 63.081, 34.7065, -6.86998, 0.55 ) }
    dend_31 { pt3dadd( 66.1315, 34.6849, -6.45239, 0.55 ) }
    dend_31 { pt3dadd( 68.3484, 34.5985, -6.36143, 0.55 ) }
    dend_31 { pt3dadd( 73.1878, 34.3698, -6.41572, 0.55 ) }
    dend_31 { pt3dadd( 75.3536, 34.2343, -6.63458, 0.55 ) }
    dend_31 { pt3dadd( 77.7014, 34.1434, -6.98878, 0.55 ) }
    dend_31 { pt3dadd( 80.8285, 34.0899, -7.68303, 0.55 ) }
    dend_31 { pt3dadd( 84.1112, 33.965, -8.73656, 0.55 ) }
    dend_31 { pt3dadd( 85.8202, 33.8888, -9.49012, 0.55 ) }
    dend_31 { pt3dadd( 89.2521, 33.7623, -11.5049, 0.55 ) }
    dend_31 { pt3dadd( 90.8266, 33.7206, -12.4838, 0.55 ) }
    dend_31 { pt3dadd( 94.5162, 33.5558, -14.8819, 0.55 ) }
    dend_31 { pt3dadd( 97.0291, 33.3386, -16.4926, 0.55 ) }
    dend_31 { pt3dadd( 98.8875, 33.1614, -17.5918, 0.83 ) }
    dend_31 { pt3dadd( 101.873, 32.7626, -19.3221, 0.55 ) }
    dend_31 { pt3dadd( 104.824, 32.2187, -20.9113, 0.83 ) }
    dend_31 { pt3dadd( 107.35, 31.6348, -22.1778, 0.55 ) }
    dend_31 { pt3dadd( 109.604, 31.141, -23.1839, 0.55 ) }
    dend_31 { pt3dadd( 110.886, 30.9123, -23.6808, 0.83 ) }
    dend_31 { pt3dadd( 113.891, 30.378, -24.6814, 0.28 ) }
    dend_31 { pt3dadd( 115.387, 30.1684, -25.0795, 0.28 ) }
    dend_31 { pt3dadd( 116.838, 29.8783, -25.5464, 0.28 ) }
    dend_31 { pt3dadd( 118.401, 29.6069, -26.0549, 0.28 ) }
    dend_31 { pt3dadd( 120.892, 29.223, -26.9168, 0.28 ) }
    dend_31 { pt3dadd( 121.896, 29.0791, -27.2327, 0.55 ) }
    dend_31 { pt3dadd( 124.315, 28.7453, -27.7507, 0.55 ) }
    dend_31 { pt3dadd( 128.693, 28.0894, -28.4681, 0.55 ) }
    dend_31 { pt3dadd( 129.912, 27.873, -28.6165, 0.55 ) }
    dend_31 { pt3dadd( 131.01, 27.642, -28.7057, 0.83 ) }
    dend_31 { pt3dadd( 133.403, 27.2006, -28.7063, 0.55 ) }
    dend_31 { pt3dadd( 135.485, 26.8189, -28.6741, 0.55 ) }
    dend_31 { pt3dadd( 137.452, 26.4658, -28.6341, 0.55 ) }
    dend_31 { pt3dadd( 138.975, 26.1691, -28.6471, 0.55 ) }
    dend_31 { pt3dadd( 141.398, 25.5416, -28.7954, 0.55 ) }
    dend_31 { pt3dadd( 144.266, 24.5673, -29.1427, 0.55 ) }
    dend_31 { pt3dadd( 148.749, 22.5863, -30.0232, 0.55 ) }
    dend_31 { pt3dadd( 151.234, 21.1588, -30.6852, 0.55 ) }
    dend_31 { pt3dadd( 153.417, 19.5758, -31.3908, 0.28 ) }
    dend_31 { pt3dadd( 154.079, 18.9708, -31.6479, 0.55 ) }
    dend_31 { pt3dadd( 155.579, 17.2261, -32.3205, 0.28 ) }
    dend_31 { pt3dadd( 156.916, 15.2183, -33.0022, 0.55 ) }
    dend_31 { pt3dadd( 158.252, 12.6514, -33.608, 0.55 ) }
    dend_31 { pt3dadd( 159.158, 10.962, -33.9226, 0.28 ) }
    dend_31 { pt3dadd( 159.49, 10.3646, -34.0037, 0.55 ) }
    dend_31 { pt3dadd( 160.346, 8.8836, -34.1858, 0.28 ) }
    dend_31 { pt3dadd( 161.509, 6.96022, -34.377, 0.55 ) }
    dend_31 { pt3dadd( 164.508, 2.34507, -34.7304, 0.55 ) }
    dend_31 { pt3dadd( 166.067, 0.0222416, -34.8598, 0.55 ) }
    dend_31 { pt3dadd( 167.513, -2.10548, -34.9594, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 63.081, 34.7065, -6.86998, 0.55 ) }
    dend_30 { pt3dadd( 65.1416, 35.7445, -5.1185, 0.55 ) }
    dend_30 { pt3dadd( 65.8067, 36.0673, -4.59594, 0.55 ) }
    dend_30 { pt3dadd( 68.3191, 37.1205, -2.74039, 0.55 ) }
    dend_30 { pt3dadd( 71.1091, 38.3631, -0.635577, 0.55 ) }
    dend_30 { pt3dadd( 74.677, 39.9664, 2.1662, 0.55 ) }
    dend_30 { pt3dadd( 75.6629, 40.4091, 2.93274, 0.55 ) }
    dend_30 { pt3dadd( 77.4471, 41.1275, 4.3031, 0.55 ) }
    dend_30 { pt3dadd( 79.4016, 41.9478, 5.71702, 0.55 ) }
    dend_30 { pt3dadd( 81.6714, 42.9481, 7.23851, 0.55 ) }
    dend_30 { pt3dadd( 83.8036, 43.9243, 8.67436, 0.55 ) }
    dend_30 { pt3dadd( 84.9681, 44.5055, 9.39287, 0.55 ) }
    dend_30 { pt3dadd( 86.3276, 45.2294, 10.2259, 0.55 ) }
    dend_30 { pt3dadd( 88.0025, 46.1708, 11.2136, 0.83 ) }
    dend_30 { pt3dadd( 90.776, 47.6479, 12.5193, 0.55 ) }
    dend_30 { pt3dadd( 92.6358, 48.5311, 13.3034, 0.83 ) }
    dend_30 { pt3dadd( 95.25, 49.6151, 14.3212, 0.55 ) }
    dend_30 { pt3dadd( 96.0625, 49.9003, 14.6302, 0.55 ) }
    dend_30 { pt3dadd( 98.6124, 50.6468, 15.5586, 0.55 ) }
    dend_30 { pt3dadd( 103.245, 51.6683, 17.0853, 0.55 ) }
    dend_30 { pt3dadd( 106.68, 52.2134, 18.1602, 0.55 ) }
    dend_30 { pt3dadd( 109.417, 52.5323, 19.0985, 0.55 ) }
    dend_30 { pt3dadd( 112.225, 52.7312, 20.1774, 0.55 ) }
    dend_30 { pt3dadd( 112.819, 52.7581, 20.4102, 0.28 ) }
    dend_30 { pt3dadd( 114.031, 52.7655, 20.8883, 0.83 ) }
    dend_30 { pt3dadd( 119.02, 52.7308, 22.8931, 0.55 ) }
    dend_30 { pt3dadd( 122.515, 52.6983, 24.2287, 0.55 ) }
    dend_30 { pt3dadd( 125.364, 52.7544, 25.3821, 0.55 ) }
    dend_30 { pt3dadd( 127.066, 52.7859, 26.0882, 0.83 ) }
    dend_30 { pt3dadd( 128.402, 52.83, 26.643, 0.28 ) }
    dend_30 { pt3dadd( 129.615, 52.8698, 27.1346, 0.55 ) }
    dend_30 { pt3dadd( 138.525, 55.6613, 31.888, 0.55 ) }
    dend_30 { pt3dadd( 148.423, 56.6903, 35.1639, 0.55 ) }
    dend_30 { pt3dadd( 158.01, 59.024, 38.688, 0.55 ) }
    dend_30 { pt3dadd( 166.631, 60.1273, 44.5393, 0.55 ) }
    dend_30 { pt3dadd( 174.849, 59.8404, 51.0328, 0.55 ) }
    dend_30 { pt3dadd( 184.323, 57.7387, 54.9803, 0.55 ) }
    dend_30 { pt3dadd( 193.954, 54.3692, 57.3639, 0.55 ) }
    dend_30 { pt3dadd( 204.208, 52.8283, 58.8645, 0.55 ) }
    dend_30 { pt3dadd( 214.326, 51.2375, 61.0702, 0.55 ) }
    dend_30 { pt3dadd( 224.698, 50.6936, 62.4509, 0.55 ) }
    dend_30 { pt3dadd( 234.842, 50.8215, 65.0685, 0.55 ) }
    dend_30 { pt3dadd( 244.616, 49.2224, 68.4869, 0.55 ) }
    dend_30 { pt3dadd( 254.24, 49.619, 72.61, 0.55 ) }
    dend_30 { pt3dadd( 263.067, 51.6774, 77.866, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.81329, -34.7216, 7.45518, 1.38 ) }
    dend_13 { pt3dadd( 1.27637, -37.7282, 7.08581, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.81329, -34.7216, 7.45518, 0.55 ) }
    dend_12 { pt3dadd( -3.51955, -36.8281, 7.36283, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -5.40275, -39.5277, 7.26364, 0.55 ) }
    dend_12 { pt3dadd( -6.87327, -41.3157, 7.2018, 0.55 ) }
    dend_12 { pt3dadd( -8.09566, -42.8113, 6.94947, 0.55 ) }
    dend_12 { pt3dadd( -10.7419, -45.911, 6.13408, 0.55 ) }
    dend_12 { pt3dadd( -12.5942, -47.9818, 5.50734, 0.55 ) }
    dend_12 { pt3dadd( -14.2354, -49.8386, 4.88422, 0.55 ) }
    dend_12 { pt3dadd( -18.4548, -54.3592, 3.28641, 0.55 ) }
    dend_12 { pt3dadd( -23.5302, -59.5939, 1.40842, 0.55 ) }
    dend_12 { pt3dadd( -27.4556, -63.5595, -0.118585, 0.55 ) }
    dend_12 { pt3dadd( -29.9569, -66.1633, -1.13131, 0.55 ) }
    dend_12 { pt3dadd( -32.8262, -69.2867, -2.28345, 0.55 ) }
    dend_12 { pt3dadd( -36.4654, -73.764, -3.69204, 0.55 ) }
    dend_12 { pt3dadd( -38.5932, -76.9381, -4.46606, 0.55 ) }
    dend_12 { pt3dadd( -41.2325, -81.501, -5.17345, 0.55 ) }
    dend_12 { pt3dadd( -43.3388, -85.7751, -5.64691, 0.55 ) }
    dend_12 { pt3dadd( -45.4619, -91.107, -6.08284, 0.55 ) }
    dend_12 { pt3dadd( -47.4608, -97.3652, -6.39797, 0.55 ) }
    dend_12 { pt3dadd( -48.5322, -102.147, -6.48358, 0.55 ) }
    dend_12 { pt3dadd( -48.9179, -104.525, -6.35726, 0.55 ) }
    dend_12 { pt3dadd( -49.5166, -110.111, -5.72787, 0.55 ) }
    dend_12 { pt3dadd( -49.996, -115.337, -4.99469, 0.55 ) }
    dend_12 { pt3dadd( -50.2429, -120.597, -3.84443, 0.55 ) }
    dend_12 { pt3dadd( -50.4301, -123.615, -3.02321, 0.55 ) }
    dend_12 { pt3dadd( -50.9819, -132.942, -0.137504, 0.55 ) }
    dend_12 { pt3dadd( -51.0282, -133.628, 0.0865896, 0.55 ) }
    dend_12 { pt3dadd( -51.2412, -137.833, 1.56867, 0.55 ) }
    dend_12 { pt3dadd( -51.987, -145.352, 4.36441, 0.55 ) }
    dend_12 { pt3dadd( -52.2382, -147.867, 5.14908, 0.55 ) }
    dend_12 { pt3dadd( -52.6696, -151.803, 5.69537, 0.55 ) }
    dend_12 { pt3dadd( -52.7634, -153.267, 5.5685, 0.55 ) }
    dend_12 { pt3dadd( -52.783, -158.229, 4.2329, 0.55 ) }
    dend_12 { pt3dadd( -52.5596, -161.446, 2.71057, 0.55 ) }
    dend_12 { pt3dadd( -51.9753, -166.578, -0.735186, 0.55 ) }
    dend_12 { pt3dadd( -50.9668, -172.858, -5.40975, 0.28 ) }
    dend_12 { pt3dadd( -50.6755, -174.411, -6.77113, 0.55 ) }
    dend_12 { pt3dadd( -50.2083, -176.768, -9.03998, 0.28 ) }
    dend_12 { pt3dadd( -50.1395, -177.123, -9.40084, 0.55 ) }
    dend_12 { pt3dadd( -49.7893, -179.067, -11.213, 0.28 ) }
    dend_12 { pt3dadd( -49.7281, -179.727, -11.6817, 0.55 ) }
    dend_12 { pt3dadd( -49.5436, -183.151, -13.4689, 0.28 ) }
    dend_12 { pt3dadd( -49.5268, -184.316, -14.0663, 0.55 ) }
    dend_12 { pt3dadd( -49.5366, -187.686, -15.6074, 0.28 ) }
    dend_12 { pt3dadd( -49.5353, -188.746, -16.0883, 0.55 ) }
    dend_12 { pt3dadd( -49.5657, -192.405, -17.691, 0.28 ) }
    dend_12 { pt3dadd( -49.5702, -194.088, -18.436, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.47412, -71.6534, 53.8594, 0.55 ) }
    dend_10 { pt3dadd( -10.1097, -78.0063, 61.4527, 0.55 ) }
    dend_10 { pt3dadd( -13.292, -83.268, 69.6472, 0.55 ) }
    dend_10 { pt3dadd( -16.5809, -89.2011, 77.3247, 0.55 ) }
    dend_10 { pt3dadd( -20.093, -95.1084, 84.9229, 0.55 ) }
    dend_10 { pt3dadd( -23.2327, -102.327, 91.48, 0.55 ) }
    dend_10 { pt3dadd( -26.0142, -109.301, 98.45, 0.55 ) }
    dend_10 { pt3dadd( -28.9428, -117.915, 103.16, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.47412, -71.6534, 53.8594, 0.55 ) }
    dend_3 { pt3dadd( -6.23134, -79.8273, 60.991, 0.55 ) }
    dend_3 { pt3dadd( -5.10439, -89.1876, 66.4981, 0.55 ) }
    dend_3 { pt3dadd( -5.68491, -98.3681, 72.3799, 0.55 ) }
    dend_3 { pt3dadd( -7.17771, -107.932, 77.4304, 0.55 ) }
    dend_3 { pt3dadd( -8.20335, -117.527, 82.54, 0.55 ) }
    dend_3 { pt3dadd( -8.93391, -126.777, 88.2946, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -43.8143, 41.6721, -13.8587, 0.83 ) }
    dend_60 { pt3dadd( -43.4375, 42.9947, -15.5491, 0.83 ) }
    dend_60 { pt3dadd( -42.6144, 46.2158, -19.346, 0.55 ) }
    dend_60 { pt3dadd( -42.2545, 47.6158, -20.8548, 0.83 ) }
    dend_60 { pt3dadd( -41.8608, 49.1228, -22.3556, 0.55 ) }
    dend_60 { pt3dadd( -41.4509, 50.6934, -23.6578, 0.55 ) }
    dend_60 { pt3dadd( -41.2358, 51.4913, -24.202, 0.28 ) }
    dend_60 { pt3dadd( -41.1253, 52.0337, -24.419, 0.55 ) }
    dend_60 { pt3dadd( -40.6894, 53.8752, -24.7425, 0.28 ) }
    dend_60 { pt3dadd( -40.482, 54.6653, -24.841, 0.55 ) }
    dend_60 { pt3dadd( -39.792, 57.4229, -25.0683, 0.28 ) }
    dend_60 { pt3dadd( -39.3001, 59.6172, -25.1714, 0.55 ) }
    dend_60 { pt3dadd( -38.694, 63.0609, -25.2195, 0.28 ) }
    dend_60 { pt3dadd( -38.2656, 66.0979, -25.1997, 0.28 ) }
    dend_60 { pt3dadd( -38.1228, 67.8052, -25.1522, 0.55 ) }
    dend_60 { pt3dadd( -38.0769, 69.8351, -25.0904, 0.28 ) }
    dend_60 { pt3dadd( -38.1176, 70.8076, -25.0453, 0.55 ) }
    dend_60 { pt3dadd( -38.3394, 73.0923, -25.037, 0.28 ) }
    dend_60 { pt3dadd( -38.5895, 74.613, -25.1067, 0.28 ) }
    dend_60 { pt3dadd( -38.8679, 76.1042, -25.2193, 0.28 ) }
    dend_60 { pt3dadd( -38.9854, 76.8906, -25.2828, 0.55 ) }
    dend_60 { pt3dadd( -39.2944, 80.0603, -25.6202, 0.28 ) }
    dend_60 { pt3dadd( -39.539, 83.8051, -26.0928, 0.55 ) }
    dend_60 { pt3dadd( -39.6048, 85.0974, -26.2617, 0.55 ) }
    dend_60 { pt3dadd( -39.6905, 86.3959, -26.4025, 0.55 ) }
    dend_60 { pt3dadd( -40.0188, 89.1559, -26.7413, 0.55 ) }
    dend_60 { pt3dadd( -40.3511, 90.9683, -26.9989, 0.28 ) }
    dend_60 { pt3dadd( -40.5559, 91.656, -27.1028, 0.55 ) }
    dend_60 { pt3dadd( -41.2389, 93.525, -27.3407, 0.28 ) }
    dend_60 { pt3dadd( -42.0485, 95.5108, -27.6694, 0.55 ) }
    dend_60 { pt3dadd( -43.4782, 98.364, -28.2434, 0.28 ) }
    dend_60 { pt3dadd( -44.2036, 99.5553, -28.517, 0.28 ) }
    dend_60 { pt3dadd( -45.4276, 101.204, -29.0553, 0.55 ) }
    dend_60 { pt3dadd( -46.8194, 102.918, -29.7029, 0.28 ) }
    dend_60 { pt3dadd( -47.0785, 103.186, -29.8167, 0.55 ) }
    dend_60 { pt3dadd( -48.0261, 104.044, -30.2107, 0.28 ) }
    dend_60 { pt3dadd( -51.3176, 106.794, -31.4856, 0.55 ) }
    dend_60 { pt3dadd( -55.9543, 110.176, -33.4045, 0.28 ) }
    dend_60 { pt3dadd( -56.8201, 110.739, -33.808, 0.55 ) }
    dend_60 { pt3dadd( -59.2102, 112.187, -34.9491, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -60.2168, 112.779, -35.4552, 0.28 ) }
    dend_60 { pt3dadd( -61.0964, 113.266, -35.9363, 0.55 ) }
    dend_60 { pt3dadd( -63.7172, 114.362, -37.5206, 0.28 ) }
    dend_60 { pt3dadd( -65.5869, 114.952, -38.5487, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -43.8143, 41.6721, -13.8587, 0.55 ) }
    dend_57 { pt3dadd( -43.948, 43.4468, -14.18, 0.55 ) }
    dend_57 { pt3dadd( -44.0511, 44.5014, -14.2711, 0.28 ) }
    dend_57 { pt3dadd( -44.2694, 45.274, -14.1495, 0.55 ) }
    dend_57 { pt3dadd( -44.7705, 47.0483, -13.8703, 0.28 ) }
    dend_57 { pt3dadd( -45.1225, 48.2945, -13.6741, 0.55 ) }
    dend_57 { pt3dadd( -45.7715, 50.592, -13.3125, 0.28 ) }
    dend_57 { pt3dadd( -46.2345, 51.8415, -12.9078, 0.55 ) }
    dend_57 { pt3dadd( -48.1587, 54.9176, -10.914, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -132.347, -44.446, 23.3674, 0.55 ) }
    dend_52 { pt3dadd( -137.96, -52.7526, 23.5091, 0.55 ) }
    dend_52 { pt3dadd( -142.034, -61.9025, 23.0563, 0.55 ) }
    dend_52 { pt3dadd( -145.566, -70.9081, 20.4207, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -132.347, -44.446, 23.3674, 0.55 ) }
    dend_49 { pt3dadd( -139.506, -53.4123, 21.4586, 0.55 ) }
    dend_49 { pt3dadd( -145.685, -62.7063, 18.1835, 0.55 ) }
    dend_49 { pt3dadd( -151.422, -72.1909, 14.661, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -152.044, 23.1476, 81.0338, 0.55 ) }
    dend_47 { pt3dadd( -158.289, 24.3332, 86.9953, 0.55 ) }
    dend_47 { pt3dadd( -165.242, 26.1944, 91.9105, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -152.044, 23.1476, 81.0338, 0.55 ) }
    dend_46 { pt3dadd( -159.378, 22.4519, 85.3086, 0.55 ) }
    dend_46 { pt3dadd( -166.808, 23.1521, 89.4141, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 79.9996, -49.4456, -78.0142, 0.28 ) }
    dend_39 { pt3dadd( 88.8889, -53.971, -90.2668, 0.28 ) }
    dend_39 { pt3dadd( 89.7475, -54.4887, -91.3511, 0.55 ) }
    dend_39 { pt3dadd( 91.1972, -55.3627, -93.1817, 0.28 ) }
    dend_39 { pt3dadd( 92.4178, -56.0986, -94.723, 0.28 ) }
    dend_39 { pt3dadd( 94.0336, -57.0728, -96.7634, 0.55 ) }
    dend_39 { pt3dadd( 96.1639, -58.3572, -99.4534, 0.55 ) }
    dend_39 { pt3dadd( 98.6635, -60.6347, -100.707, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 79.9996, -49.4456, -78.0142, 0.55 ) }
    dend_36 { pt3dadd( 80.7459, -50.5898, -79.2064, 0.55 ) }
    dend_36 { pt3dadd( 80.9806, -51.1024, -79.7453, 0.28 ) }
    dend_36 { pt3dadd( 81.3351, -51.9798, -80.6929, 0.55 ) }
    dend_36 { pt3dadd( 82.116, -53.9126, -82.7806, 0.28 ) }
    dend_36 { pt3dadd( 82.6572, -55.252, -84.2273, 0.55 ) }
    dend_36 { pt3dadd( 83.5741, -57.5214, -86.6785, 0.28 ) }
    dend_36 { pt3dadd( 84.6298, -60.2838, -89.9153, 0.28 ) }
    dend_36 { pt3dadd( 85.0593, -61.5523, -91.4363, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 167.513, -2.10548, -34.9594, 0.28 ) }
    dend_33 { pt3dadd( 169.398, -3.92212, -34.3327, 0.28 ) }
    dend_33 { pt3dadd( 171.809, -6.31571, -33.2576, 0.28 ) }
    dend_33 { pt3dadd( 173.343, -7.8676, -32.4812, 0.55 ) }
    dend_33 { pt3dadd( 174.258, -8.70775, -32.0026, 0.28 ) }
    dend_33 { pt3dadd( 174.745, -9.16047, -31.7391, 0.28 ) }
    dend_33 { pt3dadd( 177.158, -11.3984, -30.4827, 0.55 ) }
    dend_33 { pt3dadd( 177.714, -11.885, -30.1216, 0.28 ) }
    dend_33 { pt3dadd( 179.058, -13.1791, -29.0533, 0.55 ) }
    dend_33 { pt3dadd( 180.206, -14.3134, -28.1842, 0.28 ) }
    dend_33 { pt3dadd( 181.195, -15.2279, -27.5022, 0.55 ) }
    dend_33 { pt3dadd( 182.355, -16.3343, -26.7736, 0.55 ) }
    dend_33 { pt3dadd( 184.19, -18.1199, -25.8974, 0.55 ) }
    dend_33 { pt3dadd( 184.632, -18.5613, -25.702, 0.55 ) }
    dend_33 { pt3dadd( 186.228, -20.2221, -24.9932, 0.28 ) }
    dend_33 { pt3dadd( 186.85, -20.9081, -24.7247, 0.55 ) }
    dend_33 { pt3dadd( 187.707, -21.7736, -24.3876, 0.28 ) }
    dend_33 { pt3dadd( 188.914, -23.0108, -23.9777, 0.55 ) }
    dend_33 { pt3dadd( 190.886, -24.9819, -23.6798, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 167.513, -2.10548, -34.9594, 0.55 ) }
    dend_32 { pt3dadd( 163.656, -2.40798, -34.9192, 0.55 ) }
    dend_32 { pt3dadd( 160.524, -2.65364, -34.8866, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.27637, -37.7282, 7.08581, 0.83 ) }
    dend_17 { pt3dadd( 1.40543, -37.9644, 7.08967, 0.83 ) }
    dend_17 { pt3dadd( 2.83709, -40.0377, 7.31457, 0.83 ) }
    dend_17 { pt3dadd( 4.11501, -41.8536, 7.38765, 0.55 ) }
    dend_17 { pt3dadd( 5.13452, -43.3023, 7.44596, 0.55 ) }
    dend_17 { pt3dadd( 7.30153, -46.3815, 7.56989, 0.83 ) }
    dend_17 { pt3dadd( 9.92996, -50.1164, 7.72022, 0.55 ) }
    dend_17 { pt3dadd( 11.3511, -52.0685, 7.84866, 0.83 ) }
    dend_17 { pt3dadd( 13.8204, -55.1616, 8.24, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.27637, -37.7282, 7.08581, 0.55 ) }
    dend_14 { pt3dadd( 0.0366008, -38.8899, 3.99212, 0.55 ) }
    dend_14 { pt3dadd( -1.29415, -40.1368, 0.671413, 0.55 ) }
    dend_14 { pt3dadd( -2.86511, -41.6088, -3.24871, 0.55 ) }
    dend_14 { pt3dadd( -4.77276, -43.3963, -8.009, 0.55 ) }
    dend_14 { pt3dadd( -5.85529, -44.4107, -10.7103, 0.55 ) }
    dend_14 { pt3dadd( -6.07275, -44.6144, -11.2529, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.93391, -126.777, 88.2946, 0.55 ) }
    dend_7 { pt3dadd( -8.68145, -133.852, 93.152, 0.55 ) }
    dend_7 { pt3dadd( -7.43897, -141.438, 96.9765, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -8.93391, -126.777, 88.2946, 0.55 ) }
    dend_4 { pt3dadd( -9.5991, -135.373, 93.1613, 0.55 ) }
    dend_4 { pt3dadd( -10.6164, -143.716, 98.3926, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -48.1587, 54.9176, -10.914, 0.28 ) }
    dend_59 { pt3dadd( -48.8551, 56.05, -9.95633, 0.28 ) }
    dend_59 { pt3dadd( -49.1134, 56.4825, -9.54584, 0.55 ) }
    dend_59 { pt3dadd( -49.8471, 57.7368, -8.33249, 0.28 ) }
    dend_59 { pt3dadd( -50.2173, 58.354, -7.79176, 0.55 ) }
    dend_59 { pt3dadd( -51.2366, 60.021, -6.38414, 0.28 ) }
    dend_59 { pt3dadd( -52.2725, 61.7154, -4.95348, 0.55 ) }
    dend_59 { pt3dadd( -53.9964, 64.3862, -2.55001, 0.28 ) }
    dend_59 { pt3dadd( -54.3629, 64.9594, -2.03808, 0.55 ) }
    dend_59 { pt3dadd( -55.1663, 66.291, -0.962085, 0.28 ) }
    dend_59 { pt3dadd( -55.4764, 66.8402, -0.542034, 0.55 ) }
    dend_59 { pt3dadd( -59.2917, 70.6574, 3.2133, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -63.6056, 75.0824, 5.45806, 0.55 ) }
    dend_59 { pt3dadd( -67.172, 79.7043, 8.48272, 0.55 ) }
    dend_59 { pt3dadd( -69.8355, 85.0444, 11.243, 0.55 ) }
    dend_59 { pt3dadd( -73.2247, 90.1441, 13.638, 0.55 ) }
    dend_59 { pt3dadd( -77.1839, 94.3432, 16.7878, 0.55 ) }
    dend_59 { pt3dadd( -80.6913, 98.0972, 20.891, 0.55 ) }
    dend_59 { pt3dadd( -83.5847, 101.236, 25.8919, 0.55 ) }
    dend_59 { pt3dadd( -86.4766, 104.728, 30.6533, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -48.1587, 54.9176, -10.914, 0.55 ) }
    dend_58 { pt3dadd( -50.7298, 54.2798, -9.6983, 0.55 ) }
    dend_58 { pt3dadd( -52.0687, 53.9031, -9.06586, 0.28 ) }
    dend_58 { pt3dadd( -53.065, 53.6228, -8.59522, 0.55 ) }
    dend_58 { pt3dadd( -53.8954, 53.3891, -8.20296, 0.28 ) }
    dend_58 { pt3dadd( -54.4771, 53.2255, -7.92821, 0.55 ) }
    dend_58 { pt3dadd( -56.081, 52.7743, -7.1706, 0.28 ) }
    dend_58 { pt3dadd( -57.1589, 52.3734, -6.79665, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -145.566, -70.9081, 20.4207, 0.55 ) }
    dend_54 { pt3dadd( -148.671, -78.847, 20.6768, 0.55 ) }
    dend_54 { pt3dadd( -151.361, -86.8612, 21.8037, 0.55 ) }
    dend_54 { pt3dadd( -153.823, -95.012, 21.3185, 0.55 ) }
    dend_54 { pt3dadd( -156.829, -102.952, 22.1217, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -145.566, -70.9081, 20.4207, 0.55 ) }
    dend_53 { pt3dadd( -149.473, -74.8674, 16.7368, 0.55 ) }
    dend_53 { pt3dadd( -153.288, -78.0299, 12.27, 0.55 ) }
    dend_53 { pt3dadd( -157.412, -81.8696, 8.69892, 0.55 ) }
    dend_53 { pt3dadd( -162.744, -84.6675, 5.82608, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -151.422, -72.1909, 14.661, 0.55 ) }
    dend_51 { pt3dadd( -157.308, -73.9979, 10.1227, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -151.422, -72.1909, 14.661, 0.55 ) }
    dend_50 { pt3dadd( -155.649, -82.3908, 12.1764, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 98.6635, -60.6347, -100.707, 0.28 ) }
    dend_41 { pt3dadd( 101.499, -62.1958, -101.991, 0.28 ) }
    dend_41 { pt3dadd( 102.817, -62.921, -102.588, 0.55 ) }
    dend_41 { pt3dadd( 105.328, -64.3038, -103.725, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 98.6635, -60.6347, -100.707, 0.55 ) }
    dend_40 { pt3dadd( 98.4028, -61.0658, -102.238, 0.55 ) }
    dend_40 { pt3dadd( 97.8813, -61.928, -105.301, 0.28 ) }
    dend_40 { pt3dadd( 97.7114, -62.2089, -106.299, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 85.0593, -61.5523, -91.4363, 0.28 ) }
    dend_38 { pt3dadd( 85.9114, -63.6243, -93.4973, 0.28 ) }
    dend_38 { pt3dadd( 86.3334, -64.6503, -94.5178, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 85.0593, -61.5523, -91.4363, 0.55 ) }
    dend_37 { pt3dadd( 83.603, -62.4205, -90.3799, 0.55 ) }
    dend_37 { pt3dadd( 79.5423, -64.8414, -87.4342, 0.28 ) }
    dend_37 { pt3dadd( 78.5776, -65.4165, -86.7344, 0.55 ) }
    dend_37 { pt3dadd( 75.9387, -66.9897, -84.8201, 0.28 ) }
    dend_37 { pt3dadd( 74.2378, -68.0038, -83.5862, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 13.8204, -55.1616, 8.24, 0.83 ) }
    dend_23 { pt3dadd( 13.8782, -55.4955, 8.21388, 0.83 ) }
    dend_23 { pt3dadd( 14.688, -59.8561, 8.00006, 0.83 ) }
    dend_23 { pt3dadd( 14.9897, -63.1313, 8.01945, 0.83 ) }
    dend_23 { pt3dadd( 15.0255, -66.2933, 8.34169, 0.83 ) }
    dend_23 { pt3dadd( 14.8915, -70.4976, 9.07254, 0.83 ) }
    dend_23 { pt3dadd( 14.5847, -75.3417, 10.0797, 0.83 ) }
    dend_23 { pt3dadd( 14.2354, -80.7384, 11.4904, 0.83 ) }
    dend_23 { pt3dadd( 13.8723, -85.9713, 13.1034, 0.83 ) }
    dend_23 { pt3dadd( 13.0216, -92.4235, 14.891, 0.83 ) }
    dend_23 { pt3dadd( 12.4854, -95.4027, 15.5268, 0.83 ) }
    dend_23 { pt3dadd( 12.0882, -97.6491, 15.8632, 0.83 ) }
    dend_23 { pt3dadd( 11.2445, -101.967, 16.4084, 0.83 ) }
    dend_23 { pt3dadd( 10.6012, -105.838, 16.6938, 0.83 ) }
    dend_23 { pt3dadd( 9.76948, -114.106, 16.4336, 0.83 ) }
    dend_23 { pt3dadd( 9.42771, -118.648, 15.7121, 0.83 ) }
    dend_23 { pt3dadd( 9.14157, -122.845, 14.7454, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.8204, -55.1616, 8.24, 0.55 ) }
    dend_18 { pt3dadd( 12.7084, -57.8799, 8.51849, 0.55 ) }
    dend_18 { pt3dadd( 11.8673, -59.843, 8.86638, 0.55 ) }
    dend_18 { pt3dadd( 11.3577, -61.0874, 9.21576, 0.55 ) }
    dend_18 { pt3dadd( 10.646, -63.0165, 9.95637, 0.55 ) }
    dend_18 { pt3dadd( 9.3277, -66.813, 11.6761, 0.55 ) }
    dend_18 { pt3dadd( 8.29282, -69.6629, 13.2998, 0.55 ) }
    dend_18 { pt3dadd( 7.45573, -71.9279, 14.8525, 0.55 ) }
    dend_18 { pt3dadd( 6.54574, -74.205, 16.5871, 0.55 ) }
    dend_18 { pt3dadd( 5.77055, -76.0861, 18.1281, 0.28 ) }
    dend_18 { pt3dadd( 5.10478, -77.606, 19.6222, 0.55 ) }
    dend_18 { pt3dadd( 3.80947, -80.3424, 22.7508, 0.55 ) }
    dend_18 { pt3dadd( 2.90936, -82.0087, 24.8594, 0.55 ) }
    dend_18 { pt3dadd( 2.3943, -82.9434, 26.0302, 0.55 ) }
    dend_18 { pt3dadd( 1.72885, -84.053, 27.3466, 0.83 ) }
    dend_18 { pt3dadd( -0.267019, -87.3632, 31.0122, 0.28 ) }
    dend_18 { pt3dadd( -0.925172, -88.4612, 32.1934, 0.55 ) }
    dend_18 { pt3dadd( -2.04466, -90.4461, 34.2592, 0.28 ) }
    dend_18 { pt3dadd( -2.39098, -91.0542, 34.9436, 0.55 ) }
    dend_18 { pt3dadd( -3.11738, -92.4813, 36.5236, 0.28 ) }
    dend_18 { pt3dadd( -3.52217, -93.2976, 37.3581, 0.55 ) }
    dend_18 { pt3dadd( -4.98664, -96.0205, 39.304, 0.55 ) }
    dend_18 { pt3dadd( -7.12631, -103.051, 47.6061, 0.55 ) }
    dend_18 { pt3dadd( -8.7702, -109.671, 56.3476, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.07275, -44.6144, -11.2529, 0.55 ) }
    dend_16 { pt3dadd( -7.69235, -45.6513, -14.2319, 0.55 ) }
    dend_16 { pt3dadd( -8.18117, -45.8986, -15.0798, 0.55 ) }
    dend_16 { pt3dadd( -9.42917, -46.52, -17.1442, 0.55 ) }
    dend_16 { pt3dadd( -12.2114, -47.7614, -21.5078, 0.28 ) }
    dend_16 { pt3dadd( -12.6364, -47.9327, -22.1229, 0.55 ) }
    dend_16 { pt3dadd( -14.4357, -48.7134, -24.5978, 0.55 ) }
    dend_16 { pt3dadd( -16.9905, -49.7833, -27.6858, 0.55 ) }
    dend_16 { pt3dadd( -17.9774, -50.1536, -28.8391, 0.28 ) }
    dend_16 { pt3dadd( -18.8612, -50.4042, -29.7918, 0.28 ) }
    dend_16 { pt3dadd( -20.4398, -50.7947, -31.1815, 0.55 ) }
    dend_16 { pt3dadd( -22.3458, -51.167, -32.9594, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -24.0984, -51.3356, -34.6497, 0.55 ) }
    dend_16 { pt3dadd( -25.4648, -51.3347, -35.9298, 0.55 ) }
    dend_16 { pt3dadd( -26.3989, -51.243, -36.8464, 0.55 ) }
    dend_16 { pt3dadd( -29.1213, -50.8292, -39.6358, 0.55 ) }
    dend_16 { pt3dadd( -32.0098, -50.1643, -42.5147, 0.55 ) }
    dend_16 { pt3dadd( -33.2143, -49.8126, -43.672, 0.28 ) }
    dend_16 { pt3dadd( -34.3519, -49.4996, -44.795, 0.55 ) }
    dend_16 { pt3dadd( -36.6639, -49.0381, -47.0433, 0.28 ) }
    dend_16 { pt3dadd( -37.4439, -48.9088, -47.7905, 0.83 ) }
    dend_16 { pt3dadd( -38.9322, -48.6471, -49.0755, 0.28 ) }
    dend_16 { pt3dadd( -40.0448, -48.5497, -49.8461, 0.55 ) }
    dend_16 { pt3dadd( -41.6686, -48.4699, -50.9295, 0.28 ) }
    dend_16 { pt3dadd( -42.3216, -48.429, -51.3387, 0.55 ) }
    dend_16 { pt3dadd( -43.5493, -48.3776, -52.0286, 0.55 ) }
    dend_16 { pt3dadd( -45.4271, -48.1029, -53.0014, 0.55 ) }
    dend_16 { pt3dadd( -46.6733, -47.8439, -53.568, 0.28 ) }
    dend_16 { pt3dadd( -47.7001, -47.507, -53.9467, 0.55 ) }
    dend_16 { pt3dadd( -48.9115, -46.9605, -54.4011, 0.28 ) }
    dend_16 { pt3dadd( -49.1095, -46.8547, -54.4828, 0.55 ) }
    dend_16 { pt3dadd( -50.8645, -45.8376, -55.552, 0.28 ) }
    dend_16 { pt3dadd( -52.1057, -45.0731, -56.4686, 0.55 ) }
    dend_16 { pt3dadd( -53.6883, -43.9483, -57.9193, 0.83 ) }
    dend_16 { pt3dadd( -54.954, -42.9889, -59.2756, 0.28 ) }
    dend_16 { pt3dadd( -55.272, -42.7439, -59.6625, 0.55 ) }
    dend_16 { pt3dadd( -57.6721, -40.908, -62.7874, 0.28 ) }
    dend_16 { pt3dadd( -58.0799, -40.5954, -63.3832, 0.55 ) }
    dend_16 { pt3dadd( -59.2613, -39.5711, -65.2359, 0.28 ) }
    dend_16 { pt3dadd( -59.5656, -39.3077, -65.717, 0.55 ) }
    dend_16 { pt3dadd( -60.3637, -38.6216, -66.8845, 0.28 ) }
    dend_16 { pt3dadd( -60.9405, -38.1272, -67.6677, 0.55 ) }
    dend_16 { pt3dadd( -62.2888, -37.0229, -69.1829, 0.28 ) }
    dend_16 { pt3dadd( -63.0986, -36.4341, -70.046, 0.55 ) }
    dend_16 { pt3dadd( -64.8541, -35.3044, -71.7804, 0.28 ) }
    dend_16 { pt3dadd( -65.3795, -35.001, -72.2872, 0.55 ) }
    dend_16 { pt3dadd( -66.212, -34.5986, -73.047, 0.28 ) }
    dend_16 { pt3dadd( -66.927, -34.2598, -73.6524, 0.55 ) }
    dend_16 { pt3dadd( -68.4364, -33.5786, -74.8111, 0.28 ) }
    dend_16 { pt3dadd( -68.8951, -33.3848, -75.1438, 0.55 ) }
    dend_16 { pt3dadd( -72.3444, -31.8712, -77.4462, 0.28 ) }
    dend_16 { pt3dadd( -73.5806, -31.2473, -78.1426, 0.55 ) }
    dend_16 { pt3dadd( -75.8193, -30.0217, -79.2388, 0.28 ) }
    dend_16 { pt3dadd( -76.8353, -29.4275, -79.7015, 0.55 ) }
    dend_16 { pt3dadd( -79.1947, -28.0821, -80.6251, 0.28 ) }
    dend_16 { pt3dadd( -80.0691, -27.6278, -80.9253, 0.55 ) }
    dend_16 { pt3dadd( -83.2681, -26.2726, -81.8357, 0.28 ) }
    dend_16 { pt3dadd( -84.605, -25.8761, -82.2005, 0.55 ) }
    dend_16 { pt3dadd( -86.5184, -25.6255, -82.6941, 0.55 ) }
    dend_16 { pt3dadd( -87.701, -25.5464, -82.9684, 0.55 ) }
    dend_16 { pt3dadd( -90.146, -25.4471, -83.3421, 0.28 ) }
    dend_16 { pt3dadd( -92.5765, -25.3727, -83.5599, 0.28 ) }
    dend_16 { pt3dadd( -94.6103, -25.3032, -83.6837, 0.55 ) }
    dend_16 { pt3dadd( -97.1336, -25.0069, -83.5719, 0.28 ) }
    dend_16 { pt3dadd( -98.4008, -24.709, -83.3563, 0.55 ) }
    dend_16 { pt3dadd( -101.44, -23.5353, -82.5604, 0.28 ) }
    dend_16 { pt3dadd( -103.025, -22.6355, -81.7969, 0.55 ) }
    dend_16 { pt3dadd( -104.054, -21.9009, -81.0914, 0.28 ) }
    dend_16 { pt3dadd( -105.208, -21.0697, -80.0295, 0.55 ) }
    dend_16 { pt3dadd( -106.647, -19.9776, -78.5304, 0.28 ) }
    dend_16 { pt3dadd( -107.196, -19.5939, -77.9685, 0.55 ) }
    dend_16 { pt3dadd( -110.068, -17.8854, -75.393, 0.28 ) }
    dend_16 { pt3dadd( -111.04, -17.3485, -74.5345, 0.55 ) }
    dend_16 { pt3dadd( -113.35, -16.1622, -72.4335, 0.28 ) }
    dend_16 { pt3dadd( -114.605, -15.5333, -71.2926, 0.55 ) }
    dend_16 { pt3dadd( -115.639, -15.0182, -70.3569, 0.55 ) }
    dend_16 { pt3dadd( -116.877, -14.4129, -69.2717, 0.28 ) }
    dend_16 { pt3dadd( -117.534, -14.1068, -68.8151, 0.55 ) }
    dend_16 { pt3dadd( -119.746, -13.0098, -67.4202, 0.28 ) }
    dend_16 { pt3dadd( -120.898, -12.3014, -66.6673, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.07275, -44.6144, -11.2529, 0.55 ) }
    dend_15 { pt3dadd( -5.81351, -44.6527, -12.3874, 0.55 ) }
    dend_15 { pt3dadd( -5.53205, -44.5626, -13.5136, 0.55 ) }
    dend_15 { pt3dadd( -5.12037, -44.346, -14.891, 0.55 ) }
    dend_15 { pt3dadd( -4.74641, -44.0744, -15.9905, 0.55 ) }
    dend_15 { pt3dadd( -1.8533, -41.4893, -22.9235, 0.55 ) }
    dend_15 { pt3dadd( -1.23179, -40.7258, -24.4868, 0.55 ) }
    dend_15 { pt3dadd( -0.367188, -39.4294, -26.8121, 0.55 ) }
    dend_15 { pt3dadd( 0.231405, -38.4562, -28.4602, 0.55 ) }
    dend_15 { pt3dadd( 0.833668, -37.4112, -30.0361, 0.28 ) }
    dend_15 { pt3dadd( 1.84189, -35.6558, -32.3739, 0.55 ) }
    dend_15 { pt3dadd( 3.49028, -32.9186, -35.715, 0.28 ) }
    dend_15 { pt3dadd( 3.58166, -32.7477, -36.0658, 0.55 ) }
    dend_15 { pt3dadd( 3.65365, -32.1443, -38.5996, 0.28 ) }
    dend_15 { pt3dadd( 3.42685, -31.8802, -40.3314, 0.55 ) }
    dend_15 { pt3dadd( 3.02193, -31.7507, -42.1994, 0.55 ) }
    dend_15 { pt3dadd( 2.26829, -31.696, -45.5604, 0.55 ) }
    dend_15 { pt3dadd( 0.813016, -31.6329, -52.1635, 0.55 ) }
    dend_15 { pt3dadd( -0.0805746, -31.6253, -56.6172, 0.55 ) }
    dend_15 { pt3dadd( -0.346664, -31.6304, -58.1629, 0.55 ) }
    dend_15 { pt3dadd( -1.86712, -31.5485, -68.3517, 0.55 ) }
    dend_15 { pt3dadd( -2.16836, -31.4695, -71.1227, 0.55 ) }
    dend_15 { pt3dadd( -2.22142, -31.4085, -72.6889, 0.55 ) }
    dend_15 { pt3dadd( -2.018, -31.3094, -76.3543, 0.55 ) }
    dend_15 { pt3dadd( -0.963222, -31.433, -85.1502, 0.55 ) }
    dend_15 { pt3dadd( -0.566352, -31.5459, -87.5142, 0.28 ) }
    dend_15 { pt3dadd( -0.231862, -31.6543, -88.8478, 0.55 ) }
    dend_15 { pt3dadd( 0.311276, -31.8885, -90.8212, 0.28 ) }
    dend_15 { pt3dadd( 0.60491, -32.0559, -91.6215, 0.55 ) }
    dend_15 { pt3dadd( 2.08419, -32.8387, -93.7613, 0.28 ) }
    dend_15 { pt3dadd( 3.82735, -34.0244, -94.5506, 0.55 ) }
    dend_15 { pt3dadd( 4.91581, -34.8939, -94.9643, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 5.97594, -35.8784, -95.2357, 0.55 ) }
    dend_15 { pt3dadd( 6.95727, -36.9769, -95.4087, 0.28 ) }
    dend_15 { pt3dadd( 7.38843, -37.5514, -95.5012, 0.55 ) }
    dend_15 { pt3dadd( 8.43251, -39.0709, -95.6514, 0.28 ) }
    dend_15 { pt3dadd( 8.68612, -39.5277, -95.7616, 0.55 ) }
    dend_15 { pt3dadd( 10.0807, -42.1439, -96.5436, 0.28 ) }
    dend_15 { pt3dadd( 10.7106, -43.3448, -97.0796, 0.55 ) }
    dend_15 { pt3dadd( 12.059, -45.8876, -98.5597, 0.28 ) }
    dend_15 { pt3dadd( 12.5623, -46.815, -99.2291, 0.55 ) }
    dend_15 { pt3dadd( 14.281, -49.835, -101.669, 0.28 ) }
    dend_15 { pt3dadd( 14.6933, -50.5675, -102.298, 0.55 ) }
    dend_15 { pt3dadd( 15.9001, -52.8955, -104.359, 0.28 ) }
    dend_15 { pt3dadd( 16.1628, -53.4475, -104.786, 0.55 ) }
    dend_15 { pt3dadd( 16.8099, -54.9145, -105.883, 0.28 ) }
    dend_15 { pt3dadd( 17.166, -55.7621, -106.61, 0.55 ) }
    dend_15 { pt3dadd( 17.524, -56.5878, -107.406, 0.55 ) }
    dend_15 { pt3dadd( 18.2435, -58.2353, -108.98, 0.28 ) }
    dend_15 { pt3dadd( 18.7502, -59.2354, -110.114, 0.55 ) }
    dend_15 { pt3dadd( 20.3546, -61.6324, -113.751, 0.28 ) }
    dend_15 { pt3dadd( 20.9598, -62.3795, -115.208, 0.55 ) }
    dend_15 { pt3dadd( 21.3908, -62.8427, -116.201, 0.28 ) }
    dend_15 { pt3dadd( 21.8401, -63.2516, -117.197, 0.55 ) }
    dend_15 { pt3dadd( 23.2701, -64.3566, -120.228, 0.28 ) }
    dend_15 { pt3dadd( 24.3877, -65.2195, -122.481, 0.55 ) }
    dend_15 { pt3dadd( 26.4531, -66.9139, -126.123, 0.28 ) }
    dend_15 { pt3dadd( 27.1068, -67.4391, -127.265, 0.55 ) }
    dend_15 { pt3dadd( 28.4553, -68.3891, -129.309, 0.28 ) }
    dend_15 { pt3dadd( 28.9333, -68.6987, -129.944, 0.55 ) }
    dend_15 { pt3dadd( 29.807, -69.1904, -130.807, 0.28 ) }
    dend_15 { pt3dadd( 30.6156, -69.5987, -131.495, 0.55 ) }
    dend_15 { pt3dadd( 32.9217, -70.5778, -133.119, 0.28 ) }
    dend_15 { pt3dadd( 35.5829, -71.5832, -134.933, 0.28 ) }
    dend_15 { pt3dadd( 36.9721, -72.0269, -135.753, 0.28 ) }
    dend_15 { pt3dadd( 38.3316, -72.4268, -136.66, 0.55 ) }
    dend_15 { pt3dadd( 40.3091, -72.9108, -137.99, 0.28 ) }
    dend_15 { pt3dadd( 41.1969, -73.1118, -138.562, 0.83 ) }
    dend_15 { pt3dadd( 43.5036, -73.658, -139.936, 0.28 ) }
    dend_15 { pt3dadd( 44.48, -73.9184, -140.587, 0.55 ) }
    dend_15 { pt3dadd( 48.687, -75.2391, -143.661, 0.28 ) }
    dend_15 { pt3dadd( 50.7081, -75.9255, -145.372, 0.28 ) }
    dend_15 { pt3dadd( 52.1267, -76.4236, -146.718, 0.55 ) }
    dend_15 { pt3dadd( 52.9015, -76.7341, -147.604, 0.55 ) }
    dend_15 { pt3dadd( 54.858, -77.594, -150.143, 0.28 ) }
    dend_15 { pt3dadd( 56.6424, -78.5104, -152.611, 0.55 ) }
    dend_15 { pt3dadd( 58.2702, -79.4155, -154.861, 0.28 ) }
    dend_15 { pt3dadd( 59.6895, -80.264, -156.992, 0.55 ) }
    dend_15 { pt3dadd( 60.8671, -80.9448, -158.744, 0.28 ) }
    dend_15 { pt3dadd( 61.8649, -81.4018, -160.109, 0.55 ) }
    dend_15 { pt3dadd( 64.3432, -82.3136, -163.261, 0.28 ) }
    dend_15 { pt3dadd( 65.6351, -82.7731, -164.797, 0.55 ) }
    dend_15 { pt3dadd( 67.6234, -83.4702, -167.022, 0.28 ) }
    dend_15 { pt3dadd( 69.2722, -83.9798, -168.797, 0.55 ) }
    dend_15 { pt3dadd( 73.1178, -84.9563, -172.952, 0.28 ) }
    dend_15 { pt3dadd( 74.6112, -85.2401, -174.757, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -7.43897, -141.438, 96.9765, 0.55 ) }
    dend_9 { pt3dadd( -6.6795, -151.187, 101.688, 0.55 ) }
    dend_9 { pt3dadd( -4.52878, -161.549, 104.104, 0.55 ) }
    dend_9 { pt3dadd( -3.21155, -171.632, 107.902, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -7.43897, -141.438, 96.9765, 0.55 ) }
    dend_8 { pt3dadd( -5.94127, -152.184, 103.654, 0.55 ) }
    dend_8 { pt3dadd( -5.1406, -161.27, 112.549, 0.55 ) }
    dend_8 { pt3dadd( -3.34666, -168.427, 122.935, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.6164, -143.716, 98.3926, 0.55 ) }
    dend_6 { pt3dadd( -10.3015, -154.046, 104.051, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -10.6164, -143.716, 98.3926, 0.55 ) }
    dend_5 { pt3dadd( -12.0305, -151.222, 103.197, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 9.14157, -122.845, 14.7454, 0.83 ) }
    dend_25 { pt3dadd( 10.5534, -127.652, 15.4512, 0.83 ) }
    dend_25 { pt3dadd( 12.0013, -131.676, 16.2901, 0.83 ) }
    dend_25 { pt3dadd( 13.4406, -135.676, 17.1241, 0.83 ) }
    dend_25 { pt3dadd( 14.8074, -139.475, 17.916, 0.83 ) }
    dend_25 { pt3dadd( 16.9137, -145.33, 19.1365, 0.83 ) }
    dend_25 { pt3dadd( 19.0048, -151.142, 20.3482, 0.83 ) }
    dend_25 { pt3dadd( 20.82, -154.945, 21.5578, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 9.14157, -122.845, 14.7454, 0.55 ) }
    dend_24 { pt3dadd( 10.4042, -124.429, 15.0804, 0.55 ) }
    dend_24 { pt3dadd( 11.4243, -125.673, 15.1188, 0.55 ) }
    dend_24 { pt3dadd( 12.1562, -126.599, 15.0449, 0.55 ) }
    dend_24 { pt3dadd( 12.8782, -127.7, 14.7823, 0.83 ) }
    dend_24 { pt3dadd( 13.6494, -128.962, 14.3136, 0.55 ) }
    dend_24 { pt3dadd( 14.4037, -130.196, 13.855, 0.83 ) }
    dend_24 { pt3dadd( 15.1739, -131.543, 13.2178, 0.55 ) }
    dend_24 { pt3dadd( 15.6352, -132.328, 12.7757, 0.83 ) }
    dend_24 { pt3dadd( 17.0659, -134.878, 11.1267, 0.55 ) }
    dend_24 { pt3dadd( 18.0542, -136.895, 9.67332, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.7702, -109.671, 56.3476, 0.55 ) }
    dend_20 { pt3dadd( -12.172, -117.191, 62.4714, 0.55 ) }
    dend_20 { pt3dadd( -16.9391, -123.712, 68.826, 0.55 ) }
    dend_20 { pt3dadd( -22.3747, -129.247, 75.5667, 0.55 ) }
    dend_20 { pt3dadd( -28.6569, -133.582, 82.449, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -8.7702, -109.671, 56.3476, 0.55 ) }
    dend_19 { pt3dadd( -9.95692, -116.427, 63.7193, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 20.82, -154.945, 21.5578, 0.55 ) }
    dend_27 { pt3dadd( 21.208, -156.726, 22.0971, 0.55 ) }
    dend_27 { pt3dadd( 21.7889, -158.996, 22.8019, 0.55 ) }
    dend_27 { pt3dadd( 22.3315, -161.14, 23.4565, 0.55 ) }
    dend_27 { pt3dadd( 22.6892, -162.666, 23.9111, 0.55 ) }
    dend_27 { pt3dadd( 23.2777, -165.393, 24.7021, 0.55 ) }
    dend_27 { pt3dadd( 24.9284, -173.083, 26.6917, 0.55 ) }
    dend_27 { pt3dadd( 25.4831, -175.709, 27.2354, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 25.8303, -177.571, 27.5345, 0.55 ) }
    dend_27 { pt3dadd( 26.1505, -179.716, 27.7203, 0.55 ) }
    dend_27 { pt3dadd( 26.2957, -181.388, 27.7535, 0.55 ) }
    dend_27 { pt3dadd( 26.6486, -185.319, 27.6336, 0.55 ) }
    dend_27 { pt3dadd( 26.8264, -188.299, 27.5941, 0.55 ) }
    dend_27 { pt3dadd( 27.0182, -190.252, 27.5888, 0.55 ) }
    dend_27 { pt3dadd( 27.6374, -195.289, 27.8028, 0.55 ) }
    dend_27 { pt3dadd( 28.1153, -198.66, 28.0852, 0.55 ) }
    dend_27 { pt3dadd( 28.8801, -202.98, 28.6456, 0.55 ) }
    dend_27 { pt3dadd( 30.0062, -207.845, 29.5692, 0.55 ) }
    dend_27 { pt3dadd( 30.9939, -211.076, 30.279, 0.55 ) }
    dend_27 { pt3dadd( 31.6457, -212.982, 30.7171, 0.55 ) }
    dend_27 { pt3dadd( 32.2154, -214.738, 31.1347, 0.55 ) }
    dend_27 { pt3dadd( 32.9121, -216.974, 31.5519, 0.55 ) }
    dend_27 { pt3dadd( 34.3366, -222.403, 32.2781, 0.55 ) }
    dend_27 { pt3dadd( 34.9067, -224.513, 32.4537, 0.55 ) }
    dend_27 { pt3dadd( 35.4848, -226.864, 32.666, 0.55 ) }
    dend_27 { pt3dadd( 36.3181, -230.395, 32.9851, 0.55 ) }
    dend_27 { pt3dadd( 36.8647, -233.103, 33.3211, 0.55 ) }
    dend_27 { pt3dadd( 37.2382, -235.674, 33.693, 0.55 ) }
    dend_27 { pt3dadd( 37.5009, -238.122, 34.1073, 0.55 ) }
    dend_27 { pt3dadd( 37.7409, -240.506, 34.5636, 0.55 ) }
    dend_27 { pt3dadd( 37.9115, -242.206, 34.8683, 0.55 ) }
    dend_27 { pt3dadd( 38.1533, -244.996, 35.2749, 0.55 ) }
    dend_27 { pt3dadd( 38.2657, -248.371, 35.5701, 0.55 ) }
    dend_27 { pt3dadd( 38.2904, -250.025, 35.5856, 0.55 ) }
    dend_27 { pt3dadd( 38.267, -251.489, 35.4978, 0.55 ) }
    dend_27 { pt3dadd( 38.2429, -254.271, 35.127, 0.55 ) }
    dend_27 { pt3dadd( 38.1869, -256.039, 34.8604, 0.55 ) }
    dend_27 { pt3dadd( 38.1815, -258.21, 34.5876, 0.55 ) }
    dend_27 { pt3dadd( 38.178, -259.726, 34.5035, 0.55 ) }
    dend_27 { pt3dadd( 38.1906, -263.648, 34.4525, 0.55 ) }
    dend_27 { pt3dadd( 38.2505, -266.561, 34.6306, 0.55 ) }
    dend_27 { pt3dadd( 38.4762, -271.03, 35.2614, 0.55 ) }
    dend_27 { pt3dadd( 38.8218, -273.887, 35.8682, 0.55 ) }
    dend_27 { pt3dadd( 39.2174, -276.877, 36.6026, 0.28 ) }
    dend_27 { pt3dadd( 39.3774, -278.072, 36.9571, 0.28 ) }
    dend_27 { pt3dadd( 39.8978, -280.945, 38.0555, 0.28 ) }
    dend_27 { pt3dadd( 40.473, -283.575, 39.2701, 0.28 ) }
    dend_27 { pt3dadd( 41.7193, -287.024, 41.0158, 0.28 ) }
    dend_27 { pt3dadd( 44.3232, -295.028, 42.5879, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 20.82, -154.945, 21.5578, 0.55 ) }
    dend_26 { pt3dadd( 22.6919, -155.533, 21.6393, 0.55 ) }
    dend_26 { pt3dadd( 26.588, -157.018, 22.0967, 0.55 ) }
    dend_26 { pt3dadd( 29.9755, -158.476, 22.6405, 0.28 ) }
    dend_26 { pt3dadd( 33.627, -160.128, 23.333, 0.55 ) }
    dend_26 { pt3dadd( 35.8729, -161.154, 24.0265, 0.28 ) }
    dend_26 { pt3dadd( 39.8147, -162.971, 25.5584, 0.55 ) }
    dend_26 { pt3dadd( 41.5183, -163.906, 26.64, 0.28 ) }
    dend_26 { pt3dadd( 42.1453, -164.233, 27.1299, 0.28 ) }
    dend_26 { pt3dadd( 43.2295, -164.68, 27.9759, 0.55 ) }
    dend_26 { pt3dadd( 47.442, -166.113, 30.9304, 0.28 ) }
    dend_26 { pt3dadd( 49.2334, -166.667, 32.1129, 0.55 ) }
    dend_26 { pt3dadd( 54.6353, -168.32, 35.092, 0.28 ) }
    dend_26 { pt3dadd( 57.5634, -169.137, 36.498, 0.28 ) }
    dend_26 { pt3dadd( 61.2065, -170.217, 38.0507, 0.55 ) }
    dend_26 { pt3dadd( 66.6091, -171.961, 39.9241, 0.28 ) }
    dend_26 { pt3dadd( 67.3358, -172.2, 40.1031, 0.55 ) }
    dend_26 { pt3dadd( 70.8962, -173.391, 40.7553, 0.28 ) }
    dend_26 { pt3dadd( 71.2161, -173.505, 40.7815, 0.55 ) }
    dend_26 { pt3dadd( 74.0528, -174.872, 41.1349, 0.28 ) }
    dend_26 { pt3dadd( 75.4123, -175.614, 41.3918, 0.55 ) }
    dend_26 { pt3dadd( 86.5962, -181.053, 43.5261, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -28.6569, -133.582, 82.449, 0.55 ) }
    dend_22 { pt3dadd( -30.2181, -136.295, 89.1607, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -28.6569, -133.582, 82.449, 0.55 ) }
    dend_21 { pt3dadd( -32.6563, -138.8, 86.1583, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 3
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 9
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 11
    dend_35 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 11
    dend_12 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_59 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 11
    dend_20 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_BP_4617fbeed2_0_0


