// Cell: bIR215_L4_BTC_d656c19ac5_0_0
/*
{
  "id" : "bIR215_L4_BTC_d656c19ac5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.10901, 8.17427, -3.38986, 2.59058", "-1.02513, 7.19062, -3.06257, 4.73751", "-0.941247, 6.20697, -2.73528, 6.32924", "-0.857366, 5.22332, -2.408, 7.36132", "-0.773484, 4.23967, -2.08071, 9.22299", "-0.689602, 3.25602, -1.75342, 10.2547", "-0.605721, 2.27237, -1.42613, 10.8399", "-0.521839, 1.28871, -1.09885, 11.0364", "-0.437957, 0.305064, -0.771561, 11.233", "-0.354076, -0.678586, -0.444273, 11.4012", "-0.270194, -1.66224, -0.116986, 10.7587", "-0.186312, -2.64589, 0.210301, 10.0838", "-0.102431, -3.62954, 0.537588, 9.4089", "-0.018549, -4.61319, 0.864875, 8.86981", "0.0653327, -5.59684, 1.19216, 8.72262", "0.149214, -6.58049, 1.51945, 8.42438", "0.233096, -7.56414, 1.84674, 7.90042", "0.316978, -8.54779, 2.17402, 7.02226", "0.400859, -9.53144, 2.50131, 6.10711", "0.484741, -10.5151, 2.8286, 5.19196", "0.568623, -11.4987, 3.15589, 3.05014" ]
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.40148, -1.66302, -9.60359, 0.67", "-7.05935, -2.04278, -12.238, 0.67", "-9.77947, -2.31889, -14.6673, 0.67", "-9.77947, -2.31889, -14.6673, 0.67", "-11.1987, -2.45489, -15.5728, 1.33", "-17.1882, -2.72605, -19.5191, 0.33", "-18.1001, -2.78851, -20.2741, 0.33", "-19.953, -2.91805, -22.1793, 1.33", "-21.8123, -3.13687, -24.4248, 0.33", "-22.4186, -3.24586, -25.2086, 1.33", "-26.4285, -4.23209, -30.9942, 0.67", "-31.0805, -5.72215, -38.3429, 0.33", "-33.014, -6.38781, -41.6437, 0.67", "-35.743, -7.41943, -46.534, 0.33", "-36.2974, -7.64262, -47.5531, 0.67", "-38.8093, -8.72281, -52.0271, 0.33", "-39.9568, -9.24243, -53.9274, 1.33", "-42.2656, -10.138, -57.2542, 0.33", "-43.5218, -10.5807, -59.002, 1.33", "-47.6944, -12.0156, -64.552, 0.33", "-48.1406, -12.1676, -65.122, 0.67", "-50.4307, -12.9734, -67.8003, 0.33", "-50.8872, -13.1397, -68.3707, 1.33", "-54.4183, -14.5965, -73.2354, 0.33", "-55.4653, -15.0541, -74.7918, 0.67", "-56.3652, -15.4129, -76.1448, 0.33", "-57.0723, -15.6607, -77.2168, 1.33", "-60.2437, -16.5551, -81.9375, 0.33", "-60.5817, -16.6402, -82.4398, 0.33", "-61.7866, -16.9332, -84.2841, 1.33", "-64.6084, -17.6726, -88.953, 0.33", "-65.0656, -17.8372, -89.8223, 1.33", "-67.6215, -19.0157, -95.0509, 0.33", "-67.922, -19.1893, -95.6928, 0.67", "-70.2227, -20.7684, -100.994, 0.33", "-70.7262, -21.1893, -102.28, 1.33", "-72.7032, -23.1429, -108.062, 0.33", "-72.8966, -23.3491, -108.655, 1.33", "-73.9935, -24.5747, -112.24, 0.33", "-74.4184, -24.993, -113.541, 0.67", "-76.3219, -26.7814, -119.225, 0.33", "-77.8169, -28.0279, -123.446, 0.67", "-78.4384, -28.4556, -125.071, 0.33", "-79.6199, -29.2411, -128.234, 0.67", "-81.4316, -30.4661, -133.325, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-2.84148, 4.10348, -11.1036, 0.67", "-3.12174, 4.76645, -12.1943, 0.67", "-3.6809, 6.42323, -14.2568, 0.67", "-4.61633, 8.7803, -17.1857, 0.67", "-5.34108, 10.6065, -19.4549, 0.67", "-5.64882, 11.3819, -20.4185, 0.67", "-6.04436, 12.3786, -21.6569, 0.67", "-6.97093, 15.4158, -25.2647, 0.67", "-7.6378, 18.3164, -28.3768, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.21148, 5.32898, -10.3036, 0.67", "-0.841084, 7.51152, -11.842, 0.67", "-0.407327, 8.22766, -12.3317, 0.67", "0.324713, 9.43628, -13.1581, 1.33", "2.99327, 13.8421, -16.1708, 0.67", "4.25448, 15.9243, -17.5947, 0.67", "4.92853, 17.0372, -18.3556, 0.67", "5.73843, 18.4826, -19.4937, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "4.30852, 5.51898, 7.4864, 2.0", "4.64398, 5.76015, 7.66774, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.571479, -11.0775, 6.4864, 4.0", "-0.628802, -13.1265, 6.4864, 4.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500008757444842
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.568623, -11.4987, 3.15589, 0.469314", "1.84314, -26.4445, 3.15589, 0.469314", "3.11765, -41.3902, 3.15589, 0.469314" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-7.6378, 18.3164, -28.3768, 0.33", "-7.34187, 21.4587, -38.5866, 0.33", "-7.31421, 21.7571, -39.4337, 1.33", "-7.091, 23.7852, -44.7533, 0.33", "-7.068, 24.1543, -45.5838, 1.33", "-6.99156, 26.2696, -49.8715, 0.33", "-6.99394, 26.5338, -50.3599, 0.67", "-7.21383, 28.5861, -53.3385, 0.33", "-7.26689, 28.9055, -53.7857, 1.33", "-7.61408, 30.8074, -56.2616, 0.33", "-7.97012, 32.7934, -58.8286, 1.33", "-8.48441, 35.5633, -62.307, 0.33", "-8.91262, 37.8691, -65.2693, 1.33", "-9.42457, 40.5993, -68.7759, 0.33", "-9.50421, 41.084, -69.3819, 1.33", "-9.7026, 42.7568, -71.4276, 0.33", "-9.78695, 43.5335, -72.3117, 0.67", "-10.0919, 47.6902, -77.1975, 0.33", "-10.1169, 48.2646, -77.8532, 1.33", "-10.1493, 49.7789, -79.6511, 0.33", "-10.1587, 50.1229, -80.0809, 1.33", "-10.292, 53.7795, -85.2779, 0.33", "-10.3999, 55.8565, -88.4505, 1.33", "-10.4883, 57.2942, -90.7764, 0.33", "-10.6066, 58.4754, -92.8975, 0.67", "-10.8861, 60.5066, -96.7598, 0.33", "-11.4336, 63.5342, -102.219, 0.67", "-11.9316, 65.8804, -106.214, 0.33", "-12.3423, 67.0535, -108.142, 0.67", "-14.8179, 72.2103, -116.573, 0.33", "-14.9861, 72.4809, -117.006, 0.67", "-16.7159, 74.7159, -120.425, 0.33", "-17.1164, 75.1711, -121.109, 0.67", "-20.0239, 78.2953, -126.286, 0.33", "-20.54, 78.9665, -127.417, 0.67", "-21.933, 81.1586, -131.287, 0.33", "-22.0862, 81.5882, -132.073, 0.67", "-22.1194, 84.3985, -137.765, 0.33", "-21.6657, 86.3065, -141.169, 0.67", "-20.2037, 89.3208, -145.884, 0.33", "-20.0893, 89.5222, -146.188, 0.67", "-18.1506, 92.4959, -150.205, 0.33", "-15.9052, 95.6867, -154.277, 1.33", "-12.2929, 100.5, -159.051, 0.33", "-12.0971, 100.764, -159.262, 0.67" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-7.6378, 18.3164, -28.3768, 0.33", "-9.8597, 17.1693, -32.1556, 0.33", "-10.8312, 16.7994, -33.4136, 1.33", "-14.4414, 15.6115, -37.4905, 0.33", "-15.312, 15.38, -38.4857, 0.67", "-17.8465, 14.8234, -41.3553, 0.33", "-20.3542, 14.3726, -44.203, 1.33", "-25.0573, 13.8691, -48.9964, 0.33", "-25.9373, 13.8473, -49.9108, 1.33", "-29.3103, 14.0417, -53.2229, 0.33", "-29.9175, 14.1245, -53.8659, 0.67", "-32.3093, 14.6288, -56.5163, 0.33", "-33.1753, 14.8395, -57.4666, 0.67", "-35.9097, 15.5658, -60.2209, 0.33", "-36.829, 15.8249, -61.1288, 1.33", "-40.3798, 16.8425, -64.4514, 0.33", "-41.6936, 17.2652, -65.7116, 1.33", "-47.439, 19.3381, -71.2026, 0.33", "-48.6806, 19.8236, -72.4364, 1.33", "-51.6165, 21.0454, -75.3417, 0.33", "-51.913, 21.1929, -75.6479, 0.67", "-54.768, 22.8222, -78.6184, 0.33", "-55.3262, 23.1741, -79.2097, 0.67", "-57.5311, 24.7098, -81.4655, 0.33", "-58.142, 25.1117, -82.0394, 2.0", "-65.0602, 29.4141, -88.2081, 0.33", "-65.5418, 29.6916, -88.6259, 0.67", "-67.5396, 30.76, -90.2509, 0.33", "-68.0527, 31.0159, -90.6512, 0.67", "-69.4943, 31.7162, -91.8609, 0.33", "-71.0022, 32.4431, -93.1405, 0.67", "-75.1224, 34.3607, -96.5902, 0.33", "-76.2597, 34.9159, -97.5377, 0.67", "-80.6818, 37.2056, -101.243, 0.33", "-84.3621, 39.2932, -104.43, 1.33", "-86.5477, 40.636, -106.338, 0.33", "-86.9632, 40.9112, -106.715, 0.67", "-88.2365, 41.7656, -108.012, 0.33", "-88.2975, 41.8044, -108.072, 0.67", "-91.4617, 43.203, -110.894, 0.33", "-92.2376, 43.4065, -111.491, 1.33", "-95.1673, 43.92, -114.434, 0.33", "-96.6758, 44.1241, -115.989, 0.33", "-99.8946, 44.3332, -119.381, 0.67", "-104.368, 44.3744, -123.978, 0.33", "-105.053, 44.2986, -124.636, 0.67", "-109.376, 43.7091, -129.001, 0.33" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "5.73843, 18.4826, -19.4937, 0.33", "9.04429, 20.3366, -20.8988, 0.33", "10.6226, 21.2694, -21.5404, 0.67", "12.7764, 22.588, -22.3994, 0.33", "13.0651, 22.7708, -22.5555, 0.67", "15.0475, 24.079, -23.6902, 0.33", "16.8425, 25.1772, -24.584, 1.33", "20.2608, 27.1678, -25.9381, 0.33", "20.5664, 27.344, -26.0722, 0.67", "26.8495, 31.0461, -28.8164, 0.33", "28.42, 31.9939, -29.4815, 2.0", "34.163, 35.5241, -31.833, 0.33", "36.9374, 37.2691, -32.9707, 2.0", "45.1904, 42.6714, -36.4453, 0.33", "46.9013, 43.8363, -37.2273, 1.33", "49.5119, 45.6963, -38.4943, 0.33", "50.2562, 46.2321, -38.9533, 0.67", "53.5035, 48.6728, -41.4982, 0.33", "54.7361, 49.5057, -42.6511, 0.67", "58.148, 51.4477, -46.1122, 0.33", "59.0593, 51.8663, -47.0389, 1.33", "62.5131, 53.1366, -50.4461, 0.33", "63.4674, 53.3969, -51.3484, 1.33", "67.8726, 54.1965, -55.2161, 0.33", "68.152, 54.2279, -55.4386, 0.67", "71.4241, 54.4311, -57.7828, 0.33", "73.0954, 54.4823, -58.873, 1.33", "76.9469, 54.4822, -61.0124, 0.33", "77.8526, 54.4668, -61.548, 0.67", "81.8276, 54.3786, -63.8875, 0.33", "83.6041, 54.3485, -65.1025, 1.33", "86.6354, 54.3292, -67.4048, 0.33", "87.9732, 54.366, -68.5268, 1.33", "94.0592, 54.6936, -73.881, 0.33", "94.8508, 54.738, -74.5723, 1.33", "99.2398, 54.9936, -78.4227, 0.33", "100.255, 55.0398, -79.2783, 0.67", "105.334, 55.2118, -83.7019, 0.33", "106.208, 55.2098, -84.4574, 1.33", "111.328, 54.8977, -88.4791, 0.33", "112.16, 54.8131, -89.0926, 0.67", "113.716, 54.5975, -90.1185, 0.33", "116.847, 54.0766, -91.9358, 0.67", "119.007, 53.6929, -92.9439, 0.33", "119.665, 53.5943, -93.2507, 0.67", "123.253, 53.1404, -94.6853, 0.33", "123.597, 53.1199, -94.8368, 0.67", "128.046, 53.0984, -96.8935, 0.33", "129.117, 53.1249, -97.3619, 0.67", "130.715, 53.2364, -98.1747, 0.33", "133.506, 53.3928, -99.7523, 0.67", "139.962, 53.7219, -103.794, 0.33", "141.036, 53.7619, -104.547, 0.67", "143.409, 53.8666, -106.367, 0.33", "145.062, 53.9218, -107.723, 1.33", "148.488, 53.9771, -110.609, 0.33", "148.884, 53.9811, -110.965, 0.67", "153.619, 53.8243, -114.948, 0.33", "154.405, 53.7587, -115.646, 1.33", "157.255, 53.4289, -118.373, 0.33", "157.762, 53.3134, -118.89, 0.67", "159.861, 52.5837, -121.249, 0.33", "160.765, 52.0508, -122.095, 0.67", "163.288, 49.8935, -123.883, 0.33", "163.288, 49.8935, -123.883, 1.33", "166.273, 46.4446, -124.956, 0.33", "166.907, 45.7038, -125.12, 1.33", "171.289, 40.5998, -125.786, 0.33", "171.527, 40.3376, -125.81, 0.67", "173.986, 38.0105, -125.93, 0.33", "174.386, 37.6815, -125.947, 0.67", "177.531, 35.7001, -126.061, 0.33", "179.777, 34.5806, -126.264, 0.33", "180.453, 34.3444, -126.434, 0.67", "185.62, 32.9391, -128.064, 0.33", "185.984, 32.9101, -128.178, 0.67", "190.039, 33.1008, -129.447, 0.33", "191.002, 33.3207, -129.741, 0.67", "196.714, 35.3976, -131.454, 0.33", "197.703, 35.839, -131.756, 1.33", "204.235, 39.7048, -133.787, 0.33", "205.171, 40.3195, -134.06, 1.33", "207.824, 42.4068, -134.705, 0.33", "208.146, 42.6742, -134.742, 0.67" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "5.73843, 18.4826, -19.4937, 0.33", "8.14505, 23.3219, -28.0935, 0.33", "8.5464, 24.1429, -29.4626, 0.67", "9.80118, 27.6306, -35.0993, 0.33", "10.3634, 29.6175, -38.154, 0.33", "10.4483, 30.316, -39.1909, 0.67", "10.5162, 32.8101, -42.698, 0.33", "10.3655, 33.9705, -44.0166, 0.67", "9.76272, 36.4585, -46.8749, 0.33", "9.49885, 37.2191, -47.7646, 1.33", "7.94172, 41.0138, -52.4058, 0.33", "7.59618, 41.9132, -53.6243, 1.33", "6.30572, 45.6793, -59.02, 0.33", "5.67, 47.8688, -62.2271, 2.0", "4.88039, 51.3647, -67.4883, 0.33", "4.7846, 51.833, -68.2276, 0.67", "4.12719, 56.6191, -76.1761, 0.33", "3.95954, 57.9599, -78.5889, 2.0" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "4.64398, 5.76015, 7.66774, 0.67", "6.6175, 7.08007, 7.58689, 0.67", "7.58596, 7.72779, 7.54722, 0.33", "9.78688, 9.1998, 7.45708, 1.33", "14.2522, 12.1862, 7.27417, 0.67", "18.8421, 15.256, 7.08615, 0.67", "20.2594, 16.2039, 7.0281, 1.33" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "4.64398, 5.76015, 7.66774, 0.67", "4.76652, 6.91121, 8.34976, 0.67", "4.881, 7.98658, 8.98695, 0.67", "4.99187, 9.02798, 9.604, 0.67", "5.2186, 11.1577, 10.8659, 0.67", "5.33046, 12.2084, 11.4885, 1.33" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.628802, -13.1265, 6.4864, 3.33", "0.274197, -15.6322, 5.88693, 3.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.628802, -13.1265, 6.4864, 1.33", "-4.68442, -19.1186, 7.29458, 1.33", "-7.05745, -22.6247, 7.76746, 1.33", "-7.67925, -23.5434, 7.89136, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.11765, -41.3902, 3.15589, 0.67", "4.39217, -56.336, 3.15589, 0.67", "5.66668, -71.2817, 3.15589, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "3.95954, 57.9599, -78.5889, 0.33", "4.9481, 59.8643, -79.1832, 0.33", "5.28342, 60.3478, -79.4477, 0.67", "6.70413, 62.2097, -80.5994, 0.33", "7.11449, 62.6398, -80.8677, 0.67", "9.11415, 64.5956, -82.084, 0.33", "9.30647, 64.7706, -82.1908, 0.67", "12.8099, 67.7326, -84.1779, 0.33", "13.2629, 68.0692, -84.4997, 1.33", "16.2927, 70.084, -86.8804, 0.33", "16.4854, 70.2073, -87.0498, 0.67", "17.8677, 71.0737, -88.3191, 0.33", "18.6241, 71.5731, -89.0598, 0.67", "22.99, 74.711, -93.7412, 0.33", "23.5225, 75.1134, -94.3869, 0.67", "26.1445, 77.2385, -98.1195, 0.33", "26.754, 77.7025, -99.0123, 1.33", "27.372, 78.1531, -99.9913, 0.33", "27.6686, 78.3403, -100.508, 0.67", "29.8627, 79.5318, -104.394, 0.33", "30.8749, 79.9646, -106.218, 0.67", "33.5029, 80.9027, -110.963, 0.33", "34.608, 81.2187, -112.948, 1.33", "38.0263, 82.0221, -119.059, 0.33", "39.2456, 82.257, -121.204, 1.33", "43.0122, 82.7958, -127.538, 0.33", "43.4856, 82.8468, -128.346, 0.67", "44.52, 82.9333, -130.335, 0.33", "45.154, 82.9405, -131.772, 0.67", "46.2855, 82.8678, -134.529, 0.33", "46.5858, 82.8315, -135.378, 0.67", "47.7865, 82.5191, -139.836, 0.33", "48.5286, 82.2842, -142.967, 0.67", "49.447, 82.0234, -147.643, 0.33", "50.237, 81.6251, -152.875, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "3.95954, 57.9599, -78.5889, 0.33", "1.12798, 61.3346, -81.4423, 0.33", "0.348652, 62.2972, -82.2995, 0.67", "-2.48404, 65.8946, -86.2296, 0.33", "-3.27116, 67.0698, -87.5904, 0.67", "-5.85365, 71.1883, -92.434, 0.33", "-6.46012, 72.2279, -93.6469, 0.67", "-8.23829, 75.5118, -97.719, 0.33", "-10.2436, 79.8287, -102.969, 1.33", "-11.8445, 84.0006, -107.841, 0.33", "-11.9438, 84.281, -108.187, 1.33", "-13.1644, 88.0871, -112.76, 0.33", "-13.3615, 88.7607, -113.547, 1.33", "-13.8034, 90.3826, -115.467, 0.33", "-13.8686, 90.7163, -115.82, 0.67", "-15.1277, 98.6539, -124.036, 0.33", "-15.3111, 100.019, -125.469, 0.67", "-15.5498, 102.073, -127.65, 0.33", "-16.1533, 107.141, -132.895, 1.33", "-17.013, 114.202, -140.111, 0.33", "-17.0767, 114.928, -140.864, 0.67", "-17.2533, 120.507, -146.573, 0.33", "-17.2533, 120.507, -146.573, 0.67", "-17.4463, 126.082, -152.78, 0.33", "-17.5107, 127.7, -154.488, 1.33", "-17.8156, 132.49, -159.651, 0.33", "-17.8559, 133.231, -160.384, 0.67", "-18.052, 138.836, -165.264, 0.33", "-18.1004, 139.866, -166.08, 0.67", "-18.4108, 144.806, -169.544, 0.33", "-18.5051, 145.923, -170.237, 1.33", "-18.8225, 148.675, -171.663, 0.33", "-18.9505, 149.608, -172.125, 0.67", "-19.8114, 155.388, -174.62, 0.33", "-20.1692, 157.959, -175.751, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "20.2594, 16.2039, 7.0281, 0.67", "25.8239, 16.1735, 6.67068, 0.67", "27.953, 16.2802, 6.38401, 0.67", "30.5487, 16.5879, 5.96574, 0.67", "32.9083, 16.9765, 5.57349, 0.67", "33.9974, 17.1824, 5.39224, 0.67", "36.1326, 17.6016, 5.04911, 0.67", "39.7302, 18.5614, 4.64908, 0.67", "41.9907, 19.2715, 4.40766, 0.67", "43.6756, 19.9067, 4.29816, 0.33", "44.1003, 20.0725, 4.29631, 0.67", "45.0741, 20.4489, 4.33122, 0.33", "47.692, 21.4264, 4.59215, 0.67", "48.7795, 21.8747, 4.75476, 0.33", "49.3901, 22.1173, 4.80557, 0.67", "50.629, 22.6128, 4.78796, 0.33", "50.629, 22.6128, 4.78796, 0.67", "52.5375, 23.3447, 4.48521, 0.33", "54.9125, 24.1945, 4.1355, 1.33", "58.8191, 25.5199, 3.68751, 0.33", "60.3955, 25.9625, 3.53409, 0.67", "63.6231, 26.7196, 3.27554, 0.33", "65.6605, 27.0672, 3.10561, 1.33", "69.0912, 27.3898, 2.84689, 0.33", "69.3899, 27.3865, 2.82973, 0.67", "73.5168, 26.902, 2.49149, 0.33", "74.338, 26.7389, 2.43583, 1.33", "76.7292, 26.0659, 2.22635, 0.33", "77.5538, 25.8067, 2.15374, 0.67", "79.9787, 25.025, 1.82231, 0.33", "80.4289, 24.8927, 1.76148, 0.67", "82.2705, 24.4417, 1.55277, 0.33", "83.188, 24.2718, 1.46534, 0.67", "84.6735, 24.1061, 1.36978, 0.33", "85.7328, 24.0452, 1.33342, 1.33", "88.4904, 24.004, 1.31911, 0.33", "89.4406, 23.9792, 1.33876, 2.0", "91.7746, 23.9139, 1.43534, 0.33", "92.8254, 23.8412, 1.51608, 0.67", "95.706, 23.5192, 1.84643, 0.33", "96.7549, 23.3258, 2.01716, 0.67", "98.5721, 22.8872, 2.41002, 0.33", "99.023, 22.7506, 2.50631, 1.33", "101.609, 21.7858, 3.05479, 0.33", "102.452, 21.4186, 3.23054, 1.33", "104.814, 20.2806, 3.7036, 0.33", "105.744, 19.8281, 3.89202, 1.33", "108.744, 18.402, 4.49899, 0.33", "109.829, 17.9544, 4.68726, 1.33", "113.256, 16.8013, 5.19892, 0.33", "114.087, 16.5785, 5.30678, 0.67", "115.342, 16.3214, 5.44732, 0.33", "115.925, 16.2231, 5.50659, 0.67", "120.925, 15.5674, 5.65352, 0.33", "121.979, 15.4519, 5.62721, 1.33", "124.299, 15.2166, 5.38496, 0.33", "125.341, 15.0755, 5.20158, 0.67", "127.587, 14.6845, 4.67345, 0.33", "130.52, 14.014, 3.84987, 1.33", "132.278, 13.5156, 3.29399, 0.33", "133.674, 13.1041, 2.85542, 1.33", "136.565, 12.3605, 2.04496, 0.33", "136.97, 12.275, 1.95494, 0.67", "138.472, 12.0325, 1.75231, 1.33", "140.842, 11.7936, 1.78847, 0.33", "141.508, 11.7575, 1.85392, 0.67", "144.591, 11.7406, 2.51104, 0.33", "145.321, 11.7741, 2.7205, 0.67", "146.73, 11.8898, 3.1537, 0.33", "148.528, 12.1494, 3.81006, 1.33", "150.447, 12.5159, 4.61845, 0.33", "151.645, 12.8297, 5.25704, 1.33", "153.539, 13.5783, 6.544, 0.33", "154.145, 13.9569, 7.05018, 1.33", "155.364, 15.0395, 8.2177, 0.33", "155.578, 15.2981, 8.46399, 0.67", "156.549, 16.8216, 9.8062, 0.33", "156.762, 17.2516, 10.1809, 1.33", "157.747, 20.0179, 12.6832, 0.33", "157.954, 20.6311, 13.2458, 0.67", "158.413, 22.0949, 14.5616, 0.33", "158.519, 22.4314, 14.8692, 0.67", "159.006, 23.9259, 16.2218, 0.33", "159.232, 24.8213, 17.1027, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "20.2594, 16.2039, 7.0281, 0.33", "21.6905, 17.7637, 8.18876, 0.33", "24.3893, 20.1615, 10.0797, 0.67", "27.344, 22.8385, 12.2052, 0.67", "28.6276, 24.0124, 13.1092, 0.67", "31.9061, 26.9261, 15.3317, 0.67", "35.099, 29.7266, 17.351, 0.67", "39.4528, 33.21, 19.8513, 0.67", "41.5376, 34.7879, 20.9819, 0.67", "43.8746, 36.663, 22.3421, 0.67", "45.2402, 37.751, 23.2062, 0.67", "47.9917, 39.9598, 24.8297, 0.67", "51.2246, 42.5386, 26.4459, 0.67", "53.8308, 44.7376, 27.7469, 0.67", "57.5369, 47.9405, 29.5458, 0.67", "59.1352, 49.4871, 30.4217, 0.67", "62.2583, 52.5782, 32.3113, 0.67", "63.4061, 53.6744, 33.0046, 0.67", "66.6286, 56.4491, 34.8969, 0.67", "68.115, 57.5018, 35.7938, 0.67", "71.4477, 59.2903, 37.8946, 0.67", "74.9578, 60.8702, 40.1824, 0.67", "78.0824, 62.1212, 42.4715, 0.67", "81.8749, 63.359, 45.1999, 0.67", "85.1827, 64.0153, 47.3676, 0.67", "87.2041, 64.2439, 48.6067, 0.33", "89.7141, 64.286, 50.0015, 0.67" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "5.33046, 12.2084, 11.4885, 0.67", "5.96495, 16.7978, 13.112, 0.67", "6.68934, 21.2086, 15.1196, 0.67", "7.26445, 23.3915, 16.2196, 0.67", "7.77474, 25.1326, 17.0803, 0.67", "8.92563, 28.702, 18.922, 0.67", "10.231, 32.4938, 20.8853, 0.67", "11.5402, 36.2887, 22.9383, 0.67", "12.8231, 39.8016, 24.7114, 0.67", "14.4846, 44.3763, 27.0804, 0.67", "15.1743, 46.4464, 28.2473, 0.33", "15.5745, 47.5775, 28.9372, 0.67", "16.0581, 48.955, 29.6883, 0.33", "16.994, 51.7652, 31.0801, 0.67", "17.5471, 53.386, 31.8708, 1.33", "18.7386, 56.5576, 33.3672, 0.67", "21.1371, 62.7365, 36.058, 0.67", "23.0279, 67.5585, 38.0451, 0.67", "24.5912, 71.4553, 39.4838, 0.67", "25.3352, 73.2767, 40.038, 0.67", "26.0002, 74.9425, 40.4497, 0.67", "26.527, 76.3694, 40.7213, 1.33", "27.2872, 78.8671, 41.1108, 0.33", "28.0546, 81.4653, 41.5017, 1.33", "28.3896, 83.3456, 41.7066, 0.33", "28.6492, 85.7651, 41.977, 1.33", "28.8619, 90.0709, 42.4376, 0.67", "28.8927, 92.0006, 42.6703, 0.33", "28.8876, 92.9527, 42.7888, 0.33", "28.7601, 98.7824, 43.54, 0.67", "28.7014, 100.536, 43.7557, 0.33", "28.6238, 103.083, 44.1609, 0.67", "28.6232, 105.453, 44.5787, 0.67", "28.7432, 107.535, 45.0237, 0.67", "28.9379, 108.849, 45.3633, 0.67", "29.3509, 109.956, 45.7653, 0.67", "30.8402, 113.026, 47.0802, 0.33", "31.4724, 114.051, 47.6141, 0.33", "32.2098, 115.173, 48.25, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.33046, 12.2084, 11.4885, 0.67", "4.58011, 15.3915, 12.9072, 0.67", "3.81112, 19.0416, 15.2657, 0.67", "3.10286, 22.6268, 18.0688, 0.67", "2.74013, 24.8372, 19.9052, 0.67", "2.643, 27.922, 22.4137, 0.67", "2.84091, 31.0987, 25.1267, 0.67", "3.30667, 35.8499, 29.4151, 0.67", "3.55901, 38.6351, 32.1021, 0.67", "3.85377, 41.0677, 34.4749, 0.67", "4.57118, 45.6771, 38.762, 0.67", "5.06606, 49.0093, 41.8242, 0.67", "5.28521, 51.6993, 44.17, 0.67", "5.34198, 53.8284, 45.7645, 0.67", "5.3659, 60.288, 49.9788, 0.67", "5.27494, 65.3785, 52.7797, 0.67", "4.96913, 69.3748, 54.8712, 0.67", "4.80898, 72.3011, 56.2103, 0.67", "4.8721, 78.1429, 58.7618, 0.33", "4.90769, 79.6933, 59.3461, 0.67", "4.9836, 83.3716, 59.5134, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "0.274197, -15.6322, 5.88693, 1.33", "0.898171, -18.5902, 7.58428, 1.33", "1.61604, -21.9933, 9.53706, 1.33", "2.46291, -26.0079, 11.8407, 1.33" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "0.274197, -15.6322, 5.88693, 0.67", "0.156343, -17.7717, 3.36818, 0.67", "0.35761, -21.2262, -0.29927, 0.67", "0.695217, -24.5044, -3.83226, 0.67", "1.369, -31.0469, -10.8832, 0.67", "1.69762, -34.2379, -14.3222, 0.67", "1.98255, -37.0046, -17.304, 0.67", "2.24943, -41.6836, -22.3594, 0.67", "2.52119, -44.175, -25.0126, 1.33" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.67925, -23.5434, 7.89136, 0.67", "-9.56753, -30.5028, 9.56516, 0.67", "-10.1412, -32.6173, 10.0737, 0.67", "-11.3146, -36.9418, 11.1138, 1.33", "-13.1793, -43.8142, 12.7667, 0.67", "-13.5825, -45.3003, 13.1241, 0.67", "-14.3919, -48.2835, 13.8416, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.67925, -23.5434, 7.89136, 0.67", "-8.94168, -23.8351, 9.46502, 0.67", "-11.3596, -24.2082, 12.5417, 0.67", "-12.8361, -24.3491, 14.3863, 0.67", "-19.2672, -24.7821, 22.1221, 0.67", "-22.5305, -25.0507, 25.8426, 0.67", "-25.1616, -25.2751, 28.7788, 0.67", "-27.9084, -25.3089, 31.8836, 0.33", "-30.2418, -25.1822, 34.5247, 0.67", "-31.3256, -25.1083, 35.7035, 0.33", "-33.4486, -24.8971, 37.5482, 0.67", "-35.9714, -24.805, 39.9485, 0.67", "-39.2898, -24.5736, 42.8956, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "2.46291, -26.0079, 11.8407, 1.33", "1.24387, -28.1911, 12.2617, 1.33" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.46291, -26.0079, 11.8407, 0.67", "3.86284, -25.6738, 14.5277, 0.67", "5.53555, -24.3919, 18.8491, 0.67", "6.09512, -23.6966, 20.8971, 0.67", "6.67481, -22.3959, 24.7657, 0.67", "6.74004, -22.1791, 25.3021, 0.67", "6.89825, -21.3468, 27.0426, 0.67", "6.97881, -19.463, 30.0345, 0.67", "7.01366, -18.5692, 31.1735, 0.67", "7.24285, -16.3538, 33.8602, 0.67", "7.37993, -14.5886, 35.7633, 0.67", "7.68237, -13.4471, 36.8836, 0.67", "8.47844, -11.2819, 38.8748, 0.67", "9.13112, -9.95507, 39.9764, 0.67", "9.71276, -8.90366, 40.7573, 0.67", "10.5453, -7.57447, 41.5932, 0.67", "12.9248, -4.36501, 43.9044, 0.67" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "2.52119, -44.175, -25.0126, 0.33", "1.55985, -46.4053, -27.402, 0.33", "1.2989, -47.0107, -28.0506, 1.33", "-0.151522, -50.3755, -31.6557, 0.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.52119, -44.175, -25.0126, 0.33", "5.03267, -45.3721, -29.0432, 0.33", "5.20795, -45.4414, -29.3098, 0.67", "6.32658, -45.7951, -30.8984, 0.33", "7.30829, -46.0374, -32.1782, 1.33", "10.5329, -46.6997, -36.3352, 0.67", "13.6341, -47.1928, -40.1196, 0.33", "14.55, -47.2741, -41.1632, 0.33", "15.4655, -47.3256, -42.2197, 0.67", "16.8808, -47.3812, -43.8791, 0.33", "18.7495, -47.5495, -46.0008, 1.33", "20.2509, -47.7568, -47.6157, 0.33", "21.7616, -48.1008, -49.204, 1.33", "24.335, -48.8518, -51.9211, 0.33", "24.8011, -49.0157, -52.4626, 0.67", "29.1608, -50.781, -57.787, 0.33", "30.109, -51.2175, -59.0086, 2.0", "33.7306, -53.1218, -64.0195, 0.33", "34.1196, -53.3507, -64.6015, 1.33", "36.8233, -55.1485, -69.2564, 0.33", "37.1541, -55.3771, -69.8707, 0.67", "38.4218, -56.4089, -72.7009, 0.33", "38.8553, -56.8318, -73.8564, 1.33", "40.0454, -58.6291, -78.6032, 0.33", "40.5704, -59.4453, -80.7374, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-14.3919, -48.2835, 13.8416, 0.67", "-14.3252, -50.4842, 14.2142, 0.67", "-14.5172, -52.2053, 14.5348, 0.67", "-14.7016, -53.3224, 14.7447, 0.67", "-15.4611, -57.0754, 15.4321, 0.67", "-17.1102, -63.7879, 16.7431, 0.67", "-18.5576, -68.5205, 17.7321, 0.67", "-20.3084, -73.4882, 18.8382, 0.67", "-22.6433, -79.6619, 20.3125, 0.67", "-23.5143, -81.6922, 20.8172, 0.67", "-24.8353, -84.0438, 21.4624, 0.67", "-27.9666, -88.4875, 22.8748, 0.67", "-29.4109, -90.2994, 23.5075, 0.67", "-31.9323, -93.29, 24.6232, 0.67", "-32.9109, -94.3836, 25.0696, 0.67", "-37.7874, -100.081, 27.3972, 0.67", "-40.9004, -103.851, 28.9148, 0.67", "-43.328, -106.917, 30.1358, 0.67", "-46.1295, -110.499, 31.5524, 0.67", "-48.2725, -113.337, 32.6805, 0.67", "-49.3357, -114.935, 33.4098, 0.67", "-50.4855, -117.012, 34.4611, 0.67", "-51.5991, -119.057, 35.6366, 0.67", "-52.3828, -120.353, 36.4754, 0.67", "-53.938, -122.489, 38.0024, 0.67", "-56.6267, -125.405, 40.567, 0.67", "-57.9204, -126.647, 41.7942, 0.67", "-59.4208, -127.943, 43.2257, 0.67", "-61.1415, -129.196, 44.8175, 0.67", "-62.8911, -130.36, 46.3669, 0.33", "-65.5121, -131.737, 48.3145, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-14.3919, -48.2835, 13.8416, 0.67", "-17.6126, -49.3389, 12.0377, 0.67", "-21.5701, -50.6777, 9.57141, 0.67", "-25.6644, -52.0428, 6.96298, 0.67", "-33.9264, -54.6771, 2.02829, 0.67", "-37.8742, -55.854, -0.208106, 0.67", "-40.1266, -56.5089, -1.4027, 0.67", "-42.9795, -57.3672, -2.94499, 0.33", "-44.9032, -57.922, -4.02515, 1.33", "-47.7783, -58.7272, -5.46828, 0.33", "-50.6946, -59.5799, -6.63435, 0.67", "-53.5914, -60.4665, -7.67723, 0.33", "-57.2026, -61.6942, -9.16241, 0.67", "-59.8268, -62.6366, -10.2979, 0.33", "-61.8165, -63.4392, -11.2855, 0.67", "-67.1167, -65.8181, -14.2461, 0.33", "-69.6597, -67.1159, -15.8799, 1.33", "-73.7987, -69.2558, -18.3912, 0.33", "-74.2111, -69.4666, -18.6407, 0.67", "-76.2898, -70.5209, -19.9695, 0.33", "-76.9112, -70.8246, -20.439, 0.67", "-82.7208, -73.4711, -25.0277, 0.33", "-85.814, -74.7906, -27.8404, 2.0", "-90.8828, -76.7644, -32.6526, 0.33", "-92.7089, -77.4229, -34.4, 1.33", "-97.631, -79.01, -39.1073, 0.33", "-97.8966, -79.0845, -39.3435, 0.67", "-100.384, -79.6513, -41.4393, 0.33", "-100.965, -79.7713, -41.8934, 0.67", "-104.949, -80.4948, -44.2443, 0.33", "-106.659, -80.8149, -45.0619, 1.33", "-109.511, -81.3537, -46.118, 0.33", "-114.21, -82.402, -47.705, 1.33", "-118.443, -83.4857, -48.974, 0.33", "-119.541, -83.8348, -49.294, 0.67", "-122.464, -84.9212, -50.1227, 0.33", "-123.136, -85.2252, -50.2751, 0.67", "-127.728, -87.6192, -51.0603, 0.33", "-129.072, -88.4042, -51.2759, 0.67", "-132.413, -90.4914, -51.9409, 0.33", "-133.395, -91.0934, -52.1546, 0.67", "-139.619, -94.8161, -53.5556, 0.33", "-139.931, -95.0003, -53.6425, 0.67", "-143.793, -97.2014, -54.8927, 0.33", "-145.069, -97.9278, -55.3268, 1.33", "-148.219, -99.738, -56.4528, 0.33", "-150.168, -100.909, -57.1343, 1.33", "-155.768, -104.383, -59.0316, 0.33", "-156.853, -105.083, -59.3402, 1.33", "-159.228, -106.656, -59.8413, 0.33", "-159.843, -107.045, -59.9498, 0.67", "-162.969, -108.953, -60.4032, 0.33", "-163.678, -109.386, -60.4759, 0.67", "-166.367, -111.078, -60.6191, 0.33", "-167.832, -112.221, -60.7807, 1.33", "-173.565, -117.511, -61.7244, 0.33", "-174.11, -118.118, -61.8452, 0.67", "-176.68, -121.765, -62.6293, 0.33", "-177.419, -123.158, -62.9393, 0.67", "-179.517, -129.466, -64.4247, 0.33", "-179.551, -129.819, -64.5252, 1.33", "-179.319, -131.501, -65.0874, 0.33", "-179.228, -131.967, -65.2374, 0.67", "-178.874, -133.383, -65.6843, 0.33", "-178.766, -133.848, -65.8271, 0.67", "-177.885, -138.22, -66.9674, 0.33", "-177.683, -139.227, -67.2387, 1.33", "-176.585, -144.824, -68.8076, 0.33", "-176.531, -145.154, -68.8982, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "1.24387, -28.1911, 12.2617, 0.67", "-0.164229, -33.7927, 12.397, 0.67", "-0.624238, -35.2968, 12.4988, 0.67", "-1.62839, -37.8284, 12.6818, 0.67", "-3.10102, -41.5412, 12.9502, 0.67", "-4.65164, -45.4506, 13.2329, 0.67", "-5.63467, -47.9291, 13.412, 0.67", "-8.02393, -53.2335, 14.2467, 0.67", "-11.8456, -61.4184, 15.4898, 0.33" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "1.24387, -28.1911, 12.2617, 0.67", "3.58807, -31.132, 12.9203, 0.67" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.151522, -50.3755, -31.6557, 0.33", "1.13694, -52.3033, -33.0584, 0.33", "1.54106, -52.8206, -33.657, 0.67", "2.45426, -53.9673, -35.0052, 0.33", "2.77284, -54.3441, -35.501, 0.67", "3.83306, -55.534, -37.1269, 0.33", "6.70874, -58.4799, -41.5554, 1.33", "9.49794, -60.9814, -46.1565, 0.33", "10.148, -61.4936, -47.2156, 1.33", "12.3152, -63.0242, -50.7188, 0.33", "12.7792, -63.2898, -51.4981, 0.67", "15.1153, -64.3103, -55.7224, 0.33", "16.3161, -64.6902, -57.8752, 2.0", "17.3538, -64.9024, -59.8712, 0.33", "17.7002, -64.969, -60.6579, 0.67", "20.2155, -65.4841, -67.056, 0.33", "21.6735, -65.9184, -71.1016, 1.33", "22.3402, -66.1739, -73.113, 0.33", "22.6904, -66.3514, -74.2319, 2.0", "25.6432, -68.2403, -84.4412, 0.33", "25.8752, -68.4354, -85.3667, 2.0", "26.6973, -69.3202, -88.895, 0.33", "27.047, -69.8275, -90.6304, 0.67", "27.6061, -70.8929, -93.958, 0.33", "27.8231, -71.276, -94.9838, 1.33", "30.7139, -76.0116, -105.431, 0.33", "31.5896, -77.1878, -107.803, 0.67", "32.8658, -78.6206, -110.403, 0.33", "33.0834, -78.8356, -110.73, 0.67", "36.9991, -82.1878, -115.099, 0.33", "38.028, -82.9721, -115.957, 0.67", "40.7319, -84.8693, -117.427, 0.33", "41.2638, -85.2464, -117.686, 0.67", "45.6781, -88.297, -119.786, 0.33", "46.4156, -88.8714, -119.977, 1.33", "48.7015, -90.8766, -119.982, 0.33", "49.0201, -91.172, -119.869, 0.67", "53.1573, -95.1898, -117.461, 0.33", "54.8283, -96.8183, -116.238, 0.67", "59.9609, -101.841, -111.423, 0.33", "60.3584, -102.244, -110.997, 0.67", "64.4444, -106.547, -105.757, 0.33", "64.5975, -106.71, -105.535, 0.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.151522, -50.3755, -31.6557, 0.33", "0.197221, -53.5532, -31.3388, 0.33", "0.363119, -54.6907, -31.2632, 0.67", "0.984718, -58.4218, -31.0745, 0.33", "1.21532, -59.6972, -31.0275, 0.67", "1.47153, -61.2115, -30.984, 0.33", "1.73635, -63.0074, -30.9492, 1.33", "2.16469, -65.9497, -30.938, 0.33", "2.21912, -66.3583, -30.9451, 0.67", "2.39911, -67.8833, -31.0139, 0.33", "2.60036, -69.6179, -31.0882, 1.33", "2.95034, -73.0922, -31.455, 0.33", "3.03987, -73.9875, -31.6059, 0.67", "3.24908, -76.0143, -32.0474, 0.33", "3.38809, -77.0003, -32.3672, 0.67", "3.75698, -79.1314, -33.2332, 0.33", "4.41973, -81.8289, -34.5225, 0.67", "5.30439, -84.7926, -36.2029, 0.33", "5.6852, -85.867, -36.8478, 1.33", "7.38528, -90.0295, -39.4803, 0.33", "7.49762, -90.275, -39.6334, 0.67", "8.39839, -92.0165, -40.6795, 0.33", "9.21847, -93.4082, -41.3861, 2.0", "10.4802, -95.3316, -42.4188, 0.33", "10.6309, -95.5575, -42.5246, 0.67", "11.5728, -97.056, -43.1412, 0.33", "11.7418, -97.3971, -43.2942, 0.67", "12.4941, -99.3496, -44.1864, 0.33", "12.8193, -100.372, -44.626, 0.67", "13.4287, -102.873, -45.5471, 0.33", "13.853, -104.781, -46.1152, 1.33", "14.7075, -109.088, -47.1762, 0.33", "14.8283, -109.651, -47.2788, 0.67", "15.3846, -112.035, -47.5674, 0.33", "16.086, -114.604, -47.699, 1.33", "16.9594, -117.364, -47.6621, 0.33", "17.1584, -117.895, -47.6212, 0.67", "18.2143, -120.361, -47.3434, 0.33", "18.4938, -120.953, -47.305, 0.67", "19.278, -122.456, -47.3054, 0.33", "19.4759, -122.82, -47.3305, 0.67", "21.0179, -125.668, -47.5359, 0.33", "21.6427, -126.792, -47.6278, 1.33", "22.7245, -128.778, -47.8047, 0.33", "23.8799, -131.078, -47.9974, 0.67", "24.7974, -132.938, -48.1571, 0.33", "24.9854, -133.311, -48.1879, 0.67", "25.7496, -134.828, -48.3098, 0.33", "25.9958, -135.333, -48.3515, 0.67", "27.6478, -138.832, -48.6123, 0.33", "28.0294, -139.67, -48.6672, 0.67", "29.8842, -143.789, -48.9104, 0.33", "30.3653, -144.876, -48.9687, 2.0" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "40.5704, -59.4453, -80.7374, 0.33", "42.2209, -59.4526, -82.2385, 0.33", "42.6858, -59.4452, -82.6626, 0.67", "46.6774, -59.3338, -86.3133, 0.33", "47.5975, -59.3509, -86.9734, 1.33", "51.6978, -59.5772, -89.5542, 0.33", "52.4474, -59.6585, -89.9489, 0.67", "58.139, -60.5382, -92.4074, 0.33", "58.9124, -60.7216, -92.7075, 1.33", "65.2399, -62.9168, -94.6122, 0.33", "66.0761, -63.3467, -94.8842, 1.33", "69.0873, -65.5403, -95.8655, 0.33", "69.5689, -65.9922, -96.0664, 1.33", "72.5712, -69.8597, -97.7654, 0.33", "73.1998, -70.7709, -98.3678, 0.67", "74.777, -73.2962, -100.722, 0.33", "74.9698, -73.5554, -101.007, 0.67", "75.9947, -74.7163, -102.41, 0.33", "76.1772, -74.8712, -102.609, 0.67", "79.454, -77.0042, -105.361, 0.33", "80.475, -77.5917, -106.192, 0.67", "81.3525, -78.0527, -106.771, 0.33", "84.3709, -79.5943, -108.719, 1.33", "89.2316, -81.9933, -111.693, 0.33", "89.78, -82.2694, -112.03, 0.67", "93.2219, -84.0558, -114.101, 0.33", "96.2862, -85.8571, -116.235, 0.67" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "40.5704, -59.4453, -80.7374, 0.33", "40.9817, -62.0819, -86.1822, 0.33", "41.0985, -62.5843, -87.2425, 0.67", "42.4003, -66.6227, -95.819, 0.33", "42.5446, -67.0454, -96.7757, 0.67", "43.6476, -70.3283, -104.637, 0.33", "43.7304, -70.6842, -105.628, 0.67", "44.1592, -73.3094, -114.262, 0.33", "44.1859, -73.9434, -116.348, 1.33", "44.1331, -76.6479, -125.473, 0.33", "44.0412, -77.5425, -128.687, 0.67", "43.2478, -80.8855, -142.303, 0.33", "43.0, -81.5085, -145.092, 1.33", "41.9194, -82.7505, -151.454, 0.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "3.58807, -31.132, 12.9203, 0.67", "5.69225, -34.152, 15.918, 0.67", "8.2425, -37.987, 19.3306, 0.67", "10.1906, -40.6544, 21.3029, 0.67", "12.0024, -43.027, 23.0573, 0.67", "12.7977, -44.0803, 23.8028, 0.67", "13.7049, -45.4282, 24.7687, 0.33", "14.8662, -47.3062, 26.0825, 0.67", "16.5927, -49.9707, 28.0358, 0.33", "18.2029, -52.9649, 29.7635, 0.67", "18.7615, -54.2058, 30.4473, 0.33", "20.2529, -57.332, 32.4763, 0.67", "21.7374, -60.7198, 35.2268, 0.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "3.58807, -31.132, 12.9203, 0.67", "9.3848, -32.9621, 15.5418, 0.67", "13.4664, -34.2507, 17.3877, 0.67", "19.5129, -36.1596, 20.1222, 0.67", "23.953, -37.5614, 22.1303, 0.67" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "30.3653, -144.876, -48.9687, 0.33", "32.2146, -148.878, -48.9632, 0.33", "32.3512, -149.168, -48.9437, 0.67", "34.6027, -153.981, -48.4727, 0.33", "35.0279, -154.856, -48.3937, 0.67", "36.3637, -157.548, -48.1663, 0.33", "36.5118, -157.841, -48.1458, 0.67", "37.9056, -160.604, -48.0518, 0.33", "38.3333, -161.528, -48.0981, 1.33", "40.075, -165.46, -48.5824, 0.33", "40.2387, -165.87, -48.6553, 0.67", "41.1622, -168.391, -49.3308, 0.33", "41.5876, -169.695, -49.7679, 0.67", "43.0024, -174.577, -51.7774, 0.33", "43.2296, -175.49, -52.1546, 0.67", "43.5972, -177.347, -52.9106, 0.33", "43.8913, -178.984, -53.5649, 0.67", "44.1815, -180.784, -54.2711, 0.33", "44.3883, -182.055, -54.7354, 0.67", "44.8864, -184.84, -55.5328, 0.33", "45.101, -186.202, -55.9111, 1.33", "45.5576, -188.957, -56.6456, 0.33", "45.5576, -188.957, -56.6456, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "30.3653, -144.876, -48.9687, 0.67", "29.9157, -147.278, -50.1741, 0.67", "29.4853, -148.875, -51.0705, 0.33", "29.3327, -149.478, -51.3799, 0.67", "28.3849, -153.462, -53.3401, 0.33", "28.3199, -153.762, -53.5045, 0.67", "27.3422, -158.666, -56.3248, 0.33", "26.9569, -161.522, -58.1807, 1.33", "26.6894, -164.769, -60.4513, 0.33", "26.6906, -165.168, -60.7298, 0.67", "26.9994, -168.907, -63.2814, 0.33", "27.0595, -169.289, -63.5751, 0.67", "28.3009, -174.292, -67.8046, 0.33", "28.7211, -175.734, -68.9517, 1.33", "29.6291, -178.651, -71.2729, 0.33", "29.9201, -179.522, -71.8992, 1.33", "31.4914, -183.923, -74.696, 0.33", "31.8181, -184.806, -75.2684, 0.67", "32.9031, -187.598, -77.0731, 0.33", "33.1515, -188.219, -77.4896, 1.33", "35.7797, -194.611, -81.865, 0.33", "36.2027, -195.595, -82.5203, 0.67", "38.336, -200.289, -85.3542, 0.33", "38.4617, -200.561, -85.534, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "23.953, -37.5614, 22.1303, 0.67", "26.4424, -39.6815, 20.0697, 0.67", "28.5117, -40.9171, 18.2977, 0.67", "31.1157, -42.2314, 16.1386, 0.67", "35.7436, -44.2598, 12.5962, 0.67", "38.2914, -45.2975, 10.8867, 0.67", "39.7068, -45.8346, 9.99903, 0.67", "46.8853, -48.1965, 5.61127, 0.67", "48.4196, -48.6393, 4.67386, 1.33", "51.9514, -49.6218, 2.50465, 0.67", "56.1657, -50.9717, 0.026944, 0.67", "58.3124, -51.7399, -1.23926, 1.33", "61.0677, -52.9894, -2.90062, 0.33", "63.5294, -54.3585, -4.39992, 0.67", "65.3518, -55.4842, -5.6401, 0.33", "66.8977, -56.6031, -6.89259, 0.67", "67.9281, -57.4564, -7.87794, 0.33", "69.0887, -58.473, -8.86983, 0.67", "73.1722, -61.6378, -11.4916, 0.67" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "23.953, -37.5614, 22.1303, 0.67", "27.1228, -39.1044, 24.4799, 0.67", "29.8992, -40.4559, 26.538, 0.67", "32.3312, -41.6398, 28.3407, 0.67", "34.8612, -42.8714, 30.2162, 0.33" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_37", "dend_32", "dend_25", "dend_0", "dend_39", "dend_38", "dend_36", "dend_33", "dend_29", "dend_26", "dend_6", "dend_1", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_16", "dend_7", "dend_3", "dend_2", "dend_18", "dend_17", "dend_11", "dend_8", "dend_5", "dend_4", "dend_24", "dend_19", "dend_15", "dend_12", "dend_10", "dend_9", "dend_23", "dend_20", "dend_14", "dend_13", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_37", "dend_32", "dend_25", "dend_0", "dend_39", "dend_38", "dend_36", "dend_33", "dend_29", "dend_26", "dend_6", "dend_1", "dend_35", "dend_34", "dend_31", "dend_30", "dend_28", "dend_27", "dend_16", "dend_7", "dend_3", "dend_2", "dend_18", "dend_17", "dend_11", "dend_8", "dend_5", "dend_4", "dend_24", "dend_19", "dend_15", "dend_12", "dend_10", "dend_9", "dend_23", "dend_20", "dend_14", "dend_13", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_6", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L4_BTC_d656c19ac5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_16, id: dend_16, parent: dend_6
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_40(0), soma_0(0.4500008757444842)
    connect dend_37(0), soma_0(0.4500008757444842)
    connect dend_32(0), soma_0(0.4500008757444842)
    connect dend_25(0), soma_0(0.4500008757444842)
    connect dend_0(0), soma_0(0.4500008757444842)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_16(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.10901, 8.17427, -3.38986, 2.59058 ) }
    soma_0 { pt3dadd( -1.02513, 7.19062, -3.06257, 4.73751 ) }
    soma_0 { pt3dadd( -0.941247, 6.20697, -2.73528, 6.32924 ) }
    soma_0 { pt3dadd( -0.857366, 5.22332, -2.408, 7.36132 ) }
    soma_0 { pt3dadd( -0.773484, 4.23967, -2.08071, 9.22299 ) }
    soma_0 { pt3dadd( -0.689602, 3.25602, -1.75342, 10.2547 ) }
    soma_0 { pt3dadd( -0.605721, 2.27237, -1.42613, 10.8399 ) }
    soma_0 { pt3dadd( -0.521839, 1.28871, -1.09885, 11.0364 ) }
    soma_0 { pt3dadd( -0.437957, 0.305064, -0.771561, 11.233 ) }
    soma_0 { pt3dadd( -0.354076, -0.678586, -0.444273, 11.4012 ) }
    soma_0 { pt3dadd( -0.270194, -1.66224, -0.116986, 10.7587 ) }
    soma_0 { pt3dadd( -0.186312, -2.64589, 0.210301, 10.0838 ) }
    soma_0 { pt3dadd( -0.102431, -3.62954, 0.537588, 9.4089 ) }
    soma_0 { pt3dadd( -0.018549, -4.61319, 0.864875, 8.86981 ) }
    soma_0 { pt3dadd( 0.0653327, -5.59684, 1.19216, 8.72262 ) }
    soma_0 { pt3dadd( 0.149214, -6.58049, 1.51945, 8.42438 ) }
    soma_0 { pt3dadd( 0.233096, -7.56414, 1.84674, 7.90042 ) }
    soma_0 { pt3dadd( 0.316978, -8.54779, 2.17402, 7.02226 ) }
    soma_0 { pt3dadd( 0.400859, -9.53144, 2.50131, 6.10711 ) }
    soma_0 { pt3dadd( 0.484741, -10.5151, 2.8286, 5.19196 ) }
    soma_0 { pt3dadd( 0.568623, -11.4987, 3.15589, 3.05014 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.40148, -1.66302, -9.60359, 0.67 ) }
    dend_40 { pt3dadd( -7.05935, -2.04278, -12.238, 0.67 ) }
    dend_40 { pt3dadd( -9.77947, -2.31889, -14.6673, 0.67 ) }
    dend_40 { pt3dadd( -9.77947, -2.31889, -14.6673, 0.67 ) }
    dend_40 { pt3dadd( -11.1987, -2.45489, -15.5728, 1.33 ) }
    dend_40 { pt3dadd( -17.1882, -2.72605, -19.5191, 0.33 ) }
    dend_40 { pt3dadd( -18.1001, -2.78851, -20.2741, 0.33 ) }
    dend_40 { pt3dadd( -19.953, -2.91805, -22.1793, 1.33 ) }
    dend_40 { pt3dadd( -21.8123, -3.13687, -24.4248, 0.33 ) }
    dend_40 { pt3dadd( -22.4186, -3.24586, -25.2086, 1.33 ) }
    dend_40 { pt3dadd( -26.4285, -4.23209, -30.9942, 0.67 ) }
    dend_40 { pt3dadd( -31.0805, -5.72215, -38.3429, 0.33 ) }
    dend_40 { pt3dadd( -33.014, -6.38781, -41.6437, 0.67 ) }
    dend_40 { pt3dadd( -35.743, -7.41943, -46.534, 0.33 ) }
    dend_40 { pt3dadd( -36.2974, -7.64262, -47.5531, 0.67 ) }
    dend_40 { pt3dadd( -38.8093, -8.72281, -52.0271, 0.33 ) }
    dend_40 { pt3dadd( -39.9568, -9.24243, -53.9274, 1.33 ) }
    dend_40 { pt3dadd( -42.2656, -10.138, -57.2542, 0.33 ) }
    dend_40 { pt3dadd( -43.5218, -10.5807, -59.002, 1.33 ) }
    dend_40 { pt3dadd( -47.6944, -12.0156, -64.552, 0.33 ) }
    dend_40 { pt3dadd( -48.1406, -12.1676, -65.122, 0.67 ) }
    dend_40 { pt3dadd( -50.4307, -12.9734, -67.8003, 0.33 ) }
    dend_40 { pt3dadd( -50.8872, -13.1397, -68.3707, 1.33 ) }
    dend_40 { pt3dadd( -54.4183, -14.5965, -73.2354, 0.33 ) }
    dend_40 { pt3dadd( -55.4653, -15.0541, -74.7918, 0.67 ) }
    dend_40 { pt3dadd( -56.3652, -15.4129, -76.1448, 0.33 ) }
    dend_40 { pt3dadd( -57.0723, -15.6607, -77.2168, 1.33 ) }
    dend_40 { pt3dadd( -60.2437, -16.5551, -81.9375, 0.33 ) }
    dend_40 { pt3dadd( -60.5817, -16.6402, -82.4398, 0.33 ) }
    dend_40 { pt3dadd( -61.7866, -16.9332, -84.2841, 1.33 ) }
    dend_40 { pt3dadd( -64.6084, -17.6726, -88.953, 0.33 ) }
    dend_40 { pt3dadd( -65.0656, -17.8372, -89.8223, 1.33 ) }
    dend_40 { pt3dadd( -67.6215, -19.0157, -95.0509, 0.33 ) }
    dend_40 { pt3dadd( -67.922, -19.1893, -95.6928, 0.67 ) }
    dend_40 { pt3dadd( -70.2227, -20.7684, -100.994, 0.33 ) }
    dend_40 { pt3dadd( -70.7262, -21.1893, -102.28, 1.33 ) }
    dend_40 { pt3dadd( -72.7032, -23.1429, -108.062, 0.33 ) }
    dend_40 { pt3dadd( -72.8966, -23.3491, -108.655, 1.33 ) }
    dend_40 { pt3dadd( -73.9935, -24.5747, -112.24, 0.33 ) }
    dend_40 { pt3dadd( -74.4184, -24.993, -113.541, 0.67 ) }
    dend_40 { pt3dadd( -76.3219, -26.7814, -119.225, 0.33 ) }
    dend_40 { pt3dadd( -77.8169, -28.0279, -123.446, 0.67 ) }
    dend_40 { pt3dadd( -78.4384, -28.4556, -125.071, 0.33 ) }
    dend_40 { pt3dadd( -79.6199, -29.2411, -128.234, 0.67 ) }
    dend_40 { pt3dadd( -81.4316, -30.4661, -133.325, 0.33 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -2.84148, 4.10348, -11.1036, 0.67 ) }
    dend_37 { pt3dadd( -3.12174, 4.76645, -12.1943, 0.67 ) }
    dend_37 { pt3dadd( -3.6809, 6.42323, -14.2568, 0.67 ) }
    dend_37 { pt3dadd( -4.61633, 8.7803, -17.1857, 0.67 ) }
    dend_37 { pt3dadd( -5.34108, 10.6065, -19.4549, 0.67 ) }
    dend_37 { pt3dadd( -5.64882, 11.3819, -20.4185, 0.67 ) }
    dend_37 { pt3dadd( -6.04436, 12.3786, -21.6569, 0.67 ) }
    dend_37 { pt3dadd( -6.97093, 15.4158, -25.2647, 0.67 ) }
    dend_37 { pt3dadd( -7.6378, 18.3164, -28.3768, 1.33 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 75/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.21148, 5.32898, -10.3036, 0.67 ) }
    dend_32 { pt3dadd( -0.841084, 7.51152, -11.842, 0.67 ) }
    dend_32 { pt3dadd( -0.407327, 8.22766, -12.3317, 0.67 ) }
    dend_32 { pt3dadd( 0.324713, 9.43628, -13.1581, 1.33 ) }
    dend_32 { pt3dadd( 2.99327, 13.8421, -16.1708, 0.67 ) }
    dend_32 { pt3dadd( 4.25448, 15.9243, -17.5947, 0.67 ) }
    dend_32 { pt3dadd( 4.92853, 17.0372, -18.3556, 0.67 ) }
    dend_32 { pt3dadd( 5.73843, 18.4826, -19.4937, 1.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 83/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 4.30852, 5.51898, 7.4864, 2.0 ) }
    dend_25 { pt3dadd( 4.64398, 5.76015, 7.66774, 2.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 85/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.571479, -11.0775, 6.4864, 4.0 ) }
    dend_0 { pt3dadd( -0.628802, -13.1265, 6.4864, 4.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 87/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.568623, -11.4987, 3.15589, 0.469314 ) }
    axon_0 { pt3dadd( 1.84314, -26.4445, 3.15589, 0.469314 ) }
    axon_0 { pt3dadd( 3.11765, -41.3902, 3.15589, 0.469314 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 90/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -7.6378, 18.3164, -28.3768, 0.33 ) }
    dend_39 { pt3dadd( -7.34187, 21.4587, -38.5866, 0.33 ) }
    dend_39 { pt3dadd( -7.31421, 21.7571, -39.4337, 1.33 ) }
    dend_39 { pt3dadd( -7.091, 23.7852, -44.7533, 0.33 ) }
    dend_39 { pt3dadd( -7.068, 24.1543, -45.5838, 1.33 ) }
    dend_39 { pt3dadd( -6.99156, 26.2696, -49.8715, 0.33 ) }
    dend_39 { pt3dadd( -6.99394, 26.5338, -50.3599, 0.67 ) }
    dend_39 { pt3dadd( -7.21383, 28.5861, -53.3385, 0.33 ) }
    dend_39 { pt3dadd( -7.26689, 28.9055, -53.7857, 1.33 ) }
    dend_39 { pt3dadd( -7.61408, 30.8074, -56.2616, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( -7.97012, 32.7934, -58.8286, 1.33 ) }
    dend_39 { pt3dadd( -8.48441, 35.5633, -62.307, 0.33 ) }
    dend_39 { pt3dadd( -8.91262, 37.8691, -65.2693, 1.33 ) }
    dend_39 { pt3dadd( -9.42457, 40.5993, -68.7759, 0.33 ) }
    dend_39 { pt3dadd( -9.50421, 41.084, -69.3819, 1.33 ) }
    dend_39 { pt3dadd( -9.7026, 42.7568, -71.4276, 0.33 ) }
    dend_39 { pt3dadd( -9.78695, 43.5335, -72.3117, 0.67 ) }
    dend_39 { pt3dadd( -10.0919, 47.6902, -77.1975, 0.33 ) }
    dend_39 { pt3dadd( -10.1169, 48.2646, -77.8532, 1.33 ) }
    dend_39 { pt3dadd( -10.1493, 49.7789, -79.6511, 0.33 ) }
    dend_39 { pt3dadd( -10.1587, 50.1229, -80.0809, 1.33 ) }
    dend_39 { pt3dadd( -10.292, 53.7795, -85.2779, 0.33 ) }
    dend_39 { pt3dadd( -10.3999, 55.8565, -88.4505, 1.33 ) }
    dend_39 { pt3dadd( -10.4883, 57.2942, -90.7764, 0.33 ) }
    dend_39 { pt3dadd( -10.6066, 58.4754, -92.8975, 0.67 ) }
    dend_39 { pt3dadd( -10.8861, 60.5066, -96.7598, 0.33 ) }
    dend_39 { pt3dadd( -11.4336, 63.5342, -102.219, 0.67 ) }
    dend_39 { pt3dadd( -11.9316, 65.8804, -106.214, 0.33 ) }
    dend_39 { pt3dadd( -12.3423, 67.0535, -108.142, 0.67 ) }
    dend_39 { pt3dadd( -14.8179, 72.2103, -116.573, 0.33 ) }
    dend_39 { pt3dadd( -14.9861, 72.4809, -117.006, 0.67 ) }
    dend_39 { pt3dadd( -16.7159, 74.7159, -120.425, 0.33 ) }
    dend_39 { pt3dadd( -17.1164, 75.1711, -121.109, 0.67 ) }
    dend_39 { pt3dadd( -20.0239, 78.2953, -126.286, 0.33 ) }
    dend_39 { pt3dadd( -20.54, 78.9665, -127.417, 0.67 ) }
    dend_39 { pt3dadd( -21.933, 81.1586, -131.287, 0.33 ) }
    dend_39 { pt3dadd( -22.0862, 81.5882, -132.073, 0.67 ) }
    dend_39 { pt3dadd( -22.1194, 84.3985, -137.765, 0.33 ) }
    dend_39 { pt3dadd( -21.6657, 86.3065, -141.169, 0.67 ) }
    dend_39 { pt3dadd( -20.2037, 89.3208, -145.884, 0.33 ) }
    dend_39 { pt3dadd( -20.0893, 89.5222, -146.188, 0.67 ) }
    dend_39 { pt3dadd( -18.1506, 92.4959, -150.205, 0.33 ) }
    dend_39 { pt3dadd( -15.9052, 95.6867, -154.277, 1.33 ) }
    dend_39 { pt3dadd( -12.2929, 100.5, -159.051, 0.33 ) }
    dend_39 { pt3dadd( -12.0971, 100.764, -159.262, 0.67 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 35/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -7.6378, 18.3164, -28.3768, 0.33 ) }
    dend_38 { pt3dadd( -9.8597, 17.1693, -32.1556, 0.33 ) }
    dend_38 { pt3dadd( -10.8312, 16.7994, -33.4136, 1.33 ) }
    dend_38 { pt3dadd( -14.4414, 15.6115, -37.4905, 0.33 ) }
    dend_38 { pt3dadd( -15.312, 15.38, -38.4857, 0.67 ) }
    dend_38 { pt3dadd( -17.8465, 14.8234, -41.3553, 0.33 ) }
    dend_38 { pt3dadd( -20.3542, 14.3726, -44.203, 1.33 ) }
    dend_38 { pt3dadd( -25.0573, 13.8691, -48.9964, 0.33 ) }
    dend_38 { pt3dadd( -25.9373, 13.8473, -49.9108, 1.33 ) }
    dend_38 { pt3dadd( -29.3103, 14.0417, -53.2229, 0.33 ) }
    dend_38 { pt3dadd( -29.9175, 14.1245, -53.8659, 0.67 ) }
    dend_38 { pt3dadd( -32.3093, 14.6288, -56.5163, 0.33 ) }
    dend_38 { pt3dadd( -33.1753, 14.8395, -57.4666, 0.67 ) }
    dend_38 { pt3dadd( -35.9097, 15.5658, -60.2209, 0.33 ) }
    dend_38 { pt3dadd( -36.829, 15.8249, -61.1288, 1.33 ) }
    dend_38 { pt3dadd( -40.3798, 16.8425, -64.4514, 0.33 ) }
    dend_38 { pt3dadd( -41.6936, 17.2652, -65.7116, 1.33 ) }
    dend_38 { pt3dadd( -47.439, 19.3381, -71.2026, 0.33 ) }
    dend_38 { pt3dadd( -48.6806, 19.8236, -72.4364, 1.33 ) }
    dend_38 { pt3dadd( -51.6165, 21.0454, -75.3417, 0.33 ) }
    dend_38 { pt3dadd( -51.913, 21.1929, -75.6479, 0.67 ) }
    dend_38 { pt3dadd( -54.768, 22.8222, -78.6184, 0.33 ) }
    dend_38 { pt3dadd( -55.3262, 23.1741, -79.2097, 0.67 ) }
    dend_38 { pt3dadd( -57.5311, 24.7098, -81.4655, 0.33 ) }
    dend_38 { pt3dadd( -58.142, 25.1117, -82.0394, 2.0 ) }
    dend_38 { pt3dadd( -65.0602, 29.4141, -88.2081, 0.33 ) }
    dend_38 { pt3dadd( -65.5418, 29.6916, -88.6259, 0.67 ) }
    dend_38 { pt3dadd( -67.5396, 30.76, -90.2509, 0.33 ) }
    dend_38 { pt3dadd( -68.0527, 31.0159, -90.6512, 0.67 ) }
    dend_38 { pt3dadd( -69.4943, 31.7162, -91.8609, 0.33 ) }
    dend_38 { pt3dadd( -71.0022, 32.4431, -93.1405, 0.67 ) }
    dend_38 { pt3dadd( -75.1224, 34.3607, -96.5902, 0.33 ) }
    dend_38 { pt3dadd( -76.2597, 34.9159, -97.5377, 0.67 ) }
    dend_38 { pt3dadd( -80.6818, 37.2056, -101.243, 0.33 ) }
    dend_38 { pt3dadd( -84.3621, 39.2932, -104.43, 1.33 ) }
    dend_38 { pt3dadd( -86.5477, 40.636, -106.338, 0.33 ) }
    dend_38 { pt3dadd( -86.9632, 40.9112, -106.715, 0.67 ) }
    dend_38 { pt3dadd( -88.2365, 41.7656, -108.012, 0.33 ) }
    dend_38 { pt3dadd( -88.2975, 41.8044, -108.072, 0.67 ) }
    dend_38 { pt3dadd( -91.4617, 43.203, -110.894, 0.33 ) }
    dend_38 { pt3dadd( -92.2376, 43.4065, -111.491, 1.33 ) }
    dend_38 { pt3dadd( -95.1673, 43.92, -114.434, 0.33 ) }
    dend_38 { pt3dadd( -96.6758, 44.1241, -115.989, 0.33 ) }
    dend_38 { pt3dadd( -99.8946, 44.3332, -119.381, 0.67 ) }
    dend_38 { pt3dadd( -104.368, 44.3744, -123.978, 0.33 ) }
    dend_38 { pt3dadd( -105.053, 44.2986, -124.636, 0.67 ) }
    dend_38 { pt3dadd( -109.376, 43.7091, -129.001, 0.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 82/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 5.73843, 18.4826, -19.4937, 0.33 ) }
    dend_36 { pt3dadd( 9.04429, 20.3366, -20.8988, 0.33 ) }
    dend_36 { pt3dadd( 10.6226, 21.2694, -21.5404, 0.67 ) }
    dend_36 { pt3dadd( 12.7764, 22.588, -22.3994, 0.33 ) }
    dend_36 { pt3dadd( 13.0651, 22.7708, -22.5555, 0.67 ) }
    dend_36 { pt3dadd( 15.0475, 24.079, -23.6902, 0.33 ) }
    dend_36 { pt3dadd( 16.8425, 25.1772, -24.584, 1.33 ) }
    dend_36 { pt3dadd( 20.2608, 27.1678, -25.9381, 0.33 ) }
    dend_36 { pt3dadd( 20.5664, 27.344, -26.0722, 0.67 ) }
    dend_36 { pt3dadd( 26.8495, 31.0461, -28.8164, 0.33 ) }
    dend_36 { pt3dadd( 28.42, 31.9939, -29.4815, 2.0 ) }
    dend_36 { pt3dadd( 34.163, 35.5241, -31.833, 0.33 ) }
    dend_36 { pt3dadd( 36.9374, 37.2691, -32.9707, 2.0 ) }
    dend_36 { pt3dadd( 45.1904, 42.6714, -36.4453, 0.33 ) }
    dend_36 { pt3dadd( 46.9013, 43.8363, -37.2273, 1.33 ) }
    dend_36 { pt3dadd( 49.5119, 45.6963, -38.4943, 0.33 ) }
    dend_36 { pt3dadd( 50.2562, 46.2321, -38.9533, 0.67 ) }
    dend_36 { pt3dadd( 53.5035, 48.6728, -41.4982, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( 54.7361, 49.5057, -42.6511, 0.67 ) }
    dend_36 { pt3dadd( 58.148, 51.4477, -46.1122, 0.33 ) }
    dend_36 { pt3dadd( 59.0593, 51.8663, -47.0389, 1.33 ) }
    dend_36 { pt3dadd( 62.5131, 53.1366, -50.4461, 0.33 ) }
    dend_36 { pt3dadd( 63.4674, 53.3969, -51.3484, 1.33 ) }
    dend_36 { pt3dadd( 67.8726, 54.1965, -55.2161, 0.33 ) }
    dend_36 { pt3dadd( 68.152, 54.2279, -55.4386, 0.67 ) }
    dend_36 { pt3dadd( 71.4241, 54.4311, -57.7828, 0.33 ) }
    dend_36 { pt3dadd( 73.0954, 54.4823, -58.873, 1.33 ) }
    dend_36 { pt3dadd( 76.9469, 54.4822, -61.0124, 0.33 ) }
    dend_36 { pt3dadd( 77.8526, 54.4668, -61.548, 0.67 ) }
    dend_36 { pt3dadd( 81.8276, 54.3786, -63.8875, 0.33 ) }
    dend_36 { pt3dadd( 83.6041, 54.3485, -65.1025, 1.33 ) }
    dend_36 { pt3dadd( 86.6354, 54.3292, -67.4048, 0.33 ) }
    dend_36 { pt3dadd( 87.9732, 54.366, -68.5268, 1.33 ) }
    dend_36 { pt3dadd( 94.0592, 54.6936, -73.881, 0.33 ) }
    dend_36 { pt3dadd( 94.8508, 54.738, -74.5723, 1.33 ) }
    dend_36 { pt3dadd( 99.2398, 54.9936, -78.4227, 0.33 ) }
    dend_36 { pt3dadd( 100.255, 55.0398, -79.2783, 0.67 ) }
    dend_36 { pt3dadd( 105.334, 55.2118, -83.7019, 0.33 ) }
    dend_36 { pt3dadd( 106.208, 55.2098, -84.4574, 1.33 ) }
    dend_36 { pt3dadd( 111.328, 54.8977, -88.4791, 0.33 ) }
    dend_36 { pt3dadd( 112.16, 54.8131, -89.0926, 0.67 ) }
    dend_36 { pt3dadd( 113.716, 54.5975, -90.1185, 0.33 ) }
    dend_36 { pt3dadd( 116.847, 54.0766, -91.9358, 0.67 ) }
    dend_36 { pt3dadd( 119.007, 53.6929, -92.9439, 0.33 ) }
    dend_36 { pt3dadd( 119.665, 53.5943, -93.2507, 0.67 ) }
    dend_36 { pt3dadd( 123.253, 53.1404, -94.6853, 0.33 ) }
    dend_36 { pt3dadd( 123.597, 53.1199, -94.8368, 0.67 ) }
    dend_36 { pt3dadd( 128.046, 53.0984, -96.8935, 0.33 ) }
    dend_36 { pt3dadd( 129.117, 53.1249, -97.3619, 0.67 ) }
    dend_36 { pt3dadd( 130.715, 53.2364, -98.1747, 0.33 ) }
    dend_36 { pt3dadd( 133.506, 53.3928, -99.7523, 0.67 ) }
    dend_36 { pt3dadd( 139.962, 53.7219, -103.794, 0.33 ) }
    dend_36 { pt3dadd( 141.036, 53.7619, -104.547, 0.67 ) }
    dend_36 { pt3dadd( 143.409, 53.8666, -106.367, 0.33 ) }
    dend_36 { pt3dadd( 145.062, 53.9218, -107.723, 1.33 ) }
    dend_36 { pt3dadd( 148.488, 53.9771, -110.609, 0.33 ) }
    dend_36 { pt3dadd( 148.884, 53.9811, -110.965, 0.67 ) }
    dend_36 { pt3dadd( 153.619, 53.8243, -114.948, 0.33 ) }
    dend_36 { pt3dadd( 154.405, 53.7587, -115.646, 1.33 ) }
    dend_36 { pt3dadd( 157.255, 53.4289, -118.373, 0.33 ) }
    dend_36 { pt3dadd( 157.762, 53.3134, -118.89, 0.67 ) }
    dend_36 { pt3dadd( 159.861, 52.5837, -121.249, 0.33 ) }
    dend_36 { pt3dadd( 160.765, 52.0508, -122.095, 0.67 ) }
    dend_36 { pt3dadd( 163.288, 49.8935, -123.883, 0.33 ) }
    dend_36 { pt3dadd( 163.288, 49.8935, -123.883, 1.33 ) }
    dend_36 { pt3dadd( 166.273, 46.4446, -124.956, 0.33 ) }
    dend_36 { pt3dadd( 166.907, 45.7038, -125.12, 1.33 ) }
    dend_36 { pt3dadd( 171.289, 40.5998, -125.786, 0.33 ) }
    dend_36 { pt3dadd( 171.527, 40.3376, -125.81, 0.67 ) }
    dend_36 { pt3dadd( 173.986, 38.0105, -125.93, 0.33 ) }
    dend_36 { pt3dadd( 174.386, 37.6815, -125.947, 0.67 ) }
    dend_36 { pt3dadd( 177.531, 35.7001, -126.061, 0.33 ) }
    dend_36 { pt3dadd( 179.777, 34.5806, -126.264, 0.33 ) }
    dend_36 { pt3dadd( 180.453, 34.3444, -126.434, 0.67 ) }
    dend_36 { pt3dadd( 185.62, 32.9391, -128.064, 0.33 ) }
    dend_36 { pt3dadd( 185.984, 32.9101, -128.178, 0.67 ) }
    dend_36 { pt3dadd( 190.039, 33.1008, -129.447, 0.33 ) }
    dend_36 { pt3dadd( 191.002, 33.3207, -129.741, 0.67 ) }
    dend_36 { pt3dadd( 196.714, 35.3976, -131.454, 0.33 ) }
    dend_36 { pt3dadd( 197.703, 35.839, -131.756, 1.33 ) }
    dend_36 { pt3dadd( 204.235, 39.7048, -133.787, 0.33 ) }
    dend_36 { pt3dadd( 205.171, 40.3195, -134.06, 1.33 ) }
    dend_36 { pt3dadd( 207.824, 42.4068, -134.705, 0.33 ) }
    dend_36 { pt3dadd( 208.146, 42.6742, -134.742, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 66/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 5.73843, 18.4826, -19.4937, 0.33 ) }
    dend_33 { pt3dadd( 8.14505, 23.3219, -28.0935, 0.33 ) }
    dend_33 { pt3dadd( 8.5464, 24.1429, -29.4626, 0.67 ) }
    dend_33 { pt3dadd( 9.80118, 27.6306, -35.0993, 0.33 ) }
    dend_33 { pt3dadd( 10.3634, 29.6175, -38.154, 0.33 ) }
    dend_33 { pt3dadd( 10.4483, 30.316, -39.1909, 0.67 ) }
    dend_33 { pt3dadd( 10.5162, 32.8101, -42.698, 0.33 ) }
    dend_33 { pt3dadd( 10.3655, 33.9705, -44.0166, 0.67 ) }
    dend_33 { pt3dadd( 9.76272, 36.4585, -46.8749, 0.33 ) }
    dend_33 { pt3dadd( 9.49885, 37.2191, -47.7646, 1.33 ) }
    dend_33 { pt3dadd( 7.94172, 41.0138, -52.4058, 0.33 ) }
    dend_33 { pt3dadd( 7.59618, 41.9132, -53.6243, 1.33 ) }
    dend_33 { pt3dadd( 6.30572, 45.6793, -59.02, 0.33 ) }
    dend_33 { pt3dadd( 5.67, 47.8688, -62.2271, 2.0 ) }
    dend_33 { pt3dadd( 4.88039, 51.3647, -67.4883, 0.33 ) }
    dend_33 { pt3dadd( 4.7846, 51.833, -68.2276, 0.67 ) }
    dend_33 { pt3dadd( 4.12719, 56.6191, -76.1761, 0.33 ) }
    dend_33 { pt3dadd( 3.95954, 57.9599, -78.5889, 2.0 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 84/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 4.64398, 5.76015, 7.66774, 0.67 ) }
    dend_29 { pt3dadd( 6.6175, 7.08007, 7.58689, 0.67 ) }
    dend_29 { pt3dadd( 7.58596, 7.72779, 7.54722, 0.33 ) }
    dend_29 { pt3dadd( 9.78688, 9.1998, 7.45708, 1.33 ) }
    dend_29 { pt3dadd( 14.2522, 12.1862, 7.27417, 0.67 ) }
    dend_29 { pt3dadd( 18.8421, 15.256, 7.08615, 0.67 ) }
    dend_29 { pt3dadd( 20.2594, 16.2039, 7.0281, 1.33 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 4.64398, 5.76015, 7.66774, 0.67 ) }
    dend_26 { pt3dadd( 4.76652, 6.91121, 8.34976, 0.67 ) }
    dend_26 { pt3dadd( 4.881, 7.98658, 8.98695, 0.67 ) }
    dend_26 { pt3dadd( 4.99187, 9.02798, 9.604, 0.67 ) }
    dend_26 { pt3dadd( 5.2186, 11.1577, 10.8659, 0.67 ) }
    dend_26 { pt3dadd( 5.33046, 12.2084, 11.4885, 1.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 97/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.628802, -13.1265, 6.4864, 3.33 ) }
    dend_6 { pt3dadd( 0.274197, -15.6322, 5.88693, 3.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.628802, -13.1265, 6.4864, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -4.68442, -19.1186, 7.29458, 1.33 ) }
    dend_1 { pt3dadd( -7.05745, -22.6247, 7.76746, 1.33 ) }
    dend_1 { pt3dadd( -7.67925, -23.5434, 7.89136, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 3/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.11765, -41.3902, 3.15589, 0.67 ) }
    axon_1 { pt3dadd( 4.39217, -56.336, 3.15589, 0.67 ) }
    axon_1 { pt3dadd( 5.66668, -71.2817, 3.15589, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 3.95954, 57.9599, -78.5889, 0.33 ) }
    dend_35 { pt3dadd( 4.9481, 59.8643, -79.1832, 0.33 ) }
    dend_35 { pt3dadd( 5.28342, 60.3478, -79.4477, 0.67 ) }
    dend_35 { pt3dadd( 6.70413, 62.2097, -80.5994, 0.33 ) }
    dend_35 { pt3dadd( 7.11449, 62.6398, -80.8677, 0.67 ) }
    dend_35 { pt3dadd( 9.11415, 64.5956, -82.084, 0.33 ) }
    dend_35 { pt3dadd( 9.30647, 64.7706, -82.1908, 0.67 ) }
    dend_35 { pt3dadd( 12.8099, 67.7326, -84.1779, 0.33 ) }
    dend_35 { pt3dadd( 13.2629, 68.0692, -84.4997, 1.33 ) }
    dend_35 { pt3dadd( 16.2927, 70.084, -86.8804, 0.33 ) }
    dend_35 { pt3dadd( 16.4854, 70.2073, -87.0498, 0.67 ) }
    dend_35 { pt3dadd( 17.8677, 71.0737, -88.3191, 0.33 ) }
    dend_35 { pt3dadd( 18.6241, 71.5731, -89.0598, 0.67 ) }
    dend_35 { pt3dadd( 22.99, 74.711, -93.7412, 0.33 ) }
    dend_35 { pt3dadd( 23.5225, 75.1134, -94.3869, 0.67 ) }
    dend_35 { pt3dadd( 26.1445, 77.2385, -98.1195, 0.33 ) }
    dend_35 { pt3dadd( 26.754, 77.7025, -99.0123, 1.33 ) }
    dend_35 { pt3dadd( 27.372, 78.1531, -99.9913, 0.33 ) }
    dend_35 { pt3dadd( 27.6686, 78.3403, -100.508, 0.67 ) }
    dend_35 { pt3dadd( 29.8627, 79.5318, -104.394, 0.33 ) }
    dend_35 { pt3dadd( 30.8749, 79.9646, -106.218, 0.67 ) }
    dend_35 { pt3dadd( 33.5029, 80.9027, -110.963, 0.33 ) }
    dend_35 { pt3dadd( 34.608, 81.2187, -112.948, 1.33 ) }
    dend_35 { pt3dadd( 38.0263, 82.0221, -119.059, 0.33 ) }
    dend_35 { pt3dadd( 39.2456, 82.257, -121.204, 1.33 ) }
    dend_35 { pt3dadd( 43.0122, 82.7958, -127.538, 0.33 ) }
    dend_35 { pt3dadd( 43.4856, 82.8468, -128.346, 0.67 ) }
    dend_35 { pt3dadd( 44.52, 82.9333, -130.335, 0.33 ) }
    dend_35 { pt3dadd( 45.154, 82.9405, -131.772, 0.67 ) }
    dend_35 { pt3dadd( 46.2855, 82.8678, -134.529, 0.33 ) }
    dend_35 { pt3dadd( 46.5858, 82.8315, -135.378, 0.67 ) }
    dend_35 { pt3dadd( 47.7865, 82.5191, -139.836, 0.33 ) }
    dend_35 { pt3dadd( 48.5286, 82.2842, -142.967, 0.67 ) }
    dend_35 { pt3dadd( 49.447, 82.0234, -147.643, 0.33 ) }
    dend_35 { pt3dadd( 50.237, 81.6251, -152.875, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 41/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 3.95954, 57.9599, -78.5889, 0.33 ) }
    dend_34 { pt3dadd( 1.12798, 61.3346, -81.4423, 0.33 ) }
    dend_34 { pt3dadd( 0.348652, 62.2972, -82.2995, 0.67 ) }
    dend_34 { pt3dadd( -2.48404, 65.8946, -86.2296, 0.33 ) }
    dend_34 { pt3dadd( -3.27116, 67.0698, -87.5904, 0.67 ) }
    dend_34 { pt3dadd( -5.85365, 71.1883, -92.434, 0.33 ) }
    dend_34 { pt3dadd( -6.46012, 72.2279, -93.6469, 0.67 ) }
    dend_34 { pt3dadd( -8.23829, 75.5118, -97.719, 0.33 ) }
    dend_34 { pt3dadd( -10.2436, 79.8287, -102.969, 1.33 ) }
    dend_34 { pt3dadd( -11.8445, 84.0006, -107.841, 0.33 ) }
    dend_34 { pt3dadd( -11.9438, 84.281, -108.187, 1.33 ) }
    dend_34 { pt3dadd( -13.1644, 88.0871, -112.76, 0.33 ) }
    dend_34 { pt3dadd( -13.3615, 88.7607, -113.547, 1.33 ) }
    dend_34 { pt3dadd( -13.8034, 90.3826, -115.467, 0.33 ) }
    dend_34 { pt3dadd( -13.8686, 90.7163, -115.82, 0.67 ) }
    dend_34 { pt3dadd( -15.1277, 98.6539, -124.036, 0.33 ) }
    dend_34 { pt3dadd( -15.3111, 100.019, -125.469, 0.67 ) }
    dend_34 { pt3dadd( -15.5498, 102.073, -127.65, 0.33 ) }
    dend_34 { pt3dadd( -16.1533, 107.141, -132.895, 1.33 ) }
    dend_34 { pt3dadd( -17.013, 114.202, -140.111, 0.33 ) }
    dend_34 { pt3dadd( -17.0767, 114.928, -140.864, 0.67 ) }
    dend_34 { pt3dadd( -17.2533, 120.507, -146.573, 0.33 ) }
    dend_34 { pt3dadd( -17.2533, 120.507, -146.573, 0.67 ) }
    dend_34 { pt3dadd( -17.4463, 126.082, -152.78, 0.33 ) }
    dend_34 { pt3dadd( -17.5107, 127.7, -154.488, 1.33 ) }
    dend_34 { pt3dadd( -17.8156, 132.49, -159.651, 0.33 ) }
    dend_34 { pt3dadd( -17.8559, 133.231, -160.384, 0.67 ) }
    dend_34 { pt3dadd( -18.052, 138.836, -165.264, 0.33 ) }
    dend_34 { pt3dadd( -18.1004, 139.866, -166.08, 0.67 ) }
    dend_34 { pt3dadd( -18.4108, 144.806, -169.544, 0.33 ) }
    dend_34 { pt3dadd( -18.5051, 145.923, -170.237, 1.33 ) }
    dend_34 { pt3dadd( -18.8225, 148.675, -171.663, 0.33 ) }
    dend_34 { pt3dadd( -18.9505, 149.608, -172.125, 0.67 ) }
    dend_34 { pt3dadd( -19.8114, 155.388, -174.62, 0.33 ) }
    dend_34 { pt3dadd( -20.1692, 157.959, -175.751, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 76/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 20.2594, 16.2039, 7.0281, 0.67 ) }
    dend_31 { pt3dadd( 25.8239, 16.1735, 6.67068, 0.67 ) }
    dend_31 { pt3dadd( 27.953, 16.2802, 6.38401, 0.67 ) }
    dend_31 { pt3dadd( 30.5487, 16.5879, 5.96574, 0.67 ) }
    dend_31 { pt3dadd( 32.9083, 16.9765, 5.57349, 0.67 ) }
    dend_31 { pt3dadd( 33.9974, 17.1824, 5.39224, 0.67 ) }
    dend_31 { pt3dadd( 36.1326, 17.6016, 5.04911, 0.67 ) }
    dend_31 { pt3dadd( 39.7302, 18.5614, 4.64908, 0.67 ) }
    dend_31 { pt3dadd( 41.9907, 19.2715, 4.40766, 0.67 ) }
    dend_31 { pt3dadd( 43.6756, 19.9067, 4.29816, 0.33 ) }
    dend_31 { pt3dadd( 44.1003, 20.0725, 4.29631, 0.67 ) }
    dend_31 { pt3dadd( 45.0741, 20.4489, 4.33122, 0.33 ) }
    dend_31 { pt3dadd( 47.692, 21.4264, 4.59215, 0.67 ) }
    dend_31 { pt3dadd( 48.7795, 21.8747, 4.75476, 0.33 ) }
    dend_31 { pt3dadd( 49.3901, 22.1173, 4.80557, 0.67 ) }
    dend_31 { pt3dadd( 50.629, 22.6128, 4.78796, 0.33 ) }
    dend_31 { pt3dadd( 50.629, 22.6128, 4.78796, 0.67 ) }
    dend_31 { pt3dadd( 52.5375, 23.3447, 4.48521, 0.33 ) }
    dend_31 { pt3dadd( 54.9125, 24.1945, 4.1355, 1.33 ) }
    dend_31 { pt3dadd( 58.8191, 25.5199, 3.68751, 0.33 ) }
    dend_31 { pt3dadd( 60.3955, 25.9625, 3.53409, 0.67 ) }
    dend_31 { pt3dadd( 63.6231, 26.7196, 3.27554, 0.33 ) }
    dend_31 { pt3dadd( 65.6605, 27.0672, 3.10561, 1.33 ) }
    dend_31 { pt3dadd( 69.0912, 27.3898, 2.84689, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_31 { pt3dadd( 69.3899, 27.3865, 2.82973, 0.67 ) }
    dend_31 { pt3dadd( 73.5168, 26.902, 2.49149, 0.33 ) }
    dend_31 { pt3dadd( 74.338, 26.7389, 2.43583, 1.33 ) }
    dend_31 { pt3dadd( 76.7292, 26.0659, 2.22635, 0.33 ) }
    dend_31 { pt3dadd( 77.5538, 25.8067, 2.15374, 0.67 ) }
    dend_31 { pt3dadd( 79.9787, 25.025, 1.82231, 0.33 ) }
    dend_31 { pt3dadd( 80.4289, 24.8927, 1.76148, 0.67 ) }
    dend_31 { pt3dadd( 82.2705, 24.4417, 1.55277, 0.33 ) }
    dend_31 { pt3dadd( 83.188, 24.2718, 1.46534, 0.67 ) }
    dend_31 { pt3dadd( 84.6735, 24.1061, 1.36978, 0.33 ) }
    dend_31 { pt3dadd( 85.7328, 24.0452, 1.33342, 1.33 ) }
    dend_31 { pt3dadd( 88.4904, 24.004, 1.31911, 0.33 ) }
    dend_31 { pt3dadd( 89.4406, 23.9792, 1.33876, 2.0 ) }
    dend_31 { pt3dadd( 91.7746, 23.9139, 1.43534, 0.33 ) }
    dend_31 { pt3dadd( 92.8254, 23.8412, 1.51608, 0.67 ) }
    dend_31 { pt3dadd( 95.706, 23.5192, 1.84643, 0.33 ) }
    dend_31 { pt3dadd( 96.7549, 23.3258, 2.01716, 0.67 ) }
    dend_31 { pt3dadd( 98.5721, 22.8872, 2.41002, 0.33 ) }
    dend_31 { pt3dadd( 99.023, 22.7506, 2.50631, 1.33 ) }
    dend_31 { pt3dadd( 101.609, 21.7858, 3.05479, 0.33 ) }
    dend_31 { pt3dadd( 102.452, 21.4186, 3.23054, 1.33 ) }
    dend_31 { pt3dadd( 104.814, 20.2806, 3.7036, 0.33 ) }
    dend_31 { pt3dadd( 105.744, 19.8281, 3.89202, 1.33 ) }
    dend_31 { pt3dadd( 108.744, 18.402, 4.49899, 0.33 ) }
    dend_31 { pt3dadd( 109.829, 17.9544, 4.68726, 1.33 ) }
    dend_31 { pt3dadd( 113.256, 16.8013, 5.19892, 0.33 ) }
    dend_31 { pt3dadd( 114.087, 16.5785, 5.30678, 0.67 ) }
    dend_31 { pt3dadd( 115.342, 16.3214, 5.44732, 0.33 ) }
    dend_31 { pt3dadd( 115.925, 16.2231, 5.50659, 0.67 ) }
    dend_31 { pt3dadd( 120.925, 15.5674, 5.65352, 0.33 ) }
    dend_31 { pt3dadd( 121.979, 15.4519, 5.62721, 1.33 ) }
    dend_31 { pt3dadd( 124.299, 15.2166, 5.38496, 0.33 ) }
    dend_31 { pt3dadd( 125.341, 15.0755, 5.20158, 0.67 ) }
    dend_31 { pt3dadd( 127.587, 14.6845, 4.67345, 0.33 ) }
    dend_31 { pt3dadd( 130.52, 14.014, 3.84987, 1.33 ) }
    dend_31 { pt3dadd( 132.278, 13.5156, 3.29399, 0.33 ) }
    dend_31 { pt3dadd( 133.674, 13.1041, 2.85542, 1.33 ) }
    dend_31 { pt3dadd( 136.565, 12.3605, 2.04496, 0.33 ) }
    dend_31 { pt3dadd( 136.97, 12.275, 1.95494, 0.67 ) }
    dend_31 { pt3dadd( 138.472, 12.0325, 1.75231, 1.33 ) }
    dend_31 { pt3dadd( 140.842, 11.7936, 1.78847, 0.33 ) }
    dend_31 { pt3dadd( 141.508, 11.7575, 1.85392, 0.67 ) }
    dend_31 { pt3dadd( 144.591, 11.7406, 2.51104, 0.33 ) }
    dend_31 { pt3dadd( 145.321, 11.7741, 2.7205, 0.67 ) }
    dend_31 { pt3dadd( 146.73, 11.8898, 3.1537, 0.33 ) }
    dend_31 { pt3dadd( 148.528, 12.1494, 3.81006, 1.33 ) }
    dend_31 { pt3dadd( 150.447, 12.5159, 4.61845, 0.33 ) }
    dend_31 { pt3dadd( 151.645, 12.8297, 5.25704, 1.33 ) }
    dend_31 { pt3dadd( 153.539, 13.5783, 6.544, 0.33 ) }
    dend_31 { pt3dadd( 154.145, 13.9569, 7.05018, 1.33 ) }
    dend_31 { pt3dadd( 155.364, 15.0395, 8.2177, 0.33 ) }
    dend_31 { pt3dadd( 155.578, 15.2981, 8.46399, 0.67 ) }
    dend_31 { pt3dadd( 156.549, 16.8216, 9.8062, 0.33 ) }
    dend_31 { pt3dadd( 156.762, 17.2516, 10.1809, 1.33 ) }
    dend_31 { pt3dadd( 157.747, 20.0179, 12.6832, 0.33 ) }
    dend_31 { pt3dadd( 157.954, 20.6311, 13.2458, 0.67 ) }
    dend_31 { pt3dadd( 158.413, 22.0949, 14.5616, 0.33 ) }
    dend_31 { pt3dadd( 158.519, 22.4314, 14.8692, 0.67 ) }
    dend_31 { pt3dadd( 159.006, 23.9259, 16.2218, 0.33 ) }
    dend_31 { pt3dadd( 159.232, 24.8213, 17.1027, 0.67 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 60/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 20.2594, 16.2039, 7.0281, 0.33 ) }
    dend_30 { pt3dadd( 21.6905, 17.7637, 8.18876, 0.33 ) }
    dend_30 { pt3dadd( 24.3893, 20.1615, 10.0797, 0.67 ) }
    dend_30 { pt3dadd( 27.344, 22.8385, 12.2052, 0.67 ) }
    dend_30 { pt3dadd( 28.6276, 24.0124, 13.1092, 0.67 ) }
    dend_30 { pt3dadd( 31.9061, 26.9261, 15.3317, 0.67 ) }
    dend_30 { pt3dadd( 35.099, 29.7266, 17.351, 0.67 ) }
    dend_30 { pt3dadd( 39.4528, 33.21, 19.8513, 0.67 ) }
    dend_30 { pt3dadd( 41.5376, 34.7879, 20.9819, 0.67 ) }
    dend_30 { pt3dadd( 43.8746, 36.663, 22.3421, 0.67 ) }
    dend_30 { pt3dadd( 45.2402, 37.751, 23.2062, 0.67 ) }
    dend_30 { pt3dadd( 47.9917, 39.9598, 24.8297, 0.67 ) }
    dend_30 { pt3dadd( 51.2246, 42.5386, 26.4459, 0.67 ) }
    dend_30 { pt3dadd( 53.8308, 44.7376, 27.7469, 0.67 ) }
    dend_30 { pt3dadd( 57.5369, 47.9405, 29.5458, 0.67 ) }
    dend_30 { pt3dadd( 59.1352, 49.4871, 30.4217, 0.67 ) }
    dend_30 { pt3dadd( 62.2583, 52.5782, 32.3113, 0.67 ) }
    dend_30 { pt3dadd( 63.4061, 53.6744, 33.0046, 0.67 ) }
    dend_30 { pt3dadd( 66.6286, 56.4491, 34.8969, 0.67 ) }
    dend_30 { pt3dadd( 68.115, 57.5018, 35.7938, 0.67 ) }
    dend_30 { pt3dadd( 71.4477, 59.2903, 37.8946, 0.67 ) }
    dend_30 { pt3dadd( 74.9578, 60.8702, 40.1824, 0.67 ) }
    dend_30 { pt3dadd( 78.0824, 62.1212, 42.4715, 0.67 ) }
    dend_30 { pt3dadd( 81.8749, 63.359, 45.1999, 0.67 ) }
    dend_30 { pt3dadd( 85.1827, 64.0153, 47.3676, 0.67 ) }
    dend_30 { pt3dadd( 87.2041, 64.2439, 48.6067, 0.33 ) }
    dend_30 { pt3dadd( 89.7141, 64.286, 50.0015, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 87/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 5.33046, 12.2084, 11.4885, 0.67 ) }
    dend_28 { pt3dadd( 5.96495, 16.7978, 13.112, 0.67 ) }
    dend_28 { pt3dadd( 6.68934, 21.2086, 15.1196, 0.67 ) }
    dend_28 { pt3dadd( 7.26445, 23.3915, 16.2196, 0.67 ) }
    dend_28 { pt3dadd( 7.77474, 25.1326, 17.0803, 0.67 ) }
    dend_28 { pt3dadd( 8.92563, 28.702, 18.922, 0.67 ) }
    dend_28 { pt3dadd( 10.231, 32.4938, 20.8853, 0.67 ) }
    dend_28 { pt3dadd( 11.5402, 36.2887, 22.9383, 0.67 ) }
    dend_28 { pt3dadd( 12.8231, 39.8016, 24.7114, 0.67 ) }
    dend_28 { pt3dadd( 14.4846, 44.3763, 27.0804, 0.67 ) }
    dend_28 { pt3dadd( 15.1743, 46.4464, 28.2473, 0.33 ) }
    dend_28 { pt3dadd( 15.5745, 47.5775, 28.9372, 0.67 ) }
    dend_28 { pt3dadd( 16.0581, 48.955, 29.6883, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_28 { pt3dadd( 16.994, 51.7652, 31.0801, 0.67 ) }
    dend_28 { pt3dadd( 17.5471, 53.386, 31.8708, 1.33 ) }
    dend_28 { pt3dadd( 18.7386, 56.5576, 33.3672, 0.67 ) }
    dend_28 { pt3dadd( 21.1371, 62.7365, 36.058, 0.67 ) }
    dend_28 { pt3dadd( 23.0279, 67.5585, 38.0451, 0.67 ) }
    dend_28 { pt3dadd( 24.5912, 71.4553, 39.4838, 0.67 ) }
    dend_28 { pt3dadd( 25.3352, 73.2767, 40.038, 0.67 ) }
    dend_28 { pt3dadd( 26.0002, 74.9425, 40.4497, 0.67 ) }
    dend_28 { pt3dadd( 26.527, 76.3694, 40.7213, 1.33 ) }
    dend_28 { pt3dadd( 27.2872, 78.8671, 41.1108, 0.33 ) }
    dend_28 { pt3dadd( 28.0546, 81.4653, 41.5017, 1.33 ) }
    dend_28 { pt3dadd( 28.3896, 83.3456, 41.7066, 0.33 ) }
    dend_28 { pt3dadd( 28.6492, 85.7651, 41.977, 1.33 ) }
    dend_28 { pt3dadd( 28.8619, 90.0709, 42.4376, 0.67 ) }
    dend_28 { pt3dadd( 28.8927, 92.0006, 42.6703, 0.33 ) }
    dend_28 { pt3dadd( 28.8876, 92.9527, 42.7888, 0.33 ) }
    dend_28 { pt3dadd( 28.7601, 98.7824, 43.54, 0.67 ) }
    dend_28 { pt3dadd( 28.7014, 100.536, 43.7557, 0.33 ) }
    dend_28 { pt3dadd( 28.6238, 103.083, 44.1609, 0.67 ) }
    dend_28 { pt3dadd( 28.6232, 105.453, 44.5787, 0.67 ) }
    dend_28 { pt3dadd( 28.7432, 107.535, 45.0237, 0.67 ) }
    dend_28 { pt3dadd( 28.9379, 108.849, 45.3633, 0.67 ) }
    dend_28 { pt3dadd( 29.3509, 109.956, 45.7653, 0.67 ) }
    dend_28 { pt3dadd( 30.8402, 113.026, 47.0802, 0.33 ) }
    dend_28 { pt3dadd( 31.4724, 114.051, 47.6141, 0.33 ) }
    dend_28 { pt3dadd( 32.2098, 115.173, 48.25, 0.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 26/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.33046, 12.2084, 11.4885, 0.67 ) }
    dend_27 { pt3dadd( 4.58011, 15.3915, 12.9072, 0.67 ) }
    dend_27 { pt3dadd( 3.81112, 19.0416, 15.2657, 0.67 ) }
    dend_27 { pt3dadd( 3.10286, 22.6268, 18.0688, 0.67 ) }
    dend_27 { pt3dadd( 2.74013, 24.8372, 19.9052, 0.67 ) }
    dend_27 { pt3dadd( 2.643, 27.922, 22.4137, 0.67 ) }
    dend_27 { pt3dadd( 2.84091, 31.0987, 25.1267, 0.67 ) }
    dend_27 { pt3dadd( 3.30667, 35.8499, 29.4151, 0.67 ) }
    dend_27 { pt3dadd( 3.55901, 38.6351, 32.1021, 0.67 ) }
    dend_27 { pt3dadd( 3.85377, 41.0677, 34.4749, 0.67 ) }
    dend_27 { pt3dadd( 4.57118, 45.6771, 38.762, 0.67 ) }
    dend_27 { pt3dadd( 5.06606, 49.0093, 41.8242, 0.67 ) }
    dend_27 { pt3dadd( 5.28521, 51.6993, 44.17, 0.67 ) }
    dend_27 { pt3dadd( 5.34198, 53.8284, 45.7645, 0.67 ) }
    dend_27 { pt3dadd( 5.3659, 60.288, 49.9788, 0.67 ) }
    dend_27 { pt3dadd( 5.27494, 65.3785, 52.7797, 0.67 ) }
    dend_27 { pt3dadd( 4.96913, 69.3748, 54.8712, 0.67 ) }
    dend_27 { pt3dadd( 4.80898, 72.3011, 56.2103, 0.67 ) }
    dend_27 { pt3dadd( 4.8721, 78.1429, 58.7618, 0.33 ) }
    dend_27 { pt3dadd( 4.90769, 79.6933, 59.3461, 0.67 ) }
    dend_27 { pt3dadd( 4.9836, 83.3716, 59.5134, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_6 (entry count 47/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 0.274197, -15.6322, 5.88693, 1.33 ) }
    dend_16 { pt3dadd( 0.898171, -18.5902, 7.58428, 1.33 ) }
    dend_16 { pt3dadd( 1.61604, -21.9933, 9.53706, 1.33 ) }
    dend_16 { pt3dadd( 2.46291, -26.0079, 11.8407, 1.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 51/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 0.274197, -15.6322, 5.88693, 0.67 ) }
    dend_7 { pt3dadd( 0.156343, -17.7717, 3.36818, 0.67 ) }
    dend_7 { pt3dadd( 0.35761, -21.2262, -0.29927, 0.67 ) }
    dend_7 { pt3dadd( 0.695217, -24.5044, -3.83226, 0.67 ) }
    dend_7 { pt3dadd( 1.369, -31.0469, -10.8832, 0.67 ) }
    dend_7 { pt3dadd( 1.69762, -34.2379, -14.3222, 0.67 ) }
    dend_7 { pt3dadd( 1.98255, -37.0046, -17.304, 0.67 ) }
    dend_7 { pt3dadd( 2.24943, -41.6836, -22.3594, 0.67 ) }
    dend_7 { pt3dadd( 2.52119, -44.175, -25.0126, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 60/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.67925, -23.5434, 7.89136, 0.67 ) }
    dend_3 { pt3dadd( -9.56753, -30.5028, 9.56516, 0.67 ) }
    dend_3 { pt3dadd( -10.1412, -32.6173, 10.0737, 0.67 ) }
    dend_3 { pt3dadd( -11.3146, -36.9418, 11.1138, 1.33 ) }
    dend_3 { pt3dadd( -13.1793, -43.8142, 12.7667, 0.67 ) }
    dend_3 { pt3dadd( -13.5825, -45.3003, 13.1241, 0.67 ) }
    dend_3 { pt3dadd( -14.3919, -48.2835, 13.8416, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 67/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.67925, -23.5434, 7.89136, 0.67 ) }
    dend_2 { pt3dadd( -8.94168, -23.8351, 9.46502, 0.67 ) }
    dend_2 { pt3dadd( -11.3596, -24.2082, 12.5417, 0.67 ) }
    dend_2 { pt3dadd( -12.8361, -24.3491, 14.3863, 0.67 ) }
    dend_2 { pt3dadd( -19.2672, -24.7821, 22.1221, 0.67 ) }
    dend_2 { pt3dadd( -22.5305, -25.0507, 25.8426, 0.67 ) }
    dend_2 { pt3dadd( -25.1616, -25.2751, 28.7788, 0.67 ) }
    dend_2 { pt3dadd( -27.9084, -25.3089, 31.8836, 0.33 ) }
    dend_2 { pt3dadd( -30.2418, -25.1822, 34.5247, 0.67 ) }
    dend_2 { pt3dadd( -31.3256, -25.1083, 35.7035, 0.33 ) }
    dend_2 { pt3dadd( -33.4486, -24.8971, 37.5482, 0.67 ) }
    dend_2 { pt3dadd( -35.9714, -24.805, 39.9485, 0.67 ) }
    dend_2 { pt3dadd( -39.2898, -24.5736, 42.8956, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 80/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 2.46291, -26.0079, 11.8407, 1.33 ) }
    dend_18 { pt3dadd( 1.24387, -28.1911, 12.2617, 1.33 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 82/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.46291, -26.0079, 11.8407, 0.67 ) }
    dend_17 { pt3dadd( 3.86284, -25.6738, 14.5277, 0.67 ) }
    dend_17 { pt3dadd( 5.53555, -24.3919, 18.8491, 0.67 ) }
    dend_17 { pt3dadd( 6.09512, -23.6966, 20.8971, 0.67 ) }
    dend_17 { pt3dadd( 6.67481, -22.3959, 24.7657, 0.67 ) }
    dend_17 { pt3dadd( 6.74004, -22.1791, 25.3021, 0.67 ) }
    dend_17 { pt3dadd( 6.89825, -21.3468, 27.0426, 0.67 ) }
    dend_17 { pt3dadd( 6.97881, -19.463, 30.0345, 0.67 ) }
    dend_17 { pt3dadd( 7.01366, -18.5692, 31.1735, 0.67 ) }
    dend_17 { pt3dadd( 7.24285, -16.3538, 33.8602, 0.67 ) }
    dend_17 { pt3dadd( 7.37993, -14.5886, 35.7633, 0.67 ) }
    dend_17 { pt3dadd( 7.68237, -13.4471, 36.8836, 0.67 ) }
    dend_17 { pt3dadd( 8.47844, -11.2819, 38.8748, 0.67 ) }
    dend_17 { pt3dadd( 9.13112, -9.95507, 39.9764, 0.67 ) }
    dend_17 { pt3dadd( 9.71276, -8.90366, 40.7573, 0.67 ) }
    dend_17 { pt3dadd( 10.5453, -7.57447, 41.5932, 0.67 ) }
    dend_17 { pt3dadd( 12.9248, -4.36501, 43.9044, 0.67 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 99/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 2.52119, -44.175, -25.0126, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_11 { pt3dadd( 1.55985, -46.4053, -27.402, 0.33 ) }
    dend_11 { pt3dadd( 1.2989, -47.0107, -28.0506, 1.33 ) }
    dend_11 { pt3dadd( -0.151522, -50.3755, -31.6557, 0.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 3/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.52119, -44.175, -25.0126, 0.33 ) }
    dend_8 { pt3dadd( 5.03267, -45.3721, -29.0432, 0.33 ) }
    dend_8 { pt3dadd( 5.20795, -45.4414, -29.3098, 0.67 ) }
    dend_8 { pt3dadd( 6.32658, -45.7951, -30.8984, 0.33 ) }
    dend_8 { pt3dadd( 7.30829, -46.0374, -32.1782, 1.33 ) }
    dend_8 { pt3dadd( 10.5329, -46.6997, -36.3352, 0.67 ) }
    dend_8 { pt3dadd( 13.6341, -47.1928, -40.1196, 0.33 ) }
    dend_8 { pt3dadd( 14.55, -47.2741, -41.1632, 0.33 ) }
    dend_8 { pt3dadd( 15.4655, -47.3256, -42.2197, 0.67 ) }
    dend_8 { pt3dadd( 16.8808, -47.3812, -43.8791, 0.33 ) }
    dend_8 { pt3dadd( 18.7495, -47.5495, -46.0008, 1.33 ) }
    dend_8 { pt3dadd( 20.2509, -47.7568, -47.6157, 0.33 ) }
    dend_8 { pt3dadd( 21.7616, -48.1008, -49.204, 1.33 ) }
    dend_8 { pt3dadd( 24.335, -48.8518, -51.9211, 0.33 ) }
    dend_8 { pt3dadd( 24.8011, -49.0157, -52.4626, 0.67 ) }
    dend_8 { pt3dadd( 29.1608, -50.781, -57.787, 0.33 ) }
    dend_8 { pt3dadd( 30.109, -51.2175, -59.0086, 2.0 ) }
    dend_8 { pt3dadd( 33.7306, -53.1218, -64.0195, 0.33 ) }
    dend_8 { pt3dadd( 34.1196, -53.3507, -64.6015, 1.33 ) }
    dend_8 { pt3dadd( 36.8233, -55.1485, -69.2564, 0.33 ) }
    dend_8 { pt3dadd( 37.1541, -55.3771, -69.8707, 0.67 ) }
    dend_8 { pt3dadd( 38.4218, -56.4089, -72.7009, 0.33 ) }
    dend_8 { pt3dadd( 38.8553, -56.8318, -73.8564, 1.33 ) }
    dend_8 { pt3dadd( 40.0454, -58.6291, -78.6032, 0.33 ) }
    dend_8 { pt3dadd( 40.5704, -59.4453, -80.7374, 1.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 28/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -14.3919, -48.2835, 13.8416, 0.67 ) }
    dend_5 { pt3dadd( -14.3252, -50.4842, 14.2142, 0.67 ) }
    dend_5 { pt3dadd( -14.5172, -52.2053, 14.5348, 0.67 ) }
    dend_5 { pt3dadd( -14.7016, -53.3224, 14.7447, 0.67 ) }
    dend_5 { pt3dadd( -15.4611, -57.0754, 15.4321, 0.67 ) }
    dend_5 { pt3dadd( -17.1102, -63.7879, 16.7431, 0.67 ) }
    dend_5 { pt3dadd( -18.5576, -68.5205, 17.7321, 0.67 ) }
    dend_5 { pt3dadd( -20.3084, -73.4882, 18.8382, 0.67 ) }
    dend_5 { pt3dadd( -22.6433, -79.6619, 20.3125, 0.67 ) }
    dend_5 { pt3dadd( -23.5143, -81.6922, 20.8172, 0.67 ) }
    dend_5 { pt3dadd( -24.8353, -84.0438, 21.4624, 0.67 ) }
    dend_5 { pt3dadd( -27.9666, -88.4875, 22.8748, 0.67 ) }
    dend_5 { pt3dadd( -29.4109, -90.2994, 23.5075, 0.67 ) }
    dend_5 { pt3dadd( -31.9323, -93.29, 24.6232, 0.67 ) }
    dend_5 { pt3dadd( -32.9109, -94.3836, 25.0696, 0.67 ) }
    dend_5 { pt3dadd( -37.7874, -100.081, 27.3972, 0.67 ) }
    dend_5 { pt3dadd( -40.9004, -103.851, 28.9148, 0.67 ) }
    dend_5 { pt3dadd( -43.328, -106.917, 30.1358, 0.67 ) }
    dend_5 { pt3dadd( -46.1295, -110.499, 31.5524, 0.67 ) }
    dend_5 { pt3dadd( -48.2725, -113.337, 32.6805, 0.67 ) }
    dend_5 { pt3dadd( -49.3357, -114.935, 33.4098, 0.67 ) }
    dend_5 { pt3dadd( -50.4855, -117.012, 34.4611, 0.67 ) }
    dend_5 { pt3dadd( -51.5991, -119.057, 35.6366, 0.67 ) }
    dend_5 { pt3dadd( -52.3828, -120.353, 36.4754, 0.67 ) }
    dend_5 { pt3dadd( -53.938, -122.489, 38.0024, 0.67 ) }
    dend_5 { pt3dadd( -56.6267, -125.405, 40.567, 0.67 ) }
    dend_5 { pt3dadd( -57.9204, -126.647, 41.7942, 0.67 ) }
    dend_5 { pt3dadd( -59.4208, -127.943, 43.2257, 0.67 ) }
    dend_5 { pt3dadd( -61.1415, -129.196, 44.8175, 0.67 ) }
    dend_5 { pt3dadd( -62.8911, -130.36, 46.3669, 0.33 ) }
    dend_5 { pt3dadd( -65.5121, -131.737, 48.3145, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 59/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -14.3919, -48.2835, 13.8416, 0.67 ) }
    dend_4 { pt3dadd( -17.6126, -49.3389, 12.0377, 0.67 ) }
    dend_4 { pt3dadd( -21.5701, -50.6777, 9.57141, 0.67 ) }
    dend_4 { pt3dadd( -25.6644, -52.0428, 6.96298, 0.67 ) }
    dend_4 { pt3dadd( -33.9264, -54.6771, 2.02829, 0.67 ) }
    dend_4 { pt3dadd( -37.8742, -55.854, -0.208106, 0.67 ) }
    dend_4 { pt3dadd( -40.1266, -56.5089, -1.4027, 0.67 ) }
    dend_4 { pt3dadd( -42.9795, -57.3672, -2.94499, 0.33 ) }
    dend_4 { pt3dadd( -44.9032, -57.922, -4.02515, 1.33 ) }
    dend_4 { pt3dadd( -47.7783, -58.7272, -5.46828, 0.33 ) }
    dend_4 { pt3dadd( -50.6946, -59.5799, -6.63435, 0.67 ) }
    dend_4 { pt3dadd( -53.5914, -60.4665, -7.67723, 0.33 ) }
    dend_4 { pt3dadd( -57.2026, -61.6942, -9.16241, 0.67 ) }
    dend_4 { pt3dadd( -59.8268, -62.6366, -10.2979, 0.33 ) }
    dend_4 { pt3dadd( -61.8165, -63.4392, -11.2855, 0.67 ) }
    dend_4 { pt3dadd( -67.1167, -65.8181, -14.2461, 0.33 ) }
    dend_4 { pt3dadd( -69.6597, -67.1159, -15.8799, 1.33 ) }
    dend_4 { pt3dadd( -73.7987, -69.2558, -18.3912, 0.33 ) }
    dend_4 { pt3dadd( -74.2111, -69.4666, -18.6407, 0.67 ) }
    dend_4 { pt3dadd( -76.2898, -70.5209, -19.9695, 0.33 ) }
    dend_4 { pt3dadd( -76.9112, -70.8246, -20.439, 0.67 ) }
    dend_4 { pt3dadd( -82.7208, -73.4711, -25.0277, 0.33 ) }
    dend_4 { pt3dadd( -85.814, -74.7906, -27.8404, 2.0 ) }
    dend_4 { pt3dadd( -90.8828, -76.7644, -32.6526, 0.33 ) }
    dend_4 { pt3dadd( -92.7089, -77.4229, -34.4, 1.33 ) }
    dend_4 { pt3dadd( -97.631, -79.01, -39.1073, 0.33 ) }
    dend_4 { pt3dadd( -97.8966, -79.0845, -39.3435, 0.67 ) }
    dend_4 { pt3dadd( -100.384, -79.6513, -41.4393, 0.33 ) }
    dend_4 { pt3dadd( -100.965, -79.7713, -41.8934, 0.67 ) }
    dend_4 { pt3dadd( -104.949, -80.4948, -44.2443, 0.33 ) }
    dend_4 { pt3dadd( -106.659, -80.8149, -45.0619, 1.33 ) }
    dend_4 { pt3dadd( -109.511, -81.3537, -46.118, 0.33 ) }
    dend_4 { pt3dadd( -114.21, -82.402, -47.705, 1.33 ) }
    dend_4 { pt3dadd( -118.443, -83.4857, -48.974, 0.33 ) }
    dend_4 { pt3dadd( -119.541, -83.8348, -49.294, 0.67 ) }
    dend_4 { pt3dadd( -122.464, -84.9212, -50.1227, 0.33 ) }
    dend_4 { pt3dadd( -123.136, -85.2252, -50.2751, 0.67 ) }
    dend_4 { pt3dadd( -127.728, -87.6192, -51.0603, 0.33 ) }
    dend_4 { pt3dadd( -129.072, -88.4042, -51.2759, 0.67 ) }
    dend_4 { pt3dadd( -132.413, -90.4914, -51.9409, 0.33 ) }
    dend_4 { pt3dadd( -133.395, -91.0934, -52.1546, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -139.619, -94.8161, -53.5556, 0.33 ) }
    dend_4 { pt3dadd( -139.931, -95.0003, -53.6425, 0.67 ) }
    dend_4 { pt3dadd( -143.793, -97.2014, -54.8927, 0.33 ) }
    dend_4 { pt3dadd( -145.069, -97.9278, -55.3268, 1.33 ) }
    dend_4 { pt3dadd( -148.219, -99.738, -56.4528, 0.33 ) }
    dend_4 { pt3dadd( -150.168, -100.909, -57.1343, 1.33 ) }
    dend_4 { pt3dadd( -155.768, -104.383, -59.0316, 0.33 ) }
    dend_4 { pt3dadd( -156.853, -105.083, -59.3402, 1.33 ) }
    dend_4 { pt3dadd( -159.228, -106.656, -59.8413, 0.33 ) }
    dend_4 { pt3dadd( -159.843, -107.045, -59.9498, 0.67 ) }
    dend_4 { pt3dadd( -162.969, -108.953, -60.4032, 0.33 ) }
    dend_4 { pt3dadd( -163.678, -109.386, -60.4759, 0.67 ) }
    dend_4 { pt3dadd( -166.367, -111.078, -60.6191, 0.33 ) }
    dend_4 { pt3dadd( -167.832, -112.221, -60.7807, 1.33 ) }
    dend_4 { pt3dadd( -173.565, -117.511, -61.7244, 0.33 ) }
    dend_4 { pt3dadd( -174.11, -118.118, -61.8452, 0.67 ) }
    dend_4 { pt3dadd( -176.68, -121.765, -62.6293, 0.33 ) }
    dend_4 { pt3dadd( -177.419, -123.158, -62.9393, 0.67 ) }
    dend_4 { pt3dadd( -179.517, -129.466, -64.4247, 0.33 ) }
    dend_4 { pt3dadd( -179.551, -129.819, -64.5252, 1.33 ) }
    dend_4 { pt3dadd( -179.319, -131.501, -65.0874, 0.33 ) }
    dend_4 { pt3dadd( -179.228, -131.967, -65.2374, 0.67 ) }
    dend_4 { pt3dadd( -178.874, -133.383, -65.6843, 0.33 ) }
    dend_4 { pt3dadd( -178.766, -133.848, -65.8271, 0.67 ) }
    dend_4 { pt3dadd( -177.885, -138.22, -66.9674, 0.33 ) }
    dend_4 { pt3dadd( -177.683, -139.227, -67.2387, 1.33 ) }
    dend_4 { pt3dadd( -176.585, -144.824, -68.8076, 0.33 ) }
    dend_4 { pt3dadd( -176.531, -145.154, -68.8982, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 28/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 1.24387, -28.1911, 12.2617, 0.67 ) }
    dend_24 { pt3dadd( -0.164229, -33.7927, 12.397, 0.67 ) }
    dend_24 { pt3dadd( -0.624238, -35.2968, 12.4988, 0.67 ) }
    dend_24 { pt3dadd( -1.62839, -37.8284, 12.6818, 0.67 ) }
    dend_24 { pt3dadd( -3.10102, -41.5412, 12.9502, 0.67 ) }
    dend_24 { pt3dadd( -4.65164, -45.4506, 13.2329, 0.67 ) }
    dend_24 { pt3dadd( -5.63467, -47.9291, 13.412, 0.67 ) }
    dend_24 { pt3dadd( -8.02393, -53.2335, 14.2467, 0.67 ) }
    dend_24 { pt3dadd( -11.8456, -61.4184, 15.4898, 0.33 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 37/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 1.24387, -28.1911, 12.2617, 0.67 ) }
    dend_19 { pt3dadd( 3.58807, -31.132, 12.9203, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 39/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.151522, -50.3755, -31.6557, 0.33 ) }
    dend_15 { pt3dadd( 1.13694, -52.3033, -33.0584, 0.33 ) }
    dend_15 { pt3dadd( 1.54106, -52.8206, -33.657, 0.67 ) }
    dend_15 { pt3dadd( 2.45426, -53.9673, -35.0052, 0.33 ) }
    dend_15 { pt3dadd( 2.77284, -54.3441, -35.501, 0.67 ) }
    dend_15 { pt3dadd( 3.83306, -55.534, -37.1269, 0.33 ) }
    dend_15 { pt3dadd( 6.70874, -58.4799, -41.5554, 1.33 ) }
    dend_15 { pt3dadd( 9.49794, -60.9814, -46.1565, 0.33 ) }
    dend_15 { pt3dadd( 10.148, -61.4936, -47.2156, 1.33 ) }
    dend_15 { pt3dadd( 12.3152, -63.0242, -50.7188, 0.33 ) }
    dend_15 { pt3dadd( 12.7792, -63.2898, -51.4981, 0.67 ) }
    dend_15 { pt3dadd( 15.1153, -64.3103, -55.7224, 0.33 ) }
    dend_15 { pt3dadd( 16.3161, -64.6902, -57.8752, 2.0 ) }
    dend_15 { pt3dadd( 17.3538, -64.9024, -59.8712, 0.33 ) }
    dend_15 { pt3dadd( 17.7002, -64.969, -60.6579, 0.67 ) }
    dend_15 { pt3dadd( 20.2155, -65.4841, -67.056, 0.33 ) }
    dend_15 { pt3dadd( 21.6735, -65.9184, -71.1016, 1.33 ) }
    dend_15 { pt3dadd( 22.3402, -66.1739, -73.113, 0.33 ) }
    dend_15 { pt3dadd( 22.6904, -66.3514, -74.2319, 2.0 ) }
    dend_15 { pt3dadd( 25.6432, -68.2403, -84.4412, 0.33 ) }
    dend_15 { pt3dadd( 25.8752, -68.4354, -85.3667, 2.0 ) }
    dend_15 { pt3dadd( 26.6973, -69.3202, -88.895, 0.33 ) }
    dend_15 { pt3dadd( 27.047, -69.8275, -90.6304, 0.67 ) }
    dend_15 { pt3dadd( 27.6061, -70.8929, -93.958, 0.33 ) }
    dend_15 { pt3dadd( 27.8231, -71.276, -94.9838, 1.33 ) }
    dend_15 { pt3dadd( 30.7139, -76.0116, -105.431, 0.33 ) }
    dend_15 { pt3dadd( 31.5896, -77.1878, -107.803, 0.67 ) }
    dend_15 { pt3dadd( 32.8658, -78.6206, -110.403, 0.33 ) }
    dend_15 { pt3dadd( 33.0834, -78.8356, -110.73, 0.67 ) }
    dend_15 { pt3dadd( 36.9991, -82.1878, -115.099, 0.33 ) }
    dend_15 { pt3dadd( 38.028, -82.9721, -115.957, 0.67 ) }
    dend_15 { pt3dadd( 40.7319, -84.8693, -117.427, 0.33 ) }
    dend_15 { pt3dadd( 41.2638, -85.2464, -117.686, 0.67 ) }
    dend_15 { pt3dadd( 45.6781, -88.297, -119.786, 0.33 ) }
    dend_15 { pt3dadd( 46.4156, -88.8714, -119.977, 1.33 ) }
    dend_15 { pt3dadd( 48.7015, -90.8766, -119.982, 0.33 ) }
    dend_15 { pt3dadd( 49.0201, -91.172, -119.869, 0.67 ) }
    dend_15 { pt3dadd( 53.1573, -95.1898, -117.461, 0.33 ) }
    dend_15 { pt3dadd( 54.8283, -96.8183, -116.238, 0.67 ) }
    dend_15 { pt3dadd( 59.9609, -101.841, -111.423, 0.33 ) }
    dend_15 { pt3dadd( 60.3584, -102.244, -110.997, 0.67 ) }
    dend_15 { pt3dadd( 64.4444, -106.547, -105.757, 0.33 ) }
    dend_15 { pt3dadd( 64.5975, -106.71, -105.535, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 82/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.151522, -50.3755, -31.6557, 0.33 ) }
    dend_12 { pt3dadd( 0.197221, -53.5532, -31.3388, 0.33 ) }
    dend_12 { pt3dadd( 0.363119, -54.6907, -31.2632, 0.67 ) }
    dend_12 { pt3dadd( 0.984718, -58.4218, -31.0745, 0.33 ) }
    dend_12 { pt3dadd( 1.21532, -59.6972, -31.0275, 0.67 ) }
    dend_12 { pt3dadd( 1.47153, -61.2115, -30.984, 0.33 ) }
    dend_12 { pt3dadd( 1.73635, -63.0074, -30.9492, 1.33 ) }
    dend_12 { pt3dadd( 2.16469, -65.9497, -30.938, 0.33 ) }
    dend_12 { pt3dadd( 2.21912, -66.3583, -30.9451, 0.67 ) }
    dend_12 { pt3dadd( 2.39911, -67.8833, -31.0139, 0.33 ) }
    dend_12 { pt3dadd( 2.60036, -69.6179, -31.0882, 1.33 ) }
    dend_12 { pt3dadd( 2.95034, -73.0922, -31.455, 0.33 ) }
    dend_12 { pt3dadd( 3.03987, -73.9875, -31.6059, 0.67 ) }
    dend_12 { pt3dadd( 3.24908, -76.0143, -32.0474, 0.33 ) }
    dend_12 { pt3dadd( 3.38809, -77.0003, -32.3672, 0.67 ) }
    dend_12 { pt3dadd( 3.75698, -79.1314, -33.2332, 0.33 ) }
    dend_12 { pt3dadd( 4.41973, -81.8289, -34.5225, 0.67 ) }
    dend_12 { pt3dadd( 5.30439, -84.7926, -36.2029, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( 5.6852, -85.867, -36.8478, 1.33 ) }
    dend_12 { pt3dadd( 7.38528, -90.0295, -39.4803, 0.33 ) }
    dend_12 { pt3dadd( 7.49762, -90.275, -39.6334, 0.67 ) }
    dend_12 { pt3dadd( 8.39839, -92.0165, -40.6795, 0.33 ) }
    dend_12 { pt3dadd( 9.21847, -93.4082, -41.3861, 2.0 ) }
    dend_12 { pt3dadd( 10.4802, -95.3316, -42.4188, 0.33 ) }
    dend_12 { pt3dadd( 10.6309, -95.5575, -42.5246, 0.67 ) }
    dend_12 { pt3dadd( 11.5728, -97.056, -43.1412, 0.33 ) }
    dend_12 { pt3dadd( 11.7418, -97.3971, -43.2942, 0.67 ) }
    dend_12 { pt3dadd( 12.4941, -99.3496, -44.1864, 0.33 ) }
    dend_12 { pt3dadd( 12.8193, -100.372, -44.626, 0.67 ) }
    dend_12 { pt3dadd( 13.4287, -102.873, -45.5471, 0.33 ) }
    dend_12 { pt3dadd( 13.853, -104.781, -46.1152, 1.33 ) }
    dend_12 { pt3dadd( 14.7075, -109.088, -47.1762, 0.33 ) }
    dend_12 { pt3dadd( 14.8283, -109.651, -47.2788, 0.67 ) }
    dend_12 { pt3dadd( 15.3846, -112.035, -47.5674, 0.33 ) }
    dend_12 { pt3dadd( 16.086, -114.604, -47.699, 1.33 ) }
    dend_12 { pt3dadd( 16.9594, -117.364, -47.6621, 0.33 ) }
    dend_12 { pt3dadd( 17.1584, -117.895, -47.6212, 0.67 ) }
    dend_12 { pt3dadd( 18.2143, -120.361, -47.3434, 0.33 ) }
    dend_12 { pt3dadd( 18.4938, -120.953, -47.305, 0.67 ) }
    dend_12 { pt3dadd( 19.278, -122.456, -47.3054, 0.33 ) }
    dend_12 { pt3dadd( 19.4759, -122.82, -47.3305, 0.67 ) }
    dend_12 { pt3dadd( 21.0179, -125.668, -47.5359, 0.33 ) }
    dend_12 { pt3dadd( 21.6427, -126.792, -47.6278, 1.33 ) }
    dend_12 { pt3dadd( 22.7245, -128.778, -47.8047, 0.33 ) }
    dend_12 { pt3dadd( 23.8799, -131.078, -47.9974, 0.67 ) }
    dend_12 { pt3dadd( 24.7974, -132.938, -48.1571, 0.33 ) }
    dend_12 { pt3dadd( 24.9854, -133.311, -48.1879, 0.67 ) }
    dend_12 { pt3dadd( 25.7496, -134.828, -48.3098, 0.33 ) }
    dend_12 { pt3dadd( 25.9958, -135.333, -48.3515, 0.67 ) }
    dend_12 { pt3dadd( 27.6478, -138.832, -48.6123, 0.33 ) }
    dend_12 { pt3dadd( 28.0294, -139.67, -48.6672, 0.67 ) }
    dend_12 { pt3dadd( 29.8842, -143.789, -48.9104, 0.33 ) }
    dend_12 { pt3dadd( 30.3653, -144.876, -48.9687, 2.0 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 35/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 40.5704, -59.4453, -80.7374, 0.33 ) }
    dend_10 { pt3dadd( 42.2209, -59.4526, -82.2385, 0.33 ) }
    dend_10 { pt3dadd( 42.6858, -59.4452, -82.6626, 0.67 ) }
    dend_10 { pt3dadd( 46.6774, -59.3338, -86.3133, 0.33 ) }
    dend_10 { pt3dadd( 47.5975, -59.3509, -86.9734, 1.33 ) }
    dend_10 { pt3dadd( 51.6978, -59.5772, -89.5542, 0.33 ) }
    dend_10 { pt3dadd( 52.4474, -59.6585, -89.9489, 0.67 ) }
    dend_10 { pt3dadd( 58.139, -60.5382, -92.4074, 0.33 ) }
    dend_10 { pt3dadd( 58.9124, -60.7216, -92.7075, 1.33 ) }
    dend_10 { pt3dadd( 65.2399, -62.9168, -94.6122, 0.33 ) }
    dend_10 { pt3dadd( 66.0761, -63.3467, -94.8842, 1.33 ) }
    dend_10 { pt3dadd( 69.0873, -65.5403, -95.8655, 0.33 ) }
    dend_10 { pt3dadd( 69.5689, -65.9922, -96.0664, 1.33 ) }
    dend_10 { pt3dadd( 72.5712, -69.8597, -97.7654, 0.33 ) }
    dend_10 { pt3dadd( 73.1998, -70.7709, -98.3678, 0.67 ) }
    dend_10 { pt3dadd( 74.777, -73.2962, -100.722, 0.33 ) }
    dend_10 { pt3dadd( 74.9698, -73.5554, -101.007, 0.67 ) }
    dend_10 { pt3dadd( 75.9947, -74.7163, -102.41, 0.33 ) }
    dend_10 { pt3dadd( 76.1772, -74.8712, -102.609, 0.67 ) }
    dend_10 { pt3dadd( 79.454, -77.0042, -105.361, 0.33 ) }
    dend_10 { pt3dadd( 80.475, -77.5917, -106.192, 0.67 ) }
    dend_10 { pt3dadd( 81.3525, -78.0527, -106.771, 0.33 ) }
    dend_10 { pt3dadd( 84.3709, -79.5943, -108.719, 1.33 ) }
    dend_10 { pt3dadd( 89.2316, -81.9933, -111.693, 0.33 ) }
    dend_10 { pt3dadd( 89.78, -82.2694, -112.03, 0.67 ) }
    dend_10 { pt3dadd( 93.2219, -84.0558, -114.101, 0.33 ) }
    dend_10 { pt3dadd( 96.2862, -85.8571, -116.235, 0.67 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 62/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 40.5704, -59.4453, -80.7374, 0.33 ) }
    dend_9 { pt3dadd( 40.9817, -62.0819, -86.1822, 0.33 ) }
    dend_9 { pt3dadd( 41.0985, -62.5843, -87.2425, 0.67 ) }
    dend_9 { pt3dadd( 42.4003, -66.6227, -95.819, 0.33 ) }
    dend_9 { pt3dadd( 42.5446, -67.0454, -96.7757, 0.67 ) }
    dend_9 { pt3dadd( 43.6476, -70.3283, -104.637, 0.33 ) }
    dend_9 { pt3dadd( 43.7304, -70.6842, -105.628, 0.67 ) }
    dend_9 { pt3dadd( 44.1592, -73.3094, -114.262, 0.33 ) }
    dend_9 { pt3dadd( 44.1859, -73.9434, -116.348, 1.33 ) }
    dend_9 { pt3dadd( 44.1331, -76.6479, -125.473, 0.33 ) }
    dend_9 { pt3dadd( 44.0412, -77.5425, -128.687, 0.67 ) }
    dend_9 { pt3dadd( 43.2478, -80.8855, -142.303, 0.33 ) }
    dend_9 { pt3dadd( 43.0, -81.5085, -145.092, 1.33 ) }
    dend_9 { pt3dadd( 41.9194, -82.7505, -151.454, 0.33 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 76/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 3.58807, -31.132, 12.9203, 0.67 ) }
    dend_23 { pt3dadd( 5.69225, -34.152, 15.918, 0.67 ) }
    dend_23 { pt3dadd( 8.2425, -37.987, 19.3306, 0.67 ) }
    dend_23 { pt3dadd( 10.1906, -40.6544, 21.3029, 0.67 ) }
    dend_23 { pt3dadd( 12.0024, -43.027, 23.0573, 0.67 ) }
    dend_23 { pt3dadd( 12.7977, -44.0803, 23.8028, 0.67 ) }
    dend_23 { pt3dadd( 13.7049, -45.4282, 24.7687, 0.33 ) }
    dend_23 { pt3dadd( 14.8662, -47.3062, 26.0825, 0.67 ) }
    dend_23 { pt3dadd( 16.5927, -49.9707, 28.0358, 0.33 ) }
    dend_23 { pt3dadd( 18.2029, -52.9649, 29.7635, 0.67 ) }
    dend_23 { pt3dadd( 18.7615, -54.2058, 30.4473, 0.33 ) }
    dend_23 { pt3dadd( 20.2529, -57.332, 32.4763, 0.67 ) }
    dend_23 { pt3dadd( 21.7374, -60.7198, 35.2268, 0.33 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 89/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 3.58807, -31.132, 12.9203, 0.67 ) }
    dend_20 { pt3dadd( 9.3848, -32.9621, 15.5418, 0.67 ) }
    dend_20 { pt3dadd( 13.4664, -34.2507, 17.3877, 0.67 ) }
    dend_20 { pt3dadd( 19.5129, -36.1596, 20.1222, 0.67 ) }
    dend_20 { pt3dadd( 23.953, -37.5614, 22.1303, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 94/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 30.3653, -144.876, -48.9687, 0.33 ) }
    dend_14 { pt3dadd( 32.2146, -148.878, -48.9632, 0.33 ) }
    dend_14 { pt3dadd( 32.3512, -149.168, -48.9437, 0.67 ) }
    dend_14 { pt3dadd( 34.6027, -153.981, -48.4727, 0.33 ) }
    dend_14 { pt3dadd( 35.0279, -154.856, -48.3937, 0.67 ) }
    dend_14 { pt3dadd( 36.3637, -157.548, -48.1663, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 36.5118, -157.841, -48.1458, 0.67 ) }
    dend_14 { pt3dadd( 37.9056, -160.604, -48.0518, 0.33 ) }
    dend_14 { pt3dadd( 38.3333, -161.528, -48.0981, 1.33 ) }
    dend_14 { pt3dadd( 40.075, -165.46, -48.5824, 0.33 ) }
    dend_14 { pt3dadd( 40.2387, -165.87, -48.6553, 0.67 ) }
    dend_14 { pt3dadd( 41.1622, -168.391, -49.3308, 0.33 ) }
    dend_14 { pt3dadd( 41.5876, -169.695, -49.7679, 0.67 ) }
    dend_14 { pt3dadd( 43.0024, -174.577, -51.7774, 0.33 ) }
    dend_14 { pt3dadd( 43.2296, -175.49, -52.1546, 0.67 ) }
    dend_14 { pt3dadd( 43.5972, -177.347, -52.9106, 0.33 ) }
    dend_14 { pt3dadd( 43.8913, -178.984, -53.5649, 0.67 ) }
    dend_14 { pt3dadd( 44.1815, -180.784, -54.2711, 0.33 ) }
    dend_14 { pt3dadd( 44.3883, -182.055, -54.7354, 0.67 ) }
    dend_14 { pt3dadd( 44.8864, -184.84, -55.5328, 0.33 ) }
    dend_14 { pt3dadd( 45.101, -186.202, -55.9111, 1.33 ) }
    dend_14 { pt3dadd( 45.5576, -188.957, -56.6456, 0.33 ) }
    dend_14 { pt3dadd( 45.5576, -188.957, -56.6456, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 17/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 30.3653, -144.876, -48.9687, 0.67 ) }
    dend_13 { pt3dadd( 29.9157, -147.278, -50.1741, 0.67 ) }
    dend_13 { pt3dadd( 29.4853, -148.875, -51.0705, 0.33 ) }
    dend_13 { pt3dadd( 29.3327, -149.478, -51.3799, 0.67 ) }
    dend_13 { pt3dadd( 28.3849, -153.462, -53.3401, 0.33 ) }
    dend_13 { pt3dadd( 28.3199, -153.762, -53.5045, 0.67 ) }
    dend_13 { pt3dadd( 27.3422, -158.666, -56.3248, 0.33 ) }
    dend_13 { pt3dadd( 26.9569, -161.522, -58.1807, 1.33 ) }
    dend_13 { pt3dadd( 26.6894, -164.769, -60.4513, 0.33 ) }
    dend_13 { pt3dadd( 26.6906, -165.168, -60.7298, 0.67 ) }
    dend_13 { pt3dadd( 26.9994, -168.907, -63.2814, 0.33 ) }
    dend_13 { pt3dadd( 27.0595, -169.289, -63.5751, 0.67 ) }
    dend_13 { pt3dadd( 28.3009, -174.292, -67.8046, 0.33 ) }
    dend_13 { pt3dadd( 28.7211, -175.734, -68.9517, 1.33 ) }
    dend_13 { pt3dadd( 29.6291, -178.651, -71.2729, 0.33 ) }
    dend_13 { pt3dadd( 29.9201, -179.522, -71.8992, 1.33 ) }
    dend_13 { pt3dadd( 31.4914, -183.923, -74.696, 0.33 ) }
    dend_13 { pt3dadd( 31.8181, -184.806, -75.2684, 0.67 ) }
    dend_13 { pt3dadd( 32.9031, -187.598, -77.0731, 0.33 ) }
    dend_13 { pt3dadd( 33.1515, -188.219, -77.4896, 1.33 ) }
    dend_13 { pt3dadd( 35.7797, -194.611, -81.865, 0.33 ) }
    dend_13 { pt3dadd( 36.2027, -195.595, -82.5203, 0.67 ) }
    dend_13 { pt3dadd( 38.336, -200.289, -85.3542, 0.33 ) }
    dend_13 { pt3dadd( 38.4617, -200.561, -85.534, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 23.953, -37.5614, 22.1303, 0.67 ) }
    dend_22 { pt3dadd( 26.4424, -39.6815, 20.0697, 0.67 ) }
    dend_22 { pt3dadd( 28.5117, -40.9171, 18.2977, 0.67 ) }
    dend_22 { pt3dadd( 31.1157, -42.2314, 16.1386, 0.67 ) }
    dend_22 { pt3dadd( 35.7436, -44.2598, 12.5962, 0.67 ) }
    dend_22 { pt3dadd( 38.2914, -45.2975, 10.8867, 0.67 ) }
    dend_22 { pt3dadd( 39.7068, -45.8346, 9.99903, 0.67 ) }
    dend_22 { pt3dadd( 46.8853, -48.1965, 5.61127, 0.67 ) }
    dend_22 { pt3dadd( 48.4196, -48.6393, 4.67386, 1.33 ) }
    dend_22 { pt3dadd( 51.9514, -49.6218, 2.50465, 0.67 ) }
    dend_22 { pt3dadd( 56.1657, -50.9717, 0.026944, 0.67 ) }
    dend_22 { pt3dadd( 58.3124, -51.7399, -1.23926, 1.33 ) }
    dend_22 { pt3dadd( 61.0677, -52.9894, -2.90062, 0.33 ) }
    dend_22 { pt3dadd( 63.5294, -54.3585, -4.39992, 0.67 ) }
    dend_22 { pt3dadd( 65.3518, -55.4842, -5.6401, 0.33 ) }
    dend_22 { pt3dadd( 66.8977, -56.6031, -6.89259, 0.67 ) }
    dend_22 { pt3dadd( 67.9281, -57.4564, -7.87794, 0.33 ) }
    dend_22 { pt3dadd( 69.0887, -58.473, -8.86983, 0.67 ) }
    dend_22 { pt3dadd( 73.1722, -61.6378, -11.4916, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 60/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 23.953, -37.5614, 22.1303, 0.67 ) }
    dend_21 { pt3dadd( 27.1228, -39.1044, 24.4799, 0.67 ) }
    dend_21 { pt3dadd( 29.8992, -40.4559, 26.538, 0.67 ) }
    dend_21 { pt3dadd( 32.3312, -41.6398, 28.3407, 0.67 ) }
    dend_21 { pt3dadd( 34.8612, -42.8714, 30.2162, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_32, dend_25, dend_0, dend_39, dend_38, dend_36, dend_33, dend_29, dend_26, dend_6, dend_1, dend_35, dend_34, dend_31, dend_30, dend_28, dend_27, dend_16, dend_7, dend_3, dend_2, dend_18, dend_17, dend_11, dend_8, dend_5, dend_4, dend_24, dend_19, dend_15, dend_12, dend_10, dend_9, dend_23, dend_20, dend_14, dend_13, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_40 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_39 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_38 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_36 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_33 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_34 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_31 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_30 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_28 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_27 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_7 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_5 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_12 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_23 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_22 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_26 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_19 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_20 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_24 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_11 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_21 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_16, dend_16, dend_16, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_40 nseg = 7
    dend_39 nseg = 7
    dend_38 nseg = 7
    dend_36 nseg = 13
    dend_33 nseg = 3
    dend_35 nseg = 5
    dend_34 nseg = 7
    dend_31 nseg = 7
    dend_30 nseg = 5
    dend_28 nseg = 5
    dend_27 nseg = 5
    dend_7 nseg = 3
    dend_2 nseg = 3
    dend_17 nseg = 3
    dend_8 nseg = 3
    dend_5 nseg = 5
    dend_4 nseg = 11
    dend_15 nseg = 7
    dend_12 nseg = 5
    dend_10 nseg = 3
    dend_9 nseg = 3
    dend_23 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_22 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L4_BTC_d656c19ac5_0_0


