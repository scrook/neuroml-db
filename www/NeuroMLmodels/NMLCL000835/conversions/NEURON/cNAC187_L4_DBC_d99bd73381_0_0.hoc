// Cell: cNAC187_L4_DBC_d99bd73381_0_0
/*
{
  "id" : "cNAC187_L4_DBC_d99bd73381_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.29752, -10.9202, 0.0, 2.7473", "-3.02947, -9.86122, 0.0, 4.90547", "-2.76143, -8.80223, 0.0, 7.1195", "-2.49339, -7.74324, 0.0, 9.06693", "-2.22534, -6.68425, 0.0, 10.5477", "-1.9573, -5.62526, 0.0, 11.7638", "-1.68926, -4.56627, 0.0, 12.6703", "-1.42121, -3.50728, 0.0, 13.5724", "-1.15317, -2.44829, 0.0, 13.9606", "-0.885125, -1.3893, 0.0, 14.249", "-0.617082, -0.330312, 0.0, 14.4914", "-0.349039, 0.728678, 0.0, 14.572", "-0.0809953, 1.78767, 0.0, 14.5168", "0.187048, 2.84666, 0.0, 14.1167", "0.455092, 3.90565, 0.0, 13.6161", "0.723135, 4.96464, 0.0, 12.8986", "0.991178, 6.02363, 0.0, 12.0703", "1.25922, 7.08262, 0.0, 10.8368", "1.52727, 8.14161, 0.0, 9.27498", "1.79531, 9.2006, 0.0, 7.02436", "2.06335, 10.2596, 0.0, 4.05122" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.851454, 10.6375, 1.7, 1.62", "0.851454, 10.6375, 1.7, 1.62", "0.752109, 12.8312, 1.63555, 0.96", "0.666965, 14.7114, 1.5803, 1.25", "0.548175, 17.3346, 1.50323, 1.55", "0.436999, 19.7896, 1.4311, 1.84", "0.324952, 22.2638, 1.35841, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.23855, -9.87948, -9.03, 1.18", "-1.70694, -10.0197, -9.12341, 1.18", "-0.394345, -10.5169, -9.37493, 1.18", "1.81199, -11.6241, -9.86167, 1.03", "2.94314, -12.2882, -10.1359, 0.96", "3.9206, -12.7408, -10.3348, 0.81", "2.81602, -13.0333, -10.354, 0.74", "2.00789, -13.6032, -10.5185, 0.74", "0.93705, -14.3516, -10.8027, 0.96", "-0.371599, -15.1935, -11.1949, 1.18", "-2.26247, -16.2876, -11.8202, 0.88", "-3.85097, -17.1201, -12.418, 0.96", "-5.50898, -17.9162, -13.0645, 1.25", "-6.66363, -18.4477, -13.5501, 1.99", "-7.79557, -18.9728, -14.0842, 2.95", "-8.89506, -19.5338, -14.7141, 3.54", "-9.82316, -20.0805, -15.3943, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.90855, -12.2315, 1.23, 0.81", "-1.79673, -12.8821, 1.20496, 0.81", "-1.61307, -13.6787, 1.17441, 0.96", "-1.39753, -14.4742, 1.14533, 1.18", "-1.16511, -15.2445, 1.11885, 1.18", "-0.887996, -16.0983, 1.11593, 0.81", "-0.710419, -16.6199, 1.13219, 1.03", "-0.439995, -17.3509, 1.20357, 1.47", "-0.251486, -17.8744, 1.29558, 2.06", "-0.103944, -18.3465, 1.41387, 2.14", "0.09326, -19.2242, 1.69311, 1.33", "0.208871, -20.3482, 2.10531, 0.96", "0.16974, -21.349, 2.49627, 0.96", "0.020308, -22.0641, 2.78297, 1.18", "-0.160729, -22.5927, 2.99812, 1.99", "-0.450186, -23.2452, 3.25955, 2.88", "-0.833046, -23.9861, 3.53817, 3.02", "-1.3696, -24.982, 3.88188, 1.77", "-2.10274, -26.4496, 4.32161, 0.81", "-2.46463, -27.305, 4.54823, 0.81", "-2.66034, -27.9134, 4.68761, 0.81", "-2.81587, -28.6525, 4.83976, 0.81", "-2.908, -29.4583, 5.00262, 0.81", "-2.92857, -30.135, 5.13502, 1.03", "-2.91691, -30.8033, 5.258, 1.25", "-2.8611, -32.049, 5.4766, 0.81", "-2.81259, -33.0419, 5.65914, 1.03", "-2.78818, -33.8346, 5.82016, 1.62", "-2.79819, -34.4885, 5.97121, 2.73", "-2.86237, -35.4106, 6.20871, 4.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.51145, 6.65802, 5.69, 0.59", "7.67126, 7.32326, 5.44771, 0.44", "8.80141, 8.04602, 5.55212, 0.44", "9.74646, 8.68167, 5.8953, 0.44", "10.7587, 9.35942, 6.45887, 0.37", "11.5144, 9.84082, 6.96659, 1.03", "12.7018, 10.5586, 7.87695, 1.33", "13.9557, 11.2855, 9.12653, 1.47", "14.8159, 11.7411, 10.1626, 1.25", "15.7523, 12.1152, 11.4411, 0.29", "16.355, 12.2281, 12.3268, 0.22", "16.8194, 12.2141, 12.9736, 0.22", "17.1161, 12.1057, 13.3125, 0.22", "17.4697, 11.9337, 13.6745, 0.22", "18.0213, 11.6791, 14.2124, 1.03", "19.1921, 11.2307, 15.3884, 2.21", "19.8406, 11.1187, 16.05, 3.02", "21.8907, 11.3305, 18.188, 0.29", "22.8338, 11.7201, 19.2271, 0.29", "23.3644, 12.095, 19.8296, 0.44", "23.8807, 12.6071, 20.4417, 0.66", "24.6761, 13.627, 21.4179, 1.11", "25.4056, 14.6879, 22.3529, 0.52", "25.9858, 15.6149, 23.041, 0.22", "26.3575, 16.0269, 23.4216, 0.22", "26.7222, 16.1587, 23.7632, 0.22", "27.0779, 16.0142, 24.0678, 0.22", "27.8925, 15.4632, 24.7288, 0.66", "28.7161, 14.8561, 25.3615, 1.7", "29.533, 14.2569, 26.0122, 2.21", "30.3041, 13.7548, 26.6866, 1.7", "31.3664, 13.2797, 27.7681, 0.29", "32.3432, 13.1339, 28.9974, 0.22", "32.7405, 13.2495, 29.6414, 0.22", "33.1371, 13.665, 30.6505, 0.22", "33.3557, 14.2754, 31.7557, 0.96", "33.4585, 15.3712, 33.4898, 0.74", "33.4028, 16.152, 34.697, 0.74", "33.3226, 16.5841, 35.4153, 0.74", "33.2388, 17.1655, 36.5958, 0.74", "33.2738, 17.4966, 37.3766, 0.74", "33.3563, 17.5783, 37.6501, 0.74", "33.9516, 17.7499, 38.5365, 0.74", "34.5771, 17.8814, 39.2432, 1.18", "35.6774, 18.0846, 40.3791, 0.44", "36.6803, 18.2742, 41.3079, 1.25", "38.0717, 18.5738, 42.5176, 2.73", "39.5584, 18.9491, 43.7873, 3.54", "40.3912, 19.1928, 44.4721, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.64855, 7.29852, 5.52, 0.88", "-5.02052, 7.70573, 5.69947, 0.74", "-5.59692, 8.29547, 6.04866, 0.22", "-5.97271, 8.65528, 6.30588, 0.22", "-6.46667, 9.08994, 6.64722, 0.44", "-6.87587, 9.41307, 6.9248, 0.44", "-7.40633, 9.76732, 7.28324, 0.22", "-7.95804, 10.0418, 7.6732, 0.22", "-8.23879, 10.1432, 7.86942, 0.22", "-8.63185, 10.2486, 8.13262, 0.96", "-9.24329, 10.37, 8.5506, 1.47", "-10.3329, 10.5492, 9.36074, 0.15", "-10.8204, 10.6259, 9.71261, 0.15", "-11.1709, 10.6971, 9.93079, 0.15", "-11.6977, 10.8153, 10.2343, 0.88", "-12.6355, 11.0443, 10.7575, 0.37", "-13.6433, 11.3137, 11.3089, 1.55", "-14.4542, 11.5573, 11.7452, 2.95", "-16.5334, 12.224, 12.8425, 0.07", "-16.922, 12.3469, 13.0437, 0.88", "-17.7307, 12.5981, 13.4346, 0.07", "-18.4927, 12.8273, 13.7411, 0.22", "-19.0207, 12.9824, 13.93, 0.22", "-20.1944, 13.3026, 14.334, 0.15", "-20.558, 13.3856, 14.4547, 0.96", "-21.0821, 13.491, 14.6018, 1.84", "-22.9605, 13.8054, 15.0187, 0.15", "-23.3776, 13.8528, 15.0968, 0.66", "-24.0381, 13.9002, 15.2104, 1.18", "-25.6422, 13.9568, 15.4705, 0.15", "-26.2383, 13.9527, 15.5576, 1.33", "-27.0334, 13.9148, 15.667, 2.51", "-29.2707, 13.7112, 15.9557, 0.15", "-29.633, 13.6675, 15.9877, 0.52", "-30.296, 13.5675, 16.016, 0.81", "-31.3366, 13.3854, 16.0083, 0.15", "-31.8638, 13.2886, 15.9972, 0.15", "-32.2667, 13.2162, 15.9774, 0.66", "-33.5037, 13.0118, 15.876, 1.84", "-34.7238, 12.8528, 15.7909, 0.22", "-35.3456, 12.7925, 15.7644, 0.37", "-35.6149, 12.775, 15.7605, 0.88", "-36.6213, 12.7297, 15.7954, 0.15", "-37.1724, 12.721, 15.8392, 0.15", "-37.774, 12.7317, 15.9242, 0.74", "-39.5478, 12.8028, 16.2992, 0.07", "-39.8808, 12.8242, 16.3849, 0.52", "-41.0187, 12.9346, 16.725, 0.15", "-41.5554, 13.0042, 16.9101, 0.96", "-42.2255, 13.1071, 17.1637, 1.92", "-43.6719, 13.4091, 17.7429, 0.15", "-44.2755, 13.574, 17.9899, 0.22", "-44.9963, 13.7947, 18.2654, 0.07", "-45.4754, 13.972, 18.4292, 1.03", "-45.9742, 14.1745, 18.5875, 1.77", "-47.488, 14.8361, 19.0205, 0.07", "-48.1087, 15.1308, 19.1817, 0.07", "-48.5346, 15.332, 19.3013, 0.74", "-49.6915, 15.8862, 19.636, 0.07", "-50.0483, 16.0546, 19.7408, 0.52", "-51.014, 16.4442, 20.049, 0.07", "-51.6029, 16.6199, 20.256, 0.22", "-52.246, 16.7365, 20.4889, 0.15", "-52.5103, 16.7461, 20.5835, 0.96", "-53.1481, 16.6792, 20.8039, 1.92", "-54.445, 16.4397, 21.2278, 0.07", "-55.0773, 16.2754, 21.4105, 0.29", "-55.7748, 16.0987, 21.5747, 0.07", "-56.4622, 15.9679, 21.7008, 0.07", "-56.7333, 15.9345, 21.7456, 0.07", "-56.9926, 15.9156, 21.7815, 0.44", "-57.545, 15.9079, 21.8386, 0.74", "-58.9097, 15.9071, 21.9682, 0.07", "-59.9922, 15.9091, 22.0758, 0.15", "-60.7435, 15.9062, 22.1518, 0.96", "-61.6662, 15.8617, 22.2561, 0.07", "-62.4059, 15.7908, 22.3457, 0.59", "-63.112, 15.6764, 22.4402, 0.15", "-63.4444, 15.5967, 22.488, 0.74", "-63.9443, 15.4488, 22.5611, 1.18", "-65.5089, 14.945, 22.734, 0.15", "-66.0278, 14.7797, 22.7783, 0.81", "-66.8153, 14.5317, 22.8219, 0.15", "-67.279, 14.3877, 22.8367, 0.22", "-68.4782, 14.0162, 22.8515, 0.07", "-69.223, 13.7848, 22.8482, 1.03", "-69.7466, 13.6313, 22.8352, 1.84", "-71.4926, 13.1833, 22.7943, 0.07", "-71.8437, 13.1127, 22.7871, 0.22", "-73.4992, 12.8753, 22.7801, 0.07", "-73.7131, 12.8532, 22.7841, 0.66", "-74.1881, 12.8159, 22.8182, 1.25", "-74.9892, 12.7725, 22.8892, 0.15", "-75.6368, 12.7706, 22.9588, 0.74", "-76.6938, 12.764, 23.1111, 0.07", "-77.4006, 12.757, 23.2381, 0.07", "-78.124, 12.7382, 23.3795, 0.07", "-78.267, 12.7367, 23.4133, 0.07", "-78.8517, 12.7516, 23.5731, 0.74", "-79.9667, 12.8142, 23.9489, 0.07", "-80.2762, 12.8515, 24.0715, 1.11", "-80.9286, 12.9532, 24.3633, 1.62", "-82.0989, 13.0782, 24.944, 0.07", "-82.704, 13.1168, 25.2629, 0.81", "-83.6577, 13.1341, 25.7869, 0.15", "-84.4249, 13.1047, 26.2369, 0.15", "-85.2204, 13.0245, 26.723, 1.11", "-86.9967, 12.7233, 27.8347, 0.15", "-87.4034, 12.6291, 28.0869, 1.03", "-88.1453, 12.4328, 28.5412, 1.84", "-89.4166, 12.0576, 29.281, 0.22", "-89.6448, 11.983, 29.4145, 0.22", "-90.1083, 11.8298, 29.6883, 0.07", "-90.4472, 11.7212, 29.8954, 0.59", "-91.1518, 11.4894, 30.349, 0.07", "-91.6109, 11.3273, 30.652, 0.29", "-92.0696, 11.1392, 30.957, 0.07", "-92.5928, 10.8933, 31.3111, 0.37", "-93.3324, 10.5066, 31.8175, 0.07", "-93.8642, 10.1937, 32.1859, 0.66", "-94.4474, 9.75662, 32.5728, 0.07", "-94.9719, 9.28872, 32.9086, 0.96", "-95.8576, 8.33249, 33.4451, 0.07", "-96.3246, 7.68607, 33.7025, 0.07", "-96.6214, 7.1454, 33.8419, 1.03", "-97.3559, 5.21919, 34.1482, 0.15", "-97.5326, 4.59005, 34.2024, 0.15", "-97.7023, 3.77412, 34.2296, 1.11", "-97.8988, 2.4193, 34.2242, 0.15", "-98.0325, 1.26174, 34.1963, 1.84", "-98.2694, -0.997924, 34.1244, 0.15", "-98.3176, -1.49476, 34.1094, 0.59", "-98.4071, -2.26543, 34.1118, 1.03", "-98.6536, -3.94822, 34.2094, 0.15", "-98.7529, -4.49729, 34.2985, 0.52", "-98.9702, -5.53139, 34.5568, 0.15", "-99.0986, -6.13765, 34.7656, 0.66", "-99.263, -7.06517, 35.1609, 0.15", "-99.3884, -8.11208, 35.677, 1.62", "-99.4441, -9.60861, 36.4934, 0.07", "-99.4204, -10.1613, 36.79, 0.29", "-99.3035, -11.1709, 37.2848, 0.07", "-99.2038, -11.7204, 37.5075, 0.96", "-99.0246, -12.6061, 37.733, 2.21", "-98.8644, -13.385, 37.8376, 1.33", "-98.6796, -14.4924, 37.8788, 0.07", "-98.5616, -15.4897, 37.8648, 0.07", "-98.5115, -16.2541, 37.8226, 1.03", "-98.4291, -18.0796, 37.6866, 0.07", "-98.422, -18.6689, 37.6351, 0.88", "-98.44, -20.0979, 37.5024, 0.07", "-98.449, -20.6182, 37.451, 0.66", "-98.4543, -20.9731, 37.4211, 1.25", "-98.4778, -22.0789, 37.3508, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.06335, 10.2596, 0.0, 0.616897", "5.74396, 24.801, 0.0, 0.616897", "9.42458, 39.3425, 0.0, 0.616897" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.324952, 22.2638, 1.35841, 0.37", "1.03978, 23.1084, 1.92723, 0.37", "1.26371, 23.3444, 2.11385, 0.37", "1.67466, 23.7995, 2.50897, 0.37", "2.1533, 24.4745, 3.07231, 0.22", "2.26165, 24.7308, 3.28393, 0.22", "2.24783, 25.0342, 3.55062, 0.22", "2.12647, 25.2159, 3.74493, 0.22", "1.88256, 25.5055, 4.03588, 0.22", "1.45565, 25.9886, 4.52791, 0.22", "1.18622, 26.2996, 4.85271, 0.22", "0.760109, 26.8732, 5.43359, 0.66", "0.364264, 27.552, 6.10789, 1.03", "-0.0514837, 28.4104, 6.99712, 0.22", "-0.294518, 29.0046, 7.67315, 0.22", "-0.426612, 29.4224, 8.21478, 0.88", "-0.528125, 29.8513, 8.84305, 1.47", "-0.630181, 30.5228, 9.97853, 0.15", "-0.667647, 31.0589, 10.9117, 0.15", "-0.683982, 31.6098, 11.8292, 0.15", "-0.748492, 32.1451, 12.6237, 0.15", "-0.884731, 32.6793, 13.3753, 0.15", "-1.17259, 33.3166, 14.2176, 0.15", "-1.82075, 34.2973, 15.3312, 0.96", "-2.25663, 34.851, 15.8813, 2.06", "-3.06927, 35.7391, 16.6288, 0.22", "-3.41086, 36.1025, 16.8944, 0.22", "-3.74993, 36.431, 17.1318, 0.22", "-4.27883, 36.8796, 17.5155, 0.22", "-4.88199, 37.325, 18.0514, 0.22", "-5.26726, 37.6049, 18.4275, 1.33", "-5.8111, 38.158, 19.1275, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.324952, 22.2638, 1.35841, 1.25", "-0.10398, 23.265, 1.36376, 1.25", "-0.605161, 24.56, 1.44639, 0.81", "-0.951711, 25.6667, 1.59848, 0.81", "-1.20131, 26.7355, 1.80372, 1.11", "-1.34651, 27.7303, 2.03556, 1.4", "-1.38029, 28.5816, 2.25929, 0.59", "-1.24958, 29.3947, 2.56923, 0.59", "-0.874763, 30.3539, 3.02716, 0.52", "-0.540831, 30.9302, 3.32766, 0.59", "-0.14805, 31.5112, 3.64629, 0.59", "0.372344, 32.275, 4.07983, 0.44", "0.649245, 32.7467, 4.34978, 0.44", "0.730012, 33.0147, 4.48594, 0.44", "0.720987, 33.4932, 4.7263, 0.52", "0.579527, 34.2155, 5.13887, 0.66", "0.409409, 34.8097, 5.50905, 0.29", "0.274177, 35.2463, 5.80889, 0.29", "0.137327, 35.8084, 6.19122, 0.37", "0.00325374, 36.5379, 6.66805, 0.88", "-0.116231, 37.2924, 7.15014, 1.62", "-0.203466, 37.9899, 7.5798, 2.43", "-0.272254, 38.7809, 8.05033, 2.43", "-0.339309, 40.1017, 8.80295, 0.22", "-0.346513, 40.7249, 9.14472, 0.52", "-0.339964, 41.3545, 9.4563, 0.22", "-0.331704, 41.6888, 9.59345, 0.22", "-0.315553, 42.1181, 9.73798, 0.22", "-0.298354, 42.6409, 9.8617, 0.22", "-0.292978, 42.9902, 9.92393, 0.22", "-0.295339, 43.2195, 9.95657, 0.22", "-0.348947, 44.0372, 10.0286, 0.37", "-0.433061, 44.7324, 10.0576, 0.37", "-0.542629, 45.3962, 10.0573, 0.52", "-0.662419, 46.0676, 10.0381, 0.96", "-0.797192, 46.8716, 9.98239, 0.96", "-0.972083, 48.1008, 9.82412, 0.44", "-1.03444, 48.9023, 9.66449, 0.44", "-1.08087, 49.7345, 9.46216, 1.47", "-1.12364, 50.603, 9.22431, 2.8", "-1.16641, 51.4052, 8.98008, 3.61", "-1.21828, 52.2373, 8.69568, 3.02", "-1.35055, 54.1852, 7.94867, 0.22", "-1.40228, 54.7801, 7.70281, 0.29", "-1.43297, 55.1036, 7.56643, 0.29", "-1.50701, 55.735, 7.28926, 0.22", "-1.61436, 56.492, 6.95624, 0.52", "-1.72111, 57.1221, 6.67746, 1.33", "-1.88554, 57.9118, 6.27744, 2.43", "-1.96872, 58.6437, 5.88832, 2.43" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-9.82316, -20.0805, -15.3943, 0.44", "-11.3995, -21.1203, -16.2145, 0.44", "-11.4805, -21.4537, -16.4966, 0.44", "-11.5341, -21.8021, -16.8107, 0.44", "-11.6223, -22.1765, -17.1542, 0.44", "-11.7757, -22.6089, -17.5678, 0.59", "-12.0524, -23.1935, -18.1792, 0.74", "-12.2349, -23.59, -18.653, 1.11", "-12.4957, -24.0224, -19.2481, 1.47", "-12.8149, -24.4042, -19.8726, 1.47", "-13.352, -24.8452, -20.7648, 0.59", "-13.8145, -25.0663, -21.4184, 0.52", "-14.1764, -25.1259, -21.8581, 0.52", "-14.6008, -25.112, -22.2955, 0.44", "-15.0763, -25.0413, -22.6714, 0.44", "-15.3302, -24.9944, -22.8312, 0.44", "-15.9622, -24.9021, -23.1367, 0.96", "-16.5575, -24.842, -23.3853, 0.96", "-17.255, -24.812, -23.6473, 1.4", "-18.1468, -24.8236, -23.9588, 2.36", "-18.8723, -24.8704, -24.1993, 3.32", "-19.7224, -24.9402, -24.4941, 3.61" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-9.82316, -20.0805, -15.3943, 0.29", "-9.57941, -21.8706, -15.9626, 0.29", "-9.46211, -22.4831, -16.1677, 0.29", "-9.30523, -23.2855, -16.455, 0.29", "-9.18616, -23.9538, -16.7277, 0.81", "-9.06971, -24.6712, -17.0532, 1.11", "-8.92997, -25.7023, -17.5903, 0.22", "-8.79035, -26.4546, -18.0798, 0.22", "-8.75294, -26.8832, -18.4224, 0.22", "-8.75799, -27.4642, -18.9622, 0.22", "-8.75509, -27.7864, -19.1903, 0.37", "-8.72769, -28.4083, -19.5653, 0.37", "-8.68555, -28.9159, -19.8185, 0.81", "-8.60229, -29.6524, -20.1136, 1.7", "-8.48584, -30.6841, -20.4974, 2.29", "-8.2242, -32.9325, -21.2623, 0.29", "-8.12921, -33.6976, -21.4887, 0.96", "-8.05764, -34.211, -21.6171, 0.96", "-7.85909, -35.4036, -21.8782, 0.15", "-7.6986, -36.1642, -21.9986, 0.15", "-7.57508, -36.6764, -22.0587, 0.59", "-7.27924, -37.6612, -22.1281, 0.29", "-7.06502, -38.2903, -22.1379, 1.4", "-6.71974, -39.2316, -22.1216, 2.73", "-5.86776, -41.4107, -22.0037, 0.15", "-5.73422, -41.7437, -21.9797, 0.74", "-5.48812, -42.348, -21.9492, 0.74", "-5.08667, -43.2758, -21.9253, 0.15", "-4.71537, -44.113, -21.9158, 0.15", "-4.4017, -44.8421, -21.9202, 0.15", "-4.12934, -45.493, -21.9583, 1.25", "-3.75861, -46.4694, -22.0719, 0.22", "-3.5603, -47.1373, -22.1989, 0.22", "-3.50205, -47.4813, -22.2836, 0.22", "-3.49184, -47.9759, -22.4032, 0.22", "-3.5562, -48.8745, -22.6012, 0.44", "-3.66406, -49.7191, -22.7674, 1.62", "-3.79392, -50.6241, -22.9308, 3.02", "-3.93831, -51.719, -23.1159, 3.02", "-4.20605, -54.1718, -23.5275, 0.29", "-4.28033, -55.0739, -23.6691, 0.81", "-4.32322, -55.86, -23.7757, 1.03", "-4.34304, -56.6782, -23.8797, 0.37", "-4.34388, -57.3127, -23.9415, 1.18", "-4.29949, -58.5943, -24.0393, 0.22", "-4.24944, -59.0844, -24.0615, 0.74", "-4.1831, -59.487, -24.0613, 0.74", "-4.0852, -59.9177, -24.0345, 0.15", "-3.79871, -61.0825, -23.8852, 0.44", "-3.70659, -61.3732, -23.8326, 0.44", "-3.37231, -62.2648, -23.6467, 0.22", "-3.17249, -62.7898, -23.5526, 1.11", "-3.02864, -63.234, -23.4891, 1.62", "-2.82254, -63.9752, -23.405, 1.62", "-2.46328, -65.6757, -23.3063, 0.22", "-2.37113, -66.5333, -23.2712, 0.96", "-2.4084, -67.4158, -23.2515, 1.18", "-2.68012, -68.9672, -23.2649, 0.15", "-2.80459, -69.4858, -23.2789, 0.22", "-3.2207, -70.6752, -23.3516, 0.07", "-3.51892, -71.1918, -23.4175, 0.22", "-4.2989, -72.1969, -23.5894, 0.07", "-4.64677, -72.527, -23.6667, 0.15", "-4.49813, -81.9469, -25.5591, 0.15", "-5.70041, -91.3305, -27.2676, 0.15", "-4.93494, -100.824, -28.5838, 0.15", "-3.36925, -110.095, -30.4637, 0.15", "-1.70661, -119.08, -33.2779, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.86237, -35.4106, 6.20871, 1.99", "-3.20067, -36.7979, 6.17752, 1.99", "-3.59837, -38.72, 6.14461, 0.59", "-3.78901, -39.817, 6.13017, 0.59", "-3.96915, -41.1328, 6.13075, 0.59", "-4.02999, -41.7774, 6.13775, 1.11", "-4.08892, -42.9505, 6.17533, 2.58", "-4.05775, -43.5266, 6.20714, 2.88", "-3.99238, -44.0246, 6.24998, 2.65", "-3.89366, -44.7877, 6.34374, 1.55", "-3.76759, -45.8607, 6.51393, 0.74", "-3.68517, -46.8837, 6.68785, 0.44", "-3.66072, -47.7793, 6.84534, 0.29", "-3.68231, -48.4727, 6.97297, 0.29", "-3.75604, -49.3571, 7.14993, 0.29", "-3.7792, -49.6371, 7.20835, 0.29", "-3.82796, -50.154, 7.31967, 0.44", "-3.88623, -50.6656, 7.42196, 1.11", "-3.9533, -51.2438, 7.54484, 2.36", "-4.06615, -52.4468, 7.79926, 2.73", "-4.19967, -54.6884, 8.27479, 0.44", "-4.21982, -55.13, 8.37744, 0.44", "-4.25525, -55.9817, 8.591, 0.59", "-4.28233, -56.8012, 8.81042, 0.29", "-4.2958, -57.3139, 8.95099, 0.29", "-4.27978, -57.7918, 9.07731, 0.29", "-4.22679, -58.2873, 9.22978, 0.29", "-4.14949, -58.6701, 9.36543, 0.88", "-3.99418, -59.2059, 9.57673, 1.84", "-3.81429, -59.7165, 9.78826, 2.14", "-3.27409, -61.1745, 10.4317, 0.44", "-3.03913, -61.8273, 10.7273, 0.66", "-2.76173, -62.6012, 11.1059, 0.29", "-2.65917, -62.8788, 11.2632, 0.29", "-2.56005, -63.1665, 11.4588, 0.29", "-2.51577, -63.3501, 11.6134, 0.29", "-2.5461, -63.5452, 11.7843, 0.29", "-2.67685, -63.9724, 11.9794, 0.29", "-2.77364, -64.298, 12.0684, 0.29", "-2.87342, -64.6858, 12.1515, 0.29", "-3.02062, -65.3052, 12.264, 1.18", "-3.15388, -65.9401, 12.3897, 2.43", "-3.28236, -66.6764, 12.5511, 2.88", "-3.43688, -67.8155, 12.8286, 1.55", "-3.56675, -69.263, 13.2434, 0.52", "-3.61262, -70.1789, 13.5546, 0.29", "-3.63354, -70.91, 13.8396, 0.29", "-3.63527, -71.5052, 14.0966, 0.66", "-3.6254, -71.9882, 14.3183, 0.96", "-3.59368, -72.6235, 14.5856, 0.22", "-3.55751, -73.2239, 14.7653, 0.22", "-3.52534, -73.8689, 14.8626, 0.29", "-3.49363, -74.4592, 14.8903, 0.59", "-3.45203, -75.3992, 14.8858, 1.33", "-3.41198, -76.4576, 14.8499, 2.21", "-3.37719, -77.3013, 14.8077, 3.24", "-3.28959, -78.7839, 14.7264, 1.77", "-3.20154, -80.0224, 14.6697, 0.44", "-3.13888, -80.8978, 14.6391, 0.37", "-3.07796, -81.8884, 14.618, 0.37", "-3.04475, -82.533, 14.6165, 0.88", "-3.03641, -82.8267, 14.6176, 1.77", "-3.04773, -83.7682, 14.6157, 3.1", "-3.15924, -85.2267, 14.6023, 1.33", "-3.30922, -86.2256, 14.5855, 0.74", "-3.58136, -87.3925, 14.5563, 0.22", "-3.72635, -87.8682, 14.5411, 0.22", "-3.84938, -88.2107, 14.5292, 0.52", "-4.2014, -89.0259, 14.4991, 0.81", "-4.64213, -89.9069, 14.4952, 0.29", "-4.77639, -90.1735, 14.501, 0.37", "-5.06248, -90.8046, 14.5268, 0.37", "-5.34198, -91.5616, 14.622, 0.44", "-5.60263, -92.4327, 14.7987, 0.81", "-5.83674, -93.4685, 15.0784, 0.81", "-5.97517, -94.2781, 15.3344, 0.81", "-6.14596, -95.3138, 15.6899, 0.37", "-6.35903, -96.5623, 16.1739, 0.37", "-6.46179, -97.1925, 16.4542, 1.18", "-6.5342, -97.8022, 16.7676, 2.8", "-6.562, -98.3203, 17.0668, 3.32" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.86237, -35.4106, 6.20871, 0.66", "-1.14518, -36.9052, 6.69343, 0.66", "-0.0442978, -38.0057, 7.0067, 0.44", "0.70554, -38.8801, 7.22055, 0.88", "1.19952, -39.5553, 7.36296, 0.44", "1.58695, -40.1813, 7.46731, 0.22", "1.94461, -40.8818, 7.56446, 0.22", "2.12161, -41.6146, 7.60466, 0.22", "2.21254, -42.2931, 7.63338, 0.22", "2.24306, -42.9032, 7.68004, 0.59", "2.2593, -43.7945, 7.80205, 1.7", "2.25701, -44.9678, 8.01526, 1.47", "2.25474, -46.9973, 8.45549, 0.44", "2.28561, -48.0862, 8.71023, 0.29", "2.30991, -48.7791, 8.8782, 0.22", "2.34673, -49.5597, 9.0544, 0.22", "2.38347, -50.1118, 9.17726, 0.96", "2.48038, -51.1785, 9.3819, 2.51", "2.63333, -52.3687, 9.59266, 3.39", "2.81802, -53.4958, 9.75725, 3.1", "3.14863, -55.008, 9.97054, 1.03", "3.51509, -56.4578, 10.1766, 0.29", "3.81463, -57.4918, 10.3479, 0.22", "4.02878, -58.1624, 10.4766, 0.22", "4.15422, -58.545, 10.5634, 0.22", "4.34752, -59.1033, 10.7003, 0.29", "4.5531, -59.7244, 10.8435, 0.22", "4.73819, -60.4729, 10.9265, 0.29", "4.81697, -60.8651, 10.9419, 0.81", "5.01949, -62.0226, 10.9171, 1.55", "5.17172, -62.9691, 10.8617, 2.29", "5.30661, -63.8032, 10.7908, 2.06", "5.63579, -65.5572, 10.6354, 0.22", "5.77917, -66.1425, 10.5985, 0.22", "5.9148, -66.5677, 10.5929, 0.22", "5.99106, -66.7568, 10.6035, 0.22", "6.26677, -67.341, 10.685, 0.81", "6.70576, -68.2088, 10.8543, 1.84", "7.14133, -69.0918, 11.0823, 2.8", "7.58594, -70.1198, 11.4001, 1.77", "7.92356, -71.0684, 11.7121, 0.81", "8.29874, -72.2907, 12.1312, 0.22", "8.49469, -72.9965, 12.3704, 0.29", "8.65946, -73.6933, 12.6095, 0.29", "8.86374, -74.9258, 13.0536, 0.59", "8.97266, -76.0539, 13.5008, 1.47", "8.99089, -76.6257, 13.7581, 1.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "40.3912, 19.1928, 44.4721, 0.22", "41.3213, 19.6326, 45.843, 0.22", "41.9486, 19.9293, 46.7678, 0.22", "42.8265, 20.3445, 48.0617, 1.47", "43.1689, 20.5065, 48.5665, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "40.3912, 19.1928, 44.4721, 0.29", "41.8465, 18.2211, 45.576, 0.29", "42.7086, 17.5388, 46.2242, 0.15", "43.0622, 17.2582, 46.4677, 0.22", "43.7749, 16.6997, 46.922, 0.22", "44.6208, 16.0138, 47.4604, 0.22", "45.2829, 15.4877, 47.8534, 0.22", "46.1912, 14.7365, 48.3517, 0.22", "47.094, 13.9847, 48.8117, 0.22", "48.0396, 13.2462, 49.2464, 0.22", "49.2203, 12.4306, 49.6925, 0.15", "50.3089, 11.7669, 50.0151, 0.15", "50.8494, 11.4732, 50.1487, 0.15", "51.5071, 11.1138, 50.2905, 0.66", "52.1687, 10.7406, 50.413, 1.25", "53.2571, 10.137, 50.571, 0.15", "53.8095, 9.83972, 50.6372, 0.15", "54.7221, 9.3548, 50.7292, 0.88", "55.9816, 8.69921, 50.8351, 0.15", "56.5079, 8.43526, 50.8697, 0.44", "57.1954, 8.09328, 50.924, 1.18", "58.6027, 7.39623, 51.0664, 0.07", "59.6407, 6.91372, 51.1868, 0.07", "60.4526, 6.53888, 51.3123, 1.47", "60.9222, 6.33533, 51.4054, 1.47", "62.4468, 5.65662, 51.7582, 0.15", "63.1025, 5.33946, 51.9518, 1.11", "63.635, 5.05367, 52.1439, 1.47", "65.2578, 4.09508, 52.8284, 0.07", "66.1118, 3.51478, 53.2305, 0.15", "66.7167, 3.05129, 53.5425, 0.22", "67.5416, 2.34667, 54.0338, 0.07", "68.0177, 1.92158, 54.3494, 1.18", "68.5717, 1.43236, 54.7366, 1.77", "69.8435, 0.330163, 55.6358, 0.07", "70.5734, -0.189923, 56.0859, 0.15", "71.9159, -0.902969, 56.8128, 0.74", "72.9848, -1.27667, 57.3035, 0.15", "73.6679, -1.39214, 57.5739, 0.81", "74.3754, -1.40214, 57.8157, 2.14", "76.9435, -1.049, 58.5481, 0.15", "77.8421, -0.817604, 58.7859, 0.15", "78.5586, -0.559687, 58.9736, 0.37", "79.8601, 0.0133119, 59.3813, 0.07", "80.3739, 0.276726, 59.5963, 0.88", "80.8286, 0.558923, 59.8412, 1.25", "81.9698, 1.47087, 60.7245, 0.07", "82.5107, 1.9842, 61.2652, 1.11", "82.9555, 2.48154, 61.8464, 1.55", "83.5242, 3.13935, 62.7798, 0.07", "83.7865, 3.43, 63.2694, 0.74", "84.2556, 3.94826, 64.272, 0.15", "84.6212, 4.36357, 65.1541, 0.81", "85.0137, 4.79347, 66.1363, 1.25", "85.654, 5.42915, 67.7456, 0.22", "85.932, 5.66585, 68.4499, 0.22", "86.0863, 5.75757, 68.8121, 0.22", "86.4588, 5.88059, 69.5767, 0.15", "86.8366, 5.93581, 70.2883, 0.81", "87.7107, 5.90794, 71.7158, 0.22", "88.4381, 5.82804, 72.7726, 0.22", "89.0923, 5.69057, 73.6003, 1.62", "89.8372, 5.47446, 74.4506, 0.15", "90.3946, 5.28578, 75.0259, 0.96", "91.8075, 4.81019, 76.2632, 0.07", "92.7387, 4.51928, 76.9814, 0.59", "93.9888, 4.19324, 77.904, 0.07", "94.8915, 4.00358, 78.5758, 0.07", "95.4625, 3.90372, 79.0023, 1.25", "97.2306, 3.7075, 80.2873, 0.07", "98.1518, 3.67918, 80.9114, 0.81", "99.6196, 3.75032, 81.8704, 0.07", "100.072, 3.82312, 82.1692, 0.07", "100.629, 3.9681, 82.5443, 1.03", "101.797, 4.3391, 83.3542, 0.07", "102.872, 4.79707, 84.1239, 0.07", "104.03, 5.365, 84.9164, 0.07", "104.748, 5.78695, 85.3821, 0.66", "105.247, 6.09854, 85.7167, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.42458, 39.3425, 0.0, 0.181554", "13.1052, 53.8839, 0.0, 0.181554", "16.7858, 68.4253, 0.0, 0.181554" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-5.8111, 38.158, 19.1275, 0.22", "-7.38859, 38.7789, 20.1336, 0.22", "-7.97621, 39.12, 20.5234, 0.22", "-8.43142, 39.5116, 20.9185, 0.15", "-8.8064, 39.9117, 21.3324, 0.15", "-9.06063, 40.2185, 21.6219, 0.15", "-9.46879, 40.8473, 22.1733, 0.66", "-9.78314, 41.422, 22.65, 0.22", "-10.291, 42.3095, 23.4027, 0.22", "-10.6926, 42.9998, 24.0021, 1.62", "-11.1808, 43.8363, 24.7679, 3.1", "-12.4955, 45.9323, 26.8045, 0.29", "-13.047, 46.7243, 27.6281, 0.22", "-13.3115, 47.0725, 27.9907, 0.22", "-13.3836, 47.1667, 28.0838, 0.22", "-13.6963, 47.5729, 28.4893, 0.22", "-14.0405, 47.9906, 28.9541, 0.22", "-14.5769, 48.4841, 29.5632, 0.22", "-15.118, 49.0578, 30.2095, 0.88", "-15.4084, 49.3919, 30.5462, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-5.8111, 38.158, 19.1275, 0.22", "-3.79212, 38.8539, 19.6734, 0.22", "-2.8569, 39.1762, 19.9263, 0.37", "-2.04442, 39.4563, 20.146, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-1.96872, 58.6437, 5.88832, 0.15", "-2.7251, 60.6357, 5.84474, 0.15", "-3.12218, 61.688, 5.87197, 0.81", "-3.4313, 62.4955, 5.86011, 1.18", "-4.07949, 64.1688, 5.80479, 0.22", "-4.41084, 65.0781, 5.76759, 0.81", "-4.60664, 65.663, 5.75788, 0.81", "-4.95128, 66.9432, 5.83837, 0.07", "-5.24633, 68.3136, 5.95373, 0.07", "-5.36662, 69.0372, 6.01349, 0.96", "-5.5177, 70.1666, 6.08906, 1.92", "-5.73477, 71.6877, 6.20939, 0.22", "-5.83484, 72.5003, 6.30262, 0.22", "-5.91169, 73.2358, 6.41285, 0.22", "-5.97864, 73.9271, 6.55169, 0.81", "-6.07121, 74.756, 6.72194, 1.11", "-6.33978, 76.5636, 7.07404, 0.15", "-6.56382, 77.9002, 7.28773, 0.15", "-6.66267, 78.4702, 7.36761, 0.74", "-6.82819, 79.6476, 7.51954, 1.92", "-6.8833, 80.1976, 7.58122, 2.88", "-6.95864, 81.4004, 7.72515, 1.84", "-7.00391, 83.2823, 7.97053, 0.22", "-7.01694, 84.5065, 8.13486, 0.59", "-7.00536, 85.3369, 8.24332, 0.59", "-6.96489, 86.4055, 8.36149, 0.22", "-6.89133, 87.5955, 8.46053, 0.22", "-6.82665, 88.4712, 8.49312, 0.22", "-6.81965, 89.382, 8.45803, 0.15", "-6.91636, 90.5297, 8.31251, 0.15", "-7.06495, 91.4405, 8.11342, 0.88", "-7.30839, 92.6055, 7.76553, 1.77", "-7.51188, 93.4728, 7.46619, 1.77", "-8.00843, 95.1773, 6.85705, 0.15", "-8.28683, 96.0074, 6.56731, 0.37", "-8.55165, 96.7643, 6.33108, 0.96", "-8.8662, 97.6815, 6.11894, 1.77", "-9.34336, 99.1762, 5.89747, 0.29", "-9.76246, 100.717, 5.77588, 0.15", "-9.84335, 101.125, 5.76761, 0.52", "-10.0198, 102.02, 5.77469, 1.18", "-10.3289, 103.504, 5.82621, 0.15", "-10.5178, 104.407, 5.87369, 0.15", "-10.6561, 105.216, 5.93868, 1.03", "-10.8049, 106.771, 6.12577, 2.8" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.96872, 58.6437, 5.88832, 0.22", "-1.42605, 59.9584, 6.27543, 0.22", "-0.908466, 61.2186, 6.67446, 0.22", "-0.508534, 62.1867, 6.97414, 0.96", "-0.199159, 62.8953, 7.17821, 1.18", "0.385875, 64.1532, 7.49377, 0.15", "0.77576, 64.9102, 7.6612, 0.15", "1.06994, 65.4324, 7.73998, 0.15", "1.38807, 66.026, 7.78346, 0.15", "1.68598, 66.7073, 7.78707, 0.15", "1.96939, 67.5131, 7.74104, 1.33", "2.26312, 68.5575, 7.61054, 2.73", "2.46027, 69.5247, 7.47521, 3.1", "2.76103, 72.2998, 7.10288, 0.22", "2.80965, 73.5488, 6.94936, 0.15", "2.79639, 74.4088, 6.8555, 0.52", "2.75948, 75.2042, 6.77392, 0.74", "2.65004, 76.8366, 6.60989, 0.22", "2.59456, 77.7914, 6.52702, 1.18", "2.57226, 78.6559, 6.47333, 2.58", "2.61026, 80.7988, 6.41488, 0.22", "2.64655, 81.6919, 6.41064, 0.22", "2.68875, 82.6301, 6.42108, 0.81", "2.75675, 84.158, 6.45841, 2.51", "2.84479, 86.7838, 6.56441, 0.22", "2.84757, 87.9036, 6.63419, 0.29", "2.78926, 89.1403, 6.74533, 0.15", "2.68281, 90.3932, 6.87619, 0.15", "2.55501, 91.377, 6.99411, 1.03", "2.39156, 92.2202, 7.11137, 1.99", "2.12141, 93.143, 7.26634, 1.99", "1.36528, 95.1896, 7.64791, 0.15", "0.99429, 96.0268, 7.81841, 0.15", "0.629866, 96.7467, 7.96267, 0.15", "0.323442, 97.2784, 8.06992, 0.44", "-0.583577, 98.6321, 8.36708, 0.15", "-1.35749, 99.6279, 8.60983, 1.47", "-2.06616, 100.393, 8.83416, 2.51", "-3.26546, 101.564, 9.2289, 0.37", "-3.9425, 102.176, 9.44874, 0.22", "-4.55931, 102.675, 9.64392, 0.07", "-5.14519, 103.086, 9.84405, 0.29", "-6.23613, 103.752, 10.2602, 0.07", "-7.15439, 104.283, 10.6376, 0.44", "-8.42483, 104.972, 11.179, 0.07", "-9.4779, 105.532, 11.6102, 0.15", "-10.2054, 105.896, 11.851, 0.74", "-11.1777, 106.355, 12.1568, 1.84", "-12.7281, 107.019, 12.6136, 0.15", "-13.5774, 107.358, 12.85, 0.59", "-14.2583, 107.615, 13.0293, 0.29", "-15.8019, 108.214, 13.3479, 1.03" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-19.7224, -24.9402, -24.4941, 1.47", "-21.0819, -25.6306, -24.6318, 1.47", "-22.4974, -26.4101, -25.0067, 0.52", "-23.1636, -26.8336, -25.2792, 0.52", "-23.8034, -27.2403, -25.5408, 1.11", "-24.5115, -27.6905, -25.8303, 2.21", "-25.163, -28.1046, -26.0967, 1.11", "-26.2471, -28.9181, -26.7788, 0.44", "-26.8545, -29.5044, -27.3315, 1.47", "-34.3414, -34.4968, -28.4899, 1.47" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-19.7224, -24.9402, -24.4941, 0.22", "-19.5937, -26.1345, -25.1007, 0.22", "-19.5612, -26.5298, -25.3064, 0.22", "-19.5235, -27.0083, -25.5495, 0.96", "-19.4657, -27.6969, -25.9174, 0.22", "-19.4187, -28.163, -26.1883, 0.22", "-19.3817, -28.5295, -26.4013, 0.81", "-19.3485, -28.9063, -26.6337, 1.92", "-19.3054, -29.3586, -26.9117, 0.81", "-19.2443, -29.924, -27.2956, 0.15", "-19.1891, -30.3415, -27.6178, 0.66", "-18.5674, -34.8107, -31.2881, 0.66", "-18.2983, -39.9692, -34.0553, 0.66", "-18.2846, -44.8871, -37.2062, 0.66", "-18.8051, -50.1978, -39.6295, 0.66", "-19.8491, -55.4475, -41.9874, 0.66", "-19.6939, -61.0118, -43.8991, 0.66", "-18.7852, -66.7358, -45.0089, 0.66", "-18.0875, -72.5923, -45.2031, 0.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.562, -98.3203, 17.0668, 0.37", "-5.24202, -100.137, 18.0146, 0.37", "-4.58884, -101.343, 18.5969, 0.22", "-4.30359, -102.059, 18.93, 0.22", "-4.03853, -102.947, 19.3338, 0.22", "-3.84452, -103.762, 19.6847, 0.29", "-3.66795, -104.795, 20.0756, 0.29", "-3.68351, -105.683, 20.3387, 0.22", "-3.75985, -106.543, 20.5647, 0.81", "-3.84931, -107.365, 20.777, 1.77", "-3.93569, -108.203, 20.9856, 2.43", "-4.03627, -109.873, 21.3612, 0.96", "-4.10319, -112.215, 21.8715, 0.22", "-4.14165, -113.131, 22.0632, 1.18", "-4.22312, -114.169, 22.2694, 1.7", "-4.27436, -114.611, 22.3546, 1.7", "-4.50592, -116.045, 22.657, 0.74", "-4.77437, -117.435, 22.9646, 0.29", "-5.04657, -118.753, 23.2407, 0.29", "-5.23155, -119.748, 23.4642, 0.29", "-5.4041, -120.562, 23.647, 0.66", "-5.61643, -121.485, 23.8689, 1.47", "-5.81653, -122.308, 24.0889, 2.73", "-5.94845, -123.068, 24.303, 2.88", "-5.99219, -125.017, 24.925, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.562, -98.3203, 17.0668, 0.22", "-8.92336, -99.5507, 16.9362, 0.22", "-10.1568, -100.222, 16.8217, 0.22", "-10.7044, -100.576, 16.7523, 0.22", "-11.1167, -100.878, 16.6923, 0.22", "-11.7604, -101.376, 16.612, 0.29", "-12.2506, -101.758, 16.5537, 0.96", "-13.2662, -102.586, 16.3601, 1.84", "-14.6938, -103.783, 15.9992, 0.22", "-15.5397, -104.478, 15.7665, 0.22", "-16.4793, -105.166, 15.4928, 0.96", "-17.6361, -105.856, 15.1607, 0.22", "-18.7876, -106.299, 14.819, 0.22", "-19.2426, -106.385, 14.6805, 0.22", "-20.2236, -106.446, 14.3923, 0.22", "-21.4148, -106.497, 14.0594, 0.29", "-22.2454, -106.567, 13.8403, 1.25", "-23.7308, -106.785, 13.5102, 2.88", "-24.3579, -106.902, 13.3914, 2.73", "-26.8845, -107.564, 12.9098, 0.29", "-27.8674, -107.921, 12.721, 0.66", "-29.1713, -108.481, 12.4629, 0.29", "-29.9349, -108.826, 12.2881, 0.22", "-30.9432, -109.267, 12.0425, 0.22", "-31.98, -109.67, 11.7575, 0.22", "-33.5809, -110.183, 11.2592, 0.22", "-34.2891, -110.333, 11.0033, 0.37", "-35.5037, -110.523, 10.5319, 0.37", "-36.6157, -110.649, 10.0691, 0.66", "-37.3489, -110.702, 9.74757, 1.62", "-38.2029, -110.653, 9.34491, 2.51", "-39.673, -110.36, 8.59282, 2.73" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.99089, -76.6257, 13.7581, 3.24", "9.11948, -77.5622, 13.75, 3.24", "9.24921, -78.3694, 13.7392, 3.24", "9.54657, -80.0162, 13.7115, 0.22", "9.75363, -81.0663, 13.6906, 0.29", "9.87114, -81.6263, 13.6779, 0.22", "10.0225, -82.3063, 13.6608, 0.22", "10.1294, -82.7299, 13.6406, 0.22", "10.2173, -83.0491, 13.6256, 0.22", "10.3613, -83.5607, 13.6021, 0.74", "10.4475, -83.9139, 13.5863, 0.74", "10.5362, -84.5214, 13.5749, 0.22", "10.5715, -85.0581, 13.5827, 0.22", "10.616, -85.8038, 13.5913, 0.22", "10.652, -86.291, 13.5724, 0.22", "10.7188, -86.9701, 13.5215, 0.22", "10.8219, -87.6718, 13.4489, 1.33", "10.9928, -88.5769, 13.3279, 3.02", "11.2831, -89.7338, 13.1407, 0.88", "11.6069, -90.838, 12.9627, 0.22", "11.7822, -91.3968, 12.8775, 0.22", "12.027, -92.1533, 12.7731, 0.22", "12.1705, -92.6157, 12.7239, 1.18", "12.4341, -93.5378, 12.6874, 2.06", "12.7545, -94.8398, 12.762, 0.22", "12.8635, -95.459, 12.8585, 0.52", "12.9283, -95.9921, 12.9697, 0.52", "13.027, -97.0037, 13.2217, 0.22", "13.0676, -97.4473, 13.3469, 0.22", "13.1506, -98.4419, 13.656, 1.99", "13.3207, -100.137, 14.1914, 0.29", "13.3719, -100.687, 14.363, 0.22", "13.4549, -101.615, 14.643, 0.22", "13.5014, -102.086, 14.7712, 1.03", "13.5575, -102.64, 14.9075, 2.14", "13.6164, -103.163, 15.0256, 2.06", "13.7683, -104.462, 15.3038, 0.22", "13.8174, -105.038, 15.4206, 0.66", "13.887, -106.239, 15.6505, 0.22", "13.9233, -107.014, 15.7855, 0.22", "13.9494, -107.521, 15.8546, 0.66", "13.9951, -108.281, 15.9355, 0.22", "14.0458, -108.964, 15.9899, 1.55", "14.086, -109.527, 16.0258, 2.8", "14.1279, -110.094, 16.0491, 2.58", "14.3133, -111.999, 16.0604, 0.22", "14.3563, -112.591, 16.0656, 0.22", "14.383, -113.101, 16.0636, 0.59", "14.4037, -113.559, 16.0652, 0.29", "14.4231, -114.153, 16.0701, 1.03", "14.4406, -114.863, 16.0699, 2.06", "14.4372, -116.295, 16.0474, 0.15", "14.4382, -116.655, 16.0328, 0.15", "14.4552, -117.45, 15.9803, 0.29", "14.4726, -117.99, 15.9396, 0.15", "14.4967, -118.605, 15.8884, 0.15", "14.5279, -119.127, 15.8525, 0.96", "14.5748, -119.671, 15.8135, 2.06", "14.6287, -120.417, 15.7872, 2.14", "14.7142, -122.184, 15.7775, 0.22", "14.7219, -122.756, 15.808, 0.22", "14.7156, -123.549, 15.8911, 0.22", "14.711, -123.783, 15.9267, 0.59", "14.6882, -124.366, 16.0367, 1.4", "14.6616, -124.977, 16.1668, 0.66", "14.6184, -126.232, 16.46, 0.22", "14.5768, -126.845, 16.5884, 0.22", "14.5356, -127.306, 16.6705, 0.22", "14.4953, -127.808, 16.7521, 1.03", "14.4562, -128.564, 16.8552, 2.21", "14.425, -130.17, 17.0537, 0.15", "14.4425, -131.135, 17.1468, 0.15", "14.4548, -131.53, 17.1823, 0.81", "14.4745, -132.093, 17.2293, 1.33", "14.5028, -132.937, 17.2994, 0.22", "14.5289, -133.784, 17.3649, 0.22", "14.5481, -134.309, 17.4, 0.88", "14.5668, -134.773, 17.4387, 0.66", "14.6079, -135.82, 17.553, 0.15", "14.6443, -136.59, 17.651, 0.15", "14.6652, -136.879, 17.6918, 0.74", "14.7254, -137.461, 17.7741, 1.18", "14.885, -138.634, 17.9502, 0.22", "15.0128, -139.311, 18.0644, 0.22", "15.1232, -139.733, 18.1325, 0.22", "15.2562, -140.161, 18.2016, 0.22", "15.4335, -140.693, 18.2821, 0.22", "15.6218, -141.283, 18.3626, 1.33", "15.8195, -141.965, 18.4459, 2.21", "16.1271, -143.182, 18.5749, 0.15", "16.266, -143.68, 18.6332, 0.29", "16.3419, -143.922, 18.6632, 0.29", "16.6133, -144.687, 18.7683, 0.15", "16.692, -144.912, 18.7997, 0.15", "16.8484, -145.411, 18.8619, 0.66", "17.1041, -146.295, 18.9892, 0.15", "17.1971, -146.644, 19.034, 0.15", "17.2718, -146.899, 19.074, 0.15", "17.462, -147.487, 19.1894, 0.15", "17.5775, -147.862, 19.2687, 0.37", "17.7285, -148.404, 19.3813, 1.03", "17.8803, -148.983, 19.5015, 0.22", "18.109, -149.798, 19.6695, 0.22", "18.3211, -150.493, 19.8077, 1.4", "18.5179, -151.1, 19.918, 2.14", "18.7255, -151.757, 20.0316, 1.4", "19.0789, -153.005, 20.2245, 0.22", "19.1742, -153.396, 20.2774, 0.81", "19.2705, -153.892, 20.3333, 1.55", "19.4261, -154.854, 20.4336, 0.29", "19.5397, -155.7, 20.524, 0.22", "19.6012, -156.275, 20.5813, 0.22", "19.6355, -156.86, 20.6245, 0.29", "19.6545, -157.527, 20.6775, 0.15", "19.6614, -158.036, 20.7177, 0.96", "19.6639, -158.387, 20.7418, 1.47", "19.6753, -158.912, 20.7635, 1.47", "19.7301, -159.834, 20.7925, 0.22", "19.8215, -160.738, 20.8194, 0.22", "19.894, -161.245, 20.8276, 0.88", "20.0187, -161.922, 20.8346, 0.88", "20.2494, -162.979, 20.8478, 0.15", "20.4435, -163.695, 20.8584, 0.15", "20.6069, -164.211, 20.8646, 0.81", "20.8875, -165.037, 20.8973, 0.15", "21.0702, -165.57, 20.9385, 0.81", "21.2855, -166.211, 21.0079, 0.52", "21.4596, -166.789, 21.0852, 1.62", "21.6036, -167.39, 21.1772, 1.62", "21.826, -168.616, 21.3567, 0.22", "21.9209, -169.3, 21.4487, 0.22", "21.9635, -169.708, 21.4892, 0.74", "21.9994, -170.164, 21.5218, 0.29", "22.0339, -170.825, 21.5614, 1.47", "22.06, -171.283, 21.5836, 1.47", "22.1143, -172.361, 21.608, 0.15", "22.1622, -172.887, 21.6424, 0.52", "22.2572, -173.622, 21.7112, 0.15", "22.3458, -174.176, 21.7737, 0.15", "22.3985, -174.484, 21.8123, 0.66", "22.4983, -175.048, 21.8894, 1.47", "22.7271, -176.3, 22.0663, 0.22", "22.857, -176.984, 22.1508, 0.15", "22.9444, -177.43, 22.1866, 0.15", "23.0537, -177.998, 22.2225, 0.74", "23.2026, -178.853, 22.265, 0.15", "23.2993, -179.419, 22.2858, 0.15", "23.4288, -180.334, 22.3058, 0.22", "23.5069, -180.94, 22.3283, 1.18", "23.5932, -181.649, 22.3644, 1.7", "23.7797, -183.127, 22.4619, 0.22", "23.8549, -183.701, 22.5048, 0.22", "23.9338, -184.24, 22.5499, 0.15", "24.0552, -185.013, 22.6274, 0.15", "24.1126, -185.457, 22.6831, 0.44", "24.2422, -186.682, 22.8458, 0.15", "24.2702, -187.073, 22.9099, 0.88", "24.2908, -187.627, 23.0075, 1.7", "24.3013, -188.244, 23.1166, 1.4", "24.2931, -189.676, 23.3532, 0.15", "24.2886, -189.965, 23.3974, 0.22", "24.2597, -190.978, 23.5399, 0.07", "24.2485, -191.494, 23.6032, 1.33", "24.2412, -191.948, 23.6516, 1.33", "24.2559, -192.779, 23.7282, 0.07", "24.3022, -193.389, 23.7638, 0.15", "24.3484, -193.795, 23.7797, 0.15", "24.4102, -194.205, 23.7871, 0.22", "24.5349, -194.985, 23.7988, 0.07", "24.5775, -195.27, 23.8027, 0.66", "24.6373, -195.73, 23.8062, 0.29", "24.7653, -196.812, 23.8041, 0.15", "24.8033, -197.092, 23.8042, 0.22", "24.8821, -197.664, 23.8101, 0.07", "24.9522, -198.175, 23.8245, 0.74", "25.0494, -198.977, 23.8671, 0.15", "25.0898, -199.37, 23.8966, 0.59", "25.1718, -200.431, 23.9853, 0.15", "25.2032, -200.881, 24.0337, 0.29", "25.2352, -201.445, 24.0931, 0.15", "25.253, -201.898, 24.1399, 0.88", "25.2598, -202.293, 24.1779, 1.92", "25.2581, -204.005, 24.3271, 0.22", "25.2482, -204.884, 24.3908, 1.7", "25.2272, -206.815, 24.508, 0.15", "25.2106, -207.633, 24.5467, 0.15", "25.1943, -208.143, 24.5676, 0.81", "25.1457, -209.293, 24.6034, 0.22", "25.1175, -209.946, 24.6136, 1.25", "25.1048, -210.301, 24.6148, 1.84", "25.068, -211.912, 24.6369, 0.15", "25.0672, -212.328, 24.6433, 0.29", "25.0917, -213.07, 24.6733, 0.07", "25.1151, -213.53, 24.7007, 0.15", "25.1827, -214.621, 24.787, 0.15", "25.2059, -214.913, 24.8144, 0.52", "25.2475, -215.331, 24.8592, 1.4", "25.3269, -216.531, 25.0177, 0.07", "25.3542, -217.388, 25.1459, 0.15", "25.3472, -217.783, 25.2173, 0.74", "25.3277, -218.181, 25.2964, 1.92", "25.292, -218.789, 25.4365, 1.92", "25.1959, -220.375, 25.8465, 0.15", "25.1683, -220.932, 26.0193, 0.59", "25.1651, -221.846, 26.3589, 0.07", "25.1724, -222.058, 26.4481, 0.15", "25.2265, -222.768, 26.7685, 0.15", "25.2838, -223.263, 26.999, 0.37", "25.3871, -223.881, 27.2748, 0.96", "25.5132, -224.443, 27.4893, 1.47", "25.7822, -225.419, 27.8173, 0.15", "25.9441, -225.969, 27.9814, 0.15", "26.071, -226.392, 28.0853, 1.11", "26.2006, -226.828, 28.1731, 1.7", "26.5626, -228.137, 28.3639, 0.15", "26.6841, -228.6, 28.4171, 0.81", "26.8289, -229.146, 28.4643, 1.03", "27.214, -230.452, 28.5674, 0.15", "27.3748, -230.942, 28.6081, 0.22", "27.5885, -231.592, 28.656, 0.07", "27.7205, -232.026, 28.6814, 0.88", "27.8693, -232.54, 28.7126, 1.62", "28.2324, -233.749, 28.8042, 0.15", "28.433, -234.343, 28.8512, 1.33", "28.8355, -235.463, 28.9493, 0.07", "28.9515, -235.806, 28.9851, 0.22", "29.2754, -236.898, 29.123, 0.07", "29.389, -237.325, 29.192, 0.96", "29.6527, -238.462, 29.4034, 0.15", "29.7742, -238.973, 29.5099, 1.11", "30.1738, -240.535, 29.8623, 0.15", "30.3571, -241.217, 30.0056, 1.11", "30.5239, -241.835, 30.1205, 1.47", "30.8917, -243.306, 30.3642, 0.15", "31.0204, -243.828, 30.4347, 0.88", "31.1837, -244.462, 30.489, 1.33", "31.5446, -245.876, 30.5098, 0.15", "31.7128, -246.623, 30.4686, 0.96", "31.9635, -248.043, 30.2976, 0.15", "32.0196, -248.621, 30.2007, 0.15", "32.0346, -249.238, 30.0945, 0.74", "31.9657, -250.177, 29.9373, 0.44", "31.86, -250.816, 29.8342, 1.11", "31.7468, -251.3, 29.7634, 1.7", "31.2658, -253.033, 29.5506, 0.15", "30.9905, -253.924, 29.4682, 1.33", "30.7109, -254.776, 29.4198, 0.15", "30.5987, -255.111, 29.4152, 0.74", "30.4642, -255.52, 29.4303, 1.4", "30.2929, -256.058, 29.4679, 0.74" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.99089, -76.6257, 13.7581, 1.03", "10.2863, -77.675, 17.9634, 1.03", "10.5847, -77.8502, 18.834, 1.03", "10.8859, -77.9843, 19.6278, 1.03", "11.1924, -78.1165, 20.3891, 1.03", "11.4432, -78.2184, 20.9453, 1.03", "11.8139, -78.3673, 21.6824, 1.03", "12.183, -78.457, 22.0599, 0.88", "12.5027, -78.5552, 22.3985, 0.88", "12.8831, -78.7737, 22.9114, 0.44", "13.1876, -79.1658, 23.476, 0.59", "13.3681, -79.4952, 23.8933, 0.22", "13.7943, -80.1446, 24.9001, 0.22", "14.1489, -80.5711, 25.7245, 0.44", "14.3758, -80.7544, 26.2233, 1.4", "14.8273, -80.9564, 27.125, 2.14", "15.5783, -81.0748, 28.393, 0.59", "16.8925, -81.0321, 30.1955, 0.59", "17.4133, -80.9538, 30.7308, 0.44", "18.409, -80.7308, 31.5425, 0.81", "19.2723, -80.4808, 32.1454, 1.99", "20.6108, -80.0278, 32.8963, 0.22", "21.2632, -79.8077, 33.179, 1.03", "22.2229, -79.5147, 33.4982, 0.22", "23.304, -79.2331, 33.8379, 0.96", "24.0106, -79.0678, 34.0516, 1.92", "25.6413, -78.729, 34.6774, 0.22", "26.3083, -78.5817, 34.9995, 0.22", "26.6939, -78.4906, 35.2071, 0.22", "27.3626, -78.3222, 35.5872, 1.11", "28.2151, -78.0951, 36.071, 2.58", "29.8732, -77.5986, 37.0189, 1.11", "30.6608, -77.3315, 37.4794, 0.44", "31.3662, -77.105, 37.9028, 0.44", "31.7953, -76.9873, 38.1792, 0.22", "32.1734, -76.9155, 38.4278, 0.22", "32.5447, -76.8818, 38.6745, 0.22", "33.1638, -76.8899, 39.1132, 1.4", "34.2284, -77.0255, 40.047, 0.37", "34.996, -77.2101, 40.9636, 0.29", "35.5189, -77.4372, 41.7655, 0.29", "35.6086, -77.5002, 41.9327, 0.29", "35.8499, -77.8194, 42.5471, 0.29", "36.0184, -78.2011, 43.1437, 0.29", "36.2247, -78.883, 44.0411, 0.59", "36.3399, -79.4318, 44.6684, 1.84", "36.4171, -79.9488, 45.22, 2.06", "36.5569, -81.1433, 46.4128, 0.52", "36.6034, -81.8628, 47.0576, 0.22", "36.6095, -82.5271, 47.6049, 0.22", "36.5723, -82.9614, 47.9372, 0.22", "36.4957, -83.2439, 48.1768, 0.52", "36.3117, -83.5915, 48.5307, 0.81", "35.6996, -84.241, 49.4347, 0.22", "35.2362, -84.5598, 50.0719, 1.47", "34.9218, -84.7096, 50.5063, 1.92", "34.2266, -84.934, 51.5092, 0.44", "33.901, -84.9871, 51.9962, 0.22", "33.5316, -84.9546, 52.5702, 0.81", "32.9543, -84.7663, 53.5097, 0.22", "32.6617, -84.6444, 53.9978, 0.22", "32.5148, -84.5848, 54.2574, 0.22", "32.2441, -84.5076, 54.7552, 0.59", "31.691, -84.4271, 55.8204, 0.37", "31.3533, -84.4183, 56.515, 0.37", "31.1101, -84.4213, 57.1315, 0.37", "30.9714, -84.4348, 57.6446, 0.37", "30.8833, -84.5206, 58.3204, 0.37", "30.8911, -84.6725, 58.8283, 0.37", "30.932, -84.8599, 59.2715, 0.37", "30.9866, -85.0679, 59.8508, 0.37", "30.9032, -85.1507, 60.4831, 0.37", "30.5794, -85.1984, 61.0825, 0.37", "30.0998, -85.219, 61.627, 0.37", "29.5944, -85.1842, 62.0565, 0.37", "29.3113, -85.1412, 62.2448, 0.37", "28.1483, -84.8296, 62.921, 0.29", "26.9775, -84.3083, 63.5475, 0.22", "26.6083, -84.1065, 63.7359, 0.22", "25.8695, -83.6627, 64.1386, 0.15", "25.3586, -83.3574, 64.4532, 0.59", "24.8801, -83.0763, 64.7677, 0.29", "24.4543, -82.8506, 65.0791, 0.88", "23.7691, -82.5391, 65.6444, 0.96", "22.7773, -82.2162, 66.4445, 0.22", "22.1796, -82.0924, 66.912, 1.33", "21.7801, -82.0438, 67.2126, 1.4", "20.8035, -82.0139, 67.895, 0.15", "20.5428, -82.0358, 68.0834, 0.15", "20.1957, -82.0932, 68.3479, 0.15", "19.9392, -82.1642, 68.5447, 0.15", "19.7706, -82.2132, 68.6803, 0.81", "19.5134, -82.2524, 68.9015, 0.81", "18.6557, -82.2666, 69.6894, 0.22", "18.1754, -82.2047, 70.125, 0.22", "17.712, -82.1035, 70.5345, 1.11", "17.262, -81.9626, 70.9177, 1.62", "16.2561, -81.5447, 71.7173, 0.22", "15.6678, -81.2228, 72.1427, 1.11", "14.8777, -80.7012, 72.6319, 0.22", "14.3232, -80.3225, 72.9344, 0.22", "14.0485, -80.1273, 73.0697, 1.03", "13.5133, -79.7408, 73.2991, 1.03", "12.7818, -79.2038, 73.5619, 0.22", "12.0532, -78.6368, 73.7897, 0.52", "11.2572, -77.9644, 74.0287, 0.15", "10.9706, -77.6928, 74.1107, 0.15", "10.7658, -77.4715, 74.1842, 0.52", "10.483, -77.1285, 74.3013, 1.18", "9.6823, -76.0402, 74.6728, 0.22", "9.32094, -75.4334, 74.8288, 1.03", "9.12113, -75.025, 74.901, 1.99", "8.42368, -73.3622, 75.0975, 0.29", "8.2586, -72.8932, 75.1137, 0.96", "8.05133, -72.1712, 75.0774, 1.7", "7.75818, -70.6679, 74.8586, 0.22", "7.66555, -69.9486, 74.6848, 0.22", "7.62883, -69.3523, 74.4802, 0.96", "7.66101, -68.3266, 74.0193, 0.07", "7.71669, -67.7066, 73.7085, 0.74", "7.85318, -66.8879, 73.2525, 0.22", "8.06913, -66.0814, 72.7891, 0.22", "8.40965, -65.3868, 72.3866, 0.66", "9.0311, -64.5321, 71.8918, 0.07", "9.49996, -64.0637, 71.6262, 0.22", "10.1826, -63.5224, 71.3456, 0.07", "10.8893, -63.0424, 71.1078, 1.11", "12.8473, -61.9034, 70.6223, 0.07", "13.308, -61.6723, 70.5434, 0.07", "13.644, -61.5287, 70.5101, 0.29", "14.558, -61.1679, 70.4807, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "43.1689, 20.5065, 48.5665, 0.22", "43.6026, 21.2309, 49.3544, 0.22", "44.0123, 21.7929, 50.0892, 0.22", "44.3663, 22.2031, 50.7041, 0.52", "44.8716, 22.7218, 51.5259, 1.7", "45.337, 23.0878, 52.2034, 2.06", "46.3179, 23.729, 53.597, 0.52", "47.0467, 24.1443, 54.6158, 0.66", "47.709, 24.4852, 55.5007, 2.14", "48.1028, 24.6844, 56.0124, 2.65", "49.5025, 25.4167, 57.7791, 0.29", "50.1205, 25.7571, 58.617, 0.22", "50.7898, 26.1302, 59.5806, 0.22", "51.2953, 26.4037, 60.371, 1.25", "52.0253, 26.7873, 61.5955, 0.15", "52.7047, 27.1392, 62.7672, 0.81", "53.5456, 27.555, 64.085, 1.4", "54.157, 27.8042, 64.9025, 2.21", "55.7292, 28.2815, 66.717, 0.22", "56.4921, 28.4488, 67.4813, 0.88", "57.2046, 28.5606, 68.0953, 1.18", "58.7236, 28.7683, 69.1613, 0.22", "59.4333, 28.8735, 69.5468, 0.59", "60.1031, 28.9799, 69.8342, 1.11", "61.2034, 29.143, 70.2171, 0.15", "61.6407, 29.2095, 70.38, 0.15", "62.043, 29.3004, 70.5656, 0.15", "62.4095, 29.4204, 70.7895, 0.37", "62.9294, 29.6689, 71.1851, 0.66", "64.1199, 30.3483, 72.2111, 0.15", "64.948, 30.8703, 73.0241, 1.62", "65.7782, 31.3933, 73.9166, 0.29", "66.6361, 31.9235, 74.926, 1.18", "67.7889, 32.5895, 76.4077, 0.22", "68.5444, 32.9787, 77.4486, 0.52", "69.4593, 33.3657, 78.7535, 1.25", "70.1615, 33.6063, 79.8018, 2.14", "71.3093, 33.859, 81.6089, 0.59", "72.0166, 33.9406, 82.7746, 0.59", "72.6971, 33.9459, 83.9053, 0.22", "73.4818, 33.9386, 85.218, 1.55", "73.8758, 33.9502, 85.8673, 1.55", "74.9445, 34.1218, 87.6047, 0.22", "75.2785, 34.2307, 88.1467, 0.22", "75.7663, 34.4574, 88.8331, 0.22", "76.2524, 34.7477, 89.4934, 0.96", "76.8001, 35.1615, 90.1934, 1.25", "77.8098, 36.0611, 91.3464, 0.22", "78.6414, 36.9306, 92.1436, 0.22", "79.5633, 37.9034, 92.9988, 2.73" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "43.1689, 20.5065, 48.5665, 0.22", "43.9037, 18.807, 49.0827, 0.22", "44.2579, 18.0688, 49.2574, 0.37", "44.8563, 16.9609, 49.5063, 0.66", "45.5429, 15.7254, 49.8688, 0.66", "46.1618, 14.6224, 50.2777, 0.15", "46.6801, 13.6887, 50.6873, 1.47", "47.3538, 12.4391, 51.218, 3.24", "47.793, 11.6631, 51.5838, 3.24", "49.2129, 9.35652, 52.8395, 0.29", "49.7732, 8.46619, 53.3979, 0.44", "50.4937, 7.29081, 54.1945, 2.14" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-15.4084, 49.3919, 30.5462, 0.22", "-16.741, 50.2089, 30.8051, 0.22", "-17.3733, 50.5997, 30.9231, 1.55", "-18.2621, 51.1063, 31.0118, 3.1", "-19.9062, 51.9848, 31.0711, 0.15", "-20.488, 52.2755, 31.0599, 0.66", "-21.4546, 52.7249, 31.0045, 0.15", "-22.2058, 53.0079, 30.9022, 1.18", "-23.6068, 53.4269, 30.6341, 0.07", "-24.3919, 53.6044, 30.4522, 0.07", "-25.0359, 53.7198, 30.2831, 0.07", "-25.7424, 53.8176, 30.109, 0.96", "-27.112, 53.9663, 29.8067, 0.15", "-28.1769, 54.088, 29.6163, 0.15", "-28.8133, 54.1734, 29.5575, 1.03", "-29.4713, 54.2607, 29.5314, 1.99", "-30.7332, 54.4226, 29.6006, 0.15", "-31.2719, 54.4818, 29.6695, 0.15", "-31.6513, 54.5113, 29.7447, 0.15", "-32.2564, 54.5403, 29.8991, 0.88", "-32.9963, 54.5337, 30.0929, 1.62", "-34.5467, 54.4482, 30.521, 0.15", "-35.1437, 54.3884, 30.6908, 0.15", "-35.8121, 54.298, 30.8733, 0.44", "-36.5576, 54.1557, 31.0606, 0.15", "-37.574, 53.9189, 31.3437, 0.22", "-38.5294, 53.6524, 31.6407, 0.15", "-38.7525, 53.575, 31.7203, 0.74", "-39.5437, 53.2719, 32.043, 1.25", "-40.792, 52.7584, 32.6074, 0.22", "-41.87, 52.2734, 33.1482, 1.11", "-42.3494, 52.0291, 33.41, 1.84", "-43.3427, 51.3644, 34.0354, 0.15", "-43.659, 51.0958, 34.2697, 0.15", "-43.9767, 50.7914, 34.5308, 0.15", "-44.192, 50.5597, 34.723, 0.81", "-44.7578, 49.8488, 35.2138, 2.14", "-45.6116, 48.5277, 36.0974, 0.22", "-45.9446, 47.8069, 36.5363, 1.47" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-15.4084, 49.3919, 30.5462, 0.22", "-16.4797, 51.2654, 32.0719, 0.22", "-17.2399, 52.6369, 33.0889, 0.22", "-18.3595, 54.6357, 34.4843, 0.37", "-18.8402, 55.4309, 35.0343, 0.37", "-19.4545, 56.3993, 35.7018, 0.96", "-20.0396, 57.3304, 36.3338, 0.15", "-20.3094, 57.7869, 36.6263, 0.15", "-20.482, 58.0522, 36.7857, 0.22", "-21.1221, 58.9459, 37.2474, 0.15", "-21.6721, 59.644, 37.6388, 1.03", "-22.406, 60.5733, 38.2359, 1.99", "-23.4308, 62.0247, 39.3018, 0.22", "-23.9543, 63.0003, 40.0135, 0.15", "-24.1211, 63.4156, 40.3197, 0.15", "-24.3584, 64.2605, 40.9406, 1.18", "-24.6304, 65.5569, 41.8951, 0.15", "-24.7648, 66.3278, 42.4735, 0.52", "-24.9117, 67.3825, 43.2363, 0.22", "-25.0805, 68.421, 43.9651, 1.33", "-25.3598, 69.591, 44.782, 2.88", "-26.0937, 71.7025, 46.238, 0.22", "-26.4885, 72.4948, 46.7533, 0.22", "-27.0272, 73.3694, 47.3104, 0.74", "-27.7163, 74.3382, 47.9578, 0.15", "-28.3031, 75.1137, 48.4923, 0.15", "-28.8393, 75.7488, 48.9791, 0.15", "-29.5104, 76.4034, 49.6556, 0.74", "-30.1296, 76.9478, 50.4179, 0.74", "-30.5886, 77.2212, 51.1096, 0.74", "-31.0383, 77.3633, 51.8649, 0.74", "-31.2238, 77.388, 52.152, 0.74", "-32.0276, 77.4302, 53.3047, 0.74", "-32.3019, 77.4275, 53.7055, 0.74", "-33.0412, 77.4124, 54.7961, 0.74", "-33.4682, 77.4367, 55.5252, 0.74", "-34.1203, 77.5897, 56.9693, 0.96", "-34.4678, 77.788, 58.0778, 0.96", "-34.6267, 78.0017, 58.8936, 0.96", "-34.7784, 78.3379, 60.0505, 0.96", "-34.8963, 78.8184, 61.497, 0.66", "-34.9786, 79.3436, 62.9807, 0.88", "-35.118, 79.9547, 64.5477, 1.55", "-35.409, 80.7229, 66.2865, 0.37", "-35.6036, 81.1258, 67.0446, 0.37", "-35.9849, 81.9351, 68.2924, 1.4", "-36.2046, 82.411, 68.9208, 1.62", "-36.6986, 83.6482, 70.3398, 0.44", "-36.9809, 84.5159, 71.2352, 0.44", "-37.1735, 85.4417, 72.1285, 1.18", "-37.2941, 86.7348, 73.3351, 0.22", "-37.2696, 87.3887, 73.9462, 0.22", "-37.1519, 88.1524, 74.6682, 1.25", "-36.98, 88.9472, 75.4242, 1.92", "-36.7004, 90.6382, 77.0804, 0.15", "-36.6573, 91.3043, 77.7611, 0.88", "-36.7042, 92.1455, 78.6238, 1.92", "-37.0056, 93.8276, 80.3752, 0.22", "-37.2798, 94.7217, 81.3662, 0.74", "-37.7606, 95.9199, 82.7773, 1.7", "-38.1622, 96.7796, 83.8848, 0.07", "-38.3493, 97.2077, 84.4874, 0.96", "-38.8017, 98.2796, 86.1275, 0.07", "-39.0385, 98.9318, 87.2235, 0.07", "-39.1459, 99.4057, 88.0899, 0.07", "-39.2496, 100.082, 89.5315, 0.37", "-39.3983, 100.626, 90.9666, 0.59", "-39.526, 100.887, 91.7808, 0.59", "-39.6933, 101.067, 92.4514, 0.59", "-39.8409, 101.183, 92.835, 0.59", "-40.5078, 101.724, 94.1658, 0.15", "-40.9874, 102.221, 95.0236, 0.07", "-41.2488, 102.629, 95.5836, 0.07", "-41.4408, 103.021, 96.0494, 0.07", "-41.7522, 103.703, 96.7562, 0.88", "-42.2918, 104.812, 97.8642, 0.22", "-42.832, 105.733, 98.8625, 0.22", "-43.4413, 106.544, 99.8476, 1.62", "-44.2073, 107.269, 100.879, 2.21", "-45.6611, 108.244, 102.63, 0.37", "-46.7054, 108.715, 103.83, 0.37", "-48.3004, 109.09, 105.62, 1.33", "-48.8041, 109.094, 106.215, 1.77", "-49.8203, 108.853, 107.557, 0.29", "-50.6409, 108.426, 108.759, 0.29", "-51.3279, 107.954, 109.735, 0.59", "-52.0662, 107.448, 110.711, 1.18", "-53.3194, 106.665, 112.245, 0.37", "-54.6886, 105.883, 113.81, 1.03", "-55.8594, 105.293, 114.985, 1.4", "-58.3965, 104.203, 117.105, 0.07", "-59.6586, 103.758, 117.972, 0.59", "-61.0091, 103.444, 118.678, 0.15", "-61.9224, 103.33, 119.004, 0.15", "-63.3101, 103.249, 119.339, 0.15", "-63.9704, 103.251, 119.454, 1.03", "-64.633, 103.27, 119.507, 1.4", "-67.0149, 103.361, 119.607, 0.15", "-67.8841, 103.405, 119.65, 0.15", "-69.4487, 103.48, 119.815, 0.15", "-70.2592, 103.5, 119.953, 1.11", "-71.0403, 103.507, 120.131, 1.62", "-72.9364, 103.51, 120.677, 0.29", "-74.1149, 103.521, 121.079, 0.07", "-75.2184, 103.605, 121.454, 0.07", "-75.8974, 103.69, 121.683, 0.88", "-77.4879, 103.936, 122.268, 0.07", "-78.2601, 104.089, 122.591, 0.22", "-79.5712, 104.446, 123.218, 0.07", "-80.4816, 104.773, 123.635, 1.77" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.04442, 39.4563, 20.146, 0.52", "1.90469, 38.1411, 18.754, 0.52", "2.8354, 37.7423, 18.4811, 2.21", "4.4625, 36.9013, 18.0566, 2.88", "7.15355, 35.2793, 17.3994, 0.96", "9.06711, 33.9623, 16.8911, 0.15", "10.1266, 33.1525, 16.5422, 0.59", "11.1233, 32.1544, 16.2828, 0.15", "11.7687, 31.4099, 16.1003, 0.22", "12.2455, 30.7174, 15.9216, 0.22", "13.0612, 29.2318, 15.4257, 0.22", "14.0113, 27.1337, 14.6554, 1.11", "14.4447, 25.9812, 14.1971, 2.29", "14.6781, 25.2561, 13.8834, 2.58", "15.3232, 22.9468, 12.8479, 0.15", "15.6118, 21.5681, 12.261, 0.15", "15.7292, 20.3162, 11.7906, 0.29", "15.7287, 19.4056, 11.4786, 1.03", "15.6849, 18.4673, 11.1564, 1.99", "15.6373, 17.7869, 10.9427, 2.29", "15.4043, 15.5404, 10.4015, 0.44", "15.2547, 13.9381, 10.1089, 0.29", "15.181, 13.0703, 9.99446, 0.44", "15.1183, 12.2351, 9.91279, 0.52", "15.0041, 10.7252, 9.83973, 0.22", "14.9471, 9.71242, 9.84231, 0.22", "14.8926, 8.61568, 9.91056, 1.33", "14.8476, 7.54312, 10.017, 2.29", "14.7932, 6.6591, 10.1219, 2.29", "14.6265, 4.2011, 10.4622, 0.15", "14.5364, 3.16185, 10.6122, 0.15", "14.4613, 2.32454, 10.7254, 0.15", "14.3793, 1.5229, 10.8323, 0.66", "14.2516, 0.263202, 10.9704, 1.33", "14.1676, -0.718496, 11.0033, 1.03", "14.0116, -2.80656, 10.8568, 0.22", "13.9487, -3.81007, 10.7099, 0.22", "13.9013, -4.78889, 10.4948, 0.66", "13.8548, -6.20152, 10.1275, 0.22", "13.7762, -8.0121, 9.56969, 0.29", "13.7092, -9.16069, 9.21336, 0.59", "13.6689, -10.0363, 8.91425, 1.33", "13.6012, -11.2898, 8.45763, 2.14", "13.4767, -13.4403, 7.64764, 0.22", "13.3612, -14.91, 7.12763, 0.22", "13.2086, -16.1529, 6.82143, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-2.04442, 39.4563, 20.146, 0.52", "-2.15965, 39.8744, 20.8398, 0.52", "-2.22507, 40.1158, 21.477, 0.52", "-2.27084, 40.2949, 22.3, 0.52", "-2.28336, 40.3318, 22.7371, 0.52", "-2.28241, 40.3692, 23.7621, 0.81", "-2.25817, 40.3985, 24.5192, 1.18", "-2.15103, 40.3643, 25.489, 0.96", "-2.04581, 40.3081, 26.1742, 1.25", "-1.91127, 40.2125, 26.9067, 0.37", "-1.80879, 40.1631, 27.3322, 0.37", "-1.67044, 40.1055, 27.8406, 0.15", "-1.47588, 40.062, 28.4451, 0.15", "-1.22024, 40.1013, 29.0963, 1.18", "-1.06221, 40.1716, 29.4825, 2.43", "-0.769355, 40.3255, 30.1324, 2.65" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-10.8049, 106.771, 6.12577, 0.59", "-11.234, 108.721, 5.96823, 0.59", "-11.7085, 110.437, 5.80163, 0.29", "-12.2255, 112.049, 5.63797, 0.96", "-12.6538, 113.275, 5.52552, 0.07", "-13.1754, 114.591, 5.42345, 0.07", "-13.4842, 115.337, 5.37278, 0.22", "-13.9457, 116.239, 5.33555, 0.88", "-14.2159, 116.774, 5.33272, 1.47", "-14.9055, 118.294, 5.26787, 0.07", "-15.2673, 119.308, 5.15671, 0.07", "-15.4027, 119.843, 5.09525, 0.22", "-15.4936, 120.249, 5.05524, 0.22", "-15.7174, 121.371, 4.96978, 0.07", "-15.8656, 122.387, 4.89135, 0.07", "-15.9356, 123.054, 4.81755, 0.66", "-16.0118, 123.805, 4.70145, 0.66", "-16.158, 125.02, 4.47675, 0.15", "-16.2729, 125.964, 4.28368, 1.03", "-16.3899, 126.957, 4.06746, 1.77", "-16.5553, 128.815, 3.66503, 0.15", "-16.654, 130.065, 3.40855, 0.22", "-16.6978, 130.575, 3.29895, 0.66", "-16.7672, 131.171, 3.19296, 0.37", "-16.9487, 132.199, 3.08538, 1.11", "-17.1551, 133.005, 3.07085, 1.11", "-17.7641, 134.891, 3.21905, 0.22", "-18.205, 135.995, 3.36963, 1.03", "-18.8026, 137.268, 3.57512, 1.62", "-19.4274, 138.441, 3.79849, 1.99", "-20.0634, 139.529, 3.94887, 0.52", "-20.9637, 140.965, 4.03812, 0.22", "-21.8867, 142.389, 3.97918, 0.22", "-22.352, 143.103, 3.85994, 0.88", "-23.0366, 144.16, 3.46749, 1.55", "-24.4479, 146.242, 2.37742, 0.15", "-25.0146, 147.095, 1.86938, 0.22", "-25.4911, 147.857, 1.40072, 0.07", "-26.2174, 149.117, 0.635632, 1.33", "-27.2594, 151.019, -0.360954, 0.07", "-27.5886, 151.635, -0.674401, 0.37", "-28.2199, 152.893, -1.07905, 0.07", "-28.8883, 154.326, -1.31133, 0.22", "-29.4612, 155.668, -1.23144, 1.55", "-29.8148, 156.777, -0.792295, 1.55", "-32.7946, 168.636, -3.78355, 1.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-10.8049, 106.771, 6.12577, 0.22", "-11.8358, 108.252, 5.87767, 0.22", "-12.3044, 108.968, 5.75293, 0.07", "-12.8112, 109.799, 5.60096, 1.11", "-13.5457, 111.159, 5.35988, 0.07", "-13.8486, 111.805, 5.25237, 0.07", "-13.993, 112.15, 5.19909, 0.52", "-14.1844, 112.824, 5.10454, 1.47", "-14.3757, 113.684, 4.99819, 0.07", "-14.5115, 114.451, 4.91134, 0.15", "-14.6022, 115.199, 4.85151, 0.88", "-14.6692, 115.925, 4.81763, 1.4", "-14.7492, 117.066, 4.77296, 0.07", "-14.7819, 117.609, 4.75975, 0.74" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-18.0875, -72.5923, -45.2031, 0.15", "-17.6689, -82.8297, -49.8454, 0.15", "-16.7311, -93.4941, -53.4007, 0.15", "-15.6334, -103.297, -58.7694, 0.15", "-12.3501, -112.402, -64.4184, 0.15", "-8.3347, -120.623, -70.7996, 0.15", "-4.01422, -128.9, -76.914, 0.15", "0.735923, -136.37, -83.6283, 0.15", "5.92501, -144.549, -89.1683, 0.15", "11.9166, -151.52, -95.3645, 0.15", "18.3059, -158.214, -101.439, 0.15", "25.0806, -166.073, -105.489, 0.15", "31.5311, -174.364, -109.272, 0.15", "37.6416, -182.426, -113.966, 0.15", "42.665, -190.669, -119.569, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-18.0875, -72.5923, -45.2031, 1.03", "-17.8074, -79.4314, -48.2047, 0.15", "-18.3306, -86.6425, -50.1457, 0.15", "-19.589, -93.8126, -51.8245, 0.15", "-21.9911, -100.828, -52.3301, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-5.99219, -125.017, 24.925, 0.22", "-5.18783, -127.096, 25.6915, 0.22", "-4.77565, -128.415, 26.165, 0.22", "-4.56237, -129.405, 26.4778, 0.88", "-4.34346, -130.861, 26.8901, 1.25", "-4.09009, -133.105, 27.5046, 0.15", "-3.94996, -134.809, 27.9375, 0.15", "-3.93819, -136.197, 28.2595, 0.66", "-4.00727, -138.271, 28.6754, 0.15", "-4.05891, -139.215, 28.8485, 0.44", "-4.09374, -139.903, 28.9574, 0.44", "-4.114, -141.815, 29.2423, 0.15", "-4.07825, -143.197, 29.4408, 0.15", "-4.00451, -144.253, 29.6, 1.18", "-3.87231, -145.302, 29.7715, 2.14", "-3.64231, -146.864, 30.0194, 1.03", "-3.41416, -148.373, 30.234, 0.15", "-3.20871, -149.557, 30.4011, 0.15", "-3.04697, -150.497, 30.5182, 0.37", "-2.8473, -151.67, 30.6313, 0.22", "-2.74851, -152.302, 30.6575, 0.66", "-2.61947, -153.15, 30.655, 0.81", "-2.3132, -154.951, 30.5906, 0.22", "-2.15769, -155.824, 30.5512, 1.03", "-1.90338, -157.396, 30.4474, 1.84", "-1.57007, -159.679, 30.2682, 0.22", "-1.46876, -160.425, 30.2151, 0.22", "-1.35865, -161.295, 30.1703, 0.22", "-1.25756, -162.147, 30.1503, 0.22", "-1.06618, -163.391, 30.1855, 0.96", "-0.565577, -165.974, 30.3982, 0.15", "-0.348439, -166.882, 30.5214, 0.15", "-0.11026, -167.843, 30.6796, 0.96", "0.158324, -168.95, 30.8849, 1.92", "0.7797, -171.42, 31.4003, 0.22", "1.00982, -172.288, 31.6047, 0.22", "1.23286, -173.055, 31.7919, 0.15", "1.6427, -174.43, 32.1227, 0.15", "1.86906, -175.244, 32.3119, 0.81", "2.0528, -176.075, 32.5152, 1.62", "2.3154, -177.738, 32.949, 0.15", "2.49645, -179.036, 33.291, 0.15", "2.61335, -179.755, 33.4875, 0.15", "2.82038, -180.883, 33.8048, 0.88", "3.10589, -182.571, 34.2614, 0.15", "3.24247, -183.436, 34.4816, 0.96", "3.46237, -185.016, 34.8516, 2.21", "3.84663, -187.98, 35.5016, 0.15", "4.01927, -189.22, 35.7546, 0.96", "4.41686, -191.728, 36.293, 0.22", "4.63799, -192.926, 36.5598, 0.88", "4.75908, -193.567, 36.7129, 0.88", "5.15227, -195.603, 37.2499, 0.07", "5.2435, -196.033, 37.3774, 0.29", "5.45599, -196.948, 37.687, 0.29", "5.67489, -197.839, 38.0131, 0.15", "5.81536, -198.556, 38.2792, 0.15", "6.0055, -199.734, 38.6952, 0.15", "6.11574, -200.56, 38.9516, 0.74", "6.24129, -201.733, 39.2972, 1.77", "6.29384, -202.475, 39.5113, 1.33", "6.37174, -204.316, 40.0623, 0.07", "6.37981, -204.926, 40.2458, 0.37", "6.35605, -206.821, 40.8363, 0.07", "6.34218, -207.831, 41.1561, 0.59", "6.35586, -209.468, 41.6805, 0.15", "6.3827, -210.312, 41.9449, 0.22", "6.44643, -211.601, 42.3367, 1.33", "6.53789, -213.491, 42.8971, 0.07", "6.55994, -214.224, 43.0992, 0.88", "6.67436, -216.342, 43.6656, 0.15", "6.75314, -217.312, 43.9218, 0.15", "6.8361, -218.151, 44.148, 0.15", "6.93931, -219.077, 44.4154, 0.74", "7.0666, -220.4, 44.8023, 2.14", "7.22317, -222.795, 45.5001, 0.15", "7.22578, -223.549, 45.6911, 0.44", "7.13667, -225.479, 46.116, 0.07", "7.05291, -226.27, 46.264, 0.15", "6.89789, -227.178, 46.4064, 0.07", "6.63438, -228.278, 46.5488, 1.11", "5.85109, -230.849, 46.7908, 0.15", "5.49001, -231.941, 46.8801, 1.03", "4.80627, -233.905, 47.0033, 0.15", "4.53449, -234.791, 47.0473, 0.44", "4.16407, -236.396, 47.132, 0.15", "3.97168, -237.656, 47.2125, 1.62", "3.93531, -238.309, 47.2617, 1.77", "3.97092, -239.293, 47.3333, 1.03", "4.25158, -241.779, 47.5025, 0.15", "4.6347, -244.136, 47.6635, 0.15", "4.79449, -244.913, 47.7254, 0.88", "5.03192, -245.953, 47.8481, 1.18", "5.71333, -248.648, 48.2486, 0.07", "5.86079, -249.188, 48.3421, 0.15", "6.33006, -250.881, 48.6807, 0.07", "6.841, -252.723, 49.081, 0.15", "7.25143, -254.31, 49.4302, 1.33", "7.87973, -256.904, 50.0059, 0.15", "8.11032, -257.977, 50.2507, 0.22", "8.41152, -259.72, 50.5912, 0.07", "8.48111, -260.26, 50.6768, 0.22", "8.70457, -262.838, 50.9656, 0.07", "8.73447, -263.344, 51.0079, 0.81", "8.78887, -265.182, 51.1266, 1.92", "8.867, -267.424, 51.184, 0.15", "8.92739, -268.601, 51.1554, 0.88", "9.11353, -271.173, 51.0013, 0.15", "9.17665, -271.86, 50.9326, 0.44", "9.3958, -273.993, 50.6767, 0.07", "9.6216, -275.755, 50.454, 0.07", "9.76202, -276.909, 50.3478, 0.15", "9.85917, -277.803, 50.3, 0.74", "9.92782, -278.616, 50.2992, 0.74", "10.0856, -280.427, 50.5254, 0.07", "10.2322, -281.662, 50.87, 0.07", "10.3684, -282.862, 51.3594, 0.07", "10.4796, -283.851, 51.8227, 1.25", "10.5669, -284.643, 52.2076, 1.99", "10.8616, -287.358, 53.4758, 0.15", "11.0112, -288.842, 54.1299, 0.96", "11.1909, -290.981, 54.9793, 0.07", "11.3137, -292.668, 55.5694, 0.07", "11.379, -293.909, 55.9296, 0.81", "11.516, -297.228, 56.6823, 0.15", "11.5306, -298.07, 56.8136, 0.29", "11.5449, -299.723, 56.9857, 0.07", "11.5722, -301.111, 57.0668, 1.47", "11.6467, -304.222, 57.1529, 0.07", "11.6615, -305.576, 57.1946, 0.07", "11.6491, -306.577, 57.199, 1.11", "11.5882, -309.171, 57.1279, 0.07", "11.5526, -310.272, 57.0573, 0.74", "11.5113, -311.274, 56.9484, 1.92", "11.3547, -314.024, 56.5464, 0.15", "11.2149, -316.135, 56.1999, 0.22", "11.0479, -318.57, 55.7986, 0.22", "10.9652, -319.64, 55.6055, 0.81", "10.8522, -321.021, 55.3595, 1.84", "10.6125, -323.988, 54.9542, 0.07", "10.5462, -324.862, 54.8671, 0.29", "10.3576, -327.059, 54.9286, 0.07", "10.2174, -328.457, 55.0565, 0.07", "10.0477, -330.042, 55.2831, 1.55", "9.7885, -332.467, 55.7935, 0.07", "9.70179, -333.329, 56.031, 0.07", "9.51146, -335.577, 56.7513, 1.47" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-5.99219, -125.017, 24.925, 0.22", "-6.59931, -126.031, 25.4573, 0.22", "-7.05659, -127.006, 25.9051, 0.44", "-7.23514, -127.472, 26.1015, 0.15", "-7.36965, -127.86, 26.2644, 0.15", "-7.4368, -128.041, 26.3409, 0.37", "-7.65962, -128.563, 26.5615, 0.44", "-7.87134, -129.007, 26.738, 0.15", "-7.97112, -129.187, 26.826, 0.22", "-8.14444, -129.48, 27.0208, 0.22", "-8.3803, -129.859, 27.3203, 0.22", "-8.59191, -130.203, 27.6202, 0.81", "-8.94763, -130.83, 28.1821, 0.22", "-9.30794, -131.552, 28.8225, 0.96", "-9.62223, -132.27, 29.4298, 2.21", "-10.1492, -133.697, 30.5558, 0.22", "-10.3387, -134.32, 31.032, 0.22", "-10.4473, -134.755, 31.3481, 0.22", "-10.5185, -135.089, 31.5699, 0.22", "-10.6418, -135.616, 31.8706, 0.22", "-10.7683, -136.024, 32.0869, 0.22", "-10.93, -136.425, 32.2959, 0.88", "-11.1799, -136.911, 32.5755, 1.4", "-11.5969, -137.55, 33.0141, 2.14", "-12.3761, -138.574, 33.8264, 0.52", "-12.9676, -139.268, 34.4435, 0.22", "-13.3062, -139.636, 34.7893, 0.22", "-13.7793, -140.107, 35.2499, 1.11", "-14.5565, -140.776, 35.9875, 1.99", "-14.9723, -141.073, 36.3716, 1.99", "-15.1186, -141.153, 36.5114, 1.99" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-39.673, -110.36, 8.59282, 0.22", "-40.8972, -111.636, 8.32321, 0.22", "-41.5505, -112.352, 8.18665, 0.22", "-42.12, -112.969, 8.06207, 1.33", "-43.1655, -114.103, 7.82481, 0.15", "-43.5391, -114.52, 7.73922, 0.15", "-43.8091, -114.833, 7.6777, 0.37", "-44.2408, -115.397, 7.6134, 0.37", "-44.8587, -116.307, 7.5231, 0.22", "-45.1316, -116.732, 7.47088, 0.15", "-45.3304, -117.058, 7.42173, 0.15", "-45.4736, -117.302, 7.39615, 0.15", "-45.8034, -117.891, 7.35022, 0.15", "-46.1309, -118.523, 7.31648, 0.74", "-46.6605, -119.565, 7.2649, 0.15", "-47.0166, -120.198, 7.17119, 0.15", "-47.5541, -121.062, 6.97038, 0.15", "-47.7579, -121.373, 6.86692, 0.15", "-48.2064, -122.037, 6.58502, 1.33", "-48.6381, -122.618, 6.33147, 2.14", "-49.8373, -124.026, 5.69733, 0.15", "-50.4581, -124.648, 5.40858, 1.25", "-51.4034, -125.497, 5.00109, 0.07", "-51.7755, -125.818, 4.86483, 0.22", "-52.9639, -126.798, 4.48756, 0.22", "-53.5728, -127.268, 4.32909, 1.25", "-53.9717, -127.557, 4.25181, 1.25", "-55.2296, -128.603, 3.96284, 0.07", "-56.0487, -129.407, 3.73452, 0.07", "-56.568, -130.068, 3.5118, 0.07", "-56.9618, -130.771, 3.199, 0.07", "-57.1471, -131.182, 3.00514, 1.18", "-57.7262, -132.736, 2.23944, 0.07", "-57.8343, -133.087, 2.06605, 0.88", "-58.0921, -134.057, 1.59349, 1.92", "-58.5156, -135.76, 0.785419, 0.15", "-58.6426, -136.305, 0.532332, 0.22", "-58.8703, -137.156, 0.133217, 0.07", "-59.0003, -137.616, -0.075789, 0.07", "-59.1832, -138.352, -0.371763, 0.29", "-59.5102, -139.866, -0.85612, 0.07", "-59.7802, -141.21, -1.16646, 0.22", "-59.9737, -142.144, -1.34239, 1.55", "-60.3671, -143.832, -1.544, 0.22", "-60.6423, -144.871, -1.60775, 0.07", "-60.8958, -145.797, -1.61665, 0.07", "-61.0772, -146.419, -1.55295, 0.07", "-61.2823, -146.983, -1.42897, 0.15", "-61.6495, -147.819, -1.13834, 0.07", "-61.9278, -148.182, -0.931179, 0.88" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-39.673, -110.36, 8.59282, 0.29", "-40.9699, -110.1, 7.83423, 0.29", "-41.5875, -109.951, 7.3896, 0.22", "-41.9659, -109.854, 7.0764, 0.74", "-42.4125, -109.733, 6.68082, 0.96", "-42.9372, -109.598, 6.20429, 0.29", "-43.4769, -109.458, 5.70293, 0.15", "-44.0497, -109.305, 5.13188, 0.15", "-44.5452, -109.194, 4.67115, 1.03", "-45.1795, -109.072, 4.11951, 0.29", "-46.0648, -108.921, 3.4004, 0.22", "-46.5614, -108.848, 3.02598, 1.11", "-47.3734, -108.752, 2.47091, 2.14", "-48.9263, -108.59, 1.49637, 0.22", "-49.3238, -108.553, 1.25976, 0.81", "-50.1216, -108.49, 0.791672, 1.7", "-51.2066, -108.397, 0.168946, 0.22", "-51.6605, -108.358, -0.102312, 0.88", "-52.3388, -108.307, -0.5329, 1.55", "-52.8368, -108.266, -0.870432, 0.59", "-53.7673, -108.195, -1.52397, 0.15", "-54.4387, -108.166, -2.03146, 0.88", "-55.0976, -108.144, -2.57461, 0.15", "-55.6127, -108.113, -3.03678, 0.22", "-56.0591, -108.077, -3.46722, 0.81", "-56.7159, -108.026, -4.12502, 1.99", "-57.6196, -107.995, -5.09192, 0.22", "-58.0565, -107.992, -5.57343, 0.22", "-58.4966, -107.982, -6.07039, 0.52", "-58.9484, -107.966, -6.59795, 1.18", "-59.6586, -107.922, -7.43894, 1.99", "-60.5586, -107.845, -8.55523, 0.15", "-60.8915, -107.81, -8.9718, 0.29", "-61.4286, -107.78, -9.65577, 0.07", "-61.7814, -107.784, -10.1491, 0.22", "-62.0287, -107.794, -10.5653, 0.22", "-62.2102, -107.829, -11.0078, 0.22", "-62.2662, -107.861, -11.2001, 0.22", "-62.3565, -108.032, -11.7384, 0.22", "-62.4017, -108.35, -12.3401, 0.22", "-62.4156, -108.626, -12.7807, 0.22", "-62.4774, -109.297, -13.7421, 1.84" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "79.5633, 37.9034, 92.9988, 0.22", "81.322, 38.0523, 94.767, 0.22", "81.7186, 38.0516, 95.1599, 0.22", "82.6571, 38.0875, 96.0446, 0.59", "83.5365, 38.1775, 96.8099, 0.44", "84.0258, 38.2374, 97.1951, 0.44", "84.6649, 38.3089, 97.6131, 0.15", "85.3309, 38.4138, 97.9251, 0.15", "86.2168, 38.4997, 98.2238, 0.15", "86.9458, 38.5307, 98.3753, 0.96", "87.9355, 38.559, 98.5158, 1.55", "89.3149, 38.6663, 98.7099, 0.22", "90.3088, 38.7501, 98.8396, 0.37", "91.0885, 38.783, 98.9223, 0.22", "91.7391, 38.7805, 98.9892, 0.22", "92.4758, 38.7756, 99.0719, 0.37", "93.8647, 38.7782, 99.2803, 0.22", "94.6336, 38.8001, 99.4455, 0.22", "95.6327, 38.8751, 99.7201, 0.22", "96.273, 38.9434, 99.9235, 0.96", "97.3622, 39.0744, 100.317, 1.99", "99.1489, 39.2567, 101.017, 0.22", "100.274, 39.3148, 101.492, 0.15", "101.367, 39.3592, 102.015, 0.15", "101.729, 39.3676, 102.205, 0.15", "102.239, 39.3525, 102.474, 0.15", "102.732, 39.3161, 102.696, 0.15", "103.662, 39.2245, 103.012, 0.15", "104.255, 39.1121, 103.164, 0.81", "104.964, 38.9181, 103.324, 1.47", "105.488, 38.7621, 103.441, 1.47", "107.061, 38.2853, 103.76, 0.15", "107.456, 38.1767, 103.853, 0.22", "108.501, 37.8603, 104.121, 0.37", "109.554, 37.4941, 104.407, 1.03", "110.575, 37.1192, 104.794, 1.77", "111.117, 36.9234, 105.07, 1.77", "112.716, 36.3628, 106.079, 0.22", "113.306, 36.2081, 106.501, 0.22", "114.219, 36.0766, 107.192, 1.11", "116.052, 35.9546, 108.667, 0.22", "116.803, 35.9166, 109.327, 0.22", "117.522, 35.8765, 109.998, 0.66", "118.528, 35.8186, 110.929, 0.88", "119.216, 35.8018, 111.555, 1.7", "120.664, 35.8328, 112.885, 0.44", "121.74, 35.8976, 113.832, 0.74", "122.534, 35.9931, 114.538, 1.25", "123.827, 36.2871, 115.749, 0.22", "124.273, 36.4329, 116.184, 0.22", "125.022, 36.7838, 116.953, 0.37", "125.532, 37.0911, 117.445, 0.37", "126.36, 37.6387, 118.161, 1.47", "127.379, 38.2979, 118.981, 0.29", "127.875, 38.6033, 119.348, 0.29", "128.15, 38.7607, 119.548, 0.29", "129.041, 39.2398, 120.25, 0.15", "129.594, 39.5531, 120.781, 0.22", "130.01, 39.8103, 121.271, 0.74", "130.463, 40.1485, 121.958, 1.25", "131.161, 40.8125, 123.309, 0.22", "131.669, 41.3806, 124.463, 0.96", "132.107, 41.8986, 125.549, 0.96", "132.476, 42.266, 126.433, 0.29", "132.957, 42.6355, 127.542, 0.29", "133.381, 42.8658, 128.516, 0.29", "133.798, 43.009, 129.455, 0.29", "134.156, 43.1071, 130.446, 0.29", "134.375, 43.1524, 131.385, 0.29", "134.475, 43.1552, 132.319, 0.29", "134.504, 43.1456, 132.914, 0.29", "134.521, 43.1489, 133.709, 0.29", "134.521, 43.1982, 135.241, 0.59", "134.519, 43.2668, 136.404, 0.59", "134.562, 43.3671, 137.85, 0.59", "134.652, 43.4241, 138.865, 0.59", "134.877, 43.4523, 140.116, 0.59", "135.126, 43.4321, 140.975, 0.59", "135.268, 43.4168, 141.301, 0.59", "135.772, 43.3533, 142.139, 0.59", "136.047, 43.2957, 142.466, 0.59", "136.77, 43.0989, 143.119, 0.22", "137.362, 42.9258, 143.51, 0.22", "138.175, 42.7535, 144.073, 0.22", "138.746, 42.6992, 144.533, 0.22", "139.631, 42.7365, 145.283, 0.22", "140.25, 42.8512, 145.882, 0.22", "140.888, 43.0538, 146.624, 1.11", "142.024, 43.5447, 148.158, 0.22", "142.633, 43.8477, 149.084, 0.22", "143.341, 44.2509, 150.263, 0.22", "143.89, 44.5163, 151.16, 0.22", "144.357, 44.5813, 151.882, 0.22", "144.606, 44.4949, 152.209, 0.22", "145.145, 44.1504, 152.777, 0.59", "146.004, 43.5247, 153.571, 0.59", "147.015, 42.804, 154.466, 0.15", "147.997, 42.1187, 155.307, 0.66", "149.035, 41.4321, 156.217, 0.15", "149.863, 40.9238, 156.985, 0.66", "150.54, 40.5712, 157.634, 1.03", "151.835, 40.0017, 158.825, 0.22", "152.922, 39.5962, 159.761, 0.15", "154.01, 39.2727, 160.645, 0.66", "154.68, 39.1466, 161.201, 1.25", "156.098, 39.0049, 162.384, 0.22", "157.137, 38.9579, 163.242, 0.15", "158.048, 38.9792, 163.933, 0.37", "158.595, 39.0345, 164.317, 0.59", "159.985, 39.212, 165.236, 0.15", "160.833, 39.3006, 165.804, 0.88", "162.291, 39.4251, 166.83, 0.22", "162.865, 39.4907, 167.252, 0.96", "163.339, 39.5553, 167.613, 0.66", "164.336, 39.7019, 168.35, 0.15", "165.32, 39.8927, 169.116, 0.81", "165.965, 40.0918, 169.704, 1.25", "166.808, 40.4744, 170.538, 0.15", "167.833, 41.0029, 171.608, 0.15", "168.139, 41.1757, 171.946, 0.29", "168.875, 41.6664, 172.81, 0.15", "169.225, 41.9247, 173.247, 0.96", "169.886, 42.359, 174.097, 0.29", "170.793, 42.8097, 175.208, 0.74", "171.699, 43.1822, 176.23, 0.15", "172.318, 43.4118, 176.901, 0.37", "172.691, 43.5488, 177.269, 0.37", "173.34, 43.8102, 177.923, 0.22", "174.069, 44.1346, 178.637, 0.22", "174.68, 44.3696, 179.144, 0.37", "175.404, 44.6257, 179.67, 0.37", "176.224, 44.9182, 180.194, 1.33", "177.798, 45.56, 181.109, 0.22", "178.821, 46.0771, 181.68, 1.03", "180.068, 46.7985, 182.342, 0.15", "180.489, 47.0824, 182.557, 0.15", "181.538, 47.965, 183.088, 0.15", "182.246, 48.7293, 183.497, 1.03", "182.785, 49.5285, 183.863, 0.15", "183.129, 50.1678, 184.152, 0.15", "183.584, 51.1426, 184.658, 0.15", "184.074, 52.1133, 185.301, 0.88", "184.563, 53.0295, 186.033, 0.29", "184.935, 53.681, 186.617, 0.81", "185.122, 53.9836, 186.899, 0.81", "185.806, 55.2935, 188.049, 0.22", "186.219, 56.2898, 188.852, 0.07", "186.425, 57.119, 189.436, 0.15", "186.468, 57.564, 189.711, 0.66", "186.448, 58.4844, 190.228, 1.55", "186.257, 60.8034, 191.418, 0.15", "186.08, 61.9133, 191.892, 0.15", "185.836, 62.9284, 192.299, 0.66", "185.614, 63.6652, 192.608, 0.15", "185.459, 64.0967, 192.795, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "79.5633, 37.9034, 92.9988, 0.29", "78.9552, 38.717, 94.0847, 0.29", "78.4803, 39.3524, 94.8215, 0.29", "77.9839, 40.053, 95.5498, 0.81", "77.7003, 40.4338, 95.9388, 1.4", "76.9873, 41.3038, 96.8536, 0.07", "76.6015, 41.7417, 97.3176, 1.03", "75.8299, 42.5172, 98.1063, 0.15", "75.1778, 43.1921, 98.7394, 1.55", "74.5746, 43.8635, 99.3421, 0.22", "74.1826, 44.3479, 99.7662, 0.22", "73.7806, 44.9139, 100.243, 0.81", "73.38, 45.5488, 100.751, 0.07", "73.0741, 46.1717, 101.207, 0.59", "72.8844, 46.7867, 101.577, 0.07", "72.8304, 47.1704, 101.777, 0.52", "72.8025, 48.4602, 102.418, 0.07", "72.8413, 48.887, 102.629, 0.96", "72.9198, 49.2839, 102.836, 0.96", "73.2203, 50.3349, 103.427, 0.22", "73.5268, 51.059, 103.857, 0.22", "73.8784, 51.6638, 104.259, 0.96", "74.3203, 52.2886, 104.711, 1.77", "74.9485, 53.1316, 105.379, 0.22", "75.3449, 53.6361, 105.802, 0.15", "75.6892, 54.059, 106.142, 0.15", "75.8647, 54.2889, 106.32, 0.15", "76.4073, 55.0957, 106.915, 0.88", "76.8844, 56.0471, 107.589, 0.22", "77.082, 56.5888, 107.965, 0.81", "77.3583, 57.5163, 108.61, 0.15", "77.539, 58.1853, 109.073, 0.66", "77.7256, 58.9256, 109.579, 1.84", "78.0955, 60.3026, 110.517, 0.15", "78.2991, 61.0868, 111.034, 0.15", "78.4642, 61.7244, 111.444, 0.15", "78.6177, 62.2395, 111.774, 0.66", "78.9764, 63.2092, 112.342, 0.15", "79.3857, 64.0973, 112.823, 0.15", "79.6219, 64.5391, 113.039, 0.66", "79.8315, 64.9694, 113.225, 0.22", "80.1116, 65.6665, 113.512, 0.22", "80.2532, 66.0839, 113.675, 0.81", "80.3387, 66.4224, 113.794, 0.81", "80.4605, 67.383, 114.124, 0.07", "80.4772, 67.9683, 114.334, 0.66", "80.3669, 69.2106, 114.808, 0.15", "80.2117, 70.0479, 115.137, 1.4", "79.9092, 71.2163, 115.627, 0.15", "79.6503, 71.9976, 115.976, 0.15", "79.3711, 72.6561, 116.286, 1.18", "78.7963, 73.6736, 116.831, 0.22", "78.2633, 74.3932, 117.254, 0.15", "77.9215, 74.8054, 117.51, 0.15", "77.5763, 75.2048, 117.764, 0.74", "77.1596, 75.6978, 118.057, 1.25", "76.316, 76.7361, 118.659, 0.22", "75.8734, 77.309, 118.989, 1.11", "75.118, 78.3351, 119.612, 0.22", "74.7104, 78.9315, 119.976, 1.47", "74.3233, 79.5324, 120.338, 0.96", "73.8149, 80.3841, 120.847, 0.22", "73.3864, 81.1607, 121.306, 0.74", "72.8696, 82.1225, 121.901, 0.15", "72.6454, 82.5313, 122.174, 0.15", "72.4084, 82.9782, 122.487, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "50.4937, 7.29081, 54.1945, 0.15", "52.1691, 5.96012, 56.6129, 0.15", "52.7579, 5.60258, 57.1769, 0.22", "53.2406, 5.34842, 57.5681, 0.88", "54.1205, 4.92368, 58.2082, 0.15", "54.7011, 4.66146, 58.602, 1.18", "55.3465, 4.37566, 59.0313, 2.58", "56.892, 3.79972, 59.8027, 0.29", "57.6057, 3.54369, 60.1463, 0.96", "58.1393, 3.35456, 60.4127, 1.18", "59.6468, 2.8394, 61.2553, 0.07", "60.2019, 2.66772, 61.621, 0.07", "60.4676, 2.58543, 61.8223, 0.07", "60.9429, 2.4142, 62.2598, 0.74", "61.3211, 2.24666, 62.664, 1.03", "62.1651, 1.79793, 63.6989, 0.15", "62.8383, 1.33863, 64.6431, 1.18", "63.0884, 1.12176, 65.0334, 1.4", "63.5788, 0.589728, 65.8971, 0.15", "63.898, 0.124887, 66.5376, 0.15", "64.0571, -0.16143, 66.8889, 0.88", "64.2334, -0.533567, 67.3222, 0.29", "64.529, -1.21955, 68.1266, 0.15", "64.7189, -1.68572, 68.7329, 0.81", "64.9053, -2.1824, 69.4446, 1.62", "65.1841, -3.15167, 70.9054, 0.15", "65.2935, -3.66291, 71.7061, 0.15", "65.3604, -4.12131, 72.4242, 0.22", "65.3903, -4.6949, 73.3081, 0.22", "65.3829, -5.07438, 73.8696, 0.22", "65.3753, -5.43373, 74.4155, 1.18", "65.3772, -5.88831, 75.0724, 1.62", "65.5163, -6.72734, 76.2025, 0.22", "65.6915, -7.1376, 76.7843, 0.22", "65.8484, -7.35192, 77.1242, 0.44", "66.3252, -7.79384, 77.9439, 0.15", "66.7111, -8.05387, 78.5042, 1.33", "67.524, -8.51642, 79.5682, 0.15", "68.3946, -8.96291, 80.5999, 0.22", "68.8625, -9.22882, 81.1111, 0.22", "69.1046, -9.38001, 81.3623, 0.22", "69.5229, -9.68932, 81.7687, 0.74", "69.9667, -10.0463, 82.1508, 1.25", "70.3443, -10.357, 82.4072, 1.25", "71.5509, -11.4464, 83.0924, 0.22", "72.0778, -11.9379, 83.3985, 0.22", "72.517, -12.358, 83.6682, 1.03", "73.0683, -12.8884, 84.0101, 1.84", "74.4697, -14.2258, 84.8584, 0.22", "75.0752, -14.826, 85.2159, 1.11", "75.9253, -15.7447, 85.7329, 0.22", "76.4647, -16.3627, 86.0908, 0.15", "76.8492, -16.8046, 86.3675, 0.15", "77.4084, -17.4585, 86.8096, 1.03", "78.1862, -18.4202, 87.5003, 0.22", "78.5575, -18.8604, 87.8805, 0.96", "79.2126, -19.623, 88.6152, 0.15", "79.646, -20.1312, 89.1771, 0.15", "79.9512, -20.5154, 89.664, 0.96", "80.3508, -21.0179, 90.4249, 1.92", "81.3241, -22.0985, 92.4609, 0.22", "81.6437, -22.4037, 93.1357, 0.44", "82.1341, -22.8673, 94.2392, 1.18", "82.6973, -23.4244, 95.6627, 0.22", "83.2191, -23.9618, 97.2128, 0.52", "83.5977, -24.3655, 98.6413, 0.81", "83.776, -24.5711, 99.6442, 0.81", "83.9769, -24.7731, 101.363, 0.52", "83.9939, -24.7789, 102.322, 0.52", "83.8691, -24.6107, 103.254, 0.52", "83.5813, -24.259, 104.061, 0.52", "83.2472, -23.8344, 104.636, 1.25", "82.9233, -23.347, 105.09, 1.25", "82.5552, -22.6299, 105.61, 0.37", "82.1299, -21.5472, 106.351, 0.66", "81.9177, -20.7964, 106.85, 0.37", "81.8071, -20.0177, 107.408, 0.66", "81.8102, -19.1757, 108.153, 0.15", "81.8942, -18.6734, 108.711, 0.15", "81.9956, -18.4098, 109.083, 0.15", "82.2052, -18.0211, 109.728, 1.62", "82.6196, -17.3136, 110.996, 0.22", "83.0613, -16.5491, 112.467, 0.88", "83.388, -15.9566, 113.743, 1.4", "83.6402, -15.45, 114.925, 1.4", "83.918, -14.7651, 116.581, 0.66", "84.0883, -14.1784, 118.081, 0.29", "84.1309, -13.916, 118.851, 0.29", "84.1387, -13.6924, 119.629, 0.29", "84.1035, -13.5838, 120.151, 0.29", "83.9149, -13.4791, 121.386, 0.29", "83.7117, -13.5368, 122.247, 0.29", "83.448, -13.6762, 123.226, 0.29", "83.2324, -13.7354, 123.943, 0.29", "83.0379, -13.7053, 124.459, 0.29", "82.8869, -13.6362, 124.789, 0.29", "82.4888, -13.3091, 125.4, 0.88", "82.0619, -12.8326, 125.931, 1.25", "81.666, -12.3134, 126.402, 0.59", "81.1372, -11.5925, 126.982, 1.25", "80.7801, -11.0832, 127.369, 1.4", "79.681, -9.51839, 128.51, 0.15", "79.2514, -8.92536, 128.916, 0.74", "78.4511, -7.85299, 129.607, 0.22", "77.8891, -7.11401, 130.082, 1.03", "77.4945, -6.59648, 130.427, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "50.4937, 7.29081, 54.1945, 0.15", "49.5126, 6.06235, 54.6736, 0.15", "49.117, 5.55493, 54.8509, 0.07", "48.6428, 4.94656, 55.0451, 1.03", "47.981, 4.10494, 55.2864, 0.07", "47.3207, 3.2795, 55.5079, 0.07", "46.9433, 2.82181, 55.6241, 0.66", "46.1778, 1.90442, 55.7379, 0.07", "45.7861, 1.425, 55.7654, 0.07", "45.2214, 0.723704, 55.7745, 0.07", "45.054, 0.514475, 55.7576, 0.29", "44.7388, 0.106745, 55.692, 0.81", "43.878, -1.03098, 55.4401, 0.07", "43.2951, -1.82477, 55.2224, 0.07", "42.8972, -2.37934, 55.0399, 0.15", "42.1049, -3.5175, 54.6232, 0.07", "41.6262, -4.24428, 54.3455, 0.07", "41.3588, -4.67829, 54.1768, 0.22", "41.1603, -5.01694, 54.0423, 0.22", "40.5646, -6.01586, 53.631, 0.15", "40.2206, -6.60303, 53.3962, 0.15", "39.8276, -7.31874, 53.1325, 0.07", "39.6207, -7.71288, 52.9877, 0.15", "39.1265, -8.65103, 52.6589, 0.07", "38.8307, -9.17578, 52.4756, 0.59", "38.2805, -10.0076, 52.1647, 0.07", "37.9655, -10.4017, 51.9762, 0.07", "37.7202, -10.6536, 51.8236, 0.22", "37.1889, -11.1304, 51.4969, 0.22", "36.5276, -11.6828, 51.1192, 0.07", "35.7321, -12.323, 50.7012, 0.07", "35.3447, -12.6062, 50.5198, 0.07", "34.856, -12.9155, 50.3318, 0.07", "34.055, -13.3437, 50.1109, 0.29", "32.8277, -13.8815, 49.9271, 0.07", "32.2767, -14.0695, 49.9301, 0.29", "31.7847, -14.2145, 49.9931, 0.29", "30.8471, -14.4822, 50.1734, 0.07", "29.9434, -14.7065, 50.3876, 0.07", "29.5624, -14.7777, 50.4834, 0.22", "28.9887, -14.8493, 50.6157, 0.37", "28.216, -14.9539, 50.7517, 0.29", "27.2619, -15.1152, 50.7816, 0.07", "26.9223, -15.18, 50.7392, 0.37", "26.4213, -15.2577, 50.6314, 0.59", "25.4534, -15.3296, 50.3634, 0.07", "24.9662, -15.3281, 50.202, 0.15", "23.7644, -15.2411, 49.7584, 0.07", "22.9791, -15.1534, 49.4462, 0.07", "22.294, -15.1016, 49.1716, 0.15", "21.3839, -15.1001, 48.8248, 0.07", "20.9086, -15.1518, 48.6653, 0.07", "20.6359, -15.2063, 48.5916, 0.29", "20.3054, -15.3036, 48.533, 0.29", "19.3855, -15.6556, 48.4069, 0.07", "18.5281, -16.035, 48.3192, 0.07", "17.7638, -16.3955, 48.2575, 0.07", "17.477, -16.5269, 48.2263, 0.07", "17.3286, -16.5918, 48.2023, 0.15", "17.0898, -16.6824, 48.1437, 0.15", "16.629, -16.7938, 47.9702, 0.15", "16.0076, -16.8444, 47.6531, 0.15", "15.3683, -16.8325, 47.2427, 0.15", "14.9918, -16.8129, 46.9867, 0.15", "14.5863, -16.788, 46.707, 0.15", "14.1844, -16.7605, 46.4227, 0.15", "13.8792, -16.7385, 46.199, 0.15", "13.5279, -16.694, 45.9454, 0.15", "12.8484, -16.5573, 45.4509, 0.07", "12.3995, -16.4615, 45.1408, 0.07", "11.7649, -16.3686, 44.7547, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-45.9446, 47.8069, 36.5363, 0.07", "-46.3403, 47.2029, 38.3239, 0.07", "-46.4961, 46.8187, 39.4992, 0.88", "-46.5892, 46.3129, 41.0796, 0.22", "-46.6614, 45.968, 42.1617, 0.88", "-46.7693, 45.5022, 43.5996, 1.84", "-46.9538, 44.5853, 46.3246, 0.22", "-46.9609, 44.1279, 47.4708, 0.22", "-46.9395, 43.6802, 48.3717, 0.22", "-46.891, 42.816, 49.8474, 0.15", "-46.8522, 42.1523, 50.8556, 0.15", "-46.8498, 41.5883, 51.5848, 0.29", "-46.9095, 40.3256, 52.9569, 1.25", "-47.0613, 38.3581, 54.9244, 0.07", "-47.1163, 37.6783, 55.5687, 0.88", "-47.1346, 37.3019, 55.9185, 1.18", "-47.2334, 35.8454, 57.2804, 0.07", "-47.2968, 35.1433, 57.9659, 0.74", "-47.3902, 33.9494, 59.311, 0.07", "-47.3802, 33.4677, 59.9641, 0.29", "-47.2441, 32.8351, 61.0036, 0.07", "-46.995, 32.3762, 61.99, 1.03", "-46.7282, 32.1309, 62.7527, 1.47", "-45.9769, 31.7048, 64.5959, 0.22", "-45.3464, 31.4799, 65.9955, 0.22", "-44.7232, 31.3205, 67.407, 0.22", "-44.296, 31.2203, 68.524, 0.22", "-44.0783, 31.1463, 69.1915, 0.22", "-43.8796, 30.931, 70.077, 0.22", "-43.7996, 30.6831, 70.7346, 0.22", "-43.7906, 30.2083, 71.7301, 0.22", "-43.832, 29.4071, 73.0627, 1.03", "-43.8536, 28.5733, 74.2723, 1.47", "-43.81, 26.9139, 76.4862, 0.07", "-43.8, 26.4692, 77.0615, 1.25", "-43.8029, 25.8234, 77.8913, 1.4", "-43.8568, 24.5151, 79.5247, 0.29", "-43.9444, 23.6857, 80.5446, 0.15", "-44.0855, 23.0155, 81.3653, 0.81", "-44.4955, 21.6147, 83.0562, 0.15", "-44.8105, 20.8335, 83.9559, 0.15", "-45.0783, 20.2801, 84.5876, 0.37", "-45.6335, 19.3746, 85.5082, 0.15", "-45.9609, 18.8871, 85.9352, 0.88", "-46.3052, 18.3938, 86.3155, 1.55", "-47.716, 16.4491, 87.7168, 0.22", "-48.0871, 15.9641, 88.082, 0.22", "-48.996, 14.8751, 88.9919, 0.81", "-50.1993, 13.5565, 90.2406, 0.07", "-50.6663, 13.1028, 90.7675, 0.74", "-51.3784, 12.501, 91.6776, 0.22", "-52.125, 11.9458, 92.8239, 0.37", "-52.6045, 11.6208, 93.6841, 0.22", "-53.2901, 11.1745, 95.2169, 1.03", "-53.8943, 10.7203, 97.0124, 0.07", "-54.2466, 10.367, 98.4936, 0.88", "-54.4729, 10.0386, 99.8044, 1.25", "-54.8198, 9.29707, 102.176, 0.15", "-54.9717, 8.8617, 103.296, 0.74", "-55.2614, 7.8758, 105.32, 0.22", "-55.5716, 6.79211, 107.096, 1.11", "-55.8034, 6.08032, 108.091, 2.06", "-56.4961, 4.2583, 110.37, 0.15", "-56.7939, 3.5718, 111.169, 0.29", "-57.5411, 2.11174, 112.834, 0.07", "-57.9527, 1.47285, 113.603, 0.22", "-58.7804, 0.414503, 115.064, 0.07", "-59.2474, -0.0546501, 115.93, 1.4", "-60.3271, -0.887944, 118.068, 0.07", "-60.8608, -1.23697, 119.15, 0.81", "-61.7495, -1.68285, 121.053, 0.07", "-62.292, -1.88491, 122.28, 0.96", "-63.3225, -2.13091, 124.593, 0.07", "-63.7229, -2.19455, 125.448, 0.07", "-64.2547, -2.2578, 126.529, 1.25", "-65.5019, -2.42819, 128.893, 0.22", "-66.3778, -2.59707, 130.433, 0.88", "-66.9934, -2.71228, 131.36, 1.18", "-68.887, -3.07107, 133.832, 0.15", "-69.4957, -3.20107, 134.543, 0.81", "-70.4881, -3.44806, 135.573, 0.15", "-71.4695, -3.73546, 136.441, 1.18", "-73.0979, -4.17443, 137.7, 0.07", "-73.8258, -4.33295, 138.201, 0.07", "-74.9286, -4.44685, 138.767, 0.07", "-75.5296, -4.46931, 139.02, 0.88", "-76.4406, -4.47176, 139.365, 1.33", "-78.9991, -4.3598, 140.203, 0.07", "-80.2263, -4.26239, 140.54, 1.33", "-83.2945, -3.85981, 141.259, 0.07", "-83.825, -3.76548, 141.36, 0.15" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-45.9446, 47.8069, 36.5363, 0.15", "-45.1644, 46.3797, 36.557, 0.15", "-44.8414, 45.7795, 36.5191, 0.29", "-44.3471, 44.88, 36.4388, 0.15", "-44.1495, 44.5325, 36.3954, 0.52", "-43.7441, 43.8352, 36.2986, 1.33", "-42.9756, 42.4862, 36.1313, 0.07", "-42.5853, 41.7515, 36.0187, 0.07", "-42.2529, 41.1264, 35.9521, 0.37", "-41.6453, 40.1074, 35.9689, 0.07", "-41.4477, 39.8084, 36.0154, 0.15", "-40.5207, 38.4796, 36.4122, 0.15", "-40.2899, 38.1756, 36.55, 0.74", "-39.78, 37.5057, 36.9205, 1.25", "-38.5739, 35.8727, 37.9711, 0.15", "-37.8855, 34.9117, 38.6614, 0.15", "-37.5817, 34.4784, 38.9814, 0.15", "-37.22, 33.9322, 39.3761, 0.15", "-36.7922, 33.2099, 39.8447, 1.25", "-36.153, 31.8912, 40.5665, 0.07", "-35.9377, 31.3216, 40.8242, 0.96", "-35.7716, 30.8042, 41.0203, 1.25", "-35.2345, 29.0448, 41.6188, 0.15", "-35.0159, 28.307, 41.8347, 0.96", "-34.5838, 26.8864, 42.1841, 0.07", "-34.3708, 26.2, 42.3197, 0.29", "-33.7446, 24.1654, 42.6463, 0.07", "-33.6056, 23.712, 42.707, 0.29", "-33.162, 22.2885, 42.855, 0.07", "-32.9396, 21.6373, 42.9094, 1.03", "-32.6997, 21.0098, 42.9563, 1.47", "-31.7511, 18.7901, 43.1294, 0.07", "-31.5056, 18.2854, 43.1742, 0.59", "-31.1457, 17.5882, 43.2502, 0.07", "-30.7995, 16.9378, 43.3542, 0.07", "-30.3284, 16.0687, 43.5296, 0.07", "-29.9253, 15.2981, 43.7265, 1.18", "-28.9136, 13.31, 44.3263, 0.07", "-28.6522, 12.7303, 44.5121, 0.74", "-28.032, 11.1699, 45.0301, 0.07", "-27.8796, 10.7189, 45.181, 0.44", "-27.4297, 9.17093, 45.7281, 0.07", "-27.235, 8.3745, 46.0285, 1.47", "-26.9047, 6.72839, 46.679, 0.07", "-26.8188, 6.21455, 46.8779, 0.37", "-26.6807, 5.17638, 47.261, 0.07", "-26.5179, 3.79328, 47.8004, 0.07", "-26.4223, 2.9016, 48.1597, 0.07", "-26.3619, 2.44205, 48.3564, 0.37", "-26.1784, 1.32196, 48.8608, 0.15", "-26.0487, 0.636758, 49.1968, 0.81", "-25.792, -0.529724, 49.8117, 0.15", "-25.5511, -1.46933, 50.3445, 1.55", "-25.122, -2.9788, 51.2772, 0.07", "-24.9815, -3.41822, 51.5839, 0.66", "-24.5293, -4.56929, 52.493, 0.07", "-24.3276, -4.95929, 52.8224, 0.29", "-23.966, -5.51484, 53.3176, 0.07", "-23.7286, -5.84968, 53.6441, 0.74", "-23.0865, -6.68513, 54.516, 0.15", "-22.4797, -7.39071, 55.2592, 1.18", "-21.0925, -8.72542, 56.6609, 0.15", "-20.5965, -9.16417, 57.1157, 0.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-80.4816, 104.773, 123.635, 0.07", "-81.3479, 103.878, 123.11, 0.07", "-81.6486, 103.488, 122.916, 0.07", "-81.9548, 103.092, 122.718, 0.22", "-82.533, 102.343, 122.345, 0.07", "-82.7682, 102.038, 122.193, 0.52", "-83.1644, 101.525, 121.937, 0.07", "-83.3078, 101.238, 121.849, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-80.4816, 104.773, 123.635, 0.29", "-82.1334, 104.941, 126.14, 0.29", "-83.4242, 104.884, 127.907, 0.29", "-85.0106, 104.736, 129.787, 0.59", "-87.2144, 104.561, 132.214, 0.74", "-88.3012, 104.526, 133.357, 1.03", "-89.5859, 104.611, 134.69, 1.03", "-91.2453, 104.854, 136.365, 0.15", "-92.5058, 105.26, 137.63, 0.44", "-94.0829, 105.941, 139.182, 0.81", "-95.0979, 106.568, 140.142, 1.03", "-96.8833, 107.971, 141.891, 0.15", "-98.3792, 109.471, 143.465, 0.74", "-99.7135, 111.278, 145.165, 0.37" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "13.2086, -16.1529, 6.82143, 0.22", "13.5722, -17.5386, 5.11239, 0.22", "13.7358, -18.181, 4.4654, 0.37", "13.8507, -18.5796, 4.10952, 0.59", "14.063, -19.3165, 3.45157, 0.22", "14.2943, -20.1194, 2.73471, 1.47", "14.5301, -20.9378, 2.00397, 0.29", "14.751, -21.7644, 1.50679, 0.15", "14.9712, -22.5539, 1.11039, 1.03", "16.0473, -28.5572, -4.80465, 1.03" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "13.2086, -16.1529, 6.82143, 0.22", "13.2998, -17.0319, 7.34805, 0.22", "13.3452, -17.8792, 7.7685, 1.4", "13.3029, -19.2881, 8.31284, 2.65", "12.9473, -22.8622, 9.4417, 0.22", "12.843, -23.5799, 9.62642, 0.22", "12.6427, -24.6882, 9.86002, 0.96", "12.3018, -26.0347, 10.0347, 2.06", "11.6177, -28.1805, 10.1356, 0.22", "11.1474, -29.3788, 10.0394, 0.15", "10.7523, -30.2938, 9.83831, 0.29", "10.3204, -31.2276, 9.60546, 0.15", "9.89621, -32.2201, 9.3443, 1.18", "9.66982, -32.8162, 9.18366, 1.7", "8.80125, -35.4423, 8.48458, 0.22", "8.49517, -36.5167, 8.21925, 0.81", "8.32173, -37.2261, 8.06874, 1.4", "7.81961, -39.6758, 7.64002, 0.15", "7.73268, -40.325, 7.56968, 0.15", "7.66403, -41.6492, 7.51537, 0.15", "7.67102, -42.5202, 7.5355, 0.37", "7.66402, -43.3847, 7.56626, 1.33", "7.60822, -44.3933, 7.59439, 1.84", "7.07253, -47.5628, 7.61612, 0.22", "6.62641, -49.2376, 7.5688, 0.07", "6.42086, -49.9421, 7.54317, 0.96", "5.90237, -51.425, 7.46765, 0.22", "5.40977, -52.5398, 7.37147, 1.33", "4.26908, -54.3859, 7.09717, 0.22", "3.33924, -55.2317, 6.83625, 1.18" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.769355, 40.3255, 30.1324, 0.44", "-1.8706, 40.5659, 30.1805, 0.44", "-2.67365, 40.8514, 30.1408, 0.44", "-3.45012, 41.2099, 30.0985, 0.44", "-3.78893, 41.3813, 30.0886, 0.44", "-4.33213, 41.6614, 30.0724, 0.96", "-4.6731, 41.8366, 30.0578, 1.18", "-5.56272, 42.2898, 29.9392, 0.15", "-5.99926, 42.5389, 29.8987, 0.15", "-6.41563, 42.7755, 29.8969, 0.15", "-7.06706, 43.0994, 29.9244, 0.15", "-7.44908, 43.2371, 29.9399, 1.33", "-8.26431, 43.442, 29.9532, 1.92", "-9.73406, 43.6764, 29.9363, 0.22", "-10.6968, 43.7591, 29.8836, 0.59", "-11.2221, 43.7539, 29.8578, 1.03", "-12.5143, 43.6202, 29.8297, 0.15", "-13.2593, 43.4749, 29.8396, 0.15", "-13.6217, 43.3624, 29.8515, 0.88", "-14.3527, 43.0289, 29.8708, 1.92", "-15.8997, 42.1782, 29.9279, 0.22", "-16.3115, 41.9459, 29.9598, 0.22", "-16.8123, 41.6224, 29.9978, 0.22", "-17.0964, 41.4383, 30.0147, 0.22", "-17.8011, 41.0178, 30.0283, 0.22", "-18.3589, 40.7238, 30.012, 1.11", "-19.2258, 40.341, 29.923, 2.58", "-20.7914, 39.742, 29.718, 0.52", "-22.0089, 39.3032, 29.5738, 0.15", "-22.5254, 39.1253, 29.5296, 0.15", "-23.2545, 38.8982, 29.4957, 0.29", "-23.9422, 38.7057, 29.4811, 0.96", "-25.0461, 38.4019, 29.4752, 0.22", "-25.7779, 38.2367, 29.4954, 0.22", "-26.4485, 38.0527, 29.5087, 0.44", "-27.175, 37.8184, 29.5462, 1.62", "-27.8723, 37.5795, 29.6108, 1.99" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.769355, 40.3255, 30.1324, 1.47", "0.223908, 40.6921, 30.9255, 1.47" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-15.1186, -141.153, 36.5114, 0.22", "-15.0907, -140.467, 36.9192, 0.22", "-15.0534, -139.684, 37.3541, 0.22", "-15.003, -139.061, 37.6708, 0.22", "-14.9257, -138.359, 37.9968, 0.66", "-14.8544, -137.831, 38.2404, 0.81", "-14.6753, -136.837, 38.6809, 0.15", "-14.5315, -136.24, 38.9075, 1.18", "-14.3686, -135.653, 39.1062, 1.4", "-13.9629, -134.371, 39.5075, 0.15", "-13.7972, -133.929, 39.6376, 0.15", "-13.4048, -133.063, 39.8935, 1.7", "-12.9791, -132.291, 40.1033, 0.22", "-12.6175, -131.702, 40.2502, 0.88", "-12.3137, -131.237, 40.3585, 0.22", "-11.9821, -130.75, 40.4554, 0.07", "-11.6018, -130.149, 40.5625, 0.07", "-11.112, -129.309, 40.7134, 0.66", "-10.6448, -128.426, 40.87, 0.07", "-10.4841, -128.084, 40.9332, 0.37", "-10.297, -127.629, 41.0169, 0.66", "-9.79192, -126.186, 41.2984, 0.07", "-9.59943, -125.558, 41.4315, 1.03", "-9.30264, -124.387, 41.7031, 0.15", "-9.19612, -123.867, 41.8352, 0.88", "-9.12202, -123.422, 41.9542, 1.18", "-8.96494, -121.981, 42.3633, 0.15", "-8.96101, -121.507, 42.5032, 0.15", "-9.01652, -120.984, 42.6536, 0.22", "-9.12273, -120.597, 42.757, 0.07", "-9.30841, -120.139, 42.8548, 0.29", "-9.52615, -119.716, 42.9244, 0.07", "-9.73324, -119.371, 42.956, 0.59", "-10.0915, -118.815, 42.9858, 0.15", "-10.5687, -118.098, 43.007, 1.62", "-11.0518, -117.373, 43.0216, 0.15", "-11.3937, -116.862, 43.0375, 0.29", "-11.9431, -116.032, 43.0683, 0.07", "-12.346, -115.356, 43.1211, 0.07", "-12.5531, -114.969, 43.1658, 0.66", "-12.9048, -114.275, 43.2609, 0.15", "-13.1671, -113.749, 43.3453, 1.03", "-13.4786, -113.139, 43.4672, 1.62", "-14.3508, -111.448, 43.9167, 0.07", "-14.7317, -110.694, 44.147, 0.59", "-15.0052, -110.157, 44.3262, 0.15", "-15.3517, -109.467, 44.5678, 0.88", "-15.8215, -108.454, 44.9373, 0.15", "-16.2535, -107.533, 45.2997, 0.15", "-16.6011, -106.81, 45.6107, 1.33", "-17.0245, -105.891, 46.0245, 0.15", "-17.3337, -105.127, 46.3771, 0.15", "-17.5432, -104.46, 46.6702, 1.33" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-15.1186, -141.153, 36.5114, 0.15", "-15.5432, -142.323, 36.6906, 0.15", "-15.913, -142.997, 36.9011, 0.15", "-16.2459, -143.454, 37.122, 0.15", "-16.558, -143.814, 37.3215, 0.74", "-17.0778, -144.379, 37.6436, 0.15", "-17.4724, -144.823, 37.8934, 1.4", "-18.1457, -145.526, 38.393, 0.15", "-18.7905, -146.189, 38.8996, 0.66", "-19.2698, -146.76, 39.3942, 0.07", "-19.4634, -147.037, 39.6896, 0.07", "-19.6799, -147.392, 40.0783, 0.29", "-19.9905, -148.001, 40.7777, 0.07", "-20.1667, -148.499, 41.371, 1.25", "-20.3831, -149.446, 42.5857, 0.29", "-20.5347, -150.442, 44.0319, 1.62" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-62.4774, -109.297, -13.7421, 0.59", "-64.4628, -108.896, -14.9873, 0.59", "-65.0635, -108.738, -15.4181, 0.07", "-65.863, -108.501, -16.1045, 0.07", "-66.4035, -108.327, -16.621, 0.37", "-67.2927, -108.0, -17.5529, 0.07", "-67.9538, -107.714, -18.3401, 0.15", "-68.7994, -107.311, -19.5982, 1.62", "-69.6201, -106.673, -21.4381, 0.22", "-69.8307, -106.365, -22.3239, 0.22", "-69.9413, -106.094, -23.1144, 0.59", "-69.9537, -105.692, -24.2798, 0.59", "-69.7955, -105.291, -25.5119, 0.59", "-69.2488, -104.85, -27.0671, 1.18", "-68.7708, -104.645, -27.8347, 1.18", "-73.1281, -100.725, -39.1978, 1.18" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-62.4774, -109.297, -13.7421, 0.22", "-63.2318, -109.802, -14.061, 0.22", "-63.6504, -110.071, -14.2443, 0.15", "-64.2687, -110.412, -14.5502, 0.15", "-64.812, -110.683, -14.8462, 1.25", "-65.4382, -110.968, -15.1847, 0.15", "-65.9767, -111.194, -15.4612, 0.15", "-66.7269, -111.466, -15.8362, 1.62", "-67.5625, -111.754, -16.2187, 0.22", "-68.0747, -111.943, -16.4483, 0.22", "-68.6765, -112.173, -16.7204, 1.33", "-69.2698, -112.396, -16.9772, 1.11", "-70.2739, -112.762, -17.3772, 0.15", "-70.628, -112.898, -17.4996, 0.15", "-71.4243, -113.247, -17.7123, 0.15", "-71.8813, -113.463, -17.7939, 0.15", "-72.3464, -113.7, -17.8125, 0.66", "-73.0063, -114.016, -17.6661, 0.07", "-73.4083, -114.172, -17.4419, 0.88", "-73.9534, -114.302, -17.01, 0.15", "-74.5087, -114.353, -16.4928, 0.59", "-75.1926, -114.314, -15.7643, 1.4", "-76.0927, -114.106, -14.7619, 0.22", "-76.7295, -113.842, -14.0201, 1.25", "-77.4893, -113.403, -13.0995, 0.44", "-77.8931, -113.097, -12.6083, 0.52", "-78.3491, -112.661, -12.0278, 1.11", "-78.8404, -112.088, -11.3419, 0.37", "-79.3707, -111.39, -10.506, 0.07", "-79.6573, -111.011, -10.0152, 0.07", "-79.8463, -110.748, -9.63617, 0.22", "-80.0825, -110.402, -9.06393, 0.96", "-80.2786, -110.088, -8.49241, 2.06", "-80.604, -109.431, -7.14189, 0.22", "-80.7667, -109.019, -6.15244, 0.74", "-80.8508, -108.8, -5.455, 0.74", "-80.9078, -108.646, -4.69565, 0.74", "-80.9122, -108.619, -4.36349, 0.74", "-80.8602, -108.635, -3.57586, 0.74", "-80.7046, -108.705, -2.76364, 0.74", "-80.595, -108.745, -2.2846, 0.74", "-80.5348, -108.735, -2.00789, 0.74", "-80.3906, -108.566, -1.36132, 0.74", "-80.2234, -108.283, -0.830541, 0.74", "-79.9012, -107.683, -0.00951958, 0.29", "-79.7206, -107.321, 0.402888, 0.29", "-79.4541, -106.799, 0.937168, 0.07", "-79.2761, -106.475, 1.24817, 0.44", "-78.8036, -105.659, 1.97506, 0.07", "-78.5195, -105.218, 2.36244, 0.07", "-78.23, -104.796, 2.73737, 0.07", "-78.0533, -104.558, 2.9583, 0.29", "-77.7212, -104.122, 3.35333, 0.07", "-77.4497, -103.765, 3.70541, 0.37", "-77.1371, -103.389, 4.11608, 0.22", "-77.0062, -103.259, 4.29836, 0.81", "-76.7672, -103.064, 4.69833, 0.37", "-76.4471, -102.862, 5.40972, 0.88", "-76.1075, -102.677, 6.29018, 0.88", "-75.9873, -102.626, 6.66087, 0.88", "-75.7918, -102.568, 7.40035, 0.88", "-75.6322, -102.557, 8.05743, 0.88", "-75.4109, -102.64, 9.03327, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "3.33924, -55.2317, 6.83625, 0.29", "2.86881, -56.7709, 7.41913, 0.29", "2.65317, -57.5488, 7.71256, 0.15", "2.46413, -58.3057, 7.99201, 1.03", "2.12549, -59.7313, 8.50315, 0.15", "1.89708, -60.6928, 8.84792, 1.4", "1.37695, -62.8824, 9.633, 0.07", "1.29522, -63.2129, 9.75232, 0.81", "1.04304, -64.3535, 10.1374, 0.07", "0.895271, -65.1792, 10.4129, 1.62" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "3.33924, -55.2317, 6.83625, 1.92", "2.72748, -55.7389, 7.23582, 1.92", "2.09271, -56.2413, 7.6364, 2.06", "0.612405, -57.2942, 8.51075, 0.22", "0.121844, -57.6221, 8.80075, 0.66", "-0.584274, -58.0171, 9.16949, 0.22", "-1.10473, -58.2645, 9.40085, 0.96", "-1.42233, -58.4001, 9.53564, 1.47", "-2.72909, -58.8671, 10.0323, 0.52", "-3.49055, -59.0453, 10.2678, 0.66", "-5.05037, -59.376, 10.6806, 0.15", "-5.92078, -59.5716, 10.8902, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-27.8723, 37.5795, 29.6108, 0.07", "-29.6204, 38.3235, 29.0484, 0.07", "-30.4319, 38.6689, 28.7873, 0.96", "-31.5207, 39.1322, 28.4371, 0.07", "-32.0956, 39.3769, 28.2521, 0.29", "-33.0509, 39.7835, 27.9448, 0.07", "-34.0873, 40.2246, 27.6114, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-27.8723, 37.5795, 29.6108, 0.44", "-28.8775, 36.9943, 29.7904, 0.44", "-29.7064, 36.4773, 30.0398, 0.96", "-30.2998, 36.0994, 30.2699, 0.66", "-30.9209, 35.7038, 30.5187, 0.15", "-31.2687, 35.4996, 30.6156, 0.15", "-31.7896, 35.1987, 30.7299, 0.29", "-32.5222, 34.765, 30.864, 0.29", "-32.9739, 34.4937, 30.9041, 0.74", "-33.5456, 34.1115, 30.9306, 1.62", "-34.8938, 33.0979, 30.958, 0.22", "-35.4067, 32.6955, 30.9449, 1.18", "-35.6877, 32.4768, 30.9198, 1.55", "-36.4245, 31.8856, 30.8243, 0.29", "-37.072, 31.3438, 30.7526, 0.22", "-37.7776, 30.7122, 30.7328, 0.22", "-38.2524, 30.2447, 30.7914, 0.22", "-38.7072, 29.8307, 30.8706, 0.52", "-38.8931, 29.6699, 30.926, 0.52", "-39.2824, 29.3562, 31.0944, 0.52", "-39.5592, 29.136, 31.2182, 0.52", "-39.8696, 28.8556, 31.3487, 0.52", "-40.3647, 28.3693, 31.5508, 0.15", "-40.6683, 28.047, 31.6737, 0.15", "-40.893, 27.7969, 31.7587, 0.44", "-41.2565, 27.376, 31.8911, 1.11", "-41.8875, 26.5711, 32.0941, 0.15", "-42.126, 26.2478, 32.1565, 0.15", "-42.6284, 25.5623, 32.2688, 0.22", "-43.0164, 25.0127, 32.352, 1.25", "-43.3687, 24.4815, 32.4554, 1.99", "-44.0994, 23.2653, 32.7653, 0.15", "-44.3564, 22.7509, 32.909, 1.03", "-44.5786, 22.2206, 33.0787, 1.03", "-44.8427, 21.23, 33.4816, 0.15", "-44.9249, 20.5523, 33.8155, 0.15", "-44.9103, 19.9857, 34.1333, 0.15", "-44.7993, 19.3785, 34.5167, 0.81", "-44.6522, 18.7607, 34.884, 1.33", "-44.3415, 17.4988, 35.5236, 0.15", "-44.2699, 17.0528, 35.6855, 1.25", "-44.2228, 16.1684, 35.8867, 0.29", "-44.2743, 15.1907, 35.986, 0.22", "-44.3766, 14.4575, 35.9778, 0.15", "-44.5481, 13.6304, 35.8563, 1.77", "-44.9616, 12.0217, 35.4137, 0.07", "-45.0929, 11.5498, 35.2502, 0.81", "-45.3496, 10.73, 34.9131, 0.07", "-45.5823, 10.0538, 34.6033, 0.96", "-45.7924, 9.42616, 34.2982, 2.06", "-46.2519, 7.94917, 33.5886, 0.07", "-46.4562, 7.23022, 33.2618, 0.22", "-46.7199, 6.40044, 32.9096, 0.15", "-46.964, 5.72193, 32.6423, 1.47", "-47.2628, 4.98709, 32.3497, 0.66", "-47.594, 4.26507, 32.0409, 0.66", "-47.8261, 3.81984, 31.8418, 1.77", "-48.3362, 2.8794, 31.4113, 0.07", "-48.49, 2.62215, 31.2861, 0.22", "-48.8526, 2.07553, 31.0013, 0.22", "-49.1864, 1.63274, 30.7498, 1.55", "-49.8897, 0.788224, 30.2031, 0.15", "-50.2031, 0.42495, 29.9354, 0.59", "-50.5738, -0.0230061, 29.5793, 0.15", "-50.8706, -0.396799, 29.2772, 0.15", "-51.1336, -0.739157, 28.9985, 0.74", "-51.4409, -1.15715, 28.6441, 1.25", "-52.0186, -1.88919, 27.9658, 0.07", "-52.341, -2.28612, 27.5907, 0.15", "-52.6364, -2.6266, 27.2813, 0.74", "-52.9246, -2.92221, 27.0187, 1.4", "-53.4507, -3.40551, 26.6056, 0.15", "-54.0103, -3.83043, 26.2634, 0.07", "-54.3159, -4.00857, 26.1226, 0.29", "-55.1731, -4.38664, 25.7701, 0.07", "-55.6227, -4.55764, 25.5998, 0.88", "-55.925, -4.6553, 25.491, 1.33", "-56.8512, -4.89981, 25.1778, 0.22", "-57.463, -5.0554, 24.9743, 0.22", "-58.0409, -5.18317, 24.7849, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "0.223908, 40.6921, 30.9255, 0.15", "0.803694, 42.2273, 31.8465, 0.15", "0.97171, 42.7782, 32.2139, 0.22", "1.17764, 43.6841, 32.8808, 0.15", "1.27337, 44.2393, 33.2962, 0.96", "1.37938, 45.007, 33.8638, 0.29", "1.46669, 45.598, 34.3013, 0.29", "1.52467, 46.2784, 34.8408, 0.29", "1.61436, 46.9351, 35.343, 0.29", "1.73623, 47.5539, 35.7987, 1.25", "1.79842, 47.7907, 35.9729, 1.25", "2.22669, 49.0961, 36.9606, 0.15", "2.63724, 50.0314, 37.6821, 1.33", "3.31622, 51.278, 38.667, 0.07", "3.73882, 51.9049, 39.2005, 0.59", "4.36031, 52.7059, 39.936, 0.15", "4.92898, 53.3975, 40.5915, 1.11", "5.40327, 54.0343, 41.1422, 2.14", "5.64359, 54.4095, 41.4271, 1.84", "6.25185, 55.8695, 42.3083, 0.15", "6.45281, 56.7943, 42.7153, 1.4", "6.50278, 57.5961, 42.9819, 0.96", "6.41909, 59.7341, 43.6291, 0.15", "6.31346, 60.6181, 43.8941, 0.96", "5.95593, 62.4154, 44.489, 0.15", "5.78684, 63.0135, 44.7118, 1.18", "5.43664, 64.1315, 45.2347, 0.15", "5.10769, 65.1935, 45.9014, 0.59", "5.00936, 65.5324, 46.1866, 0.88", "4.7282, 66.6514, 47.2954, 0.22", "4.59343, 67.3713, 48.1053, 0.88", "4.49509, 67.9808, 48.8203, 1.77", "4.37249, 69.1277, 50.1544, 0.29", "4.36809, 69.6845, 50.7933, 0.81", "4.44238, 70.6849, 51.9314, 0.22", "4.55652, 71.4031, 52.7352, 0.37", "4.64156, 71.7808, 53.1523, 0.37", "4.90098, 72.6893, 54.1424, 1.55", "5.32938, 73.8713, 55.3904, 0.07", "5.71046, 74.7988, 56.3198, 0.22", "5.98989, 75.4233, 56.9138, 0.22", "6.24408, 75.9817, 57.426, 0.22", "6.54377, 76.6597, 58.0137, 0.07", "6.79932, 77.2826, 58.5097, 1.11", "6.94675, 77.6453, 58.7677, 1.4", "7.50115, 78.8802, 59.5922, 0.07", "7.85232, 79.6432, 60.0906, 0.74", "8.05682, 80.1319, 60.3986, 0.74", "8.3752, 80.9603, 60.9095, 0.22", "8.74237, 81.946, 61.5067, 0.22", "8.98854, 82.6, 61.8953, 0.96", "9.15472, 83.047, 62.1528, 0.96", "9.75116, 84.762, 63.0998, 0.15", "10.0614, 85.7194, 63.6194, 0.15", "10.1857, 86.1529, 63.8414, 0.22", "10.4701, 87.382, 64.3973, 0.07", "10.5937, 88.0253, 64.6743, 0.07", "10.7582, 89.0827, 65.0955, 0.96", "10.868, 89.9557, 65.416, 0.22", "10.9607, 90.9401, 65.746, 1.25", "11.1171, 93.1051, 66.4432, 0.15", "11.1795, 94.1719, 66.7702, 1.33", "11.2713, 95.8835, 67.2845, 0.15", "11.2923, 96.4192, 67.4483, 0.22", "11.3193, 97.5996, 67.8047, 0.15", "11.3242, 98.4093, 68.0417, 0.81", "11.3233, 98.558, 68.0819, 0.81" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "0.223908, 40.6921, 30.9255, 0.29", "0.439579, 41.18, 32.2633, 0.29", "0.649876, 41.7366, 33.5372, 0.52", "0.773393, 42.0904, 34.2447, 1.25", "1.01536, 42.7789, 35.5205, 0.15", "1.13245, 43.1, 36.1017, 0.15", "1.21889, 43.3508, 36.5424, 0.15", "1.37481, 43.816, 37.2272, 0.15", "1.51323, 44.1578, 37.7128, 0.81", "1.70503, 44.5895, 38.363, 1.33", "2.02063, 45.2761, 39.457, 0.22", "2.18272, 45.592, 40.049, 0.22", "2.37182, 45.8687, 40.6985, 1.11", "2.52884, 46.0497, 41.223, 1.7", "2.82286, 46.3697, 42.1926, 0.22", "2.97198, 46.5242, 42.6915, 0.88", "3.26454, 46.7656, 43.6232, 0.15", "3.43319, 46.858, 44.1302, 0.29", "3.57544, 46.9046, 44.5752, 0.29", "3.74886, 46.9585, 45.1615, 0.15", "3.92894, 47.0441, 45.8483, 0.15", "4.06564, 47.1436, 46.4114, 0.96", "4.22218, 47.2833, 47.11, 0.66", "4.3928, 47.3636, 48.0649, 0.15", "4.49366, 47.3917, 48.7155, 0.15", "4.60528, 47.4242, 49.6137, 0.81", "4.74484, 47.5064, 50.9785, 2.14", "4.80407, 47.5688, 51.6856, 2.14", "4.99629, 47.8406, 53.7709, 0.15", "5.07875, 47.9442, 54.5071, 0.15", "5.21314, 48.0684, 55.577, 0.29", "5.31239, 48.1342, 56.3193, 1.33", "5.39966, 48.1954, 56.9538, 1.62", "5.59136, 48.3735, 58.192, 0.15", "5.65628, 48.4857, 58.6172, 0.15", "5.74467, 48.6629, 59.2884, 0.15", "5.78482, 48.7686, 59.6825, 0.15", "5.81206, 48.8877, 60.2007, 0.29", "5.79193, 49.0438, 61.0076, 0.66", "5.67498, 49.2752, 62.1623, 0.15", "5.58845, 49.4484, 62.8078, 0.15", "5.51509, 49.6267, 63.3123, 0.15", "5.42879, 49.9124, 63.916, 0.66", "5.25172, 50.5896, 65.0719, 0.22", "5.15436, 51.0816, 65.7968, 0.22", "5.087, 51.5359, 66.4304, 1.33", "5.0243, 52.1002, 67.19, 1.92", "4.9185, 53.3067, 68.7874, 0.37", "4.86431, 53.9846, 69.6626, 0.22", "4.81007, 54.7311, 70.6096, 0.22", "4.75798, 55.0995, 71.0955, 0.22", "4.65393, 55.4195, 71.5236, 0.22", "4.47412, 55.7034, 71.9284, 0.22", "4.26354, 55.9263, 72.3035, 0.22", "4.01098, 56.1963, 72.753, 0.52", "3.45263, 56.8991, 73.8027, 1.18", "2.95853, 57.6162, 74.8339, 1.4", "2.23851, 58.8027, 76.5293, 0.81", "1.86842, 59.4854, 77.5818, 0.81", "1.51915, 60.1823, 78.8078, 1.7", "1.01546, 61.3046, 81.1206, 0.29", "0.833883, 61.8091, 82.3087, 0.29", "0.770673, 62.0669, 82.9679, 1.03", "0.680005, 62.612, 84.3767, 0.22", "0.612943, 63.0476, 85.5135, 1.11", "0.520006, 63.4968, 86.8955, 0.29", "0.428675, 63.7334, 87.8187, 0.29", "0.348235, 63.8558, 88.3231, 0.52", "0.131799, 64.0226, 89.1538, 0.52", "0.0294143, 64.0868, 89.4596, 0.52", "-0.143005, 64.1556, 89.9303, 0.52", "-0.397802, 64.137, 90.7389, 0.52", "-0.465635, 64.0464, 91.3429, 0.52", "-0.440737, 63.8753, 92.444, 0.22", "-0.315296, 63.7719, 93.4052, 0.15", "-0.249046, 63.7941, 93.7956, 0.15", "-0.0963922, 63.9354, 94.4916, 0.81", "0.213339, 64.3263, 95.7105, 0.29", "0.461374, 64.7118, 96.6271, 0.81", "0.687048, 65.1202, 97.3713, 1.7", "1.24365, 66.2744, 99.1623, 0.22", "1.55331, 66.959, 100.059, 0.44", "1.71884, 67.3707, 100.455, 0.15", "1.95575, 67.9627, 100.889, 0.88", "2.47182, 69.1963, 101.596, 0.22", "2.74127, 69.7905, 101.894, 0.88", "2.9794, 70.2643, 102.112, 1.47", "3.90662, 72.0969, 102.969, 0.22", "4.12075, 72.4962, 103.169, 0.22", "4.43399, 73.0135, 103.489, 0.37", "5.14302, 74.0557, 104.343, 0.22", "5.43399, 74.4654, 104.756, 0.22", "5.69205, 74.8427, 105.221, 0.96", "5.89829, 75.1226, 105.669, 1.55", "6.50651, 75.9068, 107.118, 0.15", "6.91848, 76.3785, 108.149, 1.25", "7.27936, 76.7846, 109.098, 1.25", "7.68579, 77.2053, 110.192, 0.74", "8.12996, 77.613, 111.469, 0.15", "8.40856, 77.8395, 112.317, 0.29", "8.59411, 77.947, 112.872, 0.29", "8.96305, 78.0431, 113.737, 0.29", "9.38337, 78.0952, 114.548, 0.81", "10.0502, 78.1976, 115.665, 0.15", "10.4379, 78.3007, 116.286, 1.11", "10.6459, 78.3753, 116.606, 1.77", "11.7757, 78.8047, 118.284, 0.22", "12.1935, 78.9378, 118.86, 0.22", "12.7465, 79.1218, 119.558, 0.22", "13.2699, 79.2775, 120.146, 0.22", "13.5576, 79.3708, 120.453, 0.44", "14.1436, 79.5835, 121.058, 0.44", "14.9104, 79.8785, 121.837, 1.55", "15.7179, 80.1316, 122.66, 0.66", "16.7162, 80.3164, 123.717, 0.15", "17.0896, 80.3546, 124.143, 0.15", "17.5231, 80.3785, 124.692, 0.37", "18.1608, 80.3887, 125.577, 0.15", "18.5569, 80.388, 126.19, 0.81", "19.2428, 80.3571, 127.36, 0.22", "19.5913, 80.332, 127.965, 0.22", "19.9659, 80.2923, 128.591, 1.25", "20.1535, 80.2787, 128.888, 1.25", "20.8876, 80.2456, 129.931, 0.07", "21.4005, 80.2392, 130.585, 0.96", "22.4808, 80.243, 131.833, 0.22", "23.0226, 80.2252, 132.428, 1.03", "23.5734, 80.1893, 133.011, 1.77", "24.7056, 80.1327, 134.171, 0.15", "25.3445, 80.101, 134.8, 0.22", "26.106, 80.0739, 135.542, 0.15", "26.6669, 80.0771, 136.096, 1.03", "27.3737, 80.095, 136.807, 0.22", "28.1821, 80.1294, 137.642, 0.22", "29.0355, 80.2164, 138.536, 0.15", "29.6227, 80.2897, 139.147, 0.15", "30.2396, 80.377, 139.797, 0.81", "30.4444, 80.4044, 140.016, 1.77", "31.3199, 80.4743, 140.892, 0.07", "32.0104, 80.4955, 141.516, 0.59", "33.5669, 80.5258, 142.743, 0.22", "33.9114, 80.5265, 142.993, 0.59", "34.5765, 80.5062, 143.451, 0.66", "35.9278, 80.4473, 144.339, 0.07", "36.4863, 80.4055, 144.669, 0.07", "36.8371, 80.3569, 144.85, 0.52" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-34.0873, 40.2246, 27.6114, 0.15", "-35.0951, 41.0457, 27.4646, 0.15", "-35.7225, 41.6998, 27.1741, 0.15", "-36.3073, 42.4634, 26.6938, 0.07", "-36.5382, 42.8368, 26.3855, 0.07", "-36.9748, 43.6488, 25.5687, 0.07", "-37.2652, 44.2453, 24.8649, 0.07", "-37.3238, 44.5001, 24.4553, 0.07", "-37.306, 44.726, 24.0079, 0.29", "-37.1893, 45.0198, 23.3108, 0.29", "-37.0943, 45.177, 22.8841, 0.29", "-36.9963, 45.3147, 22.4827, 0.29", "-36.8606, 45.4769, 21.9638, 0.29", "-36.6362, 45.7448, 20.9895, 0.22", "-36.5112, 45.8991, 20.3034, 0.22", "-36.3553, 46.126, 19.1761, 0.88", "-36.245, 46.2987, 18.2044, 0.22", "-36.2105, 46.3685, 17.7649, 0.22", "-36.1789, 46.4669, 17.0632, 0.15", "-36.1804, 46.583, 16.2721, 0.15", "-36.1816, 46.6991, 15.4705, 0.15", "-36.1678, 46.8074, 14.7578, 0.15", "-36.1367, 46.9165, 14.152, 0.74", "-36.1042, 47.028, 13.6298, 0.74", "-36.0256, 47.2052, 12.8302, 0.15", "-35.8947, 47.3993, 11.8424, 0.22", "-35.8242, 47.4637, 11.4028, 0.22", "-35.6659, 47.5326, 10.6658, 0.22", "-35.5797, 47.5462, 10.345, 0.22", "-35.4052, 47.5409, 9.7557, 0.22", "-35.2028, 47.469, 9.16703, 0.22", "-35.0399, 47.3677, 8.76281, 0.22", "-34.8202, 47.2009, 8.26758, 0.22", "-34.609, 47.043, 7.83521, 0.22", "-34.3146, 46.814, 7.16634, 0.22", "-33.959, 46.4841, 6.23374, 0.44", "-33.7722, 46.2583, 5.65239, 0.44", "-33.7123, 46.1669, 5.4427, 0.44", "-33.5309, 45.8527, 4.82766, 0.44", "-33.2875, 45.4771, 4.19872, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-34.0873, 40.2246, 27.6114, 1.03", "-34.678, 40.9046, 27.7826, 1.03", "-36.1241, 42.7461, 28.4252, 0.07", "-36.6239, 43.4273, 28.7045, 0.07", "-36.9776, 44.0325, 28.9613, 0.22", "-37.5064, 45.0996, 29.4256, 0.07", "-37.8796, 45.9215, 29.7798, 0.37", "-38.4555, 47.358, 30.4322, 0.15", "-38.8902, 48.6241, 31.0383, 1.33", "-39.8666, 51.561, 32.464, 0.07", "-40.4438, 53.3263, 33.3359, 0.07", "-40.7463, 54.2729, 33.8022, 0.66", "-41.0527, 55.3068, 34.2924, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-58.0409, -5.18317, 24.7849, 0.07", "-58.9277, -5.43816, 24.2594, 0.07", "-59.4856, -5.59858, 23.9288, 0.37", "-60.1147, -5.77945, 23.556, 0.22", "-60.7651, -5.96644, 23.1706, 0.88", "-61.197, -6.09066, 22.9146, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-58.0409, -5.18317, 24.7849, 0.07", "-57.0755, -2.99051, 25.008, 0.07", "-56.6865, -2.10694, 25.0979, 0.44", "-56.2309, -1.0722, 25.2032, 0.15", "-55.7288, 0.0680309, 25.3192, 0.74", "-55.059, 1.58942, 25.474, 0.07" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_DBC_d99bd73381_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_38
create dend_56
public dend_56
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.49999950122992937)
    connect dend_25(0), soma_0(0.49999950122992937)
    connect dend_10(0), soma_0(0.49999950122992937)
    connect dend_1(0), soma_0(0.49999950122992937)
    connect dend_0(0), soma_0(0.49999950122992937)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.29752, -10.9202, 0.0, 2.7473 ) }
    soma_0 { pt3dadd( -3.02947, -9.86122, 0.0, 4.90547 ) }
    soma_0 { pt3dadd( -2.76143, -8.80223, 0.0, 7.1195 ) }
    soma_0 { pt3dadd( -2.49339, -7.74324, 0.0, 9.06693 ) }
    soma_0 { pt3dadd( -2.22534, -6.68425, 0.0, 10.5477 ) }
    soma_0 { pt3dadd( -1.9573, -5.62526, 0.0, 11.7638 ) }
    soma_0 { pt3dadd( -1.68926, -4.56627, 0.0, 12.6703 ) }
    soma_0 { pt3dadd( -1.42121, -3.50728, 0.0, 13.5724 ) }
    soma_0 { pt3dadd( -1.15317, -2.44829, 0.0, 13.9606 ) }
    soma_0 { pt3dadd( -0.885125, -1.3893, 0.0, 14.249 ) }
    soma_0 { pt3dadd( -0.617082, -0.330312, 0.0, 14.4914 ) }
    soma_0 { pt3dadd( -0.349039, 0.728678, 0.0, 14.572 ) }
    soma_0 { pt3dadd( -0.0809953, 1.78767, 0.0, 14.5168 ) }
    soma_0 { pt3dadd( 0.187048, 2.84666, 0.0, 14.1167 ) }
    soma_0 { pt3dadd( 0.455092, 3.90565, 0.0, 13.6161 ) }
    soma_0 { pt3dadd( 0.723135, 4.96464, 0.0, 12.8986 ) }
    soma_0 { pt3dadd( 0.991178, 6.02363, 0.0, 12.0703 ) }
    soma_0 { pt3dadd( 1.25922, 7.08262, 0.0, 10.8368 ) }
    soma_0 { pt3dadd( 1.52727, 8.14161, 0.0, 9.27498 ) }
    soma_0 { pt3dadd( 1.79531, 9.2006, 0.0, 7.02436 ) }
    soma_0 { pt3dadd( 2.06335, 10.2596, 0.0, 4.05122 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.851454, 10.6375, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.851454, 10.6375, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.752109, 12.8312, 1.63555, 0.96 ) }
    dend_32 { pt3dadd( 0.666965, 14.7114, 1.5803, 1.25 ) }
    dend_32 { pt3dadd( 0.548175, 17.3346, 1.50323, 1.55 ) }
    dend_32 { pt3dadd( 0.436999, 19.7896, 1.4311, 1.84 ) }
    dend_32 { pt3dadd( 0.324952, 22.2638, 1.35841, 2.14 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 28/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.23855, -9.87948, -9.03, 1.18 ) }
    dend_25 { pt3dadd( -1.70694, -10.0197, -9.12341, 1.18 ) }
    dend_25 { pt3dadd( -0.394345, -10.5169, -9.37493, 1.18 ) }
    dend_25 { pt3dadd( 1.81199, -11.6241, -9.86167, 1.03 ) }
    dend_25 { pt3dadd( 2.94314, -12.2882, -10.1359, 0.96 ) }
    dend_25 { pt3dadd( 3.9206, -12.7408, -10.3348, 0.81 ) }
    dend_25 { pt3dadd( 2.81602, -13.0333, -10.354, 0.74 ) }
    dend_25 { pt3dadd( 2.00789, -13.6032, -10.5185, 0.74 ) }
    dend_25 { pt3dadd( 0.93705, -14.3516, -10.8027, 0.96 ) }
    dend_25 { pt3dadd( -0.371599, -15.1935, -11.1949, 1.18 ) }
    dend_25 { pt3dadd( -2.26247, -16.2876, -11.8202, 0.88 ) }
    dend_25 { pt3dadd( -3.85097, -17.1201, -12.418, 0.96 ) }
    dend_25 { pt3dadd( -5.50898, -17.9162, -13.0645, 1.25 ) }
    dend_25 { pt3dadd( -6.66363, -18.4477, -13.5501, 1.99 ) }
    dend_25 { pt3dadd( -7.79557, -18.9728, -14.0842, 2.95 ) }
    dend_25 { pt3dadd( -8.89506, -19.5338, -14.7141, 3.54 ) }
    dend_25 { pt3dadd( -9.82316, -20.0805, -15.3943, 3.54 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.90855, -12.2315, 1.23, 0.81 ) }
    dend_10 { pt3dadd( -1.79673, -12.8821, 1.20496, 0.81 ) }
    dend_10 { pt3dadd( -1.61307, -13.6787, 1.17441, 0.96 ) }
    dend_10 { pt3dadd( -1.39753, -14.4742, 1.14533, 1.18 ) }
    dend_10 { pt3dadd( -1.16511, -15.2445, 1.11885, 1.18 ) }
    dend_10 { pt3dadd( -0.887996, -16.0983, 1.11593, 0.81 ) }
    dend_10 { pt3dadd( -0.710419, -16.6199, 1.13219, 1.03 ) }
    dend_10 { pt3dadd( -0.439995, -17.3509, 1.20357, 1.47 ) }
    dend_10 { pt3dadd( -0.251486, -17.8744, 1.29558, 2.06 ) }
    dend_10 { pt3dadd( -0.103944, -18.3465, 1.41387, 2.14 ) }
    dend_10 { pt3dadd( 0.09326, -19.2242, 1.69311, 1.33 ) }
    dend_10 { pt3dadd( 0.208871, -20.3482, 2.10531, 0.96 ) }
    dend_10 { pt3dadd( 0.16974, -21.349, 2.49627, 0.96 ) }
    dend_10 { pt3dadd( 0.020308, -22.0641, 2.78297, 1.18 ) }
    dend_10 { pt3dadd( -0.160729, -22.5927, 2.99812, 1.99 ) }
    dend_10 { pt3dadd( -0.450186, -23.2452, 3.25955, 2.88 ) }
    dend_10 { pt3dadd( -0.833046, -23.9861, 3.53817, 3.02 ) }
    dend_10 { pt3dadd( -1.3696, -24.982, 3.88188, 1.77 ) }
    dend_10 { pt3dadd( -2.10274, -26.4496, 4.32161, 0.81 ) }
    dend_10 { pt3dadd( -2.46463, -27.305, 4.54823, 0.81 ) }
    dend_10 { pt3dadd( -2.66034, -27.9134, 4.68761, 0.81 ) }
    dend_10 { pt3dadd( -2.81587, -28.6525, 4.83976, 0.81 ) }
    dend_10 { pt3dadd( -2.908, -29.4583, 5.00262, 0.81 ) }
    dend_10 { pt3dadd( -2.92857, -30.135, 5.13502, 1.03 ) }
    dend_10 { pt3dadd( -2.91691, -30.8033, 5.258, 1.25 ) }
    dend_10 { pt3dadd( -2.8611, -32.049, 5.4766, 0.81 ) }
    dend_10 { pt3dadd( -2.81259, -33.0419, 5.65914, 1.03 ) }
    dend_10 { pt3dadd( -2.78818, -33.8346, 5.82016, 1.62 ) }
    dend_10 { pt3dadd( -2.79819, -34.4885, 5.97121, 2.73 ) }
    dend_10 { pt3dadd( -2.86237, -35.4106, 6.20871, 4.06 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 75/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.51145, 6.65802, 5.69, 0.59 ) }
    dend_1 { pt3dadd( 7.67126, 7.32326, 5.44771, 0.44 ) }
    dend_1 { pt3dadd( 8.80141, 8.04602, 5.55212, 0.44 ) }
    dend_1 { pt3dadd( 9.74646, 8.68167, 5.8953, 0.44 ) }
    dend_1 { pt3dadd( 10.7587, 9.35942, 6.45887, 0.37 ) }
    dend_1 { pt3dadd( 11.5144, 9.84082, 6.96659, 1.03 ) }
    dend_1 { pt3dadd( 12.7018, 10.5586, 7.87695, 1.33 ) }
    dend_1 { pt3dadd( 13.9557, 11.2855, 9.12653, 1.47 ) }
    dend_1 { pt3dadd( 14.8159, 11.7411, 10.1626, 1.25 ) }
    dend_1 { pt3dadd( 15.7523, 12.1152, 11.4411, 0.29 ) }
    dend_1 { pt3dadd( 16.355, 12.2281, 12.3268, 0.22 ) }
    dend_1 { pt3dadd( 16.8194, 12.2141, 12.9736, 0.22 ) }
    dend_1 { pt3dadd( 17.1161, 12.1057, 13.3125, 0.22 ) }
    dend_1 { pt3dadd( 17.4697, 11.9337, 13.6745, 0.22 ) }
    dend_1 { pt3dadd( 18.0213, 11.6791, 14.2124, 1.03 ) }
    dend_1 { pt3dadd( 19.1921, 11.2307, 15.3884, 2.21 ) }
    dend_1 { pt3dadd( 19.8406, 11.1187, 16.05, 3.02 ) }
    dend_1 { pt3dadd( 21.8907, 11.3305, 18.188, 0.29 ) }
    dend_1 { pt3dadd( 22.8338, 11.7201, 19.2271, 0.29 ) }
    dend_1 { pt3dadd( 23.3644, 12.095, 19.8296, 0.44 ) }
    dend_1 { pt3dadd( 23.8807, 12.6071, 20.4417, 0.66 ) }
    dend_1 { pt3dadd( 24.6761, 13.627, 21.4179, 1.11 ) }
    dend_1 { pt3dadd( 25.4056, 14.6879, 22.3529, 0.52 ) }
    dend_1 { pt3dadd( 25.9858, 15.6149, 23.041, 0.22 ) }
    dend_1 { pt3dadd( 26.3575, 16.0269, 23.4216, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 26.7222, 16.1587, 23.7632, 0.22 ) }
    dend_1 { pt3dadd( 27.0779, 16.0142, 24.0678, 0.22 ) }
    dend_1 { pt3dadd( 27.8925, 15.4632, 24.7288, 0.66 ) }
    dend_1 { pt3dadd( 28.7161, 14.8561, 25.3615, 1.7 ) }
    dend_1 { pt3dadd( 29.533, 14.2569, 26.0122, 2.21 ) }
    dend_1 { pt3dadd( 30.3041, 13.7548, 26.6866, 1.7 ) }
    dend_1 { pt3dadd( 31.3664, 13.2797, 27.7681, 0.29 ) }
    dend_1 { pt3dadd( 32.3432, 13.1339, 28.9974, 0.22 ) }
    dend_1 { pt3dadd( 32.7405, 13.2495, 29.6414, 0.22 ) }
    dend_1 { pt3dadd( 33.1371, 13.665, 30.6505, 0.22 ) }
    dend_1 { pt3dadd( 33.3557, 14.2754, 31.7557, 0.96 ) }
    dend_1 { pt3dadd( 33.4585, 15.3712, 33.4898, 0.74 ) }
    dend_1 { pt3dadd( 33.4028, 16.152, 34.697, 0.74 ) }
    dend_1 { pt3dadd( 33.3226, 16.5841, 35.4153, 0.74 ) }
    dend_1 { pt3dadd( 33.2388, 17.1655, 36.5958, 0.74 ) }
    dend_1 { pt3dadd( 33.2738, 17.4966, 37.3766, 0.74 ) }
    dend_1 { pt3dadd( 33.3563, 17.5783, 37.6501, 0.74 ) }
    dend_1 { pt3dadd( 33.9516, 17.7499, 38.5365, 0.74 ) }
    dend_1 { pt3dadd( 34.5771, 17.8814, 39.2432, 1.18 ) }
    dend_1 { pt3dadd( 35.6774, 18.0846, 40.3791, 0.44 ) }
    dend_1 { pt3dadd( 36.6803, 18.2742, 41.3079, 1.25 ) }
    dend_1 { pt3dadd( 38.0717, 18.5738, 42.5176, 2.73 ) }
    dend_1 { pt3dadd( 39.5584, 18.9491, 43.7873, 3.54 ) }
    dend_1 { pt3dadd( 40.3912, 19.1928, 44.4721, 2.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.64855, 7.29852, 5.52, 0.88 ) }
    dend_0 { pt3dadd( -5.02052, 7.70573, 5.69947, 0.74 ) }
    dend_0 { pt3dadd( -5.59692, 8.29547, 6.04866, 0.22 ) }
    dend_0 { pt3dadd( -5.97271, 8.65528, 6.30588, 0.22 ) }
    dend_0 { pt3dadd( -6.46667, 9.08994, 6.64722, 0.44 ) }
    dend_0 { pt3dadd( -6.87587, 9.41307, 6.9248, 0.44 ) }
    dend_0 { pt3dadd( -7.40633, 9.76732, 7.28324, 0.22 ) }
    dend_0 { pt3dadd( -7.95804, 10.0418, 7.6732, 0.22 ) }
    dend_0 { pt3dadd( -8.23879, 10.1432, 7.86942, 0.22 ) }
    dend_0 { pt3dadd( -8.63185, 10.2486, 8.13262, 0.96 ) }
    dend_0 { pt3dadd( -9.24329, 10.37, 8.5506, 1.47 ) }
    dend_0 { pt3dadd( -10.3329, 10.5492, 9.36074, 0.15 ) }
    dend_0 { pt3dadd( -10.8204, 10.6259, 9.71261, 0.15 ) }
    dend_0 { pt3dadd( -11.1709, 10.6971, 9.93079, 0.15 ) }
    dend_0 { pt3dadd( -11.6977, 10.8153, 10.2343, 0.88 ) }
    dend_0 { pt3dadd( -12.6355, 11.0443, 10.7575, 0.37 ) }
    dend_0 { pt3dadd( -13.6433, 11.3137, 11.3089, 1.55 ) }
    dend_0 { pt3dadd( -14.4542, 11.5573, 11.7452, 2.95 ) }
    dend_0 { pt3dadd( -16.5334, 12.224, 12.8425, 0.07 ) }
    dend_0 { pt3dadd( -16.922, 12.3469, 13.0437, 0.88 ) }
    dend_0 { pt3dadd( -17.7307, 12.5981, 13.4346, 0.07 ) }
    dend_0 { pt3dadd( -18.4927, 12.8273, 13.7411, 0.22 ) }
    dend_0 { pt3dadd( -19.0207, 12.9824, 13.93, 0.22 ) }
    dend_0 { pt3dadd( -20.1944, 13.3026, 14.334, 0.15 ) }
    dend_0 { pt3dadd( -20.558, 13.3856, 14.4547, 0.96 ) }
    dend_0 { pt3dadd( -21.0821, 13.491, 14.6018, 1.84 ) }
    dend_0 { pt3dadd( -22.9605, 13.8054, 15.0187, 0.15 ) }
    dend_0 { pt3dadd( -23.3776, 13.8528, 15.0968, 0.66 ) }
    dend_0 { pt3dadd( -24.0381, 13.9002, 15.2104, 1.18 ) }
    dend_0 { pt3dadd( -25.6422, 13.9568, 15.4705, 0.15 ) }
    dend_0 { pt3dadd( -26.2383, 13.9527, 15.5576, 1.33 ) }
    dend_0 { pt3dadd( -27.0334, 13.9148, 15.667, 2.51 ) }
    dend_0 { pt3dadd( -29.2707, 13.7112, 15.9557, 0.15 ) }
    dend_0 { pt3dadd( -29.633, 13.6675, 15.9877, 0.52 ) }
    dend_0 { pt3dadd( -30.296, 13.5675, 16.016, 0.81 ) }
    dend_0 { pt3dadd( -31.3366, 13.3854, 16.0083, 0.15 ) }
    dend_0 { pt3dadd( -31.8638, 13.2886, 15.9972, 0.15 ) }
    dend_0 { pt3dadd( -32.2667, 13.2162, 15.9774, 0.66 ) }
    dend_0 { pt3dadd( -33.5037, 13.0118, 15.876, 1.84 ) }
    dend_0 { pt3dadd( -34.7238, 12.8528, 15.7909, 0.22 ) }
    dend_0 { pt3dadd( -35.3456, 12.7925, 15.7644, 0.37 ) }
    dend_0 { pt3dadd( -35.6149, 12.775, 15.7605, 0.88 ) }
    dend_0 { pt3dadd( -36.6213, 12.7297, 15.7954, 0.15 ) }
    dend_0 { pt3dadd( -37.1724, 12.721, 15.8392, 0.15 ) }
    dend_0 { pt3dadd( -37.774, 12.7317, 15.9242, 0.74 ) }
    dend_0 { pt3dadd( -39.5478, 12.8028, 16.2992, 0.07 ) }
    dend_0 { pt3dadd( -39.8808, 12.8242, 16.3849, 0.52 ) }
    dend_0 { pt3dadd( -41.0187, 12.9346, 16.725, 0.15 ) }
    dend_0 { pt3dadd( -41.5554, 13.0042, 16.9101, 0.96 ) }
    dend_0 { pt3dadd( -42.2255, 13.1071, 17.1637, 1.92 ) }
    dend_0 { pt3dadd( -43.6719, 13.4091, 17.7429, 0.15 ) }
    dend_0 { pt3dadd( -44.2755, 13.574, 17.9899, 0.22 ) }
    dend_0 { pt3dadd( -44.9963, 13.7947, 18.2654, 0.07 ) }
    dend_0 { pt3dadd( -45.4754, 13.972, 18.4292, 1.03 ) }
    dend_0 { pt3dadd( -45.9742, 14.1745, 18.5875, 1.77 ) }
    dend_0 { pt3dadd( -47.488, 14.8361, 19.0205, 0.07 ) }
    dend_0 { pt3dadd( -48.1087, 15.1308, 19.1817, 0.07 ) }
    dend_0 { pt3dadd( -48.5346, 15.332, 19.3013, 0.74 ) }
    dend_0 { pt3dadd( -49.6915, 15.8862, 19.636, 0.07 ) }
    dend_0 { pt3dadd( -50.0483, 16.0546, 19.7408, 0.52 ) }
    dend_0 { pt3dadd( -51.014, 16.4442, 20.049, 0.07 ) }
    dend_0 { pt3dadd( -51.6029, 16.6199, 20.256, 0.22 ) }
    dend_0 { pt3dadd( -52.246, 16.7365, 20.4889, 0.15 ) }
    dend_0 { pt3dadd( -52.5103, 16.7461, 20.5835, 0.96 ) }
    dend_0 { pt3dadd( -53.1481, 16.6792, 20.8039, 1.92 ) }
    dend_0 { pt3dadd( -54.445, 16.4397, 21.2278, 0.07 ) }
    dend_0 { pt3dadd( -55.0773, 16.2754, 21.4105, 0.29 ) }
    dend_0 { pt3dadd( -55.7748, 16.0987, 21.5747, 0.07 ) }
    dend_0 { pt3dadd( -56.4622, 15.9679, 21.7008, 0.07 ) }
    dend_0 { pt3dadd( -56.7333, 15.9345, 21.7456, 0.07 ) }
    dend_0 { pt3dadd( -56.9926, 15.9156, 21.7815, 0.44 ) }
    dend_0 { pt3dadd( -57.545, 15.9079, 21.8386, 0.74 ) }
    dend_0 { pt3dadd( -58.9097, 15.9071, 21.9682, 0.07 ) }
    dend_0 { pt3dadd( -59.9922, 15.9091, 22.0758, 0.15 ) }
    dend_0 { pt3dadd( -60.7435, 15.9062, 22.1518, 0.96 ) }
    dend_0 { pt3dadd( -61.6662, 15.8617, 22.2561, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -62.4059, 15.7908, 22.3457, 0.59 ) }
    dend_0 { pt3dadd( -63.112, 15.6764, 22.4402, 0.15 ) }
    dend_0 { pt3dadd( -63.4444, 15.5967, 22.488, 0.74 ) }
    dend_0 { pt3dadd( -63.9443, 15.4488, 22.5611, 1.18 ) }
    dend_0 { pt3dadd( -65.5089, 14.945, 22.734, 0.15 ) }
    dend_0 { pt3dadd( -66.0278, 14.7797, 22.7783, 0.81 ) }
    dend_0 { pt3dadd( -66.8153, 14.5317, 22.8219, 0.15 ) }
    dend_0 { pt3dadd( -67.279, 14.3877, 22.8367, 0.22 ) }
    dend_0 { pt3dadd( -68.4782, 14.0162, 22.8515, 0.07 ) }
    dend_0 { pt3dadd( -69.223, 13.7848, 22.8482, 1.03 ) }
    dend_0 { pt3dadd( -69.7466, 13.6313, 22.8352, 1.84 ) }
    dend_0 { pt3dadd( -71.4926, 13.1833, 22.7943, 0.07 ) }
    dend_0 { pt3dadd( -71.8437, 13.1127, 22.7871, 0.22 ) }
    dend_0 { pt3dadd( -73.4992, 12.8753, 22.7801, 0.07 ) }
    dend_0 { pt3dadd( -73.7131, 12.8532, 22.7841, 0.66 ) }
    dend_0 { pt3dadd( -74.1881, 12.8159, 22.8182, 1.25 ) }
    dend_0 { pt3dadd( -74.9892, 12.7725, 22.8892, 0.15 ) }
    dend_0 { pt3dadd( -75.6368, 12.7706, 22.9588, 0.74 ) }
    dend_0 { pt3dadd( -76.6938, 12.764, 23.1111, 0.07 ) }
    dend_0 { pt3dadd( -77.4006, 12.757, 23.2381, 0.07 ) }
    dend_0 { pt3dadd( -78.124, 12.7382, 23.3795, 0.07 ) }
    dend_0 { pt3dadd( -78.267, 12.7367, 23.4133, 0.07 ) }
    dend_0 { pt3dadd( -78.8517, 12.7516, 23.5731, 0.74 ) }
    dend_0 { pt3dadd( -79.9667, 12.8142, 23.9489, 0.07 ) }
    dend_0 { pt3dadd( -80.2762, 12.8515, 24.0715, 1.11 ) }
    dend_0 { pt3dadd( -80.9286, 12.9532, 24.3633, 1.62 ) }
    dend_0 { pt3dadd( -82.0989, 13.0782, 24.944, 0.07 ) }
    dend_0 { pt3dadd( -82.704, 13.1168, 25.2629, 0.81 ) }
    dend_0 { pt3dadd( -83.6577, 13.1341, 25.7869, 0.15 ) }
    dend_0 { pt3dadd( -84.4249, 13.1047, 26.2369, 0.15 ) }
    dend_0 { pt3dadd( -85.2204, 13.0245, 26.723, 1.11 ) }
    dend_0 { pt3dadd( -86.9967, 12.7233, 27.8347, 0.15 ) }
    dend_0 { pt3dadd( -87.4034, 12.6291, 28.0869, 1.03 ) }
    dend_0 { pt3dadd( -88.1453, 12.4328, 28.5412, 1.84 ) }
    dend_0 { pt3dadd( -89.4166, 12.0576, 29.281, 0.22 ) }
    dend_0 { pt3dadd( -89.6448, 11.983, 29.4145, 0.22 ) }
    dend_0 { pt3dadd( -90.1083, 11.8298, 29.6883, 0.07 ) }
    dend_0 { pt3dadd( -90.4472, 11.7212, 29.8954, 0.59 ) }
    dend_0 { pt3dadd( -91.1518, 11.4894, 30.349, 0.07 ) }
    dend_0 { pt3dadd( -91.6109, 11.3273, 30.652, 0.29 ) }
    dend_0 { pt3dadd( -92.0696, 11.1392, 30.957, 0.07 ) }
    dend_0 { pt3dadd( -92.5928, 10.8933, 31.3111, 0.37 ) }
    dend_0 { pt3dadd( -93.3324, 10.5066, 31.8175, 0.07 ) }
    dend_0 { pt3dadd( -93.8642, 10.1937, 32.1859, 0.66 ) }
    dend_0 { pt3dadd( -94.4474, 9.75662, 32.5728, 0.07 ) }
    dend_0 { pt3dadd( -94.9719, 9.28872, 32.9086, 0.96 ) }
    dend_0 { pt3dadd( -95.8576, 8.33249, 33.4451, 0.07 ) }
    dend_0 { pt3dadd( -96.3246, 7.68607, 33.7025, 0.07 ) }
    dend_0 { pt3dadd( -96.6214, 7.1454, 33.8419, 1.03 ) }
    dend_0 { pt3dadd( -97.3559, 5.21919, 34.1482, 0.15 ) }
    dend_0 { pt3dadd( -97.5326, 4.59005, 34.2024, 0.15 ) }
    dend_0 { pt3dadd( -97.7023, 3.77412, 34.2296, 1.11 ) }
    dend_0 { pt3dadd( -97.8988, 2.4193, 34.2242, 0.15 ) }
    dend_0 { pt3dadd( -98.0325, 1.26174, 34.1963, 1.84 ) }
    dend_0 { pt3dadd( -98.2694, -0.997924, 34.1244, 0.15 ) }
    dend_0 { pt3dadd( -98.3176, -1.49476, 34.1094, 0.59 ) }
    dend_0 { pt3dadd( -98.4071, -2.26543, 34.1118, 1.03 ) }
    dend_0 { pt3dadd( -98.6536, -3.94822, 34.2094, 0.15 ) }
    dend_0 { pt3dadd( -98.7529, -4.49729, 34.2985, 0.52 ) }
    dend_0 { pt3dadd( -98.9702, -5.53139, 34.5568, 0.15 ) }
    dend_0 { pt3dadd( -99.0986, -6.13765, 34.7656, 0.66 ) }
    dend_0 { pt3dadd( -99.263, -7.06517, 35.1609, 0.15 ) }
    dend_0 { pt3dadd( -99.3884, -8.11208, 35.677, 1.62 ) }
    dend_0 { pt3dadd( -99.4441, -9.60861, 36.4934, 0.07 ) }
    dend_0 { pt3dadd( -99.4204, -10.1613, 36.79, 0.29 ) }
    dend_0 { pt3dadd( -99.3035, -11.1709, 37.2848, 0.07 ) }
    dend_0 { pt3dadd( -99.2038, -11.7204, 37.5075, 0.96 ) }
    dend_0 { pt3dadd( -99.0246, -12.6061, 37.733, 2.21 ) }
    dend_0 { pt3dadd( -98.8644, -13.385, 37.8376, 1.33 ) }
    dend_0 { pt3dadd( -98.6796, -14.4924, 37.8788, 0.07 ) }
    dend_0 { pt3dadd( -98.5616, -15.4897, 37.8648, 0.07 ) }
    dend_0 { pt3dadd( -98.5115, -16.2541, 37.8226, 1.03 ) }
    dend_0 { pt3dadd( -98.4291, -18.0796, 37.6866, 0.07 ) }
    dend_0 { pt3dadd( -98.422, -18.6689, 37.6351, 0.88 ) }
    dend_0 { pt3dadd( -98.44, -20.0979, 37.5024, 0.07 ) }
    dend_0 { pt3dadd( -98.449, -20.6182, 37.451, 0.66 ) }
    dend_0 { pt3dadd( -98.4543, -20.9731, 37.4211, 1.25 ) }
    dend_0 { pt3dadd( -98.4778, -22.0789, 37.3508, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.06335, 10.2596, 0.0, 0.616897 ) }
    axon_0 { pt3dadd( 5.74396, 24.801, 0.0, 0.616897 ) }
    axon_0 { pt3dadd( 9.42458, 39.3425, 0.0, 0.616897 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 81/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.324952, 22.2638, 1.35841, 0.37 ) }
    dend_38 { pt3dadd( 1.03978, 23.1084, 1.92723, 0.37 ) }
    dend_38 { pt3dadd( 1.26371, 23.3444, 2.11385, 0.37 ) }
    dend_38 { pt3dadd( 1.67466, 23.7995, 2.50897, 0.37 ) }
    dend_38 { pt3dadd( 2.1533, 24.4745, 3.07231, 0.22 ) }
    dend_38 { pt3dadd( 2.26165, 24.7308, 3.28393, 0.22 ) }
    dend_38 { pt3dadd( 2.24783, 25.0342, 3.55062, 0.22 ) }
    dend_38 { pt3dadd( 2.12647, 25.2159, 3.74493, 0.22 ) }
    dend_38 { pt3dadd( 1.88256, 25.5055, 4.03588, 0.22 ) }
    dend_38 { pt3dadd( 1.45565, 25.9886, 4.52791, 0.22 ) }
    dend_38 { pt3dadd( 1.18622, 26.2996, 4.85271, 0.22 ) }
    dend_38 { pt3dadd( 0.760109, 26.8732, 5.43359, 0.66 ) }
    dend_38 { pt3dadd( 0.364264, 27.552, 6.10789, 1.03 ) }
    dend_38 { pt3dadd( -0.0514837, 28.4104, 6.99712, 0.22 ) }
    dend_38 { pt3dadd( -0.294518, 29.0046, 7.67315, 0.22 ) }
    dend_38 { pt3dadd( -0.426612, 29.4224, 8.21478, 0.88 ) }
    dend_38 { pt3dadd( -0.528125, 29.8513, 8.84305, 1.47 ) }
    dend_38 { pt3dadd( -0.630181, 30.5228, 9.97853, 0.15 ) }
    dend_38 { pt3dadd( -0.667647, 31.0589, 10.9117, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_38 { pt3dadd( -0.683982, 31.6098, 11.8292, 0.15 ) }
    dend_38 { pt3dadd( -0.748492, 32.1451, 12.6237, 0.15 ) }
    dend_38 { pt3dadd( -0.884731, 32.6793, 13.3753, 0.15 ) }
    dend_38 { pt3dadd( -1.17259, 33.3166, 14.2176, 0.15 ) }
    dend_38 { pt3dadd( -1.82075, 34.2973, 15.3312, 0.96 ) }
    dend_38 { pt3dadd( -2.25663, 34.851, 15.8813, 2.06 ) }
    dend_38 { pt3dadd( -3.06927, 35.7391, 16.6288, 0.22 ) }
    dend_38 { pt3dadd( -3.41086, 36.1025, 16.8944, 0.22 ) }
    dend_38 { pt3dadd( -3.74993, 36.431, 17.1318, 0.22 ) }
    dend_38 { pt3dadd( -4.27883, 36.8796, 17.5155, 0.22 ) }
    dend_38 { pt3dadd( -4.88199, 37.325, 18.0514, 0.22 ) }
    dend_38 { pt3dadd( -5.26726, 37.6049, 18.4275, 1.33 ) }
    dend_38 { pt3dadd( -5.8111, 38.158, 19.1275, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.324952, 22.2638, 1.35841, 1.25 ) }
    dend_33 { pt3dadd( -0.10398, 23.265, 1.36376, 1.25 ) }
    dend_33 { pt3dadd( -0.605161, 24.56, 1.44639, 0.81 ) }
    dend_33 { pt3dadd( -0.951711, 25.6667, 1.59848, 0.81 ) }
    dend_33 { pt3dadd( -1.20131, 26.7355, 1.80372, 1.11 ) }
    dend_33 { pt3dadd( -1.34651, 27.7303, 2.03556, 1.4 ) }
    dend_33 { pt3dadd( -1.38029, 28.5816, 2.25929, 0.59 ) }
    dend_33 { pt3dadd( -1.24958, 29.3947, 2.56923, 0.59 ) }
    dend_33 { pt3dadd( -0.874763, 30.3539, 3.02716, 0.52 ) }
    dend_33 { pt3dadd( -0.540831, 30.9302, 3.32766, 0.59 ) }
    dend_33 { pt3dadd( -0.14805, 31.5112, 3.64629, 0.59 ) }
    dend_33 { pt3dadd( 0.372344, 32.275, 4.07983, 0.44 ) }
    dend_33 { pt3dadd( 0.649245, 32.7467, 4.34978, 0.44 ) }
    dend_33 { pt3dadd( 0.730012, 33.0147, 4.48594, 0.44 ) }
    dend_33 { pt3dadd( 0.720987, 33.4932, 4.7263, 0.52 ) }
    dend_33 { pt3dadd( 0.579527, 34.2155, 5.13887, 0.66 ) }
    dend_33 { pt3dadd( 0.409409, 34.8097, 5.50905, 0.29 ) }
    dend_33 { pt3dadd( 0.274177, 35.2463, 5.80889, 0.29 ) }
    dend_33 { pt3dadd( 0.137327, 35.8084, 6.19122, 0.37 ) }
    dend_33 { pt3dadd( 0.00325374, 36.5379, 6.66805, 0.88 ) }
    dend_33 { pt3dadd( -0.116231, 37.2924, 7.15014, 1.62 ) }
    dend_33 { pt3dadd( -0.203466, 37.9899, 7.5798, 2.43 ) }
    dend_33 { pt3dadd( -0.272254, 38.7809, 8.05033, 2.43 ) }
    dend_33 { pt3dadd( -0.339309, 40.1017, 8.80295, 0.22 ) }
    dend_33 { pt3dadd( -0.346513, 40.7249, 9.14472, 0.52 ) }
    dend_33 { pt3dadd( -0.339964, 41.3545, 9.4563, 0.22 ) }
    dend_33 { pt3dadd( -0.331704, 41.6888, 9.59345, 0.22 ) }
    dend_33 { pt3dadd( -0.315553, 42.1181, 9.73798, 0.22 ) }
    dend_33 { pt3dadd( -0.298354, 42.6409, 9.8617, 0.22 ) }
    dend_33 { pt3dadd( -0.292978, 42.9902, 9.92393, 0.22 ) }
    dend_33 { pt3dadd( -0.295339, 43.2195, 9.95657, 0.22 ) }
    dend_33 { pt3dadd( -0.348947, 44.0372, 10.0286, 0.37 ) }
    dend_33 { pt3dadd( -0.433061, 44.7324, 10.0576, 0.37 ) }
    dend_33 { pt3dadd( -0.542629, 45.3962, 10.0573, 0.52 ) }
    dend_33 { pt3dadd( -0.662419, 46.0676, 10.0381, 0.96 ) }
    dend_33 { pt3dadd( -0.797192, 46.8716, 9.98239, 0.96 ) }
    dend_33 { pt3dadd( -0.972083, 48.1008, 9.82412, 0.44 ) }
    dend_33 { pt3dadd( -1.03444, 48.9023, 9.66449, 0.44 ) }
    dend_33 { pt3dadd( -1.08087, 49.7345, 9.46216, 1.47 ) }
    dend_33 { pt3dadd( -1.12364, 50.603, 9.22431, 2.8 ) }
    dend_33 { pt3dadd( -1.16641, 51.4052, 8.98008, 3.61 ) }
    dend_33 { pt3dadd( -1.21828, 52.2373, 8.69568, 3.02 ) }
    dend_33 { pt3dadd( -1.35055, 54.1852, 7.94867, 0.22 ) }
    dend_33 { pt3dadd( -1.40228, 54.7801, 7.70281, 0.29 ) }
    dend_33 { pt3dadd( -1.43297, 55.1036, 7.56643, 0.29 ) }
    dend_33 { pt3dadd( -1.50701, 55.735, 7.28926, 0.22 ) }
    dend_33 { pt3dadd( -1.61436, 56.492, 6.95624, 0.52 ) }
    dend_33 { pt3dadd( -1.72111, 57.1221, 6.67746, 1.33 ) }
    dend_33 { pt3dadd( -1.88554, 57.9118, 6.27744, 2.43 ) }
    dend_33 { pt3dadd( -1.96872, 58.6437, 5.88832, 2.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -9.82316, -20.0805, -15.3943, 0.44 ) }
    dend_27 { pt3dadd( -11.3995, -21.1203, -16.2145, 0.44 ) }
    dend_27 { pt3dadd( -11.4805, -21.4537, -16.4966, 0.44 ) }
    dend_27 { pt3dadd( -11.5341, -21.8021, -16.8107, 0.44 ) }
    dend_27 { pt3dadd( -11.6223, -22.1765, -17.1542, 0.44 ) }
    dend_27 { pt3dadd( -11.7757, -22.6089, -17.5678, 0.59 ) }
    dend_27 { pt3dadd( -12.0524, -23.1935, -18.1792, 0.74 ) }
    dend_27 { pt3dadd( -12.2349, -23.59, -18.653, 1.11 ) }
    dend_27 { pt3dadd( -12.4957, -24.0224, -19.2481, 1.47 ) }
    dend_27 { pt3dadd( -12.8149, -24.4042, -19.8726, 1.47 ) }
    dend_27 { pt3dadd( -13.352, -24.8452, -20.7648, 0.59 ) }
    dend_27 { pt3dadd( -13.8145, -25.0663, -21.4184, 0.52 ) }
    dend_27 { pt3dadd( -14.1764, -25.1259, -21.8581, 0.52 ) }
    dend_27 { pt3dadd( -14.6008, -25.112, -22.2955, 0.44 ) }
    dend_27 { pt3dadd( -15.0763, -25.0413, -22.6714, 0.44 ) }
    dend_27 { pt3dadd( -15.3302, -24.9944, -22.8312, 0.44 ) }
    dend_27 { pt3dadd( -15.9622, -24.9021, -23.1367, 0.96 ) }
    dend_27 { pt3dadd( -16.5575, -24.842, -23.3853, 0.96 ) }
    dend_27 { pt3dadd( -17.255, -24.812, -23.6473, 1.4 ) }
    dend_27 { pt3dadd( -18.1468, -24.8236, -23.9588, 2.36 ) }
    dend_27 { pt3dadd( -18.8723, -24.8704, -24.1993, 3.32 ) }
    dend_27 { pt3dadd( -19.7224, -24.9402, -24.4941, 3.61 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -9.82316, -20.0805, -15.3943, 0.29 ) }
    dend_26 { pt3dadd( -9.57941, -21.8706, -15.9626, 0.29 ) }
    dend_26 { pt3dadd( -9.46211, -22.4831, -16.1677, 0.29 ) }
    dend_26 { pt3dadd( -9.30523, -23.2855, -16.455, 0.29 ) }
    dend_26 { pt3dadd( -9.18616, -23.9538, -16.7277, 0.81 ) }
    dend_26 { pt3dadd( -9.06971, -24.6712, -17.0532, 1.11 ) }
    dend_26 { pt3dadd( -8.92997, -25.7023, -17.5903, 0.22 ) }
    dend_26 { pt3dadd( -8.79035, -26.4546, -18.0798, 0.22 ) }
    dend_26 { pt3dadd( -8.75294, -26.8832, -18.4224, 0.22 ) }
    dend_26 { pt3dadd( -8.75799, -27.4642, -18.9622, 0.22 ) }
    dend_26 { pt3dadd( -8.75509, -27.7864, -19.1903, 0.37 ) }
    dend_26 { pt3dadd( -8.72769, -28.4083, -19.5653, 0.37 ) }
    dend_26 { pt3dadd( -8.68555, -28.9159, -19.8185, 0.81 ) }
    dend_26 { pt3dadd( -8.60229, -29.6524, -20.1136, 1.7 ) }
    dend_26 { pt3dadd( -8.48584, -30.6841, -20.4974, 2.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( -8.2242, -32.9325, -21.2623, 0.29 ) }
    dend_26 { pt3dadd( -8.12921, -33.6976, -21.4887, 0.96 ) }
    dend_26 { pt3dadd( -8.05764, -34.211, -21.6171, 0.96 ) }
    dend_26 { pt3dadd( -7.85909, -35.4036, -21.8782, 0.15 ) }
    dend_26 { pt3dadd( -7.6986, -36.1642, -21.9986, 0.15 ) }
    dend_26 { pt3dadd( -7.57508, -36.6764, -22.0587, 0.59 ) }
    dend_26 { pt3dadd( -7.27924, -37.6612, -22.1281, 0.29 ) }
    dend_26 { pt3dadd( -7.06502, -38.2903, -22.1379, 1.4 ) }
    dend_26 { pt3dadd( -6.71974, -39.2316, -22.1216, 2.73 ) }
    dend_26 { pt3dadd( -5.86776, -41.4107, -22.0037, 0.15 ) }
    dend_26 { pt3dadd( -5.73422, -41.7437, -21.9797, 0.74 ) }
    dend_26 { pt3dadd( -5.48812, -42.348, -21.9492, 0.74 ) }
    dend_26 { pt3dadd( -5.08667, -43.2758, -21.9253, 0.15 ) }
    dend_26 { pt3dadd( -4.71537, -44.113, -21.9158, 0.15 ) }
    dend_26 { pt3dadd( -4.4017, -44.8421, -21.9202, 0.15 ) }
    dend_26 { pt3dadd( -4.12934, -45.493, -21.9583, 1.25 ) }
    dend_26 { pt3dadd( -3.75861, -46.4694, -22.0719, 0.22 ) }
    dend_26 { pt3dadd( -3.5603, -47.1373, -22.1989, 0.22 ) }
    dend_26 { pt3dadd( -3.50205, -47.4813, -22.2836, 0.22 ) }
    dend_26 { pt3dadd( -3.49184, -47.9759, -22.4032, 0.22 ) }
    dend_26 { pt3dadd( -3.5562, -48.8745, -22.6012, 0.44 ) }
    dend_26 { pt3dadd( -3.66406, -49.7191, -22.7674, 1.62 ) }
    dend_26 { pt3dadd( -3.79392, -50.6241, -22.9308, 3.02 ) }
    dend_26 { pt3dadd( -3.93831, -51.719, -23.1159, 3.02 ) }
    dend_26 { pt3dadd( -4.20605, -54.1718, -23.5275, 0.29 ) }
    dend_26 { pt3dadd( -4.28033, -55.0739, -23.6691, 0.81 ) }
    dend_26 { pt3dadd( -4.32322, -55.86, -23.7757, 1.03 ) }
    dend_26 { pt3dadd( -4.34304, -56.6782, -23.8797, 0.37 ) }
    dend_26 { pt3dadd( -4.34388, -57.3127, -23.9415, 1.18 ) }
    dend_26 { pt3dadd( -4.29949, -58.5943, -24.0393, 0.22 ) }
    dend_26 { pt3dadd( -4.24944, -59.0844, -24.0615, 0.74 ) }
    dend_26 { pt3dadd( -4.1831, -59.487, -24.0613, 0.74 ) }
    dend_26 { pt3dadd( -4.0852, -59.9177, -24.0345, 0.15 ) }
    dend_26 { pt3dadd( -3.79871, -61.0825, -23.8852, 0.44 ) }
    dend_26 { pt3dadd( -3.70659, -61.3732, -23.8326, 0.44 ) }
    dend_26 { pt3dadd( -3.37231, -62.2648, -23.6467, 0.22 ) }
    dend_26 { pt3dadd( -3.17249, -62.7898, -23.5526, 1.11 ) }
    dend_26 { pt3dadd( -3.02864, -63.234, -23.4891, 1.62 ) }
    dend_26 { pt3dadd( -2.82254, -63.9752, -23.405, 1.62 ) }
    dend_26 { pt3dadd( -2.46328, -65.6757, -23.3063, 0.22 ) }
    dend_26 { pt3dadd( -2.37113, -66.5333, -23.2712, 0.96 ) }
    dend_26 { pt3dadd( -2.4084, -67.4158, -23.2515, 1.18 ) }
    dend_26 { pt3dadd( -2.68012, -68.9672, -23.2649, 0.15 ) }
    dend_26 { pt3dadd( -2.80459, -69.4858, -23.2789, 0.22 ) }
    dend_26 { pt3dadd( -3.2207, -70.6752, -23.3516, 0.07 ) }
    dend_26 { pt3dadd( -3.51892, -71.1918, -23.4175, 0.22 ) }
    dend_26 { pt3dadd( -4.2989, -72.1969, -23.5894, 0.07 ) }
    dend_26 { pt3dadd( -4.64677, -72.527, -23.6667, 0.15 ) }
    dend_26 { pt3dadd( -4.49813, -81.9469, -25.5591, 0.15 ) }
    dend_26 { pt3dadd( -5.70041, -91.3305, -27.2676, 0.15 ) }
    dend_26 { pt3dadd( -4.93494, -100.824, -28.5838, 0.15 ) }
    dend_26 { pt3dadd( -3.36925, -110.095, -30.4637, 0.15 ) }
    dend_26 { pt3dadd( -1.70661, -119.08, -33.2779, 0.15 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.86237, -35.4106, 6.20871, 1.99 ) }
    dend_14 { pt3dadd( -3.20067, -36.7979, 6.17752, 1.99 ) }
    dend_14 { pt3dadd( -3.59837, -38.72, 6.14461, 0.59 ) }
    dend_14 { pt3dadd( -3.78901, -39.817, 6.13017, 0.59 ) }
    dend_14 { pt3dadd( -3.96915, -41.1328, 6.13075, 0.59 ) }
    dend_14 { pt3dadd( -4.02999, -41.7774, 6.13775, 1.11 ) }
    dend_14 { pt3dadd( -4.08892, -42.9505, 6.17533, 2.58 ) }
    dend_14 { pt3dadd( -4.05775, -43.5266, 6.20714, 2.88 ) }
    dend_14 { pt3dadd( -3.99238, -44.0246, 6.24998, 2.65 ) }
    dend_14 { pt3dadd( -3.89366, -44.7877, 6.34374, 1.55 ) }
    dend_14 { pt3dadd( -3.76759, -45.8607, 6.51393, 0.74 ) }
    dend_14 { pt3dadd( -3.68517, -46.8837, 6.68785, 0.44 ) }
    dend_14 { pt3dadd( -3.66072, -47.7793, 6.84534, 0.29 ) }
    dend_14 { pt3dadd( -3.68231, -48.4727, 6.97297, 0.29 ) }
    dend_14 { pt3dadd( -3.75604, -49.3571, 7.14993, 0.29 ) }
    dend_14 { pt3dadd( -3.7792, -49.6371, 7.20835, 0.29 ) }
    dend_14 { pt3dadd( -3.82796, -50.154, 7.31967, 0.44 ) }
    dend_14 { pt3dadd( -3.88623, -50.6656, 7.42196, 1.11 ) }
    dend_14 { pt3dadd( -3.9533, -51.2438, 7.54484, 2.36 ) }
    dend_14 { pt3dadd( -4.06615, -52.4468, 7.79926, 2.73 ) }
    dend_14 { pt3dadd( -4.19967, -54.6884, 8.27479, 0.44 ) }
    dend_14 { pt3dadd( -4.21982, -55.13, 8.37744, 0.44 ) }
    dend_14 { pt3dadd( -4.25525, -55.9817, 8.591, 0.59 ) }
    dend_14 { pt3dadd( -4.28233, -56.8012, 8.81042, 0.29 ) }
    dend_14 { pt3dadd( -4.2958, -57.3139, 8.95099, 0.29 ) }
    dend_14 { pt3dadd( -4.27978, -57.7918, 9.07731, 0.29 ) }
    dend_14 { pt3dadd( -4.22679, -58.2873, 9.22978, 0.29 ) }
    dend_14 { pt3dadd( -4.14949, -58.6701, 9.36543, 0.88 ) }
    dend_14 { pt3dadd( -3.99418, -59.2059, 9.57673, 1.84 ) }
    dend_14 { pt3dadd( -3.81429, -59.7165, 9.78826, 2.14 ) }
    dend_14 { pt3dadd( -3.27409, -61.1745, 10.4317, 0.44 ) }
    dend_14 { pt3dadd( -3.03913, -61.8273, 10.7273, 0.66 ) }
    dend_14 { pt3dadd( -2.76173, -62.6012, 11.1059, 0.29 ) }
    dend_14 { pt3dadd( -2.65917, -62.8788, 11.2632, 0.29 ) }
    dend_14 { pt3dadd( -2.56005, -63.1665, 11.4588, 0.29 ) }
    dend_14 { pt3dadd( -2.51577, -63.3501, 11.6134, 0.29 ) }
    dend_14 { pt3dadd( -2.5461, -63.5452, 11.7843, 0.29 ) }
    dend_14 { pt3dadd( -2.67685, -63.9724, 11.9794, 0.29 ) }
    dend_14 { pt3dadd( -2.77364, -64.298, 12.0684, 0.29 ) }
    dend_14 { pt3dadd( -2.87342, -64.6858, 12.1515, 0.29 ) }
    dend_14 { pt3dadd( -3.02062, -65.3052, 12.264, 1.18 ) }
    dend_14 { pt3dadd( -3.15388, -65.9401, 12.3897, 2.43 ) }
    dend_14 { pt3dadd( -3.28236, -66.6764, 12.5511, 2.88 ) }
    dend_14 { pt3dadd( -3.43688, -67.8155, 12.8286, 1.55 ) }
    dend_14 { pt3dadd( -3.56675, -69.263, 13.2434, 0.52 ) }
    dend_14 { pt3dadd( -3.61262, -70.1789, 13.5546, 0.29 ) }
    dend_14 { pt3dadd( -3.63354, -70.91, 13.8396, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_14 { pt3dadd( -3.63527, -71.5052, 14.0966, 0.66 ) }
    dend_14 { pt3dadd( -3.6254, -71.9882, 14.3183, 0.96 ) }
    dend_14 { pt3dadd( -3.59368, -72.6235, 14.5856, 0.22 ) }
    dend_14 { pt3dadd( -3.55751, -73.2239, 14.7653, 0.22 ) }
    dend_14 { pt3dadd( -3.52534, -73.8689, 14.8626, 0.29 ) }
    dend_14 { pt3dadd( -3.49363, -74.4592, 14.8903, 0.59 ) }
    dend_14 { pt3dadd( -3.45203, -75.3992, 14.8858, 1.33 ) }
    dend_14 { pt3dadd( -3.41198, -76.4576, 14.8499, 2.21 ) }
    dend_14 { pt3dadd( -3.37719, -77.3013, 14.8077, 3.24 ) }
    dend_14 { pt3dadd( -3.28959, -78.7839, 14.7264, 1.77 ) }
    dend_14 { pt3dadd( -3.20154, -80.0224, 14.6697, 0.44 ) }
    dend_14 { pt3dadd( -3.13888, -80.8978, 14.6391, 0.37 ) }
    dend_14 { pt3dadd( -3.07796, -81.8884, 14.618, 0.37 ) }
    dend_14 { pt3dadd( -3.04475, -82.533, 14.6165, 0.88 ) }
    dend_14 { pt3dadd( -3.03641, -82.8267, 14.6176, 1.77 ) }
    dend_14 { pt3dadd( -3.04773, -83.7682, 14.6157, 3.1 ) }
    dend_14 { pt3dadd( -3.15924, -85.2267, 14.6023, 1.33 ) }
    dend_14 { pt3dadd( -3.30922, -86.2256, 14.5855, 0.74 ) }
    dend_14 { pt3dadd( -3.58136, -87.3925, 14.5563, 0.22 ) }
    dend_14 { pt3dadd( -3.72635, -87.8682, 14.5411, 0.22 ) }
    dend_14 { pt3dadd( -3.84938, -88.2107, 14.5292, 0.52 ) }
    dend_14 { pt3dadd( -4.2014, -89.0259, 14.4991, 0.81 ) }
    dend_14 { pt3dadd( -4.64213, -89.9069, 14.4952, 0.29 ) }
    dend_14 { pt3dadd( -4.77639, -90.1735, 14.501, 0.37 ) }
    dend_14 { pt3dadd( -5.06248, -90.8046, 14.5268, 0.37 ) }
    dend_14 { pt3dadd( -5.34198, -91.5616, 14.622, 0.44 ) }
    dend_14 { pt3dadd( -5.60263, -92.4327, 14.7987, 0.81 ) }
    dend_14 { pt3dadd( -5.83674, -93.4685, 15.0784, 0.81 ) }
    dend_14 { pt3dadd( -5.97517, -94.2781, 15.3344, 0.81 ) }
    dend_14 { pt3dadd( -6.14596, -95.3138, 15.6899, 0.37 ) }
    dend_14 { pt3dadd( -6.35903, -96.5623, 16.1739, 0.37 ) }
    dend_14 { pt3dadd( -6.46179, -97.1925, 16.4542, 1.18 ) }
    dend_14 { pt3dadd( -6.5342, -97.8022, 16.7676, 2.8 ) }
    dend_14 { pt3dadd( -6.562, -98.3203, 17.0668, 3.32 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 34/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.86237, -35.4106, 6.20871, 0.66 ) }
    dend_11 { pt3dadd( -1.14518, -36.9052, 6.69343, 0.66 ) }
    dend_11 { pt3dadd( -0.0442978, -38.0057, 7.0067, 0.44 ) }
    dend_11 { pt3dadd( 0.70554, -38.8801, 7.22055, 0.88 ) }
    dend_11 { pt3dadd( 1.19952, -39.5553, 7.36296, 0.44 ) }
    dend_11 { pt3dadd( 1.58695, -40.1813, 7.46731, 0.22 ) }
    dend_11 { pt3dadd( 1.94461, -40.8818, 7.56446, 0.22 ) }
    dend_11 { pt3dadd( 2.12161, -41.6146, 7.60466, 0.22 ) }
    dend_11 { pt3dadd( 2.21254, -42.2931, 7.63338, 0.22 ) }
    dend_11 { pt3dadd( 2.24306, -42.9032, 7.68004, 0.59 ) }
    dend_11 { pt3dadd( 2.2593, -43.7945, 7.80205, 1.7 ) }
    dend_11 { pt3dadd( 2.25701, -44.9678, 8.01526, 1.47 ) }
    dend_11 { pt3dadd( 2.25474, -46.9973, 8.45549, 0.44 ) }
    dend_11 { pt3dadd( 2.28561, -48.0862, 8.71023, 0.29 ) }
    dend_11 { pt3dadd( 2.30991, -48.7791, 8.8782, 0.22 ) }
    dend_11 { pt3dadd( 2.34673, -49.5597, 9.0544, 0.22 ) }
    dend_11 { pt3dadd( 2.38347, -50.1118, 9.17726, 0.96 ) }
    dend_11 { pt3dadd( 2.48038, -51.1785, 9.3819, 2.51 ) }
    dend_11 { pt3dadd( 2.63333, -52.3687, 9.59266, 3.39 ) }
    dend_11 { pt3dadd( 2.81802, -53.4958, 9.75725, 3.1 ) }
    dend_11 { pt3dadd( 3.14863, -55.008, 9.97054, 1.03 ) }
    dend_11 { pt3dadd( 3.51509, -56.4578, 10.1766, 0.29 ) }
    dend_11 { pt3dadd( 3.81463, -57.4918, 10.3479, 0.22 ) }
    dend_11 { pt3dadd( 4.02878, -58.1624, 10.4766, 0.22 ) }
    dend_11 { pt3dadd( 4.15422, -58.545, 10.5634, 0.22 ) }
    dend_11 { pt3dadd( 4.34752, -59.1033, 10.7003, 0.29 ) }
    dend_11 { pt3dadd( 4.5531, -59.7244, 10.8435, 0.22 ) }
    dend_11 { pt3dadd( 4.73819, -60.4729, 10.9265, 0.29 ) }
    dend_11 { pt3dadd( 4.81697, -60.8651, 10.9419, 0.81 ) }
    dend_11 { pt3dadd( 5.01949, -62.0226, 10.9171, 1.55 ) }
    dend_11 { pt3dadd( 5.17172, -62.9691, 10.8617, 2.29 ) }
    dend_11 { pt3dadd( 5.30661, -63.8032, 10.7908, 2.06 ) }
    dend_11 { pt3dadd( 5.63579, -65.5572, 10.6354, 0.22 ) }
    dend_11 { pt3dadd( 5.77917, -66.1425, 10.5985, 0.22 ) }
    dend_11 { pt3dadd( 5.9148, -66.5677, 10.5929, 0.22 ) }
    dend_11 { pt3dadd( 5.99106, -66.7568, 10.6035, 0.22 ) }
    dend_11 { pt3dadd( 6.26677, -67.341, 10.685, 0.81 ) }
    dend_11 { pt3dadd( 6.70576, -68.2088, 10.8543, 1.84 ) }
    dend_11 { pt3dadd( 7.14133, -69.0918, 11.0823, 2.8 ) }
    dend_11 { pt3dadd( 7.58594, -70.1198, 11.4001, 1.77 ) }
    dend_11 { pt3dadd( 7.92356, -71.0684, 11.7121, 0.81 ) }
    dend_11 { pt3dadd( 8.29874, -72.2907, 12.1312, 0.22 ) }
    dend_11 { pt3dadd( 8.49469, -72.9965, 12.3704, 0.29 ) }
    dend_11 { pt3dadd( 8.65946, -73.6933, 12.6095, 0.29 ) }
    dend_11 { pt3dadd( 8.86374, -74.9258, 13.0536, 0.59 ) }
    dend_11 { pt3dadd( 8.97266, -76.0539, 13.5008, 1.47 ) }
    dend_11 { pt3dadd( 8.99089, -76.6257, 13.7581, 1.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 81/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 40.3912, 19.1928, 44.4721, 0.22 ) }
    dend_3 { pt3dadd( 41.3213, 19.6326, 45.843, 0.22 ) }
    dend_3 { pt3dadd( 41.9486, 19.9293, 46.7678, 0.22 ) }
    dend_3 { pt3dadd( 42.8265, 20.3445, 48.0617, 1.47 ) }
    dend_3 { pt3dadd( 43.1689, 20.5065, 48.5665, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 86/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 40.3912, 19.1928, 44.4721, 0.29 ) }
    dend_2 { pt3dadd( 41.8465, 18.2211, 45.576, 0.29 ) }
    dend_2 { pt3dadd( 42.7086, 17.5388, 46.2242, 0.15 ) }
    dend_2 { pt3dadd( 43.0622, 17.2582, 46.4677, 0.22 ) }
    dend_2 { pt3dadd( 43.7749, 16.6997, 46.922, 0.22 ) }
    dend_2 { pt3dadd( 44.6208, 16.0138, 47.4604, 0.22 ) }
    dend_2 { pt3dadd( 45.2829, 15.4877, 47.8534, 0.22 ) }
    dend_2 { pt3dadd( 46.1912, 14.7365, 48.3517, 0.22 ) }
    dend_2 { pt3dadd( 47.094, 13.9847, 48.8117, 0.22 ) }
    dend_2 { pt3dadd( 48.0396, 13.2462, 49.2464, 0.22 ) }
    dend_2 { pt3dadd( 49.2203, 12.4306, 49.6925, 0.15 ) }
    dend_2 { pt3dadd( 50.3089, 11.7669, 50.0151, 0.15 ) }
    dend_2 { pt3dadd( 50.8494, 11.4732, 50.1487, 0.15 ) }
    dend_2 { pt3dadd( 51.5071, 11.1138, 50.2905, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 52.1687, 10.7406, 50.413, 1.25 ) }
    dend_2 { pt3dadd( 53.2571, 10.137, 50.571, 0.15 ) }
    dend_2 { pt3dadd( 53.8095, 9.83972, 50.6372, 0.15 ) }
    dend_2 { pt3dadd( 54.7221, 9.3548, 50.7292, 0.88 ) }
    dend_2 { pt3dadd( 55.9816, 8.69921, 50.8351, 0.15 ) }
    dend_2 { pt3dadd( 56.5079, 8.43526, 50.8697, 0.44 ) }
    dend_2 { pt3dadd( 57.1954, 8.09328, 50.924, 1.18 ) }
    dend_2 { pt3dadd( 58.6027, 7.39623, 51.0664, 0.07 ) }
    dend_2 { pt3dadd( 59.6407, 6.91372, 51.1868, 0.07 ) }
    dend_2 { pt3dadd( 60.4526, 6.53888, 51.3123, 1.47 ) }
    dend_2 { pt3dadd( 60.9222, 6.33533, 51.4054, 1.47 ) }
    dend_2 { pt3dadd( 62.4468, 5.65662, 51.7582, 0.15 ) }
    dend_2 { pt3dadd( 63.1025, 5.33946, 51.9518, 1.11 ) }
    dend_2 { pt3dadd( 63.635, 5.05367, 52.1439, 1.47 ) }
    dend_2 { pt3dadd( 65.2578, 4.09508, 52.8284, 0.07 ) }
    dend_2 { pt3dadd( 66.1118, 3.51478, 53.2305, 0.15 ) }
    dend_2 { pt3dadd( 66.7167, 3.05129, 53.5425, 0.22 ) }
    dend_2 { pt3dadd( 67.5416, 2.34667, 54.0338, 0.07 ) }
    dend_2 { pt3dadd( 68.0177, 1.92158, 54.3494, 1.18 ) }
    dend_2 { pt3dadd( 68.5717, 1.43236, 54.7366, 1.77 ) }
    dend_2 { pt3dadd( 69.8435, 0.330163, 55.6358, 0.07 ) }
    dend_2 { pt3dadd( 70.5734, -0.189923, 56.0859, 0.15 ) }
    dend_2 { pt3dadd( 71.9159, -0.902969, 56.8128, 0.74 ) }
    dend_2 { pt3dadd( 72.9848, -1.27667, 57.3035, 0.15 ) }
    dend_2 { pt3dadd( 73.6679, -1.39214, 57.5739, 0.81 ) }
    dend_2 { pt3dadd( 74.3754, -1.40214, 57.8157, 2.14 ) }
    dend_2 { pt3dadd( 76.9435, -1.049, 58.5481, 0.15 ) }
    dend_2 { pt3dadd( 77.8421, -0.817604, 58.7859, 0.15 ) }
    dend_2 { pt3dadd( 78.5586, -0.559687, 58.9736, 0.37 ) }
    dend_2 { pt3dadd( 79.8601, 0.0133119, 59.3813, 0.07 ) }
    dend_2 { pt3dadd( 80.3739, 0.276726, 59.5963, 0.88 ) }
    dend_2 { pt3dadd( 80.8286, 0.558923, 59.8412, 1.25 ) }
    dend_2 { pt3dadd( 81.9698, 1.47087, 60.7245, 0.07 ) }
    dend_2 { pt3dadd( 82.5107, 1.9842, 61.2652, 1.11 ) }
    dend_2 { pt3dadd( 82.9555, 2.48154, 61.8464, 1.55 ) }
    dend_2 { pt3dadd( 83.5242, 3.13935, 62.7798, 0.07 ) }
    dend_2 { pt3dadd( 83.7865, 3.43, 63.2694, 0.74 ) }
    dend_2 { pt3dadd( 84.2556, 3.94826, 64.272, 0.15 ) }
    dend_2 { pt3dadd( 84.6212, 4.36357, 65.1541, 0.81 ) }
    dend_2 { pt3dadd( 85.0137, 4.79347, 66.1363, 1.25 ) }
    dend_2 { pt3dadd( 85.654, 5.42915, 67.7456, 0.22 ) }
    dend_2 { pt3dadd( 85.932, 5.66585, 68.4499, 0.22 ) }
    dend_2 { pt3dadd( 86.0863, 5.75757, 68.8121, 0.22 ) }
    dend_2 { pt3dadd( 86.4588, 5.88059, 69.5767, 0.15 ) }
    dend_2 { pt3dadd( 86.8366, 5.93581, 70.2883, 0.81 ) }
    dend_2 { pt3dadd( 87.7107, 5.90794, 71.7158, 0.22 ) }
    dend_2 { pt3dadd( 88.4381, 5.82804, 72.7726, 0.22 ) }
    dend_2 { pt3dadd( 89.0923, 5.69057, 73.6003, 1.62 ) }
    dend_2 { pt3dadd( 89.8372, 5.47446, 74.4506, 0.15 ) }
    dend_2 { pt3dadd( 90.3946, 5.28578, 75.0259, 0.96 ) }
    dend_2 { pt3dadd( 91.8075, 4.81019, 76.2632, 0.07 ) }
    dend_2 { pt3dadd( 92.7387, 4.51928, 76.9814, 0.59 ) }
    dend_2 { pt3dadd( 93.9888, 4.19324, 77.904, 0.07 ) }
    dend_2 { pt3dadd( 94.8915, 4.00358, 78.5758, 0.07 ) }
    dend_2 { pt3dadd( 95.4625, 3.90372, 79.0023, 1.25 ) }
    dend_2 { pt3dadd( 97.2306, 3.7075, 80.2873, 0.07 ) }
    dend_2 { pt3dadd( 98.1518, 3.67918, 80.9114, 0.81 ) }
    dend_2 { pt3dadd( 99.6196, 3.75032, 81.8704, 0.07 ) }
    dend_2 { pt3dadd( 100.072, 3.82312, 82.1692, 0.07 ) }
    dend_2 { pt3dadd( 100.629, 3.9681, 82.5443, 1.03 ) }
    dend_2 { pt3dadd( 101.797, 4.3391, 83.3542, 0.07 ) }
    dend_2 { pt3dadd( 102.872, 4.79707, 84.1239, 0.07 ) }
    dend_2 { pt3dadd( 104.03, 5.365, 84.9164, 0.07 ) }
    dend_2 { pt3dadd( 104.748, 5.78695, 85.3821, 0.66 ) }
    dend_2 { pt3dadd( 105.247, 6.09854, 85.7167, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 65/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.42458, 39.3425, 0.0, 0.181554 ) }
    axon_1 { pt3dadd( 13.1052, 53.8839, 0.0, 0.181554 ) }
    axon_1 { pt3dadd( 16.7858, 68.4253, 0.0, 0.181554 ) }
    // Section: dend_56, id: dend_56, parent: dend_38 (entry count 68/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -5.8111, 38.158, 19.1275, 0.22 ) }
    dend_56 { pt3dadd( -7.38859, 38.7789, 20.1336, 0.22 ) }
    dend_56 { pt3dadd( -7.97621, 39.12, 20.5234, 0.22 ) }
    dend_56 { pt3dadd( -8.43142, 39.5116, 20.9185, 0.15 ) }
    dend_56 { pt3dadd( -8.8064, 39.9117, 21.3324, 0.15 ) }
    dend_56 { pt3dadd( -9.06063, 40.2185, 21.6219, 0.15 ) }
    dend_56 { pt3dadd( -9.46879, 40.8473, 22.1733, 0.66 ) }
    dend_56 { pt3dadd( -9.78314, 41.422, 22.65, 0.22 ) }
    dend_56 { pt3dadd( -10.291, 42.3095, 23.4027, 0.22 ) }
    dend_56 { pt3dadd( -10.6926, 42.9998, 24.0021, 1.62 ) }
    dend_56 { pt3dadd( -11.1808, 43.8363, 24.7679, 3.1 ) }
    dend_56 { pt3dadd( -12.4955, 45.9323, 26.8045, 0.29 ) }
    dend_56 { pt3dadd( -13.047, 46.7243, 27.6281, 0.22 ) }
    dend_56 { pt3dadd( -13.3115, 47.0725, 27.9907, 0.22 ) }
    dend_56 { pt3dadd( -13.3836, 47.1667, 28.0838, 0.22 ) }
    dend_56 { pt3dadd( -13.6963, 47.5729, 28.4893, 0.22 ) }
    dend_56 { pt3dadd( -14.0405, 47.9906, 28.9541, 0.22 ) }
    dend_56 { pt3dadd( -14.5769, 48.4841, 29.5632, 0.22 ) }
    dend_56 { pt3dadd( -15.118, 49.0578, 30.2095, 0.88 ) }
    dend_56 { pt3dadd( -15.4084, 49.3919, 30.5462, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 88/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -5.8111, 38.158, 19.1275, 0.22 ) }
    dend_39 { pt3dadd( -3.79212, 38.8539, 19.6734, 0.22 ) }
    dend_39 { pt3dadd( -2.8569, 39.1762, 19.9263, 0.37 ) }
    dend_39 { pt3dadd( -2.04442, 39.4563, 20.146, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -1.96872, 58.6437, 5.88832, 0.15 ) }
    dend_35 { pt3dadd( -2.7251, 60.6357, 5.84474, 0.15 ) }
    dend_35 { pt3dadd( -3.12218, 61.688, 5.87197, 0.81 ) }
    dend_35 { pt3dadd( -3.4313, 62.4955, 5.86011, 1.18 ) }
    dend_35 { pt3dadd( -4.07949, 64.1688, 5.80479, 0.22 ) }
    dend_35 { pt3dadd( -4.41084, 65.0781, 5.76759, 0.81 ) }
    dend_35 { pt3dadd( -4.60664, 65.663, 5.75788, 0.81 ) }
    dend_35 { pt3dadd( -4.95128, 66.9432, 5.83837, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_35 { pt3dadd( -5.24633, 68.3136, 5.95373, 0.07 ) }
    dend_35 { pt3dadd( -5.36662, 69.0372, 6.01349, 0.96 ) }
    dend_35 { pt3dadd( -5.5177, 70.1666, 6.08906, 1.92 ) }
    dend_35 { pt3dadd( -5.73477, 71.6877, 6.20939, 0.22 ) }
    dend_35 { pt3dadd( -5.83484, 72.5003, 6.30262, 0.22 ) }
    dend_35 { pt3dadd( -5.91169, 73.2358, 6.41285, 0.22 ) }
    dend_35 { pt3dadd( -5.97864, 73.9271, 6.55169, 0.81 ) }
    dend_35 { pt3dadd( -6.07121, 74.756, 6.72194, 1.11 ) }
    dend_35 { pt3dadd( -6.33978, 76.5636, 7.07404, 0.15 ) }
    dend_35 { pt3dadd( -6.56382, 77.9002, 7.28773, 0.15 ) }
    dend_35 { pt3dadd( -6.66267, 78.4702, 7.36761, 0.74 ) }
    dend_35 { pt3dadd( -6.82819, 79.6476, 7.51954, 1.92 ) }
    dend_35 { pt3dadd( -6.8833, 80.1976, 7.58122, 2.88 ) }
    dend_35 { pt3dadd( -6.95864, 81.4004, 7.72515, 1.84 ) }
    dend_35 { pt3dadd( -7.00391, 83.2823, 7.97053, 0.22 ) }
    dend_35 { pt3dadd( -7.01694, 84.5065, 8.13486, 0.59 ) }
    dend_35 { pt3dadd( -7.00536, 85.3369, 8.24332, 0.59 ) }
    dend_35 { pt3dadd( -6.96489, 86.4055, 8.36149, 0.22 ) }
    dend_35 { pt3dadd( -6.89133, 87.5955, 8.46053, 0.22 ) }
    dend_35 { pt3dadd( -6.82665, 88.4712, 8.49312, 0.22 ) }
    dend_35 { pt3dadd( -6.81965, 89.382, 8.45803, 0.15 ) }
    dend_35 { pt3dadd( -6.91636, 90.5297, 8.31251, 0.15 ) }
    dend_35 { pt3dadd( -7.06495, 91.4405, 8.11342, 0.88 ) }
    dend_35 { pt3dadd( -7.30839, 92.6055, 7.76553, 1.77 ) }
    dend_35 { pt3dadd( -7.51188, 93.4728, 7.46619, 1.77 ) }
    dend_35 { pt3dadd( -8.00843, 95.1773, 6.85705, 0.15 ) }
    dend_35 { pt3dadd( -8.28683, 96.0074, 6.56731, 0.37 ) }
    dend_35 { pt3dadd( -8.55165, 96.7643, 6.33108, 0.96 ) }
    dend_35 { pt3dadd( -8.8662, 97.6815, 6.11894, 1.77 ) }
    dend_35 { pt3dadd( -9.34336, 99.1762, 5.89747, 0.29 ) }
    dend_35 { pt3dadd( -9.76246, 100.717, 5.77588, 0.15 ) }
    dend_35 { pt3dadd( -9.84335, 101.125, 5.76761, 0.52 ) }
    dend_35 { pt3dadd( -10.0198, 102.02, 5.77469, 1.18 ) }
    dend_35 { pt3dadd( -10.3289, 103.504, 5.82621, 0.15 ) }
    dend_35 { pt3dadd( -10.5178, 104.407, 5.87369, 0.15 ) }
    dend_35 { pt3dadd( -10.6561, 105.216, 5.93868, 1.03 ) }
    dend_35 { pt3dadd( -10.8049, 106.771, 6.12577, 2.8 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.96872, 58.6437, 5.88832, 0.22 ) }
    dend_34 { pt3dadd( -1.42605, 59.9584, 6.27543, 0.22 ) }
    dend_34 { pt3dadd( -0.908466, 61.2186, 6.67446, 0.22 ) }
    dend_34 { pt3dadd( -0.508534, 62.1867, 6.97414, 0.96 ) }
    dend_34 { pt3dadd( -0.199159, 62.8953, 7.17821, 1.18 ) }
    dend_34 { pt3dadd( 0.385875, 64.1532, 7.49377, 0.15 ) }
    dend_34 { pt3dadd( 0.77576, 64.9102, 7.6612, 0.15 ) }
    dend_34 { pt3dadd( 1.06994, 65.4324, 7.73998, 0.15 ) }
    dend_34 { pt3dadd( 1.38807, 66.026, 7.78346, 0.15 ) }
    dend_34 { pt3dadd( 1.68598, 66.7073, 7.78707, 0.15 ) }
    dend_34 { pt3dadd( 1.96939, 67.5131, 7.74104, 1.33 ) }
    dend_34 { pt3dadd( 2.26312, 68.5575, 7.61054, 2.73 ) }
    dend_34 { pt3dadd( 2.46027, 69.5247, 7.47521, 3.1 ) }
    dend_34 { pt3dadd( 2.76103, 72.2998, 7.10288, 0.22 ) }
    dend_34 { pt3dadd( 2.80965, 73.5488, 6.94936, 0.15 ) }
    dend_34 { pt3dadd( 2.79639, 74.4088, 6.8555, 0.52 ) }
    dend_34 { pt3dadd( 2.75948, 75.2042, 6.77392, 0.74 ) }
    dend_34 { pt3dadd( 2.65004, 76.8366, 6.60989, 0.22 ) }
    dend_34 { pt3dadd( 2.59456, 77.7914, 6.52702, 1.18 ) }
    dend_34 { pt3dadd( 2.57226, 78.6559, 6.47333, 2.58 ) }
    dend_34 { pt3dadd( 2.61026, 80.7988, 6.41488, 0.22 ) }
    dend_34 { pt3dadd( 2.64655, 81.6919, 6.41064, 0.22 ) }
    dend_34 { pt3dadd( 2.68875, 82.6301, 6.42108, 0.81 ) }
    dend_34 { pt3dadd( 2.75675, 84.158, 6.45841, 2.51 ) }
    dend_34 { pt3dadd( 2.84479, 86.7838, 6.56441, 0.22 ) }
    dend_34 { pt3dadd( 2.84757, 87.9036, 6.63419, 0.29 ) }
    dend_34 { pt3dadd( 2.78926, 89.1403, 6.74533, 0.15 ) }
    dend_34 { pt3dadd( 2.68281, 90.3932, 6.87619, 0.15 ) }
    dend_34 { pt3dadd( 2.55501, 91.377, 6.99411, 1.03 ) }
    dend_34 { pt3dadd( 2.39156, 92.2202, 7.11137, 1.99 ) }
    dend_34 { pt3dadd( 2.12141, 93.143, 7.26634, 1.99 ) }
    dend_34 { pt3dadd( 1.36528, 95.1896, 7.64791, 0.15 ) }
    dend_34 { pt3dadd( 0.99429, 96.0268, 7.81841, 0.15 ) }
    dend_34 { pt3dadd( 0.629866, 96.7467, 7.96267, 0.15 ) }
    dend_34 { pt3dadd( 0.323442, 97.2784, 8.06992, 0.44 ) }
    dend_34 { pt3dadd( -0.583577, 98.6321, 8.36708, 0.15 ) }
    dend_34 { pt3dadd( -1.35749, 99.6279, 8.60983, 1.47 ) }
    dend_34 { pt3dadd( -2.06616, 100.393, 8.83416, 2.51 ) }
    dend_34 { pt3dadd( -3.26546, 101.564, 9.2289, 0.37 ) }
    dend_34 { pt3dadd( -3.9425, 102.176, 9.44874, 0.22 ) }
    dend_34 { pt3dadd( -4.55931, 102.675, 9.64392, 0.07 ) }
    dend_34 { pt3dadd( -5.14519, 103.086, 9.84405, 0.29 ) }
    dend_34 { pt3dadd( -6.23613, 103.752, 10.2602, 0.07 ) }
    dend_34 { pt3dadd( -7.15439, 104.283, 10.6376, 0.44 ) }
    dend_34 { pt3dadd( -8.42483, 104.972, 11.179, 0.07 ) }
    dend_34 { pt3dadd( -9.4779, 105.532, 11.6102, 0.15 ) }
    dend_34 { pt3dadd( -10.2054, 105.896, 11.851, 0.74 ) }
    dend_34 { pt3dadd( -11.1777, 106.355, 12.1568, 1.84 ) }
    dend_34 { pt3dadd( -12.7281, 107.019, 12.6136, 0.15 ) }
    dend_34 { pt3dadd( -13.5774, 107.358, 12.85, 0.59 ) }
    dend_34 { pt3dadd( -14.2583, 107.615, 13.0293, 0.29 ) }
    dend_34 { pt3dadd( -15.8019, 108.214, 13.3479, 1.03 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -19.7224, -24.9402, -24.4941, 1.47 ) }
    dend_31 { pt3dadd( -21.0819, -25.6306, -24.6318, 1.47 ) }
    dend_31 { pt3dadd( -22.4974, -26.4101, -25.0067, 0.52 ) }
    dend_31 { pt3dadd( -23.1636, -26.8336, -25.2792, 0.52 ) }
    dend_31 { pt3dadd( -23.8034, -27.2403, -25.5408, 1.11 ) }
    dend_31 { pt3dadd( -24.5115, -27.6905, -25.8303, 2.21 ) }
    dend_31 { pt3dadd( -25.163, -28.1046, -26.0967, 1.11 ) }
    dend_31 { pt3dadd( -26.2471, -28.9181, -26.7788, 0.44 ) }
    dend_31 { pt3dadd( -26.8545, -29.5044, -27.3315, 1.47 ) }
    dend_31 { pt3dadd( -34.3414, -34.4968, -28.4899, 1.47 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -19.7224, -24.9402, -24.4941, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( -19.5937, -26.1345, -25.1007, 0.22 ) }
    dend_28 { pt3dadd( -19.5612, -26.5298, -25.3064, 0.22 ) }
    dend_28 { pt3dadd( -19.5235, -27.0083, -25.5495, 0.96 ) }
    dend_28 { pt3dadd( -19.4657, -27.6969, -25.9174, 0.22 ) }
    dend_28 { pt3dadd( -19.4187, -28.163, -26.1883, 0.22 ) }
    dend_28 { pt3dadd( -19.3817, -28.5295, -26.4013, 0.81 ) }
    dend_28 { pt3dadd( -19.3485, -28.9063, -26.6337, 1.92 ) }
    dend_28 { pt3dadd( -19.3054, -29.3586, -26.9117, 0.81 ) }
    dend_28 { pt3dadd( -19.2443, -29.924, -27.2956, 0.15 ) }
    dend_28 { pt3dadd( -19.1891, -30.3415, -27.6178, 0.66 ) }
    dend_28 { pt3dadd( -18.5674, -34.8107, -31.2881, 0.66 ) }
    dend_28 { pt3dadd( -18.2983, -39.9692, -34.0553, 0.66 ) }
    dend_28 { pt3dadd( -18.2846, -44.8871, -37.2062, 0.66 ) }
    dend_28 { pt3dadd( -18.8051, -50.1978, -39.6295, 0.66 ) }
    dend_28 { pt3dadd( -19.8491, -55.4475, -41.9874, 0.66 ) }
    dend_28 { pt3dadd( -19.6939, -61.0118, -43.8991, 0.66 ) }
    dend_28 { pt3dadd( -18.7852, -66.7358, -45.0089, 0.66 ) }
    dend_28 { pt3dadd( -18.0875, -72.5923, -45.2031, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.562, -98.3203, 17.0668, 0.37 ) }
    dend_20 { pt3dadd( -5.24202, -100.137, 18.0146, 0.37 ) }
    dend_20 { pt3dadd( -4.58884, -101.343, 18.5969, 0.22 ) }
    dend_20 { pt3dadd( -4.30359, -102.059, 18.93, 0.22 ) }
    dend_20 { pt3dadd( -4.03853, -102.947, 19.3338, 0.22 ) }
    dend_20 { pt3dadd( -3.84452, -103.762, 19.6847, 0.29 ) }
    dend_20 { pt3dadd( -3.66795, -104.795, 20.0756, 0.29 ) }
    dend_20 { pt3dadd( -3.68351, -105.683, 20.3387, 0.22 ) }
    dend_20 { pt3dadd( -3.75985, -106.543, 20.5647, 0.81 ) }
    dend_20 { pt3dadd( -3.84931, -107.365, 20.777, 1.77 ) }
    dend_20 { pt3dadd( -3.93569, -108.203, 20.9856, 2.43 ) }
    dend_20 { pt3dadd( -4.03627, -109.873, 21.3612, 0.96 ) }
    dend_20 { pt3dadd( -4.10319, -112.215, 21.8715, 0.22 ) }
    dend_20 { pt3dadd( -4.14165, -113.131, 22.0632, 1.18 ) }
    dend_20 { pt3dadd( -4.22312, -114.169, 22.2694, 1.7 ) }
    dend_20 { pt3dadd( -4.27436, -114.611, 22.3546, 1.7 ) }
    dend_20 { pt3dadd( -4.50592, -116.045, 22.657, 0.74 ) }
    dend_20 { pt3dadd( -4.77437, -117.435, 22.9646, 0.29 ) }
    dend_20 { pt3dadd( -5.04657, -118.753, 23.2407, 0.29 ) }
    dend_20 { pt3dadd( -5.23155, -119.748, 23.4642, 0.29 ) }
    dend_20 { pt3dadd( -5.4041, -120.562, 23.647, 0.66 ) }
    dend_20 { pt3dadd( -5.61643, -121.485, 23.8689, 1.47 ) }
    dend_20 { pt3dadd( -5.81653, -122.308, 24.0889, 2.73 ) }
    dend_20 { pt3dadd( -5.94845, -123.068, 24.303, 2.88 ) }
    dend_20 { pt3dadd( -5.99219, -125.017, 24.925, 1.84 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 43/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.562, -98.3203, 17.0668, 0.22 ) }
    dend_15 { pt3dadd( -8.92336, -99.5507, 16.9362, 0.22 ) }
    dend_15 { pt3dadd( -10.1568, -100.222, 16.8217, 0.22 ) }
    dend_15 { pt3dadd( -10.7044, -100.576, 16.7523, 0.22 ) }
    dend_15 { pt3dadd( -11.1167, -100.878, 16.6923, 0.22 ) }
    dend_15 { pt3dadd( -11.7604, -101.376, 16.612, 0.29 ) }
    dend_15 { pt3dadd( -12.2506, -101.758, 16.5537, 0.96 ) }
    dend_15 { pt3dadd( -13.2662, -102.586, 16.3601, 1.84 ) }
    dend_15 { pt3dadd( -14.6938, -103.783, 15.9992, 0.22 ) }
    dend_15 { pt3dadd( -15.5397, -104.478, 15.7665, 0.22 ) }
    dend_15 { pt3dadd( -16.4793, -105.166, 15.4928, 0.96 ) }
    dend_15 { pt3dadd( -17.6361, -105.856, 15.1607, 0.22 ) }
    dend_15 { pt3dadd( -18.7876, -106.299, 14.819, 0.22 ) }
    dend_15 { pt3dadd( -19.2426, -106.385, 14.6805, 0.22 ) }
    dend_15 { pt3dadd( -20.2236, -106.446, 14.3923, 0.22 ) }
    dend_15 { pt3dadd( -21.4148, -106.497, 14.0594, 0.29 ) }
    dend_15 { pt3dadd( -22.2454, -106.567, 13.8403, 1.25 ) }
    dend_15 { pt3dadd( -23.7308, -106.785, 13.5102, 2.88 ) }
    dend_15 { pt3dadd( -24.3579, -106.902, 13.3914, 2.73 ) }
    dend_15 { pt3dadd( -26.8845, -107.564, 12.9098, 0.29 ) }
    dend_15 { pt3dadd( -27.8674, -107.921, 12.721, 0.66 ) }
    dend_15 { pt3dadd( -29.1713, -108.481, 12.4629, 0.29 ) }
    dend_15 { pt3dadd( -29.9349, -108.826, 12.2881, 0.22 ) }
    dend_15 { pt3dadd( -30.9432, -109.267, 12.0425, 0.22 ) }
    dend_15 { pt3dadd( -31.98, -109.67, 11.7575, 0.22 ) }
    dend_15 { pt3dadd( -33.5809, -110.183, 11.2592, 0.22 ) }
    dend_15 { pt3dadd( -34.2891, -110.333, 11.0033, 0.37 ) }
    dend_15 { pt3dadd( -35.5037, -110.523, 10.5319, 0.37 ) }
    dend_15 { pt3dadd( -36.6157, -110.649, 10.0691, 0.66 ) }
    dend_15 { pt3dadd( -37.3489, -110.702, 9.74757, 1.62 ) }
    dend_15 { pt3dadd( -38.2029, -110.653, 9.34491, 2.51 ) }
    dend_15 { pt3dadd( -39.673, -110.36, 8.59282, 2.73 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.99089, -76.6257, 13.7581, 3.24 ) }
    dend_13 { pt3dadd( 9.11948, -77.5622, 13.75, 3.24 ) }
    dend_13 { pt3dadd( 9.24921, -78.3694, 13.7392, 3.24 ) }
    dend_13 { pt3dadd( 9.54657, -80.0162, 13.7115, 0.22 ) }
    dend_13 { pt3dadd( 9.75363, -81.0663, 13.6906, 0.29 ) }
    dend_13 { pt3dadd( 9.87114, -81.6263, 13.6779, 0.22 ) }
    dend_13 { pt3dadd( 10.0225, -82.3063, 13.6608, 0.22 ) }
    dend_13 { pt3dadd( 10.1294, -82.7299, 13.6406, 0.22 ) }
    dend_13 { pt3dadd( 10.2173, -83.0491, 13.6256, 0.22 ) }
    dend_13 { pt3dadd( 10.3613, -83.5607, 13.6021, 0.74 ) }
    dend_13 { pt3dadd( 10.4475, -83.9139, 13.5863, 0.74 ) }
    dend_13 { pt3dadd( 10.5362, -84.5214, 13.5749, 0.22 ) }
    dend_13 { pt3dadd( 10.5715, -85.0581, 13.5827, 0.22 ) }
    dend_13 { pt3dadd( 10.616, -85.8038, 13.5913, 0.22 ) }
    dend_13 { pt3dadd( 10.652, -86.291, 13.5724, 0.22 ) }
    dend_13 { pt3dadd( 10.7188, -86.9701, 13.5215, 0.22 ) }
    dend_13 { pt3dadd( 10.8219, -87.6718, 13.4489, 1.33 ) }
    dend_13 { pt3dadd( 10.9928, -88.5769, 13.3279, 3.02 ) }
    dend_13 { pt3dadd( 11.2831, -89.7338, 13.1407, 0.88 ) }
    dend_13 { pt3dadd( 11.6069, -90.838, 12.9627, 0.22 ) }
    dend_13 { pt3dadd( 11.7822, -91.3968, 12.8775, 0.22 ) }
    dend_13 { pt3dadd( 12.027, -92.1533, 12.7731, 0.22 ) }
    dend_13 { pt3dadd( 12.1705, -92.6157, 12.7239, 1.18 ) }
    dend_13 { pt3dadd( 12.4341, -93.5378, 12.6874, 2.06 ) }
    dend_13 { pt3dadd( 12.7545, -94.8398, 12.762, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 12.8635, -95.459, 12.8585, 0.52 ) }
    dend_13 { pt3dadd( 12.9283, -95.9921, 12.9697, 0.52 ) }
    dend_13 { pt3dadd( 13.027, -97.0037, 13.2217, 0.22 ) }
    dend_13 { pt3dadd( 13.0676, -97.4473, 13.3469, 0.22 ) }
    dend_13 { pt3dadd( 13.1506, -98.4419, 13.656, 1.99 ) }
    dend_13 { pt3dadd( 13.3207, -100.137, 14.1914, 0.29 ) }
    dend_13 { pt3dadd( 13.3719, -100.687, 14.363, 0.22 ) }
    dend_13 { pt3dadd( 13.4549, -101.615, 14.643, 0.22 ) }
    dend_13 { pt3dadd( 13.5014, -102.086, 14.7712, 1.03 ) }
    dend_13 { pt3dadd( 13.5575, -102.64, 14.9075, 2.14 ) }
    dend_13 { pt3dadd( 13.6164, -103.163, 15.0256, 2.06 ) }
    dend_13 { pt3dadd( 13.7683, -104.462, 15.3038, 0.22 ) }
    dend_13 { pt3dadd( 13.8174, -105.038, 15.4206, 0.66 ) }
    dend_13 { pt3dadd( 13.887, -106.239, 15.6505, 0.22 ) }
    dend_13 { pt3dadd( 13.9233, -107.014, 15.7855, 0.22 ) }
    dend_13 { pt3dadd( 13.9494, -107.521, 15.8546, 0.66 ) }
    dend_13 { pt3dadd( 13.9951, -108.281, 15.9355, 0.22 ) }
    dend_13 { pt3dadd( 14.0458, -108.964, 15.9899, 1.55 ) }
    dend_13 { pt3dadd( 14.086, -109.527, 16.0258, 2.8 ) }
    dend_13 { pt3dadd( 14.1279, -110.094, 16.0491, 2.58 ) }
    dend_13 { pt3dadd( 14.3133, -111.999, 16.0604, 0.22 ) }
    dend_13 { pt3dadd( 14.3563, -112.591, 16.0656, 0.22 ) }
    dend_13 { pt3dadd( 14.383, -113.101, 16.0636, 0.59 ) }
    dend_13 { pt3dadd( 14.4037, -113.559, 16.0652, 0.29 ) }
    dend_13 { pt3dadd( 14.4231, -114.153, 16.0701, 1.03 ) }
    dend_13 { pt3dadd( 14.4406, -114.863, 16.0699, 2.06 ) }
    dend_13 { pt3dadd( 14.4372, -116.295, 16.0474, 0.15 ) }
    dend_13 { pt3dadd( 14.4382, -116.655, 16.0328, 0.15 ) }
    dend_13 { pt3dadd( 14.4552, -117.45, 15.9803, 0.29 ) }
    dend_13 { pt3dadd( 14.4726, -117.99, 15.9396, 0.15 ) }
    dend_13 { pt3dadd( 14.4967, -118.605, 15.8884, 0.15 ) }
    dend_13 { pt3dadd( 14.5279, -119.127, 15.8525, 0.96 ) }
    dend_13 { pt3dadd( 14.5748, -119.671, 15.8135, 2.06 ) }
    dend_13 { pt3dadd( 14.6287, -120.417, 15.7872, 2.14 ) }
    dend_13 { pt3dadd( 14.7142, -122.184, 15.7775, 0.22 ) }
    dend_13 { pt3dadd( 14.7219, -122.756, 15.808, 0.22 ) }
    dend_13 { pt3dadd( 14.7156, -123.549, 15.8911, 0.22 ) }
    dend_13 { pt3dadd( 14.711, -123.783, 15.9267, 0.59 ) }
    dend_13 { pt3dadd( 14.6882, -124.366, 16.0367, 1.4 ) }
    dend_13 { pt3dadd( 14.6616, -124.977, 16.1668, 0.66 ) }
    dend_13 { pt3dadd( 14.6184, -126.232, 16.46, 0.22 ) }
    dend_13 { pt3dadd( 14.5768, -126.845, 16.5884, 0.22 ) }
    dend_13 { pt3dadd( 14.5356, -127.306, 16.6705, 0.22 ) }
    dend_13 { pt3dadd( 14.4953, -127.808, 16.7521, 1.03 ) }
    dend_13 { pt3dadd( 14.4562, -128.564, 16.8552, 2.21 ) }
    dend_13 { pt3dadd( 14.425, -130.17, 17.0537, 0.15 ) }
    dend_13 { pt3dadd( 14.4425, -131.135, 17.1468, 0.15 ) }
    dend_13 { pt3dadd( 14.4548, -131.53, 17.1823, 0.81 ) }
    dend_13 { pt3dadd( 14.4745, -132.093, 17.2293, 1.33 ) }
    dend_13 { pt3dadd( 14.5028, -132.937, 17.2994, 0.22 ) }
    dend_13 { pt3dadd( 14.5289, -133.784, 17.3649, 0.22 ) }
    dend_13 { pt3dadd( 14.5481, -134.309, 17.4, 0.88 ) }
    dend_13 { pt3dadd( 14.5668, -134.773, 17.4387, 0.66 ) }
    dend_13 { pt3dadd( 14.6079, -135.82, 17.553, 0.15 ) }
    dend_13 { pt3dadd( 14.6443, -136.59, 17.651, 0.15 ) }
    dend_13 { pt3dadd( 14.6652, -136.879, 17.6918, 0.74 ) }
    dend_13 { pt3dadd( 14.7254, -137.461, 17.7741, 1.18 ) }
    dend_13 { pt3dadd( 14.885, -138.634, 17.9502, 0.22 ) }
    dend_13 { pt3dadd( 15.0128, -139.311, 18.0644, 0.22 ) }
    dend_13 { pt3dadd( 15.1232, -139.733, 18.1325, 0.22 ) }
    dend_13 { pt3dadd( 15.2562, -140.161, 18.2016, 0.22 ) }
    dend_13 { pt3dadd( 15.4335, -140.693, 18.2821, 0.22 ) }
    dend_13 { pt3dadd( 15.6218, -141.283, 18.3626, 1.33 ) }
    dend_13 { pt3dadd( 15.8195, -141.965, 18.4459, 2.21 ) }
    dend_13 { pt3dadd( 16.1271, -143.182, 18.5749, 0.15 ) }
    dend_13 { pt3dadd( 16.266, -143.68, 18.6332, 0.29 ) }
    dend_13 { pt3dadd( 16.3419, -143.922, 18.6632, 0.29 ) }
    dend_13 { pt3dadd( 16.6133, -144.687, 18.7683, 0.15 ) }
    dend_13 { pt3dadd( 16.692, -144.912, 18.7997, 0.15 ) }
    dend_13 { pt3dadd( 16.8484, -145.411, 18.8619, 0.66 ) }
    dend_13 { pt3dadd( 17.1041, -146.295, 18.9892, 0.15 ) }
    dend_13 { pt3dadd( 17.1971, -146.644, 19.034, 0.15 ) }
    dend_13 { pt3dadd( 17.2718, -146.899, 19.074, 0.15 ) }
    dend_13 { pt3dadd( 17.462, -147.487, 19.1894, 0.15 ) }
    dend_13 { pt3dadd( 17.5775, -147.862, 19.2687, 0.37 ) }
    dend_13 { pt3dadd( 17.7285, -148.404, 19.3813, 1.03 ) }
    dend_13 { pt3dadd( 17.8803, -148.983, 19.5015, 0.22 ) }
    dend_13 { pt3dadd( 18.109, -149.798, 19.6695, 0.22 ) }
    dend_13 { pt3dadd( 18.3211, -150.493, 19.8077, 1.4 ) }
    dend_13 { pt3dadd( 18.5179, -151.1, 19.918, 2.14 ) }
    dend_13 { pt3dadd( 18.7255, -151.757, 20.0316, 1.4 ) }
    dend_13 { pt3dadd( 19.0789, -153.005, 20.2245, 0.22 ) }
    dend_13 { pt3dadd( 19.1742, -153.396, 20.2774, 0.81 ) }
    dend_13 { pt3dadd( 19.2705, -153.892, 20.3333, 1.55 ) }
    dend_13 { pt3dadd( 19.4261, -154.854, 20.4336, 0.29 ) }
    dend_13 { pt3dadd( 19.5397, -155.7, 20.524, 0.22 ) }
    dend_13 { pt3dadd( 19.6012, -156.275, 20.5813, 0.22 ) }
    dend_13 { pt3dadd( 19.6355, -156.86, 20.6245, 0.29 ) }
    dend_13 { pt3dadd( 19.6545, -157.527, 20.6775, 0.15 ) }
    dend_13 { pt3dadd( 19.6614, -158.036, 20.7177, 0.96 ) }
    dend_13 { pt3dadd( 19.6639, -158.387, 20.7418, 1.47 ) }
    dend_13 { pt3dadd( 19.6753, -158.912, 20.7635, 1.47 ) }
    dend_13 { pt3dadd( 19.7301, -159.834, 20.7925, 0.22 ) }
    dend_13 { pt3dadd( 19.8215, -160.738, 20.8194, 0.22 ) }
    dend_13 { pt3dadd( 19.894, -161.245, 20.8276, 0.88 ) }
    dend_13 { pt3dadd( 20.0187, -161.922, 20.8346, 0.88 ) }
    dend_13 { pt3dadd( 20.2494, -162.979, 20.8478, 0.15 ) }
    dend_13 { pt3dadd( 20.4435, -163.695, 20.8584, 0.15 ) }
    dend_13 { pt3dadd( 20.6069, -164.211, 20.8646, 0.81 ) }
    dend_13 { pt3dadd( 20.8875, -165.037, 20.8973, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( 21.0702, -165.57, 20.9385, 0.81 ) }
    dend_13 { pt3dadd( 21.2855, -166.211, 21.0079, 0.52 ) }
    dend_13 { pt3dadd( 21.4596, -166.789, 21.0852, 1.62 ) }
    dend_13 { pt3dadd( 21.6036, -167.39, 21.1772, 1.62 ) }
    dend_13 { pt3dadd( 21.826, -168.616, 21.3567, 0.22 ) }
    dend_13 { pt3dadd( 21.9209, -169.3, 21.4487, 0.22 ) }
    dend_13 { pt3dadd( 21.9635, -169.708, 21.4892, 0.74 ) }
    dend_13 { pt3dadd( 21.9994, -170.164, 21.5218, 0.29 ) }
    dend_13 { pt3dadd( 22.0339, -170.825, 21.5614, 1.47 ) }
    dend_13 { pt3dadd( 22.06, -171.283, 21.5836, 1.47 ) }
    dend_13 { pt3dadd( 22.1143, -172.361, 21.608, 0.15 ) }
    dend_13 { pt3dadd( 22.1622, -172.887, 21.6424, 0.52 ) }
    dend_13 { pt3dadd( 22.2572, -173.622, 21.7112, 0.15 ) }
    dend_13 { pt3dadd( 22.3458, -174.176, 21.7737, 0.15 ) }
    dend_13 { pt3dadd( 22.3985, -174.484, 21.8123, 0.66 ) }
    dend_13 { pt3dadd( 22.4983, -175.048, 21.8894, 1.47 ) }
    dend_13 { pt3dadd( 22.7271, -176.3, 22.0663, 0.22 ) }
    dend_13 { pt3dadd( 22.857, -176.984, 22.1508, 0.15 ) }
    dend_13 { pt3dadd( 22.9444, -177.43, 22.1866, 0.15 ) }
    dend_13 { pt3dadd( 23.0537, -177.998, 22.2225, 0.74 ) }
    dend_13 { pt3dadd( 23.2026, -178.853, 22.265, 0.15 ) }
    dend_13 { pt3dadd( 23.2993, -179.419, 22.2858, 0.15 ) }
    dend_13 { pt3dadd( 23.4288, -180.334, 22.3058, 0.22 ) }
    dend_13 { pt3dadd( 23.5069, -180.94, 22.3283, 1.18 ) }
    dend_13 { pt3dadd( 23.5932, -181.649, 22.3644, 1.7 ) }
    dend_13 { pt3dadd( 23.7797, -183.127, 22.4619, 0.22 ) }
    dend_13 { pt3dadd( 23.8549, -183.701, 22.5048, 0.22 ) }
    dend_13 { pt3dadd( 23.9338, -184.24, 22.5499, 0.15 ) }
    dend_13 { pt3dadd( 24.0552, -185.013, 22.6274, 0.15 ) }
    dend_13 { pt3dadd( 24.1126, -185.457, 22.6831, 0.44 ) }
    dend_13 { pt3dadd( 24.2422, -186.682, 22.8458, 0.15 ) }
    dend_13 { pt3dadd( 24.2702, -187.073, 22.9099, 0.88 ) }
    dend_13 { pt3dadd( 24.2908, -187.627, 23.0075, 1.7 ) }
    dend_13 { pt3dadd( 24.3013, -188.244, 23.1166, 1.4 ) }
    dend_13 { pt3dadd( 24.2931, -189.676, 23.3532, 0.15 ) }
    dend_13 { pt3dadd( 24.2886, -189.965, 23.3974, 0.22 ) }
    dend_13 { pt3dadd( 24.2597, -190.978, 23.5399, 0.07 ) }
    dend_13 { pt3dadd( 24.2485, -191.494, 23.6032, 1.33 ) }
    dend_13 { pt3dadd( 24.2412, -191.948, 23.6516, 1.33 ) }
    dend_13 { pt3dadd( 24.2559, -192.779, 23.7282, 0.07 ) }
    dend_13 { pt3dadd( 24.3022, -193.389, 23.7638, 0.15 ) }
    dend_13 { pt3dadd( 24.3484, -193.795, 23.7797, 0.15 ) }
    dend_13 { pt3dadd( 24.4102, -194.205, 23.7871, 0.22 ) }
    dend_13 { pt3dadd( 24.5349, -194.985, 23.7988, 0.07 ) }
    dend_13 { pt3dadd( 24.5775, -195.27, 23.8027, 0.66 ) }
    dend_13 { pt3dadd( 24.6373, -195.73, 23.8062, 0.29 ) }
    dend_13 { pt3dadd( 24.7653, -196.812, 23.8041, 0.15 ) }
    dend_13 { pt3dadd( 24.8033, -197.092, 23.8042, 0.22 ) }
    dend_13 { pt3dadd( 24.8821, -197.664, 23.8101, 0.07 ) }
    dend_13 { pt3dadd( 24.9522, -198.175, 23.8245, 0.74 ) }
    dend_13 { pt3dadd( 25.0494, -198.977, 23.8671, 0.15 ) }
    dend_13 { pt3dadd( 25.0898, -199.37, 23.8966, 0.59 ) }
    dend_13 { pt3dadd( 25.1718, -200.431, 23.9853, 0.15 ) }
    dend_13 { pt3dadd( 25.2032, -200.881, 24.0337, 0.29 ) }
    dend_13 { pt3dadd( 25.2352, -201.445, 24.0931, 0.15 ) }
    dend_13 { pt3dadd( 25.253, -201.898, 24.1399, 0.88 ) }
    dend_13 { pt3dadd( 25.2598, -202.293, 24.1779, 1.92 ) }
    dend_13 { pt3dadd( 25.2581, -204.005, 24.3271, 0.22 ) }
    dend_13 { pt3dadd( 25.2482, -204.884, 24.3908, 1.7 ) }
    dend_13 { pt3dadd( 25.2272, -206.815, 24.508, 0.15 ) }
    dend_13 { pt3dadd( 25.2106, -207.633, 24.5467, 0.15 ) }
    dend_13 { pt3dadd( 25.1943, -208.143, 24.5676, 0.81 ) }
    dend_13 { pt3dadd( 25.1457, -209.293, 24.6034, 0.22 ) }
    dend_13 { pt3dadd( 25.1175, -209.946, 24.6136, 1.25 ) }
    dend_13 { pt3dadd( 25.1048, -210.301, 24.6148, 1.84 ) }
    dend_13 { pt3dadd( 25.068, -211.912, 24.6369, 0.15 ) }
    dend_13 { pt3dadd( 25.0672, -212.328, 24.6433, 0.29 ) }
    dend_13 { pt3dadd( 25.0917, -213.07, 24.6733, 0.07 ) }
    dend_13 { pt3dadd( 25.1151, -213.53, 24.7007, 0.15 ) }
    dend_13 { pt3dadd( 25.1827, -214.621, 24.787, 0.15 ) }
    dend_13 { pt3dadd( 25.2059, -214.913, 24.8144, 0.52 ) }
    dend_13 { pt3dadd( 25.2475, -215.331, 24.8592, 1.4 ) }
    dend_13 { pt3dadd( 25.3269, -216.531, 25.0177, 0.07 ) }
    dend_13 { pt3dadd( 25.3542, -217.388, 25.1459, 0.15 ) }
    dend_13 { pt3dadd( 25.3472, -217.783, 25.2173, 0.74 ) }
    dend_13 { pt3dadd( 25.3277, -218.181, 25.2964, 1.92 ) }
    dend_13 { pt3dadd( 25.292, -218.789, 25.4365, 1.92 ) }
    dend_13 { pt3dadd( 25.1959, -220.375, 25.8465, 0.15 ) }
    dend_13 { pt3dadd( 25.1683, -220.932, 26.0193, 0.59 ) }
    dend_13 { pt3dadd( 25.1651, -221.846, 26.3589, 0.07 ) }
    dend_13 { pt3dadd( 25.1724, -222.058, 26.4481, 0.15 ) }
    dend_13 { pt3dadd( 25.2265, -222.768, 26.7685, 0.15 ) }
    dend_13 { pt3dadd( 25.2838, -223.263, 26.999, 0.37 ) }
    dend_13 { pt3dadd( 25.3871, -223.881, 27.2748, 0.96 ) }
    dend_13 { pt3dadd( 25.5132, -224.443, 27.4893, 1.47 ) }
    dend_13 { pt3dadd( 25.7822, -225.419, 27.8173, 0.15 ) }
    dend_13 { pt3dadd( 25.9441, -225.969, 27.9814, 0.15 ) }
    dend_13 { pt3dadd( 26.071, -226.392, 28.0853, 1.11 ) }
    dend_13 { pt3dadd( 26.2006, -226.828, 28.1731, 1.7 ) }
    dend_13 { pt3dadd( 26.5626, -228.137, 28.3639, 0.15 ) }
    dend_13 { pt3dadd( 26.6841, -228.6, 28.4171, 0.81 ) }
    dend_13 { pt3dadd( 26.8289, -229.146, 28.4643, 1.03 ) }
    dend_13 { pt3dadd( 27.214, -230.452, 28.5674, 0.15 ) }
    dend_13 { pt3dadd( 27.3748, -230.942, 28.6081, 0.22 ) }
    dend_13 { pt3dadd( 27.5885, -231.592, 28.656, 0.07 ) }
    dend_13 { pt3dadd( 27.7205, -232.026, 28.6814, 0.88 ) }
    dend_13 { pt3dadd( 27.8693, -232.54, 28.7126, 1.62 ) }
    dend_13 { pt3dadd( 28.2324, -233.749, 28.8042, 0.15 ) }
    dend_13 { pt3dadd( 28.433, -234.343, 28.8512, 1.33 ) }
    dend_13 { pt3dadd( 28.8355, -235.463, 28.9493, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 28.9515, -235.806, 28.9851, 0.22 ) }
    dend_13 { pt3dadd( 29.2754, -236.898, 29.123, 0.07 ) }
    dend_13 { pt3dadd( 29.389, -237.325, 29.192, 0.96 ) }
    dend_13 { pt3dadd( 29.6527, -238.462, 29.4034, 0.15 ) }
    dend_13 { pt3dadd( 29.7742, -238.973, 29.5099, 1.11 ) }
    dend_13 { pt3dadd( 30.1738, -240.535, 29.8623, 0.15 ) }
    dend_13 { pt3dadd( 30.3571, -241.217, 30.0056, 1.11 ) }
    dend_13 { pt3dadd( 30.5239, -241.835, 30.1205, 1.47 ) }
    dend_13 { pt3dadd( 30.8917, -243.306, 30.3642, 0.15 ) }
    dend_13 { pt3dadd( 31.0204, -243.828, 30.4347, 0.88 ) }
    dend_13 { pt3dadd( 31.1837, -244.462, 30.489, 1.33 ) }
    dend_13 { pt3dadd( 31.5446, -245.876, 30.5098, 0.15 ) }
    dend_13 { pt3dadd( 31.7128, -246.623, 30.4686, 0.96 ) }
    dend_13 { pt3dadd( 31.9635, -248.043, 30.2976, 0.15 ) }
    dend_13 { pt3dadd( 32.0196, -248.621, 30.2007, 0.15 ) }
    dend_13 { pt3dadd( 32.0346, -249.238, 30.0945, 0.74 ) }
    dend_13 { pt3dadd( 31.9657, -250.177, 29.9373, 0.44 ) }
    dend_13 { pt3dadd( 31.86, -250.816, 29.8342, 1.11 ) }
    dend_13 { pt3dadd( 31.7468, -251.3, 29.7634, 1.7 ) }
    dend_13 { pt3dadd( 31.2658, -253.033, 29.5506, 0.15 ) }
    dend_13 { pt3dadd( 30.9905, -253.924, 29.4682, 1.33 ) }
    dend_13 { pt3dadd( 30.7109, -254.776, 29.4198, 0.15 ) }
    dend_13 { pt3dadd( 30.5987, -255.111, 29.4152, 0.74 ) }
    dend_13 { pt3dadd( 30.4642, -255.52, 29.4303, 1.4 ) }
    dend_13 { pt3dadd( 30.2929, -256.058, 29.4679, 0.74 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.99089, -76.6257, 13.7581, 1.03 ) }
    dend_12 { pt3dadd( 10.2863, -77.675, 17.9634, 1.03 ) }
    dend_12 { pt3dadd( 10.5847, -77.8502, 18.834, 1.03 ) }
    dend_12 { pt3dadd( 10.8859, -77.9843, 19.6278, 1.03 ) }
    dend_12 { pt3dadd( 11.1924, -78.1165, 20.3891, 1.03 ) }
    dend_12 { pt3dadd( 11.4432, -78.2184, 20.9453, 1.03 ) }
    dend_12 { pt3dadd( 11.8139, -78.3673, 21.6824, 1.03 ) }
    dend_12 { pt3dadd( 12.183, -78.457, 22.0599, 0.88 ) }
    dend_12 { pt3dadd( 12.5027, -78.5552, 22.3985, 0.88 ) }
    dend_12 { pt3dadd( 12.8831, -78.7737, 22.9114, 0.44 ) }
    dend_12 { pt3dadd( 13.1876, -79.1658, 23.476, 0.59 ) }
    dend_12 { pt3dadd( 13.3681, -79.4952, 23.8933, 0.22 ) }
    dend_12 { pt3dadd( 13.7943, -80.1446, 24.9001, 0.22 ) }
    dend_12 { pt3dadd( 14.1489, -80.5711, 25.7245, 0.44 ) }
    dend_12 { pt3dadd( 14.3758, -80.7544, 26.2233, 1.4 ) }
    dend_12 { pt3dadd( 14.8273, -80.9564, 27.125, 2.14 ) }
    dend_12 { pt3dadd( 15.5783, -81.0748, 28.393, 0.59 ) }
    dend_12 { pt3dadd( 16.8925, -81.0321, 30.1955, 0.59 ) }
    dend_12 { pt3dadd( 17.4133, -80.9538, 30.7308, 0.44 ) }
    dend_12 { pt3dadd( 18.409, -80.7308, 31.5425, 0.81 ) }
    dend_12 { pt3dadd( 19.2723, -80.4808, 32.1454, 1.99 ) }
    dend_12 { pt3dadd( 20.6108, -80.0278, 32.8963, 0.22 ) }
    dend_12 { pt3dadd( 21.2632, -79.8077, 33.179, 1.03 ) }
    dend_12 { pt3dadd( 22.2229, -79.5147, 33.4982, 0.22 ) }
    dend_12 { pt3dadd( 23.304, -79.2331, 33.8379, 0.96 ) }
    dend_12 { pt3dadd( 24.0106, -79.0678, 34.0516, 1.92 ) }
    dend_12 { pt3dadd( 25.6413, -78.729, 34.6774, 0.22 ) }
    dend_12 { pt3dadd( 26.3083, -78.5817, 34.9995, 0.22 ) }
    dend_12 { pt3dadd( 26.6939, -78.4906, 35.2071, 0.22 ) }
    dend_12 { pt3dadd( 27.3626, -78.3222, 35.5872, 1.11 ) }
    dend_12 { pt3dadd( 28.2151, -78.0951, 36.071, 2.58 ) }
    dend_12 { pt3dadd( 29.8732, -77.5986, 37.0189, 1.11 ) }
    dend_12 { pt3dadd( 30.6608, -77.3315, 37.4794, 0.44 ) }
    dend_12 { pt3dadd( 31.3662, -77.105, 37.9028, 0.44 ) }
    dend_12 { pt3dadd( 31.7953, -76.9873, 38.1792, 0.22 ) }
    dend_12 { pt3dadd( 32.1734, -76.9155, 38.4278, 0.22 ) }
    dend_12 { pt3dadd( 32.5447, -76.8818, 38.6745, 0.22 ) }
    dend_12 { pt3dadd( 33.1638, -76.8899, 39.1132, 1.4 ) }
    dend_12 { pt3dadd( 34.2284, -77.0255, 40.047, 0.37 ) }
    dend_12 { pt3dadd( 34.996, -77.2101, 40.9636, 0.29 ) }
    dend_12 { pt3dadd( 35.5189, -77.4372, 41.7655, 0.29 ) }
    dend_12 { pt3dadd( 35.6086, -77.5002, 41.9327, 0.29 ) }
    dend_12 { pt3dadd( 35.8499, -77.8194, 42.5471, 0.29 ) }
    dend_12 { pt3dadd( 36.0184, -78.2011, 43.1437, 0.29 ) }
    dend_12 { pt3dadd( 36.2247, -78.883, 44.0411, 0.59 ) }
    dend_12 { pt3dadd( 36.3399, -79.4318, 44.6684, 1.84 ) }
    dend_12 { pt3dadd( 36.4171, -79.9488, 45.22, 2.06 ) }
    dend_12 { pt3dadd( 36.5569, -81.1433, 46.4128, 0.52 ) }
    dend_12 { pt3dadd( 36.6034, -81.8628, 47.0576, 0.22 ) }
    dend_12 { pt3dadd( 36.6095, -82.5271, 47.6049, 0.22 ) }
    dend_12 { pt3dadd( 36.5723, -82.9614, 47.9372, 0.22 ) }
    dend_12 { pt3dadd( 36.4957, -83.2439, 48.1768, 0.52 ) }
    dend_12 { pt3dadd( 36.3117, -83.5915, 48.5307, 0.81 ) }
    dend_12 { pt3dadd( 35.6996, -84.241, 49.4347, 0.22 ) }
    dend_12 { pt3dadd( 35.2362, -84.5598, 50.0719, 1.47 ) }
    dend_12 { pt3dadd( 34.9218, -84.7096, 50.5063, 1.92 ) }
    dend_12 { pt3dadd( 34.2266, -84.934, 51.5092, 0.44 ) }
    dend_12 { pt3dadd( 33.901, -84.9871, 51.9962, 0.22 ) }
    dend_12 { pt3dadd( 33.5316, -84.9546, 52.5702, 0.81 ) }
    dend_12 { pt3dadd( 32.9543, -84.7663, 53.5097, 0.22 ) }
    dend_12 { pt3dadd( 32.6617, -84.6444, 53.9978, 0.22 ) }
    dend_12 { pt3dadd( 32.5148, -84.5848, 54.2574, 0.22 ) }
    dend_12 { pt3dadd( 32.2441, -84.5076, 54.7552, 0.59 ) }
    dend_12 { pt3dadd( 31.691, -84.4271, 55.8204, 0.37 ) }
    dend_12 { pt3dadd( 31.3533, -84.4183, 56.515, 0.37 ) }
    dend_12 { pt3dadd( 31.1101, -84.4213, 57.1315, 0.37 ) }
    dend_12 { pt3dadd( 30.9714, -84.4348, 57.6446, 0.37 ) }
    dend_12 { pt3dadd( 30.8833, -84.5206, 58.3204, 0.37 ) }
    dend_12 { pt3dadd( 30.8911, -84.6725, 58.8283, 0.37 ) }
    dend_12 { pt3dadd( 30.932, -84.8599, 59.2715, 0.37 ) }
    dend_12 { pt3dadd( 30.9866, -85.0679, 59.8508, 0.37 ) }
    dend_12 { pt3dadd( 30.9032, -85.1507, 60.4831, 0.37 ) }
    dend_12 { pt3dadd( 30.5794, -85.1984, 61.0825, 0.37 ) }
    dend_12 { pt3dadd( 30.0998, -85.219, 61.627, 0.37 ) }
    dend_12 { pt3dadd( 29.5944, -85.1842, 62.0565, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( 29.3113, -85.1412, 62.2448, 0.37 ) }
    dend_12 { pt3dadd( 28.1483, -84.8296, 62.921, 0.29 ) }
    dend_12 { pt3dadd( 26.9775, -84.3083, 63.5475, 0.22 ) }
    dend_12 { pt3dadd( 26.6083, -84.1065, 63.7359, 0.22 ) }
    dend_12 { pt3dadd( 25.8695, -83.6627, 64.1386, 0.15 ) }
    dend_12 { pt3dadd( 25.3586, -83.3574, 64.4532, 0.59 ) }
    dend_12 { pt3dadd( 24.8801, -83.0763, 64.7677, 0.29 ) }
    dend_12 { pt3dadd( 24.4543, -82.8506, 65.0791, 0.88 ) }
    dend_12 { pt3dadd( 23.7691, -82.5391, 65.6444, 0.96 ) }
    dend_12 { pt3dadd( 22.7773, -82.2162, 66.4445, 0.22 ) }
    dend_12 { pt3dadd( 22.1796, -82.0924, 66.912, 1.33 ) }
    dend_12 { pt3dadd( 21.7801, -82.0438, 67.2126, 1.4 ) }
    dend_12 { pt3dadd( 20.8035, -82.0139, 67.895, 0.15 ) }
    dend_12 { pt3dadd( 20.5428, -82.0358, 68.0834, 0.15 ) }
    dend_12 { pt3dadd( 20.1957, -82.0932, 68.3479, 0.15 ) }
    dend_12 { pt3dadd( 19.9392, -82.1642, 68.5447, 0.15 ) }
    dend_12 { pt3dadd( 19.7706, -82.2132, 68.6803, 0.81 ) }
    dend_12 { pt3dadd( 19.5134, -82.2524, 68.9015, 0.81 ) }
    dend_12 { pt3dadd( 18.6557, -82.2666, 69.6894, 0.22 ) }
    dend_12 { pt3dadd( 18.1754, -82.2047, 70.125, 0.22 ) }
    dend_12 { pt3dadd( 17.712, -82.1035, 70.5345, 1.11 ) }
    dend_12 { pt3dadd( 17.262, -81.9626, 70.9177, 1.62 ) }
    dend_12 { pt3dadd( 16.2561, -81.5447, 71.7173, 0.22 ) }
    dend_12 { pt3dadd( 15.6678, -81.2228, 72.1427, 1.11 ) }
    dend_12 { pt3dadd( 14.8777, -80.7012, 72.6319, 0.22 ) }
    dend_12 { pt3dadd( 14.3232, -80.3225, 72.9344, 0.22 ) }
    dend_12 { pt3dadd( 14.0485, -80.1273, 73.0697, 1.03 ) }
    dend_12 { pt3dadd( 13.5133, -79.7408, 73.2991, 1.03 ) }
    dend_12 { pt3dadd( 12.7818, -79.2038, 73.5619, 0.22 ) }
    dend_12 { pt3dadd( 12.0532, -78.6368, 73.7897, 0.52 ) }
    dend_12 { pt3dadd( 11.2572, -77.9644, 74.0287, 0.15 ) }
    dend_12 { pt3dadd( 10.9706, -77.6928, 74.1107, 0.15 ) }
    dend_12 { pt3dadd( 10.7658, -77.4715, 74.1842, 0.52 ) }
    dend_12 { pt3dadd( 10.483, -77.1285, 74.3013, 1.18 ) }
    dend_12 { pt3dadd( 9.6823, -76.0402, 74.6728, 0.22 ) }
    dend_12 { pt3dadd( 9.32094, -75.4334, 74.8288, 1.03 ) }
    dend_12 { pt3dadd( 9.12113, -75.025, 74.901, 1.99 ) }
    dend_12 { pt3dadd( 8.42368, -73.3622, 75.0975, 0.29 ) }
    dend_12 { pt3dadd( 8.2586, -72.8932, 75.1137, 0.96 ) }
    dend_12 { pt3dadd( 8.05133, -72.1712, 75.0774, 1.7 ) }
    dend_12 { pt3dadd( 7.75818, -70.6679, 74.8586, 0.22 ) }
    dend_12 { pt3dadd( 7.66555, -69.9486, 74.6848, 0.22 ) }
    dend_12 { pt3dadd( 7.62883, -69.3523, 74.4802, 0.96 ) }
    dend_12 { pt3dadd( 7.66101, -68.3266, 74.0193, 0.07 ) }
    dend_12 { pt3dadd( 7.71669, -67.7066, 73.7085, 0.74 ) }
    dend_12 { pt3dadd( 7.85318, -66.8879, 73.2525, 0.22 ) }
    dend_12 { pt3dadd( 8.06913, -66.0814, 72.7891, 0.22 ) }
    dend_12 { pt3dadd( 8.40965, -65.3868, 72.3866, 0.66 ) }
    dend_12 { pt3dadd( 9.0311, -64.5321, 71.8918, 0.07 ) }
    dend_12 { pt3dadd( 9.49996, -64.0637, 71.6262, 0.22 ) }
    dend_12 { pt3dadd( 10.1826, -63.5224, 71.3456, 0.07 ) }
    dend_12 { pt3dadd( 10.8893, -63.0424, 71.1078, 1.11 ) }
    dend_12 { pt3dadd( 12.8473, -61.9034, 70.6223, 0.07 ) }
    dend_12 { pt3dadd( 13.308, -61.6723, 70.5434, 0.07 ) }
    dend_12 { pt3dadd( 13.644, -61.5287, 70.5101, 0.29 ) }
    dend_12 { pt3dadd( 14.558, -61.1679, 70.4807, 0.07 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 56/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 43.1689, 20.5065, 48.5665, 0.22 ) }
    dend_7 { pt3dadd( 43.6026, 21.2309, 49.3544, 0.22 ) }
    dend_7 { pt3dadd( 44.0123, 21.7929, 50.0892, 0.22 ) }
    dend_7 { pt3dadd( 44.3663, 22.2031, 50.7041, 0.52 ) }
    dend_7 { pt3dadd( 44.8716, 22.7218, 51.5259, 1.7 ) }
    dend_7 { pt3dadd( 45.337, 23.0878, 52.2034, 2.06 ) }
    dend_7 { pt3dadd( 46.3179, 23.729, 53.597, 0.52 ) }
    dend_7 { pt3dadd( 47.0467, 24.1443, 54.6158, 0.66 ) }
    dend_7 { pt3dadd( 47.709, 24.4852, 55.5007, 2.14 ) }
    dend_7 { pt3dadd( 48.1028, 24.6844, 56.0124, 2.65 ) }
    dend_7 { pt3dadd( 49.5025, 25.4167, 57.7791, 0.29 ) }
    dend_7 { pt3dadd( 50.1205, 25.7571, 58.617, 0.22 ) }
    dend_7 { pt3dadd( 50.7898, 26.1302, 59.5806, 0.22 ) }
    dend_7 { pt3dadd( 51.2953, 26.4037, 60.371, 1.25 ) }
    dend_7 { pt3dadd( 52.0253, 26.7873, 61.5955, 0.15 ) }
    dend_7 { pt3dadd( 52.7047, 27.1392, 62.7672, 0.81 ) }
    dend_7 { pt3dadd( 53.5456, 27.555, 64.085, 1.4 ) }
    dend_7 { pt3dadd( 54.157, 27.8042, 64.9025, 2.21 ) }
    dend_7 { pt3dadd( 55.7292, 28.2815, 66.717, 0.22 ) }
    dend_7 { pt3dadd( 56.4921, 28.4488, 67.4813, 0.88 ) }
    dend_7 { pt3dadd( 57.2046, 28.5606, 68.0953, 1.18 ) }
    dend_7 { pt3dadd( 58.7236, 28.7683, 69.1613, 0.22 ) }
    dend_7 { pt3dadd( 59.4333, 28.8735, 69.5468, 0.59 ) }
    dend_7 { pt3dadd( 60.1031, 28.9799, 69.8342, 1.11 ) }
    dend_7 { pt3dadd( 61.2034, 29.143, 70.2171, 0.15 ) }
    dend_7 { pt3dadd( 61.6407, 29.2095, 70.38, 0.15 ) }
    dend_7 { pt3dadd( 62.043, 29.3004, 70.5656, 0.15 ) }
    dend_7 { pt3dadd( 62.4095, 29.4204, 70.7895, 0.37 ) }
    dend_7 { pt3dadd( 62.9294, 29.6689, 71.1851, 0.66 ) }
    dend_7 { pt3dadd( 64.1199, 30.3483, 72.2111, 0.15 ) }
    dend_7 { pt3dadd( 64.948, 30.8703, 73.0241, 1.62 ) }
    dend_7 { pt3dadd( 65.7782, 31.3933, 73.9166, 0.29 ) }
    dend_7 { pt3dadd( 66.6361, 31.9235, 74.926, 1.18 ) }
    dend_7 { pt3dadd( 67.7889, 32.5895, 76.4077, 0.22 ) }
    dend_7 { pt3dadd( 68.5444, 32.9787, 77.4486, 0.52 ) }
    dend_7 { pt3dadd( 69.4593, 33.3657, 78.7535, 1.25 ) }
    dend_7 { pt3dadd( 70.1615, 33.6063, 79.8018, 2.14 ) }
    dend_7 { pt3dadd( 71.3093, 33.859, 81.6089, 0.59 ) }
    dend_7 { pt3dadd( 72.0166, 33.9406, 82.7746, 0.59 ) }
    dend_7 { pt3dadd( 72.6971, 33.9459, 83.9053, 0.22 ) }
    dend_7 { pt3dadd( 73.4818, 33.9386, 85.218, 1.55 ) }
    dend_7 { pt3dadd( 73.8758, 33.9502, 85.8673, 1.55 ) }
    dend_7 { pt3dadd( 74.9445, 34.1218, 87.6047, 0.22 ) }
    dend_7 { pt3dadd( 75.2785, 34.2307, 88.1467, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_7 { pt3dadd( 75.7663, 34.4574, 88.8331, 0.22 ) }
    dend_7 { pt3dadd( 76.2524, 34.7477, 89.4934, 0.96 ) }
    dend_7 { pt3dadd( 76.8001, 35.1615, 90.1934, 1.25 ) }
    dend_7 { pt3dadd( 77.8098, 36.0611, 91.3464, 0.22 ) }
    dend_7 { pt3dadd( 78.6414, 36.9306, 92.1436, 0.22 ) }
    dend_7 { pt3dadd( 79.5633, 37.9034, 92.9988, 2.73 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 43.1689, 20.5065, 48.5665, 0.22 ) }
    dend_4 { pt3dadd( 43.9037, 18.807, 49.0827, 0.22 ) }
    dend_4 { pt3dadd( 44.2579, 18.0688, 49.2574, 0.37 ) }
    dend_4 { pt3dadd( 44.8563, 16.9609, 49.5063, 0.66 ) }
    dend_4 { pt3dadd( 45.5429, 15.7254, 49.8688, 0.66 ) }
    dend_4 { pt3dadd( 46.1618, 14.6224, 50.2777, 0.15 ) }
    dend_4 { pt3dadd( 46.6801, 13.6887, 50.6873, 1.47 ) }
    dend_4 { pt3dadd( 47.3538, 12.4391, 51.218, 3.24 ) }
    dend_4 { pt3dadd( 47.793, 11.6631, 51.5838, 3.24 ) }
    dend_4 { pt3dadd( 49.2129, 9.35652, 52.8395, 0.29 ) }
    dend_4 { pt3dadd( 49.7732, 8.46619, 53.3979, 0.44 ) }
    dend_4 { pt3dadd( 50.4937, 7.29081, 54.1945, 2.14 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 18/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -15.4084, 49.3919, 30.5462, 0.22 ) }
    dend_60 { pt3dadd( -16.741, 50.2089, 30.8051, 0.22 ) }
    dend_60 { pt3dadd( -17.3733, 50.5997, 30.9231, 1.55 ) }
    dend_60 { pt3dadd( -18.2621, 51.1063, 31.0118, 3.1 ) }
    dend_60 { pt3dadd( -19.9062, 51.9848, 31.0711, 0.15 ) }
    dend_60 { pt3dadd( -20.488, 52.2755, 31.0599, 0.66 ) }
    dend_60 { pt3dadd( -21.4546, 52.7249, 31.0045, 0.15 ) }
    dend_60 { pt3dadd( -22.2058, 53.0079, 30.9022, 1.18 ) }
    dend_60 { pt3dadd( -23.6068, 53.4269, 30.6341, 0.07 ) }
    dend_60 { pt3dadd( -24.3919, 53.6044, 30.4522, 0.07 ) }
    dend_60 { pt3dadd( -25.0359, 53.7198, 30.2831, 0.07 ) }
    dend_60 { pt3dadd( -25.7424, 53.8176, 30.109, 0.96 ) }
    dend_60 { pt3dadd( -27.112, 53.9663, 29.8067, 0.15 ) }
    dend_60 { pt3dadd( -28.1769, 54.088, 29.6163, 0.15 ) }
    dend_60 { pt3dadd( -28.8133, 54.1734, 29.5575, 1.03 ) }
    dend_60 { pt3dadd( -29.4713, 54.2607, 29.5314, 1.99 ) }
    dend_60 { pt3dadd( -30.7332, 54.4226, 29.6006, 0.15 ) }
    dend_60 { pt3dadd( -31.2719, 54.4818, 29.6695, 0.15 ) }
    dend_60 { pt3dadd( -31.6513, 54.5113, 29.7447, 0.15 ) }
    dend_60 { pt3dadd( -32.2564, 54.5403, 29.8991, 0.88 ) }
    dend_60 { pt3dadd( -32.9963, 54.5337, 30.0929, 1.62 ) }
    dend_60 { pt3dadd( -34.5467, 54.4482, 30.521, 0.15 ) }
    dend_60 { pt3dadd( -35.1437, 54.3884, 30.6908, 0.15 ) }
    dend_60 { pt3dadd( -35.8121, 54.298, 30.8733, 0.44 ) }
    dend_60 { pt3dadd( -36.5576, 54.1557, 31.0606, 0.15 ) }
    dend_60 { pt3dadd( -37.574, 53.9189, 31.3437, 0.22 ) }
    dend_60 { pt3dadd( -38.5294, 53.6524, 31.6407, 0.15 ) }
    dend_60 { pt3dadd( -38.7525, 53.575, 31.7203, 0.74 ) }
    dend_60 { pt3dadd( -39.5437, 53.2719, 32.043, 1.25 ) }
    dend_60 { pt3dadd( -40.792, 52.7584, 32.6074, 0.22 ) }
    dend_60 { pt3dadd( -41.87, 52.2734, 33.1482, 1.11 ) }
    dend_60 { pt3dadd( -42.3494, 52.0291, 33.41, 1.84 ) }
    dend_60 { pt3dadd( -43.3427, 51.3644, 34.0354, 0.15 ) }
    dend_60 { pt3dadd( -43.659, 51.0958, 34.2697, 0.15 ) }
    dend_60 { pt3dadd( -43.9767, 50.7914, 34.5308, 0.15 ) }
    dend_60 { pt3dadd( -44.192, 50.5597, 34.723, 0.81 ) }
    dend_60 { pt3dadd( -44.7578, 49.8488, 35.2138, 2.14 ) }
    dend_60 { pt3dadd( -45.6116, 48.5277, 36.0974, 0.22 ) }
    dend_60 { pt3dadd( -45.9446, 47.8069, 36.5363, 1.47 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 57/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -15.4084, 49.3919, 30.5462, 0.22 ) }
    dend_57 { pt3dadd( -16.4797, 51.2654, 32.0719, 0.22 ) }
    dend_57 { pt3dadd( -17.2399, 52.6369, 33.0889, 0.22 ) }
    dend_57 { pt3dadd( -18.3595, 54.6357, 34.4843, 0.37 ) }
    dend_57 { pt3dadd( -18.8402, 55.4309, 35.0343, 0.37 ) }
    dend_57 { pt3dadd( -19.4545, 56.3993, 35.7018, 0.96 ) }
    dend_57 { pt3dadd( -20.0396, 57.3304, 36.3338, 0.15 ) }
    dend_57 { pt3dadd( -20.3094, 57.7869, 36.6263, 0.15 ) }
    dend_57 { pt3dadd( -20.482, 58.0522, 36.7857, 0.22 ) }
    dend_57 { pt3dadd( -21.1221, 58.9459, 37.2474, 0.15 ) }
    dend_57 { pt3dadd( -21.6721, 59.644, 37.6388, 1.03 ) }
    dend_57 { pt3dadd( -22.406, 60.5733, 38.2359, 1.99 ) }
    dend_57 { pt3dadd( -23.4308, 62.0247, 39.3018, 0.22 ) }
    dend_57 { pt3dadd( -23.9543, 63.0003, 40.0135, 0.15 ) }
    dend_57 { pt3dadd( -24.1211, 63.4156, 40.3197, 0.15 ) }
    dend_57 { pt3dadd( -24.3584, 64.2605, 40.9406, 1.18 ) }
    dend_57 { pt3dadd( -24.6304, 65.5569, 41.8951, 0.15 ) }
    dend_57 { pt3dadd( -24.7648, 66.3278, 42.4735, 0.52 ) }
    dend_57 { pt3dadd( -24.9117, 67.3825, 43.2363, 0.22 ) }
    dend_57 { pt3dadd( -25.0805, 68.421, 43.9651, 1.33 ) }
    dend_57 { pt3dadd( -25.3598, 69.591, 44.782, 2.88 ) }
    dend_57 { pt3dadd( -26.0937, 71.7025, 46.238, 0.22 ) }
    dend_57 { pt3dadd( -26.4885, 72.4948, 46.7533, 0.22 ) }
    dend_57 { pt3dadd( -27.0272, 73.3694, 47.3104, 0.74 ) }
    dend_57 { pt3dadd( -27.7163, 74.3382, 47.9578, 0.15 ) }
    dend_57 { pt3dadd( -28.3031, 75.1137, 48.4923, 0.15 ) }
    dend_57 { pt3dadd( -28.8393, 75.7488, 48.9791, 0.15 ) }
    dend_57 { pt3dadd( -29.5104, 76.4034, 49.6556, 0.74 ) }
    dend_57 { pt3dadd( -30.1296, 76.9478, 50.4179, 0.74 ) }
    dend_57 { pt3dadd( -30.5886, 77.2212, 51.1096, 0.74 ) }
    dend_57 { pt3dadd( -31.0383, 77.3633, 51.8649, 0.74 ) }
    dend_57 { pt3dadd( -31.2238, 77.388, 52.152, 0.74 ) }
    dend_57 { pt3dadd( -32.0276, 77.4302, 53.3047, 0.74 ) }
    dend_57 { pt3dadd( -32.3019, 77.4275, 53.7055, 0.74 ) }
    dend_57 { pt3dadd( -33.0412, 77.4124, 54.7961, 0.74 ) }
    dend_57 { pt3dadd( -33.4682, 77.4367, 55.5252, 0.74 ) }
    dend_57 { pt3dadd( -34.1203, 77.5897, 56.9693, 0.96 ) }
    dend_57 { pt3dadd( -34.4678, 77.788, 58.0778, 0.96 ) }
    dend_57 { pt3dadd( -34.6267, 78.0017, 58.8936, 0.96 ) }
    dend_57 { pt3dadd( -34.7784, 78.3379, 60.0505, 0.96 ) }
    dend_57 { pt3dadd( -34.8963, 78.8184, 61.497, 0.66 ) }
    dend_57 { pt3dadd( -34.9786, 79.3436, 62.9807, 0.88 ) }
    dend_57 { pt3dadd( -35.118, 79.9547, 64.5477, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_57 { pt3dadd( -35.409, 80.7229, 66.2865, 0.37 ) }
    dend_57 { pt3dadd( -35.6036, 81.1258, 67.0446, 0.37 ) }
    dend_57 { pt3dadd( -35.9849, 81.9351, 68.2924, 1.4 ) }
    dend_57 { pt3dadd( -36.2046, 82.411, 68.9208, 1.62 ) }
    dend_57 { pt3dadd( -36.6986, 83.6482, 70.3398, 0.44 ) }
    dend_57 { pt3dadd( -36.9809, 84.5159, 71.2352, 0.44 ) }
    dend_57 { pt3dadd( -37.1735, 85.4417, 72.1285, 1.18 ) }
    dend_57 { pt3dadd( -37.2941, 86.7348, 73.3351, 0.22 ) }
    dend_57 { pt3dadd( -37.2696, 87.3887, 73.9462, 0.22 ) }
    dend_57 { pt3dadd( -37.1519, 88.1524, 74.6682, 1.25 ) }
    dend_57 { pt3dadd( -36.98, 88.9472, 75.4242, 1.92 ) }
    dend_57 { pt3dadd( -36.7004, 90.6382, 77.0804, 0.15 ) }
    dend_57 { pt3dadd( -36.6573, 91.3043, 77.7611, 0.88 ) }
    dend_57 { pt3dadd( -36.7042, 92.1455, 78.6238, 1.92 ) }
    dend_57 { pt3dadd( -37.0056, 93.8276, 80.3752, 0.22 ) }
    dend_57 { pt3dadd( -37.2798, 94.7217, 81.3662, 0.74 ) }
    dend_57 { pt3dadd( -37.7606, 95.9199, 82.7773, 1.7 ) }
    dend_57 { pt3dadd( -38.1622, 96.7796, 83.8848, 0.07 ) }
    dend_57 { pt3dadd( -38.3493, 97.2077, 84.4874, 0.96 ) }
    dend_57 { pt3dadd( -38.8017, 98.2796, 86.1275, 0.07 ) }
    dend_57 { pt3dadd( -39.0385, 98.9318, 87.2235, 0.07 ) }
    dend_57 { pt3dadd( -39.1459, 99.4057, 88.0899, 0.07 ) }
    dend_57 { pt3dadd( -39.2496, 100.082, 89.5315, 0.37 ) }
    dend_57 { pt3dadd( -39.3983, 100.626, 90.9666, 0.59 ) }
    dend_57 { pt3dadd( -39.526, 100.887, 91.7808, 0.59 ) }
    dend_57 { pt3dadd( -39.6933, 101.067, 92.4514, 0.59 ) }
    dend_57 { pt3dadd( -39.8409, 101.183, 92.835, 0.59 ) }
    dend_57 { pt3dadd( -40.5078, 101.724, 94.1658, 0.15 ) }
    dend_57 { pt3dadd( -40.9874, 102.221, 95.0236, 0.07 ) }
    dend_57 { pt3dadd( -41.2488, 102.629, 95.5836, 0.07 ) }
    dend_57 { pt3dadd( -41.4408, 103.021, 96.0494, 0.07 ) }
    dend_57 { pt3dadd( -41.7522, 103.703, 96.7562, 0.88 ) }
    dend_57 { pt3dadd( -42.2918, 104.812, 97.8642, 0.22 ) }
    dend_57 { pt3dadd( -42.832, 105.733, 98.8625, 0.22 ) }
    dend_57 { pt3dadd( -43.4413, 106.544, 99.8476, 1.62 ) }
    dend_57 { pt3dadd( -44.2073, 107.269, 100.879, 2.21 ) }
    dend_57 { pt3dadd( -45.6611, 108.244, 102.63, 0.37 ) }
    dend_57 { pt3dadd( -46.7054, 108.715, 103.83, 0.37 ) }
    dend_57 { pt3dadd( -48.3004, 109.09, 105.62, 1.33 ) }
    dend_57 { pt3dadd( -48.8041, 109.094, 106.215, 1.77 ) }
    dend_57 { pt3dadd( -49.8203, 108.853, 107.557, 0.29 ) }
    dend_57 { pt3dadd( -50.6409, 108.426, 108.759, 0.29 ) }
    dend_57 { pt3dadd( -51.3279, 107.954, 109.735, 0.59 ) }
    dend_57 { pt3dadd( -52.0662, 107.448, 110.711, 1.18 ) }
    dend_57 { pt3dadd( -53.3194, 106.665, 112.245, 0.37 ) }
    dend_57 { pt3dadd( -54.6886, 105.883, 113.81, 1.03 ) }
    dend_57 { pt3dadd( -55.8594, 105.293, 114.985, 1.4 ) }
    dend_57 { pt3dadd( -58.3965, 104.203, 117.105, 0.07 ) }
    dend_57 { pt3dadd( -59.6586, 103.758, 117.972, 0.59 ) }
    dend_57 { pt3dadd( -61.0091, 103.444, 118.678, 0.15 ) }
    dend_57 { pt3dadd( -61.9224, 103.33, 119.004, 0.15 ) }
    dend_57 { pt3dadd( -63.3101, 103.249, 119.339, 0.15 ) }
    dend_57 { pt3dadd( -63.9704, 103.251, 119.454, 1.03 ) }
    dend_57 { pt3dadd( -64.633, 103.27, 119.507, 1.4 ) }
    dend_57 { pt3dadd( -67.0149, 103.361, 119.607, 0.15 ) }
    dend_57 { pt3dadd( -67.8841, 103.405, 119.65, 0.15 ) }
    dend_57 { pt3dadd( -69.4487, 103.48, 119.815, 0.15 ) }
    dend_57 { pt3dadd( -70.2592, 103.5, 119.953, 1.11 ) }
    dend_57 { pt3dadd( -71.0403, 103.507, 120.131, 1.62 ) }
    dend_57 { pt3dadd( -72.9364, 103.51, 120.677, 0.29 ) }
    dend_57 { pt3dadd( -74.1149, 103.521, 121.079, 0.07 ) }
    dend_57 { pt3dadd( -75.2184, 103.605, 121.454, 0.07 ) }
    dend_57 { pt3dadd( -75.8974, 103.69, 121.683, 0.88 ) }
    dend_57 { pt3dadd( -77.4879, 103.936, 122.268, 0.07 ) }
    dend_57 { pt3dadd( -78.2601, 104.089, 122.591, 0.22 ) }
    dend_57 { pt3dadd( -79.5712, 104.446, 123.218, 0.07 ) }
    dend_57 { pt3dadd( -80.4816, 104.773, 123.635, 1.77 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.04442, 39.4563, 20.146, 0.52 ) }
    dend_51 { pt3dadd( 1.90469, 38.1411, 18.754, 0.52 ) }
    dend_51 { pt3dadd( 2.8354, 37.7423, 18.4811, 2.21 ) }
    dend_51 { pt3dadd( 4.4625, 36.9013, 18.0566, 2.88 ) }
    dend_51 { pt3dadd( 7.15355, 35.2793, 17.3994, 0.96 ) }
    dend_51 { pt3dadd( 9.06711, 33.9623, 16.8911, 0.15 ) }
    dend_51 { pt3dadd( 10.1266, 33.1525, 16.5422, 0.59 ) }
    dend_51 { pt3dadd( 11.1233, 32.1544, 16.2828, 0.15 ) }
    dend_51 { pt3dadd( 11.7687, 31.4099, 16.1003, 0.22 ) }
    dend_51 { pt3dadd( 12.2455, 30.7174, 15.9216, 0.22 ) }
    dend_51 { pt3dadd( 13.0612, 29.2318, 15.4257, 0.22 ) }
    dend_51 { pt3dadd( 14.0113, 27.1337, 14.6554, 1.11 ) }
    dend_51 { pt3dadd( 14.4447, 25.9812, 14.1971, 2.29 ) }
    dend_51 { pt3dadd( 14.6781, 25.2561, 13.8834, 2.58 ) }
    dend_51 { pt3dadd( 15.3232, 22.9468, 12.8479, 0.15 ) }
    dend_51 { pt3dadd( 15.6118, 21.5681, 12.261, 0.15 ) }
    dend_51 { pt3dadd( 15.7292, 20.3162, 11.7906, 0.29 ) }
    dend_51 { pt3dadd( 15.7287, 19.4056, 11.4786, 1.03 ) }
    dend_51 { pt3dadd( 15.6849, 18.4673, 11.1564, 1.99 ) }
    dend_51 { pt3dadd( 15.6373, 17.7869, 10.9427, 2.29 ) }
    dend_51 { pt3dadd( 15.4043, 15.5404, 10.4015, 0.44 ) }
    dend_51 { pt3dadd( 15.2547, 13.9381, 10.1089, 0.29 ) }
    dend_51 { pt3dadd( 15.181, 13.0703, 9.99446, 0.44 ) }
    dend_51 { pt3dadd( 15.1183, 12.2351, 9.91279, 0.52 ) }
    dend_51 { pt3dadd( 15.0041, 10.7252, 9.83973, 0.22 ) }
    dend_51 { pt3dadd( 14.9471, 9.71242, 9.84231, 0.22 ) }
    dend_51 { pt3dadd( 14.8926, 8.61568, 9.91056, 1.33 ) }
    dend_51 { pt3dadd( 14.8476, 7.54312, 10.017, 2.29 ) }
    dend_51 { pt3dadd( 14.7932, 6.6591, 10.1219, 2.29 ) }
    dend_51 { pt3dadd( 14.6265, 4.2011, 10.4622, 0.15 ) }
    dend_51 { pt3dadd( 14.5364, 3.16185, 10.6122, 0.15 ) }
    dend_51 { pt3dadd( 14.4613, 2.32454, 10.7254, 0.15 ) }
    dend_51 { pt3dadd( 14.3793, 1.5229, 10.8323, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_51 { pt3dadd( 14.2516, 0.263202, 10.9704, 1.33 ) }
    dend_51 { pt3dadd( 14.1676, -0.718496, 11.0033, 1.03 ) }
    dend_51 { pt3dadd( 14.0116, -2.80656, 10.8568, 0.22 ) }
    dend_51 { pt3dadd( 13.9487, -3.81007, 10.7099, 0.22 ) }
    dend_51 { pt3dadd( 13.9013, -4.78889, 10.4948, 0.66 ) }
    dend_51 { pt3dadd( 13.8548, -6.20152, 10.1275, 0.22 ) }
    dend_51 { pt3dadd( 13.7762, -8.0121, 9.56969, 0.29 ) }
    dend_51 { pt3dadd( 13.7092, -9.16069, 9.21336, 0.59 ) }
    dend_51 { pt3dadd( 13.6689, -10.0363, 8.91425, 1.33 ) }
    dend_51 { pt3dadd( 13.6012, -11.2898, 8.45763, 2.14 ) }
    dend_51 { pt3dadd( 13.4767, -13.4403, 7.64764, 0.22 ) }
    dend_51 { pt3dadd( 13.3612, -14.91, 7.12763, 0.22 ) }
    dend_51 { pt3dadd( 13.2086, -16.1529, 6.82143, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -2.04442, 39.4563, 20.146, 0.52 ) }
    dend_40 { pt3dadd( -2.15965, 39.8744, 20.8398, 0.52 ) }
    dend_40 { pt3dadd( -2.22507, 40.1158, 21.477, 0.52 ) }
    dend_40 { pt3dadd( -2.27084, 40.2949, 22.3, 0.52 ) }
    dend_40 { pt3dadd( -2.28336, 40.3318, 22.7371, 0.52 ) }
    dend_40 { pt3dadd( -2.28241, 40.3692, 23.7621, 0.81 ) }
    dend_40 { pt3dadd( -2.25817, 40.3985, 24.5192, 1.18 ) }
    dend_40 { pt3dadd( -2.15103, 40.3643, 25.489, 0.96 ) }
    dend_40 { pt3dadd( -2.04581, 40.3081, 26.1742, 1.25 ) }
    dend_40 { pt3dadd( -1.91127, 40.2125, 26.9067, 0.37 ) }
    dend_40 { pt3dadd( -1.80879, 40.1631, 27.3322, 0.37 ) }
    dend_40 { pt3dadd( -1.67044, 40.1055, 27.8406, 0.15 ) }
    dend_40 { pt3dadd( -1.47588, 40.062, 28.4451, 0.15 ) }
    dend_40 { pt3dadd( -1.22024, 40.1013, 29.0963, 1.18 ) }
    dend_40 { pt3dadd( -1.06221, 40.1716, 29.4825, 2.43 ) }
    dend_40 { pt3dadd( -0.769355, 40.3255, 30.1324, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 29/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -10.8049, 106.771, 6.12577, 0.59 ) }
    dend_37 { pt3dadd( -11.234, 108.721, 5.96823, 0.59 ) }
    dend_37 { pt3dadd( -11.7085, 110.437, 5.80163, 0.29 ) }
    dend_37 { pt3dadd( -12.2255, 112.049, 5.63797, 0.96 ) }
    dend_37 { pt3dadd( -12.6538, 113.275, 5.52552, 0.07 ) }
    dend_37 { pt3dadd( -13.1754, 114.591, 5.42345, 0.07 ) }
    dend_37 { pt3dadd( -13.4842, 115.337, 5.37278, 0.22 ) }
    dend_37 { pt3dadd( -13.9457, 116.239, 5.33555, 0.88 ) }
    dend_37 { pt3dadd( -14.2159, 116.774, 5.33272, 1.47 ) }
    dend_37 { pt3dadd( -14.9055, 118.294, 5.26787, 0.07 ) }
    dend_37 { pt3dadd( -15.2673, 119.308, 5.15671, 0.07 ) }
    dend_37 { pt3dadd( -15.4027, 119.843, 5.09525, 0.22 ) }
    dend_37 { pt3dadd( -15.4936, 120.249, 5.05524, 0.22 ) }
    dend_37 { pt3dadd( -15.7174, 121.371, 4.96978, 0.07 ) }
    dend_37 { pt3dadd( -15.8656, 122.387, 4.89135, 0.07 ) }
    dend_37 { pt3dadd( -15.9356, 123.054, 4.81755, 0.66 ) }
    dend_37 { pt3dadd( -16.0118, 123.805, 4.70145, 0.66 ) }
    dend_37 { pt3dadd( -16.158, 125.02, 4.47675, 0.15 ) }
    dend_37 { pt3dadd( -16.2729, 125.964, 4.28368, 1.03 ) }
    dend_37 { pt3dadd( -16.3899, 126.957, 4.06746, 1.77 ) }
    dend_37 { pt3dadd( -16.5553, 128.815, 3.66503, 0.15 ) }
    dend_37 { pt3dadd( -16.654, 130.065, 3.40855, 0.22 ) }
    dend_37 { pt3dadd( -16.6978, 130.575, 3.29895, 0.66 ) }
    dend_37 { pt3dadd( -16.7672, 131.171, 3.19296, 0.37 ) }
    dend_37 { pt3dadd( -16.9487, 132.199, 3.08538, 1.11 ) }
    dend_37 { pt3dadd( -17.1551, 133.005, 3.07085, 1.11 ) }
    dend_37 { pt3dadd( -17.7641, 134.891, 3.21905, 0.22 ) }
    dend_37 { pt3dadd( -18.205, 135.995, 3.36963, 1.03 ) }
    dend_37 { pt3dadd( -18.8026, 137.268, 3.57512, 1.62 ) }
    dend_37 { pt3dadd( -19.4274, 138.441, 3.79849, 1.99 ) }
    dend_37 { pt3dadd( -20.0634, 139.529, 3.94887, 0.52 ) }
    dend_37 { pt3dadd( -20.9637, 140.965, 4.03812, 0.22 ) }
    dend_37 { pt3dadd( -21.8867, 142.389, 3.97918, 0.22 ) }
    dend_37 { pt3dadd( -22.352, 143.103, 3.85994, 0.88 ) }
    dend_37 { pt3dadd( -23.0366, 144.16, 3.46749, 1.55 ) }
    dend_37 { pt3dadd( -24.4479, 146.242, 2.37742, 0.15 ) }
    dend_37 { pt3dadd( -25.0146, 147.095, 1.86938, 0.22 ) }
    dend_37 { pt3dadd( -25.4911, 147.857, 1.40072, 0.07 ) }
    dend_37 { pt3dadd( -26.2174, 149.117, 0.635632, 1.33 ) }
    dend_37 { pt3dadd( -27.2594, 151.019, -0.360954, 0.07 ) }
    dend_37 { pt3dadd( -27.5886, 151.635, -0.674401, 0.37 ) }
    dend_37 { pt3dadd( -28.2199, 152.893, -1.07905, 0.07 ) }
    dend_37 { pt3dadd( -28.8883, 154.326, -1.31133, 0.22 ) }
    dend_37 { pt3dadd( -29.4612, 155.668, -1.23144, 1.55 ) }
    dend_37 { pt3dadd( -29.8148, 156.777, -0.792295, 1.55 ) }
    dend_37 { pt3dadd( -32.7946, 168.636, -3.78355, 1.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 75/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -10.8049, 106.771, 6.12577, 0.22 ) }
    dend_36 { pt3dadd( -11.8358, 108.252, 5.87767, 0.22 ) }
    dend_36 { pt3dadd( -12.3044, 108.968, 5.75293, 0.07 ) }
    dend_36 { pt3dadd( -12.8112, 109.799, 5.60096, 1.11 ) }
    dend_36 { pt3dadd( -13.5457, 111.159, 5.35988, 0.07 ) }
    dend_36 { pt3dadd( -13.8486, 111.805, 5.25237, 0.07 ) }
    dend_36 { pt3dadd( -13.993, 112.15, 5.19909, 0.52 ) }
    dend_36 { pt3dadd( -14.1844, 112.824, 5.10454, 1.47 ) }
    dend_36 { pt3dadd( -14.3757, 113.684, 4.99819, 0.07 ) }
    dend_36 { pt3dadd( -14.5115, 114.451, 4.91134, 0.15 ) }
    dend_36 { pt3dadd( -14.6022, 115.199, 4.85151, 0.88 ) }
    dend_36 { pt3dadd( -14.6692, 115.925, 4.81763, 1.4 ) }
    dend_36 { pt3dadd( -14.7492, 117.066, 4.77296, 0.07 ) }
    dend_36 { pt3dadd( -14.7819, 117.609, 4.75975, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -18.0875, -72.5923, -45.2031, 0.15 ) }
    dend_30 { pt3dadd( -17.6689, -82.8297, -49.8454, 0.15 ) }
    dend_30 { pt3dadd( -16.7311, -93.4941, -53.4007, 0.15 ) }
    dend_30 { pt3dadd( -15.6334, -103.297, -58.7694, 0.15 ) }
    dend_30 { pt3dadd( -12.3501, -112.402, -64.4184, 0.15 ) }
    dend_30 { pt3dadd( -8.3347, -120.623, -70.7996, 0.15 ) }
    dend_30 { pt3dadd( -4.01422, -128.9, -76.914, 0.15 ) }
    dend_30 { pt3dadd( 0.735923, -136.37, -83.6283, 0.15 ) }
    dend_30 { pt3dadd( 5.92501, -144.549, -89.1683, 0.15 ) }
    dend_30 { pt3dadd( 11.9166, -151.52, -95.3645, 0.15 ) }
    dend_30 { pt3dadd( 18.3059, -158.214, -101.439, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_30 { pt3dadd( 25.0806, -166.073, -105.489, 0.15 ) }
    dend_30 { pt3dadd( 31.5311, -174.364, -109.272, 0.15 ) }
    dend_30 { pt3dadd( 37.6416, -182.426, -113.966, 0.15 ) }
    dend_30 { pt3dadd( 42.665, -190.669, -119.569, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 4/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -18.0875, -72.5923, -45.2031, 1.03 ) }
    dend_29 { pt3dadd( -17.8074, -79.4314, -48.2047, 0.15 ) }
    dend_29 { pt3dadd( -18.3306, -86.6425, -50.1457, 0.15 ) }
    dend_29 { pt3dadd( -19.589, -93.8126, -51.8245, 0.15 ) }
    dend_29 { pt3dadd( -21.9911, -100.828, -52.3301, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 9/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -5.99219, -125.017, 24.925, 0.22 ) }
    dend_24 { pt3dadd( -5.18783, -127.096, 25.6915, 0.22 ) }
    dend_24 { pt3dadd( -4.77565, -128.415, 26.165, 0.22 ) }
    dend_24 { pt3dadd( -4.56237, -129.405, 26.4778, 0.88 ) }
    dend_24 { pt3dadd( -4.34346, -130.861, 26.8901, 1.25 ) }
    dend_24 { pt3dadd( -4.09009, -133.105, 27.5046, 0.15 ) }
    dend_24 { pt3dadd( -3.94996, -134.809, 27.9375, 0.15 ) }
    dend_24 { pt3dadd( -3.93819, -136.197, 28.2595, 0.66 ) }
    dend_24 { pt3dadd( -4.00727, -138.271, 28.6754, 0.15 ) }
    dend_24 { pt3dadd( -4.05891, -139.215, 28.8485, 0.44 ) }
    dend_24 { pt3dadd( -4.09374, -139.903, 28.9574, 0.44 ) }
    dend_24 { pt3dadd( -4.114, -141.815, 29.2423, 0.15 ) }
    dend_24 { pt3dadd( -4.07825, -143.197, 29.4408, 0.15 ) }
    dend_24 { pt3dadd( -4.00451, -144.253, 29.6, 1.18 ) }
    dend_24 { pt3dadd( -3.87231, -145.302, 29.7715, 2.14 ) }
    dend_24 { pt3dadd( -3.64231, -146.864, 30.0194, 1.03 ) }
    dend_24 { pt3dadd( -3.41416, -148.373, 30.234, 0.15 ) }
    dend_24 { pt3dadd( -3.20871, -149.557, 30.4011, 0.15 ) }
    dend_24 { pt3dadd( -3.04697, -150.497, 30.5182, 0.37 ) }
    dend_24 { pt3dadd( -2.8473, -151.67, 30.6313, 0.22 ) }
    dend_24 { pt3dadd( -2.74851, -152.302, 30.6575, 0.66 ) }
    dend_24 { pt3dadd( -2.61947, -153.15, 30.655, 0.81 ) }
    dend_24 { pt3dadd( -2.3132, -154.951, 30.5906, 0.22 ) }
    dend_24 { pt3dadd( -2.15769, -155.824, 30.5512, 1.03 ) }
    dend_24 { pt3dadd( -1.90338, -157.396, 30.4474, 1.84 ) }
    dend_24 { pt3dadd( -1.57007, -159.679, 30.2682, 0.22 ) }
    dend_24 { pt3dadd( -1.46876, -160.425, 30.2151, 0.22 ) }
    dend_24 { pt3dadd( -1.35865, -161.295, 30.1703, 0.22 ) }
    dend_24 { pt3dadd( -1.25756, -162.147, 30.1503, 0.22 ) }
    dend_24 { pt3dadd( -1.06618, -163.391, 30.1855, 0.96 ) }
    dend_24 { pt3dadd( -0.565577, -165.974, 30.3982, 0.15 ) }
    dend_24 { pt3dadd( -0.348439, -166.882, 30.5214, 0.15 ) }
    dend_24 { pt3dadd( -0.11026, -167.843, 30.6796, 0.96 ) }
    dend_24 { pt3dadd( 0.158324, -168.95, 30.8849, 1.92 ) }
    dend_24 { pt3dadd( 0.7797, -171.42, 31.4003, 0.22 ) }
    dend_24 { pt3dadd( 1.00982, -172.288, 31.6047, 0.22 ) }
    dend_24 { pt3dadd( 1.23286, -173.055, 31.7919, 0.15 ) }
    dend_24 { pt3dadd( 1.6427, -174.43, 32.1227, 0.15 ) }
    dend_24 { pt3dadd( 1.86906, -175.244, 32.3119, 0.81 ) }
    dend_24 { pt3dadd( 2.0528, -176.075, 32.5152, 1.62 ) }
    dend_24 { pt3dadd( 2.3154, -177.738, 32.949, 0.15 ) }
    dend_24 { pt3dadd( 2.49645, -179.036, 33.291, 0.15 ) }
    dend_24 { pt3dadd( 2.61335, -179.755, 33.4875, 0.15 ) }
    dend_24 { pt3dadd( 2.82038, -180.883, 33.8048, 0.88 ) }
    dend_24 { pt3dadd( 3.10589, -182.571, 34.2614, 0.15 ) }
    dend_24 { pt3dadd( 3.24247, -183.436, 34.4816, 0.96 ) }
    dend_24 { pt3dadd( 3.46237, -185.016, 34.8516, 2.21 ) }
    dend_24 { pt3dadd( 3.84663, -187.98, 35.5016, 0.15 ) }
    dend_24 { pt3dadd( 4.01927, -189.22, 35.7546, 0.96 ) }
    dend_24 { pt3dadd( 4.41686, -191.728, 36.293, 0.22 ) }
    dend_24 { pt3dadd( 4.63799, -192.926, 36.5598, 0.88 ) }
    dend_24 { pt3dadd( 4.75908, -193.567, 36.7129, 0.88 ) }
    dend_24 { pt3dadd( 5.15227, -195.603, 37.2499, 0.07 ) }
    dend_24 { pt3dadd( 5.2435, -196.033, 37.3774, 0.29 ) }
    dend_24 { pt3dadd( 5.45599, -196.948, 37.687, 0.29 ) }
    dend_24 { pt3dadd( 5.67489, -197.839, 38.0131, 0.15 ) }
    dend_24 { pt3dadd( 5.81536, -198.556, 38.2792, 0.15 ) }
    dend_24 { pt3dadd( 6.0055, -199.734, 38.6952, 0.15 ) }
    dend_24 { pt3dadd( 6.11574, -200.56, 38.9516, 0.74 ) }
    dend_24 { pt3dadd( 6.24129, -201.733, 39.2972, 1.77 ) }
    dend_24 { pt3dadd( 6.29384, -202.475, 39.5113, 1.33 ) }
    dend_24 { pt3dadd( 6.37174, -204.316, 40.0623, 0.07 ) }
    dend_24 { pt3dadd( 6.37981, -204.926, 40.2458, 0.37 ) }
    dend_24 { pt3dadd( 6.35605, -206.821, 40.8363, 0.07 ) }
    dend_24 { pt3dadd( 6.34218, -207.831, 41.1561, 0.59 ) }
    dend_24 { pt3dadd( 6.35586, -209.468, 41.6805, 0.15 ) }
    dend_24 { pt3dadd( 6.3827, -210.312, 41.9449, 0.22 ) }
    dend_24 { pt3dadd( 6.44643, -211.601, 42.3367, 1.33 ) }
    dend_24 { pt3dadd( 6.53789, -213.491, 42.8971, 0.07 ) }
    dend_24 { pt3dadd( 6.55994, -214.224, 43.0992, 0.88 ) }
    dend_24 { pt3dadd( 6.67436, -216.342, 43.6656, 0.15 ) }
    dend_24 { pt3dadd( 6.75314, -217.312, 43.9218, 0.15 ) }
    dend_24 { pt3dadd( 6.8361, -218.151, 44.148, 0.15 ) }
    dend_24 { pt3dadd( 6.93931, -219.077, 44.4154, 0.74 ) }
    dend_24 { pt3dadd( 7.0666, -220.4, 44.8023, 2.14 ) }
    dend_24 { pt3dadd( 7.22317, -222.795, 45.5001, 0.15 ) }
    dend_24 { pt3dadd( 7.22578, -223.549, 45.6911, 0.44 ) }
    dend_24 { pt3dadd( 7.13667, -225.479, 46.116, 0.07 ) }
    dend_24 { pt3dadd( 7.05291, -226.27, 46.264, 0.15 ) }
    dend_24 { pt3dadd( 6.89789, -227.178, 46.4064, 0.07 ) }
    dend_24 { pt3dadd( 6.63438, -228.278, 46.5488, 1.11 ) }
    dend_24 { pt3dadd( 5.85109, -230.849, 46.7908, 0.15 ) }
    dend_24 { pt3dadd( 5.49001, -231.941, 46.8801, 1.03 ) }
    dend_24 { pt3dadd( 4.80627, -233.905, 47.0033, 0.15 ) }
    dend_24 { pt3dadd( 4.53449, -234.791, 47.0473, 0.44 ) }
    dend_24 { pt3dadd( 4.16407, -236.396, 47.132, 0.15 ) }
    dend_24 { pt3dadd( 3.97168, -237.656, 47.2125, 1.62 ) }
    dend_24 { pt3dadd( 3.93531, -238.309, 47.2617, 1.77 ) }
    dend_24 { pt3dadd( 3.97092, -239.293, 47.3333, 1.03 ) }
    dend_24 { pt3dadd( 4.25158, -241.779, 47.5025, 0.15 ) }
    dend_24 { pt3dadd( 4.6347, -244.136, 47.6635, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_24 { pt3dadd( 4.79449, -244.913, 47.7254, 0.88 ) }
    dend_24 { pt3dadd( 5.03192, -245.953, 47.8481, 1.18 ) }
    dend_24 { pt3dadd( 5.71333, -248.648, 48.2486, 0.07 ) }
    dend_24 { pt3dadd( 5.86079, -249.188, 48.3421, 0.15 ) }
    dend_24 { pt3dadd( 6.33006, -250.881, 48.6807, 0.07 ) }
    dend_24 { pt3dadd( 6.841, -252.723, 49.081, 0.15 ) }
    dend_24 { pt3dadd( 7.25143, -254.31, 49.4302, 1.33 ) }
    dend_24 { pt3dadd( 7.87973, -256.904, 50.0059, 0.15 ) }
    dend_24 { pt3dadd( 8.11032, -257.977, 50.2507, 0.22 ) }
    dend_24 { pt3dadd( 8.41152, -259.72, 50.5912, 0.07 ) }
    dend_24 { pt3dadd( 8.48111, -260.26, 50.6768, 0.22 ) }
    dend_24 { pt3dadd( 8.70457, -262.838, 50.9656, 0.07 ) }
    dend_24 { pt3dadd( 8.73447, -263.344, 51.0079, 0.81 ) }
    dend_24 { pt3dadd( 8.78887, -265.182, 51.1266, 1.92 ) }
    dend_24 { pt3dadd( 8.867, -267.424, 51.184, 0.15 ) }
    dend_24 { pt3dadd( 8.92739, -268.601, 51.1554, 0.88 ) }
    dend_24 { pt3dadd( 9.11353, -271.173, 51.0013, 0.15 ) }
    dend_24 { pt3dadd( 9.17665, -271.86, 50.9326, 0.44 ) }
    dend_24 { pt3dadd( 9.3958, -273.993, 50.6767, 0.07 ) }
    dend_24 { pt3dadd( 9.6216, -275.755, 50.454, 0.07 ) }
    dend_24 { pt3dadd( 9.76202, -276.909, 50.3478, 0.15 ) }
    dend_24 { pt3dadd( 9.85917, -277.803, 50.3, 0.74 ) }
    dend_24 { pt3dadd( 9.92782, -278.616, 50.2992, 0.74 ) }
    dend_24 { pt3dadd( 10.0856, -280.427, 50.5254, 0.07 ) }
    dend_24 { pt3dadd( 10.2322, -281.662, 50.87, 0.07 ) }
    dend_24 { pt3dadd( 10.3684, -282.862, 51.3594, 0.07 ) }
    dend_24 { pt3dadd( 10.4796, -283.851, 51.8227, 1.25 ) }
    dend_24 { pt3dadd( 10.5669, -284.643, 52.2076, 1.99 ) }
    dend_24 { pt3dadd( 10.8616, -287.358, 53.4758, 0.15 ) }
    dend_24 { pt3dadd( 11.0112, -288.842, 54.1299, 0.96 ) }
    dend_24 { pt3dadd( 11.1909, -290.981, 54.9793, 0.07 ) }
    dend_24 { pt3dadd( 11.3137, -292.668, 55.5694, 0.07 ) }
    dend_24 { pt3dadd( 11.379, -293.909, 55.9296, 0.81 ) }
    dend_24 { pt3dadd( 11.516, -297.228, 56.6823, 0.15 ) }
    dend_24 { pt3dadd( 11.5306, -298.07, 56.8136, 0.29 ) }
    dend_24 { pt3dadd( 11.5449, -299.723, 56.9857, 0.07 ) }
    dend_24 { pt3dadd( 11.5722, -301.111, 57.0668, 1.47 ) }
    dend_24 { pt3dadd( 11.6467, -304.222, 57.1529, 0.07 ) }
    dend_24 { pt3dadd( 11.6615, -305.576, 57.1946, 0.07 ) }
    dend_24 { pt3dadd( 11.6491, -306.577, 57.199, 1.11 ) }
    dend_24 { pt3dadd( 11.5882, -309.171, 57.1279, 0.07 ) }
    dend_24 { pt3dadd( 11.5526, -310.272, 57.0573, 0.74 ) }
    dend_24 { pt3dadd( 11.5113, -311.274, 56.9484, 1.92 ) }
    dend_24 { pt3dadd( 11.3547, -314.024, 56.5464, 0.15 ) }
    dend_24 { pt3dadd( 11.2149, -316.135, 56.1999, 0.22 ) }
    dend_24 { pt3dadd( 11.0479, -318.57, 55.7986, 0.22 ) }
    dend_24 { pt3dadd( 10.9652, -319.64, 55.6055, 0.81 ) }
    dend_24 { pt3dadd( 10.8522, -321.021, 55.3595, 1.84 ) }
    dend_24 { pt3dadd( 10.6125, -323.988, 54.9542, 0.07 ) }
    dend_24 { pt3dadd( 10.5462, -324.862, 54.8671, 0.29 ) }
    dend_24 { pt3dadd( 10.3576, -327.059, 54.9286, 0.07 ) }
    dend_24 { pt3dadd( 10.2174, -328.457, 55.0565, 0.07 ) }
    dend_24 { pt3dadd( 10.0477, -330.042, 55.2831, 1.55 ) }
    dend_24 { pt3dadd( 9.7885, -332.467, 55.7935, 0.07 ) }
    dend_24 { pt3dadd( 9.70179, -333.329, 56.031, 0.07 ) }
    dend_24 { pt3dadd( 9.51146, -335.577, 56.7513, 1.47 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -5.99219, -125.017, 24.925, 0.22 ) }
    dend_21 { pt3dadd( -6.59931, -126.031, 25.4573, 0.22 ) }
    dend_21 { pt3dadd( -7.05659, -127.006, 25.9051, 0.44 ) }
    dend_21 { pt3dadd( -7.23514, -127.472, 26.1015, 0.15 ) }
    dend_21 { pt3dadd( -7.36965, -127.86, 26.2644, 0.15 ) }
    dend_21 { pt3dadd( -7.4368, -128.041, 26.3409, 0.37 ) }
    dend_21 { pt3dadd( -7.65962, -128.563, 26.5615, 0.44 ) }
    dend_21 { pt3dadd( -7.87134, -129.007, 26.738, 0.15 ) }
    dend_21 { pt3dadd( -7.97112, -129.187, 26.826, 0.22 ) }
    dend_21 { pt3dadd( -8.14444, -129.48, 27.0208, 0.22 ) }
    dend_21 { pt3dadd( -8.3803, -129.859, 27.3203, 0.22 ) }
    dend_21 { pt3dadd( -8.59191, -130.203, 27.6202, 0.81 ) }
    dend_21 { pt3dadd( -8.94763, -130.83, 28.1821, 0.22 ) }
    dend_21 { pt3dadd( -9.30794, -131.552, 28.8225, 0.96 ) }
    dend_21 { pt3dadd( -9.62223, -132.27, 29.4298, 2.21 ) }
    dend_21 { pt3dadd( -10.1492, -133.697, 30.5558, 0.22 ) }
    dend_21 { pt3dadd( -10.3387, -134.32, 31.032, 0.22 ) }
    dend_21 { pt3dadd( -10.4473, -134.755, 31.3481, 0.22 ) }
    dend_21 { pt3dadd( -10.5185, -135.089, 31.5699, 0.22 ) }
    dend_21 { pt3dadd( -10.6418, -135.616, 31.8706, 0.22 ) }
    dend_21 { pt3dadd( -10.7683, -136.024, 32.0869, 0.22 ) }
    dend_21 { pt3dadd( -10.93, -136.425, 32.2959, 0.88 ) }
    dend_21 { pt3dadd( -11.1799, -136.911, 32.5755, 1.4 ) }
    dend_21 { pt3dadd( -11.5969, -137.55, 33.0141, 2.14 ) }
    dend_21 { pt3dadd( -12.3761, -138.574, 33.8264, 0.52 ) }
    dend_21 { pt3dadd( -12.9676, -139.268, 34.4435, 0.22 ) }
    dend_21 { pt3dadd( -13.3062, -139.636, 34.7893, 0.22 ) }
    dend_21 { pt3dadd( -13.7793, -140.107, 35.2499, 1.11 ) }
    dend_21 { pt3dadd( -14.5565, -140.776, 35.9875, 1.99 ) }
    dend_21 { pt3dadd( -14.9723, -141.073, 36.3716, 1.99 ) }
    dend_21 { pt3dadd( -15.1186, -141.153, 36.5114, 1.99 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -39.673, -110.36, 8.59282, 0.22 ) }
    dend_19 { pt3dadd( -40.8972, -111.636, 8.32321, 0.22 ) }
    dend_19 { pt3dadd( -41.5505, -112.352, 8.18665, 0.22 ) }
    dend_19 { pt3dadd( -42.12, -112.969, 8.06207, 1.33 ) }
    dend_19 { pt3dadd( -43.1655, -114.103, 7.82481, 0.15 ) }
    dend_19 { pt3dadd( -43.5391, -114.52, 7.73922, 0.15 ) }
    dend_19 { pt3dadd( -43.8091, -114.833, 7.6777, 0.37 ) }
    dend_19 { pt3dadd( -44.2408, -115.397, 7.6134, 0.37 ) }
    dend_19 { pt3dadd( -44.8587, -116.307, 7.5231, 0.22 ) }
    dend_19 { pt3dadd( -45.1316, -116.732, 7.47088, 0.15 ) }
    dend_19 { pt3dadd( -45.3304, -117.058, 7.42173, 0.15 ) }
    dend_19 { pt3dadd( -45.4736, -117.302, 7.39615, 0.15 ) }
    dend_19 { pt3dadd( -45.8034, -117.891, 7.35022, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_19 { pt3dadd( -46.1309, -118.523, 7.31648, 0.74 ) }
    dend_19 { pt3dadd( -46.6605, -119.565, 7.2649, 0.15 ) }
    dend_19 { pt3dadd( -47.0166, -120.198, 7.17119, 0.15 ) }
    dend_19 { pt3dadd( -47.5541, -121.062, 6.97038, 0.15 ) }
    dend_19 { pt3dadd( -47.7579, -121.373, 6.86692, 0.15 ) }
    dend_19 { pt3dadd( -48.2064, -122.037, 6.58502, 1.33 ) }
    dend_19 { pt3dadd( -48.6381, -122.618, 6.33147, 2.14 ) }
    dend_19 { pt3dadd( -49.8373, -124.026, 5.69733, 0.15 ) }
    dend_19 { pt3dadd( -50.4581, -124.648, 5.40858, 1.25 ) }
    dend_19 { pt3dadd( -51.4034, -125.497, 5.00109, 0.07 ) }
    dend_19 { pt3dadd( -51.7755, -125.818, 4.86483, 0.22 ) }
    dend_19 { pt3dadd( -52.9639, -126.798, 4.48756, 0.22 ) }
    dend_19 { pt3dadd( -53.5728, -127.268, 4.32909, 1.25 ) }
    dend_19 { pt3dadd( -53.9717, -127.557, 4.25181, 1.25 ) }
    dend_19 { pt3dadd( -55.2296, -128.603, 3.96284, 0.07 ) }
    dend_19 { pt3dadd( -56.0487, -129.407, 3.73452, 0.07 ) }
    dend_19 { pt3dadd( -56.568, -130.068, 3.5118, 0.07 ) }
    dend_19 { pt3dadd( -56.9618, -130.771, 3.199, 0.07 ) }
    dend_19 { pt3dadd( -57.1471, -131.182, 3.00514, 1.18 ) }
    dend_19 { pt3dadd( -57.7262, -132.736, 2.23944, 0.07 ) }
    dend_19 { pt3dadd( -57.8343, -133.087, 2.06605, 0.88 ) }
    dend_19 { pt3dadd( -58.0921, -134.057, 1.59349, 1.92 ) }
    dend_19 { pt3dadd( -58.5156, -135.76, 0.785419, 0.15 ) }
    dend_19 { pt3dadd( -58.6426, -136.305, 0.532332, 0.22 ) }
    dend_19 { pt3dadd( -58.8703, -137.156, 0.133217, 0.07 ) }
    dend_19 { pt3dadd( -59.0003, -137.616, -0.075789, 0.07 ) }
    dend_19 { pt3dadd( -59.1832, -138.352, -0.371763, 0.29 ) }
    dend_19 { pt3dadd( -59.5102, -139.866, -0.85612, 0.07 ) }
    dend_19 { pt3dadd( -59.7802, -141.21, -1.16646, 0.22 ) }
    dend_19 { pt3dadd( -59.9737, -142.144, -1.34239, 1.55 ) }
    dend_19 { pt3dadd( -60.3671, -143.832, -1.544, 0.22 ) }
    dend_19 { pt3dadd( -60.6423, -144.871, -1.60775, 0.07 ) }
    dend_19 { pt3dadd( -60.8958, -145.797, -1.61665, 0.07 ) }
    dend_19 { pt3dadd( -61.0772, -146.419, -1.55295, 0.07 ) }
    dend_19 { pt3dadd( -61.2823, -146.983, -1.42897, 0.15 ) }
    dend_19 { pt3dadd( -61.6495, -147.819, -1.13834, 0.07 ) }
    dend_19 { pt3dadd( -61.9278, -148.182, -0.931179, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -39.673, -110.36, 8.59282, 0.29 ) }
    dend_16 { pt3dadd( -40.9699, -110.1, 7.83423, 0.29 ) }
    dend_16 { pt3dadd( -41.5875, -109.951, 7.3896, 0.22 ) }
    dend_16 { pt3dadd( -41.9659, -109.854, 7.0764, 0.74 ) }
    dend_16 { pt3dadd( -42.4125, -109.733, 6.68082, 0.96 ) }
    dend_16 { pt3dadd( -42.9372, -109.598, 6.20429, 0.29 ) }
    dend_16 { pt3dadd( -43.4769, -109.458, 5.70293, 0.15 ) }
    dend_16 { pt3dadd( -44.0497, -109.305, 5.13188, 0.15 ) }
    dend_16 { pt3dadd( -44.5452, -109.194, 4.67115, 1.03 ) }
    dend_16 { pt3dadd( -45.1795, -109.072, 4.11951, 0.29 ) }
    dend_16 { pt3dadd( -46.0648, -108.921, 3.4004, 0.22 ) }
    dend_16 { pt3dadd( -46.5614, -108.848, 3.02598, 1.11 ) }
    dend_16 { pt3dadd( -47.3734, -108.752, 2.47091, 2.14 ) }
    dend_16 { pt3dadd( -48.9263, -108.59, 1.49637, 0.22 ) }
    dend_16 { pt3dadd( -49.3238, -108.553, 1.25976, 0.81 ) }
    dend_16 { pt3dadd( -50.1216, -108.49, 0.791672, 1.7 ) }
    dend_16 { pt3dadd( -51.2066, -108.397, 0.168946, 0.22 ) }
    dend_16 { pt3dadd( -51.6605, -108.358, -0.102312, 0.88 ) }
    dend_16 { pt3dadd( -52.3388, -108.307, -0.5329, 1.55 ) }
    dend_16 { pt3dadd( -52.8368, -108.266, -0.870432, 0.59 ) }
    dend_16 { pt3dadd( -53.7673, -108.195, -1.52397, 0.15 ) }
    dend_16 { pt3dadd( -54.4387, -108.166, -2.03146, 0.88 ) }
    dend_16 { pt3dadd( -55.0976, -108.144, -2.57461, 0.15 ) }
    dend_16 { pt3dadd( -55.6127, -108.113, -3.03678, 0.22 ) }
    dend_16 { pt3dadd( -56.0591, -108.077, -3.46722, 0.81 ) }
    dend_16 { pt3dadd( -56.7159, -108.026, -4.12502, 1.99 ) }
    dend_16 { pt3dadd( -57.6196, -107.995, -5.09192, 0.22 ) }
    dend_16 { pt3dadd( -58.0565, -107.992, -5.57343, 0.22 ) }
    dend_16 { pt3dadd( -58.4966, -107.982, -6.07039, 0.52 ) }
    dend_16 { pt3dadd( -58.9484, -107.966, -6.59795, 1.18 ) }
    dend_16 { pt3dadd( -59.6586, -107.922, -7.43894, 1.99 ) }
    dend_16 { pt3dadd( -60.5586, -107.845, -8.55523, 0.15 ) }
    dend_16 { pt3dadd( -60.8915, -107.81, -8.9718, 0.29 ) }
    dend_16 { pt3dadd( -61.4286, -107.78, -9.65577, 0.07 ) }
    dend_16 { pt3dadd( -61.7814, -107.784, -10.1491, 0.22 ) }
    dend_16 { pt3dadd( -62.0287, -107.794, -10.5653, 0.22 ) }
    dend_16 { pt3dadd( -62.2102, -107.829, -11.0078, 0.22 ) }
    dend_16 { pt3dadd( -62.2662, -107.861, -11.2001, 0.22 ) }
    dend_16 { pt3dadd( -62.3565, -108.032, -11.7384, 0.22 ) }
    dend_16 { pt3dadd( -62.4017, -108.35, -12.3401, 0.22 ) }
    dend_16 { pt3dadd( -62.4156, -108.626, -12.7807, 0.22 ) }
    dend_16 { pt3dadd( -62.4774, -109.297, -13.7421, 1.84 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 79.5633, 37.9034, 92.9988, 0.22 ) }
    dend_9 { pt3dadd( 81.322, 38.0523, 94.767, 0.22 ) }
    dend_9 { pt3dadd( 81.7186, 38.0516, 95.1599, 0.22 ) }
    dend_9 { pt3dadd( 82.6571, 38.0875, 96.0446, 0.59 ) }
    dend_9 { pt3dadd( 83.5365, 38.1775, 96.8099, 0.44 ) }
    dend_9 { pt3dadd( 84.0258, 38.2374, 97.1951, 0.44 ) }
    dend_9 { pt3dadd( 84.6649, 38.3089, 97.6131, 0.15 ) }
    dend_9 { pt3dadd( 85.3309, 38.4138, 97.9251, 0.15 ) }
    dend_9 { pt3dadd( 86.2168, 38.4997, 98.2238, 0.15 ) }
    dend_9 { pt3dadd( 86.9458, 38.5307, 98.3753, 0.96 ) }
    dend_9 { pt3dadd( 87.9355, 38.559, 98.5158, 1.55 ) }
    dend_9 { pt3dadd( 89.3149, 38.6663, 98.7099, 0.22 ) }
    dend_9 { pt3dadd( 90.3088, 38.7501, 98.8396, 0.37 ) }
    dend_9 { pt3dadd( 91.0885, 38.783, 98.9223, 0.22 ) }
    dend_9 { pt3dadd( 91.7391, 38.7805, 98.9892, 0.22 ) }
    dend_9 { pt3dadd( 92.4758, 38.7756, 99.0719, 0.37 ) }
    dend_9 { pt3dadd( 93.8647, 38.7782, 99.2803, 0.22 ) }
    dend_9 { pt3dadd( 94.6336, 38.8001, 99.4455, 0.22 ) }
    dend_9 { pt3dadd( 95.6327, 38.8751, 99.7201, 0.22 ) }
    dend_9 { pt3dadd( 96.273, 38.9434, 99.9235, 0.96 ) }
    dend_9 { pt3dadd( 97.3622, 39.0744, 100.317, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 99.1489, 39.2567, 101.017, 0.22 ) }
    dend_9 { pt3dadd( 100.274, 39.3148, 101.492, 0.15 ) }
    dend_9 { pt3dadd( 101.367, 39.3592, 102.015, 0.15 ) }
    dend_9 { pt3dadd( 101.729, 39.3676, 102.205, 0.15 ) }
    dend_9 { pt3dadd( 102.239, 39.3525, 102.474, 0.15 ) }
    dend_9 { pt3dadd( 102.732, 39.3161, 102.696, 0.15 ) }
    dend_9 { pt3dadd( 103.662, 39.2245, 103.012, 0.15 ) }
    dend_9 { pt3dadd( 104.255, 39.1121, 103.164, 0.81 ) }
    dend_9 { pt3dadd( 104.964, 38.9181, 103.324, 1.47 ) }
    dend_9 { pt3dadd( 105.488, 38.7621, 103.441, 1.47 ) }
    dend_9 { pt3dadd( 107.061, 38.2853, 103.76, 0.15 ) }
    dend_9 { pt3dadd( 107.456, 38.1767, 103.853, 0.22 ) }
    dend_9 { pt3dadd( 108.501, 37.8603, 104.121, 0.37 ) }
    dend_9 { pt3dadd( 109.554, 37.4941, 104.407, 1.03 ) }
    dend_9 { pt3dadd( 110.575, 37.1192, 104.794, 1.77 ) }
    dend_9 { pt3dadd( 111.117, 36.9234, 105.07, 1.77 ) }
    dend_9 { pt3dadd( 112.716, 36.3628, 106.079, 0.22 ) }
    dend_9 { pt3dadd( 113.306, 36.2081, 106.501, 0.22 ) }
    dend_9 { pt3dadd( 114.219, 36.0766, 107.192, 1.11 ) }
    dend_9 { pt3dadd( 116.052, 35.9546, 108.667, 0.22 ) }
    dend_9 { pt3dadd( 116.803, 35.9166, 109.327, 0.22 ) }
    dend_9 { pt3dadd( 117.522, 35.8765, 109.998, 0.66 ) }
    dend_9 { pt3dadd( 118.528, 35.8186, 110.929, 0.88 ) }
    dend_9 { pt3dadd( 119.216, 35.8018, 111.555, 1.7 ) }
    dend_9 { pt3dadd( 120.664, 35.8328, 112.885, 0.44 ) }
    dend_9 { pt3dadd( 121.74, 35.8976, 113.832, 0.74 ) }
    dend_9 { pt3dadd( 122.534, 35.9931, 114.538, 1.25 ) }
    dend_9 { pt3dadd( 123.827, 36.2871, 115.749, 0.22 ) }
    dend_9 { pt3dadd( 124.273, 36.4329, 116.184, 0.22 ) }
    dend_9 { pt3dadd( 125.022, 36.7838, 116.953, 0.37 ) }
    dend_9 { pt3dadd( 125.532, 37.0911, 117.445, 0.37 ) }
    dend_9 { pt3dadd( 126.36, 37.6387, 118.161, 1.47 ) }
    dend_9 { pt3dadd( 127.379, 38.2979, 118.981, 0.29 ) }
    dend_9 { pt3dadd( 127.875, 38.6033, 119.348, 0.29 ) }
    dend_9 { pt3dadd( 128.15, 38.7607, 119.548, 0.29 ) }
    dend_9 { pt3dadd( 129.041, 39.2398, 120.25, 0.15 ) }
    dend_9 { pt3dadd( 129.594, 39.5531, 120.781, 0.22 ) }
    dend_9 { pt3dadd( 130.01, 39.8103, 121.271, 0.74 ) }
    dend_9 { pt3dadd( 130.463, 40.1485, 121.958, 1.25 ) }
    dend_9 { pt3dadd( 131.161, 40.8125, 123.309, 0.22 ) }
    dend_9 { pt3dadd( 131.669, 41.3806, 124.463, 0.96 ) }
    dend_9 { pt3dadd( 132.107, 41.8986, 125.549, 0.96 ) }
    dend_9 { pt3dadd( 132.476, 42.266, 126.433, 0.29 ) }
    dend_9 { pt3dadd( 132.957, 42.6355, 127.542, 0.29 ) }
    dend_9 { pt3dadd( 133.381, 42.8658, 128.516, 0.29 ) }
    dend_9 { pt3dadd( 133.798, 43.009, 129.455, 0.29 ) }
    dend_9 { pt3dadd( 134.156, 43.1071, 130.446, 0.29 ) }
    dend_9 { pt3dadd( 134.375, 43.1524, 131.385, 0.29 ) }
    dend_9 { pt3dadd( 134.475, 43.1552, 132.319, 0.29 ) }
    dend_9 { pt3dadd( 134.504, 43.1456, 132.914, 0.29 ) }
    dend_9 { pt3dadd( 134.521, 43.1489, 133.709, 0.29 ) }
    dend_9 { pt3dadd( 134.521, 43.1982, 135.241, 0.59 ) }
    dend_9 { pt3dadd( 134.519, 43.2668, 136.404, 0.59 ) }
    dend_9 { pt3dadd( 134.562, 43.3671, 137.85, 0.59 ) }
    dend_9 { pt3dadd( 134.652, 43.4241, 138.865, 0.59 ) }
    dend_9 { pt3dadd( 134.877, 43.4523, 140.116, 0.59 ) }
    dend_9 { pt3dadd( 135.126, 43.4321, 140.975, 0.59 ) }
    dend_9 { pt3dadd( 135.268, 43.4168, 141.301, 0.59 ) }
    dend_9 { pt3dadd( 135.772, 43.3533, 142.139, 0.59 ) }
    dend_9 { pt3dadd( 136.047, 43.2957, 142.466, 0.59 ) }
    dend_9 { pt3dadd( 136.77, 43.0989, 143.119, 0.22 ) }
    dend_9 { pt3dadd( 137.362, 42.9258, 143.51, 0.22 ) }
    dend_9 { pt3dadd( 138.175, 42.7535, 144.073, 0.22 ) }
    dend_9 { pt3dadd( 138.746, 42.6992, 144.533, 0.22 ) }
    dend_9 { pt3dadd( 139.631, 42.7365, 145.283, 0.22 ) }
    dend_9 { pt3dadd( 140.25, 42.8512, 145.882, 0.22 ) }
    dend_9 { pt3dadd( 140.888, 43.0538, 146.624, 1.11 ) }
    dend_9 { pt3dadd( 142.024, 43.5447, 148.158, 0.22 ) }
    dend_9 { pt3dadd( 142.633, 43.8477, 149.084, 0.22 ) }
    dend_9 { pt3dadd( 143.341, 44.2509, 150.263, 0.22 ) }
    dend_9 { pt3dadd( 143.89, 44.5163, 151.16, 0.22 ) }
    dend_9 { pt3dadd( 144.357, 44.5813, 151.882, 0.22 ) }
    dend_9 { pt3dadd( 144.606, 44.4949, 152.209, 0.22 ) }
    dend_9 { pt3dadd( 145.145, 44.1504, 152.777, 0.59 ) }
    dend_9 { pt3dadd( 146.004, 43.5247, 153.571, 0.59 ) }
    dend_9 { pt3dadd( 147.015, 42.804, 154.466, 0.15 ) }
    dend_9 { pt3dadd( 147.997, 42.1187, 155.307, 0.66 ) }
    dend_9 { pt3dadd( 149.035, 41.4321, 156.217, 0.15 ) }
    dend_9 { pt3dadd( 149.863, 40.9238, 156.985, 0.66 ) }
    dend_9 { pt3dadd( 150.54, 40.5712, 157.634, 1.03 ) }
    dend_9 { pt3dadd( 151.835, 40.0017, 158.825, 0.22 ) }
    dend_9 { pt3dadd( 152.922, 39.5962, 159.761, 0.15 ) }
    dend_9 { pt3dadd( 154.01, 39.2727, 160.645, 0.66 ) }
    dend_9 { pt3dadd( 154.68, 39.1466, 161.201, 1.25 ) }
    dend_9 { pt3dadd( 156.098, 39.0049, 162.384, 0.22 ) }
    dend_9 { pt3dadd( 157.137, 38.9579, 163.242, 0.15 ) }
    dend_9 { pt3dadd( 158.048, 38.9792, 163.933, 0.37 ) }
    dend_9 { pt3dadd( 158.595, 39.0345, 164.317, 0.59 ) }
    dend_9 { pt3dadd( 159.985, 39.212, 165.236, 0.15 ) }
    dend_9 { pt3dadd( 160.833, 39.3006, 165.804, 0.88 ) }
    dend_9 { pt3dadd( 162.291, 39.4251, 166.83, 0.22 ) }
    dend_9 { pt3dadd( 162.865, 39.4907, 167.252, 0.96 ) }
    dend_9 { pt3dadd( 163.339, 39.5553, 167.613, 0.66 ) }
    dend_9 { pt3dadd( 164.336, 39.7019, 168.35, 0.15 ) }
    dend_9 { pt3dadd( 165.32, 39.8927, 169.116, 0.81 ) }
    dend_9 { pt3dadd( 165.965, 40.0918, 169.704, 1.25 ) }
    dend_9 { pt3dadd( 166.808, 40.4744, 170.538, 0.15 ) }
    dend_9 { pt3dadd( 167.833, 41.0029, 171.608, 0.15 ) }
    dend_9 { pt3dadd( 168.139, 41.1757, 171.946, 0.29 ) }
    dend_9 { pt3dadd( 168.875, 41.6664, 172.81, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_9 { pt3dadd( 169.225, 41.9247, 173.247, 0.96 ) }
    dend_9 { pt3dadd( 169.886, 42.359, 174.097, 0.29 ) }
    dend_9 { pt3dadd( 170.793, 42.8097, 175.208, 0.74 ) }
    dend_9 { pt3dadd( 171.699, 43.1822, 176.23, 0.15 ) }
    dend_9 { pt3dadd( 172.318, 43.4118, 176.901, 0.37 ) }
    dend_9 { pt3dadd( 172.691, 43.5488, 177.269, 0.37 ) }
    dend_9 { pt3dadd( 173.34, 43.8102, 177.923, 0.22 ) }
    dend_9 { pt3dadd( 174.069, 44.1346, 178.637, 0.22 ) }
    dend_9 { pt3dadd( 174.68, 44.3696, 179.144, 0.37 ) }
    dend_9 { pt3dadd( 175.404, 44.6257, 179.67, 0.37 ) }
    dend_9 { pt3dadd( 176.224, 44.9182, 180.194, 1.33 ) }
    dend_9 { pt3dadd( 177.798, 45.56, 181.109, 0.22 ) }
    dend_9 { pt3dadd( 178.821, 46.0771, 181.68, 1.03 ) }
    dend_9 { pt3dadd( 180.068, 46.7985, 182.342, 0.15 ) }
    dend_9 { pt3dadd( 180.489, 47.0824, 182.557, 0.15 ) }
    dend_9 { pt3dadd( 181.538, 47.965, 183.088, 0.15 ) }
    dend_9 { pt3dadd( 182.246, 48.7293, 183.497, 1.03 ) }
    dend_9 { pt3dadd( 182.785, 49.5285, 183.863, 0.15 ) }
    dend_9 { pt3dadd( 183.129, 50.1678, 184.152, 0.15 ) }
    dend_9 { pt3dadd( 183.584, 51.1426, 184.658, 0.15 ) }
    dend_9 { pt3dadd( 184.074, 52.1133, 185.301, 0.88 ) }
    dend_9 { pt3dadd( 184.563, 53.0295, 186.033, 0.29 ) }
    dend_9 { pt3dadd( 184.935, 53.681, 186.617, 0.81 ) }
    dend_9 { pt3dadd( 185.122, 53.9836, 186.899, 0.81 ) }
    dend_9 { pt3dadd( 185.806, 55.2935, 188.049, 0.22 ) }
    dend_9 { pt3dadd( 186.219, 56.2898, 188.852, 0.07 ) }
    dend_9 { pt3dadd( 186.425, 57.119, 189.436, 0.15 ) }
    dend_9 { pt3dadd( 186.468, 57.564, 189.711, 0.66 ) }
    dend_9 { pt3dadd( 186.448, 58.4844, 190.228, 1.55 ) }
    dend_9 { pt3dadd( 186.257, 60.8034, 191.418, 0.15 ) }
    dend_9 { pt3dadd( 186.08, 61.9133, 191.892, 0.15 ) }
    dend_9 { pt3dadd( 185.836, 62.9284, 192.299, 0.66 ) }
    dend_9 { pt3dadd( 185.614, 63.6652, 192.608, 0.15 ) }
    dend_9 { pt3dadd( 185.459, 64.0967, 192.795, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 34/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 79.5633, 37.9034, 92.9988, 0.29 ) }
    dend_8 { pt3dadd( 78.9552, 38.717, 94.0847, 0.29 ) }
    dend_8 { pt3dadd( 78.4803, 39.3524, 94.8215, 0.29 ) }
    dend_8 { pt3dadd( 77.9839, 40.053, 95.5498, 0.81 ) }
    dend_8 { pt3dadd( 77.7003, 40.4338, 95.9388, 1.4 ) }
    dend_8 { pt3dadd( 76.9873, 41.3038, 96.8536, 0.07 ) }
    dend_8 { pt3dadd( 76.6015, 41.7417, 97.3176, 1.03 ) }
    dend_8 { pt3dadd( 75.8299, 42.5172, 98.1063, 0.15 ) }
    dend_8 { pt3dadd( 75.1778, 43.1921, 98.7394, 1.55 ) }
    dend_8 { pt3dadd( 74.5746, 43.8635, 99.3421, 0.22 ) }
    dend_8 { pt3dadd( 74.1826, 44.3479, 99.7662, 0.22 ) }
    dend_8 { pt3dadd( 73.7806, 44.9139, 100.243, 0.81 ) }
    dend_8 { pt3dadd( 73.38, 45.5488, 100.751, 0.07 ) }
    dend_8 { pt3dadd( 73.0741, 46.1717, 101.207, 0.59 ) }
    dend_8 { pt3dadd( 72.8844, 46.7867, 101.577, 0.07 ) }
    dend_8 { pt3dadd( 72.8304, 47.1704, 101.777, 0.52 ) }
    dend_8 { pt3dadd( 72.8025, 48.4602, 102.418, 0.07 ) }
    dend_8 { pt3dadd( 72.8413, 48.887, 102.629, 0.96 ) }
    dend_8 { pt3dadd( 72.9198, 49.2839, 102.836, 0.96 ) }
    dend_8 { pt3dadd( 73.2203, 50.3349, 103.427, 0.22 ) }
    dend_8 { pt3dadd( 73.5268, 51.059, 103.857, 0.22 ) }
    dend_8 { pt3dadd( 73.8784, 51.6638, 104.259, 0.96 ) }
    dend_8 { pt3dadd( 74.3203, 52.2886, 104.711, 1.77 ) }
    dend_8 { pt3dadd( 74.9485, 53.1316, 105.379, 0.22 ) }
    dend_8 { pt3dadd( 75.3449, 53.6361, 105.802, 0.15 ) }
    dend_8 { pt3dadd( 75.6892, 54.059, 106.142, 0.15 ) }
    dend_8 { pt3dadd( 75.8647, 54.2889, 106.32, 0.15 ) }
    dend_8 { pt3dadd( 76.4073, 55.0957, 106.915, 0.88 ) }
    dend_8 { pt3dadd( 76.8844, 56.0471, 107.589, 0.22 ) }
    dend_8 { pt3dadd( 77.082, 56.5888, 107.965, 0.81 ) }
    dend_8 { pt3dadd( 77.3583, 57.5163, 108.61, 0.15 ) }
    dend_8 { pt3dadd( 77.539, 58.1853, 109.073, 0.66 ) }
    dend_8 { pt3dadd( 77.7256, 58.9256, 109.579, 1.84 ) }
    dend_8 { pt3dadd( 78.0955, 60.3026, 110.517, 0.15 ) }
    dend_8 { pt3dadd( 78.2991, 61.0868, 111.034, 0.15 ) }
    dend_8 { pt3dadd( 78.4642, 61.7244, 111.444, 0.15 ) }
    dend_8 { pt3dadd( 78.6177, 62.2395, 111.774, 0.66 ) }
    dend_8 { pt3dadd( 78.9764, 63.2092, 112.342, 0.15 ) }
    dend_8 { pt3dadd( 79.3857, 64.0973, 112.823, 0.15 ) }
    dend_8 { pt3dadd( 79.6219, 64.5391, 113.039, 0.66 ) }
    dend_8 { pt3dadd( 79.8315, 64.9694, 113.225, 0.22 ) }
    dend_8 { pt3dadd( 80.1116, 65.6665, 113.512, 0.22 ) }
    dend_8 { pt3dadd( 80.2532, 66.0839, 113.675, 0.81 ) }
    dend_8 { pt3dadd( 80.3387, 66.4224, 113.794, 0.81 ) }
    dend_8 { pt3dadd( 80.4605, 67.383, 114.124, 0.07 ) }
    dend_8 { pt3dadd( 80.4772, 67.9683, 114.334, 0.66 ) }
    dend_8 { pt3dadd( 80.3669, 69.2106, 114.808, 0.15 ) }
    dend_8 { pt3dadd( 80.2117, 70.0479, 115.137, 1.4 ) }
    dend_8 { pt3dadd( 79.9092, 71.2163, 115.627, 0.15 ) }
    dend_8 { pt3dadd( 79.6503, 71.9976, 115.976, 0.15 ) }
    dend_8 { pt3dadd( 79.3711, 72.6561, 116.286, 1.18 ) }
    dend_8 { pt3dadd( 78.7963, 73.6736, 116.831, 0.22 ) }
    dend_8 { pt3dadd( 78.2633, 74.3932, 117.254, 0.15 ) }
    dend_8 { pt3dadd( 77.9215, 74.8054, 117.51, 0.15 ) }
    dend_8 { pt3dadd( 77.5763, 75.2048, 117.764, 0.74 ) }
    dend_8 { pt3dadd( 77.1596, 75.6978, 118.057, 1.25 ) }
    dend_8 { pt3dadd( 76.316, 76.7361, 118.659, 0.22 ) }
    dend_8 { pt3dadd( 75.8734, 77.309, 118.989, 1.11 ) }
    dend_8 { pt3dadd( 75.118, 78.3351, 119.612, 0.22 ) }
    dend_8 { pt3dadd( 74.7104, 78.9315, 119.976, 1.47 ) }
    dend_8 { pt3dadd( 74.3233, 79.5324, 120.338, 0.96 ) }
    dend_8 { pt3dadd( 73.8149, 80.3841, 120.847, 0.22 ) }
    dend_8 { pt3dadd( 73.3864, 81.1607, 121.306, 0.74 ) }
    dend_8 { pt3dadd( 72.8696, 82.1225, 121.901, 0.15 ) }
    dend_8 { pt3dadd( 72.6454, 82.5313, 122.174, 0.15 ) }
    dend_8 { pt3dadd( 72.4084, 82.9782, 122.487, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 0/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 50.4937, 7.29081, 54.1945, 0.15 ) }
    dend_6 { pt3dadd( 52.1691, 5.96012, 56.6129, 0.15 ) }
    dend_6 { pt3dadd( 52.7579, 5.60258, 57.1769, 0.22 ) }
    dend_6 { pt3dadd( 53.2406, 5.34842, 57.5681, 0.88 ) }
    dend_6 { pt3dadd( 54.1205, 4.92368, 58.2082, 0.15 ) }
    dend_6 { pt3dadd( 54.7011, 4.66146, 58.602, 1.18 ) }
    dend_6 { pt3dadd( 55.3465, 4.37566, 59.0313, 2.58 ) }
    dend_6 { pt3dadd( 56.892, 3.79972, 59.8027, 0.29 ) }
    dend_6 { pt3dadd( 57.6057, 3.54369, 60.1463, 0.96 ) }
    dend_6 { pt3dadd( 58.1393, 3.35456, 60.4127, 1.18 ) }
    dend_6 { pt3dadd( 59.6468, 2.8394, 61.2553, 0.07 ) }
    dend_6 { pt3dadd( 60.2019, 2.66772, 61.621, 0.07 ) }
    dend_6 { pt3dadd( 60.4676, 2.58543, 61.8223, 0.07 ) }
    dend_6 { pt3dadd( 60.9429, 2.4142, 62.2598, 0.74 ) }
    dend_6 { pt3dadd( 61.3211, 2.24666, 62.664, 1.03 ) }
    dend_6 { pt3dadd( 62.1651, 1.79793, 63.6989, 0.15 ) }
    dend_6 { pt3dadd( 62.8383, 1.33863, 64.6431, 1.18 ) }
    dend_6 { pt3dadd( 63.0884, 1.12176, 65.0334, 1.4 ) }
    dend_6 { pt3dadd( 63.5788, 0.589728, 65.8971, 0.15 ) }
    dend_6 { pt3dadd( 63.898, 0.124887, 66.5376, 0.15 ) }
    dend_6 { pt3dadd( 64.0571, -0.16143, 66.8889, 0.88 ) }
    dend_6 { pt3dadd( 64.2334, -0.533567, 67.3222, 0.29 ) }
    dend_6 { pt3dadd( 64.529, -1.21955, 68.1266, 0.15 ) }
    dend_6 { pt3dadd( 64.7189, -1.68572, 68.7329, 0.81 ) }
    dend_6 { pt3dadd( 64.9053, -2.1824, 69.4446, 1.62 ) }
    dend_6 { pt3dadd( 65.1841, -3.15167, 70.9054, 0.15 ) }
    dend_6 { pt3dadd( 65.2935, -3.66291, 71.7061, 0.15 ) }
    dend_6 { pt3dadd( 65.3604, -4.12131, 72.4242, 0.22 ) }
    dend_6 { pt3dadd( 65.3903, -4.6949, 73.3081, 0.22 ) }
    dend_6 { pt3dadd( 65.3829, -5.07438, 73.8696, 0.22 ) }
    dend_6 { pt3dadd( 65.3753, -5.43373, 74.4155, 1.18 ) }
    dend_6 { pt3dadd( 65.3772, -5.88831, 75.0724, 1.62 ) }
    dend_6 { pt3dadd( 65.5163, -6.72734, 76.2025, 0.22 ) }
    dend_6 { pt3dadd( 65.6915, -7.1376, 76.7843, 0.22 ) }
    dend_6 { pt3dadd( 65.8484, -7.35192, 77.1242, 0.44 ) }
    dend_6 { pt3dadd( 66.3252, -7.79384, 77.9439, 0.15 ) }
    dend_6 { pt3dadd( 66.7111, -8.05387, 78.5042, 1.33 ) }
    dend_6 { pt3dadd( 67.524, -8.51642, 79.5682, 0.15 ) }
    dend_6 { pt3dadd( 68.3946, -8.96291, 80.5999, 0.22 ) }
    dend_6 { pt3dadd( 68.8625, -9.22882, 81.1111, 0.22 ) }
    dend_6 { pt3dadd( 69.1046, -9.38001, 81.3623, 0.22 ) }
    dend_6 { pt3dadd( 69.5229, -9.68932, 81.7687, 0.74 ) }
    dend_6 { pt3dadd( 69.9667, -10.0463, 82.1508, 1.25 ) }
    dend_6 { pt3dadd( 70.3443, -10.357, 82.4072, 1.25 ) }
    dend_6 { pt3dadd( 71.5509, -11.4464, 83.0924, 0.22 ) }
    dend_6 { pt3dadd( 72.0778, -11.9379, 83.3985, 0.22 ) }
    dend_6 { pt3dadd( 72.517, -12.358, 83.6682, 1.03 ) }
    dend_6 { pt3dadd( 73.0683, -12.8884, 84.0101, 1.84 ) }
    dend_6 { pt3dadd( 74.4697, -14.2258, 84.8584, 0.22 ) }
    dend_6 { pt3dadd( 75.0752, -14.826, 85.2159, 1.11 ) }
    dend_6 { pt3dadd( 75.9253, -15.7447, 85.7329, 0.22 ) }
    dend_6 { pt3dadd( 76.4647, -16.3627, 86.0908, 0.15 ) }
    dend_6 { pt3dadd( 76.8492, -16.8046, 86.3675, 0.15 ) }
    dend_6 { pt3dadd( 77.4084, -17.4585, 86.8096, 1.03 ) }
    dend_6 { pt3dadd( 78.1862, -18.4202, 87.5003, 0.22 ) }
    dend_6 { pt3dadd( 78.5575, -18.8604, 87.8805, 0.96 ) }
    dend_6 { pt3dadd( 79.2126, -19.623, 88.6152, 0.15 ) }
    dend_6 { pt3dadd( 79.646, -20.1312, 89.1771, 0.15 ) }
    dend_6 { pt3dadd( 79.9512, -20.5154, 89.664, 0.96 ) }
    dend_6 { pt3dadd( 80.3508, -21.0179, 90.4249, 1.92 ) }
    dend_6 { pt3dadd( 81.3241, -22.0985, 92.4609, 0.22 ) }
    dend_6 { pt3dadd( 81.6437, -22.4037, 93.1357, 0.44 ) }
    dend_6 { pt3dadd( 82.1341, -22.8673, 94.2392, 1.18 ) }
    dend_6 { pt3dadd( 82.6973, -23.4244, 95.6627, 0.22 ) }
    dend_6 { pt3dadd( 83.2191, -23.9618, 97.2128, 0.52 ) }
    dend_6 { pt3dadd( 83.5977, -24.3655, 98.6413, 0.81 ) }
    dend_6 { pt3dadd( 83.776, -24.5711, 99.6442, 0.81 ) }
    dend_6 { pt3dadd( 83.9769, -24.7731, 101.363, 0.52 ) }
    dend_6 { pt3dadd( 83.9939, -24.7789, 102.322, 0.52 ) }
    dend_6 { pt3dadd( 83.8691, -24.6107, 103.254, 0.52 ) }
    dend_6 { pt3dadd( 83.5813, -24.259, 104.061, 0.52 ) }
    dend_6 { pt3dadd( 83.2472, -23.8344, 104.636, 1.25 ) }
    dend_6 { pt3dadd( 82.9233, -23.347, 105.09, 1.25 ) }
    dend_6 { pt3dadd( 82.5552, -22.6299, 105.61, 0.37 ) }
    dend_6 { pt3dadd( 82.1299, -21.5472, 106.351, 0.66 ) }
    dend_6 { pt3dadd( 81.9177, -20.7964, 106.85, 0.37 ) }
    dend_6 { pt3dadd( 81.8071, -20.0177, 107.408, 0.66 ) }
    dend_6 { pt3dadd( 81.8102, -19.1757, 108.153, 0.15 ) }
    dend_6 { pt3dadd( 81.8942, -18.6734, 108.711, 0.15 ) }
    dend_6 { pt3dadd( 81.9956, -18.4098, 109.083, 0.15 ) }
    dend_6 { pt3dadd( 82.2052, -18.0211, 109.728, 1.62 ) }
    dend_6 { pt3dadd( 82.6196, -17.3136, 110.996, 0.22 ) }
    dend_6 { pt3dadd( 83.0613, -16.5491, 112.467, 0.88 ) }
    dend_6 { pt3dadd( 83.388, -15.9566, 113.743, 1.4 ) }
    dend_6 { pt3dadd( 83.6402, -15.45, 114.925, 1.4 ) }
    dend_6 { pt3dadd( 83.918, -14.7651, 116.581, 0.66 ) }
    dend_6 { pt3dadd( 84.0883, -14.1784, 118.081, 0.29 ) }
    dend_6 { pt3dadd( 84.1309, -13.916, 118.851, 0.29 ) }
    dend_6 { pt3dadd( 84.1387, -13.6924, 119.629, 0.29 ) }
    dend_6 { pt3dadd( 84.1035, -13.5838, 120.151, 0.29 ) }
    dend_6 { pt3dadd( 83.9149, -13.4791, 121.386, 0.29 ) }
    dend_6 { pt3dadd( 83.7117, -13.5368, 122.247, 0.29 ) }
    dend_6 { pt3dadd( 83.448, -13.6762, 123.226, 0.29 ) }
    dend_6 { pt3dadd( 83.2324, -13.7354, 123.943, 0.29 ) }
    dend_6 { pt3dadd( 83.0379, -13.7053, 124.459, 0.29 ) }
    dend_6 { pt3dadd( 82.8869, -13.6362, 124.789, 0.29 ) }
    dend_6 { pt3dadd( 82.4888, -13.3091, 125.4, 0.88 ) }
    dend_6 { pt3dadd( 82.0619, -12.8326, 125.931, 1.25 ) }
    dend_6 { pt3dadd( 81.666, -12.3134, 126.402, 0.59 ) }
    dend_6 { pt3dadd( 81.1372, -11.5925, 126.982, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_6 { pt3dadd( 80.7801, -11.0832, 127.369, 1.4 ) }
    dend_6 { pt3dadd( 79.681, -9.51839, 128.51, 0.15 ) }
    dend_6 { pt3dadd( 79.2514, -8.92536, 128.916, 0.74 ) }
    dend_6 { pt3dadd( 78.4511, -7.85299, 129.607, 0.22 ) }
    dend_6 { pt3dadd( 77.8891, -7.11401, 130.082, 1.03 ) }
    dend_6 { pt3dadd( 77.4945, -6.59648, 130.427, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 6/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 50.4937, 7.29081, 54.1945, 0.15 ) }
    dend_5 { pt3dadd( 49.5126, 6.06235, 54.6736, 0.15 ) }
    dend_5 { pt3dadd( 49.117, 5.55493, 54.8509, 0.07 ) }
    dend_5 { pt3dadd( 48.6428, 4.94656, 55.0451, 1.03 ) }
    dend_5 { pt3dadd( 47.981, 4.10494, 55.2864, 0.07 ) }
    dend_5 { pt3dadd( 47.3207, 3.2795, 55.5079, 0.07 ) }
    dend_5 { pt3dadd( 46.9433, 2.82181, 55.6241, 0.66 ) }
    dend_5 { pt3dadd( 46.1778, 1.90442, 55.7379, 0.07 ) }
    dend_5 { pt3dadd( 45.7861, 1.425, 55.7654, 0.07 ) }
    dend_5 { pt3dadd( 45.2214, 0.723704, 55.7745, 0.07 ) }
    dend_5 { pt3dadd( 45.054, 0.514475, 55.7576, 0.29 ) }
    dend_5 { pt3dadd( 44.7388, 0.106745, 55.692, 0.81 ) }
    dend_5 { pt3dadd( 43.878, -1.03098, 55.4401, 0.07 ) }
    dend_5 { pt3dadd( 43.2951, -1.82477, 55.2224, 0.07 ) }
    dend_5 { pt3dadd( 42.8972, -2.37934, 55.0399, 0.15 ) }
    dend_5 { pt3dadd( 42.1049, -3.5175, 54.6232, 0.07 ) }
    dend_5 { pt3dadd( 41.6262, -4.24428, 54.3455, 0.07 ) }
    dend_5 { pt3dadd( 41.3588, -4.67829, 54.1768, 0.22 ) }
    dend_5 { pt3dadd( 41.1603, -5.01694, 54.0423, 0.22 ) }
    dend_5 { pt3dadd( 40.5646, -6.01586, 53.631, 0.15 ) }
    dend_5 { pt3dadd( 40.2206, -6.60303, 53.3962, 0.15 ) }
    dend_5 { pt3dadd( 39.8276, -7.31874, 53.1325, 0.07 ) }
    dend_5 { pt3dadd( 39.6207, -7.71288, 52.9877, 0.15 ) }
    dend_5 { pt3dadd( 39.1265, -8.65103, 52.6589, 0.07 ) }
    dend_5 { pt3dadd( 38.8307, -9.17578, 52.4756, 0.59 ) }
    dend_5 { pt3dadd( 38.2805, -10.0076, 52.1647, 0.07 ) }
    dend_5 { pt3dadd( 37.9655, -10.4017, 51.9762, 0.07 ) }
    dend_5 { pt3dadd( 37.7202, -10.6536, 51.8236, 0.22 ) }
    dend_5 { pt3dadd( 37.1889, -11.1304, 51.4969, 0.22 ) }
    dend_5 { pt3dadd( 36.5276, -11.6828, 51.1192, 0.07 ) }
    dend_5 { pt3dadd( 35.7321, -12.323, 50.7012, 0.07 ) }
    dend_5 { pt3dadd( 35.3447, -12.6062, 50.5198, 0.07 ) }
    dend_5 { pt3dadd( 34.856, -12.9155, 50.3318, 0.07 ) }
    dend_5 { pt3dadd( 34.055, -13.3437, 50.1109, 0.29 ) }
    dend_5 { pt3dadd( 32.8277, -13.8815, 49.9271, 0.07 ) }
    dend_5 { pt3dadd( 32.2767, -14.0695, 49.9301, 0.29 ) }
    dend_5 { pt3dadd( 31.7847, -14.2145, 49.9931, 0.29 ) }
    dend_5 { pt3dadd( 30.8471, -14.4822, 50.1734, 0.07 ) }
    dend_5 { pt3dadd( 29.9434, -14.7065, 50.3876, 0.07 ) }
    dend_5 { pt3dadd( 29.5624, -14.7777, 50.4834, 0.22 ) }
    dend_5 { pt3dadd( 28.9887, -14.8493, 50.6157, 0.37 ) }
    dend_5 { pt3dadd( 28.216, -14.9539, 50.7517, 0.29 ) }
    dend_5 { pt3dadd( 27.2619, -15.1152, 50.7816, 0.07 ) }
    dend_5 { pt3dadd( 26.9223, -15.18, 50.7392, 0.37 ) }
    dend_5 { pt3dadd( 26.4213, -15.2577, 50.6314, 0.59 ) }
    dend_5 { pt3dadd( 25.4534, -15.3296, 50.3634, 0.07 ) }
    dend_5 { pt3dadd( 24.9662, -15.3281, 50.202, 0.15 ) }
    dend_5 { pt3dadd( 23.7644, -15.2411, 49.7584, 0.07 ) }
    dend_5 { pt3dadd( 22.9791, -15.1534, 49.4462, 0.07 ) }
    dend_5 { pt3dadd( 22.294, -15.1016, 49.1716, 0.15 ) }
    dend_5 { pt3dadd( 21.3839, -15.1001, 48.8248, 0.07 ) }
    dend_5 { pt3dadd( 20.9086, -15.1518, 48.6653, 0.07 ) }
    dend_5 { pt3dadd( 20.6359, -15.2063, 48.5916, 0.29 ) }
    dend_5 { pt3dadd( 20.3054, -15.3036, 48.533, 0.29 ) }
    dend_5 { pt3dadd( 19.3855, -15.6556, 48.4069, 0.07 ) }
    dend_5 { pt3dadd( 18.5281, -16.035, 48.3192, 0.07 ) }
    dend_5 { pt3dadd( 17.7638, -16.3955, 48.2575, 0.07 ) }
    dend_5 { pt3dadd( 17.477, -16.5269, 48.2263, 0.07 ) }
    dend_5 { pt3dadd( 17.3286, -16.5918, 48.2023, 0.15 ) }
    dend_5 { pt3dadd( 17.0898, -16.6824, 48.1437, 0.15 ) }
    dend_5 { pt3dadd( 16.629, -16.7938, 47.9702, 0.15 ) }
    dend_5 { pt3dadd( 16.0076, -16.8444, 47.6531, 0.15 ) }
    dend_5 { pt3dadd( 15.3683, -16.8325, 47.2427, 0.15 ) }
    dend_5 { pt3dadd( 14.9918, -16.8129, 46.9867, 0.15 ) }
    dend_5 { pt3dadd( 14.5863, -16.788, 46.707, 0.15 ) }
    dend_5 { pt3dadd( 14.1844, -16.7605, 46.4227, 0.15 ) }
    dend_5 { pt3dadd( 13.8792, -16.7385, 46.199, 0.15 ) }
    dend_5 { pt3dadd( 13.5279, -16.694, 45.9454, 0.15 ) }
    dend_5 { pt3dadd( 12.8484, -16.5573, 45.4509, 0.07 ) }
    dend_5 { pt3dadd( 12.3995, -16.4615, 45.1408, 0.07 ) }
    dend_5 { pt3dadd( 11.7649, -16.3686, 44.7547, 0.66 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 77/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -45.9446, 47.8069, 36.5363, 0.07 ) }
    dend_62 { pt3dadd( -46.3403, 47.2029, 38.3239, 0.07 ) }
    dend_62 { pt3dadd( -46.4961, 46.8187, 39.4992, 0.88 ) }
    dend_62 { pt3dadd( -46.5892, 46.3129, 41.0796, 0.22 ) }
    dend_62 { pt3dadd( -46.6614, 45.968, 42.1617, 0.88 ) }
    dend_62 { pt3dadd( -46.7693, 45.5022, 43.5996, 1.84 ) }
    dend_62 { pt3dadd( -46.9538, 44.5853, 46.3246, 0.22 ) }
    dend_62 { pt3dadd( -46.9609, 44.1279, 47.4708, 0.22 ) }
    dend_62 { pt3dadd( -46.9395, 43.6802, 48.3717, 0.22 ) }
    dend_62 { pt3dadd( -46.891, 42.816, 49.8474, 0.15 ) }
    dend_62 { pt3dadd( -46.8522, 42.1523, 50.8556, 0.15 ) }
    dend_62 { pt3dadd( -46.8498, 41.5883, 51.5848, 0.29 ) }
    dend_62 { pt3dadd( -46.9095, 40.3256, 52.9569, 1.25 ) }
    dend_62 { pt3dadd( -47.0613, 38.3581, 54.9244, 0.07 ) }
    dend_62 { pt3dadd( -47.1163, 37.6783, 55.5687, 0.88 ) }
    dend_62 { pt3dadd( -47.1346, 37.3019, 55.9185, 1.18 ) }
    dend_62 { pt3dadd( -47.2334, 35.8454, 57.2804, 0.07 ) }
    dend_62 { pt3dadd( -47.2968, 35.1433, 57.9659, 0.74 ) }
    dend_62 { pt3dadd( -47.3902, 33.9494, 59.311, 0.07 ) }
    dend_62 { pt3dadd( -47.3802, 33.4677, 59.9641, 0.29 ) }
    dend_62 { pt3dadd( -47.2441, 32.8351, 61.0036, 0.07 ) }
    dend_62 { pt3dadd( -46.995, 32.3762, 61.99, 1.03 ) }
    dend_62 { pt3dadd( -46.7282, 32.1309, 62.7527, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_62 { pt3dadd( -45.9769, 31.7048, 64.5959, 0.22 ) }
    dend_62 { pt3dadd( -45.3464, 31.4799, 65.9955, 0.22 ) }
    dend_62 { pt3dadd( -44.7232, 31.3205, 67.407, 0.22 ) }
    dend_62 { pt3dadd( -44.296, 31.2203, 68.524, 0.22 ) }
    dend_62 { pt3dadd( -44.0783, 31.1463, 69.1915, 0.22 ) }
    dend_62 { pt3dadd( -43.8796, 30.931, 70.077, 0.22 ) }
    dend_62 { pt3dadd( -43.7996, 30.6831, 70.7346, 0.22 ) }
    dend_62 { pt3dadd( -43.7906, 30.2083, 71.7301, 0.22 ) }
    dend_62 { pt3dadd( -43.832, 29.4071, 73.0627, 1.03 ) }
    dend_62 { pt3dadd( -43.8536, 28.5733, 74.2723, 1.47 ) }
    dend_62 { pt3dadd( -43.81, 26.9139, 76.4862, 0.07 ) }
    dend_62 { pt3dadd( -43.8, 26.4692, 77.0615, 1.25 ) }
    dend_62 { pt3dadd( -43.8029, 25.8234, 77.8913, 1.4 ) }
    dend_62 { pt3dadd( -43.8568, 24.5151, 79.5247, 0.29 ) }
    dend_62 { pt3dadd( -43.9444, 23.6857, 80.5446, 0.15 ) }
    dend_62 { pt3dadd( -44.0855, 23.0155, 81.3653, 0.81 ) }
    dend_62 { pt3dadd( -44.4955, 21.6147, 83.0562, 0.15 ) }
    dend_62 { pt3dadd( -44.8105, 20.8335, 83.9559, 0.15 ) }
    dend_62 { pt3dadd( -45.0783, 20.2801, 84.5876, 0.37 ) }
    dend_62 { pt3dadd( -45.6335, 19.3746, 85.5082, 0.15 ) }
    dend_62 { pt3dadd( -45.9609, 18.8871, 85.9352, 0.88 ) }
    dend_62 { pt3dadd( -46.3052, 18.3938, 86.3155, 1.55 ) }
    dend_62 { pt3dadd( -47.716, 16.4491, 87.7168, 0.22 ) }
    dend_62 { pt3dadd( -48.0871, 15.9641, 88.082, 0.22 ) }
    dend_62 { pt3dadd( -48.996, 14.8751, 88.9919, 0.81 ) }
    dend_62 { pt3dadd( -50.1993, 13.5565, 90.2406, 0.07 ) }
    dend_62 { pt3dadd( -50.6663, 13.1028, 90.7675, 0.74 ) }
    dend_62 { pt3dadd( -51.3784, 12.501, 91.6776, 0.22 ) }
    dend_62 { pt3dadd( -52.125, 11.9458, 92.8239, 0.37 ) }
    dend_62 { pt3dadd( -52.6045, 11.6208, 93.6841, 0.22 ) }
    dend_62 { pt3dadd( -53.2901, 11.1745, 95.2169, 1.03 ) }
    dend_62 { pt3dadd( -53.8943, 10.7203, 97.0124, 0.07 ) }
    dend_62 { pt3dadd( -54.2466, 10.367, 98.4936, 0.88 ) }
    dend_62 { pt3dadd( -54.4729, 10.0386, 99.8044, 1.25 ) }
    dend_62 { pt3dadd( -54.8198, 9.29707, 102.176, 0.15 ) }
    dend_62 { pt3dadd( -54.9717, 8.8617, 103.296, 0.74 ) }
    dend_62 { pt3dadd( -55.2614, 7.8758, 105.32, 0.22 ) }
    dend_62 { pt3dadd( -55.5716, 6.79211, 107.096, 1.11 ) }
    dend_62 { pt3dadd( -55.8034, 6.08032, 108.091, 2.06 ) }
    dend_62 { pt3dadd( -56.4961, 4.2583, 110.37, 0.15 ) }
    dend_62 { pt3dadd( -56.7939, 3.5718, 111.169, 0.29 ) }
    dend_62 { pt3dadd( -57.5411, 2.11174, 112.834, 0.07 ) }
    dend_62 { pt3dadd( -57.9527, 1.47285, 113.603, 0.22 ) }
    dend_62 { pt3dadd( -58.7804, 0.414503, 115.064, 0.07 ) }
    dend_62 { pt3dadd( -59.2474, -0.0546501, 115.93, 1.4 ) }
    dend_62 { pt3dadd( -60.3271, -0.887944, 118.068, 0.07 ) }
    dend_62 { pt3dadd( -60.8608, -1.23697, 119.15, 0.81 ) }
    dend_62 { pt3dadd( -61.7495, -1.68285, 121.053, 0.07 ) }
    dend_62 { pt3dadd( -62.292, -1.88491, 122.28, 0.96 ) }
    dend_62 { pt3dadd( -63.3225, -2.13091, 124.593, 0.07 ) }
    dend_62 { pt3dadd( -63.7229, -2.19455, 125.448, 0.07 ) }
    dend_62 { pt3dadd( -64.2547, -2.2578, 126.529, 1.25 ) }
    dend_62 { pt3dadd( -65.5019, -2.42819, 128.893, 0.22 ) }
    dend_62 { pt3dadd( -66.3778, -2.59707, 130.433, 0.88 ) }
    dend_62 { pt3dadd( -66.9934, -2.71228, 131.36, 1.18 ) }
    dend_62 { pt3dadd( -68.887, -3.07107, 133.832, 0.15 ) }
    dend_62 { pt3dadd( -69.4957, -3.20107, 134.543, 0.81 ) }
    dend_62 { pt3dadd( -70.4881, -3.44806, 135.573, 0.15 ) }
    dend_62 { pt3dadd( -71.4695, -3.73546, 136.441, 1.18 ) }
    dend_62 { pt3dadd( -73.0979, -4.17443, 137.7, 0.07 ) }
    dend_62 { pt3dadd( -73.8258, -4.33295, 138.201, 0.07 ) }
    dend_62 { pt3dadd( -74.9286, -4.44685, 138.767, 0.07 ) }
    dend_62 { pt3dadd( -75.5296, -4.46931, 139.02, 0.88 ) }
    dend_62 { pt3dadd( -76.4406, -4.47176, 139.365, 1.33 ) }
    dend_62 { pt3dadd( -78.9991, -4.3598, 140.203, 0.07 ) }
    dend_62 { pt3dadd( -80.2263, -4.26239, 140.54, 1.33 ) }
    dend_62 { pt3dadd( -83.2945, -3.85981, 141.259, 0.07 ) }
    dend_62 { pt3dadd( -83.825, -3.76548, 141.36, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 68/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -45.9446, 47.8069, 36.5363, 0.15 ) }
    dend_61 { pt3dadd( -45.1644, 46.3797, 36.557, 0.15 ) }
    dend_61 { pt3dadd( -44.8414, 45.7795, 36.5191, 0.29 ) }
    dend_61 { pt3dadd( -44.3471, 44.88, 36.4388, 0.15 ) }
    dend_61 { pt3dadd( -44.1495, 44.5325, 36.3954, 0.52 ) }
    dend_61 { pt3dadd( -43.7441, 43.8352, 36.2986, 1.33 ) }
    dend_61 { pt3dadd( -42.9756, 42.4862, 36.1313, 0.07 ) }
    dend_61 { pt3dadd( -42.5853, 41.7515, 36.0187, 0.07 ) }
    dend_61 { pt3dadd( -42.2529, 41.1264, 35.9521, 0.37 ) }
    dend_61 { pt3dadd( -41.6453, 40.1074, 35.9689, 0.07 ) }
    dend_61 { pt3dadd( -41.4477, 39.8084, 36.0154, 0.15 ) }
    dend_61 { pt3dadd( -40.5207, 38.4796, 36.4122, 0.15 ) }
    dend_61 { pt3dadd( -40.2899, 38.1756, 36.55, 0.74 ) }
    dend_61 { pt3dadd( -39.78, 37.5057, 36.9205, 1.25 ) }
    dend_61 { pt3dadd( -38.5739, 35.8727, 37.9711, 0.15 ) }
    dend_61 { pt3dadd( -37.8855, 34.9117, 38.6614, 0.15 ) }
    dend_61 { pt3dadd( -37.5817, 34.4784, 38.9814, 0.15 ) }
    dend_61 { pt3dadd( -37.22, 33.9322, 39.3761, 0.15 ) }
    dend_61 { pt3dadd( -36.7922, 33.2099, 39.8447, 1.25 ) }
    dend_61 { pt3dadd( -36.153, 31.8912, 40.5665, 0.07 ) }
    dend_61 { pt3dadd( -35.9377, 31.3216, 40.8242, 0.96 ) }
    dend_61 { pt3dadd( -35.7716, 30.8042, 41.0203, 1.25 ) }
    dend_61 { pt3dadd( -35.2345, 29.0448, 41.6188, 0.15 ) }
    dend_61 { pt3dadd( -35.0159, 28.307, 41.8347, 0.96 ) }
    dend_61 { pt3dadd( -34.5838, 26.8864, 42.1841, 0.07 ) }
    dend_61 { pt3dadd( -34.3708, 26.2, 42.3197, 0.29 ) }
    dend_61 { pt3dadd( -33.7446, 24.1654, 42.6463, 0.07 ) }
    dend_61 { pt3dadd( -33.6056, 23.712, 42.707, 0.29 ) }
    dend_61 { pt3dadd( -33.162, 22.2885, 42.855, 0.07 ) }
    dend_61 { pt3dadd( -32.9396, 21.6373, 42.9094, 1.03 ) }
    dend_61 { pt3dadd( -32.6997, 21.0098, 42.9563, 1.47 ) }
    dend_61 { pt3dadd( -31.7511, 18.7901, 43.1294, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_61 { pt3dadd( -31.5056, 18.2854, 43.1742, 0.59 ) }
    dend_61 { pt3dadd( -31.1457, 17.5882, 43.2502, 0.07 ) }
    dend_61 { pt3dadd( -30.7995, 16.9378, 43.3542, 0.07 ) }
    dend_61 { pt3dadd( -30.3284, 16.0687, 43.5296, 0.07 ) }
    dend_61 { pt3dadd( -29.9253, 15.2981, 43.7265, 1.18 ) }
    dend_61 { pt3dadd( -28.9136, 13.31, 44.3263, 0.07 ) }
    dend_61 { pt3dadd( -28.6522, 12.7303, 44.5121, 0.74 ) }
    dend_61 { pt3dadd( -28.032, 11.1699, 45.0301, 0.07 ) }
    dend_61 { pt3dadd( -27.8796, 10.7189, 45.181, 0.44 ) }
    dend_61 { pt3dadd( -27.4297, 9.17093, 45.7281, 0.07 ) }
    dend_61 { pt3dadd( -27.235, 8.3745, 46.0285, 1.47 ) }
    dend_61 { pt3dadd( -26.9047, 6.72839, 46.679, 0.07 ) }
    dend_61 { pt3dadd( -26.8188, 6.21455, 46.8779, 0.37 ) }
    dend_61 { pt3dadd( -26.6807, 5.17638, 47.261, 0.07 ) }
    dend_61 { pt3dadd( -26.5179, 3.79328, 47.8004, 0.07 ) }
    dend_61 { pt3dadd( -26.4223, 2.9016, 48.1597, 0.07 ) }
    dend_61 { pt3dadd( -26.3619, 2.44205, 48.3564, 0.37 ) }
    dend_61 { pt3dadd( -26.1784, 1.32196, 48.8608, 0.15 ) }
    dend_61 { pt3dadd( -26.0487, 0.636758, 49.1968, 0.81 ) }
    dend_61 { pt3dadd( -25.792, -0.529724, 49.8117, 0.15 ) }
    dend_61 { pt3dadd( -25.5511, -1.46933, 50.3445, 1.55 ) }
    dend_61 { pt3dadd( -25.122, -2.9788, 51.2772, 0.07 ) }
    dend_61 { pt3dadd( -24.9815, -3.41822, 51.5839, 0.66 ) }
    dend_61 { pt3dadd( -24.5293, -4.56929, 52.493, 0.07 ) }
    dend_61 { pt3dadd( -24.3276, -4.95929, 52.8224, 0.29 ) }
    dend_61 { pt3dadd( -23.966, -5.51484, 53.3176, 0.07 ) }
    dend_61 { pt3dadd( -23.7286, -5.84968, 53.6441, 0.74 ) }
    dend_61 { pt3dadd( -23.0865, -6.68513, 54.516, 0.15 ) }
    dend_61 { pt3dadd( -22.4797, -7.39071, 55.2592, 1.18 ) }
    dend_61 { pt3dadd( -21.0925, -8.72542, 56.6609, 0.15 ) }
    dend_61 { pt3dadd( -20.5965, -9.16417, 57.1157, 0.66 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 31/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -80.4816, 104.773, 123.635, 0.07 ) }
    dend_59 { pt3dadd( -81.3479, 103.878, 123.11, 0.07 ) }
    dend_59 { pt3dadd( -81.6486, 103.488, 122.916, 0.07 ) }
    dend_59 { pt3dadd( -81.9548, 103.092, 122.718, 0.22 ) }
    dend_59 { pt3dadd( -82.533, 102.343, 122.345, 0.07 ) }
    dend_59 { pt3dadd( -82.7682, 102.038, 122.193, 0.52 ) }
    dend_59 { pt3dadd( -83.1644, 101.525, 121.937, 0.07 ) }
    dend_59 { pt3dadd( -83.3078, 101.238, 121.849, 0.22 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 39/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -80.4816, 104.773, 123.635, 0.29 ) }
    dend_58 { pt3dadd( -82.1334, 104.941, 126.14, 0.29 ) }
    dend_58 { pt3dadd( -83.4242, 104.884, 127.907, 0.29 ) }
    dend_58 { pt3dadd( -85.0106, 104.736, 129.787, 0.59 ) }
    dend_58 { pt3dadd( -87.2144, 104.561, 132.214, 0.74 ) }
    dend_58 { pt3dadd( -88.3012, 104.526, 133.357, 1.03 ) }
    dend_58 { pt3dadd( -89.5859, 104.611, 134.69, 1.03 ) }
    dend_58 { pt3dadd( -91.2453, 104.854, 136.365, 0.15 ) }
    dend_58 { pt3dadd( -92.5058, 105.26, 137.63, 0.44 ) }
    dend_58 { pt3dadd( -94.0829, 105.941, 139.182, 0.81 ) }
    dend_58 { pt3dadd( -95.0979, 106.568, 140.142, 1.03 ) }
    dend_58 { pt3dadd( -96.8833, 107.971, 141.891, 0.15 ) }
    dend_58 { pt3dadd( -98.3792, 109.471, 143.465, 0.74 ) }
    dend_58 { pt3dadd( -99.7135, 111.278, 145.165, 0.37 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 53/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 13.2086, -16.1529, 6.82143, 0.22 ) }
    dend_55 { pt3dadd( 13.5722, -17.5386, 5.11239, 0.22 ) }
    dend_55 { pt3dadd( 13.7358, -18.181, 4.4654, 0.37 ) }
    dend_55 { pt3dadd( 13.8507, -18.5796, 4.10952, 0.59 ) }
    dend_55 { pt3dadd( 14.063, -19.3165, 3.45157, 0.22 ) }
    dend_55 { pt3dadd( 14.2943, -20.1194, 2.73471, 1.47 ) }
    dend_55 { pt3dadd( 14.5301, -20.9378, 2.00397, 0.29 ) }
    dend_55 { pt3dadd( 14.751, -21.7644, 1.50679, 0.15 ) }
    dend_55 { pt3dadd( 14.9712, -22.5539, 1.11039, 1.03 ) }
    dend_55 { pt3dadd( 16.0473, -28.5572, -4.80465, 1.03 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 63/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 13.2086, -16.1529, 6.82143, 0.22 ) }
    dend_52 { pt3dadd( 13.2998, -17.0319, 7.34805, 0.22 ) }
    dend_52 { pt3dadd( 13.3452, -17.8792, 7.7685, 1.4 ) }
    dend_52 { pt3dadd( 13.3029, -19.2881, 8.31284, 2.65 ) }
    dend_52 { pt3dadd( 12.9473, -22.8622, 9.4417, 0.22 ) }
    dend_52 { pt3dadd( 12.843, -23.5799, 9.62642, 0.22 ) }
    dend_52 { pt3dadd( 12.6427, -24.6882, 9.86002, 0.96 ) }
    dend_52 { pt3dadd( 12.3018, -26.0347, 10.0347, 2.06 ) }
    dend_52 { pt3dadd( 11.6177, -28.1805, 10.1356, 0.22 ) }
    dend_52 { pt3dadd( 11.1474, -29.3788, 10.0394, 0.15 ) }
    dend_52 { pt3dadd( 10.7523, -30.2938, 9.83831, 0.29 ) }
    dend_52 { pt3dadd( 10.3204, -31.2276, 9.60546, 0.15 ) }
    dend_52 { pt3dadd( 9.89621, -32.2201, 9.3443, 1.18 ) }
    dend_52 { pt3dadd( 9.66982, -32.8162, 9.18366, 1.7 ) }
    dend_52 { pt3dadd( 8.80125, -35.4423, 8.48458, 0.22 ) }
    dend_52 { pt3dadd( 8.49517, -36.5167, 8.21925, 0.81 ) }
    dend_52 { pt3dadd( 8.32173, -37.2261, 8.06874, 1.4 ) }
    dend_52 { pt3dadd( 7.81961, -39.6758, 7.64002, 0.15 ) }
    dend_52 { pt3dadd( 7.73268, -40.325, 7.56968, 0.15 ) }
    dend_52 { pt3dadd( 7.66403, -41.6492, 7.51537, 0.15 ) }
    dend_52 { pt3dadd( 7.67102, -42.5202, 7.5355, 0.37 ) }
    dend_52 { pt3dadd( 7.66402, -43.3847, 7.56626, 1.33 ) }
    dend_52 { pt3dadd( 7.60822, -44.3933, 7.59439, 1.84 ) }
    dend_52 { pt3dadd( 7.07253, -47.5628, 7.61612, 0.22 ) }
    dend_52 { pt3dadd( 6.62641, -49.2376, 7.5688, 0.07 ) }
    dend_52 { pt3dadd( 6.42086, -49.9421, 7.54317, 0.96 ) }
    dend_52 { pt3dadd( 5.90237, -51.425, 7.46765, 0.22 ) }
    dend_52 { pt3dadd( 5.40977, -52.5398, 7.37147, 1.33 ) }
    dend_52 { pt3dadd( 4.26908, -54.3859, 7.09717, 0.22 ) }
    dend_52 { pt3dadd( 3.33924, -55.2317, 6.83625, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 93/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.769355, 40.3255, 30.1324, 0.44 ) }
    dend_44 { pt3dadd( -1.8706, 40.5659, 30.1805, 0.44 ) }
    dend_44 { pt3dadd( -2.67365, 40.8514, 30.1408, 0.44 ) }
    dend_44 { pt3dadd( -3.45012, 41.2099, 30.0985, 0.44 ) }
    dend_44 { pt3dadd( -3.78893, 41.3813, 30.0886, 0.44 ) }
    dend_44 { pt3dadd( -4.33213, 41.6614, 30.0724, 0.96 ) }
    dend_44 { pt3dadd( -4.6731, 41.8366, 30.0578, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_44 { pt3dadd( -5.56272, 42.2898, 29.9392, 0.15 ) }
    dend_44 { pt3dadd( -5.99926, 42.5389, 29.8987, 0.15 ) }
    dend_44 { pt3dadd( -6.41563, 42.7755, 29.8969, 0.15 ) }
    dend_44 { pt3dadd( -7.06706, 43.0994, 29.9244, 0.15 ) }
    dend_44 { pt3dadd( -7.44908, 43.2371, 29.9399, 1.33 ) }
    dend_44 { pt3dadd( -8.26431, 43.442, 29.9532, 1.92 ) }
    dend_44 { pt3dadd( -9.73406, 43.6764, 29.9363, 0.22 ) }
    dend_44 { pt3dadd( -10.6968, 43.7591, 29.8836, 0.59 ) }
    dend_44 { pt3dadd( -11.2221, 43.7539, 29.8578, 1.03 ) }
    dend_44 { pt3dadd( -12.5143, 43.6202, 29.8297, 0.15 ) }
    dend_44 { pt3dadd( -13.2593, 43.4749, 29.8396, 0.15 ) }
    dend_44 { pt3dadd( -13.6217, 43.3624, 29.8515, 0.88 ) }
    dend_44 { pt3dadd( -14.3527, 43.0289, 29.8708, 1.92 ) }
    dend_44 { pt3dadd( -15.8997, 42.1782, 29.9279, 0.22 ) }
    dend_44 { pt3dadd( -16.3115, 41.9459, 29.9598, 0.22 ) }
    dend_44 { pt3dadd( -16.8123, 41.6224, 29.9978, 0.22 ) }
    dend_44 { pt3dadd( -17.0964, 41.4383, 30.0147, 0.22 ) }
    dend_44 { pt3dadd( -17.8011, 41.0178, 30.0283, 0.22 ) }
    dend_44 { pt3dadd( -18.3589, 40.7238, 30.012, 1.11 ) }
    dend_44 { pt3dadd( -19.2258, 40.341, 29.923, 2.58 ) }
    dend_44 { pt3dadd( -20.7914, 39.742, 29.718, 0.52 ) }
    dend_44 { pt3dadd( -22.0089, 39.3032, 29.5738, 0.15 ) }
    dend_44 { pt3dadd( -22.5254, 39.1253, 29.5296, 0.15 ) }
    dend_44 { pt3dadd( -23.2545, 38.8982, 29.4957, 0.29 ) }
    dend_44 { pt3dadd( -23.9422, 38.7057, 29.4811, 0.96 ) }
    dend_44 { pt3dadd( -25.0461, 38.4019, 29.4752, 0.22 ) }
    dend_44 { pt3dadd( -25.7779, 38.2367, 29.4954, 0.22 ) }
    dend_44 { pt3dadd( -26.4485, 38.0527, 29.5087, 0.44 ) }
    dend_44 { pt3dadd( -27.175, 37.8184, 29.5462, 1.62 ) }
    dend_44 { pt3dadd( -27.8723, 37.5795, 29.6108, 1.99 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.769355, 40.3255, 30.1324, 1.47 ) }
    dend_41 { pt3dadd( 0.223908, 40.6921, 30.9255, 1.47 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 32/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -15.1186, -141.153, 36.5114, 0.22 ) }
    dend_23 { pt3dadd( -15.0907, -140.467, 36.9192, 0.22 ) }
    dend_23 { pt3dadd( -15.0534, -139.684, 37.3541, 0.22 ) }
    dend_23 { pt3dadd( -15.003, -139.061, 37.6708, 0.22 ) }
    dend_23 { pt3dadd( -14.9257, -138.359, 37.9968, 0.66 ) }
    dend_23 { pt3dadd( -14.8544, -137.831, 38.2404, 0.81 ) }
    dend_23 { pt3dadd( -14.6753, -136.837, 38.6809, 0.15 ) }
    dend_23 { pt3dadd( -14.5315, -136.24, 38.9075, 1.18 ) }
    dend_23 { pt3dadd( -14.3686, -135.653, 39.1062, 1.4 ) }
    dend_23 { pt3dadd( -13.9629, -134.371, 39.5075, 0.15 ) }
    dend_23 { pt3dadd( -13.7972, -133.929, 39.6376, 0.15 ) }
    dend_23 { pt3dadd( -13.4048, -133.063, 39.8935, 1.7 ) }
    dend_23 { pt3dadd( -12.9791, -132.291, 40.1033, 0.22 ) }
    dend_23 { pt3dadd( -12.6175, -131.702, 40.2502, 0.88 ) }
    dend_23 { pt3dadd( -12.3137, -131.237, 40.3585, 0.22 ) }
    dend_23 { pt3dadd( -11.9821, -130.75, 40.4554, 0.07 ) }
    dend_23 { pt3dadd( -11.6018, -130.149, 40.5625, 0.07 ) }
    dend_23 { pt3dadd( -11.112, -129.309, 40.7134, 0.66 ) }
    dend_23 { pt3dadd( -10.6448, -128.426, 40.87, 0.07 ) }
    dend_23 { pt3dadd( -10.4841, -128.084, 40.9332, 0.37 ) }
    dend_23 { pt3dadd( -10.297, -127.629, 41.0169, 0.66 ) }
    dend_23 { pt3dadd( -9.79192, -126.186, 41.2984, 0.07 ) }
    dend_23 { pt3dadd( -9.59943, -125.558, 41.4315, 1.03 ) }
    dend_23 { pt3dadd( -9.30264, -124.387, 41.7031, 0.15 ) }
    dend_23 { pt3dadd( -9.19612, -123.867, 41.8352, 0.88 ) }
    dend_23 { pt3dadd( -9.12202, -123.422, 41.9542, 1.18 ) }
    dend_23 { pt3dadd( -8.96494, -121.981, 42.3633, 0.15 ) }
    dend_23 { pt3dadd( -8.96101, -121.507, 42.5032, 0.15 ) }
    dend_23 { pt3dadd( -9.01652, -120.984, 42.6536, 0.22 ) }
    dend_23 { pt3dadd( -9.12273, -120.597, 42.757, 0.07 ) }
    dend_23 { pt3dadd( -9.30841, -120.139, 42.8548, 0.29 ) }
    dend_23 { pt3dadd( -9.52615, -119.716, 42.9244, 0.07 ) }
    dend_23 { pt3dadd( -9.73324, -119.371, 42.956, 0.59 ) }
    dend_23 { pt3dadd( -10.0915, -118.815, 42.9858, 0.15 ) }
    dend_23 { pt3dadd( -10.5687, -118.098, 43.007, 1.62 ) }
    dend_23 { pt3dadd( -11.0518, -117.373, 43.0216, 0.15 ) }
    dend_23 { pt3dadd( -11.3937, -116.862, 43.0375, 0.29 ) }
    dend_23 { pt3dadd( -11.9431, -116.032, 43.0683, 0.07 ) }
    dend_23 { pt3dadd( -12.346, -115.356, 43.1211, 0.07 ) }
    dend_23 { pt3dadd( -12.5531, -114.969, 43.1658, 0.66 ) }
    dend_23 { pt3dadd( -12.9048, -114.275, 43.2609, 0.15 ) }
    dend_23 { pt3dadd( -13.1671, -113.749, 43.3453, 1.03 ) }
    dend_23 { pt3dadd( -13.4786, -113.139, 43.4672, 1.62 ) }
    dend_23 { pt3dadd( -14.3508, -111.448, 43.9167, 0.07 ) }
    dend_23 { pt3dadd( -14.7317, -110.694, 44.147, 0.59 ) }
    dend_23 { pt3dadd( -15.0052, -110.157, 44.3262, 0.15 ) }
    dend_23 { pt3dadd( -15.3517, -109.467, 44.5678, 0.88 ) }
    dend_23 { pt3dadd( -15.8215, -108.454, 44.9373, 0.15 ) }
    dend_23 { pt3dadd( -16.2535, -107.533, 45.2997, 0.15 ) }
    dend_23 { pt3dadd( -16.6011, -106.81, 45.6107, 1.33 ) }
    dend_23 { pt3dadd( -17.0245, -105.891, 46.0245, 0.15 ) }
    dend_23 { pt3dadd( -17.3337, -105.127, 46.3771, 0.15 ) }
    dend_23 { pt3dadd( -17.5432, -104.46, 46.6702, 1.33 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 85/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -15.1186, -141.153, 36.5114, 0.15 ) }
    dend_22 { pt3dadd( -15.5432, -142.323, 36.6906, 0.15 ) }
    dend_22 { pt3dadd( -15.913, -142.997, 36.9011, 0.15 ) }
    dend_22 { pt3dadd( -16.2459, -143.454, 37.122, 0.15 ) }
    dend_22 { pt3dadd( -16.558, -143.814, 37.3215, 0.74 ) }
    dend_22 { pt3dadd( -17.0778, -144.379, 37.6436, 0.15 ) }
    dend_22 { pt3dadd( -17.4724, -144.823, 37.8934, 1.4 ) }
    dend_22 { pt3dadd( -18.1457, -145.526, 38.393, 0.15 ) }
    dend_22 { pt3dadd( -18.7905, -146.189, 38.8996, 0.66 ) }
    dend_22 { pt3dadd( -19.2698, -146.76, 39.3942, 0.07 ) }
    dend_22 { pt3dadd( -19.4634, -147.037, 39.6896, 0.07 ) }
    dend_22 { pt3dadd( -19.6799, -147.392, 40.0783, 0.29 ) }
    dend_22 { pt3dadd( -19.9905, -148.001, 40.7777, 0.07 ) }
    dend_22 { pt3dadd( -20.1667, -148.499, 41.371, 1.25 ) }
    dend_22 { pt3dadd( -20.3831, -149.446, 42.5857, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_22 { pt3dadd( -20.5347, -150.442, 44.0319, 1.62 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -62.4774, -109.297, -13.7421, 0.59 ) }
    dend_18 { pt3dadd( -64.4628, -108.896, -14.9873, 0.59 ) }
    dend_18 { pt3dadd( -65.0635, -108.738, -15.4181, 0.07 ) }
    dend_18 { pt3dadd( -65.863, -108.501, -16.1045, 0.07 ) }
    dend_18 { pt3dadd( -66.4035, -108.327, -16.621, 0.37 ) }
    dend_18 { pt3dadd( -67.2927, -108.0, -17.5529, 0.07 ) }
    dend_18 { pt3dadd( -67.9538, -107.714, -18.3401, 0.15 ) }
    dend_18 { pt3dadd( -68.7994, -107.311, -19.5982, 1.62 ) }
    dend_18 { pt3dadd( -69.6201, -106.673, -21.4381, 0.22 ) }
    dend_18 { pt3dadd( -69.8307, -106.365, -22.3239, 0.22 ) }
    dend_18 { pt3dadd( -69.9413, -106.094, -23.1144, 0.59 ) }
    dend_18 { pt3dadd( -69.9537, -105.692, -24.2798, 0.59 ) }
    dend_18 { pt3dadd( -69.7955, -105.291, -25.5119, 0.59 ) }
    dend_18 { pt3dadd( -69.2488, -104.85, -27.0671, 1.18 ) }
    dend_18 { pt3dadd( -68.7708, -104.645, -27.8347, 1.18 ) }
    dend_18 { pt3dadd( -73.1281, -100.725, -39.1978, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -62.4774, -109.297, -13.7421, 0.22 ) }
    dend_17 { pt3dadd( -63.2318, -109.802, -14.061, 0.22 ) }
    dend_17 { pt3dadd( -63.6504, -110.071, -14.2443, 0.15 ) }
    dend_17 { pt3dadd( -64.2687, -110.412, -14.5502, 0.15 ) }
    dend_17 { pt3dadd( -64.812, -110.683, -14.8462, 1.25 ) }
    dend_17 { pt3dadd( -65.4382, -110.968, -15.1847, 0.15 ) }
    dend_17 { pt3dadd( -65.9767, -111.194, -15.4612, 0.15 ) }
    dend_17 { pt3dadd( -66.7269, -111.466, -15.8362, 1.62 ) }
    dend_17 { pt3dadd( -67.5625, -111.754, -16.2187, 0.22 ) }
    dend_17 { pt3dadd( -68.0747, -111.943, -16.4483, 0.22 ) }
    dend_17 { pt3dadd( -68.6765, -112.173, -16.7204, 1.33 ) }
    dend_17 { pt3dadd( -69.2698, -112.396, -16.9772, 1.11 ) }
    dend_17 { pt3dadd( -70.2739, -112.762, -17.3772, 0.15 ) }
    dend_17 { pt3dadd( -70.628, -112.898, -17.4996, 0.15 ) }
    dend_17 { pt3dadd( -71.4243, -113.247, -17.7123, 0.15 ) }
    dend_17 { pt3dadd( -71.8813, -113.463, -17.7939, 0.15 ) }
    dend_17 { pt3dadd( -72.3464, -113.7, -17.8125, 0.66 ) }
    dend_17 { pt3dadd( -73.0063, -114.016, -17.6661, 0.07 ) }
    dend_17 { pt3dadd( -73.4083, -114.172, -17.4419, 0.88 ) }
    dend_17 { pt3dadd( -73.9534, -114.302, -17.01, 0.15 ) }
    dend_17 { pt3dadd( -74.5087, -114.353, -16.4928, 0.59 ) }
    dend_17 { pt3dadd( -75.1926, -114.314, -15.7643, 1.4 ) }
    dend_17 { pt3dadd( -76.0927, -114.106, -14.7619, 0.22 ) }
    dend_17 { pt3dadd( -76.7295, -113.842, -14.0201, 1.25 ) }
    dend_17 { pt3dadd( -77.4893, -113.403, -13.0995, 0.44 ) }
    dend_17 { pt3dadd( -77.8931, -113.097, -12.6083, 0.52 ) }
    dend_17 { pt3dadd( -78.3491, -112.661, -12.0278, 1.11 ) }
    dend_17 { pt3dadd( -78.8404, -112.088, -11.3419, 0.37 ) }
    dend_17 { pt3dadd( -79.3707, -111.39, -10.506, 0.07 ) }
    dend_17 { pt3dadd( -79.6573, -111.011, -10.0152, 0.07 ) }
    dend_17 { pt3dadd( -79.8463, -110.748, -9.63617, 0.22 ) }
    dend_17 { pt3dadd( -80.0825, -110.402, -9.06393, 0.96 ) }
    dend_17 { pt3dadd( -80.2786, -110.088, -8.49241, 2.06 ) }
    dend_17 { pt3dadd( -80.604, -109.431, -7.14189, 0.22 ) }
    dend_17 { pt3dadd( -80.7667, -109.019, -6.15244, 0.74 ) }
    dend_17 { pt3dadd( -80.8508, -108.8, -5.455, 0.74 ) }
    dend_17 { pt3dadd( -80.9078, -108.646, -4.69565, 0.74 ) }
    dend_17 { pt3dadd( -80.9122, -108.619, -4.36349, 0.74 ) }
    dend_17 { pt3dadd( -80.8602, -108.635, -3.57586, 0.74 ) }
    dend_17 { pt3dadd( -80.7046, -108.705, -2.76364, 0.74 ) }
    dend_17 { pt3dadd( -80.595, -108.745, -2.2846, 0.74 ) }
    dend_17 { pt3dadd( -80.5348, -108.735, -2.00789, 0.74 ) }
    dend_17 { pt3dadd( -80.3906, -108.566, -1.36132, 0.74 ) }
    dend_17 { pt3dadd( -80.2234, -108.283, -0.830541, 0.74 ) }
    dend_17 { pt3dadd( -79.9012, -107.683, -0.00951958, 0.29 ) }
    dend_17 { pt3dadd( -79.7206, -107.321, 0.402888, 0.29 ) }
    dend_17 { pt3dadd( -79.4541, -106.799, 0.937168, 0.07 ) }
    dend_17 { pt3dadd( -79.2761, -106.475, 1.24817, 0.44 ) }
    dend_17 { pt3dadd( -78.8036, -105.659, 1.97506, 0.07 ) }
    dend_17 { pt3dadd( -78.5195, -105.218, 2.36244, 0.07 ) }
    dend_17 { pt3dadd( -78.23, -104.796, 2.73737, 0.07 ) }
    dend_17 { pt3dadd( -78.0533, -104.558, 2.9583, 0.29 ) }
    dend_17 { pt3dadd( -77.7212, -104.122, 3.35333, 0.07 ) }
    dend_17 { pt3dadd( -77.4497, -103.765, 3.70541, 0.37 ) }
    dend_17 { pt3dadd( -77.1371, -103.389, 4.11608, 0.22 ) }
    dend_17 { pt3dadd( -77.0062, -103.259, 4.29836, 0.81 ) }
    dend_17 { pt3dadd( -76.7672, -103.064, 4.69833, 0.37 ) }
    dend_17 { pt3dadd( -76.4471, -102.862, 5.40972, 0.88 ) }
    dend_17 { pt3dadd( -76.1075, -102.677, 6.29018, 0.88 ) }
    dend_17 { pt3dadd( -75.9873, -102.626, 6.66087, 0.88 ) }
    dend_17 { pt3dadd( -75.7918, -102.568, 7.40035, 0.88 ) }
    dend_17 { pt3dadd( -75.6322, -102.557, 8.05743, 0.88 ) }
    dend_17 { pt3dadd( -75.4109, -102.64, 9.03327, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 80/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 3.33924, -55.2317, 6.83625, 0.29 ) }
    dend_54 { pt3dadd( 2.86881, -56.7709, 7.41913, 0.29 ) }
    dend_54 { pt3dadd( 2.65317, -57.5488, 7.71256, 0.15 ) }
    dend_54 { pt3dadd( 2.46413, -58.3057, 7.99201, 1.03 ) }
    dend_54 { pt3dadd( 2.12549, -59.7313, 8.50315, 0.15 ) }
    dend_54 { pt3dadd( 1.89708, -60.6928, 8.84792, 1.4 ) }
    dend_54 { pt3dadd( 1.37695, -62.8824, 9.633, 0.07 ) }
    dend_54 { pt3dadd( 1.29522, -63.2129, 9.75232, 0.81 ) }
    dend_54 { pt3dadd( 1.04304, -64.3535, 10.1374, 0.07 ) }
    dend_54 { pt3dadd( 0.895271, -65.1792, 10.4129, 1.62 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 90/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 3.33924, -55.2317, 6.83625, 1.92 ) }
    dend_53 { pt3dadd( 2.72748, -55.7389, 7.23582, 1.92 ) }
    dend_53 { pt3dadd( 2.09271, -56.2413, 7.6364, 2.06 ) }
    dend_53 { pt3dadd( 0.612405, -57.2942, 8.51075, 0.22 ) }
    dend_53 { pt3dadd( 0.121844, -57.6221, 8.80075, 0.66 ) }
    dend_53 { pt3dadd( -0.584274, -58.0171, 9.16949, 0.22 ) }
    dend_53 { pt3dadd( -1.10473, -58.2645, 9.40085, 0.96 ) }
    dend_53 { pt3dadd( -1.42233, -58.4001, 9.53564, 1.47 ) }
    dend_53 { pt3dadd( -2.72909, -58.8671, 10.0323, 0.52 ) }
    dend_53 { pt3dadd( -3.49055, -59.0453, 10.2678, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_53 { pt3dadd( -5.05037, -59.376, 10.6806, 0.15 ) }
    dend_53 { pt3dadd( -5.92078, -59.5716, 10.8902, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 2/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -27.8723, 37.5795, 29.6108, 0.07 ) }
    dend_48 { pt3dadd( -29.6204, 38.3235, 29.0484, 0.07 ) }
    dend_48 { pt3dadd( -30.4319, 38.6689, 28.7873, 0.96 ) }
    dend_48 { pt3dadd( -31.5207, 39.1322, 28.4371, 0.07 ) }
    dend_48 { pt3dadd( -32.0956, 39.3769, 28.2521, 0.29 ) }
    dend_48 { pt3dadd( -33.0509, 39.7835, 27.9448, 0.07 ) }
    dend_48 { pt3dadd( -34.0873, 40.2246, 27.6114, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 9/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -27.8723, 37.5795, 29.6108, 0.44 ) }
    dend_45 { pt3dadd( -28.8775, 36.9943, 29.7904, 0.44 ) }
    dend_45 { pt3dadd( -29.7064, 36.4773, 30.0398, 0.96 ) }
    dend_45 { pt3dadd( -30.2998, 36.0994, 30.2699, 0.66 ) }
    dend_45 { pt3dadd( -30.9209, 35.7038, 30.5187, 0.15 ) }
    dend_45 { pt3dadd( -31.2687, 35.4996, 30.6156, 0.15 ) }
    dend_45 { pt3dadd( -31.7896, 35.1987, 30.7299, 0.29 ) }
    dend_45 { pt3dadd( -32.5222, 34.765, 30.864, 0.29 ) }
    dend_45 { pt3dadd( -32.9739, 34.4937, 30.9041, 0.74 ) }
    dend_45 { pt3dadd( -33.5456, 34.1115, 30.9306, 1.62 ) }
    dend_45 { pt3dadd( -34.8938, 33.0979, 30.958, 0.22 ) }
    dend_45 { pt3dadd( -35.4067, 32.6955, 30.9449, 1.18 ) }
    dend_45 { pt3dadd( -35.6877, 32.4768, 30.9198, 1.55 ) }
    dend_45 { pt3dadd( -36.4245, 31.8856, 30.8243, 0.29 ) }
    dend_45 { pt3dadd( -37.072, 31.3438, 30.7526, 0.22 ) }
    dend_45 { pt3dadd( -37.7776, 30.7122, 30.7328, 0.22 ) }
    dend_45 { pt3dadd( -38.2524, 30.2447, 30.7914, 0.22 ) }
    dend_45 { pt3dadd( -38.7072, 29.8307, 30.8706, 0.52 ) }
    dend_45 { pt3dadd( -38.8931, 29.6699, 30.926, 0.52 ) }
    dend_45 { pt3dadd( -39.2824, 29.3562, 31.0944, 0.52 ) }
    dend_45 { pt3dadd( -39.5592, 29.136, 31.2182, 0.52 ) }
    dend_45 { pt3dadd( -39.8696, 28.8556, 31.3487, 0.52 ) }
    dend_45 { pt3dadd( -40.3647, 28.3693, 31.5508, 0.15 ) }
    dend_45 { pt3dadd( -40.6683, 28.047, 31.6737, 0.15 ) }
    dend_45 { pt3dadd( -40.893, 27.7969, 31.7587, 0.44 ) }
    dend_45 { pt3dadd( -41.2565, 27.376, 31.8911, 1.11 ) }
    dend_45 { pt3dadd( -41.8875, 26.5711, 32.0941, 0.15 ) }
    dend_45 { pt3dadd( -42.126, 26.2478, 32.1565, 0.15 ) }
    dend_45 { pt3dadd( -42.6284, 25.5623, 32.2688, 0.22 ) }
    dend_45 { pt3dadd( -43.0164, 25.0127, 32.352, 1.25 ) }
    dend_45 { pt3dadd( -43.3687, 24.4815, 32.4554, 1.99 ) }
    dend_45 { pt3dadd( -44.0994, 23.2653, 32.7653, 0.15 ) }
    dend_45 { pt3dadd( -44.3564, 22.7509, 32.909, 1.03 ) }
    dend_45 { pt3dadd( -44.5786, 22.2206, 33.0787, 1.03 ) }
    dend_45 { pt3dadd( -44.8427, 21.23, 33.4816, 0.15 ) }
    dend_45 { pt3dadd( -44.9249, 20.5523, 33.8155, 0.15 ) }
    dend_45 { pt3dadd( -44.9103, 19.9857, 34.1333, 0.15 ) }
    dend_45 { pt3dadd( -44.7993, 19.3785, 34.5167, 0.81 ) }
    dend_45 { pt3dadd( -44.6522, 18.7607, 34.884, 1.33 ) }
    dend_45 { pt3dadd( -44.3415, 17.4988, 35.5236, 0.15 ) }
    dend_45 { pt3dadd( -44.2699, 17.0528, 35.6855, 1.25 ) }
    dend_45 { pt3dadd( -44.2228, 16.1684, 35.8867, 0.29 ) }
    dend_45 { pt3dadd( -44.2743, 15.1907, 35.986, 0.22 ) }
    dend_45 { pt3dadd( -44.3766, 14.4575, 35.9778, 0.15 ) }
    dend_45 { pt3dadd( -44.5481, 13.6304, 35.8563, 1.77 ) }
    dend_45 { pt3dadd( -44.9616, 12.0217, 35.4137, 0.07 ) }
    dend_45 { pt3dadd( -45.0929, 11.5498, 35.2502, 0.81 ) }
    dend_45 { pt3dadd( -45.3496, 10.73, 34.9131, 0.07 ) }
    dend_45 { pt3dadd( -45.5823, 10.0538, 34.6033, 0.96 ) }
    dend_45 { pt3dadd( -45.7924, 9.42616, 34.2982, 2.06 ) }
    dend_45 { pt3dadd( -46.2519, 7.94917, 33.5886, 0.07 ) }
    dend_45 { pt3dadd( -46.4562, 7.23022, 33.2618, 0.22 ) }
    dend_45 { pt3dadd( -46.7199, 6.40044, 32.9096, 0.15 ) }
    dend_45 { pt3dadd( -46.964, 5.72193, 32.6423, 1.47 ) }
    dend_45 { pt3dadd( -47.2628, 4.98709, 32.3497, 0.66 ) }
    dend_45 { pt3dadd( -47.594, 4.26507, 32.0409, 0.66 ) }
    dend_45 { pt3dadd( -47.8261, 3.81984, 31.8418, 1.77 ) }
    dend_45 { pt3dadd( -48.3362, 2.8794, 31.4113, 0.07 ) }
    dend_45 { pt3dadd( -48.49, 2.62215, 31.2861, 0.22 ) }
    dend_45 { pt3dadd( -48.8526, 2.07553, 31.0013, 0.22 ) }
    dend_45 { pt3dadd( -49.1864, 1.63274, 30.7498, 1.55 ) }
    dend_45 { pt3dadd( -49.8897, 0.788224, 30.2031, 0.15 ) }
    dend_45 { pt3dadd( -50.2031, 0.42495, 29.9354, 0.59 ) }
    dend_45 { pt3dadd( -50.5738, -0.0230061, 29.5793, 0.15 ) }
    dend_45 { pt3dadd( -50.8706, -0.396799, 29.2772, 0.15 ) }
    dend_45 { pt3dadd( -51.1336, -0.739157, 28.9985, 0.74 ) }
    dend_45 { pt3dadd( -51.4409, -1.15715, 28.6441, 1.25 ) }
    dend_45 { pt3dadd( -52.0186, -1.88919, 27.9658, 0.07 ) }
    dend_45 { pt3dadd( -52.341, -2.28612, 27.5907, 0.15 ) }
    dend_45 { pt3dadd( -52.6364, -2.6266, 27.2813, 0.74 ) }
    dend_45 { pt3dadd( -52.9246, -2.92221, 27.0187, 1.4 ) }
    dend_45 { pt3dadd( -53.4507, -3.40551, 26.6056, 0.15 ) }
    dend_45 { pt3dadd( -54.0103, -3.83043, 26.2634, 0.07 ) }
    dend_45 { pt3dadd( -54.3159, -4.00857, 26.1226, 0.29 ) }
    dend_45 { pt3dadd( -55.1731, -4.38664, 25.7701, 0.07 ) }
    dend_45 { pt3dadd( -55.6227, -4.55764, 25.5998, 0.88 ) }
    dend_45 { pt3dadd( -55.925, -4.6553, 25.491, 1.33 ) }
    dend_45 { pt3dadd( -56.8512, -4.89981, 25.1778, 0.22 ) }
    dend_45 { pt3dadd( -57.463, -5.0554, 24.9743, 0.22 ) }
    dend_45 { pt3dadd( -58.0409, -5.18317, 24.7849, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 0.223908, 40.6921, 30.9255, 0.15 ) }
    dend_43 { pt3dadd( 0.803694, 42.2273, 31.8465, 0.15 ) }
    dend_43 { pt3dadd( 0.97171, 42.7782, 32.2139, 0.22 ) }
    dend_43 { pt3dadd( 1.17764, 43.6841, 32.8808, 0.15 ) }
    dend_43 { pt3dadd( 1.27337, 44.2393, 33.2962, 0.96 ) }
    dend_43 { pt3dadd( 1.37938, 45.007, 33.8638, 0.29 ) }
    dend_43 { pt3dadd( 1.46669, 45.598, 34.3013, 0.29 ) }
    dend_43 { pt3dadd( 1.52467, 46.2784, 34.8408, 0.29 ) }
    dend_43 { pt3dadd( 1.61436, 46.9351, 35.343, 0.29 ) }
    dend_43 { pt3dadd( 1.73623, 47.5539, 35.7987, 1.25 ) }
    dend_43 { pt3dadd( 1.79842, 47.7907, 35.9729, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_43 { pt3dadd( 2.22669, 49.0961, 36.9606, 0.15 ) }
    dend_43 { pt3dadd( 2.63724, 50.0314, 37.6821, 1.33 ) }
    dend_43 { pt3dadd( 3.31622, 51.278, 38.667, 0.07 ) }
    dend_43 { pt3dadd( 3.73882, 51.9049, 39.2005, 0.59 ) }
    dend_43 { pt3dadd( 4.36031, 52.7059, 39.936, 0.15 ) }
    dend_43 { pt3dadd( 4.92898, 53.3975, 40.5915, 1.11 ) }
    dend_43 { pt3dadd( 5.40327, 54.0343, 41.1422, 2.14 ) }
    dend_43 { pt3dadd( 5.64359, 54.4095, 41.4271, 1.84 ) }
    dend_43 { pt3dadd( 6.25185, 55.8695, 42.3083, 0.15 ) }
    dend_43 { pt3dadd( 6.45281, 56.7943, 42.7153, 1.4 ) }
    dend_43 { pt3dadd( 6.50278, 57.5961, 42.9819, 0.96 ) }
    dend_43 { pt3dadd( 6.41909, 59.7341, 43.6291, 0.15 ) }
    dend_43 { pt3dadd( 6.31346, 60.6181, 43.8941, 0.96 ) }
    dend_43 { pt3dadd( 5.95593, 62.4154, 44.489, 0.15 ) }
    dend_43 { pt3dadd( 5.78684, 63.0135, 44.7118, 1.18 ) }
    dend_43 { pt3dadd( 5.43664, 64.1315, 45.2347, 0.15 ) }
    dend_43 { pt3dadd( 5.10769, 65.1935, 45.9014, 0.59 ) }
    dend_43 { pt3dadd( 5.00936, 65.5324, 46.1866, 0.88 ) }
    dend_43 { pt3dadd( 4.7282, 66.6514, 47.2954, 0.22 ) }
    dend_43 { pt3dadd( 4.59343, 67.3713, 48.1053, 0.88 ) }
    dend_43 { pt3dadd( 4.49509, 67.9808, 48.8203, 1.77 ) }
    dend_43 { pt3dadd( 4.37249, 69.1277, 50.1544, 0.29 ) }
    dend_43 { pt3dadd( 4.36809, 69.6845, 50.7933, 0.81 ) }
    dend_43 { pt3dadd( 4.44238, 70.6849, 51.9314, 0.22 ) }
    dend_43 { pt3dadd( 4.55652, 71.4031, 52.7352, 0.37 ) }
    dend_43 { pt3dadd( 4.64156, 71.7808, 53.1523, 0.37 ) }
    dend_43 { pt3dadd( 4.90098, 72.6893, 54.1424, 1.55 ) }
    dend_43 { pt3dadd( 5.32938, 73.8713, 55.3904, 0.07 ) }
    dend_43 { pt3dadd( 5.71046, 74.7988, 56.3198, 0.22 ) }
    dend_43 { pt3dadd( 5.98989, 75.4233, 56.9138, 0.22 ) }
    dend_43 { pt3dadd( 6.24408, 75.9817, 57.426, 0.22 ) }
    dend_43 { pt3dadd( 6.54377, 76.6597, 58.0137, 0.07 ) }
    dend_43 { pt3dadd( 6.79932, 77.2826, 58.5097, 1.11 ) }
    dend_43 { pt3dadd( 6.94675, 77.6453, 58.7677, 1.4 ) }
    dend_43 { pt3dadd( 7.50115, 78.8802, 59.5922, 0.07 ) }
    dend_43 { pt3dadd( 7.85232, 79.6432, 60.0906, 0.74 ) }
    dend_43 { pt3dadd( 8.05682, 80.1319, 60.3986, 0.74 ) }
    dend_43 { pt3dadd( 8.3752, 80.9603, 60.9095, 0.22 ) }
    dend_43 { pt3dadd( 8.74237, 81.946, 61.5067, 0.22 ) }
    dend_43 { pt3dadd( 8.98854, 82.6, 61.8953, 0.96 ) }
    dend_43 { pt3dadd( 9.15472, 83.047, 62.1528, 0.96 ) }
    dend_43 { pt3dadd( 9.75116, 84.762, 63.0998, 0.15 ) }
    dend_43 { pt3dadd( 10.0614, 85.7194, 63.6194, 0.15 ) }
    dend_43 { pt3dadd( 10.1857, 86.1529, 63.8414, 0.22 ) }
    dend_43 { pt3dadd( 10.4701, 87.382, 64.3973, 0.07 ) }
    dend_43 { pt3dadd( 10.5937, 88.0253, 64.6743, 0.07 ) }
    dend_43 { pt3dadd( 10.7582, 89.0827, 65.0955, 0.96 ) }
    dend_43 { pt3dadd( 10.868, 89.9557, 65.416, 0.22 ) }
    dend_43 { pt3dadd( 10.9607, 90.9401, 65.746, 1.25 ) }
    dend_43 { pt3dadd( 11.1171, 93.1051, 66.4432, 0.15 ) }
    dend_43 { pt3dadd( 11.1795, 94.1719, 66.7702, 1.33 ) }
    dend_43 { pt3dadd( 11.2713, 95.8835, 67.2845, 0.15 ) }
    dend_43 { pt3dadd( 11.2923, 96.4192, 67.4483, 0.22 ) }
    dend_43 { pt3dadd( 11.3193, 97.5996, 67.8047, 0.15 ) }
    dend_43 { pt3dadd( 11.3242, 98.4093, 68.0417, 0.81 ) }
    dend_43 { pt3dadd( 11.3233, 98.558, 68.0819, 0.81 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 56/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 0.223908, 40.6921, 30.9255, 0.29 ) }
    dend_42 { pt3dadd( 0.439579, 41.18, 32.2633, 0.29 ) }
    dend_42 { pt3dadd( 0.649876, 41.7366, 33.5372, 0.52 ) }
    dend_42 { pt3dadd( 0.773393, 42.0904, 34.2447, 1.25 ) }
    dend_42 { pt3dadd( 1.01536, 42.7789, 35.5205, 0.15 ) }
    dend_42 { pt3dadd( 1.13245, 43.1, 36.1017, 0.15 ) }
    dend_42 { pt3dadd( 1.21889, 43.3508, 36.5424, 0.15 ) }
    dend_42 { pt3dadd( 1.37481, 43.816, 37.2272, 0.15 ) }
    dend_42 { pt3dadd( 1.51323, 44.1578, 37.7128, 0.81 ) }
    dend_42 { pt3dadd( 1.70503, 44.5895, 38.363, 1.33 ) }
    dend_42 { pt3dadd( 2.02063, 45.2761, 39.457, 0.22 ) }
    dend_42 { pt3dadd( 2.18272, 45.592, 40.049, 0.22 ) }
    dend_42 { pt3dadd( 2.37182, 45.8687, 40.6985, 1.11 ) }
    dend_42 { pt3dadd( 2.52884, 46.0497, 41.223, 1.7 ) }
    dend_42 { pt3dadd( 2.82286, 46.3697, 42.1926, 0.22 ) }
    dend_42 { pt3dadd( 2.97198, 46.5242, 42.6915, 0.88 ) }
    dend_42 { pt3dadd( 3.26454, 46.7656, 43.6232, 0.15 ) }
    dend_42 { pt3dadd( 3.43319, 46.858, 44.1302, 0.29 ) }
    dend_42 { pt3dadd( 3.57544, 46.9046, 44.5752, 0.29 ) }
    dend_42 { pt3dadd( 3.74886, 46.9585, 45.1615, 0.15 ) }
    dend_42 { pt3dadd( 3.92894, 47.0441, 45.8483, 0.15 ) }
    dend_42 { pt3dadd( 4.06564, 47.1436, 46.4114, 0.96 ) }
    dend_42 { pt3dadd( 4.22218, 47.2833, 47.11, 0.66 ) }
    dend_42 { pt3dadd( 4.3928, 47.3636, 48.0649, 0.15 ) }
    dend_42 { pt3dadd( 4.49366, 47.3917, 48.7155, 0.15 ) }
    dend_42 { pt3dadd( 4.60528, 47.4242, 49.6137, 0.81 ) }
    dend_42 { pt3dadd( 4.74484, 47.5064, 50.9785, 2.14 ) }
    dend_42 { pt3dadd( 4.80407, 47.5688, 51.6856, 2.14 ) }
    dend_42 { pt3dadd( 4.99629, 47.8406, 53.7709, 0.15 ) }
    dend_42 { pt3dadd( 5.07875, 47.9442, 54.5071, 0.15 ) }
    dend_42 { pt3dadd( 5.21314, 48.0684, 55.577, 0.29 ) }
    dend_42 { pt3dadd( 5.31239, 48.1342, 56.3193, 1.33 ) }
    dend_42 { pt3dadd( 5.39966, 48.1954, 56.9538, 1.62 ) }
    dend_42 { pt3dadd( 5.59136, 48.3735, 58.192, 0.15 ) }
    dend_42 { pt3dadd( 5.65628, 48.4857, 58.6172, 0.15 ) }
    dend_42 { pt3dadd( 5.74467, 48.6629, 59.2884, 0.15 ) }
    dend_42 { pt3dadd( 5.78482, 48.7686, 59.6825, 0.15 ) }
    dend_42 { pt3dadd( 5.81206, 48.8877, 60.2007, 0.29 ) }
    dend_42 { pt3dadd( 5.79193, 49.0438, 61.0076, 0.66 ) }
    dend_42 { pt3dadd( 5.67498, 49.2752, 62.1623, 0.15 ) }
    dend_42 { pt3dadd( 5.58845, 49.4484, 62.8078, 0.15 ) }
    dend_42 { pt3dadd( 5.51509, 49.6267, 63.3123, 0.15 ) }
    dend_42 { pt3dadd( 5.42879, 49.9124, 63.916, 0.66 ) }
    dend_42 { pt3dadd( 5.25172, 50.5896, 65.0719, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_42 { pt3dadd( 5.15436, 51.0816, 65.7968, 0.22 ) }
    dend_42 { pt3dadd( 5.087, 51.5359, 66.4304, 1.33 ) }
    dend_42 { pt3dadd( 5.0243, 52.1002, 67.19, 1.92 ) }
    dend_42 { pt3dadd( 4.9185, 53.3067, 68.7874, 0.37 ) }
    dend_42 { pt3dadd( 4.86431, 53.9846, 69.6626, 0.22 ) }
    dend_42 { pt3dadd( 4.81007, 54.7311, 70.6096, 0.22 ) }
    dend_42 { pt3dadd( 4.75798, 55.0995, 71.0955, 0.22 ) }
    dend_42 { pt3dadd( 4.65393, 55.4195, 71.5236, 0.22 ) }
    dend_42 { pt3dadd( 4.47412, 55.7034, 71.9284, 0.22 ) }
    dend_42 { pt3dadd( 4.26354, 55.9263, 72.3035, 0.22 ) }
    dend_42 { pt3dadd( 4.01098, 56.1963, 72.753, 0.52 ) }
    dend_42 { pt3dadd( 3.45263, 56.8991, 73.8027, 1.18 ) }
    dend_42 { pt3dadd( 2.95853, 57.6162, 74.8339, 1.4 ) }
    dend_42 { pt3dadd( 2.23851, 58.8027, 76.5293, 0.81 ) }
    dend_42 { pt3dadd( 1.86842, 59.4854, 77.5818, 0.81 ) }
    dend_42 { pt3dadd( 1.51915, 60.1823, 78.8078, 1.7 ) }
    dend_42 { pt3dadd( 1.01546, 61.3046, 81.1206, 0.29 ) }
    dend_42 { pt3dadd( 0.833883, 61.8091, 82.3087, 0.29 ) }
    dend_42 { pt3dadd( 0.770673, 62.0669, 82.9679, 1.03 ) }
    dend_42 { pt3dadd( 0.680005, 62.612, 84.3767, 0.22 ) }
    dend_42 { pt3dadd( 0.612943, 63.0476, 85.5135, 1.11 ) }
    dend_42 { pt3dadd( 0.520006, 63.4968, 86.8955, 0.29 ) }
    dend_42 { pt3dadd( 0.428675, 63.7334, 87.8187, 0.29 ) }
    dend_42 { pt3dadd( 0.348235, 63.8558, 88.3231, 0.52 ) }
    dend_42 { pt3dadd( 0.131799, 64.0226, 89.1538, 0.52 ) }
    dend_42 { pt3dadd( 0.0294143, 64.0868, 89.4596, 0.52 ) }
    dend_42 { pt3dadd( -0.143005, 64.1556, 89.9303, 0.52 ) }
    dend_42 { pt3dadd( -0.397802, 64.137, 90.7389, 0.52 ) }
    dend_42 { pt3dadd( -0.465635, 64.0464, 91.3429, 0.52 ) }
    dend_42 { pt3dadd( -0.440737, 63.8753, 92.444, 0.22 ) }
    dend_42 { pt3dadd( -0.315296, 63.7719, 93.4052, 0.15 ) }
    dend_42 { pt3dadd( -0.249046, 63.7941, 93.7956, 0.15 ) }
    dend_42 { pt3dadd( -0.0963922, 63.9354, 94.4916, 0.81 ) }
    dend_42 { pt3dadd( 0.213339, 64.3263, 95.7105, 0.29 ) }
    dend_42 { pt3dadd( 0.461374, 64.7118, 96.6271, 0.81 ) }
    dend_42 { pt3dadd( 0.687048, 65.1202, 97.3713, 1.7 ) }
    dend_42 { pt3dadd( 1.24365, 66.2744, 99.1623, 0.22 ) }
    dend_42 { pt3dadd( 1.55331, 66.959, 100.059, 0.44 ) }
    dend_42 { pt3dadd( 1.71884, 67.3707, 100.455, 0.15 ) }
    dend_42 { pt3dadd( 1.95575, 67.9627, 100.889, 0.88 ) }
    dend_42 { pt3dadd( 2.47182, 69.1963, 101.596, 0.22 ) }
    dend_42 { pt3dadd( 2.74127, 69.7905, 101.894, 0.88 ) }
    dend_42 { pt3dadd( 2.9794, 70.2643, 102.112, 1.47 ) }
    dend_42 { pt3dadd( 3.90662, 72.0969, 102.969, 0.22 ) }
    dend_42 { pt3dadd( 4.12075, 72.4962, 103.169, 0.22 ) }
    dend_42 { pt3dadd( 4.43399, 73.0135, 103.489, 0.37 ) }
    dend_42 { pt3dadd( 5.14302, 74.0557, 104.343, 0.22 ) }
    dend_42 { pt3dadd( 5.43399, 74.4654, 104.756, 0.22 ) }
    dend_42 { pt3dadd( 5.69205, 74.8427, 105.221, 0.96 ) }
    dend_42 { pt3dadd( 5.89829, 75.1226, 105.669, 1.55 ) }
    dend_42 { pt3dadd( 6.50651, 75.9068, 107.118, 0.15 ) }
    dend_42 { pt3dadd( 6.91848, 76.3785, 108.149, 1.25 ) }
    dend_42 { pt3dadd( 7.27936, 76.7846, 109.098, 1.25 ) }
    dend_42 { pt3dadd( 7.68579, 77.2053, 110.192, 0.74 ) }
    dend_42 { pt3dadd( 8.12996, 77.613, 111.469, 0.15 ) }
    dend_42 { pt3dadd( 8.40856, 77.8395, 112.317, 0.29 ) }
    dend_42 { pt3dadd( 8.59411, 77.947, 112.872, 0.29 ) }
    dend_42 { pt3dadd( 8.96305, 78.0431, 113.737, 0.29 ) }
    dend_42 { pt3dadd( 9.38337, 78.0952, 114.548, 0.81 ) }
    dend_42 { pt3dadd( 10.0502, 78.1976, 115.665, 0.15 ) }
    dend_42 { pt3dadd( 10.4379, 78.3007, 116.286, 1.11 ) }
    dend_42 { pt3dadd( 10.6459, 78.3753, 116.606, 1.77 ) }
    dend_42 { pt3dadd( 11.7757, 78.8047, 118.284, 0.22 ) }
    dend_42 { pt3dadd( 12.1935, 78.9378, 118.86, 0.22 ) }
    dend_42 { pt3dadd( 12.7465, 79.1218, 119.558, 0.22 ) }
    dend_42 { pt3dadd( 13.2699, 79.2775, 120.146, 0.22 ) }
    dend_42 { pt3dadd( 13.5576, 79.3708, 120.453, 0.44 ) }
    dend_42 { pt3dadd( 14.1436, 79.5835, 121.058, 0.44 ) }
    dend_42 { pt3dadd( 14.9104, 79.8785, 121.837, 1.55 ) }
    dend_42 { pt3dadd( 15.7179, 80.1316, 122.66, 0.66 ) }
    dend_42 { pt3dadd( 16.7162, 80.3164, 123.717, 0.15 ) }
    dend_42 { pt3dadd( 17.0896, 80.3546, 124.143, 0.15 ) }
    dend_42 { pt3dadd( 17.5231, 80.3785, 124.692, 0.37 ) }
    dend_42 { pt3dadd( 18.1608, 80.3887, 125.577, 0.15 ) }
    dend_42 { pt3dadd( 18.5569, 80.388, 126.19, 0.81 ) }
    dend_42 { pt3dadd( 19.2428, 80.3571, 127.36, 0.22 ) }
    dend_42 { pt3dadd( 19.5913, 80.332, 127.965, 0.22 ) }
    dend_42 { pt3dadd( 19.9659, 80.2923, 128.591, 1.25 ) }
    dend_42 { pt3dadd( 20.1535, 80.2787, 128.888, 1.25 ) }
    dend_42 { pt3dadd( 20.8876, 80.2456, 129.931, 0.07 ) }
    dend_42 { pt3dadd( 21.4005, 80.2392, 130.585, 0.96 ) }
    dend_42 { pt3dadd( 22.4808, 80.243, 131.833, 0.22 ) }
    dend_42 { pt3dadd( 23.0226, 80.2252, 132.428, 1.03 ) }
    dend_42 { pt3dadd( 23.5734, 80.1893, 133.011, 1.77 ) }
    dend_42 { pt3dadd( 24.7056, 80.1327, 134.171, 0.15 ) }
    dend_42 { pt3dadd( 25.3445, 80.101, 134.8, 0.22 ) }
    dend_42 { pt3dadd( 26.106, 80.0739, 135.542, 0.15 ) }
    dend_42 { pt3dadd( 26.6669, 80.0771, 136.096, 1.03 ) }
    dend_42 { pt3dadd( 27.3737, 80.095, 136.807, 0.22 ) }
    dend_42 { pt3dadd( 28.1821, 80.1294, 137.642, 0.22 ) }
    dend_42 { pt3dadd( 29.0355, 80.2164, 138.536, 0.15 ) }
    dend_42 { pt3dadd( 29.6227, 80.2897, 139.147, 0.15 ) }
    dend_42 { pt3dadd( 30.2396, 80.377, 139.797, 0.81 ) }
    dend_42 { pt3dadd( 30.4444, 80.4044, 140.016, 1.77 ) }
    dend_42 { pt3dadd( 31.3199, 80.4743, 140.892, 0.07 ) }
    dend_42 { pt3dadd( 32.0104, 80.4955, 141.516, 0.59 ) }
    dend_42 { pt3dadd( 33.5669, 80.5258, 142.743, 0.22 ) }
    dend_42 { pt3dadd( 33.9114, 80.5265, 142.993, 0.59 ) }
    dend_42 { pt3dadd( 34.5765, 80.5062, 143.451, 0.66 ) }
    dend_42 { pt3dadd( 35.9278, 80.4473, 144.339, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 36.4863, 80.4055, 144.669, 0.07 ) }
    dend_42 { pt3dadd( 36.8371, 80.3569, 144.85, 0.52 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -34.0873, 40.2246, 27.6114, 0.15 ) }
    dend_50 { pt3dadd( -35.0951, 41.0457, 27.4646, 0.15 ) }
    dend_50 { pt3dadd( -35.7225, 41.6998, 27.1741, 0.15 ) }
    dend_50 { pt3dadd( -36.3073, 42.4634, 26.6938, 0.07 ) }
    dend_50 { pt3dadd( -36.5382, 42.8368, 26.3855, 0.07 ) }
    dend_50 { pt3dadd( -36.9748, 43.6488, 25.5687, 0.07 ) }
    dend_50 { pt3dadd( -37.2652, 44.2453, 24.8649, 0.07 ) }
    dend_50 { pt3dadd( -37.3238, 44.5001, 24.4553, 0.07 ) }
    dend_50 { pt3dadd( -37.306, 44.726, 24.0079, 0.29 ) }
    dend_50 { pt3dadd( -37.1893, 45.0198, 23.3108, 0.29 ) }
    dend_50 { pt3dadd( -37.0943, 45.177, 22.8841, 0.29 ) }
    dend_50 { pt3dadd( -36.9963, 45.3147, 22.4827, 0.29 ) }
    dend_50 { pt3dadd( -36.8606, 45.4769, 21.9638, 0.29 ) }
    dend_50 { pt3dadd( -36.6362, 45.7448, 20.9895, 0.22 ) }
    dend_50 { pt3dadd( -36.5112, 45.8991, 20.3034, 0.22 ) }
    dend_50 { pt3dadd( -36.3553, 46.126, 19.1761, 0.88 ) }
    dend_50 { pt3dadd( -36.245, 46.2987, 18.2044, 0.22 ) }
    dend_50 { pt3dadd( -36.2105, 46.3685, 17.7649, 0.22 ) }
    dend_50 { pt3dadd( -36.1789, 46.4669, 17.0632, 0.15 ) }
    dend_50 { pt3dadd( -36.1804, 46.583, 16.2721, 0.15 ) }
    dend_50 { pt3dadd( -36.1816, 46.6991, 15.4705, 0.15 ) }
    dend_50 { pt3dadd( -36.1678, 46.8074, 14.7578, 0.15 ) }
    dend_50 { pt3dadd( -36.1367, 46.9165, 14.152, 0.74 ) }
    dend_50 { pt3dadd( -36.1042, 47.028, 13.6298, 0.74 ) }
    dend_50 { pt3dadd( -36.0256, 47.2052, 12.8302, 0.15 ) }
    dend_50 { pt3dadd( -35.8947, 47.3993, 11.8424, 0.22 ) }
    dend_50 { pt3dadd( -35.8242, 47.4637, 11.4028, 0.22 ) }
    dend_50 { pt3dadd( -35.6659, 47.5326, 10.6658, 0.22 ) }
    dend_50 { pt3dadd( -35.5797, 47.5462, 10.345, 0.22 ) }
    dend_50 { pt3dadd( -35.4052, 47.5409, 9.7557, 0.22 ) }
    dend_50 { pt3dadd( -35.2028, 47.469, 9.16703, 0.22 ) }
    dend_50 { pt3dadd( -35.0399, 47.3677, 8.76281, 0.22 ) }
    dend_50 { pt3dadd( -34.8202, 47.2009, 8.26758, 0.22 ) }
    dend_50 { pt3dadd( -34.609, 47.043, 7.83521, 0.22 ) }
    dend_50 { pt3dadd( -34.3146, 46.814, 7.16634, 0.22 ) }
    dend_50 { pt3dadd( -33.959, 46.4841, 6.23374, 0.44 ) }
    dend_50 { pt3dadd( -33.7722, 46.2583, 5.65239, 0.44 ) }
    dend_50 { pt3dadd( -33.7123, 46.1669, 5.4427, 0.44 ) }
    dend_50 { pt3dadd( -33.5309, 45.8527, 4.82766, 0.44 ) }
    dend_50 { pt3dadd( -33.2875, 45.4771, 4.19872, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 42/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -34.0873, 40.2246, 27.6114, 1.03 ) }
    dend_49 { pt3dadd( -34.678, 40.9046, 27.7826, 1.03 ) }
    dend_49 { pt3dadd( -36.1241, 42.7461, 28.4252, 0.07 ) }
    dend_49 { pt3dadd( -36.6239, 43.4273, 28.7045, 0.07 ) }
    dend_49 { pt3dadd( -36.9776, 44.0325, 28.9613, 0.22 ) }
    dend_49 { pt3dadd( -37.5064, 45.0996, 29.4256, 0.07 ) }
    dend_49 { pt3dadd( -37.8796, 45.9215, 29.7798, 0.37 ) }
    dend_49 { pt3dadd( -38.4555, 47.358, 30.4322, 0.15 ) }
    dend_49 { pt3dadd( -38.8902, 48.6241, 31.0383, 1.33 ) }
    dend_49 { pt3dadd( -39.8666, 51.561, 32.464, 0.07 ) }
    dend_49 { pt3dadd( -40.4438, 53.3263, 33.3359, 0.07 ) }
    dend_49 { pt3dadd( -40.7463, 54.2729, 33.8022, 0.66 ) }
    dend_49 { pt3dadd( -41.0527, 55.3068, 34.2924, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 55/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -58.0409, -5.18317, 24.7849, 0.07 ) }
    dend_47 { pt3dadd( -58.9277, -5.43816, 24.2594, 0.07 ) }
    dend_47 { pt3dadd( -59.4856, -5.59858, 23.9288, 0.37 ) }
    dend_47 { pt3dadd( -60.1147, -5.77945, 23.556, 0.22 ) }
    dend_47 { pt3dadd( -60.7651, -5.96644, 23.1706, 0.88 ) }
    dend_47 { pt3dadd( -61.197, -6.09066, 22.9146, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 61/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -58.0409, -5.18317, 24.7849, 0.07 ) }
    dend_46 { pt3dadd( -57.0755, -2.99051, 25.008, 0.07 ) }
    dend_46 { pt3dadd( -56.6865, -2.10694, 25.0979, 0.44 ) }
    dend_46 { pt3dadd( -56.2309, -1.0722, 25.2032, 0.15 ) }
    dend_46 { pt3dadd( -55.7288, 0.0680309, 25.3192, 0.74 ) }
    dend_46 { pt3dadd( -55.059, 1.58942, 25.474, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_57 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_51 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_19 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_5 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_52 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_23 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_17 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_45 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_10 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_56 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_60 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_49 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_50 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_29 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_47 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_46 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_16 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_53 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_18 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_42 all.append()
    dend_42 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_1 nseg = 3
    dend_0 nseg = 7
    dend_33 nseg = 3
    dend_26 nseg = 5
    dend_14 nseg = 3
    dend_11 nseg = 3
    dend_2 nseg = 5
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_28 nseg = 3
    dend_13 nseg = 9
    dend_12 nseg = 5
    dend_7 nseg = 3
    dend_57 nseg = 7
    dend_51 nseg = 3
    dend_37 nseg = 3
    dend_30 nseg = 7
    dend_24 nseg = 11
    dend_19 nseg = 3
    dend_9 nseg = 9
    dend_8 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 3
    dend_62 nseg = 7
    dend_61 nseg = 3
    dend_52 nseg = 3
    dend_23 nseg = 3
    dend_17 nseg = 3
    dend_45 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_DBC_d99bd73381_0_0


