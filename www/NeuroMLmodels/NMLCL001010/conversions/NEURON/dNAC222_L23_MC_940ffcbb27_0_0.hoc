// Cell: dNAC222_L23_MC_940ffcbb27_0_0
/*
{
  "id" : "dNAC222_L23_MC_940ffcbb27_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.929428, -10.1843, 0.0, 2.57067", "0.915588, -9.18988, 0.0, 4.25055", "0.901748, -8.19544, 0.0, 5.49688", "0.887907, -7.201, 0.0, 6.59994", "0.874067, -6.20655, 0.0, 7.99969", "0.860227, -5.21211, 0.0, 8.62038", "0.846387, -4.21767, 0.0, 9.11744", "0.832547, -3.22322, 0.0, 9.49103", "0.818707, -2.22878, 0.0, 9.78179", "0.804867, -1.23433, 0.0, 10.1499", "0.791026, -0.23989, 0.0, 10.604", "0.777186, 0.754554, 0.0, 10.9247", "0.763346, 1.749, 0.0, 10.8424", "0.749506, 2.74344, 0.0, 10.3834", "0.735666, 3.73789, 0.0, 9.8667", "0.721826, 4.73233, 0.0, 9.53883", "0.707986, 5.72677, 0.0, 9.2152", "0.694145, 6.72122, 0.0, 8.68936", "0.680305, 7.71566, 0.0, 7.9051", "0.666465, 8.7101, 0.0, 6.28575", "0.652625, 9.70455, 0.0, 3.61194" ]
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "2.40038, 9.82365, 5.6, 2.29", "2.40038, 9.82365, 5.6, 2.29", "2.53532, 10.6094, 6.01738, 2.29", "2.88558, 12.6489, 7.10073, 1.61", "3.30246, 15.0763, 8.39014, 1.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999924630446424
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "1.29037, -10.2863, 2.87, 1.15", "1.24003, -10.503, 2.92831, 1.15", "0.737979, -12.4116, 3.54115, 1.15", "0.727604, -12.4581, 3.55636, 1.15", "0.532898, -13.8942, 4.0629, 1.15", "0.418367, -15.6752, 4.75221, 1.15", "0.371829, -17.2377, 5.42898, 1.15", "0.377048, -18.4968, 6.02229, 1.15", "0.41135, -20.0845, 6.866, 1.15", "0.456628, -21.8792, 7.90316, 1.15", "0.529076, -23.4535, 8.8539, 1.15", "0.612746, -25.1472, 9.9153, 1.15", "0.613004, -25.1644, 9.92561, 1.15", "0.47882, -26.8998, 10.8846, 1.15", "0.258135, -28.2172, 11.547, 1.15", "-0.0218662, -29.5346, 12.1059, 1.15", "-0.293938, -30.8708, 12.5929, 1.15", "-0.633923, -32.8654, 13.2322, 0.92", "-0.893697, -34.6523, 13.7524, 0.92", "-1.12705, -36.6301, 14.2612, 0.92", "-1.28945, -38.6332, 14.7239, 0.92", "-1.33537, -40.1429, 15.0526, 0.92", "-1.26197, -42.213, 15.4547, 0.92", "-1.11452, -43.6297, 15.7177, 0.92", "-0.927333, -44.7824, 15.8456, 0.92", "-0.451496, -47.078, 15.9191, 0.92", "0.0772101, -49.2519, 15.8348, 0.92", "0.613356, -51.2525, 15.6786, 0.92", "1.24581, -53.322, 15.4266, 0.92", "2.17148, -56.0275, 15.0008, 0.92", "2.68292, -57.4078, 14.7019, 0.92", "2.70789, -57.47, 14.6816, 0.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999924630446424,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "3.53038, -10.0163, -2.75, 1.83", "3.53038, -10.0163, -2.75, 1.83", "4.14396, -11.6067, -3.29644, 1.83", "4.85467, -13.4489, -3.92939, 1.83", "5.37321, -14.793, -4.39119, 1.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999924630446424
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.14038, 7.18365, -1.38, 1.15", "5.33523, 7.38974, -1.44049, 1.15", "6.78156, 8.91947, -1.88951, 1.15", "8.36453, 10.5938, -2.38096, 1.15", "10.2307, 12.5675, -2.96031, 1.15", "10.2508, 12.5889, -2.96657, 1.15", "10.743, 13.1094, -3.11936, 1.15" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999924630446424
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.02963, 9.53366, -0.5, 1.61", "-2.02963, 9.53366, -0.5, 1.61", "-2.70345, 10.8869, -0.5, 1.61", "-3.62325, 12.734, -0.5, 1.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999924630446424
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.652625, 9.70455, 0.0, 0.923293", "0.443884, 24.7031, 0.0, 0.923293", "0.235142, 39.7016, 0.0, 0.923293" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "3.30246, 15.0763, 8.39014, 0.92", "4.43498, 16.4264, 9.89226, 0.92", "6.04132, 17.9209, 11.5413, 0.92", "6.06217, 17.9359, 11.5568, 0.92", "7.68973, 18.886, 12.5468, 0.92", "9.83373, 20.0658, 13.6266, 0.92", "11.4749, 20.94, 14.3527, 0.92", "13.5564, 22.0178, 15.0762, 0.92", "16.4331, 23.4712, 15.8864, 0.92", "18.5808, 24.5625, 16.447, 0.92", "21.5763, 26.0062, 17.2105, 0.92", "23.9019, 27.088, 17.8208, 0.92", "26.5801, 28.3468, 18.5576, 0.69", "29.2518, 29.6583, 19.3451, 0.69", "31.8228, 30.9699, 20.203, 0.69", "34.7334, 32.4549, 21.2475, 0.69", "34.7762, 32.4731, 21.2657, 0.69" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "3.30246, 15.0763, 8.39014, 0.92", "2.52067, 15.109, 10.5045, 0.92", "1.58379, 15.1192, 13.2621, 0.92", "1.57773, 15.119, 13.2812, 0.92", "1.03953, 15.0814, 15.0284, 0.92", "0.363921, 15.0342, 17.2216, 0.69", "-0.800629, 14.9528, 21.0022, 0.69", "-0.805981, 14.9516, 21.0214, 0.69", "-1.42245, 14.7588, 23.5301, 0.69", "-1.42683, 14.7574, 23.5495, 0.69" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "2.70789, -57.47, 14.6816, 0.69", "0.759523, -58.5168, 13.7746, 0.69", "0.730855, -58.5404, 13.7597, 0.69", "-0.17003, -59.654, 13.2202, 0.69", "-0.188368, -59.6986, 13.2068, 0.69", "-0.572115, -60.7495, 12.9872, 0.69", "-0.640113, -60.9138, 12.9592, 0.69", "-1.02118, -62.0287, 12.832, 0.69", "-1.25512, -62.5951, 12.7132, 0.69", "-1.94606, -64.1104, 12.2831, 0.69", "-2.89747, -65.6701, 11.4831, 0.69", "-3.95852, -67.0149, 10.4401, 0.69", "-4.08071, -67.1521, 10.3191, 0.69", "-5.61951, -68.5492, 8.74567, 0.69", "-5.73997, -68.637, 8.61236, 0.69", "-7.47614, -69.4941, 6.34608, 0.69", "-7.58961, -69.5284, 6.14896, 0.69" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "2.70789, -57.47, 14.6816, 0.69", "3.04198, -58.766, 16.6516, 0.69", "3.4848, -60.484, 19.2629, 0.69", "3.56897, -60.8105, 19.7592, 0.69", "3.76093, -61.5552, 20.8911, 0.69", "3.76374, -61.5661, 20.9077, 0.69" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "5.37321, -14.793, -4.39119, 0.92", "7.27915, -15.9912, -4.98623, 0.92", "9.05176, -17.0824, -5.54313, 0.92", "10.9544, -18.2428, -6.1438, 0.92", "12.9178, -19.3991, -6.78847, 0.92", "14.4314, -20.2906, -7.28548, 0.92", "16.3948, -21.447, -7.93014, 0.92", "17.7686, -22.2097, -8.38843, 0.92", "17.7858, -22.2186, -8.3935, 0.92", "19.662, -23.1146, -8.94267, 0.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "5.37321, -14.793, -4.39119, 0.92", "5.38919, -16.8333, -3.96933, 0.92", "5.31108, -18.4898, -3.43375, 0.92", "5.30579, -18.5553, -3.40961, 0.92", "5.14722, -20.1727, -2.7312, 0.92", "4.96294, -21.7015, -2.07955, 0.92", "4.72322, -23.5119, -1.34686, 0.92", "4.51977, -24.9811, -0.707597, 0.92", "4.49031, -25.1842, -0.613798, 0.92", "4.26776, -26.7477, 0.107498, 0.92", "4.10351, -28.1157, 0.708184, 0.92", "3.91342, -30.2841, 1.53463, 0.92", "3.87969, -31.5271, 1.92729, 0.92", "3.91681, -33.1835, 2.40799, 0.92", "3.91826, -33.2316, 2.42163, 0.92", "3.95948, -35.2334, 2.96119, 0.92", "3.96001, -35.2623, 2.96921, 0.92", "3.92836, -37.5885, 3.56997, 0.92", "3.92688, -37.6178, 3.57642, 0.92", "3.69493, -39.7888, 4.00585, 0.92", "3.41529, -41.2726, 4.3244, 0.92", "3.40715, -41.3007, 4.331, 0.92", "2.75906, -43.1708, 4.78313, 0.92", "2.46351, -43.9536, 4.98198, 0.92", "1.98049, -45.3423, 5.3517, 0.92", "1.5575, -46.8269, 5.70965, 0.92", "1.17717, -48.4044, 6.03386, 0.92", "1.16662, -48.4526, 6.04207, 0.92", "0.770695, -50.5412, 6.33126, 0.92", "0.482491, -52.3158, 6.54352, 0.92", "0.0162802, -55.7263, 6.86947, 0.92", "-0.334, -58.6581, 7.09841, 0.92", "-0.644582, -61.3042, 7.28314, 0.92", "-0.914522, -63.5829, 7.44034, 0.92", "-1.1564, -65.6474, 7.58919, 0.92", "-1.42494, -68.2556, 7.80201, 0.92", "-1.53941, -69.6782, 7.98548, 0.92", "-1.54338, -69.7667, 8.00126, 0.92", "-1.57713, -71.2233, 8.3662, 0.92", "-1.61146, -73.0037, 8.935, 0.92", "-1.61413, -73.0506, 8.95234, 0.92", "-1.80097, -74.7596, 9.6797, 0.92", "-1.80492, -74.7872, 9.69093, 0.92", "-2.12202, -76.6415, 10.4192, 0.92", "-2.13165, -76.689, 10.4313, 0.92", "-2.4988, -78.3728, 10.7022, 0.92", "-3.03155, -80.7637, 10.8124, 0.92", "-3.42149, -82.4813, 10.7021, 0.92", "-3.90532, -84.7219, 10.3677, 0.92", "-4.57708, -88.0456, 9.56197, 0.92", "-4.63293, -88.3189, 9.48252, 0.92", "-5.06376, -90.0906, 8.87371, 0.92", "-5.1071, -90.2233, 8.81889, 0.92", "-5.81711, -92.0283, 8.11839, 0.92", "-5.82464, -92.0459, 8.1125, 0.92", "-6.6635, -94.0624, 7.75395, 0.92", "-7.58048, -96.215, 7.47328, 0.92", "-7.60149, -96.2602, 7.46966, 0.92", "-8.66351, -98.4163, 7.32156, 0.92", "-8.67259, -98.4341, 7.32053, 0.92", "-10.2089, -101.601, 7.14947, 0.92", "-11.0123, -103.424, 7.06118, 0.92", "-11.8592, -105.621, 6.96873, 0.92", "-11.9827, -105.962, 6.95705, 0.92", "-12.56, -107.656, 6.91038, 0.92", "-13.0617, -109.302, 6.86802, 0.92", "-13.4822, -110.979, 6.83231, 0.92", "-13.7096, -112.391, 6.79707, 0.92", "-13.8667, -113.979, 6.75155, 0.92", "-13.9012, -114.271, 6.73879, 0.92", "-14.0618, -115.418, 6.66862, 0.92", "-14.1777, -115.974, 6.62544, 0.92", "-14.5645, -117.375, 6.5007, 0.92", "-14.5735, -117.403, 6.49795, 0.92", "-15.4561, -119.702, 6.26434, 0.92", "-15.4851, -119.766, 6.25816, 0.92", "-16.4919, -121.724, 6.06589, 0.92", "-17.5158, -123.581, 5.88073, 0.92", "-17.5409, -123.624, 5.87642, 0.92", "-18.5836, -125.509, 5.70092, 0.92", "-19.3667, -127.023, 5.57105, 0.92", "-19.4853, -127.302, 5.5456, 0.92", "-19.9362, -128.832, 5.39432, 0.92", "-19.9394, -128.851, 5.39211, 0.92", "-20.0984, -130.294, 5.23106, 0.92", "-20.1152, -130.589, 5.19742, 0.92", "-20.2748, -133.21, 4.90189, 0.92", "-20.4643, -136.054, 4.6021, 0.92", "-20.6665, -138.692, 4.33734, 0.92", "-20.8646, -140.798, 4.13283, 0.92", "-20.8735, -140.867, 4.12654, 0.92", "-21.2407, -143.31, 3.91727, 0.92", "-21.6018, -145.295, 3.75689, 0.92", "-21.9353, -147.053, 3.62253, 0.92", "-21.9412, -147.083, 3.62047, 0.92", "-22.3364, -149.247, 3.45675, 0.69", "-22.5404, -150.418, 3.36559, 0.69", "-22.5456, -150.457, 3.36214, 0.69", "-22.7072, -152.479, 3.18331, 0.69", "-22.7085, -152.529, 3.17899, 0.69", "-22.711, -154.867, 2.98331, 0.69", "-22.7017, -155.16, 2.95886, 0.69", "-22.5952, -157.498, 2.75477, 0.69", "-22.4766, -159.344, 2.57165, 0.69", "-22.4739, -159.364, 2.56946, 0.69", "-22.2017, -160.84, 2.3869, 0.69", "-22.1873, -160.886, 2.37645, 0.69", "-21.5522, -162.512, 1.83567, 0.69", "-21.4532, -162.723, 1.74538, 0.69", "-20.4903, -164.482, 0.824764, 0.69", "-20.4663, -164.52, 0.802802, 0.69", "-19.0789, -166.217, -0.395296, 0.69", "-18.8186, -166.504, -0.623877, 0.69" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "5.37321, -14.793, -4.39119, 0.69", "4.39776, -15.9792, -6.99277, 0.69", "3.70848, -16.7896, -8.82065, 0.69", "2.90354, -17.5895, -10.563, 0.69", "2.8958, -17.5972, -10.5798, 0.69", "2.16505, -18.3233, -12.1616, 0.69", "1.32876, -19.1543, -13.9719, 0.69", "1.32103, -19.1621, -13.9886, 0.69", "-0.319754, -20.3562, -16.863, 0.69" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "10.743, 13.1094, -3.11936, 0.92", "13.0401, 13.4021, -3.22776, 0.92", "15.5314, 13.7068, -3.45285, 0.92", "18.0299, 14.0102, -3.76986, 0.92", "20.3527, 14.3476, -4.09419, 0.92", "22.2457, 14.6485, -4.38391, 0.92", "22.3138, 14.6607, -4.39494, 0.92", "24.3398, 15.0719, -4.81039, 0.92", "26.1561, 15.4391, -5.30948, 0.92", "28.7544, 15.9775, -6.08992, 0.92", "30.563, 16.3534, -6.66237, 0.92", "32.2853, 16.7186, -7.2067, 0.92", "35.0994, 17.3226, -8.09333, 0.92", "38.5489, 18.0834, -9.18685, 0.92" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "10.743, 13.1094, -3.11936, 0.69", "11.686, 15.2875, -3.30868, 0.69", "12.7621, 17.8621, -3.74688, 0.69", "13.7147, 20.2234, -4.35262, 0.69", "13.7464, 20.3036, -4.37849, 0.69", "14.6595, 22.6328, -5.19838, 0.69", "14.6666, 22.6502, -5.2053, 0.69", "15.733, 25.0999, -6.40465, 0.69", "16.6042, 27.1401, -7.53809, 0.69", "17.5258, 29.4049, -8.79483, 0.69", "17.5365, 29.4299, -8.80752, 0.69", "18.6467, 31.9348, -9.98893, 0.69", "18.6544, 31.9518, -9.99627, 0.69", "19.7588, 34.5251, -10.9778, 0.69", "20.872, 37.5163, -12.0824, 0.69", "21.63, 39.8656, -12.9431, 0.69", "21.6367, 39.8932, -12.9528, 0.69", "21.8367, 41.2703, -13.3959, 0.69", "21.977, 42.8127, -13.8923, 0.69", "21.9794, 46.3585, -15.0407, 0.69", "21.9761, 46.4523, -15.0754, 0.69", "21.9319, 49.9382, -16.5478, 0.69", "22.0474, 52.8405, -17.925, 0.69", "22.0497, 52.8671, -17.9387, 0.69", "22.5103, 56.3567, -19.8134, 0.69", "22.9273, 58.9768, -21.2473, 0.69", "23.3656, 61.3009, -22.648, 0.69", "23.787, 63.0321, -23.87, 0.69", "23.8487, 63.2582, -24.0436, 0.69", "24.3735, 65.1183, -25.4986, 0.69", "24.4208, 65.2697, -25.6204, 0.69", "24.8503, 66.5643, -26.5977, 0.69", "25.3672, 68.0434, -27.7988, 0.69", "25.971, 69.5314, -29.1064, 0.69", "25.9803, 69.5523, -29.1257, 0.69", "26.9645, 71.5807, -31.0605, 0.69", "28.4004, 74.5618, -34.0716, 0.69", "29.5244, 76.8465, -36.6125, 0.69", "30.6108, 79.0255, -39.2092, 0.69", "30.6168, 79.0372, -39.2242, 0.69", "31.9064, 81.7662, -42.7797, 0.69", "32.8821, 84.1139, -45.8293, 0.69", "33.8107, 86.8291, -49.159, 0.69", "33.8167, 86.8484, -49.1812, 0.69", "34.5951, 89.7651, -52.2534, 0.69", "35.2547, 92.4869, -54.9049, 0.69", "35.8043, 95.0457, -57.0683, 0.69", "36.3992, 97.961, -59.126, 0.69", "36.4024, 97.978, -59.1361, 0.69", "37.0028, 101.177, -60.8784, 0.69", "37.0063, 101.195, -60.8865, 0.69", "37.7623, 103.964, -62.1432, 0.69", "37.7681, 103.982, -62.1513, 0.69", "38.4235, 105.544, -63.0005, 0.69", "38.5352, 105.782, -63.1447, 0.69", "39.946, 108.479, -65.1408, 0.69", "41.5217, 111.396, -67.5513, 0.69", "41.5289, 111.409, -67.564, 0.69", "42.7669, 113.887, -69.9349, 0.69", "42.7832, 113.921, -69.9682, 0.69", "43.9948, 116.597, -72.4509, 0.69", "44.031, 116.683, -72.5273, 0.69", "45.3347, 120.204, -75.3568, 0.69", "46.2977, 122.992, -77.4361, 0.69", "46.3603, 123.193, -77.5709, 0.69", "47.4875, 127.103, -80.0847, 0.69", "47.5145, 127.203, -80.1451, 0.69", "48.3259, 130.796, -82.4135, 0.69", "48.3333, 130.837, -82.4414, 0.69", "48.6123, 132.835, -83.9254, 0.69", "49.0233, 136.327, -86.6595, 0.69", "49.0261, 136.358, -86.6852, 0.69", "49.3619, 140.148, -89.7626, 0.69", "49.6546, 143.667, -92.5975, 0.69", "49.6607, 143.738, -92.6533, 0.69", "49.9688, 147.254, -95.4045, 0.69", "49.9727, 147.294, -95.4344, 0.69", "50.3366, 150.732, -97.9046, 0.69", "50.35, 150.832, -97.9692, 0.69", "50.6167, 153.072, -99.2661, 0.69", "50.6218, 153.115, -99.2908, 0.69" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.62325, 12.734, -0.5, 0.92", "-4.08436, 14.3712, -0.130853, 0.92", "-4.92474, 16.8729, 0.338066, 0.92", "-5.62774, 18.7997, 0.632658, 0.92", "-6.19483, 20.2934, 0.843359, 0.92", "-7.00416, 22.4252, 1.14406, 0.92", "-7.921, 24.8402, 1.48471, 0.92", "-9.07832, 27.7702, 1.85076, 0.92", "-10.229, 30.6294, 2.0957, 0.92", "-11.2301, 32.9372, 2.26708, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.62325, 12.734, -0.5, 0.92", "-5.12654, 14.0095, -1.38259, 0.92", "-6.81594, 15.3679, -2.34601, 0.92", "-8.66601, 16.8627, -3.38626, 0.92", "-10.7949, 18.6032, -4.44569, 0.92", "-12.5546, 20.0419, -5.32139, 0.92", "-14.4147, 21.5626, -6.24704, 0.92", "-16.3938, 23.1236, -7.2134, 0.92", "-18.1672, 24.4437, -7.96692, 0.92", "-20.2494, 25.969, -8.73011, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "0.235142, 39.7016, 0.0, 0.69", "0.0264011, 54.7002, 0.0, 0.69", "-0.18234, 69.6987, 0.0, 0.69" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "19.662, -23.1146, -8.94267, 0.69", "21.3003, -22.655, -9.49417, 0.69", "23.2517, -22.0794, -10.5165, 0.69", "24.2243, -21.7911, -11.112, 0.69", "24.2487, -21.7839, -11.128, 0.69", "26.1981, -21.1898, -12.4748, 0.69", "27.9622, -20.6448, -13.7302, 0.69", "29.3094, -20.2923, -14.846, 0.69", "30.4127, -20.0204, -15.8628, 0.69", "30.441, -20.0121, -15.8899, 0.69", "31.7337, -19.5612, -17.1541, 0.69", "31.7469, -19.5559, -17.1682, 0.69", "33.5104, -18.8807, -19.0121, 0.69", "33.5234, -18.8753, -19.0264, 0.69", "34.9666, -18.2173, -20.7429, 0.69", "36.1981, -17.6227, -22.3204, 0.69", "37.4506, -16.9791, -24.0479, 0.69", "37.4608, -16.9725, -24.0638, 0.69", "38.5285, -16.1144, -25.9588, 0.69", "38.5366, -16.1065, -25.9753, 0.69", "39.5081, -14.9158, -28.3418, 0.69", "39.5142, -14.9055, -28.3578, 0.69", "40.3576, -13.1635, -30.6353, 0.69", "40.3633, -13.1507, -30.6496, 0.69", "41.3098, -10.9329, -32.7122, 0.69", "41.3287, -10.8891, -32.7486, 0.69", "42.2959, -8.75527, -34.2855, 0.69", "42.3262, -8.69418, -34.3273, 0.69", "43.71, -6.11955, -35.96, 0.69", "45.0451, -3.63826, -37.4003, 0.69", "45.0842, -3.56668, -37.4383, 0.69", "46.3221, -1.30908, -38.5996, 0.69", "46.3752, -1.21315, -38.6483, 0.69", "47.5935, 1.0879, -39.701, 0.69", "48.7761, 3.42846, -40.6589, 0.69", "48.8007, 3.47914, -40.6797, 0.69", "50.0722, 6.14985, -41.8004, 0.69", "50.0842, 6.17455, -41.8125, 0.69", "51.6278, 9.22776, -43.5108, 0.69", "51.6447, 9.25771, -43.5313, 0.69", "53.2251, 11.8521, -45.6506, 0.69", "53.265, 11.9138, -45.7027, 0.69", "54.9605, 14.2604, -47.6903, 0.69", "54.9913, 14.3, -47.7232, 0.69", "56.5735, 16.2936, -49.3609, 0.69", "56.5891, 16.3128, -49.3779, 0.69", "58.8134, 18.9975, -51.8217, 0.69", "60.9347, 21.4843, -53.9781, 0.69", "61.0015, 21.5613, -54.0414, 0.69", "62.9234, 23.7355, -55.6512, 0.69", "66.2264, 27.4442, -57.9863, 0.69", "66.2763, 27.4992, -58.016, 0.69", "68.2712, 29.6566, -59.0513, 0.69", "68.3035, 29.6921, -59.0652, 0.69", "71.7652, 33.5024, -60.3031, 0.69", "74.4123, 36.5462, -61.0476, 0.69", "77.6686, 40.5606, -61.7836, 0.69", "77.6806, 40.5764, -61.7863, 0.69", "79.6561, 43.507, -62.3638, 0.69", "79.682, 43.5488, -62.3724, 0.69", "81.3789, 46.762, -63.1773, 0.69", "81.391, 46.7886, -63.184, 0.69", "82.3634, 49.4057, -63.8338, 0.69", "83.4763, 52.5805, -64.6478, 0.69", "83.5206, 52.7286, -64.6891, 0.69", "84.2548, 55.1409, -65.4024, 0.69" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "19.662, -23.1146, -8.94267, 0.69", "21.472, -24.0575, -9.01157, 0.69", "23.2095, -24.9626, -9.07771, 0.69", "25.1882, -25.9933, -9.15302, 0.69", "27.8999, -27.4059, -9.25624, 0.69", "30.4049, -28.7109, -9.35159, 0.69" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-0.319754, -20.3562, -16.863, 0.69", "-1.92437, -21.9974, -21.9422, 0.69", "-2.18408, -22.2747, -22.7473, 0.69", "-2.45068, -22.548, -23.5688, 0.69", "-2.45953, -22.5569, -23.596, 0.69", "-3.26564, -23.1832, -26.019, 0.69", "-4.07931, -23.7581, -28.3807, 0.69", "-4.08965, -23.7641, -28.4082, 0.69", "-4.91202, -24.1825, -30.6234, 0.69", "-4.91881, -24.1859, -30.6419, 0.69", "-5.86989, -24.5921, -33.079, 0.69", "-6.89822, -24.933, -35.5544, 0.69", "-6.9097, -24.9354, -35.582, 0.69", "-7.65092, -25.0885, -37.4035, 0.69", "-7.65801, -25.0903, -37.4221, 0.69", "-8.48188, -25.3256, -39.7318, 0.69", "-8.50364, -25.3336, -39.7979, 0.69", "-9.44051, -25.6542, -43.1151, 0.69", "-9.46406, -25.6645, -43.2118, 0.69", "-10.1517, -26.0335, -46.2949, 0.69", "-10.1626, -26.0405, -46.3432, 0.69", "-10.9207, -26.5818, -49.727, 0.69", "-11.7073, -27.2391, -53.2496, 0.69", "-12.5061, -28.0082, -56.8342, 0.69", "-13.1178, -28.6768, -59.6687, 0.69", "-13.4851, -29.1308, -61.4307, 0.46", "-13.5046, -29.1565, -61.5254, 0.46", "-13.9357, -29.8235, -63.7005, 0.46", "-13.9556, -29.8576, -63.7924, 0.46", "-14.4821, -30.9853, -66.3579, 0.46", "-14.4953, -31.0356, -66.4661, 0.46" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-0.319754, -20.3562, -16.863, 0.69", "-0.838595, -22.0884, -18.0623, 0.69", "-1.14136, -23.0014, -18.7332, 0.69", "-1.78271, -24.6934, -20.0624, 0.69", "-2.2549, -25.8656, -21.0237, 0.69", "-2.27726, -25.9166, -21.0661, 0.69", "-2.84175, -27.1426, -22.122, 0.69", "-2.85901, -27.1761, -22.1548, 0.69", "-3.64915, -28.2338, -23.2798, 0.69", "-3.72741, -28.3203, -23.3741, 0.69", "-4.3715, -29.0057, -24.1364, 0.69", "-4.61353, -29.2614, -24.4167, 0.69", "-5.33963, -30.0166, -25.2283, 0.69", "-6.05101, -30.7309, -26.001, 0.69", "-7.19144, -31.7826, -27.172, 0.69" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "38.5489, 18.0834, -9.18685, 0.69", "41.0644, 17.7653, -9.18685, 0.69", "42.9191, 17.6102, -9.18685, 0.69", "44.7486, 17.5691, -9.18685, 0.69", "46.665, 17.6083, -9.18685, 0.69", "48.1578, 17.6821, -9.2684, 0.69", "49.7833, 17.774, -9.4099, 0.69", "52.6409, 17.947, -9.73607, 0.69", "55.7109, 18.153, -10.1264, 0.69", "57.1887, 18.2733, -10.3327, 0.69", "60.5429, 18.6094, -10.8459, 0.69", "63.712, 18.9576, -11.3757, 0.69", "66.462, 19.234, -11.8855, 0.69", "69.2088, 19.3859, -12.4608, 0.69" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "38.5489, 18.0834, -9.18685, 0.69", "39.597, 19.6248, -9.18685, 0.69", "40.1504, 20.4386, -9.18685, 0.69" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-11.2301, 32.9372, 2.26708, 0.69", "-13.4766, 33.7597, 1.4922, 0.69", "-14.6206, 34.2011, 1.12662, 0.69", "-14.8853, 34.3043, 1.05013, 0.69", "-17.1541, 35.1204, 0.509076, 0.69", "-17.2004, 35.1361, 0.498687, 0.69", "-19.442, 35.7792, 0.0321165, 0.69", "-19.4612, 35.784, 0.0290148, 0.69", "-21.359, 36.1904, -0.25002, 0.69", "-23.598, 36.6039, -0.621583, 0.69", "-25.8019, 36.9415, -1.01463, 0.69", "-27.3867, 37.1077, -1.29229, 0.69", "-27.4065, 37.1088, -1.2955, 0.69", "-28.5727, 37.1375, -1.49523, 0.69", "-31.1747, 37.2363, -1.97073, 0.69", "-33.6866, 37.3271, -2.44401, 0.69", "-36.0904, 37.4213, -2.88732, 0.69", "-38.5628, 37.5645, -3.35337, 0.69", "-41.5028, 37.7268, -3.90039, 0.69", "-44.0367, 37.8519, -4.36132, 0.69" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-11.2301, 32.9372, 2.26708, 0.92", "-12.0128, 35.1592, 2.18176, 0.92", "-12.9913, 37.6544, 2.19848, 0.92", "-13.7911, 39.6066, 2.45454, 0.92", "-14.7907, 42.0467, 2.7746, 0.69", "-15.7807, 44.4632, 3.09155, 0.69", "-16.5233, 46.276, 3.32933, 0.69", "-17.0261, 47.3392, 3.46396, 0.69", "-18.5547, 50.2644, 4.11518, 0.69" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-20.2494, 25.969, -8.73011, 0.69", "-20.9582, 26.8167, -10.921, 0.69", "-20.9684, 26.827, -10.9473, 0.69", "-21.8292, 27.678, -13.0671, 0.69", "-22.8972, 28.7615, -15.5198, 0.69", "-23.7573, 29.6693, -17.5406, 0.69", "-24.6024, 30.4474, -19.426, 0.69", "-25.4881, 31.0636, -21.1034, 0.69", "-25.6634, 31.1726, -21.4106, 0.69", "-26.659, 31.7422, -22.9669, 0.69", "-28.2327, 32.597, -25.2948, 0.69", "-30.2027, 33.6701, -28.1766, 0.69", "-32.2486, 34.8973, -31.2377, 0.69", "-32.2639, 34.9071, -31.2615, 0.69", "-33.9499, 36.0802, -34.1113, 0.69", "-33.959, 36.0871, -34.1278, 0.69", "-34.9781, 37.0986, -36.3716, 0.69", "-36.0435, 38.6232, -39.5795, 0.69", "-36.0472, 38.6309, -39.5976, 0.69", "-36.5899, 40.0247, -43.1511, 0.69", "-36.5955, 40.0475, -43.217, 0.69", "-36.8349, 41.3015, -47.0729, 0.69", "-36.8359, 41.31, -47.1017, 0.69", "-36.9239, 42.5368, -51.4436, 0.69", "-36.9243, 42.5422, -51.4628, 0.69", "-37.0108, 43.816, -55.9188, 0.69", "-37.0114, 43.8215, -55.9381, 0.69", "-37.2599, 45.2701, -61.1521, 0.69", "-37.4538, 46.3274, -64.8733, 0.69" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-20.2494, 25.969, -8.73011, 0.69", "-21.7142, 27.2483, -10.8367, 0.69", "-22.5721, 28.1411, -12.458, 0.69", "-22.5801, 28.1505, -12.4738, 0.69", "-23.3965, 29.1464, -14.0967, 0.69", "-24.304, 30.2155, -15.7643, 0.69", "-25.7613, 31.7617, -18.3108, 0.69", "-27.061, 33.099, -20.5885, 0.69", "-28.2836, 34.2718, -22.6426, 0.69", "-28.3142, 34.296, -22.688, 0.69", "-29.7516, 35.2141, -24.5697, 0.69", "-31.2273, 36.0208, -26.2335, 0.69", "-33.0289, 36.7882, -27.878, 0.69", "-33.0514, 36.7958, -27.8963, 0.69", "-34.9309, 37.3755, -29.4376, 0.69", "-34.953, 37.3836, -29.4563, 0.69", "-36.9008, 38.2089, -31.1638, 0.69", "-38.4636, 39.0178, -32.4496, 0.69", "-38.4856, 39.0299, -32.466, 0.69", "-39.947, 39.8918, -33.5095, 0.69", "-42.2929, 41.3568, -35.117, 0.69", "-42.3153, 41.3706, -35.1315, 0.69", "-44.1873, 42.5421, -36.4843, 0.46", "-46.4357, 44.0229, -38.1074, 0.46", "-46.4573, 44.0368, -38.1228, 0.46", "-48.6797, 45.4111, -39.6749, 0.46", "-48.7018, 45.4244, -39.6903, 0.46", "-52.2385, 47.5489, -42.4405, 0.46" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "30.4049, -28.7109, -9.35159, 0.69", "32.5532, -29.3558, -7.69349, 0.69", "32.5759, -29.362, -7.67496, 0.69", "35.4207, -30.2115, -5.33628, 0.69", "37.633, -30.9024, -3.49895, 0.69", "39.5854, -31.4526, -1.90854, 0.69", "41.6963, -31.9817, -0.266531, 0.69", "43.3946, -32.4372, 1.05769, 0.69", "44.7602, -32.8094, 2.10193, 0.69", "44.8734, -32.8437, 2.19415, 0.69", "46.952, -33.6073, 4.09857, 0.69", "48.916, -34.4825, 6.14011, 0.69", "50.7669, -35.4031, 8.18163, 0.69", "50.7973, -35.4201, 8.21744, 0.69", "52.5272, -36.4398, 10.4825, 0.69", "54.0646, -37.5815, 12.8126, 0.69", "54.0714, -37.5908, 12.829, 0.69" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "30.4049, -28.7109, -9.35159, 0.69", "31.1219, -29.2082, -9.46772, 0.69", "33.7253, -30.9426, -9.95318, 0.69", "34.9484, -31.7611, -10.2046, 0.69", "36.8344, -33.0313, -10.6319, 0.69", "38.3101, -34.0567, -11.0116, 0.69", "40.5341, -35.5924, -11.6587, 0.69", "42.1259, -36.6377, -12.1783, 0.69", "43.4711, -37.5114, -12.6533, 0.69", "45.152, -38.556, -13.2765, 0.69", "46.8548, -39.5376, -13.9073, 0.69", "48.6987, -40.5565, -14.61, 0.69", "50.9317, -41.8151, -15.4545, 0.69", "53.1973, -43.111, -16.2472, 0.69", "53.2142, -43.1201, -16.2528, 0.69", "55.3955, -44.3678, -16.9729, 0.69", "55.4202, -44.3828, -16.9809, 0.69", "57.4424, -45.7683, -17.6699, 0.69", "59.0459, -47.0031, -18.161, 0.69", "60.7242, -48.3659, -18.6362, 0.69", "62.8858, -50.1644, -19.2442, 0.69", "62.9006, -50.1773, -19.2483, 0.69", "64.5945, -51.6801, -19.6949, 0.69", "66.7669, -53.6904, -20.187, 0.69", "66.7808, -53.7047, -20.1889, 0.69" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-7.19144, -31.7826, -27.172, 0.69", "-7.61223, -32.9866, -28.6417, 0.69", "-7.61763, -32.9979, -28.6573, 0.69", "-8.25615, -34.2315, -30.5477, 0.69", "-8.8991, -35.4322, -32.4734, 0.69", "-9.48588, -36.5891, -34.4062, 0.69", "-10.0842, -37.785, -36.43, 0.69", "-10.7625, -38.9918, -38.5804, 0.69", "-11.2805, -39.9262, -40.2778, 0.69", "-11.2883, -39.9396, -40.3035, 0.69", "-11.8666, -41.0622, -42.4736, 0.69", "-12.1214, -41.7597, -43.7405, 0.69", "-12.1381, -41.8353, -43.869, 0.69", "-12.3088, -42.8816, -45.5656, 0.69", "-12.3281, -43.0038, -45.7605, 0.69", "-12.448, -43.9417, -47.2654, 0.69", "-12.5695, -45.1383, -49.2068, 0.69", "-12.5986, -46.2086, -50.9441, 0.69", "-12.587, -47.5011, -53.0346, 0.69", "-12.5859, -47.5211, -53.0692, 0.69", "-12.5166, -48.5538, -54.7615, 0.69", "-12.5121, -48.6129, -54.8543, 0.69", "-12.3807, -49.8271, -56.6689, 0.69", "-12.3779, -49.8439, -56.6936, 0.69", "-12.0947, -51.1765, -58.7504, 0.69", "-11.7562, -52.4931, -60.9993, 0.69", "-11.7287, -52.5878, -61.1733, 0.69", "-11.2607, -54.1412, -64.0871, 0.69", "-11.2535, -54.1637, -64.1312, 0.69", "-10.8196, -55.3834, -66.5593, 0.69", "-10.1809, -56.858, -69.6032, 0.69", "-10.1706, -56.8755, -69.6489, 0.69" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-7.19144, -31.7826, -27.172, 0.69", "-9.31313, -33.5317, -26.7503, 0.69", "-10.8753, -34.9271, -26.9891, 0.69", "-12.2653, -36.2056, -27.4615, 0.69", "-12.5535, -36.4412, -27.6079, 0.69", "-13.6903, -37.2671, -28.2724, 0.69", "-13.7857, -37.3328, -28.3312, 0.69", "-15.377, -38.2948, -29.6229, 0.69", "-15.4927, -38.3499, -29.7188, 0.69", "-16.9878, -38.9512, -30.7713, 0.69", "-18.9212, -39.6574, -31.8535, 0.69", "-18.9822, -39.6762, -31.8821, 0.69", "-20.8172, -40.2295, -32.6797, 0.69", "-22.7982, -40.8018, -33.4365, 0.69", "-24.5878, -41.3259, -34.0727, 0.69", "-26.7542, -41.9787, -34.7433, 0.69", "-27.4949, -42.1818, -34.9438, 0.69" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "69.2088, 19.3859, -12.4608, 0.69", "71.424, 19.7419, -12.7328, 0.69", "72.8501, 19.9436, -12.9328, 0.69", "74.2626, 20.1477, -13.1392, 0.69", "76.3161, 20.4472, -13.4452, 0.69", "78.5123, 20.7441, -13.7816, 0.69", "81.469, 21.1521, -14.2464, 0.69", "84.1059, 21.468, -14.6764, 0.69", "86.2317, 21.7199, -15.0101, 0.69", "86.2514, 21.7218, -15.0133, 0.69", "87.8808, 21.9315, -15.2735, 0.69", "90.7454, 22.3718, -15.6378, 0.69", "90.7946, 22.3792, -15.6424, 0.69", "92.2742, 22.5895, -15.7283, 0.69", "95.1522, 22.9889, -15.8473, 0.69", "98.04, 23.415, -15.9254, 0.69", "100.463, 23.842, -15.9454, 0.69", "100.512, 23.8504, -15.9449, 0.69", "102.341, 24.1713, -15.9179, 0.69", "102.439, 24.19, -15.9154, 0.69", "104.724, 24.8116, -15.7996, 0.69", "105.614, 25.0202, -15.764, 0.69" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "69.2088, 19.3859, -12.4608, 0.69", "70.3891, 17.4233, -12.6324, 0.69", "70.8734, 16.5868, -12.7218, 0.69", "71.6871, 15.1539, -12.8984, 0.69", "71.7441, 15.0494, -12.9136, 0.69", "72.4437, 13.74, -13.1217, 0.69", "72.4532, 13.7227, -13.1245, 0.69", "72.9388, 12.9843, -13.297, 0.69", "72.9977, 12.9049, -13.3121, 0.69", "73.778, 11.9261, -13.4621, 0.69", "73.7907, 11.9108, -13.4643, 0.69", "74.9251, 10.4719, -13.6609, 0.69", "76.4357, 8.40544, -13.9085, 0.69", "77.5146, 6.88093, -14.0795, 0.69", "77.5429, 6.83982, -14.0825, 0.69", "78.6566, 5.18577, -14.1717, 0.69", "80.1984, 2.89455, -14.3056, 0.69", "81.7498, 0.538826, -14.4551, 0.69", "81.9488, 0.236701, -14.4761, 0.69", "83.8836, -2.50891, -14.6778, 0.69", "83.986, -2.64403, -14.6903, 0.69", "85.5473, -4.52459, -14.9083, 0.69", "85.6567, -4.63917, -14.9309, 0.69", "86.915, -5.86189, -15.2904, 0.69", "86.9549, -5.90363, -15.3066, 0.69", "88.1284, -7.17713, -15.9907, 0.69", "88.1468, -7.19787, -16.0023, 0.69", "89.4999, -8.77299, -16.9662, 0.69", "89.5715, -8.85259, -17.0204, 0.69", "91.3545, -10.703, -18.2952, 0.69", "93.0791, -12.322, -19.4265, 0.69", "93.1003, -12.339, -19.4391, 0.69", "95.2564, -13.9095, -20.64, 0.69", "97.5609, -15.3817, -21.8667, 0.69", "99.9657, -16.7896, -23.1095, 0.69", "103.064, -18.3897, -24.6915, 0.46", "106.04, -19.8445, -26.3339, 0.46", "106.056, -19.852, -26.3433, 0.46", "108.765, -21.0966, -28.1154, 0.46", "108.802, -21.1142, -28.1435, 0.46", "110.887, -22.2117, -30.1228, 0.46", "112.792, -23.4275, -32.3612, 0.46", "112.991, -23.5915, -32.6265, 0.46", "114.582, -25.0892, -34.7128, 0.46", "114.701, -25.2192, -34.8725, 0.46", "115.693, -26.3453, -36.1362, 0.46", "115.744, -26.4056, -36.198, 0.46", "117.043, -27.9074, -37.5424, 0.46", "119.598, -30.7871, -40.0073, 0.46", "119.649, -30.8419, -40.0571, 0.46", "121.967, -33.2684, -42.3582, 0.46", "122.002, -33.3039, -42.392, 0.46", "124.494, -35.8895, -44.9473, 0.46", "124.612, -36.0162, -45.0833, 0.46", "126.394, -37.9979, -47.1215, 0.46", "126.458, -38.0685, -47.1945, 0.46" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "40.1504, 20.4386, -9.18685, 0.46", "39.2873, 23.1253, -8.26564, 0.46", "38.5489, 25.4237, -7.47756, 0.46", "38.5431, 25.4418, -7.47136, 0.46", "37.7597, 27.8802, -6.63527, 0.46" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "40.1504, 20.4386, -9.18685, 0.69", "42.3028, 21.9052, -11.1466, 0.69", "43.9904, 23.055, -12.6832, 0.69" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-44.0367, 37.8519, -4.36132, 0.69", "-47.0284, 38.4204, -3.78349, 0.69", "-49.784, 38.8518, -3.01642, 0.69", "-52.085, 39.212, -2.3759, 0.69", "-54.3478, 39.5663, -1.74599, 0.69", "-55.8815, 39.8064, -1.31906, 0.69", "-58.2863, 40.1828, -0.649652, 0.69", "-60.3349, 40.3451, 0.0644704, 0.69" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-44.0367, 37.8519, -4.36132, 0.69", "-44.5681, 39.9885, -6.09191, 0.69", "-45.0983, 41.8623, -7.53057, 0.69", "-45.103, 41.8778, -7.54223, 0.69", "-45.6982, 43.4411, -8.68835, 0.69", "-46.3251, 44.9268, -9.76729, 0.69", "-46.3364, 44.95, -9.78259, 0.69", "-47.356, 46.4769, -10.6017, 0.69", "-47.3681, 46.4913, -10.6085, 0.69", "-49.174, 48.4677, -11.4681, 0.69", "-49.1944, 48.4882, -11.4759, 0.69", "-51.2969, 50.4407, -12.1248, 0.69", "-54.0929, 52.9465, -12.8637, 0.69", "-55.6437, 54.277, -13.222, 0.69", "-55.6662, 54.2961, -13.2268, 0.69", "-58.0524, 56.2942, -13.6822, 0.69", "-59.862, 57.7859, -14.0221, 0.69", "-63.0734, 60.3338, -14.6092, 0.69", "-63.43, 60.6194, -14.6634, 0.69" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-18.5547, 50.2644, 4.11518, 0.69", "-18.7648, 51.7351, 4.89381, 0.69", "-18.9761, 52.9825, 5.61902, 0.69", "-19.2051, 54.2595, 6.39012, 0.69", "-19.5775, 56.2871, 7.63293, 0.69", "-20.0001, 58.3998, 9.06348, 0.69", "-20.0051, 58.4239, 9.08064, 0.69", "-20.4904, 60.3469, 10.5671, 0.69", "-20.9119, 61.8526, 11.7934, 0.69", "-20.917, 61.8672, 11.806, 0.69", "-22.0191, 63.9944, 14.0266, 0.69", "-22.0411, 64.0146, 14.0667, 0.69", "-22.6262, 64.3074, 15.11, 0.69", "-22.6518, 64.3101, 15.1529, 0.69", "-23.5302, 64.251, 16.5921, 0.69", "-24.6914, 64.0673, 18.4905, 0.69", "-26.6605, 63.4418, 21.6928, 0.69", "-26.6753, 63.4369, 21.7184, 0.69", "-26.9198, 63.3495, 22.1902, 0.46" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-18.5547, 50.2644, 4.11518, 0.46", "-20.6742, 50.2956, 3.38637, 0.46", "-22.4469, 50.3999, 2.65703, 0.46", "-25.9157, 50.7104, 1.01809, 0.46", "-25.9608, 50.7145, 0.9968, 0.46", "-29.5538, 51.0362, -0.70082, 0.46", "-29.5808, 51.0386, -0.713594, 0.46", "-32.288, 51.2942, -2.16729, 0.46", "-33.7281, 51.533, -3.01332, 0.46" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "66.7808, -53.7047, -20.1889, 0.46", "67.5799, -55.5947, -21.238, 0.46", "68.1417, -57.1007, -22.0687, 0.46", "68.1465, -57.1176, -22.0782, 0.46", "68.5414, -58.7049, -22.9775, 0.46", "68.5605, -58.7718, -23.0171, 0.46", "69.1175, -60.5954, -24.1216, 0.46", "69.1492, -60.7041, -24.1856, 0.46", "69.7048, -62.6787, -25.3666, 0.46", "69.7239, -62.7371, -25.4001, 0.46", "70.3279, -64.1001, -26.1545, 0.46", "70.3378, -64.1154, -26.1628, 0.46", "71.4228, -65.4422, -26.8479, 0.46", "71.4722, -65.4985, -26.8762, 0.46", "73.0505, -67.1745, -27.7004, 0.46", "74.7578, -69.0696, -28.5938, 0.46", "76.5965, -71.2084, -29.6776, 0.46", "78.7721, -73.7639, -31.0394, 0.46", "78.8508, -73.8578, -31.0828, 0.46", "81.4032, -76.9933, -32.3405, 0.46", "84.2441, -80.7697, -33.398, 0.46", "86.6148, -84.2659, -33.9779, 0.46", "86.6501, -84.3264, -33.977, 0.46", "88.9713, -88.607, -33.4978, 0.46", "89.1227, -88.9044, -33.4324, 0.46", "90.6414, -92.4908, -31.6132, 0.46", "90.6811, -92.5998, -31.5181, 0.46", "91.5205, -95.1471, -28.7523, 0.46" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "66.7808, -53.7047, -20.1889, 0.46", "68.1508, -53.6447, -19.0389, 0.46" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-27.4949, -42.1818, -34.9438, 0.46", "-29.6202, -44.1344, -37.9947, 0.46", "-29.6303, -44.1443, -38.0089, 0.46", "-31.7432, -46.2227, -40.9195, 0.46", "-31.7532, -46.2333, -40.9332, 0.46", "-33.7241, -48.4737, -43.5402, 0.46", "-33.7442, -48.497, -43.5659, 0.46", "-35.3843, -50.6396, -45.4222, 0.46", "-35.3994, -50.6599, -45.4383, 0.46", "-37.1047, -53.0158, -46.9293, 0.46", "-38.6462, -55.2231, -48.1643, 0.46", "-38.8803, -55.5893, -48.3179, 0.46", "-40.1571, -57.627, -49.0124, 0.46", "-40.1876, -57.6777, -49.0227, 0.46", "-42.4304, -61.5373, -49.3156, 0.46", "-42.4403, -61.5547, -49.315, 0.46", "-44.9606, -66.0794, -48.7285, 0.46", "-44.9754, -66.1049, -48.7229, 0.46", "-46.5069, -68.5213, -47.9773, 0.46", "-48.8309, -71.8392, -46.7689, 0.46", "-49.1534, -72.2878, -46.5924, 0.46", "-51.1566, -75.0481, -45.5809, 0.46", "-52.6383, -77.0638, -44.9222, 0.46", "-55.8338, -81.4614, -43.8625, 0.46", "-58.3649, -85.0045, -43.3266, 0.46", "-60.4275, -87.9507, -43.0546, 0.46", "-62.6212, -91.227, -42.9168, 0.46", "-65.2918, -95.3492, -42.9714, 0.46", "-67.9135, -99.5933, -43.1986, 0.46", "-69.9828, -103.041, -43.4886, 0.46", "-70.0184, -103.101, -43.4948, 0.46", "-72.6819, -107.546, -43.8731, 0.46", "-74.5487, -110.739, -44.0187, 0.46", "-74.9223, -111.381, -44.0102, 0.46", "-77.1668, -114.916, -43.753, 0.46", "-77.5144, -115.39, -43.7026, 0.46", "-79.7944, -118.088, -43.4274, 0.46", "-82.5903, -120.955, -43.1332, 0.46", "-86.0211, -124.251, -42.8447, 0.46", "-89.4755, -127.496, -42.6904, 0.46", "-93.4345, -131.211, -42.7233, 0.46", "-97.3751, -135.007, -43.0679, 0.46", "-99.5024, -137.082, -43.4282, 0.46", "-102.859, -140.556, -44.3174, 0.46", "-105.545, -143.645, -45.3298, 0.46", "-107.843, -146.766, -46.6055, 0.46", "-109.485, -149.485, -47.9476, 0.46", "-109.492, -149.501, -47.9568, 0.46", "-110.381, -151.515, -49.2954, 0.46", "-110.391, -151.537, -49.3132, 0.46", "-111.268, -153.246, -50.8309, 0.46", "-111.278, -153.258, -50.8433, 0.46", "-113.629, -155.317, -53.279, 0.46", "-113.642, -155.326, -53.2914, 0.46", "-116.21, -156.631, -55.5693, 0.46", "-116.253, -156.649, -55.6069, 0.46", "-119.601, -157.832, -58.4461, 0.46", "-122.24, -158.617, -60.7002, 0.46", "-122.322, -158.633, -60.7715, 0.46", "-126.721, -159.307, -64.5505, 0.46", "-126.736, -159.308, -64.5634, 0.46" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-27.4949, -42.1818, -34.9438, 0.69", "-28.8634, -43.6488, -34.4524, 0.69", "-29.9394, -44.9497, -33.9584, 0.69", "-30.8854, -46.142, -33.4901, 0.69", "-31.047, -46.3658, -33.4012, 0.69", "-31.6426, -47.228, -33.0581, 0.69", "-32.728, -48.7991, -32.433, 0.69", "-33.8936, -50.6778, -31.6439, 0.69", "-33.9028, -50.6942, -31.6372, 0.69", "-34.932, -52.5074, -30.8075, 0.69", "-34.9456, -52.5316, -30.7961, 0.69" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "105.614, 25.0202, -15.764, 0.46", "107.476, 26.045, -14.7195, 0.46", "109.55, 27.2249, -13.0947, 0.46", "109.564, 27.2329, -13.0827, 0.46", "111.508, 28.3529, -11.3905, 0.46", "111.528, 28.3649, -11.3724, 0.46", "113.662, 29.594, -9.51538, 0.46", "115.88, 30.9125, -7.2123, 0.46", "115.911, 30.9316, -7.17745, 0.46" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "105.614, 25.0202, -15.764, 0.69", "108.661, 26.1355, -16.7715, 0.69", "109.461, 26.4597, -17.0905, 0.69", "112.642, 27.7826, -18.5284, 0.69", "115.288, 28.8605, -19.8622, 0.69", "115.313, 28.8707, -19.8751, 0.69", "118.111, 29.9206, -21.2871, 0.69", "120.349, 30.7016, -22.4739, 0.69", "122.518, 31.2788, -23.6651, 0.69", "124.678, 31.665, -24.8796, 0.69", "126.399, 31.8197, -25.8624, 0.69", "128.493, 31.91, -27.061, 0.69", "131.142, 31.8648, -28.5818, 0.69", "133.311, 31.7263, -29.7626, 0.69", "133.364, 31.7216, -29.7911, 0.69", "136.163, 31.439, -31.2891, 0.69", "138.617, 31.184, -32.6484, 0.69", "138.634, 31.1827, -32.6586, 0.69", "141.2, 31.0435, -34.1969, 0.69", "141.225, 31.0423, -34.2128, 0.69", "144.268, 30.8055, -36.349, 0.69", "144.307, 30.8013, -36.3794, 0.69", "147.181, 30.3917, -38.7982, 0.69", "147.218, 30.3861, -38.8311, 0.69", "150.33, 29.8934, -41.7599, 0.69", "152.791, 29.4863, -44.1595, 0.69", "152.839, 29.4776, -44.2098, 0.69", "154.956, 29.0816, -46.4207, 0.69", "155.004, 29.0718, -46.4704, 0.69" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "37.7597, 27.8802, -6.63527, 0.46", "35.9913, 29.6178, -5.57414, 0.46", "34.103, 31.7415, -4.0167, 0.46", "32.8021, 33.3177, -2.76841, 0.46", "31.9693, 34.4717, -1.77296, 0.46", "30.8842, 36.0999, -0.305314, 0.46", "30.8753, 36.1133, -0.293313, 0.46", "29.8122, 37.894, 1.72068, 0.46", "29.8067, 37.9055, 1.73605, 0.46", "29.4651, 39.4921, 3.75194, 0.46", "29.4634, 39.5238, 3.79058, 0.46" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "37.7597, 27.8802, -6.63527, 0.46", "37.8876, 29.1124, -5.62784, 0.46", "38.1495, 30.4155, -4.47982, 0.46", "38.727, 32.0567, -3.05174, 0.46", "39.4913, 33.757, -1.61735, 0.46", "39.5198, 33.8145, -1.56955, 0.46", "40.7946, 36.0892, 0.277449, 0.46", "41.8528, 37.7248, 1.64327, 0.46", "42.9903, 39.4068, 3.00736, 0.46", "44.0449, 40.9481, 4.20436, 0.46", "44.0571, 40.9697, 4.22122, 0.46", "44.7783, 42.3086, 5.25895, 0.46", "45.4998, 43.8328, 6.41325, 0.46", "46.1613, 46.0354, 8.09764, 0.46", "46.1631, 46.0507, 8.11037, 0.46", "46.167, 48.7489, 10.4814, 0.46" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "43.9904, 23.055, -12.6832, 0.46", "43.806, 25.98, -12.5327, 0.46", "43.5726, 29.4884, -12.1141, 0.46", "43.3398, 31.5765, -11.7827, 0.46", "43.2715, 32.094, -11.6912, 0.46", "42.7555, 35.1651, -11.0663, 0.46", "42.1484, 38.346, -10.3499, 0.46", "42.1394, 38.3932, -10.3362, 0.46", "41.5062, 41.359, -9.31792, 0.46", "41.5021, 41.3776, -9.31174, 0.46", "40.9895, 43.963, -8.55812, 0.46", "40.4592, 46.8475, -7.88359, 0.46", "40.05, 49.6819, -7.32739, 0.46", "40.0387, 49.7896, -7.30794, 0.46", "39.9713, 51.282, -7.0767, 0.46", "39.9406, 54.1355, -6.64978, 0.46", "39.9418, 54.1651, -6.64466, 0.46", "40.0794, 56.4935, -6.17475, 0.46", "40.2477, 59.025, -5.60303, 0.46", "40.3186, 61.5775, -5.01323, 0.46", "40.3231, 63.6517, -4.50681, 0.46", "40.2899, 66.1279, -3.91565, 0.46", "40.2891, 66.1571, -3.90894, 0.46", "40.1902, 69.8299, -3.11421, 0.46", "40.1112, 73.6723, -2.34581, 0.46", "40.112, 73.7414, -2.33437, 0.46", "40.3053, 77.4434, -1.87103, 0.46", "40.3076, 77.4632, -1.86907, 0.46", "40.6908, 79.3722, -1.65004, 0.46", "41.0608, 80.5767, -1.45817, 0.46", "41.6224, 82.0612, -1.10491, 0.46", "42.1783, 83.6457, -0.641991, 0.46", "42.6171, 85.1893, -0.0147995, 0.46", "42.6246, 85.2334, 0.0074711, 0.46", "42.6761, 87.4215, 1.34027, 0.46", "42.5296, 89.2007, 2.53236, 0.46", "42.5263, 89.2252, 2.54935, 0.46", "42.1482, 91.1579, 3.86421, 0.46", "41.7159, 92.9146, 5.05952, 0.46", "41.455, 94.173, 5.83789, 0.46", "41.4523, 94.1903, 5.84753, 0.46", "41.132, 96.3779, 6.95934, 0.46", "40.8763, 98.321, 7.86062, 0.46", "40.8736, 98.3491, 7.87076, 0.46", "40.7318, 100.584, 8.4609, 0.46", "40.7334, 102.568, 8.90816, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "43.9904, 23.055, -12.6832, 0.69", "45.636, 24.4673, -14.8457, 0.69", "47.1324, 25.775, -16.9632, 0.69", "47.142, 25.785, -16.9776, 0.69", "48.3269, 27.3367, -18.9359, 0.69", "48.3444, 27.3667, -18.9718, 0.69", "49.0622, 28.7824, -20.6264, 0.69", "49.0732, 28.8158, -20.6619, 0.69", "49.4028, 30.2583, -22.0692, 0.69", "49.7589, 32.1809, -23.8286, 0.69", "50.0769, 34.5648, -25.8599, 0.69", "50.0819, 34.6034, -25.8913, 0.69", "50.2985, 36.3708, -27.2469, 0.69", "50.3021, 36.3942, -27.2654, 0.69", "50.4995, 37.4356, -28.1381, 0.69", "50.5115, 37.488, -28.1828, 0.69", "51.0646, 39.4746, -29.8826, 0.69", "51.0714, 39.4972, -29.9012, 0.69", "51.7254, 41.5602, -31.5922, 0.69", "51.8184, 41.8226, -31.7874, 0.69", "52.7362, 44.2165, -33.4515, 0.69", "52.7785, 44.3228, -33.5134, 0.69", "53.837, 46.9701, -34.739, 0.69", "53.8482, 46.9961, -34.7488, 0.69", "55.2451, 50.0377, -35.6634, 0.69", "55.2545, 50.0548, -35.6676, 0.69", "56.4993, 51.9854, -36.7748, 0.69", "57.0446, 52.7504, -37.4381, 0.69", "58.6533, 54.6112, -39.7982, 0.69", "58.7454, 54.7064, -39.948, 0.69", "60.1479, 55.9325, -42.4828, 0.46", "64.78, 59.5595, -51.3635, 0.46", "64.7923, 59.5684, -51.3893, 0.46", "65.8415, 60.2908, -53.7237, 0.46", "65.8531, 60.2988, -53.7502, 0.46", "66.9832, 61.1014, -56.2183, 0.46", "66.9954, 61.1113, -56.2438, 0.46", "69.173, 62.9698, -59.5761, 0.46", "69.2454, 63.0389, -59.6878, 0.46", "71.0212, 65.0513, -62.6491, 0.46", "71.034, 65.0668, -62.6713, 0.46", "72.617, 67.0455, -65.4882, 0.46", "72.6253, 67.0558, -65.5032, 0.46", "73.7941, 68.6224, -67.9429, 0.46", "74.9292, 70.2866, -70.6518, 0.46", "74.9457, 70.3162, -70.7013, 0.46", "75.6081, 71.7921, -73.0571, 0.46", "75.6198, 71.8238, -73.1067, 0.46", "76.2305, 74.3512, -77.1401, 0.46", "76.2337, 74.3775, -77.1825, 0.46", "76.2726, 76.1408, -80.24, 0.46", "76.0048, 77.6617, -83.9191, 0.46", "76.0023, 77.6678, -83.938, 0.46", "75.4503, 78.5784, -87.6362, 0.46", "75.4471, 78.582, -87.6556, 0.46", "75.1522, 78.9843, -90.0714, 0.46", "74.3224, 80.1665, -98.7109, 0.46", "74.3207, 80.1703, -98.7407, 0.46", "74.0587, 81.1458, -105.888, 0.46", "74.0586, 81.1577, -105.967, 0.46", "74.155, 82.178, -111.753, 0.46", "74.1562, 82.1826, -111.772, 0.46", "74.6429, 83.1405, -114.752, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-60.3349, 40.3451, 0.0644704, 0.46", "-62.108, 39.7045, 1.07146, 0.46", "-63.3579, 39.253, 1.78123, 0.46", "-66.3013, 38.1898, 3.45281, 0.46", "-66.3511, 38.1718, 3.48107, 0.46" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-60.3349, 40.3451, 0.0644704, 0.46", "-63.2846, 40.7326, 0.951125, 0.46", "-65.6949, 41.0493, 1.67562, 0.46", "-68.5619, 41.426, 2.5374, 0.46", "-68.5809, 41.4285, 2.54312, 0.46" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-63.43, 60.6194, -14.6634, 0.69", "-65.9422, 62.0375, -14.3109, 0.69", "-69.3881, 64.186, -14.0676, 0.69", "-70.2923, 64.7785, -14.1192, 0.46", "-71.4786, 65.5744, -14.2654, 0.46", "-73.0429, 66.6394, -14.5876, 0.46", "-75.2287, 68.1275, -15.0377, 0.46", "-76.86, 69.2868, -15.5428, 0.46", "-78.8713, 70.9276, -16.572, 0.46", "-78.9061, 70.9568, -16.593, 0.46", "-80.1277, 72.0114, -17.5132, 0.46" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-63.43, 60.6194, -14.6634, 0.69", "-64.3835, 62.0478, -18.516, 0.69", "-64.9979, 63.0232, -21.2564, 0.69", "-65.0055, 63.0364, -21.2934, 0.69", "-65.7088, 64.2484, -24.4628, 0.69", "-65.7135, 64.2556, -24.4808, 0.69", "-66.4834, 65.3999, -27.2697, 0.69", "-66.4971, 65.4173, -27.3146, 0.69", "-67.6181, 66.5667, -30.5602, 0.69", "-68.5111, 67.266, -32.814, 0.69", "-69.0112, 67.5139, -33.8776, 0.69", "-69.0574, 67.531, -33.976, 0.69", "-70.1686, 67.8236, -36.3608, 0.69", "-70.1806, 67.826, -36.3882, 0.69", "-71.2046, 67.9701, -39.1166, 0.69", "-72.0254, 68.0824, -41.6472, 0.69", "-73.1384, 68.3433, -45.7754, 0.69", "-73.8109, 68.5726, -48.5653, 0.69", "-73.8214, 68.5776, -48.614, 0.69", "-74.6843, 69.0399, -52.9658, 0.69", "-74.6893, 69.0433, -52.9952, 0.69", "-75.4052, 69.5904, -57.5138, 0.69", "-75.4085, 69.5926, -57.5334, 0.69", "-76.1876, 70.1094, -62.1556, 0.69", "-76.1928, 70.1127, -62.1849, 0.69", "-76.841, 70.4561, -65.4365, 0.69" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "68.1508, -53.6447, -19.0389, 0.46", "70.5845, -52.3874, -18.0023, 0.46", "72.2239, -51.5404, -17.3041, 0.46", "72.3652, -51.4675, -17.2439, 0.46", "74.93, -50.1425, -16.1516, 0.46", "74.9549, -50.1296, -16.141, 0.46" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "68.1508, -53.6447, -19.0389, 0.46", "69.7478, -54.9908, -18.6467, 0.46", "71.8066, -56.7228, -18.1115, 0.46", "73.5976, -58.1664, -17.6556, 0.46", "74.7154, -59.0523, -17.3518, 0.46", "74.7548, -59.0812, -17.3412, 0.46", "77.7786, -61.2126, -16.5212, 0.46", "80.051, -62.6246, -15.9478, 0.46", "80.8388, -63.0623, -15.7627, 0.46", "83.7116, -64.4671, -15.2024, 0.46", "85.3897, -65.2201, -14.9156, 0.46", "85.4534, -65.2477, -14.907, 0.46", "88.6143, -66.4922, -14.6125, 0.46", "90.2268, -67.0861, -14.5481, 0.46", "91.7611, -67.6837, -14.5279, 0.46", "92.9984, -68.1987, -14.5774, 0.46", "95.5115, -69.3529, -14.7363, 0.46", "97.3832, -70.2716, -14.8844, 0.46", "99.9235, -71.6086, -15.1311, 0.46", "101.801, -72.6539, -15.3472, 0.46", "104.006, -73.8797, -15.5902, 0.46", "104.075, -73.9204, -15.5987, 0.46", "106.182, -75.2673, -15.8776, 0.46", "106.232, -75.3005, -15.8836, 0.46", "108.015, -76.5776, -16.1161, 0.46", "110.071, -78.0868, -16.3697, 0.46", "111.495, -79.1451, -16.5177, 0.46", "113.161, -80.3959, -16.6902, 0.46", "115.871, -82.5098, -16.9342, 0.46", "118.064, -84.2671, -17.1047, 0.46", "119.287, -85.3272, -17.1637, 0.46", "121.023, -86.9371, -17.2139, 0.46", "122.445, -88.3128, -17.2199, 0.46", "123.601, -89.5602, -17.1762, 0.46", "123.62, -89.5829, -17.1738, 0.46", "125.165, -91.5168, -16.8158, 0.46", "125.183, -91.5402, -16.811, 0.46", "125.921, -92.5415, -16.6108, 0.46", "127.311, -94.3856, -16.2779, 0.46", "128.201, -95.5538, -16.0819, 0.46", "129.429, -97.2159, -15.8144, 0.46", "130.53, -98.7729, -15.5954, 0.46", "131.548, -100.424, -15.3849, 0.46", "132.465, -102.185, -15.1979, 0.46", "133.2, -103.595, -15.0667, 0.46", "133.647, -104.374, -15.0049, 0.46", "135.04, -106.511, -14.8103, 0.46", "136.05, -107.978, -14.661, 0.46", "137.81, -110.167, -14.4075, 0.46", "140.65, -113.246, -13.9018, 0.46", "141.878, -114.41, -13.6679, 0.46", "143.707, -115.958, -13.2235, 0.46", "143.73, -115.975, -13.2168, 0.46", "145.226, -116.98, -12.7019, 0.46", "147.657, -118.524, -11.6886, 0.46", "147.672, -118.534, -11.6807, 0.46", "150.084, -120.122, -10.3152, 0.46", "150.099, -120.131, -10.3065, 0.46", "152.035, -121.347, -9.21115, 0.46", "152.058, -121.361, -9.19919, 0.46", "153.12, -121.923, -8.74587, 0.46", "153.186, -121.958, -8.72015, 0.46", "155.55, -123.203, -7.90114, 0.46", "155.592, -123.226, -7.88629, 0.46", "159.193, -125.228, -6.63138, 0.46", "159.209, -125.237, -6.62433, 0.46", "162.166, -126.97, -5.13514, 0.46", "162.182, -126.979, -5.12685, 0.46", "164.612, -128.391, -3.70458, 0.46", "164.687, -128.435, -3.65594, 0.46", "166.96, -129.769, -1.75763, 0.46", "167.081, -129.839, -1.64382, 0.46" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-34.9456, -52.5316, -30.7961, 0.69", "-34.1155, -55.3755, -29.9262, 0.69", "-33.6047, -57.1936, -29.3957, 0.69", "-33.5969, -57.2215, -29.3877, 0.69", "-32.9523, -59.3835, -28.6924, 0.69", "-32.9466, -59.4017, -28.6862, 0.69", "-32.3873, -61.0215, -28.0526, 0.69", "-31.8309, -62.6711, -27.2909, 0.69", "-31.8243, -62.688, -27.2825, 0.69", "-31.0673, -64.3869, -26.3305, 0.69", "-31.0547, -64.4095, -26.3153, 0.69", "-30.1662, -66.0926, -25.1214, 0.69", "-30.1586, -66.1071, -25.11, 0.69", "-29.7941, -66.8823, -24.4906, 0.69", "-29.7781, -66.92, -24.462, 0.69", "-29.2834, -68.3198, -23.5307, 0.69", "-28.867, -69.6191, -22.7395, 0.69", "-28.8299, -69.7486, -22.6734, 0.69", "-28.3649, -71.3462, -21.9046, 0.69", "-28.3592, -71.3637, -21.8966, 0.69", "-27.5584, -73.557, -20.8824, 0.69", "-27.5432, -73.6002, -20.8622, 0.69", "-26.8327, -75.4608, -19.9618, 0.69", "-26.8139, -75.512, -19.9368, 0.69", "-26.2407, -77.2212, -19.1122, 0.69", "-25.9116, -78.256, -18.6097, 0.69", "-25.6455, -79.555, -17.9959, 0.69", "-25.6197, -79.7637, -17.9005, 0.69", "-25.5508, -81.2605, -17.2221, 0.69", "-25.6322, -82.898, -16.4856, 0.69", "-25.6387, -82.9434, -16.4657, 0.69", "-26.1207, -85.4108, -15.3437, 0.69", "-26.1242, -85.4283, -15.3347, 0.69", "-26.399, -86.9207, -14.43, 0.69", "-26.6784, -88.46, -13.3812, 0.69", "-26.6805, -88.4756, -13.3689, 0.69", "-26.8382, -90.1646, -11.8843, 0.69", "-26.9099, -91.7376, -10.3676, 0.69", "-26.9901, -93.5903, -8.46699, 0.69", "-26.9909, -93.6106, -8.44494, 0.69", "-26.9994, -95.2239, -6.56778, 0.69", "-27.008, -96.9487, -4.50152, 0.69", "-27.008, -96.9611, -4.48579, 0.69", "-27.0829, -98.5159, -2.38172, 0.69", "-27.0847, -98.5333, -2.35737, 0.69", "-27.2491, -99.9515, -0.348197, 0.69" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-34.9456, -52.5316, -30.7961, 0.69", "-37.1869, -54.7447, -30.1252, 0.69", "-38.3707, -55.9231, -29.7687, 0.69", "-39.6092, -57.1552, -29.3782, 0.69", "-41.4253, -58.9459, -28.8236, 0.69", "-43.2039, -60.6747, -28.2779, 0.69", "-44.7783, -62.2231, -27.8145, 0.69", "-44.7997, -62.2432, -27.8085, 0.69", "-46.6751, -64.0258, -27.2414, 0.69", "-47.9408, -65.2314, -26.8622, 0.69", "-49.002, -66.2923, -26.5099, 0.69", "-50.6992, -67.9392, -25.9396, 0.69", "-51.6965, -68.9204, -25.5682, 0.69", "-51.71, -68.9341, -25.5625, 0.69", "-53.5338, -70.8194, -24.6444, 0.69", "-54.841, -72.2016, -23.8486, 0.69", "-54.9604, -72.3379, -23.764, 0.69", "-56.0526, -73.6576, -22.862, 0.69", "-56.3009, -73.997, -22.6521, 0.69", "-57.0278, -75.0439, -22.0398, 0.69", "-57.0857, -75.1373, -21.9916, 0.69", "-58.149, -76.9338, -21.3067, 0.69", "-58.1588, -76.9504, -21.3014, 0.69", "-58.911, -78.3022, -20.9439, 0.69", "-59.6277, -79.6367, -20.635, 0.69", "-60.3144, -80.9534, -20.369, 0.69", "-61.305, -82.6944, -19.9956, 0.69", "-61.6451, -83.2048, -19.8793, 0.69", "-62.566, -84.4436, -19.4715, 0.69", "-62.5955, -84.4794, -19.4527, 0.69", "-63.0346, -84.984, -19.1543, 0.69", "-63.9532, -85.9549, -18.4795, 0.69", "-65.5145, -87.5131, -17.244, 0.69", "-67.3078, -89.1793, -15.7904, 0.69", "-68.7777, -90.4344, -14.5832, 0.46" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "155.004, 29.0718, -46.4704, 0.46", "157.172, 29.5524, -47.175, 0.46", "157.191, 29.5562, -47.1809, 0.46", "160.124, 30.0557, -48.2695, 0.46", "160.179, 30.0643, -48.2917, 0.46", "163.781, 30.6242, -49.7423, 0.46", "168.023, 31.2834, -51.4505, 0.46", "168.151, 31.2983, -51.5059, 0.46", "170.916, 31.62, -52.6673, 0.46", "171.083, 31.6395, -52.732, 0.46" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "155.004, 29.0718, -46.4704, 0.69", "156.501, 28.5849, -48.8731, 0.69", "156.643, 28.5285, -49.1195, 0.69", "157.954, 27.7676, -51.6984, 0.69", "157.97, 27.7559, -51.733, 0.69", "159.387, 26.2751, -55.2326, 0.69", "159.922, 25.5856, -56.6963, 0.69", "159.93, 25.5611, -56.739, 0.69", "160.15, 24.3931, -58.4894, 0.69", "160.149, 24.2122, -58.716, 0.69", "160.046, 22.4779, -60.6449, 0.69", "160.04, 22.4265, -60.692, 0.69", "159.879, 21.0717, -61.9851, 0.69", "159.871, 20.8653, -62.1742, 0.69", "159.91, 19.5256, -63.3818, 0.69", "159.916, 19.4819, -63.4224, 0.69", "160.393, 17.7891, -65.0276, 0.69", "160.422, 17.7226, -65.0965, 0.69", "161.316, 16.2007, -66.7893, 0.69", "161.421, 16.0565, -66.9641, 0.69", "162.492, 14.8172, -68.5824, 0.69", "162.538, 14.7704, -68.6446, 0.69", "164.109, 13.3236, -70.6593, 0.69", "164.15, 13.286, -70.717, 0.69", "165.912, 11.6836, -73.4074, 0.69", "165.926, 11.6705, -73.4305, 0.69", "167.185, 10.4841, -75.6273, 0.69", "167.251, 10.42, -75.7458, 0.69", "169.053, 8.56394, -79.1827, 0.69", "169.061, 8.55553, -79.199, 0.69", "169.996, 7.54875, -81.3913, 0.69", "170.006, 7.5378, -81.4173, 0.69" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "40.7334, 102.568, 8.90816, 0.46", "41.8766, 103.538, 8.91938, 0.46", "43.4298, 104.506, 8.9315, 0.46", "45.712, 105.691, 8.94602, 0.46", "45.7746, 105.722, 8.945, 0.46", "48.1835, 106.903, 8.88237, 0.46", "51.6077, 108.475, 8.77513, 0.46", "53.6843, 109.29, 8.69666, 0.46", "55.816, 109.978, 8.6064, 0.46", "57.8322, 110.553, 8.54285, 0.46", "57.8609, 110.561, 8.5423, 0.46", "59.3082, 110.944, 8.53998, 0.46", "60.6838, 111.375, 8.57035, 0.46", "63.2791, 112.274, 8.70521, 0.46", "65.5689, 113.051, 8.87614, 0.46", "65.9163, 113.155, 8.9064, 0.46", "68.5925, 113.98, 9.14335, 0.46", "72.5161, 115.247, 9.50409, 0.46", "75.298, 116.111, 9.76334, 0.46", "75.3456, 116.126, 9.76763, 0.46", "78.2713, 116.902, 9.97526, 0.46" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "40.7334, 102.568, 8.90816, 0.23", "40.1502, 105.041, 7.6978, 0.23", "39.7486, 106.876, 6.92946, 0.23", "39.7377, 106.924, 6.91879, 0.23", "39.1903, 109.096, 7.34695, 0.23", "39.183, 109.128, 7.36973, 0.23", "38.9041, 110.426, 8.50402, 0.23", "38.892, 110.488, 8.58155, 0.23", "38.6644, 111.781, 10.4222, 0.23", "38.3046, 113.233, 12.6495, 0.23", "37.8592, 114.78, 15.0751, 0.23", "37.8563, 114.792, 15.0912, 0.23", "37.6213, 115.84, 16.4085, 0.23", "37.6191, 115.853, 16.4234, 0.23", "37.4406, 117.423, 17.9626, 0.23", "37.2885, 119.214, 19.3833, 0.23", "37.246, 120.822, 20.4915, 0.23", "37.2488, 120.887, 20.5383, 0.23", "37.3166, 121.72, 21.1234, 0.23", "37.3525, 122.023, 21.3333, 0.23", "37.7627, 124.129, 22.7631, 0.23", "38.195, 126.265, 24.3365, 0.23", "38.5345, 128.19, 25.8649, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "78.2713, 116.902, 9.97526, 0.46", "80.0491, 117.406, 10.6057, 0.46", "82.3686, 118.09, 11.346, 0.46", "84.716, 118.693, 11.9904, 0.46", "87.9376, 119.459, 12.7004, 0.46", "87.976, 119.469, 12.707, 0.46", "89.7336, 119.906, 12.9679, 0.46", "91.156, 120.26, 13.1109, 0.46", "93.2411, 120.719, 13.2122, 0.46", "96.2824, 121.372, 13.2758, 0.23", "99.383, 122.14, 13.2734, 0.23", "100.426, 122.394, 13.2924, 0.23", "101.819, 122.767, 13.273, 0.23", "103.582, 123.253, 13.2046, 0.23", "104.7, 123.601, 13.1318, 0.23", "106.303, 124.145, 12.9622, 0.23", "108.808, 124.999, 12.6448, 0.23", "112.201, 126.039, 12.2171, 0.23", "112.22, 126.044, 12.2148, 0.23", "113.35, 126.339, 12.0917, 0.23", "116.904, 127.132, 11.7538, 0.23", "119.62, 127.612, 11.5473, 0.23", "122.391, 128.003, 11.3158, 0.23", "125.134, 128.22, 11.0968, 0.23", "126.822, 128.3, 10.9291, 0.23", "129.324, 128.266, 10.6239, 0.23", "132.764, 127.985, 10.1178, 0.23", "135.868, 127.55, 9.50705, 0.23", "137.918, 127.149, 8.99696, 0.23", "138.038, 127.118, 8.95845, 0.23", "140.111, 126.368, 8.04095, 0.23", "140.214, 126.319, 7.97888, 0.23", "141.545, 125.486, 6.69874, 0.23", "141.556, 125.479, 6.68413, 0.23", "142.665, 124.808, 5.084, 0.23", "143.905, 124.103, 3.12818, 0.23", "143.928, 124.091, 3.0852, 0.23", "145.499, 123.321, -0.111397, 0.23", "145.581, 123.282, -0.312114, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "78.2713, 116.902, 9.97526, 0.46", "78.4778, 116.649, 9.54009, 0.46", "79.8153, 115.308, 7.16365, 0.46", "82.0792, 113.213, 3.39773, 0.46", "82.0938, 113.202, 3.37403, 0.46", "83.8306, 111.974, 0.551592, 0.46", "83.8474, 111.965, 0.528126, 0.46", "85.2546, 111.429, -1.36205, 0.46", "85.2668, 111.427, -1.37772, 0.46", "88.277, 111.104, -4.67931, 0.46", "88.4601, 111.089, -4.87722, 0.46", "91.6378, 110.96, -8.24014, 0.46", "91.6588, 110.959, -8.2615, 0.46", "94.5832, 110.696, -11.1695, 0.46", "94.696, 110.684, -11.2678, 0.46", "98.0697, 110.317, -13.8858, 0.46", "98.1092, 110.312, -13.9161, 0.46", "101.657, 109.687, -16.6366, 0.46", "101.762, 109.669, -16.7113, 0.46", "106.042, 108.909, -19.2887, 0.46", "106.189, 108.886, -19.3704, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_59", "dend_56", "dend_36", "dend_15", "dend_0", "dend_61", "dend_60", "dend_58", "dend_57", "dend_47", "dend_46", "dend_37", "dend_17", "dend_16", "dend_4", "dend_1", "dend_55", "dend_48", "dend_45", "dend_38", "dend_29", "dend_18", "dend_8", "dend_5", "dend_3", "dend_2", "dend_54", "dend_49", "dend_44", "dend_39", "dend_31", "dend_30", "dend_26", "dend_19", "dend_12", "dend_9", "dend_7", "dend_6", "dend_53", "dend_50", "dend_43", "dend_40", "dend_35", "dend_32", "dend_28", "dend_27", "dend_21", "dend_20", "dend_14", "dend_13", "dend_11", "dend_10", "dend_52", "dend_51", "dend_42", "dend_41", "dend_34", "dend_33", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_59", "dend_56", "dend_36", "dend_15", "dend_0", "dend_61", "dend_60", "dend_58", "dend_57", "dend_47", "dend_46", "dend_37", "dend_17", "dend_16", "dend_4", "dend_1", "dend_55", "dend_48", "dend_45", "dend_38", "dend_29", "dend_18", "dend_8", "dend_5", "dend_3", "dend_2", "dend_54", "dend_49", "dend_44", "dend_39", "dend_31", "dend_30", "dend_26", "dend_19", "dend_12", "dend_9", "dend_7", "dend_6", "dend_53", "dend_50", "dend_43", "dend_40", "dend_35", "dend_32", "dend_28", "dend_27", "dend_21", "dend_20", "dend_14", "dend_13", "dend_11", "dend_10", "dend_52", "dend_51", "dend_42", "dend_41", "dend_34", "dend_33", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_36", "dend_36", "dend_36", "dend_36", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_MC_940ffcbb27_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_59, id: dend_59, parent: soma_0
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_47, id: dend_47, parent: dend_36
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_36
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_55, id: dend_55, parent: dend_47
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_37
create dend_45
public dend_45
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_29, id: dend_29, parent: dend_17
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_38
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_18
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_59, dend_56, dend_36, dend_15, dend_0, dend_61, dend_60, dend_58, dend_57, dend_47, dend_46, dend_37, dend_17, dend_16, dend_4, dend_1, dend_55, dend_48, dend_45, dend_38, dend_29, dend_18, dend_8, dend_5, dend_3, dend_2, dend_54, dend_49, dend_44, dend_39, dend_31, dend_30, dend_26, dend_19, dend_12, dend_9, dend_7, dend_6, dend_53, dend_50, dend_43, dend_40, dend_35, dend_32, dend_28, dend_27, dend_21, dend_20, dend_14, dend_13, dend_11, dend_10, dend_52, dend_51, dend_42, dend_41, dend_34, dend_33, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_59, dend_56, dend_36, dend_15, dend_0, dend_61, dend_60, dend_58, dend_57, dend_47, dend_46, dend_37, dend_17, dend_16, dend_4, dend_1, dend_55, dend_48, dend_45, dend_38, dend_29, dend_18, dend_8, dend_5, dend_3, dend_2, dend_54, dend_49, dend_44, dend_39, dend_31, dend_30, dend_26, dend_19, dend_12, dend_9, dend_7, dend_6, dend_53, dend_50, dend_43, dend_40, dend_35, dend_32, dend_28, dend_27, dend_21, dend_20, dend_14, dend_13, dend_11, dend_10, dend_52, dend_51, dend_42, dend_41, dend_34, dend_33, dend_23, dend_22, dend_25, dend_24]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_36, dend_36, dend_36, dend_36, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, axon_0, axon_0, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_59(0), soma_0(0.49999924630446424)
    connect dend_56(0), soma_0(0.49999924630446424)
    connect dend_36(0), soma_0(0.49999924630446424)
    connect dend_15(0), soma_0(0.49999924630446424)
    connect dend_0(0), soma_0(0.49999924630446424)
    connect axon_0(0), soma_0(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_47(0), dend_36(1.0)
    connect dend_46(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_55(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_45(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_29(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_44(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.929428, -10.1843, 0.0, 2.57067 ) }
    soma_0 { pt3dadd( 0.915588, -9.18988, 0.0, 4.25055 ) }
    soma_0 { pt3dadd( 0.901748, -8.19544, 0.0, 5.49688 ) }
    soma_0 { pt3dadd( 0.887907, -7.201, 0.0, 6.59994 ) }
    soma_0 { pt3dadd( 0.874067, -6.20655, 0.0, 7.99969 ) }
    soma_0 { pt3dadd( 0.860227, -5.21211, 0.0, 8.62038 ) }
    soma_0 { pt3dadd( 0.846387, -4.21767, 0.0, 9.11744 ) }
    soma_0 { pt3dadd( 0.832547, -3.22322, 0.0, 9.49103 ) }
    soma_0 { pt3dadd( 0.818707, -2.22878, 0.0, 9.78179 ) }
    soma_0 { pt3dadd( 0.804867, -1.23433, 0.0, 10.1499 ) }
    soma_0 { pt3dadd( 0.791026, -0.23989, 0.0, 10.604 ) }
    soma_0 { pt3dadd( 0.777186, 0.754554, 0.0, 10.9247 ) }
    soma_0 { pt3dadd( 0.763346, 1.749, 0.0, 10.8424 ) }
    soma_0 { pt3dadd( 0.749506, 2.74344, 0.0, 10.3834 ) }
    soma_0 { pt3dadd( 0.735666, 3.73789, 0.0, 9.8667 ) }
    soma_0 { pt3dadd( 0.721826, 4.73233, 0.0, 9.53883 ) }
    soma_0 { pt3dadd( 0.707986, 5.72677, 0.0, 9.2152 ) }
    soma_0 { pt3dadd( 0.694145, 6.72122, 0.0, 8.68936 ) }
    soma_0 { pt3dadd( 0.680305, 7.71566, 0.0, 7.9051 ) }
    soma_0 { pt3dadd( 0.666465, 8.7101, 0.0, 6.28575 ) }
    soma_0 { pt3dadd( 0.652625, 9.70455, 0.0, 3.61194 ) }
    // Section: dend_59, id: dend_59, parent: soma_0 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 2.40038, 9.82365, 5.6, 2.29 ) }
    dend_59 { pt3dadd( 2.40038, 9.82365, 5.6, 2.29 ) }
    dend_59 { pt3dadd( 2.53532, 10.6094, 6.01738, 2.29 ) }
    dend_59 { pt3dadd( 2.88558, 12.6489, 7.10073, 1.61 ) }
    dend_59 { pt3dadd( 3.30246, 15.0763, 8.39014, 1.61 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 26/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 1.29037, -10.2863, 2.87, 1.15 ) }
    dend_56 { pt3dadd( 1.24003, -10.503, 2.92831, 1.15 ) }
    dend_56 { pt3dadd( 0.737979, -12.4116, 3.54115, 1.15 ) }
    dend_56 { pt3dadd( 0.727604, -12.4581, 3.55636, 1.15 ) }
    dend_56 { pt3dadd( 0.532898, -13.8942, 4.0629, 1.15 ) }
    dend_56 { pt3dadd( 0.418367, -15.6752, 4.75221, 1.15 ) }
    dend_56 { pt3dadd( 0.371829, -17.2377, 5.42898, 1.15 ) }
    dend_56 { pt3dadd( 0.377048, -18.4968, 6.02229, 1.15 ) }
    dend_56 { pt3dadd( 0.41135, -20.0845, 6.866, 1.15 ) }
    dend_56 { pt3dadd( 0.456628, -21.8792, 7.90316, 1.15 ) }
    dend_56 { pt3dadd( 0.529076, -23.4535, 8.8539, 1.15 ) }
    dend_56 { pt3dadd( 0.612746, -25.1472, 9.9153, 1.15 ) }
    dend_56 { pt3dadd( 0.613004, -25.1644, 9.92561, 1.15 ) }
    dend_56 { pt3dadd( 0.47882, -26.8998, 10.8846, 1.15 ) }
    dend_56 { pt3dadd( 0.258135, -28.2172, 11.547, 1.15 ) }
    dend_56 { pt3dadd( -0.0218662, -29.5346, 12.1059, 1.15 ) }
    dend_56 { pt3dadd( -0.293938, -30.8708, 12.5929, 1.15 ) }
    dend_56 { pt3dadd( -0.633923, -32.8654, 13.2322, 0.92 ) }
    dend_56 { pt3dadd( -0.893697, -34.6523, 13.7524, 0.92 ) }
    dend_56 { pt3dadd( -1.12705, -36.6301, 14.2612, 0.92 ) }
    dend_56 { pt3dadd( -1.28945, -38.6332, 14.7239, 0.92 ) }
    dend_56 { pt3dadd( -1.33537, -40.1429, 15.0526, 0.92 ) }
    dend_56 { pt3dadd( -1.26197, -42.213, 15.4547, 0.92 ) }
    dend_56 { pt3dadd( -1.11452, -43.6297, 15.7177, 0.92 ) }
    dend_56 { pt3dadd( -0.927333, -44.7824, 15.8456, 0.92 ) }
    dend_56 { pt3dadd( -0.451496, -47.078, 15.9191, 0.92 ) }
    dend_56 { pt3dadd( 0.0772101, -49.2519, 15.8348, 0.92 ) }
    dend_56 { pt3dadd( 0.613356, -51.2525, 15.6786, 0.92 ) }
    dend_56 { pt3dadd( 1.24581, -53.322, 15.4266, 0.92 ) }
    dend_56 { pt3dadd( 2.17148, -56.0275, 15.0008, 0.92 ) }
    dend_56 { pt3dadd( 2.68292, -57.4078, 14.7019, 0.92 ) }
    dend_56 { pt3dadd( 2.70789, -57.47, 14.6816, 0.92 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 3.53038, -10.0163, -2.75, 1.83 ) }
    dend_36 { pt3dadd( 3.53038, -10.0163, -2.75, 1.83 ) }
    dend_36 { pt3dadd( 4.14396, -11.6067, -3.29644, 1.83 ) }
    dend_36 { pt3dadd( 4.85467, -13.4489, -3.92939, 1.83 ) }
    dend_36 { pt3dadd( 5.37321, -14.793, -4.39119, 1.83 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 63/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.14038, 7.18365, -1.38, 1.15 ) }
    dend_15 { pt3dadd( 5.33523, 7.38974, -1.44049, 1.15 ) }
    dend_15 { pt3dadd( 6.78156, 8.91947, -1.88951, 1.15 ) }
    dend_15 { pt3dadd( 8.36453, 10.5938, -2.38096, 1.15 ) }
    dend_15 { pt3dadd( 10.2307, 12.5675, -2.96031, 1.15 ) }
    dend_15 { pt3dadd( 10.2508, 12.5889, -2.96657, 1.15 ) }
    dend_15 { pt3dadd( 10.743, 13.1094, -3.11936, 1.15 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 70/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.02963, 9.53366, -0.5, 1.61 ) }
    dend_0 { pt3dadd( -2.02963, 9.53366, -0.5, 1.61 ) }
    dend_0 { pt3dadd( -2.70345, 10.8869, -0.5, 1.61 ) }
    dend_0 { pt3dadd( -3.62325, 12.734, -0.5, 1.61 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 74/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.652625, 9.70455, 0.0, 0.923293 ) }
    axon_0 { pt3dadd( 0.443884, 24.7031, 0.0, 0.923293 ) }
    axon_0 { pt3dadd( 0.235142, 39.7016, 0.0, 0.923293 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 77/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 3.30246, 15.0763, 8.39014, 0.92 ) }
    dend_61 { pt3dadd( 4.43498, 16.4264, 9.89226, 0.92 ) }
    dend_61 { pt3dadd( 6.04132, 17.9209, 11.5413, 0.92 ) }
    dend_61 { pt3dadd( 6.06217, 17.9359, 11.5568, 0.92 ) }
    dend_61 { pt3dadd( 7.68973, 18.886, 12.5468, 0.92 ) }
    dend_61 { pt3dadd( 9.83373, 20.0658, 13.6266, 0.92 ) }
    dend_61 { pt3dadd( 11.4749, 20.94, 14.3527, 0.92 ) }
    dend_61 { pt3dadd( 13.5564, 22.0178, 15.0762, 0.92 ) }
    dend_61 { pt3dadd( 16.4331, 23.4712, 15.8864, 0.92 ) }
    dend_61 { pt3dadd( 18.5808, 24.5625, 16.447, 0.92 ) }
    dend_61 { pt3dadd( 21.5763, 26.0062, 17.2105, 0.92 ) }
    dend_61 { pt3dadd( 23.9019, 27.088, 17.8208, 0.92 ) }
    dend_61 { pt3dadd( 26.5801, 28.3468, 18.5576, 0.69 ) }
    dend_61 { pt3dadd( 29.2518, 29.6583, 19.3451, 0.69 ) }
    dend_61 { pt3dadd( 31.8228, 30.9699, 20.203, 0.69 ) }
    dend_61 { pt3dadd( 34.7334, 32.4549, 21.2475, 0.69 ) }
    dend_61 { pt3dadd( 34.7762, 32.4731, 21.2657, 0.69 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 94/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 3.30246, 15.0763, 8.39014, 0.92 ) }
    dend_60 { pt3dadd( 2.52067, 15.109, 10.5045, 0.92 ) }
    dend_60 { pt3dadd( 1.58379, 15.1192, 13.2621, 0.92 ) }
    dend_60 { pt3dadd( 1.57773, 15.119, 13.2812, 0.92 ) }
    dend_60 { pt3dadd( 1.03953, 15.0814, 15.0284, 0.92 ) }
    dend_60 { pt3dadd( 0.363921, 15.0342, 17.2216, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_60 { pt3dadd( -0.800629, 14.9528, 21.0022, 0.69 ) }
    dend_60 { pt3dadd( -0.805981, 14.9516, 21.0214, 0.69 ) }
    dend_60 { pt3dadd( -1.42245, 14.7588, 23.5301, 0.69 ) }
    dend_60 { pt3dadd( -1.42683, 14.7574, 23.5495, 0.69 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 4/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 2.70789, -57.47, 14.6816, 0.69 ) }
    dend_58 { pt3dadd( 0.759523, -58.5168, 13.7746, 0.69 ) }
    dend_58 { pt3dadd( 0.730855, -58.5404, 13.7597, 0.69 ) }
    dend_58 { pt3dadd( -0.17003, -59.654, 13.2202, 0.69 ) }
    dend_58 { pt3dadd( -0.188368, -59.6986, 13.2068, 0.69 ) }
    dend_58 { pt3dadd( -0.572115, -60.7495, 12.9872, 0.69 ) }
    dend_58 { pt3dadd( -0.640113, -60.9138, 12.9592, 0.69 ) }
    dend_58 { pt3dadd( -1.02118, -62.0287, 12.832, 0.69 ) }
    dend_58 { pt3dadd( -1.25512, -62.5951, 12.7132, 0.69 ) }
    dend_58 { pt3dadd( -1.94606, -64.1104, 12.2831, 0.69 ) }
    dend_58 { pt3dadd( -2.89747, -65.6701, 11.4831, 0.69 ) }
    dend_58 { pt3dadd( -3.95852, -67.0149, 10.4401, 0.69 ) }
    dend_58 { pt3dadd( -4.08071, -67.1521, 10.3191, 0.69 ) }
    dend_58 { pt3dadd( -5.61951, -68.5492, 8.74567, 0.69 ) }
    dend_58 { pt3dadd( -5.73997, -68.637, 8.61236, 0.69 ) }
    dend_58 { pt3dadd( -7.47614, -69.4941, 6.34608, 0.69 ) }
    dend_58 { pt3dadd( -7.58961, -69.5284, 6.14896, 0.69 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 21/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 2.70789, -57.47, 14.6816, 0.69 ) }
    dend_57 { pt3dadd( 3.04198, -58.766, 16.6516, 0.69 ) }
    dend_57 { pt3dadd( 3.4848, -60.484, 19.2629, 0.69 ) }
    dend_57 { pt3dadd( 3.56897, -60.8105, 19.7592, 0.69 ) }
    dend_57 { pt3dadd( 3.76093, -61.5552, 20.8911, 0.69 ) }
    dend_57 { pt3dadd( 3.76374, -61.5661, 20.9077, 0.69 ) }
    // Section: dend_47, id: dend_47, parent: dend_36 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 5.37321, -14.793, -4.39119, 0.92 ) }
    dend_47 { pt3dadd( 7.27915, -15.9912, -4.98623, 0.92 ) }
    dend_47 { pt3dadd( 9.05176, -17.0824, -5.54313, 0.92 ) }
    dend_47 { pt3dadd( 10.9544, -18.2428, -6.1438, 0.92 ) }
    dend_47 { pt3dadd( 12.9178, -19.3991, -6.78847, 0.92 ) }
    dend_47 { pt3dadd( 14.4314, -20.2906, -7.28548, 0.92 ) }
    dend_47 { pt3dadd( 16.3948, -21.447, -7.93014, 0.92 ) }
    dend_47 { pt3dadd( 17.7686, -22.2097, -8.38843, 0.92 ) }
    dend_47 { pt3dadd( 17.7858, -22.2186, -8.3935, 0.92 ) }
    dend_47 { pt3dadd( 19.662, -23.1146, -8.94267, 0.92 ) }
    // Section: dend_46, id: dend_46, parent: dend_36 (entry count 37/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 5.37321, -14.793, -4.39119, 0.92 ) }
    dend_46 { pt3dadd( 5.38919, -16.8333, -3.96933, 0.92 ) }
    dend_46 { pt3dadd( 5.31108, -18.4898, -3.43375, 0.92 ) }
    dend_46 { pt3dadd( 5.30579, -18.5553, -3.40961, 0.92 ) }
    dend_46 { pt3dadd( 5.14722, -20.1727, -2.7312, 0.92 ) }
    dend_46 { pt3dadd( 4.96294, -21.7015, -2.07955, 0.92 ) }
    dend_46 { pt3dadd( 4.72322, -23.5119, -1.34686, 0.92 ) }
    dend_46 { pt3dadd( 4.51977, -24.9811, -0.707597, 0.92 ) }
    dend_46 { pt3dadd( 4.49031, -25.1842, -0.613798, 0.92 ) }
    dend_46 { pt3dadd( 4.26776, -26.7477, 0.107498, 0.92 ) }
    dend_46 { pt3dadd( 4.10351, -28.1157, 0.708184, 0.92 ) }
    dend_46 { pt3dadd( 3.91342, -30.2841, 1.53463, 0.92 ) }
    dend_46 { pt3dadd( 3.87969, -31.5271, 1.92729, 0.92 ) }
    dend_46 { pt3dadd( 3.91681, -33.1835, 2.40799, 0.92 ) }
    dend_46 { pt3dadd( 3.91826, -33.2316, 2.42163, 0.92 ) }
    dend_46 { pt3dadd( 3.95948, -35.2334, 2.96119, 0.92 ) }
    dend_46 { pt3dadd( 3.96001, -35.2623, 2.96921, 0.92 ) }
    dend_46 { pt3dadd( 3.92836, -37.5885, 3.56997, 0.92 ) }
    dend_46 { pt3dadd( 3.92688, -37.6178, 3.57642, 0.92 ) }
    dend_46 { pt3dadd( 3.69493, -39.7888, 4.00585, 0.92 ) }
    dend_46 { pt3dadd( 3.41529, -41.2726, 4.3244, 0.92 ) }
    dend_46 { pt3dadd( 3.40715, -41.3007, 4.331, 0.92 ) }
    dend_46 { pt3dadd( 2.75906, -43.1708, 4.78313, 0.92 ) }
    dend_46 { pt3dadd( 2.46351, -43.9536, 4.98198, 0.92 ) }
    dend_46 { pt3dadd( 1.98049, -45.3423, 5.3517, 0.92 ) }
    dend_46 { pt3dadd( 1.5575, -46.8269, 5.70965, 0.92 ) }
    dend_46 { pt3dadd( 1.17717, -48.4044, 6.03386, 0.92 ) }
    dend_46 { pt3dadd( 1.16662, -48.4526, 6.04207, 0.92 ) }
    dend_46 { pt3dadd( 0.770695, -50.5412, 6.33126, 0.92 ) }
    dend_46 { pt3dadd( 0.482491, -52.3158, 6.54352, 0.92 ) }
    dend_46 { pt3dadd( 0.0162802, -55.7263, 6.86947, 0.92 ) }
    dend_46 { pt3dadd( -0.334, -58.6581, 7.09841, 0.92 ) }
    dend_46 { pt3dadd( -0.644582, -61.3042, 7.28314, 0.92 ) }
    dend_46 { pt3dadd( -0.914522, -63.5829, 7.44034, 0.92 ) }
    dend_46 { pt3dadd( -1.1564, -65.6474, 7.58919, 0.92 ) }
    dend_46 { pt3dadd( -1.42494, -68.2556, 7.80201, 0.92 ) }
    dend_46 { pt3dadd( -1.53941, -69.6782, 7.98548, 0.92 ) }
    dend_46 { pt3dadd( -1.54338, -69.7667, 8.00126, 0.92 ) }
    dend_46 { pt3dadd( -1.57713, -71.2233, 8.3662, 0.92 ) }
    dend_46 { pt3dadd( -1.61146, -73.0037, 8.935, 0.92 ) }
    dend_46 { pt3dadd( -1.61413, -73.0506, 8.95234, 0.92 ) }
    dend_46 { pt3dadd( -1.80097, -74.7596, 9.6797, 0.92 ) }
    dend_46 { pt3dadd( -1.80492, -74.7872, 9.69093, 0.92 ) }
    dend_46 { pt3dadd( -2.12202, -76.6415, 10.4192, 0.92 ) }
    dend_46 { pt3dadd( -2.13165, -76.689, 10.4313, 0.92 ) }
    dend_46 { pt3dadd( -2.4988, -78.3728, 10.7022, 0.92 ) }
    dend_46 { pt3dadd( -3.03155, -80.7637, 10.8124, 0.92 ) }
    dend_46 { pt3dadd( -3.42149, -82.4813, 10.7021, 0.92 ) }
    dend_46 { pt3dadd( -3.90532, -84.7219, 10.3677, 0.92 ) }
    dend_46 { pt3dadd( -4.57708, -88.0456, 9.56197, 0.92 ) }
    dend_46 { pt3dadd( -4.63293, -88.3189, 9.48252, 0.92 ) }
    dend_46 { pt3dadd( -5.06376, -90.0906, 8.87371, 0.92 ) }
    dend_46 { pt3dadd( -5.1071, -90.2233, 8.81889, 0.92 ) }
    dend_46 { pt3dadd( -5.81711, -92.0283, 8.11839, 0.92 ) }
    dend_46 { pt3dadd( -5.82464, -92.0459, 8.1125, 0.92 ) }
    dend_46 { pt3dadd( -6.6635, -94.0624, 7.75395, 0.92 ) }
    dend_46 { pt3dadd( -7.58048, -96.215, 7.47328, 0.92 ) }
    dend_46 { pt3dadd( -7.60149, -96.2602, 7.46966, 0.92 ) }
    dend_46 { pt3dadd( -8.66351, -98.4163, 7.32156, 0.92 ) }
    dend_46 { pt3dadd( -8.67259, -98.4341, 7.32053, 0.92 ) }
    dend_46 { pt3dadd( -10.2089, -101.601, 7.14947, 0.92 ) }
    dend_46 { pt3dadd( -11.0123, -103.424, 7.06118, 0.92 ) }
    dend_46 { pt3dadd( -11.8592, -105.621, 6.96873, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( -11.9827, -105.962, 6.95705, 0.92 ) }
    dend_46 { pt3dadd( -12.56, -107.656, 6.91038, 0.92 ) }
    dend_46 { pt3dadd( -13.0617, -109.302, 6.86802, 0.92 ) }
    dend_46 { pt3dadd( -13.4822, -110.979, 6.83231, 0.92 ) }
    dend_46 { pt3dadd( -13.7096, -112.391, 6.79707, 0.92 ) }
    dend_46 { pt3dadd( -13.8667, -113.979, 6.75155, 0.92 ) }
    dend_46 { pt3dadd( -13.9012, -114.271, 6.73879, 0.92 ) }
    dend_46 { pt3dadd( -14.0618, -115.418, 6.66862, 0.92 ) }
    dend_46 { pt3dadd( -14.1777, -115.974, 6.62544, 0.92 ) }
    dend_46 { pt3dadd( -14.5645, -117.375, 6.5007, 0.92 ) }
    dend_46 { pt3dadd( -14.5735, -117.403, 6.49795, 0.92 ) }
    dend_46 { pt3dadd( -15.4561, -119.702, 6.26434, 0.92 ) }
    dend_46 { pt3dadd( -15.4851, -119.766, 6.25816, 0.92 ) }
    dend_46 { pt3dadd( -16.4919, -121.724, 6.06589, 0.92 ) }
    dend_46 { pt3dadd( -17.5158, -123.581, 5.88073, 0.92 ) }
    dend_46 { pt3dadd( -17.5409, -123.624, 5.87642, 0.92 ) }
    dend_46 { pt3dadd( -18.5836, -125.509, 5.70092, 0.92 ) }
    dend_46 { pt3dadd( -19.3667, -127.023, 5.57105, 0.92 ) }
    dend_46 { pt3dadd( -19.4853, -127.302, 5.5456, 0.92 ) }
    dend_46 { pt3dadd( -19.9362, -128.832, 5.39432, 0.92 ) }
    dend_46 { pt3dadd( -19.9394, -128.851, 5.39211, 0.92 ) }
    dend_46 { pt3dadd( -20.0984, -130.294, 5.23106, 0.92 ) }
    dend_46 { pt3dadd( -20.1152, -130.589, 5.19742, 0.92 ) }
    dend_46 { pt3dadd( -20.2748, -133.21, 4.90189, 0.92 ) }
    dend_46 { pt3dadd( -20.4643, -136.054, 4.6021, 0.92 ) }
    dend_46 { pt3dadd( -20.6665, -138.692, 4.33734, 0.92 ) }
    dend_46 { pt3dadd( -20.8646, -140.798, 4.13283, 0.92 ) }
    dend_46 { pt3dadd( -20.8735, -140.867, 4.12654, 0.92 ) }
    dend_46 { pt3dadd( -21.2407, -143.31, 3.91727, 0.92 ) }
    dend_46 { pt3dadd( -21.6018, -145.295, 3.75689, 0.92 ) }
    dend_46 { pt3dadd( -21.9353, -147.053, 3.62253, 0.92 ) }
    dend_46 { pt3dadd( -21.9412, -147.083, 3.62047, 0.92 ) }
    dend_46 { pt3dadd( -22.3364, -149.247, 3.45675, 0.69 ) }
    dend_46 { pt3dadd( -22.5404, -150.418, 3.36559, 0.69 ) }
    dend_46 { pt3dadd( -22.5456, -150.457, 3.36214, 0.69 ) }
    dend_46 { pt3dadd( -22.7072, -152.479, 3.18331, 0.69 ) }
    dend_46 { pt3dadd( -22.7085, -152.529, 3.17899, 0.69 ) }
    dend_46 { pt3dadd( -22.711, -154.867, 2.98331, 0.69 ) }
    dend_46 { pt3dadd( -22.7017, -155.16, 2.95886, 0.69 ) }
    dend_46 { pt3dadd( -22.5952, -157.498, 2.75477, 0.69 ) }
    dend_46 { pt3dadd( -22.4766, -159.344, 2.57165, 0.69 ) }
    dend_46 { pt3dadd( -22.4739, -159.364, 2.56946, 0.69 ) }
    dend_46 { pt3dadd( -22.2017, -160.84, 2.3869, 0.69 ) }
    dend_46 { pt3dadd( -22.1873, -160.886, 2.37645, 0.69 ) }
    dend_46 { pt3dadd( -21.5522, -162.512, 1.83567, 0.69 ) }
    dend_46 { pt3dadd( -21.4532, -162.723, 1.74538, 0.69 ) }
    dend_46 { pt3dadd( -20.4903, -164.482, 0.824764, 0.69 ) }
    dend_46 { pt3dadd( -20.4663, -164.52, 0.802802, 0.69 ) }
    dend_46 { pt3dadd( -19.0789, -166.217, -0.395296, 0.69 ) }
    dend_46 { pt3dadd( -18.8186, -166.504, -0.623877, 0.69 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 5.37321, -14.793, -4.39119, 0.69 ) }
    dend_37 { pt3dadd( 4.39776, -15.9792, -6.99277, 0.69 ) }
    dend_37 { pt3dadd( 3.70848, -16.7896, -8.82065, 0.69 ) }
    dend_37 { pt3dadd( 2.90354, -17.5895, -10.563, 0.69 ) }
    dend_37 { pt3dadd( 2.8958, -17.5972, -10.5798, 0.69 ) }
    dend_37 { pt3dadd( 2.16505, -18.3233, -12.1616, 0.69 ) }
    dend_37 { pt3dadd( 1.32876, -19.1543, -13.9719, 0.69 ) }
    dend_37 { pt3dadd( 1.32103, -19.1621, -13.9886, 0.69 ) }
    dend_37 { pt3dadd( -0.319754, -20.3562, -16.863, 0.69 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 59/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 10.743, 13.1094, -3.11936, 0.92 ) }
    dend_17 { pt3dadd( 13.0401, 13.4021, -3.22776, 0.92 ) }
    dend_17 { pt3dadd( 15.5314, 13.7068, -3.45285, 0.92 ) }
    dend_17 { pt3dadd( 18.0299, 14.0102, -3.76986, 0.92 ) }
    dend_17 { pt3dadd( 20.3527, 14.3476, -4.09419, 0.92 ) }
    dend_17 { pt3dadd( 22.2457, 14.6485, -4.38391, 0.92 ) }
    dend_17 { pt3dadd( 22.3138, 14.6607, -4.39494, 0.92 ) }
    dend_17 { pt3dadd( 24.3398, 15.0719, -4.81039, 0.92 ) }
    dend_17 { pt3dadd( 26.1561, 15.4391, -5.30948, 0.92 ) }
    dend_17 { pt3dadd( 28.7544, 15.9775, -6.08992, 0.92 ) }
    dend_17 { pt3dadd( 30.563, 16.3534, -6.66237, 0.92 ) }
    dend_17 { pt3dadd( 32.2853, 16.7186, -7.2067, 0.92 ) }
    dend_17 { pt3dadd( 35.0994, 17.3226, -8.09333, 0.92 ) }
    dend_17 { pt3dadd( 38.5489, 18.0834, -9.18685, 0.92 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 10.743, 13.1094, -3.11936, 0.69 ) }
    dend_16 { pt3dadd( 11.686, 15.2875, -3.30868, 0.69 ) }
    dend_16 { pt3dadd( 12.7621, 17.8621, -3.74688, 0.69 ) }
    dend_16 { pt3dadd( 13.7147, 20.2234, -4.35262, 0.69 ) }
    dend_16 { pt3dadd( 13.7464, 20.3036, -4.37849, 0.69 ) }
    dend_16 { pt3dadd( 14.6595, 22.6328, -5.19838, 0.69 ) }
    dend_16 { pt3dadd( 14.6666, 22.6502, -5.2053, 0.69 ) }
    dend_16 { pt3dadd( 15.733, 25.0999, -6.40465, 0.69 ) }
    dend_16 { pt3dadd( 16.6042, 27.1401, -7.53809, 0.69 ) }
    dend_16 { pt3dadd( 17.5258, 29.4049, -8.79483, 0.69 ) }
    dend_16 { pt3dadd( 17.5365, 29.4299, -8.80752, 0.69 ) }
    dend_16 { pt3dadd( 18.6467, 31.9348, -9.98893, 0.69 ) }
    dend_16 { pt3dadd( 18.6544, 31.9518, -9.99627, 0.69 ) }
    dend_16 { pt3dadd( 19.7588, 34.5251, -10.9778, 0.69 ) }
    dend_16 { pt3dadd( 20.872, 37.5163, -12.0824, 0.69 ) }
    dend_16 { pt3dadd( 21.63, 39.8656, -12.9431, 0.69 ) }
    dend_16 { pt3dadd( 21.6367, 39.8932, -12.9528, 0.69 ) }
    dend_16 { pt3dadd( 21.8367, 41.2703, -13.3959, 0.69 ) }
    dend_16 { pt3dadd( 21.977, 42.8127, -13.8923, 0.69 ) }
    dend_16 { pt3dadd( 21.9794, 46.3585, -15.0407, 0.69 ) }
    dend_16 { pt3dadd( 21.9761, 46.4523, -15.0754, 0.69 ) }
    dend_16 { pt3dadd( 21.9319, 49.9382, -16.5478, 0.69 ) }
    dend_16 { pt3dadd( 22.0474, 52.8405, -17.925, 0.69 ) }
    dend_16 { pt3dadd( 22.0497, 52.8671, -17.9387, 0.69 ) }
    dend_16 { pt3dadd( 22.5103, 56.3567, -19.8134, 0.69 ) }
    dend_16 { pt3dadd( 22.9273, 58.9768, -21.2473, 0.69 ) }
    dend_16 { pt3dadd( 23.3656, 61.3009, -22.648, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( 23.787, 63.0321, -23.87, 0.69 ) }
    dend_16 { pt3dadd( 23.8487, 63.2582, -24.0436, 0.69 ) }
    dend_16 { pt3dadd( 24.3735, 65.1183, -25.4986, 0.69 ) }
    dend_16 { pt3dadd( 24.4208, 65.2697, -25.6204, 0.69 ) }
    dend_16 { pt3dadd( 24.8503, 66.5643, -26.5977, 0.69 ) }
    dend_16 { pt3dadd( 25.3672, 68.0434, -27.7988, 0.69 ) }
    dend_16 { pt3dadd( 25.971, 69.5314, -29.1064, 0.69 ) }
    dend_16 { pt3dadd( 25.9803, 69.5523, -29.1257, 0.69 ) }
    dend_16 { pt3dadd( 26.9645, 71.5807, -31.0605, 0.69 ) }
    dend_16 { pt3dadd( 28.4004, 74.5618, -34.0716, 0.69 ) }
    dend_16 { pt3dadd( 29.5244, 76.8465, -36.6125, 0.69 ) }
    dend_16 { pt3dadd( 30.6108, 79.0255, -39.2092, 0.69 ) }
    dend_16 { pt3dadd( 30.6168, 79.0372, -39.2242, 0.69 ) }
    dend_16 { pt3dadd( 31.9064, 81.7662, -42.7797, 0.69 ) }
    dend_16 { pt3dadd( 32.8821, 84.1139, -45.8293, 0.69 ) }
    dend_16 { pt3dadd( 33.8107, 86.8291, -49.159, 0.69 ) }
    dend_16 { pt3dadd( 33.8167, 86.8484, -49.1812, 0.69 ) }
    dend_16 { pt3dadd( 34.5951, 89.7651, -52.2534, 0.69 ) }
    dend_16 { pt3dadd( 35.2547, 92.4869, -54.9049, 0.69 ) }
    dend_16 { pt3dadd( 35.8043, 95.0457, -57.0683, 0.69 ) }
    dend_16 { pt3dadd( 36.3992, 97.961, -59.126, 0.69 ) }
    dend_16 { pt3dadd( 36.4024, 97.978, -59.1361, 0.69 ) }
    dend_16 { pt3dadd( 37.0028, 101.177, -60.8784, 0.69 ) }
    dend_16 { pt3dadd( 37.0063, 101.195, -60.8865, 0.69 ) }
    dend_16 { pt3dadd( 37.7623, 103.964, -62.1432, 0.69 ) }
    dend_16 { pt3dadd( 37.7681, 103.982, -62.1513, 0.69 ) }
    dend_16 { pt3dadd( 38.4235, 105.544, -63.0005, 0.69 ) }
    dend_16 { pt3dadd( 38.5352, 105.782, -63.1447, 0.69 ) }
    dend_16 { pt3dadd( 39.946, 108.479, -65.1408, 0.69 ) }
    dend_16 { pt3dadd( 41.5217, 111.396, -67.5513, 0.69 ) }
    dend_16 { pt3dadd( 41.5289, 111.409, -67.564, 0.69 ) }
    dend_16 { pt3dadd( 42.7669, 113.887, -69.9349, 0.69 ) }
    dend_16 { pt3dadd( 42.7832, 113.921, -69.9682, 0.69 ) }
    dend_16 { pt3dadd( 43.9948, 116.597, -72.4509, 0.69 ) }
    dend_16 { pt3dadd( 44.031, 116.683, -72.5273, 0.69 ) }
    dend_16 { pt3dadd( 45.3347, 120.204, -75.3568, 0.69 ) }
    dend_16 { pt3dadd( 46.2977, 122.992, -77.4361, 0.69 ) }
    dend_16 { pt3dadd( 46.3603, 123.193, -77.5709, 0.69 ) }
    dend_16 { pt3dadd( 47.4875, 127.103, -80.0847, 0.69 ) }
    dend_16 { pt3dadd( 47.5145, 127.203, -80.1451, 0.69 ) }
    dend_16 { pt3dadd( 48.3259, 130.796, -82.4135, 0.69 ) }
    dend_16 { pt3dadd( 48.3333, 130.837, -82.4414, 0.69 ) }
    dend_16 { pt3dadd( 48.6123, 132.835, -83.9254, 0.69 ) }
    dend_16 { pt3dadd( 49.0233, 136.327, -86.6595, 0.69 ) }
    dend_16 { pt3dadd( 49.0261, 136.358, -86.6852, 0.69 ) }
    dend_16 { pt3dadd( 49.3619, 140.148, -89.7626, 0.69 ) }
    dend_16 { pt3dadd( 49.6546, 143.667, -92.5975, 0.69 ) }
    dend_16 { pt3dadd( 49.6607, 143.738, -92.6533, 0.69 ) }
    dend_16 { pt3dadd( 49.9688, 147.254, -95.4045, 0.69 ) }
    dend_16 { pt3dadd( 49.9727, 147.294, -95.4344, 0.69 ) }
    dend_16 { pt3dadd( 50.3366, 150.732, -97.9046, 0.69 ) }
    dend_16 { pt3dadd( 50.35, 150.832, -97.9692, 0.69 ) }
    dend_16 { pt3dadd( 50.6167, 153.072, -99.2661, 0.69 ) }
    dend_16 { pt3dadd( 50.6218, 153.115, -99.2908, 0.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 54/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.62325, 12.734, -0.5, 0.92 ) }
    dend_4 { pt3dadd( -4.08436, 14.3712, -0.130853, 0.92 ) }
    dend_4 { pt3dadd( -4.92474, 16.8729, 0.338066, 0.92 ) }
    dend_4 { pt3dadd( -5.62774, 18.7997, 0.632658, 0.92 ) }
    dend_4 { pt3dadd( -6.19483, 20.2934, 0.843359, 0.92 ) }
    dend_4 { pt3dadd( -7.00416, 22.4252, 1.14406, 0.92 ) }
    dend_4 { pt3dadd( -7.921, 24.8402, 1.48471, 0.92 ) }
    dend_4 { pt3dadd( -9.07832, 27.7702, 1.85076, 0.92 ) }
    dend_4 { pt3dadd( -10.229, 30.6294, 2.0957, 0.92 ) }
    dend_4 { pt3dadd( -11.2301, 32.9372, 2.26708, 0.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 64/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.62325, 12.734, -0.5, 0.92 ) }
    dend_1 { pt3dadd( -5.12654, 14.0095, -1.38259, 0.92 ) }
    dend_1 { pt3dadd( -6.81594, 15.3679, -2.34601, 0.92 ) }
    dend_1 { pt3dadd( -8.66601, 16.8627, -3.38626, 0.92 ) }
    dend_1 { pt3dadd( -10.7949, 18.6032, -4.44569, 0.92 ) }
    dend_1 { pt3dadd( -12.5546, 20.0419, -5.32139, 0.92 ) }
    dend_1 { pt3dadd( -14.4147, 21.5626, -6.24704, 0.92 ) }
    dend_1 { pt3dadd( -16.3938, 23.1236, -7.2134, 0.92 ) }
    dend_1 { pt3dadd( -18.1672, 24.4437, -7.96692, 0.92 ) }
    dend_1 { pt3dadd( -20.2494, 25.969, -8.73011, 0.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 74/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 0.235142, 39.7016, 0.0, 0.69 ) }
    axon_1 { pt3dadd( 0.0264011, 54.7002, 0.0, 0.69 ) }
    axon_1 { pt3dadd( -0.18234, 69.6987, 0.0, 0.69 ) }
    // Section: dend_55, id: dend_55, parent: dend_47 (entry count 77/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 19.662, -23.1146, -8.94267, 0.69 ) }
    dend_55 { pt3dadd( 21.3003, -22.655, -9.49417, 0.69 ) }
    dend_55 { pt3dadd( 23.2517, -22.0794, -10.5165, 0.69 ) }
    dend_55 { pt3dadd( 24.2243, -21.7911, -11.112, 0.69 ) }
    dend_55 { pt3dadd( 24.2487, -21.7839, -11.128, 0.69 ) }
    dend_55 { pt3dadd( 26.1981, -21.1898, -12.4748, 0.69 ) }
    dend_55 { pt3dadd( 27.9622, -20.6448, -13.7302, 0.69 ) }
    dend_55 { pt3dadd( 29.3094, -20.2923, -14.846, 0.69 ) }
    dend_55 { pt3dadd( 30.4127, -20.0204, -15.8628, 0.69 ) }
    dend_55 { pt3dadd( 30.441, -20.0121, -15.8899, 0.69 ) }
    dend_55 { pt3dadd( 31.7337, -19.5612, -17.1541, 0.69 ) }
    dend_55 { pt3dadd( 31.7469, -19.5559, -17.1682, 0.69 ) }
    dend_55 { pt3dadd( 33.5104, -18.8807, -19.0121, 0.69 ) }
    dend_55 { pt3dadd( 33.5234, -18.8753, -19.0264, 0.69 ) }
    dend_55 { pt3dadd( 34.9666, -18.2173, -20.7429, 0.69 ) }
    dend_55 { pt3dadd( 36.1981, -17.6227, -22.3204, 0.69 ) }
    dend_55 { pt3dadd( 37.4506, -16.9791, -24.0479, 0.69 ) }
    dend_55 { pt3dadd( 37.4608, -16.9725, -24.0638, 0.69 ) }
    dend_55 { pt3dadd( 38.5285, -16.1144, -25.9588, 0.69 ) }
    dend_55 { pt3dadd( 38.5366, -16.1065, -25.9753, 0.69 ) }
    dend_55 { pt3dadd( 39.5081, -14.9158, -28.3418, 0.69 ) }
    dend_55 { pt3dadd( 39.5142, -14.9055, -28.3578, 0.69 ) }
    dend_55 { pt3dadd( 40.3576, -13.1635, -30.6353, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_55 { pt3dadd( 40.3633, -13.1507, -30.6496, 0.69 ) }
    dend_55 { pt3dadd( 41.3098, -10.9329, -32.7122, 0.69 ) }
    dend_55 { pt3dadd( 41.3287, -10.8891, -32.7486, 0.69 ) }
    dend_55 { pt3dadd( 42.2959, -8.75527, -34.2855, 0.69 ) }
    dend_55 { pt3dadd( 42.3262, -8.69418, -34.3273, 0.69 ) }
    dend_55 { pt3dadd( 43.71, -6.11955, -35.96, 0.69 ) }
    dend_55 { pt3dadd( 45.0451, -3.63826, -37.4003, 0.69 ) }
    dend_55 { pt3dadd( 45.0842, -3.56668, -37.4383, 0.69 ) }
    dend_55 { pt3dadd( 46.3221, -1.30908, -38.5996, 0.69 ) }
    dend_55 { pt3dadd( 46.3752, -1.21315, -38.6483, 0.69 ) }
    dend_55 { pt3dadd( 47.5935, 1.0879, -39.701, 0.69 ) }
    dend_55 { pt3dadd( 48.7761, 3.42846, -40.6589, 0.69 ) }
    dend_55 { pt3dadd( 48.8007, 3.47914, -40.6797, 0.69 ) }
    dend_55 { pt3dadd( 50.0722, 6.14985, -41.8004, 0.69 ) }
    dend_55 { pt3dadd( 50.0842, 6.17455, -41.8125, 0.69 ) }
    dend_55 { pt3dadd( 51.6278, 9.22776, -43.5108, 0.69 ) }
    dend_55 { pt3dadd( 51.6447, 9.25771, -43.5313, 0.69 ) }
    dend_55 { pt3dadd( 53.2251, 11.8521, -45.6506, 0.69 ) }
    dend_55 { pt3dadd( 53.265, 11.9138, -45.7027, 0.69 ) }
    dend_55 { pt3dadd( 54.9605, 14.2604, -47.6903, 0.69 ) }
    dend_55 { pt3dadd( 54.9913, 14.3, -47.7232, 0.69 ) }
    dend_55 { pt3dadd( 56.5735, 16.2936, -49.3609, 0.69 ) }
    dend_55 { pt3dadd( 56.5891, 16.3128, -49.3779, 0.69 ) }
    dend_55 { pt3dadd( 58.8134, 18.9975, -51.8217, 0.69 ) }
    dend_55 { pt3dadd( 60.9347, 21.4843, -53.9781, 0.69 ) }
    dend_55 { pt3dadd( 61.0015, 21.5613, -54.0414, 0.69 ) }
    dend_55 { pt3dadd( 62.9234, 23.7355, -55.6512, 0.69 ) }
    dend_55 { pt3dadd( 66.2264, 27.4442, -57.9863, 0.69 ) }
    dend_55 { pt3dadd( 66.2763, 27.4992, -58.016, 0.69 ) }
    dend_55 { pt3dadd( 68.2712, 29.6566, -59.0513, 0.69 ) }
    dend_55 { pt3dadd( 68.3035, 29.6921, -59.0652, 0.69 ) }
    dend_55 { pt3dadd( 71.7652, 33.5024, -60.3031, 0.69 ) }
    dend_55 { pt3dadd( 74.4123, 36.5462, -61.0476, 0.69 ) }
    dend_55 { pt3dadd( 77.6686, 40.5606, -61.7836, 0.69 ) }
    dend_55 { pt3dadd( 77.6806, 40.5764, -61.7863, 0.69 ) }
    dend_55 { pt3dadd( 79.6561, 43.507, -62.3638, 0.69 ) }
    dend_55 { pt3dadd( 79.682, 43.5488, -62.3724, 0.69 ) }
    dend_55 { pt3dadd( 81.3789, 46.762, -63.1773, 0.69 ) }
    dend_55 { pt3dadd( 81.391, 46.7886, -63.184, 0.69 ) }
    dend_55 { pt3dadd( 82.3634, 49.4057, -63.8338, 0.69 ) }
    dend_55 { pt3dadd( 83.4763, 52.5805, -64.6478, 0.69 ) }
    dend_55 { pt3dadd( 83.5206, 52.7286, -64.6891, 0.69 ) }
    dend_55 { pt3dadd( 84.2548, 55.1409, -65.4024, 0.69 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 43/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 19.662, -23.1146, -8.94267, 0.69 ) }
    dend_48 { pt3dadd( 21.472, -24.0575, -9.01157, 0.69 ) }
    dend_48 { pt3dadd( 23.2095, -24.9626, -9.07771, 0.69 ) }
    dend_48 { pt3dadd( 25.1882, -25.9933, -9.15302, 0.69 ) }
    dend_48 { pt3dadd( 27.8999, -27.4059, -9.25624, 0.69 ) }
    dend_48 { pt3dadd( 30.4049, -28.7109, -9.35159, 0.69 ) }
    // Section: dend_45, id: dend_45, parent: dend_37 (entry count 49/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -0.319754, -20.3562, -16.863, 0.69 ) }
    dend_45 { pt3dadd( -1.92437, -21.9974, -21.9422, 0.69 ) }
    dend_45 { pt3dadd( -2.18408, -22.2747, -22.7473, 0.69 ) }
    dend_45 { pt3dadd( -2.45068, -22.548, -23.5688, 0.69 ) }
    dend_45 { pt3dadd( -2.45953, -22.5569, -23.596, 0.69 ) }
    dend_45 { pt3dadd( -3.26564, -23.1832, -26.019, 0.69 ) }
    dend_45 { pt3dadd( -4.07931, -23.7581, -28.3807, 0.69 ) }
    dend_45 { pt3dadd( -4.08965, -23.7641, -28.4082, 0.69 ) }
    dend_45 { pt3dadd( -4.91202, -24.1825, -30.6234, 0.69 ) }
    dend_45 { pt3dadd( -4.91881, -24.1859, -30.6419, 0.69 ) }
    dend_45 { pt3dadd( -5.86989, -24.5921, -33.079, 0.69 ) }
    dend_45 { pt3dadd( -6.89822, -24.933, -35.5544, 0.69 ) }
    dend_45 { pt3dadd( -6.9097, -24.9354, -35.582, 0.69 ) }
    dend_45 { pt3dadd( -7.65092, -25.0885, -37.4035, 0.69 ) }
    dend_45 { pt3dadd( -7.65801, -25.0903, -37.4221, 0.69 ) }
    dend_45 { pt3dadd( -8.48188, -25.3256, -39.7318, 0.69 ) }
    dend_45 { pt3dadd( -8.50364, -25.3336, -39.7979, 0.69 ) }
    dend_45 { pt3dadd( -9.44051, -25.6542, -43.1151, 0.69 ) }
    dend_45 { pt3dadd( -9.46406, -25.6645, -43.2118, 0.69 ) }
    dend_45 { pt3dadd( -10.1517, -26.0335, -46.2949, 0.69 ) }
    dend_45 { pt3dadd( -10.1626, -26.0405, -46.3432, 0.69 ) }
    dend_45 { pt3dadd( -10.9207, -26.5818, -49.727, 0.69 ) }
    dend_45 { pt3dadd( -11.7073, -27.2391, -53.2496, 0.69 ) }
    dend_45 { pt3dadd( -12.5061, -28.0082, -56.8342, 0.69 ) }
    dend_45 { pt3dadd( -13.1178, -28.6768, -59.6687, 0.69 ) }
    dend_45 { pt3dadd( -13.4851, -29.1308, -61.4307, 0.46 ) }
    dend_45 { pt3dadd( -13.5046, -29.1565, -61.5254, 0.46 ) }
    dend_45 { pt3dadd( -13.9357, -29.8235, -63.7005, 0.46 ) }
    dend_45 { pt3dadd( -13.9556, -29.8576, -63.7924, 0.46 ) }
    dend_45 { pt3dadd( -14.4821, -30.9853, -66.3579, 0.46 ) }
    dend_45 { pt3dadd( -14.4953, -31.0356, -66.4661, 0.46 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 80/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -0.319754, -20.3562, -16.863, 0.69 ) }
    dend_38 { pt3dadd( -0.838595, -22.0884, -18.0623, 0.69 ) }
    dend_38 { pt3dadd( -1.14136, -23.0014, -18.7332, 0.69 ) }
    dend_38 { pt3dadd( -1.78271, -24.6934, -20.0624, 0.69 ) }
    dend_38 { pt3dadd( -2.2549, -25.8656, -21.0237, 0.69 ) }
    dend_38 { pt3dadd( -2.27726, -25.9166, -21.0661, 0.69 ) }
    dend_38 { pt3dadd( -2.84175, -27.1426, -22.122, 0.69 ) }
    dend_38 { pt3dadd( -2.85901, -27.1761, -22.1548, 0.69 ) }
    dend_38 { pt3dadd( -3.64915, -28.2338, -23.2798, 0.69 ) }
    dend_38 { pt3dadd( -3.72741, -28.3203, -23.3741, 0.69 ) }
    dend_38 { pt3dadd( -4.3715, -29.0057, -24.1364, 0.69 ) }
    dend_38 { pt3dadd( -4.61353, -29.2614, -24.4167, 0.69 ) }
    dend_38 { pt3dadd( -5.33963, -30.0166, -25.2283, 0.69 ) }
    dend_38 { pt3dadd( -6.05101, -30.7309, -26.001, 0.69 ) }
    dend_38 { pt3dadd( -7.19144, -31.7826, -27.172, 0.69 ) }
    // Section: dend_29, id: dend_29, parent: dend_17 (entry count 95/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 38.5489, 18.0834, -9.18685, 0.69 ) }
    dend_29 { pt3dadd( 41.0644, 17.7653, -9.18685, 0.69 ) }
    dend_29 { pt3dadd( 42.9191, 17.6102, -9.18685, 0.69 ) }
    dend_29 { pt3dadd( 44.7486, 17.5691, -9.18685, 0.69 ) }
    dend_29 { pt3dadd( 46.665, 17.6083, -9.18685, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_29 { pt3dadd( 48.1578, 17.6821, -9.2684, 0.69 ) }
    dend_29 { pt3dadd( 49.7833, 17.774, -9.4099, 0.69 ) }
    dend_29 { pt3dadd( 52.6409, 17.947, -9.73607, 0.69 ) }
    dend_29 { pt3dadd( 55.7109, 18.153, -10.1264, 0.69 ) }
    dend_29 { pt3dadd( 57.1887, 18.2733, -10.3327, 0.69 ) }
    dend_29 { pt3dadd( 60.5429, 18.6094, -10.8459, 0.69 ) }
    dend_29 { pt3dadd( 63.712, 18.9576, -11.3757, 0.69 ) }
    dend_29 { pt3dadd( 66.462, 19.234, -11.8855, 0.69 ) }
    dend_29 { pt3dadd( 69.2088, 19.3859, -12.4608, 0.69 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 9/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 38.5489, 18.0834, -9.18685, 0.69 ) }
    dend_18 { pt3dadd( 39.597, 19.6248, -9.18685, 0.69 ) }
    dend_18 { pt3dadd( 40.1504, 20.4386, -9.18685, 0.69 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 12/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -11.2301, 32.9372, 2.26708, 0.69 ) }
    dend_8 { pt3dadd( -13.4766, 33.7597, 1.4922, 0.69 ) }
    dend_8 { pt3dadd( -14.6206, 34.2011, 1.12662, 0.69 ) }
    dend_8 { pt3dadd( -14.8853, 34.3043, 1.05013, 0.69 ) }
    dend_8 { pt3dadd( -17.1541, 35.1204, 0.509076, 0.69 ) }
    dend_8 { pt3dadd( -17.2004, 35.1361, 0.498687, 0.69 ) }
    dend_8 { pt3dadd( -19.442, 35.7792, 0.0321165, 0.69 ) }
    dend_8 { pt3dadd( -19.4612, 35.784, 0.0290148, 0.69 ) }
    dend_8 { pt3dadd( -21.359, 36.1904, -0.25002, 0.69 ) }
    dend_8 { pt3dadd( -23.598, 36.6039, -0.621583, 0.69 ) }
    dend_8 { pt3dadd( -25.8019, 36.9415, -1.01463, 0.69 ) }
    dend_8 { pt3dadd( -27.3867, 37.1077, -1.29229, 0.69 ) }
    dend_8 { pt3dadd( -27.4065, 37.1088, -1.2955, 0.69 ) }
    dend_8 { pt3dadd( -28.5727, 37.1375, -1.49523, 0.69 ) }
    dend_8 { pt3dadd( -31.1747, 37.2363, -1.97073, 0.69 ) }
    dend_8 { pt3dadd( -33.6866, 37.3271, -2.44401, 0.69 ) }
    dend_8 { pt3dadd( -36.0904, 37.4213, -2.88732, 0.69 ) }
    dend_8 { pt3dadd( -38.5628, 37.5645, -3.35337, 0.69 ) }
    dend_8 { pt3dadd( -41.5028, 37.7268, -3.90039, 0.69 ) }
    dend_8 { pt3dadd( -44.0367, 37.8519, -4.36132, 0.69 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -11.2301, 32.9372, 2.26708, 0.92 ) }
    dend_5 { pt3dadd( -12.0128, 35.1592, 2.18176, 0.92 ) }
    dend_5 { pt3dadd( -12.9913, 37.6544, 2.19848, 0.92 ) }
    dend_5 { pt3dadd( -13.7911, 39.6066, 2.45454, 0.92 ) }
    dend_5 { pt3dadd( -14.7907, 42.0467, 2.7746, 0.69 ) }
    dend_5 { pt3dadd( -15.7807, 44.4632, 3.09155, 0.69 ) }
    dend_5 { pt3dadd( -16.5233, 46.276, 3.32933, 0.69 ) }
    dend_5 { pt3dadd( -17.0261, 47.3392, 3.46396, 0.69 ) }
    dend_5 { pt3dadd( -18.5547, 50.2644, 4.11518, 0.69 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 41/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -20.2494, 25.969, -8.73011, 0.69 ) }
    dend_3 { pt3dadd( -20.9582, 26.8167, -10.921, 0.69 ) }
    dend_3 { pt3dadd( -20.9684, 26.827, -10.9473, 0.69 ) }
    dend_3 { pt3dadd( -21.8292, 27.678, -13.0671, 0.69 ) }
    dend_3 { pt3dadd( -22.8972, 28.7615, -15.5198, 0.69 ) }
    dend_3 { pt3dadd( -23.7573, 29.6693, -17.5406, 0.69 ) }
    dend_3 { pt3dadd( -24.6024, 30.4474, -19.426, 0.69 ) }
    dend_3 { pt3dadd( -25.4881, 31.0636, -21.1034, 0.69 ) }
    dend_3 { pt3dadd( -25.6634, 31.1726, -21.4106, 0.69 ) }
    dend_3 { pt3dadd( -26.659, 31.7422, -22.9669, 0.69 ) }
    dend_3 { pt3dadd( -28.2327, 32.597, -25.2948, 0.69 ) }
    dend_3 { pt3dadd( -30.2027, 33.6701, -28.1766, 0.69 ) }
    dend_3 { pt3dadd( -32.2486, 34.8973, -31.2377, 0.69 ) }
    dend_3 { pt3dadd( -32.2639, 34.9071, -31.2615, 0.69 ) }
    dend_3 { pt3dadd( -33.9499, 36.0802, -34.1113, 0.69 ) }
    dend_3 { pt3dadd( -33.959, 36.0871, -34.1278, 0.69 ) }
    dend_3 { pt3dadd( -34.9781, 37.0986, -36.3716, 0.69 ) }
    dend_3 { pt3dadd( -36.0435, 38.6232, -39.5795, 0.69 ) }
    dend_3 { pt3dadd( -36.0472, 38.6309, -39.5976, 0.69 ) }
    dend_3 { pt3dadd( -36.5899, 40.0247, -43.1511, 0.69 ) }
    dend_3 { pt3dadd( -36.5955, 40.0475, -43.217, 0.69 ) }
    dend_3 { pt3dadd( -36.8349, 41.3015, -47.0729, 0.69 ) }
    dend_3 { pt3dadd( -36.8359, 41.31, -47.1017, 0.69 ) }
    dend_3 { pt3dadd( -36.9239, 42.5368, -51.4436, 0.69 ) }
    dend_3 { pt3dadd( -36.9243, 42.5422, -51.4628, 0.69 ) }
    dend_3 { pt3dadd( -37.0108, 43.816, -55.9188, 0.69 ) }
    dend_3 { pt3dadd( -37.0114, 43.8215, -55.9381, 0.69 ) }
    dend_3 { pt3dadd( -37.2599, 45.2701, -61.1521, 0.69 ) }
    dend_3 { pt3dadd( -37.4538, 46.3274, -64.8733, 0.69 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 70/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -20.2494, 25.969, -8.73011, 0.69 ) }
    dend_2 { pt3dadd( -21.7142, 27.2483, -10.8367, 0.69 ) }
    dend_2 { pt3dadd( -22.5721, 28.1411, -12.458, 0.69 ) }
    dend_2 { pt3dadd( -22.5801, 28.1505, -12.4738, 0.69 ) }
    dend_2 { pt3dadd( -23.3965, 29.1464, -14.0967, 0.69 ) }
    dend_2 { pt3dadd( -24.304, 30.2155, -15.7643, 0.69 ) }
    dend_2 { pt3dadd( -25.7613, 31.7617, -18.3108, 0.69 ) }
    dend_2 { pt3dadd( -27.061, 33.099, -20.5885, 0.69 ) }
    dend_2 { pt3dadd( -28.2836, 34.2718, -22.6426, 0.69 ) }
    dend_2 { pt3dadd( -28.3142, 34.296, -22.688, 0.69 ) }
    dend_2 { pt3dadd( -29.7516, 35.2141, -24.5697, 0.69 ) }
    dend_2 { pt3dadd( -31.2273, 36.0208, -26.2335, 0.69 ) }
    dend_2 { pt3dadd( -33.0289, 36.7882, -27.878, 0.69 ) }
    dend_2 { pt3dadd( -33.0514, 36.7958, -27.8963, 0.69 ) }
    dend_2 { pt3dadd( -34.9309, 37.3755, -29.4376, 0.69 ) }
    dend_2 { pt3dadd( -34.953, 37.3836, -29.4563, 0.69 ) }
    dend_2 { pt3dadd( -36.9008, 38.2089, -31.1638, 0.69 ) }
    dend_2 { pt3dadd( -38.4636, 39.0178, -32.4496, 0.69 ) }
    dend_2 { pt3dadd( -38.4856, 39.0299, -32.466, 0.69 ) }
    dend_2 { pt3dadd( -39.947, 39.8918, -33.5095, 0.69 ) }
    dend_2 { pt3dadd( -42.2929, 41.3568, -35.117, 0.69 ) }
    dend_2 { pt3dadd( -42.3153, 41.3706, -35.1315, 0.69 ) }
    dend_2 { pt3dadd( -44.1873, 42.5421, -36.4843, 0.46 ) }
    dend_2 { pt3dadd( -46.4357, 44.0229, -38.1074, 0.46 ) }
    dend_2 { pt3dadd( -46.4573, 44.0368, -38.1228, 0.46 ) }
    dend_2 { pt3dadd( -48.6797, 45.4111, -39.6749, 0.46 ) }
    dend_2 { pt3dadd( -48.7018, 45.4244, -39.6903, 0.46 ) }
    dend_2 { pt3dadd( -52.2385, 47.5489, -42.4405, 0.46 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 98/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 30.4049, -28.7109, -9.35159, 0.69 ) }
    dend_54 { pt3dadd( 32.5532, -29.3558, -7.69349, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_54 { pt3dadd( 32.5759, -29.362, -7.67496, 0.69 ) }
    dend_54 { pt3dadd( 35.4207, -30.2115, -5.33628, 0.69 ) }
    dend_54 { pt3dadd( 37.633, -30.9024, -3.49895, 0.69 ) }
    dend_54 { pt3dadd( 39.5854, -31.4526, -1.90854, 0.69 ) }
    dend_54 { pt3dadd( 41.6963, -31.9817, -0.266531, 0.69 ) }
    dend_54 { pt3dadd( 43.3946, -32.4372, 1.05769, 0.69 ) }
    dend_54 { pt3dadd( 44.7602, -32.8094, 2.10193, 0.69 ) }
    dend_54 { pt3dadd( 44.8734, -32.8437, 2.19415, 0.69 ) }
    dend_54 { pt3dadd( 46.952, -33.6073, 4.09857, 0.69 ) }
    dend_54 { pt3dadd( 48.916, -34.4825, 6.14011, 0.69 ) }
    dend_54 { pt3dadd( 50.7669, -35.4031, 8.18163, 0.69 ) }
    dend_54 { pt3dadd( 50.7973, -35.4201, 8.21744, 0.69 ) }
    dend_54 { pt3dadd( 52.5272, -36.4398, 10.4825, 0.69 ) }
    dend_54 { pt3dadd( 54.0646, -37.5815, 12.8126, 0.69 ) }
    dend_54 { pt3dadd( 54.0714, -37.5908, 12.829, 0.69 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 15/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 30.4049, -28.7109, -9.35159, 0.69 ) }
    dend_49 { pt3dadd( 31.1219, -29.2082, -9.46772, 0.69 ) }
    dend_49 { pt3dadd( 33.7253, -30.9426, -9.95318, 0.69 ) }
    dend_49 { pt3dadd( 34.9484, -31.7611, -10.2046, 0.69 ) }
    dend_49 { pt3dadd( 36.8344, -33.0313, -10.6319, 0.69 ) }
    dend_49 { pt3dadd( 38.3101, -34.0567, -11.0116, 0.69 ) }
    dend_49 { pt3dadd( 40.5341, -35.5924, -11.6587, 0.69 ) }
    dend_49 { pt3dadd( 42.1259, -36.6377, -12.1783, 0.69 ) }
    dend_49 { pt3dadd( 43.4711, -37.5114, -12.6533, 0.69 ) }
    dend_49 { pt3dadd( 45.152, -38.556, -13.2765, 0.69 ) }
    dend_49 { pt3dadd( 46.8548, -39.5376, -13.9073, 0.69 ) }
    dend_49 { pt3dadd( 48.6987, -40.5565, -14.61, 0.69 ) }
    dend_49 { pt3dadd( 50.9317, -41.8151, -15.4545, 0.69 ) }
    dend_49 { pt3dadd( 53.1973, -43.111, -16.2472, 0.69 ) }
    dend_49 { pt3dadd( 53.2142, -43.1201, -16.2528, 0.69 ) }
    dend_49 { pt3dadd( 55.3955, -44.3678, -16.9729, 0.69 ) }
    dend_49 { pt3dadd( 55.4202, -44.3828, -16.9809, 0.69 ) }
    dend_49 { pt3dadd( 57.4424, -45.7683, -17.6699, 0.69 ) }
    dend_49 { pt3dadd( 59.0459, -47.0031, -18.161, 0.69 ) }
    dend_49 { pt3dadd( 60.7242, -48.3659, -18.6362, 0.69 ) }
    dend_49 { pt3dadd( 62.8858, -50.1644, -19.2442, 0.69 ) }
    dend_49 { pt3dadd( 62.9006, -50.1773, -19.2483, 0.69 ) }
    dend_49 { pt3dadd( 64.5945, -51.6801, -19.6949, 0.69 ) }
    dend_49 { pt3dadd( 66.7669, -53.6904, -20.187, 0.69 ) }
    dend_49 { pt3dadd( 66.7808, -53.7047, -20.1889, 0.69 ) }
    // Section: dend_44, id: dend_44, parent: dend_38 (entry count 40/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -7.19144, -31.7826, -27.172, 0.69 ) }
    dend_44 { pt3dadd( -7.61223, -32.9866, -28.6417, 0.69 ) }
    dend_44 { pt3dadd( -7.61763, -32.9979, -28.6573, 0.69 ) }
    dend_44 { pt3dadd( -8.25615, -34.2315, -30.5477, 0.69 ) }
    dend_44 { pt3dadd( -8.8991, -35.4322, -32.4734, 0.69 ) }
    dend_44 { pt3dadd( -9.48588, -36.5891, -34.4062, 0.69 ) }
    dend_44 { pt3dadd( -10.0842, -37.785, -36.43, 0.69 ) }
    dend_44 { pt3dadd( -10.7625, -38.9918, -38.5804, 0.69 ) }
    dend_44 { pt3dadd( -11.2805, -39.9262, -40.2778, 0.69 ) }
    dend_44 { pt3dadd( -11.2883, -39.9396, -40.3035, 0.69 ) }
    dend_44 { pt3dadd( -11.8666, -41.0622, -42.4736, 0.69 ) }
    dend_44 { pt3dadd( -12.1214, -41.7597, -43.7405, 0.69 ) }
    dend_44 { pt3dadd( -12.1381, -41.8353, -43.869, 0.69 ) }
    dend_44 { pt3dadd( -12.3088, -42.8816, -45.5656, 0.69 ) }
    dend_44 { pt3dadd( -12.3281, -43.0038, -45.7605, 0.69 ) }
    dend_44 { pt3dadd( -12.448, -43.9417, -47.2654, 0.69 ) }
    dend_44 { pt3dadd( -12.5695, -45.1383, -49.2068, 0.69 ) }
    dend_44 { pt3dadd( -12.5986, -46.2086, -50.9441, 0.69 ) }
    dend_44 { pt3dadd( -12.587, -47.5011, -53.0346, 0.69 ) }
    dend_44 { pt3dadd( -12.5859, -47.5211, -53.0692, 0.69 ) }
    dend_44 { pt3dadd( -12.5166, -48.5538, -54.7615, 0.69 ) }
    dend_44 { pt3dadd( -12.5121, -48.6129, -54.8543, 0.69 ) }
    dend_44 { pt3dadd( -12.3807, -49.8271, -56.6689, 0.69 ) }
    dend_44 { pt3dadd( -12.3779, -49.8439, -56.6936, 0.69 ) }
    dend_44 { pt3dadd( -12.0947, -51.1765, -58.7504, 0.69 ) }
    dend_44 { pt3dadd( -11.7562, -52.4931, -60.9993, 0.69 ) }
    dend_44 { pt3dadd( -11.7287, -52.5878, -61.1733, 0.69 ) }
    dend_44 { pt3dadd( -11.2607, -54.1412, -64.0871, 0.69 ) }
    dend_44 { pt3dadd( -11.2535, -54.1637, -64.1312, 0.69 ) }
    dend_44 { pt3dadd( -10.8196, -55.3834, -66.5593, 0.69 ) }
    dend_44 { pt3dadd( -10.1809, -56.858, -69.6032, 0.69 ) }
    dend_44 { pt3dadd( -10.1706, -56.8755, -69.6489, 0.69 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 72/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -7.19144, -31.7826, -27.172, 0.69 ) }
    dend_39 { pt3dadd( -9.31313, -33.5317, -26.7503, 0.69 ) }
    dend_39 { pt3dadd( -10.8753, -34.9271, -26.9891, 0.69 ) }
    dend_39 { pt3dadd( -12.2653, -36.2056, -27.4615, 0.69 ) }
    dend_39 { pt3dadd( -12.5535, -36.4412, -27.6079, 0.69 ) }
    dend_39 { pt3dadd( -13.6903, -37.2671, -28.2724, 0.69 ) }
    dend_39 { pt3dadd( -13.7857, -37.3328, -28.3312, 0.69 ) }
    dend_39 { pt3dadd( -15.377, -38.2948, -29.6229, 0.69 ) }
    dend_39 { pt3dadd( -15.4927, -38.3499, -29.7188, 0.69 ) }
    dend_39 { pt3dadd( -16.9878, -38.9512, -30.7713, 0.69 ) }
    dend_39 { pt3dadd( -18.9212, -39.6574, -31.8535, 0.69 ) }
    dend_39 { pt3dadd( -18.9822, -39.6762, -31.8821, 0.69 ) }
    dend_39 { pt3dadd( -20.8172, -40.2295, -32.6797, 0.69 ) }
    dend_39 { pt3dadd( -22.7982, -40.8018, -33.4365, 0.69 ) }
    dend_39 { pt3dadd( -24.5878, -41.3259, -34.0727, 0.69 ) }
    dend_39 { pt3dadd( -26.7542, -41.9787, -34.7433, 0.69 ) }
    dend_39 { pt3dadd( -27.4949, -42.1818, -34.9438, 0.69 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 69.2088, 19.3859, -12.4608, 0.69 ) }
    dend_31 { pt3dadd( 71.424, 19.7419, -12.7328, 0.69 ) }
    dend_31 { pt3dadd( 72.8501, 19.9436, -12.9328, 0.69 ) }
    dend_31 { pt3dadd( 74.2626, 20.1477, -13.1392, 0.69 ) }
    dend_31 { pt3dadd( 76.3161, 20.4472, -13.4452, 0.69 ) }
    dend_31 { pt3dadd( 78.5123, 20.7441, -13.7816, 0.69 ) }
    dend_31 { pt3dadd( 81.469, 21.1521, -14.2464, 0.69 ) }
    dend_31 { pt3dadd( 84.1059, 21.468, -14.6764, 0.69 ) }
    dend_31 { pt3dadd( 86.2317, 21.7199, -15.0101, 0.69 ) }
    dend_31 { pt3dadd( 86.2514, 21.7218, -15.0133, 0.69 ) }
    dend_31 { pt3dadd( 87.8808, 21.9315, -15.2735, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_31 { pt3dadd( 90.7454, 22.3718, -15.6378, 0.69 ) }
    dend_31 { pt3dadd( 90.7946, 22.3792, -15.6424, 0.69 ) }
    dend_31 { pt3dadd( 92.2742, 22.5895, -15.7283, 0.69 ) }
    dend_31 { pt3dadd( 95.1522, 22.9889, -15.8473, 0.69 ) }
    dend_31 { pt3dadd( 98.04, 23.415, -15.9254, 0.69 ) }
    dend_31 { pt3dadd( 100.463, 23.842, -15.9454, 0.69 ) }
    dend_31 { pt3dadd( 100.512, 23.8504, -15.9449, 0.69 ) }
    dend_31 { pt3dadd( 102.341, 24.1713, -15.9179, 0.69 ) }
    dend_31 { pt3dadd( 102.439, 24.19, -15.9154, 0.69 ) }
    dend_31 { pt3dadd( 104.724, 24.8116, -15.7996, 0.69 ) }
    dend_31 { pt3dadd( 105.614, 25.0202, -15.764, 0.69 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 11/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 69.2088, 19.3859, -12.4608, 0.69 ) }
    dend_30 { pt3dadd( 70.3891, 17.4233, -12.6324, 0.69 ) }
    dend_30 { pt3dadd( 70.8734, 16.5868, -12.7218, 0.69 ) }
    dend_30 { pt3dadd( 71.6871, 15.1539, -12.8984, 0.69 ) }
    dend_30 { pt3dadd( 71.7441, 15.0494, -12.9136, 0.69 ) }
    dend_30 { pt3dadd( 72.4437, 13.74, -13.1217, 0.69 ) }
    dend_30 { pt3dadd( 72.4532, 13.7227, -13.1245, 0.69 ) }
    dend_30 { pt3dadd( 72.9388, 12.9843, -13.297, 0.69 ) }
    dend_30 { pt3dadd( 72.9977, 12.9049, -13.3121, 0.69 ) }
    dend_30 { pt3dadd( 73.778, 11.9261, -13.4621, 0.69 ) }
    dend_30 { pt3dadd( 73.7907, 11.9108, -13.4643, 0.69 ) }
    dend_30 { pt3dadd( 74.9251, 10.4719, -13.6609, 0.69 ) }
    dend_30 { pt3dadd( 76.4357, 8.40544, -13.9085, 0.69 ) }
    dend_30 { pt3dadd( 77.5146, 6.88093, -14.0795, 0.69 ) }
    dend_30 { pt3dadd( 77.5429, 6.83982, -14.0825, 0.69 ) }
    dend_30 { pt3dadd( 78.6566, 5.18577, -14.1717, 0.69 ) }
    dend_30 { pt3dadd( 80.1984, 2.89455, -14.3056, 0.69 ) }
    dend_30 { pt3dadd( 81.7498, 0.538826, -14.4551, 0.69 ) }
    dend_30 { pt3dadd( 81.9488, 0.236701, -14.4761, 0.69 ) }
    dend_30 { pt3dadd( 83.8836, -2.50891, -14.6778, 0.69 ) }
    dend_30 { pt3dadd( 83.986, -2.64403, -14.6903, 0.69 ) }
    dend_30 { pt3dadd( 85.5473, -4.52459, -14.9083, 0.69 ) }
    dend_30 { pt3dadd( 85.6567, -4.63917, -14.9309, 0.69 ) }
    dend_30 { pt3dadd( 86.915, -5.86189, -15.2904, 0.69 ) }
    dend_30 { pt3dadd( 86.9549, -5.90363, -15.3066, 0.69 ) }
    dend_30 { pt3dadd( 88.1284, -7.17713, -15.9907, 0.69 ) }
    dend_30 { pt3dadd( 88.1468, -7.19787, -16.0023, 0.69 ) }
    dend_30 { pt3dadd( 89.4999, -8.77299, -16.9662, 0.69 ) }
    dend_30 { pt3dadd( 89.5715, -8.85259, -17.0204, 0.69 ) }
    dend_30 { pt3dadd( 91.3545, -10.703, -18.2952, 0.69 ) }
    dend_30 { pt3dadd( 93.0791, -12.322, -19.4265, 0.69 ) }
    dend_30 { pt3dadd( 93.1003, -12.339, -19.4391, 0.69 ) }
    dend_30 { pt3dadd( 95.2564, -13.9095, -20.64, 0.69 ) }
    dend_30 { pt3dadd( 97.5609, -15.3817, -21.8667, 0.69 ) }
    dend_30 { pt3dadd( 99.9657, -16.7896, -23.1095, 0.69 ) }
    dend_30 { pt3dadd( 103.064, -18.3897, -24.6915, 0.46 ) }
    dend_30 { pt3dadd( 106.04, -19.8445, -26.3339, 0.46 ) }
    dend_30 { pt3dadd( 106.056, -19.852, -26.3433, 0.46 ) }
    dend_30 { pt3dadd( 108.765, -21.0966, -28.1154, 0.46 ) }
    dend_30 { pt3dadd( 108.802, -21.1142, -28.1435, 0.46 ) }
    dend_30 { pt3dadd( 110.887, -22.2117, -30.1228, 0.46 ) }
    dend_30 { pt3dadd( 112.792, -23.4275, -32.3612, 0.46 ) }
    dend_30 { pt3dadd( 112.991, -23.5915, -32.6265, 0.46 ) }
    dend_30 { pt3dadd( 114.582, -25.0892, -34.7128, 0.46 ) }
    dend_30 { pt3dadd( 114.701, -25.2192, -34.8725, 0.46 ) }
    dend_30 { pt3dadd( 115.693, -26.3453, -36.1362, 0.46 ) }
    dend_30 { pt3dadd( 115.744, -26.4056, -36.198, 0.46 ) }
    dend_30 { pt3dadd( 117.043, -27.9074, -37.5424, 0.46 ) }
    dend_30 { pt3dadd( 119.598, -30.7871, -40.0073, 0.46 ) }
    dend_30 { pt3dadd( 119.649, -30.8419, -40.0571, 0.46 ) }
    dend_30 { pt3dadd( 121.967, -33.2684, -42.3582, 0.46 ) }
    dend_30 { pt3dadd( 122.002, -33.3039, -42.392, 0.46 ) }
    dend_30 { pt3dadd( 124.494, -35.8895, -44.9473, 0.46 ) }
    dend_30 { pt3dadd( 124.612, -36.0162, -45.0833, 0.46 ) }
    dend_30 { pt3dadd( 126.394, -37.9979, -47.1215, 0.46 ) }
    dend_30 { pt3dadd( 126.458, -38.0685, -47.1945, 0.46 ) }
    // Section: dend_26, id: dend_26, parent: dend_18 (entry count 67/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 40.1504, 20.4386, -9.18685, 0.46 ) }
    dend_26 { pt3dadd( 39.2873, 23.1253, -8.26564, 0.46 ) }
    dend_26 { pt3dadd( 38.5489, 25.4237, -7.47756, 0.46 ) }
    dend_26 { pt3dadd( 38.5431, 25.4418, -7.47136, 0.46 ) }
    dend_26 { pt3dadd( 37.7597, 27.8802, -6.63527, 0.46 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 72/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 40.1504, 20.4386, -9.18685, 0.69 ) }
    dend_19 { pt3dadd( 42.3028, 21.9052, -11.1466, 0.69 ) }
    dend_19 { pt3dadd( 43.9904, 23.055, -12.6832, 0.69 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 75/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -44.0367, 37.8519, -4.36132, 0.69 ) }
    dend_12 { pt3dadd( -47.0284, 38.4204, -3.78349, 0.69 ) }
    dend_12 { pt3dadd( -49.784, 38.8518, -3.01642, 0.69 ) }
    dend_12 { pt3dadd( -52.085, 39.212, -2.3759, 0.69 ) }
    dend_12 { pt3dadd( -54.3478, 39.5663, -1.74599, 0.69 ) }
    dend_12 { pt3dadd( -55.8815, 39.8064, -1.31906, 0.69 ) }
    dend_12 { pt3dadd( -58.2863, 40.1828, -0.649652, 0.69 ) }
    dend_12 { pt3dadd( -60.3349, 40.3451, 0.0644704, 0.69 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 83/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -44.0367, 37.8519, -4.36132, 0.69 ) }
    dend_9 { pt3dadd( -44.5681, 39.9885, -6.09191, 0.69 ) }
    dend_9 { pt3dadd( -45.0983, 41.8623, -7.53057, 0.69 ) }
    dend_9 { pt3dadd( -45.103, 41.8778, -7.54223, 0.69 ) }
    dend_9 { pt3dadd( -45.6982, 43.4411, -8.68835, 0.69 ) }
    dend_9 { pt3dadd( -46.3251, 44.9268, -9.76729, 0.69 ) }
    dend_9 { pt3dadd( -46.3364, 44.95, -9.78259, 0.69 ) }
    dend_9 { pt3dadd( -47.356, 46.4769, -10.6017, 0.69 ) }
    dend_9 { pt3dadd( -47.3681, 46.4913, -10.6085, 0.69 ) }
    dend_9 { pt3dadd( -49.174, 48.4677, -11.4681, 0.69 ) }
    dend_9 { pt3dadd( -49.1944, 48.4882, -11.4759, 0.69 ) }
    dend_9 { pt3dadd( -51.2969, 50.4407, -12.1248, 0.69 ) }
    dend_9 { pt3dadd( -54.0929, 52.9465, -12.8637, 0.69 ) }
    dend_9 { pt3dadd( -55.6437, 54.277, -13.222, 0.69 ) }
    dend_9 { pt3dadd( -55.6662, 54.2961, -13.2268, 0.69 ) }
    dend_9 { pt3dadd( -58.0524, 56.2942, -13.6822, 0.69 ) }
    dend_9 { pt3dadd( -59.862, 57.7859, -14.0221, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_9 { pt3dadd( -63.0734, 60.3338, -14.6092, 0.69 ) }
    dend_9 { pt3dadd( -63.43, 60.6194, -14.6634, 0.69 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 2/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -18.5547, 50.2644, 4.11518, 0.69 ) }
    dend_7 { pt3dadd( -18.7648, 51.7351, 4.89381, 0.69 ) }
    dend_7 { pt3dadd( -18.9761, 52.9825, 5.61902, 0.69 ) }
    dend_7 { pt3dadd( -19.2051, 54.2595, 6.39012, 0.69 ) }
    dend_7 { pt3dadd( -19.5775, 56.2871, 7.63293, 0.69 ) }
    dend_7 { pt3dadd( -20.0001, 58.3998, 9.06348, 0.69 ) }
    dend_7 { pt3dadd( -20.0051, 58.4239, 9.08064, 0.69 ) }
    dend_7 { pt3dadd( -20.4904, 60.3469, 10.5671, 0.69 ) }
    dend_7 { pt3dadd( -20.9119, 61.8526, 11.7934, 0.69 ) }
    dend_7 { pt3dadd( -20.917, 61.8672, 11.806, 0.69 ) }
    dend_7 { pt3dadd( -22.0191, 63.9944, 14.0266, 0.69 ) }
    dend_7 { pt3dadd( -22.0411, 64.0146, 14.0667, 0.69 ) }
    dend_7 { pt3dadd( -22.6262, 64.3074, 15.11, 0.69 ) }
    dend_7 { pt3dadd( -22.6518, 64.3101, 15.1529, 0.69 ) }
    dend_7 { pt3dadd( -23.5302, 64.251, 16.5921, 0.69 ) }
    dend_7 { pt3dadd( -24.6914, 64.0673, 18.4905, 0.69 ) }
    dend_7 { pt3dadd( -26.6605, 63.4418, 21.6928, 0.69 ) }
    dend_7 { pt3dadd( -26.6753, 63.4369, 21.7184, 0.69 ) }
    dend_7 { pt3dadd( -26.9198, 63.3495, 22.1902, 0.46 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 21/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -18.5547, 50.2644, 4.11518, 0.46 ) }
    dend_6 { pt3dadd( -20.6742, 50.2956, 3.38637, 0.46 ) }
    dend_6 { pt3dadd( -22.4469, 50.3999, 2.65703, 0.46 ) }
    dend_6 { pt3dadd( -25.9157, 50.7104, 1.01809, 0.46 ) }
    dend_6 { pt3dadd( -25.9608, 50.7145, 0.9968, 0.46 ) }
    dend_6 { pt3dadd( -29.5538, 51.0362, -0.70082, 0.46 ) }
    dend_6 { pt3dadd( -29.5808, 51.0386, -0.713594, 0.46 ) }
    dend_6 { pt3dadd( -32.288, 51.2942, -2.16729, 0.46 ) }
    dend_6 { pt3dadd( -33.7281, 51.533, -3.01332, 0.46 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 30/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 66.7808, -53.7047, -20.1889, 0.46 ) }
    dend_53 { pt3dadd( 67.5799, -55.5947, -21.238, 0.46 ) }
    dend_53 { pt3dadd( 68.1417, -57.1007, -22.0687, 0.46 ) }
    dend_53 { pt3dadd( 68.1465, -57.1176, -22.0782, 0.46 ) }
    dend_53 { pt3dadd( 68.5414, -58.7049, -22.9775, 0.46 ) }
    dend_53 { pt3dadd( 68.5605, -58.7718, -23.0171, 0.46 ) }
    dend_53 { pt3dadd( 69.1175, -60.5954, -24.1216, 0.46 ) }
    dend_53 { pt3dadd( 69.1492, -60.7041, -24.1856, 0.46 ) }
    dend_53 { pt3dadd( 69.7048, -62.6787, -25.3666, 0.46 ) }
    dend_53 { pt3dadd( 69.7239, -62.7371, -25.4001, 0.46 ) }
    dend_53 { pt3dadd( 70.3279, -64.1001, -26.1545, 0.46 ) }
    dend_53 { pt3dadd( 70.3378, -64.1154, -26.1628, 0.46 ) }
    dend_53 { pt3dadd( 71.4228, -65.4422, -26.8479, 0.46 ) }
    dend_53 { pt3dadd( 71.4722, -65.4985, -26.8762, 0.46 ) }
    dend_53 { pt3dadd( 73.0505, -67.1745, -27.7004, 0.46 ) }
    dend_53 { pt3dadd( 74.7578, -69.0696, -28.5938, 0.46 ) }
    dend_53 { pt3dadd( 76.5965, -71.2084, -29.6776, 0.46 ) }
    dend_53 { pt3dadd( 78.7721, -73.7639, -31.0394, 0.46 ) }
    dend_53 { pt3dadd( 78.8508, -73.8578, -31.0828, 0.46 ) }
    dend_53 { pt3dadd( 81.4032, -76.9933, -32.3405, 0.46 ) }
    dend_53 { pt3dadd( 84.2441, -80.7697, -33.398, 0.46 ) }
    dend_53 { pt3dadd( 86.6148, -84.2659, -33.9779, 0.46 ) }
    dend_53 { pt3dadd( 86.6501, -84.3264, -33.977, 0.46 ) }
    dend_53 { pt3dadd( 88.9713, -88.607, -33.4978, 0.46 ) }
    dend_53 { pt3dadd( 89.1227, -88.9044, -33.4324, 0.46 ) }
    dend_53 { pt3dadd( 90.6414, -92.4908, -31.6132, 0.46 ) }
    dend_53 { pt3dadd( 90.6811, -92.5998, -31.5181, 0.46 ) }
    dend_53 { pt3dadd( 91.5205, -95.1471, -28.7523, 0.46 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 66.7808, -53.7047, -20.1889, 0.46 ) }
    dend_50 { pt3dadd( 68.1508, -53.6447, -19.0389, 0.46 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 60/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -27.4949, -42.1818, -34.9438, 0.46 ) }
    dend_43 { pt3dadd( -29.6202, -44.1344, -37.9947, 0.46 ) }
    dend_43 { pt3dadd( -29.6303, -44.1443, -38.0089, 0.46 ) }
    dend_43 { pt3dadd( -31.7432, -46.2227, -40.9195, 0.46 ) }
    dend_43 { pt3dadd( -31.7532, -46.2333, -40.9332, 0.46 ) }
    dend_43 { pt3dadd( -33.7241, -48.4737, -43.5402, 0.46 ) }
    dend_43 { pt3dadd( -33.7442, -48.497, -43.5659, 0.46 ) }
    dend_43 { pt3dadd( -35.3843, -50.6396, -45.4222, 0.46 ) }
    dend_43 { pt3dadd( -35.3994, -50.6599, -45.4383, 0.46 ) }
    dend_43 { pt3dadd( -37.1047, -53.0158, -46.9293, 0.46 ) }
    dend_43 { pt3dadd( -38.6462, -55.2231, -48.1643, 0.46 ) }
    dend_43 { pt3dadd( -38.8803, -55.5893, -48.3179, 0.46 ) }
    dend_43 { pt3dadd( -40.1571, -57.627, -49.0124, 0.46 ) }
    dend_43 { pt3dadd( -40.1876, -57.6777, -49.0227, 0.46 ) }
    dend_43 { pt3dadd( -42.4304, -61.5373, -49.3156, 0.46 ) }
    dend_43 { pt3dadd( -42.4403, -61.5547, -49.315, 0.46 ) }
    dend_43 { pt3dadd( -44.9606, -66.0794, -48.7285, 0.46 ) }
    dend_43 { pt3dadd( -44.9754, -66.1049, -48.7229, 0.46 ) }
    dend_43 { pt3dadd( -46.5069, -68.5213, -47.9773, 0.46 ) }
    dend_43 { pt3dadd( -48.8309, -71.8392, -46.7689, 0.46 ) }
    dend_43 { pt3dadd( -49.1534, -72.2878, -46.5924, 0.46 ) }
    dend_43 { pt3dadd( -51.1566, -75.0481, -45.5809, 0.46 ) }
    dend_43 { pt3dadd( -52.6383, -77.0638, -44.9222, 0.46 ) }
    dend_43 { pt3dadd( -55.8338, -81.4614, -43.8625, 0.46 ) }
    dend_43 { pt3dadd( -58.3649, -85.0045, -43.3266, 0.46 ) }
    dend_43 { pt3dadd( -60.4275, -87.9507, -43.0546, 0.46 ) }
    dend_43 { pt3dadd( -62.6212, -91.227, -42.9168, 0.46 ) }
    dend_43 { pt3dadd( -65.2918, -95.3492, -42.9714, 0.46 ) }
    dend_43 { pt3dadd( -67.9135, -99.5933, -43.1986, 0.46 ) }
    dend_43 { pt3dadd( -69.9828, -103.041, -43.4886, 0.46 ) }
    dend_43 { pt3dadd( -70.0184, -103.101, -43.4948, 0.46 ) }
    dend_43 { pt3dadd( -72.6819, -107.546, -43.8731, 0.46 ) }
    dend_43 { pt3dadd( -74.5487, -110.739, -44.0187, 0.46 ) }
    dend_43 { pt3dadd( -74.9223, -111.381, -44.0102, 0.46 ) }
    dend_43 { pt3dadd( -77.1668, -114.916, -43.753, 0.46 ) }
    dend_43 { pt3dadd( -77.5144, -115.39, -43.7026, 0.46 ) }
    dend_43 { pt3dadd( -79.7944, -118.088, -43.4274, 0.46 ) }
    dend_43 { pt3dadd( -82.5903, -120.955, -43.1332, 0.46 ) }
    dend_43 { pt3dadd( -86.0211, -124.251, -42.8447, 0.46 ) }
    dend_43 { pt3dadd( -89.4755, -127.496, -42.6904, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_43 { pt3dadd( -93.4345, -131.211, -42.7233, 0.46 ) }
    dend_43 { pt3dadd( -97.3751, -135.007, -43.0679, 0.46 ) }
    dend_43 { pt3dadd( -99.5024, -137.082, -43.4282, 0.46 ) }
    dend_43 { pt3dadd( -102.859, -140.556, -44.3174, 0.46 ) }
    dend_43 { pt3dadd( -105.545, -143.645, -45.3298, 0.46 ) }
    dend_43 { pt3dadd( -107.843, -146.766, -46.6055, 0.46 ) }
    dend_43 { pt3dadd( -109.485, -149.485, -47.9476, 0.46 ) }
    dend_43 { pt3dadd( -109.492, -149.501, -47.9568, 0.46 ) }
    dend_43 { pt3dadd( -110.381, -151.515, -49.2954, 0.46 ) }
    dend_43 { pt3dadd( -110.391, -151.537, -49.3132, 0.46 ) }
    dend_43 { pt3dadd( -111.268, -153.246, -50.8309, 0.46 ) }
    dend_43 { pt3dadd( -111.278, -153.258, -50.8433, 0.46 ) }
    dend_43 { pt3dadd( -113.629, -155.317, -53.279, 0.46 ) }
    dend_43 { pt3dadd( -113.642, -155.326, -53.2914, 0.46 ) }
    dend_43 { pt3dadd( -116.21, -156.631, -55.5693, 0.46 ) }
    dend_43 { pt3dadd( -116.253, -156.649, -55.6069, 0.46 ) }
    dend_43 { pt3dadd( -119.601, -157.832, -58.4461, 0.46 ) }
    dend_43 { pt3dadd( -122.24, -158.617, -60.7002, 0.46 ) }
    dend_43 { pt3dadd( -122.322, -158.633, -60.7715, 0.46 ) }
    dend_43 { pt3dadd( -126.721, -159.307, -64.5505, 0.46 ) }
    dend_43 { pt3dadd( -126.736, -159.308, -64.5634, 0.46 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -27.4949, -42.1818, -34.9438, 0.69 ) }
    dend_40 { pt3dadd( -28.8634, -43.6488, -34.4524, 0.69 ) }
    dend_40 { pt3dadd( -29.9394, -44.9497, -33.9584, 0.69 ) }
    dend_40 { pt3dadd( -30.8854, -46.142, -33.4901, 0.69 ) }
    dend_40 { pt3dadd( -31.047, -46.3658, -33.4012, 0.69 ) }
    dend_40 { pt3dadd( -31.6426, -47.228, -33.0581, 0.69 ) }
    dend_40 { pt3dadd( -32.728, -48.7991, -32.433, 0.69 ) }
    dend_40 { pt3dadd( -33.8936, -50.6778, -31.6439, 0.69 ) }
    dend_40 { pt3dadd( -33.9028, -50.6942, -31.6372, 0.69 ) }
    dend_40 { pt3dadd( -34.932, -52.5074, -30.8075, 0.69 ) }
    dend_40 { pt3dadd( -34.9456, -52.5316, -30.7961, 0.69 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 32/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 105.614, 25.0202, -15.764, 0.46 ) }
    dend_35 { pt3dadd( 107.476, 26.045, -14.7195, 0.46 ) }
    dend_35 { pt3dadd( 109.55, 27.2249, -13.0947, 0.46 ) }
    dend_35 { pt3dadd( 109.564, 27.2329, -13.0827, 0.46 ) }
    dend_35 { pt3dadd( 111.508, 28.3529, -11.3905, 0.46 ) }
    dend_35 { pt3dadd( 111.528, 28.3649, -11.3724, 0.46 ) }
    dend_35 { pt3dadd( 113.662, 29.594, -9.51538, 0.46 ) }
    dend_35 { pt3dadd( 115.88, 30.9125, -7.2123, 0.46 ) }
    dend_35 { pt3dadd( 115.911, 30.9316, -7.17745, 0.46 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 105.614, 25.0202, -15.764, 0.69 ) }
    dend_32 { pt3dadd( 108.661, 26.1355, -16.7715, 0.69 ) }
    dend_32 { pt3dadd( 109.461, 26.4597, -17.0905, 0.69 ) }
    dend_32 { pt3dadd( 112.642, 27.7826, -18.5284, 0.69 ) }
    dend_32 { pt3dadd( 115.288, 28.8605, -19.8622, 0.69 ) }
    dend_32 { pt3dadd( 115.313, 28.8707, -19.8751, 0.69 ) }
    dend_32 { pt3dadd( 118.111, 29.9206, -21.2871, 0.69 ) }
    dend_32 { pt3dadd( 120.349, 30.7016, -22.4739, 0.69 ) }
    dend_32 { pt3dadd( 122.518, 31.2788, -23.6651, 0.69 ) }
    dend_32 { pt3dadd( 124.678, 31.665, -24.8796, 0.69 ) }
    dend_32 { pt3dadd( 126.399, 31.8197, -25.8624, 0.69 ) }
    dend_32 { pt3dadd( 128.493, 31.91, -27.061, 0.69 ) }
    dend_32 { pt3dadd( 131.142, 31.8648, -28.5818, 0.69 ) }
    dend_32 { pt3dadd( 133.311, 31.7263, -29.7626, 0.69 ) }
    dend_32 { pt3dadd( 133.364, 31.7216, -29.7911, 0.69 ) }
    dend_32 { pt3dadd( 136.163, 31.439, -31.2891, 0.69 ) }
    dend_32 { pt3dadd( 138.617, 31.184, -32.6484, 0.69 ) }
    dend_32 { pt3dadd( 138.634, 31.1827, -32.6586, 0.69 ) }
    dend_32 { pt3dadd( 141.2, 31.0435, -34.1969, 0.69 ) }
    dend_32 { pt3dadd( 141.225, 31.0423, -34.2128, 0.69 ) }
    dend_32 { pt3dadd( 144.268, 30.8055, -36.349, 0.69 ) }
    dend_32 { pt3dadd( 144.307, 30.8013, -36.3794, 0.69 ) }
    dend_32 { pt3dadd( 147.181, 30.3917, -38.7982, 0.69 ) }
    dend_32 { pt3dadd( 147.218, 30.3861, -38.8311, 0.69 ) }
    dend_32 { pt3dadd( 150.33, 29.8934, -41.7599, 0.69 ) }
    dend_32 { pt3dadd( 152.791, 29.4863, -44.1595, 0.69 ) }
    dend_32 { pt3dadd( 152.839, 29.4776, -44.2098, 0.69 ) }
    dend_32 { pt3dadd( 154.956, 29.0816, -46.4207, 0.69 ) }
    dend_32 { pt3dadd( 155.004, 29.0718, -46.4704, 0.69 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 37.7597, 27.8802, -6.63527, 0.46 ) }
    dend_28 { pt3dadd( 35.9913, 29.6178, -5.57414, 0.46 ) }
    dend_28 { pt3dadd( 34.103, 31.7415, -4.0167, 0.46 ) }
    dend_28 { pt3dadd( 32.8021, 33.3177, -2.76841, 0.46 ) }
    dend_28 { pt3dadd( 31.9693, 34.4717, -1.77296, 0.46 ) }
    dend_28 { pt3dadd( 30.8842, 36.0999, -0.305314, 0.46 ) }
    dend_28 { pt3dadd( 30.8753, 36.1133, -0.293313, 0.46 ) }
    dend_28 { pt3dadd( 29.8122, 37.894, 1.72068, 0.46 ) }
    dend_28 { pt3dadd( 29.8067, 37.9055, 1.73605, 0.46 ) }
    dend_28 { pt3dadd( 29.4651, 39.4921, 3.75194, 0.46 ) }
    dend_28 { pt3dadd( 29.4634, 39.5238, 3.79058, 0.46 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 81/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 37.7597, 27.8802, -6.63527, 0.46 ) }
    dend_27 { pt3dadd( 37.8876, 29.1124, -5.62784, 0.46 ) }
    dend_27 { pt3dadd( 38.1495, 30.4155, -4.47982, 0.46 ) }
    dend_27 { pt3dadd( 38.727, 32.0567, -3.05174, 0.46 ) }
    dend_27 { pt3dadd( 39.4913, 33.757, -1.61735, 0.46 ) }
    dend_27 { pt3dadd( 39.5198, 33.8145, -1.56955, 0.46 ) }
    dend_27 { pt3dadd( 40.7946, 36.0892, 0.277449, 0.46 ) }
    dend_27 { pt3dadd( 41.8528, 37.7248, 1.64327, 0.46 ) }
    dend_27 { pt3dadd( 42.9903, 39.4068, 3.00736, 0.46 ) }
    dend_27 { pt3dadd( 44.0449, 40.9481, 4.20436, 0.46 ) }
    dend_27 { pt3dadd( 44.0571, 40.9697, 4.22122, 0.46 ) }
    dend_27 { pt3dadd( 44.7783, 42.3086, 5.25895, 0.46 ) }
    dend_27 { pt3dadd( 45.4998, 43.8328, 6.41325, 0.46 ) }
    dend_27 { pt3dadd( 46.1613, 46.0354, 8.09764, 0.46 ) }
    dend_27 { pt3dadd( 46.1631, 46.0507, 8.11037, 0.46 ) }
    dend_27 { pt3dadd( 46.167, 48.7489, 10.4814, 0.46 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 97/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 43.9904, 23.055, -12.6832, 0.46 ) }
    dend_21 { pt3dadd( 43.806, 25.98, -12.5327, 0.46 ) }
    dend_21 { pt3dadd( 43.5726, 29.4884, -12.1141, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 43.3398, 31.5765, -11.7827, 0.46 ) }
    dend_21 { pt3dadd( 43.2715, 32.094, -11.6912, 0.46 ) }
    dend_21 { pt3dadd( 42.7555, 35.1651, -11.0663, 0.46 ) }
    dend_21 { pt3dadd( 42.1484, 38.346, -10.3499, 0.46 ) }
    dend_21 { pt3dadd( 42.1394, 38.3932, -10.3362, 0.46 ) }
    dend_21 { pt3dadd( 41.5062, 41.359, -9.31792, 0.46 ) }
    dend_21 { pt3dadd( 41.5021, 41.3776, -9.31174, 0.46 ) }
    dend_21 { pt3dadd( 40.9895, 43.963, -8.55812, 0.46 ) }
    dend_21 { pt3dadd( 40.4592, 46.8475, -7.88359, 0.46 ) }
    dend_21 { pt3dadd( 40.05, 49.6819, -7.32739, 0.46 ) }
    dend_21 { pt3dadd( 40.0387, 49.7896, -7.30794, 0.46 ) }
    dend_21 { pt3dadd( 39.9713, 51.282, -7.0767, 0.46 ) }
    dend_21 { pt3dadd( 39.9406, 54.1355, -6.64978, 0.46 ) }
    dend_21 { pt3dadd( 39.9418, 54.1651, -6.64466, 0.46 ) }
    dend_21 { pt3dadd( 40.0794, 56.4935, -6.17475, 0.46 ) }
    dend_21 { pt3dadd( 40.2477, 59.025, -5.60303, 0.46 ) }
    dend_21 { pt3dadd( 40.3186, 61.5775, -5.01323, 0.46 ) }
    dend_21 { pt3dadd( 40.3231, 63.6517, -4.50681, 0.46 ) }
    dend_21 { pt3dadd( 40.2899, 66.1279, -3.91565, 0.46 ) }
    dend_21 { pt3dadd( 40.2891, 66.1571, -3.90894, 0.46 ) }
    dend_21 { pt3dadd( 40.1902, 69.8299, -3.11421, 0.46 ) }
    dend_21 { pt3dadd( 40.1112, 73.6723, -2.34581, 0.46 ) }
    dend_21 { pt3dadd( 40.112, 73.7414, -2.33437, 0.46 ) }
    dend_21 { pt3dadd( 40.3053, 77.4434, -1.87103, 0.46 ) }
    dend_21 { pt3dadd( 40.3076, 77.4632, -1.86907, 0.46 ) }
    dend_21 { pt3dadd( 40.6908, 79.3722, -1.65004, 0.46 ) }
    dend_21 { pt3dadd( 41.0608, 80.5767, -1.45817, 0.46 ) }
    dend_21 { pt3dadd( 41.6224, 82.0612, -1.10491, 0.46 ) }
    dend_21 { pt3dadd( 42.1783, 83.6457, -0.641991, 0.46 ) }
    dend_21 { pt3dadd( 42.6171, 85.1893, -0.0147995, 0.46 ) }
    dend_21 { pt3dadd( 42.6246, 85.2334, 0.0074711, 0.46 ) }
    dend_21 { pt3dadd( 42.6761, 87.4215, 1.34027, 0.46 ) }
    dend_21 { pt3dadd( 42.5296, 89.2007, 2.53236, 0.46 ) }
    dend_21 { pt3dadd( 42.5263, 89.2252, 2.54935, 0.46 ) }
    dend_21 { pt3dadd( 42.1482, 91.1579, 3.86421, 0.46 ) }
    dend_21 { pt3dadd( 41.7159, 92.9146, 5.05952, 0.46 ) }
    dend_21 { pt3dadd( 41.455, 94.173, 5.83789, 0.46 ) }
    dend_21 { pt3dadd( 41.4523, 94.1903, 5.84753, 0.46 ) }
    dend_21 { pt3dadd( 41.132, 96.3779, 6.95934, 0.46 ) }
    dend_21 { pt3dadd( 40.8763, 98.321, 7.86062, 0.46 ) }
    dend_21 { pt3dadd( 40.8736, 98.3491, 7.87076, 0.46 ) }
    dend_21 { pt3dadd( 40.7318, 100.584, 8.4609, 0.46 ) }
    dend_21 { pt3dadd( 40.7334, 102.568, 8.90816, 0.46 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 43/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 43.9904, 23.055, -12.6832, 0.69 ) }
    dend_20 { pt3dadd( 45.636, 24.4673, -14.8457, 0.69 ) }
    dend_20 { pt3dadd( 47.1324, 25.775, -16.9632, 0.69 ) }
    dend_20 { pt3dadd( 47.142, 25.785, -16.9776, 0.69 ) }
    dend_20 { pt3dadd( 48.3269, 27.3367, -18.9359, 0.69 ) }
    dend_20 { pt3dadd( 48.3444, 27.3667, -18.9718, 0.69 ) }
    dend_20 { pt3dadd( 49.0622, 28.7824, -20.6264, 0.69 ) }
    dend_20 { pt3dadd( 49.0732, 28.8158, -20.6619, 0.69 ) }
    dend_20 { pt3dadd( 49.4028, 30.2583, -22.0692, 0.69 ) }
    dend_20 { pt3dadd( 49.7589, 32.1809, -23.8286, 0.69 ) }
    dend_20 { pt3dadd( 50.0769, 34.5648, -25.8599, 0.69 ) }
    dend_20 { pt3dadd( 50.0819, 34.6034, -25.8913, 0.69 ) }
    dend_20 { pt3dadd( 50.2985, 36.3708, -27.2469, 0.69 ) }
    dend_20 { pt3dadd( 50.3021, 36.3942, -27.2654, 0.69 ) }
    dend_20 { pt3dadd( 50.4995, 37.4356, -28.1381, 0.69 ) }
    dend_20 { pt3dadd( 50.5115, 37.488, -28.1828, 0.69 ) }
    dend_20 { pt3dadd( 51.0646, 39.4746, -29.8826, 0.69 ) }
    dend_20 { pt3dadd( 51.0714, 39.4972, -29.9012, 0.69 ) }
    dend_20 { pt3dadd( 51.7254, 41.5602, -31.5922, 0.69 ) }
    dend_20 { pt3dadd( 51.8184, 41.8226, -31.7874, 0.69 ) }
    dend_20 { pt3dadd( 52.7362, 44.2165, -33.4515, 0.69 ) }
    dend_20 { pt3dadd( 52.7785, 44.3228, -33.5134, 0.69 ) }
    dend_20 { pt3dadd( 53.837, 46.9701, -34.739, 0.69 ) }
    dend_20 { pt3dadd( 53.8482, 46.9961, -34.7488, 0.69 ) }
    dend_20 { pt3dadd( 55.2451, 50.0377, -35.6634, 0.69 ) }
    dend_20 { pt3dadd( 55.2545, 50.0548, -35.6676, 0.69 ) }
    dend_20 { pt3dadd( 56.4993, 51.9854, -36.7748, 0.69 ) }
    dend_20 { pt3dadd( 57.0446, 52.7504, -37.4381, 0.69 ) }
    dend_20 { pt3dadd( 58.6533, 54.6112, -39.7982, 0.69 ) }
    dend_20 { pt3dadd( 58.7454, 54.7064, -39.948, 0.69 ) }
    dend_20 { pt3dadd( 60.1479, 55.9325, -42.4828, 0.46 ) }
    dend_20 { pt3dadd( 64.78, 59.5595, -51.3635, 0.46 ) }
    dend_20 { pt3dadd( 64.7923, 59.5684, -51.3893, 0.46 ) }
    dend_20 { pt3dadd( 65.8415, 60.2908, -53.7237, 0.46 ) }
    dend_20 { pt3dadd( 65.8531, 60.2988, -53.7502, 0.46 ) }
    dend_20 { pt3dadd( 66.9832, 61.1014, -56.2183, 0.46 ) }
    dend_20 { pt3dadd( 66.9954, 61.1113, -56.2438, 0.46 ) }
    dend_20 { pt3dadd( 69.173, 62.9698, -59.5761, 0.46 ) }
    dend_20 { pt3dadd( 69.2454, 63.0389, -59.6878, 0.46 ) }
    dend_20 { pt3dadd( 71.0212, 65.0513, -62.6491, 0.46 ) }
    dend_20 { pt3dadd( 71.034, 65.0668, -62.6713, 0.46 ) }
    dend_20 { pt3dadd( 72.617, 67.0455, -65.4882, 0.46 ) }
    dend_20 { pt3dadd( 72.6253, 67.0558, -65.5032, 0.46 ) }
    dend_20 { pt3dadd( 73.7941, 68.6224, -67.9429, 0.46 ) }
    dend_20 { pt3dadd( 74.9292, 70.2866, -70.6518, 0.46 ) }
    dend_20 { pt3dadd( 74.9457, 70.3162, -70.7013, 0.46 ) }
    dend_20 { pt3dadd( 75.6081, 71.7921, -73.0571, 0.46 ) }
    dend_20 { pt3dadd( 75.6198, 71.8238, -73.1067, 0.46 ) }
    dend_20 { pt3dadd( 76.2305, 74.3512, -77.1401, 0.46 ) }
    dend_20 { pt3dadd( 76.2337, 74.3775, -77.1825, 0.46 ) }
    dend_20 { pt3dadd( 76.2726, 76.1408, -80.24, 0.46 ) }
    dend_20 { pt3dadd( 76.0048, 77.6617, -83.9191, 0.46 ) }
    dend_20 { pt3dadd( 76.0023, 77.6678, -83.938, 0.46 ) }
    dend_20 { pt3dadd( 75.4503, 78.5784, -87.6362, 0.46 ) }
    dend_20 { pt3dadd( 75.4471, 78.582, -87.6556, 0.46 ) }
    dend_20 { pt3dadd( 75.1522, 78.9843, -90.0714, 0.46 ) }
    dend_20 { pt3dadd( 74.3224, 80.1665, -98.7109, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( 74.3207, 80.1703, -98.7407, 0.46 ) }
    dend_20 { pt3dadd( 74.0587, 81.1458, -105.888, 0.46 ) }
    dend_20 { pt3dadd( 74.0586, 81.1577, -105.967, 0.46 ) }
    dend_20 { pt3dadd( 74.155, 82.178, -111.753, 0.46 ) }
    dend_20 { pt3dadd( 74.1562, 82.1826, -111.772, 0.46 ) }
    dend_20 { pt3dadd( 74.6429, 83.1405, -114.752, 0.46 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 6/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -60.3349, 40.3451, 0.0644704, 0.46 ) }
    dend_14 { pt3dadd( -62.108, 39.7045, 1.07146, 0.46 ) }
    dend_14 { pt3dadd( -63.3579, 39.253, 1.78123, 0.46 ) }
    dend_14 { pt3dadd( -66.3013, 38.1898, 3.45281, 0.46 ) }
    dend_14 { pt3dadd( -66.3511, 38.1718, 3.48107, 0.46 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 11/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -60.3349, 40.3451, 0.0644704, 0.46 ) }
    dend_13 { pt3dadd( -63.2846, 40.7326, 0.951125, 0.46 ) }
    dend_13 { pt3dadd( -65.6949, 41.0493, 1.67562, 0.46 ) }
    dend_13 { pt3dadd( -68.5619, 41.426, 2.5374, 0.46 ) }
    dend_13 { pt3dadd( -68.5809, 41.4285, 2.54312, 0.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 16/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -63.43, 60.6194, -14.6634, 0.69 ) }
    dend_11 { pt3dadd( -65.9422, 62.0375, -14.3109, 0.69 ) }
    dend_11 { pt3dadd( -69.3881, 64.186, -14.0676, 0.69 ) }
    dend_11 { pt3dadd( -70.2923, 64.7785, -14.1192, 0.46 ) }
    dend_11 { pt3dadd( -71.4786, 65.5744, -14.2654, 0.46 ) }
    dend_11 { pt3dadd( -73.0429, 66.6394, -14.5876, 0.46 ) }
    dend_11 { pt3dadd( -75.2287, 68.1275, -15.0377, 0.46 ) }
    dend_11 { pt3dadd( -76.86, 69.2868, -15.5428, 0.46 ) }
    dend_11 { pt3dadd( -78.8713, 70.9276, -16.572, 0.46 ) }
    dend_11 { pt3dadd( -78.9061, 70.9568, -16.593, 0.46 ) }
    dend_11 { pt3dadd( -80.1277, 72.0114, -17.5132, 0.46 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 27/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -63.43, 60.6194, -14.6634, 0.69 ) }
    dend_10 { pt3dadd( -64.3835, 62.0478, -18.516, 0.69 ) }
    dend_10 { pt3dadd( -64.9979, 63.0232, -21.2564, 0.69 ) }
    dend_10 { pt3dadd( -65.0055, 63.0364, -21.2934, 0.69 ) }
    dend_10 { pt3dadd( -65.7088, 64.2484, -24.4628, 0.69 ) }
    dend_10 { pt3dadd( -65.7135, 64.2556, -24.4808, 0.69 ) }
    dend_10 { pt3dadd( -66.4834, 65.3999, -27.2697, 0.69 ) }
    dend_10 { pt3dadd( -66.4971, 65.4173, -27.3146, 0.69 ) }
    dend_10 { pt3dadd( -67.6181, 66.5667, -30.5602, 0.69 ) }
    dend_10 { pt3dadd( -68.5111, 67.266, -32.814, 0.69 ) }
    dend_10 { pt3dadd( -69.0112, 67.5139, -33.8776, 0.69 ) }
    dend_10 { pt3dadd( -69.0574, 67.531, -33.976, 0.69 ) }
    dend_10 { pt3dadd( -70.1686, 67.8236, -36.3608, 0.69 ) }
    dend_10 { pt3dadd( -70.1806, 67.826, -36.3882, 0.69 ) }
    dend_10 { pt3dadd( -71.2046, 67.9701, -39.1166, 0.69 ) }
    dend_10 { pt3dadd( -72.0254, 68.0824, -41.6472, 0.69 ) }
    dend_10 { pt3dadd( -73.1384, 68.3433, -45.7754, 0.69 ) }
    dend_10 { pt3dadd( -73.8109, 68.5726, -48.5653, 0.69 ) }
    dend_10 { pt3dadd( -73.8214, 68.5776, -48.614, 0.69 ) }
    dend_10 { pt3dadd( -74.6843, 69.0399, -52.9658, 0.69 ) }
    dend_10 { pt3dadd( -74.6893, 69.0433, -52.9952, 0.69 ) }
    dend_10 { pt3dadd( -75.4052, 69.5904, -57.5138, 0.69 ) }
    dend_10 { pt3dadd( -75.4085, 69.5926, -57.5334, 0.69 ) }
    dend_10 { pt3dadd( -76.1876, 70.1094, -62.1556, 0.69 ) }
    dend_10 { pt3dadd( -76.1928, 70.1127, -62.1849, 0.69 ) }
    dend_10 { pt3dadd( -76.841, 70.4561, -65.4365, 0.69 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 53/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 68.1508, -53.6447, -19.0389, 0.46 ) }
    dend_52 { pt3dadd( 70.5845, -52.3874, -18.0023, 0.46 ) }
    dend_52 { pt3dadd( 72.2239, -51.5404, -17.3041, 0.46 ) }
    dend_52 { pt3dadd( 72.3652, -51.4675, -17.2439, 0.46 ) }
    dend_52 { pt3dadd( 74.93, -50.1425, -16.1516, 0.46 ) }
    dend_52 { pt3dadd( 74.9549, -50.1296, -16.141, 0.46 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 59/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 68.1508, -53.6447, -19.0389, 0.46 ) }
    dend_51 { pt3dadd( 69.7478, -54.9908, -18.6467, 0.46 ) }
    dend_51 { pt3dadd( 71.8066, -56.7228, -18.1115, 0.46 ) }
    dend_51 { pt3dadd( 73.5976, -58.1664, -17.6556, 0.46 ) }
    dend_51 { pt3dadd( 74.7154, -59.0523, -17.3518, 0.46 ) }
    dend_51 { pt3dadd( 74.7548, -59.0812, -17.3412, 0.46 ) }
    dend_51 { pt3dadd( 77.7786, -61.2126, -16.5212, 0.46 ) }
    dend_51 { pt3dadd( 80.051, -62.6246, -15.9478, 0.46 ) }
    dend_51 { pt3dadd( 80.8388, -63.0623, -15.7627, 0.46 ) }
    dend_51 { pt3dadd( 83.7116, -64.4671, -15.2024, 0.46 ) }
    dend_51 { pt3dadd( 85.3897, -65.2201, -14.9156, 0.46 ) }
    dend_51 { pt3dadd( 85.4534, -65.2477, -14.907, 0.46 ) }
    dend_51 { pt3dadd( 88.6143, -66.4922, -14.6125, 0.46 ) }
    dend_51 { pt3dadd( 90.2268, -67.0861, -14.5481, 0.46 ) }
    dend_51 { pt3dadd( 91.7611, -67.6837, -14.5279, 0.46 ) }
    dend_51 { pt3dadd( 92.9984, -68.1987, -14.5774, 0.46 ) }
    dend_51 { pt3dadd( 95.5115, -69.3529, -14.7363, 0.46 ) }
    dend_51 { pt3dadd( 97.3832, -70.2716, -14.8844, 0.46 ) }
    dend_51 { pt3dadd( 99.9235, -71.6086, -15.1311, 0.46 ) }
    dend_51 { pt3dadd( 101.801, -72.6539, -15.3472, 0.46 ) }
    dend_51 { pt3dadd( 104.006, -73.8797, -15.5902, 0.46 ) }
    dend_51 { pt3dadd( 104.075, -73.9204, -15.5987, 0.46 ) }
    dend_51 { pt3dadd( 106.182, -75.2673, -15.8776, 0.46 ) }
    dend_51 { pt3dadd( 106.232, -75.3005, -15.8836, 0.46 ) }
    dend_51 { pt3dadd( 108.015, -76.5776, -16.1161, 0.46 ) }
    dend_51 { pt3dadd( 110.071, -78.0868, -16.3697, 0.46 ) }
    dend_51 { pt3dadd( 111.495, -79.1451, -16.5177, 0.46 ) }
    dend_51 { pt3dadd( 113.161, -80.3959, -16.6902, 0.46 ) }
    dend_51 { pt3dadd( 115.871, -82.5098, -16.9342, 0.46 ) }
    dend_51 { pt3dadd( 118.064, -84.2671, -17.1047, 0.46 ) }
    dend_51 { pt3dadd( 119.287, -85.3272, -17.1637, 0.46 ) }
    dend_51 { pt3dadd( 121.023, -86.9371, -17.2139, 0.46 ) }
    dend_51 { pt3dadd( 122.445, -88.3128, -17.2199, 0.46 ) }
    dend_51 { pt3dadd( 123.601, -89.5602, -17.1762, 0.46 ) }
    dend_51 { pt3dadd( 123.62, -89.5829, -17.1738, 0.46 ) }
    dend_51 { pt3dadd( 125.165, -91.5168, -16.8158, 0.46 ) }
    dend_51 { pt3dadd( 125.183, -91.5402, -16.811, 0.46 ) }
    dend_51 { pt3dadd( 125.921, -92.5415, -16.6108, 0.46 ) }
    dend_51 { pt3dadd( 127.311, -94.3856, -16.2779, 0.46 ) }
    dend_51 { pt3dadd( 128.201, -95.5538, -16.0819, 0.46 ) }
    dend_51 { pt3dadd( 129.429, -97.2159, -15.8144, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_51 { pt3dadd( 130.53, -98.7729, -15.5954, 0.46 ) }
    dend_51 { pt3dadd( 131.548, -100.424, -15.3849, 0.46 ) }
    dend_51 { pt3dadd( 132.465, -102.185, -15.1979, 0.46 ) }
    dend_51 { pt3dadd( 133.2, -103.595, -15.0667, 0.46 ) }
    dend_51 { pt3dadd( 133.647, -104.374, -15.0049, 0.46 ) }
    dend_51 { pt3dadd( 135.04, -106.511, -14.8103, 0.46 ) }
    dend_51 { pt3dadd( 136.05, -107.978, -14.661, 0.46 ) }
    dend_51 { pt3dadd( 137.81, -110.167, -14.4075, 0.46 ) }
    dend_51 { pt3dadd( 140.65, -113.246, -13.9018, 0.46 ) }
    dend_51 { pt3dadd( 141.878, -114.41, -13.6679, 0.46 ) }
    dend_51 { pt3dadd( 143.707, -115.958, -13.2235, 0.46 ) }
    dend_51 { pt3dadd( 143.73, -115.975, -13.2168, 0.46 ) }
    dend_51 { pt3dadd( 145.226, -116.98, -12.7019, 0.46 ) }
    dend_51 { pt3dadd( 147.657, -118.524, -11.6886, 0.46 ) }
    dend_51 { pt3dadd( 147.672, -118.534, -11.6807, 0.46 ) }
    dend_51 { pt3dadd( 150.084, -120.122, -10.3152, 0.46 ) }
    dend_51 { pt3dadd( 150.099, -120.131, -10.3065, 0.46 ) }
    dend_51 { pt3dadd( 152.035, -121.347, -9.21115, 0.46 ) }
    dend_51 { pt3dadd( 152.058, -121.361, -9.19919, 0.46 ) }
    dend_51 { pt3dadd( 153.12, -121.923, -8.74587, 0.46 ) }
    dend_51 { pt3dadd( 153.186, -121.958, -8.72015, 0.46 ) }
    dend_51 { pt3dadd( 155.55, -123.203, -7.90114, 0.46 ) }
    dend_51 { pt3dadd( 155.592, -123.226, -7.88629, 0.46 ) }
    dend_51 { pt3dadd( 159.193, -125.228, -6.63138, 0.46 ) }
    dend_51 { pt3dadd( 159.209, -125.237, -6.62433, 0.46 ) }
    dend_51 { pt3dadd( 162.166, -126.97, -5.13514, 0.46 ) }
    dend_51 { pt3dadd( 162.182, -126.979, -5.12685, 0.46 ) }
    dend_51 { pt3dadd( 164.612, -128.391, -3.70458, 0.46 ) }
    dend_51 { pt3dadd( 164.687, -128.435, -3.65594, 0.46 ) }
    dend_51 { pt3dadd( 166.96, -129.769, -1.75763, 0.46 ) }
    dend_51 { pt3dadd( 167.081, -129.839, -1.64382, 0.46 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 31/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -34.9456, -52.5316, -30.7961, 0.69 ) }
    dend_42 { pt3dadd( -34.1155, -55.3755, -29.9262, 0.69 ) }
    dend_42 { pt3dadd( -33.6047, -57.1936, -29.3957, 0.69 ) }
    dend_42 { pt3dadd( -33.5969, -57.2215, -29.3877, 0.69 ) }
    dend_42 { pt3dadd( -32.9523, -59.3835, -28.6924, 0.69 ) }
    dend_42 { pt3dadd( -32.9466, -59.4017, -28.6862, 0.69 ) }
    dend_42 { pt3dadd( -32.3873, -61.0215, -28.0526, 0.69 ) }
    dend_42 { pt3dadd( -31.8309, -62.6711, -27.2909, 0.69 ) }
    dend_42 { pt3dadd( -31.8243, -62.688, -27.2825, 0.69 ) }
    dend_42 { pt3dadd( -31.0673, -64.3869, -26.3305, 0.69 ) }
    dend_42 { pt3dadd( -31.0547, -64.4095, -26.3153, 0.69 ) }
    dend_42 { pt3dadd( -30.1662, -66.0926, -25.1214, 0.69 ) }
    dend_42 { pt3dadd( -30.1586, -66.1071, -25.11, 0.69 ) }
    dend_42 { pt3dadd( -29.7941, -66.8823, -24.4906, 0.69 ) }
    dend_42 { pt3dadd( -29.7781, -66.92, -24.462, 0.69 ) }
    dend_42 { pt3dadd( -29.2834, -68.3198, -23.5307, 0.69 ) }
    dend_42 { pt3dadd( -28.867, -69.6191, -22.7395, 0.69 ) }
    dend_42 { pt3dadd( -28.8299, -69.7486, -22.6734, 0.69 ) }
    dend_42 { pt3dadd( -28.3649, -71.3462, -21.9046, 0.69 ) }
    dend_42 { pt3dadd( -28.3592, -71.3637, -21.8966, 0.69 ) }
    dend_42 { pt3dadd( -27.5584, -73.557, -20.8824, 0.69 ) }
    dend_42 { pt3dadd( -27.5432, -73.6002, -20.8622, 0.69 ) }
    dend_42 { pt3dadd( -26.8327, -75.4608, -19.9618, 0.69 ) }
    dend_42 { pt3dadd( -26.8139, -75.512, -19.9368, 0.69 ) }
    dend_42 { pt3dadd( -26.2407, -77.2212, -19.1122, 0.69 ) }
    dend_42 { pt3dadd( -25.9116, -78.256, -18.6097, 0.69 ) }
    dend_42 { pt3dadd( -25.6455, -79.555, -17.9959, 0.69 ) }
    dend_42 { pt3dadd( -25.6197, -79.7637, -17.9005, 0.69 ) }
    dend_42 { pt3dadd( -25.5508, -81.2605, -17.2221, 0.69 ) }
    dend_42 { pt3dadd( -25.6322, -82.898, -16.4856, 0.69 ) }
    dend_42 { pt3dadd( -25.6387, -82.9434, -16.4657, 0.69 ) }
    dend_42 { pt3dadd( -26.1207, -85.4108, -15.3437, 0.69 ) }
    dend_42 { pt3dadd( -26.1242, -85.4283, -15.3347, 0.69 ) }
    dend_42 { pt3dadd( -26.399, -86.9207, -14.43, 0.69 ) }
    dend_42 { pt3dadd( -26.6784, -88.46, -13.3812, 0.69 ) }
    dend_42 { pt3dadd( -26.6805, -88.4756, -13.3689, 0.69 ) }
    dend_42 { pt3dadd( -26.8382, -90.1646, -11.8843, 0.69 ) }
    dend_42 { pt3dadd( -26.9099, -91.7376, -10.3676, 0.69 ) }
    dend_42 { pt3dadd( -26.9901, -93.5903, -8.46699, 0.69 ) }
    dend_42 { pt3dadd( -26.9909, -93.6106, -8.44494, 0.69 ) }
    dend_42 { pt3dadd( -26.9994, -95.2239, -6.56778, 0.69 ) }
    dend_42 { pt3dadd( -27.008, -96.9487, -4.50152, 0.69 ) }
    dend_42 { pt3dadd( -27.008, -96.9611, -4.48579, 0.69 ) }
    dend_42 { pt3dadd( -27.0829, -98.5159, -2.38172, 0.69 ) }
    dend_42 { pt3dadd( -27.0847, -98.5333, -2.35737, 0.69 ) }
    dend_42 { pt3dadd( -27.2491, -99.9515, -0.348197, 0.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 77/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -34.9456, -52.5316, -30.7961, 0.69 ) }
    dend_41 { pt3dadd( -37.1869, -54.7447, -30.1252, 0.69 ) }
    dend_41 { pt3dadd( -38.3707, -55.9231, -29.7687, 0.69 ) }
    dend_41 { pt3dadd( -39.6092, -57.1552, -29.3782, 0.69 ) }
    dend_41 { pt3dadd( -41.4253, -58.9459, -28.8236, 0.69 ) }
    dend_41 { pt3dadd( -43.2039, -60.6747, -28.2779, 0.69 ) }
    dend_41 { pt3dadd( -44.7783, -62.2231, -27.8145, 0.69 ) }
    dend_41 { pt3dadd( -44.7997, -62.2432, -27.8085, 0.69 ) }
    dend_41 { pt3dadd( -46.6751, -64.0258, -27.2414, 0.69 ) }
    dend_41 { pt3dadd( -47.9408, -65.2314, -26.8622, 0.69 ) }
    dend_41 { pt3dadd( -49.002, -66.2923, -26.5099, 0.69 ) }
    dend_41 { pt3dadd( -50.6992, -67.9392, -25.9396, 0.69 ) }
    dend_41 { pt3dadd( -51.6965, -68.9204, -25.5682, 0.69 ) }
    dend_41 { pt3dadd( -51.71, -68.9341, -25.5625, 0.69 ) }
    dend_41 { pt3dadd( -53.5338, -70.8194, -24.6444, 0.69 ) }
    dend_41 { pt3dadd( -54.841, -72.2016, -23.8486, 0.69 ) }
    dend_41 { pt3dadd( -54.9604, -72.3379, -23.764, 0.69 ) }
    dend_41 { pt3dadd( -56.0526, -73.6576, -22.862, 0.69 ) }
    dend_41 { pt3dadd( -56.3009, -73.997, -22.6521, 0.69 ) }
    dend_41 { pt3dadd( -57.0278, -75.0439, -22.0398, 0.69 ) }
    dend_41 { pt3dadd( -57.0857, -75.1373, -21.9916, 0.69 ) }
    dend_41 { pt3dadd( -58.149, -76.9338, -21.3067, 0.69 ) }
    dend_41 { pt3dadd( -58.1588, -76.9504, -21.3014, 0.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_41 { pt3dadd( -58.911, -78.3022, -20.9439, 0.69 ) }
    dend_41 { pt3dadd( -59.6277, -79.6367, -20.635, 0.69 ) }
    dend_41 { pt3dadd( -60.3144, -80.9534, -20.369, 0.69 ) }
    dend_41 { pt3dadd( -61.305, -82.6944, -19.9956, 0.69 ) }
    dend_41 { pt3dadd( -61.6451, -83.2048, -19.8793, 0.69 ) }
    dend_41 { pt3dadd( -62.566, -84.4436, -19.4715, 0.69 ) }
    dend_41 { pt3dadd( -62.5955, -84.4794, -19.4527, 0.69 ) }
    dend_41 { pt3dadd( -63.0346, -84.984, -19.1543, 0.69 ) }
    dend_41 { pt3dadd( -63.9532, -85.9549, -18.4795, 0.69 ) }
    dend_41 { pt3dadd( -65.5145, -87.5131, -17.244, 0.69 ) }
    dend_41 { pt3dadd( -67.3078, -89.1793, -15.7904, 0.69 ) }
    dend_41 { pt3dadd( -68.7777, -90.4344, -14.5832, 0.46 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 12/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 155.004, 29.0718, -46.4704, 0.46 ) }
    dend_34 { pt3dadd( 157.172, 29.5524, -47.175, 0.46 ) }
    dend_34 { pt3dadd( 157.191, 29.5562, -47.1809, 0.46 ) }
    dend_34 { pt3dadd( 160.124, 30.0557, -48.2695, 0.46 ) }
    dend_34 { pt3dadd( 160.179, 30.0643, -48.2917, 0.46 ) }
    dend_34 { pt3dadd( 163.781, 30.6242, -49.7423, 0.46 ) }
    dend_34 { pt3dadd( 168.023, 31.2834, -51.4505, 0.46 ) }
    dend_34 { pt3dadd( 168.151, 31.2983, -51.5059, 0.46 ) }
    dend_34 { pt3dadd( 170.916, 31.62, -52.6673, 0.46 ) }
    dend_34 { pt3dadd( 171.083, 31.6395, -52.732, 0.46 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 22/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 155.004, 29.0718, -46.4704, 0.69 ) }
    dend_33 { pt3dadd( 156.501, 28.5849, -48.8731, 0.69 ) }
    dend_33 { pt3dadd( 156.643, 28.5285, -49.1195, 0.69 ) }
    dend_33 { pt3dadd( 157.954, 27.7676, -51.6984, 0.69 ) }
    dend_33 { pt3dadd( 157.97, 27.7559, -51.733, 0.69 ) }
    dend_33 { pt3dadd( 159.387, 26.2751, -55.2326, 0.69 ) }
    dend_33 { pt3dadd( 159.922, 25.5856, -56.6963, 0.69 ) }
    dend_33 { pt3dadd( 159.93, 25.5611, -56.739, 0.69 ) }
    dend_33 { pt3dadd( 160.15, 24.3931, -58.4894, 0.69 ) }
    dend_33 { pt3dadd( 160.149, 24.2122, -58.716, 0.69 ) }
    dend_33 { pt3dadd( 160.046, 22.4779, -60.6449, 0.69 ) }
    dend_33 { pt3dadd( 160.04, 22.4265, -60.692, 0.69 ) }
    dend_33 { pt3dadd( 159.879, 21.0717, -61.9851, 0.69 ) }
    dend_33 { pt3dadd( 159.871, 20.8653, -62.1742, 0.69 ) }
    dend_33 { pt3dadd( 159.91, 19.5256, -63.3818, 0.69 ) }
    dend_33 { pt3dadd( 159.916, 19.4819, -63.4224, 0.69 ) }
    dend_33 { pt3dadd( 160.393, 17.7891, -65.0276, 0.69 ) }
    dend_33 { pt3dadd( 160.422, 17.7226, -65.0965, 0.69 ) }
    dend_33 { pt3dadd( 161.316, 16.2007, -66.7893, 0.69 ) }
    dend_33 { pt3dadd( 161.421, 16.0565, -66.9641, 0.69 ) }
    dend_33 { pt3dadd( 162.492, 14.8172, -68.5824, 0.69 ) }
    dend_33 { pt3dadd( 162.538, 14.7704, -68.6446, 0.69 ) }
    dend_33 { pt3dadd( 164.109, 13.3236, -70.6593, 0.69 ) }
    dend_33 { pt3dadd( 164.15, 13.286, -70.717, 0.69 ) }
    dend_33 { pt3dadd( 165.912, 11.6836, -73.4074, 0.69 ) }
    dend_33 { pt3dadd( 165.926, 11.6705, -73.4305, 0.69 ) }
    dend_33 { pt3dadd( 167.185, 10.4841, -75.6273, 0.69 ) }
    dend_33 { pt3dadd( 167.251, 10.42, -75.7458, 0.69 ) }
    dend_33 { pt3dadd( 169.053, 8.56394, -79.1827, 0.69 ) }
    dend_33 { pt3dadd( 169.061, 8.55553, -79.199, 0.69 ) }
    dend_33 { pt3dadd( 169.996, 7.54875, -81.3913, 0.69 ) }
    dend_33 { pt3dadd( 170.006, 7.5378, -81.4173, 0.69 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 54/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 40.7334, 102.568, 8.90816, 0.46 ) }
    dend_23 { pt3dadd( 41.8766, 103.538, 8.91938, 0.46 ) }
    dend_23 { pt3dadd( 43.4298, 104.506, 8.9315, 0.46 ) }
    dend_23 { pt3dadd( 45.712, 105.691, 8.94602, 0.46 ) }
    dend_23 { pt3dadd( 45.7746, 105.722, 8.945, 0.46 ) }
    dend_23 { pt3dadd( 48.1835, 106.903, 8.88237, 0.46 ) }
    dend_23 { pt3dadd( 51.6077, 108.475, 8.77513, 0.46 ) }
    dend_23 { pt3dadd( 53.6843, 109.29, 8.69666, 0.46 ) }
    dend_23 { pt3dadd( 55.816, 109.978, 8.6064, 0.46 ) }
    dend_23 { pt3dadd( 57.8322, 110.553, 8.54285, 0.46 ) }
    dend_23 { pt3dadd( 57.8609, 110.561, 8.5423, 0.46 ) }
    dend_23 { pt3dadd( 59.3082, 110.944, 8.53998, 0.46 ) }
    dend_23 { pt3dadd( 60.6838, 111.375, 8.57035, 0.46 ) }
    dend_23 { pt3dadd( 63.2791, 112.274, 8.70521, 0.46 ) }
    dend_23 { pt3dadd( 65.5689, 113.051, 8.87614, 0.46 ) }
    dend_23 { pt3dadd( 65.9163, 113.155, 8.9064, 0.46 ) }
    dend_23 { pt3dadd( 68.5925, 113.98, 9.14335, 0.46 ) }
    dend_23 { pt3dadd( 72.5161, 115.247, 9.50409, 0.46 ) }
    dend_23 { pt3dadd( 75.298, 116.111, 9.76334, 0.46 ) }
    dend_23 { pt3dadd( 75.3456, 116.126, 9.76763, 0.46 ) }
    dend_23 { pt3dadd( 78.2713, 116.902, 9.97526, 0.46 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 75/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 40.7334, 102.568, 8.90816, 0.23 ) }
    dend_22 { pt3dadd( 40.1502, 105.041, 7.6978, 0.23 ) }
    dend_22 { pt3dadd( 39.7486, 106.876, 6.92946, 0.23 ) }
    dend_22 { pt3dadd( 39.7377, 106.924, 6.91879, 0.23 ) }
    dend_22 { pt3dadd( 39.1903, 109.096, 7.34695, 0.23 ) }
    dend_22 { pt3dadd( 39.183, 109.128, 7.36973, 0.23 ) }
    dend_22 { pt3dadd( 38.9041, 110.426, 8.50402, 0.23 ) }
    dend_22 { pt3dadd( 38.892, 110.488, 8.58155, 0.23 ) }
    dend_22 { pt3dadd( 38.6644, 111.781, 10.4222, 0.23 ) }
    dend_22 { pt3dadd( 38.3046, 113.233, 12.6495, 0.23 ) }
    dend_22 { pt3dadd( 37.8592, 114.78, 15.0751, 0.23 ) }
    dend_22 { pt3dadd( 37.8563, 114.792, 15.0912, 0.23 ) }
    dend_22 { pt3dadd( 37.6213, 115.84, 16.4085, 0.23 ) }
    dend_22 { pt3dadd( 37.6191, 115.853, 16.4234, 0.23 ) }
    dend_22 { pt3dadd( 37.4406, 117.423, 17.9626, 0.23 ) }
    dend_22 { pt3dadd( 37.2885, 119.214, 19.3833, 0.23 ) }
    dend_22 { pt3dadd( 37.246, 120.822, 20.4915, 0.23 ) }
    dend_22 { pt3dadd( 37.2488, 120.887, 20.5383, 0.23 ) }
    dend_22 { pt3dadd( 37.3166, 121.72, 21.1234, 0.23 ) }
    dend_22 { pt3dadd( 37.3525, 122.023, 21.3333, 0.23 ) }
    dend_22 { pt3dadd( 37.7627, 124.129, 22.7631, 0.23 ) }
    dend_22 { pt3dadd( 38.195, 126.265, 24.3365, 0.23 ) }
    dend_22 { pt3dadd( 38.5345, 128.19, 25.8649, 0.23 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 98/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 78.2713, 116.902, 9.97526, 0.46 ) }
    dend_25 { pt3dadd( 80.0491, 117.406, 10.6057, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_25 { pt3dadd( 82.3686, 118.09, 11.346, 0.46 ) }
    dend_25 { pt3dadd( 84.716, 118.693, 11.9904, 0.46 ) }
    dend_25 { pt3dadd( 87.9376, 119.459, 12.7004, 0.46 ) }
    dend_25 { pt3dadd( 87.976, 119.469, 12.707, 0.46 ) }
    dend_25 { pt3dadd( 89.7336, 119.906, 12.9679, 0.46 ) }
    dend_25 { pt3dadd( 91.156, 120.26, 13.1109, 0.46 ) }
    dend_25 { pt3dadd( 93.2411, 120.719, 13.2122, 0.46 ) }
    dend_25 { pt3dadd( 96.2824, 121.372, 13.2758, 0.23 ) }
    dend_25 { pt3dadd( 99.383, 122.14, 13.2734, 0.23 ) }
    dend_25 { pt3dadd( 100.426, 122.394, 13.2924, 0.23 ) }
    dend_25 { pt3dadd( 101.819, 122.767, 13.273, 0.23 ) }
    dend_25 { pt3dadd( 103.582, 123.253, 13.2046, 0.23 ) }
    dend_25 { pt3dadd( 104.7, 123.601, 13.1318, 0.23 ) }
    dend_25 { pt3dadd( 106.303, 124.145, 12.9622, 0.23 ) }
    dend_25 { pt3dadd( 108.808, 124.999, 12.6448, 0.23 ) }
    dend_25 { pt3dadd( 112.201, 126.039, 12.2171, 0.23 ) }
    dend_25 { pt3dadd( 112.22, 126.044, 12.2148, 0.23 ) }
    dend_25 { pt3dadd( 113.35, 126.339, 12.0917, 0.23 ) }
    dend_25 { pt3dadd( 116.904, 127.132, 11.7538, 0.23 ) }
    dend_25 { pt3dadd( 119.62, 127.612, 11.5473, 0.23 ) }
    dend_25 { pt3dadd( 122.391, 128.003, 11.3158, 0.23 ) }
    dend_25 { pt3dadd( 125.134, 128.22, 11.0968, 0.23 ) }
    dend_25 { pt3dadd( 126.822, 128.3, 10.9291, 0.23 ) }
    dend_25 { pt3dadd( 129.324, 128.266, 10.6239, 0.23 ) }
    dend_25 { pt3dadd( 132.764, 127.985, 10.1178, 0.23 ) }
    dend_25 { pt3dadd( 135.868, 127.55, 9.50705, 0.23 ) }
    dend_25 { pt3dadd( 137.918, 127.149, 8.99696, 0.23 ) }
    dend_25 { pt3dadd( 138.038, 127.118, 8.95845, 0.23 ) }
    dend_25 { pt3dadd( 140.111, 126.368, 8.04095, 0.23 ) }
    dend_25 { pt3dadd( 140.214, 126.319, 7.97888, 0.23 ) }
    dend_25 { pt3dadd( 141.545, 125.486, 6.69874, 0.23 ) }
    dend_25 { pt3dadd( 141.556, 125.479, 6.68413, 0.23 ) }
    dend_25 { pt3dadd( 142.665, 124.808, 5.084, 0.23 ) }
    dend_25 { pt3dadd( 143.905, 124.103, 3.12818, 0.23 ) }
    dend_25 { pt3dadd( 143.928, 124.091, 3.0852, 0.23 ) }
    dend_25 { pt3dadd( 145.499, 123.321, -0.111397, 0.23 ) }
    dend_25 { pt3dadd( 145.581, 123.282, -0.312114, 0.23 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 37/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 78.2713, 116.902, 9.97526, 0.46 ) }
    dend_24 { pt3dadd( 78.4778, 116.649, 9.54009, 0.46 ) }
    dend_24 { pt3dadd( 79.8153, 115.308, 7.16365, 0.46 ) }
    dend_24 { pt3dadd( 82.0792, 113.213, 3.39773, 0.46 ) }
    dend_24 { pt3dadd( 82.0938, 113.202, 3.37403, 0.46 ) }
    dend_24 { pt3dadd( 83.8306, 111.974, 0.551592, 0.46 ) }
    dend_24 { pt3dadd( 83.8474, 111.965, 0.528126, 0.46 ) }
    dend_24 { pt3dadd( 85.2546, 111.429, -1.36205, 0.46 ) }
    dend_24 { pt3dadd( 85.2668, 111.427, -1.37772, 0.46 ) }
    dend_24 { pt3dadd( 88.277, 111.104, -4.67931, 0.46 ) }
    dend_24 { pt3dadd( 88.4601, 111.089, -4.87722, 0.46 ) }
    dend_24 { pt3dadd( 91.6378, 110.96, -8.24014, 0.46 ) }
    dend_24 { pt3dadd( 91.6588, 110.959, -8.2615, 0.46 ) }
    dend_24 { pt3dadd( 94.5832, 110.696, -11.1695, 0.46 ) }
    dend_24 { pt3dadd( 94.696, 110.684, -11.2678, 0.46 ) }
    dend_24 { pt3dadd( 98.0697, 110.317, -13.8858, 0.46 ) }
    dend_24 { pt3dadd( 98.1092, 110.312, -13.9161, 0.46 ) }
    dend_24 { pt3dadd( 101.657, 109.687, -16.6366, 0.46 ) }
    dend_24 { pt3dadd( 101.762, 109.669, -16.7113, 0.46 ) }
    dend_24 { pt3dadd( 106.042, 108.909, -19.2887, 0.46 ) }
    dend_24 { pt3dadd( 106.189, 108.886, -19.3704, 0.46 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_59, dend_56, dend_36, dend_15, dend_0, dend_61, dend_60, dend_58, dend_57, dend_47, dend_46, dend_37, dend_17, dend_16, dend_4, dend_1, dend_55, dend_48, dend_45, dend_38, dend_29, dend_18, dend_8, dend_5, dend_3, dend_2, dend_54, dend_49, dend_44, dend_39, dend_31, dend_30, dend_26, dend_19, dend_12, dend_9, dend_7, dend_6, dend_53, dend_50, dend_43, dend_40, dend_35, dend_32, dend_28, dend_27, dend_21, dend_20, dend_14, dend_13, dend_11, dend_10, dend_52, dend_51, dend_42, dend_41, dend_34, dend_33, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_2 = new SectionList()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_59, dend_56, dend_36, dend_15, dend_0, dend_61, dend_60, dend_58, dend_57, dend_47, dend_46, dend_37, dend_17, dend_16, dend_4, dend_1, dend_55, dend_48, dend_45, dend_38, dend_29, dend_18, dend_8, dend_5, dend_3, dend_2, dend_54, dend_49, dend_44, dend_39, dend_31, dend_30, dend_26, dend_19, dend_12, dend_9, dend_7, dend_6, dend_53, dend_50, dend_43, dend_40, dend_35, dend_32, dend_28, dend_27, dend_21, dend_20, dend_14, dend_13, dend_11, dend_10, dend_52, dend_51, dend_42, dend_41, dend_34, dend_33, dend_23, dend_22, dend_25, dend_24]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_12 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_56 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_46 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_16 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_55 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_45 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_49 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_44 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_53 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_32 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_21 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_20 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_10 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_42 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_41 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_33 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_23 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_25 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_24 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_36 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_59 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_15 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_37 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_60 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_47 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_4 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_48 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_38 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_17 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_5 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_61 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_19 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_26 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_57 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_8 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_6 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_39 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_28 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_54 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_58 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_7 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_27 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_50 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_14 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_13 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_52 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_11 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_22 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_34 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_36, dend_36, dend_36, dend_36, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, axon_0, axon_0, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_56 nseg = 3
    dend_46 nseg = 9
    dend_16 nseg = 9
    dend_55 nseg = 7
    dend_45 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_30 nseg = 5
    dend_53 nseg = 3
    dend_43 nseg = 9
    dend_32 nseg = 3
    dend_21 nseg = 5
    dend_20 nseg = 7
    dend_10 nseg = 3
    dend_51 nseg = 7
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_33 nseg = 3
    dend_23 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_MC_940ffcbb27_0_0


