// Cell: bAC217_L5_NBC_2db880c523_0_0
/*
{
  "id" : "bAC217_L5_NBC_2db880c523_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.02864, -8.95645, 0.0, 3.19243", "0.862269, -8.03576, 0.0, 5.44292", "0.695902, -7.11508, 0.0, 7.15224", "0.529535, -6.1944, 0.0, 9.22848", "0.363167, -5.27371, 0.0, 10.1568", "0.1968, -4.35303, 0.0, 10.228", "0.0304325, -3.43235, 0.0, 10.4278", "-0.135935, -2.51166, 0.0, 10.5372", "-0.302302, -1.59098, 0.0, 10.6261", "-0.468669, -0.670298, 0.0, 10.9078", "-0.635037, 0.250385, 0.0, 11.3454", "-0.801404, 1.17107, 0.0, 11.7831", "-0.967771, 2.09175, 0.0, 12.1088", "-1.13414, 3.01243, 0.0, 11.7546", "-1.30051, 3.93312, 0.0, 11.2789", "-1.46687, 4.8538, 0.0, 10.5376", "-1.63324, 5.77448, 0.0, 9.41766", "-1.79961, 6.69517, 0.0, 7.67825", "-1.96598, 7.61585, 0.0, 5.72147", "-2.13234, 8.53653, 0.0, 3.87406", "-2.29871, 9.45721, 0.0, 2.1959" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.55142, -10.2197, -8.14, 3.62", "-1.55142, -10.2197, -8.14, 3.62", "-1.358, -13.2599, -8.14, 3.62", "-1.19199, -15.8693, -8.14, 3.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.23859, 4.28084, -3.81, 1.24", "7.26637, 4.51523, -3.31139, 1.24", "12.7165, 5.0085, -1.84297, 1.24", "17.8604, 5.47406, -0.457047, 1.24", "22.9912, 5.93842, 0.925343, 1.24", "33.5353, 6.89272, 3.76624, 1.24", "41.6586, 7.62793, 5.95493, 1.24", "45.0638, 7.81766, 6.99039, 1.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.49141, 5.03684, -1.31, 0.68", "-8.71305, 4.99162, -1.2625, 0.68", "-10.8843, 5.03022, -1.14837, 0.68", "-14.3704, 5.43185, -1.11901, 0.68", "-16.8465, 5.96516, -1.1669, 0.68", "-18.3652, 6.44931, -1.22268, 0.68", "-20.9401, 7.39274, -1.30165, 0.68", "-23.5833, 8.54261, -1.45337, 0.68", "-26.9679, 10.3185, -1.7191, 0.68", "-29.3111, 11.7934, -1.99533, 0.68", "-32.6796, 14.1002, -2.60525, 0.68", "-35.7268, 16.3022, -3.40451, 0.68", "-37.7599, 17.8669, -4.127, 0.68", "-39.6692, 19.469, -4.96958, 0.68", "-41.0206, 20.6593, -5.62568, 0.68", "-43.5831, 22.8588, -6.85494, 0.68", "-45.4773, 24.4676, -7.84471, 0.68", "-46.3496, 25.2269, -8.29467, 0.68", "-49.4632, 27.8506, -9.90875, 0.68", "-51.9414, 29.8906, -11.2375, 0.68", "-55.4505, 32.6881, -12.9891, 0.68", "-57.8194, 34.574, -14.0102, 0.57", "-59.8371, 36.1102, -14.7898, 0.57", "-62.267, 37.8548, -15.7541, 0.57", "-62.8251, 38.183, -16.0255, 0.57" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.06859, -5.12716, -2.56, 1.47", "5.93856, -5.7191, -2.44211, 1.47", "8.20296, -7.25981, -2.13526, 1.47", "10.9478, -9.12743, -1.76331, 1.47", "12.6834, -10.3084, -1.52813, 2.6", "12.9492, -10.4892, -1.49212, 2.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.29871, 9.45721, 0.0, 2.31666", "-4.96601, 24.2182, 0.0, 2.31666", "-7.63332, 38.9791, 0.0, 2.31666" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.19199, -15.8693, -8.14, 0.12", "-0.161258, -15.9642, -8.22599, 0.12", "1.25515, -16.1799, -8.34457, 0.12", "1.9942, -16.2953, -8.40633, 0.45", "2.67718, -16.3914, -8.38001, 0.45", "5.27287, -16.7157, -8.29509, 0.45", "5.64015, -16.765, -8.28477, 1.36", "6.92703, -16.9538, -8.24622, 1.02", "8.69198, -17.2143, -8.1681, 0.45", "11.4203, -17.6112, -7.72345, 0.45", "13.8436, -17.9184, -6.9293, 0.45", "14.55, -17.978, -6.65657, 1.7", "15.8959, -18.0641, -5.67619, 0.68", "17.7335, -18.1833, -3.94508, 0.57", "20.5754, -18.3781, -0.954143, 0.57", "22.6365, -18.515, 1.45134, 0.57", "24.2541, -18.6082, 3.60995, 0.57", "30.1324, -18.8464, 12.231, 0.45", "30.6052, -18.865, 13.0354, 0.45" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.19199, -15.8693, -8.14, 2.26", "-1.4203, -18.6838, -8.07529, 2.26", "-1.64512, -21.4554, -8.01156, 2.26", "-1.97289, -25.4961, -7.91865, 2.94" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "45.0638, 7.81766, 6.99039, 0.45", "47.4899, 7.76249, 6.37957, 0.45", "48.6506, 7.74859, 6.48001, 0.45", "49.2565, 7.79288, 6.66684, 0.45", "50.0412, 7.94039, 7.01877, 0.45", "51.575, 8.43221, 7.93186, 0.79", "53.3359, 9.17576, 9.11073, 0.79", "55.0013, 10.0656, 10.3938, 0.79", "56.2132, 10.8549, 11.4073, 0.79", "57.1523, 11.6138, 12.2525, 0.79", "58.4805, 13.0507, 13.6348, 0.79", "59.6535, 14.7068, 14.964, 0.79", "60.178, 15.5616, 15.5186, 0.68", "60.6309, 16.3436, 15.9346, 0.68", "61.5964, 17.9741, 16.7057, 0.68", "63.6247, 21.3688, 18.3254, 0.68", "64.2755, 22.4865, 18.8418, 0.68", "65.3695, 24.3174, 19.6807, 0.68", "65.9966, 25.2543, 20.1172, 0.68", "66.5985, 26.0017, 20.4998, 0.57", "68.2151, 27.5655, 21.3772, 0.57", "69.0632, 28.0959, 21.873, 0.57", "70.4357, 28.4042, 23.5335, 0.57", "70.8703, 28.2032, 24.7107, 0.57", "71.4, 27.6965, 26.7243, 0.57", "71.5589, 27.4796, 27.458, 0.57", "72.1219, 26.3037, 30.7671, 0.57", "72.6667, 24.7387, 34.8999, 0.57", "72.9525, 23.424, 38.2543, 0.57", "73.0526, 22.7222, 40.1353, 0.57", "73.0732, 22.5543, 40.6671, 0.57", "73.1092, 22.2747, 41.6127, 0.57" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "45.0638, 7.81766, 6.99039, 0.79", "46.2604, 10.3271, 5.29093, 0.79", "47.0038, 12.2199, 4.13056, 0.79", "47.3874, 13.2526, 3.54974, 0.79", "48.5503, 15.6661, 2.28206, 0.79", "49.8296, 17.8258, 1.21828, 0.79", "50.9607, 19.5813, 0.411373, 0.79", "52.7157, 22.0785, -0.585805, 0.79", "54.0355, 23.8596, -1.29813, 0.79", "56.6722, 27.2077, -2.83372, 0.79", "58.4139, 29.1352, -4.06872, 0.79", "60.3334, 30.6375, -5.81397, 1.02", "61.5744, 31.429, -7.0258, 1.02", "62.7574, 32.0029, -8.34964, 1.02", "64.3265, 32.5752, -10.5886, 1.02", "66.5716, 33.058, -15.1089, 1.02", "68.9538, 32.9025, -20.7916, 1.02" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "12.9492, -10.4892, -1.49212, 0.68", "13.8655, -12.1169, -1.73577, 0.68", "14.1965, -12.6215, -1.75479, 0.68", "16.0362, -15.2733, -1.72439, 0.68", "18.9266, -19.3718, -1.58634, 0.68", "20.7897, -22.042, -1.60416, 0.68", "21.9419, -23.6956, -1.66581, 0.68", "25.4906, -28.4753, -1.44568, 0.68", "27.1344, -30.5776, -1.19771, 0.68", "27.6476, -31.1922, -1.08238, 0.68", "30.4418, -34.3609, -0.291722, 0.68", "32.4355, -36.3759, 0.265302, 0.68", "37.5971, -41.3871, 1.65155, 0.68", "40.0413, -43.7055, 2.25856, 0.68", "41.501, -45.0214, 2.61432, 0.68", "43.5204, -46.7839, 3.09444, 0.68", "48.1971, -50.902, 4.12486, 0.68", "50.0319, -52.6534, 4.34566, 0.68", "50.856, -53.5274, 4.3508, 0.68", "53.0031, -55.9252, 4.30338, 0.68", "54.3083, -57.4809, 4.2473, 0.68", "56.908, -60.9154, 4.01868, 0.68", "58.5456, -63.5567, 3.85209, 0.68", "59.6655, -65.475, 3.70705, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "12.9492, -10.4892, -1.49212, 1.24", "17.5681, -11.7606, -1.39552, 1.24", "19.9308, -12.411, -1.34611, 1.24", "23.7162, -13.453, -1.26695, 1.24", "27.5472, -14.5076, -1.18683, 1.24", "37.7046, -17.3037, -0.974413, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.63332, 38.9791, 0.0, 0.57", "-10.3006, 53.74, 0.0, 0.57", "-12.9679, 68.501, 0.0, 0.57" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "30.6052, -18.865, 13.0354, 0.45", "32.4088, -21.1586, 17.7042, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "30.6052, -18.865, 13.0354, 0.45", "34.7187, -17.1361, 12.5963, 0.45", "36.6779, -16.4306, 12.6127, 0.45", "39.3794, -15.5514, 12.7858, 0.45", "42.3512, -14.8832, 13.0757, 0.45", "43.9248, -14.8104, 13.277, 0.45", "48.2121, -15.1254, 13.8678, 0.45", "48.5674, -15.205, 13.9517, 0.45", "48.723, -15.2638, 13.9932, 2.6", "51.7276, -16.8333, 14.8164, 0.57", "55.4127, -19.2222, 15.8161, 0.57", "56.4859, -19.9442, 16.0643, 0.57", "56.5799, -20.0038, 16.0802, 2.38", "59.735, -21.7038, 16.5842, 0.34", "60.9377, -22.1825, 16.759, 0.34", "63.6259, -22.7616, 17.0893, 0.45", "66.1531, -22.7841, 17.5422, 0.45", "68.8017, -22.506, 18.3144, 0.45", "71.2159, -22.0525, 19.3366, 0.45", "73.8107, -21.3725, 20.8167, 0.45", "76.1146, -20.6888, 22.3359, 0.45", "81.1437, -19.0775, 25.9628, 0.45", "84.9713, -17.9282, 29.0201, 0.45", "88.6989, -16.9692, 32.1819, 0.45", "92.2724, -16.2684, 35.2267, 0.45", "93.3397, -16.1371, 36.1161, 2.38", "95.2411, -16.0084, 37.5607, 0.45", "99.1099, -15.8385, 39.9535, 0.45", "100.778, -15.7678, 40.8199, 0.45", "103.279, -15.6009, 41.9465, 0.45", "108.456, -15.1085, 44.2862, 0.45", "112.145, -14.6724, 45.9631, 0.45", "115.975, -14.2903, 47.686, 0.45", "118.357, -14.1727, 48.7114, 0.45", "120.672, -14.1681, 49.6664, 0.45", "125.14, -14.4027, 51.3871, 0.45", "128.794, -14.8017, 52.5952, 0.45", "133.461, -15.5237, 54.0714, 0.45", "138.162, -16.5031, 55.5024, 0.45", "140.949, -17.1838, 56.3142, 0.45", "142.363, -17.6211, 56.7027, 0.45", "143.126, -17.9034, 56.8526, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.97289, -25.4961, -7.91865, 0.12", "-3.01929, -24.7015, -6.90044, 0.12", "-3.18323, -24.6001, -6.64947, 0.12", "-3.61699, -24.3874, -5.87533, 0.45", "-3.98105, -24.5302, -4.11733, 0.79", "-4.16123, -25.031, -1.41743, 0.45", "-4.16805, -25.4703, 0.288902, 0.45", "-3.93379, -26.6118, 3.79695, 0.45", "-3.86426, -26.8566, 4.34963, 0.45", "-2.70122, -29.788, 10.1267, 0.45", "-2.0142, -31.3278, 12.8484, 0.45", "-1.45015, -32.5642, 14.8954, 0.45", "-1.30399, -32.8666, 15.4145, 0.45", "-0.554217, -34.4985, 18.2746, 0.45", "0.733108, -37.6614, 23.9077, 0.45", "0.95074, -38.5301, 25.4127, 0.45", "1.04287, -39.1566, 26.4738, 0.45", "1.15615, -40.3669, 28.5702, 0.45", "1.21659, -40.7914, 29.3315, 0.45", "1.60531, -43.3724, 33.9967, 0.45", "1.87932, -44.7097, 36.0029, 0.45", "2.33622, -46.3408, 38.3221, 0.45", "2.56246, -46.8923, 39.1268, 0.45", "3.73653, -49.5595, 42.7942, 0.45", "3.90746, -49.9069, 43.2619, 0.45", "5.10573, -51.9263, 46.1463, 0.45", "5.40544, -52.4034, 46.819, 0.45", "6.74617, -54.7263, 49.8798, 2.38", "7.79874, -56.6418, 52.4173, 0.68", "8.22596, -57.4288, 53.4322, 0.68", "10.2063, -60.7437, 58.1732, 0.68", "11.0777, -62.1025, 60.2892, 0.45", "11.4583, -62.7424, 61.2765, 0.45", "12.3222, -64.2536, 63.8953, 0.45", "12.7628, -64.9953, 65.3532, 0.45", "13.9761, -67.46, 70.3708, 0.45", "14.5546, -68.777, 73.3008, 0.45", "15.0515, -69.9594, 76.2279, 0.45", "16.2644, -73.2639, 84.519, 0.91", "16.2915, -73.3452, 84.7118, 3.05", "16.62, -74.3802, 87.0326, 0.45", "17.619, -77.1381, 92.5053, 0.45", "18.029, -78.0737, 94.293, 0.45", "18.7194, -79.4392, 96.8386, 2.15", "21.0864, -84.5241, 104.815, 0.57", "21.4054, -85.1589, 105.825, 0.57", "23.1852, -88.4985, 111.165, 0.57", "24.2712, -90.7223, 114.5, 0.57", "24.4011, -90.9916, 114.918, 1.7", "24.9086, -92.0984, 116.68, 0.45", "27.0042, -97.3847, 124.67, 0.45", "27.8261, -99.6237, 128.08, 0.45", "28.3214, -101.205, 130.41, 0.45", "29.2215, -104.295, 134.83, 0.45", "29.7627, -106.119, 137.431, 0.45", "30.1485, -107.462, 139.357, 0.45", "30.7803, -110.743, 143.222, 0.45", "30.8856, -111.244, 143.826, 0.45" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-1.97289, -25.4961, -7.91865, 1.7", "-0.111369, -29.2708, -6.20707, 1.7", "0.435027, -30.5255, -5.76289, 1.58", "1.96121, -34.3798, -4.75728, 1.36", "3.22036, -37.5596, -3.92762, 1.24", "5.03412, -42.1402, -2.73253, 1.24", "6.11251, -44.8636, -2.02198, 2.83", "7.52294, -48.702, -1.3469, 3.62", "8.54914, -51.6224, -0.971283, 2.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "68.9538, 32.9025, -20.7916, 0.57", "68.9776, 30.8536, -20.982, 0.57", "69.0088, 28.1585, -21.2324, 0.57", "69.0266, 26.6231, -21.3751, 0.57", "69.0512, 24.5085, -21.5715, 0.57", "69.0831, 21.7524, -21.8276, 0.57", "69.1378, 17.0383, -22.2656, 0.57" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "68.9538, 32.9025, -20.7916, 1.02", "69.598, 33.8965, -22.2182, 1.02", "71.0425, 36.1255, -25.4172, 1.02", "71.8589, 37.3852, -27.2253, 0.79" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "59.6655, -65.475, 3.70705, 0.45", "62.8839, -70.5844, 2.89375, 0.45", "63.547, -71.642, 2.75326, 0.45", "64.5385, -73.2594, 2.61932, 0.45", "66.957, -77.1569, 2.39851, 0.45", "67.9199, -78.6682, 2.2405, 0.45", "68.8172, -79.9976, 2.06939, 0.45", "70.5168, -82.2872, 1.77577, 0.45", "73.6232, -86.1812, 1.1993, 0.45", "75.3832, -88.0543, 0.905077, 0.45", "78.7962, -91.0497, 0.220951, 0.45", "81.3438, -92.8249, -0.199817, 0.45", "82.4998, -93.5012, -0.210215, 0.45", "84.6112, -94.64, -0.0220723, 0.45", "88.9976, -97.0201, 0.651664, 0.45", "91.9085, -98.7527, 1.05219, 0.45", "96.3019, -101.563, 1.64384, 0.45", "105.587, -108.09, 2.65079, 0.45", "109.707, -111.29, 3.00472, 0.45", "112.688, -113.94, 3.16628, 0.45", "118.282, -119.878, 3.17446, 0.45", "119.344, -121.213, 3.11443, 0.45", "121.354, -124.447, 2.63283, 0.45", "122.356, -126.662, 2.12863, 0.45", "123.863, -130.929, 1.29087, 0.45", "124.835, -134.338, 0.799214, 0.45", "126.009, -138.934, 0.329149, 0.45", "127.078, -143.559, -0.142835, 0.45", "128.081, -148.435, -0.65844, 0.45", "128.497, -150.534, -0.877466, 0.45", "129.17, -153.903, -1.1848, 0.45", "130.564, -160.17, -1.6446, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "59.6655, -65.475, 3.70705, 0.57", "59.5501, -66.0783, 4.01587, 0.57", "58.9566, -69.0103, 6.56297, 0.57", "58.1377, -72.5943, 9.96178, 0.57", "57.5591, -74.5692, 12.1892, 0.57", "57.4397, -74.9156, 12.5911, 0.57", "56.7178, -76.6504, 14.7225, 0.57", "55.5609, -78.8365, 17.7077, 0.57", "54.94, -79.7377, 19.0968, 0.57", "53.7091, -81.3033, 22.1007, 0.45", "53.0669, -82.0756, 23.5471, 0.45", "52.1748, -83.1449, 25.4663, 0.45", "51.3144, -84.2455, 27.3374, 0.45", "50.318, -85.4956, 29.4382, 0.45", "48.4091, -88.1963, 34.0286, 0.45", "48.032, -88.8466, 35.0798, 0.45", "47.5445, -89.8373, 36.6603, 0.45", "46.4738, -92.4185, 40.5354, 0.45", "46.1097, -93.3973, 41.8768, 0.45", "44.7409, -97.1487, 46.2704, 0.45", "44.3168, -98.4098, 47.5819, 0.45", "44.2334, -98.6986, 47.8641, 0.45", "44.0739, -99.4568, 48.6076, 0.45", "43.7001, -101.535, 50.6542, 0.45", "43.4506, -103.242, 52.3744, 0.45", "43.0449, -106.652, 56.0283, 0.45", "42.837, -108.957, 58.8909, 0.45", "42.4974, -113.111, 64.4169, 0.45", "42.2865, -115.394, 67.6007, 0.45", "42.182, -116.336, 69.028, 0.45", "41.7347, -119.472, 73.7861, 0.45", "41.083, -122.313, 77.8697, 0.45", "40.6274, -123.811, 80.0048, 0.45", "40.1094, -125.237, 81.8901, 0.45", "39.1612, -127.957, 85.0869, 0.45", "38.3401, -130.326, 87.6295, 0.45", "37.566, -132.347, 89.6562, 0.45", "36.897, -133.929, 91.4983, 0.45", "35.2157, -137.182, 96.1659, 0.45", "33.9265, -138.965, 99.2393, 0.45", "32.5784, -140.193, 101.774, 0.45", "30.8286, -141.148, 104.267, 0.45", "26.1306, -142.706, 109.546, 0.45", "23.8079, -143.147, 111.757, 0.45", "20.7317, -143.488, 114.123, 0.45", "18.6453, -143.679, 115.603, 0.45", "14.6269, -144.171, 118.304, 0.45", "11.4789, -144.749, 120.316, 0.45", "6.63817, -145.883, 123.922, 0.45", "3.26217, -146.816, 127.005, 0.45", "1.06886, -147.519, 129.152, 0.45", "-3.92003, -149.311, 134.216, 0.45", "-5.65011, -149.986, 136.039, 0.45", "-13.0865, -153.05, 143.767, 0.45", "-15.1154, -153.926, 145.865, 0.45", "-20.42, -156.28, 151.75, 0.45", "-21.9268, -156.97, 153.413, 0.45", "-24.5236, -158.283, 156.26, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "37.7046, -17.3037, -0.974413, 0.45", "39.8262, -20.5285, 0.341069, 0.45", "40.159, -21.0427, 0.525686, 1.02", "43.6259, -26.2955, 2.21856, 0.79", "45.7446, -29.5604, 3.10456, 0.79", "46.9525, -31.4053, 3.51884, 0.68", "47.2116, -31.7896, 3.59073, 0.68", "48.7644, -34.0412, 3.84014, 0.68", "49.8135, -35.5581, 3.92791, 0.68", "51.9854, -38.6099, 3.91842, 0.68", "54.1674, -41.7551, 3.87242, 0.68", "56.2503, -44.8089, 3.79678, 0.68", "58.2229, -47.6732, 3.70459, 0.68", "60.6895, -51.2706, 3.56567, 0.68", "63.7419, -55.7472, 3.18093, 0.68", "65.6285, -58.5453, 2.74698, 0.68", "66.7274, -60.192, 2.39335, 0.68", "68.1137, -62.2337, 1.88115, 0.68", "70.4405, -65.5024, 0.961379, 0.68", "73.4844, -69.608, -0.29833, 0.68", "77.0171, -74.116, -1.73414, 0.68", "78.9187, -76.3749, -2.42778, 0.68", "80.8163, -78.5356, -3.03045, 0.68", "82.0519, -79.8938, -3.35427, 0.68", "83.1887, -81.0529, -3.56673, 0.68", "84.7933, -82.7263, -3.63297, 0.68", "86.0733, -84.1518, -3.65843, 0.68", "87.7367, -86.4238, -3.76939, 0.68", "88.1825, -87.2118, -3.85811, 0.68", "89.2258, -89.4773, -4.15762, 0.68", "90.3769, -92.4616, -4.68029, 0.68", "91.2061, -95.0469, -5.20264, 0.68", "91.9437, -97.6626, -5.76351, 0.68", "93.0135, -101.888, -6.67355, 0.68", "93.5085, -103.893, -7.07488, 0.68", "94.2115, -106.599, -7.53975, 0.68", "94.8393, -108.661, -7.84599, 0.68", "95.7295, -111.142, -8.06864, 0.68", "96.4414, -112.956, -8.20173, 0.68", "96.7932, -113.778, -8.23649, 0.68", "97.8857, -116.154, -8.3037, 0.45", "99.4511, -119.546, -8.33663, 0.45", "101.259, -123.476, -8.39511, 0.45", "102.658, -126.641, -8.56032, 0.45", "103.618, -128.897, -8.73739, 0.45", "104.726, -131.552, -8.99203, 0.45", "106.588, -136.011, -9.54735, 0.45", "107.557, -138.388, -9.87517, 0.45", "109.184, -142.499, -10.4982, 0.45", "110.685, -146.226, -11.0998, 0.45", "111.595, -148.507, -11.517, 0.45", "112.344, -150.341, -11.9093, 0.45" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "37.7046, -17.3037, -0.974413, 0.68", "39.7915, -15.771, 0.617635, 0.68", "42.2925, -13.779, 2.2657, 0.68", "44.0943, -12.3498, 3.08705, 0.68", "45.3109, -11.4047, 3.44188, 0.68", "46.1043, -10.7906, 3.51392, 0.68", "47.9748, -9.39635, 3.24667, 0.68", "49.1945, -8.51893, 2.74392, 0.68", "51.3113, -7.08524, 1.51774, 0.57", "52.9812, -6.01081, 0.400619, 0.57", "55.3995, -4.38832, -1.32018, 0.57", "58.1788, -2.47163, -3.34376, 0.57", "59.7252, -1.36218, -4.48898, 0.57", "60.445, -0.792306, -5.05791, 0.57", "62.6746, 1.1818, -6.79809, 0.57", "65.6112, 3.94508, -9.02278, 0.57", "67.9001, 6.21141, -10.6314, 0.57", "68.7403, 7.11986, -11.2304, 0.57", "70.6181, 9.29841, -12.6816, 0.57", "72.3544, 11.3721, -14.0694, 0.57", "73.1045, 12.3204, -14.6785, 0.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "32.4088, -21.1586, 17.7042, 0.45", "31.6288, -24.3869, 18.7271, 0.45", "31.3772, -25.4224, 19.0114, 0.45", "31.0603, -26.7551, 19.4871, 0.45", "30.7429, -28.0977, 20.0767, 0.45", "30.5017, -29.0937, 20.5653, 0.45", "30.0604, -30.9907, 21.5389, 0.45", "29.9164, -31.7118, 21.9218, 0.45", "29.5277, -33.8798, 23.1758, 0.45", "29.3474, -34.972, 23.9383, 0.45", "29.2039, -35.8157, 24.6496, 0.45", "29.1067, -36.2359, 25.0448, 0.45", "28.9534, -36.7263, 25.5363, 0.45", "28.7026, -37.3221, 26.0584, 0.45", "27.9758, -39.0118, 27.1828, 0.45", "27.82, -39.39, 27.385, 0.45", "27.3836, -40.5974, 27.9014, 0.45", "27.1227, -41.3245, 28.0068, 0.45", "26.8121, -42.3341, 27.9063, 0.45", "26.4088, -44.1992, 27.363, 0.45", "26.2565, -45.4557, 26.8224, 0.45", "26.173, -46.5692, 26.2737, 0.45", "26.1431, -49.8321, 24.3836, 0.45", "26.1599, -50.4536, 23.971, 1.02", "26.1814, -51.0843, 23.4688, 0.57", "26.1285, -51.8303, 22.7105, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "32.4088, -21.1586, 17.7042, 0.45", "34.2033, -21.651, 17.59, 0.45", "36.051, -22.158, 17.4724, 0.45", "38.6192, -22.8626, 17.3089, 0.45", "40.7924, -23.4589, 17.1705, 0.45", "41.9197, -23.7683, 17.0987, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "8.54914, -51.6224, -0.971283, 0.45", "8.97757, -53.6981, 0.819921, 0.45", "9.18087, -54.6531, 1.56795, 0.79", "11.1595, -63.9477, 8.84784, 1.24", "12.0134, -67.9594, 11.9899, 1.24", "12.7348, -71.3481, 14.6441, 1.24", "13.5644, -75.2453, 17.6965, 1.24", "13.873, -76.6599, 18.8238, 2.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "8.54914, -51.6224, -0.971283, 0.91", "10.6502, -53.0571, -0.792087, 0.91", "11.8076, -53.8474, -0.693374, 0.91", "13.8098, -55.2146, -0.522607, 0.91", "15.193, -56.1592, -0.404629, 0.91", "17.355, -57.6355, -0.220235, 0.79", "17.7961, -57.9367, -0.182613, 0.79" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "69.1378, 17.0383, -22.2656, 0.57", "69.8075, 14.6086, -21.3545, 0.57", "71.1363, 9.88911, -18.7432, 0.57", "72.5496, 4.70687, -16.0744, 0.45", "74.5847, -2.81705, -12.4214, 0.45", "76.7766, -11.0848, -8.31402, 0.45", "77.3763, -13.3465, -7.19043, 0.45", "80.1948, -24.1509, -1.68233, 0.45", "82.301, -32.7079, 2.83838, 0.45", "83.2928, -36.698, 5.0232, 0.45", "84.4532, -41.1509, 7.4345, 0.45" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "69.1378, 17.0383, -22.2656, 0.57", "66.1747, 16.8072, -24.5089, 0.57", "64.1505, 16.0757, -25.1121, 0.68", "62.3994, 15.2012, -25.6159, 0.68", "60.6471, 14.3262, -26.1201, 0.68", "57.8707, 12.9397, -26.9189, 0.68", "55.2141, 11.613, -27.6833, 0.68", "52.082, 10.3165, -28.6572, 0.68", "48.8974, 9.2282, -29.5558, 0.57" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "71.8589, 37.3852, -27.2253, 0.68", "72.4981, 39.0881, -26.1318, 0.68", "73.0427, 40.5385, -25.2004, 0.68", "73.9531, 42.9636, -23.643, 0.68", "75.7921, 47.862, -20.4975, 0.68", "76.8212, 50.6033, -18.7371, 0.68", "78.2025, 54.2825, -16.3745, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "71.8589, 37.3852, -27.2253, 0.79", "73.5837, 38.2263, -27.3078, 0.79", "76.328, 39.5644, -27.439, 0.79", "78.1056, 40.4311, -27.5241, 0.79", "80.0882, 41.3978, -27.6189, 0.79", "81.2138, 41.9466, -27.6728, 0.79" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "112.344, -150.341, -11.9093, 0.57", "113.643, -153.051, -11.4489, 0.57", "115.656, -157.074, -10.6729, 0.57", "116.659, -159.008, -10.3008, 0.57", "119.298, -163.957, -9.37501, 0.57", "121.884, -168.702, -8.46223, 0.57", "123.968, -172.528, -7.72629, 0.57", "125.219, -174.689, -7.22911, 0.57", "126.366, -176.607, -6.74234, 0.57", "127.464, -178.391, -6.29873, 0.57", "128.806, -180.437, -5.89471, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "112.344, -150.341, -11.9093, 0.34", "114.763, -152.43, -11.1403, 0.34", "116.507, -154.025, -10.3584, 0.34", "117.255, -154.739, -10.0043, 0.34", "120.59, -158.161, -8.70984, 0.34", "123.24, -161.04, -7.84611, 0.57", "126.791, -165.006, -6.76297, 0.57", "129.135, -167.792, -6.05169, 0.57", "131.2, -170.331, -5.58505, 0.57", "135.274, -175.484, -4.95327, 0.57", "137.586, -178.445, -4.77411, 0.57", "139.873, -181.359, -4.8497, 0.57", "142.916, -185.107, -5.26506, 0.57", "147.32, -190.411, -6.07426, 0.57", "151.024, -194.793, -6.7746, 0.57", "153.456, -197.557, -7.11675, 0.57", "157.709, -202.208, -7.64543, 0.57", "158.951, -203.506, -7.78185, 0.57", "161.716, -206.234, -7.95247, 0.57", "163.813, -208.152, -7.86352, 0.57", "167.882, -211.488, -7.41703, 0.57", "169.174, -212.455, -7.16556, 0.57", "171.355, -213.927, -6.27572, 0.57", "172.9, -214.88, -5.53754, 0.57", "174.475, -215.76, -4.66044, 0.57", "175.56, -216.343, -4.0303, 0.57", "178.166, -217.731, -2.45936, 0.57", "183.659, -220.715, 1.17767, 0.57", "185.142, -221.529, 2.26, 0.57", "187.988, -223.12, 4.47899, 0.57", "190.868, -224.863, 6.8385, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "73.1045, 12.3204, -14.6785, 0.45", "74.6541, 14.5191, -17.8337, 0.45", "75.4413, 15.6418, -19.4274, 0.45", "76.5043, 17.4525, -21.7686, 0.45", "76.7923, 17.9387, -22.3324, 0.45", "76.9392, 18.1737, -22.584, 0.45", "78.3776, 20.3787, -24.6925, 0.45", "78.5732, 20.6276, -24.8941, 0.45", "79.7663, 22.1734, -26.1336, 0.45", "80.6932, 23.4523, -26.9225, 0.45", "81.2034, 24.1817, -27.3308, 0.45", "82.4479, 25.883, -28.1672, 0.45", "83.6254, 27.2219, -28.5962, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "73.1045, 12.3204, -14.6785, 0.45", "75.3553, 12.8041, -14.8232, 0.45", "76.8032, 13.1153, -14.9162, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "41.9197, -23.7683, 17.0987, 0.45", "40.2831, -28.6633, 20.2437, 0.45", "38.4427, -34.3659, 23.8202, 0.45", "37.4062, -37.5263, 25.8494, 0.45", "36.2413, -40.9544, 27.9898, 0.45", "34.8646, -44.9903, 30.3861, 0.45", "34.3535, -46.5495, 31.2374, 0.45", "33.716, -48.5402, 32.1514, 0.45", "32.3788, -53.5251, 34.2409, 0.45", "31.58, -57.4034, 35.5203, 0.45", "31.0309, -60.8428, 36.3784, 0.45", "30.6652, -63.6866, 36.9891, 0.45", "30.451, -66.2866, 37.65, 0.45", "30.3734, -70.3852, 38.8666, 0.45", "30.5634, -72.9576, 40.0528, 0.45", "30.9021, -75.2359, 41.4791, 0.45", "31.5099, -78.4726, 43.677, 0.45", "32.2594, -81.7518, 46.0521, 0.45", "32.7561, -83.5384, 47.3591, 0.45", "34.5946, -89.8384, 51.1957, 0.45", "35.9254, -94.0778, 53.3438, 0.45", "37.1942, -97.9393, 54.819, 0.45", "38.2958, -101.629, 55.6226, 0.45", "39.3289, -105.141, 56.1786, 0.45", "41.1676, -111.992, 57.0649, 0.45", "41.8853, -115.087, 57.3767, 0.45", "42.3939, -117.418, 58.0549, 0.45", "43.4401, -122.679, 59.9361, 0.45", "44.1668, -127.044, 61.6716, 0.45", "44.8717, -131.802, 64.0392, 0.45", "45.2162, -134.17, 65.6375, 0.45", "46.2511, -143.086, 71.963, 0.79" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "41.9197, -23.7683, 17.0987, 0.45", "43.5354, -24.9063, 17.3154, 0.45", "44.4535, -25.7692, 17.4491, 0.45", "45.9193, -27.3517, 17.6573, 0.45", "47.2072, -28.8692, 17.8423, 0.45", "49.0776, -31.2349, 18.1061, 0.45", "51.4152, -34.3926, 18.4413, 0.45", "54.0584, -38.492, 18.9068, 0.45", "55.9684, -41.8862, 19.0819, 0.45", "56.9695, -43.7987, 19.1632, 0.45", "58.7608, -47.4505, 19.2822, 0.45", "59.9064, -49.9065, 19.2939, 0.45", "61.0499, -52.5571, 19.2383, 0.45", "63.1594, -58.3663, 18.8707, 0.45" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "13.873, -76.6599, 18.8238, 0.12", "13.4672, -77.2315, 18.6491, 0.12", "12.8234, -78.6121, 18.1733, 0.57", "12.418, -79.8241, 17.8207, 0.57", "12.1562, -80.8993, 17.6267, 0.57", "11.2323, -84.3203, 16.9216, 0.57", "10.532, -86.3726, 16.3657, 0.57", "10.1016, -87.5317, 15.9943, 0.91", "9.57379, -88.5992, 15.4432, 0.91", "8.72436, -89.9336, 14.5276, 0.91", "6.97924, -91.6656, 12.7509, 0.68", "5.34788, -92.5056, 11.17, 0.68", "4.50238, -92.8231, 10.3646, 0.68", "1.61331, -93.7129, 7.51448, 0.68", "0.910419, -93.8829, 6.80043, 0.68", "-0.760234, -94.1847, 5.03524, 0.68", "-3.61888, -94.5654, 1.92625, 0.68", "-4.72764, -94.695, 0.662359, 0.68", "-6.86546, -95.0293, -1.89563, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "13.873, -76.6599, 18.8238, 0.79", "15.109, -80.4576, 18.6236, 0.79", "16.7746, -85.5752, 18.3537, 0.79", "17.5437, -87.9382, 18.2291, 0.79", "18.137, -89.7611, 18.133, 0.79", "18.4146, -90.6141, 18.088, 0.79" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "13.873, -76.6599, 18.8238, 0.57", "17.4009, -77.2743, 21.1726, 0.57" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "17.7961, -57.9367, -0.182613, 1.13", "18.9616, -59.8077, 0.729152, 1.13", "20.7629, -62.6989, 1.91322, 0.91", "21.81, -64.455, 2.48056, 0.91", "23.5111, -67.4123, 3.28118, 0.91", "25.2777, -70.6714, 4.04062, 0.91", "26.7886, -73.6058, 4.72722, 0.91", "27.731, -75.6407, 5.13928, 0.91", "29.1442, -79.0008, 5.83565, 0.91", "29.6901, -80.4116, 6.14662, 1.92", "30.3722, -82.3082, 6.54786, 1.36", "31.3532, -85.1073, 7.20571, 1.02", "32.5053, -88.4148, 8.14622, 1.02", "33.525, -91.2364, 9.02559, 1.02", "33.962, -92.39, 9.39626, 1.02", "34.4794, -93.6833, 9.806, 0.68", "35.3517, -95.7481, 10.3283, 0.68", "35.8432, -96.8526, 10.4861, 1.02", "36.3007, -97.7915, 10.5048, 2.15", "37.1376, -99.352, 10.3455, 1.47", "38.5619, -101.797, 9.9595, 1.13", "39.5415, -103.47, 9.67163, 0.79", "40.2, -104.569, 9.45467, 0.57", "41.505, -106.575, 9.02855, 0.57", "42.6743, -108.246, 8.64821, 0.57", "43.6789, -109.613, 8.31242, 0.57", "44.5976, -110.912, 7.99639, 0.57", "45.1826, -111.881, 7.76909, 0.57", "46.1079, -113.683, 7.31437, 0.57", "46.6478, -114.742, 7.14741, 0.57", "47.4506, -116.369, 6.98535, 2.83", "48.5412, -118.486, 6.90406, 1.92", "50.1437, -121.471, 6.82834, 1.02", "51.036, -123.156, 6.84319, 0.68", "53.2787, -127.328, 6.93464, 0.68", "54.1046, -128.77, 6.95063, 0.68", "55.6099, -131.157, 7.0188, 0.68", "56.5045, -132.466, 7.05731, 0.68", "57.6622, -134.034, 7.03912, 0.68", "59.2405, -136.109, 6.86768, 0.68", "61.0442, -138.353, 6.48401, 0.68", "63.6106, -141.286, 5.9352, 0.68", "65.2333, -143.077, 5.58495, 0.68", "67.1916, -145.224, 5.10779, 0.57", "68.5655, -146.764, 4.71528, 0.57", "69.7897, -148.313, 4.21632, 0.57", "70.9308, -149.984, 3.49927, 0.57", "71.9669, -151.772, 2.47182, 0.57", "73.2298, -154.129, 0.987155, 0.57", "73.7414, -155.184, 0.260379, 1.47", "75.0209, -157.912, -1.75051, 0.68", "75.7932, -159.54, -2.98726, 0.68", "76.8889, -161.647, -4.64158, 0.68", "78.5482, -164.495, -6.89813, 0.68", "80.2329, -167.048, -8.8235, 0.68", "81.0455, -168.16, -9.65219, 0.68", "81.6407, -168.872, -9.98441, 0.68", "82.7672, -170.256, -10.0747, 0.57", "83.3248, -170.981, -9.92733, 0.57", "84.14, -172.081, -9.54847, 0.57", "85.5268, -174.076, -8.86335, 0.57", "90.0352, -181.106, -6.72543, 0.68", "92.5445, -185.337, -5.7152, 0.68", "93.6354, -187.36, -5.39235, 0.68", "94.3024, -188.772, -5.32636, 0.68", "95.7883, -192.645, -5.98087, 0.68", "96.1503, -193.819, -6.47747, 0.68", "96.6628, -195.913, -7.95073, 2.04", "97.0838, -197.727, -9.48293, 0.79", "97.5631, -199.596, -11.1079, 0.79", "98.6006, -203.087, -13.918, 0.79", "99.3048, -205.001, -15.2103, 0.79", "100.06, -206.781, -16.1841, 0.79", "101.033, -208.831, -16.9555, 0.79", "102.059, -210.704, -17.4202, 0.68", "103.588, -213.192, -17.7178, 0.68", "105.082, -215.427, -17.7198, 0.68", "106.595, -217.419, -17.3243, 0.68", "107.773, -218.857, -16.8701, 0.68", "109.069, -220.314, -16.214, 0.68", "109.844, -221.137, -15.8057, 1.58", "110.994, -222.307, -15.2782, 1.58", "115.757, -227.119, -13.3139, 0.68", "117.462, -228.798, -12.6813, 0.68", "120.57, -231.786, -11.6745, 0.68", "123.392, -234.481, -10.766, 0.68", "125.84, -236.794, -10.0508, 0.68", "127.776, -238.599, -9.5118, 0.68", "129.931, -240.584, -9.07303, 0.68", "131.475, -241.869, -8.6316, 0.68", "134.393, -244.103, -7.76575, 0.68", "135.398, -244.811, -7.52138, 0.68", "138.063, -246.576, -7.11272, 2.38", "139.372, -247.447, -7.08389, 1.92", "143.121, -249.924, -7.38979, 0.57", "144.51, -250.877, -7.69986, 0.57", "149.167, -254.174, -9.31455, 0.57", "152.375, -256.486, -10.5468, 0.57", "154.377, -257.945, -11.4191, 0.57", "156.907, -259.781, -12.5079, 0.57", "159.312, -261.489, -13.5379, 0.57", "160.992, -262.653, -14.0652, 0.57", "162.389, -263.577, -14.2801, 2.15", "163.562, -264.316, -14.4112, 1.13", "165.381, -265.448, -14.5465, 0.57", "167.026, -266.603, -14.8834, 0.57", "167.716, -267.119, -15.0908, 0.57", "168.558, -267.847, -15.3805, 0.57", "169.623, -268.861, -15.789, 0.57", "169.889, -269.151, -15.8867, 2.38", "172.475, -272.238, -16.8088, 0.45", "174.154, -274.357, -17.3714, 0.45", "176.022, -276.751, -17.9527, 0.45", "177.345, -278.447, -18.268, 0.45", "179.778, -281.555, -18.5616, 0.45", "180.441, -282.41, -18.5767, 0.45", "183.379, -286.302, -18.2154, 0.45", "185.479, -289.303, -17.8034, 0.45", "187.233, -292.137, -17.409, 0.45", "188.678, -294.817, -16.9238, 0.45", "189.275, -296.098, -16.6472, 0.45", "190.091, -298.188, -16.2313, 0.45", "190.951, -300.969, -15.7959, 0.45", "191.705, -303.858, -15.7878, 0.45", "191.897, -304.593, -15.9081, 1.24", "192.48, -306.404, -16.4183, 0.57", "193.405, -308.585, -17.1753, 0.57", "194.905, -311.36, -18.2929, 0.57", "196.515, -313.869, -19.3286, 1.36", "198.003, -315.845, -19.9788, 0.57", "199.81, -317.984, -20.5822, 0.57", "202.312, -320.688, -21.2114, 0.57", "204.342, -322.681, -21.4461, 0.57", "205.901, -324.091, -21.4742, 0.57", "209.288, -327.157, -21.3965, 0.57", "212.406, -330.162, -21.3433, 0.57", "213.696, -331.55, -21.2903, 0.57", "215.87, -334.261, -21.2661, 2.38", "216.478, -335.141, -21.2991, 1.58", "219.012, -339.235, -21.4467, 0.68", "220.383, -341.788, -21.573, 0.68", "221.99, -344.971, -21.4778, 0.79", "223.467, -347.962, -21.3245, 0.57", "224.831, -350.848, -21.1524, 0.57", "226.848, -355.161, -20.7401, 0.57", "228.364, -358.415, -20.3006, 0.57", "229.779, -361.53, -19.9243, 0.57", "230.456, -363.038, -19.7871, 0.57", "231.534, -365.48, -19.584, 0.57", "233.053, -369.132, -19.4571, 0.57", "233.963, -371.439, -19.6171, 0.57", "234.984, -374.16, -20.0818, 0.57", "235.652, -376.057, -20.6068, 0.57", "236.068, -377.226, -20.9975, 0.57", "236.895, -379.385, -21.7586, 0.57", "238.399, -382.974, -23.0606, 0.57", "239.736, -385.763, -23.9665, 1.13", "240.603, -387.362, -24.4074, 2.38", "240.926, -387.915, -24.5398, 2.38", "243.225, -391.519, -25.2364, 0.79", "244.505, -393.552, -25.6825, 0.79", "245.974, -396.009, -26.1803, 0.57", "247.102, -398.033, -26.6329, 0.57", "248.05, -399.939, -27.0939, 0.57", "248.808, -401.631, -27.562, 0.57", "250.588, -405.897, -28.9726, 0.57", "250.874, -406.614, -29.187, 2.94", "252.173, -409.885, -30.1688, 0.68", "253.482, -413.011, -31.0109, 0.68", "254.62, -415.45, -31.5956, 0.68", "255.627, -417.416, -32.0187, 0.68", "257.359, -420.488, -32.5878, 0.68", "258.989, -423.383, -33.1736, 0.68", "260.177, -425.487, -33.636, 0.68", "261.291, -427.482, -34.1201, 0.68", "263.408, -431.274, -34.9969, 0.68", "264.427, -433.058, -35.3924, 0.68", "265.512, -434.88, -35.7777, 0.68", "268.435, -439.732, -36.4139, 0.68", "269.102, -440.84, -36.5076, 0.68", "271.372, -444.779, -36.56, 0.57", "271.95, -445.83, -36.512, 0.57", "272.338, -446.59, -36.4467, 2.49", "274.845, -451.64, -35.7896, 0.68", "275.533, -453.081, -35.5217, 0.68", "277.994, -458.144, -34.525, 0.68", "278.793, -459.737, -34.2306, 0.68", "280.493, -462.924, -33.7357, 0.68", "282.334, -466.124, -33.3566, 0.68", "284.152, -468.986, -33.1907, 0.68", "285.876, -471.386, -33.0467, 0.68", "288.666, -474.78, -32.8991, 0.68", "289.801, -476.048, -32.8066, 0.68", "290.667, -476.974, -32.6824, 2.72", "291.969, -478.408, -32.4393, 1.92", "294.368, -481.293, -31.7746, 0.91", "295.764, -483.199, -31.1349, 0.91", "297.042, -485.178, -30.2611, 0.68", "298.385, -487.377, -29.106, 0.68", "299.76, -489.637, -27.7243, 0.68", "301.527, -492.534, -25.7875, 0.68", "302.815, -494.551, -24.2059, 0.68", "304.707, -497.3, -21.7293, 0.68", "306.324, -499.324, -19.5277, 0.68", "308.656, -501.923, -16.3865, 0.68", "309.802, -503.032, -14.8158, 0.68", "312.466, -505.428, -11.4006, 0.68", "314.122, -506.864, -9.45785, 0.68", "318.287, -510.457, -4.94367, 0.68", "319.872, -511.873, -3.32541, 0.68", "323.602, -515.317, 0.169491, 0.68", "326.166, -517.785, 2.37183, 0.68", "326.992, -518.627, 2.9626, 0.68", "327.696, -519.375, 3.41721, 0.68", "329.676, -521.738, 4.58681, 0.68", "330.487, -522.708, 5.12732, 0.68", "332.574, -525.352, 6.51957, 0.45", "333.75, -526.734, 7.5718, 0.45", "334.263, -527.347, 8.07704, 0.45", "335.054, -528.288, 8.88292, 0.45" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 31
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "17.7961, -57.9367, -0.182613, 0.79", "19.0404, -55.713, -1.8707, 0.79", "20.1269, -53.7712, -3.34475, 0.57", "20.6239, -52.8829, -4.01902, 0.34", "21.1893, -51.8725, -4.78609, 0.34", "21.4293, -51.4436, -5.11167, 0.34" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "84.4532, -41.1509, 7.4345, 0.45", "85.3094, -43.9992, 8.29602, 0.45", "86.4273, -47.6769, 9.17289, 0.45", "88.7749, -55.4362, 10.7813, 0.45", "90.4499, -60.9747, 11.2638, 0.45", "91.9583, -66.5922, 11.4633, 0.45", "92.3282, -68.2234, 11.4987, 0.45", "93.439, -73.9727, 11.5372, 0.45", "94.7077, -81.4645, 11.5289, 0.45", "96.2048, -92.1301, 11.6009, 0.45", "96.9168, -98.321, 11.6483, 0.45", "97.5763, -107.055, 11.7838, 0.45", "97.8207, -115.272, 12.0936, 0.45", "97.64, -120.889, 12.4731, 0.45", "96.7476, -128.555, 13.1654, 0.45", "95.751, -132.965, 13.7497, 0.45", "94.6672, -136.966, 14.1895, 0.45", "92.8586, -141.713, 14.5308, 0.45", "91.0036, -145.095, 14.6258, 0.45", "88.0094, -149.228, 14.6042, 0.45", "83.8435, -153.756, 14.496, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "84.4532, -41.1509, 7.4345, 0.45", "86.4597, -45.7965, 9.38623, 0.45", "87.363, -47.8876, 10.2648, 0.45", "88.6041, -50.761, 11.472, 0.45", "89.2532, -52.2639, 12.1034, 0.45", "90.6502, -55.4983, 13.4622, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "46.2511, -143.086, 71.963, 0.57", "44.3678, -144.882, 73.4357, 0.57", "42.9299, -146.372, 74.6489, 0.57", "41.771, -147.629, 75.6292, 0.57", "41.085, -148.479, 76.2213, 0.57", "40.0348, -149.991, 77.193, 0.57", "38.75, -152.24, 78.698, 0.57", "38.0928, -153.698, 79.7008, 0.57", "37.6841, -154.799, 80.3673, 0.57", "37.0581, -156.68, 81.8195, 0.57", "36.2094, -159.264, 83.9543, 0.57", "35.1294, -162.187, 86.7649, 0.57", "34.7028, -163.082, 87.7521, 0.57", "33.4164, -164.914, 90.4702, 0.57", "29.7031, -167.932, 97.3019, 0.57", "28.4004, -168.351, 99.1756, 0.57", "26.3674, -168.377, 101.352, 0.57", "24.2555, -168.122, 103.118, 0.57", "21.576, -167.724, 105.346, 0.57", "19.3126, -167.398, 107.012, 0.57", "16.6351, -167.178, 108.792, 0.57", "14.3549, -167.184, 110.498, 0.57", "11.5236, -167.528, 112.755, 0.57", "7.27873, -168.727, 116.482, 0.57", "5.3029, -169.74, 118.691, 0.57", "3.43875, -171.072, 121.32, 0.57", "2.46137, -171.93, 123.081, 0.57", "1.95166, -172.408, 124.188, 0.57", "1.2431, -173.075, 125.769, 0.57", "-1.4234, -175.227, 131.432, 0.57", "-1.9923, -175.648, 132.606, 0.57", "-2.80376, -176.198, 134.181, 0.57", "-5.423, -177.843, 139.132, 0.57", "-6.55586, -178.564, 141.105, 0.57", "-9.95762, -180.728, 146.476, 0.57", "-10.6983, -181.217, 147.551, 0.57", "-13.5969, -183.181, 151.58, 0.57", "-14.4182, -183.75, 152.668, 0.57", "-16.2986, -185.044, 154.927, 0.57", "-17.2684, -185.722, 156.01, 0.57", "-21.5217, -188.855, 160.316, 0.57", "-23.5186, -190.368, 162.209, 0.57", "-26.0906, -192.372, 164.229, 0.57", "-29.5287, -195.138, 166.579, 0.57", "-33.5872, -198.475, 169.006, 0.57", "-34.7416, -199.473, 169.518, 0.57", "-36.7733, -201.324, 170.04, 0.57", "-40.5854, -204.87, 169.768, 0.57", "-42.7379, -206.9, 168.969, 0.57", "-45.1536, -209.244, 167.655, 0.57", "-47.7905, -211.823, 165.966, 0.57", "-49.9107, -213.899, 164.474, 0.57", "-58.0875, -222.064, 157.972, 0.57", "-58.2269, -222.207, 157.849, 2.26", "-60.6485, -224.683, 155.108, 0.68", "-61.5731, -225.652, 153.73, 0.68" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "46.2511, -143.086, 71.963, 0.57", "49.7373, -145.553, 79.4016, 0.57", "52.1743, -147.379, 84.4851, 0.57", "52.6903, -147.813, 85.4672, 0.57", "54.0787, -149.101, 87.9897, 0.57", "56.7783, -151.585, 92.8711, 0.57", "63.2748, -157.465, 104.11, 0.57", "64.583, -158.687, 106.127, 0.57", "67.2589, -161.301, 109.926, 0.57", "68.2934, -162.34, 111.253, 0.57", "72.4749, -166.513, 116.291, 0.57", "73.85, -168.116, 117.755, 0.57", "75.7457, -170.836, 119.291, 0.57", "77.6961, -173.347, 120.832, 0.57", "80.4552, -176.783, 123.104, 0.57" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "63.1594, -58.3663, 18.8707, 0.34", "62.7495, -60.2238, 17.38, 0.34", "62.5904, -61.6845, 16.1714, 0.34", "62.4367, -63.2795, 14.893, 0.45", "62.1729, -66.0292, 12.7767, 0.45", "61.9447, -68.5904, 10.7506, 0.45", "61.7466, -70.9207, 8.93358, 0.45", "61.6464, -73.8877, 6.36127, 0.45", "61.6672, -75.1101, 5.29907, 0.45", "61.7046, -75.9881, 4.54372, 0.45", "61.8204, -78.3363, 2.61386, 0.45", "61.8912, -79.9598, 1.39829, 0.45", "62.0538, -84.4057, -1.75884, 0.45", "62.1098, -86.249, -3.07759, 0.45", "62.1681, -87.4221, -3.89925, 0.45", "62.2565, -89.8496, -5.47683, 0.45", "62.3835, -92.4274, -7.21049, 0.45", "62.4592, -93.937, -8.38931, 0.45", "62.5503, -96.4952, -10.6118, 0.45", "62.5897, -97.6945, -11.7682, 0.45", "62.6616, -99.2811, -13.5597, 0.45", "62.8103, -102.891, -18.0978, 0.45", "62.9285, -104.441, -20.3653, 0.45", "63.0474, -105.617, -22.14, 0.45", "63.2235, -107.063, -24.2873, 0.45", "63.6019, -109.959, -28.5474, 0.23", "63.7068, -110.669, -29.5856, 0.23", "64.0231, -113.322, -32.9893, 0.23", "64.1883, -114.375, -34.2698, 0.23", "64.6495, -116.787, -37.3007, 0.45", "64.8234, -117.565, -38.3132, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "63.1594, -58.3663, 18.8707, 0.45", "64.2134, -60.0718, 19.0495, 0.45", "65.2292, -61.7623, 19.2067, 0.45", "66.0284, -63.1551, 19.3269, 0.45", "67.0457, -64.9698, 19.568, 0.45", "68.7224, -67.9437, 20.0243, 0.45", "69.8468, -69.938, 20.3302, 0.45", "70.4763, -71.1291, 20.4943, 0.45", "71.4817, -73.161, 20.784, 0.45", "72.489, -75.299, 21.0913, 0.45", "73.4017, -77.1745, 21.4697, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-6.86546, -95.0293, -1.89563, 0.57", "-11.3538, -95.6821, -4.55933, 0.57", "-11.9951, -95.7754, -4.93991, 0.57", "-13.3867, -95.9778, -5.76576, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.86546, -95.0293, -1.89563, 0.68", "-7.44661, -96.4921, -2.31057, 0.68", "-8.65748, -98.5684, -3.13485, 0.68", "-9.32323, -99.5774, -3.52916, 0.68", "-9.89207, -100.35, -3.79818, 0.68", "-11.356, -102.015, -4.47378, 0.68", "-12.0509, -102.761, -4.77716, 0.68", "-14.3372, -105.028, -5.73089, 0.68", "-15.1029, -105.834, -6.02794, 0.68", "-16.0385, -106.855, -6.32295, 0.68", "-17.9139, -108.969, -6.82171, 0.68", "-19.3008, -110.585, -7.05594, 0.68", "-21.5007, -113.257, -7.31994, 0.68", "-23.3183, -115.563, -7.43621, 0.68", "-25.2514, -118.063, -7.50006, 0.68", "-26.7615, -120.079, -7.51112, 0.68", "-28.4769, -122.423, -7.39965, 0.68", "-30.0443, -124.427, -7.259, 0.57", "-31.4417, -126.063, -7.06555, 0.57", "-33.2008, -128.026, -6.86666, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "18.4146, -90.6141, 18.088, 0.45", "17.0308, -91.4881, 20.2344, 0.45", "16.3925, -91.7684, 21.2643, 0.45", "14.8356, -92.2545, 23.4663, 0.45", "14.4174, -92.3514, 24.0777, 0.45", "13.8252, -92.4236, 24.9239, 0.45", "13.5279, -92.4593, 25.6854, 0.45", "13.32, -92.4648, 26.6903, 0.45", "13.1909, -92.4062, 27.7427, 0.45", "13.0055, -92.2509, 28.8182, 0.45", "12.8604, -92.0977, 29.563, 0.45", "11.9642, -91.0966, 34.1881, 0.45", "11.7541, -90.915, 35.1526, 0.45", "11.2813, -90.6273, 36.9764, 0.45", "10.473, -90.2527, 39.6563, 0.45", "10.1203, -90.1894, 40.577, 0.45", "9.0105, -90.3991, 42.9715, 0.45", "8.42522, -90.6866, 43.8374, 0.45", "8.09526, -90.9701, 44.3294, 0.34", "7.74058, -91.4162, 44.8434, 0.34", "6.71502, -92.8261, 46.0439, 0.34", "5.71353, -94.123, 46.9252, 0.34", "4.92246, -95.0495, 47.4384, 0.34", "3.97503, -96.0849, 48.0626, 0.34", "2.37919, -97.7533, 49.1512, 0.34", "0.292702, -99.7867, 50.6025, 0.34", "-0.44927, -100.398, 51.0951, 0.34", "-0.961367, -100.761, 51.5048, 0.34", "-2.35134, -101.676, 52.8385, 0.34", "-3.20706, -102.273, 53.9067, 0.34", "-3.77979, -102.727, 54.902, 0.34", "-4.32293, -103.244, 56.1626, 0.34", "-5.0181, -103.953, 57.6982, 0.34", "-5.8749, -104.906, 59.562, 0.34", "-6.8523, -106.05, 61.5411, 0.34", "-7.84162, -107.251, 63.443, 0.34", "-8.48206, -108.077, 64.5816, 0.34", "-9.44434, -109.443, 66.1819, 0.34", "-10.0201, -110.248, 66.9926, 0.34", "-10.4409, -110.809, 67.5006, 0.34", "-11.8042, -112.457, 68.7701, 0.34", "-12.623, -113.473, 69.4692, 0.34", "-13.6987, -114.817, 70.4091, 0.34", "-14.1033, -115.314, 70.796, 0.34", "-15.1313, -116.463, 71.6802, 0.34", "-15.6927, -117.062, 72.1327, 0.34", "-16.805, -118.198, 72.9511, 0.34", "-17.475, -118.854, 73.3953, 0.34", "-18.2383, -119.557, 73.8423, 0.34", "-19.6228, -120.792, 74.6112, 0.34", "-20.7875, -121.767, 75.224, 0.34", "-22.0263, -122.691, 75.8347, 0.34", "-23.2169, -123.46, 76.404, 0.34", "-24.1181, -124.002, 76.8827, 0.34", "-25.0016, -124.495, 77.3638, 0.34", "-25.8538, -124.914, 77.8486, 0.34", "-26.5624, -125.185, 78.2761, 0.34", "-27.8695, -125.51, 79.1349, 0.34", "-28.7777, -125.629, 79.8111, 0.34" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "18.4146, -90.6141, 18.088, 2.72", "21.3885, -96.1831, 25.2353, 2.72", "22.787, -98.5776, 28.25, 1.47", "24.0173, -100.701, 30.5982, 1.13", "28.0172, -107.67, 37.7459, 1.13", "28.757, -109.097, 38.9803, 3.39", "30.0765, -112.034, 41.0725, 1.81", "32.3558, -118.288, 43.6753, 0.68", "33.3894, -121.814, 44.6429, 0.68", "33.736, -123.749, 44.8348, 0.68", "34.2816, -129.561, 44.5745, 0.68", "34.4493, -133.553, 44.3544, 0.68", "34.4007, -137.071, 44.05, 0.68", "34.2593, -141.027, 43.5152, 0.68", "34.0881, -145.609, 43.0538, 0.68", "33.9999, -148.453, 42.7527, 0.68", "33.9565, -152.123, 42.4386, 0.68", "33.966, -155.377, 42.1167, 0.68", "34.0683, -162.396, 41.5107, 0.68", "34.1445, -164.014, 41.4833, 3.51", "34.4587, -167.784, 41.6345, 1.7", "34.6955, -170.698, 42.0401, 0.79", "34.9301, -174.101, 42.8223, 0.79", "35.3567, -180.402, 44.7196, 0.68", "35.7895, -186.317, 46.7725, 0.79", "35.9421, -188.089, 47.3695, 0.45", "36.6202, -193.114, 50.0966, 0.45", "36.9766, -194.944, 51.3481, 0.45", "37.3296, -196.273, 52.4129, 0.68", "38.3543, -199.364, 55.2734, 0.68", "38.9566, -200.95, 56.7909, 0.68", "43.043, -211.065, 66.6767, 2.38", "43.7643, -212.743, 68.4118, 1.47", "44.1479, -213.661, 69.3599, 0.79", "45.6254, -217.181, 72.9302, 0.79", "46.7132, -219.801, 75.4249, 0.79", "47.4692, -221.731, 76.9563, 2.15", "49.6579, -227.729, 80.0512, 0.79", "51.0319, -231.314, 81.7065, 0.68", "52.0438, -233.886, 82.5905, 0.68", "53.007, -236.234, 83.0884, 0.68", "53.3752, -237.173, 83.2023, 0.68", "54.3915, -240.043, 83.1408, 0.68", "55.3313, -243.146, 82.6665, 0.68", "56.5488, -248.725, 81.7162, 0.68", "56.6752, -249.817, 81.5228, 2.6", "56.75, -251.706, 81.2011, 2.26", "56.4718, -258.02, 80.2358, 0.45", "56.2067, -260.037, 79.9763, 0.45", "55.6207, -263.076, 79.5817, 0.45", "54.6077, -267.486, 79.0342, 0.45", "53.5745, -271.67, 78.6224, 0.45", "52.3652, -276.342, 78.3124, 0.45", "51.0216, -281.31, 78.1369, 0.45", "49.7234, -286.149, 77.9122, 2.38", "49.4253, -287.313, 77.8472, 3.51", "47.9713, -292.974, 77.5445, 0.57", "47.3256, -295.485, 77.3997, 1.24" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "17.4009, -77.2743, 21.1726, 0.45", "17.243, -76.6527, 19.3829, 0.45", "17.2675, -76.3014, 18.3327, 0.45", "17.391, -75.8983, 16.8216, 0.45", "18.0018, -75.0948, 12.9083, 0.45", "18.6474, -74.457, 9.42766, 0.45", "19.2946, -73.8401, 6.09209, 0.45", "19.6793, -73.1594, 2.32107, 0.45", "19.991, -72.5329, -1.03333, 0.45", "20.2568, -72.0566, -3.6268, 0.45", "20.8289, -71.2051, -8.45093, 0.45", "21.2203, -70.5926, -11.7786, 0.45", "21.7212, -69.18, -18.3667, 0.45", "21.5883, -68.6217, -20.9297, 0.45", "21.5555, -68.5471, -21.2131, 0.45", "21.4469, -68.4103, -21.7157, 0.45", "20.9755, -67.9234, -23.8093, 0.45", "19.8422, -67.3099, -28.564, 0.45", "19.3763, -67.1668, -31.0478, 0.45", "19.1407, -67.143, -32.3458, 0.45", "18.5901, -67.2186, -35.4313, 0.45", "18.2752, -67.3632, -37.3563, 0.45", "17.5908, -67.8195, -41.9588, 0.45", "17.4139, -68.0414, -44.7244, 0.45", "17.3905, -68.1249, -45.7776, 0.45", "17.4129, -68.1738, -46.924, 0.45", "17.5338, -68.1106, -48.1239, 0.45", "17.8104, -67.775, -49.742, 0.45", "18.7011, -66.7755, -52.1596, 0.45", "19.0533, -66.3007, -53.3117, 0.45", "20.0019, -64.9007, -56.7356, 0.45", "20.3896, -64.2453, -58.3861, 0.45", "20.711, -63.7204, -59.8382, 0.45", "21.3313, -62.8576, -62.5931, 0.45", "22.932, -61.2134, -69.0132, 0.45", "23.1237, -61.0373, -69.7939, 0.45", "23.6764, -60.6323, -72.2594, 0.45", "24.0207, -60.4323, -74.0033, 0.45", "24.1684, -60.3748, -74.8149, 0.45", "24.719, -60.239, -77.7076, 0.45", "25.79, -60.0931, -79.3941, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-61.5731, -225.652, 153.73, 0.57", "-62.9906, -226.797, 154.485, 0.57", "-67.0295, -229.609, 156.519, 0.57", "-70.4191, -231.703, 158.164, 0.45", "-73.3392, -233.373, 159.928, 0.45", "-75.5583, -234.575, 161.384, 0.45", "-77.4819, -235.597, 162.772, 0.45", "-79.652, -236.652, 164.388, 0.45", "-81.8983, -237.536, 166.194, 0.45", "-87.7372, -239.537, 171.31, 0.45", "-88.7919, -239.904, 172.333, 0.45", "-90.6491, -240.671, 174.328, 0.45" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-61.5731, -225.652, 153.73, 0.57", "-62.3864, -230.572, 155.514, 0.57", "-62.6716, -232.248, 156.147, 0.57", "-63.0216, -234.358, 156.916, 0.57", "-63.5006, -237.205, 157.919, 0.57", "-63.7997, -239.161, 158.659, 0.57", "-63.9315, -240.151, 159.028, 0.57", "-63.9518, -240.331, 159.108, 2.04", "-64.418, -242.825, 159.902, 0.57", "-64.6706, -243.679, 160.108, 0.57", "-65.2108, -244.898, 160.313, 1.92", "-66.763, -247.931, 161.174, 0.68", "-67.4941, -249.249, 161.637, 0.68", "-69.5571, -252.682, 162.888, 0.57", "-70.8795, -254.999, 164.103, 0.57", "-72.5911, -258.334, 166.209, 0.57", "-74.7129, -263.438, 169.673, 0.57", "-74.9532, -264.225, 170.251, 0.57", "-75.2834, -265.942, 171.468, 0.45", "-75.7464, -272.752, 176.498, 0.45", "-75.765, -273.875, 177.301, 0.45", "-75.8094, -277.309, 179.627, 0.45", "-75.9506, -279.929, 181.098, 0.45", "-76.1255, -282.061, 182.458, 0.45", "-76.7901, -286.244, 185.266, 0.45", "-77.2706, -287.897, 186.402, 0.45", "-77.7558, -289.279, 187.537, 0.45", "-77.9524, -289.756, 188.003, 0.45", "-79.5054, -293.281, 191.87, 0.11", "-80.394, -295.216, 194.178, 0.23", "-81.7341, -298.102, 197.439, 0.23", "-82.2485, -299.338, 198.932, 0.23" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "73.4017, -77.1745, 21.4697, 0.34", "75.46, -80.9381, 21.9232, 0.34", "77.9377, -85.4684, 22.4692, 0.34", "80.3696, -89.9154, 23.0051, 0.34", "82.1175, -93.1115, 23.3903, 0.34", "83.0607, -94.8361, 23.5982, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "73.4017, -77.1745, 21.4697, 0.45", "75.703, -76.3518, 19.3688, 0.45", "77.379, -75.7509, 17.6949, 0.45", "79.9123, -74.8829, 15.1503, 0.45", "81.6811, -74.2349, 13.4146, 0.45", "85.2329, -72.9096, 9.9856, 0.45", "87.6547, -72.0742, 7.74751, 0.45", "89.5623, -71.4937, 6.13512, 0.45", "92.1585, -70.7916, 3.94766, 0.45", "95.1205, -70.0199, 1.34027, 0.45", "95.4732, -69.9253, 0.995797, 1.58", "98.1013, -69.1718, -1.63769, 0.34", "100.153, -68.6668, -3.88625, 0.34", "103.407, -67.9523, -7.96231, 0.34", "105.13, -67.6512, -10.4335, 0.34", "106.892, -67.7469, -13.0055, 0.34", "107.964, -67.9888, -14.6789, 0.34", "109.182, -68.5014, -16.4808, 0.34", "111.111, -69.7896, -19.0255, 0.34", "112.713, -71.0317, -20.6899, 0.34", "117.319, -74.821, -24.7644, 0.34", "119.764, -76.9709, -26.8974, 0.34", "122.302, -79.2981, -29.1075, 0.34", "126.241, -83.0141, -32.3733, 0.34", "128.624, -85.4035, -34.2581, 0.34", "131.162, -88.0684, -36.2789, 0.34", "133.748, -90.6752, -38.1235, 0.34", "136.426, -93.1548, -39.7999, 0.34", "137.718, -94.164, -40.5175, 0.34", "139.384, -95.2487, -41.1995, 0.34", "141.38, -96.4625, -41.858, 0.34", "142.984, -97.3358, -42.288, 0.34", "144.896, -98.2587, -42.73, 0.34", "151.566, -101.345, -44.3294, 0.34", "154.713, -102.708, -45.1302, 0.34", "157.878, -104.049, -45.9591, 0.34", "160.797, -105.311, -46.7354, 0.34", "165.58, -107.471, -48.1214, 0.34", "169.323, -109.166, -49.2459, 0.34", "171.653, -110.189, -50.0091, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-28.7777, -125.629, 79.8111, 0.34", "-29.4365, -126.195, 80.5494, 0.34", "-30.7968, -127.622, 81.8202, 0.34", "-31.34, -128.261, 82.2445, 2.04", "-31.875, -128.926, 82.6305, 1.13", "-32.6962, -130.087, 83.2504, 0.79", "-33.2712, -130.949, 83.542, 0.57", "-34.322, -132.534, 83.8589, 0.57", "-36.5901, -135.929, 84.2411, 0.57", "-37.6411, -137.399, 84.4951, 0.57", "-39.3359, -139.634, 85.0079, 0.57", "-42.4268, -143.477, 86.1089, 0.57", "-44.2185, -145.496, 86.7506, 0.57", "-45.088, -146.388, 87.0661, 0.57", "-48.7095, -149.842, 88.4652, 0.57", "-49.7745, -150.817, 88.9156, 0.57", "-50.7403, -151.72, 89.4259, 0.57", "-52.1879, -153.201, 90.3746, 0.57", "-53.5938, -154.81, 91.4152, 0.57", "-54.4933, -155.937, 92.1544, 0.57", "-55.5249, -157.455, 93.0887, 0.57", "-57.9767, -161.341, 95.5984, 0.57", "-59.2305, -163.383, 96.9672, 0.57", "-60.8635, -166.119, 98.83, 0.57", "-62.1345, -168.257, 100.283, 0.57", "-63.4683, -170.407, 101.732, 0.57", "-64.3673, -171.878, 102.723, 0.57", "-65.2672, -173.342, 103.641, 0.57", "-66.3837, -175.159, 104.79, 0.57", "-67.0393, -176.198, 105.382, 0.57", "-67.7988, -177.342, 106.038, 0.57", "-69.3416, -179.588, 107.377, 0.57", "-70.802, -181.772, 108.536, 0.57", "-71.8508, -183.361, 109.275, 0.57", "-73.1832, -185.367, 110.087, 0.57", "-74.2837, -187.059, 110.665, 0.57", "-75.038, -188.228, 110.993, 0.57", "-76.5452, -190.489, 111.265, 0.57", "-77.7085, -192.222, 111.314, 0.57", "-79.1091, -194.225, 111.041, 0.57", "-80.365, -195.984, 110.491, 0.57", "-81.7507, -197.851, 109.676, 0.57", "-84.0538, -200.737, 108.034, 0.57", "-84.9454, -201.784, 107.41, 0.57", "-88.1198, -205.285, 105.253, 0.57", "-90.4486, -207.746, 103.682, 0.57", "-91.2106, -208.568, 103.201, 0.57", "-93.229, -210.927, 102.161, 0.57", "-95.215, -213.812, 101.898, 0.57", "-96.2823, -215.79, 102.207, 0.57", "-96.5974, -216.538, 102.511, 0.57", "-97.25, -218.266, 103.365, 0.57", "-97.6224, -219.274, 103.856, 0.57", "-98.7176, -222.66, 105.29, 0.57", "-99.443, -225.023, 105.878, 0.57", "-99.8168, -226.234, 105.968, 0.45", "-100.158, -227.386, 105.921, 0.45", "-100.642, -229.297, 105.523, 0.45", "-101.105, -231.906, 104.458, 0.45", "-101.331, -233.995, 103.243, 0.45", "-101.531, -237.262, 101.12, 0.45", "-101.591, -238.971, 99.9801, 0.45", "-101.571, -241.479, 98.4373, 0.45", "-101.448, -244.248, 96.9377, 0.45", "-101.392, -246.311, 96.0811, 0.45", "-101.374, -247.123, 95.8597, 0.45", "-101.386, -248.548, 95.6989, 0.45", "-101.572, -251.44, 95.6336, 0.45", "-101.794, -253.405, 95.8231, 0.45", "-102.228, -256.035, 96.2984, 0.45", "-102.714, -258.361, 97.0062, 0.45", "-103.272, -260.589, 97.8816, 0.45", "-103.695, -261.95, 98.6049, 0.45", "-104.013, -262.818, 99.2614, 0.45", "-104.329, -263.682, 100.166, 0.45", "-105.219, -266.654, 103.558, 0.45", "-105.385, -267.267, 104.26, 0.45", "-105.562, -268.328, 105.706, 0.45", "-105.72, -270.35, 108.488, 0.45", "-105.701, -272.221, 110.983, 0.45", "-105.484, -274.704, 113.999, 0.45", "-105.313, -276.084, 115.378, 0.45", "-104.669, -283.052, 121.475, 0.45", "-104.538, -284.946, 122.868, 0.45", "-104.464, -287.554, 124.115, 0.45", "-104.467, -291.357, 125.24, 0.45", "-104.517, -297.256, 126.303, 0.45", "-104.564, -302.191, 126.694, 0.45", "-104.649, -306.679, 126.532, 0.45", "-104.735, -316.969, 125.801, 0.45", "-104.735, -318.502, 125.621, 0.45", "-104.611, -322.286, 125.041, 0.45", "-104.418, -324.742, 124.419, 0.45", "-103.989, -328.156, 123.428, 0.45", "-103.606, -330.758, 122.673, 0.45", "-103.416, -332.138, 122.437, 0.45", "-103.235, -334.102, 122.125, 0.45", "-102.896, -341.398, 121.387, 0.45", "-102.79, -345.218, 121.601, 0.45", "-102.767, -346.708, 121.936, 0.45", "-102.777, -351.951, 123.641, 0.45", "-102.812, -354.462, 124.681, 0.45", "-103.032, -358.361, 126.538, 0.45", "-103.363, -362.748, 129.271, 0.45", "-103.529, -364.719, 130.336, 0.45", "-103.591, -367.499, 131.489, 0.45", "-103.433, -368.724, 131.761, 0.45", "-102.312, -372.983, 131.974, 0.45", "-100.617, -377.946, 131.438, 0.45", "-97.4038, -385.577, 129.589, 0.45", "-94.7074, -390.502, 128.063, 0.45", "-92.7507, -393.241, 127.059, 0.45", "-92.3304, -393.727, 126.842, 0.45" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-28.7777, -125.629, 79.8111, 0.34", "-26.5608, -124.198, 80.6371, 0.34", "-24.972, -123.173, 81.2291, 0.34", "-18.8158, -119.2, 83.523, 0.34", "-17.1178, -118.105, 84.1557, 0.34" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "47.3256, -295.485, 77.3997, 0.57", "46.3613, -296.565, 77.6561, 0.57", "44.9353, -298.464, 77.6536, 0.57", "44.2244, -299.585, 77.5422, 0.57", "43.387, -301.175, 77.1087, 0.57", "42.6626, -302.753, 76.6145, 0.57", "41.405, -305.628, 75.6722, 0.57", "40.7636, -307.264, 75.0643, 0.57", "40.0749, -309.149, 74.3029, 0.57", "38.8334, -312.566, 72.947, 0.57", "37.4102, -316.335, 71.4446, 0.57", "36.4146, -318.856, 70.5422, 0.57", "36.0475, -319.724, 70.28, 2.15", "35.6952, -320.487, 70.0817, 1.36", "34.8772, -322.05, 69.843, 0.68", "34.3776, -322.882, 69.8631, 0.68", "33.7473, -323.816, 70.0145, 0.57", "33.3737, -324.337, 70.1695, 0.57", "32.3788, -325.712, 70.6505, 0.57", "31.2575, -327.218, 71.2182, 0.57", "30.5203, -328.223, 71.5898, 0.57", "29.6546, -329.515, 71.9477, 0.57", "28.8673, -330.776, 72.1039, 0.57", "28.5762, -331.284, 72.1117, 0.57", "28.1745, -332.065, 72.0362, 0.57", "27.6542, -333.137, 71.8597, 0.57", "26.1307, -336.287, 71.2503, 0.57", "25.1978, -338.27, 70.7557, 0.57", "24.4214, -339.945, 70.2984, 0.57", "23.426, -341.991, 69.7124, 0.57", "22.0966, -344.589, 69.0208, 0.57", "20.2728, -347.802, 68.2095, 0.57", "19.4971, -349.061, 67.8621, 1.7", "18.7838, -350.167, 67.5475, 1.7", "18.0846, -351.208, 67.1713, 0.68", "16.7885, -353.027, 66.4114, 0.68", "15.9958, -354.164, 65.8971, 0.68", "14.7725, -356.004, 65.0855, 0.68", "14.4505, -356.534, 64.852, 1.7", "13.9859, -357.454, 64.4368, 1.7", "13.7078, -358.124, 64.1391, 1.7", "13.4227, -358.982, 63.775, 0.68", "12.8254, -361.181, 62.9584, 0.68", "12.2794, -363.419, 62.2434, 0.68", "11.8635, -365.292, 61.7528, 0.68", "11.6835, -366.212, 61.5561, 0.68", "11.3003, -368.413, 61.1844, 0.68", "10.9605, -370.498, 60.9315, 0.68", "10.8047, -371.557, 60.8776, 0.68", "10.4259, -374.128, 60.9301, 0.68", "10.3214, -374.882, 60.9689, 0.68", "10.2004, -375.798, 61.0321, 1.02", "10.088, -376.744, 61.095, 0.45", "9.99086, -378.206, 61.1596, 0.45", "9.98296, -378.646, 61.151, 0.45", "9.98096, -379.963, 61.0717, 0.45", "9.97426, -381.519, 60.9858, 0.45", "9.98156, -383.293, 60.8935, 0.45", "10.0075, -385.335, 60.7872, 0.45", "10.041, -387.17, 60.7155, 0.45", "10.0839, -390.031, 60.6033, 0.45", "10.1118, -390.901, 60.5745, 0.45", "10.1704, -391.972, 60.5461, 1.47", "10.1923, -392.34, 60.5374, 1.47", "10.3065, -394.12, 60.4296, 0.68", "10.4578, -396.246, 60.2588, 0.57", "10.6073, -398.16, 60.1357, 0.57", "10.7137, -399.969, 60.1023, 0.57", "10.7347, -400.486, 60.1085, 0.57", "10.7661, -402.097, 60.2391, 0.57", "10.7383, -403.906, 60.6195, 0.57", "10.7267, -405.476, 61.1189, 1.7", "10.7448, -407.974, 62.0221, 0.68", "10.7887, -409.215, 62.507, 0.68", "10.9259, -411.501, 63.4034, 0.68", "11.1661, -414.84, 64.6198, 0.68", "11.3341, -417.154, 65.3017, 0.68", "11.3895, -418.031, 65.4884, 2.15", "11.419, -418.57, 65.5646, 2.15", "11.5102, -420.369, 65.6449, 0.68", "11.5535, -422.452, 65.592, 0.68", "11.5443, -423.795, 65.548, 0.68", "11.4568, -425.646, 65.563, 0.68", "11.3705, -427.621, 65.5742, 0.68", "11.3255, -429.548, 65.5856, 0.68", "11.3677, -432.526, 65.6164, 0.68", "11.4857, -434.456, 65.6454, 0.68", "11.6212, -435.918, 65.6298, 0.68", "11.8927, -438.104, 65.5271, 0.68", "12.0279, -438.969, 65.4551, 0.68", "12.4441, -441.148, 65.1896, 0.68", "12.7588, -442.53, 64.9452, 0.68", "13.1519, -444.263, 64.6266, 0.68", "13.4796, -445.942, 64.3718, 0.68", "13.6761, -447.317, 64.2264, 0.68", "13.7721, -448.206, 64.1271, 0.68", "13.832, -449.194, 64.0625, 0.68", "13.8433, -449.557, 64.058, 0.68", "13.8618, -451.258, 64.1052, 0.68", "13.8807, -453.222, 64.2337, 0.68", "13.9236, -454.639, 64.3594, 0.68", "14.0238, -456.61, 64.5458, 0.68", "14.154, -458.487, 64.7756, 0.68", "14.1936, -458.988, 64.8699, 0.68", "14.3102, -460.237, 65.1519, 0.57", "14.4219, -461.359, 65.4096, 0.57", "14.6362, -463.445, 65.8924, 0.57", "14.8569, -465.398, 66.4162, 0.57", "15.0575, -467.549, 67.0848, 0.57", "15.2453, -469.709, 67.7612, 0.57", "15.4055, -471.692, 68.2919, 0.57", "15.5352, -473.075, 68.566, 1.47", "15.8279, -475.87, 68.9595, 0.45", "15.9773, -477.224, 69.0411, 0.45", "16.3652, -480.057, 69.0368, 0.45", "16.7532, -482.363, 69.0559, 0.45", "17.2894, -485.008, 69.0602, 0.45", "17.9466, -487.085, 69.1341, 0.45", "17.4506, -486.544, 68.0204, 0.45", "16.3069, -484.781, 66.259, 0.45" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "47.3256, -295.485, 77.3997, 0.57", "46.9372, -297.353, 77.5025, 0.57", "46.6777, -298.596, 77.569, 0.57", "46.3373, -300.338, 77.6537, 0.57", "45.8229, -302.971, 77.7816, 0.57", "45.2083, -306.118, 77.9345, 0.57", "44.8273, -308.068, 78.0292, 2.15", "44.4687, -309.786, 78.102, 2.72", "44.2164, -311.125, 78.1742, 2.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "83.0607, -94.8361, 23.5982, 0.45", "88.5497, -95.8856, 21.9644, 0.45", "89.8858, -96.1043, 21.6772, 0.45", "92.3806, -96.3303, 21.2222, 0.45", "95.6921, -96.5555, 20.6633, 0.45", "98.7224, -96.7699, 20.1707, 0.45", "102.687, -96.97, 19.5041, 0.45", "104.09, -96.9731, 19.3372, 0.45", "108.039, -96.7947, 18.7052, 0.45", "111.092, -96.48, 18.0775, 0.45", "113.471, -96.0639, 17.4392, 0.45", "116.715, -95.1937, 16.1504, 0.45", "118.79, -94.4503, 15.0653, 0.45", "121.018, -93.5249, 13.7511, 0.45", "123.233, -92.5413, 12.1655, 0.45", "125.621, -91.3782, 10.1128, 0.45", "128.927, -89.6311, 7.02231, 0.45", "130.246, -88.9307, 5.67649, 0.45", "131.624, -88.2185, 4.18016, 0.45", "134.949, -86.6673, 0.435582, 0.45", "136.324, -86.1532, -1.29287, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "83.0607, -94.8361, 23.5982, 0.34", "82.7511, -98.2252, 23.2121, 0.34", "82.5434, -99.5344, 23.0328, 0.34", "82.115, -101.726, 22.721, 0.34", "81.2773, -105.724, 22.1396, 0.34", "80.3543, -109.36, 21.478, 0.34", "79.2539, -113.112, 20.7809, 0.34", "77.706, -116.885, 20.116, 0.34", "77.4567, -117.363, 20.0362, 0.34", "77.2814, -117.625, 19.9872, 1.58", "74.9698, -120.476, 19.5715, 0.45", "73.8776, -121.746, 19.3317, 0.45", "71.099, -124.974, 18.5659, 0.45", "70.1801, -126.113, 18.2802, 0.45", "67.9085, -129.214, 17.4774, 0.45", "67.158, -130.344, 17.2122, 0.45", "65.2919, -133.602, 16.5504, 0.45", "64.4881, -135.2, 16.1693, 0.45", "63.1548, -138.376, 15.4757, 0.45", "62.3663, -140.401, 15.0842, 0.45", "61.3972, -143.111, 14.6909, 0.45", "59.9742, -147.244, 14.044, 0.45", "58.982, -150.184, 13.6537, 0.45", "57.7458, -153.978, 13.1594, 0.45", "56.7199, -157.055, 12.8411, 0.45", "55.8274, -159.726, 12.5448, 0.45", "54.7729, -162.793, 12.1902, 0.45", "53.7635, -165.569, 11.9393, 0.45", "53.0711, -167.243, 11.8567, 0.45", "51.8193, -169.906, 11.5617, 0.45", "51.3525, -170.866, 11.447, 0.45", "49.9792, -173.551, 11.1026, 0.45", "49.1544, -175.132, 10.9319, 0.45", "47.9724, -177.382, 10.6443, 0.45", "45.7455, -181.632, 9.7429, 0.45", "44.4727, -184.184, 9.06657, 0.45", "43.777, -185.666, 8.65326, 0.45", "43.2622, -186.95, 8.31146, 0.45", "42.8751, -188.014, 7.99767, 0.45", "41.3353, -192.543, 6.72835, 0.45", "40.6323, -194.647, 6.2165, 0.45", "40.2223, -195.902, 5.87607, 0.45", "39.5226, -198.12, 5.30516, 0.45", "38.3516, -201.711, 4.01208, 0.45", "37.8018, -203.401, 3.36253, 0.45", "37.4176, -204.634, 2.9357, 0.45", "36.9774, -206.033, 2.46028, 0.45", "36.0779, -208.863, 1.47798, 0.45", "34.1828, -215.55, -0.106815, 0.45", "33.5554, -218.268, -0.220835, 0.45", "32.9823, -221.194, 0.120768, 0.45", "32.3814, -224.361, 1.20413, 0.45", "32.109, -225.683, 1.94811, 0.45", "30.3354, -233.234, 7.9209, 0.45", "29.766, -235.347, 9.98089, 0.45", "29.6458, -235.709, 10.3615, 0.45", "28.7868, -237.824, 12.5561, 0.45", "28.0346, -239.497, 14.0991, 0.45", "27.0609, -241.461, 15.4114, 0.45", "26.8299, -241.886, 15.5474, 0.45", "26.0709, -243.328, 15.7811, 0.45", "24.9009, -245.707, 15.9357, 0.45", "24.0481, -247.581, 15.914, 0.45", "22.8211, -250.444, 15.7879, 0.45", "21.5851, -253.516, 15.6043, 0.45", "19.6995, -258.872, 15.3853, 0.45", "19.1863, -260.486, 15.3423, 0.45", "18.6965, -262.108, 15.3101, 0.45", "18.1516, -263.995, 15.3102, 0.45", "17.6281, -266.089, 15.4304, 0.45", "16.8, -270.425, 15.8397, 0.45", "16.6925, -271.504, 16.0852, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "44.2164, -311.125, 78.1742, 0.45", "43.6714, -313.815, 77.4702, 0.45", "43.2551, -315.963, 76.9381, 0.45", "42.8765, -317.947, 76.4593, 0.45", "42.3565, -321.02, 75.778, 0.45", "42.0286, -322.816, 75.3905, 0.45", "41.489, -325.554, 74.8759, 0.45", "40.9515, -328.477, 74.4587, 0.45", "40.8028, -329.245, 74.3598, 1.47", "40.1764, -332.015, 74.0606, 0.45", "39.759, -333.787, 73.9193, 0.45", "39.3151, -335.598, 73.8998, 0.45", "39.0106, -336.943, 73.9657, 0.45", "38.4174, -339.876, 74.2714, 0.45", "38.026, -341.97, 74.533, 0.79", "37.7003, -343.955, 74.8092, 0.79", "37.1861, -347.716, 75.4313, 0.45", "36.823, -350.566, 75.9055, 0.45", "36.44, -354.141, 76.576, 0.45", "36.3211, -355.341, 76.8777, 0.45", "36.2168, -356.492, 77.1952, 1.92", "35.9957, -358.63, 77.9778, 1.47", "35.8273, -360.458, 78.7369, 0.57", "35.6864, -362.196, 79.5437, 0.57", "35.4359, -365.142, 81.1379, 0.57", "35.2939, -367.425, 82.3983, 0.57", "35.0318, -372.418, 85.0391, 0.57", "35.0091, -373.5, 85.5528, 0.57", "35.0081, -375.717, 86.4338, 0.57", "35.1074, -379.628, 87.4969, 0.57", "35.2541, -381.825, 87.7995, 0.57", "35.5212, -383.917, 87.7562, 0.57", "35.9115, -386.592, 87.5043, 0.57", "36.3609, -390.372, 87.273, 0.57", "36.733, -394.319, 87.109, 0.57", "37.0642, -397.869, 86.9539, 0.57", "37.5407, -403.786, 86.791, 0.57", "37.8155, -408.214, 86.5068, 0.57", "37.9363, -412.315, 86.0857, 0.23", "37.9322, -414.688, 85.8334, 0.23", "37.8352, -417.249, 85.5478, 0.23", "37.662, -420.46, 85.1562, 0.23", "37.3522, -424.712, 84.6079, 0.23", "37.2833, -426.329, 84.0945, 0.23", "37.1389, -428.409, 83.2574, 1.7", "36.7754, -430.723, 82.3777, 0.68", "36.2297, -432.766, 81.6472, 0.45", "35.7861, -433.876, 81.3628, 0.45", "33.2406, -438.03, 80.801, 0.45", "30.8822, -440.8, 80.4671, 0.45", "29.1088, -442.484, 80.2425, 0.45", "27.8639, -443.533, 80.1888, 0.45", "26.6759, -444.61, 80.0984, 0.45", "24.9027, -446.808, 79.8876, 0.45", "24.6899, -447.17, 79.8515, 0.45", "24.3041, -448.088, 79.634, 1.92", "23.5591, -450.567, 78.9796, 0.57", "22.8757, -453.637, 78.2124, 0.57", "22.4628, -456.508, 77.3866, 0.45", "22.3157, -458.104, 76.9175, 0.45", "22.03, -461.297, 76.0053, 0.45", "21.8418, -463.661, 75.3809, 0.57", "21.7481, -465.084, 75.0179, 0.57", "21.5444, -468.611, 74.1723, 0.57", "21.2552, -473.309, 72.96, 0.57", "21.1378, -475.437, 72.4049, 0.57", "20.9002, -480.152, 71.1717, 0.57" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "44.2164, -311.125, 78.1742, 0.45", "45.4157, -313.31, 78.671, 0.45", "45.9571, -314.255, 78.8833, 0.45", "47.7548, -317.554, 79.8799, 0.45", "49.3576, -320.682, 80.9131, 0.45", "50.6463, -323.25, 81.6987, 0.45", "50.696, -323.344, 81.7246, 1.81", "51.3535, -324.549, 82.0369, 1.7", "53.0138, -327.638, 82.8074, 0.68", "54.0058, -329.391, 83.2234, 0.68", "55.2908, -331.608, 83.8434, 0.68", "56.8633, -334.236, 84.6156, 0.68", "57.8643, -335.777, 85.0528, 0.68", "59.3181, -337.809, 85.6159, 0.68", "60.8857, -339.77, 86.1446, 0.68", "62.7875, -342.016, 86.8313, 0.68", "64.8769, -344.379, 87.6314, 0.68", "67.4534, -347.181, 88.5661, 0.68", "69.1878, -348.974, 88.9852, 0.68", "71.0373, -350.815, 89.2525, 0.68", "72.3575, -352.112, 89.332, 0.68", "73.9818, -353.754, 89.2987, 0.68", "77.1359, -357.057, 89.1151, 0.68", "80.2984, -360.471, 88.9045, 0.57", "81.5976, -361.911, 88.8216, 0.57", "83.3119, -363.851, 88.7335, 0.57", "85.3771, -366.127, 88.5985, 0.57", "87.7207, -368.665, 88.4549, 0.57", "90.4597, -371.596, 88.3637, 0.57", "91.9918, -373.182, 88.4423, 0.57", "93.1597, -374.363, 88.5073, 0.57", "95.7401, -376.962, 88.8411, 0.57", "96.3708, -377.567, 88.9606, 0.57", "97.6473, -378.8, 89.2924, 0.57", "99.4579, -380.69, 90.0781, 0.57", "99.981, -381.245, 90.3515, 2.6", "101.771, -383.205, 91.3944, 2.04", "104.18, -385.798, 92.5784, 0.57", "105.245, -386.864, 92.9276, 0.57", "107.381, -389.241, 94.0227, 0.57", "108.83, -390.993, 94.9226, 0.57", "110.465, -393.104, 96.1562, 0.57", "112.95, -396.494, 98.2081, 0.57", "114.78, -399.26, 99.9618, 0.57", "119.966, -407.009, 104.308, 0.57", "122.979, -411.535, 106.468, 0.57", "124.654, -414.148, 107.618, 0.57", "126.1, -416.405, 108.465, 0.57", "126.966, -417.773, 108.878, 0.57", "130.995, -423.618, 109.394, 0.57", "132.987, -426.081, 109.028, 0.57", "133.87, -427.154, 108.797, 0.57", "135.46, -429.049, 108.342, 0.45", "136.207, -429.937, 108.183, 0.45", "137.682, -431.714, 108.161, 0.45", "139.093, -433.613, 108.575, 0.45", "139.757, -434.496, 108.808, 0.45", "140.494, -435.501, 109.095, 0.45", "141.164, -436.435, 109.356, 0.45", "142.789, -438.671, 109.953, 0.45", "143.894, -440.244, 110.384, 0.45", "145.205, -442.165, 110.887, 0.45", "146.867, -444.54, 111.503, 0.45", "148.286, -446.577, 111.988, 0.45", "148.814, -447.364, 112.161, 0.45", "150.181, -449.413, 112.557, 0.45", "152.498, -452.926, 113.247, 0.45", "154.345, -455.759, 113.812, 0.45", "156.233, -458.727, 114.423, 0.45", "157.9, -461.416, 115.013, 0.45" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "136.324, -86.1532, -1.29287, 0.45", "136.502, -87.3873, -3.41198, 0.45", "136.726, -88.5237, -5.02803, 0.45", "137.085, -89.8804, -6.74567, 0.45", "137.36, -91.1258, -8.28491, 0.45", "138.228, -96.9654, -15.4027, 0.45", "138.635, -100.615, -19.7626, 0.45", "138.689, -102.845, -22.6052, 0.45", "138.645, -103.796, -23.8004, 0.45", "138.403, -107.085, -27.6321, 0.45", "138.267, -109.391, -30.0729, 0.45", "138.264, -109.76, -30.3705, 0.45", "138.34, -112.854, -32.6516, 0.45", "138.442, -115.035, -34.2859, 0.45", "138.694, -117.141, -35.5547, 0.45", "139.193, -119.18, -36.5631, 0.34", "139.878, -121.29, -37.4984, 0.34", "140.352, -122.593, -38.0278, 0.34", "140.76, -123.574, -38.3714, 0.34", "142.204, -126.702, -39.4624, 0.34", "143.952, -130.72, -40.8655, 0.34", "144.461, -131.932, -41.1968, 0.34", "144.797, -132.853, -41.5436, 0.34", "145.4, -134.694, -42.3492, 0.34", "145.711, -135.717, -42.8352, 0.34", "146.296, -137.777, -43.9076, 0.34", "146.808, -139.637, -44.7354, 0.34", "148.093, -144.588, -47.2637, 0.34", "148.631, -146.716, -48.4899, 0.34", "148.759, -147.256, -48.8375, 0.34" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "136.324, -86.1532, -1.29287, 0.45", "138.164, -86.849, -1.5928, 0.45", "139.594, -87.6143, -1.96382, 0.45", "141.292, -88.6685, -2.44109, 0.45", "143.43, -90.3917, -3.42084, 0.45", "144.85, -91.7867, -4.19192, 0.45", "146.874, -93.9949, -5.34142, 0.45", "148.807, -96.5682, -6.55262, 0.34", "149.599, -97.77, -7.05441, 0.34", "152.298, -102.282, -8.95118, 0.34", "153.899, -105.053, -10.1479, 0.34", "155.054, -107.025, -10.9463, 0.34", "156.146, -108.885, -11.6074, 0.34", "157.673, -111.328, -12.2876, 0.34", "159.382, -114.02, -12.8767, 0.34", "160.756, -116.064, -13.1106, 0.34", "162.073, -118.006, -13.3062, 0.34", "163.264, -119.811, -13.3778, 0.34", "164.214, -121.226, -13.2834, 0.34", "165.195, -122.677, -12.9709, 0.34", "166.25, -124.238, -12.5746, 0.34", "167.571, -126.146, -12.1261, 0.34", "170.044, -129.587, -11.434, 0.45", "172.141, -132.293, -10.9215, 0.45", "174.149, -134.699, -10.404, 0.45", "176.599, -137.515, -9.78573, 0.45", "177.808, -138.819, -9.5641, 0.45", "179.222, -140.294, -9.39943, 0.45", "180.006, -141.112, -9.39446, 0.45", "183.358, -144.669, -9.62161, 0.45", "185.612, -147.107, -9.82351, 0.45", "187.782, -149.541, -9.91467, 0.45", "188.696, -150.593, -9.96801, 0.45", "191.762, -154.064, -10.1172, 0.45", "193.188, -155.703, -10.1353, 0.45", "195.12, -157.946, -10.031, 0.45", "196.317, -159.296, -9.8208, 0.45", "197.157, -160.251, -9.62124, 0.45", "199.298, -162.674, -9.08968, 0.45", "201.479, -165.186, -8.47139, 0.45", "203.341, -167.474, -8.11307, 0.45", "205.28, -170.022, -7.94849, 0.45", "206.67, -171.965, -8.08136, 0.45", "208.067, -174.079, -8.44654, 0.45", "209.077, -175.72, -8.8857, 0.45", "211.032, -179.007, -9.94053, 0.45", "212.096, -180.856, -10.5431, 0.45", "213.92, -184.061, -11.4975, 0.45", "215.657, -186.999, -12.2624, 0.45", "216.771, -188.801, -12.7026, 0.45", "217.78, -190.418, -13.1662, 0.45", "219.153, -192.618, -13.7758, 0.45", "219.95, -193.855, -14.1885, 0.45", "220.364, -194.509, -14.4269, 0.45", "221.368, -196.089, -15.0822, 0.45", "223.978, -200.079, -16.9473, 0.45", "225.001, -201.619, -17.743, 0.45", "226.416, -203.748, -18.9318, 0.45", "227.578, -205.486, -19.9074, 0.45", "228.015, -206.166, -20.2754, 0.79" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "228.015, -206.166, -20.2754, 0.45", "227.157, -208.696, -20.1027, 0.45", "226.726, -210.312, -19.9576, 0.45", "226.405, -211.73, -19.9619, 0.45", "226.255, -212.475, -20.106, 0.45", "226.108, -213.705, -20.4462, 0.45", "226.057, -214.764, -20.7507, 0.45", "226.18, -216.328, -21.2564, 0.45", "226.529, -218.94, -22.1485, 0.45", "227.045, -222.343, -23.326, 0.45", "227.311, -224.203, -23.8592, 0.45", "227.665, -226.748, -24.4306, 0.45", "227.823, -228.27, -24.6531, 0.45", "228.028, -230.283, -24.6488, 0.45", "228.339, -232.925, -23.9309, 0.45", "228.635, -235.777, -22.7129, 0.45", "228.758, -237.422, -21.7913, 0.45", "228.904, -238.985, -20.5017, 0.45", "229.248, -241.835, -17.6219, 0.45", "229.807, -245.508, -13.3695, 0.45", "229.993, -246.623, -12.0201, 0.45", "230.308, -248.291, -10.0309, 0.45", "231.052, -252.024, -5.33008, 0.45", "231.274, -253.095, -3.95219, 0.45", "231.471, -254.384, -2.43572, 0.45", "231.703, -256.504, -0.25194, 0.45", "231.847, -257.524, 0.818272, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "228.015, -206.166, -20.2754, 0.45", "229.416, -207.429, -20.1135, 0.45", "231.998, -209.641, -19.9611, 0.45", "234.752, -211.745, -19.9808, 0.45", "237.195, -213.535, -20.0068, 0.45", "239.851, -215.482, -20.0339, 0.45", "241.233, -216.583, -20.142, 0.45", "244.158, -219.14, -20.7361, 0.45", "247.0, -221.85, -21.6851, 0.45", "249.978, -225.002, -23.0524, 0.45", "250.943, -226.083, -23.5551, 0.45", "254.799, -230.506, -25.6611, 0.45", "257.718, -233.943, -27.2069, 0.45", "259.408, -235.873, -28.0263, 0.45", "263.167, -239.816, -29.6441, 0.45", "264.941, -241.445, -30.1884, 0.45", "268.472, -244.321, -30.7953, 0.45", "273.292, -247.747, -31.0281, 0.45", "278.967, -251.534, -30.68, 0.45", "283.281, -254.242, -29.9638, 0.45", "288.755, -257.298, -28.6555, 0.45", "291.619, -258.764, -27.8652, 0.45", "293.565, -259.621, -27.3068, 0.45", "298.649, -261.32, -26.1732, 0.45", "303.297, -262.566, -25.4758, 0.45", "309.218, -263.88, -25.1254, 0.45", "313.133, -264.583, -25.3337, 0.45", "319.312, -265.417, -26.1393, 0.45", "327.971, -266.07, -27.7736, 0.45", "330.252, -266.054, -28.3673, 0.45", "332.351, -265.883, -29.036, 0.45", "335.779, -265.083, -30.2178, 0.45", "337.768, -264.088, -30.9795, 0.45", "340.091, -261.559, -32.0977, 0.45", "341.106, -259.647, -32.7075, 0.45", "341.987, -257.743, -33.2994, 0.45", "343.785, -253.663, -34.5926, 0.45", "344.87, -251.307, -35.3811, 0.45", "346.978, -247.515, -36.8427, 0.45", "349.01, -244.763, -37.8549, 0.45", "351.432, -242.231, -38.6418, 0.45", "353.352, -240.546, -39.1282, 0.45", "355.339, -239.227, -39.4229, 0.45", "357.962, -237.99, -39.5701, 0.45", "365.908, -236.112, -38.3682, 0.45", "367.057, -236.023, -37.9338, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "231.847, -257.524, 0.818272, 0.45", "232.055, -259.752, 1.73649, 0.45", "232.355, -261.684, 2.48511, 0.45", "232.775, -263.712, 3.2736, 0.45", "233.171, -265.556, 3.97607, 0.45", "233.985, -268.581, 5.32771, 0.45", "234.444, -269.945, 6.09096, 0.45", "235.209, -271.749, 7.3462, 0.45", "235.997, -273.428, 8.61599, 0.45", "237.245, -275.793, 10.5119, 0.45", "239.154, -279.191, 13.2701, 0.45", "241.154, -282.594, 15.9321, 0.45", "242.866, -285.621, 18.1672, 0.45", "243.894, -287.483, 19.4049, 0.45", "245.468, -290.509, 21.1007, 0.45", "246.466, -292.544, 22.0386, 0.45", "247.562, -295.25, 22.9423, 0.45", "248.556, -297.904, 23.6261, 0.45", "249.569, -300.693, 24.2643, 0.45", "250.471, -303.269, 24.9291, 0.45", "251.274, -306.034, 25.5972, 0.45", "252.241, -309.603, 26.4954, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "231.847, -257.524, 0.818272, 0.45", "233.693, -256.034, -1.24539, 0.45", "234.602, -255.3, -2.26198, 0.45", "235.629, -254.472, -3.40921, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "252.241, -309.603, 26.4954, 0.45", "252.118, -312.504, 30.7276, 0.45", "251.835, -316.209, 35.5373, 0.45", "251.632, -318.477, 38.2283, 0.45", "251.508, -319.934, 39.8234, 0.45", "251.478, -320.274, 40.1667, 0.45", "251.176, -323.939, 43.7499, 0.45", "251.082, -324.948, 44.4685, 0.45", "250.989, -325.964, 45.0589, 0.45", "250.865, -326.998, 45.7079, 0.45", "250.618, -328.435, 46.5555, 0.45", "250.134, -330.989, 47.8804, 0.45", "249.695, -333.304, 48.9971, 0.45", "249.224, -336.05, 50.5096, 0.45", "248.979, -337.537, 51.4901, 0.45", "248.679, -339.271, 52.7122, 0.45", "248.235, -341.71, 54.4976, 0.45", "248.066, -343.748, 56.7039, 0.45", "248.073, -345.393, 59.0786, 0.45", "248.172, -346.66, 61.1942, 0.45", "248.339, -347.737, 63.2865, 0.45", "248.509, -348.834, 65.61, 0.45", "248.994, -353.399, 74.9489, 0.45", "249.065, -354.641, 77.1609, 0.45", "249.087, -355.566, 78.5247, 0.45", "249.048, -358.759, 82.4357, 0.45", "249.01, -360.534, 84.2783, 0.45", "248.86, -363.008, 86.0748, 0.45", "248.577, -365.074, 86.9199, 0.45", "248.289, -367.518, 87.7564, 0.45", "248.018, -369.883, 88.3299, 0.45", "247.795, -371.803, 88.4764, 0.45", "247.734, -372.77, 88.5334, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "252.241, -309.603, 26.4954, 0.45", "252.574, -310.525, 27.0276, 0.45", "253.211, -312.428, 28.0603, 0.45", "253.811, -314.591, 29.2496, 0.45", "253.978, -315.389, 29.7781, 0.45", "254.176, -316.551, 30.6907, 0.45", "254.355, -317.704, 31.7189, 0.45", "254.45, -318.423, 32.5087, 0.45", "254.577, -319.354, 33.7087, 0.45", "254.928, -321.438, 36.9212, 0.45", "255.179, -322.762, 39.0942, 0.45", "255.366, -323.539, 40.3848, 0.45", "255.74, -324.74, 42.4331, 0.45", "255.862, -325.043, 42.9297, 0.45", "256.289, -325.727, 44.045, 0.45", "256.855, -326.478, 45.0628, 0.45", "257.723, -327.577, 46.3703, 0.45", "258.075, -328.026, 46.8268, 0.45", "259.103, -329.445, 48.0455, 0.45", "260.829, -331.757, 49.9228, 0.45", "261.828, -333.03, 50.9641, 0.45", "263.277, -334.812, 52.4226, 0.45", "264.227, -336.008, 53.4105, 0.45", "266.15, -338.399, 55.4019, 0.45", "266.746, -339.133, 56.0063, 0.45", "268.058, -340.811, 57.3361, 0.45", "268.554, -341.428, 57.9029, 0.45", "269.826, -342.986, 59.4084, 0.45", "271.012, -344.458, 60.9451, 0.45", "271.578, -345.091, 61.7945, 0.45", "272.269, -345.796, 62.949, 0.45", "273.537, -347.196, 65.2011, 0.45", "274.112, -347.885, 66.2963, 0.45", "274.705, -348.63, 67.444, 0.45", "277.071, -351.775, 72.0277, 0.45", "278.711, -354.043, 75.0773, 0.45", "280.069, -355.98, 77.4945, 0.45", "280.466, -356.593, 78.1589, 0.45", "280.886, -357.241, 78.8868, 0.45", "281.426, -358.036, 79.8158, 0.45", "282.04, -358.846, 80.8458, 0.45", "282.689, -359.55, 81.9821, 0.45", "282.959, -359.794, 82.466, 0.45", "285.479, -361.909, 87.087, 0.45", "286.653, -362.897, 89.2847, 0.45", "288.6, -364.521, 92.7152, 0.45", "288.92, -364.786, 93.2844, 0.45", "289.246, -365.058, 93.8226, 0.45", "289.818, -365.566, 94.7, 0.45", "291.137, -366.88, 96.5118, 0.45", "292.401, -368.215, 98.2509, 0.45", "295.551, -371.711, 102.659, 0.45", "296.881, -373.197, 104.58, 0.45", "297.526, -373.9, 105.506, 0.45", "298.294, -374.548, 106.735, 0.45", "299.421, -375.186, 108.639, 0.45", "300.848, -375.71, 111.223, 0.45", "301.421, -375.858, 112.3, 0.45", "301.895, -375.959, 113.309, 0.45", "305.802, -376.869, 122.183, 0.45", "306.838, -377.163, 124.597, 0.45", "307.949, -377.588, 127.211, 0.45", "308.583, -377.829, 128.779, 0.45", "310.03, -378.439, 132.459, 0.45", "310.692, -378.809, 134.228, 0.45", "311.308, -379.337, 135.892, 0.45", "312.422, -380.289, 138.961, 0.45", "316.736, -383.352, 150.075, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_NBC_2db880c523_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_23
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_24
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_69, id: dend_69, parent: dend_47
create dend_69
public dend_69
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_64, id: dend_64, parent: dend_48
create dend_64
public dend_64
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_29
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_29
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_49
create dend_63
public dend_63
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_62, id: dend_62, parent: dend_54
create dend_62
public dend_62
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.45000027720458424)
    connect dend_12(0), soma_0(0.45000027720458424)
    connect dend_11(0), soma_0(0.45000027720458424)
    connect dend_0(0), soma_0(0.45000027720458424)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_69(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_64(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_29(1.0)
    connect dend_32(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_62(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.02864, -8.95645, 0.0, 3.19243 ) }
    soma_0 { pt3dadd( 0.862269, -8.03576, 0.0, 5.44292 ) }
    soma_0 { pt3dadd( 0.695902, -7.11508, 0.0, 7.15224 ) }
    soma_0 { pt3dadd( 0.529535, -6.1944, 0.0, 9.22848 ) }
    soma_0 { pt3dadd( 0.363167, -5.27371, 0.0, 10.1568 ) }
    soma_0 { pt3dadd( 0.1968, -4.35303, 0.0, 10.228 ) }
    soma_0 { pt3dadd( 0.0304325, -3.43235, 0.0, 10.4278 ) }
    soma_0 { pt3dadd( -0.135935, -2.51166, 0.0, 10.5372 ) }
    soma_0 { pt3dadd( -0.302302, -1.59098, 0.0, 10.6261 ) }
    soma_0 { pt3dadd( -0.468669, -0.670298, 0.0, 10.9078 ) }
    soma_0 { pt3dadd( -0.635037, 0.250385, 0.0, 11.3454 ) }
    soma_0 { pt3dadd( -0.801404, 1.17107, 0.0, 11.7831 ) }
    soma_0 { pt3dadd( -0.967771, 2.09175, 0.0, 12.1088 ) }
    soma_0 { pt3dadd( -1.13414, 3.01243, 0.0, 11.7546 ) }
    soma_0 { pt3dadd( -1.30051, 3.93312, 0.0, 11.2789 ) }
    soma_0 { pt3dadd( -1.46687, 4.8538, 0.0, 10.5376 ) }
    soma_0 { pt3dadd( -1.63324, 5.77448, 0.0, 9.41766 ) }
    soma_0 { pt3dadd( -1.79961, 6.69517, 0.0, 7.67825 ) }
    soma_0 { pt3dadd( -1.96598, 7.61585, 0.0, 5.72147 ) }
    soma_0 { pt3dadd( -2.13234, 8.53653, 0.0, 3.87406 ) }
    soma_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.1959 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.55142, -10.2197, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.55142, -10.2197, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.358, -13.2599, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.19199, -15.8693, -8.14, 3.62 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.23859, 4.28084, -3.81, 1.24 ) }
    dend_12 { pt3dadd( 7.26637, 4.51523, -3.31139, 1.24 ) }
    dend_12 { pt3dadd( 12.7165, 5.0085, -1.84297, 1.24 ) }
    dend_12 { pt3dadd( 17.8604, 5.47406, -0.457047, 1.24 ) }
    dend_12 { pt3dadd( 22.9912, 5.93842, 0.925343, 1.24 ) }
    dend_12 { pt3dadd( 33.5353, 6.89272, 3.76624, 1.24 ) }
    dend_12 { pt3dadd( 41.6586, 7.62793, 5.95493, 1.24 ) }
    dend_12 { pt3dadd( 45.0638, 7.81766, 6.99039, 1.24 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.49141, 5.03684, -1.31, 0.68 ) }
    dend_11 { pt3dadd( -8.71305, 4.99162, -1.2625, 0.68 ) }
    dend_11 { pt3dadd( -10.8843, 5.03022, -1.14837, 0.68 ) }
    dend_11 { pt3dadd( -14.3704, 5.43185, -1.11901, 0.68 ) }
    dend_11 { pt3dadd( -16.8465, 5.96516, -1.1669, 0.68 ) }
    dend_11 { pt3dadd( -18.3652, 6.44931, -1.22268, 0.68 ) }
    dend_11 { pt3dadd( -20.9401, 7.39274, -1.30165, 0.68 ) }
    dend_11 { pt3dadd( -23.5833, 8.54261, -1.45337, 0.68 ) }
    dend_11 { pt3dadd( -26.9679, 10.3185, -1.7191, 0.68 ) }
    dend_11 { pt3dadd( -29.3111, 11.7934, -1.99533, 0.68 ) }
    dend_11 { pt3dadd( -32.6796, 14.1002, -2.60525, 0.68 ) }
    dend_11 { pt3dadd( -35.7268, 16.3022, -3.40451, 0.68 ) }
    dend_11 { pt3dadd( -37.7599, 17.8669, -4.127, 0.68 ) }
    dend_11 { pt3dadd( -39.6692, 19.469, -4.96958, 0.68 ) }
    dend_11 { pt3dadd( -41.0206, 20.6593, -5.62568, 0.68 ) }
    dend_11 { pt3dadd( -43.5831, 22.8588, -6.85494, 0.68 ) }
    dend_11 { pt3dadd( -45.4773, 24.4676, -7.84471, 0.68 ) }
    dend_11 { pt3dadd( -46.3496, 25.2269, -8.29467, 0.68 ) }
    dend_11 { pt3dadd( -49.4632, 27.8506, -9.90875, 0.68 ) }
    dend_11 { pt3dadd( -51.9414, 29.8906, -11.2375, 0.68 ) }
    dend_11 { pt3dadd( -55.4505, 32.6881, -12.9891, 0.68 ) }
    dend_11 { pt3dadd( -57.8194, 34.574, -14.0102, 0.57 ) }
    dend_11 { pt3dadd( -59.8371, 36.1102, -14.7898, 0.57 ) }
    dend_11 { pt3dadd( -62.267, 37.8548, -15.7541, 0.57 ) }
    dend_11 { pt3dadd( -62.8251, 38.183, -16.0255, 0.57 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.06859, -5.12716, -2.56, 1.47 ) }
    dend_0 { pt3dadd( 5.93856, -5.7191, -2.44211, 1.47 ) }
    dend_0 { pt3dadd( 8.20296, -7.25981, -2.13526, 1.47 ) }
    dend_0 { pt3dadd( 10.9478, -9.12743, -1.76331, 1.47 ) }
    dend_0 { pt3dadd( 12.6834, -10.3084, -1.52813, 2.6 ) }
    dend_0 { pt3dadd( 12.9492, -10.4892, -1.49212, 2.26 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 64/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.31666 ) }
    axon_0 { pt3dadd( -4.96601, 24.2182, 0.0, 2.31666 ) }
    axon_0 { pt3dadd( -7.63332, 38.9791, 0.0, 2.31666 ) }
    // Section: dend_45, id: dend_45, parent: dend_23 (entry count 67/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.19199, -15.8693, -8.14, 0.12 ) }
    dend_45 { pt3dadd( -0.161258, -15.9642, -8.22599, 0.12 ) }
    dend_45 { pt3dadd( 1.25515, -16.1799, -8.34457, 0.12 ) }
    dend_45 { pt3dadd( 1.9942, -16.2953, -8.40633, 0.45 ) }
    dend_45 { pt3dadd( 2.67718, -16.3914, -8.38001, 0.45 ) }
    dend_45 { pt3dadd( 5.27287, -16.7157, -8.29509, 0.45 ) }
    dend_45 { pt3dadd( 5.64015, -16.765, -8.28477, 1.36 ) }
    dend_45 { pt3dadd( 6.92703, -16.9538, -8.24622, 1.02 ) }
    dend_45 { pt3dadd( 8.69198, -17.2143, -8.1681, 0.45 ) }
    dend_45 { pt3dadd( 11.4203, -17.6112, -7.72345, 0.45 ) }
    dend_45 { pt3dadd( 13.8436, -17.9184, -6.9293, 0.45 ) }
    dend_45 { pt3dadd( 14.55, -17.978, -6.65657, 1.7 ) }
    dend_45 { pt3dadd( 15.8959, -18.0641, -5.67619, 0.68 ) }
    dend_45 { pt3dadd( 17.7335, -18.1833, -3.94508, 0.57 ) }
    dend_45 { pt3dadd( 20.5754, -18.3781, -0.954143, 0.57 ) }
    dend_45 { pt3dadd( 22.6365, -18.515, 1.45134, 0.57 ) }
    dend_45 { pt3dadd( 24.2541, -18.6082, 3.60995, 0.57 ) }
    dend_45 { pt3dadd( 30.1324, -18.8464, 12.231, 0.45 ) }
    dend_45 { pt3dadd( 30.6052, -18.865, 13.0354, 0.45 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 86/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.19199, -15.8693, -8.14, 2.26 ) }
    dend_24 { pt3dadd( -1.4203, -18.6838, -8.07529, 2.26 ) }
    dend_24 { pt3dadd( -1.64512, -21.4554, -8.01156, 2.26 ) }
    dend_24 { pt3dadd( -1.97289, -25.4961, -7.91865, 2.94 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 90/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 45.0638, 7.81766, 6.99039, 0.45 ) }
    dend_22 { pt3dadd( 47.4899, 7.76249, 6.37957, 0.45 ) }
    dend_22 { pt3dadd( 48.6506, 7.74859, 6.48001, 0.45 ) }
    dend_22 { pt3dadd( 49.2565, 7.79288, 6.66684, 0.45 ) }
    dend_22 { pt3dadd( 50.0412, 7.94039, 7.01877, 0.45 ) }
    dend_22 { pt3dadd( 51.575, 8.43221, 7.93186, 0.79 ) }
    dend_22 { pt3dadd( 53.3359, 9.17576, 9.11073, 0.79 ) }
    dend_22 { pt3dadd( 55.0013, 10.0656, 10.3938, 0.79 ) }
    dend_22 { pt3dadd( 56.2132, 10.8549, 11.4073, 0.79 ) }
    dend_22 { pt3dadd( 57.1523, 11.6138, 12.2525, 0.79 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 58.4805, 13.0507, 13.6348, 0.79 ) }
    dend_22 { pt3dadd( 59.6535, 14.7068, 14.964, 0.79 ) }
    dend_22 { pt3dadd( 60.178, 15.5616, 15.5186, 0.68 ) }
    dend_22 { pt3dadd( 60.6309, 16.3436, 15.9346, 0.68 ) }
    dend_22 { pt3dadd( 61.5964, 17.9741, 16.7057, 0.68 ) }
    dend_22 { pt3dadd( 63.6247, 21.3688, 18.3254, 0.68 ) }
    dend_22 { pt3dadd( 64.2755, 22.4865, 18.8418, 0.68 ) }
    dend_22 { pt3dadd( 65.3695, 24.3174, 19.6807, 0.68 ) }
    dend_22 { pt3dadd( 65.9966, 25.2543, 20.1172, 0.68 ) }
    dend_22 { pt3dadd( 66.5985, 26.0017, 20.4998, 0.57 ) }
    dend_22 { pt3dadd( 68.2151, 27.5655, 21.3772, 0.57 ) }
    dend_22 { pt3dadd( 69.0632, 28.0959, 21.873, 0.57 ) }
    dend_22 { pt3dadd( 70.4357, 28.4042, 23.5335, 0.57 ) }
    dend_22 { pt3dadd( 70.8703, 28.2032, 24.7107, 0.57 ) }
    dend_22 { pt3dadd( 71.4, 27.6965, 26.7243, 0.57 ) }
    dend_22 { pt3dadd( 71.5589, 27.4796, 27.458, 0.57 ) }
    dend_22 { pt3dadd( 72.1219, 26.3037, 30.7671, 0.57 ) }
    dend_22 { pt3dadd( 72.6667, 24.7387, 34.8999, 0.57 ) }
    dend_22 { pt3dadd( 72.9525, 23.424, 38.2543, 0.57 ) }
    dend_22 { pt3dadd( 73.0526, 22.7222, 40.1353, 0.57 ) }
    dend_22 { pt3dadd( 73.0732, 22.5543, 40.6671, 0.57 ) }
    dend_22 { pt3dadd( 73.1092, 22.2747, 41.6127, 0.57 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 22/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 45.0638, 7.81766, 6.99039, 0.79 ) }
    dend_13 { pt3dadd( 46.2604, 10.3271, 5.29093, 0.79 ) }
    dend_13 { pt3dadd( 47.0038, 12.2199, 4.13056, 0.79 ) }
    dend_13 { pt3dadd( 47.3874, 13.2526, 3.54974, 0.79 ) }
    dend_13 { pt3dadd( 48.5503, 15.6661, 2.28206, 0.79 ) }
    dend_13 { pt3dadd( 49.8296, 17.8258, 1.21828, 0.79 ) }
    dend_13 { pt3dadd( 50.9607, 19.5813, 0.411373, 0.79 ) }
    dend_13 { pt3dadd( 52.7157, 22.0785, -0.585805, 0.79 ) }
    dend_13 { pt3dadd( 54.0355, 23.8596, -1.29813, 0.79 ) }
    dend_13 { pt3dadd( 56.6722, 27.2077, -2.83372, 0.79 ) }
    dend_13 { pt3dadd( 58.4139, 29.1352, -4.06872, 0.79 ) }
    dend_13 { pt3dadd( 60.3334, 30.6375, -5.81397, 1.02 ) }
    dend_13 { pt3dadd( 61.5744, 31.429, -7.0258, 1.02 ) }
    dend_13 { pt3dadd( 62.7574, 32.0029, -8.34964, 1.02 ) }
    dend_13 { pt3dadd( 64.3265, 32.5752, -10.5886, 1.02 ) }
    dend_13 { pt3dadd( 66.5716, 33.058, -15.1089, 1.02 ) }
    dend_13 { pt3dadd( 68.9538, 32.9025, -20.7916, 1.02 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 12.9492, -10.4892, -1.49212, 0.68 ) }
    dend_8 { pt3dadd( 13.8655, -12.1169, -1.73577, 0.68 ) }
    dend_8 { pt3dadd( 14.1965, -12.6215, -1.75479, 0.68 ) }
    dend_8 { pt3dadd( 16.0362, -15.2733, -1.72439, 0.68 ) }
    dend_8 { pt3dadd( 18.9266, -19.3718, -1.58634, 0.68 ) }
    dend_8 { pt3dadd( 20.7897, -22.042, -1.60416, 0.68 ) }
    dend_8 { pt3dadd( 21.9419, -23.6956, -1.66581, 0.68 ) }
    dend_8 { pt3dadd( 25.4906, -28.4753, -1.44568, 0.68 ) }
    dend_8 { pt3dadd( 27.1344, -30.5776, -1.19771, 0.68 ) }
    dend_8 { pt3dadd( 27.6476, -31.1922, -1.08238, 0.68 ) }
    dend_8 { pt3dadd( 30.4418, -34.3609, -0.291722, 0.68 ) }
    dend_8 { pt3dadd( 32.4355, -36.3759, 0.265302, 0.68 ) }
    dend_8 { pt3dadd( 37.5971, -41.3871, 1.65155, 0.68 ) }
    dend_8 { pt3dadd( 40.0413, -43.7055, 2.25856, 0.68 ) }
    dend_8 { pt3dadd( 41.501, -45.0214, 2.61432, 0.68 ) }
    dend_8 { pt3dadd( 43.5204, -46.7839, 3.09444, 0.68 ) }
    dend_8 { pt3dadd( 48.1971, -50.902, 4.12486, 0.68 ) }
    dend_8 { pt3dadd( 50.0319, -52.6534, 4.34566, 0.68 ) }
    dend_8 { pt3dadd( 50.856, -53.5274, 4.3508, 0.68 ) }
    dend_8 { pt3dadd( 53.0031, -55.9252, 4.30338, 0.68 ) }
    dend_8 { pt3dadd( 54.3083, -57.4809, 4.2473, 0.68 ) }
    dend_8 { pt3dadd( 56.908, -60.9154, 4.01868, 0.68 ) }
    dend_8 { pt3dadd( 58.5456, -63.5567, 3.85209, 0.68 ) }
    dend_8 { pt3dadd( 59.6655, -65.475, 3.70705, 0.68 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 12.9492, -10.4892, -1.49212, 1.24 ) }
    dend_1 { pt3dadd( 17.5681, -11.7606, -1.39552, 1.24 ) }
    dend_1 { pt3dadd( 19.9308, -12.411, -1.34611, 1.24 ) }
    dend_1 { pt3dadd( 23.7162, -13.453, -1.26695, 1.24 ) }
    dend_1 { pt3dadd( 27.5472, -14.5076, -1.18683, 1.24 ) }
    dend_1 { pt3dadd( 37.7046, -17.3037, -0.974413, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.63332, 38.9791, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -10.3006, 53.74, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -12.9679, 68.501, 0.0, 0.57 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 72/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 30.6052, -18.865, 13.0354, 0.45 ) }
    dend_47 { pt3dadd( 32.4088, -21.1586, 17.7042, 0.45 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 74/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 30.6052, -18.865, 13.0354, 0.45 ) }
    dend_46 { pt3dadd( 34.7187, -17.1361, 12.5963, 0.45 ) }
    dend_46 { pt3dadd( 36.6779, -16.4306, 12.6127, 0.45 ) }
    dend_46 { pt3dadd( 39.3794, -15.5514, 12.7858, 0.45 ) }
    dend_46 { pt3dadd( 42.3512, -14.8832, 13.0757, 0.45 ) }
    dend_46 { pt3dadd( 43.9248, -14.8104, 13.277, 0.45 ) }
    dend_46 { pt3dadd( 48.2121, -15.1254, 13.8678, 0.45 ) }
    dend_46 { pt3dadd( 48.5674, -15.205, 13.9517, 0.45 ) }
    dend_46 { pt3dadd( 48.723, -15.2638, 13.9932, 2.6 ) }
    dend_46 { pt3dadd( 51.7276, -16.8333, 14.8164, 0.57 ) }
    dend_46 { pt3dadd( 55.4127, -19.2222, 15.8161, 0.57 ) }
    dend_46 { pt3dadd( 56.4859, -19.9442, 16.0643, 0.57 ) }
    dend_46 { pt3dadd( 56.5799, -20.0038, 16.0802, 2.38 ) }
    dend_46 { pt3dadd( 59.735, -21.7038, 16.5842, 0.34 ) }
    dend_46 { pt3dadd( 60.9377, -22.1825, 16.759, 0.34 ) }
    dend_46 { pt3dadd( 63.6259, -22.7616, 17.0893, 0.45 ) }
    dend_46 { pt3dadd( 66.1531, -22.7841, 17.5422, 0.45 ) }
    dend_46 { pt3dadd( 68.8017, -22.506, 18.3144, 0.45 ) }
    dend_46 { pt3dadd( 71.2159, -22.0525, 19.3366, 0.45 ) }
    dend_46 { pt3dadd( 73.8107, -21.3725, 20.8167, 0.45 ) }
    dend_46 { pt3dadd( 76.1146, -20.6888, 22.3359, 0.45 ) }
    dend_46 { pt3dadd( 81.1437, -19.0775, 25.9628, 0.45 ) }
    dend_46 { pt3dadd( 84.9713, -17.9282, 29.0201, 0.45 ) }
    dend_46 { pt3dadd( 88.6989, -16.9692, 32.1819, 0.45 ) }
    dend_46 { pt3dadd( 92.2724, -16.2684, 35.2267, 0.45 ) }
    dend_46 { pt3dadd( 93.3397, -16.1371, 36.1161, 2.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( 95.2411, -16.0084, 37.5607, 0.45 ) }
    dend_46 { pt3dadd( 99.1099, -15.8385, 39.9535, 0.45 ) }
    dend_46 { pt3dadd( 100.778, -15.7678, 40.8199, 0.45 ) }
    dend_46 { pt3dadd( 103.279, -15.6009, 41.9465, 0.45 ) }
    dend_46 { pt3dadd( 108.456, -15.1085, 44.2862, 0.45 ) }
    dend_46 { pt3dadd( 112.145, -14.6724, 45.9631, 0.45 ) }
    dend_46 { pt3dadd( 115.975, -14.2903, 47.686, 0.45 ) }
    dend_46 { pt3dadd( 118.357, -14.1727, 48.7114, 0.45 ) }
    dend_46 { pt3dadd( 120.672, -14.1681, 49.6664, 0.45 ) }
    dend_46 { pt3dadd( 125.14, -14.4027, 51.3871, 0.45 ) }
    dend_46 { pt3dadd( 128.794, -14.8017, 52.5952, 0.45 ) }
    dend_46 { pt3dadd( 133.461, -15.5237, 54.0714, 0.45 ) }
    dend_46 { pt3dadd( 138.162, -16.5031, 55.5024, 0.45 ) }
    dend_46 { pt3dadd( 140.949, -17.1838, 56.3142, 0.45 ) }
    dend_46 { pt3dadd( 142.363, -17.6211, 56.7027, 0.45 ) }
    dend_46 { pt3dadd( 143.126, -17.9034, 56.8526, 0.45 ) }
    // Section: dend_44, id: dend_44, parent: dend_24 (entry count 16/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.97289, -25.4961, -7.91865, 0.12 ) }
    dend_44 { pt3dadd( -3.01929, -24.7015, -6.90044, 0.12 ) }
    dend_44 { pt3dadd( -3.18323, -24.6001, -6.64947, 0.12 ) }
    dend_44 { pt3dadd( -3.61699, -24.3874, -5.87533, 0.45 ) }
    dend_44 { pt3dadd( -3.98105, -24.5302, -4.11733, 0.79 ) }
    dend_44 { pt3dadd( -4.16123, -25.031, -1.41743, 0.45 ) }
    dend_44 { pt3dadd( -4.16805, -25.4703, 0.288902, 0.45 ) }
    dend_44 { pt3dadd( -3.93379, -26.6118, 3.79695, 0.45 ) }
    dend_44 { pt3dadd( -3.86426, -26.8566, 4.34963, 0.45 ) }
    dend_44 { pt3dadd( -2.70122, -29.788, 10.1267, 0.45 ) }
    dend_44 { pt3dadd( -2.0142, -31.3278, 12.8484, 0.45 ) }
    dend_44 { pt3dadd( -1.45015, -32.5642, 14.8954, 0.45 ) }
    dend_44 { pt3dadd( -1.30399, -32.8666, 15.4145, 0.45 ) }
    dend_44 { pt3dadd( -0.554217, -34.4985, 18.2746, 0.45 ) }
    dend_44 { pt3dadd( 0.733108, -37.6614, 23.9077, 0.45 ) }
    dend_44 { pt3dadd( 0.95074, -38.5301, 25.4127, 0.45 ) }
    dend_44 { pt3dadd( 1.04287, -39.1566, 26.4738, 0.45 ) }
    dend_44 { pt3dadd( 1.15615, -40.3669, 28.5702, 0.45 ) }
    dend_44 { pt3dadd( 1.21659, -40.7914, 29.3315, 0.45 ) }
    dend_44 { pt3dadd( 1.60531, -43.3724, 33.9967, 0.45 ) }
    dend_44 { pt3dadd( 1.87932, -44.7097, 36.0029, 0.45 ) }
    dend_44 { pt3dadd( 2.33622, -46.3408, 38.3221, 0.45 ) }
    dend_44 { pt3dadd( 2.56246, -46.8923, 39.1268, 0.45 ) }
    dend_44 { pt3dadd( 3.73653, -49.5595, 42.7942, 0.45 ) }
    dend_44 { pt3dadd( 3.90746, -49.9069, 43.2619, 0.45 ) }
    dend_44 { pt3dadd( 5.10573, -51.9263, 46.1463, 0.45 ) }
    dend_44 { pt3dadd( 5.40544, -52.4034, 46.819, 0.45 ) }
    dend_44 { pt3dadd( 6.74617, -54.7263, 49.8798, 2.38 ) }
    dend_44 { pt3dadd( 7.79874, -56.6418, 52.4173, 0.68 ) }
    dend_44 { pt3dadd( 8.22596, -57.4288, 53.4322, 0.68 ) }
    dend_44 { pt3dadd( 10.2063, -60.7437, 58.1732, 0.68 ) }
    dend_44 { pt3dadd( 11.0777, -62.1025, 60.2892, 0.45 ) }
    dend_44 { pt3dadd( 11.4583, -62.7424, 61.2765, 0.45 ) }
    dend_44 { pt3dadd( 12.3222, -64.2536, 63.8953, 0.45 ) }
    dend_44 { pt3dadd( 12.7628, -64.9953, 65.3532, 0.45 ) }
    dend_44 { pt3dadd( 13.9761, -67.46, 70.3708, 0.45 ) }
    dend_44 { pt3dadd( 14.5546, -68.777, 73.3008, 0.45 ) }
    dend_44 { pt3dadd( 15.0515, -69.9594, 76.2279, 0.45 ) }
    dend_44 { pt3dadd( 16.2644, -73.2639, 84.519, 0.91 ) }
    dend_44 { pt3dadd( 16.2915, -73.3452, 84.7118, 3.05 ) }
    dend_44 { pt3dadd( 16.62, -74.3802, 87.0326, 0.45 ) }
    dend_44 { pt3dadd( 17.619, -77.1381, 92.5053, 0.45 ) }
    dend_44 { pt3dadd( 18.029, -78.0737, 94.293, 0.45 ) }
    dend_44 { pt3dadd( 18.7194, -79.4392, 96.8386, 2.15 ) }
    dend_44 { pt3dadd( 21.0864, -84.5241, 104.815, 0.57 ) }
    dend_44 { pt3dadd( 21.4054, -85.1589, 105.825, 0.57 ) }
    dend_44 { pt3dadd( 23.1852, -88.4985, 111.165, 0.57 ) }
    dend_44 { pt3dadd( 24.2712, -90.7223, 114.5, 0.57 ) }
    dend_44 { pt3dadd( 24.4011, -90.9916, 114.918, 1.7 ) }
    dend_44 { pt3dadd( 24.9086, -92.0984, 116.68, 0.45 ) }
    dend_44 { pt3dadd( 27.0042, -97.3847, 124.67, 0.45 ) }
    dend_44 { pt3dadd( 27.8261, -99.6237, 128.08, 0.45 ) }
    dend_44 { pt3dadd( 28.3214, -101.205, 130.41, 0.45 ) }
    dend_44 { pt3dadd( 29.2215, -104.295, 134.83, 0.45 ) }
    dend_44 { pt3dadd( 29.7627, -106.119, 137.431, 0.45 ) }
    dend_44 { pt3dadd( 30.1485, -107.462, 139.357, 0.45 ) }
    dend_44 { pt3dadd( 30.7803, -110.743, 143.222, 0.45 ) }
    dend_44 { pt3dadd( 30.8856, -111.244, 143.826, 0.45 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 74/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -1.97289, -25.4961, -7.91865, 1.7 ) }
    dend_25 { pt3dadd( -0.111369, -29.2708, -6.20707, 1.7 ) }
    dend_25 { pt3dadd( 0.435027, -30.5255, -5.76289, 1.58 ) }
    dend_25 { pt3dadd( 1.96121, -34.3798, -4.75728, 1.36 ) }
    dend_25 { pt3dadd( 3.22036, -37.5596, -3.92762, 1.24 ) }
    dend_25 { pt3dadd( 5.03412, -42.1402, -2.73253, 1.24 ) }
    dend_25 { pt3dadd( 6.11251, -44.8636, -2.02198, 2.83 ) }
    dend_25 { pt3dadd( 7.52294, -48.702, -1.3469, 3.62 ) }
    dend_25 { pt3dadd( 8.54914, -51.6224, -0.971283, 2.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 83/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 68.9538, 32.9025, -20.7916, 0.57 ) }
    dend_17 { pt3dadd( 68.9776, 30.8536, -20.982, 0.57 ) }
    dend_17 { pt3dadd( 69.0088, 28.1585, -21.2324, 0.57 ) }
    dend_17 { pt3dadd( 69.0266, 26.6231, -21.3751, 0.57 ) }
    dend_17 { pt3dadd( 69.0512, 24.5085, -21.5715, 0.57 ) }
    dend_17 { pt3dadd( 69.0831, 21.7524, -21.8276, 0.57 ) }
    dend_17 { pt3dadd( 69.1378, 17.0383, -22.2656, 0.57 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 68.9538, 32.9025, -20.7916, 1.02 ) }
    dend_14 { pt3dadd( 69.598, 33.8965, -22.2182, 1.02 ) }
    dend_14 { pt3dadd( 71.0425, 36.1255, -25.4172, 1.02 ) }
    dend_14 { pt3dadd( 71.8589, 37.3852, -27.2253, 0.79 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 94/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 59.6655, -65.475, 3.70705, 0.45 ) }
    dend_10 { pt3dadd( 62.8839, -70.5844, 2.89375, 0.45 ) }
    dend_10 { pt3dadd( 63.547, -71.642, 2.75326, 0.45 ) }
    dend_10 { pt3dadd( 64.5385, -73.2594, 2.61932, 0.45 ) }
    dend_10 { pt3dadd( 66.957, -77.1569, 2.39851, 0.45 ) }
    dend_10 { pt3dadd( 67.9199, -78.6682, 2.2405, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( 68.8172, -79.9976, 2.06939, 0.45 ) }
    dend_10 { pt3dadd( 70.5168, -82.2872, 1.77577, 0.45 ) }
    dend_10 { pt3dadd( 73.6232, -86.1812, 1.1993, 0.45 ) }
    dend_10 { pt3dadd( 75.3832, -88.0543, 0.905077, 0.45 ) }
    dend_10 { pt3dadd( 78.7962, -91.0497, 0.220951, 0.45 ) }
    dend_10 { pt3dadd( 81.3438, -92.8249, -0.199817, 0.45 ) }
    dend_10 { pt3dadd( 82.4998, -93.5012, -0.210215, 0.45 ) }
    dend_10 { pt3dadd( 84.6112, -94.64, -0.0220723, 0.45 ) }
    dend_10 { pt3dadd( 88.9976, -97.0201, 0.651664, 0.45 ) }
    dend_10 { pt3dadd( 91.9085, -98.7527, 1.05219, 0.45 ) }
    dend_10 { pt3dadd( 96.3019, -101.563, 1.64384, 0.45 ) }
    dend_10 { pt3dadd( 105.587, -108.09, 2.65079, 0.45 ) }
    dend_10 { pt3dadd( 109.707, -111.29, 3.00472, 0.45 ) }
    dend_10 { pt3dadd( 112.688, -113.94, 3.16628, 0.45 ) }
    dend_10 { pt3dadd( 118.282, -119.878, 3.17446, 0.45 ) }
    dend_10 { pt3dadd( 119.344, -121.213, 3.11443, 0.45 ) }
    dend_10 { pt3dadd( 121.354, -124.447, 2.63283, 0.45 ) }
    dend_10 { pt3dadd( 122.356, -126.662, 2.12863, 0.45 ) }
    dend_10 { pt3dadd( 123.863, -130.929, 1.29087, 0.45 ) }
    dend_10 { pt3dadd( 124.835, -134.338, 0.799214, 0.45 ) }
    dend_10 { pt3dadd( 126.009, -138.934, 0.329149, 0.45 ) }
    dend_10 { pt3dadd( 127.078, -143.559, -0.142835, 0.45 ) }
    dend_10 { pt3dadd( 128.081, -148.435, -0.65844, 0.45 ) }
    dend_10 { pt3dadd( 128.497, -150.534, -0.877466, 0.45 ) }
    dend_10 { pt3dadd( 129.17, -153.903, -1.1848, 0.45 ) }
    dend_10 { pt3dadd( 130.564, -160.17, -1.6446, 0.45 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 59.6655, -65.475, 3.70705, 0.57 ) }
    dend_9 { pt3dadd( 59.5501, -66.0783, 4.01587, 0.57 ) }
    dend_9 { pt3dadd( 58.9566, -69.0103, 6.56297, 0.57 ) }
    dend_9 { pt3dadd( 58.1377, -72.5943, 9.96178, 0.57 ) }
    dend_9 { pt3dadd( 57.5591, -74.5692, 12.1892, 0.57 ) }
    dend_9 { pt3dadd( 57.4397, -74.9156, 12.5911, 0.57 ) }
    dend_9 { pt3dadd( 56.7178, -76.6504, 14.7225, 0.57 ) }
    dend_9 { pt3dadd( 55.5609, -78.8365, 17.7077, 0.57 ) }
    dend_9 { pt3dadd( 54.94, -79.7377, 19.0968, 0.57 ) }
    dend_9 { pt3dadd( 53.7091, -81.3033, 22.1007, 0.45 ) }
    dend_9 { pt3dadd( 53.0669, -82.0756, 23.5471, 0.45 ) }
    dend_9 { pt3dadd( 52.1748, -83.1449, 25.4663, 0.45 ) }
    dend_9 { pt3dadd( 51.3144, -84.2455, 27.3374, 0.45 ) }
    dend_9 { pt3dadd( 50.318, -85.4956, 29.4382, 0.45 ) }
    dend_9 { pt3dadd( 48.4091, -88.1963, 34.0286, 0.45 ) }
    dend_9 { pt3dadd( 48.032, -88.8466, 35.0798, 0.45 ) }
    dend_9 { pt3dadd( 47.5445, -89.8373, 36.6603, 0.45 ) }
    dend_9 { pt3dadd( 46.4738, -92.4185, 40.5354, 0.45 ) }
    dend_9 { pt3dadd( 46.1097, -93.3973, 41.8768, 0.45 ) }
    dend_9 { pt3dadd( 44.7409, -97.1487, 46.2704, 0.45 ) }
    dend_9 { pt3dadd( 44.3168, -98.4098, 47.5819, 0.45 ) }
    dend_9 { pt3dadd( 44.2334, -98.6986, 47.8641, 0.45 ) }
    dend_9 { pt3dadd( 44.0739, -99.4568, 48.6076, 0.45 ) }
    dend_9 { pt3dadd( 43.7001, -101.535, 50.6542, 0.45 ) }
    dend_9 { pt3dadd( 43.4506, -103.242, 52.3744, 0.45 ) }
    dend_9 { pt3dadd( 43.0449, -106.652, 56.0283, 0.45 ) }
    dend_9 { pt3dadd( 42.837, -108.957, 58.8909, 0.45 ) }
    dend_9 { pt3dadd( 42.4974, -113.111, 64.4169, 0.45 ) }
    dend_9 { pt3dadd( 42.2865, -115.394, 67.6007, 0.45 ) }
    dend_9 { pt3dadd( 42.182, -116.336, 69.028, 0.45 ) }
    dend_9 { pt3dadd( 41.7347, -119.472, 73.7861, 0.45 ) }
    dend_9 { pt3dadd( 41.083, -122.313, 77.8697, 0.45 ) }
    dend_9 { pt3dadd( 40.6274, -123.811, 80.0048, 0.45 ) }
    dend_9 { pt3dadd( 40.1094, -125.237, 81.8901, 0.45 ) }
    dend_9 { pt3dadd( 39.1612, -127.957, 85.0869, 0.45 ) }
    dend_9 { pt3dadd( 38.3401, -130.326, 87.6295, 0.45 ) }
    dend_9 { pt3dadd( 37.566, -132.347, 89.6562, 0.45 ) }
    dend_9 { pt3dadd( 36.897, -133.929, 91.4983, 0.45 ) }
    dend_9 { pt3dadd( 35.2157, -137.182, 96.1659, 0.45 ) }
    dend_9 { pt3dadd( 33.9265, -138.965, 99.2393, 0.45 ) }
    dend_9 { pt3dadd( 32.5784, -140.193, 101.774, 0.45 ) }
    dend_9 { pt3dadd( 30.8286, -141.148, 104.267, 0.45 ) }
    dend_9 { pt3dadd( 26.1306, -142.706, 109.546, 0.45 ) }
    dend_9 { pt3dadd( 23.8079, -143.147, 111.757, 0.45 ) }
    dend_9 { pt3dadd( 20.7317, -143.488, 114.123, 0.45 ) }
    dend_9 { pt3dadd( 18.6453, -143.679, 115.603, 0.45 ) }
    dend_9 { pt3dadd( 14.6269, -144.171, 118.304, 0.45 ) }
    dend_9 { pt3dadd( 11.4789, -144.749, 120.316, 0.45 ) }
    dend_9 { pt3dadd( 6.63817, -145.883, 123.922, 0.45 ) }
    dend_9 { pt3dadd( 3.26217, -146.816, 127.005, 0.45 ) }
    dend_9 { pt3dadd( 1.06886, -147.519, 129.152, 0.45 ) }
    dend_9 { pt3dadd( -3.92003, -149.311, 134.216, 0.45 ) }
    dend_9 { pt3dadd( -5.65011, -149.986, 136.039, 0.45 ) }
    dend_9 { pt3dadd( -13.0865, -153.05, 143.767, 0.45 ) }
    dend_9 { pt3dadd( -15.1154, -153.926, 145.865, 0.45 ) }
    dend_9 { pt3dadd( -20.42, -156.28, 151.75, 0.45 ) }
    dend_9 { pt3dadd( -21.9268, -156.97, 153.413, 0.45 ) }
    dend_9 { pt3dadd( -24.5236, -158.283, 156.26, 0.45 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 37.7046, -17.3037, -0.974413, 0.45 ) }
    dend_5 { pt3dadd( 39.8262, -20.5285, 0.341069, 0.45 ) }
    dend_5 { pt3dadd( 40.159, -21.0427, 0.525686, 1.02 ) }
    dend_5 { pt3dadd( 43.6259, -26.2955, 2.21856, 0.79 ) }
    dend_5 { pt3dadd( 45.7446, -29.5604, 3.10456, 0.79 ) }
    dend_5 { pt3dadd( 46.9525, -31.4053, 3.51884, 0.68 ) }
    dend_5 { pt3dadd( 47.2116, -31.7896, 3.59073, 0.68 ) }
    dend_5 { pt3dadd( 48.7644, -34.0412, 3.84014, 0.68 ) }
    dend_5 { pt3dadd( 49.8135, -35.5581, 3.92791, 0.68 ) }
    dend_5 { pt3dadd( 51.9854, -38.6099, 3.91842, 0.68 ) }
    dend_5 { pt3dadd( 54.1674, -41.7551, 3.87242, 0.68 ) }
    dend_5 { pt3dadd( 56.2503, -44.8089, 3.79678, 0.68 ) }
    dend_5 { pt3dadd( 58.2229, -47.6732, 3.70459, 0.68 ) }
    dend_5 { pt3dadd( 60.6895, -51.2706, 3.56567, 0.68 ) }
    dend_5 { pt3dadd( 63.7419, -55.7472, 3.18093, 0.68 ) }
    dend_5 { pt3dadd( 65.6285, -58.5453, 2.74698, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( 66.7274, -60.192, 2.39335, 0.68 ) }
    dend_5 { pt3dadd( 68.1137, -62.2337, 1.88115, 0.68 ) }
    dend_5 { pt3dadd( 70.4405, -65.5024, 0.961379, 0.68 ) }
    dend_5 { pt3dadd( 73.4844, -69.608, -0.29833, 0.68 ) }
    dend_5 { pt3dadd( 77.0171, -74.116, -1.73414, 0.68 ) }
    dend_5 { pt3dadd( 78.9187, -76.3749, -2.42778, 0.68 ) }
    dend_5 { pt3dadd( 80.8163, -78.5356, -3.03045, 0.68 ) }
    dend_5 { pt3dadd( 82.0519, -79.8938, -3.35427, 0.68 ) }
    dend_5 { pt3dadd( 83.1887, -81.0529, -3.56673, 0.68 ) }
    dend_5 { pt3dadd( 84.7933, -82.7263, -3.63297, 0.68 ) }
    dend_5 { pt3dadd( 86.0733, -84.1518, -3.65843, 0.68 ) }
    dend_5 { pt3dadd( 87.7367, -86.4238, -3.76939, 0.68 ) }
    dend_5 { pt3dadd( 88.1825, -87.2118, -3.85811, 0.68 ) }
    dend_5 { pt3dadd( 89.2258, -89.4773, -4.15762, 0.68 ) }
    dend_5 { pt3dadd( 90.3769, -92.4616, -4.68029, 0.68 ) }
    dend_5 { pt3dadd( 91.2061, -95.0469, -5.20264, 0.68 ) }
    dend_5 { pt3dadd( 91.9437, -97.6626, -5.76351, 0.68 ) }
    dend_5 { pt3dadd( 93.0135, -101.888, -6.67355, 0.68 ) }
    dend_5 { pt3dadd( 93.5085, -103.893, -7.07488, 0.68 ) }
    dend_5 { pt3dadd( 94.2115, -106.599, -7.53975, 0.68 ) }
    dend_5 { pt3dadd( 94.8393, -108.661, -7.84599, 0.68 ) }
    dend_5 { pt3dadd( 95.7295, -111.142, -8.06864, 0.68 ) }
    dend_5 { pt3dadd( 96.4414, -112.956, -8.20173, 0.68 ) }
    dend_5 { pt3dadd( 96.7932, -113.778, -8.23649, 0.68 ) }
    dend_5 { pt3dadd( 97.8857, -116.154, -8.3037, 0.45 ) }
    dend_5 { pt3dadd( 99.4511, -119.546, -8.33663, 0.45 ) }
    dend_5 { pt3dadd( 101.259, -123.476, -8.39511, 0.45 ) }
    dend_5 { pt3dadd( 102.658, -126.641, -8.56032, 0.45 ) }
    dend_5 { pt3dadd( 103.618, -128.897, -8.73739, 0.45 ) }
    dend_5 { pt3dadd( 104.726, -131.552, -8.99203, 0.45 ) }
    dend_5 { pt3dadd( 106.588, -136.011, -9.54735, 0.45 ) }
    dend_5 { pt3dadd( 107.557, -138.388, -9.87517, 0.45 ) }
    dend_5 { pt3dadd( 109.184, -142.499, -10.4982, 0.45 ) }
    dend_5 { pt3dadd( 110.685, -146.226, -11.0998, 0.45 ) }
    dend_5 { pt3dadd( 111.595, -148.507, -11.517, 0.45 ) }
    dend_5 { pt3dadd( 112.344, -150.341, -11.9093, 0.45 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 37.7046, -17.3037, -0.974413, 0.68 ) }
    dend_2 { pt3dadd( 39.7915, -15.771, 0.617635, 0.68 ) }
    dend_2 { pt3dadd( 42.2925, -13.779, 2.2657, 0.68 ) }
    dend_2 { pt3dadd( 44.0943, -12.3498, 3.08705, 0.68 ) }
    dend_2 { pt3dadd( 45.3109, -11.4047, 3.44188, 0.68 ) }
    dend_2 { pt3dadd( 46.1043, -10.7906, 3.51392, 0.68 ) }
    dend_2 { pt3dadd( 47.9748, -9.39635, 3.24667, 0.68 ) }
    dend_2 { pt3dadd( 49.1945, -8.51893, 2.74392, 0.68 ) }
    dend_2 { pt3dadd( 51.3113, -7.08524, 1.51774, 0.57 ) }
    dend_2 { pt3dadd( 52.9812, -6.01081, 0.400619, 0.57 ) }
    dend_2 { pt3dadd( 55.3995, -4.38832, -1.32018, 0.57 ) }
    dend_2 { pt3dadd( 58.1788, -2.47163, -3.34376, 0.57 ) }
    dend_2 { pt3dadd( 59.7252, -1.36218, -4.48898, 0.57 ) }
    dend_2 { pt3dadd( 60.445, -0.792306, -5.05791, 0.57 ) }
    dend_2 { pt3dadd( 62.6746, 1.1818, -6.79809, 0.57 ) }
    dend_2 { pt3dadd( 65.6112, 3.94508, -9.02278, 0.57 ) }
    dend_2 { pt3dadd( 67.9001, 6.21141, -10.6314, 0.57 ) }
    dend_2 { pt3dadd( 68.7403, 7.11986, -11.2304, 0.57 ) }
    dend_2 { pt3dadd( 70.6181, 9.29841, -12.6816, 0.57 ) }
    dend_2 { pt3dadd( 72.3544, 11.3721, -14.0694, 0.57 ) }
    dend_2 { pt3dadd( 73.1045, 12.3204, -14.6785, 0.57 ) }
    // Section: dend_69, id: dend_69, parent: dend_47 (entry count 57/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 32.4088, -21.1586, 17.7042, 0.45 ) }
    dend_69 { pt3dadd( 31.6288, -24.3869, 18.7271, 0.45 ) }
    dend_69 { pt3dadd( 31.3772, -25.4224, 19.0114, 0.45 ) }
    dend_69 { pt3dadd( 31.0603, -26.7551, 19.4871, 0.45 ) }
    dend_69 { pt3dadd( 30.7429, -28.0977, 20.0767, 0.45 ) }
    dend_69 { pt3dadd( 30.5017, -29.0937, 20.5653, 0.45 ) }
    dend_69 { pt3dadd( 30.0604, -30.9907, 21.5389, 0.45 ) }
    dend_69 { pt3dadd( 29.9164, -31.7118, 21.9218, 0.45 ) }
    dend_69 { pt3dadd( 29.5277, -33.8798, 23.1758, 0.45 ) }
    dend_69 { pt3dadd( 29.3474, -34.972, 23.9383, 0.45 ) }
    dend_69 { pt3dadd( 29.2039, -35.8157, 24.6496, 0.45 ) }
    dend_69 { pt3dadd( 29.1067, -36.2359, 25.0448, 0.45 ) }
    dend_69 { pt3dadd( 28.9534, -36.7263, 25.5363, 0.45 ) }
    dend_69 { pt3dadd( 28.7026, -37.3221, 26.0584, 0.45 ) }
    dend_69 { pt3dadd( 27.9758, -39.0118, 27.1828, 0.45 ) }
    dend_69 { pt3dadd( 27.82, -39.39, 27.385, 0.45 ) }
    dend_69 { pt3dadd( 27.3836, -40.5974, 27.9014, 0.45 ) }
    dend_69 { pt3dadd( 27.1227, -41.3245, 28.0068, 0.45 ) }
    dend_69 { pt3dadd( 26.8121, -42.3341, 27.9063, 0.45 ) }
    dend_69 { pt3dadd( 26.4088, -44.1992, 27.363, 0.45 ) }
    dend_69 { pt3dadd( 26.2565, -45.4557, 26.8224, 0.45 ) }
    dend_69 { pt3dadd( 26.173, -46.5692, 26.2737, 0.45 ) }
    dend_69 { pt3dadd( 26.1431, -49.8321, 24.3836, 0.45 ) }
    dend_69 { pt3dadd( 26.1599, -50.4536, 23.971, 1.02 ) }
    dend_69 { pt3dadd( 26.1814, -51.0843, 23.4688, 0.57 ) }
    dend_69 { pt3dadd( 26.1285, -51.8303, 22.7105, 0.45 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 83/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 32.4088, -21.1586, 17.7042, 0.45 ) }
    dend_48 { pt3dadd( 34.2033, -21.651, 17.59, 0.45 ) }
    dend_48 { pt3dadd( 36.051, -22.158, 17.4724, 0.45 ) }
    dend_48 { pt3dadd( 38.6192, -22.8626, 17.3089, 0.45 ) }
    dend_48 { pt3dadd( 40.7924, -23.4589, 17.1705, 0.45 ) }
    dend_48 { pt3dadd( 41.9197, -23.7683, 17.0987, 0.45 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 8.54914, -51.6224, -0.971283, 0.45 ) }
    dend_29 { pt3dadd( 8.97757, -53.6981, 0.819921, 0.45 ) }
    dend_29 { pt3dadd( 9.18087, -54.6531, 1.56795, 0.79 ) }
    dend_29 { pt3dadd( 11.1595, -63.9477, 8.84784, 1.24 ) }
    dend_29 { pt3dadd( 12.0134, -67.9594, 11.9899, 1.24 ) }
    dend_29 { pt3dadd( 12.7348, -71.3481, 14.6441, 1.24 ) }
    dend_29 { pt3dadd( 13.5644, -75.2453, 17.6965, 1.24 ) }
    dend_29 { pt3dadd( 13.873, -76.6599, 18.8238, 2.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 97/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 8.54914, -51.6224, -0.971283, 0.91 ) }
    dend_26 { pt3dadd( 10.6502, -53.0571, -0.792087, 0.91 ) }
    dend_26 { pt3dadd( 11.8076, -53.8474, -0.693374, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 13.8098, -55.2146, -0.522607, 0.91 ) }
    dend_26 { pt3dadd( 15.193, -56.1592, -0.404629, 0.91 ) }
    dend_26 { pt3dadd( 17.355, -57.6355, -0.220235, 0.79 ) }
    dend_26 { pt3dadd( 17.7961, -57.9367, -0.182613, 0.79 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 4/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 69.1378, 17.0383, -22.2656, 0.57 ) }
    dend_19 { pt3dadd( 69.8075, 14.6086, -21.3545, 0.57 ) }
    dend_19 { pt3dadd( 71.1363, 9.88911, -18.7432, 0.57 ) }
    dend_19 { pt3dadd( 72.5496, 4.70687, -16.0744, 0.45 ) }
    dend_19 { pt3dadd( 74.5847, -2.81705, -12.4214, 0.45 ) }
    dend_19 { pt3dadd( 76.7766, -11.0848, -8.31402, 0.45 ) }
    dend_19 { pt3dadd( 77.3763, -13.3465, -7.19043, 0.45 ) }
    dend_19 { pt3dadd( 80.1948, -24.1509, -1.68233, 0.45 ) }
    dend_19 { pt3dadd( 82.301, -32.7079, 2.83838, 0.45 ) }
    dend_19 { pt3dadd( 83.2928, -36.698, 5.0232, 0.45 ) }
    dend_19 { pt3dadd( 84.4532, -41.1509, 7.4345, 0.45 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 69.1378, 17.0383, -22.2656, 0.57 ) }
    dend_18 { pt3dadd( 66.1747, 16.8072, -24.5089, 0.57 ) }
    dend_18 { pt3dadd( 64.1505, 16.0757, -25.1121, 0.68 ) }
    dend_18 { pt3dadd( 62.3994, 15.2012, -25.6159, 0.68 ) }
    dend_18 { pt3dadd( 60.6471, 14.3262, -26.1201, 0.68 ) }
    dend_18 { pt3dadd( 57.8707, 12.9397, -26.9189, 0.68 ) }
    dend_18 { pt3dadd( 55.2141, 11.613, -27.6833, 0.68 ) }
    dend_18 { pt3dadd( 52.082, 10.3165, -28.6572, 0.68 ) }
    dend_18 { pt3dadd( 48.8974, 9.2282, -29.5558, 0.57 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 71.8589, 37.3852, -27.2253, 0.68 ) }
    dend_16 { pt3dadd( 72.4981, 39.0881, -26.1318, 0.68 ) }
    dend_16 { pt3dadd( 73.0427, 40.5385, -25.2004, 0.68 ) }
    dend_16 { pt3dadd( 73.9531, 42.9636, -23.643, 0.68 ) }
    dend_16 { pt3dadd( 75.7921, 47.862, -20.4975, 0.68 ) }
    dend_16 { pt3dadd( 76.8212, 50.6033, -18.7371, 0.68 ) }
    dend_16 { pt3dadd( 78.2025, 54.2825, -16.3745, 0.68 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 71.8589, 37.3852, -27.2253, 0.79 ) }
    dend_15 { pt3dadd( 73.5837, 38.2263, -27.3078, 0.79 ) }
    dend_15 { pt3dadd( 76.328, 39.5644, -27.439, 0.79 ) }
    dend_15 { pt3dadd( 78.1056, 40.4311, -27.5241, 0.79 ) }
    dend_15 { pt3dadd( 80.0882, 41.3978, -27.6189, 0.79 ) }
    dend_15 { pt3dadd( 81.2138, 41.9466, -27.6728, 0.79 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 112.344, -150.341, -11.9093, 0.57 ) }
    dend_7 { pt3dadd( 113.643, -153.051, -11.4489, 0.57 ) }
    dend_7 { pt3dadd( 115.656, -157.074, -10.6729, 0.57 ) }
    dend_7 { pt3dadd( 116.659, -159.008, -10.3008, 0.57 ) }
    dend_7 { pt3dadd( 119.298, -163.957, -9.37501, 0.57 ) }
    dend_7 { pt3dadd( 121.884, -168.702, -8.46223, 0.57 ) }
    dend_7 { pt3dadd( 123.968, -172.528, -7.72629, 0.57 ) }
    dend_7 { pt3dadd( 125.219, -174.689, -7.22911, 0.57 ) }
    dend_7 { pt3dadd( 126.366, -176.607, -6.74234, 0.57 ) }
    dend_7 { pt3dadd( 127.464, -178.391, -6.29873, 0.57 ) }
    dend_7 { pt3dadd( 128.806, -180.437, -5.89471, 0.57 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 112.344, -150.341, -11.9093, 0.34 ) }
    dend_6 { pt3dadd( 114.763, -152.43, -11.1403, 0.34 ) }
    dend_6 { pt3dadd( 116.507, -154.025, -10.3584, 0.34 ) }
    dend_6 { pt3dadd( 117.255, -154.739, -10.0043, 0.34 ) }
    dend_6 { pt3dadd( 120.59, -158.161, -8.70984, 0.34 ) }
    dend_6 { pt3dadd( 123.24, -161.04, -7.84611, 0.57 ) }
    dend_6 { pt3dadd( 126.791, -165.006, -6.76297, 0.57 ) }
    dend_6 { pt3dadd( 129.135, -167.792, -6.05169, 0.57 ) }
    dend_6 { pt3dadd( 131.2, -170.331, -5.58505, 0.57 ) }
    dend_6 { pt3dadd( 135.274, -175.484, -4.95327, 0.57 ) }
    dend_6 { pt3dadd( 137.586, -178.445, -4.77411, 0.57 ) }
    dend_6 { pt3dadd( 139.873, -181.359, -4.8497, 0.57 ) }
    dend_6 { pt3dadd( 142.916, -185.107, -5.26506, 0.57 ) }
    dend_6 { pt3dadd( 147.32, -190.411, -6.07426, 0.57 ) }
    dend_6 { pt3dadd( 151.024, -194.793, -6.7746, 0.57 ) }
    dend_6 { pt3dadd( 153.456, -197.557, -7.11675, 0.57 ) }
    dend_6 { pt3dadd( 157.709, -202.208, -7.64543, 0.57 ) }
    dend_6 { pt3dadd( 158.951, -203.506, -7.78185, 0.57 ) }
    dend_6 { pt3dadd( 161.716, -206.234, -7.95247, 0.57 ) }
    dend_6 { pt3dadd( 163.813, -208.152, -7.86352, 0.57 ) }
    dend_6 { pt3dadd( 167.882, -211.488, -7.41703, 0.57 ) }
    dend_6 { pt3dadd( 169.174, -212.455, -7.16556, 0.57 ) }
    dend_6 { pt3dadd( 171.355, -213.927, -6.27572, 0.57 ) }
    dend_6 { pt3dadd( 172.9, -214.88, -5.53754, 0.57 ) }
    dend_6 { pt3dadd( 174.475, -215.76, -4.66044, 0.57 ) }
    dend_6 { pt3dadd( 175.56, -216.343, -4.0303, 0.57 ) }
    dend_6 { pt3dadd( 178.166, -217.731, -2.45936, 0.57 ) }
    dend_6 { pt3dadd( 183.659, -220.715, 1.17767, 0.57 ) }
    dend_6 { pt3dadd( 185.142, -221.529, 2.26, 0.57 ) }
    dend_6 { pt3dadd( 187.988, -223.12, 4.47899, 0.57 ) }
    dend_6 { pt3dadd( 190.868, -224.863, 6.8385, 0.57 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 73.1045, 12.3204, -14.6785, 0.45 ) }
    dend_4 { pt3dadd( 74.6541, 14.5191, -17.8337, 0.45 ) }
    dend_4 { pt3dadd( 75.4413, 15.6418, -19.4274, 0.45 ) }
    dend_4 { pt3dadd( 76.5043, 17.4525, -21.7686, 0.45 ) }
    dend_4 { pt3dadd( 76.7923, 17.9387, -22.3324, 0.45 ) }
    dend_4 { pt3dadd( 76.9392, 18.1737, -22.584, 0.45 ) }
    dend_4 { pt3dadd( 78.3776, 20.3787, -24.6925, 0.45 ) }
    dend_4 { pt3dadd( 78.5732, 20.6276, -24.8941, 0.45 ) }
    dend_4 { pt3dadd( 79.7663, 22.1734, -26.1336, 0.45 ) }
    dend_4 { pt3dadd( 80.6932, 23.4523, -26.9225, 0.45 ) }
    dend_4 { pt3dadd( 81.2034, 24.1817, -27.3308, 0.45 ) }
    dend_4 { pt3dadd( 82.4479, 25.883, -28.1672, 0.45 ) }
    dend_4 { pt3dadd( 83.6254, 27.2219, -28.5962, 0.45 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 92/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 73.1045, 12.3204, -14.6785, 0.45 ) }
    dend_3 { pt3dadd( 75.3553, 12.8041, -14.8232, 0.45 ) }
    dend_3 { pt3dadd( 76.8032, 13.1153, -14.9162, 0.45 ) }
    // Section: dend_64, id: dend_64, parent: dend_48 (entry count 95/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 41.9197, -23.7683, 17.0987, 0.45 ) }
    dend_64 { pt3dadd( 40.2831, -28.6633, 20.2437, 0.45 ) }
    dend_64 { pt3dadd( 38.4427, -34.3659, 23.8202, 0.45 ) }
    dend_64 { pt3dadd( 37.4062, -37.5263, 25.8494, 0.45 ) }
    dend_64 { pt3dadd( 36.2413, -40.9544, 27.9898, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_64 { pt3dadd( 34.8646, -44.9903, 30.3861, 0.45 ) }
    dend_64 { pt3dadd( 34.3535, -46.5495, 31.2374, 0.45 ) }
    dend_64 { pt3dadd( 33.716, -48.5402, 32.1514, 0.45 ) }
    dend_64 { pt3dadd( 32.3788, -53.5251, 34.2409, 0.45 ) }
    dend_64 { pt3dadd( 31.58, -57.4034, 35.5203, 0.45 ) }
    dend_64 { pt3dadd( 31.0309, -60.8428, 36.3784, 0.45 ) }
    dend_64 { pt3dadd( 30.6652, -63.6866, 36.9891, 0.45 ) }
    dend_64 { pt3dadd( 30.451, -66.2866, 37.65, 0.45 ) }
    dend_64 { pt3dadd( 30.3734, -70.3852, 38.8666, 0.45 ) }
    dend_64 { pt3dadd( 30.5634, -72.9576, 40.0528, 0.45 ) }
    dend_64 { pt3dadd( 30.9021, -75.2359, 41.4791, 0.45 ) }
    dend_64 { pt3dadd( 31.5099, -78.4726, 43.677, 0.45 ) }
    dend_64 { pt3dadd( 32.2594, -81.7518, 46.0521, 0.45 ) }
    dend_64 { pt3dadd( 32.7561, -83.5384, 47.3591, 0.45 ) }
    dend_64 { pt3dadd( 34.5946, -89.8384, 51.1957, 0.45 ) }
    dend_64 { pt3dadd( 35.9254, -94.0778, 53.3438, 0.45 ) }
    dend_64 { pt3dadd( 37.1942, -97.9393, 54.819, 0.45 ) }
    dend_64 { pt3dadd( 38.2958, -101.629, 55.6226, 0.45 ) }
    dend_64 { pt3dadd( 39.3289, -105.141, 56.1786, 0.45 ) }
    dend_64 { pt3dadd( 41.1676, -111.992, 57.0649, 0.45 ) }
    dend_64 { pt3dadd( 41.8853, -115.087, 57.3767, 0.45 ) }
    dend_64 { pt3dadd( 42.3939, -117.418, 58.0549, 0.45 ) }
    dend_64 { pt3dadd( 43.4401, -122.679, 59.9361, 0.45 ) }
    dend_64 { pt3dadd( 44.1668, -127.044, 61.6716, 0.45 ) }
    dend_64 { pt3dadd( 44.8717, -131.802, 64.0392, 0.45 ) }
    dend_64 { pt3dadd( 45.2162, -134.17, 65.6375, 0.45 ) }
    dend_64 { pt3dadd( 46.2511, -143.086, 71.963, 0.79 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 27/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 41.9197, -23.7683, 17.0987, 0.45 ) }
    dend_49 { pt3dadd( 43.5354, -24.9063, 17.3154, 0.45 ) }
    dend_49 { pt3dadd( 44.4535, -25.7692, 17.4491, 0.45 ) }
    dend_49 { pt3dadd( 45.9193, -27.3517, 17.6573, 0.45 ) }
    dend_49 { pt3dadd( 47.2072, -28.8692, 17.8423, 0.45 ) }
    dend_49 { pt3dadd( 49.0776, -31.2349, 18.1061, 0.45 ) }
    dend_49 { pt3dadd( 51.4152, -34.3926, 18.4413, 0.45 ) }
    dend_49 { pt3dadd( 54.0584, -38.492, 18.9068, 0.45 ) }
    dend_49 { pt3dadd( 55.9684, -41.8862, 19.0819, 0.45 ) }
    dend_49 { pt3dadd( 56.9695, -43.7987, 19.1632, 0.45 ) }
    dend_49 { pt3dadd( 58.7608, -47.4505, 19.2822, 0.45 ) }
    dend_49 { pt3dadd( 59.9064, -49.9065, 19.2939, 0.45 ) }
    dend_49 { pt3dadd( 61.0499, -52.5571, 19.2383, 0.45 ) }
    dend_49 { pt3dadd( 63.1594, -58.3663, 18.8707, 0.45 ) }
    // Section: dend_41, id: dend_41, parent: dend_29 (entry count 41/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 13.873, -76.6599, 18.8238, 0.12 ) }
    dend_41 { pt3dadd( 13.4672, -77.2315, 18.6491, 0.12 ) }
    dend_41 { pt3dadd( 12.8234, -78.6121, 18.1733, 0.57 ) }
    dend_41 { pt3dadd( 12.418, -79.8241, 17.8207, 0.57 ) }
    dend_41 { pt3dadd( 12.1562, -80.8993, 17.6267, 0.57 ) }
    dend_41 { pt3dadd( 11.2323, -84.3203, 16.9216, 0.57 ) }
    dend_41 { pt3dadd( 10.532, -86.3726, 16.3657, 0.57 ) }
    dend_41 { pt3dadd( 10.1016, -87.5317, 15.9943, 0.91 ) }
    dend_41 { pt3dadd( 9.57379, -88.5992, 15.4432, 0.91 ) }
    dend_41 { pt3dadd( 8.72436, -89.9336, 14.5276, 0.91 ) }
    dend_41 { pt3dadd( 6.97924, -91.6656, 12.7509, 0.68 ) }
    dend_41 { pt3dadd( 5.34788, -92.5056, 11.17, 0.68 ) }
    dend_41 { pt3dadd( 4.50238, -92.8231, 10.3646, 0.68 ) }
    dend_41 { pt3dadd( 1.61331, -93.7129, 7.51448, 0.68 ) }
    dend_41 { pt3dadd( 0.910419, -93.8829, 6.80043, 0.68 ) }
    dend_41 { pt3dadd( -0.760234, -94.1847, 5.03524, 0.68 ) }
    dend_41 { pt3dadd( -3.61888, -94.5654, 1.92625, 0.68 ) }
    dend_41 { pt3dadd( -4.72764, -94.695, 0.662359, 0.68 ) }
    dend_41 { pt3dadd( -6.86546, -95.0293, -1.89563, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_29 (entry count 60/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 13.873, -76.6599, 18.8238, 0.79 ) }
    dend_32 { pt3dadd( 15.109, -80.4576, 18.6236, 0.79 ) }
    dend_32 { pt3dadd( 16.7746, -85.5752, 18.3537, 0.79 ) }
    dend_32 { pt3dadd( 17.5437, -87.9382, 18.2291, 0.79 ) }
    dend_32 { pt3dadd( 18.137, -89.7611, 18.133, 0.79 ) }
    dend_32 { pt3dadd( 18.4146, -90.6141, 18.088, 0.79 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 66/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 13.873, -76.6599, 18.8238, 0.57 ) }
    dend_30 { pt3dadd( 17.4009, -77.2743, 21.1726, 0.57 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 17.7961, -57.9367, -0.182613, 1.13 ) }
    dend_28 { pt3dadd( 18.9616, -59.8077, 0.729152, 1.13 ) }
    dend_28 { pt3dadd( 20.7629, -62.6989, 1.91322, 0.91 ) }
    dend_28 { pt3dadd( 21.81, -64.455, 2.48056, 0.91 ) }
    dend_28 { pt3dadd( 23.5111, -67.4123, 3.28118, 0.91 ) }
    dend_28 { pt3dadd( 25.2777, -70.6714, 4.04062, 0.91 ) }
    dend_28 { pt3dadd( 26.7886, -73.6058, 4.72722, 0.91 ) }
    dend_28 { pt3dadd( 27.731, -75.6407, 5.13928, 0.91 ) }
    dend_28 { pt3dadd( 29.1442, -79.0008, 5.83565, 0.91 ) }
    dend_28 { pt3dadd( 29.6901, -80.4116, 6.14662, 1.92 ) }
    dend_28 { pt3dadd( 30.3722, -82.3082, 6.54786, 1.36 ) }
    dend_28 { pt3dadd( 31.3532, -85.1073, 7.20571, 1.02 ) }
    dend_28 { pt3dadd( 32.5053, -88.4148, 8.14622, 1.02 ) }
    dend_28 { pt3dadd( 33.525, -91.2364, 9.02559, 1.02 ) }
    dend_28 { pt3dadd( 33.962, -92.39, 9.39626, 1.02 ) }
    dend_28 { pt3dadd( 34.4794, -93.6833, 9.806, 0.68 ) }
    dend_28 { pt3dadd( 35.3517, -95.7481, 10.3283, 0.68 ) }
    dend_28 { pt3dadd( 35.8432, -96.8526, 10.4861, 1.02 ) }
    dend_28 { pt3dadd( 36.3007, -97.7915, 10.5048, 2.15 ) }
    dend_28 { pt3dadd( 37.1376, -99.352, 10.3455, 1.47 ) }
    dend_28 { pt3dadd( 38.5619, -101.797, 9.9595, 1.13 ) }
    dend_28 { pt3dadd( 39.5415, -103.47, 9.67163, 0.79 ) }
    dend_28 { pt3dadd( 40.2, -104.569, 9.45467, 0.57 ) }
    dend_28 { pt3dadd( 41.505, -106.575, 9.02855, 0.57 ) }
    dend_28 { pt3dadd( 42.6743, -108.246, 8.64821, 0.57 ) }
    dend_28 { pt3dadd( 43.6789, -109.613, 8.31242, 0.57 ) }
    dend_28 { pt3dadd( 44.5976, -110.912, 7.99639, 0.57 ) }
    dend_28 { pt3dadd( 45.1826, -111.881, 7.76909, 0.57 ) }
    dend_28 { pt3dadd( 46.1079, -113.683, 7.31437, 0.57 ) }
    dend_28 { pt3dadd( 46.6478, -114.742, 7.14741, 0.57 ) }
    dend_28 { pt3dadd( 47.4506, -116.369, 6.98535, 2.83 ) }
    dend_28 { pt3dadd( 48.5412, -118.486, 6.90406, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_28 { pt3dadd( 50.1437, -121.471, 6.82834, 1.02 ) }
    dend_28 { pt3dadd( 51.036, -123.156, 6.84319, 0.68 ) }
    dend_28 { pt3dadd( 53.2787, -127.328, 6.93464, 0.68 ) }
    dend_28 { pt3dadd( 54.1046, -128.77, 6.95063, 0.68 ) }
    dend_28 { pt3dadd( 55.6099, -131.157, 7.0188, 0.68 ) }
    dend_28 { pt3dadd( 56.5045, -132.466, 7.05731, 0.68 ) }
    dend_28 { pt3dadd( 57.6622, -134.034, 7.03912, 0.68 ) }
    dend_28 { pt3dadd( 59.2405, -136.109, 6.86768, 0.68 ) }
    dend_28 { pt3dadd( 61.0442, -138.353, 6.48401, 0.68 ) }
    dend_28 { pt3dadd( 63.6106, -141.286, 5.9352, 0.68 ) }
    dend_28 { pt3dadd( 65.2333, -143.077, 5.58495, 0.68 ) }
    dend_28 { pt3dadd( 67.1916, -145.224, 5.10779, 0.57 ) }
    dend_28 { pt3dadd( 68.5655, -146.764, 4.71528, 0.57 ) }
    dend_28 { pt3dadd( 69.7897, -148.313, 4.21632, 0.57 ) }
    dend_28 { pt3dadd( 70.9308, -149.984, 3.49927, 0.57 ) }
    dend_28 { pt3dadd( 71.9669, -151.772, 2.47182, 0.57 ) }
    dend_28 { pt3dadd( 73.2298, -154.129, 0.987155, 0.57 ) }
    dend_28 { pt3dadd( 73.7414, -155.184, 0.260379, 1.47 ) }
    dend_28 { pt3dadd( 75.0209, -157.912, -1.75051, 0.68 ) }
    dend_28 { pt3dadd( 75.7932, -159.54, -2.98726, 0.68 ) }
    dend_28 { pt3dadd( 76.8889, -161.647, -4.64158, 0.68 ) }
    dend_28 { pt3dadd( 78.5482, -164.495, -6.89813, 0.68 ) }
    dend_28 { pt3dadd( 80.2329, -167.048, -8.8235, 0.68 ) }
    dend_28 { pt3dadd( 81.0455, -168.16, -9.65219, 0.68 ) }
    dend_28 { pt3dadd( 81.6407, -168.872, -9.98441, 0.68 ) }
    dend_28 { pt3dadd( 82.7672, -170.256, -10.0747, 0.57 ) }
    dend_28 { pt3dadd( 83.3248, -170.981, -9.92733, 0.57 ) }
    dend_28 { pt3dadd( 84.14, -172.081, -9.54847, 0.57 ) }
    dend_28 { pt3dadd( 85.5268, -174.076, -8.86335, 0.57 ) }
    dend_28 { pt3dadd( 90.0352, -181.106, -6.72543, 0.68 ) }
    dend_28 { pt3dadd( 92.5445, -185.337, -5.7152, 0.68 ) }
    dend_28 { pt3dadd( 93.6354, -187.36, -5.39235, 0.68 ) }
    dend_28 { pt3dadd( 94.3024, -188.772, -5.32636, 0.68 ) }
    dend_28 { pt3dadd( 95.7883, -192.645, -5.98087, 0.68 ) }
    dend_28 { pt3dadd( 96.1503, -193.819, -6.47747, 0.68 ) }
    dend_28 { pt3dadd( 96.6628, -195.913, -7.95073, 2.04 ) }
    dend_28 { pt3dadd( 97.0838, -197.727, -9.48293, 0.79 ) }
    dend_28 { pt3dadd( 97.5631, -199.596, -11.1079, 0.79 ) }
    dend_28 { pt3dadd( 98.6006, -203.087, -13.918, 0.79 ) }
    dend_28 { pt3dadd( 99.3048, -205.001, -15.2103, 0.79 ) }
    dend_28 { pt3dadd( 100.06, -206.781, -16.1841, 0.79 ) }
    dend_28 { pt3dadd( 101.033, -208.831, -16.9555, 0.79 ) }
    dend_28 { pt3dadd( 102.059, -210.704, -17.4202, 0.68 ) }
    dend_28 { pt3dadd( 103.588, -213.192, -17.7178, 0.68 ) }
    dend_28 { pt3dadd( 105.082, -215.427, -17.7198, 0.68 ) }
    dend_28 { pt3dadd( 106.595, -217.419, -17.3243, 0.68 ) }
    dend_28 { pt3dadd( 107.773, -218.857, -16.8701, 0.68 ) }
    dend_28 { pt3dadd( 109.069, -220.314, -16.214, 0.68 ) }
    dend_28 { pt3dadd( 109.844, -221.137, -15.8057, 1.58 ) }
    dend_28 { pt3dadd( 110.994, -222.307, -15.2782, 1.58 ) }
    dend_28 { pt3dadd( 115.757, -227.119, -13.3139, 0.68 ) }
    dend_28 { pt3dadd( 117.462, -228.798, -12.6813, 0.68 ) }
    dend_28 { pt3dadd( 120.57, -231.786, -11.6745, 0.68 ) }
    dend_28 { pt3dadd( 123.392, -234.481, -10.766, 0.68 ) }
    dend_28 { pt3dadd( 125.84, -236.794, -10.0508, 0.68 ) }
    dend_28 { pt3dadd( 127.776, -238.599, -9.5118, 0.68 ) }
    dend_28 { pt3dadd( 129.931, -240.584, -9.07303, 0.68 ) }
    dend_28 { pt3dadd( 131.475, -241.869, -8.6316, 0.68 ) }
    dend_28 { pt3dadd( 134.393, -244.103, -7.76575, 0.68 ) }
    dend_28 { pt3dadd( 135.398, -244.811, -7.52138, 0.68 ) }
    dend_28 { pt3dadd( 138.063, -246.576, -7.11272, 2.38 ) }
    dend_28 { pt3dadd( 139.372, -247.447, -7.08389, 1.92 ) }
    dend_28 { pt3dadd( 143.121, -249.924, -7.38979, 0.57 ) }
    dend_28 { pt3dadd( 144.51, -250.877, -7.69986, 0.57 ) }
    dend_28 { pt3dadd( 149.167, -254.174, -9.31455, 0.57 ) }
    dend_28 { pt3dadd( 152.375, -256.486, -10.5468, 0.57 ) }
    dend_28 { pt3dadd( 154.377, -257.945, -11.4191, 0.57 ) }
    dend_28 { pt3dadd( 156.907, -259.781, -12.5079, 0.57 ) }
    dend_28 { pt3dadd( 159.312, -261.489, -13.5379, 0.57 ) }
    dend_28 { pt3dadd( 160.992, -262.653, -14.0652, 0.57 ) }
    dend_28 { pt3dadd( 162.389, -263.577, -14.2801, 2.15 ) }
    dend_28 { pt3dadd( 163.562, -264.316, -14.4112, 1.13 ) }
    dend_28 { pt3dadd( 165.381, -265.448, -14.5465, 0.57 ) }
    dend_28 { pt3dadd( 167.026, -266.603, -14.8834, 0.57 ) }
    dend_28 { pt3dadd( 167.716, -267.119, -15.0908, 0.57 ) }
    dend_28 { pt3dadd( 168.558, -267.847, -15.3805, 0.57 ) }
    dend_28 { pt3dadd( 169.623, -268.861, -15.789, 0.57 ) }
    dend_28 { pt3dadd( 169.889, -269.151, -15.8867, 2.38 ) }
    dend_28 { pt3dadd( 172.475, -272.238, -16.8088, 0.45 ) }
    dend_28 { pt3dadd( 174.154, -274.357, -17.3714, 0.45 ) }
    dend_28 { pt3dadd( 176.022, -276.751, -17.9527, 0.45 ) }
    dend_28 { pt3dadd( 177.345, -278.447, -18.268, 0.45 ) }
    dend_28 { pt3dadd( 179.778, -281.555, -18.5616, 0.45 ) }
    dend_28 { pt3dadd( 180.441, -282.41, -18.5767, 0.45 ) }
    dend_28 { pt3dadd( 183.379, -286.302, -18.2154, 0.45 ) }
    dend_28 { pt3dadd( 185.479, -289.303, -17.8034, 0.45 ) }
    dend_28 { pt3dadd( 187.233, -292.137, -17.409, 0.45 ) }
    dend_28 { pt3dadd( 188.678, -294.817, -16.9238, 0.45 ) }
    dend_28 { pt3dadd( 189.275, -296.098, -16.6472, 0.45 ) }
    dend_28 { pt3dadd( 190.091, -298.188, -16.2313, 0.45 ) }
    dend_28 { pt3dadd( 190.951, -300.969, -15.7959, 0.45 ) }
    dend_28 { pt3dadd( 191.705, -303.858, -15.7878, 0.45 ) }
    dend_28 { pt3dadd( 191.897, -304.593, -15.9081, 1.24 ) }
    dend_28 { pt3dadd( 192.48, -306.404, -16.4183, 0.57 ) }
    dend_28 { pt3dadd( 193.405, -308.585, -17.1753, 0.57 ) }
    dend_28 { pt3dadd( 194.905, -311.36, -18.2929, 0.57 ) }
    dend_28 { pt3dadd( 196.515, -313.869, -19.3286, 1.36 ) }
    dend_28 { pt3dadd( 198.003, -315.845, -19.9788, 0.57 ) }
    dend_28 { pt3dadd( 199.81, -317.984, -20.5822, 0.57 ) }
    dend_28 { pt3dadd( 202.312, -320.688, -21.2114, 0.57 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( 204.342, -322.681, -21.4461, 0.57 ) }
    dend_28 { pt3dadd( 205.901, -324.091, -21.4742, 0.57 ) }
    dend_28 { pt3dadd( 209.288, -327.157, -21.3965, 0.57 ) }
    dend_28 { pt3dadd( 212.406, -330.162, -21.3433, 0.57 ) }
    dend_28 { pt3dadd( 213.696, -331.55, -21.2903, 0.57 ) }
    dend_28 { pt3dadd( 215.87, -334.261, -21.2661, 2.38 ) }
    dend_28 { pt3dadd( 216.478, -335.141, -21.2991, 1.58 ) }
    dend_28 { pt3dadd( 219.012, -339.235, -21.4467, 0.68 ) }
    dend_28 { pt3dadd( 220.383, -341.788, -21.573, 0.68 ) }
    dend_28 { pt3dadd( 221.99, -344.971, -21.4778, 0.79 ) }
    dend_28 { pt3dadd( 223.467, -347.962, -21.3245, 0.57 ) }
    dend_28 { pt3dadd( 224.831, -350.848, -21.1524, 0.57 ) }
    dend_28 { pt3dadd( 226.848, -355.161, -20.7401, 0.57 ) }
    dend_28 { pt3dadd( 228.364, -358.415, -20.3006, 0.57 ) }
    dend_28 { pt3dadd( 229.779, -361.53, -19.9243, 0.57 ) }
    dend_28 { pt3dadd( 230.456, -363.038, -19.7871, 0.57 ) }
    dend_28 { pt3dadd( 231.534, -365.48, -19.584, 0.57 ) }
    dend_28 { pt3dadd( 233.053, -369.132, -19.4571, 0.57 ) }
    dend_28 { pt3dadd( 233.963, -371.439, -19.6171, 0.57 ) }
    dend_28 { pt3dadd( 234.984, -374.16, -20.0818, 0.57 ) }
    dend_28 { pt3dadd( 235.652, -376.057, -20.6068, 0.57 ) }
    dend_28 { pt3dadd( 236.068, -377.226, -20.9975, 0.57 ) }
    dend_28 { pt3dadd( 236.895, -379.385, -21.7586, 0.57 ) }
    dend_28 { pt3dadd( 238.399, -382.974, -23.0606, 0.57 ) }
    dend_28 { pt3dadd( 239.736, -385.763, -23.9665, 1.13 ) }
    dend_28 { pt3dadd( 240.603, -387.362, -24.4074, 2.38 ) }
    dend_28 { pt3dadd( 240.926, -387.915, -24.5398, 2.38 ) }
    dend_28 { pt3dadd( 243.225, -391.519, -25.2364, 0.79 ) }
    dend_28 { pt3dadd( 244.505, -393.552, -25.6825, 0.79 ) }
    dend_28 { pt3dadd( 245.974, -396.009, -26.1803, 0.57 ) }
    dend_28 { pt3dadd( 247.102, -398.033, -26.6329, 0.57 ) }
    dend_28 { pt3dadd( 248.05, -399.939, -27.0939, 0.57 ) }
    dend_28 { pt3dadd( 248.808, -401.631, -27.562, 0.57 ) }
    dend_28 { pt3dadd( 250.588, -405.897, -28.9726, 0.57 ) }
    dend_28 { pt3dadd( 250.874, -406.614, -29.187, 2.94 ) }
    dend_28 { pt3dadd( 252.173, -409.885, -30.1688, 0.68 ) }
    dend_28 { pt3dadd( 253.482, -413.011, -31.0109, 0.68 ) }
    dend_28 { pt3dadd( 254.62, -415.45, -31.5956, 0.68 ) }
    dend_28 { pt3dadd( 255.627, -417.416, -32.0187, 0.68 ) }
    dend_28 { pt3dadd( 257.359, -420.488, -32.5878, 0.68 ) }
    dend_28 { pt3dadd( 258.989, -423.383, -33.1736, 0.68 ) }
    dend_28 { pt3dadd( 260.177, -425.487, -33.636, 0.68 ) }
    dend_28 { pt3dadd( 261.291, -427.482, -34.1201, 0.68 ) }
    dend_28 { pt3dadd( 263.408, -431.274, -34.9969, 0.68 ) }
    dend_28 { pt3dadd( 264.427, -433.058, -35.3924, 0.68 ) }
    dend_28 { pt3dadd( 265.512, -434.88, -35.7777, 0.68 ) }
    dend_28 { pt3dadd( 268.435, -439.732, -36.4139, 0.68 ) }
    dend_28 { pt3dadd( 269.102, -440.84, -36.5076, 0.68 ) }
    dend_28 { pt3dadd( 271.372, -444.779, -36.56, 0.57 ) }
    dend_28 { pt3dadd( 271.95, -445.83, -36.512, 0.57 ) }
    dend_28 { pt3dadd( 272.338, -446.59, -36.4467, 2.49 ) }
    dend_28 { pt3dadd( 274.845, -451.64, -35.7896, 0.68 ) }
    dend_28 { pt3dadd( 275.533, -453.081, -35.5217, 0.68 ) }
    dend_28 { pt3dadd( 277.994, -458.144, -34.525, 0.68 ) }
    dend_28 { pt3dadd( 278.793, -459.737, -34.2306, 0.68 ) }
    dend_28 { pt3dadd( 280.493, -462.924, -33.7357, 0.68 ) }
    dend_28 { pt3dadd( 282.334, -466.124, -33.3566, 0.68 ) }
    dend_28 { pt3dadd( 284.152, -468.986, -33.1907, 0.68 ) }
    dend_28 { pt3dadd( 285.876, -471.386, -33.0467, 0.68 ) }
    dend_28 { pt3dadd( 288.666, -474.78, -32.8991, 0.68 ) }
    dend_28 { pt3dadd( 289.801, -476.048, -32.8066, 0.68 ) }
    dend_28 { pt3dadd( 290.667, -476.974, -32.6824, 2.72 ) }
    dend_28 { pt3dadd( 291.969, -478.408, -32.4393, 1.92 ) }
    dend_28 { pt3dadd( 294.368, -481.293, -31.7746, 0.91 ) }
    dend_28 { pt3dadd( 295.764, -483.199, -31.1349, 0.91 ) }
    dend_28 { pt3dadd( 297.042, -485.178, -30.2611, 0.68 ) }
    dend_28 { pt3dadd( 298.385, -487.377, -29.106, 0.68 ) }
    dend_28 { pt3dadd( 299.76, -489.637, -27.7243, 0.68 ) }
    dend_28 { pt3dadd( 301.527, -492.534, -25.7875, 0.68 ) }
    dend_28 { pt3dadd( 302.815, -494.551, -24.2059, 0.68 ) }
    dend_28 { pt3dadd( 304.707, -497.3, -21.7293, 0.68 ) }
    dend_28 { pt3dadd( 306.324, -499.324, -19.5277, 0.68 ) }
    dend_28 { pt3dadd( 308.656, -501.923, -16.3865, 0.68 ) }
    dend_28 { pt3dadd( 309.802, -503.032, -14.8158, 0.68 ) }
    dend_28 { pt3dadd( 312.466, -505.428, -11.4006, 0.68 ) }
    dend_28 { pt3dadd( 314.122, -506.864, -9.45785, 0.68 ) }
    dend_28 { pt3dadd( 318.287, -510.457, -4.94367, 0.68 ) }
    dend_28 { pt3dadd( 319.872, -511.873, -3.32541, 0.68 ) }
    dend_28 { pt3dadd( 323.602, -515.317, 0.169491, 0.68 ) }
    dend_28 { pt3dadd( 326.166, -517.785, 2.37183, 0.68 ) }
    dend_28 { pt3dadd( 326.992, -518.627, 2.9626, 0.68 ) }
    dend_28 { pt3dadd( 327.696, -519.375, 3.41721, 0.68 ) }
    dend_28 { pt3dadd( 329.676, -521.738, 4.58681, 0.68 ) }
    dend_28 { pt3dadd( 330.487, -522.708, 5.12732, 0.68 ) }
    dend_28 { pt3dadd( 332.574, -525.352, 6.51957, 0.45 ) }
    dend_28 { pt3dadd( 333.75, -526.734, 7.5718, 0.45 ) }
    dend_28 { pt3dadd( 334.263, -527.347, 8.07704, 0.45 ) }
    dend_28 { pt3dadd( 335.054, -528.288, 8.88292, 0.45 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 17.7961, -57.9367, -0.182613, 0.79 ) }
    dend_27 { pt3dadd( 19.0404, -55.713, -1.8707, 0.79 ) }
    dend_27 { pt3dadd( 20.1269, -53.7712, -3.34475, 0.57 ) }
    dend_27 { pt3dadd( 20.6239, -52.8829, -4.01902, 0.34 ) }
    dend_27 { pt3dadd( 21.1893, -51.8725, -4.78609, 0.34 ) }
    dend_27 { pt3dadd( 21.4293, -51.4436, -5.11167, 0.34 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 94/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 84.4532, -41.1509, 7.4345, 0.45 ) }
    dend_21 { pt3dadd( 85.3094, -43.9992, 8.29602, 0.45 ) }
    dend_21 { pt3dadd( 86.4273, -47.6769, 9.17289, 0.45 ) }
    dend_21 { pt3dadd( 88.7749, -55.4362, 10.7813, 0.45 ) }
    dend_21 { pt3dadd( 90.4499, -60.9747, 11.2638, 0.45 ) }
    dend_21 { pt3dadd( 91.9583, -66.5922, 11.4633, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 92.3282, -68.2234, 11.4987, 0.45 ) }
    dend_21 { pt3dadd( 93.439, -73.9727, 11.5372, 0.45 ) }
    dend_21 { pt3dadd( 94.7077, -81.4645, 11.5289, 0.45 ) }
    dend_21 { pt3dadd( 96.2048, -92.1301, 11.6009, 0.45 ) }
    dend_21 { pt3dadd( 96.9168, -98.321, 11.6483, 0.45 ) }
    dend_21 { pt3dadd( 97.5763, -107.055, 11.7838, 0.45 ) }
    dend_21 { pt3dadd( 97.8207, -115.272, 12.0936, 0.45 ) }
    dend_21 { pt3dadd( 97.64, -120.889, 12.4731, 0.45 ) }
    dend_21 { pt3dadd( 96.7476, -128.555, 13.1654, 0.45 ) }
    dend_21 { pt3dadd( 95.751, -132.965, 13.7497, 0.45 ) }
    dend_21 { pt3dadd( 94.6672, -136.966, 14.1895, 0.45 ) }
    dend_21 { pt3dadd( 92.8586, -141.713, 14.5308, 0.45 ) }
    dend_21 { pt3dadd( 91.0036, -145.095, 14.6258, 0.45 ) }
    dend_21 { pt3dadd( 88.0094, -149.228, 14.6042, 0.45 ) }
    dend_21 { pt3dadd( 83.8435, -153.756, 14.496, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 15/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 84.4532, -41.1509, 7.4345, 0.45 ) }
    dend_20 { pt3dadd( 86.4597, -45.7965, 9.38623, 0.45 ) }
    dend_20 { pt3dadd( 87.363, -47.8876, 10.2648, 0.45 ) }
    dend_20 { pt3dadd( 88.6041, -50.761, 11.472, 0.45 ) }
    dend_20 { pt3dadd( 89.2532, -52.2639, 12.1034, 0.45 ) }
    dend_20 { pt3dadd( 90.6502, -55.4983, 13.4622, 0.45 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 21/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 46.2511, -143.086, 71.963, 0.57 ) }
    dend_66 { pt3dadd( 44.3678, -144.882, 73.4357, 0.57 ) }
    dend_66 { pt3dadd( 42.9299, -146.372, 74.6489, 0.57 ) }
    dend_66 { pt3dadd( 41.771, -147.629, 75.6292, 0.57 ) }
    dend_66 { pt3dadd( 41.085, -148.479, 76.2213, 0.57 ) }
    dend_66 { pt3dadd( 40.0348, -149.991, 77.193, 0.57 ) }
    dend_66 { pt3dadd( 38.75, -152.24, 78.698, 0.57 ) }
    dend_66 { pt3dadd( 38.0928, -153.698, 79.7008, 0.57 ) }
    dend_66 { pt3dadd( 37.6841, -154.799, 80.3673, 0.57 ) }
    dend_66 { pt3dadd( 37.0581, -156.68, 81.8195, 0.57 ) }
    dend_66 { pt3dadd( 36.2094, -159.264, 83.9543, 0.57 ) }
    dend_66 { pt3dadd( 35.1294, -162.187, 86.7649, 0.57 ) }
    dend_66 { pt3dadd( 34.7028, -163.082, 87.7521, 0.57 ) }
    dend_66 { pt3dadd( 33.4164, -164.914, 90.4702, 0.57 ) }
    dend_66 { pt3dadd( 29.7031, -167.932, 97.3019, 0.57 ) }
    dend_66 { pt3dadd( 28.4004, -168.351, 99.1756, 0.57 ) }
    dend_66 { pt3dadd( 26.3674, -168.377, 101.352, 0.57 ) }
    dend_66 { pt3dadd( 24.2555, -168.122, 103.118, 0.57 ) }
    dend_66 { pt3dadd( 21.576, -167.724, 105.346, 0.57 ) }
    dend_66 { pt3dadd( 19.3126, -167.398, 107.012, 0.57 ) }
    dend_66 { pt3dadd( 16.6351, -167.178, 108.792, 0.57 ) }
    dend_66 { pt3dadd( 14.3549, -167.184, 110.498, 0.57 ) }
    dend_66 { pt3dadd( 11.5236, -167.528, 112.755, 0.57 ) }
    dend_66 { pt3dadd( 7.27873, -168.727, 116.482, 0.57 ) }
    dend_66 { pt3dadd( 5.3029, -169.74, 118.691, 0.57 ) }
    dend_66 { pt3dadd( 3.43875, -171.072, 121.32, 0.57 ) }
    dend_66 { pt3dadd( 2.46137, -171.93, 123.081, 0.57 ) }
    dend_66 { pt3dadd( 1.95166, -172.408, 124.188, 0.57 ) }
    dend_66 { pt3dadd( 1.2431, -173.075, 125.769, 0.57 ) }
    dend_66 { pt3dadd( -1.4234, -175.227, 131.432, 0.57 ) }
    dend_66 { pt3dadd( -1.9923, -175.648, 132.606, 0.57 ) }
    dend_66 { pt3dadd( -2.80376, -176.198, 134.181, 0.57 ) }
    dend_66 { pt3dadd( -5.423, -177.843, 139.132, 0.57 ) }
    dend_66 { pt3dadd( -6.55586, -178.564, 141.105, 0.57 ) }
    dend_66 { pt3dadd( -9.95762, -180.728, 146.476, 0.57 ) }
    dend_66 { pt3dadd( -10.6983, -181.217, 147.551, 0.57 ) }
    dend_66 { pt3dadd( -13.5969, -183.181, 151.58, 0.57 ) }
    dend_66 { pt3dadd( -14.4182, -183.75, 152.668, 0.57 ) }
    dend_66 { pt3dadd( -16.2986, -185.044, 154.927, 0.57 ) }
    dend_66 { pt3dadd( -17.2684, -185.722, 156.01, 0.57 ) }
    dend_66 { pt3dadd( -21.5217, -188.855, 160.316, 0.57 ) }
    dend_66 { pt3dadd( -23.5186, -190.368, 162.209, 0.57 ) }
    dend_66 { pt3dadd( -26.0906, -192.372, 164.229, 0.57 ) }
    dend_66 { pt3dadd( -29.5287, -195.138, 166.579, 0.57 ) }
    dend_66 { pt3dadd( -33.5872, -198.475, 169.006, 0.57 ) }
    dend_66 { pt3dadd( -34.7416, -199.473, 169.518, 0.57 ) }
    dend_66 { pt3dadd( -36.7733, -201.324, 170.04, 0.57 ) }
    dend_66 { pt3dadd( -40.5854, -204.87, 169.768, 0.57 ) }
    dend_66 { pt3dadd( -42.7379, -206.9, 168.969, 0.57 ) }
    dend_66 { pt3dadd( -45.1536, -209.244, 167.655, 0.57 ) }
    dend_66 { pt3dadd( -47.7905, -211.823, 165.966, 0.57 ) }
    dend_66 { pt3dadd( -49.9107, -213.899, 164.474, 0.57 ) }
    dend_66 { pt3dadd( -58.0875, -222.064, 157.972, 0.57 ) }
    dend_66 { pt3dadd( -58.2269, -222.207, 157.849, 2.26 ) }
    dend_66 { pt3dadd( -60.6485, -224.683, 155.108, 0.68 ) }
    dend_66 { pt3dadd( -61.5731, -225.652, 153.73, 0.68 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 77/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 46.2511, -143.086, 71.963, 0.57 ) }
    dend_65 { pt3dadd( 49.7373, -145.553, 79.4016, 0.57 ) }
    dend_65 { pt3dadd( 52.1743, -147.379, 84.4851, 0.57 ) }
    dend_65 { pt3dadd( 52.6903, -147.813, 85.4672, 0.57 ) }
    dend_65 { pt3dadd( 54.0787, -149.101, 87.9897, 0.57 ) }
    dend_65 { pt3dadd( 56.7783, -151.585, 92.8711, 0.57 ) }
    dend_65 { pt3dadd( 63.2748, -157.465, 104.11, 0.57 ) }
    dend_65 { pt3dadd( 64.583, -158.687, 106.127, 0.57 ) }
    dend_65 { pt3dadd( 67.2589, -161.301, 109.926, 0.57 ) }
    dend_65 { pt3dadd( 68.2934, -162.34, 111.253, 0.57 ) }
    dend_65 { pt3dadd( 72.4749, -166.513, 116.291, 0.57 ) }
    dend_65 { pt3dadd( 73.85, -168.116, 117.755, 0.57 ) }
    dend_65 { pt3dadd( 75.7457, -170.836, 119.291, 0.57 ) }
    dend_65 { pt3dadd( 77.6961, -173.347, 120.832, 0.57 ) }
    dend_65 { pt3dadd( 80.4552, -176.783, 123.104, 0.57 ) }
    // Section: dend_63, id: dend_63, parent: dend_49 (entry count 92/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 63.1594, -58.3663, 18.8707, 0.34 ) }
    dend_63 { pt3dadd( 62.7495, -60.2238, 17.38, 0.34 ) }
    dend_63 { pt3dadd( 62.5904, -61.6845, 16.1714, 0.34 ) }
    dend_63 { pt3dadd( 62.4367, -63.2795, 14.893, 0.45 ) }
    dend_63 { pt3dadd( 62.1729, -66.0292, 12.7767, 0.45 ) }
    dend_63 { pt3dadd( 61.9447, -68.5904, 10.7506, 0.45 ) }
    dend_63 { pt3dadd( 61.7466, -70.9207, 8.93358, 0.45 ) }
    dend_63 { pt3dadd( 61.6464, -73.8877, 6.36127, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_63 { pt3dadd( 61.6672, -75.1101, 5.29907, 0.45 ) }
    dend_63 { pt3dadd( 61.7046, -75.9881, 4.54372, 0.45 ) }
    dend_63 { pt3dadd( 61.8204, -78.3363, 2.61386, 0.45 ) }
    dend_63 { pt3dadd( 61.8912, -79.9598, 1.39829, 0.45 ) }
    dend_63 { pt3dadd( 62.0538, -84.4057, -1.75884, 0.45 ) }
    dend_63 { pt3dadd( 62.1098, -86.249, -3.07759, 0.45 ) }
    dend_63 { pt3dadd( 62.1681, -87.4221, -3.89925, 0.45 ) }
    dend_63 { pt3dadd( 62.2565, -89.8496, -5.47683, 0.45 ) }
    dend_63 { pt3dadd( 62.3835, -92.4274, -7.21049, 0.45 ) }
    dend_63 { pt3dadd( 62.4592, -93.937, -8.38931, 0.45 ) }
    dend_63 { pt3dadd( 62.5503, -96.4952, -10.6118, 0.45 ) }
    dend_63 { pt3dadd( 62.5897, -97.6945, -11.7682, 0.45 ) }
    dend_63 { pt3dadd( 62.6616, -99.2811, -13.5597, 0.45 ) }
    dend_63 { pt3dadd( 62.8103, -102.891, -18.0978, 0.45 ) }
    dend_63 { pt3dadd( 62.9285, -104.441, -20.3653, 0.45 ) }
    dend_63 { pt3dadd( 63.0474, -105.617, -22.14, 0.45 ) }
    dend_63 { pt3dadd( 63.2235, -107.063, -24.2873, 0.45 ) }
    dend_63 { pt3dadd( 63.6019, -109.959, -28.5474, 0.23 ) }
    dend_63 { pt3dadd( 63.7068, -110.669, -29.5856, 0.23 ) }
    dend_63 { pt3dadd( 64.0231, -113.322, -32.9893, 0.23 ) }
    dend_63 { pt3dadd( 64.1883, -114.375, -34.2698, 0.23 ) }
    dend_63 { pt3dadd( 64.6495, -116.787, -37.3007, 0.45 ) }
    dend_63 { pt3dadd( 64.8234, -117.565, -38.3132, 0.45 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 23/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 63.1594, -58.3663, 18.8707, 0.45 ) }
    dend_50 { pt3dadd( 64.2134, -60.0718, 19.0495, 0.45 ) }
    dend_50 { pt3dadd( 65.2292, -61.7623, 19.2067, 0.45 ) }
    dend_50 { pt3dadd( 66.0284, -63.1551, 19.3269, 0.45 ) }
    dend_50 { pt3dadd( 67.0457, -64.9698, 19.568, 0.45 ) }
    dend_50 { pt3dadd( 68.7224, -67.9437, 20.0243, 0.45 ) }
    dend_50 { pt3dadd( 69.8468, -69.938, 20.3302, 0.45 ) }
    dend_50 { pt3dadd( 70.4763, -71.1291, 20.4943, 0.45 ) }
    dend_50 { pt3dadd( 71.4817, -73.161, 20.784, 0.45 ) }
    dend_50 { pt3dadd( 72.489, -75.299, 21.0913, 0.45 ) }
    dend_50 { pt3dadd( 73.4017, -77.1745, 21.4697, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -6.86546, -95.0293, -1.89563, 0.57 ) }
    dend_43 { pt3dadd( -11.3538, -95.6821, -4.55933, 0.57 ) }
    dend_43 { pt3dadd( -11.9951, -95.7754, -4.93991, 0.57 ) }
    dend_43 { pt3dadd( -13.3867, -95.9778, -5.76576, 0.57 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 38/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.86546, -95.0293, -1.89563, 0.68 ) }
    dend_42 { pt3dadd( -7.44661, -96.4921, -2.31057, 0.68 ) }
    dend_42 { pt3dadd( -8.65748, -98.5684, -3.13485, 0.68 ) }
    dend_42 { pt3dadd( -9.32323, -99.5774, -3.52916, 0.68 ) }
    dend_42 { pt3dadd( -9.89207, -100.35, -3.79818, 0.68 ) }
    dend_42 { pt3dadd( -11.356, -102.015, -4.47378, 0.68 ) }
    dend_42 { pt3dadd( -12.0509, -102.761, -4.77716, 0.68 ) }
    dend_42 { pt3dadd( -14.3372, -105.028, -5.73089, 0.68 ) }
    dend_42 { pt3dadd( -15.1029, -105.834, -6.02794, 0.68 ) }
    dend_42 { pt3dadd( -16.0385, -106.855, -6.32295, 0.68 ) }
    dend_42 { pt3dadd( -17.9139, -108.969, -6.82171, 0.68 ) }
    dend_42 { pt3dadd( -19.3008, -110.585, -7.05594, 0.68 ) }
    dend_42 { pt3dadd( -21.5007, -113.257, -7.31994, 0.68 ) }
    dend_42 { pt3dadd( -23.3183, -115.563, -7.43621, 0.68 ) }
    dend_42 { pt3dadd( -25.2514, -118.063, -7.50006, 0.68 ) }
    dend_42 { pt3dadd( -26.7615, -120.079, -7.51112, 0.68 ) }
    dend_42 { pt3dadd( -28.4769, -122.423, -7.39965, 0.68 ) }
    dend_42 { pt3dadd( -30.0443, -124.427, -7.259, 0.57 ) }
    dend_42 { pt3dadd( -31.4417, -126.063, -7.06555, 0.57 ) }
    dend_42 { pt3dadd( -33.2008, -128.026, -6.86666, 0.57 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 58/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 18.4146, -90.6141, 18.088, 0.45 ) }
    dend_38 { pt3dadd( 17.0308, -91.4881, 20.2344, 0.45 ) }
    dend_38 { pt3dadd( 16.3925, -91.7684, 21.2643, 0.45 ) }
    dend_38 { pt3dadd( 14.8356, -92.2545, 23.4663, 0.45 ) }
    dend_38 { pt3dadd( 14.4174, -92.3514, 24.0777, 0.45 ) }
    dend_38 { pt3dadd( 13.8252, -92.4236, 24.9239, 0.45 ) }
    dend_38 { pt3dadd( 13.5279, -92.4593, 25.6854, 0.45 ) }
    dend_38 { pt3dadd( 13.32, -92.4648, 26.6903, 0.45 ) }
    dend_38 { pt3dadd( 13.1909, -92.4062, 27.7427, 0.45 ) }
    dend_38 { pt3dadd( 13.0055, -92.2509, 28.8182, 0.45 ) }
    dend_38 { pt3dadd( 12.8604, -92.0977, 29.563, 0.45 ) }
    dend_38 { pt3dadd( 11.9642, -91.0966, 34.1881, 0.45 ) }
    dend_38 { pt3dadd( 11.7541, -90.915, 35.1526, 0.45 ) }
    dend_38 { pt3dadd( 11.2813, -90.6273, 36.9764, 0.45 ) }
    dend_38 { pt3dadd( 10.473, -90.2527, 39.6563, 0.45 ) }
    dend_38 { pt3dadd( 10.1203, -90.1894, 40.577, 0.45 ) }
    dend_38 { pt3dadd( 9.0105, -90.3991, 42.9715, 0.45 ) }
    dend_38 { pt3dadd( 8.42522, -90.6866, 43.8374, 0.45 ) }
    dend_38 { pt3dadd( 8.09526, -90.9701, 44.3294, 0.34 ) }
    dend_38 { pt3dadd( 7.74058, -91.4162, 44.8434, 0.34 ) }
    dend_38 { pt3dadd( 6.71502, -92.8261, 46.0439, 0.34 ) }
    dend_38 { pt3dadd( 5.71353, -94.123, 46.9252, 0.34 ) }
    dend_38 { pt3dadd( 4.92246, -95.0495, 47.4384, 0.34 ) }
    dend_38 { pt3dadd( 3.97503, -96.0849, 48.0626, 0.34 ) }
    dend_38 { pt3dadd( 2.37919, -97.7533, 49.1512, 0.34 ) }
    dend_38 { pt3dadd( 0.292702, -99.7867, 50.6025, 0.34 ) }
    dend_38 { pt3dadd( -0.44927, -100.398, 51.0951, 0.34 ) }
    dend_38 { pt3dadd( -0.961367, -100.761, 51.5048, 0.34 ) }
    dend_38 { pt3dadd( -2.35134, -101.676, 52.8385, 0.34 ) }
    dend_38 { pt3dadd( -3.20706, -102.273, 53.9067, 0.34 ) }
    dend_38 { pt3dadd( -3.77979, -102.727, 54.902, 0.34 ) }
    dend_38 { pt3dadd( -4.32293, -103.244, 56.1626, 0.34 ) }
    dend_38 { pt3dadd( -5.0181, -103.953, 57.6982, 0.34 ) }
    dend_38 { pt3dadd( -5.8749, -104.906, 59.562, 0.34 ) }
    dend_38 { pt3dadd( -6.8523, -106.05, 61.5411, 0.34 ) }
    dend_38 { pt3dadd( -7.84162, -107.251, 63.443, 0.34 ) }
    dend_38 { pt3dadd( -8.48206, -108.077, 64.5816, 0.34 ) }
    dend_38 { pt3dadd( -9.44434, -109.443, 66.1819, 0.34 ) }
    dend_38 { pt3dadd( -10.0201, -110.248, 66.9926, 0.34 ) }
    dend_38 { pt3dadd( -10.4409, -110.809, 67.5006, 0.34 ) }
    dend_38 { pt3dadd( -11.8042, -112.457, 68.7701, 0.34 ) }
    dend_38 { pt3dadd( -12.623, -113.473, 69.4692, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -13.6987, -114.817, 70.4091, 0.34 ) }
    dend_38 { pt3dadd( -14.1033, -115.314, 70.796, 0.34 ) }
    dend_38 { pt3dadd( -15.1313, -116.463, 71.6802, 0.34 ) }
    dend_38 { pt3dadd( -15.6927, -117.062, 72.1327, 0.34 ) }
    dend_38 { pt3dadd( -16.805, -118.198, 72.9511, 0.34 ) }
    dend_38 { pt3dadd( -17.475, -118.854, 73.3953, 0.34 ) }
    dend_38 { pt3dadd( -18.2383, -119.557, 73.8423, 0.34 ) }
    dend_38 { pt3dadd( -19.6228, -120.792, 74.6112, 0.34 ) }
    dend_38 { pt3dadd( -20.7875, -121.767, 75.224, 0.34 ) }
    dend_38 { pt3dadd( -22.0263, -122.691, 75.8347, 0.34 ) }
    dend_38 { pt3dadd( -23.2169, -123.46, 76.404, 0.34 ) }
    dend_38 { pt3dadd( -24.1181, -124.002, 76.8827, 0.34 ) }
    dend_38 { pt3dadd( -25.0016, -124.495, 77.3638, 0.34 ) }
    dend_38 { pt3dadd( -25.8538, -124.914, 77.8486, 0.34 ) }
    dend_38 { pt3dadd( -26.5624, -125.185, 78.2761, 0.34 ) }
    dend_38 { pt3dadd( -27.8695, -125.51, 79.1349, 0.34 ) }
    dend_38 { pt3dadd( -28.7777, -125.629, 79.8111, 0.34 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 17/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 18.4146, -90.6141, 18.088, 2.72 ) }
    dend_33 { pt3dadd( 21.3885, -96.1831, 25.2353, 2.72 ) }
    dend_33 { pt3dadd( 22.787, -98.5776, 28.25, 1.47 ) }
    dend_33 { pt3dadd( 24.0173, -100.701, 30.5982, 1.13 ) }
    dend_33 { pt3dadd( 28.0172, -107.67, 37.7459, 1.13 ) }
    dend_33 { pt3dadd( 28.757, -109.097, 38.9803, 3.39 ) }
    dend_33 { pt3dadd( 30.0765, -112.034, 41.0725, 1.81 ) }
    dend_33 { pt3dadd( 32.3558, -118.288, 43.6753, 0.68 ) }
    dend_33 { pt3dadd( 33.3894, -121.814, 44.6429, 0.68 ) }
    dend_33 { pt3dadd( 33.736, -123.749, 44.8348, 0.68 ) }
    dend_33 { pt3dadd( 34.2816, -129.561, 44.5745, 0.68 ) }
    dend_33 { pt3dadd( 34.4493, -133.553, 44.3544, 0.68 ) }
    dend_33 { pt3dadd( 34.4007, -137.071, 44.05, 0.68 ) }
    dend_33 { pt3dadd( 34.2593, -141.027, 43.5152, 0.68 ) }
    dend_33 { pt3dadd( 34.0881, -145.609, 43.0538, 0.68 ) }
    dend_33 { pt3dadd( 33.9999, -148.453, 42.7527, 0.68 ) }
    dend_33 { pt3dadd( 33.9565, -152.123, 42.4386, 0.68 ) }
    dend_33 { pt3dadd( 33.966, -155.377, 42.1167, 0.68 ) }
    dend_33 { pt3dadd( 34.0683, -162.396, 41.5107, 0.68 ) }
    dend_33 { pt3dadd( 34.1445, -164.014, 41.4833, 3.51 ) }
    dend_33 { pt3dadd( 34.4587, -167.784, 41.6345, 1.7 ) }
    dend_33 { pt3dadd( 34.6955, -170.698, 42.0401, 0.79 ) }
    dend_33 { pt3dadd( 34.9301, -174.101, 42.8223, 0.79 ) }
    dend_33 { pt3dadd( 35.3567, -180.402, 44.7196, 0.68 ) }
    dend_33 { pt3dadd( 35.7895, -186.317, 46.7725, 0.79 ) }
    dend_33 { pt3dadd( 35.9421, -188.089, 47.3695, 0.45 ) }
    dend_33 { pt3dadd( 36.6202, -193.114, 50.0966, 0.45 ) }
    dend_33 { pt3dadd( 36.9766, -194.944, 51.3481, 0.45 ) }
    dend_33 { pt3dadd( 37.3296, -196.273, 52.4129, 0.68 ) }
    dend_33 { pt3dadd( 38.3543, -199.364, 55.2734, 0.68 ) }
    dend_33 { pt3dadd( 38.9566, -200.95, 56.7909, 0.68 ) }
    dend_33 { pt3dadd( 43.043, -211.065, 66.6767, 2.38 ) }
    dend_33 { pt3dadd( 43.7643, -212.743, 68.4118, 1.47 ) }
    dend_33 { pt3dadd( 44.1479, -213.661, 69.3599, 0.79 ) }
    dend_33 { pt3dadd( 45.6254, -217.181, 72.9302, 0.79 ) }
    dend_33 { pt3dadd( 46.7132, -219.801, 75.4249, 0.79 ) }
    dend_33 { pt3dadd( 47.4692, -221.731, 76.9563, 2.15 ) }
    dend_33 { pt3dadd( 49.6579, -227.729, 80.0512, 0.79 ) }
    dend_33 { pt3dadd( 51.0319, -231.314, 81.7065, 0.68 ) }
    dend_33 { pt3dadd( 52.0438, -233.886, 82.5905, 0.68 ) }
    dend_33 { pt3dadd( 53.007, -236.234, 83.0884, 0.68 ) }
    dend_33 { pt3dadd( 53.3752, -237.173, 83.2023, 0.68 ) }
    dend_33 { pt3dadd( 54.3915, -240.043, 83.1408, 0.68 ) }
    dend_33 { pt3dadd( 55.3313, -243.146, 82.6665, 0.68 ) }
    dend_33 { pt3dadd( 56.5488, -248.725, 81.7162, 0.68 ) }
    dend_33 { pt3dadd( 56.6752, -249.817, 81.5228, 2.6 ) }
    dend_33 { pt3dadd( 56.75, -251.706, 81.2011, 2.26 ) }
    dend_33 { pt3dadd( 56.4718, -258.02, 80.2358, 0.45 ) }
    dend_33 { pt3dadd( 56.2067, -260.037, 79.9763, 0.45 ) }
    dend_33 { pt3dadd( 55.6207, -263.076, 79.5817, 0.45 ) }
    dend_33 { pt3dadd( 54.6077, -267.486, 79.0342, 0.45 ) }
    dend_33 { pt3dadd( 53.5745, -271.67, 78.6224, 0.45 ) }
    dend_33 { pt3dadd( 52.3652, -276.342, 78.3124, 0.45 ) }
    dend_33 { pt3dadd( 51.0216, -281.31, 78.1369, 0.45 ) }
    dend_33 { pt3dadd( 49.7234, -286.149, 77.9122, 2.38 ) }
    dend_33 { pt3dadd( 49.4253, -287.313, 77.8472, 3.51 ) }
    dend_33 { pt3dadd( 47.9713, -292.974, 77.5445, 0.57 ) }
    dend_33 { pt3dadd( 47.3256, -295.485, 77.3997, 1.24 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 75/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 17.4009, -77.2743, 21.1726, 0.45 ) }
    dend_31 { pt3dadd( 17.243, -76.6527, 19.3829, 0.45 ) }
    dend_31 { pt3dadd( 17.2675, -76.3014, 18.3327, 0.45 ) }
    dend_31 { pt3dadd( 17.391, -75.8983, 16.8216, 0.45 ) }
    dend_31 { pt3dadd( 18.0018, -75.0948, 12.9083, 0.45 ) }
    dend_31 { pt3dadd( 18.6474, -74.457, 9.42766, 0.45 ) }
    dend_31 { pt3dadd( 19.2946, -73.8401, 6.09209, 0.45 ) }
    dend_31 { pt3dadd( 19.6793, -73.1594, 2.32107, 0.45 ) }
    dend_31 { pt3dadd( 19.991, -72.5329, -1.03333, 0.45 ) }
    dend_31 { pt3dadd( 20.2568, -72.0566, -3.6268, 0.45 ) }
    dend_31 { pt3dadd( 20.8289, -71.2051, -8.45093, 0.45 ) }
    dend_31 { pt3dadd( 21.2203, -70.5926, -11.7786, 0.45 ) }
    dend_31 { pt3dadd( 21.7212, -69.18, -18.3667, 0.45 ) }
    dend_31 { pt3dadd( 21.5883, -68.6217, -20.9297, 0.45 ) }
    dend_31 { pt3dadd( 21.5555, -68.5471, -21.2131, 0.45 ) }
    dend_31 { pt3dadd( 21.4469, -68.4103, -21.7157, 0.45 ) }
    dend_31 { pt3dadd( 20.9755, -67.9234, -23.8093, 0.45 ) }
    dend_31 { pt3dadd( 19.8422, -67.3099, -28.564, 0.45 ) }
    dend_31 { pt3dadd( 19.3763, -67.1668, -31.0478, 0.45 ) }
    dend_31 { pt3dadd( 19.1407, -67.143, -32.3458, 0.45 ) }
    dend_31 { pt3dadd( 18.5901, -67.2186, -35.4313, 0.45 ) }
    dend_31 { pt3dadd( 18.2752, -67.3632, -37.3563, 0.45 ) }
    dend_31 { pt3dadd( 17.5908, -67.8195, -41.9588, 0.45 ) }
    dend_31 { pt3dadd( 17.4139, -68.0414, -44.7244, 0.45 ) }
    dend_31 { pt3dadd( 17.3905, -68.1249, -45.7776, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( 17.4129, -68.1738, -46.924, 0.45 ) }
    dend_31 { pt3dadd( 17.5338, -68.1106, -48.1239, 0.45 ) }
    dend_31 { pt3dadd( 17.8104, -67.775, -49.742, 0.45 ) }
    dend_31 { pt3dadd( 18.7011, -66.7755, -52.1596, 0.45 ) }
    dend_31 { pt3dadd( 19.0533, -66.3007, -53.3117, 0.45 ) }
    dend_31 { pt3dadd( 20.0019, -64.9007, -56.7356, 0.45 ) }
    dend_31 { pt3dadd( 20.3896, -64.2453, -58.3861, 0.45 ) }
    dend_31 { pt3dadd( 20.711, -63.7204, -59.8382, 0.45 ) }
    dend_31 { pt3dadd( 21.3313, -62.8576, -62.5931, 0.45 ) }
    dend_31 { pt3dadd( 22.932, -61.2134, -69.0132, 0.45 ) }
    dend_31 { pt3dadd( 23.1237, -61.0373, -69.7939, 0.45 ) }
    dend_31 { pt3dadd( 23.6764, -60.6323, -72.2594, 0.45 ) }
    dend_31 { pt3dadd( 24.0207, -60.4323, -74.0033, 0.45 ) }
    dend_31 { pt3dadd( 24.1684, -60.3748, -74.8149, 0.45 ) }
    dend_31 { pt3dadd( 24.719, -60.239, -77.7076, 0.45 ) }
    dend_31 { pt3dadd( 25.79, -60.0931, -79.3941, 0.45 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 16/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -61.5731, -225.652, 153.73, 0.57 ) }
    dend_68 { pt3dadd( -62.9906, -226.797, 154.485, 0.57 ) }
    dend_68 { pt3dadd( -67.0295, -229.609, 156.519, 0.57 ) }
    dend_68 { pt3dadd( -70.4191, -231.703, 158.164, 0.45 ) }
    dend_68 { pt3dadd( -73.3392, -233.373, 159.928, 0.45 ) }
    dend_68 { pt3dadd( -75.5583, -234.575, 161.384, 0.45 ) }
    dend_68 { pt3dadd( -77.4819, -235.597, 162.772, 0.45 ) }
    dend_68 { pt3dadd( -79.652, -236.652, 164.388, 0.45 ) }
    dend_68 { pt3dadd( -81.8983, -237.536, 166.194, 0.45 ) }
    dend_68 { pt3dadd( -87.7372, -239.537, 171.31, 0.45 ) }
    dend_68 { pt3dadd( -88.7919, -239.904, 172.333, 0.45 ) }
    dend_68 { pt3dadd( -90.6491, -240.671, 174.328, 0.45 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 28/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -61.5731, -225.652, 153.73, 0.57 ) }
    dend_67 { pt3dadd( -62.3864, -230.572, 155.514, 0.57 ) }
    dend_67 { pt3dadd( -62.6716, -232.248, 156.147, 0.57 ) }
    dend_67 { pt3dadd( -63.0216, -234.358, 156.916, 0.57 ) }
    dend_67 { pt3dadd( -63.5006, -237.205, 157.919, 0.57 ) }
    dend_67 { pt3dadd( -63.7997, -239.161, 158.659, 0.57 ) }
    dend_67 { pt3dadd( -63.9315, -240.151, 159.028, 0.57 ) }
    dend_67 { pt3dadd( -63.9518, -240.331, 159.108, 2.04 ) }
    dend_67 { pt3dadd( -64.418, -242.825, 159.902, 0.57 ) }
    dend_67 { pt3dadd( -64.6706, -243.679, 160.108, 0.57 ) }
    dend_67 { pt3dadd( -65.2108, -244.898, 160.313, 1.92 ) }
    dend_67 { pt3dadd( -66.763, -247.931, 161.174, 0.68 ) }
    dend_67 { pt3dadd( -67.4941, -249.249, 161.637, 0.68 ) }
    dend_67 { pt3dadd( -69.5571, -252.682, 162.888, 0.57 ) }
    dend_67 { pt3dadd( -70.8795, -254.999, 164.103, 0.57 ) }
    dend_67 { pt3dadd( -72.5911, -258.334, 166.209, 0.57 ) }
    dend_67 { pt3dadd( -74.7129, -263.438, 169.673, 0.57 ) }
    dend_67 { pt3dadd( -74.9532, -264.225, 170.251, 0.57 ) }
    dend_67 { pt3dadd( -75.2834, -265.942, 171.468, 0.45 ) }
    dend_67 { pt3dadd( -75.7464, -272.752, 176.498, 0.45 ) }
    dend_67 { pt3dadd( -75.765, -273.875, 177.301, 0.45 ) }
    dend_67 { pt3dadd( -75.8094, -277.309, 179.627, 0.45 ) }
    dend_67 { pt3dadd( -75.9506, -279.929, 181.098, 0.45 ) }
    dend_67 { pt3dadd( -76.1255, -282.061, 182.458, 0.45 ) }
    dend_67 { pt3dadd( -76.7901, -286.244, 185.266, 0.45 ) }
    dend_67 { pt3dadd( -77.2706, -287.897, 186.402, 0.45 ) }
    dend_67 { pt3dadd( -77.7558, -289.279, 187.537, 0.45 ) }
    dend_67 { pt3dadd( -77.9524, -289.756, 188.003, 0.45 ) }
    dend_67 { pt3dadd( -79.5054, -293.281, 191.87, 0.11 ) }
    dend_67 { pt3dadd( -80.394, -295.216, 194.178, 0.23 ) }
    dend_67 { pt3dadd( -81.7341, -298.102, 197.439, 0.23 ) }
    dend_67 { pt3dadd( -82.2485, -299.338, 198.932, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 60/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 73.4017, -77.1745, 21.4697, 0.34 ) }
    dend_52 { pt3dadd( 75.46, -80.9381, 21.9232, 0.34 ) }
    dend_52 { pt3dadd( 77.9377, -85.4684, 22.4692, 0.34 ) }
    dend_52 { pt3dadd( 80.3696, -89.9154, 23.0051, 0.34 ) }
    dend_52 { pt3dadd( 82.1175, -93.1115, 23.3903, 0.34 ) }
    dend_52 { pt3dadd( 83.0607, -94.8361, 23.5982, 0.34 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 66/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 73.4017, -77.1745, 21.4697, 0.45 ) }
    dend_51 { pt3dadd( 75.703, -76.3518, 19.3688, 0.45 ) }
    dend_51 { pt3dadd( 77.379, -75.7509, 17.6949, 0.45 ) }
    dend_51 { pt3dadd( 79.9123, -74.8829, 15.1503, 0.45 ) }
    dend_51 { pt3dadd( 81.6811, -74.2349, 13.4146, 0.45 ) }
    dend_51 { pt3dadd( 85.2329, -72.9096, 9.9856, 0.45 ) }
    dend_51 { pt3dadd( 87.6547, -72.0742, 7.74751, 0.45 ) }
    dend_51 { pt3dadd( 89.5623, -71.4937, 6.13512, 0.45 ) }
    dend_51 { pt3dadd( 92.1585, -70.7916, 3.94766, 0.45 ) }
    dend_51 { pt3dadd( 95.1205, -70.0199, 1.34027, 0.45 ) }
    dend_51 { pt3dadd( 95.4732, -69.9253, 0.995797, 1.58 ) }
    dend_51 { pt3dadd( 98.1013, -69.1718, -1.63769, 0.34 ) }
    dend_51 { pt3dadd( 100.153, -68.6668, -3.88625, 0.34 ) }
    dend_51 { pt3dadd( 103.407, -67.9523, -7.96231, 0.34 ) }
    dend_51 { pt3dadd( 105.13, -67.6512, -10.4335, 0.34 ) }
    dend_51 { pt3dadd( 106.892, -67.7469, -13.0055, 0.34 ) }
    dend_51 { pt3dadd( 107.964, -67.9888, -14.6789, 0.34 ) }
    dend_51 { pt3dadd( 109.182, -68.5014, -16.4808, 0.34 ) }
    dend_51 { pt3dadd( 111.111, -69.7896, -19.0255, 0.34 ) }
    dend_51 { pt3dadd( 112.713, -71.0317, -20.6899, 0.34 ) }
    dend_51 { pt3dadd( 117.319, -74.821, -24.7644, 0.34 ) }
    dend_51 { pt3dadd( 119.764, -76.9709, -26.8974, 0.34 ) }
    dend_51 { pt3dadd( 122.302, -79.2981, -29.1075, 0.34 ) }
    dend_51 { pt3dadd( 126.241, -83.0141, -32.3733, 0.34 ) }
    dend_51 { pt3dadd( 128.624, -85.4035, -34.2581, 0.34 ) }
    dend_51 { pt3dadd( 131.162, -88.0684, -36.2789, 0.34 ) }
    dend_51 { pt3dadd( 133.748, -90.6752, -38.1235, 0.34 ) }
    dend_51 { pt3dadd( 136.426, -93.1548, -39.7999, 0.34 ) }
    dend_51 { pt3dadd( 137.718, -94.164, -40.5175, 0.34 ) }
    dend_51 { pt3dadd( 139.384, -95.2487, -41.1995, 0.34 ) }
    dend_51 { pt3dadd( 141.38, -96.4625, -41.858, 0.34 ) }
    dend_51 { pt3dadd( 142.984, -97.3358, -42.288, 0.34 ) }
    dend_51 { pt3dadd( 144.896, -98.2587, -42.73, 0.34 ) }
    dend_51 { pt3dadd( 151.566, -101.345, -44.3294, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( 154.713, -102.708, -45.1302, 0.34 ) }
    dend_51 { pt3dadd( 157.878, -104.049, -45.9591, 0.34 ) }
    dend_51 { pt3dadd( 160.797, -105.311, -46.7354, 0.34 ) }
    dend_51 { pt3dadd( 165.58, -107.471, -48.1214, 0.34 ) }
    dend_51 { pt3dadd( 169.323, -109.166, -49.2459, 0.34 ) }
    dend_51 { pt3dadd( 171.653, -110.189, -50.0091, 0.34 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 6/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -28.7777, -125.629, 79.8111, 0.34 ) }
    dend_40 { pt3dadd( -29.4365, -126.195, 80.5494, 0.34 ) }
    dend_40 { pt3dadd( -30.7968, -127.622, 81.8202, 0.34 ) }
    dend_40 { pt3dadd( -31.34, -128.261, 82.2445, 2.04 ) }
    dend_40 { pt3dadd( -31.875, -128.926, 82.6305, 1.13 ) }
    dend_40 { pt3dadd( -32.6962, -130.087, 83.2504, 0.79 ) }
    dend_40 { pt3dadd( -33.2712, -130.949, 83.542, 0.57 ) }
    dend_40 { pt3dadd( -34.322, -132.534, 83.8589, 0.57 ) }
    dend_40 { pt3dadd( -36.5901, -135.929, 84.2411, 0.57 ) }
    dend_40 { pt3dadd( -37.6411, -137.399, 84.4951, 0.57 ) }
    dend_40 { pt3dadd( -39.3359, -139.634, 85.0079, 0.57 ) }
    dend_40 { pt3dadd( -42.4268, -143.477, 86.1089, 0.57 ) }
    dend_40 { pt3dadd( -44.2185, -145.496, 86.7506, 0.57 ) }
    dend_40 { pt3dadd( -45.088, -146.388, 87.0661, 0.57 ) }
    dend_40 { pt3dadd( -48.7095, -149.842, 88.4652, 0.57 ) }
    dend_40 { pt3dadd( -49.7745, -150.817, 88.9156, 0.57 ) }
    dend_40 { pt3dadd( -50.7403, -151.72, 89.4259, 0.57 ) }
    dend_40 { pt3dadd( -52.1879, -153.201, 90.3746, 0.57 ) }
    dend_40 { pt3dadd( -53.5938, -154.81, 91.4152, 0.57 ) }
    dend_40 { pt3dadd( -54.4933, -155.937, 92.1544, 0.57 ) }
    dend_40 { pt3dadd( -55.5249, -157.455, 93.0887, 0.57 ) }
    dend_40 { pt3dadd( -57.9767, -161.341, 95.5984, 0.57 ) }
    dend_40 { pt3dadd( -59.2305, -163.383, 96.9672, 0.57 ) }
    dend_40 { pt3dadd( -60.8635, -166.119, 98.83, 0.57 ) }
    dend_40 { pt3dadd( -62.1345, -168.257, 100.283, 0.57 ) }
    dend_40 { pt3dadd( -63.4683, -170.407, 101.732, 0.57 ) }
    dend_40 { pt3dadd( -64.3673, -171.878, 102.723, 0.57 ) }
    dend_40 { pt3dadd( -65.2672, -173.342, 103.641, 0.57 ) }
    dend_40 { pt3dadd( -66.3837, -175.159, 104.79, 0.57 ) }
    dend_40 { pt3dadd( -67.0393, -176.198, 105.382, 0.57 ) }
    dend_40 { pt3dadd( -67.7988, -177.342, 106.038, 0.57 ) }
    dend_40 { pt3dadd( -69.3416, -179.588, 107.377, 0.57 ) }
    dend_40 { pt3dadd( -70.802, -181.772, 108.536, 0.57 ) }
    dend_40 { pt3dadd( -71.8508, -183.361, 109.275, 0.57 ) }
    dend_40 { pt3dadd( -73.1832, -185.367, 110.087, 0.57 ) }
    dend_40 { pt3dadd( -74.2837, -187.059, 110.665, 0.57 ) }
    dend_40 { pt3dadd( -75.038, -188.228, 110.993, 0.57 ) }
    dend_40 { pt3dadd( -76.5452, -190.489, 111.265, 0.57 ) }
    dend_40 { pt3dadd( -77.7085, -192.222, 111.314, 0.57 ) }
    dend_40 { pt3dadd( -79.1091, -194.225, 111.041, 0.57 ) }
    dend_40 { pt3dadd( -80.365, -195.984, 110.491, 0.57 ) }
    dend_40 { pt3dadd( -81.7507, -197.851, 109.676, 0.57 ) }
    dend_40 { pt3dadd( -84.0538, -200.737, 108.034, 0.57 ) }
    dend_40 { pt3dadd( -84.9454, -201.784, 107.41, 0.57 ) }
    dend_40 { pt3dadd( -88.1198, -205.285, 105.253, 0.57 ) }
    dend_40 { pt3dadd( -90.4486, -207.746, 103.682, 0.57 ) }
    dend_40 { pt3dadd( -91.2106, -208.568, 103.201, 0.57 ) }
    dend_40 { pt3dadd( -93.229, -210.927, 102.161, 0.57 ) }
    dend_40 { pt3dadd( -95.215, -213.812, 101.898, 0.57 ) }
    dend_40 { pt3dadd( -96.2823, -215.79, 102.207, 0.57 ) }
    dend_40 { pt3dadd( -96.5974, -216.538, 102.511, 0.57 ) }
    dend_40 { pt3dadd( -97.25, -218.266, 103.365, 0.57 ) }
    dend_40 { pt3dadd( -97.6224, -219.274, 103.856, 0.57 ) }
    dend_40 { pt3dadd( -98.7176, -222.66, 105.29, 0.57 ) }
    dend_40 { pt3dadd( -99.443, -225.023, 105.878, 0.57 ) }
    dend_40 { pt3dadd( -99.8168, -226.234, 105.968, 0.45 ) }
    dend_40 { pt3dadd( -100.158, -227.386, 105.921, 0.45 ) }
    dend_40 { pt3dadd( -100.642, -229.297, 105.523, 0.45 ) }
    dend_40 { pt3dadd( -101.105, -231.906, 104.458, 0.45 ) }
    dend_40 { pt3dadd( -101.331, -233.995, 103.243, 0.45 ) }
    dend_40 { pt3dadd( -101.531, -237.262, 101.12, 0.45 ) }
    dend_40 { pt3dadd( -101.591, -238.971, 99.9801, 0.45 ) }
    dend_40 { pt3dadd( -101.571, -241.479, 98.4373, 0.45 ) }
    dend_40 { pt3dadd( -101.448, -244.248, 96.9377, 0.45 ) }
    dend_40 { pt3dadd( -101.392, -246.311, 96.0811, 0.45 ) }
    dend_40 { pt3dadd( -101.374, -247.123, 95.8597, 0.45 ) }
    dend_40 { pt3dadd( -101.386, -248.548, 95.6989, 0.45 ) }
    dend_40 { pt3dadd( -101.572, -251.44, 95.6336, 0.45 ) }
    dend_40 { pt3dadd( -101.794, -253.405, 95.8231, 0.45 ) }
    dend_40 { pt3dadd( -102.228, -256.035, 96.2984, 0.45 ) }
    dend_40 { pt3dadd( -102.714, -258.361, 97.0062, 0.45 ) }
    dend_40 { pt3dadd( -103.272, -260.589, 97.8816, 0.45 ) }
    dend_40 { pt3dadd( -103.695, -261.95, 98.6049, 0.45 ) }
    dend_40 { pt3dadd( -104.013, -262.818, 99.2614, 0.45 ) }
    dend_40 { pt3dadd( -104.329, -263.682, 100.166, 0.45 ) }
    dend_40 { pt3dadd( -105.219, -266.654, 103.558, 0.45 ) }
    dend_40 { pt3dadd( -105.385, -267.267, 104.26, 0.45 ) }
    dend_40 { pt3dadd( -105.562, -268.328, 105.706, 0.45 ) }
    dend_40 { pt3dadd( -105.72, -270.35, 108.488, 0.45 ) }
    dend_40 { pt3dadd( -105.701, -272.221, 110.983, 0.45 ) }
    dend_40 { pt3dadd( -105.484, -274.704, 113.999, 0.45 ) }
    dend_40 { pt3dadd( -105.313, -276.084, 115.378, 0.45 ) }
    dend_40 { pt3dadd( -104.669, -283.052, 121.475, 0.45 ) }
    dend_40 { pt3dadd( -104.538, -284.946, 122.868, 0.45 ) }
    dend_40 { pt3dadd( -104.464, -287.554, 124.115, 0.45 ) }
    dend_40 { pt3dadd( -104.467, -291.357, 125.24, 0.45 ) }
    dend_40 { pt3dadd( -104.517, -297.256, 126.303, 0.45 ) }
    dend_40 { pt3dadd( -104.564, -302.191, 126.694, 0.45 ) }
    dend_40 { pt3dadd( -104.649, -306.679, 126.532, 0.45 ) }
    dend_40 { pt3dadd( -104.735, -316.969, 125.801, 0.45 ) }
    dend_40 { pt3dadd( -104.735, -318.502, 125.621, 0.45 ) }
    dend_40 { pt3dadd( -104.611, -322.286, 125.041, 0.45 ) }
    dend_40 { pt3dadd( -104.418, -324.742, 124.419, 0.45 ) }
    dend_40 { pt3dadd( -103.989, -328.156, 123.428, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_40 { pt3dadd( -103.606, -330.758, 122.673, 0.45 ) }
    dend_40 { pt3dadd( -103.416, -332.138, 122.437, 0.45 ) }
    dend_40 { pt3dadd( -103.235, -334.102, 122.125, 0.45 ) }
    dend_40 { pt3dadd( -102.896, -341.398, 121.387, 0.45 ) }
    dend_40 { pt3dadd( -102.79, -345.218, 121.601, 0.45 ) }
    dend_40 { pt3dadd( -102.767, -346.708, 121.936, 0.45 ) }
    dend_40 { pt3dadd( -102.777, -351.951, 123.641, 0.45 ) }
    dend_40 { pt3dadd( -102.812, -354.462, 124.681, 0.45 ) }
    dend_40 { pt3dadd( -103.032, -358.361, 126.538, 0.45 ) }
    dend_40 { pt3dadd( -103.363, -362.748, 129.271, 0.45 ) }
    dend_40 { pt3dadd( -103.529, -364.719, 130.336, 0.45 ) }
    dend_40 { pt3dadd( -103.591, -367.499, 131.489, 0.45 ) }
    dend_40 { pt3dadd( -103.433, -368.724, 131.761, 0.45 ) }
    dend_40 { pt3dadd( -102.312, -372.983, 131.974, 0.45 ) }
    dend_40 { pt3dadd( -100.617, -377.946, 131.438, 0.45 ) }
    dend_40 { pt3dadd( -97.4038, -385.577, 129.589, 0.45 ) }
    dend_40 { pt3dadd( -94.7074, -390.502, 128.063, 0.45 ) }
    dend_40 { pt3dadd( -92.7507, -393.241, 127.059, 0.45 ) }
    dend_40 { pt3dadd( -92.3304, -393.727, 126.842, 0.45 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 19/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -28.7777, -125.629, 79.8111, 0.34 ) }
    dend_39 { pt3dadd( -26.5608, -124.198, 80.6371, 0.34 ) }
    dend_39 { pt3dadd( -24.972, -123.173, 81.2291, 0.34 ) }
    dend_39 { pt3dadd( -18.8158, -119.2, 83.523, 0.34 ) }
    dend_39 { pt3dadd( -17.1178, -118.105, 84.1557, 0.34 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 24/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 47.3256, -295.485, 77.3997, 0.57 ) }
    dend_37 { pt3dadd( 46.3613, -296.565, 77.6561, 0.57 ) }
    dend_37 { pt3dadd( 44.9353, -298.464, 77.6536, 0.57 ) }
    dend_37 { pt3dadd( 44.2244, -299.585, 77.5422, 0.57 ) }
    dend_37 { pt3dadd( 43.387, -301.175, 77.1087, 0.57 ) }
    dend_37 { pt3dadd( 42.6626, -302.753, 76.6145, 0.57 ) }
    dend_37 { pt3dadd( 41.405, -305.628, 75.6722, 0.57 ) }
    dend_37 { pt3dadd( 40.7636, -307.264, 75.0643, 0.57 ) }
    dend_37 { pt3dadd( 40.0749, -309.149, 74.3029, 0.57 ) }
    dend_37 { pt3dadd( 38.8334, -312.566, 72.947, 0.57 ) }
    dend_37 { pt3dadd( 37.4102, -316.335, 71.4446, 0.57 ) }
    dend_37 { pt3dadd( 36.4146, -318.856, 70.5422, 0.57 ) }
    dend_37 { pt3dadd( 36.0475, -319.724, 70.28, 2.15 ) }
    dend_37 { pt3dadd( 35.6952, -320.487, 70.0817, 1.36 ) }
    dend_37 { pt3dadd( 34.8772, -322.05, 69.843, 0.68 ) }
    dend_37 { pt3dadd( 34.3776, -322.882, 69.8631, 0.68 ) }
    dend_37 { pt3dadd( 33.7473, -323.816, 70.0145, 0.57 ) }
    dend_37 { pt3dadd( 33.3737, -324.337, 70.1695, 0.57 ) }
    dend_37 { pt3dadd( 32.3788, -325.712, 70.6505, 0.57 ) }
    dend_37 { pt3dadd( 31.2575, -327.218, 71.2182, 0.57 ) }
    dend_37 { pt3dadd( 30.5203, -328.223, 71.5898, 0.57 ) }
    dend_37 { pt3dadd( 29.6546, -329.515, 71.9477, 0.57 ) }
    dend_37 { pt3dadd( 28.8673, -330.776, 72.1039, 0.57 ) }
    dend_37 { pt3dadd( 28.5762, -331.284, 72.1117, 0.57 ) }
    dend_37 { pt3dadd( 28.1745, -332.065, 72.0362, 0.57 ) }
    dend_37 { pt3dadd( 27.6542, -333.137, 71.8597, 0.57 ) }
    dend_37 { pt3dadd( 26.1307, -336.287, 71.2503, 0.57 ) }
    dend_37 { pt3dadd( 25.1978, -338.27, 70.7557, 0.57 ) }
    dend_37 { pt3dadd( 24.4214, -339.945, 70.2984, 0.57 ) }
    dend_37 { pt3dadd( 23.426, -341.991, 69.7124, 0.57 ) }
    dend_37 { pt3dadd( 22.0966, -344.589, 69.0208, 0.57 ) }
    dend_37 { pt3dadd( 20.2728, -347.802, 68.2095, 0.57 ) }
    dend_37 { pt3dadd( 19.4971, -349.061, 67.8621, 1.7 ) }
    dend_37 { pt3dadd( 18.7838, -350.167, 67.5475, 1.7 ) }
    dend_37 { pt3dadd( 18.0846, -351.208, 67.1713, 0.68 ) }
    dend_37 { pt3dadd( 16.7885, -353.027, 66.4114, 0.68 ) }
    dend_37 { pt3dadd( 15.9958, -354.164, 65.8971, 0.68 ) }
    dend_37 { pt3dadd( 14.7725, -356.004, 65.0855, 0.68 ) }
    dend_37 { pt3dadd( 14.4505, -356.534, 64.852, 1.7 ) }
    dend_37 { pt3dadd( 13.9859, -357.454, 64.4368, 1.7 ) }
    dend_37 { pt3dadd( 13.7078, -358.124, 64.1391, 1.7 ) }
    dend_37 { pt3dadd( 13.4227, -358.982, 63.775, 0.68 ) }
    dend_37 { pt3dadd( 12.8254, -361.181, 62.9584, 0.68 ) }
    dend_37 { pt3dadd( 12.2794, -363.419, 62.2434, 0.68 ) }
    dend_37 { pt3dadd( 11.8635, -365.292, 61.7528, 0.68 ) }
    dend_37 { pt3dadd( 11.6835, -366.212, 61.5561, 0.68 ) }
    dend_37 { pt3dadd( 11.3003, -368.413, 61.1844, 0.68 ) }
    dend_37 { pt3dadd( 10.9605, -370.498, 60.9315, 0.68 ) }
    dend_37 { pt3dadd( 10.8047, -371.557, 60.8776, 0.68 ) }
    dend_37 { pt3dadd( 10.4259, -374.128, 60.9301, 0.68 ) }
    dend_37 { pt3dadd( 10.3214, -374.882, 60.9689, 0.68 ) }
    dend_37 { pt3dadd( 10.2004, -375.798, 61.0321, 1.02 ) }
    dend_37 { pt3dadd( 10.088, -376.744, 61.095, 0.45 ) }
    dend_37 { pt3dadd( 9.99086, -378.206, 61.1596, 0.45 ) }
    dend_37 { pt3dadd( 9.98296, -378.646, 61.151, 0.45 ) }
    dend_37 { pt3dadd( 9.98096, -379.963, 61.0717, 0.45 ) }
    dend_37 { pt3dadd( 9.97426, -381.519, 60.9858, 0.45 ) }
    dend_37 { pt3dadd( 9.98156, -383.293, 60.8935, 0.45 ) }
    dend_37 { pt3dadd( 10.0075, -385.335, 60.7872, 0.45 ) }
    dend_37 { pt3dadd( 10.041, -387.17, 60.7155, 0.45 ) }
    dend_37 { pt3dadd( 10.0839, -390.031, 60.6033, 0.45 ) }
    dend_37 { pt3dadd( 10.1118, -390.901, 60.5745, 0.45 ) }
    dend_37 { pt3dadd( 10.1704, -391.972, 60.5461, 1.47 ) }
    dend_37 { pt3dadd( 10.1923, -392.34, 60.5374, 1.47 ) }
    dend_37 { pt3dadd( 10.3065, -394.12, 60.4296, 0.68 ) }
    dend_37 { pt3dadd( 10.4578, -396.246, 60.2588, 0.57 ) }
    dend_37 { pt3dadd( 10.6073, -398.16, 60.1357, 0.57 ) }
    dend_37 { pt3dadd( 10.7137, -399.969, 60.1023, 0.57 ) }
    dend_37 { pt3dadd( 10.7347, -400.486, 60.1085, 0.57 ) }
    dend_37 { pt3dadd( 10.7661, -402.097, 60.2391, 0.57 ) }
    dend_37 { pt3dadd( 10.7383, -403.906, 60.6195, 0.57 ) }
    dend_37 { pt3dadd( 10.7267, -405.476, 61.1189, 1.7 ) }
    dend_37 { pt3dadd( 10.7448, -407.974, 62.0221, 0.68 ) }
    dend_37 { pt3dadd( 10.7887, -409.215, 62.507, 0.68 ) }
    dend_37 { pt3dadd( 10.9259, -411.501, 63.4034, 0.68 ) }
    dend_37 { pt3dadd( 11.1661, -414.84, 64.6198, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_37 { pt3dadd( 11.3341, -417.154, 65.3017, 0.68 ) }
    dend_37 { pt3dadd( 11.3895, -418.031, 65.4884, 2.15 ) }
    dend_37 { pt3dadd( 11.419, -418.57, 65.5646, 2.15 ) }
    dend_37 { pt3dadd( 11.5102, -420.369, 65.6449, 0.68 ) }
    dend_37 { pt3dadd( 11.5535, -422.452, 65.592, 0.68 ) }
    dend_37 { pt3dadd( 11.5443, -423.795, 65.548, 0.68 ) }
    dend_37 { pt3dadd( 11.4568, -425.646, 65.563, 0.68 ) }
    dend_37 { pt3dadd( 11.3705, -427.621, 65.5742, 0.68 ) }
    dend_37 { pt3dadd( 11.3255, -429.548, 65.5856, 0.68 ) }
    dend_37 { pt3dadd( 11.3677, -432.526, 65.6164, 0.68 ) }
    dend_37 { pt3dadd( 11.4857, -434.456, 65.6454, 0.68 ) }
    dend_37 { pt3dadd( 11.6212, -435.918, 65.6298, 0.68 ) }
    dend_37 { pt3dadd( 11.8927, -438.104, 65.5271, 0.68 ) }
    dend_37 { pt3dadd( 12.0279, -438.969, 65.4551, 0.68 ) }
    dend_37 { pt3dadd( 12.4441, -441.148, 65.1896, 0.68 ) }
    dend_37 { pt3dadd( 12.7588, -442.53, 64.9452, 0.68 ) }
    dend_37 { pt3dadd( 13.1519, -444.263, 64.6266, 0.68 ) }
    dend_37 { pt3dadd( 13.4796, -445.942, 64.3718, 0.68 ) }
    dend_37 { pt3dadd( 13.6761, -447.317, 64.2264, 0.68 ) }
    dend_37 { pt3dadd( 13.7721, -448.206, 64.1271, 0.68 ) }
    dend_37 { pt3dadd( 13.832, -449.194, 64.0625, 0.68 ) }
    dend_37 { pt3dadd( 13.8433, -449.557, 64.058, 0.68 ) }
    dend_37 { pt3dadd( 13.8618, -451.258, 64.1052, 0.68 ) }
    dend_37 { pt3dadd( 13.8807, -453.222, 64.2337, 0.68 ) }
    dend_37 { pt3dadd( 13.9236, -454.639, 64.3594, 0.68 ) }
    dend_37 { pt3dadd( 14.0238, -456.61, 64.5458, 0.68 ) }
    dend_37 { pt3dadd( 14.154, -458.487, 64.7756, 0.68 ) }
    dend_37 { pt3dadd( 14.1936, -458.988, 64.8699, 0.68 ) }
    dend_37 { pt3dadd( 14.3102, -460.237, 65.1519, 0.57 ) }
    dend_37 { pt3dadd( 14.4219, -461.359, 65.4096, 0.57 ) }
    dend_37 { pt3dadd( 14.6362, -463.445, 65.8924, 0.57 ) }
    dend_37 { pt3dadd( 14.8569, -465.398, 66.4162, 0.57 ) }
    dend_37 { pt3dadd( 15.0575, -467.549, 67.0848, 0.57 ) }
    dend_37 { pt3dadd( 15.2453, -469.709, 67.7612, 0.57 ) }
    dend_37 { pt3dadd( 15.4055, -471.692, 68.2919, 0.57 ) }
    dend_37 { pt3dadd( 15.5352, -473.075, 68.566, 1.47 ) }
    dend_37 { pt3dadd( 15.8279, -475.87, 68.9595, 0.45 ) }
    dend_37 { pt3dadd( 15.9773, -477.224, 69.0411, 0.45 ) }
    dend_37 { pt3dadd( 16.3652, -480.057, 69.0368, 0.45 ) }
    dend_37 { pt3dadd( 16.7532, -482.363, 69.0559, 0.45 ) }
    dend_37 { pt3dadd( 17.2894, -485.008, 69.0602, 0.45 ) }
    dend_37 { pt3dadd( 17.9466, -487.085, 69.1341, 0.45 ) }
    dend_37 { pt3dadd( 17.4506, -486.544, 68.0204, 0.45 ) }
    dend_37 { pt3dadd( 16.3069, -484.781, 66.259, 0.45 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 44/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 47.3256, -295.485, 77.3997, 0.57 ) }
    dend_34 { pt3dadd( 46.9372, -297.353, 77.5025, 0.57 ) }
    dend_34 { pt3dadd( 46.6777, -298.596, 77.569, 0.57 ) }
    dend_34 { pt3dadd( 46.3373, -300.338, 77.6537, 0.57 ) }
    dend_34 { pt3dadd( 45.8229, -302.971, 77.7816, 0.57 ) }
    dend_34 { pt3dadd( 45.2083, -306.118, 77.9345, 0.57 ) }
    dend_34 { pt3dadd( 44.8273, -308.068, 78.0292, 2.15 ) }
    dend_34 { pt3dadd( 44.4687, -309.786, 78.102, 2.72 ) }
    dend_34 { pt3dadd( 44.2164, -311.125, 78.1742, 2.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 53/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 83.0607, -94.8361, 23.5982, 0.45 ) }
    dend_54 { pt3dadd( 88.5497, -95.8856, 21.9644, 0.45 ) }
    dend_54 { pt3dadd( 89.8858, -96.1043, 21.6772, 0.45 ) }
    dend_54 { pt3dadd( 92.3806, -96.3303, 21.2222, 0.45 ) }
    dend_54 { pt3dadd( 95.6921, -96.5555, 20.6633, 0.45 ) }
    dend_54 { pt3dadd( 98.7224, -96.7699, 20.1707, 0.45 ) }
    dend_54 { pt3dadd( 102.687, -96.97, 19.5041, 0.45 ) }
    dend_54 { pt3dadd( 104.09, -96.9731, 19.3372, 0.45 ) }
    dend_54 { pt3dadd( 108.039, -96.7947, 18.7052, 0.45 ) }
    dend_54 { pt3dadd( 111.092, -96.48, 18.0775, 0.45 ) }
    dend_54 { pt3dadd( 113.471, -96.0639, 17.4392, 0.45 ) }
    dend_54 { pt3dadd( 116.715, -95.1937, 16.1504, 0.45 ) }
    dend_54 { pt3dadd( 118.79, -94.4503, 15.0653, 0.45 ) }
    dend_54 { pt3dadd( 121.018, -93.5249, 13.7511, 0.45 ) }
    dend_54 { pt3dadd( 123.233, -92.5413, 12.1655, 0.45 ) }
    dend_54 { pt3dadd( 125.621, -91.3782, 10.1128, 0.45 ) }
    dend_54 { pt3dadd( 128.927, -89.6311, 7.02231, 0.45 ) }
    dend_54 { pt3dadd( 130.246, -88.9307, 5.67649, 0.45 ) }
    dend_54 { pt3dadd( 131.624, -88.2185, 4.18016, 0.45 ) }
    dend_54 { pt3dadd( 134.949, -86.6673, 0.435582, 0.45 ) }
    dend_54 { pt3dadd( 136.324, -86.1532, -1.29287, 0.45 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 74/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 83.0607, -94.8361, 23.5982, 0.34 ) }
    dend_53 { pt3dadd( 82.7511, -98.2252, 23.2121, 0.34 ) }
    dend_53 { pt3dadd( 82.5434, -99.5344, 23.0328, 0.34 ) }
    dend_53 { pt3dadd( 82.115, -101.726, 22.721, 0.34 ) }
    dend_53 { pt3dadd( 81.2773, -105.724, 22.1396, 0.34 ) }
    dend_53 { pt3dadd( 80.3543, -109.36, 21.478, 0.34 ) }
    dend_53 { pt3dadd( 79.2539, -113.112, 20.7809, 0.34 ) }
    dend_53 { pt3dadd( 77.706, -116.885, 20.116, 0.34 ) }
    dend_53 { pt3dadd( 77.4567, -117.363, 20.0362, 0.34 ) }
    dend_53 { pt3dadd( 77.2814, -117.625, 19.9872, 1.58 ) }
    dend_53 { pt3dadd( 74.9698, -120.476, 19.5715, 0.45 ) }
    dend_53 { pt3dadd( 73.8776, -121.746, 19.3317, 0.45 ) }
    dend_53 { pt3dadd( 71.099, -124.974, 18.5659, 0.45 ) }
    dend_53 { pt3dadd( 70.1801, -126.113, 18.2802, 0.45 ) }
    dend_53 { pt3dadd( 67.9085, -129.214, 17.4774, 0.45 ) }
    dend_53 { pt3dadd( 67.158, -130.344, 17.2122, 0.45 ) }
    dend_53 { pt3dadd( 65.2919, -133.602, 16.5504, 0.45 ) }
    dend_53 { pt3dadd( 64.4881, -135.2, 16.1693, 0.45 ) }
    dend_53 { pt3dadd( 63.1548, -138.376, 15.4757, 0.45 ) }
    dend_53 { pt3dadd( 62.3663, -140.401, 15.0842, 0.45 ) }
    dend_53 { pt3dadd( 61.3972, -143.111, 14.6909, 0.45 ) }
    dend_53 { pt3dadd( 59.9742, -147.244, 14.044, 0.45 ) }
    dend_53 { pt3dadd( 58.982, -150.184, 13.6537, 0.45 ) }
    dend_53 { pt3dadd( 57.7458, -153.978, 13.1594, 0.45 ) }
    dend_53 { pt3dadd( 56.7199, -157.055, 12.8411, 0.45 ) }
    dend_53 { pt3dadd( 55.8274, -159.726, 12.5448, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_53 { pt3dadd( 54.7729, -162.793, 12.1902, 0.45 ) }
    dend_53 { pt3dadd( 53.7635, -165.569, 11.9393, 0.45 ) }
    dend_53 { pt3dadd( 53.0711, -167.243, 11.8567, 0.45 ) }
    dend_53 { pt3dadd( 51.8193, -169.906, 11.5617, 0.45 ) }
    dend_53 { pt3dadd( 51.3525, -170.866, 11.447, 0.45 ) }
    dend_53 { pt3dadd( 49.9792, -173.551, 11.1026, 0.45 ) }
    dend_53 { pt3dadd( 49.1544, -175.132, 10.9319, 0.45 ) }
    dend_53 { pt3dadd( 47.9724, -177.382, 10.6443, 0.45 ) }
    dend_53 { pt3dadd( 45.7455, -181.632, 9.7429, 0.45 ) }
    dend_53 { pt3dadd( 44.4727, -184.184, 9.06657, 0.45 ) }
    dend_53 { pt3dadd( 43.777, -185.666, 8.65326, 0.45 ) }
    dend_53 { pt3dadd( 43.2622, -186.95, 8.31146, 0.45 ) }
    dend_53 { pt3dadd( 42.8751, -188.014, 7.99767, 0.45 ) }
    dend_53 { pt3dadd( 41.3353, -192.543, 6.72835, 0.45 ) }
    dend_53 { pt3dadd( 40.6323, -194.647, 6.2165, 0.45 ) }
    dend_53 { pt3dadd( 40.2223, -195.902, 5.87607, 0.45 ) }
    dend_53 { pt3dadd( 39.5226, -198.12, 5.30516, 0.45 ) }
    dend_53 { pt3dadd( 38.3516, -201.711, 4.01208, 0.45 ) }
    dend_53 { pt3dadd( 37.8018, -203.401, 3.36253, 0.45 ) }
    dend_53 { pt3dadd( 37.4176, -204.634, 2.9357, 0.45 ) }
    dend_53 { pt3dadd( 36.9774, -206.033, 2.46028, 0.45 ) }
    dend_53 { pt3dadd( 36.0779, -208.863, 1.47798, 0.45 ) }
    dend_53 { pt3dadd( 34.1828, -215.55, -0.106815, 0.45 ) }
    dend_53 { pt3dadd( 33.5554, -218.268, -0.220835, 0.45 ) }
    dend_53 { pt3dadd( 32.9823, -221.194, 0.120768, 0.45 ) }
    dend_53 { pt3dadd( 32.3814, -224.361, 1.20413, 0.45 ) }
    dend_53 { pt3dadd( 32.109, -225.683, 1.94811, 0.45 ) }
    dend_53 { pt3dadd( 30.3354, -233.234, 7.9209, 0.45 ) }
    dend_53 { pt3dadd( 29.766, -235.347, 9.98089, 0.45 ) }
    dend_53 { pt3dadd( 29.6458, -235.709, 10.3615, 0.45 ) }
    dend_53 { pt3dadd( 28.7868, -237.824, 12.5561, 0.45 ) }
    dend_53 { pt3dadd( 28.0346, -239.497, 14.0991, 0.45 ) }
    dend_53 { pt3dadd( 27.0609, -241.461, 15.4114, 0.45 ) }
    dend_53 { pt3dadd( 26.8299, -241.886, 15.5474, 0.45 ) }
    dend_53 { pt3dadd( 26.0709, -243.328, 15.7811, 0.45 ) }
    dend_53 { pt3dadd( 24.9009, -245.707, 15.9357, 0.45 ) }
    dend_53 { pt3dadd( 24.0481, -247.581, 15.914, 0.45 ) }
    dend_53 { pt3dadd( 22.8211, -250.444, 15.7879, 0.45 ) }
    dend_53 { pt3dadd( 21.5851, -253.516, 15.6043, 0.45 ) }
    dend_53 { pt3dadd( 19.6995, -258.872, 15.3853, 0.45 ) }
    dend_53 { pt3dadd( 19.1863, -260.486, 15.3423, 0.45 ) }
    dend_53 { pt3dadd( 18.6965, -262.108, 15.3101, 0.45 ) }
    dend_53 { pt3dadd( 18.1516, -263.995, 15.3102, 0.45 ) }
    dend_53 { pt3dadd( 17.6281, -266.089, 15.4304, 0.45 ) }
    dend_53 { pt3dadd( 16.8, -270.425, 15.8397, 0.45 ) }
    dend_53 { pt3dadd( 16.6925, -271.504, 16.0852, 0.45 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 46/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 44.2164, -311.125, 78.1742, 0.45 ) }
    dend_36 { pt3dadd( 43.6714, -313.815, 77.4702, 0.45 ) }
    dend_36 { pt3dadd( 43.2551, -315.963, 76.9381, 0.45 ) }
    dend_36 { pt3dadd( 42.8765, -317.947, 76.4593, 0.45 ) }
    dend_36 { pt3dadd( 42.3565, -321.02, 75.778, 0.45 ) }
    dend_36 { pt3dadd( 42.0286, -322.816, 75.3905, 0.45 ) }
    dend_36 { pt3dadd( 41.489, -325.554, 74.8759, 0.45 ) }
    dend_36 { pt3dadd( 40.9515, -328.477, 74.4587, 0.45 ) }
    dend_36 { pt3dadd( 40.8028, -329.245, 74.3598, 1.47 ) }
    dend_36 { pt3dadd( 40.1764, -332.015, 74.0606, 0.45 ) }
    dend_36 { pt3dadd( 39.759, -333.787, 73.9193, 0.45 ) }
    dend_36 { pt3dadd( 39.3151, -335.598, 73.8998, 0.45 ) }
    dend_36 { pt3dadd( 39.0106, -336.943, 73.9657, 0.45 ) }
    dend_36 { pt3dadd( 38.4174, -339.876, 74.2714, 0.45 ) }
    dend_36 { pt3dadd( 38.026, -341.97, 74.533, 0.79 ) }
    dend_36 { pt3dadd( 37.7003, -343.955, 74.8092, 0.79 ) }
    dend_36 { pt3dadd( 37.1861, -347.716, 75.4313, 0.45 ) }
    dend_36 { pt3dadd( 36.823, -350.566, 75.9055, 0.45 ) }
    dend_36 { pt3dadd( 36.44, -354.141, 76.576, 0.45 ) }
    dend_36 { pt3dadd( 36.3211, -355.341, 76.8777, 0.45 ) }
    dend_36 { pt3dadd( 36.2168, -356.492, 77.1952, 1.92 ) }
    dend_36 { pt3dadd( 35.9957, -358.63, 77.9778, 1.47 ) }
    dend_36 { pt3dadd( 35.8273, -360.458, 78.7369, 0.57 ) }
    dend_36 { pt3dadd( 35.6864, -362.196, 79.5437, 0.57 ) }
    dend_36 { pt3dadd( 35.4359, -365.142, 81.1379, 0.57 ) }
    dend_36 { pt3dadd( 35.2939, -367.425, 82.3983, 0.57 ) }
    dend_36 { pt3dadd( 35.0318, -372.418, 85.0391, 0.57 ) }
    dend_36 { pt3dadd( 35.0091, -373.5, 85.5528, 0.57 ) }
    dend_36 { pt3dadd( 35.0081, -375.717, 86.4338, 0.57 ) }
    dend_36 { pt3dadd( 35.1074, -379.628, 87.4969, 0.57 ) }
    dend_36 { pt3dadd( 35.2541, -381.825, 87.7995, 0.57 ) }
    dend_36 { pt3dadd( 35.5212, -383.917, 87.7562, 0.57 ) }
    dend_36 { pt3dadd( 35.9115, -386.592, 87.5043, 0.57 ) }
    dend_36 { pt3dadd( 36.3609, -390.372, 87.273, 0.57 ) }
    dend_36 { pt3dadd( 36.733, -394.319, 87.109, 0.57 ) }
    dend_36 { pt3dadd( 37.0642, -397.869, 86.9539, 0.57 ) }
    dend_36 { pt3dadd( 37.5407, -403.786, 86.791, 0.57 ) }
    dend_36 { pt3dadd( 37.8155, -408.214, 86.5068, 0.57 ) }
    dend_36 { pt3dadd( 37.9363, -412.315, 86.0857, 0.23 ) }
    dend_36 { pt3dadd( 37.9322, -414.688, 85.8334, 0.23 ) }
    dend_36 { pt3dadd( 37.8352, -417.249, 85.5478, 0.23 ) }
    dend_36 { pt3dadd( 37.662, -420.46, 85.1562, 0.23 ) }
    dend_36 { pt3dadd( 37.3522, -424.712, 84.6079, 0.23 ) }
    dend_36 { pt3dadd( 37.2833, -426.329, 84.0945, 0.23 ) }
    dend_36 { pt3dadd( 37.1389, -428.409, 83.2574, 1.7 ) }
    dend_36 { pt3dadd( 36.7754, -430.723, 82.3777, 0.68 ) }
    dend_36 { pt3dadd( 36.2297, -432.766, 81.6472, 0.45 ) }
    dend_36 { pt3dadd( 35.7861, -433.876, 81.3628, 0.45 ) }
    dend_36 { pt3dadd( 33.2406, -438.03, 80.801, 0.45 ) }
    dend_36 { pt3dadd( 30.8822, -440.8, 80.4671, 0.45 ) }
    dend_36 { pt3dadd( 29.1088, -442.484, 80.2425, 0.45 ) }
    dend_36 { pt3dadd( 27.8639, -443.533, 80.1888, 0.45 ) }
    dend_36 { pt3dadd( 26.6759, -444.61, 80.0984, 0.45 ) }
    dend_36 { pt3dadd( 24.9027, -446.808, 79.8876, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_36 { pt3dadd( 24.6899, -447.17, 79.8515, 0.45 ) }
    dend_36 { pt3dadd( 24.3041, -448.088, 79.634, 1.92 ) }
    dend_36 { pt3dadd( 23.5591, -450.567, 78.9796, 0.57 ) }
    dend_36 { pt3dadd( 22.8757, -453.637, 78.2124, 0.57 ) }
    dend_36 { pt3dadd( 22.4628, -456.508, 77.3866, 0.45 ) }
    dend_36 { pt3dadd( 22.3157, -458.104, 76.9175, 0.45 ) }
    dend_36 { pt3dadd( 22.03, -461.297, 76.0053, 0.45 ) }
    dend_36 { pt3dadd( 21.8418, -463.661, 75.3809, 0.57 ) }
    dend_36 { pt3dadd( 21.7481, -465.084, 75.0179, 0.57 ) }
    dend_36 { pt3dadd( 21.5444, -468.611, 74.1723, 0.57 ) }
    dend_36 { pt3dadd( 21.2552, -473.309, 72.96, 0.57 ) }
    dend_36 { pt3dadd( 21.1378, -475.437, 72.4049, 0.57 ) }
    dend_36 { pt3dadd( 20.9002, -480.152, 71.1717, 0.57 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 13/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 44.2164, -311.125, 78.1742, 0.45 ) }
    dend_35 { pt3dadd( 45.4157, -313.31, 78.671, 0.45 ) }
    dend_35 { pt3dadd( 45.9571, -314.255, 78.8833, 0.45 ) }
    dend_35 { pt3dadd( 47.7548, -317.554, 79.8799, 0.45 ) }
    dend_35 { pt3dadd( 49.3576, -320.682, 80.9131, 0.45 ) }
    dend_35 { pt3dadd( 50.6463, -323.25, 81.6987, 0.45 ) }
    dend_35 { pt3dadd( 50.696, -323.344, 81.7246, 1.81 ) }
    dend_35 { pt3dadd( 51.3535, -324.549, 82.0369, 1.7 ) }
    dend_35 { pt3dadd( 53.0138, -327.638, 82.8074, 0.68 ) }
    dend_35 { pt3dadd( 54.0058, -329.391, 83.2234, 0.68 ) }
    dend_35 { pt3dadd( 55.2908, -331.608, 83.8434, 0.68 ) }
    dend_35 { pt3dadd( 56.8633, -334.236, 84.6156, 0.68 ) }
    dend_35 { pt3dadd( 57.8643, -335.777, 85.0528, 0.68 ) }
    dend_35 { pt3dadd( 59.3181, -337.809, 85.6159, 0.68 ) }
    dend_35 { pt3dadd( 60.8857, -339.77, 86.1446, 0.68 ) }
    dend_35 { pt3dadd( 62.7875, -342.016, 86.8313, 0.68 ) }
    dend_35 { pt3dadd( 64.8769, -344.379, 87.6314, 0.68 ) }
    dend_35 { pt3dadd( 67.4534, -347.181, 88.5661, 0.68 ) }
    dend_35 { pt3dadd( 69.1878, -348.974, 88.9852, 0.68 ) }
    dend_35 { pt3dadd( 71.0373, -350.815, 89.2525, 0.68 ) }
    dend_35 { pt3dadd( 72.3575, -352.112, 89.332, 0.68 ) }
    dend_35 { pt3dadd( 73.9818, -353.754, 89.2987, 0.68 ) }
    dend_35 { pt3dadd( 77.1359, -357.057, 89.1151, 0.68 ) }
    dend_35 { pt3dadd( 80.2984, -360.471, 88.9045, 0.57 ) }
    dend_35 { pt3dadd( 81.5976, -361.911, 88.8216, 0.57 ) }
    dend_35 { pt3dadd( 83.3119, -363.851, 88.7335, 0.57 ) }
    dend_35 { pt3dadd( 85.3771, -366.127, 88.5985, 0.57 ) }
    dend_35 { pt3dadd( 87.7207, -368.665, 88.4549, 0.57 ) }
    dend_35 { pt3dadd( 90.4597, -371.596, 88.3637, 0.57 ) }
    dend_35 { pt3dadd( 91.9918, -373.182, 88.4423, 0.57 ) }
    dend_35 { pt3dadd( 93.1597, -374.363, 88.5073, 0.57 ) }
    dend_35 { pt3dadd( 95.7401, -376.962, 88.8411, 0.57 ) }
    dend_35 { pt3dadd( 96.3708, -377.567, 88.9606, 0.57 ) }
    dend_35 { pt3dadd( 97.6473, -378.8, 89.2924, 0.57 ) }
    dend_35 { pt3dadd( 99.4579, -380.69, 90.0781, 0.57 ) }
    dend_35 { pt3dadd( 99.981, -381.245, 90.3515, 2.6 ) }
    dend_35 { pt3dadd( 101.771, -383.205, 91.3944, 2.04 ) }
    dend_35 { pt3dadd( 104.18, -385.798, 92.5784, 0.57 ) }
    dend_35 { pt3dadd( 105.245, -386.864, 92.9276, 0.57 ) }
    dend_35 { pt3dadd( 107.381, -389.241, 94.0227, 0.57 ) }
    dend_35 { pt3dadd( 108.83, -390.993, 94.9226, 0.57 ) }
    dend_35 { pt3dadd( 110.465, -393.104, 96.1562, 0.57 ) }
    dend_35 { pt3dadd( 112.95, -396.494, 98.2081, 0.57 ) }
    dend_35 { pt3dadd( 114.78, -399.26, 99.9618, 0.57 ) }
    dend_35 { pt3dadd( 119.966, -407.009, 104.308, 0.57 ) }
    dend_35 { pt3dadd( 122.979, -411.535, 106.468, 0.57 ) }
    dend_35 { pt3dadd( 124.654, -414.148, 107.618, 0.57 ) }
    dend_35 { pt3dadd( 126.1, -416.405, 108.465, 0.57 ) }
    dend_35 { pt3dadd( 126.966, -417.773, 108.878, 0.57 ) }
    dend_35 { pt3dadd( 130.995, -423.618, 109.394, 0.57 ) }
    dend_35 { pt3dadd( 132.987, -426.081, 109.028, 0.57 ) }
    dend_35 { pt3dadd( 133.87, -427.154, 108.797, 0.57 ) }
    dend_35 { pt3dadd( 135.46, -429.049, 108.342, 0.45 ) }
    dend_35 { pt3dadd( 136.207, -429.937, 108.183, 0.45 ) }
    dend_35 { pt3dadd( 137.682, -431.714, 108.161, 0.45 ) }
    dend_35 { pt3dadd( 139.093, -433.613, 108.575, 0.45 ) }
    dend_35 { pt3dadd( 139.757, -434.496, 108.808, 0.45 ) }
    dend_35 { pt3dadd( 140.494, -435.501, 109.095, 0.45 ) }
    dend_35 { pt3dadd( 141.164, -436.435, 109.356, 0.45 ) }
    dend_35 { pt3dadd( 142.789, -438.671, 109.953, 0.45 ) }
    dend_35 { pt3dadd( 143.894, -440.244, 110.384, 0.45 ) }
    dend_35 { pt3dadd( 145.205, -442.165, 110.887, 0.45 ) }
    dend_35 { pt3dadd( 146.867, -444.54, 111.503, 0.45 ) }
    dend_35 { pt3dadd( 148.286, -446.577, 111.988, 0.45 ) }
    dend_35 { pt3dadd( 148.814, -447.364, 112.161, 0.45 ) }
    dend_35 { pt3dadd( 150.181, -449.413, 112.557, 0.45 ) }
    dend_35 { pt3dadd( 152.498, -452.926, 113.247, 0.45 ) }
    dend_35 { pt3dadd( 154.345, -455.759, 113.812, 0.45 ) }
    dend_35 { pt3dadd( 156.233, -458.727, 114.423, 0.45 ) }
    dend_35 { pt3dadd( 157.9, -461.416, 115.013, 0.45 ) }
    // Section: dend_62, id: dend_62, parent: dend_54 (entry count 83/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 136.324, -86.1532, -1.29287, 0.45 ) }
    dend_62 { pt3dadd( 136.502, -87.3873, -3.41198, 0.45 ) }
    dend_62 { pt3dadd( 136.726, -88.5237, -5.02803, 0.45 ) }
    dend_62 { pt3dadd( 137.085, -89.8804, -6.74567, 0.45 ) }
    dend_62 { pt3dadd( 137.36, -91.1258, -8.28491, 0.45 ) }
    dend_62 { pt3dadd( 138.228, -96.9654, -15.4027, 0.45 ) }
    dend_62 { pt3dadd( 138.635, -100.615, -19.7626, 0.45 ) }
    dend_62 { pt3dadd( 138.689, -102.845, -22.6052, 0.45 ) }
    dend_62 { pt3dadd( 138.645, -103.796, -23.8004, 0.45 ) }
    dend_62 { pt3dadd( 138.403, -107.085, -27.6321, 0.45 ) }
    dend_62 { pt3dadd( 138.267, -109.391, -30.0729, 0.45 ) }
    dend_62 { pt3dadd( 138.264, -109.76, -30.3705, 0.45 ) }
    dend_62 { pt3dadd( 138.34, -112.854, -32.6516, 0.45 ) }
    dend_62 { pt3dadd( 138.442, -115.035, -34.2859, 0.45 ) }
    dend_62 { pt3dadd( 138.694, -117.141, -35.5547, 0.45 ) }
    dend_62 { pt3dadd( 139.193, -119.18, -36.5631, 0.34 ) }
    dend_62 { pt3dadd( 139.878, -121.29, -37.4984, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_62 { pt3dadd( 140.352, -122.593, -38.0278, 0.34 ) }
    dend_62 { pt3dadd( 140.76, -123.574, -38.3714, 0.34 ) }
    dend_62 { pt3dadd( 142.204, -126.702, -39.4624, 0.34 ) }
    dend_62 { pt3dadd( 143.952, -130.72, -40.8655, 0.34 ) }
    dend_62 { pt3dadd( 144.461, -131.932, -41.1968, 0.34 ) }
    dend_62 { pt3dadd( 144.797, -132.853, -41.5436, 0.34 ) }
    dend_62 { pt3dadd( 145.4, -134.694, -42.3492, 0.34 ) }
    dend_62 { pt3dadd( 145.711, -135.717, -42.8352, 0.34 ) }
    dend_62 { pt3dadd( 146.296, -137.777, -43.9076, 0.34 ) }
    dend_62 { pt3dadd( 146.808, -139.637, -44.7354, 0.34 ) }
    dend_62 { pt3dadd( 148.093, -144.588, -47.2637, 0.34 ) }
    dend_62 { pt3dadd( 148.631, -146.716, -48.4899, 0.34 ) }
    dend_62 { pt3dadd( 148.759, -147.256, -48.8375, 0.34 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 136.324, -86.1532, -1.29287, 0.45 ) }
    dend_55 { pt3dadd( 138.164, -86.849, -1.5928, 0.45 ) }
    dend_55 { pt3dadd( 139.594, -87.6143, -1.96382, 0.45 ) }
    dend_55 { pt3dadd( 141.292, -88.6685, -2.44109, 0.45 ) }
    dend_55 { pt3dadd( 143.43, -90.3917, -3.42084, 0.45 ) }
    dend_55 { pt3dadd( 144.85, -91.7867, -4.19192, 0.45 ) }
    dend_55 { pt3dadd( 146.874, -93.9949, -5.34142, 0.45 ) }
    dend_55 { pt3dadd( 148.807, -96.5682, -6.55262, 0.34 ) }
    dend_55 { pt3dadd( 149.599, -97.77, -7.05441, 0.34 ) }
    dend_55 { pt3dadd( 152.298, -102.282, -8.95118, 0.34 ) }
    dend_55 { pt3dadd( 153.899, -105.053, -10.1479, 0.34 ) }
    dend_55 { pt3dadd( 155.054, -107.025, -10.9463, 0.34 ) }
    dend_55 { pt3dadd( 156.146, -108.885, -11.6074, 0.34 ) }
    dend_55 { pt3dadd( 157.673, -111.328, -12.2876, 0.34 ) }
    dend_55 { pt3dadd( 159.382, -114.02, -12.8767, 0.34 ) }
    dend_55 { pt3dadd( 160.756, -116.064, -13.1106, 0.34 ) }
    dend_55 { pt3dadd( 162.073, -118.006, -13.3062, 0.34 ) }
    dend_55 { pt3dadd( 163.264, -119.811, -13.3778, 0.34 ) }
    dend_55 { pt3dadd( 164.214, -121.226, -13.2834, 0.34 ) }
    dend_55 { pt3dadd( 165.195, -122.677, -12.9709, 0.34 ) }
    dend_55 { pt3dadd( 166.25, -124.238, -12.5746, 0.34 ) }
    dend_55 { pt3dadd( 167.571, -126.146, -12.1261, 0.34 ) }
    dend_55 { pt3dadd( 170.044, -129.587, -11.434, 0.45 ) }
    dend_55 { pt3dadd( 172.141, -132.293, -10.9215, 0.45 ) }
    dend_55 { pt3dadd( 174.149, -134.699, -10.404, 0.45 ) }
    dend_55 { pt3dadd( 176.599, -137.515, -9.78573, 0.45 ) }
    dend_55 { pt3dadd( 177.808, -138.819, -9.5641, 0.45 ) }
    dend_55 { pt3dadd( 179.222, -140.294, -9.39943, 0.45 ) }
    dend_55 { pt3dadd( 180.006, -141.112, -9.39446, 0.45 ) }
    dend_55 { pt3dadd( 183.358, -144.669, -9.62161, 0.45 ) }
    dend_55 { pt3dadd( 185.612, -147.107, -9.82351, 0.45 ) }
    dend_55 { pt3dadd( 187.782, -149.541, -9.91467, 0.45 ) }
    dend_55 { pt3dadd( 188.696, -150.593, -9.96801, 0.45 ) }
    dend_55 { pt3dadd( 191.762, -154.064, -10.1172, 0.45 ) }
    dend_55 { pt3dadd( 193.188, -155.703, -10.1353, 0.45 ) }
    dend_55 { pt3dadd( 195.12, -157.946, -10.031, 0.45 ) }
    dend_55 { pt3dadd( 196.317, -159.296, -9.8208, 0.45 ) }
    dend_55 { pt3dadd( 197.157, -160.251, -9.62124, 0.45 ) }
    dend_55 { pt3dadd( 199.298, -162.674, -9.08968, 0.45 ) }
    dend_55 { pt3dadd( 201.479, -165.186, -8.47139, 0.45 ) }
    dend_55 { pt3dadd( 203.341, -167.474, -8.11307, 0.45 ) }
    dend_55 { pt3dadd( 205.28, -170.022, -7.94849, 0.45 ) }
    dend_55 { pt3dadd( 206.67, -171.965, -8.08136, 0.45 ) }
    dend_55 { pt3dadd( 208.067, -174.079, -8.44654, 0.45 ) }
    dend_55 { pt3dadd( 209.077, -175.72, -8.8857, 0.45 ) }
    dend_55 { pt3dadd( 211.032, -179.007, -9.94053, 0.45 ) }
    dend_55 { pt3dadd( 212.096, -180.856, -10.5431, 0.45 ) }
    dend_55 { pt3dadd( 213.92, -184.061, -11.4975, 0.45 ) }
    dend_55 { pt3dadd( 215.657, -186.999, -12.2624, 0.45 ) }
    dend_55 { pt3dadd( 216.771, -188.801, -12.7026, 0.45 ) }
    dend_55 { pt3dadd( 217.78, -190.418, -13.1662, 0.45 ) }
    dend_55 { pt3dadd( 219.153, -192.618, -13.7758, 0.45 ) }
    dend_55 { pt3dadd( 219.95, -193.855, -14.1885, 0.45 ) }
    dend_55 { pt3dadd( 220.364, -194.509, -14.4269, 0.45 ) }
    dend_55 { pt3dadd( 221.368, -196.089, -15.0822, 0.45 ) }
    dend_55 { pt3dadd( 223.978, -200.079, -16.9473, 0.45 ) }
    dend_55 { pt3dadd( 225.001, -201.619, -17.743, 0.45 ) }
    dend_55 { pt3dadd( 226.416, -203.748, -18.9318, 0.45 ) }
    dend_55 { pt3dadd( 227.578, -205.486, -19.9074, 0.45 ) }
    dend_55 { pt3dadd( 228.015, -206.166, -20.2754, 0.79 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 73/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 228.015, -206.166, -20.2754, 0.45 ) }
    dend_57 { pt3dadd( 227.157, -208.696, -20.1027, 0.45 ) }
    dend_57 { pt3dadd( 226.726, -210.312, -19.9576, 0.45 ) }
    dend_57 { pt3dadd( 226.405, -211.73, -19.9619, 0.45 ) }
    dend_57 { pt3dadd( 226.255, -212.475, -20.106, 0.45 ) }
    dend_57 { pt3dadd( 226.108, -213.705, -20.4462, 0.45 ) }
    dend_57 { pt3dadd( 226.057, -214.764, -20.7507, 0.45 ) }
    dend_57 { pt3dadd( 226.18, -216.328, -21.2564, 0.45 ) }
    dend_57 { pt3dadd( 226.529, -218.94, -22.1485, 0.45 ) }
    dend_57 { pt3dadd( 227.045, -222.343, -23.326, 0.45 ) }
    dend_57 { pt3dadd( 227.311, -224.203, -23.8592, 0.45 ) }
    dend_57 { pt3dadd( 227.665, -226.748, -24.4306, 0.45 ) }
    dend_57 { pt3dadd( 227.823, -228.27, -24.6531, 0.45 ) }
    dend_57 { pt3dadd( 228.028, -230.283, -24.6488, 0.45 ) }
    dend_57 { pt3dadd( 228.339, -232.925, -23.9309, 0.45 ) }
    dend_57 { pt3dadd( 228.635, -235.777, -22.7129, 0.45 ) }
    dend_57 { pt3dadd( 228.758, -237.422, -21.7913, 0.45 ) }
    dend_57 { pt3dadd( 228.904, -238.985, -20.5017, 0.45 ) }
    dend_57 { pt3dadd( 229.248, -241.835, -17.6219, 0.45 ) }
    dend_57 { pt3dadd( 229.807, -245.508, -13.3695, 0.45 ) }
    dend_57 { pt3dadd( 229.993, -246.623, -12.0201, 0.45 ) }
    dend_57 { pt3dadd( 230.308, -248.291, -10.0309, 0.45 ) }
    dend_57 { pt3dadd( 231.052, -252.024, -5.33008, 0.45 ) }
    dend_57 { pt3dadd( 231.274, -253.095, -3.95219, 0.45 ) }
    dend_57 { pt3dadd( 231.471, -254.384, -2.43572, 0.45 ) }
    dend_57 { pt3dadd( 231.703, -256.504, -0.25194, 0.45 ) }
    dend_57 { pt3dadd( 231.847, -257.524, 0.818272, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 228.015, -206.166, -20.2754, 0.45 ) }
    dend_56 { pt3dadd( 229.416, -207.429, -20.1135, 0.45 ) }
    dend_56 { pt3dadd( 231.998, -209.641, -19.9611, 0.45 ) }
    dend_56 { pt3dadd( 234.752, -211.745, -19.9808, 0.45 ) }
    dend_56 { pt3dadd( 237.195, -213.535, -20.0068, 0.45 ) }
    dend_56 { pt3dadd( 239.851, -215.482, -20.0339, 0.45 ) }
    dend_56 { pt3dadd( 241.233, -216.583, -20.142, 0.45 ) }
    dend_56 { pt3dadd( 244.158, -219.14, -20.7361, 0.45 ) }
    dend_56 { pt3dadd( 247.0, -221.85, -21.6851, 0.45 ) }
    dend_56 { pt3dadd( 249.978, -225.002, -23.0524, 0.45 ) }
    dend_56 { pt3dadd( 250.943, -226.083, -23.5551, 0.45 ) }
    dend_56 { pt3dadd( 254.799, -230.506, -25.6611, 0.45 ) }
    dend_56 { pt3dadd( 257.718, -233.943, -27.2069, 0.45 ) }
    dend_56 { pt3dadd( 259.408, -235.873, -28.0263, 0.45 ) }
    dend_56 { pt3dadd( 263.167, -239.816, -29.6441, 0.45 ) }
    dend_56 { pt3dadd( 264.941, -241.445, -30.1884, 0.45 ) }
    dend_56 { pt3dadd( 268.472, -244.321, -30.7953, 0.45 ) }
    dend_56 { pt3dadd( 273.292, -247.747, -31.0281, 0.45 ) }
    dend_56 { pt3dadd( 278.967, -251.534, -30.68, 0.45 ) }
    dend_56 { pt3dadd( 283.281, -254.242, -29.9638, 0.45 ) }
    dend_56 { pt3dadd( 288.755, -257.298, -28.6555, 0.45 ) }
    dend_56 { pt3dadd( 291.619, -258.764, -27.8652, 0.45 ) }
    dend_56 { pt3dadd( 293.565, -259.621, -27.3068, 0.45 ) }
    dend_56 { pt3dadd( 298.649, -261.32, -26.1732, 0.45 ) }
    dend_56 { pt3dadd( 303.297, -262.566, -25.4758, 0.45 ) }
    dend_56 { pt3dadd( 309.218, -263.88, -25.1254, 0.45 ) }
    dend_56 { pt3dadd( 313.133, -264.583, -25.3337, 0.45 ) }
    dend_56 { pt3dadd( 319.312, -265.417, -26.1393, 0.45 ) }
    dend_56 { pt3dadd( 327.971, -266.07, -27.7736, 0.45 ) }
    dend_56 { pt3dadd( 330.252, -266.054, -28.3673, 0.45 ) }
    dend_56 { pt3dadd( 332.351, -265.883, -29.036, 0.45 ) }
    dend_56 { pt3dadd( 335.779, -265.083, -30.2178, 0.45 ) }
    dend_56 { pt3dadd( 337.768, -264.088, -30.9795, 0.45 ) }
    dend_56 { pt3dadd( 340.091, -261.559, -32.0977, 0.45 ) }
    dend_56 { pt3dadd( 341.106, -259.647, -32.7075, 0.45 ) }
    dend_56 { pt3dadd( 341.987, -257.743, -33.2994, 0.45 ) }
    dend_56 { pt3dadd( 343.785, -253.663, -34.5926, 0.45 ) }
    dend_56 { pt3dadd( 344.87, -251.307, -35.3811, 0.45 ) }
    dend_56 { pt3dadd( 346.978, -247.515, -36.8427, 0.45 ) }
    dend_56 { pt3dadd( 349.01, -244.763, -37.8549, 0.45 ) }
    dend_56 { pt3dadd( 351.432, -242.231, -38.6418, 0.45 ) }
    dend_56 { pt3dadd( 353.352, -240.546, -39.1282, 0.45 ) }
    dend_56 { pt3dadd( 355.339, -239.227, -39.4229, 0.45 ) }
    dend_56 { pt3dadd( 357.962, -237.99, -39.5701, 0.45 ) }
    dend_56 { pt3dadd( 365.908, -236.112, -38.3682, 0.45 ) }
    dend_56 { pt3dadd( 367.057, -236.023, -37.9338, 0.45 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 46/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 231.847, -257.524, 0.818272, 0.45 ) }
    dend_59 { pt3dadd( 232.055, -259.752, 1.73649, 0.45 ) }
    dend_59 { pt3dadd( 232.355, -261.684, 2.48511, 0.45 ) }
    dend_59 { pt3dadd( 232.775, -263.712, 3.2736, 0.45 ) }
    dend_59 { pt3dadd( 233.171, -265.556, 3.97607, 0.45 ) }
    dend_59 { pt3dadd( 233.985, -268.581, 5.32771, 0.45 ) }
    dend_59 { pt3dadd( 234.444, -269.945, 6.09096, 0.45 ) }
    dend_59 { pt3dadd( 235.209, -271.749, 7.3462, 0.45 ) }
    dend_59 { pt3dadd( 235.997, -273.428, 8.61599, 0.45 ) }
    dend_59 { pt3dadd( 237.245, -275.793, 10.5119, 0.45 ) }
    dend_59 { pt3dadd( 239.154, -279.191, 13.2701, 0.45 ) }
    dend_59 { pt3dadd( 241.154, -282.594, 15.9321, 0.45 ) }
    dend_59 { pt3dadd( 242.866, -285.621, 18.1672, 0.45 ) }
    dend_59 { pt3dadd( 243.894, -287.483, 19.4049, 0.45 ) }
    dend_59 { pt3dadd( 245.468, -290.509, 21.1007, 0.45 ) }
    dend_59 { pt3dadd( 246.466, -292.544, 22.0386, 0.45 ) }
    dend_59 { pt3dadd( 247.562, -295.25, 22.9423, 0.45 ) }
    dend_59 { pt3dadd( 248.556, -297.904, 23.6261, 0.45 ) }
    dend_59 { pt3dadd( 249.569, -300.693, 24.2643, 0.45 ) }
    dend_59 { pt3dadd( 250.471, -303.269, 24.9291, 0.45 ) }
    dend_59 { pt3dadd( 251.274, -306.034, 25.5972, 0.45 ) }
    dend_59 { pt3dadd( 252.241, -309.603, 26.4954, 0.45 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 68/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 231.847, -257.524, 0.818272, 0.45 ) }
    dend_58 { pt3dadd( 233.693, -256.034, -1.24539, 0.45 ) }
    dend_58 { pt3dadd( 234.602, -255.3, -2.26198, 0.45 ) }
    dend_58 { pt3dadd( 235.629, -254.472, -3.40921, 0.45 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 72/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 252.241, -309.603, 26.4954, 0.45 ) }
    dend_61 { pt3dadd( 252.118, -312.504, 30.7276, 0.45 ) }
    dend_61 { pt3dadd( 251.835, -316.209, 35.5373, 0.45 ) }
    dend_61 { pt3dadd( 251.632, -318.477, 38.2283, 0.45 ) }
    dend_61 { pt3dadd( 251.508, -319.934, 39.8234, 0.45 ) }
    dend_61 { pt3dadd( 251.478, -320.274, 40.1667, 0.45 ) }
    dend_61 { pt3dadd( 251.176, -323.939, 43.7499, 0.45 ) }
    dend_61 { pt3dadd( 251.082, -324.948, 44.4685, 0.45 ) }
    dend_61 { pt3dadd( 250.989, -325.964, 45.0589, 0.45 ) }
    dend_61 { pt3dadd( 250.865, -326.998, 45.7079, 0.45 ) }
    dend_61 { pt3dadd( 250.618, -328.435, 46.5555, 0.45 ) }
    dend_61 { pt3dadd( 250.134, -330.989, 47.8804, 0.45 ) }
    dend_61 { pt3dadd( 249.695, -333.304, 48.9971, 0.45 ) }
    dend_61 { pt3dadd( 249.224, -336.05, 50.5096, 0.45 ) }
    dend_61 { pt3dadd( 248.979, -337.537, 51.4901, 0.45 ) }
    dend_61 { pt3dadd( 248.679, -339.271, 52.7122, 0.45 ) }
    dend_61 { pt3dadd( 248.235, -341.71, 54.4976, 0.45 ) }
    dend_61 { pt3dadd( 248.066, -343.748, 56.7039, 0.45 ) }
    dend_61 { pt3dadd( 248.073, -345.393, 59.0786, 0.45 ) }
    dend_61 { pt3dadd( 248.172, -346.66, 61.1942, 0.45 ) }
    dend_61 { pt3dadd( 248.339, -347.737, 63.2865, 0.45 ) }
    dend_61 { pt3dadd( 248.509, -348.834, 65.61, 0.45 ) }
    dend_61 { pt3dadd( 248.994, -353.399, 74.9489, 0.45 ) }
    dend_61 { pt3dadd( 249.065, -354.641, 77.1609, 0.45 ) }
    dend_61 { pt3dadd( 249.087, -355.566, 78.5247, 0.45 ) }
    dend_61 { pt3dadd( 249.048, -358.759, 82.4357, 0.45 ) }
    dend_61 { pt3dadd( 249.01, -360.534, 84.2783, 0.45 ) }
    dend_61 { pt3dadd( 248.86, -363.008, 86.0748, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_61 { pt3dadd( 248.577, -365.074, 86.9199, 0.45 ) }
    dend_61 { pt3dadd( 248.289, -367.518, 87.7564, 0.45 ) }
    dend_61 { pt3dadd( 248.018, -369.883, 88.3299, 0.45 ) }
    dend_61 { pt3dadd( 247.795, -371.803, 88.4764, 0.45 ) }
    dend_61 { pt3dadd( 247.734, -372.77, 88.5334, 0.45 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 5/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 252.241, -309.603, 26.4954, 0.45 ) }
    dend_60 { pt3dadd( 252.574, -310.525, 27.0276, 0.45 ) }
    dend_60 { pt3dadd( 253.211, -312.428, 28.0603, 0.45 ) }
    dend_60 { pt3dadd( 253.811, -314.591, 29.2496, 0.45 ) }
    dend_60 { pt3dadd( 253.978, -315.389, 29.7781, 0.45 ) }
    dend_60 { pt3dadd( 254.176, -316.551, 30.6907, 0.45 ) }
    dend_60 { pt3dadd( 254.355, -317.704, 31.7189, 0.45 ) }
    dend_60 { pt3dadd( 254.45, -318.423, 32.5087, 0.45 ) }
    dend_60 { pt3dadd( 254.577, -319.354, 33.7087, 0.45 ) }
    dend_60 { pt3dadd( 254.928, -321.438, 36.9212, 0.45 ) }
    dend_60 { pt3dadd( 255.179, -322.762, 39.0942, 0.45 ) }
    dend_60 { pt3dadd( 255.366, -323.539, 40.3848, 0.45 ) }
    dend_60 { pt3dadd( 255.74, -324.74, 42.4331, 0.45 ) }
    dend_60 { pt3dadd( 255.862, -325.043, 42.9297, 0.45 ) }
    dend_60 { pt3dadd( 256.289, -325.727, 44.045, 0.45 ) }
    dend_60 { pt3dadd( 256.855, -326.478, 45.0628, 0.45 ) }
    dend_60 { pt3dadd( 257.723, -327.577, 46.3703, 0.45 ) }
    dend_60 { pt3dadd( 258.075, -328.026, 46.8268, 0.45 ) }
    dend_60 { pt3dadd( 259.103, -329.445, 48.0455, 0.45 ) }
    dend_60 { pt3dadd( 260.829, -331.757, 49.9228, 0.45 ) }
    dend_60 { pt3dadd( 261.828, -333.03, 50.9641, 0.45 ) }
    dend_60 { pt3dadd( 263.277, -334.812, 52.4226, 0.45 ) }
    dend_60 { pt3dadd( 264.227, -336.008, 53.4105, 0.45 ) }
    dend_60 { pt3dadd( 266.15, -338.399, 55.4019, 0.45 ) }
    dend_60 { pt3dadd( 266.746, -339.133, 56.0063, 0.45 ) }
    dend_60 { pt3dadd( 268.058, -340.811, 57.3361, 0.45 ) }
    dend_60 { pt3dadd( 268.554, -341.428, 57.9029, 0.45 ) }
    dend_60 { pt3dadd( 269.826, -342.986, 59.4084, 0.45 ) }
    dend_60 { pt3dadd( 271.012, -344.458, 60.9451, 0.45 ) }
    dend_60 { pt3dadd( 271.578, -345.091, 61.7945, 0.45 ) }
    dend_60 { pt3dadd( 272.269, -345.796, 62.949, 0.45 ) }
    dend_60 { pt3dadd( 273.537, -347.196, 65.2011, 0.45 ) }
    dend_60 { pt3dadd( 274.112, -347.885, 66.2963, 0.45 ) }
    dend_60 { pt3dadd( 274.705, -348.63, 67.444, 0.45 ) }
    dend_60 { pt3dadd( 277.071, -351.775, 72.0277, 0.45 ) }
    dend_60 { pt3dadd( 278.711, -354.043, 75.0773, 0.45 ) }
    dend_60 { pt3dadd( 280.069, -355.98, 77.4945, 0.45 ) }
    dend_60 { pt3dadd( 280.466, -356.593, 78.1589, 0.45 ) }
    dend_60 { pt3dadd( 280.886, -357.241, 78.8868, 0.45 ) }
    dend_60 { pt3dadd( 281.426, -358.036, 79.8158, 0.45 ) }
    dend_60 { pt3dadd( 282.04, -358.846, 80.8458, 0.45 ) }
    dend_60 { pt3dadd( 282.689, -359.55, 81.9821, 0.45 ) }
    dend_60 { pt3dadd( 282.959, -359.794, 82.466, 0.45 ) }
    dend_60 { pt3dadd( 285.479, -361.909, 87.087, 0.45 ) }
    dend_60 { pt3dadd( 286.653, -362.897, 89.2847, 0.45 ) }
    dend_60 { pt3dadd( 288.6, -364.521, 92.7152, 0.45 ) }
    dend_60 { pt3dadd( 288.92, -364.786, 93.2844, 0.45 ) }
    dend_60 { pt3dadd( 289.246, -365.058, 93.8226, 0.45 ) }
    dend_60 { pt3dadd( 289.818, -365.566, 94.7, 0.45 ) }
    dend_60 { pt3dadd( 291.137, -366.88, 96.5118, 0.45 ) }
    dend_60 { pt3dadd( 292.401, -368.215, 98.2509, 0.45 ) }
    dend_60 { pt3dadd( 295.551, -371.711, 102.659, 0.45 ) }
    dend_60 { pt3dadd( 296.881, -373.197, 104.58, 0.45 ) }
    dend_60 { pt3dadd( 297.526, -373.9, 105.506, 0.45 ) }
    dend_60 { pt3dadd( 298.294, -374.548, 106.735, 0.45 ) }
    dend_60 { pt3dadd( 299.421, -375.186, 108.639, 0.45 ) }
    dend_60 { pt3dadd( 300.848, -375.71, 111.223, 0.45 ) }
    dend_60 { pt3dadd( 301.421, -375.858, 112.3, 0.45 ) }
    dend_60 { pt3dadd( 301.895, -375.959, 113.309, 0.45 ) }
    dend_60 { pt3dadd( 305.802, -376.869, 122.183, 0.45 ) }
    dend_60 { pt3dadd( 306.838, -377.163, 124.597, 0.45 ) }
    dend_60 { pt3dadd( 307.949, -377.588, 127.211, 0.45 ) }
    dend_60 { pt3dadd( 308.583, -377.829, 128.779, 0.45 ) }
    dend_60 { pt3dadd( 310.03, -378.439, 132.459, 0.45 ) }
    dend_60 { pt3dadd( 310.692, -378.809, 134.228, 0.45 ) }
    dend_60 { pt3dadd( 311.308, -379.337, 135.892, 0.45 ) }
    dend_60 { pt3dadd( 312.422, -380.289, 138.961, 0.45 ) }
    dend_60 { pt3dadd( 316.736, -383.352, 150.075, 0.45 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_12 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_11 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_45 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_13 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_46 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_44 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_10 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_9 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_64 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_49 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_28 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_21 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_65 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_63 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_42 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_38 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_31 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_67 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_40 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_37 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_54 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_53 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_36 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_62 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_55 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_57 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_56 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_59 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_61 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_60 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_47 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_27 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_29 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_30 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_69 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_14 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_15 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_43 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_50 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_52 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_20 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_7 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_58 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_12 nseg = 3
    dend_11 nseg = 3
    dend_45 nseg = 3
    dend_22 nseg = 3
    dend_13 nseg = 3
    dend_8 nseg = 3
    dend_46 nseg = 7
    dend_44 nseg = 9
    dend_10 nseg = 7
    dend_9 nseg = 11
    dend_5 nseg = 7
    dend_2 nseg = 3
    dend_19 nseg = 3
    dend_6 nseg = 5
    dend_64 nseg = 7
    dend_49 nseg = 3
    dend_28 nseg = 31
    dend_21 nseg = 5
    dend_66 nseg = 9
    dend_65 nseg = 3
    dend_63 nseg = 5
    dend_42 nseg = 3
    dend_38 nseg = 5
    dend_33 nseg = 11
    dend_31 nseg = 5
    dend_67 nseg = 5
    dend_51 nseg = 7
    dend_40 nseg = 17
    dend_37 nseg = 11
    dend_54 nseg = 3
    dend_53 nseg = 9
    dend_36 nseg = 9
    dend_35 nseg = 9
    dend_62 nseg = 5
    dend_55 nseg = 7
    dend_57 nseg = 3
    dend_56 nseg = 9
    dend_59 nseg = 3
    dend_61 nseg = 5
    dend_60 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_NBC_2db880c523_0_0


