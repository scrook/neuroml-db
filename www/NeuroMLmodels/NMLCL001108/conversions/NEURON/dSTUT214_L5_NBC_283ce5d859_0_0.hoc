// Cell: dSTUT214_L5_NBC_283ce5d859_0_0
/*
{
  "id" : "dSTUT214_L5_NBC_283ce5d859_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.80187, -2.65497, 0.815749, 4.80603", "-7.85711, -2.42647, 0.741853, 8.49266", "-6.91236, -2.19797, 0.667957, 10.2778", "-5.96761, -1.96947, 0.594062, 12.0489", "-5.02286, -1.74096, 0.520166, 13.6363", "-4.07811, -1.51246, 0.44627, 14.7753", "-3.13335, -1.28396, 0.372375, 15.6483", "-2.1886, -1.05546, 0.298479, 16.2981", "-1.24385, -0.826954, 0.224583, 16.8319", "-0.299097, -0.598451, 0.150687, 17.082", "0.645655, -0.369949, 0.0767917, 17.31", "1.59041, -0.141446, 0.00289604, 17.538", "2.53516, 0.0870562, -0.0709997, 17.43", "3.47991, 0.315559, -0.144895, 16.9438", "4.42466, 0.544061, -0.218791, 16.4576", "5.36941, 0.772563, -0.292687, 15.5199", "6.31417, 1.00107, -0.366582, 14.2667", "7.25892, 1.22957, -0.440478, 13.0135", "8.20367, 1.45807, -0.514374, 10.6764", "9.14842, 1.68657, -0.588269, 7.11693", "10.0932, 1.91508, -0.662165, 4.00176" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-9.8861, 1.30416, -7.14961, 1.71", "-10.0761, 1.24086, -6.77749, 1.71", "-14.1799, -0.12626, 1.2592, 1.71" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-3.2361, 7.66941, -0.579609, 1.03", "-3.55874, 8.00693, -0.47199, 1.03", "-3.79982, 8.50175, 0.181006, 0.86", "-4.28493, 9.49745, 1.49499, 0.86", "-4.5664, 10.0751, 2.25738, 0.86", "-5.51585, 12.0239, 4.82908, 0.86", "-5.60303, 12.2028, 5.0652, 0.86", "-7.54664, 17.1896, 12.0097, 0.86" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.0861, 8.76616, -5.19961, 1.71", "-0.507652, 12.667, -4.97876, 1.71", "-0.330313, 13.8629, -4.91105, 0.86", "0.185985, 17.3446, -4.71393, 0.68", "0.67484, 20.6412, -4.52729, 0.68", "0.925683, 22.3328, -4.43152, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "8.1539, 4.95316, -6.22961, 1.2", "9.62753, 5.40275, -6.96263, 1.2", "12.4304, 6.25789, -8.35686, 1.2", "16.4002, 7.46902, -10.3315, 0.68", "20.8127, 8.81523, -12.5263, 0.68", "23.9942, 9.78588, -14.1089, 0.68", "25.8586, 10.3546, -15.0363, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.4639, -0.827845, -1.19961, 1.54", "12.7261, 1.09648, 1.35161, 1.54", "14.3564, 2.48325, 3.19015, 1.54", "18.719, 6.19421, 8.11004, 1.03", "19.5541, 6.90459, 9.05185, 1.03", "19.8774, 7.17955, 9.41638, 1.03", "21.876, 8.87967, 11.6704, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.0039, -4.95859, -5.19961, 1.2", "1.71373, -5.08121, -5.33116, 1.2", "0.181325, -5.77013, -5.91853, 1.2", "-2.00607, -6.37615, -9.24211, 1.03", "-2.88445, -6.61707, -10.7305, 0.68", "-4.48987, -6.99818, -13.4272, 0.68", "-5.57261, -7.2308, -15.4684, 0.68", "-6.43492, -7.36362, -17.1254, 2.05", "-14.2421, -8.0954, -32.0007, 0.17", "-14.6345, -8.12042, -32.7333, 0.17", "-15.3927, -8.11943, -34.0773, 0.17", "-19.338, -8.00084, -40.4481, 0.17", "-21.306, -8.01668, -43.3788, 0.17", "-22.7426, -8.01274, -45.1391, 2.05", "-24.1852, -8.10653, -46.1102, 0.17", "-25.0868, -8.18213, -46.6895, 0.17", "-27.0692, -8.47253, -48.1211, 0.17", "-32.3285, -9.67292, -51.5899, 2.22", "-32.8364, -9.83204, -52.3143, 0.17", "-33.5098, -10.0877, -53.409, 0.17", "-34.1987, -10.3593, -54.6024, 0.17", "-37.0985, -11.533, -59.9037, 0.17", "-38.7842, -12.2119, -63.1664, 0.17", "-47.5134, -16.0721, -80.6772, 1.71", "-48.7707, -16.633, -83.3305, 0.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.7139, -0.407596, -15.7696, 1.37", "2.02116, -4.15509, -15.7485, 1.37", "2.20408, -6.13923, -15.6916, 1.37", "2.45109, -8.26197, -15.6145, 1.03", "2.87978, -11.2897, -15.496, 1.03", "3.7153, -16.5995, -15.2793, 1.03", "4.30246, -20.331, -15.1271, 1.03", "4.85221, -24.2736, -14.8523, 1.03", "5.12719, -26.5094, -14.6885, 2.22", "5.31141, -28.1393, -14.5583, 1.54", "5.35762, -28.436, -14.532, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.0932, 1.91508, -0.662165, 0.999982", "24.6728, 5.44137, -0.662165, 0.999982", "39.2524, 8.96767, -0.662165, 0.999982" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-14.1799, -0.12626, 1.2592, 1.37", "-15.0361, -0.675472, 1.35193, 1.37", "-17.8323, -2.46904, 1.65476, 1.37", "-20.4987, -4.17936, 1.94354, 1.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-14.1799, -0.12626, 1.2592, 0.68", "-19.5539, 0.856254, -5.25143, 0.68", "-21.29, 1.3327, -7.21765, 0.51", "-22.4376, 1.68606, -8.49222, 0.51", "-23.5422, 2.14407, -9.82461, 0.51", "-23.7347, 2.2389, -10.0593, 0.51", "-23.8697, 2.3148, -10.2137, 0.51", "-27.427, 4.79989, -13.7825, 0.51", "-27.4782, 4.83712, -13.8356, 0.51", "-29.3557, 6.25453, -15.6064, 0.51", "-31.2876, 7.80113, -17.2022, 1.88", "-32.9747, 9.13783, -18.4649, 0.17", "-35.5185, 11.1133, -20.2925, 0.68", "-37.1309, 12.2184, -21.264, 0.68", "-39.0194, 13.3519, -22.3253, 0.17", "-40.7749, 14.2282, -23.1862, 1.37", "-42.738, 15.1352, -24.5022, 0.17", "-44.8031, 16.0927, -26.2628, 0.68", "-46.78, 17.0322, -28.0466, 0.68", "-47.3451, 17.314, -28.6129, 0.51", "-48.3175, 17.8026, -29.6048, 1.03", "-52.9245, 20.0258, -33.827, 0.51", "-54.3324, 20.737, -34.9567, 0.51", "-56.8594, 21.9831, -36.6934, 0.51", "-56.9816, 22.0492, -36.7734, 0.51", "-58.4216, 22.7712, -37.5131, 2.22", "-59.8731, 23.3718, -38.0024, 0.34", "-62.0917, 24.0371, -38.1971, 0.34", "-64.394, 24.5187, -38.2989, 0.34", "-65.9442, 24.7898, -38.3068, 0.34", "-68.2684, 25.1679, -38.2791, 2.05", "-70.0339, 25.4195, -38.2033, 0.17", "-73.7129, 25.9241, -37.8666, 0.17", "-75.5803, 26.1542, -37.5559, 0.17", "-77.3256, 26.3438, -37.2295, 2.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-7.54664, 17.1896, 12.0097, 0.68", "-9.24509, 21.4588, 14.8629, 0.68", "-10.184, 23.1273, 15.8868, 0.51", "-11.7474, 25.5415, 16.8499, 0.51", "-12.9894, 27.556, 17.5663, 0.51", "-13.3274, 28.0802, 17.7403, 1.37", "-14.0145, 29.0709, 18.0649, 0.68", "-15.2737, 30.6734, 18.3845, 0.34", "-18.3752, 34.032, 19.108, 0.34", "-20.0853, 35.6082, 19.5349, 0.34", "-21.7636, 37.0955, 19.8965, 0.34", "-22.7521, 37.9859, 20.1104, 1.37", "-23.6857, 38.8468, 20.312, 0.17", "-24.4036, 39.4537, 20.4695, 0.17", "-27.0906, 40.8892, 20.9403, 0.17", "-28.5071, 41.4868, 21.0394, 0.17", "-33.1417, 50.1021, 24.5758, 0.17", "-36.0806, 59.0328, 29.0202, 0.17", "-38.6311, 67.0889, 35.0111, 0.17", "-43.011, 75.034, 40.033, 0.17", "-48.3632, 82.935, 44.1101, 0.17", "-54.6535, 89.2133, 49.3632, 0.17", "-59.646, 95.4661, 55.8691, 0.17", "-65.1675, 102.686, 60.822, 0.17", "-70.1598, 110.838, 64.8794, 0.17", "-74.7551, 119.932, 67.0953, 0.17", "-79.0738, 129.413, 67.8652, 0.17", "-83.6596, 138.8, 67.8898, 0.17" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-7.54664, 17.1896, 12.0097, 0.51", "-6.71821, 19.418, 11.9502, 0.51", "-6.28304, 20.4463, 11.922, 0.51", "-4.84925, 23.4151, 11.818, 0.51", "-3.80684, 25.3288, 11.9355, 0.51", "-3.61235, 25.7075, 11.9545, 0.51", "-0.8757, 31.3632, 12.2019, 0.51", "-0.247232, 32.9841, 12.1983, 0.51", "0.371871, 34.8844, 12.2998, 0.51", "1.87597, 39.3075, 12.7426, 0.51", "3.08451, 42.7402, 12.7387, 1.71", "3.3503, 43.4841, 12.669, 0.17", "4.8419, 47.8216, 11.8492, 1.03", "6.92344, 53.9625, 10.3247, 0.68", "8.32916, 57.7207, 9.1671, 0.51", "11.197, 63.9719, 6.7826, 0.51", "12.1819, 65.6777, 6.14624, 1.54", "13.112, 67.0592, 5.57565, 0.17", "13.3639, 67.3654, 5.42661, 0.68", "15.5855, 69.9434, 3.71866, 0.68", "16.5777, 71.1047, 3.16052, 1.37", "17.0124, 71.6358, 3.13166, 0.17", "17.2698, 71.987, 3.1276, 0.17", "17.4162, 72.2095, 3.12967, 0.17", "18.4821, 73.9861, 3.10866, 0.17", "18.5722, 74.1596, 3.10912, 0.17", "19.4996, 76.1379, 3.10919, 0.17", "20.309, 77.8747, 3.09123, 1.37", "21.3081, 80.0608, 3.03564, 0.17", "23.1325, 83.9793, 2.82616, 0.17" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "0.925683, 22.3328, -4.43152, 0.68", "-0.0875213, 24.1643, -3.5687, 0.68", "-0.703672, 25.2781, -3.044, 0.68", "-1.04778, 25.9001, -2.75096, 1.03" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.925683, 22.3328, -4.43152, 0.68", "3.07466, 25.4133, -6.17357, 0.68", "5.3403, 28.148, -8.23037, 0.68", "5.99377, 28.8907, -8.60105, 0.68", "8.61705, 30.9201, -8.87249, 0.68", "12.0181, 33.5513, -9.22442, 0.17", "18.3185, 38.4254, -9.87634, 0.17", "20.0558, 39.6283, -9.85244, 0.17", "27.4005, 44.1267, -9.19661, 0.17", "37.9659, 49.7402, -7.5835, 0.17" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "25.8586, 10.3546, -15.0363, 0.17", "31.4797, 13.0128, -18.0456, 0.17", "33.2136, 13.8832, -18.7782, 0.17", "33.4535, 14.004, -18.8646, 0.17", "37.0273, 15.7904, -19.9941, 0.17", "41.6623, 18.0944, -21.3683, 1.88", "43.6446, 19.0709, -21.933, 0.17", "46.5229, 20.4707, -22.6173, 0.17", "47.9755, 21.1799, -23.0625, 1.37", "49.4297, 21.8846, -23.5856, 0.17", "49.8175, 22.0868, -23.738, 0.17", "49.9734, 22.1776, -23.8232, 0.17", "54.9424, 25.4123, -27.2164, 0.17", "57.1077, 26.9912, -28.7817, 1.71", "57.4771, 27.2999, -29.1074, 0.17", "60.2431, 29.8626, -31.7577, 0.17", "64.0015, 33.4783, -35.3437, 1.71", "64.1199, 33.5958, -35.4538, 0.17", "66.7368, 36.2838, -37.7779, 0.17", "70.1057, 39.7246, -41.2208, 1.71", "71.3248, 40.8408, -42.4368, 0.17", "72.6428, 41.9011, -43.649, 0.17", "73.977, 42.8536, -44.6197, 1.71", "75.0307, 43.5529, -45.3345, 0.17", "80.7252, 46.7753, -48.8349, 0.17", "82.9816, 47.982, -50.001, 0.17", "85.0007, 49.0515, -51.017, 1.71", "86.4396, 49.831, -51.7215, 0.17", "91.8993, 52.7511, -54.2234, 0.17", "94.305, 53.9404, -54.9353, 1.71", "95.4792, 54.3947, -54.5614, 0.17", "97.396, 55.0341, -52.9322, 0.17", "97.4705, 55.0388, -52.748, 0.17", "97.694, 55.0268, -52.0467, 1.37", "102.028, 54.7533, -38.8233, 0.17", "103.546, 54.6759, -34.2484, 0.17", "103.992, 54.6491, -32.9312, 1.2", "111.326, 54.5476, -13.1567, 0.17", "111.483, 54.5547, -12.7789, 0.17", "113.972, 54.7265, -7.02174, 0.17", "114.177, 54.7486, -6.61705, 1.88", "114.437, 54.7411, -6.05472, 0.17", "116.907, 54.749, -1.16106, 0.17", "117.468, 55.0139, -1.1462, 1.54" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "25.8586, 10.3546, -15.0363, 0.34", "25.3561, 15.2848, -14.9111, 0.34", "25.2918, 17.4781, -14.8957, 0.34", "25.2766, 21.269, -14.8903, 0.34", "25.4557, 27.2416, -15.0551, 0.68", "25.6307, 31.9472, -15.4519, 0.68", "25.9695, 40.5311, -16.4413, 0.68", "26.3681, 46.9647, -17.5491, 0.68", "26.3946, 47.1859, -17.5976, 0.68", "27.4815, 52.4374, -18.8018, 0.68", "28.7918, 57.1308, -19.8783, 0.34", "30.5805, 62.6309, -21.1356, 0.34", "31.7892, 66.0229, -21.8102, 0.34", "35.2093, 75.051, -23.3868, 0.34", "39.171, 85.0885, -24.7475, 0.34", "39.817, 86.6484, -24.8647, 2.05", "40.3905, 87.9568, -24.8937, 0.17", "42.7555, 93.0639, -24.9545, 0.17", "43.0365, 93.713, -24.9372, 0.68", "43.2312, 94.2801, -24.8668, 0.17", "44.1095, 97.9862, -24.4333, 0.17", "44.188, 98.509, -24.378, 1.54", "44.2748, 99.3552, -24.3116, 0.17", "44.4518, 102.611, -24.1348, 0.17", "44.5324, 104.482, -24.0572, 1.54", "44.5486, 105.199, -24.0336, 0.17", "44.5894, 110.91, -23.8964, 0.17", "44.5985, 112.541, -23.8543, 1.2", "44.5987, 113.603, -23.824, 0.17", "44.6052, 117.221, -23.6861, 0.17", "44.596, 118.929, -23.5928, 1.88", "44.5911, 119.532, -23.5506, 0.17", "44.5853, 123.079, -23.2337, 0.17", "44.5673, 124.748, -23.0491, 0.17", "44.5267, 129.191, -22.5578, 0.17", "44.4768, 132.7, -22.1693, 0.17", "44.4874, 133.229, -22.1112, 1.37", "44.595, 134.399, -21.9853, 0.17", "45.2912, 138.902, -21.509, 0.17", "45.7484, 141.101, -21.2798, 1.2", "46.1867, 142.546, -21.1332, 0.17", "47.4175, 145.487, -20.8448, 0.17", "49.8566, 150.459, -20.3678, 0.17", "50.1246, 150.913, -20.3256, 1.54", "50.422, 151.314, -20.2901, 0.17", "52.4413, 153.61, -20.0959, 0.17", "54.6596, 155.739, -19.9261, 0.17", "54.7867, 155.85, -19.9175, 0.17", "55.1553, 156.153, -19.8949, 1.88", "55.7199, 156.621, -19.8597, 0.17", "58.0777, 158.554, -19.7156, 0.17", "60.1112, 160.269, -19.5859, 0.17", "61.6594, 161.568, -19.488, 1.54", "61.7802, 161.672, -19.4801, 1.54" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "21.876, 8.87967, 11.6704, 0.68", "22.8832, 12.7104, 11.5617, 0.68", "23.6834, 15.7542, 11.4753, 0.68", "24.6947, 19.6008, 11.3661, 0.68", "25.5383, 22.8096, 11.275, 0.68", "26.5891, 26.8066, 11.1616, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "21.876, 8.87967, 11.6704, 0.68", "25.1897, 9.18921, 12.9396, 0.68", "28.2226, 9.47252, 14.1012, 0.68", "33.7463, 9.98851, 16.2169, 0.68", "38.3234, 10.416, 17.97, 0.68", "49.9649, 12.6253, 22.532, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.35762, -28.436, -14.532, 0.17", "5.842, -29.3282, -5.68182, 0.17", "5.86651, -29.3502, -5.52757, 0.17", "6.27543, -29.5912, -4.37487, 0.17", "6.75568, -29.8574, -3.80217, 0.17", "7.45788, -30.264, -3.26143, 1.37", "8.52998, -30.915, -2.62849, 0.17", "9.95298, -31.7335, -2.59758, 0.68", "10.7277, -32.1712, -2.5764, 0.17", "12.4477, -33.1503, -2.52508, 0.86", "12.727, -33.278, -2.50988, 0.17", "13.0968, -33.4079, -2.47682, 0.17", "14.0699, -33.6508, -2.36216, 0.17", "15.4554, -33.9308, -2.16566, 1.2", "15.9886, -34.02, -2.08954, 1.2", "18.4574, -34.3061, -1.73368, 0.17", "21.2432, -34.6652, -1.33311, 0.68", "22.228, -34.8097, -1.19197, 0.17", "23.6543, -35.0771, -0.989114, 0.17", "24.5948, -35.316, -0.857041, 1.37", "25.2438, -35.5276, -0.767161, 0.17", "26.8706, -36.2289, -0.546459, 0.17", "27.4452, -36.4996, -0.469126, 1.88", "28.2339, -36.8732, -0.363036, 0.17", "29.8358, -37.6601, 0.18481, 0.17", "31.3257, -38.4051, 0.9234, 0.17", "32.2709, -38.8563, 1.48974, 2.05", "32.7222, -39.0696, 1.79943, 0.17", "34.5297, -39.98, 3.37516, 0.17", "38.0802, -41.6828, 6.82376, 2.05", "38.2373, -41.757, 6.99417, 0.17", "39.3884, -42.2918, 8.42264, 0.17", "40.1102, -42.6287, 9.35354, 1.71", "42.1079, -43.5915, 11.9785, 0.17", "43.5277, -44.2535, 13.8309, 0.17", "43.6311, -44.2927, 13.9358, 0.86", "45.2204, -44.8447, 15.4726, 0.17", "46.2846, -45.1713, 16.4561, 0.17", "46.3685, -45.19, 16.5169, 0.17", "46.83, -45.2908, 16.81, 1.88", "47.5028, -45.5297, 17.3245, 0.17", "48.6203, -46.018, 18.14, 0.17", "48.8895, -46.1438, 18.319, 1.37", "49.5032, -46.505, 19.1242, 0.34", "50.9331, -47.5031, 21.5147, 0.17", "51.5578, -47.9838, 22.6978, 0.17", "52.1146, -48.4644, 23.9268, 0.17", "52.3491, -48.6893, 24.5379, 2.05", "54.3914, -50.7732, 30.4056, 0.17", "54.5129, -50.9073, 30.8056, 1.71", "58.4662, -53.0955, 35.3315, 1.71" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.35762, -28.436, -14.532, 1.2", "4.48242, -30.6605, -13.923, 1.2", "2.94956, -34.6769, -12.9104, 0.68", "1.7825, -37.8055, -12.1604, 2.22", "1.25629, -39.4969, -11.7902, 0.86", "1.01096, -40.2855, -11.6177, 0.68", "0.240405, -42.7624, -11.0757, 0.68", "-0.0713223, -43.7187, -10.8529, 1.54", "-0.116373, -43.8804, -10.8197, 1.54", "-0.56551, -46.4508, -10.7981, 1.54" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "39.2524, 8.96767, -0.662165, 0.17", "53.8321, 12.494, -0.662165, 0.17", "68.4117, 16.0203, -0.662165, 0.17" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-20.4987, -4.17936, 1.94354, 0.86", "-21.3787, -5.88159, 0.805584, 0.86", "-22.4646, -7.57426, -0.593639, 0.68", "-23.9107, -9.49322, -2.38038, 0.68", "-28.5676, -15.0132, -7.96309, 0.68", "-30.8266, -17.3492, -10.5368, 0.68", "-33.0552, -19.2951, -13.002, 0.68", "-35.7106, -20.939, -15.7762, 1.2", "-36.7371, -21.2952, -16.749, 1.2", "-37.3242, -21.3538, -17.178, 0.68", "-39.2881, -21.1731, -18.07, 0.68", "-42.2789, -20.6707, -19.3726, 0.51", "-43.826, -20.3887, -19.8154, 0.51", "-46.6233, -20.0635, -20.1933, 1.88", "-49.496, -19.982, -20.482, 1.88", "-51.7644, -20.2002, -20.5914, 1.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-20.4987, -4.17936, 1.94354, 0.86", "-22.2655, -4.21695, -0.0465501, 0.86", "-24.9095, -4.48126, -2.87766, 0.86", "-26.8498, -4.68151, -4.81996, 0.86", "-32.3498, -4.94526, -9.84094, 0.86", "-34.1973, -4.96573, -11.4226, 0.86", "-39.5403, -4.95388, -15.9207, 0.86", "-40.7449, -4.94668, -16.9264, 0.86", "-42.6864, -4.91848, -18.4869, 0.86", "-46.0475, -4.84072, -21.0546, 0.86", "-48.7168, -4.81447, -23.0181, 0.51", "-51.697, -4.73704, -25.1331, 0.34", "-54.9825, -4.4713, -27.2428, 0.17", "-57.3244, -4.33487, -28.6871, 0.17", "-59.4061, -4.3369, -29.8803, 2.05", "-61.0131, -4.4274, -30.626, 0.17", "-62.6138, -4.47285, -31.0857, 0.17", "-63.6342, -4.47212, -31.212, 0.68", "-66.1339, -4.46915, -31.2751, 0.34", "-66.9325, -4.49285, -31.2896, 0.17", "-69.0216, -4.54335, -31.2618, 1.88", "-70.0211, -4.57056, -31.1559, 0.17", "-71.4379, -4.61699, -30.9036, 0.17", "-73.0018, -4.69763, -30.5374, 1.2", "-73.926, -4.74381, -30.2843, 0.17", "-76.9237, -4.83182, -29.4454, 0.17", "-79.3454, -4.76763, -28.5368, 1.71", "-80.4075, -4.70197, -28.074, 0.17", "-81.8213, -4.5401, -27.4086, 0.17", "-83.1053, -4.31399, -26.8142, 2.39", "-84.7731, -4.02838, -26.1323, 0.68", "-88.2756, -3.54741, -24.958, 0.17", "-89.3464, -3.4461, -24.671, 0.17", "-90.547, -3.34822, -24.3375, 1.2", "-92.6459, -3.2294, -23.7526, 0.17", "-95.6266, -3.16205, -23.0043, 0.17", "-97.2358, -3.1994, -22.7381, 2.22", "-97.7652, -3.24722, -22.7369, 2.22" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-77.3256, 26.3438, -37.2295, 0.17", "-78.7467, 28.4882, -36.7985, 0.17", "-79.6124, 29.6911, -36.5587, 0.17", "-82.2529, 33.2376, -35.8535, 0.17", "-82.6374, 33.7143, -35.7587, 0.17", "-87.041, 39.1276, -34.6723, 0.17", "-89.4608, 42.0734, -34.0792, 1.2", "-90.2325, 43.0339, -33.8781, 0.17", "-90.4063, 43.2535, -33.8399, 0.17", "-97.8004, 52.5357, -32.5154, 0.17", "-100.187, 55.6223, -32.1434, 1.54", "-101.295, 57.0986, -32.0036, 0.17", "-104.198, 61.1655, -31.68, 0.17", "-106.143, 64.0184, -31.5665, 1.2", "-106.97, 65.3349, -31.5678, 0.17", "-107.093, 65.5712, -31.5871, 0.17", "-108.02, 67.4581, -31.7727, 0.17", "-108.911, 69.3653, -31.9391, 1.37", "-110.389, 72.1659, -32.1135, 0.17", "-112.507, 75.8299, -32.4462, 0.17", "-112.658, 76.066, -32.4828, 0.17", "-113.589, 77.4088, -32.7597, 1.03", "-114.085, 78.0736, -33.0556, 0.17", "-116.013, 80.4789, -34.3901, 0.17", "-118.798, 83.7664, -36.3853, 1.71", "-120.184, 85.3693, -37.3518, 0.17", "-120.353, 85.5644, -37.4623, 0.17", "-126.756, 93.2148, -41.4791, 0.17", "-128.362, 95.2219, -42.3856, 1.37", "-128.99, 96.0635, -42.7322, 0.17", "-131.579, 99.6007, -43.9198, 0.17", "-132.361, 100.7, -44.2352, 1.54", "-133.691, 102.502, -44.5603, 0.17", "-135.329, 104.553, -44.5745, 0.17", "-137.644, 107.291, -44.5373, 1.88", "-138.947, 108.751, -44.4718, 0.17", "-141.082, 110.974, -44.2976, 0.17", "-143.366, 113.169, -44.0289, 1.54", "-144.397, 114.082, -43.8741, 0.17", "-147.319, 116.525, -43.3416, 0.17", "-149.53, 118.302, -42.8513, 1.71", "-151.355, 119.729, -42.4887, 0.17", "-153.798, 121.605, -42.0721, 0.17", "-155.22, 122.603, -41.9023, 2.22", "-156.883, 123.679, -41.7323, 0.17", "-159.517, 125.23, -41.5114, 0.17", "-160.192, 125.616, -41.458, 1.88", "-162.395, 126.856, -41.2889, 0.17", "-168.206, 130.055, -40.8619, 0.17", "-170.087, 131.064, -40.7308, 1.03", "-172.506, 132.326, -40.4665, 0.17", "-177.44, 134.808, -39.7927, 0.17", "-179.184, 135.686, -39.5082, 2.05", "-182.069, 137.054, -38.6795, 0.17", "-186.121, 138.735, -37.0555, 0.17", "-189.631, 139.792, -35.3844, 1.03", "-190.914, 139.984, -34.6934, 0.17", "-192.803, 140.063, -33.5743, 0.17", "-199.806, 139.882, -29.2787, 0.17", "-203.189, 139.584, -27.2312, 0.17", "-206.259, 139.237, -25.4954, 0.17", "-213.617, 138.466, -22.1506, 0.17", "-214.148, 138.438, -21.9897, 1.71", "-215.247, 138.449, -21.8459, 0.17", "-218.115, 138.952, -22.261, 0.17", "-220.446, 139.71, -22.9092, 0.17", "-224.228, 141.162, -23.943, 0.17", "-230.774, 143.688, -25.8372, 1.37", "-232.307, 144.226, -26.1943, 0.17", "-236.873, 145.581, -26.9631, 0.17", "-242.504, 146.869, -27.3144, 0.17", "-248.52, 147.978, -27.2816, 1.03", "-250.215, 148.228, -27.0907, 0.17", "-251.547, 148.31, -26.7599, 0.17", "-256.535, 148.351, -25.4327, 0.17", "-259.62, 147.998, -24.2195, 1.03" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-77.3256, 26.3438, -37.2295, 0.34", "-79.9771, 25.4882, -38.6791, 0.34", "-82.9668, 24.6777, -40.1263, 0.34", "-83.8402, 24.4091, -40.5322, 0.34", "-84.1298, 24.3129, -40.6567, 0.34", "-87.7394, 23.045, -42.5511, 0.34", "-90.4939, 21.9896, -44.0609, 0.34", "-93.0785, 20.9439, -45.3597, 1.03", "-94.3463, 20.3715, -45.9624, 0.68", "-96.0378, 19.5358, -46.9729, 0.86", "-98.9771, 17.9021, -49.0679, 0.17", "-101.853, 16.0554, -51.4047, 0.17", "-102.944, 15.3316, -52.3142, 1.37", "-104.49, 14.3673, -53.4676, 0.17", "-109.63, 11.432, -57.042, 0.17", "-109.822, 11.3362, -57.1542, 0.17", "-111.585, 10.6108, -57.9095, 1.03", "-112.683, 10.3209, -58.2916, 0.34", "-115.474, 10.0055, -59.1061, 0.34", "-115.931, 10.0061, -59.2055, 0.34", "-119.118, 10.0855, -59.5621, 0.17", "-120.158, 10.1008, -59.7062, 2.05", "-123.281, 10.1972, -60.203, 0.17", "-125.911, 10.2321, -60.5998, 0.17", "-126.388, 10.2276, -60.6667, 0.17", "-132.31, 10.095, -61.3957, 0.17", "-134.5, 10.025, -61.8108, 1.03", "-136.671, 9.90511, -62.3148, 0.17", "-140.338, 9.61142, -63.259, 0.17", "-142.924, 9.32432, -63.9488, 0.17", "-146.015, 9.00912, -65.0163, 1.54", "-150.785, 8.55504, -67.1131, 0.17", "-153.302, 8.23496, -68.388, 0.17", "-154.93, 7.97185, -69.3303, 0.86", "-156.07, 7.75103, -70.0732, 0.17", "-159.435, 6.9174, -72.9811, 0.17", "-160.169, 6.69776, -73.6993, 1.37", "-160.517, 6.59733, -74.0797, 0.17", "-160.659, 6.56015, -74.2496, 0.17", "-161.535, 6.35166, -75.3607, 0.17", "-165.958, 5.30479, -80.9801, 0.17", "-167.524, 4.91087, -83.0195, 1.37", "-171.447, 3.95958, -88.198, 0.17", "-172.858, 3.61685, -90.0656, 0.17", "-175.612, 2.96733, -93.6632, 0.17", "-176.945, 2.67361, -95.3746, 1.88" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "23.1325, 83.9793, 2.82616, 0.17", "22.9623, 86.2938, 6.42038, 0.17", "22.9493, 87.5271, 7.89491, 0.68", "23.032, 92.2498, 12.7062, 0.68", "23.0876, 95.4255, 15.9414, 0.68", "23.1121, 96.8295, 17.3717, 0.51", "23.135, 98.1368, 18.7034, 0.51", "23.1469, 99.9375, 19.8913, 0.51", "23.1697, 100.237, 20.0231, 0.51", "23.0936, 108.04, 25.7415, 0.51", "22.5885, 114.464, 32.8956, 0.51", "21.1462, 120.537, 40.2153, 0.51", "19.4013, 125.796, 48.0504, 0.51", "17.0807, 131.127, 55.69, 0.51", "14.4382, 137.816, 62.114, 0.51", "11.7957, 145.146, 67.8349, 0.51", "8.98397, 151.458, 74.5446, 0.51", "5.32275, 158.0, 80.6079, 0.51" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "23.1325, 83.9793, 2.82616, 0.17", "24.4146, 83.5411, -18.8807, 0.17", "24.4261, 83.5371, -19.0745, 0.17", "24.5851, 83.4828, -21.7677, 2.22", "24.6581, 83.4578, -23.0033, 2.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "26.5891, 26.8066, 11.1616, 0.68", "27.2124, 28.641, 10.0132, 0.68", "27.2798, 28.9496, 9.85992, 1.88", "27.7045, 34.057, 8.4203, 0.17", "27.7512, 37.6549, 7.64206, 0.51", "27.7169, 40.7997, 7.06845, 0.51", "27.6642, 45.6252, 6.18829, 0.51", "27.4897, 49.8592, 5.46567, 1.03", "27.0582, 56.4838, 4.66514, 1.03", "26.678, 60.0679, 4.57268, 1.03", "26.3676, 61.8062, 4.55869, 0.17" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "26.5891, 26.8066, 11.1616, 0.17", "27.9792, 26.7346, 12.2086, 0.17", "30.0803, 26.6257, 13.791, 0.17", "31.6275, 26.5456, 14.9563, 0.51", "34.8663, 26.3778, 17.3957, 0.51", "40.5196, 26.085, 21.6536, 0.51", "40.6852, 26.0764, 21.7784, 0.51" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.56551, -46.4508, -10.7981, 1.54", "-0.465511, -46.9547, -10.8955, 1.54", "-0.31547, -47.7107, -11.0416, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.56551, -46.4508, -10.7981, 0.17", "0.3419, -47.5553, -8.62409, 0.17", "0.781213, -48.5194, -6.87952, 0.17", "0.830971, -48.7233, -6.56098, 1.71", "0.931754, -49.4586, -5.38092, 0.17", "0.957647, -53.276, 1.36974, 0.17", "0.744955, -56.293, 6.64995, 0.17", "0.434709, -57.747, 9.204, 0.17", "0.0860464, -58.9846, 11.292, 0.17", "-0.98465, -62.5206, 16.736, 0.17", "-1.86563, -65.361, 20.6024, 0.17", "-2.35612, -66.7099, 22.1893, 0.17", "-2.64717, -67.741, 23.3409, 0.17", "-2.92443, -69.1147, 24.9203, 0.17", "-3.29001, -71.3975, 27.37, 0.17", "-3.62277, -74.9298, 29.5297, 0.17", "-6.44644, -79.5991, 37.8034, 0.17", "-11.0074, -82.3178, 46.1305, 0.17", "-15.7052, -84.9331, 54.4129, 0.17", "-19.2229, -88.1453, 63.0724, 0.17", "-23.6882, -91.026, 71.3994, 0.17" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-51.7644, -20.2002, -20.5914, 0.17", "-51.8699, -20.1471, -20.6364, 0.17", "-52.6101, -19.7194, -21.0217, 0.17", "-53.1723, -19.4223, -21.3018, 0.17", "-54.545, -18.757, -21.9457, 1.37", "-55.5694, -18.319, -22.391, 1.37", "-57.4627, -17.6217, -23.1409, 0.17", "-58.6411, -17.2362, -23.579, 0.17", "-59.759, -16.9554, -24.023, 0.17", "-60.3508, -16.8811, -24.2439, 1.03", "-61.0363, -16.9229, -24.6059, 1.03", "-62.1504, -17.1623, -25.2671, 0.17", "-62.7899, -17.4231, -25.7157, 0.17", "-64.5267, -18.4333, -27.1158, 2.22", "-65.5396, -19.1363, -28.0321, 2.22", "-68.4248, -21.3828, -30.6814, 0.17", "-69.434, -22.3075, -31.7119, 0.17", "-71.0924, -23.9781, -33.411, 0.17", "-71.7226, -24.6747, -33.9961, 1.88", "-71.8039, -24.7788, -34.0598, 1.88", "-72.8687, -26.3337, -34.8153, 1.2", "-74.3286, -28.728, -35.5237, 0.34", "-75.3814, -30.5936, -35.9493, 0.34", "-76.5061, -32.841, -36.2427, 2.05", "-77.3822, -34.7605, -36.4044, 0.51", "-78.4399, -37.2492, -36.5054, 0.51", "-79.476, -39.8664, -36.4833, 0.17", "-80.3521, -42.0325, -36.3307, 0.17", "-81.4663, -44.7719, -36.0979, 0.17", "-82.1221, -46.1774, -35.9491, 1.54", "-82.6432, -47.0755, -35.8182, 1.54", "-83.4675, -48.2487, -35.5259, 0.17", "-84.541, -49.55, -35.1391, 0.17", "-85.4478, -50.537, -34.8014, 2.05", "-86.4107, -51.4434, -34.3878, 0.34", "-88.6268, -53.4237, -33.247, 0.34", "-90.0122, -54.6156, -32.4368, 1.54", "-91.0915, -55.4869, -31.7489, 1.54", "-91.3985, -55.7162, -31.5481, 0.17", "-93.2147, -56.9538, -30.3561, 0.17", "-94.1288, -57.5147, -29.7818, 1.03", "-94.5004, -57.7442, -29.5723, 1.03", "-95.3738, -58.259, -29.2014, 0.17", "-97.1192, -59.1535, -28.6106, 0.17", "-97.4151, -59.298, -28.5352, 0.68", "-98.4004, -59.7574, -28.2809, 0.17", "-100.55, -60.6964, -27.7793, 0.17", "-102.426, -61.5107, -27.2098, 0.17", "-103.555, -62.0315, -26.8202, 1.37", "-104.787, -62.6509, -26.3452, 0.51", "-106.87, -63.7959, -25.1612, 0.51", "-108.394, -64.7008, -24.0223, 0.51", "-110.025, -65.7062, -22.5858, 0.17", "-111.038, -66.4601, -21.5706, 1.2", "-111.608, -66.881, -21.0155, 1.2", "-114.235, -68.7902, -18.5688, 0.17", "-115.029, -69.3636, -17.9251, 0.17", "-115.95, -69.9726, -17.0724, 1.88", "-116.52, -70.3073, -16.5743, 0.17", "-117.769, -71.0213, -15.3894, 0.17", "-118.083, -71.2068, -15.1087, 0.86", "-118.933, -71.7665, -14.5273, 0.86", "-120.852, -73.2323, -13.0972, 0.17", "-121.337, -73.5965, -12.7612, 0.17", "-121.916, -73.994, -12.4273, 0.17", "-122.436, -74.3576, -12.1718, 0.86", "-123.89, -75.3709, -11.6013, 0.34", "-125.311, -76.3611, -11.129, 0.34", "-126.621, -77.3248, -10.7584, 0.34", "-129.492, -79.5168, -10.1116, 0.34", "-130.95, -80.6783, -9.84032, 0.34", "-134.028, -83.2113, -9.27282, 0.34", "-134.139, -83.3085, -9.25275, 0.34", "-135.579, -84.6506, -9.01811, 0.34", "-137.467, -86.6797, -8.77749, 1.88", "-137.888, -87.1905, -8.8017, 1.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-51.7644, -20.2002, -20.5914, 0.68", "-53.4005, -25.0095, -21.3141, 0.68", "-53.9376, -26.5882, -21.5513, 0.51", "-54.7584, -29.0011, -21.9139, 0.51", "-56.0704, -32.8576, -22.4933, 0.51" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-97.7652, -3.24722, -22.7369, 0.17", "-98.3556, -3.57388, -23.4719, 0.17", "-98.4801, -3.64168, -23.6296, 0.17", "-98.9025, -3.8283, -24.1024, 0.17", "-100.276, -4.46721, -25.8408, 0.86", "-102.494, -5.46946, -28.5787, 0.34", "-107.23, -7.87929, -34.8226, 0.34", "-108.297, -8.40073, -36.1608, 1.71", "-110.066, -9.19101, -38.2581, 0.17", "-113.32, -10.4893, -41.79, 0.17", "-114.927, -11.1065, -43.4811, 0.17", "-119.853, -12.6885, -47.9174, 0.17", "-123.667, -13.5814, -50.6923, 0.17", "-125.116, -13.9116, -51.6597, 1.88", "-128.013, -14.4475, -53.285, 0.17", "-133.901, -15.1971, -55.7894, 0.17", "-136.797, -15.4624, -56.8879, 0.17", "-137.875, -15.5261, -57.2261, 1.2", "-139.968, -15.6896, -58.0, 0.17", "-143.605, -16.1516, -59.603, 0.17", "-144.236, -16.2458, -59.9135, 0.17", "-144.441, -16.266, -59.9973, 0.17", "-147.28, -16.7122, -61.3755, 0.17", "-149.231, -17.1035, -62.324, 2.05", "-152.657, -17.872, -63.945, 1.54", "-153.717, -18.1281, -64.4053, 0.17", "-156.953, -18.9145, -65.6435, 0.17", "-162.458, -20.2766, -67.4002, 0.17", "-164.616, -20.7174, -67.8361, 1.03", "-166.387, -21.0415, -68.0543, 0.17", "-168.142, -21.2712, -68.1009, 0.17", "-169.317, -21.4156, -68.063, 1.54", "-170.64, -21.5377, -67.9042, 0.17", "-175.067, -21.5372, -66.9151, 0.17", "-175.29, -21.5384, -66.8832, 0.17", "-177.042, -21.569, -66.9083, 1.54", "-177.728, -21.5723, -67.0422, 0.17", "-180.062, -21.5158, -67.81, 0.17", "-180.487, -21.4904, -68.0472, 1.54", "-184.693, -21.0851, -70.7849, 0.17", "-187.631, -20.6217, -72.7227, 0.17", "-190.019, -20.1747, -74.2402, 2.05", "-191.894, -19.7579, -75.3108, 0.17", "-197.371, -18.2241, -77.8935, 0.17", "-200.754, -17.1854, -79.1419, 1.2", "-202.115, -16.7238, -79.5106, 0.17", "-205.944, -15.3934, -80.404, 0.17", "-210.841, -13.5773, -80.9656, 0.17", "-214.81, -12.0616, -80.6696, 1.54", "-216.597, -11.3568, -80.1989, 0.17", "-217.378, -11.0285, -79.8588, 0.86", "-217.753, -10.876, -79.6643, 0.17", "-222.449, -9.09302, -76.6461, 0.17", "-226.258, -7.93333, -73.9534, 0.17", "-227.838, -7.5614, -72.8352, 1.54", "-232.024, -6.73537, -69.8322, 0.17", "-235.993, -6.07117, -66.8278, 0.17", "-240.086, -5.43288, -63.5059, 1.2", "-241.51, -5.25598, -62.31, 1.2", "-242.185, -5.17485, -61.6981, 0.17", "-243.314, -5.04098, -60.6349, 0.17", "-246.844, -4.64654, -57.3666, 0.86", "-250.646, -4.05788, -53.6459, 0.34", "-252.189, -3.77382, -52.3744, 0.34", "-252.375, -3.74353, -52.2509, 0.34", "-253.127, -3.61548, -51.7922, 1.03", "-253.943, -3.52396, -51.4032, 0.17", "-256.324, -3.94579, -51.4664, 0.17", "-259.829, -5.47555, -52.8369, 1.2", "-261.429, -6.33018, -53.6385, 0.68" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-97.7652, -3.24722, -22.7369, 0.17", "-100.735, 0.203382, -23.8452, 0.17", "-102.598, 2.24302, -24.2187, 0.17", "-104.293, 4.01161, -24.2229, 1.03", "-105.181, 4.91244, -24.1442, 0.17", "-106.415, 6.14598, -23.9651, 0.17", "-109.946, 9.63253, -23.3566, 0.17", "-110.06, 9.73759, -23.3188, 0.17", "-111.997, 11.4719, -22.5715, 1.2", "-112.306, 11.7612, -22.4357, 0.17", "-114.171, 13.6532, -21.5379, 0.17", "-114.654, 14.2146, -21.2878, 0.17", "-115.194, 14.8875, -21.0333, 1.54", "-115.87, 15.7265, -20.7453, 0.17", "-116.936, 17.0197, -20.3401, 0.17", "-118.545, 18.8276, -20.0302, 0.17", "-118.994, 19.295, -20.0048, 1.71", "-120.204, 20.4294, -20.0423, 0.17", "-121.389, 21.4557, -20.1463, 0.17", "-123.64, 23.1789, -20.441, 0.17", "-127.396, 25.7083, -21.0905, 1.54", "-129.255, 26.7632, -21.4621, 0.17", "-131.501, 27.8322, -22.0202, 0.17", "-131.501, 27.8322, -22.0202, 2.05", "-133.755, 28.507, -22.7256, 0.17", "-134.669, 28.6804, -23.025, 0.17", "-138.066, 29.0087, -23.6968, 0.17", "-141.314, 29.1067, -24.2008, 1.03", "-142.082, 29.1285, -24.2736, 0.17", "-142.237, 29.1429, -24.275, 0.17", "-142.989, 29.2964, -24.1754, 0.17", "-146.387, 30.6645, -23.1571, 1.37", "-147.278, 31.2005, -22.7112, 0.17", "-148.342, 31.9414, -22.0955, 0.17", "-149.355, 32.7854, -21.5639, 1.03", "-150.286, 33.6515, -21.1517, 0.17", "-151.213, 34.6591, -20.856, 0.17", "-151.64, 35.1557, -20.7252, 1.03", "-151.85, 35.4108, -20.6021, 0.17", "-152.556, 36.2169, -19.883, 0.17", "-152.637, 36.3086, -19.7813, 0.17", "-152.936, 36.6559, -19.3233, 1.2", "-154.615, 38.5711, -16.3445, 0.17", "-155.166, 39.1798, -15.2942, 0.17", "-156.3, 40.3246, -13.069, 1.54" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-176.945, 2.67361, -95.3746, 0.17", "-176.682, 0.785866, -94.4636, 0.17", "-176.428, -1.04045, -93.5824, 0.17", "-175.63, -6.77175, -90.8167, 0.17", "-175.538, -7.43681, -90.4958, 0.86", "-175.527, -7.5155, -90.4578, 0.86" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-176.945, 2.67361, -95.3746, 0.17", "-178.222, 3.02087, -96.1767, 0.17", "-181.785, 4.12424, -98.2855, 0.17", "-181.929, 4.17579, -98.3853, 0.17", "-184.887, 5.24994, -100.557, 1.37", "-186.41, 5.79695, -101.663, 0.17", "-189.675, 7.00923, -103.956, 0.17", "-190.882, 7.51024, -104.841, 0.17", "-194.112, 8.97472, -107.517, 1.03", "-194.531, 9.16919, -107.846, 0.17", "-196.009, 9.84363, -108.874, 0.17", "-197.486, 10.4854, -109.879, 0.68", "-197.748, 10.5895, -110.093, 0.68", "-199.652, 11.233, -111.579, 0.17", "-201.865, 11.8142, -113.165, 0.17", "-203.15, 12.087, -114.196, 1.2", "-203.917, 12.1889, -114.837, 0.17", "-206.837, 12.3892, -117.195, 0.17", "-207.989, 12.4304, -118.048, 0.17", "-209.141, 12.3805, -118.781, 0.68", "-210.73, 12.1105, -119.84, 0.17", "-212.219, 11.7414, -120.774, 0.17", "-213.008, 11.464, -121.246, 1.88", "-213.572, 11.2299, -121.601, 0.17", "-216.773, 9.83583, -123.803, 0.17", "-218.493, 8.9777, -124.968, 1.37", "-219.652, 8.34985, -125.745, 0.17", "-222.362, 6.74039, -127.72, 0.17", "-224.707, 5.28959, -129.463, 1.03", "-225.245, 4.92334, -129.94, 0.17", "-227.361, 3.38114, -132.025, 0.17", "-227.612, 3.20007, -132.28, 0.17", "-228.638, 2.43496, -133.338, 1.2", "-229.408, 1.82228, -134.119, 0.17", "-234.08, -2.00605, -138.746, 0.17", "-234.463, -2.34125, -139.281, 1.37", "-234.546, -2.41543, -139.422, 1.37", "-235.399, -3.22147, -141.043, 0.34", "-236.588, -4.4053, -143.592, 0.34", "-236.724, -4.54457, -143.898, 0.34", "-240.572, -8.50668, -153.272, 0.17", "-240.714, -8.65157, -153.616, 0.17", "-240.911, -8.85337, -154.101, 0.17", "-241.0, -8.93117, -154.32, 0.17", "-242.963, -10.3253, -158.537, 0.86", "-244.957, -11.4832, -161.793, 0.17", "-246.258, -11.8633, -162.718, 0.17", "-246.368, -11.8894, -162.86, 1.37", "-248.432, -12.3987, -166.667, 0.17", "-248.68, -12.4558, -167.104, 1.03", "-248.952, -12.5172, -167.595, 0.17", "-250.053, -12.7811, -169.681, 0.17", "-256.128, -14.4372, -180.117, 1.03", "-258.796, -15.2562, -184.426, 0.17", "-261.575, -16.1706, -188.692, 0.17", "-261.796, -16.2556, -189.013, 1.03", "-265.367, -17.8524, -193.836, 0.17", "-269.67, -20.1072, -198.916, 0.17", "-271.631, -21.3391, -200.317, 1.2", "-272.175, -21.7659, -200.638, 0.17", "-274.374, -24.0937, -202.158, 0.17", "-275.035, -25.0167, -202.585, 0.68", "-275.367, -25.7293, -202.766, 0.17", "-275.856, -28.148, -203.362, 0.17", "-276.365, -31.7593, -204.479, 1.37", "-276.54, -33.4226, -205.15, 0.17", "-276.636, -36.6104, -206.579, 0.17", "-276.468, -37.5264, -206.873, 1.03", "-276.354, -37.9125, -206.971, 0.17", "-274.734, -42.5382, -207.997, 0.17", "-274.588, -42.9102, -208.054, 0.17", "-272.671, -47.4254, -208.571, 0.17", "-268.593, -56.0941, -209.454, 0.17", "-268.358, -56.5818, -209.485, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "24.6581, 83.4578, -23.0033, 0.17", "24.7325, 84.0803, -23.0574, 0.17", "24.78, 84.6039, -23.1034, 0.17", "24.8915, 86.0281, -23.2291, 0.17", "24.9535, 86.7144, -23.1831, 1.71", "25.0996, 88.277, -22.9868, 0.17", "25.3044, 90.7611, -22.6242, 0.17", "25.32, 90.9838, -22.5852, 1.54", "25.3808, 92.2369, -22.3662, 0.17", "25.5506, 95.8197, -21.7224, 0.17", "25.6748, 98.0961, -21.3152, 1.37", "25.6853, 98.7772, -21.2241, 0.17", "25.689, 99.0072, -21.1946, 0.17", "25.6909, 102.59, -20.8372, 0.17", "25.6698, 103.418, -20.8042, 1.2", "25.613, 104.266, -20.8827, 0.17", "25.1927, 109.069, -21.33, 0.17" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "24.6581, 83.4578, -23.0033, 0.86", "27.7432, 83.8121, -19.0574, 0.86", "28.9168, 83.9468, -17.5562, 0.86", "30.3043, 84.1062, -15.7815, 0.34", "31.4638, 84.2393, -14.2985, 0.34", "33.5125, 84.4745, -11.6781, 0.34", "40.1166, 85.2329, -3.2312, 0.17" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "40.6852, 26.0764, 21.7784, 0.17", "37.0417, 31.8633, 21.0974, 0.17", "31.4363, 40.8848, 19.7917, 0.17", "25.3201, 49.3782, 17.6812, 0.17", "18.9336, 57.3508, 14.6574, 0.17", "12.7792, 65.5233, 11.6635, 0.17", "7.60707, 73.8708, 7.52678, 0.17", "0.737581, 81.2741, 4.19841, 0.17", "-5.17953, 89.8839, 1.9797, 0.17", "-10.494, 98.0747, -2.27339, 0.17", "-17.2073, 104.108, -7.79877, 0.17", "-23.2435, 111.204, -12.881, 0.17", "-29.2676, 118.541, -17.6444, 0.17" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "40.6852, 26.0764, 21.7784, 0.68", "41.548, 25.5053, 20.5791, 0.68", "43.112, 24.5923, 18.8079, 0.17", "49.4486, 21.1899, 12.7106, 0.17", "49.4921, 21.1667, 12.6777, 0.17", "50.9245, 20.4461, 11.8485, 0.17", "53.6726, 19.0991, 10.5008, 0.17", "54.3673, 18.778, 10.2685, 1.37", "55.2075, 18.4378, 10.205, 0.17", "58.1583, 17.4935, 10.6798, 0.17", "60.2468, 16.8434, 11.0159, 0.17", "60.3551, 16.809, 11.0334, 0.17", "62.5522, 16.1356, 11.3855, 0.17", "64.6562, 15.4998, 11.7213, 0.17", "66.8472, 15.0525, 12.0399, 0.17", "67.0767, 15.0444, 12.0385, 0.17", "68.1008, 15.1269, 11.8822, 0.17", "70.2314, 15.5468, 11.282, 0.17", "70.33, 15.5888, 11.2431, 0.17", "72.8616, 17.2, 9.92112, 0.17", "76.3333, 19.7299, 7.64217, 0.17", "76.6485, 19.9728, 7.41974, 1.2", "76.8886, 20.1709, 7.23853, 0.17", "80.0762, 22.9937, 4.72727, 0.17", "83.5466, 26.0512, 2.03409, 0.17", "86.5158, 28.438, -0.431951, 0.17", "86.6699, 28.5577, -0.55461, 1.2", "86.9085, 28.7311, -0.771383, 0.17", "87.9544, 29.46, -1.79575, 0.17", "88.2351, 29.6397, -2.12356, 0.86", "91.8544, 31.4824, -6.35061, 0.17", "93.8996, 32.3869, -8.68524, 0.17", "95.9351, 33.2221, -11.0504, 1.54" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-0.31547, -47.7107, -11.0416, 1.03", "-1.01591, -49.4286, -10.8851, 1.03", "-1.70055, -51.5248, -10.7291, 1.54", "-1.93735, -52.5274, -10.6722, 0.68", "-2.46178, -56.142, -10.8341, 0.68", "-2.55893, -58.1441, -10.577, 0.68", "-2.48852, -59.5999, -10.1429, 0.17", "-2.23054, -60.89, -9.49739, 0.86", "-1.79973, -62.0959, -8.65241, 0.86", "-0.682386, -64.4018, -6.31101, 0.51", "2.81005, -70.1574, 0.348302, 0.17", "3.27045, -70.9354, 1.25975, 1.03", "3.79558, -71.9696, 2.41648, 1.03", "3.95917, -72.3587, 2.81269, 1.03", "4.83578, -75.1752, 5.26138, 0.51", "5.40531, -77.8372, 7.14033, 0.51", "5.55004, -78.9934, 7.48759, 1.2", "5.77838, -80.5897, 7.85708, 1.88", "6.00478, -81.922, 8.07737, 0.51", "6.33751, -84.0053, 8.24953, 0.51", "6.44246, -84.9505, 8.16946, 0.51", "6.50223, -86.4598, 7.97114, 0.51", "6.49139, -89.0686, 7.54931, 0.68", "6.46127, -90.0426, 7.37009, 0.68", "6.43611, -91.4779, 7.09054, 0.34", "6.47657, -94.6809, 6.4578, 1.54", "6.46465, -96.2899, 6.16612, 0.68", "6.3304, -97.9054, 5.92712, 0.17", "6.13633, -99.1184, 5.79674, 0.68", "5.72299, -101.285, 5.654, 0.51", "5.39989, -102.747, 5.63121, 0.51", "5.105, -104.161, 5.68789, 0.51", "4.5899, -106.505, 5.78652, 0.51", "4.21948, -108.003, 5.85691, 1.2", "3.78757, -109.477, 5.93819, 0.86", "3.21933, -111.232, 6.0446, 0.17", "2.90807, -112.347, 6.10333, 0.17", "2.5768, -114.195, 6.27678, 0.17", "2.45059, -115.521, 6.44728, 1.54", "2.3829, -116.601, 6.61561, 1.03", "2.31156, -117.577, 6.79022, 0.34", "2.10053, -119.902, 7.22363, 0.34", "1.88818, -122.267, 7.76195, 1.03", "1.83955, -123.15, 7.98676, 0.68", "1.75547, -125.004, 8.4847, 0.17", "1.67363, -126.418, 8.86106, 0.17", "1.49937, -128.612, 9.43617, 0.17", "1.24938, -130.812, 9.95373, 1.54", "1.09265, -132.289, 10.2151, 0.68", "1.00841, -133.342, 10.3601, 0.51", "0.901084, -135.457, 10.5718, 0.51", "0.885181, -135.724, 10.5856, 0.51", "0.624623, -138.089, 10.5745, 0.51", "0.336844, -139.656, 10.4745, 0.51", "0.0759599, -140.911, 10.3846, 0.51", "0.0443135, -141.046, 10.3759, 0.51", "-0.457957, -142.793, 10.0773, 1.37", "-0.496711, -142.916, 10.0548, 1.37", "-1.37052, -145.119, 9.60239, 0.86", "-1.50139, -145.387, 9.55045, 0.17", "-2.36923, -147.076, 9.27011, 0.68", "-3.75135, -149.72, 8.72616, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.31547, -47.7107, -11.0416, 0.86", "-1.13781, -51.0038, -20.3869, 0.86", "-1.15812, -51.0851, -20.6178, 0.86", "-1.40136, -52.0592, -23.382, 0.86" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-137.888, -87.1905, -8.8017, 0.17", "-143.015, -89.0338, -11.203, 0.17", "-145.963, -89.5097, -11.9376, 0.17", "-147.241, -89.5783, -12.1714, 1.03", "-148.289, -89.6345, -12.3632, 0.17", "-151.862, -89.8262, -13.0167, 0.17", "-153.579, -89.9183, -13.3307, 1.03", "-157.187, -89.6263, -13.4528, 0.17", "-159.166, -89.2863, -13.4763, 0.17" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-137.888, -87.1905, -8.8017, 0.17", "-140.184, -88.5871, -8.2704, 0.17", "-142.591, -89.7687, -7.61137, 0.17", "-144.29, -90.5128, -7.12955, 0.86", "-144.868, -90.739, -6.97869, 0.17", "-146.031, -91.1675, -6.6867, 0.17", "-149.484, -92.3973, -5.84945, 0.17", "-151.953, -93.0268, -5.22756, 1.54", "-152.18, -93.0612, -5.12341, 0.17", "-153.824, -93.1466, -3.8204, 0.17", "-153.95, -93.1445, -3.69416, 1.2", "-154.412, -93.1604, -3.14194, 0.17", "-156.491, -93.4151, -0.32731, 0.17", "-158.995, -93.9739, 3.0322, 0.17", "-160.891, -94.6904, 5.62568, 1.54", "-161.263, -94.9248, 6.16791, 0.17", "-163.159, -96.6421, 8.90954, 0.17", "-164.206, -97.7425, 10.569, 1.2", "-164.816, -98.4882, 11.5656, 0.86", "-166.245, -100.284, 13.7492, 0.17", "-167.989, -102.49, 16.3938, 0.17", "-169.262, -104.029, 18.3574, 0.17", "-172.335, -107.487, 23.1462, 0.17", "-172.459, -107.617, 23.3272, 0.17", "-174.521, -109.491, 26.1412, 0.17", "-175.433, -110.207, 27.2803, 0.86", "-176.001, -110.681, 27.9533, 0.86", "-176.299, -110.994, 28.3019, 0.17", "-177.41, -112.492, 29.565, 0.17", "-178.605, -114.379, 31.1848, 1.37", "-179.135, -115.445, 32.124, 0.17", "-180.234, -118.089, 34.4853, 0.17", "-180.995, -120.356, 36.4989, 0.17", "-181.03, -120.489, 36.6131, 0.17", "-181.313, -122.045, 37.8173, 0.17", "-181.432, -122.905, 38.3843, 1.37", "-181.556, -124.071, 38.9287, 0.34", "-181.609, -124.942, 39.1612, 0.17", "-181.723, -127.623, 39.5145, 0.17", "-181.822, -128.993, 39.5885, 1.03", "-181.989, -130.109, 39.5274, 1.03", "-183.039, -134.449, 38.9594, 0.17", "-183.551, -136.046, 38.4114, 0.17", "-183.756, -136.582, 38.1312, 1.03", "-183.915, -136.835, 37.957, 0.17", "-185.085, -138.008, 36.8685, 0.17", "-185.747, -138.533, 36.299, 1.71", "-188.829, -140.144, 34.1798, 0.68", "-189.593, -140.509, 33.6226, 0.17", "-192.701, -142.109, 31.3347, 0.17", "-195.172, -143.457, 29.505, 0.17" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-56.0704, -32.8576, -22.4933, 0.17", "-61.4379, -35.2114, -15.3877, 0.17", "-65.1156, -36.8544, -9.32513, 0.17", "-70.5423, -39.3318, 1.33623, 0.17", "-74.0455, -40.931, 8.21861, 0.17", "-77.1846, -42.3641, 14.3857, 0.17", "-84.965, -45.916, 29.6714, 0.17", "-87.114, -46.7663, 35.4927, 0.17", "-88.5536, -47.2415, 41.0524, 0.17", "-92.1412, -49.4857, 53.5423, 0.17", "-93.6015, -52.7572, 66.2615, 0.17" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-56.0704, -32.8576, -22.4933, 0.51", "-56.6316, -33.1407, -18.4596, 0.51", "-58.8937, -34.1653, -6.99909, 0.51", "-59.6703, -34.5167, -4.00937, 0.51", "-60.2192, -34.7679, -2.26055, 0.51", "-62.408, -35.79, 3.82736, 0.51", "-63.1021, -36.1472, 5.51295, 0.34", "-64.027, -36.7532, 7.54707, 0.34", "-64.9822, -37.6532, 8.96491, 0.34", "-65.442, -38.1608, 9.64996, 0.86", "-65.698, -38.5658, 10.1414, 0.17", "-66.5005, -40.1041, 11.7709, 0.68", "-68.1977, -44.2924, 16.4249, 0.68", "-68.4719, -45.2358, 17.4952, 0.17", "-68.6664, -46.1577, 18.5925, 0.17", "-69.2255, -49.6507, 22.8762, 0.51", "-72.3409, -51.4279, 30.9825, 0.51", "-77.3126, -54.0814, 37.8374, 0.51", "-80.933, -55.166, 45.8395, 0.51", "-84.1246, -56.261, 54.0221, 0.51", "-87.3365, -56.7544, 62.2442, 0.51", "-90.4938, -55.4514, 70.3764, 0.51", "-94.1786, -53.3263, 78.0983, 0.51", "-97.2763, -52.3296, 86.2992, 0.51", "-99.4093, -52.136, 94.8686, 0.51", "-100.134, -52.1898, 103.676, 0.51", "-100.569, -51.3946, 112.457, 0.51" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-261.429, -6.33018, -53.6385, 0.17", "-262.501, -9.30751, -52.5585, 0.17", "-263.479, -11.9524, -51.4686, 0.17", "-263.823, -12.836, -51.0772, 0.68", "-263.891, -12.9971, -51.0021, 0.68", "-264.272, -13.9328, -50.5494, 0.68", "-264.473, -14.3743, -50.3246, 0.17", "-265.768, -16.8578, -48.951, 0.17", "-266.149, -17.4531, -48.5768, 1.37", "-266.623, -18.1364, -48.1471, 1.37", "-267.212, -18.8315, -47.7097, 0.17", "-269.041, -20.5736, -46.1613, 0.17", "-269.819, -21.1682, -45.4694, 0.17", "-270.923, -21.7976, -44.4895, 1.03", "-271.723, -22.2382, -43.7414, 0.17", "-273.766, -23.2572, -41.8175, 0.17", "-276.826, -24.943, -38.739, 1.37", "-277.456, -25.3408, -37.945, 0.17", "-278.227, -25.8736, -36.8741, 0.17", "-279.657, -27.016, -34.8005, 0.68", "-280.052, -27.394, -34.2203, 0.17", "-281.694, -29.1657, -31.787, 0.17", "-283.603, -31.116, -29.4877, 0.68", "-284.159, -31.6018, -28.8852, 0.17", "-285.916, -32.9289, -27.1697, 0.17", "-287.4, -33.6973, -26.1175, 1.37", "-288.492, -34.1698, -25.6189, 0.17", "-290.399, -34.8017, -25.2058, 0.17", "-292.343, -35.4025, -25.0909, 0.17", "-292.842, -35.5898, -25.1139, 0.17", "-296.712, -37.213, -25.5477, 0.17", "-299.617, -38.6607, -25.911, 1.03", "-300.769, -39.3636, -26.0889, 0.51", "-303.325, -41.2046, -26.5091, 0.17", "-306.611, -44.0407, -26.9904, 0.17", "-309.209, -46.674, -27.2778, 0.17", "-310.395, -48.2154, -27.3237, 1.71", "-311.563, -50.09, -27.1753, 0.17", "-311.772, -50.6093, -27.1289, 0.17", "-311.949, -52.4724, -26.8942, 0.17", "-311.912, -52.7264, -26.8394, 1.2", "-311.728, -53.2109, -26.7465, 0.17", "-310.571, -55.5066, -26.2929, 0.17", "-309.556, -57.1506, -25.8308, 1.03", "-308.761, -58.3414, -25.5645, 0.17" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-261.429, -6.33018, -53.6385, 0.17", "-263.109, -6.35013, -54.1003, 0.17", "-265.087, -6.41, -54.7093, 0.17", "-266.368, -6.45353, -55.0803, 0.86", "-267.931, -6.52465, -55.4903, 0.17", "-270.947, -6.69411, -56.2228, 0.17", "-272.263, -6.76803, -56.5424, 1.03", "-273.384, -6.81302, -56.7856, 0.17", "-276.323, -6.9821, -57.4307, 0.17", "-277.608, -7.08353, -57.6807, 0.17", "-278.011, -7.11126, -57.7378, 0.68" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "25.1927, 109.069, -21.33, 0.17", "25.0942, 112.321, -21.0201, 0.17", "24.9958, 116.388, -20.6497, 0.17", "24.9449, 119.265, -20.4141, 0.17", "24.6338, 123.683, -20.1636, 1.2", "24.3853, 126.001, -20.0776, 0.17", "24.0246, 128.599, -20.0434, 0.17", "24.0246, 128.599, -20.0434, 1.03", "23.6186, 130.206, -20.1347, 0.17", "22.408, 134.442, -20.7105, 0.17", "21.9864, 135.9, -21.0215, 0.17", "20.9281, 139.563, -21.9011, 0.17", "19.9411, 143.591, -22.9287, 0.17", "19.7994, 144.335, -23.1214, 0.17", "19.4248, 147.451, -24.1082, 1.37", "19.3599, 148.378, -24.4349, 0.17", "19.2683, 150.414, -25.1834, 0.17", "19.215, 153.702, -26.4193, 0.17", "19.2522, 157.244, -27.7247, 0.17", "19.3066, 164.365, -30.2504, 0.17", "19.3005, 166.829, -31.0592, 0.17", "19.2712, 168.524, -31.6418, 0.17", "19.1871, 169.836, -32.1263, 2.05", "19.073, 170.638, -32.4427, 0.17" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "25.1927, 109.069, -21.33, 0.17", "22.8789, 107.28, -20.8681, 0.17", "20.8097, 105.68, -20.455, 0.17", "17.1966, 102.886, -19.7338, 0.17", "13.1511, 99.7577, -18.9262, 0.17", "7.86353, 95.669, -17.8706, 0.17", "6.4905, 94.6072, -17.5965, 0.17" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "95.9351, 33.2221, -11.0504, 0.17", "99.0488, 36.8132, -11.7227, 0.17", "101.478, 39.6148, -12.2472, 0.17", "103.903, 42.4115, -12.7707, 0.17", "105.754, 44.5461, -13.1703, 0.17", "106.085, 44.9279, -13.2418, 0.17" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "95.9351, 33.2221, -11.0504, 0.17", "98.4803, 38.4352, -14.1934, 0.17", "99.2368, 39.9847, -15.1276, 1.37", "99.4746, 40.4716, -15.4212, 0.17", "100.637, 42.8521, -16.8564, 0.17" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.75135, -149.72, 8.72616, 1.2", "-4.19087, -152.06, 9.61992, 1.2", "-3.98781, -155.536, 13.2446, 0.17", "-3.86133, -156.823, 15.0323, 0.17", "-3.76105, -159.349, 18.9106, 0.17", "-3.71491, -161.682, 23.1848, 0.17", "-3.7143, -161.762, 23.3395, 0.17", "-3.51503, -167.149, 34.8092, 1.54", "-3.43015, -167.956, 36.7024, 0.17", "-3.29491, -168.713, 38.9489, 0.17", "-2.6707, -170.827, 47.7849, 0.17", "-2.61717, -170.929, 48.3439, 1.37", "-2.57763, -171.05, 48.902, 0.17", "-2.97382, -172.764, 53.184, 0.17", "-2.63936, -176.894, 62.8903, 0.17" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-3.75135, -149.72, 8.72616, 0.86", "-2.56478, -153.43, 9.86613, 0.86", "-1.53944, -157.552, 11.0371, 0.86", "-1.40842, -158.267, 11.2282, 0.86", "-0.856122, -162.077, 12.2081, 0.68", "-0.57776, -164.545, 12.7748, 0.34", "-0.1411, -168.723, 13.3621, 0.34", "-0.106616, -169.784, 13.438, 1.2", "-0.0889503, -171.42, 13.4543, 1.2", "-0.0990143, -171.711, 13.4425, 0.34", "-0.37063, -175.312, 13.1178, 0.34", "-0.765761, -180.002, 12.6571, 0.34", "-0.92722, -182.386, 12.4133, 1.88", "-1.03659, -184.431, 12.217, 0.68", "-1.12675, -188.438, 11.8573, 0.51", "-1.21762, -192.641, 11.5521, 0.51", "-1.31292, -195.115, 11.4364, 1.03", "-1.49604, -197.622, 11.4157, 1.71", "-1.7112, -200.135, 11.3782, 0.68", "-1.93911, -202.708, 11.3546, 0.17", "-2.21499, -205.839, 11.3454, 0.17", "-2.50723, -208.047, 11.3769, 1.03", "-3.18287, -211.834, 11.5099, 1.03", "-4.40316, -217.935, 11.7482, 1.03", "-4.48681, -218.341, 11.7645, 1.03", "-4.56967, -218.777, 11.7807, 1.03", "-4.77562, -220.014, 11.8215, 0.17", "-4.98413, -221.467, 11.8633, 0.17", "-5.30056, -223.875, 11.9274, 0.34", "-5.45664, -224.757, 11.9581, 0.34", "-6.05642, -227.788, 12.0753, 0.34", "-6.9206, -234.692, 12.2512, 1.37", "-7.01033, -235.964, 12.271, 0.17", "-7.02169, -236.177, 12.2736, 0.17", "-7.15366, -238.441, 12.3038, 0.17", "-7.20406, -240.497, 12.3186, 0.34", "-6.87057, -246.316, 12.2741, 0.34", "-6.62251, -247.763, 12.2331, 0.34", "-6.59437, -247.975, 12.2285, 0.34", "-6.44532, -250.128, 12.2074, 0.34", "-6.44532, -250.128, 12.2074, 1.03", "-6.37935, -251.168, 12.2255, 0.17", "-6.26332, -252.211, 12.3138, 0.17", "-5.63277, -255.258, 12.4853, 1.37", "-4.85418, -258.054, 12.5766, 0.51", "-4.20866, -260.06, 12.543, 0.17", "-2.17761, -265.489, 12.329, 0.51", "-0.262442, -269.976, 11.821, 0.51", "1.40242, -273.753, 11.1837, 1.88", "2.62205, -276.576, 10.3146, 1.2", "3.55286, -278.991, 9.25638, 0.17", "4.31537, -281.548, 7.7776, 0.51", "4.91139, -285.471, 4.88754, 1.03", "5.11757, -287.632, 3.08951, 1.03", "5.42303, -292.784, -0.991183, 0.17", "5.49662, -294.068, -1.91065, 0.17", "5.51106, -294.252, -2.01609, 0.17", "5.84025, -296.624, -2.99288, 0.17", "6.86063, -299.766, -3.36598, 1.2", "8.00887, -302.147, -3.31207, 1.2", "8.74389, -303.546, -3.09019, 0.17", "8.84277, -303.733, -3.06716, 0.17", "10.1442, -306.417, -2.85526, 0.17", "10.2354, -306.624, -2.85113, 1.54", "10.9288, -308.645, -2.95064, 0.17", "11.3773, -309.905, -3.01636, 0.17", "11.8897, -311.399, -3.00576, 0.17", "12.5084, -313.194, -2.91548, 1.37", "12.8667, -314.408, -2.79865, 0.68", "12.9456, -314.686, -2.76616, 0.68", "13.761, -317.66, -2.36689, 0.17", "14.5978, -320.303, -1.20956, 0.17", "14.816, -321.026, -0.837945, 1.71", "15.2744, -322.627, 0.116302, 1.54", "15.5539, -323.652, 0.800997, 0.17", "15.981, -325.29, 2.00934, 0.17", "17.4118, -331.732, 7.89626, 2.05" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-1.40136, -52.0592, -23.382, 0.17", "-1.06235, -52.6403, -23.0252, 0.17", "-0.31442, -53.8796, -22.1814, 0.17", "1.05365, -56.106, -20.5851, 1.2", "3.28417, -59.3128, -17.5922, 0.17", "5.03135, -61.7666, -15.135, 0.17", "5.2371, -62.0447, -14.8527, 0.17", "6.39094, -63.4735, -13.2983, 1.37", "6.42877, -63.5197, -13.2475, 1.37", "9.06451, -66.7204, -9.91589, 0.17", "9.96423, -67.9242, -8.87395, 0.17", "10.5908, -68.7085, -8.10312, 0.17", "10.6882, -68.8237, -7.95637, 0.17", "12.0698, -70.4383, -5.83952, 0.17", "12.4301, -70.7932, -5.28848, 1.2", "12.6569, -70.9953, -4.93344, 0.17", "15.1045, -72.9872, -0.839718, 0.17", "17.9917, -75.2547, 4.09118, 0.17", "18.6898, -75.7605, 5.2722, 0.17", "20.9947, -77.1577, 8.99851, 0.17", "21.1483, -77.2496, 9.23167, 0.17", "21.4842, -77.4525, 9.70116, 0.17", "22.4775, -78.0941, 10.7748, 0.17", "22.708, -78.2707, 10.9514, 0.68", "23.7458, -79.1752, 11.7777, 0.68", "24.543, -79.9849, 12.3827, 0.68", "26.8494, -83.3787, 15.0159, 0.17", "27.1198, -84.9818, 16.2112, 0.17", "26.9196, -85.9636, 16.8857, 1.2", "26.626, -86.4853, 17.1719, 0.17", "26.5508, -86.5965, 17.224, 0.17", "23.0033, -91.5069, 18.227, 0.17", "21.8768, -93.0415, 18.2804, 0.17", "21.3204, -93.8223, 18.2659, 0.17", "18.2567, -98.5593, 17.9627, 0.17", "16.5887, -101.472, 17.7178, 0.17", "13.5994, -107.308, 17.1221, 0.17", "12.0869, -110.588, 16.5039, 0.17", "11.2637, -112.233, 16.1244, 0.17", "10.2461, -114.107, 15.6479, 0.17", "8.14461, -118.253, 14.5188, 0.17", "7.65494, -119.246, 14.2378, 0.17", "5.4356, -124.282, 13.0865, 0.17", "4.63519, -126.375, 12.5608, 0.17", "4.01764, -128.174, 12.1158, 0.17", "2.41127, -133.177, 10.9623, 0.17", "0.973475, -138.474, 9.97039, 0.17", "-0.0433183, -142.707, 9.31572, 0.17", "-0.515982, -144.958, 9.07183, 0.17", "-1.06264, -147.576, 8.80774, 0.17", "-1.60796, -149.895, 8.59634, 0.17", "-3.15637, -155.28, 8.26776, 0.17", "-4.0498, -158.064, 8.27074, 1.71", "-4.37632, -158.972, 8.24793, 0.17", "-5.04122, -160.603, 8.11538, 0.17", "-5.15926, -160.872, 8.07727, 0.17", "-6.07384, -162.761, 7.70297, 0.17", "-7.65574, -165.269, 6.84742, 0.17", "-9.22394, -167.556, 5.91867, 0.17", "-10.6856, -169.575, 4.89216, 1.54", "-11.0172, -170.023, 4.62837, 0.17", "-11.6263, -170.851, 4.14777, 0.17", "-13.429, -173.544, 2.73463, 0.17", "-13.8653, -174.369, 2.37363, 1.2", "-13.8653, -174.369, 2.37363, 0.17", "-14.3013, -175.715, 2.22554, 0.17", "-15.0219, -178.203, 2.06847, 0.17", "-15.7235, -180.939, 2.10511, 0.17", "-15.7794, -181.148, 2.12737, 0.17", "-16.4342, -183.413, 2.04969, 0.17", "-16.5001, -183.611, 2.02597, 0.17", "-16.5585, -183.747, 1.98607, 0.17", "-18.3407, -187.104, 0.49975, 0.17", "-19.116, -188.576, -0.257942, 0.17", "-21.4141, -193.128, -2.5647, 0.17", "-22.8174, -195.962, -3.93634, 0.17", "-25.1289, -200.833, -6.04192, 0.17", "-27.361, -205.728, -7.98746, 0.17", "-29.664, -210.804, -9.74109, 0.17", "-31.1211, -214.113, -10.6264, 0.17", "-32.436, -217.014, -11.0582, 0.17", "-34.3302, -221.247, -11.4378, 0.17", "-34.767, -222.22, -11.4418, 0.17", "-36.6466, -226.155, -11.2381, 0.17", "-37.7028, -228.113, -11.076, 0.17", "-39.9967, -231.692, -10.7447, 0.17", "-43.9872, -237.046, -10.1881, 0.17", "-44.4036, -237.501, -10.1258, 0.68", "-46.2246, -239.245, -9.83246, 0.17", "-47.2978, -240.125, -9.63923, 0.17", "-51.2384, -243.071, -8.78793, 0.17", "-51.4643, -243.246, -8.72572, 0.17", "-53.2208, -244.748, -8.10377, 0.17", "-53.5267, -245.056, -7.99429, 0.17", "-55.5297, -247.199, -7.27563, 0.17", "-57.1795, -249.13, -6.68124, 0.17", "-59.8402, -252.568, -5.80083, 0.17", "-62.6326, -256.275, -4.88372, 0.17", "-62.7206, -256.396, -4.8552, 0.17", "-65.7825, -260.551, -3.87784, 0.17", "-65.8697, -260.662, -3.85091, 0.17", "-67.2467, -262.101, -3.4426, 0.17" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-1.40136, -52.0592, -23.382, 0.17", "2.13342, -52.6367, -21.234, 0.17", "8.76847, -53.2048, -17.0497, 1.37", "8.93052, -53.2221, -16.9424, 1.37", "9.53048, -53.2923, -16.5357, 0.17", "16.5332, -54.0901, -11.7934, 0.17", "17.0129, -54.1289, -11.4801, 1.03", "23.2873, -54.3217, -7.18719, 0.17", "31.033, -54.2926, -2.10576, 0.17", "31.3696, -54.2886, -1.88732, 1.2", "32.0788, -54.2701, -1.43398, 0.17", "35.1391, -54.1584, 0.492393, 0.17", "39.2515, -53.9493, 3.10112, 1.2", "39.4523, -53.9281, 3.21573, 0.17", "49.9491, -55.1434, 8.54552, 0.17", "60.4375, -56.8811, 13.7625, 0.17", "70.9441, -60.3179, 18.1011, 0.17", "81.6316, -64.5199, 21.2107, 0.17", "92.269, -69.9444, 21.2917, 0.17", "103.829, -72.3899, 22.4023, 0.17" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "100.637, 42.8521, -16.8564, 0.17", "103.359, 49.4976, -19.9758, 0.17", "107.037, 59.4618, -23.6763, 0.17", "107.089, 59.6217, -23.7289, 0.17", "108.649, 64.8028, -25.3079, 0.17", "110.295, 70.5828, -26.9976, 0.17", "112.59, 79.5955, -29.4266, 0.17", "113.395, 84.3739, -30.3248, 0.17", "113.993, 90.3343, -31.0086, 0.17", "114.051, 91.7305, -31.193, 1.88", "114.027, 92.2465, -31.2909, 0.17", "113.355, 97.3874, -32.3878, 0.17", "112.403, 100.644, -33.066, 0.17", "110.889, 104.733, -34.1069, 0.17", "110.524, 105.532, -34.3222, 0.17", "108.785, 109.221, -35.4962, 0.17" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "100.637, 42.8521, -16.8564, 0.17", "106.116, 39.7238, -19.2469, 0.17", "109.256, 37.9312, -20.6167, 0.17", "112.776, 35.922, -22.1522, 0.17" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "17.4118, -331.732, 7.89626, 0.17", "18.1988, -333.117, 9.14735, 0.17", "18.7104, -334.483, 10.3722, 0.17", "18.8032, -334.891, 10.6141, 0.17", "18.8803, -335.324, 10.7853, 1.03", "19.2135, -337.926, 11.5409, 0.51", "19.7111, -342.783, 12.6751, 0.17", "19.6971, -344.619, 12.9651, 0.17", "19.208, -349.778, 13.5116, 1.2", "18.9265, -351.362, 13.5976, 0.17", "18.6625, -352.527, 13.5844, 0.17", "18.6003, -352.762, 13.578, 0.17", "18.0772, -354.734, 13.5454, 0.17", "17.6062, -356.73, 13.7321, 1.37", "17.1164, -358.829, 14.1573, 0.17", "16.56, -361.536, 15.0185, 0.17", "16.1585, -364.885, 16.283, 0.68", "16.1198, -365.692, 16.6095, 0.17", "16.1895, -367.29, 17.2893, 0.17", "16.3615, -368.807, 17.9724, 0.17", "17.1091, -373.689, 20.1403, 0.68", "17.6103, -377.165, 21.6078, 0.68", "17.7677, -379.206, 22.2858, 0.34", "17.8161, -380.514, 22.6244, 0.17", "17.8155, -380.753, 22.668, 0.17", "17.6309, -384.172, 23.0054, 0.17", "17.4273, -386.184, 23.0217, 0.68", "16.891, -390.204, 22.6567, 0.17", "16.5537, -392.437, 22.4326, 0.17", "16.2451, -394.365, 22.2187, 1.2", "15.9687, -396.381, 21.9406, 0.17", "15.7522, -398.947, 21.4022, 0.17", "15.6409, -404.378, 19.7802, 1.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "17.4118, -331.732, 7.89626, 0.17", "16.8285, -333.168, 7.44313, 0.17", "15.6723, -335.914, 6.55446, 0.17", "15.1949, -337.128, 6.18605, 1.54", "14.8607, -338.032, 5.95769, 0.17", "13.0226, -343.179, 5.1234, 0.17", "12.7669, -343.777, 4.98057, 1.54", "12.3745, -344.604, 4.75047, 0.17", "11.4741, -346.371, 4.22706, 0.17", "10.2663, -348.704, 3.54611, 0.17", "8.02791, -352.9, 2.42129, 0.17", "4.16198, -359.079, 0.422619, 0.17", "3.32565, -360.312, -0.0696077, 1.03", "2.70508, -361.16, -0.470583, 1.03", "2.32607, -361.67, -0.765037, 0.17", "0.718576, -363.958, -2.39453, 0.17", "-2.08418, -368.746, -6.07546, 1.54", "-2.96824, -371.051, -7.60426, 1.2", "-3.02322, -371.232, -7.72334, 1.2", "-3.93289, -375.131, -10.1874, 0.17", "-4.17466, -377.423, -11.4586, 0.17", "-4.08905, -380.192, -12.7121, 0.68", "-3.76931, -382.941, -13.5927, 0.17", "-3.7454, -383.16, -13.6512, 0.17", "-3.69426, -383.645, -13.7476, 0.86", "-3.26342, -387.644, -14.1345, 0.17", "-3.12783, -389.143, -14.1909, 1.03", "-3.09616, -389.586, -14.2032, 0.17", "-2.90087, -392.942, -14.2721, 0.17", "-2.87283, -393.646, -14.2797, 1.03", "-2.88052, -394.28, -14.2691, 0.17", "-3.0846, -397.803, -14.1241, 0.17", "-3.21488, -399.721, -14.0351, 1.2", "-3.28943, -400.52, -13.9872, 0.17", "-3.88803, -404.363, -13.6294, 0.17", "-4.23087, -406.097, -13.4293, 0.17", "-4.47724, -407.066, -13.2884, 1.2", "-4.94577, -408.87, -12.8889, 0.17", "-5.55797, -411.412, -12.2236, 0.17", "-5.80569, -412.645, -11.8852, 0.86", "-6.06674, -414.307, -11.4065, 0.17", "-6.31993, -416.015, -10.9076, 0.17", "-6.96856, -419.598, -9.79816, 0.17", "-7.09851, -420.235, -9.63633, 1.54", "-7.36724, -421.387, -9.4281, 0.17", "-7.90121, -423.546, -9.1907, 0.17", "-8.51039, -425.556, -9.04483, 0.17", "-9.17109, -427.503, -8.98104, 0.17", "-10.1825, -430.14, -8.99872, 1.54", "-11.3018, -433.116, -9.00067, 0.17", "-12.1202, -435.878, -8.71095, 0.17", "-12.5621, -438.805, -8.17711, 0.17", "-12.6353, -439.584, -7.97102, 1.03", "-12.6521, -439.799, -7.89726, 1.03", "-12.7545, -442.014, -6.98526, 0.17", "-12.8071, -447.532, -4.47606, 0.17", "-12.7622, -451.122, -2.68344, 0.17", "-12.6258, -455.184, -0.562761, 0.17", "-12.6182, -455.96, -0.149163, 0.17" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "15.6409, -404.378, 19.7802, 0.17", "14.7155, -407.583, 22.0506, 0.17", "14.2687, -409.548, 23.1393, 0.17", "14.2364, -409.713, 23.221, 0.17", "13.8963, -411.545, 24.0809, 1.2", "13.8115, -412.252, 24.3429, 0.17", "13.7219, -413.5, 24.6673, 0.17", "13.6864, -414.62, 24.6852, 0.86", "13.7137, -415.143, 24.6664, 0.17", "13.7438, -415.554, 24.6466, 0.17", "13.9573, -417.969, 24.5065, 0.17", "14.1344, -420.193, 24.3906, 0.86", "14.1944, -421.519, 24.3499, 0.17", "14.0708, -423.539, 24.1198, 0.17", "13.8097, -425.352, 23.8302, 1.71", "13.7736, -425.523, 23.7957, 0.17", "13.3107, -426.982, 23.4443, 0.17", "12.7454, -428.469, 23.0283, 0.17", "10.8781, -432.687, 21.7299, 0.17", "10.4316, -433.611, 21.4352, 1.03", "10.3561, -433.773, 21.3862, 0.17", "9.84747, -435.247, 21.0595, 0.17", "9.5608, -436.353, 20.8843, 1.37", "9.53126, -436.528, 20.8714, 0.17", "9.4733, -438.381, 20.9178, 0.17", "9.47345, -439.783, 20.927, 0.17", "9.27637, -443.451, 21.0677, 0.17", "9.26343, -443.627, 21.0872, 0.17", "9.21552, -444.378, 21.2002, 1.54", "9.08244, -445.925, 21.4793, 0.17", "8.80582, -447.505, 21.858, 0.17", "8.26085, -450.445, 23.0489, 0.17", "8.02243, -452.087, 23.8845, 0.17", "7.73509, -454.503, 25.2286, 0.17", "7.37157, -458.266, 27.4328, 0.17", "7.12818, -461.475, 29.4007, 0.17", "6.9218, -466.593, 32.634, 0.17", "6.89815, -469.361, 34.3982, 0.17", "6.90055, -469.647, 34.588, 1.71", "6.93923, -470.379, 35.1278, 0.17", "7.16069, -471.686, 36.1186, 0.17", "7.21858, -471.897, 36.2497, 0.17", "7.58531, -473.437, 36.8414, 0.17", "8.32575, -476.957, 38.0839, 0.17", "8.43929, -477.471, 38.2519, 0.17", "8.66534, -478.411, 38.4898, 0.17", "8.98633, -479.703, 38.7328, 1.54", "9.21002, -480.586, 38.83, 0.17", "9.39651, -481.328, 38.8232, 0.17", "9.4481, -481.877, 38.7995, 0.17", "9.38877, -485.024, 38.8626, 0.17", "9.32885, -485.544, 38.8666, 1.71", "9.29124, -485.798, 38.8717, 0.17", "8.81561, -488.531, 38.9495, 0.17", "8.08156, -492.156, 39.0827, 0.17", "6.96772, -496.751, 39.3077, 0.17", "6.24555, -499.102, 39.4676, 0.17" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "15.6409, -404.378, 19.7802, 0.17", "15.9192, -405.991, 19.669, 0.17", "16.2782, -407.733, 19.5232, 0.17", "16.3119, -407.88, 19.5094, 1.2", "16.4186, -408.312, 19.4655, 0.17", "16.9169, -410.26, 19.26, 0.17", "17.284, -411.555, 19.1076, 1.37", "17.5995, -412.356, 19.023, 0.17", "17.6612, -412.493, 19.0095, 0.17", "18.517, -414.54, 18.857, 0.17", "18.5762, -414.67, 18.862, 0.17", "19.3609, -416.363, 19.0803, 0.17", "21.1375, -420.289, 19.8447, 0.17", "21.8531, -421.885, 20.1735, 0.17", "22.67, -423.78, 20.5345, 0.17", "24.1932, -427.304, 21.2891, 1.37", "24.8524, -428.87, 21.6452, 0.17", "24.9066, -429.007, 21.6808, 0.17", "26.3308, -432.946, 22.7583, 0.17", "27.4671, -435.78, 23.3976, 0.17", "29.877, -444.032, 24.6142, 0.17" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "6.24555, -499.102, 39.4676, 0.17", "8.6078, -502.328, 41.0462, 0.17", "10.4287, -504.814, 42.263, 0.17", "12.0941, -507.089, 43.376, 0.17", "12.1905, -507.22, 43.4404, 0.17", "16.3639, -512.919, 46.2294, 0.17", "16.6808, -513.352, 46.4412, 0.17", "23.0066, -521.642, 48.5932, 0.17" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.24555, -499.102, 39.4676, 0.17", "4.42966, -501.575, 40.8176, 0.17", "1.95919, -504.94, 42.6542, 0.17", "0.799094, -506.52, 43.5166, 0.17", "0.705496, -506.648, 43.5862, 0.17", "-3.45116, -515.324, 48.149, 0.17" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_29", "dend_18", "dend_17", "dend_0", "dend_50", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_16", "dend_1", "dend_56", "dend_51", "dend_49", "dend_46", "dend_42", "dend_37", "dend_28", "dend_21", "dend_3", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_48", "dend_47", "dend_39", "dend_38", "dend_27", "dend_22", "dend_7", "dend_4", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_41", "dend_40", "dend_26", "dend_23", "dend_15", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_10", "dend_9", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_35", "dend_32", "dend_29", "dend_18", "dend_17", "dend_0", "dend_50", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_16", "dend_1", "dend_56", "dend_51", "dend_49", "dend_46", "dend_42", "dend_37", "dend_28", "dend_21", "dend_3", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_48", "dend_47", "dend_39", "dend_38", "dend_27", "dend_22", "dend_7", "dend_4", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_41", "dend_40", "dend_26", "dend_23", "dend_15", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_10", "dend_9", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L5_NBC_283ce5d859_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_20
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_27, id: dend_27, parent: dend_21
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_7
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_65
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.49999945595718026)
    connect dend_35(0), soma_0(0.49999945595718026)
    connect dend_32(0), soma_0(0.49999945595718026)
    connect dend_29(0), soma_0(0.49999945595718026)
    connect dend_18(0), soma_0(0.49999945595718026)
    connect dend_17(0), soma_0(0.49999945595718026)
    connect dend_0(0), soma_0(0.49999945595718026)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_27(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.80187, -2.65497, 0.815749, 4.80603 ) }
    soma_0 { pt3dadd( -7.85711, -2.42647, 0.741853, 8.49266 ) }
    soma_0 { pt3dadd( -6.91236, -2.19797, 0.667957, 10.2778 ) }
    soma_0 { pt3dadd( -5.96761, -1.96947, 0.594062, 12.0489 ) }
    soma_0 { pt3dadd( -5.02286, -1.74096, 0.520166, 13.6363 ) }
    soma_0 { pt3dadd( -4.07811, -1.51246, 0.44627, 14.7753 ) }
    soma_0 { pt3dadd( -3.13335, -1.28396, 0.372375, 15.6483 ) }
    soma_0 { pt3dadd( -2.1886, -1.05546, 0.298479, 16.2981 ) }
    soma_0 { pt3dadd( -1.24385, -0.826954, 0.224583, 16.8319 ) }
    soma_0 { pt3dadd( -0.299097, -0.598451, 0.150687, 17.082 ) }
    soma_0 { pt3dadd( 0.645655, -0.369949, 0.0767917, 17.31 ) }
    soma_0 { pt3dadd( 1.59041, -0.141446, 0.00289604, 17.538 ) }
    soma_0 { pt3dadd( 2.53516, 0.0870562, -0.0709997, 17.43 ) }
    soma_0 { pt3dadd( 3.47991, 0.315559, -0.144895, 16.9438 ) }
    soma_0 { pt3dadd( 4.42466, 0.544061, -0.218791, 16.4576 ) }
    soma_0 { pt3dadd( 5.36941, 0.772563, -0.292687, 15.5199 ) }
    soma_0 { pt3dadd( 6.31417, 1.00107, -0.366582, 14.2667 ) }
    soma_0 { pt3dadd( 7.25892, 1.22957, -0.440478, 13.0135 ) }
    soma_0 { pt3dadd( 8.20367, 1.45807, -0.514374, 10.6764 ) }
    soma_0 { pt3dadd( 9.14842, 1.68657, -0.588269, 7.11693 ) }
    soma_0 { pt3dadd( 10.0932, 1.91508, -0.662165, 4.00176 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -9.8861, 1.30416, -7.14961, 1.71 ) }
    dend_44 { pt3dadd( -10.0761, 1.24086, -6.77749, 1.71 ) }
    dend_44 { pt3dadd( -14.1799, -0.12626, 1.2592, 1.71 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -3.2361, 7.66941, -0.579609, 1.03 ) }
    dend_35 { pt3dadd( -3.55874, 8.00693, -0.47199, 1.03 ) }
    dend_35 { pt3dadd( -3.79982, 8.50175, 0.181006, 0.86 ) }
    dend_35 { pt3dadd( -4.28493, 9.49745, 1.49499, 0.86 ) }
    dend_35 { pt3dadd( -4.5664, 10.0751, 2.25738, 0.86 ) }
    dend_35 { pt3dadd( -5.51585, 12.0239, 4.82908, 0.86 ) }
    dend_35 { pt3dadd( -5.60303, 12.2028, 5.0652, 0.86 ) }
    dend_35 { pt3dadd( -7.54664, 17.1896, 12.0097, 0.86 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 32/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.0861, 8.76616, -5.19961, 1.71 ) }
    dend_32 { pt3dadd( -0.507652, 12.667, -4.97876, 1.71 ) }
    dend_32 { pt3dadd( -0.330313, 13.8629, -4.91105, 0.86 ) }
    dend_32 { pt3dadd( 0.185985, 17.3446, -4.71393, 0.68 ) }
    dend_32 { pt3dadd( 0.67484, 20.6412, -4.52729, 0.68 ) }
    dend_32 { pt3dadd( 0.925683, 22.3328, -4.43152, 0.68 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 8.1539, 4.95316, -6.22961, 1.2 ) }
    dend_29 { pt3dadd( 9.62753, 5.40275, -6.96263, 1.2 ) }
    dend_29 { pt3dadd( 12.4304, 6.25789, -8.35686, 1.2 ) }
    dend_29 { pt3dadd( 16.4002, 7.46902, -10.3315, 0.68 ) }
    dend_29 { pt3dadd( 20.8127, 8.81523, -12.5263, 0.68 ) }
    dend_29 { pt3dadd( 23.9942, 9.78588, -14.1089, 0.68 ) }
    dend_29 { pt3dadd( 25.8586, 10.3546, -15.0363, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.4639, -0.827845, -1.19961, 1.54 ) }
    dend_18 { pt3dadd( 12.7261, 1.09648, 1.35161, 1.54 ) }
    dend_18 { pt3dadd( 14.3564, 2.48325, 3.19015, 1.54 ) }
    dend_18 { pt3dadd( 18.719, 6.19421, 8.11004, 1.03 ) }
    dend_18 { pt3dadd( 19.5541, 6.90459, 9.05185, 1.03 ) }
    dend_18 { pt3dadd( 19.8774, 7.17955, 9.41638, 1.03 ) }
    dend_18 { pt3dadd( 21.876, 8.87967, 11.6704, 1.03 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.0039, -4.95859, -5.19961, 1.2 ) }
    dend_17 { pt3dadd( 1.71373, -5.08121, -5.33116, 1.2 ) }
    dend_17 { pt3dadd( 0.181325, -5.77013, -5.91853, 1.2 ) }
    dend_17 { pt3dadd( -2.00607, -6.37615, -9.24211, 1.03 ) }
    dend_17 { pt3dadd( -2.88445, -6.61707, -10.7305, 0.68 ) }
    dend_17 { pt3dadd( -4.48987, -6.99818, -13.4272, 0.68 ) }
    dend_17 { pt3dadd( -5.57261, -7.2308, -15.4684, 0.68 ) }
    dend_17 { pt3dadd( -6.43492, -7.36362, -17.1254, 2.05 ) }
    dend_17 { pt3dadd( -14.2421, -8.0954, -32.0007, 0.17 ) }
    dend_17 { pt3dadd( -14.6345, -8.12042, -32.7333, 0.17 ) }
    dend_17 { pt3dadd( -15.3927, -8.11943, -34.0773, 0.17 ) }
    dend_17 { pt3dadd( -19.338, -8.00084, -40.4481, 0.17 ) }
    dend_17 { pt3dadd( -21.306, -8.01668, -43.3788, 0.17 ) }
    dend_17 { pt3dadd( -22.7426, -8.01274, -45.1391, 2.05 ) }
    dend_17 { pt3dadd( -24.1852, -8.10653, -46.1102, 0.17 ) }
    dend_17 { pt3dadd( -25.0868, -8.18213, -46.6895, 0.17 ) }
    dend_17 { pt3dadd( -27.0692, -8.47253, -48.1211, 0.17 ) }
    dend_17 { pt3dadd( -32.3285, -9.67292, -51.5899, 2.22 ) }
    dend_17 { pt3dadd( -32.8364, -9.83204, -52.3143, 0.17 ) }
    dend_17 { pt3dadd( -33.5098, -10.0877, -53.409, 0.17 ) }
    dend_17 { pt3dadd( -34.1987, -10.3593, -54.6024, 0.17 ) }
    dend_17 { pt3dadd( -37.0985, -11.533, -59.9037, 0.17 ) }
    dend_17 { pt3dadd( -38.7842, -12.2119, -63.1664, 0.17 ) }
    dend_17 { pt3dadd( -47.5134, -16.0721, -80.6772, 1.71 ) }
    dend_17 { pt3dadd( -48.7707, -16.633, -83.3305, 0.17 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.7139, -0.407596, -15.7696, 1.37 ) }
    dend_0 { pt3dadd( 2.02116, -4.15509, -15.7485, 1.37 ) }
    dend_0 { pt3dadd( 2.20408, -6.13923, -15.6916, 1.37 ) }
    dend_0 { pt3dadd( 2.45109, -8.26197, -15.6145, 1.03 ) }
    dend_0 { pt3dadd( 2.87978, -11.2897, -15.496, 1.03 ) }
    dend_0 { pt3dadd( 3.7153, -16.5995, -15.2793, 1.03 ) }
    dend_0 { pt3dadd( 4.30246, -20.331, -15.1271, 1.03 ) }
    dend_0 { pt3dadd( 4.85221, -24.2736, -14.8523, 1.03 ) }
    dend_0 { pt3dadd( 5.12719, -26.5094, -14.6885, 2.22 ) }
    dend_0 { pt3dadd( 5.31141, -28.1393, -14.5583, 1.54 ) }
    dend_0 { pt3dadd( 5.35762, -28.436, -14.532, 1.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.0932, 1.91508, -0.662165, 0.999982 ) }
    axon_0 { pt3dadd( 24.6728, 5.44137, -0.662165, 0.999982 ) }
    axon_0 { pt3dadd( 39.2524, 8.96767, -0.662165, 0.999982 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 91/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -14.1799, -0.12626, 1.2592, 1.37 ) }
    dend_50 { pt3dadd( -15.0361, -0.675472, 1.35193, 1.37 ) }
    dend_50 { pt3dadd( -17.8323, -2.46904, 1.65476, 1.37 ) }
    dend_50 { pt3dadd( -20.4987, -4.17936, 1.94354, 1.37 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 95/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -14.1799, -0.12626, 1.2592, 0.68 ) }
    dend_45 { pt3dadd( -19.5539, 0.856254, -5.25143, 0.68 ) }
    dend_45 { pt3dadd( -21.29, 1.3327, -7.21765, 0.51 ) }
    dend_45 { pt3dadd( -22.4376, 1.68606, -8.49222, 0.51 ) }
    dend_45 { pt3dadd( -23.5422, 2.14407, -9.82461, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( -23.7347, 2.2389, -10.0593, 0.51 ) }
    dend_45 { pt3dadd( -23.8697, 2.3148, -10.2137, 0.51 ) }
    dend_45 { pt3dadd( -27.427, 4.79989, -13.7825, 0.51 ) }
    dend_45 { pt3dadd( -27.4782, 4.83712, -13.8356, 0.51 ) }
    dend_45 { pt3dadd( -29.3557, 6.25453, -15.6064, 0.51 ) }
    dend_45 { pt3dadd( -31.2876, 7.80113, -17.2022, 1.88 ) }
    dend_45 { pt3dadd( -32.9747, 9.13783, -18.4649, 0.17 ) }
    dend_45 { pt3dadd( -35.5185, 11.1133, -20.2925, 0.68 ) }
    dend_45 { pt3dadd( -37.1309, 12.2184, -21.264, 0.68 ) }
    dend_45 { pt3dadd( -39.0194, 13.3519, -22.3253, 0.17 ) }
    dend_45 { pt3dadd( -40.7749, 14.2282, -23.1862, 1.37 ) }
    dend_45 { pt3dadd( -42.738, 15.1352, -24.5022, 0.17 ) }
    dend_45 { pt3dadd( -44.8031, 16.0927, -26.2628, 0.68 ) }
    dend_45 { pt3dadd( -46.78, 17.0322, -28.0466, 0.68 ) }
    dend_45 { pt3dadd( -47.3451, 17.314, -28.6129, 0.51 ) }
    dend_45 { pt3dadd( -48.3175, 17.8026, -29.6048, 1.03 ) }
    dend_45 { pt3dadd( -52.9245, 20.0258, -33.827, 0.51 ) }
    dend_45 { pt3dadd( -54.3324, 20.737, -34.9567, 0.51 ) }
    dend_45 { pt3dadd( -56.8594, 21.9831, -36.6934, 0.51 ) }
    dend_45 { pt3dadd( -56.9816, 22.0492, -36.7734, 0.51 ) }
    dend_45 { pt3dadd( -58.4216, 22.7712, -37.5131, 2.22 ) }
    dend_45 { pt3dadd( -59.8731, 23.3718, -38.0024, 0.34 ) }
    dend_45 { pt3dadd( -62.0917, 24.0371, -38.1971, 0.34 ) }
    dend_45 { pt3dadd( -64.394, 24.5187, -38.2989, 0.34 ) }
    dend_45 { pt3dadd( -65.9442, 24.7898, -38.3068, 0.34 ) }
    dend_45 { pt3dadd( -68.2684, 25.1679, -38.2791, 2.05 ) }
    dend_45 { pt3dadd( -70.0339, 25.4195, -38.2033, 0.17 ) }
    dend_45 { pt3dadd( -73.7129, 25.9241, -37.8666, 0.17 ) }
    dend_45 { pt3dadd( -75.5803, 26.1542, -37.5559, 0.17 ) }
    dend_45 { pt3dadd( -77.3256, 26.3438, -37.2295, 2.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 30/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -7.54664, 17.1896, 12.0097, 0.68 ) }
    dend_43 { pt3dadd( -9.24509, 21.4588, 14.8629, 0.68 ) }
    dend_43 { pt3dadd( -10.184, 23.1273, 15.8868, 0.51 ) }
    dend_43 { pt3dadd( -11.7474, 25.5415, 16.8499, 0.51 ) }
    dend_43 { pt3dadd( -12.9894, 27.556, 17.5663, 0.51 ) }
    dend_43 { pt3dadd( -13.3274, 28.0802, 17.7403, 1.37 ) }
    dend_43 { pt3dadd( -14.0145, 29.0709, 18.0649, 0.68 ) }
    dend_43 { pt3dadd( -15.2737, 30.6734, 18.3845, 0.34 ) }
    dend_43 { pt3dadd( -18.3752, 34.032, 19.108, 0.34 ) }
    dend_43 { pt3dadd( -20.0853, 35.6082, 19.5349, 0.34 ) }
    dend_43 { pt3dadd( -21.7636, 37.0955, 19.8965, 0.34 ) }
    dend_43 { pt3dadd( -22.7521, 37.9859, 20.1104, 1.37 ) }
    dend_43 { pt3dadd( -23.6857, 38.8468, 20.312, 0.17 ) }
    dend_43 { pt3dadd( -24.4036, 39.4537, 20.4695, 0.17 ) }
    dend_43 { pt3dadd( -27.0906, 40.8892, 20.9403, 0.17 ) }
    dend_43 { pt3dadd( -28.5071, 41.4868, 21.0394, 0.17 ) }
    dend_43 { pt3dadd( -33.1417, 50.1021, 24.5758, 0.17 ) }
    dend_43 { pt3dadd( -36.0806, 59.0328, 29.0202, 0.17 ) }
    dend_43 { pt3dadd( -38.6311, 67.0889, 35.0111, 0.17 ) }
    dend_43 { pt3dadd( -43.011, 75.034, 40.033, 0.17 ) }
    dend_43 { pt3dadd( -48.3632, 82.935, 44.1101, 0.17 ) }
    dend_43 { pt3dadd( -54.6535, 89.2133, 49.3632, 0.17 ) }
    dend_43 { pt3dadd( -59.646, 95.4661, 55.8691, 0.17 ) }
    dend_43 { pt3dadd( -65.1675, 102.686, 60.822, 0.17 ) }
    dend_43 { pt3dadd( -70.1598, 110.838, 64.8794, 0.17 ) }
    dend_43 { pt3dadd( -74.7551, 119.932, 67.0953, 0.17 ) }
    dend_43 { pt3dadd( -79.0738, 129.413, 67.8652, 0.17 ) }
    dend_43 { pt3dadd( -83.6596, 138.8, 67.8898, 0.17 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -7.54664, 17.1896, 12.0097, 0.51 ) }
    dend_36 { pt3dadd( -6.71821, 19.418, 11.9502, 0.51 ) }
    dend_36 { pt3dadd( -6.28304, 20.4463, 11.922, 0.51 ) }
    dend_36 { pt3dadd( -4.84925, 23.4151, 11.818, 0.51 ) }
    dend_36 { pt3dadd( -3.80684, 25.3288, 11.9355, 0.51 ) }
    dend_36 { pt3dadd( -3.61235, 25.7075, 11.9545, 0.51 ) }
    dend_36 { pt3dadd( -0.8757, 31.3632, 12.2019, 0.51 ) }
    dend_36 { pt3dadd( -0.247232, 32.9841, 12.1983, 0.51 ) }
    dend_36 { pt3dadd( 0.371871, 34.8844, 12.2998, 0.51 ) }
    dend_36 { pt3dadd( 1.87597, 39.3075, 12.7426, 0.51 ) }
    dend_36 { pt3dadd( 3.08451, 42.7402, 12.7387, 1.71 ) }
    dend_36 { pt3dadd( 3.3503, 43.4841, 12.669, 0.17 ) }
    dend_36 { pt3dadd( 4.8419, 47.8216, 11.8492, 1.03 ) }
    dend_36 { pt3dadd( 6.92344, 53.9625, 10.3247, 0.68 ) }
    dend_36 { pt3dadd( 8.32916, 57.7207, 9.1671, 0.51 ) }
    dend_36 { pt3dadd( 11.197, 63.9719, 6.7826, 0.51 ) }
    dend_36 { pt3dadd( 12.1819, 65.6777, 6.14624, 1.54 ) }
    dend_36 { pt3dadd( 13.112, 67.0592, 5.57565, 0.17 ) }
    dend_36 { pt3dadd( 13.3639, 67.3654, 5.42661, 0.68 ) }
    dend_36 { pt3dadd( 15.5855, 69.9434, 3.71866, 0.68 ) }
    dend_36 { pt3dadd( 16.5777, 71.1047, 3.16052, 1.37 ) }
    dend_36 { pt3dadd( 17.0124, 71.6358, 3.13166, 0.17 ) }
    dend_36 { pt3dadd( 17.2698, 71.987, 3.1276, 0.17 ) }
    dend_36 { pt3dadd( 17.4162, 72.2095, 3.12967, 0.17 ) }
    dend_36 { pt3dadd( 18.4821, 73.9861, 3.10866, 0.17 ) }
    dend_36 { pt3dadd( 18.5722, 74.1596, 3.10912, 0.17 ) }
    dend_36 { pt3dadd( 19.4996, 76.1379, 3.10919, 0.17 ) }
    dend_36 { pt3dadd( 20.309, 77.8747, 3.09123, 1.37 ) }
    dend_36 { pt3dadd( 21.3081, 80.0608, 3.03564, 0.17 ) }
    dend_36 { pt3dadd( 23.1325, 83.9793, 2.82616, 0.17 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 88/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 0.925683, 22.3328, -4.43152, 0.68 ) }
    dend_34 { pt3dadd( -0.0875213, 24.1643, -3.5687, 0.68 ) }
    dend_34 { pt3dadd( -0.703672, 25.2781, -3.044, 0.68 ) }
    dend_34 { pt3dadd( -1.04778, 25.9001, -2.75096, 1.03 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 92/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.925683, 22.3328, -4.43152, 0.68 ) }
    dend_33 { pt3dadd( 3.07466, 25.4133, -6.17357, 0.68 ) }
    dend_33 { pt3dadd( 5.3403, 28.148, -8.23037, 0.68 ) }
    dend_33 { pt3dadd( 5.99377, 28.8907, -8.60105, 0.68 ) }
    dend_33 { pt3dadd( 8.61705, 30.9201, -8.87249, 0.68 ) }
    dend_33 { pt3dadd( 12.0181, 33.5513, -9.22442, 0.17 ) }
    dend_33 { pt3dadd( 18.3185, 38.4254, -9.87634, 0.17 ) }
    dend_33 { pt3dadd( 20.0558, 39.6283, -9.85244, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_33 { pt3dadd( 27.4005, 44.1267, -9.19661, 0.17 ) }
    dend_33 { pt3dadd( 37.9659, 49.7402, -7.5835, 0.17 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 25.8586, 10.3546, -15.0363, 0.17 ) }
    dend_31 { pt3dadd( 31.4797, 13.0128, -18.0456, 0.17 ) }
    dend_31 { pt3dadd( 33.2136, 13.8832, -18.7782, 0.17 ) }
    dend_31 { pt3dadd( 33.4535, 14.004, -18.8646, 0.17 ) }
    dend_31 { pt3dadd( 37.0273, 15.7904, -19.9941, 0.17 ) }
    dend_31 { pt3dadd( 41.6623, 18.0944, -21.3683, 1.88 ) }
    dend_31 { pt3dadd( 43.6446, 19.0709, -21.933, 0.17 ) }
    dend_31 { pt3dadd( 46.5229, 20.4707, -22.6173, 0.17 ) }
    dend_31 { pt3dadd( 47.9755, 21.1799, -23.0625, 1.37 ) }
    dend_31 { pt3dadd( 49.4297, 21.8846, -23.5856, 0.17 ) }
    dend_31 { pt3dadd( 49.8175, 22.0868, -23.738, 0.17 ) }
    dend_31 { pt3dadd( 49.9734, 22.1776, -23.8232, 0.17 ) }
    dend_31 { pt3dadd( 54.9424, 25.4123, -27.2164, 0.17 ) }
    dend_31 { pt3dadd( 57.1077, 26.9912, -28.7817, 1.71 ) }
    dend_31 { pt3dadd( 57.4771, 27.2999, -29.1074, 0.17 ) }
    dend_31 { pt3dadd( 60.2431, 29.8626, -31.7577, 0.17 ) }
    dend_31 { pt3dadd( 64.0015, 33.4783, -35.3437, 1.71 ) }
    dend_31 { pt3dadd( 64.1199, 33.5958, -35.4538, 0.17 ) }
    dend_31 { pt3dadd( 66.7368, 36.2838, -37.7779, 0.17 ) }
    dend_31 { pt3dadd( 70.1057, 39.7246, -41.2208, 1.71 ) }
    dend_31 { pt3dadd( 71.3248, 40.8408, -42.4368, 0.17 ) }
    dend_31 { pt3dadd( 72.6428, 41.9011, -43.649, 0.17 ) }
    dend_31 { pt3dadd( 73.977, 42.8536, -44.6197, 1.71 ) }
    dend_31 { pt3dadd( 75.0307, 43.5529, -45.3345, 0.17 ) }
    dend_31 { pt3dadd( 80.7252, 46.7753, -48.8349, 0.17 ) }
    dend_31 { pt3dadd( 82.9816, 47.982, -50.001, 0.17 ) }
    dend_31 { pt3dadd( 85.0007, 49.0515, -51.017, 1.71 ) }
    dend_31 { pt3dadd( 86.4396, 49.831, -51.7215, 0.17 ) }
    dend_31 { pt3dadd( 91.8993, 52.7511, -54.2234, 0.17 ) }
    dend_31 { pt3dadd( 94.305, 53.9404, -54.9353, 1.71 ) }
    dend_31 { pt3dadd( 95.4792, 54.3947, -54.5614, 0.17 ) }
    dend_31 { pt3dadd( 97.396, 55.0341, -52.9322, 0.17 ) }
    dend_31 { pt3dadd( 97.4705, 55.0388, -52.748, 0.17 ) }
    dend_31 { pt3dadd( 97.694, 55.0268, -52.0467, 1.37 ) }
    dend_31 { pt3dadd( 102.028, 54.7533, -38.8233, 0.17 ) }
    dend_31 { pt3dadd( 103.546, 54.6759, -34.2484, 0.17 ) }
    dend_31 { pt3dadd( 103.992, 54.6491, -32.9312, 1.2 ) }
    dend_31 { pt3dadd( 111.326, 54.5476, -13.1567, 0.17 ) }
    dend_31 { pt3dadd( 111.483, 54.5547, -12.7789, 0.17 ) }
    dend_31 { pt3dadd( 113.972, 54.7265, -7.02174, 0.17 ) }
    dend_31 { pt3dadd( 114.177, 54.7486, -6.61705, 1.88 ) }
    dend_31 { pt3dadd( 114.437, 54.7411, -6.05472, 0.17 ) }
    dend_31 { pt3dadd( 116.907, 54.749, -1.16106, 0.17 ) }
    dend_31 { pt3dadd( 117.468, 55.0139, -1.1462, 1.54 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 46/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 25.8586, 10.3546, -15.0363, 0.34 ) }
    dend_30 { pt3dadd( 25.3561, 15.2848, -14.9111, 0.34 ) }
    dend_30 { pt3dadd( 25.2918, 17.4781, -14.8957, 0.34 ) }
    dend_30 { pt3dadd( 25.2766, 21.269, -14.8903, 0.34 ) }
    dend_30 { pt3dadd( 25.4557, 27.2416, -15.0551, 0.68 ) }
    dend_30 { pt3dadd( 25.6307, 31.9472, -15.4519, 0.68 ) }
    dend_30 { pt3dadd( 25.9695, 40.5311, -16.4413, 0.68 ) }
    dend_30 { pt3dadd( 26.3681, 46.9647, -17.5491, 0.68 ) }
    dend_30 { pt3dadd( 26.3946, 47.1859, -17.5976, 0.68 ) }
    dend_30 { pt3dadd( 27.4815, 52.4374, -18.8018, 0.68 ) }
    dend_30 { pt3dadd( 28.7918, 57.1308, -19.8783, 0.34 ) }
    dend_30 { pt3dadd( 30.5805, 62.6309, -21.1356, 0.34 ) }
    dend_30 { pt3dadd( 31.7892, 66.0229, -21.8102, 0.34 ) }
    dend_30 { pt3dadd( 35.2093, 75.051, -23.3868, 0.34 ) }
    dend_30 { pt3dadd( 39.171, 85.0885, -24.7475, 0.34 ) }
    dend_30 { pt3dadd( 39.817, 86.6484, -24.8647, 2.05 ) }
    dend_30 { pt3dadd( 40.3905, 87.9568, -24.8937, 0.17 ) }
    dend_30 { pt3dadd( 42.7555, 93.0639, -24.9545, 0.17 ) }
    dend_30 { pt3dadd( 43.0365, 93.713, -24.9372, 0.68 ) }
    dend_30 { pt3dadd( 43.2312, 94.2801, -24.8668, 0.17 ) }
    dend_30 { pt3dadd( 44.1095, 97.9862, -24.4333, 0.17 ) }
    dend_30 { pt3dadd( 44.188, 98.509, -24.378, 1.54 ) }
    dend_30 { pt3dadd( 44.2748, 99.3552, -24.3116, 0.17 ) }
    dend_30 { pt3dadd( 44.4518, 102.611, -24.1348, 0.17 ) }
    dend_30 { pt3dadd( 44.5324, 104.482, -24.0572, 1.54 ) }
    dend_30 { pt3dadd( 44.5486, 105.199, -24.0336, 0.17 ) }
    dend_30 { pt3dadd( 44.5894, 110.91, -23.8964, 0.17 ) }
    dend_30 { pt3dadd( 44.5985, 112.541, -23.8543, 1.2 ) }
    dend_30 { pt3dadd( 44.5987, 113.603, -23.824, 0.17 ) }
    dend_30 { pt3dadd( 44.6052, 117.221, -23.6861, 0.17 ) }
    dend_30 { pt3dadd( 44.596, 118.929, -23.5928, 1.88 ) }
    dend_30 { pt3dadd( 44.5911, 119.532, -23.5506, 0.17 ) }
    dend_30 { pt3dadd( 44.5853, 123.079, -23.2337, 0.17 ) }
    dend_30 { pt3dadd( 44.5673, 124.748, -23.0491, 0.17 ) }
    dend_30 { pt3dadd( 44.5267, 129.191, -22.5578, 0.17 ) }
    dend_30 { pt3dadd( 44.4768, 132.7, -22.1693, 0.17 ) }
    dend_30 { pt3dadd( 44.4874, 133.229, -22.1112, 1.37 ) }
    dend_30 { pt3dadd( 44.595, 134.399, -21.9853, 0.17 ) }
    dend_30 { pt3dadd( 45.2912, 138.902, -21.509, 0.17 ) }
    dend_30 { pt3dadd( 45.7484, 141.101, -21.2798, 1.2 ) }
    dend_30 { pt3dadd( 46.1867, 142.546, -21.1332, 0.17 ) }
    dend_30 { pt3dadd( 47.4175, 145.487, -20.8448, 0.17 ) }
    dend_30 { pt3dadd( 49.8566, 150.459, -20.3678, 0.17 ) }
    dend_30 { pt3dadd( 50.1246, 150.913, -20.3256, 1.54 ) }
    dend_30 { pt3dadd( 50.422, 151.314, -20.2901, 0.17 ) }
    dend_30 { pt3dadd( 52.4413, 153.61, -20.0959, 0.17 ) }
    dend_30 { pt3dadd( 54.6596, 155.739, -19.9261, 0.17 ) }
    dend_30 { pt3dadd( 54.7867, 155.85, -19.9175, 0.17 ) }
    dend_30 { pt3dadd( 55.1553, 156.153, -19.8949, 1.88 ) }
    dend_30 { pt3dadd( 55.7199, 156.621, -19.8597, 0.17 ) }
    dend_30 { pt3dadd( 58.0777, 158.554, -19.7156, 0.17 ) }
    dend_30 { pt3dadd( 60.1112, 160.269, -19.5859, 0.17 ) }
    dend_30 { pt3dadd( 61.6594, 161.568, -19.488, 1.54 ) }
    dend_30 { pt3dadd( 61.7802, 161.672, -19.4801, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 21.876, 8.87967, 11.6704, 0.68 ) }
    dend_20 { pt3dadd( 22.8832, 12.7104, 11.5617, 0.68 ) }
    dend_20 { pt3dadd( 23.6834, 15.7542, 11.4753, 0.68 ) }
    dend_20 { pt3dadd( 24.6947, 19.6008, 11.3661, 0.68 ) }
    dend_20 { pt3dadd( 25.5383, 22.8096, 11.275, 0.68 ) }
    dend_20 { pt3dadd( 26.5891, 26.8066, 11.1616, 0.68 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 6/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 21.876, 8.87967, 11.6704, 0.68 ) }
    dend_19 { pt3dadd( 25.1897, 9.18921, 12.9396, 0.68 ) }
    dend_19 { pt3dadd( 28.2226, 9.47252, 14.1012, 0.68 ) }
    dend_19 { pt3dadd( 33.7463, 9.98851, 16.2169, 0.68 ) }
    dend_19 { pt3dadd( 38.3234, 10.416, 17.97, 0.68 ) }
    dend_19 { pt3dadd( 49.9649, 12.6253, 22.532, 0.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 12/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.35762, -28.436, -14.532, 0.17 ) }
    dend_16 { pt3dadd( 5.842, -29.3282, -5.68182, 0.17 ) }
    dend_16 { pt3dadd( 5.86651, -29.3502, -5.52757, 0.17 ) }
    dend_16 { pt3dadd( 6.27543, -29.5912, -4.37487, 0.17 ) }
    dend_16 { pt3dadd( 6.75568, -29.8574, -3.80217, 0.17 ) }
    dend_16 { pt3dadd( 7.45788, -30.264, -3.26143, 1.37 ) }
    dend_16 { pt3dadd( 8.52998, -30.915, -2.62849, 0.17 ) }
    dend_16 { pt3dadd( 9.95298, -31.7335, -2.59758, 0.68 ) }
    dend_16 { pt3dadd( 10.7277, -32.1712, -2.5764, 0.17 ) }
    dend_16 { pt3dadd( 12.4477, -33.1503, -2.52508, 0.86 ) }
    dend_16 { pt3dadd( 12.727, -33.278, -2.50988, 0.17 ) }
    dend_16 { pt3dadd( 13.0968, -33.4079, -2.47682, 0.17 ) }
    dend_16 { pt3dadd( 14.0699, -33.6508, -2.36216, 0.17 ) }
    dend_16 { pt3dadd( 15.4554, -33.9308, -2.16566, 1.2 ) }
    dend_16 { pt3dadd( 15.9886, -34.02, -2.08954, 1.2 ) }
    dend_16 { pt3dadd( 18.4574, -34.3061, -1.73368, 0.17 ) }
    dend_16 { pt3dadd( 21.2432, -34.6652, -1.33311, 0.68 ) }
    dend_16 { pt3dadd( 22.228, -34.8097, -1.19197, 0.17 ) }
    dend_16 { pt3dadd( 23.6543, -35.0771, -0.989114, 0.17 ) }
    dend_16 { pt3dadd( 24.5948, -35.316, -0.857041, 1.37 ) }
    dend_16 { pt3dadd( 25.2438, -35.5276, -0.767161, 0.17 ) }
    dend_16 { pt3dadd( 26.8706, -36.2289, -0.546459, 0.17 ) }
    dend_16 { pt3dadd( 27.4452, -36.4996, -0.469126, 1.88 ) }
    dend_16 { pt3dadd( 28.2339, -36.8732, -0.363036, 0.17 ) }
    dend_16 { pt3dadd( 29.8358, -37.6601, 0.18481, 0.17 ) }
    dend_16 { pt3dadd( 31.3257, -38.4051, 0.9234, 0.17 ) }
    dend_16 { pt3dadd( 32.2709, -38.8563, 1.48974, 2.05 ) }
    dend_16 { pt3dadd( 32.7222, -39.0696, 1.79943, 0.17 ) }
    dend_16 { pt3dadd( 34.5297, -39.98, 3.37516, 0.17 ) }
    dend_16 { pt3dadd( 38.0802, -41.6828, 6.82376, 2.05 ) }
    dend_16 { pt3dadd( 38.2373, -41.757, 6.99417, 0.17 ) }
    dend_16 { pt3dadd( 39.3884, -42.2918, 8.42264, 0.17 ) }
    dend_16 { pt3dadd( 40.1102, -42.6287, 9.35354, 1.71 ) }
    dend_16 { pt3dadd( 42.1079, -43.5915, 11.9785, 0.17 ) }
    dend_16 { pt3dadd( 43.5277, -44.2535, 13.8309, 0.17 ) }
    dend_16 { pt3dadd( 43.6311, -44.2927, 13.9358, 0.86 ) }
    dend_16 { pt3dadd( 45.2204, -44.8447, 15.4726, 0.17 ) }
    dend_16 { pt3dadd( 46.2846, -45.1713, 16.4561, 0.17 ) }
    dend_16 { pt3dadd( 46.3685, -45.19, 16.5169, 0.17 ) }
    dend_16 { pt3dadd( 46.83, -45.2908, 16.81, 1.88 ) }
    dend_16 { pt3dadd( 47.5028, -45.5297, 17.3245, 0.17 ) }
    dend_16 { pt3dadd( 48.6203, -46.018, 18.14, 0.17 ) }
    dend_16 { pt3dadd( 48.8895, -46.1438, 18.319, 1.37 ) }
    dend_16 { pt3dadd( 49.5032, -46.505, 19.1242, 0.34 ) }
    dend_16 { pt3dadd( 50.9331, -47.5031, 21.5147, 0.17 ) }
    dend_16 { pt3dadd( 51.5578, -47.9838, 22.6978, 0.17 ) }
    dend_16 { pt3dadd( 52.1146, -48.4644, 23.9268, 0.17 ) }
    dend_16 { pt3dadd( 52.3491, -48.6893, 24.5379, 2.05 ) }
    dend_16 { pt3dadd( 54.3914, -50.7732, 30.4056, 0.17 ) }
    dend_16 { pt3dadd( 54.5129, -50.9073, 30.8056, 1.71 ) }
    dend_16 { pt3dadd( 58.4662, -53.0955, 35.3315, 1.71 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.35762, -28.436, -14.532, 1.2 ) }
    dend_1 { pt3dadd( 4.48242, -30.6605, -13.923, 1.2 ) }
    dend_1 { pt3dadd( 2.94956, -34.6769, -12.9104, 0.68 ) }
    dend_1 { pt3dadd( 1.7825, -37.8055, -12.1604, 2.22 ) }
    dend_1 { pt3dadd( 1.25629, -39.4969, -11.7902, 0.86 ) }
    dend_1 { pt3dadd( 1.01096, -40.2855, -11.6177, 0.68 ) }
    dend_1 { pt3dadd( 0.240405, -42.7624, -11.0757, 0.68 ) }
    dend_1 { pt3dadd( -0.0713223, -43.7187, -10.8529, 1.54 ) }
    dend_1 { pt3dadd( -0.116373, -43.8804, -10.8197, 1.54 ) }
    dend_1 { pt3dadd( -0.56551, -46.4508, -10.7981, 1.54 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 39.2524, 8.96767, -0.662165, 0.17 ) }
    axon_1 { pt3dadd( 53.8321, 12.494, -0.662165, 0.17 ) }
    axon_1 { pt3dadd( 68.4117, 16.0203, -0.662165, 0.17 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 76/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -20.4987, -4.17936, 1.94354, 0.86 ) }
    dend_56 { pt3dadd( -21.3787, -5.88159, 0.805584, 0.86 ) }
    dend_56 { pt3dadd( -22.4646, -7.57426, -0.593639, 0.68 ) }
    dend_56 { pt3dadd( -23.9107, -9.49322, -2.38038, 0.68 ) }
    dend_56 { pt3dadd( -28.5676, -15.0132, -7.96309, 0.68 ) }
    dend_56 { pt3dadd( -30.8266, -17.3492, -10.5368, 0.68 ) }
    dend_56 { pt3dadd( -33.0552, -19.2951, -13.002, 0.68 ) }
    dend_56 { pt3dadd( -35.7106, -20.939, -15.7762, 1.2 ) }
    dend_56 { pt3dadd( -36.7371, -21.2952, -16.749, 1.2 ) }
    dend_56 { pt3dadd( -37.3242, -21.3538, -17.178, 0.68 ) }
    dend_56 { pt3dadd( -39.2881, -21.1731, -18.07, 0.68 ) }
    dend_56 { pt3dadd( -42.2789, -20.6707, -19.3726, 0.51 ) }
    dend_56 { pt3dadd( -43.826, -20.3887, -19.8154, 0.51 ) }
    dend_56 { pt3dadd( -46.6233, -20.0635, -20.1933, 1.88 ) }
    dend_56 { pt3dadd( -49.496, -19.982, -20.482, 1.88 ) }
    dend_56 { pt3dadd( -51.7644, -20.2002, -20.5914, 1.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 92/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -20.4987, -4.17936, 1.94354, 0.86 ) }
    dend_51 { pt3dadd( -22.2655, -4.21695, -0.0465501, 0.86 ) }
    dend_51 { pt3dadd( -24.9095, -4.48126, -2.87766, 0.86 ) }
    dend_51 { pt3dadd( -26.8498, -4.68151, -4.81996, 0.86 ) }
    dend_51 { pt3dadd( -32.3498, -4.94526, -9.84094, 0.86 ) }
    dend_51 { pt3dadd( -34.1973, -4.96573, -11.4226, 0.86 ) }
    dend_51 { pt3dadd( -39.5403, -4.95388, -15.9207, 0.86 ) }
    dend_51 { pt3dadd( -40.7449, -4.94668, -16.9264, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_51 { pt3dadd( -42.6864, -4.91848, -18.4869, 0.86 ) }
    dend_51 { pt3dadd( -46.0475, -4.84072, -21.0546, 0.86 ) }
    dend_51 { pt3dadd( -48.7168, -4.81447, -23.0181, 0.51 ) }
    dend_51 { pt3dadd( -51.697, -4.73704, -25.1331, 0.34 ) }
    dend_51 { pt3dadd( -54.9825, -4.4713, -27.2428, 0.17 ) }
    dend_51 { pt3dadd( -57.3244, -4.33487, -28.6871, 0.17 ) }
    dend_51 { pt3dadd( -59.4061, -4.3369, -29.8803, 2.05 ) }
    dend_51 { pt3dadd( -61.0131, -4.4274, -30.626, 0.17 ) }
    dend_51 { pt3dadd( -62.6138, -4.47285, -31.0857, 0.17 ) }
    dend_51 { pt3dadd( -63.6342, -4.47212, -31.212, 0.68 ) }
    dend_51 { pt3dadd( -66.1339, -4.46915, -31.2751, 0.34 ) }
    dend_51 { pt3dadd( -66.9325, -4.49285, -31.2896, 0.17 ) }
    dend_51 { pt3dadd( -69.0216, -4.54335, -31.2618, 1.88 ) }
    dend_51 { pt3dadd( -70.0211, -4.57056, -31.1559, 0.17 ) }
    dend_51 { pt3dadd( -71.4379, -4.61699, -30.9036, 0.17 ) }
    dend_51 { pt3dadd( -73.0018, -4.69763, -30.5374, 1.2 ) }
    dend_51 { pt3dadd( -73.926, -4.74381, -30.2843, 0.17 ) }
    dend_51 { pt3dadd( -76.9237, -4.83182, -29.4454, 0.17 ) }
    dend_51 { pt3dadd( -79.3454, -4.76763, -28.5368, 1.71 ) }
    dend_51 { pt3dadd( -80.4075, -4.70197, -28.074, 0.17 ) }
    dend_51 { pt3dadd( -81.8213, -4.5401, -27.4086, 0.17 ) }
    dend_51 { pt3dadd( -83.1053, -4.31399, -26.8142, 2.39 ) }
    dend_51 { pt3dadd( -84.7731, -4.02838, -26.1323, 0.68 ) }
    dend_51 { pt3dadd( -88.2756, -3.54741, -24.958, 0.17 ) }
    dend_51 { pt3dadd( -89.3464, -3.4461, -24.671, 0.17 ) }
    dend_51 { pt3dadd( -90.547, -3.34822, -24.3375, 1.2 ) }
    dend_51 { pt3dadd( -92.6459, -3.2294, -23.7526, 0.17 ) }
    dend_51 { pt3dadd( -95.6266, -3.16205, -23.0043, 0.17 ) }
    dend_51 { pt3dadd( -97.2358, -3.1994, -22.7381, 2.22 ) }
    dend_51 { pt3dadd( -97.7652, -3.24722, -22.7369, 2.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -77.3256, 26.3438, -37.2295, 0.17 ) }
    dend_49 { pt3dadd( -78.7467, 28.4882, -36.7985, 0.17 ) }
    dend_49 { pt3dadd( -79.6124, 29.6911, -36.5587, 0.17 ) }
    dend_49 { pt3dadd( -82.2529, 33.2376, -35.8535, 0.17 ) }
    dend_49 { pt3dadd( -82.6374, 33.7143, -35.7587, 0.17 ) }
    dend_49 { pt3dadd( -87.041, 39.1276, -34.6723, 0.17 ) }
    dend_49 { pt3dadd( -89.4608, 42.0734, -34.0792, 1.2 ) }
    dend_49 { pt3dadd( -90.2325, 43.0339, -33.8781, 0.17 ) }
    dend_49 { pt3dadd( -90.4063, 43.2535, -33.8399, 0.17 ) }
    dend_49 { pt3dadd( -97.8004, 52.5357, -32.5154, 0.17 ) }
    dend_49 { pt3dadd( -100.187, 55.6223, -32.1434, 1.54 ) }
    dend_49 { pt3dadd( -101.295, 57.0986, -32.0036, 0.17 ) }
    dend_49 { pt3dadd( -104.198, 61.1655, -31.68, 0.17 ) }
    dend_49 { pt3dadd( -106.143, 64.0184, -31.5665, 1.2 ) }
    dend_49 { pt3dadd( -106.97, 65.3349, -31.5678, 0.17 ) }
    dend_49 { pt3dadd( -107.093, 65.5712, -31.5871, 0.17 ) }
    dend_49 { pt3dadd( -108.02, 67.4581, -31.7727, 0.17 ) }
    dend_49 { pt3dadd( -108.911, 69.3653, -31.9391, 1.37 ) }
    dend_49 { pt3dadd( -110.389, 72.1659, -32.1135, 0.17 ) }
    dend_49 { pt3dadd( -112.507, 75.8299, -32.4462, 0.17 ) }
    dend_49 { pt3dadd( -112.658, 76.066, -32.4828, 0.17 ) }
    dend_49 { pt3dadd( -113.589, 77.4088, -32.7597, 1.03 ) }
    dend_49 { pt3dadd( -114.085, 78.0736, -33.0556, 0.17 ) }
    dend_49 { pt3dadd( -116.013, 80.4789, -34.3901, 0.17 ) }
    dend_49 { pt3dadd( -118.798, 83.7664, -36.3853, 1.71 ) }
    dend_49 { pt3dadd( -120.184, 85.3693, -37.3518, 0.17 ) }
    dend_49 { pt3dadd( -120.353, 85.5644, -37.4623, 0.17 ) }
    dend_49 { pt3dadd( -126.756, 93.2148, -41.4791, 0.17 ) }
    dend_49 { pt3dadd( -128.362, 95.2219, -42.3856, 1.37 ) }
    dend_49 { pt3dadd( -128.99, 96.0635, -42.7322, 0.17 ) }
    dend_49 { pt3dadd( -131.579, 99.6007, -43.9198, 0.17 ) }
    dend_49 { pt3dadd( -132.361, 100.7, -44.2352, 1.54 ) }
    dend_49 { pt3dadd( -133.691, 102.502, -44.5603, 0.17 ) }
    dend_49 { pt3dadd( -135.329, 104.553, -44.5745, 0.17 ) }
    dend_49 { pt3dadd( -137.644, 107.291, -44.5373, 1.88 ) }
    dend_49 { pt3dadd( -138.947, 108.751, -44.4718, 0.17 ) }
    dend_49 { pt3dadd( -141.082, 110.974, -44.2976, 0.17 ) }
    dend_49 { pt3dadd( -143.366, 113.169, -44.0289, 1.54 ) }
    dend_49 { pt3dadd( -144.397, 114.082, -43.8741, 0.17 ) }
    dend_49 { pt3dadd( -147.319, 116.525, -43.3416, 0.17 ) }
    dend_49 { pt3dadd( -149.53, 118.302, -42.8513, 1.71 ) }
    dend_49 { pt3dadd( -151.355, 119.729, -42.4887, 0.17 ) }
    dend_49 { pt3dadd( -153.798, 121.605, -42.0721, 0.17 ) }
    dend_49 { pt3dadd( -155.22, 122.603, -41.9023, 2.22 ) }
    dend_49 { pt3dadd( -156.883, 123.679, -41.7323, 0.17 ) }
    dend_49 { pt3dadd( -159.517, 125.23, -41.5114, 0.17 ) }
    dend_49 { pt3dadd( -160.192, 125.616, -41.458, 1.88 ) }
    dend_49 { pt3dadd( -162.395, 126.856, -41.2889, 0.17 ) }
    dend_49 { pt3dadd( -168.206, 130.055, -40.8619, 0.17 ) }
    dend_49 { pt3dadd( -170.087, 131.064, -40.7308, 1.03 ) }
    dend_49 { pt3dadd( -172.506, 132.326, -40.4665, 0.17 ) }
    dend_49 { pt3dadd( -177.44, 134.808, -39.7927, 0.17 ) }
    dend_49 { pt3dadd( -179.184, 135.686, -39.5082, 2.05 ) }
    dend_49 { pt3dadd( -182.069, 137.054, -38.6795, 0.17 ) }
    dend_49 { pt3dadd( -186.121, 138.735, -37.0555, 0.17 ) }
    dend_49 { pt3dadd( -189.631, 139.792, -35.3844, 1.03 ) }
    dend_49 { pt3dadd( -190.914, 139.984, -34.6934, 0.17 ) }
    dend_49 { pt3dadd( -192.803, 140.063, -33.5743, 0.17 ) }
    dend_49 { pt3dadd( -199.806, 139.882, -29.2787, 0.17 ) }
    dend_49 { pt3dadd( -203.189, 139.584, -27.2312, 0.17 ) }
    dend_49 { pt3dadd( -206.259, 139.237, -25.4954, 0.17 ) }
    dend_49 { pt3dadd( -213.617, 138.466, -22.1506, 0.17 ) }
    dend_49 { pt3dadd( -214.148, 138.438, -21.9897, 1.71 ) }
    dend_49 { pt3dadd( -215.247, 138.449, -21.8459, 0.17 ) }
    dend_49 { pt3dadd( -218.115, 138.952, -22.261, 0.17 ) }
    dend_49 { pt3dadd( -220.446, 139.71, -22.9092, 0.17 ) }
    dend_49 { pt3dadd( -224.228, 141.162, -23.943, 0.17 ) }
    dend_49 { pt3dadd( -230.774, 143.688, -25.8372, 1.37 ) }
    dend_49 { pt3dadd( -232.307, 144.226, -26.1943, 0.17 ) }
    dend_49 { pt3dadd( -236.873, 145.581, -26.9631, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( -242.504, 146.869, -27.3144, 0.17 ) }
    dend_49 { pt3dadd( -248.52, 147.978, -27.2816, 1.03 ) }
    dend_49 { pt3dadd( -250.215, 148.228, -27.0907, 0.17 ) }
    dend_49 { pt3dadd( -251.547, 148.31, -26.7599, 0.17 ) }
    dend_49 { pt3dadd( -256.535, 148.351, -25.4327, 0.17 ) }
    dend_49 { pt3dadd( -259.62, 147.998, -24.2195, 1.03 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 6/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -77.3256, 26.3438, -37.2295, 0.34 ) }
    dend_46 { pt3dadd( -79.9771, 25.4882, -38.6791, 0.34 ) }
    dend_46 { pt3dadd( -82.9668, 24.6777, -40.1263, 0.34 ) }
    dend_46 { pt3dadd( -83.8402, 24.4091, -40.5322, 0.34 ) }
    dend_46 { pt3dadd( -84.1298, 24.3129, -40.6567, 0.34 ) }
    dend_46 { pt3dadd( -87.7394, 23.045, -42.5511, 0.34 ) }
    dend_46 { pt3dadd( -90.4939, 21.9896, -44.0609, 0.34 ) }
    dend_46 { pt3dadd( -93.0785, 20.9439, -45.3597, 1.03 ) }
    dend_46 { pt3dadd( -94.3463, 20.3715, -45.9624, 0.68 ) }
    dend_46 { pt3dadd( -96.0378, 19.5358, -46.9729, 0.86 ) }
    dend_46 { pt3dadd( -98.9771, 17.9021, -49.0679, 0.17 ) }
    dend_46 { pt3dadd( -101.853, 16.0554, -51.4047, 0.17 ) }
    dend_46 { pt3dadd( -102.944, 15.3316, -52.3142, 1.37 ) }
    dend_46 { pt3dadd( -104.49, 14.3673, -53.4676, 0.17 ) }
    dend_46 { pt3dadd( -109.63, 11.432, -57.042, 0.17 ) }
    dend_46 { pt3dadd( -109.822, 11.3362, -57.1542, 0.17 ) }
    dend_46 { pt3dadd( -111.585, 10.6108, -57.9095, 1.03 ) }
    dend_46 { pt3dadd( -112.683, 10.3209, -58.2916, 0.34 ) }
    dend_46 { pt3dadd( -115.474, 10.0055, -59.1061, 0.34 ) }
    dend_46 { pt3dadd( -115.931, 10.0061, -59.2055, 0.34 ) }
    dend_46 { pt3dadd( -119.118, 10.0855, -59.5621, 0.17 ) }
    dend_46 { pt3dadd( -120.158, 10.1008, -59.7062, 2.05 ) }
    dend_46 { pt3dadd( -123.281, 10.1972, -60.203, 0.17 ) }
    dend_46 { pt3dadd( -125.911, 10.2321, -60.5998, 0.17 ) }
    dend_46 { pt3dadd( -126.388, 10.2276, -60.6667, 0.17 ) }
    dend_46 { pt3dadd( -132.31, 10.095, -61.3957, 0.17 ) }
    dend_46 { pt3dadd( -134.5, 10.025, -61.8108, 1.03 ) }
    dend_46 { pt3dadd( -136.671, 9.90511, -62.3148, 0.17 ) }
    dend_46 { pt3dadd( -140.338, 9.61142, -63.259, 0.17 ) }
    dend_46 { pt3dadd( -142.924, 9.32432, -63.9488, 0.17 ) }
    dend_46 { pt3dadd( -146.015, 9.00912, -65.0163, 1.54 ) }
    dend_46 { pt3dadd( -150.785, 8.55504, -67.1131, 0.17 ) }
    dend_46 { pt3dadd( -153.302, 8.23496, -68.388, 0.17 ) }
    dend_46 { pt3dadd( -154.93, 7.97185, -69.3303, 0.86 ) }
    dend_46 { pt3dadd( -156.07, 7.75103, -70.0732, 0.17 ) }
    dend_46 { pt3dadd( -159.435, 6.9174, -72.9811, 0.17 ) }
    dend_46 { pt3dadd( -160.169, 6.69776, -73.6993, 1.37 ) }
    dend_46 { pt3dadd( -160.517, 6.59733, -74.0797, 0.17 ) }
    dend_46 { pt3dadd( -160.659, 6.56015, -74.2496, 0.17 ) }
    dend_46 { pt3dadd( -161.535, 6.35166, -75.3607, 0.17 ) }
    dend_46 { pt3dadd( -165.958, 5.30479, -80.9801, 0.17 ) }
    dend_46 { pt3dadd( -167.524, 4.91087, -83.0195, 1.37 ) }
    dend_46 { pt3dadd( -171.447, 3.95958, -88.198, 0.17 ) }
    dend_46 { pt3dadd( -172.858, 3.61685, -90.0656, 0.17 ) }
    dend_46 { pt3dadd( -175.612, 2.96733, -93.6632, 0.17 ) }
    dend_46 { pt3dadd( -176.945, 2.67361, -95.3746, 1.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 52/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 23.1325, 83.9793, 2.82616, 0.17 ) }
    dend_42 { pt3dadd( 22.9623, 86.2938, 6.42038, 0.17 ) }
    dend_42 { pt3dadd( 22.9493, 87.5271, 7.89491, 0.68 ) }
    dend_42 { pt3dadd( 23.032, 92.2498, 12.7062, 0.68 ) }
    dend_42 { pt3dadd( 23.0876, 95.4255, 15.9414, 0.68 ) }
    dend_42 { pt3dadd( 23.1121, 96.8295, 17.3717, 0.51 ) }
    dend_42 { pt3dadd( 23.135, 98.1368, 18.7034, 0.51 ) }
    dend_42 { pt3dadd( 23.1469, 99.9375, 19.8913, 0.51 ) }
    dend_42 { pt3dadd( 23.1697, 100.237, 20.0231, 0.51 ) }
    dend_42 { pt3dadd( 23.0936, 108.04, 25.7415, 0.51 ) }
    dend_42 { pt3dadd( 22.5885, 114.464, 32.8956, 0.51 ) }
    dend_42 { pt3dadd( 21.1462, 120.537, 40.2153, 0.51 ) }
    dend_42 { pt3dadd( 19.4013, 125.796, 48.0504, 0.51 ) }
    dend_42 { pt3dadd( 17.0807, 131.127, 55.69, 0.51 ) }
    dend_42 { pt3dadd( 14.4382, 137.816, 62.114, 0.51 ) }
    dend_42 { pt3dadd( 11.7957, 145.146, 67.8349, 0.51 ) }
    dend_42 { pt3dadd( 8.98397, 151.458, 74.5446, 0.51 ) }
    dend_42 { pt3dadd( 5.32275, 158.0, 80.6079, 0.51 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 70/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 23.1325, 83.9793, 2.82616, 0.17 ) }
    dend_37 { pt3dadd( 24.4146, 83.5411, -18.8807, 0.17 ) }
    dend_37 { pt3dadd( 24.4261, 83.5371, -19.0745, 0.17 ) }
    dend_37 { pt3dadd( 24.5851, 83.4828, -21.7677, 2.22 ) }
    dend_37 { pt3dadd( 24.6581, 83.4578, -23.0033, 2.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_20 (entry count 75/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 26.5891, 26.8066, 11.1616, 0.68 ) }
    dend_28 { pt3dadd( 27.2124, 28.641, 10.0132, 0.68 ) }
    dend_28 { pt3dadd( 27.2798, 28.9496, 9.85992, 1.88 ) }
    dend_28 { pt3dadd( 27.7045, 34.057, 8.4203, 0.17 ) }
    dend_28 { pt3dadd( 27.7512, 37.6549, 7.64206, 0.51 ) }
    dend_28 { pt3dadd( 27.7169, 40.7997, 7.06845, 0.51 ) }
    dend_28 { pt3dadd( 27.6642, 45.6252, 6.18829, 0.51 ) }
    dend_28 { pt3dadd( 27.4897, 49.8592, 5.46567, 1.03 ) }
    dend_28 { pt3dadd( 27.0582, 56.4838, 4.66514, 1.03 ) }
    dend_28 { pt3dadd( 26.678, 60.0679, 4.57268, 1.03 ) }
    dend_28 { pt3dadd( 26.3676, 61.8062, 4.55869, 0.17 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 86/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 26.5891, 26.8066, 11.1616, 0.17 ) }
    dend_21 { pt3dadd( 27.9792, 26.7346, 12.2086, 0.17 ) }
    dend_21 { pt3dadd( 30.0803, 26.6257, 13.791, 0.17 ) }
    dend_21 { pt3dadd( 31.6275, 26.5456, 14.9563, 0.51 ) }
    dend_21 { pt3dadd( 34.8663, 26.3778, 17.3957, 0.51 ) }
    dend_21 { pt3dadd( 40.5196, 26.085, 21.6536, 0.51 ) }
    dend_21 { pt3dadd( 40.6852, 26.0764, 21.7784, 0.51 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.56551, -46.4508, -10.7981, 1.54 ) }
    dend_3 { pt3dadd( -0.465511, -46.9547, -10.8955, 1.54 ) }
    dend_3 { pt3dadd( -0.31547, -47.7107, -11.0416, 1.03 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 96/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.56551, -46.4508, -10.7981, 0.17 ) }
    dend_2 { pt3dadd( 0.3419, -47.5553, -8.62409, 0.17 ) }
    dend_2 { pt3dadd( 0.781213, -48.5194, -6.87952, 0.17 ) }
    dend_2 { pt3dadd( 0.830971, -48.7233, -6.56098, 1.71 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 0.931754, -49.4586, -5.38092, 0.17 ) }
    dend_2 { pt3dadd( 0.957647, -53.276, 1.36974, 0.17 ) }
    dend_2 { pt3dadd( 0.744955, -56.293, 6.64995, 0.17 ) }
    dend_2 { pt3dadd( 0.434709, -57.747, 9.204, 0.17 ) }
    dend_2 { pt3dadd( 0.0860464, -58.9846, 11.292, 0.17 ) }
    dend_2 { pt3dadd( -0.98465, -62.5206, 16.736, 0.17 ) }
    dend_2 { pt3dadd( -1.86563, -65.361, 20.6024, 0.17 ) }
    dend_2 { pt3dadd( -2.35612, -66.7099, 22.1893, 0.17 ) }
    dend_2 { pt3dadd( -2.64717, -67.741, 23.3409, 0.17 ) }
    dend_2 { pt3dadd( -2.92443, -69.1147, 24.9203, 0.17 ) }
    dend_2 { pt3dadd( -3.29001, -71.3975, 27.37, 0.17 ) }
    dend_2 { pt3dadd( -3.62277, -74.9298, 29.5297, 0.17 ) }
    dend_2 { pt3dadd( -6.44644, -79.5991, 37.8034, 0.17 ) }
    dend_2 { pt3dadd( -11.0074, -82.3178, 46.1305, 0.17 ) }
    dend_2 { pt3dadd( -15.7052, -84.9331, 54.4129, 0.17 ) }
    dend_2 { pt3dadd( -19.2229, -88.1453, 63.0724, 0.17 ) }
    dend_2 { pt3dadd( -23.6882, -91.026, 71.3994, 0.17 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 17/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -51.7644, -20.2002, -20.5914, 0.17 ) }
    dend_60 { pt3dadd( -51.8699, -20.1471, -20.6364, 0.17 ) }
    dend_60 { pt3dadd( -52.6101, -19.7194, -21.0217, 0.17 ) }
    dend_60 { pt3dadd( -53.1723, -19.4223, -21.3018, 0.17 ) }
    dend_60 { pt3dadd( -54.545, -18.757, -21.9457, 1.37 ) }
    dend_60 { pt3dadd( -55.5694, -18.319, -22.391, 1.37 ) }
    dend_60 { pt3dadd( -57.4627, -17.6217, -23.1409, 0.17 ) }
    dend_60 { pt3dadd( -58.6411, -17.2362, -23.579, 0.17 ) }
    dend_60 { pt3dadd( -59.759, -16.9554, -24.023, 0.17 ) }
    dend_60 { pt3dadd( -60.3508, -16.8811, -24.2439, 1.03 ) }
    dend_60 { pt3dadd( -61.0363, -16.9229, -24.6059, 1.03 ) }
    dend_60 { pt3dadd( -62.1504, -17.1623, -25.2671, 0.17 ) }
    dend_60 { pt3dadd( -62.7899, -17.4231, -25.7157, 0.17 ) }
    dend_60 { pt3dadd( -64.5267, -18.4333, -27.1158, 2.22 ) }
    dend_60 { pt3dadd( -65.5396, -19.1363, -28.0321, 2.22 ) }
    dend_60 { pt3dadd( -68.4248, -21.3828, -30.6814, 0.17 ) }
    dend_60 { pt3dadd( -69.434, -22.3075, -31.7119, 0.17 ) }
    dend_60 { pt3dadd( -71.0924, -23.9781, -33.411, 0.17 ) }
    dend_60 { pt3dadd( -71.7226, -24.6747, -33.9961, 1.88 ) }
    dend_60 { pt3dadd( -71.8039, -24.7788, -34.0598, 1.88 ) }
    dend_60 { pt3dadd( -72.8687, -26.3337, -34.8153, 1.2 ) }
    dend_60 { pt3dadd( -74.3286, -28.728, -35.5237, 0.34 ) }
    dend_60 { pt3dadd( -75.3814, -30.5936, -35.9493, 0.34 ) }
    dend_60 { pt3dadd( -76.5061, -32.841, -36.2427, 2.05 ) }
    dend_60 { pt3dadd( -77.3822, -34.7605, -36.4044, 0.51 ) }
    dend_60 { pt3dadd( -78.4399, -37.2492, -36.5054, 0.51 ) }
    dend_60 { pt3dadd( -79.476, -39.8664, -36.4833, 0.17 ) }
    dend_60 { pt3dadd( -80.3521, -42.0325, -36.3307, 0.17 ) }
    dend_60 { pt3dadd( -81.4663, -44.7719, -36.0979, 0.17 ) }
    dend_60 { pt3dadd( -82.1221, -46.1774, -35.9491, 1.54 ) }
    dend_60 { pt3dadd( -82.6432, -47.0755, -35.8182, 1.54 ) }
    dend_60 { pt3dadd( -83.4675, -48.2487, -35.5259, 0.17 ) }
    dend_60 { pt3dadd( -84.541, -49.55, -35.1391, 0.17 ) }
    dend_60 { pt3dadd( -85.4478, -50.537, -34.8014, 2.05 ) }
    dend_60 { pt3dadd( -86.4107, -51.4434, -34.3878, 0.34 ) }
    dend_60 { pt3dadd( -88.6268, -53.4237, -33.247, 0.34 ) }
    dend_60 { pt3dadd( -90.0122, -54.6156, -32.4368, 1.54 ) }
    dend_60 { pt3dadd( -91.0915, -55.4869, -31.7489, 1.54 ) }
    dend_60 { pt3dadd( -91.3985, -55.7162, -31.5481, 0.17 ) }
    dend_60 { pt3dadd( -93.2147, -56.9538, -30.3561, 0.17 ) }
    dend_60 { pt3dadd( -94.1288, -57.5147, -29.7818, 1.03 ) }
    dend_60 { pt3dadd( -94.5004, -57.7442, -29.5723, 1.03 ) }
    dend_60 { pt3dadd( -95.3738, -58.259, -29.2014, 0.17 ) }
    dend_60 { pt3dadd( -97.1192, -59.1535, -28.6106, 0.17 ) }
    dend_60 { pt3dadd( -97.4151, -59.298, -28.5352, 0.68 ) }
    dend_60 { pt3dadd( -98.4004, -59.7574, -28.2809, 0.17 ) }
    dend_60 { pt3dadd( -100.55, -60.6964, -27.7793, 0.17 ) }
    dend_60 { pt3dadd( -102.426, -61.5107, -27.2098, 0.17 ) }
    dend_60 { pt3dadd( -103.555, -62.0315, -26.8202, 1.37 ) }
    dend_60 { pt3dadd( -104.787, -62.6509, -26.3452, 0.51 ) }
    dend_60 { pt3dadd( -106.87, -63.7959, -25.1612, 0.51 ) }
    dend_60 { pt3dadd( -108.394, -64.7008, -24.0223, 0.51 ) }
    dend_60 { pt3dadd( -110.025, -65.7062, -22.5858, 0.17 ) }
    dend_60 { pt3dadd( -111.038, -66.4601, -21.5706, 1.2 ) }
    dend_60 { pt3dadd( -111.608, -66.881, -21.0155, 1.2 ) }
    dend_60 { pt3dadd( -114.235, -68.7902, -18.5688, 0.17 ) }
    dend_60 { pt3dadd( -115.029, -69.3636, -17.9251, 0.17 ) }
    dend_60 { pt3dadd( -115.95, -69.9726, -17.0724, 1.88 ) }
    dend_60 { pt3dadd( -116.52, -70.3073, -16.5743, 0.17 ) }
    dend_60 { pt3dadd( -117.769, -71.0213, -15.3894, 0.17 ) }
    dend_60 { pt3dadd( -118.083, -71.2068, -15.1087, 0.86 ) }
    dend_60 { pt3dadd( -118.933, -71.7665, -14.5273, 0.86 ) }
    dend_60 { pt3dadd( -120.852, -73.2323, -13.0972, 0.17 ) }
    dend_60 { pt3dadd( -121.337, -73.5965, -12.7612, 0.17 ) }
    dend_60 { pt3dadd( -121.916, -73.994, -12.4273, 0.17 ) }
    dend_60 { pt3dadd( -122.436, -74.3576, -12.1718, 0.86 ) }
    dend_60 { pt3dadd( -123.89, -75.3709, -11.6013, 0.34 ) }
    dend_60 { pt3dadd( -125.311, -76.3611, -11.129, 0.34 ) }
    dend_60 { pt3dadd( -126.621, -77.3248, -10.7584, 0.34 ) }
    dend_60 { pt3dadd( -129.492, -79.5168, -10.1116, 0.34 ) }
    dend_60 { pt3dadd( -130.95, -80.6783, -9.84032, 0.34 ) }
    dend_60 { pt3dadd( -134.028, -83.2113, -9.27282, 0.34 ) }
    dend_60 { pt3dadd( -134.139, -83.3085, -9.25275, 0.34 ) }
    dend_60 { pt3dadd( -135.579, -84.6506, -9.01811, 0.34 ) }
    dend_60 { pt3dadd( -137.467, -86.6797, -8.77749, 1.88 ) }
    dend_60 { pt3dadd( -137.888, -87.1905, -8.8017, 1.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 93/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -51.7644, -20.2002, -20.5914, 0.68 ) }
    dend_57 { pt3dadd( -53.4005, -25.0095, -21.3141, 0.68 ) }
    dend_57 { pt3dadd( -53.9376, -26.5882, -21.5513, 0.51 ) }
    dend_57 { pt3dadd( -54.7584, -29.0011, -21.9139, 0.51 ) }
    dend_57 { pt3dadd( -56.0704, -32.8576, -22.4933, 0.51 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 98/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -97.7652, -3.24722, -22.7369, 0.17 ) }
    dend_53 { pt3dadd( -98.3556, -3.57388, -23.4719, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_53 { pt3dadd( -98.4801, -3.64168, -23.6296, 0.17 ) }
    dend_53 { pt3dadd( -98.9025, -3.8283, -24.1024, 0.17 ) }
    dend_53 { pt3dadd( -100.276, -4.46721, -25.8408, 0.86 ) }
    dend_53 { pt3dadd( -102.494, -5.46946, -28.5787, 0.34 ) }
    dend_53 { pt3dadd( -107.23, -7.87929, -34.8226, 0.34 ) }
    dend_53 { pt3dadd( -108.297, -8.40073, -36.1608, 1.71 ) }
    dend_53 { pt3dadd( -110.066, -9.19101, -38.2581, 0.17 ) }
    dend_53 { pt3dadd( -113.32, -10.4893, -41.79, 0.17 ) }
    dend_53 { pt3dadd( -114.927, -11.1065, -43.4811, 0.17 ) }
    dend_53 { pt3dadd( -119.853, -12.6885, -47.9174, 0.17 ) }
    dend_53 { pt3dadd( -123.667, -13.5814, -50.6923, 0.17 ) }
    dend_53 { pt3dadd( -125.116, -13.9116, -51.6597, 1.88 ) }
    dend_53 { pt3dadd( -128.013, -14.4475, -53.285, 0.17 ) }
    dend_53 { pt3dadd( -133.901, -15.1971, -55.7894, 0.17 ) }
    dend_53 { pt3dadd( -136.797, -15.4624, -56.8879, 0.17 ) }
    dend_53 { pt3dadd( -137.875, -15.5261, -57.2261, 1.2 ) }
    dend_53 { pt3dadd( -139.968, -15.6896, -58.0, 0.17 ) }
    dend_53 { pt3dadd( -143.605, -16.1516, -59.603, 0.17 ) }
    dend_53 { pt3dadd( -144.236, -16.2458, -59.9135, 0.17 ) }
    dend_53 { pt3dadd( -144.441, -16.266, -59.9973, 0.17 ) }
    dend_53 { pt3dadd( -147.28, -16.7122, -61.3755, 0.17 ) }
    dend_53 { pt3dadd( -149.231, -17.1035, -62.324, 2.05 ) }
    dend_53 { pt3dadd( -152.657, -17.872, -63.945, 1.54 ) }
    dend_53 { pt3dadd( -153.717, -18.1281, -64.4053, 0.17 ) }
    dend_53 { pt3dadd( -156.953, -18.9145, -65.6435, 0.17 ) }
    dend_53 { pt3dadd( -162.458, -20.2766, -67.4002, 0.17 ) }
    dend_53 { pt3dadd( -164.616, -20.7174, -67.8361, 1.03 ) }
    dend_53 { pt3dadd( -166.387, -21.0415, -68.0543, 0.17 ) }
    dend_53 { pt3dadd( -168.142, -21.2712, -68.1009, 0.17 ) }
    dend_53 { pt3dadd( -169.317, -21.4156, -68.063, 1.54 ) }
    dend_53 { pt3dadd( -170.64, -21.5377, -67.9042, 0.17 ) }
    dend_53 { pt3dadd( -175.067, -21.5372, -66.9151, 0.17 ) }
    dend_53 { pt3dadd( -175.29, -21.5384, -66.8832, 0.17 ) }
    dend_53 { pt3dadd( -177.042, -21.569, -66.9083, 1.54 ) }
    dend_53 { pt3dadd( -177.728, -21.5723, -67.0422, 0.17 ) }
    dend_53 { pt3dadd( -180.062, -21.5158, -67.81, 0.17 ) }
    dend_53 { pt3dadd( -180.487, -21.4904, -68.0472, 1.54 ) }
    dend_53 { pt3dadd( -184.693, -21.0851, -70.7849, 0.17 ) }
    dend_53 { pt3dadd( -187.631, -20.6217, -72.7227, 0.17 ) }
    dend_53 { pt3dadd( -190.019, -20.1747, -74.2402, 2.05 ) }
    dend_53 { pt3dadd( -191.894, -19.7579, -75.3108, 0.17 ) }
    dend_53 { pt3dadd( -197.371, -18.2241, -77.8935, 0.17 ) }
    dend_53 { pt3dadd( -200.754, -17.1854, -79.1419, 1.2 ) }
    dend_53 { pt3dadd( -202.115, -16.7238, -79.5106, 0.17 ) }
    dend_53 { pt3dadd( -205.944, -15.3934, -80.404, 0.17 ) }
    dend_53 { pt3dadd( -210.841, -13.5773, -80.9656, 0.17 ) }
    dend_53 { pt3dadd( -214.81, -12.0616, -80.6696, 1.54 ) }
    dend_53 { pt3dadd( -216.597, -11.3568, -80.1989, 0.17 ) }
    dend_53 { pt3dadd( -217.378, -11.0285, -79.8588, 0.86 ) }
    dend_53 { pt3dadd( -217.753, -10.876, -79.6643, 0.17 ) }
    dend_53 { pt3dadd( -222.449, -9.09302, -76.6461, 0.17 ) }
    dend_53 { pt3dadd( -226.258, -7.93333, -73.9534, 0.17 ) }
    dend_53 { pt3dadd( -227.838, -7.5614, -72.8352, 1.54 ) }
    dend_53 { pt3dadd( -232.024, -6.73537, -69.8322, 0.17 ) }
    dend_53 { pt3dadd( -235.993, -6.07117, -66.8278, 0.17 ) }
    dend_53 { pt3dadd( -240.086, -5.43288, -63.5059, 1.2 ) }
    dend_53 { pt3dadd( -241.51, -5.25598, -62.31, 1.2 ) }
    dend_53 { pt3dadd( -242.185, -5.17485, -61.6981, 0.17 ) }
    dend_53 { pt3dadd( -243.314, -5.04098, -60.6349, 0.17 ) }
    dend_53 { pt3dadd( -246.844, -4.64654, -57.3666, 0.86 ) }
    dend_53 { pt3dadd( -250.646, -4.05788, -53.6459, 0.34 ) }
    dend_53 { pt3dadd( -252.189, -3.77382, -52.3744, 0.34 ) }
    dend_53 { pt3dadd( -252.375, -3.74353, -52.2509, 0.34 ) }
    dend_53 { pt3dadd( -253.127, -3.61548, -51.7922, 1.03 ) }
    dend_53 { pt3dadd( -253.943, -3.52396, -51.4032, 0.17 ) }
    dend_53 { pt3dadd( -256.324, -3.94579, -51.4664, 0.17 ) }
    dend_53 { pt3dadd( -259.829, -5.47555, -52.8369, 1.2 ) }
    dend_53 { pt3dadd( -261.429, -6.33018, -53.6385, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 68/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -97.7652, -3.24722, -22.7369, 0.17 ) }
    dend_52 { pt3dadd( -100.735, 0.203382, -23.8452, 0.17 ) }
    dend_52 { pt3dadd( -102.598, 2.24302, -24.2187, 0.17 ) }
    dend_52 { pt3dadd( -104.293, 4.01161, -24.2229, 1.03 ) }
    dend_52 { pt3dadd( -105.181, 4.91244, -24.1442, 0.17 ) }
    dend_52 { pt3dadd( -106.415, 6.14598, -23.9651, 0.17 ) }
    dend_52 { pt3dadd( -109.946, 9.63253, -23.3566, 0.17 ) }
    dend_52 { pt3dadd( -110.06, 9.73759, -23.3188, 0.17 ) }
    dend_52 { pt3dadd( -111.997, 11.4719, -22.5715, 1.2 ) }
    dend_52 { pt3dadd( -112.306, 11.7612, -22.4357, 0.17 ) }
    dend_52 { pt3dadd( -114.171, 13.6532, -21.5379, 0.17 ) }
    dend_52 { pt3dadd( -114.654, 14.2146, -21.2878, 0.17 ) }
    dend_52 { pt3dadd( -115.194, 14.8875, -21.0333, 1.54 ) }
    dend_52 { pt3dadd( -115.87, 15.7265, -20.7453, 0.17 ) }
    dend_52 { pt3dadd( -116.936, 17.0197, -20.3401, 0.17 ) }
    dend_52 { pt3dadd( -118.545, 18.8276, -20.0302, 0.17 ) }
    dend_52 { pt3dadd( -118.994, 19.295, -20.0048, 1.71 ) }
    dend_52 { pt3dadd( -120.204, 20.4294, -20.0423, 0.17 ) }
    dend_52 { pt3dadd( -121.389, 21.4557, -20.1463, 0.17 ) }
    dend_52 { pt3dadd( -123.64, 23.1789, -20.441, 0.17 ) }
    dend_52 { pt3dadd( -127.396, 25.7083, -21.0905, 1.54 ) }
    dend_52 { pt3dadd( -129.255, 26.7632, -21.4621, 0.17 ) }
    dend_52 { pt3dadd( -131.501, 27.8322, -22.0202, 0.17 ) }
    dend_52 { pt3dadd( -131.501, 27.8322, -22.0202, 2.05 ) }
    dend_52 { pt3dadd( -133.755, 28.507, -22.7256, 0.17 ) }
    dend_52 { pt3dadd( -134.669, 28.6804, -23.025, 0.17 ) }
    dend_52 { pt3dadd( -138.066, 29.0087, -23.6968, 0.17 ) }
    dend_52 { pt3dadd( -141.314, 29.1067, -24.2008, 1.03 ) }
    dend_52 { pt3dadd( -142.082, 29.1285, -24.2736, 0.17 ) }
    dend_52 { pt3dadd( -142.237, 29.1429, -24.275, 0.17 ) }
    dend_52 { pt3dadd( -142.989, 29.2964, -24.1754, 0.17 ) }
    dend_52 { pt3dadd( -146.387, 30.6645, -23.1571, 1.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_52 { pt3dadd( -147.278, 31.2005, -22.7112, 0.17 ) }
    dend_52 { pt3dadd( -148.342, 31.9414, -22.0955, 0.17 ) }
    dend_52 { pt3dadd( -149.355, 32.7854, -21.5639, 1.03 ) }
    dend_52 { pt3dadd( -150.286, 33.6515, -21.1517, 0.17 ) }
    dend_52 { pt3dadd( -151.213, 34.6591, -20.856, 0.17 ) }
    dend_52 { pt3dadd( -151.64, 35.1557, -20.7252, 1.03 ) }
    dend_52 { pt3dadd( -151.85, 35.4108, -20.6021, 0.17 ) }
    dend_52 { pt3dadd( -152.556, 36.2169, -19.883, 0.17 ) }
    dend_52 { pt3dadd( -152.637, 36.3086, -19.7813, 0.17 ) }
    dend_52 { pt3dadd( -152.936, 36.6559, -19.3233, 1.2 ) }
    dend_52 { pt3dadd( -154.615, 38.5711, -16.3445, 0.17 ) }
    dend_52 { pt3dadd( -155.166, 39.1798, -15.2942, 0.17 ) }
    dend_52 { pt3dadd( -156.3, 40.3246, -13.069, 1.54 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 13/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -176.945, 2.67361, -95.3746, 0.17 ) }
    dend_48 { pt3dadd( -176.682, 0.785866, -94.4636, 0.17 ) }
    dend_48 { pt3dadd( -176.428, -1.04045, -93.5824, 0.17 ) }
    dend_48 { pt3dadd( -175.63, -6.77175, -90.8167, 0.17 ) }
    dend_48 { pt3dadd( -175.538, -7.43681, -90.4958, 0.86 ) }
    dend_48 { pt3dadd( -175.527, -7.5155, -90.4578, 0.86 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 19/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -176.945, 2.67361, -95.3746, 0.17 ) }
    dend_47 { pt3dadd( -178.222, 3.02087, -96.1767, 0.17 ) }
    dend_47 { pt3dadd( -181.785, 4.12424, -98.2855, 0.17 ) }
    dend_47 { pt3dadd( -181.929, 4.17579, -98.3853, 0.17 ) }
    dend_47 { pt3dadd( -184.887, 5.24994, -100.557, 1.37 ) }
    dend_47 { pt3dadd( -186.41, 5.79695, -101.663, 0.17 ) }
    dend_47 { pt3dadd( -189.675, 7.00923, -103.956, 0.17 ) }
    dend_47 { pt3dadd( -190.882, 7.51024, -104.841, 0.17 ) }
    dend_47 { pt3dadd( -194.112, 8.97472, -107.517, 1.03 ) }
    dend_47 { pt3dadd( -194.531, 9.16919, -107.846, 0.17 ) }
    dend_47 { pt3dadd( -196.009, 9.84363, -108.874, 0.17 ) }
    dend_47 { pt3dadd( -197.486, 10.4854, -109.879, 0.68 ) }
    dend_47 { pt3dadd( -197.748, 10.5895, -110.093, 0.68 ) }
    dend_47 { pt3dadd( -199.652, 11.233, -111.579, 0.17 ) }
    dend_47 { pt3dadd( -201.865, 11.8142, -113.165, 0.17 ) }
    dend_47 { pt3dadd( -203.15, 12.087, -114.196, 1.2 ) }
    dend_47 { pt3dadd( -203.917, 12.1889, -114.837, 0.17 ) }
    dend_47 { pt3dadd( -206.837, 12.3892, -117.195, 0.17 ) }
    dend_47 { pt3dadd( -207.989, 12.4304, -118.048, 0.17 ) }
    dend_47 { pt3dadd( -209.141, 12.3805, -118.781, 0.68 ) }
    dend_47 { pt3dadd( -210.73, 12.1105, -119.84, 0.17 ) }
    dend_47 { pt3dadd( -212.219, 11.7414, -120.774, 0.17 ) }
    dend_47 { pt3dadd( -213.008, 11.464, -121.246, 1.88 ) }
    dend_47 { pt3dadd( -213.572, 11.2299, -121.601, 0.17 ) }
    dend_47 { pt3dadd( -216.773, 9.83583, -123.803, 0.17 ) }
    dend_47 { pt3dadd( -218.493, 8.9777, -124.968, 1.37 ) }
    dend_47 { pt3dadd( -219.652, 8.34985, -125.745, 0.17 ) }
    dend_47 { pt3dadd( -222.362, 6.74039, -127.72, 0.17 ) }
    dend_47 { pt3dadd( -224.707, 5.28959, -129.463, 1.03 ) }
    dend_47 { pt3dadd( -225.245, 4.92334, -129.94, 0.17 ) }
    dend_47 { pt3dadd( -227.361, 3.38114, -132.025, 0.17 ) }
    dend_47 { pt3dadd( -227.612, 3.20007, -132.28, 0.17 ) }
    dend_47 { pt3dadd( -228.638, 2.43496, -133.338, 1.2 ) }
    dend_47 { pt3dadd( -229.408, 1.82228, -134.119, 0.17 ) }
    dend_47 { pt3dadd( -234.08, -2.00605, -138.746, 0.17 ) }
    dend_47 { pt3dadd( -234.463, -2.34125, -139.281, 1.37 ) }
    dend_47 { pt3dadd( -234.546, -2.41543, -139.422, 1.37 ) }
    dend_47 { pt3dadd( -235.399, -3.22147, -141.043, 0.34 ) }
    dend_47 { pt3dadd( -236.588, -4.4053, -143.592, 0.34 ) }
    dend_47 { pt3dadd( -236.724, -4.54457, -143.898, 0.34 ) }
    dend_47 { pt3dadd( -240.572, -8.50668, -153.272, 0.17 ) }
    dend_47 { pt3dadd( -240.714, -8.65157, -153.616, 0.17 ) }
    dend_47 { pt3dadd( -240.911, -8.85337, -154.101, 0.17 ) }
    dend_47 { pt3dadd( -241.0, -8.93117, -154.32, 0.17 ) }
    dend_47 { pt3dadd( -242.963, -10.3253, -158.537, 0.86 ) }
    dend_47 { pt3dadd( -244.957, -11.4832, -161.793, 0.17 ) }
    dend_47 { pt3dadd( -246.258, -11.8633, -162.718, 0.17 ) }
    dend_47 { pt3dadd( -246.368, -11.8894, -162.86, 1.37 ) }
    dend_47 { pt3dadd( -248.432, -12.3987, -166.667, 0.17 ) }
    dend_47 { pt3dadd( -248.68, -12.4558, -167.104, 1.03 ) }
    dend_47 { pt3dadd( -248.952, -12.5172, -167.595, 0.17 ) }
    dend_47 { pt3dadd( -250.053, -12.7811, -169.681, 0.17 ) }
    dend_47 { pt3dadd( -256.128, -14.4372, -180.117, 1.03 ) }
    dend_47 { pt3dadd( -258.796, -15.2562, -184.426, 0.17 ) }
    dend_47 { pt3dadd( -261.575, -16.1706, -188.692, 0.17 ) }
    dend_47 { pt3dadd( -261.796, -16.2556, -189.013, 1.03 ) }
    dend_47 { pt3dadd( -265.367, -17.8524, -193.836, 0.17 ) }
    dend_47 { pt3dadd( -269.67, -20.1072, -198.916, 0.17 ) }
    dend_47 { pt3dadd( -271.631, -21.3391, -200.317, 1.2 ) }
    dend_47 { pt3dadd( -272.175, -21.7659, -200.638, 0.17 ) }
    dend_47 { pt3dadd( -274.374, -24.0937, -202.158, 0.17 ) }
    dend_47 { pt3dadd( -275.035, -25.0167, -202.585, 0.68 ) }
    dend_47 { pt3dadd( -275.367, -25.7293, -202.766, 0.17 ) }
    dend_47 { pt3dadd( -275.856, -28.148, -203.362, 0.17 ) }
    dend_47 { pt3dadd( -276.365, -31.7593, -204.479, 1.37 ) }
    dend_47 { pt3dadd( -276.54, -33.4226, -205.15, 0.17 ) }
    dend_47 { pt3dadd( -276.636, -36.6104, -206.579, 0.17 ) }
    dend_47 { pt3dadd( -276.468, -37.5264, -206.873, 1.03 ) }
    dend_47 { pt3dadd( -276.354, -37.9125, -206.971, 0.17 ) }
    dend_47 { pt3dadd( -274.734, -42.5382, -207.997, 0.17 ) }
    dend_47 { pt3dadd( -274.588, -42.9102, -208.054, 0.17 ) }
    dend_47 { pt3dadd( -272.671, -47.4254, -208.571, 0.17 ) }
    dend_47 { pt3dadd( -268.593, -56.0941, -209.454, 0.17 ) }
    dend_47 { pt3dadd( -268.358, -56.5818, -209.485, 1.03 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 93/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 24.6581, 83.4578, -23.0033, 0.17 ) }
    dend_39 { pt3dadd( 24.7325, 84.0803, -23.0574, 0.17 ) }
    dend_39 { pt3dadd( 24.78, 84.6039, -23.1034, 0.17 ) }
    dend_39 { pt3dadd( 24.8915, 86.0281, -23.2291, 0.17 ) }
    dend_39 { pt3dadd( 24.9535, 86.7144, -23.1831, 1.71 ) }
    dend_39 { pt3dadd( 25.0996, 88.277, -22.9868, 0.17 ) }
    dend_39 { pt3dadd( 25.3044, 90.7611, -22.6242, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_39 { pt3dadd( 25.32, 90.9838, -22.5852, 1.54 ) }
    dend_39 { pt3dadd( 25.3808, 92.2369, -22.3662, 0.17 ) }
    dend_39 { pt3dadd( 25.5506, 95.8197, -21.7224, 0.17 ) }
    dend_39 { pt3dadd( 25.6748, 98.0961, -21.3152, 1.37 ) }
    dend_39 { pt3dadd( 25.6853, 98.7772, -21.2241, 0.17 ) }
    dend_39 { pt3dadd( 25.689, 99.0072, -21.1946, 0.17 ) }
    dend_39 { pt3dadd( 25.6909, 102.59, -20.8372, 0.17 ) }
    dend_39 { pt3dadd( 25.6698, 103.418, -20.8042, 1.2 ) }
    dend_39 { pt3dadd( 25.613, 104.266, -20.8827, 0.17 ) }
    dend_39 { pt3dadd( 25.1927, 109.069, -21.33, 0.17 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 10/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 24.6581, 83.4578, -23.0033, 0.86 ) }
    dend_38 { pt3dadd( 27.7432, 83.8121, -19.0574, 0.86 ) }
    dend_38 { pt3dadd( 28.9168, 83.9468, -17.5562, 0.86 ) }
    dend_38 { pt3dadd( 30.3043, 84.1062, -15.7815, 0.34 ) }
    dend_38 { pt3dadd( 31.4638, 84.2393, -14.2985, 0.34 ) }
    dend_38 { pt3dadd( 33.5125, 84.4745, -11.6781, 0.34 ) }
    dend_38 { pt3dadd( 40.1166, 85.2329, -3.2312, 0.17 ) }
    // Section: dend_27, id: dend_27, parent: dend_21 (entry count 17/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 40.6852, 26.0764, 21.7784, 0.17 ) }
    dend_27 { pt3dadd( 37.0417, 31.8633, 21.0974, 0.17 ) }
    dend_27 { pt3dadd( 31.4363, 40.8848, 19.7917, 0.17 ) }
    dend_27 { pt3dadd( 25.3201, 49.3782, 17.6812, 0.17 ) }
    dend_27 { pt3dadd( 18.9336, 57.3508, 14.6574, 0.17 ) }
    dend_27 { pt3dadd( 12.7792, 65.5233, 11.6635, 0.17 ) }
    dend_27 { pt3dadd( 7.60707, 73.8708, 7.52678, 0.17 ) }
    dend_27 { pt3dadd( 0.737581, 81.2741, 4.19841, 0.17 ) }
    dend_27 { pt3dadd( -5.17953, 89.8839, 1.9797, 0.17 ) }
    dend_27 { pt3dadd( -10.494, 98.0747, -2.27339, 0.17 ) }
    dend_27 { pt3dadd( -17.2073, 104.108, -7.79877, 0.17 ) }
    dend_27 { pt3dadd( -23.2435, 111.204, -12.881, 0.17 ) }
    dend_27 { pt3dadd( -29.2676, 118.541, -17.6444, 0.17 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 30/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 40.6852, 26.0764, 21.7784, 0.68 ) }
    dend_22 { pt3dadd( 41.548, 25.5053, 20.5791, 0.68 ) }
    dend_22 { pt3dadd( 43.112, 24.5923, 18.8079, 0.17 ) }
    dend_22 { pt3dadd( 49.4486, 21.1899, 12.7106, 0.17 ) }
    dend_22 { pt3dadd( 49.4921, 21.1667, 12.6777, 0.17 ) }
    dend_22 { pt3dadd( 50.9245, 20.4461, 11.8485, 0.17 ) }
    dend_22 { pt3dadd( 53.6726, 19.0991, 10.5008, 0.17 ) }
    dend_22 { pt3dadd( 54.3673, 18.778, 10.2685, 1.37 ) }
    dend_22 { pt3dadd( 55.2075, 18.4378, 10.205, 0.17 ) }
    dend_22 { pt3dadd( 58.1583, 17.4935, 10.6798, 0.17 ) }
    dend_22 { pt3dadd( 60.2468, 16.8434, 11.0159, 0.17 ) }
    dend_22 { pt3dadd( 60.3551, 16.809, 11.0334, 0.17 ) }
    dend_22 { pt3dadd( 62.5522, 16.1356, 11.3855, 0.17 ) }
    dend_22 { pt3dadd( 64.6562, 15.4998, 11.7213, 0.17 ) }
    dend_22 { pt3dadd( 66.8472, 15.0525, 12.0399, 0.17 ) }
    dend_22 { pt3dadd( 67.0767, 15.0444, 12.0385, 0.17 ) }
    dend_22 { pt3dadd( 68.1008, 15.1269, 11.8822, 0.17 ) }
    dend_22 { pt3dadd( 70.2314, 15.5468, 11.282, 0.17 ) }
    dend_22 { pt3dadd( 70.33, 15.5888, 11.2431, 0.17 ) }
    dend_22 { pt3dadd( 72.8616, 17.2, 9.92112, 0.17 ) }
    dend_22 { pt3dadd( 76.3333, 19.7299, 7.64217, 0.17 ) }
    dend_22 { pt3dadd( 76.6485, 19.9728, 7.41974, 1.2 ) }
    dend_22 { pt3dadd( 76.8886, 20.1709, 7.23853, 0.17 ) }
    dend_22 { pt3dadd( 80.0762, 22.9937, 4.72727, 0.17 ) }
    dend_22 { pt3dadd( 83.5466, 26.0512, 2.03409, 0.17 ) }
    dend_22 { pt3dadd( 86.5158, 28.438, -0.431951, 0.17 ) }
    dend_22 { pt3dadd( 86.6699, 28.5577, -0.55461, 1.2 ) }
    dend_22 { pt3dadd( 86.9085, 28.7311, -0.771383, 0.17 ) }
    dend_22 { pt3dadd( 87.9544, 29.46, -1.79575, 0.17 ) }
    dend_22 { pt3dadd( 88.2351, 29.6397, -2.12356, 0.86 ) }
    dend_22 { pt3dadd( 91.8544, 31.4824, -6.35061, 0.17 ) }
    dend_22 { pt3dadd( 93.8996, 32.3869, -8.68524, 0.17 ) }
    dend_22 { pt3dadd( 95.9351, 33.2221, -11.0504, 1.54 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -0.31547, -47.7107, -11.0416, 1.03 ) }
    dend_7 { pt3dadd( -1.01591, -49.4286, -10.8851, 1.03 ) }
    dend_7 { pt3dadd( -1.70055, -51.5248, -10.7291, 1.54 ) }
    dend_7 { pt3dadd( -1.93735, -52.5274, -10.6722, 0.68 ) }
    dend_7 { pt3dadd( -2.46178, -56.142, -10.8341, 0.68 ) }
    dend_7 { pt3dadd( -2.55893, -58.1441, -10.577, 0.68 ) }
    dend_7 { pt3dadd( -2.48852, -59.5999, -10.1429, 0.17 ) }
    dend_7 { pt3dadd( -2.23054, -60.89, -9.49739, 0.86 ) }
    dend_7 { pt3dadd( -1.79973, -62.0959, -8.65241, 0.86 ) }
    dend_7 { pt3dadd( -0.682386, -64.4018, -6.31101, 0.51 ) }
    dend_7 { pt3dadd( 2.81005, -70.1574, 0.348302, 0.17 ) }
    dend_7 { pt3dadd( 3.27045, -70.9354, 1.25975, 1.03 ) }
    dend_7 { pt3dadd( 3.79558, -71.9696, 2.41648, 1.03 ) }
    dend_7 { pt3dadd( 3.95917, -72.3587, 2.81269, 1.03 ) }
    dend_7 { pt3dadd( 4.83578, -75.1752, 5.26138, 0.51 ) }
    dend_7 { pt3dadd( 5.40531, -77.8372, 7.14033, 0.51 ) }
    dend_7 { pt3dadd( 5.55004, -78.9934, 7.48759, 1.2 ) }
    dend_7 { pt3dadd( 5.77838, -80.5897, 7.85708, 1.88 ) }
    dend_7 { pt3dadd( 6.00478, -81.922, 8.07737, 0.51 ) }
    dend_7 { pt3dadd( 6.33751, -84.0053, 8.24953, 0.51 ) }
    dend_7 { pt3dadd( 6.44246, -84.9505, 8.16946, 0.51 ) }
    dend_7 { pt3dadd( 6.50223, -86.4598, 7.97114, 0.51 ) }
    dend_7 { pt3dadd( 6.49139, -89.0686, 7.54931, 0.68 ) }
    dend_7 { pt3dadd( 6.46127, -90.0426, 7.37009, 0.68 ) }
    dend_7 { pt3dadd( 6.43611, -91.4779, 7.09054, 0.34 ) }
    dend_7 { pt3dadd( 6.47657, -94.6809, 6.4578, 1.54 ) }
    dend_7 { pt3dadd( 6.46465, -96.2899, 6.16612, 0.68 ) }
    dend_7 { pt3dadd( 6.3304, -97.9054, 5.92712, 0.17 ) }
    dend_7 { pt3dadd( 6.13633, -99.1184, 5.79674, 0.68 ) }
    dend_7 { pt3dadd( 5.72299, -101.285, 5.654, 0.51 ) }
    dend_7 { pt3dadd( 5.39989, -102.747, 5.63121, 0.51 ) }
    dend_7 { pt3dadd( 5.105, -104.161, 5.68789, 0.51 ) }
    dend_7 { pt3dadd( 4.5899, -106.505, 5.78652, 0.51 ) }
    dend_7 { pt3dadd( 4.21948, -108.003, 5.85691, 1.2 ) }
    dend_7 { pt3dadd( 3.78757, -109.477, 5.93819, 0.86 ) }
    dend_7 { pt3dadd( 3.21933, -111.232, 6.0446, 0.17 ) }
    dend_7 { pt3dadd( 2.90807, -112.347, 6.10333, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 2.5768, -114.195, 6.27678, 0.17 ) }
    dend_7 { pt3dadd( 2.45059, -115.521, 6.44728, 1.54 ) }
    dend_7 { pt3dadd( 2.3829, -116.601, 6.61561, 1.03 ) }
    dend_7 { pt3dadd( 2.31156, -117.577, 6.79022, 0.34 ) }
    dend_7 { pt3dadd( 2.10053, -119.902, 7.22363, 0.34 ) }
    dend_7 { pt3dadd( 1.88818, -122.267, 7.76195, 1.03 ) }
    dend_7 { pt3dadd( 1.83955, -123.15, 7.98676, 0.68 ) }
    dend_7 { pt3dadd( 1.75547, -125.004, 8.4847, 0.17 ) }
    dend_7 { pt3dadd( 1.67363, -126.418, 8.86106, 0.17 ) }
    dend_7 { pt3dadd( 1.49937, -128.612, 9.43617, 0.17 ) }
    dend_7 { pt3dadd( 1.24938, -130.812, 9.95373, 1.54 ) }
    dend_7 { pt3dadd( 1.09265, -132.289, 10.2151, 0.68 ) }
    dend_7 { pt3dadd( 1.00841, -133.342, 10.3601, 0.51 ) }
    dend_7 { pt3dadd( 0.901084, -135.457, 10.5718, 0.51 ) }
    dend_7 { pt3dadd( 0.885181, -135.724, 10.5856, 0.51 ) }
    dend_7 { pt3dadd( 0.624623, -138.089, 10.5745, 0.51 ) }
    dend_7 { pt3dadd( 0.336844, -139.656, 10.4745, 0.51 ) }
    dend_7 { pt3dadd( 0.0759599, -140.911, 10.3846, 0.51 ) }
    dend_7 { pt3dadd( 0.0443135, -141.046, 10.3759, 0.51 ) }
    dend_7 { pt3dadd( -0.457957, -142.793, 10.0773, 1.37 ) }
    dend_7 { pt3dadd( -0.496711, -142.916, 10.0548, 1.37 ) }
    dend_7 { pt3dadd( -1.37052, -145.119, 9.60239, 0.86 ) }
    dend_7 { pt3dadd( -1.50139, -145.387, 9.55045, 0.17 ) }
    dend_7 { pt3dadd( -2.36923, -147.076, 9.27011, 0.68 ) }
    dend_7 { pt3dadd( -3.75135, -149.72, 8.72616, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 25/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.31547, -47.7107, -11.0416, 0.86 ) }
    dend_4 { pt3dadd( -1.13781, -51.0038, -20.3869, 0.86 ) }
    dend_4 { pt3dadd( -1.15812, -51.0851, -20.6178, 0.86 ) }
    dend_4 { pt3dadd( -1.40136, -52.0592, -23.382, 0.86 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 29/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -137.888, -87.1905, -8.8017, 0.17 ) }
    dend_62 { pt3dadd( -143.015, -89.0338, -11.203, 0.17 ) }
    dend_62 { pt3dadd( -145.963, -89.5097, -11.9376, 0.17 ) }
    dend_62 { pt3dadd( -147.241, -89.5783, -12.1714, 1.03 ) }
    dend_62 { pt3dadd( -148.289, -89.6345, -12.3632, 0.17 ) }
    dend_62 { pt3dadd( -151.862, -89.8262, -13.0167, 0.17 ) }
    dend_62 { pt3dadd( -153.579, -89.9183, -13.3307, 1.03 ) }
    dend_62 { pt3dadd( -157.187, -89.6263, -13.4528, 0.17 ) }
    dend_62 { pt3dadd( -159.166, -89.2863, -13.4763, 0.17 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 38/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -137.888, -87.1905, -8.8017, 0.17 ) }
    dend_61 { pt3dadd( -140.184, -88.5871, -8.2704, 0.17 ) }
    dend_61 { pt3dadd( -142.591, -89.7687, -7.61137, 0.17 ) }
    dend_61 { pt3dadd( -144.29, -90.5128, -7.12955, 0.86 ) }
    dend_61 { pt3dadd( -144.868, -90.739, -6.97869, 0.17 ) }
    dend_61 { pt3dadd( -146.031, -91.1675, -6.6867, 0.17 ) }
    dend_61 { pt3dadd( -149.484, -92.3973, -5.84945, 0.17 ) }
    dend_61 { pt3dadd( -151.953, -93.0268, -5.22756, 1.54 ) }
    dend_61 { pt3dadd( -152.18, -93.0612, -5.12341, 0.17 ) }
    dend_61 { pt3dadd( -153.824, -93.1466, -3.8204, 0.17 ) }
    dend_61 { pt3dadd( -153.95, -93.1445, -3.69416, 1.2 ) }
    dend_61 { pt3dadd( -154.412, -93.1604, -3.14194, 0.17 ) }
    dend_61 { pt3dadd( -156.491, -93.4151, -0.32731, 0.17 ) }
    dend_61 { pt3dadd( -158.995, -93.9739, 3.0322, 0.17 ) }
    dend_61 { pt3dadd( -160.891, -94.6904, 5.62568, 1.54 ) }
    dend_61 { pt3dadd( -161.263, -94.9248, 6.16791, 0.17 ) }
    dend_61 { pt3dadd( -163.159, -96.6421, 8.90954, 0.17 ) }
    dend_61 { pt3dadd( -164.206, -97.7425, 10.569, 1.2 ) }
    dend_61 { pt3dadd( -164.816, -98.4882, 11.5656, 0.86 ) }
    dend_61 { pt3dadd( -166.245, -100.284, 13.7492, 0.17 ) }
    dend_61 { pt3dadd( -167.989, -102.49, 16.3938, 0.17 ) }
    dend_61 { pt3dadd( -169.262, -104.029, 18.3574, 0.17 ) }
    dend_61 { pt3dadd( -172.335, -107.487, 23.1462, 0.17 ) }
    dend_61 { pt3dadd( -172.459, -107.617, 23.3272, 0.17 ) }
    dend_61 { pt3dadd( -174.521, -109.491, 26.1412, 0.17 ) }
    dend_61 { pt3dadd( -175.433, -110.207, 27.2803, 0.86 ) }
    dend_61 { pt3dadd( -176.001, -110.681, 27.9533, 0.86 ) }
    dend_61 { pt3dadd( -176.299, -110.994, 28.3019, 0.17 ) }
    dend_61 { pt3dadd( -177.41, -112.492, 29.565, 0.17 ) }
    dend_61 { pt3dadd( -178.605, -114.379, 31.1848, 1.37 ) }
    dend_61 { pt3dadd( -179.135, -115.445, 32.124, 0.17 ) }
    dend_61 { pt3dadd( -180.234, -118.089, 34.4853, 0.17 ) }
    dend_61 { pt3dadd( -180.995, -120.356, 36.4989, 0.17 ) }
    dend_61 { pt3dadd( -181.03, -120.489, 36.6131, 0.17 ) }
    dend_61 { pt3dadd( -181.313, -122.045, 37.8173, 0.17 ) }
    dend_61 { pt3dadd( -181.432, -122.905, 38.3843, 1.37 ) }
    dend_61 { pt3dadd( -181.556, -124.071, 38.9287, 0.34 ) }
    dend_61 { pt3dadd( -181.609, -124.942, 39.1612, 0.17 ) }
    dend_61 { pt3dadd( -181.723, -127.623, 39.5145, 0.17 ) }
    dend_61 { pt3dadd( -181.822, -128.993, 39.5885, 1.03 ) }
    dend_61 { pt3dadd( -181.989, -130.109, 39.5274, 1.03 ) }
    dend_61 { pt3dadd( -183.039, -134.449, 38.9594, 0.17 ) }
    dend_61 { pt3dadd( -183.551, -136.046, 38.4114, 0.17 ) }
    dend_61 { pt3dadd( -183.756, -136.582, 38.1312, 1.03 ) }
    dend_61 { pt3dadd( -183.915, -136.835, 37.957, 0.17 ) }
    dend_61 { pt3dadd( -185.085, -138.008, 36.8685, 0.17 ) }
    dend_61 { pt3dadd( -185.747, -138.533, 36.299, 1.71 ) }
    dend_61 { pt3dadd( -188.829, -140.144, 34.1798, 0.68 ) }
    dend_61 { pt3dadd( -189.593, -140.509, 33.6226, 0.17 ) }
    dend_61 { pt3dadd( -192.701, -142.109, 31.3347, 0.17 ) }
    dend_61 { pt3dadd( -195.172, -143.457, 29.505, 0.17 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 89/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -56.0704, -32.8576, -22.4933, 0.17 ) }
    dend_59 { pt3dadd( -61.4379, -35.2114, -15.3877, 0.17 ) }
    dend_59 { pt3dadd( -65.1156, -36.8544, -9.32513, 0.17 ) }
    dend_59 { pt3dadd( -70.5423, -39.3318, 1.33623, 0.17 ) }
    dend_59 { pt3dadd( -74.0455, -40.931, 8.21861, 0.17 ) }
    dend_59 { pt3dadd( -77.1846, -42.3641, 14.3857, 0.17 ) }
    dend_59 { pt3dadd( -84.965, -45.916, 29.6714, 0.17 ) }
    dend_59 { pt3dadd( -87.114, -46.7663, 35.4927, 0.17 ) }
    dend_59 { pt3dadd( -88.5536, -47.2415, 41.0524, 0.17 ) }
    dend_59 { pt3dadd( -92.1412, -49.4857, 53.5423, 0.17 ) }
    dend_59 { pt3dadd( -93.6015, -52.7572, 66.2615, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -56.0704, -32.8576, -22.4933, 0.51 ) }
    dend_58 { pt3dadd( -56.6316, -33.1407, -18.4596, 0.51 ) }
    dend_58 { pt3dadd( -58.8937, -34.1653, -6.99909, 0.51 ) }
    dend_58 { pt3dadd( -59.6703, -34.5167, -4.00937, 0.51 ) }
    dend_58 { pt3dadd( -60.2192, -34.7679, -2.26055, 0.51 ) }
    dend_58 { pt3dadd( -62.408, -35.79, 3.82736, 0.51 ) }
    dend_58 { pt3dadd( -63.1021, -36.1472, 5.51295, 0.34 ) }
    dend_58 { pt3dadd( -64.027, -36.7532, 7.54707, 0.34 ) }
    dend_58 { pt3dadd( -64.9822, -37.6532, 8.96491, 0.34 ) }
    dend_58 { pt3dadd( -65.442, -38.1608, 9.64996, 0.86 ) }
    dend_58 { pt3dadd( -65.698, -38.5658, 10.1414, 0.17 ) }
    dend_58 { pt3dadd( -66.5005, -40.1041, 11.7709, 0.68 ) }
    dend_58 { pt3dadd( -68.1977, -44.2924, 16.4249, 0.68 ) }
    dend_58 { pt3dadd( -68.4719, -45.2358, 17.4952, 0.17 ) }
    dend_58 { pt3dadd( -68.6664, -46.1577, 18.5925, 0.17 ) }
    dend_58 { pt3dadd( -69.2255, -49.6507, 22.8762, 0.51 ) }
    dend_58 { pt3dadd( -72.3409, -51.4279, 30.9825, 0.51 ) }
    dend_58 { pt3dadd( -77.3126, -54.0814, 37.8374, 0.51 ) }
    dend_58 { pt3dadd( -80.933, -55.166, 45.8395, 0.51 ) }
    dend_58 { pt3dadd( -84.1246, -56.261, 54.0221, 0.51 ) }
    dend_58 { pt3dadd( -87.3365, -56.7544, 62.2442, 0.51 ) }
    dend_58 { pt3dadd( -90.4938, -55.4514, 70.3764, 0.51 ) }
    dend_58 { pt3dadd( -94.1786, -53.3263, 78.0983, 0.51 ) }
    dend_58 { pt3dadd( -97.2763, -52.3296, 86.2992, 0.51 ) }
    dend_58 { pt3dadd( -99.4093, -52.136, 94.8686, 0.51 ) }
    dend_58 { pt3dadd( -100.134, -52.1898, 103.676, 0.51 ) }
    dend_58 { pt3dadd( -100.569, -51.3946, 112.457, 0.51 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 27/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -261.429, -6.33018, -53.6385, 0.17 ) }
    dend_55 { pt3dadd( -262.501, -9.30751, -52.5585, 0.17 ) }
    dend_55 { pt3dadd( -263.479, -11.9524, -51.4686, 0.17 ) }
    dend_55 { pt3dadd( -263.823, -12.836, -51.0772, 0.68 ) }
    dend_55 { pt3dadd( -263.891, -12.9971, -51.0021, 0.68 ) }
    dend_55 { pt3dadd( -264.272, -13.9328, -50.5494, 0.68 ) }
    dend_55 { pt3dadd( -264.473, -14.3743, -50.3246, 0.17 ) }
    dend_55 { pt3dadd( -265.768, -16.8578, -48.951, 0.17 ) }
    dend_55 { pt3dadd( -266.149, -17.4531, -48.5768, 1.37 ) }
    dend_55 { pt3dadd( -266.623, -18.1364, -48.1471, 1.37 ) }
    dend_55 { pt3dadd( -267.212, -18.8315, -47.7097, 0.17 ) }
    dend_55 { pt3dadd( -269.041, -20.5736, -46.1613, 0.17 ) }
    dend_55 { pt3dadd( -269.819, -21.1682, -45.4694, 0.17 ) }
    dend_55 { pt3dadd( -270.923, -21.7976, -44.4895, 1.03 ) }
    dend_55 { pt3dadd( -271.723, -22.2382, -43.7414, 0.17 ) }
    dend_55 { pt3dadd( -273.766, -23.2572, -41.8175, 0.17 ) }
    dend_55 { pt3dadd( -276.826, -24.943, -38.739, 1.37 ) }
    dend_55 { pt3dadd( -277.456, -25.3408, -37.945, 0.17 ) }
    dend_55 { pt3dadd( -278.227, -25.8736, -36.8741, 0.17 ) }
    dend_55 { pt3dadd( -279.657, -27.016, -34.8005, 0.68 ) }
    dend_55 { pt3dadd( -280.052, -27.394, -34.2203, 0.17 ) }
    dend_55 { pt3dadd( -281.694, -29.1657, -31.787, 0.17 ) }
    dend_55 { pt3dadd( -283.603, -31.116, -29.4877, 0.68 ) }
    dend_55 { pt3dadd( -284.159, -31.6018, -28.8852, 0.17 ) }
    dend_55 { pt3dadd( -285.916, -32.9289, -27.1697, 0.17 ) }
    dend_55 { pt3dadd( -287.4, -33.6973, -26.1175, 1.37 ) }
    dend_55 { pt3dadd( -288.492, -34.1698, -25.6189, 0.17 ) }
    dend_55 { pt3dadd( -290.399, -34.8017, -25.2058, 0.17 ) }
    dend_55 { pt3dadd( -292.343, -35.4025, -25.0909, 0.17 ) }
    dend_55 { pt3dadd( -292.842, -35.5898, -25.1139, 0.17 ) }
    dend_55 { pt3dadd( -296.712, -37.213, -25.5477, 0.17 ) }
    dend_55 { pt3dadd( -299.617, -38.6607, -25.911, 1.03 ) }
    dend_55 { pt3dadd( -300.769, -39.3636, -26.0889, 0.51 ) }
    dend_55 { pt3dadd( -303.325, -41.2046, -26.5091, 0.17 ) }
    dend_55 { pt3dadd( -306.611, -44.0407, -26.9904, 0.17 ) }
    dend_55 { pt3dadd( -309.209, -46.674, -27.2778, 0.17 ) }
    dend_55 { pt3dadd( -310.395, -48.2154, -27.3237, 1.71 ) }
    dend_55 { pt3dadd( -311.563, -50.09, -27.1753, 0.17 ) }
    dend_55 { pt3dadd( -311.772, -50.6093, -27.1289, 0.17 ) }
    dend_55 { pt3dadd( -311.949, -52.4724, -26.8942, 0.17 ) }
    dend_55 { pt3dadd( -311.912, -52.7264, -26.8394, 1.2 ) }
    dend_55 { pt3dadd( -311.728, -53.2109, -26.7465, 0.17 ) }
    dend_55 { pt3dadd( -310.571, -55.5066, -26.2929, 0.17 ) }
    dend_55 { pt3dadd( -309.556, -57.1506, -25.8308, 1.03 ) }
    dend_55 { pt3dadd( -308.761, -58.3414, -25.5645, 0.17 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 72/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -261.429, -6.33018, -53.6385, 0.17 ) }
    dend_54 { pt3dadd( -263.109, -6.35013, -54.1003, 0.17 ) }
    dend_54 { pt3dadd( -265.087, -6.41, -54.7093, 0.17 ) }
    dend_54 { pt3dadd( -266.368, -6.45353, -55.0803, 0.86 ) }
    dend_54 { pt3dadd( -267.931, -6.52465, -55.4903, 0.17 ) }
    dend_54 { pt3dadd( -270.947, -6.69411, -56.2228, 0.17 ) }
    dend_54 { pt3dadd( -272.263, -6.76803, -56.5424, 1.03 ) }
    dend_54 { pt3dadd( -273.384, -6.81302, -56.7856, 0.17 ) }
    dend_54 { pt3dadd( -276.323, -6.9821, -57.4307, 0.17 ) }
    dend_54 { pt3dadd( -277.608, -7.08353, -57.6807, 0.17 ) }
    dend_54 { pt3dadd( -278.011, -7.11126, -57.7378, 0.68 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 83/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 25.1927, 109.069, -21.33, 0.17 ) }
    dend_41 { pt3dadd( 25.0942, 112.321, -21.0201, 0.17 ) }
    dend_41 { pt3dadd( 24.9958, 116.388, -20.6497, 0.17 ) }
    dend_41 { pt3dadd( 24.9449, 119.265, -20.4141, 0.17 ) }
    dend_41 { pt3dadd( 24.6338, 123.683, -20.1636, 1.2 ) }
    dend_41 { pt3dadd( 24.3853, 126.001, -20.0776, 0.17 ) }
    dend_41 { pt3dadd( 24.0246, 128.599, -20.0434, 0.17 ) }
    dend_41 { pt3dadd( 24.0246, 128.599, -20.0434, 1.03 ) }
    dend_41 { pt3dadd( 23.6186, 130.206, -20.1347, 0.17 ) }
    dend_41 { pt3dadd( 22.408, 134.442, -20.7105, 0.17 ) }
    dend_41 { pt3dadd( 21.9864, 135.9, -21.0215, 0.17 ) }
    dend_41 { pt3dadd( 20.9281, 139.563, -21.9011, 0.17 ) }
    dend_41 { pt3dadd( 19.9411, 143.591, -22.9287, 0.17 ) }
    dend_41 { pt3dadd( 19.7994, 144.335, -23.1214, 0.17 ) }
    dend_41 { pt3dadd( 19.4248, 147.451, -24.1082, 1.37 ) }
    dend_41 { pt3dadd( 19.3599, 148.378, -24.4349, 0.17 ) }
    dend_41 { pt3dadd( 19.2683, 150.414, -25.1834, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_41 { pt3dadd( 19.215, 153.702, -26.4193, 0.17 ) }
    dend_41 { pt3dadd( 19.2522, 157.244, -27.7247, 0.17 ) }
    dend_41 { pt3dadd( 19.3066, 164.365, -30.2504, 0.17 ) }
    dend_41 { pt3dadd( 19.3005, 166.829, -31.0592, 0.17 ) }
    dend_41 { pt3dadd( 19.2712, 168.524, -31.6418, 0.17 ) }
    dend_41 { pt3dadd( 19.1871, 169.836, -32.1263, 2.05 ) }
    dend_41 { pt3dadd( 19.073, 170.638, -32.4427, 0.17 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 7/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 25.1927, 109.069, -21.33, 0.17 ) }
    dend_40 { pt3dadd( 22.8789, 107.28, -20.8681, 0.17 ) }
    dend_40 { pt3dadd( 20.8097, 105.68, -20.455, 0.17 ) }
    dend_40 { pt3dadd( 17.1966, 102.886, -19.7338, 0.17 ) }
    dend_40 { pt3dadd( 13.1511, 99.7577, -18.9262, 0.17 ) }
    dend_40 { pt3dadd( 7.86353, 95.669, -17.8706, 0.17 ) }
    dend_40 { pt3dadd( 6.4905, 94.6072, -17.5965, 0.17 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 95.9351, 33.2221, -11.0504, 0.17 ) }
    dend_26 { pt3dadd( 99.0488, 36.8132, -11.7227, 0.17 ) }
    dend_26 { pt3dadd( 101.478, 39.6148, -12.2472, 0.17 ) }
    dend_26 { pt3dadd( 103.903, 42.4115, -12.7707, 0.17 ) }
    dend_26 { pt3dadd( 105.754, 44.5461, -13.1703, 0.17 ) }
    dend_26 { pt3dadd( 106.085, 44.9279, -13.2418, 0.17 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 95.9351, 33.2221, -11.0504, 0.17 ) }
    dend_23 { pt3dadd( 98.4803, 38.4352, -14.1934, 0.17 ) }
    dend_23 { pt3dadd( 99.2368, 39.9847, -15.1276, 1.37 ) }
    dend_23 { pt3dadd( 99.4746, 40.4716, -15.4212, 0.17 ) }
    dend_23 { pt3dadd( 100.637, 42.8521, -16.8564, 0.17 ) }
    // Section: dend_15, id: dend_15, parent: dend_7 (entry count 25/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.75135, -149.72, 8.72616, 1.2 ) }
    dend_15 { pt3dadd( -4.19087, -152.06, 9.61992, 1.2 ) }
    dend_15 { pt3dadd( -3.98781, -155.536, 13.2446, 0.17 ) }
    dend_15 { pt3dadd( -3.86133, -156.823, 15.0323, 0.17 ) }
    dend_15 { pt3dadd( -3.76105, -159.349, 18.9106, 0.17 ) }
    dend_15 { pt3dadd( -3.71491, -161.682, 23.1848, 0.17 ) }
    dend_15 { pt3dadd( -3.7143, -161.762, 23.3395, 0.17 ) }
    dend_15 { pt3dadd( -3.51503, -167.149, 34.8092, 1.54 ) }
    dend_15 { pt3dadd( -3.43015, -167.956, 36.7024, 0.17 ) }
    dend_15 { pt3dadd( -3.29491, -168.713, 38.9489, 0.17 ) }
    dend_15 { pt3dadd( -2.6707, -170.827, 47.7849, 0.17 ) }
    dend_15 { pt3dadd( -2.61717, -170.929, 48.3439, 1.37 ) }
    dend_15 { pt3dadd( -2.57763, -171.05, 48.902, 0.17 ) }
    dend_15 { pt3dadd( -2.97382, -172.764, 53.184, 0.17 ) }
    dend_15 { pt3dadd( -2.63936, -176.894, 62.8903, 0.17 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -3.75135, -149.72, 8.72616, 0.86 ) }
    dend_8 { pt3dadd( -2.56478, -153.43, 9.86613, 0.86 ) }
    dend_8 { pt3dadd( -1.53944, -157.552, 11.0371, 0.86 ) }
    dend_8 { pt3dadd( -1.40842, -158.267, 11.2282, 0.86 ) }
    dend_8 { pt3dadd( -0.856122, -162.077, 12.2081, 0.68 ) }
    dend_8 { pt3dadd( -0.57776, -164.545, 12.7748, 0.34 ) }
    dend_8 { pt3dadd( -0.1411, -168.723, 13.3621, 0.34 ) }
    dend_8 { pt3dadd( -0.106616, -169.784, 13.438, 1.2 ) }
    dend_8 { pt3dadd( -0.0889503, -171.42, 13.4543, 1.2 ) }
    dend_8 { pt3dadd( -0.0990143, -171.711, 13.4425, 0.34 ) }
    dend_8 { pt3dadd( -0.37063, -175.312, 13.1178, 0.34 ) }
    dend_8 { pt3dadd( -0.765761, -180.002, 12.6571, 0.34 ) }
    dend_8 { pt3dadd( -0.92722, -182.386, 12.4133, 1.88 ) }
    dend_8 { pt3dadd( -1.03659, -184.431, 12.217, 0.68 ) }
    dend_8 { pt3dadd( -1.12675, -188.438, 11.8573, 0.51 ) }
    dend_8 { pt3dadd( -1.21762, -192.641, 11.5521, 0.51 ) }
    dend_8 { pt3dadd( -1.31292, -195.115, 11.4364, 1.03 ) }
    dend_8 { pt3dadd( -1.49604, -197.622, 11.4157, 1.71 ) }
    dend_8 { pt3dadd( -1.7112, -200.135, 11.3782, 0.68 ) }
    dend_8 { pt3dadd( -1.93911, -202.708, 11.3546, 0.17 ) }
    dend_8 { pt3dadd( -2.21499, -205.839, 11.3454, 0.17 ) }
    dend_8 { pt3dadd( -2.50723, -208.047, 11.3769, 1.03 ) }
    dend_8 { pt3dadd( -3.18287, -211.834, 11.5099, 1.03 ) }
    dend_8 { pt3dadd( -4.40316, -217.935, 11.7482, 1.03 ) }
    dend_8 { pt3dadd( -4.48681, -218.341, 11.7645, 1.03 ) }
    dend_8 { pt3dadd( -4.56967, -218.777, 11.7807, 1.03 ) }
    dend_8 { pt3dadd( -4.77562, -220.014, 11.8215, 0.17 ) }
    dend_8 { pt3dadd( -4.98413, -221.467, 11.8633, 0.17 ) }
    dend_8 { pt3dadd( -5.30056, -223.875, 11.9274, 0.34 ) }
    dend_8 { pt3dadd( -5.45664, -224.757, 11.9581, 0.34 ) }
    dend_8 { pt3dadd( -6.05642, -227.788, 12.0753, 0.34 ) }
    dend_8 { pt3dadd( -6.9206, -234.692, 12.2512, 1.37 ) }
    dend_8 { pt3dadd( -7.01033, -235.964, 12.271, 0.17 ) }
    dend_8 { pt3dadd( -7.02169, -236.177, 12.2736, 0.17 ) }
    dend_8 { pt3dadd( -7.15366, -238.441, 12.3038, 0.17 ) }
    dend_8 { pt3dadd( -7.20406, -240.497, 12.3186, 0.34 ) }
    dend_8 { pt3dadd( -6.87057, -246.316, 12.2741, 0.34 ) }
    dend_8 { pt3dadd( -6.62251, -247.763, 12.2331, 0.34 ) }
    dend_8 { pt3dadd( -6.59437, -247.975, 12.2285, 0.34 ) }
    dend_8 { pt3dadd( -6.44532, -250.128, 12.2074, 0.34 ) }
    dend_8 { pt3dadd( -6.44532, -250.128, 12.2074, 1.03 ) }
    dend_8 { pt3dadd( -6.37935, -251.168, 12.2255, 0.17 ) }
    dend_8 { pt3dadd( -6.26332, -252.211, 12.3138, 0.17 ) }
    dend_8 { pt3dadd( -5.63277, -255.258, 12.4853, 1.37 ) }
    dend_8 { pt3dadd( -4.85418, -258.054, 12.5766, 0.51 ) }
    dend_8 { pt3dadd( -4.20866, -260.06, 12.543, 0.17 ) }
    dend_8 { pt3dadd( -2.17761, -265.489, 12.329, 0.51 ) }
    dend_8 { pt3dadd( -0.262442, -269.976, 11.821, 0.51 ) }
    dend_8 { pt3dadd( 1.40242, -273.753, 11.1837, 1.88 ) }
    dend_8 { pt3dadd( 2.62205, -276.576, 10.3146, 1.2 ) }
    dend_8 { pt3dadd( 3.55286, -278.991, 9.25638, 0.17 ) }
    dend_8 { pt3dadd( 4.31537, -281.548, 7.7776, 0.51 ) }
    dend_8 { pt3dadd( 4.91139, -285.471, 4.88754, 1.03 ) }
    dend_8 { pt3dadd( 5.11757, -287.632, 3.08951, 1.03 ) }
    dend_8 { pt3dadd( 5.42303, -292.784, -0.991183, 0.17 ) }
    dend_8 { pt3dadd( 5.49662, -294.068, -1.91065, 0.17 ) }
    dend_8 { pt3dadd( 5.51106, -294.252, -2.01609, 0.17 ) }
    dend_8 { pt3dadd( 5.84025, -296.624, -2.99288, 0.17 ) }
    dend_8 { pt3dadd( 6.86063, -299.766, -3.36598, 1.2 ) }
    dend_8 { pt3dadd( 8.00887, -302.147, -3.31207, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_8 { pt3dadd( 8.74389, -303.546, -3.09019, 0.17 ) }
    dend_8 { pt3dadd( 8.84277, -303.733, -3.06716, 0.17 ) }
    dend_8 { pt3dadd( 10.1442, -306.417, -2.85526, 0.17 ) }
    dend_8 { pt3dadd( 10.2354, -306.624, -2.85113, 1.54 ) }
    dend_8 { pt3dadd( 10.9288, -308.645, -2.95064, 0.17 ) }
    dend_8 { pt3dadd( 11.3773, -309.905, -3.01636, 0.17 ) }
    dend_8 { pt3dadd( 11.8897, -311.399, -3.00576, 0.17 ) }
    dend_8 { pt3dadd( 12.5084, -313.194, -2.91548, 1.37 ) }
    dend_8 { pt3dadd( 12.8667, -314.408, -2.79865, 0.68 ) }
    dend_8 { pt3dadd( 12.9456, -314.686, -2.76616, 0.68 ) }
    dend_8 { pt3dadd( 13.761, -317.66, -2.36689, 0.17 ) }
    dend_8 { pt3dadd( 14.5978, -320.303, -1.20956, 0.17 ) }
    dend_8 { pt3dadd( 14.816, -321.026, -0.837945, 1.71 ) }
    dend_8 { pt3dadd( 15.2744, -322.627, 0.116302, 1.54 ) }
    dend_8 { pt3dadd( 15.5539, -323.652, 0.800997, 0.17 ) }
    dend_8 { pt3dadd( 15.981, -325.29, 2.00934, 0.17 ) }
    dend_8 { pt3dadd( 17.4118, -331.732, 7.89626, 2.05 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 17/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -1.40136, -52.0592, -23.382, 0.17 ) }
    dend_6 { pt3dadd( -1.06235, -52.6403, -23.0252, 0.17 ) }
    dend_6 { pt3dadd( -0.31442, -53.8796, -22.1814, 0.17 ) }
    dend_6 { pt3dadd( 1.05365, -56.106, -20.5851, 1.2 ) }
    dend_6 { pt3dadd( 3.28417, -59.3128, -17.5922, 0.17 ) }
    dend_6 { pt3dadd( 5.03135, -61.7666, -15.135, 0.17 ) }
    dend_6 { pt3dadd( 5.2371, -62.0447, -14.8527, 0.17 ) }
    dend_6 { pt3dadd( 6.39094, -63.4735, -13.2983, 1.37 ) }
    dend_6 { pt3dadd( 6.42877, -63.5197, -13.2475, 1.37 ) }
    dend_6 { pt3dadd( 9.06451, -66.7204, -9.91589, 0.17 ) }
    dend_6 { pt3dadd( 9.96423, -67.9242, -8.87395, 0.17 ) }
    dend_6 { pt3dadd( 10.5908, -68.7085, -8.10312, 0.17 ) }
    dend_6 { pt3dadd( 10.6882, -68.8237, -7.95637, 0.17 ) }
    dend_6 { pt3dadd( 12.0698, -70.4383, -5.83952, 0.17 ) }
    dend_6 { pt3dadd( 12.4301, -70.7932, -5.28848, 1.2 ) }
    dend_6 { pt3dadd( 12.6569, -70.9953, -4.93344, 0.17 ) }
    dend_6 { pt3dadd( 15.1045, -72.9872, -0.839718, 0.17 ) }
    dend_6 { pt3dadd( 17.9917, -75.2547, 4.09118, 0.17 ) }
    dend_6 { pt3dadd( 18.6898, -75.7605, 5.2722, 0.17 ) }
    dend_6 { pt3dadd( 20.9947, -77.1577, 8.99851, 0.17 ) }
    dend_6 { pt3dadd( 21.1483, -77.2496, 9.23167, 0.17 ) }
    dend_6 { pt3dadd( 21.4842, -77.4525, 9.70116, 0.17 ) }
    dend_6 { pt3dadd( 22.4775, -78.0941, 10.7748, 0.17 ) }
    dend_6 { pt3dadd( 22.708, -78.2707, 10.9514, 0.68 ) }
    dend_6 { pt3dadd( 23.7458, -79.1752, 11.7777, 0.68 ) }
    dend_6 { pt3dadd( 24.543, -79.9849, 12.3827, 0.68 ) }
    dend_6 { pt3dadd( 26.8494, -83.3787, 15.0159, 0.17 ) }
    dend_6 { pt3dadd( 27.1198, -84.9818, 16.2112, 0.17 ) }
    dend_6 { pt3dadd( 26.9196, -85.9636, 16.8857, 1.2 ) }
    dend_6 { pt3dadd( 26.626, -86.4853, 17.1719, 0.17 ) }
    dend_6 { pt3dadd( 26.5508, -86.5965, 17.224, 0.17 ) }
    dend_6 { pt3dadd( 23.0033, -91.5069, 18.227, 0.17 ) }
    dend_6 { pt3dadd( 21.8768, -93.0415, 18.2804, 0.17 ) }
    dend_6 { pt3dadd( 21.3204, -93.8223, 18.2659, 0.17 ) }
    dend_6 { pt3dadd( 18.2567, -98.5593, 17.9627, 0.17 ) }
    dend_6 { pt3dadd( 16.5887, -101.472, 17.7178, 0.17 ) }
    dend_6 { pt3dadd( 13.5994, -107.308, 17.1221, 0.17 ) }
    dend_6 { pt3dadd( 12.0869, -110.588, 16.5039, 0.17 ) }
    dend_6 { pt3dadd( 11.2637, -112.233, 16.1244, 0.17 ) }
    dend_6 { pt3dadd( 10.2461, -114.107, 15.6479, 0.17 ) }
    dend_6 { pt3dadd( 8.14461, -118.253, 14.5188, 0.17 ) }
    dend_6 { pt3dadd( 7.65494, -119.246, 14.2378, 0.17 ) }
    dend_6 { pt3dadd( 5.4356, -124.282, 13.0865, 0.17 ) }
    dend_6 { pt3dadd( 4.63519, -126.375, 12.5608, 0.17 ) }
    dend_6 { pt3dadd( 4.01764, -128.174, 12.1158, 0.17 ) }
    dend_6 { pt3dadd( 2.41127, -133.177, 10.9623, 0.17 ) }
    dend_6 { pt3dadd( 0.973475, -138.474, 9.97039, 0.17 ) }
    dend_6 { pt3dadd( -0.0433183, -142.707, 9.31572, 0.17 ) }
    dend_6 { pt3dadd( -0.515982, -144.958, 9.07183, 0.17 ) }
    dend_6 { pt3dadd( -1.06264, -147.576, 8.80774, 0.17 ) }
    dend_6 { pt3dadd( -1.60796, -149.895, 8.59634, 0.17 ) }
    dend_6 { pt3dadd( -3.15637, -155.28, 8.26776, 0.17 ) }
    dend_6 { pt3dadd( -4.0498, -158.064, 8.27074, 1.71 ) }
    dend_6 { pt3dadd( -4.37632, -158.972, 8.24793, 0.17 ) }
    dend_6 { pt3dadd( -5.04122, -160.603, 8.11538, 0.17 ) }
    dend_6 { pt3dadd( -5.15926, -160.872, 8.07727, 0.17 ) }
    dend_6 { pt3dadd( -6.07384, -162.761, 7.70297, 0.17 ) }
    dend_6 { pt3dadd( -7.65574, -165.269, 6.84742, 0.17 ) }
    dend_6 { pt3dadd( -9.22394, -167.556, 5.91867, 0.17 ) }
    dend_6 { pt3dadd( -10.6856, -169.575, 4.89216, 1.54 ) }
    dend_6 { pt3dadd( -11.0172, -170.023, 4.62837, 0.17 ) }
    dend_6 { pt3dadd( -11.6263, -170.851, 4.14777, 0.17 ) }
    dend_6 { pt3dadd( -13.429, -173.544, 2.73463, 0.17 ) }
    dend_6 { pt3dadd( -13.8653, -174.369, 2.37363, 1.2 ) }
    dend_6 { pt3dadd( -13.8653, -174.369, 2.37363, 0.17 ) }
    dend_6 { pt3dadd( -14.3013, -175.715, 2.22554, 0.17 ) }
    dend_6 { pt3dadd( -15.0219, -178.203, 2.06847, 0.17 ) }
    dend_6 { pt3dadd( -15.7235, -180.939, 2.10511, 0.17 ) }
    dend_6 { pt3dadd( -15.7794, -181.148, 2.12737, 0.17 ) }
    dend_6 { pt3dadd( -16.4342, -183.413, 2.04969, 0.17 ) }
    dend_6 { pt3dadd( -16.5001, -183.611, 2.02597, 0.17 ) }
    dend_6 { pt3dadd( -16.5585, -183.747, 1.98607, 0.17 ) }
    dend_6 { pt3dadd( -18.3407, -187.104, 0.49975, 0.17 ) }
    dend_6 { pt3dadd( -19.116, -188.576, -0.257942, 0.17 ) }
    dend_6 { pt3dadd( -21.4141, -193.128, -2.5647, 0.17 ) }
    dend_6 { pt3dadd( -22.8174, -195.962, -3.93634, 0.17 ) }
    dend_6 { pt3dadd( -25.1289, -200.833, -6.04192, 0.17 ) }
    dend_6 { pt3dadd( -27.361, -205.728, -7.98746, 0.17 ) }
    dend_6 { pt3dadd( -29.664, -210.804, -9.74109, 0.17 ) }
    dend_6 { pt3dadd( -31.1211, -214.113, -10.6264, 0.17 ) }
    dend_6 { pt3dadd( -32.436, -217.014, -11.0582, 0.17 ) }
    dend_6 { pt3dadd( -34.3302, -221.247, -11.4378, 0.17 ) }
    dend_6 { pt3dadd( -34.767, -222.22, -11.4418, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( -36.6466, -226.155, -11.2381, 0.17 ) }
    dend_6 { pt3dadd( -37.7028, -228.113, -11.076, 0.17 ) }
    dend_6 { pt3dadd( -39.9967, -231.692, -10.7447, 0.17 ) }
    dend_6 { pt3dadd( -43.9872, -237.046, -10.1881, 0.17 ) }
    dend_6 { pt3dadd( -44.4036, -237.501, -10.1258, 0.68 ) }
    dend_6 { pt3dadd( -46.2246, -239.245, -9.83246, 0.17 ) }
    dend_6 { pt3dadd( -47.2978, -240.125, -9.63923, 0.17 ) }
    dend_6 { pt3dadd( -51.2384, -243.071, -8.78793, 0.17 ) }
    dend_6 { pt3dadd( -51.4643, -243.246, -8.72572, 0.17 ) }
    dend_6 { pt3dadd( -53.2208, -244.748, -8.10377, 0.17 ) }
    dend_6 { pt3dadd( -53.5267, -245.056, -7.99429, 0.17 ) }
    dend_6 { pt3dadd( -55.5297, -247.199, -7.27563, 0.17 ) }
    dend_6 { pt3dadd( -57.1795, -249.13, -6.68124, 0.17 ) }
    dend_6 { pt3dadd( -59.8402, -252.568, -5.80083, 0.17 ) }
    dend_6 { pt3dadd( -62.6326, -256.275, -4.88372, 0.17 ) }
    dend_6 { pt3dadd( -62.7206, -256.396, -4.8552, 0.17 ) }
    dend_6 { pt3dadd( -65.7825, -260.551, -3.87784, 0.17 ) }
    dend_6 { pt3dadd( -65.8697, -260.662, -3.85091, 0.17 ) }
    dend_6 { pt3dadd( -67.2467, -262.101, -3.4426, 0.17 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 19/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -1.40136, -52.0592, -23.382, 0.17 ) }
    dend_5 { pt3dadd( 2.13342, -52.6367, -21.234, 0.17 ) }
    dend_5 { pt3dadd( 8.76847, -53.2048, -17.0497, 1.37 ) }
    dend_5 { pt3dadd( 8.93052, -53.2221, -16.9424, 1.37 ) }
    dend_5 { pt3dadd( 9.53048, -53.2923, -16.5357, 0.17 ) }
    dend_5 { pt3dadd( 16.5332, -54.0901, -11.7934, 0.17 ) }
    dend_5 { pt3dadd( 17.0129, -54.1289, -11.4801, 1.03 ) }
    dend_5 { pt3dadd( 23.2873, -54.3217, -7.18719, 0.17 ) }
    dend_5 { pt3dadd( 31.033, -54.2926, -2.10576, 0.17 ) }
    dend_5 { pt3dadd( 31.3696, -54.2886, -1.88732, 1.2 ) }
    dend_5 { pt3dadd( 32.0788, -54.2701, -1.43398, 0.17 ) }
    dend_5 { pt3dadd( 35.1391, -54.1584, 0.492393, 0.17 ) }
    dend_5 { pt3dadd( 39.2515, -53.9493, 3.10112, 1.2 ) }
    dend_5 { pt3dadd( 39.4523, -53.9281, 3.21573, 0.17 ) }
    dend_5 { pt3dadd( 49.9491, -55.1434, 8.54552, 0.17 ) }
    dend_5 { pt3dadd( 60.4375, -56.8811, 13.7625, 0.17 ) }
    dend_5 { pt3dadd( 70.9441, -60.3179, 18.1011, 0.17 ) }
    dend_5 { pt3dadd( 81.6316, -64.5199, 21.2107, 0.17 ) }
    dend_5 { pt3dadd( 92.269, -69.9444, 21.2917, 0.17 ) }
    dend_5 { pt3dadd( 103.829, -72.3899, 22.4023, 0.17 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 39/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 100.637, 42.8521, -16.8564, 0.17 ) }
    dend_25 { pt3dadd( 103.359, 49.4976, -19.9758, 0.17 ) }
    dend_25 { pt3dadd( 107.037, 59.4618, -23.6763, 0.17 ) }
    dend_25 { pt3dadd( 107.089, 59.6217, -23.7289, 0.17 ) }
    dend_25 { pt3dadd( 108.649, 64.8028, -25.3079, 0.17 ) }
    dend_25 { pt3dadd( 110.295, 70.5828, -26.9976, 0.17 ) }
    dend_25 { pt3dadd( 112.59, 79.5955, -29.4266, 0.17 ) }
    dend_25 { pt3dadd( 113.395, 84.3739, -30.3248, 0.17 ) }
    dend_25 { pt3dadd( 113.993, 90.3343, -31.0086, 0.17 ) }
    dend_25 { pt3dadd( 114.051, 91.7305, -31.193, 1.88 ) }
    dend_25 { pt3dadd( 114.027, 92.2465, -31.2909, 0.17 ) }
    dend_25 { pt3dadd( 113.355, 97.3874, -32.3878, 0.17 ) }
    dend_25 { pt3dadd( 112.403, 100.644, -33.066, 0.17 ) }
    dend_25 { pt3dadd( 110.889, 104.733, -34.1069, 0.17 ) }
    dend_25 { pt3dadd( 110.524, 105.532, -34.3222, 0.17 ) }
    dend_25 { pt3dadd( 108.785, 109.221, -35.4962, 0.17 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 100.637, 42.8521, -16.8564, 0.17 ) }
    dend_24 { pt3dadd( 106.116, 39.7238, -19.2469, 0.17 ) }
    dend_24 { pt3dadd( 109.256, 37.9312, -20.6167, 0.17 ) }
    dend_24 { pt3dadd( 112.776, 35.922, -22.1522, 0.17 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 59/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 17.4118, -331.732, 7.89626, 0.17 ) }
    dend_10 { pt3dadd( 18.1988, -333.117, 9.14735, 0.17 ) }
    dend_10 { pt3dadd( 18.7104, -334.483, 10.3722, 0.17 ) }
    dend_10 { pt3dadd( 18.8032, -334.891, 10.6141, 0.17 ) }
    dend_10 { pt3dadd( 18.8803, -335.324, 10.7853, 1.03 ) }
    dend_10 { pt3dadd( 19.2135, -337.926, 11.5409, 0.51 ) }
    dend_10 { pt3dadd( 19.7111, -342.783, 12.6751, 0.17 ) }
    dend_10 { pt3dadd( 19.6971, -344.619, 12.9651, 0.17 ) }
    dend_10 { pt3dadd( 19.208, -349.778, 13.5116, 1.2 ) }
    dend_10 { pt3dadd( 18.9265, -351.362, 13.5976, 0.17 ) }
    dend_10 { pt3dadd( 18.6625, -352.527, 13.5844, 0.17 ) }
    dend_10 { pt3dadd( 18.6003, -352.762, 13.578, 0.17 ) }
    dend_10 { pt3dadd( 18.0772, -354.734, 13.5454, 0.17 ) }
    dend_10 { pt3dadd( 17.6062, -356.73, 13.7321, 1.37 ) }
    dend_10 { pt3dadd( 17.1164, -358.829, 14.1573, 0.17 ) }
    dend_10 { pt3dadd( 16.56, -361.536, 15.0185, 0.17 ) }
    dend_10 { pt3dadd( 16.1585, -364.885, 16.283, 0.68 ) }
    dend_10 { pt3dadd( 16.1198, -365.692, 16.6095, 0.17 ) }
    dend_10 { pt3dadd( 16.1895, -367.29, 17.2893, 0.17 ) }
    dend_10 { pt3dadd( 16.3615, -368.807, 17.9724, 0.17 ) }
    dend_10 { pt3dadd( 17.1091, -373.689, 20.1403, 0.68 ) }
    dend_10 { pt3dadd( 17.6103, -377.165, 21.6078, 0.68 ) }
    dend_10 { pt3dadd( 17.7677, -379.206, 22.2858, 0.34 ) }
    dend_10 { pt3dadd( 17.8161, -380.514, 22.6244, 0.17 ) }
    dend_10 { pt3dadd( 17.8155, -380.753, 22.668, 0.17 ) }
    dend_10 { pt3dadd( 17.6309, -384.172, 23.0054, 0.17 ) }
    dend_10 { pt3dadd( 17.4273, -386.184, 23.0217, 0.68 ) }
    dend_10 { pt3dadd( 16.891, -390.204, 22.6567, 0.17 ) }
    dend_10 { pt3dadd( 16.5537, -392.437, 22.4326, 0.17 ) }
    dend_10 { pt3dadd( 16.2451, -394.365, 22.2187, 1.2 ) }
    dend_10 { pt3dadd( 15.9687, -396.381, 21.9406, 0.17 ) }
    dend_10 { pt3dadd( 15.7522, -398.947, 21.4022, 0.17 ) }
    dend_10 { pt3dadd( 15.6409, -404.378, 19.7802, 1.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 92/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 17.4118, -331.732, 7.89626, 0.17 ) }
    dend_9 { pt3dadd( 16.8285, -333.168, 7.44313, 0.17 ) }
    dend_9 { pt3dadd( 15.6723, -335.914, 6.55446, 0.17 ) }
    dend_9 { pt3dadd( 15.1949, -337.128, 6.18605, 1.54 ) }
    dend_9 { pt3dadd( 14.8607, -338.032, 5.95769, 0.17 ) }
    dend_9 { pt3dadd( 13.0226, -343.179, 5.1234, 0.17 ) }
    dend_9 { pt3dadd( 12.7669, -343.777, 4.98057, 1.54 ) }
    dend_9 { pt3dadd( 12.3745, -344.604, 4.75047, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( 11.4741, -346.371, 4.22706, 0.17 ) }
    dend_9 { pt3dadd( 10.2663, -348.704, 3.54611, 0.17 ) }
    dend_9 { pt3dadd( 8.02791, -352.9, 2.42129, 0.17 ) }
    dend_9 { pt3dadd( 4.16198, -359.079, 0.422619, 0.17 ) }
    dend_9 { pt3dadd( 3.32565, -360.312, -0.0696077, 1.03 ) }
    dend_9 { pt3dadd( 2.70508, -361.16, -0.470583, 1.03 ) }
    dend_9 { pt3dadd( 2.32607, -361.67, -0.765037, 0.17 ) }
    dend_9 { pt3dadd( 0.718576, -363.958, -2.39453, 0.17 ) }
    dend_9 { pt3dadd( -2.08418, -368.746, -6.07546, 1.54 ) }
    dend_9 { pt3dadd( -2.96824, -371.051, -7.60426, 1.2 ) }
    dend_9 { pt3dadd( -3.02322, -371.232, -7.72334, 1.2 ) }
    dend_9 { pt3dadd( -3.93289, -375.131, -10.1874, 0.17 ) }
    dend_9 { pt3dadd( -4.17466, -377.423, -11.4586, 0.17 ) }
    dend_9 { pt3dadd( -4.08905, -380.192, -12.7121, 0.68 ) }
    dend_9 { pt3dadd( -3.76931, -382.941, -13.5927, 0.17 ) }
    dend_9 { pt3dadd( -3.7454, -383.16, -13.6512, 0.17 ) }
    dend_9 { pt3dadd( -3.69426, -383.645, -13.7476, 0.86 ) }
    dend_9 { pt3dadd( -3.26342, -387.644, -14.1345, 0.17 ) }
    dend_9 { pt3dadd( -3.12783, -389.143, -14.1909, 1.03 ) }
    dend_9 { pt3dadd( -3.09616, -389.586, -14.2032, 0.17 ) }
    dend_9 { pt3dadd( -2.90087, -392.942, -14.2721, 0.17 ) }
    dend_9 { pt3dadd( -2.87283, -393.646, -14.2797, 1.03 ) }
    dend_9 { pt3dadd( -2.88052, -394.28, -14.2691, 0.17 ) }
    dend_9 { pt3dadd( -3.0846, -397.803, -14.1241, 0.17 ) }
    dend_9 { pt3dadd( -3.21488, -399.721, -14.0351, 1.2 ) }
    dend_9 { pt3dadd( -3.28943, -400.52, -13.9872, 0.17 ) }
    dend_9 { pt3dadd( -3.88803, -404.363, -13.6294, 0.17 ) }
    dend_9 { pt3dadd( -4.23087, -406.097, -13.4293, 0.17 ) }
    dend_9 { pt3dadd( -4.47724, -407.066, -13.2884, 1.2 ) }
    dend_9 { pt3dadd( -4.94577, -408.87, -12.8889, 0.17 ) }
    dend_9 { pt3dadd( -5.55797, -411.412, -12.2236, 0.17 ) }
    dend_9 { pt3dadd( -5.80569, -412.645, -11.8852, 0.86 ) }
    dend_9 { pt3dadd( -6.06674, -414.307, -11.4065, 0.17 ) }
    dend_9 { pt3dadd( -6.31993, -416.015, -10.9076, 0.17 ) }
    dend_9 { pt3dadd( -6.96856, -419.598, -9.79816, 0.17 ) }
    dend_9 { pt3dadd( -7.09851, -420.235, -9.63633, 1.54 ) }
    dend_9 { pt3dadd( -7.36724, -421.387, -9.4281, 0.17 ) }
    dend_9 { pt3dadd( -7.90121, -423.546, -9.1907, 0.17 ) }
    dend_9 { pt3dadd( -8.51039, -425.556, -9.04483, 0.17 ) }
    dend_9 { pt3dadd( -9.17109, -427.503, -8.98104, 0.17 ) }
    dend_9 { pt3dadd( -10.1825, -430.14, -8.99872, 1.54 ) }
    dend_9 { pt3dadd( -11.3018, -433.116, -9.00067, 0.17 ) }
    dend_9 { pt3dadd( -12.1202, -435.878, -8.71095, 0.17 ) }
    dend_9 { pt3dadd( -12.5621, -438.805, -8.17711, 0.17 ) }
    dend_9 { pt3dadd( -12.6353, -439.584, -7.97102, 1.03 ) }
    dend_9 { pt3dadd( -12.6521, -439.799, -7.89726, 1.03 ) }
    dend_9 { pt3dadd( -12.7545, -442.014, -6.98526, 0.17 ) }
    dend_9 { pt3dadd( -12.8071, -447.532, -4.47606, 0.17 ) }
    dend_9 { pt3dadd( -12.7622, -451.122, -2.68344, 0.17 ) }
    dend_9 { pt3dadd( -12.6258, -455.184, -0.562761, 0.17 ) }
    dend_9 { pt3dadd( -12.6182, -455.96, -0.149163, 0.17 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 15.6409, -404.378, 19.7802, 0.17 ) }
    dend_12 { pt3dadd( 14.7155, -407.583, 22.0506, 0.17 ) }
    dend_12 { pt3dadd( 14.2687, -409.548, 23.1393, 0.17 ) }
    dend_12 { pt3dadd( 14.2364, -409.713, 23.221, 0.17 ) }
    dend_12 { pt3dadd( 13.8963, -411.545, 24.0809, 1.2 ) }
    dend_12 { pt3dadd( 13.8115, -412.252, 24.3429, 0.17 ) }
    dend_12 { pt3dadd( 13.7219, -413.5, 24.6673, 0.17 ) }
    dend_12 { pt3dadd( 13.6864, -414.62, 24.6852, 0.86 ) }
    dend_12 { pt3dadd( 13.7137, -415.143, 24.6664, 0.17 ) }
    dend_12 { pt3dadd( 13.7438, -415.554, 24.6466, 0.17 ) }
    dend_12 { pt3dadd( 13.9573, -417.969, 24.5065, 0.17 ) }
    dend_12 { pt3dadd( 14.1344, -420.193, 24.3906, 0.86 ) }
    dend_12 { pt3dadd( 14.1944, -421.519, 24.3499, 0.17 ) }
    dend_12 { pt3dadd( 14.0708, -423.539, 24.1198, 0.17 ) }
    dend_12 { pt3dadd( 13.8097, -425.352, 23.8302, 1.71 ) }
    dend_12 { pt3dadd( 13.7736, -425.523, 23.7957, 0.17 ) }
    dend_12 { pt3dadd( 13.3107, -426.982, 23.4443, 0.17 ) }
    dend_12 { pt3dadd( 12.7454, -428.469, 23.0283, 0.17 ) }
    dend_12 { pt3dadd( 10.8781, -432.687, 21.7299, 0.17 ) }
    dend_12 { pt3dadd( 10.4316, -433.611, 21.4352, 1.03 ) }
    dend_12 { pt3dadd( 10.3561, -433.773, 21.3862, 0.17 ) }
    dend_12 { pt3dadd( 9.84747, -435.247, 21.0595, 0.17 ) }
    dend_12 { pt3dadd( 9.5608, -436.353, 20.8843, 1.37 ) }
    dend_12 { pt3dadd( 9.53126, -436.528, 20.8714, 0.17 ) }
    dend_12 { pt3dadd( 9.4733, -438.381, 20.9178, 0.17 ) }
    dend_12 { pt3dadd( 9.47345, -439.783, 20.927, 0.17 ) }
    dend_12 { pt3dadd( 9.27637, -443.451, 21.0677, 0.17 ) }
    dend_12 { pt3dadd( 9.26343, -443.627, 21.0872, 0.17 ) }
    dend_12 { pt3dadd( 9.21552, -444.378, 21.2002, 1.54 ) }
    dend_12 { pt3dadd( 9.08244, -445.925, 21.4793, 0.17 ) }
    dend_12 { pt3dadd( 8.80582, -447.505, 21.858, 0.17 ) }
    dend_12 { pt3dadd( 8.26085, -450.445, 23.0489, 0.17 ) }
    dend_12 { pt3dadd( 8.02243, -452.087, 23.8845, 0.17 ) }
    dend_12 { pt3dadd( 7.73509, -454.503, 25.2286, 0.17 ) }
    dend_12 { pt3dadd( 7.37157, -458.266, 27.4328, 0.17 ) }
    dend_12 { pt3dadd( 7.12818, -461.475, 29.4007, 0.17 ) }
    dend_12 { pt3dadd( 6.9218, -466.593, 32.634, 0.17 ) }
    dend_12 { pt3dadd( 6.89815, -469.361, 34.3982, 0.17 ) }
    dend_12 { pt3dadd( 6.90055, -469.647, 34.588, 1.71 ) }
    dend_12 { pt3dadd( 6.93923, -470.379, 35.1278, 0.17 ) }
    dend_12 { pt3dadd( 7.16069, -471.686, 36.1186, 0.17 ) }
    dend_12 { pt3dadd( 7.21858, -471.897, 36.2497, 0.17 ) }
    dend_12 { pt3dadd( 7.58531, -473.437, 36.8414, 0.17 ) }
    dend_12 { pt3dadd( 8.32575, -476.957, 38.0839, 0.17 ) }
    dend_12 { pt3dadd( 8.43929, -477.471, 38.2519, 0.17 ) }
    dend_12 { pt3dadd( 8.66534, -478.411, 38.4898, 0.17 ) }
    dend_12 { pt3dadd( 8.98633, -479.703, 38.7328, 1.54 ) }
    dend_12 { pt3dadd( 9.21002, -480.586, 38.83, 0.17 ) }
    dend_12 { pt3dadd( 9.39651, -481.328, 38.8232, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( 9.4481, -481.877, 38.7995, 0.17 ) }
    dend_12 { pt3dadd( 9.38877, -485.024, 38.8626, 0.17 ) }
    dend_12 { pt3dadd( 9.32885, -485.544, 38.8666, 1.71 ) }
    dend_12 { pt3dadd( 9.29124, -485.798, 38.8717, 0.17 ) }
    dend_12 { pt3dadd( 8.81561, -488.531, 38.9495, 0.17 ) }
    dend_12 { pt3dadd( 8.08156, -492.156, 39.0827, 0.17 ) }
    dend_12 { pt3dadd( 6.96772, -496.751, 39.3077, 0.17 ) }
    dend_12 { pt3dadd( 6.24555, -499.102, 39.4676, 0.17 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 8/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 15.6409, -404.378, 19.7802, 0.17 ) }
    dend_11 { pt3dadd( 15.9192, -405.991, 19.669, 0.17 ) }
    dend_11 { pt3dadd( 16.2782, -407.733, 19.5232, 0.17 ) }
    dend_11 { pt3dadd( 16.3119, -407.88, 19.5094, 1.2 ) }
    dend_11 { pt3dadd( 16.4186, -408.312, 19.4655, 0.17 ) }
    dend_11 { pt3dadd( 16.9169, -410.26, 19.26, 0.17 ) }
    dend_11 { pt3dadd( 17.284, -411.555, 19.1076, 1.37 ) }
    dend_11 { pt3dadd( 17.5995, -412.356, 19.023, 0.17 ) }
    dend_11 { pt3dadd( 17.6612, -412.493, 19.0095, 0.17 ) }
    dend_11 { pt3dadd( 18.517, -414.54, 18.857, 0.17 ) }
    dend_11 { pt3dadd( 18.5762, -414.67, 18.862, 0.17 ) }
    dend_11 { pt3dadd( 19.3609, -416.363, 19.0803, 0.17 ) }
    dend_11 { pt3dadd( 21.1375, -420.289, 19.8447, 0.17 ) }
    dend_11 { pt3dadd( 21.8531, -421.885, 20.1735, 0.17 ) }
    dend_11 { pt3dadd( 22.67, -423.78, 20.5345, 0.17 ) }
    dend_11 { pt3dadd( 24.1932, -427.304, 21.2891, 1.37 ) }
    dend_11 { pt3dadd( 24.8524, -428.87, 21.6452, 0.17 ) }
    dend_11 { pt3dadd( 24.9066, -429.007, 21.6808, 0.17 ) }
    dend_11 { pt3dadd( 26.3308, -432.946, 22.7583, 0.17 ) }
    dend_11 { pt3dadd( 27.4671, -435.78, 23.3976, 0.17 ) }
    dend_11 { pt3dadd( 29.877, -444.032, 24.6142, 0.17 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 29/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 6.24555, -499.102, 39.4676, 0.17 ) }
    dend_14 { pt3dadd( 8.6078, -502.328, 41.0462, 0.17 ) }
    dend_14 { pt3dadd( 10.4287, -504.814, 42.263, 0.17 ) }
    dend_14 { pt3dadd( 12.0941, -507.089, 43.376, 0.17 ) }
    dend_14 { pt3dadd( 12.1905, -507.22, 43.4404, 0.17 ) }
    dend_14 { pt3dadd( 16.3639, -512.919, 46.2294, 0.17 ) }
    dend_14 { pt3dadd( 16.6808, -513.352, 46.4412, 0.17 ) }
    dend_14 { pt3dadd( 23.0066, -521.642, 48.5932, 0.17 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.24555, -499.102, 39.4676, 0.17 ) }
    dend_13 { pt3dadd( 4.42966, -501.575, 40.8176, 0.17 ) }
    dend_13 { pt3dadd( 1.95919, -504.94, 42.6542, 0.17 ) }
    dend_13 { pt3dadd( 0.799094, -506.52, 43.5166, 0.17 ) }
    dend_13 { pt3dadd( 0.705496, -506.648, 43.5862, 0.17 ) }
    dend_13 { pt3dadd( -3.45116, -515.324, 48.149, 0.17 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_17 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_45 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_31 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_30 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_16 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_56 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_49 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_46 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_42 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_60 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_53 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_52 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_47 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_22 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_7 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_15 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_8 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_6 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_5 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_9 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_12 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_11 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_29 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_28 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_57 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_38 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_23 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_26 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_48 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_13 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_14 OneSecGrp_SectionRef_65.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 5
    dend_45 nseg = 5
    dend_43 nseg = 7
    dend_36 nseg = 3
    dend_33 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 9
    dend_16 nseg = 5
    dend_56 nseg = 3
    dend_51 nseg = 5
    dend_49 nseg = 13
    dend_46 nseg = 7
    dend_42 nseg = 5
    dend_2 nseg = 5
    dend_60 nseg = 7
    dend_53 nseg = 9
    dend_52 nseg = 5
    dend_47 nseg = 9
    dend_27 nseg = 7
    dend_22 nseg = 3
    dend_7 nseg = 5
    dend_61 nseg = 5
    dend_59 nseg = 5
    dend_58 nseg = 7
    dend_55 nseg = 5
    dend_41 nseg = 3
    dend_15 nseg = 3
    dend_8 nseg = 9
    dend_6 nseg = 13
    dend_5 nseg = 7
    dend_25 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 7
    dend_12 nseg = 5
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L5_NBC_283ce5d859_0_0


