// Cell: cACint209_L6_BTC_bc69dce0ae_0_0
/*
{
  "id" : "cACint209_L6_BTC_bc69dce0ae_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.16881, -12.804, 0.0, 3.44428", "1.99522, -11.5105, 0.0, 5.75363", "1.82164, -10.2169, 0.0, 7.75663", "1.64805, -8.92341, 0.0, 8.89598", "1.47447, -7.62987, 0.0, 9.91596", "1.30088, -6.33633, 0.0, 10.9547", "1.1273, -5.04279, 0.0, 11.8384", "0.953711, -3.74926, 0.0, 12.6846", "0.780126, -2.45572, 0.0, 13.1367", "0.606541, -1.16218, 0.0, 13.4162", "0.432956, 0.13136, 0.0, 13.3909", "0.25937, 1.4249, 0.0, 13.2383", "0.085785, 2.71844, 0.0, 12.8868", "-0.0878002, 4.01197, 0.0, 12.8103", "-0.261385, 5.30551, 0.0, 12.9125", "-0.434971, 6.59905, 0.0, 12.4763", "-0.608556, 7.89259, 0.0, 11.6777", "-0.782141, 9.18613, 0.0, 10.5994", "-0.955726, 10.4797, 0.0, 9.19908", "-1.12931, 11.7732, 0.0, 7.03753", "-1.3029, 13.0667, 0.0, 4.1381" ]
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.21969, -11.987, -4.59, 1.84", "3.21969, -11.987, -4.59, 1.84", "3.38197, -12.4979, -4.6202, 1.84", "3.72811, -13.5878, -4.68463, 2.14", "3.94969, -14.2854, -4.72587, 1.92", "4.23142, -15.1725, -4.7783, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.219697, -12.424, -1.64, 2.43", "0.219697, -12.424, -1.64, 2.43", "-0.394693, -13.8142, -1.8244, 1.92", "-0.905947, -14.971, -1.97785, 2.14", "-1.22246, -15.6871, -2.07285, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.5397, 11.896, 0.0, 3.02", "1.5397, 11.896, 0.0, 3.02", "1.72866, 12.5688, -0.0428843, 2.36", "1.98088, 13.4012, -0.0899073, 2.36", "2.39989, 14.7383, -0.157302, 2.29", "2.72241, 15.7294, -0.213514, 2.21", "3.05305, 16.7098, -0.271739, 2.29", "3.34328, 17.5543, -0.323704, 2.43", "3.67594, 18.4884, -0.385069, 2.36", "3.95538, 19.2188, -0.428034, 2.51", "4.25525, 19.9313, -0.470371, 3.17", "4.44999, 20.3698, -0.489599, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.3029, 13.0667, 0.0, 0.475068", "-3.29794, 27.9334, 0.0, 0.475068", "-5.29297, 42.8002, 0.0, 0.475068" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.23142, -15.1725, -4.7783, 0.88", "3.33889, -15.0966, -5.49678, 0.88", "2.46866, -15.1075, -6.18342, 0.81", "1.60143, -15.1969, -6.88435, 0.81", "0.599403, -15.3794, -7.71846, 0.96", "-0.3495, -15.6254, -8.54164, 1.4", "-1.25865, -15.9488, -9.39422, 1.77", "-2.05827, -16.2931, -10.1873, 0.44", "-2.74841, -16.6898, -10.903, 0.44", "-3.13573, -16.9954, -11.3015, 0.44", "-3.44081, -17.3672, -11.6599, 0.66", "-3.78799, -18.0968, -12.2531, 1.03", "-10.5913, -19.0157, -20.1877, 1.03", "-16.1304, -19.4858, -29.0894, 1.03", "-19.6303, -18.6403, -38.9432, 1.03" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.23142, -15.1725, -4.7783, 1.11", "5.13336, -16.1084, -4.82465, 1.11", "5.94669, -16.9837, -4.80463, 1.25", "6.26731, -17.3394, -4.77207, 1.7", "6.83513, -17.9925, -4.6939, 1.77", "7.80376, -19.1113, -4.55963, 1.33", "8.55068, -19.9845, -4.46384, 1.03", "9.12302, -20.6682, -4.35253, 1.03", "9.69176, -21.3803, -4.25347, 1.03", "10.1697, -22.015, -4.20113, 1.33", "10.853, -23.0004, -4.19135, 1.33", "11.4626, -23.9749, -4.27419, 0.74", "12.0456, -25.0165, -4.45353, 0.74", "12.64, -26.0871, -4.68868, 0.88", "13.0834, -26.8909, -4.88273, 1.33", "13.4389, -27.4983, -5.00511, 2.06", "14.2025, -28.7564, -5.20134, 0.96", "14.8647, -29.7551, -5.30393, 0.74", "15.3792, -30.4739, -5.34399, 1.18", "15.7457, -30.9483, -5.3275, 1.55", "16.7074, -32.1592, -5.24937, 0.88", "17.2729, -32.89, -5.22845, 0.81", "18.02, -33.9133, -5.27697, 0.88", "18.4144, -34.5076, -5.35761, 1.4", "18.7316, -35.06, -5.48346, 1.4", "19.1716, -35.9417, -5.74747, 0.81", "19.5572, -36.8243, -6.07543, 0.88", "19.8561, -37.5316, -6.36669, 0.52", "20.0306, -37.937, -6.54704, 0.96", "20.3604, -38.6021, -6.8335, 1.92", "20.8308, -39.4335, -7.15553, 0.74", "21.3136, -40.2055, -7.42869, 0.74", "21.8232, -40.9326, -7.66325, 0.96", "22.3385, -41.5914, -7.88604, 1.55", "23.2632, -42.6648, -8.30035, 0.81", "24.0551, -43.5028, -8.66061, 0.81", "24.8141, -44.2543, -9.01134, 1.25", "25.565, -44.9748, -9.35722, 1.4", "26.682, -46.043, -9.8239, 0.81", "27.6471, -46.9984, -10.1753, 0.81", "28.1982, -47.5487, -10.3581, 1.18", "28.8364, -48.1452, -10.5489, 1.55", "29.5249, -48.7776, -10.722, 1.55", "30.3679, -49.5979, -10.8951, 0.59", "31.2002, -50.4651, -10.9735, 0.81", "31.7514, -51.0701, -10.9601, 1.33", "32.5857, -52.0153, -10.8955, 0.37", "33.0448, -52.5619, -10.8179, 0.22", "38.1609, -58.5545, -12.0428, 0.22", "43.8745, -63.5666, -14.707, 0.22", "50.3415, -68.2108, -16.0153, 0.22", "56.73, -73.0947, -15.7755, 0.22", "63.7782, -77.0442, -15.1743, 0.22", "70.0271, -82.0947, -15.2929, 0.22", "75.7046, -87.5888, -16.6219, 0.22", "81.0028, -93.1511, -18.9042, 0.22", "86.8578, -98.5179, -20.0099, 0.22", "92.2027, -104.315, -21.2972, 0.22", "96.8943, -110.46, -23.2272, 0.22", "100.811, -116.689, -26.2965, 0.22", "105.502, -122.003, -30.0996, 0.22", "108.694, -127.782, -34.6559, 0.22", "112.809, -133.81, -37.9063, 0.22", "116.46, -140.571, -39.8279, 0.22", "121.222, -146.869, -40.7403, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.22246, -15.6871, -2.07285, 0.96", "-2.85759, -16.6344, -1.96736, 0.96", "-3.75223, -17.1809, -1.92135, 0.96", "-4.66795, -17.772, -1.8861, 1.25", "-5.1513, -18.106, -1.87366, 1.25", "-6.04235, -18.7487, -1.86976, 0.96", "-6.88915, -19.3703, -1.88593, 0.96", "-7.63809, -19.9366, -1.91744, 1.47", "-8.58505, -20.5924, -1.96571, 1.62", "-9.75714, -21.2913, -2.01426, 0.96", "-10.7198, -21.7878, -2.05565, 0.96", "-12.0829, -22.3778, -2.10494, 1.11", "-13.0629, -22.7152, -2.12997, 1.4", "-14.7808, -23.1728, -2.1632, 1.33", "-16.2026, -23.4705, -2.20382, 0.96", "-17.6615, -23.7438, -2.26018, 1.18", "-18.395, -23.878, -2.29286, 1.18", "-20.2671, -24.2527, -2.40057, 0.88", "-21.3396, -24.5356, -2.48518, 0.88", "-22.072, -24.8038, -2.57674, 1.03", "-23.421, -25.4702, -2.77385, 1.25", "-24.2799, -25.9914, -2.89908, 0.88", "-25.1037, -26.5804, -3.0169, 0.88", "-25.8374, -27.1664, -3.11584, 1.11", "-26.6673, -27.8118, -3.23053, 1.25", "-27.7563, -28.6097, -3.44576, 0.88", "-28.5933, -29.2166, -3.71766, 1.03", "-29.1999, -29.6775, -4.01561, 1.4", "-29.9546, -30.2678, -4.53241, 1.18", "-30.8997, -30.9762, -5.39056, 1.25", "-31.5825, -31.5538, -6.44119, 1.4", "-30.9641, -31.6504, -7.70045, 1.4", "-30.061, -31.4755, -8.36904, 1.47", "-28.1598, -30.9803, -9.37447, 0.52", "-27.0996, -30.6854, -9.73697, 0.52", "-25.9607, -30.3627, -9.98077, 0.59", "-24.0024, -29.8465, -10.1704, 0.59", "-22.7912, -29.5605, -10.1731, 0.66", "-21.4778, -29.3244, -10.0641, 0.74", "-19.7079, -29.0788, -9.83315, 0.59", "-18.3716, -28.9627, -9.61595, 0.88", "-16.5644, -28.8878, -9.25771, 0.37", "-15.6048, -28.9156, -9.04373, 0.37", "-14.6611, -29.0208, -8.78311, 0.37", "-23.2655, -35.7719, -11.3061, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.22246, -15.6871, -2.07285, 1.4", "-1.11233, -17.219, -1.81275, 1.4", "-0.982306, -18.7952, -1.57038, 1.03", "-0.848275, -20.3276, -1.3351, 1.33", "-0.697715, -22.0977, -1.05364, 1.25", "-0.554651, -23.7059, -0.774503, 1.25", "-0.421625, -25.2386, -0.482391, 1.11", "-0.314353, -26.7127, -0.217435, 1.84", "-0.237652, -27.6654, -0.060931, 1.62", "-0.077484, -29.4841, 0.263972, 1.18", "0.0776555, -31.4122, 0.633555, 1.11", "0.221388, -33.3516, 1.01741, 1.25", "0.305186, -34.6338, 1.26021, 1.55", "0.384037, -36.0285, 1.53415, 2.06" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "4.44999, 20.3698, -0.489599, 2.88", "4.63211, 21.3888, -0.355866, 2.88", "4.86199, 22.6749, -0.187057, 2.58", "5.12179, 24.1285, 0.00372106, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.44999, 20.3698, -0.489599, 1.62", "5.58517, 19.9159, -1.47244, 1.62", "6.93346, 19.2078, -2.56975, 0.96", "7.83483, 18.6552, -3.27035, 0.96", "8.8307, 17.9562, -4.02653, 1.11", "9.36661, 17.5461, -4.42368, 1.25", "10.3805, 16.6866, -5.18059, 0.96", "11.5888, 15.4492, -6.06151, 0.81", "12.2611, 14.7192, -6.54344, 0.81", "12.8462, 14.1038, -6.96856, 0.81", "13.3849, 13.5628, -7.40673, 0.88", "14.2732, 12.7542, -8.18347, 0.74", "15.2181, 12.0119, -9.04704, 0.59", "16.0561, 11.443, -9.80896, 0.74", "16.6526, 11.0699, -10.3325, 0.66", "17.2975, 10.6753, -10.843, 0.66", "18.2437, 10.0912, -11.5196, 0.96", "19.2454, 9.48677, -12.1545, 1.11", "20.5008, 8.67021, -12.8872, 0.81", "21.5124, 7.93725, -13.4535, 0.81", "22.4843, 7.17652, -14.0065, 0.52", "23.0999, 6.64265, -14.4013, 0.52", "23.5284, 6.20639, -14.7734, 0.52", "24.0033, 5.60235, -15.4104, 0.74", "24.4614, 4.8676, -16.3498, 0.96", "24.7091, 4.3719, -17.0394, 1.03", "24.9868, 3.73132, -17.9818, 0.81", "25.3571, 2.95606, -19.1276, 0.52", "25.6525, 2.26915, -20.1267, 0.88", "25.8003, 1.92727, -20.6341, 1.11", "26.1312, 1.24595, -21.6609, 0.81", "26.5414, 0.619234, -22.5888, 0.22", "27.2287, -0.0874348, -23.583, 0.15", "33.4982, -6.04149, -29.5186, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.29297, 42.8002, 0.0, 0.15", "-7.28801, 57.6669, 0.0, 0.15", "-9.28305, 72.5336, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-19.6303, -18.6403, -38.9432, 0.15", "-23.563, -19.2514, -42.8108, 0.15", "-27.8076, -19.5933, -46.3724, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-19.6303, -18.6403, -38.9432, 0.59", "-23.6862, -19.3145, -49.6883, 0.15", "-27.7945, -18.9181, -60.4281, 0.15", "-34.3084, -17.1121, -69.717, 0.15", "-42.2477, -16.5159, -78.0199, 0.15", "-48.8413, -16.7689, -87.4465, 0.15", "-55.3577, -19.1194, -96.6065, 0.15", "-62.381, -20.5722, -105.595, 0.15", "-69.0218, -22.8716, -114.68, 0.15", "-76.0031, -25.2613, -123.48, 0.15", "-84.3648, -25.8678, -131.36, 0.15", "-91.9275, -26.3135, -140.021, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "121.222, -146.869, -40.7403, 0.15", "127.915, -153.682, -43.7575, 0.15", "134.072, -161.311, -45.4435, 0.15", "140.191, -169.126, -45.5199, 0.15", "146.366, -176.88, -44.9755, 0.15", "152.75, -184.471, -45.7206, 0.15", "160.027, -191.315, -46.2097, 0.15", "168.891, -196.21, -46.1584, 0.15", "176.444, -202.603, -47.8505, 0.15", "183.783, -209.368, -48.5729, 0.15", "190.659, -216.237, -50.9644, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "121.222, -146.869, -40.7403, 0.59", "129.028, -156.227, -41.629, 0.15", "135.101, -166.491, -44.0903, 0.15", "138.796, -177.604, -47.2815, 0.15", "141.404, -189.319, -48.4897, 0.15", "145.282, -200.433, -51.4246, 0.15", "149.419, -211.612, -53.5656, 0.15", "155.487, -221.679, -56.8617, 0.15", "161.345, -231.612, -60.9418, 0.15", "167.673, -241.912, -62.2117, 0.15", "172.701, -252.858, -63.4543, 0.15", "178.525, -263.34, -65.4386, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-23.2655, -35.7719, -11.3061, 0.15", "-31.2778, -41.0819, -11.3929, 0.15", "-38.436, -47.3966, -11.5584, 0.15", "-44.3375, -54.6261, -9.94807, 0.15", "-50.3784, -61.9203, -10.0116, 0.15", "-56.5713, -69.0084, -11.2397, 0.15", "-60.9841, -77.2838, -11.6119, 0.15", "-65.6939, -85.3801, -12.4546, 0.15", "-69.9346, -93.7161, -11.7972, 0.15", "-74.7967, -101.6, -10.1151, 0.15", "-79.2595, -109.336, -7.11511, 0.15", "-82.7559, -117.715, -4.81767, 0.15", "-87.0036, -126.057, -4.29735, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-23.2655, -35.7719, -11.3061, 0.59", "-29.0269, -42.1965, -17.1954, 0.15", "-33.8356, -48.8752, -23.5937, 0.15", "-39.5701, -54.9685, -29.883, 0.15", "-43.8376, -61.0682, -37.2277, 0.15", "-47.1896, -67.1884, -45.0082, 0.15", "-51.1524, -73.9725, -51.84, 0.15", "-53.5701, -81.1323, -58.9505, 0.15", "-55.7549, -88.8739, -65.4345, 0.15", "-56.6517, -95.7973, -73.124, 0.15", "-58.4549, -102.81, -80.5673, 0.15", "-60.141, -108.95, -88.8436, 0.15", "-60.7906, -115.746, -96.6807, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "0.384037, -36.0285, 1.53415, 0.44", "-0.546164, -37.5351, 2.50279, 0.44", "-0.974866, -38.1635, 2.97232, 0.44", "-1.54749, -39.0056, 3.76751, 0.44", "-1.99105, -39.7352, 4.55274, 0.66", "-2.31513, -40.412, 5.2372, 0.66", "-2.48306, -40.8969, 5.6675, 0.44", "-2.63096, -41.5491, 6.25044, 0.52", "-2.68393, -42.5031, 6.95025, 0.66", "-2.58125, -43.5545, 7.49917, 0.66", "-2.37167, -44.778, 8.00718, 0.88", "-2.13582, -46.0362, 8.4405, 1.11", "-1.93357, -47.226, 8.77671, 0.74", "-1.8197, -48.1119, 8.92727, 0.29", "-1.7618, -49.0204, 8.9739, 0.22", "-1.76004, -49.5602, 8.96053, 0.22", "-1.81775, -50.2696, 8.92236, 0.22", "-1.90482, -50.938, 8.86647, 0.22", "-2.09593, -52.3738, 8.73425, 0.29", "-2.20166, -53.4864, 8.6403, 0.52", "-2.22981, -54.2734, 8.5814, 0.52", "-2.1772, -55.3549, 8.51713, 0.44", "-1.97492, -56.958, 8.46379, 0.29", "-1.83509, -57.7409, 8.46378, 0.66", "-1.7156, -58.2896, 8.5123, 1.77", "-1.48502, -59.2829, 8.66955, 1.18", "-1.24025, -60.5484, 8.95342, 0.52", "-1.05757, -61.7258, 9.27965, 0.52", "-0.957636, -62.4871, 9.52424, 0.81", "-0.780593, -63.6254, 9.90322, 0.96", "-0.592484, -64.6184, 10.2607, 0.52", "-0.308233, -65.9614, 10.813, 0.22", "-0.157369, -66.5908, 11.107, 0.29", "0.0670271, -67.4153, 11.5417, 0.29", "0.382431, -68.589, 12.1792, 0.22", "0.592501, -69.3572, 12.6138, 0.37", "0.798109, -70.15, 13.0721, 0.74", "0.954366, -70.9109, 13.5094, 1.03", "1.0351, -71.7715, 13.9695, 1.25", "1.01314, -73.4554, 14.8044, 0.37", "0.939346, -74.4349, 15.2768, 1.18", "0.868311, -75.3398, 15.6823, 2.65", "0.795271, -76.8176, 16.2874, 2.21", "0.785835, -78.2497, 16.8411, 0.96", "0.840862, -79.4329, 17.2735, 0.29", "0.917139, -80.2717, 17.5823, 0.29", "0.985172, -81.0545, 17.8677, 0.66", "1.05004, -81.9895, 18.2528, 0.44", "1.10024, -82.8206, 18.6238, 0.22", "1.12806, -83.2377, 18.8238, 0.22", "1.14731, -83.7451, 19.0515, 0.22", "1.12449, -84.7794, 19.4666, 0.29", "1.09356, -85.5612, 19.7548, 0.29", "1.08915, -86.0981, 19.9308, 0.22", "1.1, -86.7176, 20.0998, 0.22", "1.15055, -87.2618, 20.236, 0.81", "1.24775, -87.7763, 20.3513, 1.55", "1.55324, -88.8884, 20.6042, 1.84", "2.08838, -90.5547, 20.9774, 0.15", "2.24842, -91.0784, 21.1077, 0.15", "2.38045, -91.5156, 21.2211, 0.15", "2.52392, -92.0446, 21.3606, 0.15", "2.71595, -92.8284, 21.5637, 0.88", "2.86758, -93.4798, 21.7243, 1.92", "3.19223, -94.7732, 21.998, 1.99", "3.28357, -95.1043, 22.0608, 1.99", "3.67632, -96.634, 22.3042, 0.15", "3.77302, -97.0577, 22.3553, 0.15", "3.85853, -97.4941, 22.3864, 0.37", "3.92387, -97.9379, 22.4023, 0.37", "4.05276, -98.9902, 22.4337, 0.15", "4.1082, -99.6436, 22.467, 0.15", "4.17068, -100.413, 22.5233, 0.22", "4.19504, -100.861, 22.5743, 0.22", "4.19409, -101.671, 22.6896, 0.15", "4.16434, -102.29, 22.7909, 0.15", "4.12968, -102.779, 22.8803, 0.59", "4.11988, -103.299, 22.9855, 1.03", "4.15819, -104.103, 23.136, 0.22", "4.24495, -104.949, 23.2978, 0.07", "4.32544, -105.492, 23.4126, 0.07", "4.39122, -105.833, 23.4957, 0.66", "4.60551, -106.723, 23.7674, 0.96", "5.08248, -108.329, 24.3209, 0.22", "5.40548, -109.199, 24.6632, 0.22", "5.65416, -109.76, 24.9299, 0.44", "5.95742, -110.394, 25.2616, 1.25", "6.24803, -110.945, 25.5621, 1.92", "6.68322, -111.638, 25.966, 1.11", "7.16254, -112.298, 26.389, 0.22", "7.54284, -112.815, 26.703, 0.22", "7.95714, -113.427, 27.0391, 0.52", "8.43574, -114.277, 27.463, 0.22", "8.85089, -115.2, 27.92, 0.22", "9.12269, -115.945, 28.301, 0.22", "9.23352, -116.325, 28.4947, 0.81", "9.45669, -117.226, 28.9703, 1.77", "9.81832, -118.939, 29.9276, 0.37", "9.99757, -119.836, 30.4428, 0.15", "10.0772, -120.249, 30.6706, 0.15", "10.1844, -120.762, 30.9414, 0.37", "10.327, -121.389, 31.2712, 1.18", "10.5149, -122.128, 31.6538, 1.55", "10.8211, -123.264, 32.1857, 0.81", "11.0119, -124.063, 32.5069, 0.15", "11.1107, -124.578, 32.7026, 0.22", "11.2479, -125.354, 32.9822, 0.15", "11.3564, -126.069, 33.2258, 0.96", "11.4783, -126.86, 33.4926, 1.18", "11.6797, -128.079, 33.8901, 0.22", "11.7997, -128.652, 34.0735, 0.22", "11.9847, -129.372, 34.3061, 0.37", "12.0458, -129.571, 34.3675, 0.37", "12.2954, -130.298, 34.5912, 0.22", "12.429, -130.633, 34.7049, 0.22", "12.7181, -131.207, 34.8858, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "0.384037, -36.0285, 1.53415, 1.84", "0.198807, -36.9402, 1.16275, 1.84", "0.0315614, -38.0342, 0.75412, 1.55", "-0.097914, -39.2151, 0.354297, 1.55", "-0.219502, -40.4493, -0.0175586, 1.55", "-0.341681, -41.6742, -0.336098, 1.47", "-0.454777, -42.7469, -0.58704, 0.96", "-0.547022, -43.602, -0.745576, 1.55", "-0.733547, -45.1349, -0.938491, 1.25", "-0.943609, -46.7179, -1.08533, 1.47", "-1.1825, -48.3491, -1.19297, 1.03", "-1.37438, -49.4507, -1.24721, 1.18", "-1.68806, -51.0041, -1.29187, 1.99", "-2.00773, -52.3217, -1.30666, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.12179, 24.1285, 0.00372106, 2.14", "6.30751, 25.4951, 0.166513, 2.14" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.12179, 24.1285, 0.00372106, 1.47", "5.27417, 25.2949, 1.32998, 1.47", "5.29215, 25.9928, 2.17564, 1.18", "5.21393, 26.6287, 3.04154, 1.18", "5.02017, 27.2752, 4.06659, 1.47", "4.75383, 27.738, 4.9574, 1.47", "4.5592, 27.9049, 5.40519, 1.47", "3.93312, 27.9778, 6.26304, 1.47", "2.97501, 27.7599, 7.14537, 1.03", "2.35505, 27.5017, 7.57066, 1.62", "1.76394, 27.1801, 7.90322, 1.77", "0.996118, 26.6634, 8.29045, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "33.4982, -6.04149, -29.5186, 0.15", "39.32, -10.8172, -34.0138, 0.15", "45.4693, -15.0122, -38.712, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "33.4982, -6.04149, -29.5186, 0.59", "37.7453, -10.279, -35.3295, 0.15", "40.9177, -15.346, -41.07, 0.15", "42.5099, -21.0119, -46.8131, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-27.8076, -19.5933, -46.3724, 0.15", "-38.371, -16.4681, -50.9467, 0.15", "-47.0463, -11.7606, -57.5369, 0.15", "-54.1314, -5.1585, -64.2214, 0.15", "-62.6796, 0.453368, -70.1649, 0.15", "-71.8311, 4.94152, -76.2653, 0.15", "-80.5592, 9.12611, -83.1678, 0.15", "-88.1135, 14.4708, -90.546, 0.15", "-95.7617, 20.6899, -97.0168, 0.15", "-102.313, 25.8099, -105.448, 0.15", "-110.425, 29.7814, -113.187, 0.15", "-119.993, 34.5754, -118.319, 0.15", "-129.582, 38.8306, -123.913, 0.15", "-138.579, 44.7412, -128.785, 0.15", "-148.618, 49.7812, -132.597, 0.15", "-159.474, 54.3252, -134.277, 0.15", "-169.727, 60.2224, -133.952, 0.15", "-180.051, 65.9236, -134.982, 0.15", "-190.852, 70.7582, -133.913, 0.15", "-201.534, 75.8291, -132.848, 0.15", "-211.856, 81.4797, -134.162, 0.15", "-221.614, 87.9823, -135.433, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-27.8076, -19.5933, -46.3724, 0.59", "-32.1938, -23.4772, -56.2081, 0.15", "-37.8533, -26.4944, -65.7309, 0.15", "-42.4562, -30.3516, -75.4801, 0.15", "-46.6644, -34.1043, -85.448, 0.15", "-50.3983, -36.8871, -95.9412, 0.15", "-54.5079, -40.7121, -105.919, 0.15", "-57.4694, -44.2042, -116.42, 0.15", "-61.396, -47.4728, -126.686, 0.15", "-63.0614, -52.8058, -136.587, 0.15", "-63.2778, -58.3853, -146.465, 0.15", "-63.3186, -64.1516, -156.224, 0.15", "-64.7613, -70.3439, -165.589, 0.15", "-64.2577, -77.3295, -174.4, 0.15", "-64.9508, -85.7123, -181.74, 0.15", "-67.4412, -93.9332, -188.918, 0.15", "-69.9101, -101.606, -196.743, 0.15", "-71.1544, -107.983, -205.998, 0.15", "-72.4121, -114.363, -215.248, 0.15", "-71.4019, -122.485, -222.848, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-91.9275, -26.3135, -140.021, 0.15", "-97.8468, -27.4973, -146.895, 0.15", "-104.429, -28.8615, -153.103, 0.15", "-111.792, -30.0556, -158.403, 0.15", "-118.314, -29.7484, -164.804, 0.15", "-125.255, -28.5482, -170.6, 0.15", "-132.78, -29.3931, -175.733, 0.15", "-140.378, -30.9483, -180.589, 0.15", "-147.056, -33.3686, -186.344, 0.15", "-153.2, -37.364, -191.752, 0.15", "-159.137, -41.5454, -197.234, 0.15", "-164.217, -47.4555, -201.784, 0.15", "-168.832, -53.0687, -207.128, 0.15", "-173.169, -58.6875, -212.68, 0.15", "-177.169, -65.391, -217.075, 0.15", "-180.491, -73.0358, -220.194, 0.15", "-184.226, -80.22, -223.963, 0.15", "-186.354, -88.1922, -227.131, 0.15", "-187.569, -95.6147, -231.748, 0.15", "-187.206, -103.668, -235.135, 0.15", "-188.662, -111.712, -238.417, 0.15", "-190.712, -120.061, -240.432, 0.15", "-192.088, -128.148, -243.629, 0.15", "-194.882, -135.807, -247.14, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-91.9275, -26.3135, -140.021, 0.59", "-96.3398, -26.3536, -149.671, 0.15", "-100.305, -26.75, -159.505, 0.15", "-105.276, -27.9126, -168.801, 0.15", "-109.505, -30.483, -178.152, 0.15", "-112.985, -32.1039, -188.031, 0.15", "-114.632, -34.8685, -198.102, 0.15", "-117.386, -35.7804, -208.305, 0.15", "-120.757, -36.3449, -218.349, 0.15", "-124.338, -37.4166, -228.275, 0.15", "-126.301, -39.8212, -238.391, 0.15", "-128.795, -44.1355, -247.654, 0.15", "-130.605, -47.3329, -257.553, 0.15", "-131.552, -50.0407, -267.73, 0.15", "-132.544, -52.6242, -277.938, 0.15", "-132.528, -54.5185, -288.359, 0.15", "-133.999, -55.4842, -298.819, 0.15", "-136.627, -55.7816, -309.095, 0.15", "-137.554, -57.584, -319.493, 0.15", "-139.76, -60.383, -329.446, 0.15", "-143.382, -63.4415, -338.889, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-87.0036, -126.057, -4.29735, 0.15", "-93.7298, -135.208, -3.67332, 0.15", "-99.5227, -144.737, -1.72415, 0.15", "-104.303, -154.81, -0.0359331, 0.15", "-110.003, -163.998, 3.35073, 0.15", "-115.44, -173.153, 7.21027, 0.15", "-118.824, -183.051, 11.3643, 0.15", "-121.603, -193.742, 13.3196, 0.15", "-124.523, -204.593, 13.0697, 0.15", "-127.663, -215.198, 10.754, 0.15", "-129.376, -225.488, 6.23334, 0.15", "-131.366, -235.062, 0.279135, 0.15", "-133.646, -244.478, -5.84817, 0.15", "-137.026, -253.05, -12.7816, 0.15", "-139.231, -260.176, -21.7177, 0.15", "-141.306, -267.225, -30.7511, 0.15", "-141.267, -275.208, -39.1572, 0.15", "-140.111, -283.981, -46.5558, 0.15", "-138.86, -292.627, -54.1017, 0.15", "-139.399, -301.001, -62.0577, 0.15", "-140.398, -308.619, -70.7672, 0.15", "-143.298, -315.667, -79.5674, 0.15", "-146.545, -322.509, -88.422, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-87.0036, -126.057, -4.29735, 0.59", "-91.8605, -132.585, -3.8005, 0.15", "-96.4138, -139.336, -3.79258, 0.15", "-102.362, -144.934, -2.90767, 0.15", "-108.125, -150.661, -1.78591, 0.15", "-114.455, -155.828, -0.69212, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-60.7906, -115.746, -96.6807, 0.15", "-63.6278, -125.073, -105.963, 0.15", "-67.8432, -135.336, -113.5, 0.15", "-71.5265, -144.57, -122.599, 0.15", "-75.7787, -155.47, -129.069, 0.15", "-80.1393, -167.318, -133.276, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-60.7906, -115.746, -96.6807, 0.59", "-66.0614, -122.183, -104.37, 0.15", "-71.1455, -128.749, -112.062, 0.15", "-74.723, -137.32, -118.272, 0.15", "-76.8473, -147.029, -123.151, 0.15", "-76.6062, -157.013, -127.792, 0.15", "-75.2581, -167.023, -132.14, 0.15", "-72.6001, -176.603, -136.877, 0.15", "-70.8276, -187.074, -139.628, 0.15", "-67.7742, -196.723, -143.955, 0.15", "-66.7605, -206.497, -148.932, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "12.7181, -131.207, 34.8858, 0.22", "12.2683, -131.971, 34.9194, 0.22", "11.6668, -132.994, 34.9643, 0.22", "11.1443, -133.883, 35.0033, 0.22", "10.2124, -135.467, 35.0729, 0.22", "9.79194, -136.182, 35.1043, 0.15", "9.37257, -136.895, 35.1356, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "12.7181, -131.207, 34.8858, 1.18", "12.9398, -132.002, 35.2925, 1.18", "13.179, -132.923, 35.7246, 0.29", "13.3793, -133.769, 36.1146, 0.15", "13.4819, -134.251, 36.331, 0.15", "13.5723, -134.725, 36.537, 0.29", "13.6724, -135.4, 36.8292, 0.66", "13.7348, -136.1, 37.1279, 1.4", "13.7266, -137.136, 37.5472, 0.22", "13.674, -137.855, 37.8253, 0.22", "13.6392, -138.169, 37.9415, 0.22", "13.5545, -138.839, 38.1649, 0.22", "13.4714, -139.418, 38.3407, 0.66", "13.3467, -140.14, 38.5397, 0.15", "13.2082, -140.751, 38.6968, 0.15", "13.0133, -141.496, 38.8854, 0.52", "12.7654, -142.418, 39.1272, 0.29", "12.6678, -142.784, 39.2257, 0.15", "12.5681, -143.156, 39.3339, 0.15", "12.3755, -143.835, 39.5247, 0.15", "12.2342, -144.294, 39.6471, 0.29", "12.0448, -144.922, 39.8238, 1.11", "11.8711, -145.561, 40.0137, 1.77", "11.6798, -146.45, 40.2837, 1.77", "11.5246, -147.381, 40.5757, 1.33", "11.3475, -148.675, 40.9816, 0.15", "11.2446, -149.537, 41.264, 0.22", "11.1755, -150.157, 41.4747, 0.66", "11.1127, -150.755, 41.6849, 0.81", "11.0204, -151.865, 42.0895, 0.15", "11.0107, -152.519, 42.3384, 0.22", "11.0545, -153.07, 42.5573, 0.22", "11.1421, -153.779, 42.831, 0.22", "11.2044, -154.194, 42.9858, 0.66", "11.3748, -155.007, 43.2848, 1.4", "11.7101, -156.153, 43.7322, 0.88", "11.9409, -156.868, 44.0205, 0.15", "12.1708, -157.553, 44.2933, 0.15", "12.3453, -158.051, 44.4886, 0.22", "12.6124, -158.831, 44.8007, 0.29", "12.7947, -159.44, 45.0382, 0.15", "12.9579, -160.28, 45.3359, 0.15", "12.9834, -160.572, 45.434, 0.15", "12.9938, -161.183, 45.6498, 0.22", "12.948, -162.072, 45.9693, 0.22", "12.9099, -162.456, 46.1076, 0.22", "12.8286, -163.265, 46.3923, 0.37", "12.7695, -164.09, 46.6945, 0.22", "12.7444, -164.646, 46.8922, 0.88", "12.7394, -165.886, 47.3163, 2.06", "12.8034, -167.337, 47.7371, 0.59", "12.9014, -168.321, 47.9618, 0.22", "13.0045, -168.972, 48.0623, 0.22", "13.1092, -169.548, 48.1272, 0.22", "13.2628, -170.342, 48.1794, 0.59", "13.5165, -171.467, 48.1742, 0.07", "13.7006, -172.15, 48.0878, 0.15", "13.9355, -172.959, 47.9071, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.00773, -52.3217, -1.30666, 0.74", "-2.19668, -54.1301, -1.63009, 0.74", "-2.37372, -55.7404, -1.94526, 0.74", "-2.50075, -56.6509, -2.1231, 0.81", "-2.77414, -58.1521, -2.42357, 0.88", "-2.97286, -59.1164, -2.6168, 0.81", "-3.26526, -60.3614, -2.86979, 1.18", "-3.5193, -61.2865, -3.0769, 1.18", "-3.90855, -62.4189, -3.3263, 1.03", "-4.3802, -63.6201, -3.6015, 1.11", "-4.80116, -64.5586, -3.81478, 0.74", "-5.33743, -65.6136, -4.03408, 1.11", "-5.81995, -66.5109, -4.20039, 0.81", "-6.38875, -67.5689, -4.37268, 0.81", "-6.56659, -67.9554, -4.4273, 0.81", "-6.85899, -68.7715, -4.52424, 0.88", "-7.09418, -69.6761, -4.59482, 0.88", "-7.35996, -71.1713, -4.64955, 1.11", "-7.45166, -71.8847, -4.63611, 1.33", "-7.63524, -73.61, -4.46781, 0.74", "-7.71637, -74.6339, -4.34926, 0.74", "-7.76576, -76.1398, -4.15271, 0.88", "-7.76038, -77.0263, -4.01013, 1.25", "-7.75283, -77.9405, -3.82128, 1.03", "-7.80866, -79.1609, -3.47306, 0.74", "-8.12134, -88.8682, -3.64325, 0.74", "-9.07384, -98.4635, -2.36619, 0.74", "-9.61925, -108.034, -0.698124, 0.74", "-9.59159, -117.177, 2.76012, 0.74", "-8.68743, -126.385, 5.89282, 0.74", "-8.31023, -135.298, 9.94599, 0.74", "-9.80951, -144.466, 12.9777, 0.74", "-9.42261, -153.954, 15.1359, 0.74", "-8.47257, -163.37, 17.4688, 0.74", "-7.63214, -172.837, 19.6032, 0.74", "-6.71984, -182.327, 21.5886, 0.74", "-6.19066, -191.527, 24.8302, 0.74", "-7.43104, -200.115, 29.4488, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-2.00773, -52.3217, -1.30666, 1.03", "-1.93495, -53.1998, -0.818248, 1.03", "-1.84853, -54.4996, -0.165802, 1.03", "-1.80504, -55.504, 0.240549, 1.03", "-1.72947, -56.9903, 0.736847, 1.03", "-1.63428, -58.2458, 1.07736, 0.96", "-1.5331, -59.1357, 1.29024, 0.96", "-1.41513, -59.884, 1.4241, 0.96", "-0.961686, -61.9215, 1.67428, 0.88", "-0.581826, -63.1283, 1.77381, 0.88", "0.106848, -64.6958, 1.88159, 0.88", "1.00215, -66.2454, 1.99349, 0.81", "1.75749, -67.2926, 2.09182, 0.81", "2.3773, -68.0025, 2.19049, 0.81", "3.33098, -68.915, 2.36045, 0.88", "4.3256, -69.855, 2.58036, 1.03", "4.98113, -70.5507, 2.76911, 1.03", "5.77644, -71.6154, 3.05872, 0.81", "6.31802, -72.609, 3.31441, 1.4", "6.5671, -73.2294, 3.46286, 1.92", "7.03945, -74.8833, 3.77539, 1.4", "7.47585, -76.8323, 4.01128, 0.88", "7.74079, -78.2015, 4.10084, 0.88", "7.99733, -79.6294, 4.12168, 1.03", "8.15035, -80.425, 4.09939, 1.03", "8.42837, -81.7212, 4.01375, 0.81", "8.71726, -82.9167, 3.86468, 1.18", "8.79651, -83.2779, 3.80673, 1.18", "8.89122, -83.9842, 3.70282, 0.74", "8.86501, -84.9012, 3.63183, 0.44", "8.76578, -85.4457, 3.63131, 0.44", "8.52328, -86.2442, 3.6844, 0.66", "8.1396, -87.3034, 3.77981, 0.81", "7.78559, -88.2619, 3.86657, 0.96", "7.24141, -89.7616, 3.99666, 1.33", "6.8965, -90.753, 4.07657, 0.88", "6.58829, -91.7272, 4.16119, 1.11", "6.26799, -92.8689, 4.2871, 1.18", "5.98756, -93.9534, 4.43162, 1.18", "5.60728, -95.4679, 4.66417, 0.52", "5.24247, -97.0391, 4.9523, 0.52", "4.97941, -98.2112, 5.18564, 0.74", "4.74544, -99.3024, 5.41464, 0.96", "4.53881, -100.324, 5.61649, 1.62", "4.34565, -101.344, 5.79277, 1.62", "4.12714, -102.62, 5.96693, 1.33", "3.97487, -103.668, 6.05869, 0.44", "3.86734, -104.29, 6.08159, 0.59", "3.5962, -105.454, 6.10975, 0.59", "3.22015, -106.701, 6.15717, 0.88", "2.85691, -107.66, 6.21179, 1.25", "2.59437, -108.243, 6.26421, 2.21", "1.92991, -109.601, 6.44726, 1.84", "1.14855, -111.132, 6.71402, 1.33", "0.433441, -112.533, 7.02961, 0.66", "0.0854905, -113.269, 7.20777, 0.44", "-0.256598, -114.062, 7.40117, 0.44", "-0.580984, -114.911, 7.60177, 0.81", "-0.901303, -115.995, 7.8239, 1.11", "-1.16544, -117.206, 8.0161, 0.74", "-1.39891, -118.516, 8.18809, 0.37", "-1.5722, -119.528, 8.2928, 0.37", "-1.69172, -120.166, 8.35392, 0.74", "-1.89913, -121.132, 8.45319, 0.88", "-2.24012, -122.544, 8.63211, 0.44", "-2.43161, -123.198, 8.75295, 0.44", "-2.65737, -123.822, 8.94276, 0.59", "-2.96962, -124.509, 9.23573, 0.96", "-3.26618, -125.064, 9.53806, 1.25", "-3.59825, -125.642, 9.92031, 1.25", "-3.97671, -126.333, 10.4244, 0.81", "-4.19994, -126.886, 10.8016, 1.11", "-4.40393, -127.848, 11.2964, 0.22", "-4.43815, -128.294, 11.4355, 0.22", "-4.45213, -129.001, 11.5894, 0.22", "-4.46818, -129.641, 11.6894, 0.74", "-4.49908, -130.284, 11.7738, 1.18", "-4.61988, -131.75, 11.9727, 0.66", "-4.78285, -133.015, 12.1831, 0.37", "-5.05595, -134.121, 12.4291, 0.66", "-5.35591, -135.042, 12.7005, 0.66", "-5.60591, -135.743, 12.9584, 1.25", "-5.84153, -136.405, 13.2578, 2.06", "-6.15651, -137.378, 13.7778, 2.21", "-6.65484, -139.199, 14.8108, 1.03", "-6.89083, -140.243, 15.389, 0.59", "-7.08412, -141.332, 15.9224, 0.37", "-7.19049, -142.142, 16.2812, 0.66", "-7.27074, -143.126, 16.6771, 0.37", "-7.28878, -144.193, 17.0834, 0.29", "-7.25743, -144.889, 17.3232, 0.52", "-7.21979, -146.099, 17.7294, 0.22", "-7.18015, -146.715, 17.9985, 0.22", "-7.08757, -147.385, 18.3942, 0.29", "-6.94126, -147.996, 18.8901, 0.96", "-6.77017, -148.585, 19.4592, 1.77", "-6.60123, -149.167, 20.0201, 1.77", "-6.23834, -150.521, 21.1789, 0.29", "-6.10167, -151.117, 21.5627, 0.29", "-6.01362, -151.645, 21.7979, 0.29", "-5.92134, -152.456, 22.0165, 0.29", "-5.87309, -153.525, 22.1662, 0.29", "-5.92425, -154.78, 22.2171, 0.29", "-6.00618, -155.399, 22.209, 0.29", "-6.20931, -156.313, 22.2027, 0.29", "-6.5353, -157.382, 22.2425, 0.29", "-6.93751, -158.492, 22.3623, 0.29", "-7.21288, -159.185, 22.4736, 1.03", "-7.5565, -159.992, 22.6376, 1.92", "-8.13836, -161.349, 22.9438, 3.02", "-8.77687, -162.871, 23.3222, 2.36", "-9.48997, -164.622, 23.7945, 0.22", "-9.73298, -165.271, 23.9832, 0.22", "-10.0201, -166.15, 24.2527, 0.22", "-10.1288, -166.542, 24.3749, 0.52", "-10.2698, -167.185, 24.5881, 0.96", "-10.4513, -168.132, 24.9018, 0.44", "-10.6693, -169.316, 25.2774, 0.22", "-10.8055, -170.076, 25.5051, 0.37", "-10.9598, -170.971, 25.7547, 0.81", "-11.1101, -171.753, 25.9644, 0.96", "-11.3525, -172.814, 26.2204, 1.25", "-11.6031, -173.83, 26.4247, 0.66", "-11.7148, -174.306, 26.4975, 0.22", "-11.9262, -175.352, 26.6226, 0.22", "-12.0, -175.848, 26.6777, 0.44", "-12.1381, -177.119, 26.8268, 0.22", "-12.1842, -178.003, 26.9576, 0.22", "-12.2025, -179.066, 27.1568, 0.29", "-12.2201, -179.943, 27.3392, 0.52", "-12.2394, -180.851, 27.5314, 0.52", "-12.2852, -181.812, 27.7399, 0.52", "-12.3664, -182.719, 27.9412, 1.18", "-12.4883, -183.557, 28.1253, 2.43", "-12.7638, -184.992, 28.4419, 1.33", "-13.0193, -186.152, 28.6813, 0.59", "-13.2392, -187.099, 28.8606, 0.81", "-13.4295, -187.918, 29.0074, 0.15", "-13.559, -188.462, 29.1, 0.15", "-13.6135, -188.737, 29.1479, 0.15", "-13.6769, -189.08, 29.2207, 0.22", "-13.8268, -189.739, 29.3799, 0.37", "-14.0578, -190.503, 29.5439, 0.37", "-14.387, -191.319, 29.6723, 0.22", "-14.8405, -192.193, 29.7644, 0.22", "-15.1604, -192.694, 29.7881, 0.22", "-15.515, -193.157, 29.7943, 0.74", "-16.0871, -193.824, 29.7812, 1.77", "-16.7712, -194.578, 29.7473, 2.21", "-17.2779, -195.12, 29.7456, 2.21", "-18.3845, -196.283, 29.7966, 0.37", "-19.0729, -197.057, 29.873, 0.37", "-19.5958, -197.724, 29.9799, 0.22", "-20.0228, -198.353, 30.1363, 0.22", "-20.5061, -199.129, 30.3891, 0.22", "-20.7735, -199.583, 30.5743, 0.81", "-21.1641, -200.269, 30.9555, 1.25", "-21.6222, -201.045, 31.4957, 0.88", "-22.1612, -201.867, 32.1496, 0.22", "-22.4407, -202.284, 32.4871, 0.22", "-22.7461, -202.791, 32.8442, 0.22", "-23.0415, -203.419, 33.2343, 0.22", "-23.2722, -204.253, 33.6228, 0.44", "-23.3951, -205.052, 33.8874, 1.47", "-23.5028, -205.926, 34.0887, 1.47", "-23.6555, -207.027, 34.2746, 0.44", "-23.8087, -208.054, 34.4004, 0.96", "-24.0824, -209.551, 34.5291, 0.22", "-24.2488, -210.343, 34.5911, 0.22", "-24.5574, -211.545, 34.6979, 0.22", "-24.8456, -212.438, 34.7709, 0.22", "-25.0971, -213.092, 34.8175, 0.22", "-25.4439, -213.869, 34.8643, 0.22", "-25.9422, -214.903, 34.9437, 0.22", "-26.2364, -215.552, 35.0011, 0.81", "-26.6545, -216.556, 35.1023, 1.77", "-27.0356, -217.534, 35.2294, 1.18", "-27.7155, -219.417, 35.5186, 0.22", "-27.9141, -220.046, 35.64, 0.22", "-28.2158, -221.128, 35.904, 0.88", "-28.5307, -222.474, 36.3168, 0.15", "-28.6689, -223.261, 36.6341, 0.15", "-28.7299, -224.034, 36.9927, 0.29", "-28.7011, -224.817, 37.3971, 0.74", "-28.6461, -225.416, 37.7181, 1.4", "-28.5281, -226.313, 38.24, 0.59", "-28.3595, -227.504, 38.9388, 0.15", "-28.2381, -228.413, 39.4487, 0.15", "-28.1251, -229.235, 39.8922, 0.15", "-27.9965, -229.992, 40.256, 0.29", "-27.7987, -230.942, 40.6943, 0.96", "-27.5644, -231.987, 41.1697, 0.44", "-27.3741, -232.832, 41.5585, 0.22", "-27.1421, -233.848, 42.071, 0.22", "-26.8902, -234.822, 42.5791, 0.15", "-26.652, -235.655, 42.998, 0.15", "-26.4939, -236.216, 43.2667, 0.15", "-26.3678, -236.776, 43.5094, 0.29", "-26.2393, -237.772, 43.8724, 0.44", "-26.2042, -238.751, 44.1647, 0.44", "-26.2525, -240.103, 44.519, 0.44", "-26.3434, -241.223, 44.7417, 0.44", "-26.5057, -242.598, 44.9601, 0.88", "-26.6951, -243.668, 45.0947, 1.03", "-26.9531, -244.693, 45.2037, 0.37", "-27.2548, -245.546, 45.2986, 0.15", "-27.6455, -246.369, 45.4164, 0.15", "-28.0578, -247.067, 45.5392, 0.37", "-28.6706, -247.933, 45.7259, 0.22", "-29.181, -248.545, 45.8789, 0.81", "-30.1024, -249.485, 46.1432, 1.25", "-31.237, -250.456, 46.4477, 0.88", "-32.0072, -251.024, 46.6376, 0.22", "-32.7861, -251.544, 46.7901, 0.22", "-33.5669, -252.05, 46.8998, 0.74", "-34.6478, -252.79, 46.9759, 1.47", "-35.5111, -253.441, 46.9655, 0.37", "-36.7721, -254.524, 46.8089, 0.22", "-37.606, -255.374, 46.5893, 0.29", "-38.2622, -256.211, 46.306, 0.29", "-38.7122, -257.014, 45.985, 0.29", "-39.0384, -257.904, 45.6025, 0.37", "-39.3059, -259.089, 45.1254, 0.22", "-39.4552, -260.423, 44.6461, 0.22", "-39.4851, -261.076, 44.4437, 0.22", "-39.4885, -262.074, 44.2226, 0.37", "-39.487, -262.827, 44.1294, 0.59", "-39.5386, -264.623, 44.042, 0.66", "-39.6237, -265.861, 44.068, 0.88", "-39.7081, -266.692, 44.1665, 0.88", "-39.9119, -268.181, 44.4207, 0.52", "-40.1693, -269.795, 44.7578, 0.22", "-40.4107, -271.415, 45.1747, 0.22", "-40.505, -272.077, 45.3787, 0.81", "-40.7666, -273.836, 45.9698, 1.25", "-40.8918, -274.847, 46.3112, 1.03", "-40.9544, -275.5, 46.5249, 1.03", "-41.0447, -277.105, 47.0719, 0.22", "-41.0763, -278.291, 47.4749, 0.22", "-41.1174, -279.09, 47.7239, 0.22", "-41.2458, -280.389, 48.072, 0.22", "-41.3776, -281.129, 48.2671, 0.22", "-41.7489, -282.488, 48.5964, 0.22", "-42.1296, -283.393, 48.7861, 0.74", "-42.5869, -284.256, 48.9351, 1.11", "-42.9852, -284.896, 48.9953, 1.11", "-43.8715, -286.108, 48.9993, 0.74", "-44.5626, -286.979, 48.8905, 1.4", "-45.6617, -288.309, 48.5476, 0.66", "-46.4136, -289.238, 48.2253, 0.07", "-47.3252, -290.421, 47.7638, 0.07", "-47.9214, -291.226, 47.4335, 0.22", "-48.5657, -292.182, 47.0461, 0.22", "-48.9937, -292.86, 46.7983, 0.44", "-49.5018, -293.754, 46.532, 0.44", "-50.1648, -294.96, 46.3632, 0.44", "-50.587, -295.746, 46.4006, 0.22", "-51.1696, -296.848, 46.6046, 0.15", "-51.5315, -297.462, 46.8151, 0.37", "-51.8007, -297.84, 47.0111, 0.37", "-52.5098, -298.726, 47.607, 0.15", "-53.1864, -299.482, 48.2206, 0.15", "-53.4119, -299.705, 48.4231, 0.52", "-54.0603, -300.213, 48.9445, 1.03", "-54.9646, -300.833, 49.5896, 0.15", "-55.6488, -301.254, 49.9981, 0.15", "-56.3298, -301.649, 50.3104, 0.15", "-56.7784, -301.928, 50.4694, 0.59", "-57.7555, -302.605, 50.7558, 0.15", "-58.0782, -302.847, 50.8304, 0.15", "-58.5816, -303.282, 50.9237, 0.66", "-59.0082, -303.699, 50.9992, 0.81", "-60.1701, -304.991, 51.2012, 0.15", "-61.0733, -306.114, 51.3567, 0.15", "-61.8432, -307.179, 51.4876, 0.29", "-62.8966, -308.71, 51.6636, 0.22", "-63.7993, -310.095, 51.8145, 0.15", "-64.1654, -310.663, 51.8757, 0.66", "-64.7611, -311.537, 51.9523, 0.81", "-65.5261, -312.537, 52.0198, 0.44", "-66.0003, -313.128, 52.0546, 1.03", "-66.5221, -313.694, 52.0846, 1.25", "-67.9649, -315.101, 52.1401, 0.52", "-69.1006, -316.095, 52.167, 0.22", "-69.8362, -316.651, 52.1675, 0.07" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.30751, 25.4951, 0.166513, 0.96", "7.87988, 26.6039, -0.300916, 0.96", "8.64533, 27.1405, -0.525708, 1.03", "9.61902, 27.8244, -0.67362, 1.03", "10.4818, 28.4304, -0.804695, 1.62", "11.3179, 29.0176, -0.93171, 1.33", "12.4919, 29.8422, -1.11005, 1.03", "13.3771, 30.4718, -1.21495, 0.96", "15.0647, 31.6727, -1.33656, 1.62" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.30751, 25.4951, 0.166513, 0.88", "7.25877, 27.4248, 0.00383636, 0.88", "8.41058, 29.3478, -0.153098, 0.81", "8.97375, 30.2434, -0.271649, 0.66", "9.53596, 31.1716, -0.436734, 1.11", "10.2241, 32.4268, -0.696461, 0.74", "10.6867, 33.3598, -0.916518, 0.52", "11.2897, 34.6622, -1.37405, 0.22", "11.5289, 35.7056, -1.77817, 0.29", "11.4316, 36.445, -2.13189, 0.29", "11.0741, 37.2242, -2.60192, 0.66", "10.793, 37.6175, -2.8913, 0.66", "9.97593, 38.5475, -3.60386, 0.81", "8.92235, 39.7174, -4.50935, 1.18", "8.14446, 40.6975, -5.23718, 1.03", "7.40585, 41.8517, -6.07305, 0.81", "6.81818, 43.075, -6.92915, 1.11", "6.24518, 44.7481, -8.05957, 0.88", "5.93425, 46.1428, -8.98711, 0.66", "5.76695, 47.4292, -9.80127, 0.66", "5.64252, 48.5172, -10.4084, 0.66", "5.50837, 49.5127, -10.8976, 0.66", "5.31998, 50.7027, -11.4639, 0.81", "5.14712, 51.6107, -11.9263, 1.18", "4.91587, 52.6118, -12.429, 1.18", "4.3883, 54.8343, -13.4674, 0.52", "4.06108, 56.0088, -14.0114, 0.52", "3.81487, 56.9387, -14.4299, 0.52", "3.68594, 57.6087, -14.7048, 1.03", "3.60653, 58.8183, -15.1726, 1.03", "3.82145, 60.2838, -15.7359, 0.66", "4.21652, 71.8747, -21.8993, 0.66", "3.98689, 83.991, -26.8409, 0.66", "0.870228, 95.6998, -31.8993, 0.66", "-3.23135, 107.172, -36.8577, 0.66", "-7.39985, 118.072, -43.0329, 0.66", "-14.0546, 128.236, -48.3755, 0.66", "-19.9035, 137.921, -55.3763, 0.66", "-24.5267, 147.97, -62.7121, 0.66", "-30.0342, 158.61, -68.3213, 0.66", "-35.7209, 168.164, -75.6464, 0.66", "-38.7585, 177.864, -84.2172, 0.66", "-42.5447, 187.759, -92.2291, 0.66", "-46.5427, 197.446, -100.417, 0.66", "-50.3332, 206.617, -109.327, 0.66", "-55.2023, 214.454, -119.088, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "0.996118, 26.6634, 8.29045, 0.96", "0.123797, 27.2644, 8.58881, 0.96", "-0.709003, 27.6367, 8.918, 0.66", "-1.87824, 27.7657, 9.44845, 0.52", "-2.34259, 27.5195, 9.71582, 0.52", "-2.95193, 26.672, 10.1485, 0.52", "-3.25252, 26.2039, 10.3831, 0.88", "-3.86852, 25.0883, 10.9229, 1.11", "-4.43256, 24.0691, 11.432, 1.25", "-4.92571, 23.296, 11.8394, 1.25", "-6.00078, 21.9177, 12.6031, 0.66", "-6.64495, 21.2347, 12.9991, 0.96", "-7.36968, 20.5987, 13.418, 1.33", "-8.32763, 19.902, 13.954, 1.33", "-9.79054, 18.9936, 14.7765, 1.33", "-11.3903, 18.0713, 15.7182, 0.88", "-12.3574, 17.5603, 16.279, 0.88", "-13.4586, 16.9724, 16.909, 1.4", "-14.169, 16.5742, 17.3267, 1.55", "-15.258, 15.9161, 18.0078, 2.06", "-16.0662, 15.3281, 18.6321, 2.06" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "0.996118, 26.6634, 8.29045, 0.74", "0.578309, 25.5142, 8.13771, 0.74", "0.0238791, 24.049, 8.01587, 0.52", "-0.460221, 22.7681, 7.96025, 0.88", "-0.953586, 21.4013, 7.99453, 0.44", "-1.26441, 20.5204, 8.06762, 0.44", "-1.49731, 19.857, 8.14767, 0.37", "-1.89691, 18.6685, 8.37901, 0.88", "-2.23541, 17.4201, 8.68256, 0.44", "-2.54365, 16.0427, 9.032, 0.44", "-2.70831, 15.0545, 9.25432, 0.74", "-2.8007, 14.2761, 9.4158, 1.11", "-2.92558, 12.5784, 9.76225, 0.96", "-2.95309, 10.9988, 10.1047, 1.18", "-2.91538, 9.64632, 10.4371, 1.18", "-2.83565, 8.10442, 10.8625, 0.88", "-2.74172, 6.82629, 11.2644, 0.66", "-2.64545, 5.78448, 11.6491, 0.66", "-2.52907, 4.67448, 12.0922, 0.66", "-2.39096, 3.40506, 12.6232, 0.66", "-2.22943, 1.95578, 13.2079, 0.66", "-2.06708, -0.0819208, 13.906, 0.52", "-2.00711, -1.1789, 14.192, 0.52", "-1.93596, -3.06966, 14.5227, 0.52", "-1.91343, -4.36916, 14.633, 0.52", "-1.90103, -5.69349, 14.6484, 0.52", "-1.89287, -7.40458, 14.6031, 0.96", "-1.92023, -8.2738, 14.5705, 1.11", "-1.98066, -9.16526, 14.5393, 1.11", "-2.19892, -11.3675, 14.5091, 0.44", "-2.3401, -12.4109, 14.5031, 0.44", "-2.67745, -14.2792, 14.5579, 0.66", "-2.96042, -15.5525, 14.6237, 0.52", "-3.14164, -16.2102, 14.6529, 0.88", "-3.32308, -16.7864, 14.6718, 1.33", "-3.73928, -18.0676, 14.6692, 0.96", "-4.29514, -19.9014, 14.5989, 0.59", "-4.64715, -21.2064, 14.4884, 0.59", "-4.83084, -22.0516, 14.3982, 0.96", "-5.03983, -23.2361, 14.266, 0.52", "-5.25063, -24.8415, 14.096, 0.22", "-5.34751, -25.8733, 14.0077, 0.29", "-5.44518, -26.7957, 13.9533, 0.29", "-5.54779, -27.5041, 13.9433, 1.03", "-5.75283, -28.5767, 13.9604, 1.84", "-6.15753, -30.1515, 14.0511, 0.74", "-6.69738, -31.7826, 14.2266, 0.29", "-7.35082, -33.2792, 14.4914, 0.29", "-7.76671, -34.0797, 14.6799, 0.29", "-8.06634, -34.6109, 14.8206, 0.88", "-8.47577, -35.3143, 15.0188, 1.47", "-8.91571, -36.092, 15.2218, 0.88", "-9.90004, -38.06, 15.6433, 0.22", "-10.2078, -38.8145, 15.7569, 0.15", "-10.5229, -39.7644, 15.8704, 0.37", "-10.7863, -40.6183, 15.9766, 0.22", "-11.1956, -41.8976, 16.1657, 0.22", "-11.5832, -42.9607, 16.3636, 0.52", "-11.8388, -43.5555, 16.5098, 0.96", "-12.4576, -44.6514, 16.887, 1.62", "-13.3396, -45.9009, 17.4352, 0.96", "-14.3443, -47.1597, 18.0827, 0.59", "-15.1342, -48.0843, 18.6146, 0.88", "-15.8888, -48.9607, 19.1232, 1.55", "-16.5487, -49.7367, 19.5623, 1.55", "-17.5308, -50.9734, 20.19, 0.37", "-18.3153, -52.1111, 20.715, 0.22", "-18.7484, -52.8186, 21.0171, 0.44", "-19.3401, -53.891, 21.4395, 1.11", "-19.6078, -54.4525, 21.6269, 1.11", "-20.1417, -55.7474, 22.0024, 0.44", "-20.5758, -56.904, 22.2696, 0.22", "-20.9419, -57.9725, 22.4412, 0.29", "-21.1698, -58.6247, 22.5081, 0.15", "-21.5649, -59.7262, 22.5791, 0.29", "-21.726, -60.1658, 22.5965, 0.96", "-22.1194, -61.1958, 22.618, 1.62", "-22.7743, -62.938, 22.6177, 2.06", "-23.3863, -64.6431, 22.6259, 1.4", "-23.6715, -65.4677, 22.641, 0.59", "-24.1038, -66.7601, 22.6928, 0.22", "-24.3598, -67.6268, 22.7306, 0.22", "-24.5803, -68.5009, 22.777, 0.66", "-24.7905, -69.4649, 22.8264, 0.74", "-24.9859, -70.4994, 22.886, 0.22", "-25.2077, -71.6599, 22.9815, 0.15", "-25.3855, -72.6161, 23.0964, 0.22", "-25.4933, -73.2863, 23.1885, 0.66", "-25.6223, -74.1259, 23.325, 1.25", "-25.8134, -75.2839, 23.5433, 1.47", "-26.0852, -76.6745, 23.8416, 0.88", "-26.3692, -77.8576, 24.1223, 0.22", "-26.6078, -78.6734, 24.3316, 0.22", "-26.8746, -79.4591, 24.5408, 0.22", "-27.366, -80.6928, 24.8805, 0.37", "-27.8501, -81.7503, 25.1656, 0.37", "-28.3975, -82.8631, 25.4568, 0.52", "-28.7312, -83.5317, 25.6293, 0.22", "-29.0381, -84.1819, 25.7945, 0.37", "-29.2966, -84.8408, 25.94, 0.74", "-29.62, -86.0109, 26.1425, 0.22", "-29.8446, -87.2676, 26.3007, 0.22", "-29.9772, -88.2765, 26.3888, 0.29", "-30.0805, -89.0268, 26.4454, 0.52", "-30.238, -90.1066, 26.5168, 1.11", "-30.3849, -91.0595, 26.5702, 1.7", "-30.6127, -92.3772, 26.6316, 1.33", "-30.8825, -93.8707, 26.6719, 0.22", "-31.0643, -95.0539, 26.6879, 0.22", "-31.122, -95.4631, 26.6912, 0.22", "-31.1842, -95.9402, 26.6941, 0.29", "-31.2751, -96.6783, 26.7002, 0.52", "-31.3772, -97.6299, 26.7097, 0.22", "-31.4837, -98.4246, 26.7386, 0.22", "-31.6252, -99.0884, 26.7876, 0.22", "-31.8757, -99.7768, 26.8873, 0.81", "-32.1821, -100.34, 27.0163, 1.47", "-32.4703, -100.76, 27.1404, 1.47", "-33.2332, -101.744, 27.4718, 0.22", "-33.6582, -102.279, 27.6563, 0.22", "-34.1607, -102.957, 27.8723, 0.37", "-34.7751, -103.868, 28.1325, 0.44", "-35.1762, -104.509, 28.3008, 0.22", "-35.3357, -104.788, 28.3606, 0.22", "-35.5283, -105.152, 28.4241, 0.22", "-35.8914, -105.87, 28.5353, 0.22", "-36.1847, -106.448, 28.6233, 0.74", "-36.5433, -107.161, 28.7307, 1.47", "-37.0952, -108.175, 28.9223, 1.99", "-37.6441, -109.098, 29.1576, 1.77", "-38.5797, -110.523, 29.6148, 0.66", "-39.127, -111.282, 29.9079, 0.15", "-39.7082, -112.041, 30.2305, 0.15", "-40.3322, -112.848, 30.5784, 0.22", "-40.8813, -113.525, 30.8844, 0.22", "-41.4671, -114.217, 31.1683, 0.29", "-41.9758, -114.816, 31.3713, 0.81", "-42.672, -115.681, 31.5811, 1.47", "-43.4654, -116.741, 31.7207, 0.52", "-44.1493, -117.822, 31.7227, 0.22", "-44.6076, -118.693, 31.6459, 0.22", "-44.9033, -119.413, 31.5549, 0.22", "-45.0226, -119.783, 31.4949, 0.22", "-45.1763, -120.394, 31.3832, 0.29", "-45.3793, -121.322, 31.202, 0.74", "-45.533, -122.023, 31.0593, 1.03", "-45.9224, -123.508, 30.803, 0.37", "-46.2372, -124.519, 30.6576, 0.88", "-46.5667, -125.487, 30.5391, 1.18", "-46.8782, -126.366, 30.4433, 1.18", "-47.4467, -127.987, 30.3076, 0.29", "-47.9604, -129.384, 30.2418, 0.29", "-48.3271, -130.342, 30.2432, 0.37", "-48.5922, -131.012, 30.289, 0.88", "-48.8557, -131.696, 30.3714, 0.66", "-49.1604, -132.633, 30.5133, 0.22", "-49.3515, -133.398, 30.646, 0.22", "-49.5051, -134.245, 30.7765, 0.37", "-49.5837, -134.848, 30.8631, 0.66", "-49.685, -135.801, 31.0038, 1.11", "-49.8051, -136.934, 31.18, 0.66", "-49.8997, -137.65, 31.3013, 0.29", "-50.0406, -138.642, 31.4891, 0.22", "-50.153, -139.316, 31.6097, 0.29", "-50.3769, -140.498, 31.7705, 0.96", "-50.5605, -141.338, 31.8455, 1.03", "-50.8936, -142.782, 31.8993, 0.81", "-51.1574, -143.94, 31.8765, 0.29", "-51.3987, -144.897, 31.8249, 0.22", "-51.6708, -145.898, 31.7461, 0.29", "-51.9219, -146.77, 31.6565, 0.74", "-52.143, -147.537, 31.5727, 0.52", "-52.6567, -149.217, 31.4137, 0.29", "-53.1876, -150.78, 31.3464, 0.29", "-53.7211, -152.205, 31.4115, 0.29", "-54.0355, -152.977, 31.4962, 0.29", "-54.3637, -153.726, 31.6051, 1.03", "-54.6989, -154.45, 31.7209, 1.7", "-55.2866, -155.716, 31.933, 1.4", "-56.1623, -157.617, 32.2692, 0.44", "-56.6699, -158.698, 32.4937, 0.15", "-56.8956, -159.172, 32.599, 0.37", "-57.2632, -159.929, 32.7596, 0.59", "-57.6197, -160.672, 32.8923, 0.59", "-58.2941, -162.068, 33.0864, 0.22", "-58.829, -163.106, 33.2061, 0.22", "-59.2362, -163.872, 33.2974, 0.22", "-59.5586, -164.487, 33.3632, 0.88", "-59.8571, -165.109, 33.4449, 1.47", "-60.2676, -166.03, 33.5693, 1.84", "-61.3886, -168.746, 33.948, 0.22", "-61.5549, -169.169, 34.0004, 0.22", "-61.7693, -169.735, 34.0749, 0.22", "-62.2739, -170.991, 34.2465, 0.22", "-62.63, -171.781, 34.3648, 0.22", "-62.9415, -172.387, 34.4541, 0.74", "-63.543, -173.457, 34.5745, 1.33", "-64.3357, -174.739, 34.7125, 0.22", "-64.8214, -175.462, 34.7863, 0.22", "-65.3567, -176.274, 34.8757, 0.22", "-65.7147, -176.936, 34.9849, 0.15", "-65.9388, -177.475, 35.1028, 0.15", "-66.2046, -178.258, 35.3485, 0.37", "-66.3116, -178.647, 35.4954, 0.96", "-66.6618, -180.11, 36.1228, 2.14", "-67.0589, -181.812, 36.9293, 0.66", "-67.3601, -182.988, 37.5645, 0.15", "-67.6583, -183.985, 38.1889, 0.15", "-67.8549, -184.567, 38.5993, 0.44", "-68.0524, -185.1, 39.0019, 1.03", "-68.3941, -185.967, 39.6689, 1.55", "-68.8083, -187.038, 40.5132, 0.44", "-69.0871, -187.79, 41.0352, 0.22", "-69.2845, -188.385, 41.3802, 0.22", "-69.5872, -189.315, 41.8453, 0.22", "-69.8861, -190.2, 42.2277, 0.29", "-70.2547, -191.218, 42.5921, 0.29", "-70.7549, -192.496, 42.9634, 0.15", "-71.1578, -193.441, 43.1966, 0.22", "-71.6271, -194.411, 43.3746, 0.88", "-72.3601, -195.766, 43.5299, 0.74", "-72.8861, -196.633, 43.5747, 0.88", "-73.4606, -197.522, 43.5574, 1.77", "-74.133, -198.524, 43.4641, 2.29", "-75.1662, -200.053, 43.1871, 0.07", "-75.7901, -200.982, 42.9254, 0.15", "-76.1764, -201.564, 42.6935, 0.15", "-76.3792, -201.886, 42.5417, 0.15", "-76.7074, -202.511, 42.2176, 0.15", "-76.8828, -203.006, 41.9609, 0.15", "-77.0869, -203.897, 41.5835, 0.15", "-77.146, -204.229, 41.4637, 0.15", "-77.2896, -205.176, 41.1619, 0.66", "-77.5645, -206.903, 40.6787, 0.29", "-77.7596, -208.03, 40.4198, 0.22", "-77.9422, -209.065, 40.2264, 0.22", "-78.1264, -209.965, 40.1095, 0.22", "-78.2592, -210.426, 40.0841, 0.59", "-78.4486, -210.866, 40.1058, 0.74", "-78.7115, -211.298, 40.2074, 0.37", "-79.0983, -211.815, 40.4175, 0.15", "-79.8943, -212.783, 40.9156, 0.15", "-80.3447, -213.291, 41.2171, 0.22", "-80.8041, -213.807, 41.5279, 0.29", "-81.2664, -214.358, 41.8635, 0.22", "-81.8399, -215.121, 42.3042, 0.22", "-82.4489, -216.053, 42.7977, 0.29", "-82.8485, -216.761, 43.1482, 0.29", "-83.3574, -217.643, 43.5862, 0.22", "-83.8013, -218.335, 43.9402, 0.37", "-84.2558, -218.988, 44.2656, 0.74", "-84.5881, -219.456, 44.4941, 1.03", "-85.2496, -220.4, 44.9464, 0.22", "-85.8412, -221.285, 45.344, 0.22", "-86.3604, -222.063, 45.6698, 0.15", "-86.7598, -222.677, 45.8954, 0.15", "-87.0394, -223.145, 46.0475, 0.15", "-87.474, -223.964, 46.2507, 0.22", "-88.0633, -225.213, 46.478, 0.29", "-88.5059, -226.323, 46.6273, 0.74", "-88.9242, -227.583, 46.7775, 0.74", "-89.2191, -228.576, 46.8908, 0.37", "-89.5043, -229.638, 47.0058, 0.37", "-89.7015, -230.455, 47.1104, 1.4", "-89.9822, -231.628, 47.2886, 2.95", "-90.412, -233.273, 47.6028, 1.18", "-90.807, -234.554, 47.9076, 0.22", "-91.3009, -236.038, 48.3288, 0.29", "-91.6718, -237.137, 48.6688, 0.74", "-91.9555, -237.953, 48.9249, 1.33", "-92.4602, -239.184, 49.3321, 0.81", "-92.9495, -240.192, 49.625, 1.18", "-93.7799, -241.855, 50.014, 0.66", "-94.2918, -242.944, 50.1939, 0.29", "-94.4826, -243.371, 50.2427, 0.44", "-95.2149, -245.147, 50.3869, 0.29", "-95.742, -246.475, 50.4447, 0.81", "-96.54, -248.383, 50.4532, 0.22", "-96.9884, -249.246, 50.4155, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "45.4693, -15.0122, -38.712, 0.15", "51.6555, -19.4974, -43.0783, 0.15", "57.647, -24.48, -47.1011, 0.15", "63.1728, -29.1563, -52.1115, 0.15", "69.4637, -33.6551, -56.3032, 0.15", "75.2874, -37.145, -62.0029, 0.15", "80.897, -40.7227, -67.8596, 0.15", "86.6043, -45.2213, -72.8424, 0.15", "91.2507, -51.0394, -77.4174, 0.15", "97.3189, -55.8609, -81.5423, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "45.4693, -15.0122, -38.712, 0.59", "55.0981, -20.4286, -43.2594, 0.15", "64.4359, -26.159, -47.9962, 0.15", "74.4388, -31.4985, -51.7229, 0.15", "84.7392, -36.6031, -54.9419, 0.15", "94.4352, -41.6773, -59.7865, 0.15", "103.697, -47.3554, -64.7477, 0.15", "112.54, -54.0666, -68.9699, 0.15", "120.465, -61.3872, -73.9018, 0.15", "127.684, -69.5997, -78.3494, 0.15", "134.707, -78.6343, -80.8224, 0.15", "142.542, -86.7925, -84.1008, 0.15", "149.76, -94.9373, -88.6936, 0.15", "156.198, -103.437, -93.7667, 0.15", "163.807, -110.288, -99.8596, 0.15", "173.66, -114.277, -105.481, 0.15", "183.718, -118.34, -110.646, 0.15", "193.858, -120.68, -116.787, 0.15", "204.059, -123.742, -122.439, 0.15", "213.741, -124.969, -129.618, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "42.5099, -21.0119, -46.8131, 0.15", "44.6951, -25.6452, -54.3404, 0.15", "46.4651, -31.0955, -61.3497, 0.15", "48.438, -35.7029, -68.9461, 0.15", "48.9547, -42.0983, -75.2188, 0.15", "49.4288, -49.4253, -80.3055, 0.15", "49.6723, -56.3001, -86.0217, 0.15", "50.7287, -61.8402, -93.0734, 0.15", "53.2545, -67.8345, -99.3671, 0.15", "54.6021, -74.5734, -105.149, 0.15", "57.215, -81.3388, -110.517, 0.15", "59.1688, -88.2118, -115.981, 0.15", "60.4686, -94.4114, -122.38, 0.15", "59.8586, -100.609, -128.817, 0.15", "59.9817, -107.328, -134.725, 0.15", "62.0768, -114.31, -139.997, 0.15", "63.3083, -120.286, -146.63, 0.15", "65.9556, -126.209, -152.951, 0.15", "68.318, -132.844, -158.584, 0.15", "70.1231, -138.659, -165.263, 0.15", "72.1345, -145.004, -171.348, 0.15", "73.1507, -150.647, -178.315, 0.15", "73.8452, -157.047, -184.573, 0.15", "74.5127, -164.201, -189.9, 0.15", "74.6729, -170.518, -196.262, 0.15", "75.3808, -176.894, -202.545, 0.15", "75.0831, -183.912, -208.051, 0.15", "75.5678, -191.639, -212.481, 0.15", "77.864, -199.707, -215.685, 0.15", "81.4012, -207.761, -217.792, 0.15", "85.9859, -215.441, -219.495, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "42.5099, -21.0119, -46.8131, 0.59", "46.6062, -26.659, -52.1189, 0.15", "52.0469, -31.3222, -57.3077, 0.15", "57.773, -35.9526, -62.2305, 0.15", "61.623, -40.9291, -68.3577, 0.15", "64.5692, -45.9959, -74.8545, 0.15", "68.2387, -50.4731, -81.4793, 0.15", "72.7467, -54.2372, -88.1001, 0.15", "78.1775, -57.4927, -94.3435, 0.15", "84.0275, -61.5205, -99.6733, 0.15", "89.4127, -66.5574, -104.537, 0.15", "95.451, -72.0333, -107.982, 0.15", "100.502, -78.7026, -110.658, 0.15", "104.519, -86.3013, -112.199, 0.15", "107.374, -94.5301, -111.866, 0.15", "110.278, -102.726, -112.189, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-114.455, -155.828, -0.69212, 0.15", "-120.8, -163.063, 0.394593, 0.15", "-127.185, -170.299, -0.388278, 0.15", "-133.701, -177.462, -0.0335255, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-114.455, -155.828, -0.69212, 0.59", "-120.669, -163.251, 0.635208, 0.15", "-125.154, -171.601, 2.65031, 0.15", "-130.143, -179.515, 5.30706, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-80.1393, -167.318, -133.276, 0.15", "-82.029, -171.248, -135.722, 0.15", "-84.1928, -175.366, -137.489, 0.15", "-85.9243, -179.458, -139.754, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-80.1393, -167.318, -133.276, 0.59", "-82.9805, -175.668, -139.317, 0.15", "-83.7496, -184.758, -144.825, 0.15", "-85.9727, -193.46, -150.581, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "13.9355, -172.959, 47.9071, 0.15", "15.0214, -173.817, 47.9819, 0.15", "15.5219, -174.213, 48.0164, 0.37", "16.361, -174.875, 48.0742, 1.18", "16.9717, -175.358, 48.1163, 0.88", "18.0446, -176.206, 48.1903, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "13.9355, -172.959, 47.9071, 0.22", "14.0954, -173.913, 47.6835, 0.22", "14.2088, -174.622, 47.4847, 0.81", "14.2962, -175.311, 47.2892, 1.18", "14.3628, -176.357, 47.0039, 0.22", "14.3323, -177.247, 46.7746, 0.22", "14.235, -178.129, 46.5586, 0.29", "14.0749, -178.961, 46.3671, 0.66", "13.8294, -179.802, 46.1978, 0.81", "13.4855, -180.711, 46.046, 0.22", "12.948, -181.892, 45.9039, 0.22", "12.6695, -182.472, 45.8665, 0.29", "12.3968, -183.054, 45.8513, 0.96", "12.1476, -183.626, 45.8618, 1.7", "11.6743, -184.882, 45.9401, 0.52", "11.336, -186.009, 46.0682, 0.22", "11.2043, -186.602, 46.1676, 0.15", "11.0368, -187.546, 46.3741, 0.22", "10.9172, -188.374, 46.5529, 0.15", "10.8241, -189.078, 46.7041, 0.15", "10.7637, -189.556, 46.8023, 0.15", "10.7062, -190.092, 46.8983, 0.37", "10.6323, -190.786, 46.9773, 0.59", "10.4869, -192.068, 47.0183, 0.07", "10.3896, -192.796, 46.9847, 0.07", "10.2792, -193.589, 46.9129, 0.15", "10.2102, -194.133, 46.8525, 0.66", "10.1328, -194.805, 46.7757, 0.74", "10.0201, -195.935, 46.669, 0.15", "9.95447, -196.659, 46.6357, 0.22", "9.90375, -197.25, 46.6167, 0.15", "9.84287, -197.763, 46.606, 0.81", "9.75361, -198.304, 46.6015, 0.66", "9.56054, -199.218, 46.5845, 0.15", "9.37977, -199.948, 46.5506, 0.22", "9.12984, -200.857, 46.4877, 0.52", "8.87503, -201.587, 46.4352, 0.59", "8.51079, -202.543, 46.4074, 0.07", "8.21445, -203.299, 46.413, 0.22", "8.10456, -203.572, 46.4175, 0.22", "7.85101, -204.194, 46.4361, 0.96", "7.35876, -205.374, 46.4959, 0.07", "6.94831, -206.404, 46.6086, 0.07", "6.76236, -206.876, 46.7097, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-7.43104, -200.115, 29.4488, 0.15", "-7.58826, -208.686, 31.5169, 0.15", "-8.43341, -217.357, 32.8852, 0.15", "-9.38329, -225.989, 34.439, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-7.43104, -200.115, 29.4488, 0.59", "-8.13715, -209.057, 31.228, 0.15", "-9.12716, -218.133, 30.9089, 0.15", "-11.4217, -226.886, 32.4147, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "15.0647, 31.6727, -1.33656, 0.52", "16.046, 32.6125, -2.02432, 0.52", "17.105, 33.0793, -2.87937, 0.37", "17.8759, 33.2627, -3.48678, 0.37", "18.2716, 33.3464, -3.80599, 0.52", "19.0018, 33.545, -4.42618, 0.52", "20.118, 33.9377, -5.43125, 0.44", "20.6476, 34.1257, -5.96806, 0.44", "21.2334, 34.3961, -6.57018, 0.66", "21.73, 34.7291, -7.0309, 0.66", "22.3406, 35.2908, -7.51249, 0.88", "22.7248, 35.7503, -7.73629, 1.03", "23.509, 36.8232, -8.00853, 0.52", "24.1051, 37.6577, -8.13286, 0.52", "24.6241, 38.3734, -8.19482, 0.52", "25.1055, 38.9916, -8.21903, 0.52", "25.9181, 39.9741, -8.26524, 0.22", "26.6996, 40.8819, -8.29591, 0.44", "27.4762, 41.7802, -8.3165, 0.74", "28.2913, 42.7897, -8.36272, 1.18", "28.8679, 43.5491, -8.43018, 0.88", "29.7912, 44.7652, -8.59763, 0.29", "37.2345, 53.0948, -10.1335, 0.29", "44.8387, 61.1776, -12.2476, 0.29", "51.8442, 69.9504, -12.6986, 0.29", "59.0393, 78.4954, -11.3841, 0.29", "65.7966, 87.328, -9.87286, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "15.0647, 31.6727, -1.33656, 0.88", "16.325, 32.4873, -0.728518, 0.88", "17.1931, 33.0166, -0.370995, 0.81", "18.2323, 33.6453, -0.0548441, 0.96", "19.3404, 34.3105, 0.173877, 1.33", "20.6454, 35.1257, 0.362382, 1.33", "21.4025, 35.6127, 0.456096, 1.33", "22.2421, 36.1981, 0.523197, 1.33", "23.2953, 36.9554, 0.558201, 1.18", "24.2976, 37.6813, 0.558117, 1.03", "25.1902, 38.3064, 0.563129, 0.88", "26.2935, 39.0857, 0.592916, 1.4", "27.6293, 40.0676, 0.675498, 0.74", "28.717, 40.8835, 0.772585, 1.25", "29.8925, 41.7494, 0.889721, 1.77", "31.4326, 42.8903, 1.00258, 0.96", "32.7145, 43.8605, 1.02618, 0.59", "33.6537, 44.6092, 0.981346, 0.74", "34.3488, 45.1976, 0.909665, 0.96", "35.5454, 46.283, 0.763392, 1.11", "36.3921, 47.096, 0.67561, 1.4", "37.1452, 47.8461, 0.629977, 1.4", "38.4061, 49.0558, 0.622009, 0.96", "38.949, 49.5542, 0.671344, 0.96", "40.0907, 50.5441, 0.918545, 1.18", "41.0498, 51.3066, 1.2495, 1.18", "42.0701, 52.034, 1.65164, 1.03", "42.7949, 52.4982, 1.91801, 0.96", "43.7987, 53.0962, 2.21654, 0.81", "44.9192, 53.7421, 2.44865, 0.74", "46.1333, 54.4379, 2.58349, 0.96", "47.3895, 55.1866, 2.64287, 1.25", "48.7715, 56.0504, 2.64637, 1.55", "49.949, 56.8489, 2.61025, 0.88", "51.2396, 57.8383, 2.50066, 0.59", "51.9937, 58.5086, 2.41923, 0.81", "52.7673, 59.3196, 2.33279, 0.96", "53.5715, 60.2308, 2.26821, 1.33", "54.7443, 61.6977, 2.22532, 1.55", "55.7141, 63.0333, 2.203, 1.7", "56.5936, 64.3747, 2.16111, 1.62", "57.524, 65.9207, 2.07809, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-55.2023, 214.454, -119.088, 0.15", "-57.4159, 223.229, -125.057, 0.15", "-58.3637, 232.67, -130.209, 0.15", "-61.533, 241.717, -135.193, 0.15", "-64.6448, 251.012, -139.68, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-55.2023, 214.454, -119.088, 0.59", "-60.1615, 226.242, -123.686, 0.15", "-66.2385, 237.542, -128.331, 0.15", "-69.3604, 250.374, -131.086, 0.15", "-70.8817, 263.143, -135.075, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-16.0662, 15.3281, 18.6321, 0.81", "-14.0492, 15.5768, 19.7312, 0.81", "-12.8897, 15.8272, 20.2895, 0.44", "-11.1805, 16.3759, 21.1753, 0.59", "-9.78349, 16.9109, 21.9838, 0.59", "-8.62283, 17.3899, 22.7039, 0.88", "-7.7396, 17.7682, 23.2795, 1.11", "-6.62362, 18.28, 23.8527, 1.11", "-5.54246, 18.9919, 24.4519, 0.29", "-5.25346, 19.527, 24.8478, 0.29", "-5.44158, 20.0304, 25.2626, 0.29", "-5.6287, 20.3051, 25.5098, 0.29", "-5.81836, 20.5969, 25.8541, 0.29", "-6.03613, 21.0334, 26.5911, 0.59", "-6.0725, 21.371, 27.3807, 1.11", "-5.98635, 21.8321, 28.7263, 1.84", "-5.84639, 22.147, 29.9087, 1.84", "-5.61623, 22.4918, 31.4626, 0.96", "-5.43451, 22.6837, 32.5639, 0.74", "-5.20498, 22.8918, 33.7584, 0.74", "-4.97968, 23.1733, 35.1063, 0.74", "-4.85608, 23.4489, 36.1444, 1.11", "-4.72084, 23.8776, 37.3011, 1.47", "-4.56528, 24.3786, 38.4052, 1.47", "-4.32174, 25.0907, 39.792, 0.74", "-3.97069, 26.0654, 41.5508, 0.52", "-3.76142, 26.5991, 42.4918, 0.52", "-3.47506, 27.3193, 43.8285, 0.37", "-3.21133, 27.8024, 44.9975, 0.37", "-3.09622, 27.8468, 45.5118, 0.37", "-2.97931, 27.6951, 46.1533, 0.37", "-2.90234, 27.5278, 46.6254, 0.37", "-2.83537, 27.1844, 47.8386, 0.37", "-2.92431, 27.062, 48.825, 0.37", "-3.10974, 27.1656, 50.2516, 0.37", "-3.25776, 27.375, 51.2445, 0.37", "-3.45358, 27.6952, 52.2654, 0.59", "-3.68575, 28.1257, 53.316, 0.88", "-4.1112, 29.0633, 55.0476, 0.88", "-4.49789, 29.9253, 56.3812, 0.59", "-4.98958, 31.0743, 57.9062, 0.59", "-5.24405, 31.8122, 58.7904, 0.29", "-5.4328, 32.6203, 59.6698, 0.29", "-5.55007, 33.5689, 60.6137, 0.29", "-5.5678, 34.2778, 61.2657, 0.96", "-5.52131, 34.9588, 61.9097, 1.84", "-5.38216, 35.9964, 62.8849, 0.37", "-5.28903, 36.7931, 63.6653, 0.81", "-5.26809, 37.7337, 64.6593, 1.55", "-5.35006, 38.6617, 65.7645, 0.22", "-5.46153, 39.3587, 66.6317, 0.22", "-5.56602, 39.8433, 67.2866, 0.22", "-5.6325, 40.4413, 68.1121, 0.29", "-5.59668, 41.0119, 68.8666, 0.29", "-5.45303, 41.6659, 69.7059, 0.59", "-5.1286, 42.6039, 70.9385, 1.77", "-4.85039, 43.2604, 71.8081, 2.14", "-4.21683, 44.4587, 73.414, 0.29", "-3.86733, 45.0208, 74.1601, 0.29", "-3.52142, 45.5701, 74.8709, 0.29", "-3.31292, 45.8766, 75.2759, 0.29", "-3.0206, 46.2866, 75.8792, 0.88", "-2.65545, 46.771, 76.6809, 1.62", "-2.3399, 47.137, 77.3984, 1.62", "-1.88022, 47.6026, 78.3182, 2.21", "-0.62893, 48.6835, 80.4566, 0.22", "-0.0747549, 49.1163, 81.3027, 0.22", "0.318633, 49.3993, 81.8671, 0.22", "0.736071, 49.6831, 82.4256, 0.22", "1.55286, 50.2106, 83.4267, 0.44", "2.54559, 50.7817, 84.4838, 0.66", "2.70631, 50.8811, 84.6427, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-16.0662, 15.3281, 18.6321, 0.96", "-15.6326, 14.3299, 19.0694, 0.96", "-15.1622, 13.2882, 19.5051, 0.37", "-15.0642, 12.9062, 19.634, 0.29", "-14.9871, 12.2031, 19.8147, 0.22", "-14.9992, 11.7338, 19.9317, 0.22", "-15.082, 11.0053, 20.1144, 0.52", "-15.2609, 10.1268, 20.3374, 0.74", "-15.6847, 8.9286, 20.6259, 0.52", "-16.0412, 8.06367, 20.8237, 1.11", "-16.6007, 6.74301, 21.1249, 1.62", "-17.0906, 5.57027, 21.3799, 1.33", "-17.7433, 3.91183, 21.7287, 1.11", "-18.5931, 1.63806, 22.1989, 0.44", "-19.0213, 0.435068, 22.4364, 0.44", "-19.4665, -0.810707, 22.6649, 0.44", "-19.8288, -1.80276, 22.8185, 0.96", "-20.3621, -3.23299, 23.0278, 1.47", "-21.0251, -4.88074, 23.2565, 1.7", "-21.8365, -6.70011, 23.536, 1.7", "-22.6936, -8.29478, 23.8327, 1.7", "-23.6157, -9.76165, 24.149, 0.59", "-24.5537, -11.1059, 24.4951, 0.44", "-25.4469, -12.2958, 24.8595, 0.44", "-25.9788, -12.9871, 25.1273, 0.44", "-26.7538, -14.0308, 25.6539, 0.44", "-26.9886, -14.4032, 25.8889, 0.44", "-27.1751, -14.8981, 26.2028, 0.44", "-27.3186, -15.6898, 26.6427, 0.44", "-27.3962, -16.2164, 26.9092, 0.88", "-27.6429, -17.4538, 27.4697, 1.4", "-27.892, -18.2949, 27.8336, 1.4", "-28.4623, -19.6225, 28.4034, 0.66", "-28.9854, -20.5857, 28.8056, 0.22", "-29.5521, -21.5199, 29.2093, 0.22", "-29.8832, -22.0557, 29.4529, 1.03", "-30.4404, -22.978, 29.8871, 2.36", "-31.0373, -24.0642, 30.4189, 2.65", "-31.9634, -26.028, 31.4466, 0.81", "-32.2997, -27.1493, 31.9945, 0.22", "-32.3876, -27.7066, 32.2527, 0.22", "-32.4223, -28.2455, 32.4997, 0.66", "-32.408, -28.9175, 32.8098, 0.66", "-32.3676, -29.3406, 33.0157, 0.66", "-32.1711, -30.52, 33.6438, 0.22", "-32.1219, -31.1175, 33.9667, 0.22", "-32.1385, -31.3897, 34.1293, 0.22", "-32.2438, -31.8366, 34.4247, 0.22", "-32.4765, -32.4331, 34.8255, 0.22", "-32.6143, -32.6794, 34.9877, 0.22", "-33.0302, -33.2482, 35.3438, 0.22", "-33.2935, -33.5769, 35.5097, 0.29", "-33.9883, -34.42, 35.8527, 0.29", "-34.3258, -34.8654, 35.9994, 0.59", "-34.8918, -35.6986, 36.2283, 0.88", "-35.3819, -36.5397, 36.4442, 0.66", "-35.867, -37.6514, 36.7134, 0.22", "-36.0224, -38.1952, 36.8524, 0.22", "-36.2772, -39.5596, 37.2514, 0.59", "-36.414, -40.7195, 37.6272, 1.03", "-36.5133, -41.8752, 38.021, 1.62", "-36.6475, -43.4312, 38.5926, 0.59", "-36.8394, -45.0181, 39.1775, 0.22", "-37.0443, -46.1123, 39.5932, 0.52", "-37.2285, -46.7524, 39.8568, 1.25", "-37.6434, -47.7888, 40.3335, 2.14", "-38.1394, -48.7137, 40.7954, 1.33", "-38.9341, -49.9067, 41.4807, 0.52", "-39.3969, -50.5741, 41.8988, 0.22", "-39.8768, -51.3325, 42.4021, 0.44", "-40.2207, -51.9494, 42.8455, 0.44", "-40.4969, -52.6025, 43.3003, 0.22", "-40.7163, -53.2453, 43.6566, 0.22", "-40.9679, -54.0484, 44.0327, 0.22", "-41.1464, -54.6138, 44.2353, 0.52", "-41.415, -55.4042, 44.4532, 0.74", "-41.9564, -56.663, 44.7982, 0.81", "-42.5904, -57.7296, 45.2124, 0.22", "-43.1304, -58.3347, 45.5741, 0.22", "-43.4104, -58.5757, 45.7869, 0.22", "-43.8364, -58.9404, 46.1584, 0.66", "-44.5404, -59.5719, 46.8795, 1.33", "-45.0967, -60.1395, 47.5376, 1.55", "-45.6271, -60.8213, 48.2308, 0.88", "-46.2726, -61.7521, 48.9874, 0.15", "-46.9323, -62.7201, 49.6829, 0.29", "-47.2866, -63.2567, 50.0267, 0.88", "-47.663, -63.8097, 50.3202, 1.25", "-48.0781, -64.4011, 50.6055, 1.33", "-49.1974, -65.9466, 51.3385, 0.22", "-49.692, -66.6314, 51.6593, 0.74", "-50.1606, -67.2867, 51.9681, 1.25", "-50.8991, -68.433, 52.4726, 0.44", "-51.2964, -69.3246, 52.8295, 0.22", "-51.4404, -69.8729, 53.0175, 0.22", "-51.5289, -70.6583, 53.2227, 0.96", "-51.5539, -71.1641, 53.3415, 1.55", "-51.5702, -72.1941, 53.5746, 1.33", "-51.5746, -74.5497, 54.1395, 0.15", "-51.5968, -75.1146, 54.2753, 0.37", "-51.6941, -76.1623, 54.5518, 0.15", "-51.8428, -77.0406, 54.8358, 0.15", "-52.0386, -77.8369, 55.144, 0.52", "-52.3138, -78.6825, 55.5197, 1.18", "-52.7292, -79.6942, 56.0299, 2.06", "-53.2847, -80.9821, 56.7212, 0.96", "-53.8762, -82.3046, 57.4627, 0.22", "-54.3195, -83.2398, 57.9903, 0.22", "-54.8597, -84.3402, 58.629, 0.22", "-55.2102, -85.047, 59.0453, 0.22", "-55.731, -86.1005, 59.7016, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "110.278, -102.726, -112.189, 0.15", "116.414, -110.614, -118.777, 0.15", "121.596, -119.474, -124.795, 0.15", "126.89, -127.842, -131.434, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "110.278, -102.726, -112.189, 0.59", "116.569, -110.141, -117.8, 0.15", "122.951, -118.255, -122.217, 0.15", "126.908, -127.383, -127.12, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "65.7966, 87.328, -9.87286, 0.15", "73.9601, 94.6342, -13.3887, 0.15", "80.1178, 102.855, -18.3758, 0.15", "84.1501, 111.214, -24.9719, 0.15", "86.5884, 119.924, -31.8312, 0.15", "87.7381, 127.831, -39.968, 0.15", "90.4702, 135.56, -47.9222, 0.15", "93.5961, 143.642, -55.3284, 0.15", "96.6198, 151.663, -62.8496, 0.15", "99.5443, 160.84, -68.7972, 0.15", "100.015, 171.032, -73.5043, 0.15", "101.617, 181.953, -75.4211, 0.15", "104.312, 192.822, -76.223, 0.15", "105.018, 203.996, -75.5866, 0.15", "106.45, 215.034, -74.0056, 0.15", "109.126, 225.902, -72.8193, 0.15", "110.034, 237.053, -73.3337, 0.15", "111.002, 248.077, -75.0265, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "65.7966, 87.328, -9.87286, 0.59", "70.6394, 94.8614, -5.98065, 0.15", "74.5612, 102.782, -1.9004, 0.15", "78.246, 109.786, 3.90828, 0.15", "80.2711, 117.51, 9.52502, 0.15", "82.6089, 124.344, 16.1987, 0.15", "84.4972, 131.658, 22.4383, 0.15", "85.5534, 139.333, 28.3874, 0.15", "88.9326, 146.468, 34.2075, 0.15", "92.1343, 153.571, 40.1697, 0.15", "94.8645, 161.381, 45.3329, 0.15", "96.741, 169.876, 49.59, 0.15", "99.5373, 177.285, 55.3415, 0.15", "102.996, 182.951, 62.6981, 0.15", "107.206, 187.943, 70.1954, 0.15", "111.802, 193.147, 77.297, 0.15", "117.25, 199.336, 82.7207, 0.15", "124.094, 204.643, 87.5487, 0.15", "130.298, 210.74, 92.214, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "57.524, 65.9207, 2.07809, 0.66", "58.6583, 67.8814, 1.82003, 0.66", "59.3073, 68.8875, 1.66775, 0.66", "60.1067, 70.0925, 1.47675, 0.44", "60.6847, 70.9706, 1.35876, 0.37", "61.433, 72.143, 1.24267, 0.37", "62.0815, 73.1969, 1.19436, 0.37", "62.4055, 73.7017, 1.19917, 0.59", "62.9599, 74.642, 1.23556, 1.11", "63.7253, 76.1886, 1.31807, 0.37", "64.2153, 77.449, 1.48063, 0.59", "64.6943, 79.0176, 1.77893, 0.37", "65.1244, 80.5767, 2.15429, 0.44", "65.371, 81.4284, 2.3869, 0.22", "65.6334, 82.188, 2.61942, 0.22", "66.4674, 84.1645, 3.26784, 0.22", "67.0254, 85.1925, 3.60942, 0.22", "67.3924, 85.709, 3.77708, 0.44", "68.073, 86.4526, 4.00308, 0.66", "69.2085, 87.4609, 4.25703, 0.22", "69.7326, 87.8578, 4.32992, 0.22", "70.4355, 88.3291, 4.38712, 0.66", "71.034, 88.7154, 4.44998, 1.03", "72.3976, 89.6074, 4.60804, 0.22", "73.555, 90.4054, 4.74685, 0.66", "74.256, 90.9202, 4.84345, 0.81", "75.8324, 92.1072, 5.08024, 1.03", "77.0323, 93.0196, 5.27443, 0.74", "78.2141, 93.9139, 5.48565, 0.37", "79.0805, 94.531, 5.65065, 0.37", "79.8155, 95.0418, 5.79066, 0.29", "80.5839, 95.5672, 5.93254, 0.29", "81.2262, 96.0021, 6.03843, 0.66", "82.1692, 96.6308, 6.21105, 1.25", "83.8534, 97.727, 6.52337, 0.29", "84.3683, 98.0611, 6.6124, 0.29", "85.4467, 98.7977, 6.77523, 0.88", "86.4796, 99.5627, 6.9163, 0.52", "87.322, 100.229, 7.01703, 1.11", "88.4838, 101.198, 7.13385, 0.66", "89.5757, 102.147, 7.25515, 0.29", "90.3679, 102.809, 7.34929, 0.59", "91.797, 103.911, 7.52674, 0.22", "92.4686, 104.379, 7.61564, 0.59", "93.4061, 104.979, 7.73913, 1.18", "94.5757, 105.662, 7.91366, 0.22", "95.3606, 106.091, 8.03794, 0.22", "96.0207, 106.447, 8.14213, 0.22", "96.7319, 106.86, 8.27134, 0.22", "97.2069, 107.201, 8.35783, 0.22", "97.7455, 107.698, 8.44704, 0.37", "98.5331, 108.618, 8.57053, 0.37", "99.041, 109.308, 8.65991, 0.22", "99.6072, 110.163, 8.78095, 0.52", "100.35, 111.345, 8.98976, 0.52", "100.853, 112.116, 9.15775, 0.96", "101.37, 112.835, 9.34985, 1.77", "101.964, 113.577, 9.58066, 1.77", "102.821, 114.587, 9.90672, 0.22", "103.444, 115.289, 10.1278, 0.22", "104.053, 115.917, 10.3453, 0.22", "104.679, 116.532, 10.5522, 0.22", "105.27, 117.087, 10.7109, 0.22", "105.976, 117.775, 10.8598, 0.22", "106.725, 118.535, 10.959, 0.22", "107.11, 118.952, 10.9965, 0.66", "107.678, 119.588, 11.0508, 0.81", "108.51, 120.538, 11.1551, 0.22", "109.168, 121.265, 11.2691, 0.22", "109.718, 121.908, 11.3844, 0.74", "110.362, 122.761, 11.5313, 0.88", "110.722, 123.306, 11.6243, 1.11", "111.504, 124.677, 11.8807, 1.11", "112.133, 125.975, 12.1285, 0.37", "112.781, 127.447, 12.4381, 0.22", "113.155, 128.377, 12.6586, 0.29", "113.483, 129.228, 12.8917, 0.29", "113.827, 130.083, 13.1689, 0.37", "114.223, 130.845, 13.4946, 0.37", "114.6, 131.327, 13.7952, 0.22", "115.113, 131.765, 14.1714, 0.22", "115.9, 132.303, 14.7182, 0.22", "116.688, 132.765, 15.2247, 0.29", "117.866, 133.417, 15.957, 0.22", "118.574, 133.825, 16.3839, 1.4", "119.318, 134.318, 16.8335, 2.21", "119.825, 134.747, 17.1672, 1.7", "120.447, 135.424, 17.6562, 0.96", "121.115, 136.278, 18.3052, 0.96", "121.484, 136.774, 18.7196, 1.47", "121.877, 137.278, 19.1788, 1.47", "122.672, 138.225, 20.1012, 0.22", "123.194, 138.808, 20.6661, 0.22", "123.755, 139.433, 21.2257, 0.22", "124.332, 140.056, 21.7145, 0.22", "124.844, 140.581, 22.0868, 0.22", "125.249, 140.985, 22.3105, 0.88", "125.887, 141.606, 22.5753, 1.99", "126.818, 142.513, 22.8645, 1.55", "127.933, 143.643, 23.123, 0.22", "128.751, 144.486, 23.2894, 0.22", "129.853, 145.57, 23.4941, 0.29", "130.542, 146.215, 23.6112, 0.59", "131.647, 147.137, 23.7414, 0.96", "132.965, 148.104, 23.8371, 0.15", "134.086, 148.851, 23.904, 1.18", "135.535, 149.759, 23.9844, 1.18", "136.771, 150.496, 24.0577, 1.4", "138.558, 151.516, 24.1672, 0.22", "139.371, 151.98, 24.2135, 0.37", "140.226, 152.497, 24.273, 1.03", "140.609, 152.757, 24.3085, 0.88", "141.134, 153.153, 24.3922, 0.74", "141.857, 153.728, 24.5608, 0.96", "142.82, 154.642, 24.8795, 0.22", "143.684, 155.511, 25.1585, 0.96", "144.151, 155.962, 25.2854, 0.74", "144.97, 156.704, 25.5154, 0.22", "145.787, 157.415, 25.7487, 0.29", "147.005, 158.443, 26.0912, 0.29", "147.857, 159.121, 26.3063, 0.29", "149.204, 160.155, 26.583, 0.22", "149.879, 160.672, 26.7009, 0.66", "150.439, 161.128, 26.7881, 1.55", "150.796, 161.41, 26.8357, 1.55", "152.141, 162.417, 26.9721, 0.15", "153.195, 163.248, 27.0619, 0.15", "154.093, 164.007, 27.1138, 0.15", "154.86, 164.678, 27.1065, 0.15", "155.56, 165.324, 27.0812, 0.15", "156.101, 165.876, 27.0686, 0.88", "156.763, 166.614, 27.0581, 1.18", "157.544, 167.57, 27.0494, 1.18", "158.667, 168.96, 27.0407, 0.22", "159.86, 170.395, 27.045, 0.22", "160.595, 171.325, 27.0498, 1.18", "160.947, 171.777, 27.0577, 1.92", "161.519, 172.535, 27.0888, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "57.524, 65.9207, 2.07809, 0.44", "58.1512, 66.1086, 2.10834, 0.44", "58.8195, 66.3132, 2.14914, 0.44", "59.1533, 66.3969, 2.17678, 0.96", "59.902, 66.5402, 2.25416, 1.7", "60.5665, 66.6516, 2.32674, 1.99", "61.5662, 66.8011, 2.42793, 1.11", "62.2409, 66.8856, 2.47604, 0.37", "62.8653, 66.956, 2.48441, 0.37", "63.6329, 67.0406, 2.45611, 0.37", "64.116, 67.1021, 2.40011, 0.37", "64.5761, 67.1683, 2.31586, 0.44", "65.2453, 67.2677, 2.15069, 0.96", "66.0873, 67.398, 1.89706, 1.62", "66.9267, 67.5444, 1.65022, 1.18", "68.0428, 67.7557, 1.36025, 0.29", "68.6215, 67.8596, 1.24544, 0.44", "69.0547, 67.9323, 1.19218, 0.59", "69.7308, 68.0324, 1.15334, 0.29", "70.6424, 68.1679, 1.15721, 0.29", "71.6848, 68.3454, 1.21135, 0.59", "72.3982, 68.5124, 1.27293, 1.03", "73.2506, 68.7773, 1.35843, 1.7", "74.0553, 69.0774, 1.44511, 1.7", "75.0221, 69.4547, 1.55285, 0.96", "75.6043, 69.6726, 1.60284, 1.33", "76.6991, 70.072, 1.68883, 1.62", "77.5716, 70.393, 1.73576, 0.52", "78.2461, 70.642, 1.76231, 0.22", "78.9689, 70.9112, 1.78052, 0.22", "79.8829, 71.2423, 1.77344, 0.22", "80.5791, 71.5146, 1.74327, 0.74", "81.2086, 71.8011, 1.69384, 1.33", "81.7599, 72.122, 1.63002, 1.77", "82.5696, 72.708, 1.51286, 0.44", "83.3095, 73.352, 1.39478, 0.22", "83.8907, 73.9057, 1.30248, 0.66", "84.3488, 74.3303, 1.23087, 0.29", "84.7516, 74.677, 1.17449, 0.29", "85.0096, 74.8636, 1.14374, 0.22", "85.3657, 75.0764, 1.11785, 0.22", "85.8957, 75.337, 1.10339, 0.52", "86.5431, 75.5878, 1.09165, 0.88", "87.1149, 75.7685, 1.06734, 0.88", "87.7741, 75.9664, 1.02813, 0.22", "88.3624, 76.1601, 0.99852, 0.22", "88.6531, 76.2661, 0.984884, 0.52", "89.1715, 76.4677, 0.962674, 1.4", "89.8695, 76.7296, 0.91958, 1.18", "90.9458, 77.1102, 0.83266, 0.22", "91.7273, 77.3838, 0.737152, 0.59", "92.3057, 77.5821, 0.659384, 0.22", "92.9626, 77.8278, 0.56107, 0.88", "93.7994, 78.1916, 0.426624, 1.55", "94.1158, 78.3538, 0.367199, 1.55", "95.1754, 78.9886, 0.115779, 0.88", "95.6733, 79.3208, -0.0225637, 0.44", "96.1265, 79.6466, -0.152786, 0.22", "96.5852, 79.9685, -0.284938, 0.22", "97.0674, 80.2995, -0.420773, 0.37", "97.5965, 80.6378, -0.56394, 1.11", "98.2827, 81.0418, -0.734813, 1.18", "98.9212, 81.4071, -0.883312, 0.29", "99.803, 81.8943, -1.07264, 0.22", "100.288, 82.155, -1.16105, 0.22", "100.783, 82.428, -1.22784, 1.11", "101.136, 82.6367, -1.25264, 1.18", "101.848, 83.1064, -1.24588, 0.29", "102.509, 83.5419, -1.18933, 0.29", "102.926, 83.8006, -1.13095, 1.03", "103.488, 84.0975, -1.03466, 1.92", "103.885, 84.2779, -0.97993, 1.92", "105.166, 84.7797, -0.866053, 0.15", "105.84, 84.9983, -0.833227, 0.15", "106.24, 85.1195, -0.818002, 0.37", "106.807, 85.2951, -0.803095, 1.11", "107.763, 85.5943, -0.77723, 1.47", "108.692, 85.8672, -0.756123, 0.44", "109.672, 86.1322, -0.73699, 0.22", "110.45, 86.3315, -0.720002, 0.74", "111.071, 86.459, -0.69581, 0.88", "112.138, 86.5554, -0.649019, 0.22", "112.635, 86.5268, -0.619107, 0.22", "113.121, 86.4185, -0.599968, 0.44", "113.596, 86.2546, -0.592105, 0.81", "114.173, 86.0173, -0.590107, 1.03", "115.111, 85.6363, -0.589697, 0.81", "115.873, 85.35, -0.576701, 0.22", "116.42, 85.1914, -0.562684, 0.22", "116.878, 85.1192, -0.55366, 0.22", "117.771, 85.1049, -0.539306, 0.37", "118.759, 85.2172, -0.530999, 0.22", "119.121, 85.3037, -0.537696, 0.96", "119.779, 85.5233, -0.580707, 1.84", "121.029, 86.039, -0.735385, 0.22", "121.61, 86.3296, -0.846139, 0.22", "121.848, 86.4827, -0.908152, 0.22", "122.271, 86.8352, -1.03866, 0.22", "122.661, 87.2181, -1.1643, 0.44", "123.189, 87.7712, -1.31658, 1.18", "123.646, 88.2341, -1.42155, 1.62", "124.11, 88.6606, -1.49836, 1.7", "124.846, 89.3227, -1.56561, 1.25", "125.802, 90.1316, -1.59538, 0.29", "126.408, 90.5725, -1.5939, 1.03", "126.95, 90.9063, -1.59496, 1.47", "127.992, 91.446, -1.59727, 0.22", "128.837, 91.8186, -1.60979, 0.88", "129.478, 92.069, -1.62455, 0.44", "130.43, 92.4379, -1.65802, 0.22", "131.112, 92.7305, -1.68223, 0.22", "131.642, 92.9856, -1.69832, 1.03", "132.268, 93.3259, -1.70494, 1.47", "132.803, 93.6697, -1.70626, 1.25", "133.6, 94.2904, -1.71377, 0.52", "134.461, 95.0585, -1.73507, 0.37", "134.91, 95.4692, -1.76234, 1.03", "135.171, 95.7025, -1.79826, 1.4", "135.982, 96.3945, -1.96182, 0.96", "136.538, 96.8157, -2.11331, 0.81", "137.381, 97.3839, -2.38296, 0.22", "137.903, 97.6891, -2.56688, 0.22", "138.351, 97.918, -2.71167, 0.74", "138.689, 98.0816, -2.80568, 0.81", "139.337, 98.4105, -2.94866, 0.22", "139.652, 98.598, -3.00498, 0.22", "140.116, 98.913, -3.09361, 0.88", "140.82, 99.4558, -3.22547, 1.33", "141.388, 99.9534, -3.34744, 1.7", "142.091, 100.647, -3.5161, 1.47", "142.84, 101.472, -3.71541, 0.22", "143.282, 101.996, -3.84164, 0.22", "143.774, 102.656, -4.00281, 0.29", "144.082, 103.175, -4.12147, 0.15", "144.268, 103.578, -4.20293, 0.15", "144.477, 104.19, -4.30698, 0.59", "144.642, 104.786, -4.39534, 0.37", "144.857, 105.591, -4.53131, 0.22", "145.098, 106.446, -4.71107, 0.22", "145.233, 106.864, -4.81192, 1.11", "145.53, 107.715, -5.05436, 0.22", "145.758, 108.346, -5.26259, 0.07", "145.964, 108.948, -5.46109, 0.07", "146.085, 109.317, -5.56526, 0.88", "146.17, 109.624, -5.62644, 1.11", "146.279, 110.273, -5.67588, 0.81", "146.321, 110.965, -5.6276, 0.37", "146.325, 111.943, -5.4418, 0.15", "146.307, 112.75, -5.20373, 0.15", "146.275, 113.443, -4.93395, 0.15", "146.254, 114.084, -4.64279, 0.59", "146.222, 114.998, -4.1664, 0.29", "146.199, 115.482, -3.87791, 0.66", "146.178, 116.035, -3.51058, 1.47", "146.15, 116.893, -2.90707, 0.22", "146.14, 117.508, -2.47052, 0.15", "146.162, 118.165, -2.00318, 0.15", "146.192, 118.627, -1.67681, 0.44", "146.236, 119.056, -1.39399, 0.44", "146.33, 119.711, -0.980784, 0.22", "146.373, 120.005, -0.810771, 0.15", "146.406, 120.623, -0.469774, 0.15", "146.401, 120.866, -0.347924, 0.15", "146.342, 121.233, -0.179169, 0.44", "146.268, 121.517, -0.0507419, 0.44", "146.032, 122.343, 0.344467, 0.15", "145.889, 122.923, 0.644378, 0.22", "145.802, 123.315, 0.855007, 0.29", "145.751, 123.958, 1.19888, 0.29", "145.791, 124.461, 1.44965, 0.74", "145.943, 125.064, 1.72287, 0.66", "146.157, 125.6, 1.93705, 1.55", "146.298, 125.892, 2.03439, 1.55", "146.812, 126.8, 2.26661, 0.15", "147.225, 127.45, 2.39581, 0.22", "147.638, 128.068, 2.49305, 0.22", "147.909, 128.457, 2.53881, 0.22", "148.295, 128.978, 2.58378, 0.37", "149.083, 129.978, 2.64796, 0.22", "149.775, 130.862, 2.70887, 0.15", "150.088, 131.274, 2.75408, 1.18", "150.449, 131.784, 2.82956, 2.21", "150.575, 131.975, 2.86352, 2.21", "151.197, 133.082, 3.10076, 0.22", "151.563, 133.938, 3.30912, 0.22", "151.869, 134.889, 3.53355, 0.22", "151.952, 135.211, 3.60714, 0.66", "152.001, 135.449, 3.65466, 1.25", "152.145, 136.257, 3.78302, 1.62", "152.285, 137.248, 3.89153, 0.22", "152.429, 138.264, 3.92425, 0.22", "152.482, 138.66, 3.9141, 0.37", "152.57, 139.252, 3.88115, 0.88", "152.634, 139.71, 3.84928, 0.88", "152.704, 140.371, 3.78056, 0.22", "152.733, 141.129, 3.69559, 0.15", "152.716, 141.726, 3.64788, 0.15", "152.689, 142.021, 3.58427, 0.52", "152.612, 142.654, 3.40178, 0.88", "152.514, 143.385, 3.16003, 0.22", "152.449, 143.897, 2.96266, 0.22", "152.275, 145.135, 2.47705, 0.15", "152.042, 147.248, 1.68004, 0.22", "151.994, 147.905, 1.44285, 0.44", "151.985, 148.598, 1.21523, 0.22", "152.02, 149.332, 1.01014, 0.29", "152.079, 149.92, 0.881263, 0.22", "152.218, 150.92, 0.748919, 0.15", "152.299, 151.364, 0.773546, 0.15", "152.452, 152.149, 0.824095, 0.15", "152.547, 152.568, 0.860611, 0.29", "152.657, 152.98, 0.919068, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "2.70631, 50.8811, 84.6427, 0.07", "2.58545, 51.316, 84.7955, 0.07", "2.49248, 51.716, 84.9581, 0.07", "2.3764, 52.4687, 85.3133, 0.07", "2.31386, 53.1016, 85.6099, 0.29", "2.2915, 53.5986, 85.8432, 0.07", "2.30289, 54.4046, 86.2126, 0.07", "2.34135, 54.8014, 86.3993, 0.52", "2.4848, 55.7945, 86.8777, 1.03", "2.67032, 56.8639, 87.4217, 0.15", "2.74277, 57.2976, 87.6462, 0.15", "2.81644, 57.8415, 87.922, 0.15", "2.8648, 58.3432, 88.153, 0.15", "2.8753, 58.794, 88.3664, 0.07", "2.85655, 59.1454, 88.5443, 0.07", "2.83028, 59.5949, 88.7842, 0.44", "2.81853, 59.8503, 88.9293, 0.74", "2.82657, 60.1304, 89.101, 0.74", "2.94449, 61.034, 89.6835, 0.15", "3.05803, 61.5783, 90.0401, 0.15", "3.2263, 62.2442, 90.4724, 0.37", "3.40058, 62.8648, 90.8742, 1.7", "3.59093, 63.5533, 91.3014, 1.03", "3.85771, 64.4824, 91.8601, 0.15", "4.11307, 65.2927, 92.3471, 0.15", "4.21822, 65.625, 92.5427, 0.66", "4.35762, 66.0445, 92.7942, 1.03", "4.61682, 66.7516, 93.199, 0.15", "4.95696, 67.6, 93.6734, 0.15", "5.22231, 68.1667, 94.0086, 0.15", "5.45659, 68.6189, 94.2775, 0.29", "5.70782, 69.098, 94.5541, 0.29", "5.91402, 69.5547, 94.8008, 0.74", "6.10896, 70.102, 95.0929, 0.81", "6.20628, 70.4836, 95.2899, 0.81", "6.3756, 71.551, 95.8244, 0.15", "6.40276, 72.0943, 96.1254, 0.74", "6.31547, 73.2722, 96.8311, 0.15", "6.17916, 73.8404, 97.2145, 0.15", "5.9297, 74.3379, 97.5889, 0.15", "5.67071, 74.6867, 97.8727, 0.29", "5.12508, 75.215, 98.3658, 0.15", "4.93383, 75.3636, 98.5158, 0.52", "4.26035, 75.7724, 99.0105, 1.4", "2.99877, 76.4326, 99.9082, 0.15", "2.65101, 76.5792, 100.146, 0.15", "2.47874, 76.6336, 100.27, 0.15", "1.72646, 76.7813, 100.835, 0.81", "0.910118, 76.8356, 101.472, 0.15", "0.625737, 76.8104, 101.701, 0.15", "0.211155, 76.7328, 102.031, 1.18", "-0.973756, 76.4742, 102.948, 0.07", "-1.7553, 76.2883, 103.523, 0.07", "-2.12216, 76.2031, 103.773, 0.59", "-2.5057, 76.137, 104.011, 1.77", "-3.8044, 75.9581, 104.765, 0.07", "-4.40007, 75.8883, 105.097, 0.07", "-4.795, 75.8433, 105.293, 0.37", "-5.19311, 75.8066, 105.472, 0.52", "-6.10302, 75.7114, 105.877, 0.07", "-6.97044, 75.6258, 106.243, 0.07", "-7.32806, 75.5841, 106.379, 0.07", "-7.62263, 75.5416, 106.488, 0.29", "-8.29434, 75.4093, 106.739, 0.66", "-9.07774, 75.1873, 107.039, 0.07", "-9.65593, 74.9884, 107.255, 0.29", "-10.173, 74.8016, 107.45, 0.88", "-11.2589, 74.4194, 107.902, 0.15", "-11.8107, 74.2261, 108.157, 0.52", "-12.9638, 73.8218, 108.714, 0.07", "-13.3366, 73.6969, 108.895, 0.59", "-13.8444, 73.5269, 109.148, 1.47", "-15.0415, 73.1407, 109.76, 0.07", "-15.4925, 72.9968, 109.997, 0.07", "-16.1768, 72.7784, 110.362, 0.07", "-16.3876, 72.7125, 110.472, 0.37", "-16.8343, 72.5814, 110.688, 0.81", "-17.6777, 72.3544, 111.068, 0.07", "-18.3519, 72.1945, 111.337, 0.07", "-18.698, 72.144, 111.466, 0.44", "-19.0591, 72.1183, 111.601, 0.88", "-20.0585, 72.1187, 111.956, 0.15", "-20.5946, 72.1568, 112.132, 0.37", "-20.8924, 72.1938, 112.218, 0.37", "-22.125, 72.3513, 112.523, 0.15", "-22.5301, 72.399, 112.616, 0.15", "-23.1426, 72.4783, 112.748, 0.37", "-24.2484, 72.6163, 112.955, 0.07", "-24.9592, 72.7129, 113.083, 0.29", "-25.6025, 72.8069, 113.203, 0.07", "-26.2396, 72.9103, 113.323, 0.07", "-27.6031, 73.1465, 113.581, 0.07", "-29.4113, 73.4717, 113.928, 0.07", "-29.9931, 73.5855, 114.042, 0.07", "-30.8256, 73.7596, 114.217, 0.07", "-31.3229, 73.8727, 114.333, 0.59", "-32.0724, 74.0395, 114.51, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "2.70631, 50.8811, 84.6427, 0.37", "3.77388, 50.1208, 85.0331, 0.37", "4.50689, 49.6623, 85.2361, 0.37", "5.02893, 49.3779, 85.3509, 0.59", "5.93335, 48.9138, 85.4621, 0.22", "6.59027, 48.5695, 85.4976, 0.22", "7.04906, 48.2926, 85.501, 0.15", "7.49508, 48.0104, 85.5173, 0.15", "8.08213, 47.6019, 85.5044, 0.15", "8.60255, 47.1791, 85.4768, 0.59", "8.93876, 46.824, 85.4474, 0.88", "9.68588, 45.8306, 85.3765, 0.15", "10.1745, 45.061, 85.3773, 0.15", "10.416, 44.6126, 85.3861, 0.44", "10.6189, 44.1688, 85.4015, 0.81", "10.8939, 43.491, 85.4353, 0.07", "11.2041, 42.6551, 85.4618, 0.22", "11.5071, 41.7764, 85.466, 0.22", "11.9137, 40.546, 85.4346, 0.07", "12.2283, 39.5277, 85.3959, 0.07", "12.526, 38.5648, 85.3463, 0.07", "12.695, 38.0292, 85.299, 0.29", "13.1066, 36.7339, 85.1642, 0.07", "13.2967, 36.1312, 85.0838, 0.88", "13.5408, 35.3732, 84.9851, 1.25", "13.7082, 34.8836, 84.9131, 1.25", "14.2695, 33.3106, 84.6577, 0.07", "14.6398, 32.2729, 84.4786, 0.07", "14.8474, 31.6913, 84.3676, 0.07", "14.9679, 31.3497, 84.3008, 0.52", "15.2794, 30.4342, 84.1146, 0.66", "15.4233, 29.9561, 84.0164, 0.22", "15.5941, 29.3252, 83.8784, 0.52", "15.7161, 28.794, 83.7539, 0.29", "15.9163, 27.7862, 83.5322, 0.07", "16.0622, 26.9042, 83.3516, 0.07", "16.1552, 26.2516, 83.2341, 0.22", "16.2101, 25.7947, 83.1617, 0.22", "16.3521, 24.5222, 82.9706, 0.07", "16.3845, 24.1875, 82.9245, 0.37", "16.4186, 23.7967, 82.8762, 0.59", "16.4906, 22.8799, 82.7777, 0.07", "16.5467, 22.1334, 82.7092, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-55.731, -86.1005, 59.7016, 0.15", "-57.2852, -86.4191, 59.7613, 0.15", "-58.8054, -86.7119, 59.7897, 0.15", "-60.1945, -86.9689, 59.7808, 0.15", "-61.6187, -87.2272, 59.7562, 0.37", "-63.19, -87.5027, 59.7147, 0.15", "-64.77, -87.7668, 59.6628, 0.07", "-65.5678, -87.8994, 59.6402, 0.22", "-67.9454, -88.2933, 59.4676, 0.15", "-68.1126, -88.3161, 59.4507, 0.59", "-69.1749, -88.444, 59.343, 1.11", "-69.6553, -88.5028, 59.2943, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-55.731, -86.1005, 59.7016, 0.59", "-56.1409, -87.2401, 60.0829, 0.59", "-56.4568, -88.066, 60.372, 0.96", "-56.8655, -89.361, 60.8229, 1.47", "-57.0752, -90.2341, 61.1102, 1.47", "-57.3555, -91.8098, 61.6149, 0.22", "-57.479, -92.3978, 61.8146, 0.15", "-57.6508, -92.9477, 62.0323, 0.15", "-57.9913, -93.8753, 62.4445, 0.15", "-58.3042, -94.6588, 62.8126, 0.37", "-58.6582, -95.4456, 63.2506, 0.37", "-59.3541, -96.827, 64.1856, 0.22", "-59.7711, -97.6115, 64.8019, 0.22", "-60.0198, -98.0745, 65.1879, 0.96", "-60.6396, -99.2272, 66.2127, 2.06", "-61.2163, -100.334, 67.2554, 1.11", "-61.9502, -101.81, 68.6913, 0.22", "-62.4557, -102.954, 69.8181, 0.22", "-62.6877, -103.462, 70.3109, 0.22", "-62.8871, -103.865, 70.696, 0.22", "-63.0788, -104.209, 71.0269, 0.22", "-63.4169, -104.709, 71.4561, 0.22", "-63.8751, -105.247, 71.8603, 0.22", "-64.648, -106.061, 72.4306, 0.22", "-65.3116, -106.784, 72.8935, 0.22", "-65.7277, -107.276, 73.1766, 0.66", "-66.5149, -108.321, 73.7388, 1.11", "-67.6175, -109.897, 74.5723, 0.29", "-68.5728, -111.271, 75.286, 0.22", "-69.3739, -112.418, 75.8857, 0.22", "-69.7613, -112.94, 76.1442, 0.29", "-70.7455, -114.235, 76.757, 0.22", "-71.1928, -114.819, 77.029, 0.96", "-71.9652, -115.807, 77.4792, 1.84", "-73.278, -117.424, 78.2168, 0.29", "-74.3785, -118.669, 78.8406, 0.22", "-75.1136, -119.47, 79.2771, 0.22", "-75.5728, -119.975, 79.5625, 0.22", "-75.9794, -120.487, 79.8474, 0.37", "-76.5696, -121.405, 80.3306, 0.52", "-77.1368, -122.546, 80.828, 0.29", "-77.5491, -123.584, 81.2427, 0.29", "-77.77, -124.206, 81.4497, 0.29", "-78.1682, -125.441, 81.8266, 0.44", "-78.5698, -126.904, 82.2555, 0.52", "-79.0525, -128.969, 82.8211, 0.15", "-79.2675, -130.01, 83.0964, 0.59", "-79.647, -131.703, 83.5776, 1.7", "-80.1877, -133.756, 84.2364, 0.15", "-80.4827, -134.708, 84.6016, 0.44", "-80.6868, -135.355, 84.8804, 0.44", "-80.9899, -136.268, 85.3286, 0.07", "-81.2759, -137.053, 85.7326, 0.07", "-81.5437, -137.636, 86.0539, 0.07", "-81.9814, -138.412, 86.4852, 0.29", "-82.7843, -139.678, 87.1716, 0.52", "-83.3727, -140.577, 87.6661, 0.22", "-83.8767, -141.331, 88.0871, 0.22", "-84.4432, -142.157, 88.5659, 0.37", "-85.0085, -142.938, 89.068, 0.74", "-85.89, -144.024, 89.8468, 1.33", "-86.8626, -145.057, 90.6696, 0.22", "-87.6076, -145.777, 91.2673, 0.15", "-88.1919, -146.308, 91.7264, 0.29", "-88.9967, -147.028, 92.3703, 0.15", "-89.6521, -147.583, 92.8692, 0.59", "-90.3575, -148.125, 93.402, 0.74", "-91.4194, -148.851, 94.1386, 0.07", "-92.4211, -149.504, 94.822, 0.15", "-93.1363, -149.962, 95.305, 0.15", "-93.724, -150.338, 95.6929, 0.15", "-94.3991, -150.761, 96.1054, 0.15", "-95.3586, -151.352, 96.6452, 0.29", "-96.1525, -151.81, 97.0437, 0.74", "-97.3488, -152.482, 97.5775, 1.03", "-98.5371, -153.161, 98.0658, 0.29", "-100.201, -154.134, 98.7645, 0.22", "-101.232, -154.762, 99.176, 0.88", "-102.394, -155.451, 99.6429, 1.33", "-103.419, -156.033, 100.042, 1.47", "-105.38, -157.085, 100.801, 0.22", "-106.406, -157.598, 101.191, 0.22", "-107.598, -158.178, 101.666, 1.03", "-108.873, -158.777, 102.168, 1.55", "-110.707, -159.652, 102.898, 0.74", "-112.494, -160.579, 103.678, 0.22", "-113.402, -161.12, 104.095, 0.22", "-114.224, -161.651, 104.468, 0.22", "-115.166, -162.323, 104.923, 0.15", "-116.016, -163.054, 105.359, 0.37", "-117.04, -164.14, 105.959, 0.15", "-117.71, -165.027, 106.399, 0.15", "-118.518, -166.277, 107.016, 0.22", "-118.863, -166.865, 107.296, 0.15", "-119.357, -167.786, 107.738, 0.15", "-119.626, -168.374, 108.03, 0.74", "-119.896, -169.102, 108.402, 0.88", "-120.313, -170.658, 109.267, 0.15", "-120.459, -171.257, 109.611, 0.22", "-120.739, -171.932, 110.05, 0.22", "-121.367, -172.976, 110.814, 0.22", "-121.576, -173.257, 111.038, 0.22", "-122.107, -173.866, 111.548, 0.88", "-123.064, -174.777, 112.309, 1.84", "-124.639, -176.041, 113.368, 0.15", "-125.603, -176.763, 113.909, 0.15", "-126.337, -177.286, 114.23, 0.29", "-127.396, -178.093, 114.705, 0.74", "-128.307, -178.852, 115.145, 1.11", "-129.137, -179.631, 115.598, 0.52", "-130.261, -180.759, 116.269, 0.22", "-132.066, -182.431, 117.379, 0.29", "-133.515, -183.694, 118.337, 0.15", "-134.32, -184.365, 118.913, 0.37", "-135.365, -185.18, 119.722, 1.18", "-136.78, -186.255, 120.949, 0.44", "-138.018, -187.106, 122.139, 0.29", "-138.889, -187.679, 123.046, 0.15", "-139.6, -188.111, 123.753, 0.88", "-140.649, -188.737, 124.806, 1.03", "-142.094, -189.586, 126.342, 0.22", "-143.405, -190.39, 127.93, 0.22", "-144.016, -190.769, 128.729, 0.59", "-144.726, -191.191, 129.672, 0.96", "-145.72, -191.695, 130.984, 0.37", "-147.052, -192.231, 132.738, 0.15", "-148.137, -192.521, 134.132, 0.59", "-148.796, -192.639, 134.975, 1.77", "-150.463, -192.844, 137.109, 0.22", "-151.506, -192.95, 138.473, 0.22", "-152.278, -193.01, 139.438, 0.37", "-153.067, -193.085, 140.338, 0.37", "-153.699, -193.177, 141.025, 0.37", "-154.54, -193.329, 141.972, 0.81", "-155.234, -193.531, 142.846, 0.81", "-156.252, -194.081, 144.321, 0.29", "-156.782, -194.53, 145.279, 0.29", "-157.029, -194.937, 146.061, 0.29", "-157.071, -195.151, 146.48, 0.29", "-157.018, -195.942, 148.181, 0.29", "-156.94, -196.266, 148.879, 0.44", "-156.769, -196.87, 150.169, 0.44", "-156.625, -197.703, 151.967, 0.81", "-156.645, -198.393, 153.553, 0.81", "-156.789, -198.925, 154.803, 0.81", "-156.964, -199.218, 155.537, 0.22", "-157.518, -199.873, 157.246, 0.22", "-158.321, -200.587, 159.133, 0.22", "-159.165, -201.235, 160.773, 0.81", "-160.031, -201.873, 162.251, 0.52", "-161.436, -202.906, 164.318, 0.22", "-162.087, -203.386, 165.136, 0.22", "-162.623, -203.778, 165.656, 0.52", "-163.663, -204.51, 166.338, 0.15", "-164.191, -204.86, 166.534, 0.59", "-165.636, -205.796, 166.789, 0.15", "-166.701, -206.486, 166.742, 0.37", "-167.896, -207.244, 166.566, 0.15", "-168.982, -207.853, 166.309, 0.37", "-169.689, -208.137, 166.042, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "161.519, 172.535, 27.0888, 0.96", "162.43, 173.294, 27.1797, 0.96", "163.065, 173.865, 27.2183, 1.25", "163.645, 174.434, 27.227, 0.66", "164.002, 174.806, 27.2202, 0.22", "164.433, 175.263, 27.2064, 0.15", "164.71, 175.551, 27.201, 0.37", "165.275, 176.163, 27.1749, 0.15", "165.681, 176.586, 27.1662, 0.37", "165.989, 176.882, 27.1733, 0.88", "166.368, 177.192, 27.1861, 0.88", "167.274, 177.772, 27.1951, 0.22", "167.9, 178.136, 27.2085, 0.22", "168.537, 178.448, 27.2379, 0.22", "168.979, 178.633, 27.2625, 0.22", "169.933, 178.978, 27.3056, 1.25", "170.952, 179.276, 27.3148, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "161.519, 172.535, 27.0888, 0.29", "161.645, 173.862, 27.3691, 0.29", "161.826, 174.506, 27.4759, 0.22", "162.027, 175.034, 27.5415, 0.66", "162.36, 175.811, 27.6114, 0.22", "162.711, 176.565, 27.6632, 0.15", "163.035, 177.269, 27.6991, 0.15", "163.48, 178.154, 27.697, 0.15", "163.973, 179.083, 27.6513, 0.22", "164.441, 179.921, 27.5771, 0.29", "164.849, 180.614, 27.4956, 0.22", "165.308, 181.309, 27.3955, 0.29", "166.041, 182.222, 27.2521, 0.22", "166.751, 182.996, 27.126, 0.66", "167.183, 183.435, 27.057, 1.11", "167.725, 183.971, 26.97, 1.18", "168.478, 184.72, 26.8361, 0.37", "169.3, 185.547, 26.6864, 0.37", "169.946, 186.285, 26.5632, 0.22", "170.488, 187.108, 26.454, 0.22", "170.813, 187.735, 26.3675, 0.22", "171.035, 188.266, 26.2997, 0.59", "171.17, 188.658, 26.2644, 1.03", "171.437, 189.541, 26.2159, 1.18", "171.95, 191.216, 26.219, 0.44", "172.186, 191.933, 26.2421, 0.88", "172.451, 192.744, 26.2994, 1.7", "172.757, 193.685, 26.3972, 2.29", "173.035, 194.531, 26.5052, 2.29", "173.245, 195.155, 26.6153, 1.99" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "173.245, 195.155, 26.6153, 0.22", "174.837, 197.53, 26.5145, 0.22", "175.585, 198.645, 26.4671, 0.22", "176.375, 199.824, 26.417, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "173.245, 195.155, 26.6153, 0.29", "174.352, 195.883, 26.8137, 0.29", "175.088, 196.367, 26.9455, 0.29", "175.829, 196.854, 27.0782, 0.29", "176.455, 197.266, 27.1905, 0.52", "177.094, 197.686, 27.3049, 0.52", "178.151, 198.381, 27.4942, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "axon_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "axon_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_35", "dend_35", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_BTC_bc69dce0ae_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_35
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_58, dend_35, dend_0, axon_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, axon_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_58(0), soma_0(0.45000018730548563)
    connect dend_35(0), soma_0(0.45000018730548563)
    connect dend_0(0), soma_0(0.45000018730548563)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.16881, -12.804, 0.0, 3.44428 ) }
    soma_0 { pt3dadd( 1.99522, -11.5105, 0.0, 5.75363 ) }
    soma_0 { pt3dadd( 1.82164, -10.2169, 0.0, 7.75663 ) }
    soma_0 { pt3dadd( 1.64805, -8.92341, 0.0, 8.89598 ) }
    soma_0 { pt3dadd( 1.47447, -7.62987, 0.0, 9.91596 ) }
    soma_0 { pt3dadd( 1.30088, -6.33633, 0.0, 10.9547 ) }
    soma_0 { pt3dadd( 1.1273, -5.04279, 0.0, 11.8384 ) }
    soma_0 { pt3dadd( 0.953711, -3.74926, 0.0, 12.6846 ) }
    soma_0 { pt3dadd( 0.780126, -2.45572, 0.0, 13.1367 ) }
    soma_0 { pt3dadd( 0.606541, -1.16218, 0.0, 13.4162 ) }
    soma_0 { pt3dadd( 0.432956, 0.13136, 0.0, 13.3909 ) }
    soma_0 { pt3dadd( 0.25937, 1.4249, 0.0, 13.2383 ) }
    soma_0 { pt3dadd( 0.085785, 2.71844, 0.0, 12.8868 ) }
    soma_0 { pt3dadd( -0.0878002, 4.01197, 0.0, 12.8103 ) }
    soma_0 { pt3dadd( -0.261385, 5.30551, 0.0, 12.9125 ) }
    soma_0 { pt3dadd( -0.434971, 6.59905, 0.0, 12.4763 ) }
    soma_0 { pt3dadd( -0.608556, 7.89259, 0.0, 11.6777 ) }
    soma_0 { pt3dadd( -0.782141, 9.18613, 0.0, 10.5994 ) }
    soma_0 { pt3dadd( -0.955726, 10.4797, 0.0, 9.19908 ) }
    soma_0 { pt3dadd( -1.12931, 11.7732, 0.0, 7.03753 ) }
    soma_0 { pt3dadd( -1.3029, 13.0667, 0.0, 4.1381 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.21969, -11.987, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.21969, -11.987, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.38197, -12.4979, -4.6202, 1.84 ) }
    dend_58 { pt3dadd( 3.72811, -13.5878, -4.68463, 2.14 ) }
    dend_58 { pt3dadd( 3.94969, -14.2854, -4.72587, 1.92 ) }
    dend_58 { pt3dadd( 4.23142, -15.1725, -4.7783, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 27/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.219697, -12.424, -1.64, 2.43 ) }
    dend_35 { pt3dadd( 0.219697, -12.424, -1.64, 2.43 ) }
    dend_35 { pt3dadd( -0.394693, -13.8142, -1.8244, 1.92 ) }
    dend_35 { pt3dadd( -0.905947, -14.971, -1.97785, 2.14 ) }
    dend_35 { pt3dadd( -1.22246, -15.6871, -2.07285, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.5397, 11.896, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.5397, 11.896, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.72866, 12.5688, -0.0428843, 2.36 ) }
    dend_0 { pt3dadd( 1.98088, 13.4012, -0.0899073, 2.36 ) }
    dend_0 { pt3dadd( 2.39989, 14.7383, -0.157302, 2.29 ) }
    dend_0 { pt3dadd( 2.72241, 15.7294, -0.213514, 2.21 ) }
    dend_0 { pt3dadd( 3.05305, 16.7098, -0.271739, 2.29 ) }
    dend_0 { pt3dadd( 3.34328, 17.5543, -0.323704, 2.43 ) }
    dend_0 { pt3dadd( 3.67594, 18.4884, -0.385069, 2.36 ) }
    dend_0 { pt3dadd( 3.95538, 19.2188, -0.428034, 2.51 ) }
    dend_0 { pt3dadd( 4.25525, 19.9313, -0.470371, 3.17 ) }
    dend_0 { pt3dadd( 4.44999, 20.3698, -0.489599, 3.17 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.3029, 13.0667, 0.0, 0.475068 ) }
    axon_0 { pt3dadd( -3.29794, 27.9334, 0.0, 0.475068 ) }
    axon_0 { pt3dadd( -5.29297, 42.8002, 0.0, 0.475068 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.23142, -15.1725, -4.7783, 0.88 ) }
    dend_62 { pt3dadd( 3.33889, -15.0966, -5.49678, 0.88 ) }
    dend_62 { pt3dadd( 2.46866, -15.1075, -6.18342, 0.81 ) }
    dend_62 { pt3dadd( 1.60143, -15.1969, -6.88435, 0.81 ) }
    dend_62 { pt3dadd( 0.599403, -15.3794, -7.71846, 0.96 ) }
    dend_62 { pt3dadd( -0.3495, -15.6254, -8.54164, 1.4 ) }
    dend_62 { pt3dadd( -1.25865, -15.9488, -9.39422, 1.77 ) }
    dend_62 { pt3dadd( -2.05827, -16.2931, -10.1873, 0.44 ) }
    dend_62 { pt3dadd( -2.74841, -16.6898, -10.903, 0.44 ) }
    dend_62 { pt3dadd( -3.13573, -16.9954, -11.3015, 0.44 ) }
    dend_62 { pt3dadd( -3.44081, -17.3672, -11.6599, 0.66 ) }
    dend_62 { pt3dadd( -3.78799, -18.0968, -12.2531, 1.03 ) }
    dend_62 { pt3dadd( -10.5913, -19.0157, -20.1877, 1.03 ) }
    dend_62 { pt3dadd( -16.1304, -19.4858, -29.0894, 1.03 ) }
    dend_62 { pt3dadd( -19.6303, -18.6403, -38.9432, 1.03 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 62/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.23142, -15.1725, -4.7783, 1.11 ) }
    dend_59 { pt3dadd( 5.13336, -16.1084, -4.82465, 1.11 ) }
    dend_59 { pt3dadd( 5.94669, -16.9837, -4.80463, 1.25 ) }
    dend_59 { pt3dadd( 6.26731, -17.3394, -4.77207, 1.7 ) }
    dend_59 { pt3dadd( 6.83513, -17.9925, -4.6939, 1.77 ) }
    dend_59 { pt3dadd( 7.80376, -19.1113, -4.55963, 1.33 ) }
    dend_59 { pt3dadd( 8.55068, -19.9845, -4.46384, 1.03 ) }
    dend_59 { pt3dadd( 9.12302, -20.6682, -4.35253, 1.03 ) }
    dend_59 { pt3dadd( 9.69176, -21.3803, -4.25347, 1.03 ) }
    dend_59 { pt3dadd( 10.1697, -22.015, -4.20113, 1.33 ) }
    dend_59 { pt3dadd( 10.853, -23.0004, -4.19135, 1.33 ) }
    dend_59 { pt3dadd( 11.4626, -23.9749, -4.27419, 0.74 ) }
    dend_59 { pt3dadd( 12.0456, -25.0165, -4.45353, 0.74 ) }
    dend_59 { pt3dadd( 12.64, -26.0871, -4.68868, 0.88 ) }
    dend_59 { pt3dadd( 13.0834, -26.8909, -4.88273, 1.33 ) }
    dend_59 { pt3dadd( 13.4389, -27.4983, -5.00511, 2.06 ) }
    dend_59 { pt3dadd( 14.2025, -28.7564, -5.20134, 0.96 ) }
    dend_59 { pt3dadd( 14.8647, -29.7551, -5.30393, 0.74 ) }
    dend_59 { pt3dadd( 15.3792, -30.4739, -5.34399, 1.18 ) }
    dend_59 { pt3dadd( 15.7457, -30.9483, -5.3275, 1.55 ) }
    dend_59 { pt3dadd( 16.7074, -32.1592, -5.24937, 0.88 ) }
    dend_59 { pt3dadd( 17.2729, -32.89, -5.22845, 0.81 ) }
    dend_59 { pt3dadd( 18.02, -33.9133, -5.27697, 0.88 ) }
    dend_59 { pt3dadd( 18.4144, -34.5076, -5.35761, 1.4 ) }
    dend_59 { pt3dadd( 18.7316, -35.06, -5.48346, 1.4 ) }
    dend_59 { pt3dadd( 19.1716, -35.9417, -5.74747, 0.81 ) }
    dend_59 { pt3dadd( 19.5572, -36.8243, -6.07543, 0.88 ) }
    dend_59 { pt3dadd( 19.8561, -37.5316, -6.36669, 0.52 ) }
    dend_59 { pt3dadd( 20.0306, -37.937, -6.54704, 0.96 ) }
    dend_59 { pt3dadd( 20.3604, -38.6021, -6.8335, 1.92 ) }
    dend_59 { pt3dadd( 20.8308, -39.4335, -7.15553, 0.74 ) }
    dend_59 { pt3dadd( 21.3136, -40.2055, -7.42869, 0.74 ) }
    dend_59 { pt3dadd( 21.8232, -40.9326, -7.66325, 0.96 ) }
    dend_59 { pt3dadd( 22.3385, -41.5914, -7.88604, 1.55 ) }
    dend_59 { pt3dadd( 23.2632, -42.6648, -8.30035, 0.81 ) }
    dend_59 { pt3dadd( 24.0551, -43.5028, -8.66061, 0.81 ) }
    dend_59 { pt3dadd( 24.8141, -44.2543, -9.01134, 1.25 ) }
    dend_59 { pt3dadd( 25.565, -44.9748, -9.35722, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_59 { pt3dadd( 26.682, -46.043, -9.8239, 0.81 ) }
    dend_59 { pt3dadd( 27.6471, -46.9984, -10.1753, 0.81 ) }
    dend_59 { pt3dadd( 28.1982, -47.5487, -10.3581, 1.18 ) }
    dend_59 { pt3dadd( 28.8364, -48.1452, -10.5489, 1.55 ) }
    dend_59 { pt3dadd( 29.5249, -48.7776, -10.722, 1.55 ) }
    dend_59 { pt3dadd( 30.3679, -49.5979, -10.8951, 0.59 ) }
    dend_59 { pt3dadd( 31.2002, -50.4651, -10.9735, 0.81 ) }
    dend_59 { pt3dadd( 31.7514, -51.0701, -10.9601, 1.33 ) }
    dend_59 { pt3dadd( 32.5857, -52.0153, -10.8955, 0.37 ) }
    dend_59 { pt3dadd( 33.0448, -52.5619, -10.8179, 0.22 ) }
    dend_59 { pt3dadd( 38.1609, -58.5545, -12.0428, 0.22 ) }
    dend_59 { pt3dadd( 43.8745, -63.5666, -14.707, 0.22 ) }
    dend_59 { pt3dadd( 50.3415, -68.2108, -16.0153, 0.22 ) }
    dend_59 { pt3dadd( 56.73, -73.0947, -15.7755, 0.22 ) }
    dend_59 { pt3dadd( 63.7782, -77.0442, -15.1743, 0.22 ) }
    dend_59 { pt3dadd( 70.0271, -82.0947, -15.2929, 0.22 ) }
    dend_59 { pt3dadd( 75.7046, -87.5888, -16.6219, 0.22 ) }
    dend_59 { pt3dadd( 81.0028, -93.1511, -18.9042, 0.22 ) }
    dend_59 { pt3dadd( 86.8578, -98.5179, -20.0099, 0.22 ) }
    dend_59 { pt3dadd( 92.2027, -104.315, -21.2972, 0.22 ) }
    dend_59 { pt3dadd( 96.8943, -110.46, -23.2272, 0.22 ) }
    dend_59 { pt3dadd( 100.811, -116.689, -26.2965, 0.22 ) }
    dend_59 { pt3dadd( 105.502, -122.003, -30.0996, 0.22 ) }
    dend_59 { pt3dadd( 108.694, -127.782, -34.6559, 0.22 ) }
    dend_59 { pt3dadd( 112.809, -133.81, -37.9063, 0.22 ) }
    dend_59 { pt3dadd( 116.46, -140.571, -39.8279, 0.22 ) }
    dend_59 { pt3dadd( 121.222, -146.869, -40.7403, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_35 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.22246, -15.6871, -2.07285, 0.96 ) }
    dend_47 { pt3dadd( -2.85759, -16.6344, -1.96736, 0.96 ) }
    dend_47 { pt3dadd( -3.75223, -17.1809, -1.92135, 0.96 ) }
    dend_47 { pt3dadd( -4.66795, -17.772, -1.8861, 1.25 ) }
    dend_47 { pt3dadd( -5.1513, -18.106, -1.87366, 1.25 ) }
    dend_47 { pt3dadd( -6.04235, -18.7487, -1.86976, 0.96 ) }
    dend_47 { pt3dadd( -6.88915, -19.3703, -1.88593, 0.96 ) }
    dend_47 { pt3dadd( -7.63809, -19.9366, -1.91744, 1.47 ) }
    dend_47 { pt3dadd( -8.58505, -20.5924, -1.96571, 1.62 ) }
    dend_47 { pt3dadd( -9.75714, -21.2913, -2.01426, 0.96 ) }
    dend_47 { pt3dadd( -10.7198, -21.7878, -2.05565, 0.96 ) }
    dend_47 { pt3dadd( -12.0829, -22.3778, -2.10494, 1.11 ) }
    dend_47 { pt3dadd( -13.0629, -22.7152, -2.12997, 1.4 ) }
    dend_47 { pt3dadd( -14.7808, -23.1728, -2.1632, 1.33 ) }
    dend_47 { pt3dadd( -16.2026, -23.4705, -2.20382, 0.96 ) }
    dend_47 { pt3dadd( -17.6615, -23.7438, -2.26018, 1.18 ) }
    dend_47 { pt3dadd( -18.395, -23.878, -2.29286, 1.18 ) }
    dend_47 { pt3dadd( -20.2671, -24.2527, -2.40057, 0.88 ) }
    dend_47 { pt3dadd( -21.3396, -24.5356, -2.48518, 0.88 ) }
    dend_47 { pt3dadd( -22.072, -24.8038, -2.57674, 1.03 ) }
    dend_47 { pt3dadd( -23.421, -25.4702, -2.77385, 1.25 ) }
    dend_47 { pt3dadd( -24.2799, -25.9914, -2.89908, 0.88 ) }
    dend_47 { pt3dadd( -25.1037, -26.5804, -3.0169, 0.88 ) }
    dend_47 { pt3dadd( -25.8374, -27.1664, -3.11584, 1.11 ) }
    dend_47 { pt3dadd( -26.6673, -27.8118, -3.23053, 1.25 ) }
    dend_47 { pt3dadd( -27.7563, -28.6097, -3.44576, 0.88 ) }
    dend_47 { pt3dadd( -28.5933, -29.2166, -3.71766, 1.03 ) }
    dend_47 { pt3dadd( -29.1999, -29.6775, -4.01561, 1.4 ) }
    dend_47 { pt3dadd( -29.9546, -30.2678, -4.53241, 1.18 ) }
    dend_47 { pt3dadd( -30.8997, -30.9762, -5.39056, 1.25 ) }
    dend_47 { pt3dadd( -31.5825, -31.5538, -6.44119, 1.4 ) }
    dend_47 { pt3dadd( -30.9641, -31.6504, -7.70045, 1.4 ) }
    dend_47 { pt3dadd( -30.061, -31.4755, -8.36904, 1.47 ) }
    dend_47 { pt3dadd( -28.1598, -30.9803, -9.37447, 0.52 ) }
    dend_47 { pt3dadd( -27.0996, -30.6854, -9.73697, 0.52 ) }
    dend_47 { pt3dadd( -25.9607, -30.3627, -9.98077, 0.59 ) }
    dend_47 { pt3dadd( -24.0024, -29.8465, -10.1704, 0.59 ) }
    dend_47 { pt3dadd( -22.7912, -29.5605, -10.1731, 0.66 ) }
    dend_47 { pt3dadd( -21.4778, -29.3244, -10.0641, 0.74 ) }
    dend_47 { pt3dadd( -19.7079, -29.0788, -9.83315, 0.59 ) }
    dend_47 { pt3dadd( -18.3716, -28.9627, -9.61595, 0.88 ) }
    dend_47 { pt3dadd( -16.5644, -28.8878, -9.25771, 0.37 ) }
    dend_47 { pt3dadd( -15.6048, -28.9156, -9.04373, 0.37 ) }
    dend_47 { pt3dadd( -14.6611, -29.0208, -8.78311, 0.37 ) }
    dend_47 { pt3dadd( -23.2655, -35.7719, -11.3061, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.22246, -15.6871, -2.07285, 1.4 ) }
    dend_36 { pt3dadd( -1.11233, -17.219, -1.81275, 1.4 ) }
    dend_36 { pt3dadd( -0.982306, -18.7952, -1.57038, 1.03 ) }
    dend_36 { pt3dadd( -0.848275, -20.3276, -1.3351, 1.33 ) }
    dend_36 { pt3dadd( -0.697715, -22.0977, -1.05364, 1.25 ) }
    dend_36 { pt3dadd( -0.554651, -23.7059, -0.774503, 1.25 ) }
    dend_36 { pt3dadd( -0.421625, -25.2386, -0.482391, 1.11 ) }
    dend_36 { pt3dadd( -0.314353, -26.7127, -0.217435, 1.84 ) }
    dend_36 { pt3dadd( -0.237652, -27.6654, -0.060931, 1.62 ) }
    dend_36 { pt3dadd( -0.077484, -29.4841, 0.263972, 1.18 ) }
    dend_36 { pt3dadd( 0.0776555, -31.4122, 0.633555, 1.11 ) }
    dend_36 { pt3dadd( 0.221388, -33.3516, 1.01741, 1.25 ) }
    dend_36 { pt3dadd( 0.305186, -34.6338, 1.26021, 1.55 ) }
    dend_36 { pt3dadd( 0.384037, -36.0285, 1.53415, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 86/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 4.44999, 20.3698, -0.489599, 2.88 ) }
    dend_10 { pt3dadd( 4.63211, 21.3888, -0.355866, 2.88 ) }
    dend_10 { pt3dadd( 4.86199, 22.6749, -0.187057, 2.58 ) }
    dend_10 { pt3dadd( 5.12179, 24.1285, 0.00372106, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.44999, 20.3698, -0.489599, 1.62 ) }
    dend_1 { pt3dadd( 5.58517, 19.9159, -1.47244, 1.62 ) }
    dend_1 { pt3dadd( 6.93346, 19.2078, -2.56975, 0.96 ) }
    dend_1 { pt3dadd( 7.83483, 18.6552, -3.27035, 0.96 ) }
    dend_1 { pt3dadd( 8.8307, 17.9562, -4.02653, 1.11 ) }
    dend_1 { pt3dadd( 9.36661, 17.5461, -4.42368, 1.25 ) }
    dend_1 { pt3dadd( 10.3805, 16.6866, -5.18059, 0.96 ) }
    dend_1 { pt3dadd( 11.5888, 15.4492, -6.06151, 0.81 ) }
    dend_1 { pt3dadd( 12.2611, 14.7192, -6.54344, 0.81 ) }
    dend_1 { pt3dadd( 12.8462, 14.1038, -6.96856, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 13.3849, 13.5628, -7.40673, 0.88 ) }
    dend_1 { pt3dadd( 14.2732, 12.7542, -8.18347, 0.74 ) }
    dend_1 { pt3dadd( 15.2181, 12.0119, -9.04704, 0.59 ) }
    dend_1 { pt3dadd( 16.0561, 11.443, -9.80896, 0.74 ) }
    dend_1 { pt3dadd( 16.6526, 11.0699, -10.3325, 0.66 ) }
    dend_1 { pt3dadd( 17.2975, 10.6753, -10.843, 0.66 ) }
    dend_1 { pt3dadd( 18.2437, 10.0912, -11.5196, 0.96 ) }
    dend_1 { pt3dadd( 19.2454, 9.48677, -12.1545, 1.11 ) }
    dend_1 { pt3dadd( 20.5008, 8.67021, -12.8872, 0.81 ) }
    dend_1 { pt3dadd( 21.5124, 7.93725, -13.4535, 0.81 ) }
    dend_1 { pt3dadd( 22.4843, 7.17652, -14.0065, 0.52 ) }
    dend_1 { pt3dadd( 23.0999, 6.64265, -14.4013, 0.52 ) }
    dend_1 { pt3dadd( 23.5284, 6.20639, -14.7734, 0.52 ) }
    dend_1 { pt3dadd( 24.0033, 5.60235, -15.4104, 0.74 ) }
    dend_1 { pt3dadd( 24.4614, 4.8676, -16.3498, 0.96 ) }
    dend_1 { pt3dadd( 24.7091, 4.3719, -17.0394, 1.03 ) }
    dend_1 { pt3dadd( 24.9868, 3.73132, -17.9818, 0.81 ) }
    dend_1 { pt3dadd( 25.3571, 2.95606, -19.1276, 0.52 ) }
    dend_1 { pt3dadd( 25.6525, 2.26915, -20.1267, 0.88 ) }
    dend_1 { pt3dadd( 25.8003, 1.92727, -20.6341, 1.11 ) }
    dend_1 { pt3dadd( 26.1312, 1.24595, -21.6609, 0.81 ) }
    dend_1 { pt3dadd( 26.5414, 0.619234, -22.5888, 0.22 ) }
    dend_1 { pt3dadd( 27.2287, -0.0874348, -23.583, 0.15 ) }
    dend_1 { pt3dadd( 33.4982, -6.04149, -29.5186, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.29297, 42.8002, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -7.28801, 57.6669, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -9.28305, 72.5336, 0.0, 0.15 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -19.6303, -18.6403, -38.9432, 0.15 ) }
    dend_66 { pt3dadd( -23.563, -19.2514, -42.8108, 0.15 ) }
    dend_66 { pt3dadd( -27.8076, -19.5933, -46.3724, 0.15 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 30/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -19.6303, -18.6403, -38.9432, 0.59 ) }
    dend_63 { pt3dadd( -23.6862, -19.3145, -49.6883, 0.15 ) }
    dend_63 { pt3dadd( -27.7945, -18.9181, -60.4281, 0.15 ) }
    dend_63 { pt3dadd( -34.3084, -17.1121, -69.717, 0.15 ) }
    dend_63 { pt3dadd( -42.2477, -16.5159, -78.0199, 0.15 ) }
    dend_63 { pt3dadd( -48.8413, -16.7689, -87.4465, 0.15 ) }
    dend_63 { pt3dadd( -55.3577, -19.1194, -96.6065, 0.15 ) }
    dend_63 { pt3dadd( -62.381, -20.5722, -105.595, 0.15 ) }
    dend_63 { pt3dadd( -69.0218, -22.8716, -114.68, 0.15 ) }
    dend_63 { pt3dadd( -76.0031, -25.2613, -123.48, 0.15 ) }
    dend_63 { pt3dadd( -84.3648, -25.8678, -131.36, 0.15 ) }
    dend_63 { pt3dadd( -91.9275, -26.3135, -140.021, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 121.222, -146.869, -40.7403, 0.15 ) }
    dend_61 { pt3dadd( 127.915, -153.682, -43.7575, 0.15 ) }
    dend_61 { pt3dadd( 134.072, -161.311, -45.4435, 0.15 ) }
    dend_61 { pt3dadd( 140.191, -169.126, -45.5199, 0.15 ) }
    dend_61 { pt3dadd( 146.366, -176.88, -44.9755, 0.15 ) }
    dend_61 { pt3dadd( 152.75, -184.471, -45.7206, 0.15 ) }
    dend_61 { pt3dadd( 160.027, -191.315, -46.2097, 0.15 ) }
    dend_61 { pt3dadd( 168.891, -196.21, -46.1584, 0.15 ) }
    dend_61 { pt3dadd( 176.444, -202.603, -47.8505, 0.15 ) }
    dend_61 { pt3dadd( 183.783, -209.368, -48.5729, 0.15 ) }
    dend_61 { pt3dadd( 190.659, -216.237, -50.9644, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 53/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 121.222, -146.869, -40.7403, 0.59 ) }
    dend_60 { pt3dadd( 129.028, -156.227, -41.629, 0.15 ) }
    dend_60 { pt3dadd( 135.101, -166.491, -44.0903, 0.15 ) }
    dend_60 { pt3dadd( 138.796, -177.604, -47.2815, 0.15 ) }
    dend_60 { pt3dadd( 141.404, -189.319, -48.4897, 0.15 ) }
    dend_60 { pt3dadd( 145.282, -200.433, -51.4246, 0.15 ) }
    dend_60 { pt3dadd( 149.419, -211.612, -53.5656, 0.15 ) }
    dend_60 { pt3dadd( 155.487, -221.679, -56.8617, 0.15 ) }
    dend_60 { pt3dadd( 161.345, -231.612, -60.9418, 0.15 ) }
    dend_60 { pt3dadd( 167.673, -241.912, -62.2117, 0.15 ) }
    dend_60 { pt3dadd( 172.701, -252.858, -63.4543, 0.15 ) }
    dend_60 { pt3dadd( 178.525, -263.34, -65.4386, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 65/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -23.2655, -35.7719, -11.3061, 0.15 ) }
    dend_53 { pt3dadd( -31.2778, -41.0819, -11.3929, 0.15 ) }
    dend_53 { pt3dadd( -38.436, -47.3966, -11.5584, 0.15 ) }
    dend_53 { pt3dadd( -44.3375, -54.6261, -9.94807, 0.15 ) }
    dend_53 { pt3dadd( -50.3784, -61.9203, -10.0116, 0.15 ) }
    dend_53 { pt3dadd( -56.5713, -69.0084, -11.2397, 0.15 ) }
    dend_53 { pt3dadd( -60.9841, -77.2838, -11.6119, 0.15 ) }
    dend_53 { pt3dadd( -65.6939, -85.3801, -12.4546, 0.15 ) }
    dend_53 { pt3dadd( -69.9346, -93.7161, -11.7972, 0.15 ) }
    dend_53 { pt3dadd( -74.7967, -101.6, -10.1151, 0.15 ) }
    dend_53 { pt3dadd( -79.2595, -109.336, -7.11511, 0.15 ) }
    dend_53 { pt3dadd( -82.7559, -117.715, -4.81767, 0.15 ) }
    dend_53 { pt3dadd( -87.0036, -126.057, -4.29735, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 78/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -23.2655, -35.7719, -11.3061, 0.59 ) }
    dend_48 { pt3dadd( -29.0269, -42.1965, -17.1954, 0.15 ) }
    dend_48 { pt3dadd( -33.8356, -48.8752, -23.5937, 0.15 ) }
    dend_48 { pt3dadd( -39.5701, -54.9685, -29.883, 0.15 ) }
    dend_48 { pt3dadd( -43.8376, -61.0682, -37.2277, 0.15 ) }
    dend_48 { pt3dadd( -47.1896, -67.1884, -45.0082, 0.15 ) }
    dend_48 { pt3dadd( -51.1524, -73.9725, -51.84, 0.15 ) }
    dend_48 { pt3dadd( -53.5701, -81.1323, -58.9505, 0.15 ) }
    dend_48 { pt3dadd( -55.7549, -88.8739, -65.4345, 0.15 ) }
    dend_48 { pt3dadd( -56.6517, -95.7973, -73.124, 0.15 ) }
    dend_48 { pt3dadd( -58.4549, -102.81, -80.5673, 0.15 ) }
    dend_48 { pt3dadd( -60.141, -108.95, -88.8436, 0.15 ) }
    dend_48 { pt3dadd( -60.7906, -115.746, -96.6807, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 91/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 0.384037, -36.0285, 1.53415, 0.44 ) }
    dend_42 { pt3dadd( -0.546164, -37.5351, 2.50279, 0.44 ) }
    dend_42 { pt3dadd( -0.974866, -38.1635, 2.97232, 0.44 ) }
    dend_42 { pt3dadd( -1.54749, -39.0056, 3.76751, 0.44 ) }
    dend_42 { pt3dadd( -1.99105, -39.7352, 4.55274, 0.66 ) }
    dend_42 { pt3dadd( -2.31513, -40.412, 5.2372, 0.66 ) }
    dend_42 { pt3dadd( -2.48306, -40.8969, 5.6675, 0.44 ) }
    dend_42 { pt3dadd( -2.63096, -41.5491, 6.25044, 0.52 ) }
    dend_42 { pt3dadd( -2.68393, -42.5031, 6.95025, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -2.58125, -43.5545, 7.49917, 0.66 ) }
    dend_42 { pt3dadd( -2.37167, -44.778, 8.00718, 0.88 ) }
    dend_42 { pt3dadd( -2.13582, -46.0362, 8.4405, 1.11 ) }
    dend_42 { pt3dadd( -1.93357, -47.226, 8.77671, 0.74 ) }
    dend_42 { pt3dadd( -1.8197, -48.1119, 8.92727, 0.29 ) }
    dend_42 { pt3dadd( -1.7618, -49.0204, 8.9739, 0.22 ) }
    dend_42 { pt3dadd( -1.76004, -49.5602, 8.96053, 0.22 ) }
    dend_42 { pt3dadd( -1.81775, -50.2696, 8.92236, 0.22 ) }
    dend_42 { pt3dadd( -1.90482, -50.938, 8.86647, 0.22 ) }
    dend_42 { pt3dadd( -2.09593, -52.3738, 8.73425, 0.29 ) }
    dend_42 { pt3dadd( -2.20166, -53.4864, 8.6403, 0.52 ) }
    dend_42 { pt3dadd( -2.22981, -54.2734, 8.5814, 0.52 ) }
    dend_42 { pt3dadd( -2.1772, -55.3549, 8.51713, 0.44 ) }
    dend_42 { pt3dadd( -1.97492, -56.958, 8.46379, 0.29 ) }
    dend_42 { pt3dadd( -1.83509, -57.7409, 8.46378, 0.66 ) }
    dend_42 { pt3dadd( -1.7156, -58.2896, 8.5123, 1.77 ) }
    dend_42 { pt3dadd( -1.48502, -59.2829, 8.66955, 1.18 ) }
    dend_42 { pt3dadd( -1.24025, -60.5484, 8.95342, 0.52 ) }
    dend_42 { pt3dadd( -1.05757, -61.7258, 9.27965, 0.52 ) }
    dend_42 { pt3dadd( -0.957636, -62.4871, 9.52424, 0.81 ) }
    dend_42 { pt3dadd( -0.780593, -63.6254, 9.90322, 0.96 ) }
    dend_42 { pt3dadd( -0.592484, -64.6184, 10.2607, 0.52 ) }
    dend_42 { pt3dadd( -0.308233, -65.9614, 10.813, 0.22 ) }
    dend_42 { pt3dadd( -0.157369, -66.5908, 11.107, 0.29 ) }
    dend_42 { pt3dadd( 0.0670271, -67.4153, 11.5417, 0.29 ) }
    dend_42 { pt3dadd( 0.382431, -68.589, 12.1792, 0.22 ) }
    dend_42 { pt3dadd( 0.592501, -69.3572, 12.6138, 0.37 ) }
    dend_42 { pt3dadd( 0.798109, -70.15, 13.0721, 0.74 ) }
    dend_42 { pt3dadd( 0.954366, -70.9109, 13.5094, 1.03 ) }
    dend_42 { pt3dadd( 1.0351, -71.7715, 13.9695, 1.25 ) }
    dend_42 { pt3dadd( 1.01314, -73.4554, 14.8044, 0.37 ) }
    dend_42 { pt3dadd( 0.939346, -74.4349, 15.2768, 1.18 ) }
    dend_42 { pt3dadd( 0.868311, -75.3398, 15.6823, 2.65 ) }
    dend_42 { pt3dadd( 0.795271, -76.8176, 16.2874, 2.21 ) }
    dend_42 { pt3dadd( 0.785835, -78.2497, 16.8411, 0.96 ) }
    dend_42 { pt3dadd( 0.840862, -79.4329, 17.2735, 0.29 ) }
    dend_42 { pt3dadd( 0.917139, -80.2717, 17.5823, 0.29 ) }
    dend_42 { pt3dadd( 0.985172, -81.0545, 17.8677, 0.66 ) }
    dend_42 { pt3dadd( 1.05004, -81.9895, 18.2528, 0.44 ) }
    dend_42 { pt3dadd( 1.10024, -82.8206, 18.6238, 0.22 ) }
    dend_42 { pt3dadd( 1.12806, -83.2377, 18.8238, 0.22 ) }
    dend_42 { pt3dadd( 1.14731, -83.7451, 19.0515, 0.22 ) }
    dend_42 { pt3dadd( 1.12449, -84.7794, 19.4666, 0.29 ) }
    dend_42 { pt3dadd( 1.09356, -85.5612, 19.7548, 0.29 ) }
    dend_42 { pt3dadd( 1.08915, -86.0981, 19.9308, 0.22 ) }
    dend_42 { pt3dadd( 1.1, -86.7176, 20.0998, 0.22 ) }
    dend_42 { pt3dadd( 1.15055, -87.2618, 20.236, 0.81 ) }
    dend_42 { pt3dadd( 1.24775, -87.7763, 20.3513, 1.55 ) }
    dend_42 { pt3dadd( 1.55324, -88.8884, 20.6042, 1.84 ) }
    dend_42 { pt3dadd( 2.08838, -90.5547, 20.9774, 0.15 ) }
    dend_42 { pt3dadd( 2.24842, -91.0784, 21.1077, 0.15 ) }
    dend_42 { pt3dadd( 2.38045, -91.5156, 21.2211, 0.15 ) }
    dend_42 { pt3dadd( 2.52392, -92.0446, 21.3606, 0.15 ) }
    dend_42 { pt3dadd( 2.71595, -92.8284, 21.5637, 0.88 ) }
    dend_42 { pt3dadd( 2.86758, -93.4798, 21.7243, 1.92 ) }
    dend_42 { pt3dadd( 3.19223, -94.7732, 21.998, 1.99 ) }
    dend_42 { pt3dadd( 3.28357, -95.1043, 22.0608, 1.99 ) }
    dend_42 { pt3dadd( 3.67632, -96.634, 22.3042, 0.15 ) }
    dend_42 { pt3dadd( 3.77302, -97.0577, 22.3553, 0.15 ) }
    dend_42 { pt3dadd( 3.85853, -97.4941, 22.3864, 0.37 ) }
    dend_42 { pt3dadd( 3.92387, -97.9379, 22.4023, 0.37 ) }
    dend_42 { pt3dadd( 4.05276, -98.9902, 22.4337, 0.15 ) }
    dend_42 { pt3dadd( 4.1082, -99.6436, 22.467, 0.15 ) }
    dend_42 { pt3dadd( 4.17068, -100.413, 22.5233, 0.22 ) }
    dend_42 { pt3dadd( 4.19504, -100.861, 22.5743, 0.22 ) }
    dend_42 { pt3dadd( 4.19409, -101.671, 22.6896, 0.15 ) }
    dend_42 { pt3dadd( 4.16434, -102.29, 22.7909, 0.15 ) }
    dend_42 { pt3dadd( 4.12968, -102.779, 22.8803, 0.59 ) }
    dend_42 { pt3dadd( 4.11988, -103.299, 22.9855, 1.03 ) }
    dend_42 { pt3dadd( 4.15819, -104.103, 23.136, 0.22 ) }
    dend_42 { pt3dadd( 4.24495, -104.949, 23.2978, 0.07 ) }
    dend_42 { pt3dadd( 4.32544, -105.492, 23.4126, 0.07 ) }
    dend_42 { pt3dadd( 4.39122, -105.833, 23.4957, 0.66 ) }
    dend_42 { pt3dadd( 4.60551, -106.723, 23.7674, 0.96 ) }
    dend_42 { pt3dadd( 5.08248, -108.329, 24.3209, 0.22 ) }
    dend_42 { pt3dadd( 5.40548, -109.199, 24.6632, 0.22 ) }
    dend_42 { pt3dadd( 5.65416, -109.76, 24.9299, 0.44 ) }
    dend_42 { pt3dadd( 5.95742, -110.394, 25.2616, 1.25 ) }
    dend_42 { pt3dadd( 6.24803, -110.945, 25.5621, 1.92 ) }
    dend_42 { pt3dadd( 6.68322, -111.638, 25.966, 1.11 ) }
    dend_42 { pt3dadd( 7.16254, -112.298, 26.389, 0.22 ) }
    dend_42 { pt3dadd( 7.54284, -112.815, 26.703, 0.22 ) }
    dend_42 { pt3dadd( 7.95714, -113.427, 27.0391, 0.52 ) }
    dend_42 { pt3dadd( 8.43574, -114.277, 27.463, 0.22 ) }
    dend_42 { pt3dadd( 8.85089, -115.2, 27.92, 0.22 ) }
    dend_42 { pt3dadd( 9.12269, -115.945, 28.301, 0.22 ) }
    dend_42 { pt3dadd( 9.23352, -116.325, 28.4947, 0.81 ) }
    dend_42 { pt3dadd( 9.45669, -117.226, 28.9703, 1.77 ) }
    dend_42 { pt3dadd( 9.81832, -118.939, 29.9276, 0.37 ) }
    dend_42 { pt3dadd( 9.99757, -119.836, 30.4428, 0.15 ) }
    dend_42 { pt3dadd( 10.0772, -120.249, 30.6706, 0.15 ) }
    dend_42 { pt3dadd( 10.1844, -120.762, 30.9414, 0.37 ) }
    dend_42 { pt3dadd( 10.327, -121.389, 31.2712, 1.18 ) }
    dend_42 { pt3dadd( 10.5149, -122.128, 31.6538, 1.55 ) }
    dend_42 { pt3dadd( 10.8211, -123.264, 32.1857, 0.81 ) }
    dend_42 { pt3dadd( 11.0119, -124.063, 32.5069, 0.15 ) }
    dend_42 { pt3dadd( 11.1107, -124.578, 32.7026, 0.22 ) }
    dend_42 { pt3dadd( 11.2479, -125.354, 32.9822, 0.15 ) }
    dend_42 { pt3dadd( 11.3564, -126.069, 33.2258, 0.96 ) }
    dend_42 { pt3dadd( 11.4783, -126.86, 33.4926, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( 11.6797, -128.079, 33.8901, 0.22 ) }
    dend_42 { pt3dadd( 11.7997, -128.652, 34.0735, 0.22 ) }
    dend_42 { pt3dadd( 11.9847, -129.372, 34.3061, 0.37 ) }
    dend_42 { pt3dadd( 12.0458, -129.571, 34.3675, 0.37 ) }
    dend_42 { pt3dadd( 12.2954, -130.298, 34.5912, 0.22 ) }
    dend_42 { pt3dadd( 12.429, -130.633, 34.7049, 0.22 ) }
    dend_42 { pt3dadd( 12.7181, -131.207, 34.8858, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 0.384037, -36.0285, 1.53415, 1.84 ) }
    dend_37 { pt3dadd( 0.198807, -36.9402, 1.16275, 1.84 ) }
    dend_37 { pt3dadd( 0.0315614, -38.0342, 0.75412, 1.55 ) }
    dend_37 { pt3dadd( -0.097914, -39.2151, 0.354297, 1.55 ) }
    dend_37 { pt3dadd( -0.219502, -40.4493, -0.0175586, 1.55 ) }
    dend_37 { pt3dadd( -0.341681, -41.6742, -0.336098, 1.47 ) }
    dend_37 { pt3dadd( -0.454777, -42.7469, -0.58704, 0.96 ) }
    dend_37 { pt3dadd( -0.547022, -43.602, -0.745576, 1.55 ) }
    dend_37 { pt3dadd( -0.733547, -45.1349, -0.938491, 1.25 ) }
    dend_37 { pt3dadd( -0.943609, -46.7179, -1.08533, 1.47 ) }
    dend_37 { pt3dadd( -1.1825, -48.3491, -1.19297, 1.03 ) }
    dend_37 { pt3dadd( -1.37438, -49.4507, -1.24721, 1.18 ) }
    dend_37 { pt3dadd( -1.68806, -51.0041, -1.29187, 1.99 ) }
    dend_37 { pt3dadd( -2.00773, -52.3217, -1.30666, 1.92 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.12179, 24.1285, 0.00372106, 2.14 ) }
    dend_20 { pt3dadd( 6.30751, 25.4951, 0.166513, 2.14 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.12179, 24.1285, 0.00372106, 1.47 ) }
    dend_11 { pt3dadd( 5.27417, 25.2949, 1.32998, 1.47 ) }
    dend_11 { pt3dadd( 5.29215, 25.9928, 2.17564, 1.18 ) }
    dend_11 { pt3dadd( 5.21393, 26.6287, 3.04154, 1.18 ) }
    dend_11 { pt3dadd( 5.02017, 27.2752, 4.06659, 1.47 ) }
    dend_11 { pt3dadd( 4.75383, 27.738, 4.9574, 1.47 ) }
    dend_11 { pt3dadd( 4.5592, 27.9049, 5.40519, 1.47 ) }
    dend_11 { pt3dadd( 3.93312, 27.9778, 6.26304, 1.47 ) }
    dend_11 { pt3dadd( 2.97501, 27.7599, 7.14537, 1.03 ) }
    dend_11 { pt3dadd( 2.35505, 27.5017, 7.57066, 1.62 ) }
    dend_11 { pt3dadd( 1.76394, 27.1801, 7.90322, 1.77 ) }
    dend_11 { pt3dadd( 0.996118, 26.6634, 8.29045, 1.77 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 33.4982, -6.04149, -29.5186, 0.15 ) }
    dend_7 { pt3dadd( 39.32, -10.8172, -34.0138, 0.15 ) }
    dend_7 { pt3dadd( 45.4693, -15.0122, -38.712, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 33.4982, -6.04149, -29.5186, 0.59 ) }
    dend_2 { pt3dadd( 37.7453, -10.279, -35.3295, 0.15 ) }
    dend_2 { pt3dadd( 40.9177, -15.346, -41.07, 0.15 ) }
    dend_2 { pt3dadd( 42.5099, -21.0119, -46.8131, 0.15 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 42/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -27.8076, -19.5933, -46.3724, 0.15 ) }
    dend_68 { pt3dadd( -38.371, -16.4681, -50.9467, 0.15 ) }
    dend_68 { pt3dadd( -47.0463, -11.7606, -57.5369, 0.15 ) }
    dend_68 { pt3dadd( -54.1314, -5.1585, -64.2214, 0.15 ) }
    dend_68 { pt3dadd( -62.6796, 0.453368, -70.1649, 0.15 ) }
    dend_68 { pt3dadd( -71.8311, 4.94152, -76.2653, 0.15 ) }
    dend_68 { pt3dadd( -80.5592, 9.12611, -83.1678, 0.15 ) }
    dend_68 { pt3dadd( -88.1135, 14.4708, -90.546, 0.15 ) }
    dend_68 { pt3dadd( -95.7617, 20.6899, -97.0168, 0.15 ) }
    dend_68 { pt3dadd( -102.313, 25.8099, -105.448, 0.15 ) }
    dend_68 { pt3dadd( -110.425, 29.7814, -113.187, 0.15 ) }
    dend_68 { pt3dadd( -119.993, 34.5754, -118.319, 0.15 ) }
    dend_68 { pt3dadd( -129.582, 38.8306, -123.913, 0.15 ) }
    dend_68 { pt3dadd( -138.579, 44.7412, -128.785, 0.15 ) }
    dend_68 { pt3dadd( -148.618, 49.7812, -132.597, 0.15 ) }
    dend_68 { pt3dadd( -159.474, 54.3252, -134.277, 0.15 ) }
    dend_68 { pt3dadd( -169.727, 60.2224, -133.952, 0.15 ) }
    dend_68 { pt3dadd( -180.051, 65.9236, -134.982, 0.15 ) }
    dend_68 { pt3dadd( -190.852, 70.7582, -133.913, 0.15 ) }
    dend_68 { pt3dadd( -201.534, 75.8291, -132.848, 0.15 ) }
    dend_68 { pt3dadd( -211.856, 81.4797, -134.162, 0.15 ) }
    dend_68 { pt3dadd( -221.614, 87.9823, -135.433, 0.15 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 64/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -27.8076, -19.5933, -46.3724, 0.59 ) }
    dend_67 { pt3dadd( -32.1938, -23.4772, -56.2081, 0.15 ) }
    dend_67 { pt3dadd( -37.8533, -26.4944, -65.7309, 0.15 ) }
    dend_67 { pt3dadd( -42.4562, -30.3516, -75.4801, 0.15 ) }
    dend_67 { pt3dadd( -46.6644, -34.1043, -85.448, 0.15 ) }
    dend_67 { pt3dadd( -50.3983, -36.8871, -95.9412, 0.15 ) }
    dend_67 { pt3dadd( -54.5079, -40.7121, -105.919, 0.15 ) }
    dend_67 { pt3dadd( -57.4694, -44.2042, -116.42, 0.15 ) }
    dend_67 { pt3dadd( -61.396, -47.4728, -126.686, 0.15 ) }
    dend_67 { pt3dadd( -63.0614, -52.8058, -136.587, 0.15 ) }
    dend_67 { pt3dadd( -63.2778, -58.3853, -146.465, 0.15 ) }
    dend_67 { pt3dadd( -63.3186, -64.1516, -156.224, 0.15 ) }
    dend_67 { pt3dadd( -64.7613, -70.3439, -165.589, 0.15 ) }
    dend_67 { pt3dadd( -64.2577, -77.3295, -174.4, 0.15 ) }
    dend_67 { pt3dadd( -64.9508, -85.7123, -181.74, 0.15 ) }
    dend_67 { pt3dadd( -67.4412, -93.9332, -188.918, 0.15 ) }
    dend_67 { pt3dadd( -69.9101, -101.606, -196.743, 0.15 ) }
    dend_67 { pt3dadd( -71.1544, -107.983, -205.998, 0.15 ) }
    dend_67 { pt3dadd( -72.4121, -114.363, -215.248, 0.15 ) }
    dend_67 { pt3dadd( -71.4019, -122.485, -222.848, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 84/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -91.9275, -26.3135, -140.021, 0.15 ) }
    dend_65 { pt3dadd( -97.8468, -27.4973, -146.895, 0.15 ) }
    dend_65 { pt3dadd( -104.429, -28.8615, -153.103, 0.15 ) }
    dend_65 { pt3dadd( -111.792, -30.0556, -158.403, 0.15 ) }
    dend_65 { pt3dadd( -118.314, -29.7484, -164.804, 0.15 ) }
    dend_65 { pt3dadd( -125.255, -28.5482, -170.6, 0.15 ) }
    dend_65 { pt3dadd( -132.78, -29.3931, -175.733, 0.15 ) }
    dend_65 { pt3dadd( -140.378, -30.9483, -180.589, 0.15 ) }
    dend_65 { pt3dadd( -147.056, -33.3686, -186.344, 0.15 ) }
    dend_65 { pt3dadd( -153.2, -37.364, -191.752, 0.15 ) }
    dend_65 { pt3dadd( -159.137, -41.5454, -197.234, 0.15 ) }
    dend_65 { pt3dadd( -164.217, -47.4555, -201.784, 0.15 ) }
    dend_65 { pt3dadd( -168.832, -53.0687, -207.128, 0.15 ) }
    dend_65 { pt3dadd( -173.169, -58.6875, -212.68, 0.15 ) }
    dend_65 { pt3dadd( -177.169, -65.391, -217.075, 0.15 ) }
    dend_65 { pt3dadd( -180.491, -73.0358, -220.194, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_65 { pt3dadd( -184.226, -80.22, -223.963, 0.15 ) }
    dend_65 { pt3dadd( -186.354, -88.1922, -227.131, 0.15 ) }
    dend_65 { pt3dadd( -187.569, -95.6147, -231.748, 0.15 ) }
    dend_65 { pt3dadd( -187.206, -103.668, -235.135, 0.15 ) }
    dend_65 { pt3dadd( -188.662, -111.712, -238.417, 0.15 ) }
    dend_65 { pt3dadd( -190.712, -120.061, -240.432, 0.15 ) }
    dend_65 { pt3dadd( -192.088, -128.148, -243.629, 0.15 ) }
    dend_65 { pt3dadd( -194.882, -135.807, -247.14, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 8/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -91.9275, -26.3135, -140.021, 0.59 ) }
    dend_64 { pt3dadd( -96.3398, -26.3536, -149.671, 0.15 ) }
    dend_64 { pt3dadd( -100.305, -26.75, -159.505, 0.15 ) }
    dend_64 { pt3dadd( -105.276, -27.9126, -168.801, 0.15 ) }
    dend_64 { pt3dadd( -109.505, -30.483, -178.152, 0.15 ) }
    dend_64 { pt3dadd( -112.985, -32.1039, -188.031, 0.15 ) }
    dend_64 { pt3dadd( -114.632, -34.8685, -198.102, 0.15 ) }
    dend_64 { pt3dadd( -117.386, -35.7804, -208.305, 0.15 ) }
    dend_64 { pt3dadd( -120.757, -36.3449, -218.349, 0.15 ) }
    dend_64 { pt3dadd( -124.338, -37.4166, -228.275, 0.15 ) }
    dend_64 { pt3dadd( -126.301, -39.8212, -238.391, 0.15 ) }
    dend_64 { pt3dadd( -128.795, -44.1355, -247.654, 0.15 ) }
    dend_64 { pt3dadd( -130.605, -47.3329, -257.553, 0.15 ) }
    dend_64 { pt3dadd( -131.552, -50.0407, -267.73, 0.15 ) }
    dend_64 { pt3dadd( -132.544, -52.6242, -277.938, 0.15 ) }
    dend_64 { pt3dadd( -132.528, -54.5185, -288.359, 0.15 ) }
    dend_64 { pt3dadd( -133.999, -55.4842, -298.819, 0.15 ) }
    dend_64 { pt3dadd( -136.627, -55.7816, -309.095, 0.15 ) }
    dend_64 { pt3dadd( -137.554, -57.584, -319.493, 0.15 ) }
    dend_64 { pt3dadd( -139.76, -60.383, -329.446, 0.15 ) }
    dend_64 { pt3dadd( -143.382, -63.4415, -338.889, 0.15 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 29/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -87.0036, -126.057, -4.29735, 0.15 ) }
    dend_57 { pt3dadd( -93.7298, -135.208, -3.67332, 0.15 ) }
    dend_57 { pt3dadd( -99.5227, -144.737, -1.72415, 0.15 ) }
    dend_57 { pt3dadd( -104.303, -154.81, -0.0359331, 0.15 ) }
    dend_57 { pt3dadd( -110.003, -163.998, 3.35073, 0.15 ) }
    dend_57 { pt3dadd( -115.44, -173.153, 7.21027, 0.15 ) }
    dend_57 { pt3dadd( -118.824, -183.051, 11.3643, 0.15 ) }
    dend_57 { pt3dadd( -121.603, -193.742, 13.3196, 0.15 ) }
    dend_57 { pt3dadd( -124.523, -204.593, 13.0697, 0.15 ) }
    dend_57 { pt3dadd( -127.663, -215.198, 10.754, 0.15 ) }
    dend_57 { pt3dadd( -129.376, -225.488, 6.23334, 0.15 ) }
    dend_57 { pt3dadd( -131.366, -235.062, 0.279135, 0.15 ) }
    dend_57 { pt3dadd( -133.646, -244.478, -5.84817, 0.15 ) }
    dend_57 { pt3dadd( -137.026, -253.05, -12.7816, 0.15 ) }
    dend_57 { pt3dadd( -139.231, -260.176, -21.7177, 0.15 ) }
    dend_57 { pt3dadd( -141.306, -267.225, -30.7511, 0.15 ) }
    dend_57 { pt3dadd( -141.267, -275.208, -39.1572, 0.15 ) }
    dend_57 { pt3dadd( -140.111, -283.981, -46.5558, 0.15 ) }
    dend_57 { pt3dadd( -138.86, -292.627, -54.1017, 0.15 ) }
    dend_57 { pt3dadd( -139.399, -301.001, -62.0577, 0.15 ) }
    dend_57 { pt3dadd( -140.398, -308.619, -70.7672, 0.15 ) }
    dend_57 { pt3dadd( -143.298, -315.667, -79.5674, 0.15 ) }
    dend_57 { pt3dadd( -146.545, -322.509, -88.422, 0.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -87.0036, -126.057, -4.29735, 0.59 ) }
    dend_54 { pt3dadd( -91.8605, -132.585, -3.8005, 0.15 ) }
    dend_54 { pt3dadd( -96.4138, -139.336, -3.79258, 0.15 ) }
    dend_54 { pt3dadd( -102.362, -144.934, -2.90767, 0.15 ) }
    dend_54 { pt3dadd( -108.125, -150.661, -1.78591, 0.15 ) }
    dend_54 { pt3dadd( -114.455, -155.828, -0.69212, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -60.7906, -115.746, -96.6807, 0.15 ) }
    dend_50 { pt3dadd( -63.6278, -125.073, -105.963, 0.15 ) }
    dend_50 { pt3dadd( -67.8432, -135.336, -113.5, 0.15 ) }
    dend_50 { pt3dadd( -71.5265, -144.57, -122.599, 0.15 ) }
    dend_50 { pt3dadd( -75.7787, -155.47, -129.069, 0.15 ) }
    dend_50 { pt3dadd( -80.1393, -167.318, -133.276, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 64/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -60.7906, -115.746, -96.6807, 0.59 ) }
    dend_49 { pt3dadd( -66.0614, -122.183, -104.37, 0.15 ) }
    dend_49 { pt3dadd( -71.1455, -128.749, -112.062, 0.15 ) }
    dend_49 { pt3dadd( -74.723, -137.32, -118.272, 0.15 ) }
    dend_49 { pt3dadd( -76.8473, -147.029, -123.151, 0.15 ) }
    dend_49 { pt3dadd( -76.6062, -157.013, -127.792, 0.15 ) }
    dend_49 { pt3dadd( -75.2581, -167.023, -132.14, 0.15 ) }
    dend_49 { pt3dadd( -72.6001, -176.603, -136.877, 0.15 ) }
    dend_49 { pt3dadd( -70.8276, -187.074, -139.628, 0.15 ) }
    dend_49 { pt3dadd( -67.7742, -196.723, -143.955, 0.15 ) }
    dend_49 { pt3dadd( -66.7605, -206.497, -148.932, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 75/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 12.7181, -131.207, 34.8858, 0.22 ) }
    dend_46 { pt3dadd( 12.2683, -131.971, 34.9194, 0.22 ) }
    dend_46 { pt3dadd( 11.6668, -132.994, 34.9643, 0.22 ) }
    dend_46 { pt3dadd( 11.1443, -133.883, 35.0033, 0.22 ) }
    dend_46 { pt3dadd( 10.2124, -135.467, 35.0729, 0.22 ) }
    dend_46 { pt3dadd( 9.79194, -136.182, 35.1043, 0.15 ) }
    dend_46 { pt3dadd( 9.37257, -136.895, 35.1356, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 12.7181, -131.207, 34.8858, 1.18 ) }
    dend_43 { pt3dadd( 12.9398, -132.002, 35.2925, 1.18 ) }
    dend_43 { pt3dadd( 13.179, -132.923, 35.7246, 0.29 ) }
    dend_43 { pt3dadd( 13.3793, -133.769, 36.1146, 0.15 ) }
    dend_43 { pt3dadd( 13.4819, -134.251, 36.331, 0.15 ) }
    dend_43 { pt3dadd( 13.5723, -134.725, 36.537, 0.29 ) }
    dend_43 { pt3dadd( 13.6724, -135.4, 36.8292, 0.66 ) }
    dend_43 { pt3dadd( 13.7348, -136.1, 37.1279, 1.4 ) }
    dend_43 { pt3dadd( 13.7266, -137.136, 37.5472, 0.22 ) }
    dend_43 { pt3dadd( 13.674, -137.855, 37.8253, 0.22 ) }
    dend_43 { pt3dadd( 13.6392, -138.169, 37.9415, 0.22 ) }
    dend_43 { pt3dadd( 13.5545, -138.839, 38.1649, 0.22 ) }
    dend_43 { pt3dadd( 13.4714, -139.418, 38.3407, 0.66 ) }
    dend_43 { pt3dadd( 13.3467, -140.14, 38.5397, 0.15 ) }
    dend_43 { pt3dadd( 13.2082, -140.751, 38.6968, 0.15 ) }
    dend_43 { pt3dadd( 13.0133, -141.496, 38.8854, 0.52 ) }
    dend_43 { pt3dadd( 12.7654, -142.418, 39.1272, 0.29 ) }
    dend_43 { pt3dadd( 12.6678, -142.784, 39.2257, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( 12.5681, -143.156, 39.3339, 0.15 ) }
    dend_43 { pt3dadd( 12.3755, -143.835, 39.5247, 0.15 ) }
    dend_43 { pt3dadd( 12.2342, -144.294, 39.6471, 0.29 ) }
    dend_43 { pt3dadd( 12.0448, -144.922, 39.8238, 1.11 ) }
    dend_43 { pt3dadd( 11.8711, -145.561, 40.0137, 1.77 ) }
    dend_43 { pt3dadd( 11.6798, -146.45, 40.2837, 1.77 ) }
    dend_43 { pt3dadd( 11.5246, -147.381, 40.5757, 1.33 ) }
    dend_43 { pt3dadd( 11.3475, -148.675, 40.9816, 0.15 ) }
    dend_43 { pt3dadd( 11.2446, -149.537, 41.264, 0.22 ) }
    dend_43 { pt3dadd( 11.1755, -150.157, 41.4747, 0.66 ) }
    dend_43 { pt3dadd( 11.1127, -150.755, 41.6849, 0.81 ) }
    dend_43 { pt3dadd( 11.0204, -151.865, 42.0895, 0.15 ) }
    dend_43 { pt3dadd( 11.0107, -152.519, 42.3384, 0.22 ) }
    dend_43 { pt3dadd( 11.0545, -153.07, 42.5573, 0.22 ) }
    dend_43 { pt3dadd( 11.1421, -153.779, 42.831, 0.22 ) }
    dend_43 { pt3dadd( 11.2044, -154.194, 42.9858, 0.66 ) }
    dend_43 { pt3dadd( 11.3748, -155.007, 43.2848, 1.4 ) }
    dend_43 { pt3dadd( 11.7101, -156.153, 43.7322, 0.88 ) }
    dend_43 { pt3dadd( 11.9409, -156.868, 44.0205, 0.15 ) }
    dend_43 { pt3dadd( 12.1708, -157.553, 44.2933, 0.15 ) }
    dend_43 { pt3dadd( 12.3453, -158.051, 44.4886, 0.22 ) }
    dend_43 { pt3dadd( 12.6124, -158.831, 44.8007, 0.29 ) }
    dend_43 { pt3dadd( 12.7947, -159.44, 45.0382, 0.15 ) }
    dend_43 { pt3dadd( 12.9579, -160.28, 45.3359, 0.15 ) }
    dend_43 { pt3dadd( 12.9834, -160.572, 45.434, 0.15 ) }
    dend_43 { pt3dadd( 12.9938, -161.183, 45.6498, 0.22 ) }
    dend_43 { pt3dadd( 12.948, -162.072, 45.9693, 0.22 ) }
    dend_43 { pt3dadd( 12.9099, -162.456, 46.1076, 0.22 ) }
    dend_43 { pt3dadd( 12.8286, -163.265, 46.3923, 0.37 ) }
    dend_43 { pt3dadd( 12.7695, -164.09, 46.6945, 0.22 ) }
    dend_43 { pt3dadd( 12.7444, -164.646, 46.8922, 0.88 ) }
    dend_43 { pt3dadd( 12.7394, -165.886, 47.3163, 2.06 ) }
    dend_43 { pt3dadd( 12.8034, -167.337, 47.7371, 0.59 ) }
    dend_43 { pt3dadd( 12.9014, -168.321, 47.9618, 0.22 ) }
    dend_43 { pt3dadd( 13.0045, -168.972, 48.0623, 0.22 ) }
    dend_43 { pt3dadd( 13.1092, -169.548, 48.1272, 0.22 ) }
    dend_43 { pt3dadd( 13.2628, -170.342, 48.1794, 0.59 ) }
    dend_43 { pt3dadd( 13.5165, -171.467, 48.1742, 0.07 ) }
    dend_43 { pt3dadd( 13.7006, -172.15, 48.0878, 0.15 ) }
    dend_43 { pt3dadd( 13.9355, -172.959, 47.9071, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 40/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.00773, -52.3217, -1.30666, 0.74 ) }
    dend_39 { pt3dadd( -2.19668, -54.1301, -1.63009, 0.74 ) }
    dend_39 { pt3dadd( -2.37372, -55.7404, -1.94526, 0.74 ) }
    dend_39 { pt3dadd( -2.50075, -56.6509, -2.1231, 0.81 ) }
    dend_39 { pt3dadd( -2.77414, -58.1521, -2.42357, 0.88 ) }
    dend_39 { pt3dadd( -2.97286, -59.1164, -2.6168, 0.81 ) }
    dend_39 { pt3dadd( -3.26526, -60.3614, -2.86979, 1.18 ) }
    dend_39 { pt3dadd( -3.5193, -61.2865, -3.0769, 1.18 ) }
    dend_39 { pt3dadd( -3.90855, -62.4189, -3.3263, 1.03 ) }
    dend_39 { pt3dadd( -4.3802, -63.6201, -3.6015, 1.11 ) }
    dend_39 { pt3dadd( -4.80116, -64.5586, -3.81478, 0.74 ) }
    dend_39 { pt3dadd( -5.33743, -65.6136, -4.03408, 1.11 ) }
    dend_39 { pt3dadd( -5.81995, -66.5109, -4.20039, 0.81 ) }
    dend_39 { pt3dadd( -6.38875, -67.5689, -4.37268, 0.81 ) }
    dend_39 { pt3dadd( -6.56659, -67.9554, -4.4273, 0.81 ) }
    dend_39 { pt3dadd( -6.85899, -68.7715, -4.52424, 0.88 ) }
    dend_39 { pt3dadd( -7.09418, -69.6761, -4.59482, 0.88 ) }
    dend_39 { pt3dadd( -7.35996, -71.1713, -4.64955, 1.11 ) }
    dend_39 { pt3dadd( -7.45166, -71.8847, -4.63611, 1.33 ) }
    dend_39 { pt3dadd( -7.63524, -73.61, -4.46781, 0.74 ) }
    dend_39 { pt3dadd( -7.71637, -74.6339, -4.34926, 0.74 ) }
    dend_39 { pt3dadd( -7.76576, -76.1398, -4.15271, 0.88 ) }
    dend_39 { pt3dadd( -7.76038, -77.0263, -4.01013, 1.25 ) }
    dend_39 { pt3dadd( -7.75283, -77.9405, -3.82128, 1.03 ) }
    dend_39 { pt3dadd( -7.80866, -79.1609, -3.47306, 0.74 ) }
    dend_39 { pt3dadd( -8.12134, -88.8682, -3.64325, 0.74 ) }
    dend_39 { pt3dadd( -9.07384, -98.4635, -2.36619, 0.74 ) }
    dend_39 { pt3dadd( -9.61925, -108.034, -0.698124, 0.74 ) }
    dend_39 { pt3dadd( -9.59159, -117.177, 2.76012, 0.74 ) }
    dend_39 { pt3dadd( -8.68743, -126.385, 5.89282, 0.74 ) }
    dend_39 { pt3dadd( -8.31023, -135.298, 9.94599, 0.74 ) }
    dend_39 { pt3dadd( -9.80951, -144.466, 12.9777, 0.74 ) }
    dend_39 { pt3dadd( -9.42261, -153.954, 15.1359, 0.74 ) }
    dend_39 { pt3dadd( -8.47257, -163.37, 17.4688, 0.74 ) }
    dend_39 { pt3dadd( -7.63214, -172.837, 19.6032, 0.74 ) }
    dend_39 { pt3dadd( -6.71984, -182.327, 21.5886, 0.74 ) }
    dend_39 { pt3dadd( -6.19066, -191.527, 24.8302, 0.74 ) }
    dend_39 { pt3dadd( -7.43104, -200.115, 29.4488, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -2.00773, -52.3217, -1.30666, 1.03 ) }
    dend_38 { pt3dadd( -1.93495, -53.1998, -0.818248, 1.03 ) }
    dend_38 { pt3dadd( -1.84853, -54.4996, -0.165802, 1.03 ) }
    dend_38 { pt3dadd( -1.80504, -55.504, 0.240549, 1.03 ) }
    dend_38 { pt3dadd( -1.72947, -56.9903, 0.736847, 1.03 ) }
    dend_38 { pt3dadd( -1.63428, -58.2458, 1.07736, 0.96 ) }
    dend_38 { pt3dadd( -1.5331, -59.1357, 1.29024, 0.96 ) }
    dend_38 { pt3dadd( -1.41513, -59.884, 1.4241, 0.96 ) }
    dend_38 { pt3dadd( -0.961686, -61.9215, 1.67428, 0.88 ) }
    dend_38 { pt3dadd( -0.581826, -63.1283, 1.77381, 0.88 ) }
    dend_38 { pt3dadd( 0.106848, -64.6958, 1.88159, 0.88 ) }
    dend_38 { pt3dadd( 1.00215, -66.2454, 1.99349, 0.81 ) }
    dend_38 { pt3dadd( 1.75749, -67.2926, 2.09182, 0.81 ) }
    dend_38 { pt3dadd( 2.3773, -68.0025, 2.19049, 0.81 ) }
    dend_38 { pt3dadd( 3.33098, -68.915, 2.36045, 0.88 ) }
    dend_38 { pt3dadd( 4.3256, -69.855, 2.58036, 1.03 ) }
    dend_38 { pt3dadd( 4.98113, -70.5507, 2.76911, 1.03 ) }
    dend_38 { pt3dadd( 5.77644, -71.6154, 3.05872, 0.81 ) }
    dend_38 { pt3dadd( 6.31802, -72.609, 3.31441, 1.4 ) }
    dend_38 { pt3dadd( 6.5671, -73.2294, 3.46286, 1.92 ) }
    dend_38 { pt3dadd( 7.03945, -74.8833, 3.77539, 1.4 ) }
    dend_38 { pt3dadd( 7.47585, -76.8323, 4.01128, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 7.74079, -78.2015, 4.10084, 0.88 ) }
    dend_38 { pt3dadd( 7.99733, -79.6294, 4.12168, 1.03 ) }
    dend_38 { pt3dadd( 8.15035, -80.425, 4.09939, 1.03 ) }
    dend_38 { pt3dadd( 8.42837, -81.7212, 4.01375, 0.81 ) }
    dend_38 { pt3dadd( 8.71726, -82.9167, 3.86468, 1.18 ) }
    dend_38 { pt3dadd( 8.79651, -83.2779, 3.80673, 1.18 ) }
    dend_38 { pt3dadd( 8.89122, -83.9842, 3.70282, 0.74 ) }
    dend_38 { pt3dadd( 8.86501, -84.9012, 3.63183, 0.44 ) }
    dend_38 { pt3dadd( 8.76578, -85.4457, 3.63131, 0.44 ) }
    dend_38 { pt3dadd( 8.52328, -86.2442, 3.6844, 0.66 ) }
    dend_38 { pt3dadd( 8.1396, -87.3034, 3.77981, 0.81 ) }
    dend_38 { pt3dadd( 7.78559, -88.2619, 3.86657, 0.96 ) }
    dend_38 { pt3dadd( 7.24141, -89.7616, 3.99666, 1.33 ) }
    dend_38 { pt3dadd( 6.8965, -90.753, 4.07657, 0.88 ) }
    dend_38 { pt3dadd( 6.58829, -91.7272, 4.16119, 1.11 ) }
    dend_38 { pt3dadd( 6.26799, -92.8689, 4.2871, 1.18 ) }
    dend_38 { pt3dadd( 5.98756, -93.9534, 4.43162, 1.18 ) }
    dend_38 { pt3dadd( 5.60728, -95.4679, 4.66417, 0.52 ) }
    dend_38 { pt3dadd( 5.24247, -97.0391, 4.9523, 0.52 ) }
    dend_38 { pt3dadd( 4.97941, -98.2112, 5.18564, 0.74 ) }
    dend_38 { pt3dadd( 4.74544, -99.3024, 5.41464, 0.96 ) }
    dend_38 { pt3dadd( 4.53881, -100.324, 5.61649, 1.62 ) }
    dend_38 { pt3dadd( 4.34565, -101.344, 5.79277, 1.62 ) }
    dend_38 { pt3dadd( 4.12714, -102.62, 5.96693, 1.33 ) }
    dend_38 { pt3dadd( 3.97487, -103.668, 6.05869, 0.44 ) }
    dend_38 { pt3dadd( 3.86734, -104.29, 6.08159, 0.59 ) }
    dend_38 { pt3dadd( 3.5962, -105.454, 6.10975, 0.59 ) }
    dend_38 { pt3dadd( 3.22015, -106.701, 6.15717, 0.88 ) }
    dend_38 { pt3dadd( 2.85691, -107.66, 6.21179, 1.25 ) }
    dend_38 { pt3dadd( 2.59437, -108.243, 6.26421, 2.21 ) }
    dend_38 { pt3dadd( 1.92991, -109.601, 6.44726, 1.84 ) }
    dend_38 { pt3dadd( 1.14855, -111.132, 6.71402, 1.33 ) }
    dend_38 { pt3dadd( 0.433441, -112.533, 7.02961, 0.66 ) }
    dend_38 { pt3dadd( 0.0854905, -113.269, 7.20777, 0.44 ) }
    dend_38 { pt3dadd( -0.256598, -114.062, 7.40117, 0.44 ) }
    dend_38 { pt3dadd( -0.580984, -114.911, 7.60177, 0.81 ) }
    dend_38 { pt3dadd( -0.901303, -115.995, 7.8239, 1.11 ) }
    dend_38 { pt3dadd( -1.16544, -117.206, 8.0161, 0.74 ) }
    dend_38 { pt3dadd( -1.39891, -118.516, 8.18809, 0.37 ) }
    dend_38 { pt3dadd( -1.5722, -119.528, 8.2928, 0.37 ) }
    dend_38 { pt3dadd( -1.69172, -120.166, 8.35392, 0.74 ) }
    dend_38 { pt3dadd( -1.89913, -121.132, 8.45319, 0.88 ) }
    dend_38 { pt3dadd( -2.24012, -122.544, 8.63211, 0.44 ) }
    dend_38 { pt3dadd( -2.43161, -123.198, 8.75295, 0.44 ) }
    dend_38 { pt3dadd( -2.65737, -123.822, 8.94276, 0.59 ) }
    dend_38 { pt3dadd( -2.96962, -124.509, 9.23573, 0.96 ) }
    dend_38 { pt3dadd( -3.26618, -125.064, 9.53806, 1.25 ) }
    dend_38 { pt3dadd( -3.59825, -125.642, 9.92031, 1.25 ) }
    dend_38 { pt3dadd( -3.97671, -126.333, 10.4244, 0.81 ) }
    dend_38 { pt3dadd( -4.19994, -126.886, 10.8016, 1.11 ) }
    dend_38 { pt3dadd( -4.40393, -127.848, 11.2964, 0.22 ) }
    dend_38 { pt3dadd( -4.43815, -128.294, 11.4355, 0.22 ) }
    dend_38 { pt3dadd( -4.45213, -129.001, 11.5894, 0.22 ) }
    dend_38 { pt3dadd( -4.46818, -129.641, 11.6894, 0.74 ) }
    dend_38 { pt3dadd( -4.49908, -130.284, 11.7738, 1.18 ) }
    dend_38 { pt3dadd( -4.61988, -131.75, 11.9727, 0.66 ) }
    dend_38 { pt3dadd( -4.78285, -133.015, 12.1831, 0.37 ) }
    dend_38 { pt3dadd( -5.05595, -134.121, 12.4291, 0.66 ) }
    dend_38 { pt3dadd( -5.35591, -135.042, 12.7005, 0.66 ) }
    dend_38 { pt3dadd( -5.60591, -135.743, 12.9584, 1.25 ) }
    dend_38 { pt3dadd( -5.84153, -136.405, 13.2578, 2.06 ) }
    dend_38 { pt3dadd( -6.15651, -137.378, 13.7778, 2.21 ) }
    dend_38 { pt3dadd( -6.65484, -139.199, 14.8108, 1.03 ) }
    dend_38 { pt3dadd( -6.89083, -140.243, 15.389, 0.59 ) }
    dend_38 { pt3dadd( -7.08412, -141.332, 15.9224, 0.37 ) }
    dend_38 { pt3dadd( -7.19049, -142.142, 16.2812, 0.66 ) }
    dend_38 { pt3dadd( -7.27074, -143.126, 16.6771, 0.37 ) }
    dend_38 { pt3dadd( -7.28878, -144.193, 17.0834, 0.29 ) }
    dend_38 { pt3dadd( -7.25743, -144.889, 17.3232, 0.52 ) }
    dend_38 { pt3dadd( -7.21979, -146.099, 17.7294, 0.22 ) }
    dend_38 { pt3dadd( -7.18015, -146.715, 17.9985, 0.22 ) }
    dend_38 { pt3dadd( -7.08757, -147.385, 18.3942, 0.29 ) }
    dend_38 { pt3dadd( -6.94126, -147.996, 18.8901, 0.96 ) }
    dend_38 { pt3dadd( -6.77017, -148.585, 19.4592, 1.77 ) }
    dend_38 { pt3dadd( -6.60123, -149.167, 20.0201, 1.77 ) }
    dend_38 { pt3dadd( -6.23834, -150.521, 21.1789, 0.29 ) }
    dend_38 { pt3dadd( -6.10167, -151.117, 21.5627, 0.29 ) }
    dend_38 { pt3dadd( -6.01362, -151.645, 21.7979, 0.29 ) }
    dend_38 { pt3dadd( -5.92134, -152.456, 22.0165, 0.29 ) }
    dend_38 { pt3dadd( -5.87309, -153.525, 22.1662, 0.29 ) }
    dend_38 { pt3dadd( -5.92425, -154.78, 22.2171, 0.29 ) }
    dend_38 { pt3dadd( -6.00618, -155.399, 22.209, 0.29 ) }
    dend_38 { pt3dadd( -6.20931, -156.313, 22.2027, 0.29 ) }
    dend_38 { pt3dadd( -6.5353, -157.382, 22.2425, 0.29 ) }
    dend_38 { pt3dadd( -6.93751, -158.492, 22.3623, 0.29 ) }
    dend_38 { pt3dadd( -7.21288, -159.185, 22.4736, 1.03 ) }
    dend_38 { pt3dadd( -7.5565, -159.992, 22.6376, 1.92 ) }
    dend_38 { pt3dadd( -8.13836, -161.349, 22.9438, 3.02 ) }
    dend_38 { pt3dadd( -8.77687, -162.871, 23.3222, 2.36 ) }
    dend_38 { pt3dadd( -9.48997, -164.622, 23.7945, 0.22 ) }
    dend_38 { pt3dadd( -9.73298, -165.271, 23.9832, 0.22 ) }
    dend_38 { pt3dadd( -10.0201, -166.15, 24.2527, 0.22 ) }
    dend_38 { pt3dadd( -10.1288, -166.542, 24.3749, 0.52 ) }
    dend_38 { pt3dadd( -10.2698, -167.185, 24.5881, 0.96 ) }
    dend_38 { pt3dadd( -10.4513, -168.132, 24.9018, 0.44 ) }
    dend_38 { pt3dadd( -10.6693, -169.316, 25.2774, 0.22 ) }
    dend_38 { pt3dadd( -10.8055, -170.076, 25.5051, 0.37 ) }
    dend_38 { pt3dadd( -10.9598, -170.971, 25.7547, 0.81 ) }
    dend_38 { pt3dadd( -11.1101, -171.753, 25.9644, 0.96 ) }
    dend_38 { pt3dadd( -11.3525, -172.814, 26.2204, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -11.6031, -173.83, 26.4247, 0.66 ) }
    dend_38 { pt3dadd( -11.7148, -174.306, 26.4975, 0.22 ) }
    dend_38 { pt3dadd( -11.9262, -175.352, 26.6226, 0.22 ) }
    dend_38 { pt3dadd( -12.0, -175.848, 26.6777, 0.44 ) }
    dend_38 { pt3dadd( -12.1381, -177.119, 26.8268, 0.22 ) }
    dend_38 { pt3dadd( -12.1842, -178.003, 26.9576, 0.22 ) }
    dend_38 { pt3dadd( -12.2025, -179.066, 27.1568, 0.29 ) }
    dend_38 { pt3dadd( -12.2201, -179.943, 27.3392, 0.52 ) }
    dend_38 { pt3dadd( -12.2394, -180.851, 27.5314, 0.52 ) }
    dend_38 { pt3dadd( -12.2852, -181.812, 27.7399, 0.52 ) }
    dend_38 { pt3dadd( -12.3664, -182.719, 27.9412, 1.18 ) }
    dend_38 { pt3dadd( -12.4883, -183.557, 28.1253, 2.43 ) }
    dend_38 { pt3dadd( -12.7638, -184.992, 28.4419, 1.33 ) }
    dend_38 { pt3dadd( -13.0193, -186.152, 28.6813, 0.59 ) }
    dend_38 { pt3dadd( -13.2392, -187.099, 28.8606, 0.81 ) }
    dend_38 { pt3dadd( -13.4295, -187.918, 29.0074, 0.15 ) }
    dend_38 { pt3dadd( -13.559, -188.462, 29.1, 0.15 ) }
    dend_38 { pt3dadd( -13.6135, -188.737, 29.1479, 0.15 ) }
    dend_38 { pt3dadd( -13.6769, -189.08, 29.2207, 0.22 ) }
    dend_38 { pt3dadd( -13.8268, -189.739, 29.3799, 0.37 ) }
    dend_38 { pt3dadd( -14.0578, -190.503, 29.5439, 0.37 ) }
    dend_38 { pt3dadd( -14.387, -191.319, 29.6723, 0.22 ) }
    dend_38 { pt3dadd( -14.8405, -192.193, 29.7644, 0.22 ) }
    dend_38 { pt3dadd( -15.1604, -192.694, 29.7881, 0.22 ) }
    dend_38 { pt3dadd( -15.515, -193.157, 29.7943, 0.74 ) }
    dend_38 { pt3dadd( -16.0871, -193.824, 29.7812, 1.77 ) }
    dend_38 { pt3dadd( -16.7712, -194.578, 29.7473, 2.21 ) }
    dend_38 { pt3dadd( -17.2779, -195.12, 29.7456, 2.21 ) }
    dend_38 { pt3dadd( -18.3845, -196.283, 29.7966, 0.37 ) }
    dend_38 { pt3dadd( -19.0729, -197.057, 29.873, 0.37 ) }
    dend_38 { pt3dadd( -19.5958, -197.724, 29.9799, 0.22 ) }
    dend_38 { pt3dadd( -20.0228, -198.353, 30.1363, 0.22 ) }
    dend_38 { pt3dadd( -20.5061, -199.129, 30.3891, 0.22 ) }
    dend_38 { pt3dadd( -20.7735, -199.583, 30.5743, 0.81 ) }
    dend_38 { pt3dadd( -21.1641, -200.269, 30.9555, 1.25 ) }
    dend_38 { pt3dadd( -21.6222, -201.045, 31.4957, 0.88 ) }
    dend_38 { pt3dadd( -22.1612, -201.867, 32.1496, 0.22 ) }
    dend_38 { pt3dadd( -22.4407, -202.284, 32.4871, 0.22 ) }
    dend_38 { pt3dadd( -22.7461, -202.791, 32.8442, 0.22 ) }
    dend_38 { pt3dadd( -23.0415, -203.419, 33.2343, 0.22 ) }
    dend_38 { pt3dadd( -23.2722, -204.253, 33.6228, 0.44 ) }
    dend_38 { pt3dadd( -23.3951, -205.052, 33.8874, 1.47 ) }
    dend_38 { pt3dadd( -23.5028, -205.926, 34.0887, 1.47 ) }
    dend_38 { pt3dadd( -23.6555, -207.027, 34.2746, 0.44 ) }
    dend_38 { pt3dadd( -23.8087, -208.054, 34.4004, 0.96 ) }
    dend_38 { pt3dadd( -24.0824, -209.551, 34.5291, 0.22 ) }
    dend_38 { pt3dadd( -24.2488, -210.343, 34.5911, 0.22 ) }
    dend_38 { pt3dadd( -24.5574, -211.545, 34.6979, 0.22 ) }
    dend_38 { pt3dadd( -24.8456, -212.438, 34.7709, 0.22 ) }
    dend_38 { pt3dadd( -25.0971, -213.092, 34.8175, 0.22 ) }
    dend_38 { pt3dadd( -25.4439, -213.869, 34.8643, 0.22 ) }
    dend_38 { pt3dadd( -25.9422, -214.903, 34.9437, 0.22 ) }
    dend_38 { pt3dadd( -26.2364, -215.552, 35.0011, 0.81 ) }
    dend_38 { pt3dadd( -26.6545, -216.556, 35.1023, 1.77 ) }
    dend_38 { pt3dadd( -27.0356, -217.534, 35.2294, 1.18 ) }
    dend_38 { pt3dadd( -27.7155, -219.417, 35.5186, 0.22 ) }
    dend_38 { pt3dadd( -27.9141, -220.046, 35.64, 0.22 ) }
    dend_38 { pt3dadd( -28.2158, -221.128, 35.904, 0.88 ) }
    dend_38 { pt3dadd( -28.5307, -222.474, 36.3168, 0.15 ) }
    dend_38 { pt3dadd( -28.6689, -223.261, 36.6341, 0.15 ) }
    dend_38 { pt3dadd( -28.7299, -224.034, 36.9927, 0.29 ) }
    dend_38 { pt3dadd( -28.7011, -224.817, 37.3971, 0.74 ) }
    dend_38 { pt3dadd( -28.6461, -225.416, 37.7181, 1.4 ) }
    dend_38 { pt3dadd( -28.5281, -226.313, 38.24, 0.59 ) }
    dend_38 { pt3dadd( -28.3595, -227.504, 38.9388, 0.15 ) }
    dend_38 { pt3dadd( -28.2381, -228.413, 39.4487, 0.15 ) }
    dend_38 { pt3dadd( -28.1251, -229.235, 39.8922, 0.15 ) }
    dend_38 { pt3dadd( -27.9965, -229.992, 40.256, 0.29 ) }
    dend_38 { pt3dadd( -27.7987, -230.942, 40.6943, 0.96 ) }
    dend_38 { pt3dadd( -27.5644, -231.987, 41.1697, 0.44 ) }
    dend_38 { pt3dadd( -27.3741, -232.832, 41.5585, 0.22 ) }
    dend_38 { pt3dadd( -27.1421, -233.848, 42.071, 0.22 ) }
    dend_38 { pt3dadd( -26.8902, -234.822, 42.5791, 0.15 ) }
    dend_38 { pt3dadd( -26.652, -235.655, 42.998, 0.15 ) }
    dend_38 { pt3dadd( -26.4939, -236.216, 43.2667, 0.15 ) }
    dend_38 { pt3dadd( -26.3678, -236.776, 43.5094, 0.29 ) }
    dend_38 { pt3dadd( -26.2393, -237.772, 43.8724, 0.44 ) }
    dend_38 { pt3dadd( -26.2042, -238.751, 44.1647, 0.44 ) }
    dend_38 { pt3dadd( -26.2525, -240.103, 44.519, 0.44 ) }
    dend_38 { pt3dadd( -26.3434, -241.223, 44.7417, 0.44 ) }
    dend_38 { pt3dadd( -26.5057, -242.598, 44.9601, 0.88 ) }
    dend_38 { pt3dadd( -26.6951, -243.668, 45.0947, 1.03 ) }
    dend_38 { pt3dadd( -26.9531, -244.693, 45.2037, 0.37 ) }
    dend_38 { pt3dadd( -27.2548, -245.546, 45.2986, 0.15 ) }
    dend_38 { pt3dadd( -27.6455, -246.369, 45.4164, 0.15 ) }
    dend_38 { pt3dadd( -28.0578, -247.067, 45.5392, 0.37 ) }
    dend_38 { pt3dadd( -28.6706, -247.933, 45.7259, 0.22 ) }
    dend_38 { pt3dadd( -29.181, -248.545, 45.8789, 0.81 ) }
    dend_38 { pt3dadd( -30.1024, -249.485, 46.1432, 1.25 ) }
    dend_38 { pt3dadd( -31.237, -250.456, 46.4477, 0.88 ) }
    dend_38 { pt3dadd( -32.0072, -251.024, 46.6376, 0.22 ) }
    dend_38 { pt3dadd( -32.7861, -251.544, 46.7901, 0.22 ) }
    dend_38 { pt3dadd( -33.5669, -252.05, 46.8998, 0.74 ) }
    dend_38 { pt3dadd( -34.6478, -252.79, 46.9759, 1.47 ) }
    dend_38 { pt3dadd( -35.5111, -253.441, 46.9655, 0.37 ) }
    dend_38 { pt3dadd( -36.7721, -254.524, 46.8089, 0.22 ) }
    dend_38 { pt3dadd( -37.606, -255.374, 46.5893, 0.29 ) }
    dend_38 { pt3dadd( -38.2622, -256.211, 46.306, 0.29 ) }
    dend_38 { pt3dadd( -38.7122, -257.014, 45.985, 0.29 ) }
    dend_38 { pt3dadd( -39.0384, -257.904, 45.6025, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -39.3059, -259.089, 45.1254, 0.22 ) }
    dend_38 { pt3dadd( -39.4552, -260.423, 44.6461, 0.22 ) }
    dend_38 { pt3dadd( -39.4851, -261.076, 44.4437, 0.22 ) }
    dend_38 { pt3dadd( -39.4885, -262.074, 44.2226, 0.37 ) }
    dend_38 { pt3dadd( -39.487, -262.827, 44.1294, 0.59 ) }
    dend_38 { pt3dadd( -39.5386, -264.623, 44.042, 0.66 ) }
    dend_38 { pt3dadd( -39.6237, -265.861, 44.068, 0.88 ) }
    dend_38 { pt3dadd( -39.7081, -266.692, 44.1665, 0.88 ) }
    dend_38 { pt3dadd( -39.9119, -268.181, 44.4207, 0.52 ) }
    dend_38 { pt3dadd( -40.1693, -269.795, 44.7578, 0.22 ) }
    dend_38 { pt3dadd( -40.4107, -271.415, 45.1747, 0.22 ) }
    dend_38 { pt3dadd( -40.505, -272.077, 45.3787, 0.81 ) }
    dend_38 { pt3dadd( -40.7666, -273.836, 45.9698, 1.25 ) }
    dend_38 { pt3dadd( -40.8918, -274.847, 46.3112, 1.03 ) }
    dend_38 { pt3dadd( -40.9544, -275.5, 46.5249, 1.03 ) }
    dend_38 { pt3dadd( -41.0447, -277.105, 47.0719, 0.22 ) }
    dend_38 { pt3dadd( -41.0763, -278.291, 47.4749, 0.22 ) }
    dend_38 { pt3dadd( -41.1174, -279.09, 47.7239, 0.22 ) }
    dend_38 { pt3dadd( -41.2458, -280.389, 48.072, 0.22 ) }
    dend_38 { pt3dadd( -41.3776, -281.129, 48.2671, 0.22 ) }
    dend_38 { pt3dadd( -41.7489, -282.488, 48.5964, 0.22 ) }
    dend_38 { pt3dadd( -42.1296, -283.393, 48.7861, 0.74 ) }
    dend_38 { pt3dadd( -42.5869, -284.256, 48.9351, 1.11 ) }
    dend_38 { pt3dadd( -42.9852, -284.896, 48.9953, 1.11 ) }
    dend_38 { pt3dadd( -43.8715, -286.108, 48.9993, 0.74 ) }
    dend_38 { pt3dadd( -44.5626, -286.979, 48.8905, 1.4 ) }
    dend_38 { pt3dadd( -45.6617, -288.309, 48.5476, 0.66 ) }
    dend_38 { pt3dadd( -46.4136, -289.238, 48.2253, 0.07 ) }
    dend_38 { pt3dadd( -47.3252, -290.421, 47.7638, 0.07 ) }
    dend_38 { pt3dadd( -47.9214, -291.226, 47.4335, 0.22 ) }
    dend_38 { pt3dadd( -48.5657, -292.182, 47.0461, 0.22 ) }
    dend_38 { pt3dadd( -48.9937, -292.86, 46.7983, 0.44 ) }
    dend_38 { pt3dadd( -49.5018, -293.754, 46.532, 0.44 ) }
    dend_38 { pt3dadd( -50.1648, -294.96, 46.3632, 0.44 ) }
    dend_38 { pt3dadd( -50.587, -295.746, 46.4006, 0.22 ) }
    dend_38 { pt3dadd( -51.1696, -296.848, 46.6046, 0.15 ) }
    dend_38 { pt3dadd( -51.5315, -297.462, 46.8151, 0.37 ) }
    dend_38 { pt3dadd( -51.8007, -297.84, 47.0111, 0.37 ) }
    dend_38 { pt3dadd( -52.5098, -298.726, 47.607, 0.15 ) }
    dend_38 { pt3dadd( -53.1864, -299.482, 48.2206, 0.15 ) }
    dend_38 { pt3dadd( -53.4119, -299.705, 48.4231, 0.52 ) }
    dend_38 { pt3dadd( -54.0603, -300.213, 48.9445, 1.03 ) }
    dend_38 { pt3dadd( -54.9646, -300.833, 49.5896, 0.15 ) }
    dend_38 { pt3dadd( -55.6488, -301.254, 49.9981, 0.15 ) }
    dend_38 { pt3dadd( -56.3298, -301.649, 50.3104, 0.15 ) }
    dend_38 { pt3dadd( -56.7784, -301.928, 50.4694, 0.59 ) }
    dend_38 { pt3dadd( -57.7555, -302.605, 50.7558, 0.15 ) }
    dend_38 { pt3dadd( -58.0782, -302.847, 50.8304, 0.15 ) }
    dend_38 { pt3dadd( -58.5816, -303.282, 50.9237, 0.66 ) }
    dend_38 { pt3dadd( -59.0082, -303.699, 50.9992, 0.81 ) }
    dend_38 { pt3dadd( -60.1701, -304.991, 51.2012, 0.15 ) }
    dend_38 { pt3dadd( -61.0733, -306.114, 51.3567, 0.15 ) }
    dend_38 { pt3dadd( -61.8432, -307.179, 51.4876, 0.29 ) }
    dend_38 { pt3dadd( -62.8966, -308.71, 51.6636, 0.22 ) }
    dend_38 { pt3dadd( -63.7993, -310.095, 51.8145, 0.15 ) }
    dend_38 { pt3dadd( -64.1654, -310.663, 51.8757, 0.66 ) }
    dend_38 { pt3dadd( -64.7611, -311.537, 51.9523, 0.81 ) }
    dend_38 { pt3dadd( -65.5261, -312.537, 52.0198, 0.44 ) }
    dend_38 { pt3dadd( -66.0003, -313.128, 52.0546, 1.03 ) }
    dend_38 { pt3dadd( -66.5221, -313.694, 52.0846, 1.25 ) }
    dend_38 { pt3dadd( -67.9649, -315.101, 52.1401, 0.52 ) }
    dend_38 { pt3dadd( -69.1006, -316.095, 52.167, 0.22 ) }
    dend_38 { pt3dadd( -69.8362, -316.651, 52.1675, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.30751, 25.4951, 0.166513, 0.96 ) }
    dend_24 { pt3dadd( 7.87988, 26.6039, -0.300916, 0.96 ) }
    dend_24 { pt3dadd( 8.64533, 27.1405, -0.525708, 1.03 ) }
    dend_24 { pt3dadd( 9.61902, 27.8244, -0.67362, 1.03 ) }
    dend_24 { pt3dadd( 10.4818, 28.4304, -0.804695, 1.62 ) }
    dend_24 { pt3dadd( 11.3179, 29.0176, -0.93171, 1.33 ) }
    dend_24 { pt3dadd( 12.4919, 29.8422, -1.11005, 1.03 ) }
    dend_24 { pt3dadd( 13.3771, 30.4718, -1.21495, 0.96 ) }
    dend_24 { pt3dadd( 15.0647, 31.6727, -1.33656, 1.62 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.30751, 25.4951, 0.166513, 0.88 ) }
    dend_21 { pt3dadd( 7.25877, 27.4248, 0.00383636, 0.88 ) }
    dend_21 { pt3dadd( 8.41058, 29.3478, -0.153098, 0.81 ) }
    dend_21 { pt3dadd( 8.97375, 30.2434, -0.271649, 0.66 ) }
    dend_21 { pt3dadd( 9.53596, 31.1716, -0.436734, 1.11 ) }
    dend_21 { pt3dadd( 10.2241, 32.4268, -0.696461, 0.74 ) }
    dend_21 { pt3dadd( 10.6867, 33.3598, -0.916518, 0.52 ) }
    dend_21 { pt3dadd( 11.2897, 34.6622, -1.37405, 0.22 ) }
    dend_21 { pt3dadd( 11.5289, 35.7056, -1.77817, 0.29 ) }
    dend_21 { pt3dadd( 11.4316, 36.445, -2.13189, 0.29 ) }
    dend_21 { pt3dadd( 11.0741, 37.2242, -2.60192, 0.66 ) }
    dend_21 { pt3dadd( 10.793, 37.6175, -2.8913, 0.66 ) }
    dend_21 { pt3dadd( 9.97593, 38.5475, -3.60386, 0.81 ) }
    dend_21 { pt3dadd( 8.92235, 39.7174, -4.50935, 1.18 ) }
    dend_21 { pt3dadd( 8.14446, 40.6975, -5.23718, 1.03 ) }
    dend_21 { pt3dadd( 7.40585, 41.8517, -6.07305, 0.81 ) }
    dend_21 { pt3dadd( 6.81818, 43.075, -6.92915, 1.11 ) }
    dend_21 { pt3dadd( 6.24518, 44.7481, -8.05957, 0.88 ) }
    dend_21 { pt3dadd( 5.93425, 46.1428, -8.98711, 0.66 ) }
    dend_21 { pt3dadd( 5.76695, 47.4292, -9.80127, 0.66 ) }
    dend_21 { pt3dadd( 5.64252, 48.5172, -10.4084, 0.66 ) }
    dend_21 { pt3dadd( 5.50837, 49.5127, -10.8976, 0.66 ) }
    dend_21 { pt3dadd( 5.31998, 50.7027, -11.4639, 0.81 ) }
    dend_21 { pt3dadd( 5.14712, 51.6107, -11.9263, 1.18 ) }
    dend_21 { pt3dadd( 4.91587, 52.6118, -12.429, 1.18 ) }
    dend_21 { pt3dadd( 4.3883, 54.8343, -13.4674, 0.52 ) }
    dend_21 { pt3dadd( 4.06108, 56.0088, -14.0114, 0.52 ) }
    dend_21 { pt3dadd( 3.81487, 56.9387, -14.4299, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 3.68594, 57.6087, -14.7048, 1.03 ) }
    dend_21 { pt3dadd( 3.60653, 58.8183, -15.1726, 1.03 ) }
    dend_21 { pt3dadd( 3.82145, 60.2838, -15.7359, 0.66 ) }
    dend_21 { pt3dadd( 4.21652, 71.8747, -21.8993, 0.66 ) }
    dend_21 { pt3dadd( 3.98689, 83.991, -26.8409, 0.66 ) }
    dend_21 { pt3dadd( 0.870228, 95.6998, -31.8993, 0.66 ) }
    dend_21 { pt3dadd( -3.23135, 107.172, -36.8577, 0.66 ) }
    dend_21 { pt3dadd( -7.39985, 118.072, -43.0329, 0.66 ) }
    dend_21 { pt3dadd( -14.0546, 128.236, -48.3755, 0.66 ) }
    dend_21 { pt3dadd( -19.9035, 137.921, -55.3763, 0.66 ) }
    dend_21 { pt3dadd( -24.5267, 147.97, -62.7121, 0.66 ) }
    dend_21 { pt3dadd( -30.0342, 158.61, -68.3213, 0.66 ) }
    dend_21 { pt3dadd( -35.7209, 168.164, -75.6464, 0.66 ) }
    dend_21 { pt3dadd( -38.7585, 177.864, -84.2172, 0.66 ) }
    dend_21 { pt3dadd( -42.5447, 187.759, -92.2291, 0.66 ) }
    dend_21 { pt3dadd( -46.5427, 197.446, -100.417, 0.66 ) }
    dend_21 { pt3dadd( -50.3332, 206.617, -109.327, 0.66 ) }
    dend_21 { pt3dadd( -55.2023, 214.454, -119.088, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 18/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 0.996118, 26.6634, 8.29045, 0.96 ) }
    dend_13 { pt3dadd( 0.123797, 27.2644, 8.58881, 0.96 ) }
    dend_13 { pt3dadd( -0.709003, 27.6367, 8.918, 0.66 ) }
    dend_13 { pt3dadd( -1.87824, 27.7657, 9.44845, 0.52 ) }
    dend_13 { pt3dadd( -2.34259, 27.5195, 9.71582, 0.52 ) }
    dend_13 { pt3dadd( -2.95193, 26.672, 10.1485, 0.52 ) }
    dend_13 { pt3dadd( -3.25252, 26.2039, 10.3831, 0.88 ) }
    dend_13 { pt3dadd( -3.86852, 25.0883, 10.9229, 1.11 ) }
    dend_13 { pt3dadd( -4.43256, 24.0691, 11.432, 1.25 ) }
    dend_13 { pt3dadd( -4.92571, 23.296, 11.8394, 1.25 ) }
    dend_13 { pt3dadd( -6.00078, 21.9177, 12.6031, 0.66 ) }
    dend_13 { pt3dadd( -6.64495, 21.2347, 12.9991, 0.96 ) }
    dend_13 { pt3dadd( -7.36968, 20.5987, 13.418, 1.33 ) }
    dend_13 { pt3dadd( -8.32763, 19.902, 13.954, 1.33 ) }
    dend_13 { pt3dadd( -9.79054, 18.9936, 14.7765, 1.33 ) }
    dend_13 { pt3dadd( -11.3903, 18.0713, 15.7182, 0.88 ) }
    dend_13 { pt3dadd( -12.3574, 17.5603, 16.279, 0.88 ) }
    dend_13 { pt3dadd( -13.4586, 16.9724, 16.909, 1.4 ) }
    dend_13 { pt3dadd( -14.169, 16.5742, 17.3267, 1.55 ) }
    dend_13 { pt3dadd( -15.258, 15.9161, 18.0078, 2.06 ) }
    dend_13 { pt3dadd( -16.0662, 15.3281, 18.6321, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 0.996118, 26.6634, 8.29045, 0.74 ) }
    dend_12 { pt3dadd( 0.578309, 25.5142, 8.13771, 0.74 ) }
    dend_12 { pt3dadd( 0.0238791, 24.049, 8.01587, 0.52 ) }
    dend_12 { pt3dadd( -0.460221, 22.7681, 7.96025, 0.88 ) }
    dend_12 { pt3dadd( -0.953586, 21.4013, 7.99453, 0.44 ) }
    dend_12 { pt3dadd( -1.26441, 20.5204, 8.06762, 0.44 ) }
    dend_12 { pt3dadd( -1.49731, 19.857, 8.14767, 0.37 ) }
    dend_12 { pt3dadd( -1.89691, 18.6685, 8.37901, 0.88 ) }
    dend_12 { pt3dadd( -2.23541, 17.4201, 8.68256, 0.44 ) }
    dend_12 { pt3dadd( -2.54365, 16.0427, 9.032, 0.44 ) }
    dend_12 { pt3dadd( -2.70831, 15.0545, 9.25432, 0.74 ) }
    dend_12 { pt3dadd( -2.8007, 14.2761, 9.4158, 1.11 ) }
    dend_12 { pt3dadd( -2.92558, 12.5784, 9.76225, 0.96 ) }
    dend_12 { pt3dadd( -2.95309, 10.9988, 10.1047, 1.18 ) }
    dend_12 { pt3dadd( -2.91538, 9.64632, 10.4371, 1.18 ) }
    dend_12 { pt3dadd( -2.83565, 8.10442, 10.8625, 0.88 ) }
    dend_12 { pt3dadd( -2.74172, 6.82629, 11.2644, 0.66 ) }
    dend_12 { pt3dadd( -2.64545, 5.78448, 11.6491, 0.66 ) }
    dend_12 { pt3dadd( -2.52907, 4.67448, 12.0922, 0.66 ) }
    dend_12 { pt3dadd( -2.39096, 3.40506, 12.6232, 0.66 ) }
    dend_12 { pt3dadd( -2.22943, 1.95578, 13.2079, 0.66 ) }
    dend_12 { pt3dadd( -2.06708, -0.0819208, 13.906, 0.52 ) }
    dend_12 { pt3dadd( -2.00711, -1.1789, 14.192, 0.52 ) }
    dend_12 { pt3dadd( -1.93596, -3.06966, 14.5227, 0.52 ) }
    dend_12 { pt3dadd( -1.91343, -4.36916, 14.633, 0.52 ) }
    dend_12 { pt3dadd( -1.90103, -5.69349, 14.6484, 0.52 ) }
    dend_12 { pt3dadd( -1.89287, -7.40458, 14.6031, 0.96 ) }
    dend_12 { pt3dadd( -1.92023, -8.2738, 14.5705, 1.11 ) }
    dend_12 { pt3dadd( -1.98066, -9.16526, 14.5393, 1.11 ) }
    dend_12 { pt3dadd( -2.19892, -11.3675, 14.5091, 0.44 ) }
    dend_12 { pt3dadd( -2.3401, -12.4109, 14.5031, 0.44 ) }
    dend_12 { pt3dadd( -2.67745, -14.2792, 14.5579, 0.66 ) }
    dend_12 { pt3dadd( -2.96042, -15.5525, 14.6237, 0.52 ) }
    dend_12 { pt3dadd( -3.14164, -16.2102, 14.6529, 0.88 ) }
    dend_12 { pt3dadd( -3.32308, -16.7864, 14.6718, 1.33 ) }
    dend_12 { pt3dadd( -3.73928, -18.0676, 14.6692, 0.96 ) }
    dend_12 { pt3dadd( -4.29514, -19.9014, 14.5989, 0.59 ) }
    dend_12 { pt3dadd( -4.64715, -21.2064, 14.4884, 0.59 ) }
    dend_12 { pt3dadd( -4.83084, -22.0516, 14.3982, 0.96 ) }
    dend_12 { pt3dadd( -5.03983, -23.2361, 14.266, 0.52 ) }
    dend_12 { pt3dadd( -5.25063, -24.8415, 14.096, 0.22 ) }
    dend_12 { pt3dadd( -5.34751, -25.8733, 14.0077, 0.29 ) }
    dend_12 { pt3dadd( -5.44518, -26.7957, 13.9533, 0.29 ) }
    dend_12 { pt3dadd( -5.54779, -27.5041, 13.9433, 1.03 ) }
    dend_12 { pt3dadd( -5.75283, -28.5767, 13.9604, 1.84 ) }
    dend_12 { pt3dadd( -6.15753, -30.1515, 14.0511, 0.74 ) }
    dend_12 { pt3dadd( -6.69738, -31.7826, 14.2266, 0.29 ) }
    dend_12 { pt3dadd( -7.35082, -33.2792, 14.4914, 0.29 ) }
    dend_12 { pt3dadd( -7.76671, -34.0797, 14.6799, 0.29 ) }
    dend_12 { pt3dadd( -8.06634, -34.6109, 14.8206, 0.88 ) }
    dend_12 { pt3dadd( -8.47577, -35.3143, 15.0188, 1.47 ) }
    dend_12 { pt3dadd( -8.91571, -36.092, 15.2218, 0.88 ) }
    dend_12 { pt3dadd( -9.90004, -38.06, 15.6433, 0.22 ) }
    dend_12 { pt3dadd( -10.2078, -38.8145, 15.7569, 0.15 ) }
    dend_12 { pt3dadd( -10.5229, -39.7644, 15.8704, 0.37 ) }
    dend_12 { pt3dadd( -10.7863, -40.6183, 15.9766, 0.22 ) }
    dend_12 { pt3dadd( -11.1956, -41.8976, 16.1657, 0.22 ) }
    dend_12 { pt3dadd( -11.5832, -42.9607, 16.3636, 0.52 ) }
    dend_12 { pt3dadd( -11.8388, -43.5555, 16.5098, 0.96 ) }
    dend_12 { pt3dadd( -12.4576, -44.6514, 16.887, 1.62 ) }
    dend_12 { pt3dadd( -13.3396, -45.9009, 17.4352, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -14.3443, -47.1597, 18.0827, 0.59 ) }
    dend_12 { pt3dadd( -15.1342, -48.0843, 18.6146, 0.88 ) }
    dend_12 { pt3dadd( -15.8888, -48.9607, 19.1232, 1.55 ) }
    dend_12 { pt3dadd( -16.5487, -49.7367, 19.5623, 1.55 ) }
    dend_12 { pt3dadd( -17.5308, -50.9734, 20.19, 0.37 ) }
    dend_12 { pt3dadd( -18.3153, -52.1111, 20.715, 0.22 ) }
    dend_12 { pt3dadd( -18.7484, -52.8186, 21.0171, 0.44 ) }
    dend_12 { pt3dadd( -19.3401, -53.891, 21.4395, 1.11 ) }
    dend_12 { pt3dadd( -19.6078, -54.4525, 21.6269, 1.11 ) }
    dend_12 { pt3dadd( -20.1417, -55.7474, 22.0024, 0.44 ) }
    dend_12 { pt3dadd( -20.5758, -56.904, 22.2696, 0.22 ) }
    dend_12 { pt3dadd( -20.9419, -57.9725, 22.4412, 0.29 ) }
    dend_12 { pt3dadd( -21.1698, -58.6247, 22.5081, 0.15 ) }
    dend_12 { pt3dadd( -21.5649, -59.7262, 22.5791, 0.29 ) }
    dend_12 { pt3dadd( -21.726, -60.1658, 22.5965, 0.96 ) }
    dend_12 { pt3dadd( -22.1194, -61.1958, 22.618, 1.62 ) }
    dend_12 { pt3dadd( -22.7743, -62.938, 22.6177, 2.06 ) }
    dend_12 { pt3dadd( -23.3863, -64.6431, 22.6259, 1.4 ) }
    dend_12 { pt3dadd( -23.6715, -65.4677, 22.641, 0.59 ) }
    dend_12 { pt3dadd( -24.1038, -66.7601, 22.6928, 0.22 ) }
    dend_12 { pt3dadd( -24.3598, -67.6268, 22.7306, 0.22 ) }
    dend_12 { pt3dadd( -24.5803, -68.5009, 22.777, 0.66 ) }
    dend_12 { pt3dadd( -24.7905, -69.4649, 22.8264, 0.74 ) }
    dend_12 { pt3dadd( -24.9859, -70.4994, 22.886, 0.22 ) }
    dend_12 { pt3dadd( -25.2077, -71.6599, 22.9815, 0.15 ) }
    dend_12 { pt3dadd( -25.3855, -72.6161, 23.0964, 0.22 ) }
    dend_12 { pt3dadd( -25.4933, -73.2863, 23.1885, 0.66 ) }
    dend_12 { pt3dadd( -25.6223, -74.1259, 23.325, 1.25 ) }
    dend_12 { pt3dadd( -25.8134, -75.2839, 23.5433, 1.47 ) }
    dend_12 { pt3dadd( -26.0852, -76.6745, 23.8416, 0.88 ) }
    dend_12 { pt3dadd( -26.3692, -77.8576, 24.1223, 0.22 ) }
    dend_12 { pt3dadd( -26.6078, -78.6734, 24.3316, 0.22 ) }
    dend_12 { pt3dadd( -26.8746, -79.4591, 24.5408, 0.22 ) }
    dend_12 { pt3dadd( -27.366, -80.6928, 24.8805, 0.37 ) }
    dend_12 { pt3dadd( -27.8501, -81.7503, 25.1656, 0.37 ) }
    dend_12 { pt3dadd( -28.3975, -82.8631, 25.4568, 0.52 ) }
    dend_12 { pt3dadd( -28.7312, -83.5317, 25.6293, 0.22 ) }
    dend_12 { pt3dadd( -29.0381, -84.1819, 25.7945, 0.37 ) }
    dend_12 { pt3dadd( -29.2966, -84.8408, 25.94, 0.74 ) }
    dend_12 { pt3dadd( -29.62, -86.0109, 26.1425, 0.22 ) }
    dend_12 { pt3dadd( -29.8446, -87.2676, 26.3007, 0.22 ) }
    dend_12 { pt3dadd( -29.9772, -88.2765, 26.3888, 0.29 ) }
    dend_12 { pt3dadd( -30.0805, -89.0268, 26.4454, 0.52 ) }
    dend_12 { pt3dadd( -30.238, -90.1066, 26.5168, 1.11 ) }
    dend_12 { pt3dadd( -30.3849, -91.0595, 26.5702, 1.7 ) }
    dend_12 { pt3dadd( -30.6127, -92.3772, 26.6316, 1.33 ) }
    dend_12 { pt3dadd( -30.8825, -93.8707, 26.6719, 0.22 ) }
    dend_12 { pt3dadd( -31.0643, -95.0539, 26.6879, 0.22 ) }
    dend_12 { pt3dadd( -31.122, -95.4631, 26.6912, 0.22 ) }
    dend_12 { pt3dadd( -31.1842, -95.9402, 26.6941, 0.29 ) }
    dend_12 { pt3dadd( -31.2751, -96.6783, 26.7002, 0.52 ) }
    dend_12 { pt3dadd( -31.3772, -97.6299, 26.7097, 0.22 ) }
    dend_12 { pt3dadd( -31.4837, -98.4246, 26.7386, 0.22 ) }
    dend_12 { pt3dadd( -31.6252, -99.0884, 26.7876, 0.22 ) }
    dend_12 { pt3dadd( -31.8757, -99.7768, 26.8873, 0.81 ) }
    dend_12 { pt3dadd( -32.1821, -100.34, 27.0163, 1.47 ) }
    dend_12 { pt3dadd( -32.4703, -100.76, 27.1404, 1.47 ) }
    dend_12 { pt3dadd( -33.2332, -101.744, 27.4718, 0.22 ) }
    dend_12 { pt3dadd( -33.6582, -102.279, 27.6563, 0.22 ) }
    dend_12 { pt3dadd( -34.1607, -102.957, 27.8723, 0.37 ) }
    dend_12 { pt3dadd( -34.7751, -103.868, 28.1325, 0.44 ) }
    dend_12 { pt3dadd( -35.1762, -104.509, 28.3008, 0.22 ) }
    dend_12 { pt3dadd( -35.3357, -104.788, 28.3606, 0.22 ) }
    dend_12 { pt3dadd( -35.5283, -105.152, 28.4241, 0.22 ) }
    dend_12 { pt3dadd( -35.8914, -105.87, 28.5353, 0.22 ) }
    dend_12 { pt3dadd( -36.1847, -106.448, 28.6233, 0.74 ) }
    dend_12 { pt3dadd( -36.5433, -107.161, 28.7307, 1.47 ) }
    dend_12 { pt3dadd( -37.0952, -108.175, 28.9223, 1.99 ) }
    dend_12 { pt3dadd( -37.6441, -109.098, 29.1576, 1.77 ) }
    dend_12 { pt3dadd( -38.5797, -110.523, 29.6148, 0.66 ) }
    dend_12 { pt3dadd( -39.127, -111.282, 29.9079, 0.15 ) }
    dend_12 { pt3dadd( -39.7082, -112.041, 30.2305, 0.15 ) }
    dend_12 { pt3dadd( -40.3322, -112.848, 30.5784, 0.22 ) }
    dend_12 { pt3dadd( -40.8813, -113.525, 30.8844, 0.22 ) }
    dend_12 { pt3dadd( -41.4671, -114.217, 31.1683, 0.29 ) }
    dend_12 { pt3dadd( -41.9758, -114.816, 31.3713, 0.81 ) }
    dend_12 { pt3dadd( -42.672, -115.681, 31.5811, 1.47 ) }
    dend_12 { pt3dadd( -43.4654, -116.741, 31.7207, 0.52 ) }
    dend_12 { pt3dadd( -44.1493, -117.822, 31.7227, 0.22 ) }
    dend_12 { pt3dadd( -44.6076, -118.693, 31.6459, 0.22 ) }
    dend_12 { pt3dadd( -44.9033, -119.413, 31.5549, 0.22 ) }
    dend_12 { pt3dadd( -45.0226, -119.783, 31.4949, 0.22 ) }
    dend_12 { pt3dadd( -45.1763, -120.394, 31.3832, 0.29 ) }
    dend_12 { pt3dadd( -45.3793, -121.322, 31.202, 0.74 ) }
    dend_12 { pt3dadd( -45.533, -122.023, 31.0593, 1.03 ) }
    dend_12 { pt3dadd( -45.9224, -123.508, 30.803, 0.37 ) }
    dend_12 { pt3dadd( -46.2372, -124.519, 30.6576, 0.88 ) }
    dend_12 { pt3dadd( -46.5667, -125.487, 30.5391, 1.18 ) }
    dend_12 { pt3dadd( -46.8782, -126.366, 30.4433, 1.18 ) }
    dend_12 { pt3dadd( -47.4467, -127.987, 30.3076, 0.29 ) }
    dend_12 { pt3dadd( -47.9604, -129.384, 30.2418, 0.29 ) }
    dend_12 { pt3dadd( -48.3271, -130.342, 30.2432, 0.37 ) }
    dend_12 { pt3dadd( -48.5922, -131.012, 30.289, 0.88 ) }
    dend_12 { pt3dadd( -48.8557, -131.696, 30.3714, 0.66 ) }
    dend_12 { pt3dadd( -49.1604, -132.633, 30.5133, 0.22 ) }
    dend_12 { pt3dadd( -49.3515, -133.398, 30.646, 0.22 ) }
    dend_12 { pt3dadd( -49.5051, -134.245, 30.7765, 0.37 ) }
    dend_12 { pt3dadd( -49.5837, -134.848, 30.8631, 0.66 ) }
    dend_12 { pt3dadd( -49.685, -135.801, 31.0038, 1.11 ) }
    dend_12 { pt3dadd( -49.8051, -136.934, 31.18, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( -49.8997, -137.65, 31.3013, 0.29 ) }
    dend_12 { pt3dadd( -50.0406, -138.642, 31.4891, 0.22 ) }
    dend_12 { pt3dadd( -50.153, -139.316, 31.6097, 0.29 ) }
    dend_12 { pt3dadd( -50.3769, -140.498, 31.7705, 0.96 ) }
    dend_12 { pt3dadd( -50.5605, -141.338, 31.8455, 1.03 ) }
    dend_12 { pt3dadd( -50.8936, -142.782, 31.8993, 0.81 ) }
    dend_12 { pt3dadd( -51.1574, -143.94, 31.8765, 0.29 ) }
    dend_12 { pt3dadd( -51.3987, -144.897, 31.8249, 0.22 ) }
    dend_12 { pt3dadd( -51.6708, -145.898, 31.7461, 0.29 ) }
    dend_12 { pt3dadd( -51.9219, -146.77, 31.6565, 0.74 ) }
    dend_12 { pt3dadd( -52.143, -147.537, 31.5727, 0.52 ) }
    dend_12 { pt3dadd( -52.6567, -149.217, 31.4137, 0.29 ) }
    dend_12 { pt3dadd( -53.1876, -150.78, 31.3464, 0.29 ) }
    dend_12 { pt3dadd( -53.7211, -152.205, 31.4115, 0.29 ) }
    dend_12 { pt3dadd( -54.0355, -152.977, 31.4962, 0.29 ) }
    dend_12 { pt3dadd( -54.3637, -153.726, 31.6051, 1.03 ) }
    dend_12 { pt3dadd( -54.6989, -154.45, 31.7209, 1.7 ) }
    dend_12 { pt3dadd( -55.2866, -155.716, 31.933, 1.4 ) }
    dend_12 { pt3dadd( -56.1623, -157.617, 32.2692, 0.44 ) }
    dend_12 { pt3dadd( -56.6699, -158.698, 32.4937, 0.15 ) }
    dend_12 { pt3dadd( -56.8956, -159.172, 32.599, 0.37 ) }
    dend_12 { pt3dadd( -57.2632, -159.929, 32.7596, 0.59 ) }
    dend_12 { pt3dadd( -57.6197, -160.672, 32.8923, 0.59 ) }
    dend_12 { pt3dadd( -58.2941, -162.068, 33.0864, 0.22 ) }
    dend_12 { pt3dadd( -58.829, -163.106, 33.2061, 0.22 ) }
    dend_12 { pt3dadd( -59.2362, -163.872, 33.2974, 0.22 ) }
    dend_12 { pt3dadd( -59.5586, -164.487, 33.3632, 0.88 ) }
    dend_12 { pt3dadd( -59.8571, -165.109, 33.4449, 1.47 ) }
    dend_12 { pt3dadd( -60.2676, -166.03, 33.5693, 1.84 ) }
    dend_12 { pt3dadd( -61.3886, -168.746, 33.948, 0.22 ) }
    dend_12 { pt3dadd( -61.5549, -169.169, 34.0004, 0.22 ) }
    dend_12 { pt3dadd( -61.7693, -169.735, 34.0749, 0.22 ) }
    dend_12 { pt3dadd( -62.2739, -170.991, 34.2465, 0.22 ) }
    dend_12 { pt3dadd( -62.63, -171.781, 34.3648, 0.22 ) }
    dend_12 { pt3dadd( -62.9415, -172.387, 34.4541, 0.74 ) }
    dend_12 { pt3dadd( -63.543, -173.457, 34.5745, 1.33 ) }
    dend_12 { pt3dadd( -64.3357, -174.739, 34.7125, 0.22 ) }
    dend_12 { pt3dadd( -64.8214, -175.462, 34.7863, 0.22 ) }
    dend_12 { pt3dadd( -65.3567, -176.274, 34.8757, 0.22 ) }
    dend_12 { pt3dadd( -65.7147, -176.936, 34.9849, 0.15 ) }
    dend_12 { pt3dadd( -65.9388, -177.475, 35.1028, 0.15 ) }
    dend_12 { pt3dadd( -66.2046, -178.258, 35.3485, 0.37 ) }
    dend_12 { pt3dadd( -66.3116, -178.647, 35.4954, 0.96 ) }
    dend_12 { pt3dadd( -66.6618, -180.11, 36.1228, 2.14 ) }
    dend_12 { pt3dadd( -67.0589, -181.812, 36.9293, 0.66 ) }
    dend_12 { pt3dadd( -67.3601, -182.988, 37.5645, 0.15 ) }
    dend_12 { pt3dadd( -67.6583, -183.985, 38.1889, 0.15 ) }
    dend_12 { pt3dadd( -67.8549, -184.567, 38.5993, 0.44 ) }
    dend_12 { pt3dadd( -68.0524, -185.1, 39.0019, 1.03 ) }
    dend_12 { pt3dadd( -68.3941, -185.967, 39.6689, 1.55 ) }
    dend_12 { pt3dadd( -68.8083, -187.038, 40.5132, 0.44 ) }
    dend_12 { pt3dadd( -69.0871, -187.79, 41.0352, 0.22 ) }
    dend_12 { pt3dadd( -69.2845, -188.385, 41.3802, 0.22 ) }
    dend_12 { pt3dadd( -69.5872, -189.315, 41.8453, 0.22 ) }
    dend_12 { pt3dadd( -69.8861, -190.2, 42.2277, 0.29 ) }
    dend_12 { pt3dadd( -70.2547, -191.218, 42.5921, 0.29 ) }
    dend_12 { pt3dadd( -70.7549, -192.496, 42.9634, 0.15 ) }
    dend_12 { pt3dadd( -71.1578, -193.441, 43.1966, 0.22 ) }
    dend_12 { pt3dadd( -71.6271, -194.411, 43.3746, 0.88 ) }
    dend_12 { pt3dadd( -72.3601, -195.766, 43.5299, 0.74 ) }
    dend_12 { pt3dadd( -72.8861, -196.633, 43.5747, 0.88 ) }
    dend_12 { pt3dadd( -73.4606, -197.522, 43.5574, 1.77 ) }
    dend_12 { pt3dadd( -74.133, -198.524, 43.4641, 2.29 ) }
    dend_12 { pt3dadd( -75.1662, -200.053, 43.1871, 0.07 ) }
    dend_12 { pt3dadd( -75.7901, -200.982, 42.9254, 0.15 ) }
    dend_12 { pt3dadd( -76.1764, -201.564, 42.6935, 0.15 ) }
    dend_12 { pt3dadd( -76.3792, -201.886, 42.5417, 0.15 ) }
    dend_12 { pt3dadd( -76.7074, -202.511, 42.2176, 0.15 ) }
    dend_12 { pt3dadd( -76.8828, -203.006, 41.9609, 0.15 ) }
    dend_12 { pt3dadd( -77.0869, -203.897, 41.5835, 0.15 ) }
    dend_12 { pt3dadd( -77.146, -204.229, 41.4637, 0.15 ) }
    dend_12 { pt3dadd( -77.2896, -205.176, 41.1619, 0.66 ) }
    dend_12 { pt3dadd( -77.5645, -206.903, 40.6787, 0.29 ) }
    dend_12 { pt3dadd( -77.7596, -208.03, 40.4198, 0.22 ) }
    dend_12 { pt3dadd( -77.9422, -209.065, 40.2264, 0.22 ) }
    dend_12 { pt3dadd( -78.1264, -209.965, 40.1095, 0.22 ) }
    dend_12 { pt3dadd( -78.2592, -210.426, 40.0841, 0.59 ) }
    dend_12 { pt3dadd( -78.4486, -210.866, 40.1058, 0.74 ) }
    dend_12 { pt3dadd( -78.7115, -211.298, 40.2074, 0.37 ) }
    dend_12 { pt3dadd( -79.0983, -211.815, 40.4175, 0.15 ) }
    dend_12 { pt3dadd( -79.8943, -212.783, 40.9156, 0.15 ) }
    dend_12 { pt3dadd( -80.3447, -213.291, 41.2171, 0.22 ) }
    dend_12 { pt3dadd( -80.8041, -213.807, 41.5279, 0.29 ) }
    dend_12 { pt3dadd( -81.2664, -214.358, 41.8635, 0.22 ) }
    dend_12 { pt3dadd( -81.8399, -215.121, 42.3042, 0.22 ) }
    dend_12 { pt3dadd( -82.4489, -216.053, 42.7977, 0.29 ) }
    dend_12 { pt3dadd( -82.8485, -216.761, 43.1482, 0.29 ) }
    dend_12 { pt3dadd( -83.3574, -217.643, 43.5862, 0.22 ) }
    dend_12 { pt3dadd( -83.8013, -218.335, 43.9402, 0.37 ) }
    dend_12 { pt3dadd( -84.2558, -218.988, 44.2656, 0.74 ) }
    dend_12 { pt3dadd( -84.5881, -219.456, 44.4941, 1.03 ) }
    dend_12 { pt3dadd( -85.2496, -220.4, 44.9464, 0.22 ) }
    dend_12 { pt3dadd( -85.8412, -221.285, 45.344, 0.22 ) }
    dend_12 { pt3dadd( -86.3604, -222.063, 45.6698, 0.15 ) }
    dend_12 { pt3dadd( -86.7598, -222.677, 45.8954, 0.15 ) }
    dend_12 { pt3dadd( -87.0394, -223.145, 46.0475, 0.15 ) }
    dend_12 { pt3dadd( -87.474, -223.964, 46.2507, 0.22 ) }
    dend_12 { pt3dadd( -88.0633, -225.213, 46.478, 0.29 ) }
    dend_12 { pt3dadd( -88.5059, -226.323, 46.6273, 0.74 ) }
    dend_12 { pt3dadd( -88.9242, -227.583, 46.7775, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_12 { pt3dadd( -89.2191, -228.576, 46.8908, 0.37 ) }
    dend_12 { pt3dadd( -89.5043, -229.638, 47.0058, 0.37 ) }
    dend_12 { pt3dadd( -89.7015, -230.455, 47.1104, 1.4 ) }
    dend_12 { pt3dadd( -89.9822, -231.628, 47.2886, 2.95 ) }
    dend_12 { pt3dadd( -90.412, -233.273, 47.6028, 1.18 ) }
    dend_12 { pt3dadd( -90.807, -234.554, 47.9076, 0.22 ) }
    dend_12 { pt3dadd( -91.3009, -236.038, 48.3288, 0.29 ) }
    dend_12 { pt3dadd( -91.6718, -237.137, 48.6688, 0.74 ) }
    dend_12 { pt3dadd( -91.9555, -237.953, 48.9249, 1.33 ) }
    dend_12 { pt3dadd( -92.4602, -239.184, 49.3321, 0.81 ) }
    dend_12 { pt3dadd( -92.9495, -240.192, 49.625, 1.18 ) }
    dend_12 { pt3dadd( -93.7799, -241.855, 50.014, 0.66 ) }
    dend_12 { pt3dadd( -94.2918, -242.944, 50.1939, 0.29 ) }
    dend_12 { pt3dadd( -94.4826, -243.371, 50.2427, 0.44 ) }
    dend_12 { pt3dadd( -95.2149, -245.147, 50.3869, 0.29 ) }
    dend_12 { pt3dadd( -95.742, -246.475, 50.4447, 0.81 ) }
    dend_12 { pt3dadd( -96.54, -248.383, 50.4532, 0.22 ) }
    dend_12 { pt3dadd( -96.9884, -249.246, 50.4155, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 45.4693, -15.0122, -38.712, 0.15 ) }
    dend_9 { pt3dadd( 51.6555, -19.4974, -43.0783, 0.15 ) }
    dend_9 { pt3dadd( 57.647, -24.48, -47.1011, 0.15 ) }
    dend_9 { pt3dadd( 63.1728, -29.1563, -52.1115, 0.15 ) }
    dend_9 { pt3dadd( 69.4637, -33.6551, -56.3032, 0.15 ) }
    dend_9 { pt3dadd( 75.2874, -37.145, -62.0029, 0.15 ) }
    dend_9 { pt3dadd( 80.897, -40.7227, -67.8596, 0.15 ) }
    dend_9 { pt3dadd( 86.6043, -45.2213, -72.8424, 0.15 ) }
    dend_9 { pt3dadd( 91.2507, -51.0394, -77.4174, 0.15 ) }
    dend_9 { pt3dadd( 97.3189, -55.8609, -81.5423, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 45.4693, -15.0122, -38.712, 0.59 ) }
    dend_8 { pt3dadd( 55.0981, -20.4286, -43.2594, 0.15 ) }
    dend_8 { pt3dadd( 64.4359, -26.159, -47.9962, 0.15 ) }
    dend_8 { pt3dadd( 74.4388, -31.4985, -51.7229, 0.15 ) }
    dend_8 { pt3dadd( 84.7392, -36.6031, -54.9419, 0.15 ) }
    dend_8 { pt3dadd( 94.4352, -41.6773, -59.7865, 0.15 ) }
    dend_8 { pt3dadd( 103.697, -47.3554, -64.7477, 0.15 ) }
    dend_8 { pt3dadd( 112.54, -54.0666, -68.9699, 0.15 ) }
    dend_8 { pt3dadd( 120.465, -61.3872, -73.9018, 0.15 ) }
    dend_8 { pt3dadd( 127.684, -69.5997, -78.3494, 0.15 ) }
    dend_8 { pt3dadd( 134.707, -78.6343, -80.8224, 0.15 ) }
    dend_8 { pt3dadd( 142.542, -86.7925, -84.1008, 0.15 ) }
    dend_8 { pt3dadd( 149.76, -94.9373, -88.6936, 0.15 ) }
    dend_8 { pt3dadd( 156.198, -103.437, -93.7667, 0.15 ) }
    dend_8 { pt3dadd( 163.807, -110.288, -99.8596, 0.15 ) }
    dend_8 { pt3dadd( 173.66, -114.277, -105.481, 0.15 ) }
    dend_8 { pt3dadd( 183.718, -118.34, -110.646, 0.15 ) }
    dend_8 { pt3dadd( 193.858, -120.68, -116.787, 0.15 ) }
    dend_8 { pt3dadd( 204.059, -123.742, -122.439, 0.15 ) }
    dend_8 { pt3dadd( 213.741, -124.969, -129.618, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 42.5099, -21.0119, -46.8131, 0.15 ) }
    dend_6 { pt3dadd( 44.6951, -25.6452, -54.3404, 0.15 ) }
    dend_6 { pt3dadd( 46.4651, -31.0955, -61.3497, 0.15 ) }
    dend_6 { pt3dadd( 48.438, -35.7029, -68.9461, 0.15 ) }
    dend_6 { pt3dadd( 48.9547, -42.0983, -75.2188, 0.15 ) }
    dend_6 { pt3dadd( 49.4288, -49.4253, -80.3055, 0.15 ) }
    dend_6 { pt3dadd( 49.6723, -56.3001, -86.0217, 0.15 ) }
    dend_6 { pt3dadd( 50.7287, -61.8402, -93.0734, 0.15 ) }
    dend_6 { pt3dadd( 53.2545, -67.8345, -99.3671, 0.15 ) }
    dend_6 { pt3dadd( 54.6021, -74.5734, -105.149, 0.15 ) }
    dend_6 { pt3dadd( 57.215, -81.3388, -110.517, 0.15 ) }
    dend_6 { pt3dadd( 59.1688, -88.2118, -115.981, 0.15 ) }
    dend_6 { pt3dadd( 60.4686, -94.4114, -122.38, 0.15 ) }
    dend_6 { pt3dadd( 59.8586, -100.609, -128.817, 0.15 ) }
    dend_6 { pt3dadd( 59.9817, -107.328, -134.725, 0.15 ) }
    dend_6 { pt3dadd( 62.0768, -114.31, -139.997, 0.15 ) }
    dend_6 { pt3dadd( 63.3083, -120.286, -146.63, 0.15 ) }
    dend_6 { pt3dadd( 65.9556, -126.209, -152.951, 0.15 ) }
    dend_6 { pt3dadd( 68.318, -132.844, -158.584, 0.15 ) }
    dend_6 { pt3dadd( 70.1231, -138.659, -165.263, 0.15 ) }
    dend_6 { pt3dadd( 72.1345, -145.004, -171.348, 0.15 ) }
    dend_6 { pt3dadd( 73.1507, -150.647, -178.315, 0.15 ) }
    dend_6 { pt3dadd( 73.8452, -157.047, -184.573, 0.15 ) }
    dend_6 { pt3dadd( 74.5127, -164.201, -189.9, 0.15 ) }
    dend_6 { pt3dadd( 74.6729, -170.518, -196.262, 0.15 ) }
    dend_6 { pt3dadd( 75.3808, -176.894, -202.545, 0.15 ) }
    dend_6 { pt3dadd( 75.0831, -183.912, -208.051, 0.15 ) }
    dend_6 { pt3dadd( 75.5678, -191.639, -212.481, 0.15 ) }
    dend_6 { pt3dadd( 77.864, -199.707, -215.685, 0.15 ) }
    dend_6 { pt3dadd( 81.4012, -207.761, -217.792, 0.15 ) }
    dend_6 { pt3dadd( 85.9859, -215.441, -219.495, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 42.5099, -21.0119, -46.8131, 0.59 ) }
    dend_3 { pt3dadd( 46.6062, -26.659, -52.1189, 0.15 ) }
    dend_3 { pt3dadd( 52.0469, -31.3222, -57.3077, 0.15 ) }
    dend_3 { pt3dadd( 57.773, -35.9526, -62.2305, 0.15 ) }
    dend_3 { pt3dadd( 61.623, -40.9291, -68.3577, 0.15 ) }
    dend_3 { pt3dadd( 64.5692, -45.9959, -74.8545, 0.15 ) }
    dend_3 { pt3dadd( 68.2387, -50.4731, -81.4793, 0.15 ) }
    dend_3 { pt3dadd( 72.7467, -54.2372, -88.1001, 0.15 ) }
    dend_3 { pt3dadd( 78.1775, -57.4927, -94.3435, 0.15 ) }
    dend_3 { pt3dadd( 84.0275, -61.5205, -99.6733, 0.15 ) }
    dend_3 { pt3dadd( 89.4127, -66.5574, -104.537, 0.15 ) }
    dend_3 { pt3dadd( 95.451, -72.0333, -107.982, 0.15 ) }
    dend_3 { pt3dadd( 100.502, -78.7026, -110.658, 0.15 ) }
    dend_3 { pt3dadd( 104.519, -86.3013, -112.199, 0.15 ) }
    dend_3 { pt3dadd( 107.374, -94.5301, -111.866, 0.15 ) }
    dend_3 { pt3dadd( 110.278, -102.726, -112.189, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 95/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -114.455, -155.828, -0.69212, 0.15 ) }
    dend_56 { pt3dadd( -120.8, -163.063, 0.394593, 0.15 ) }
    dend_56 { pt3dadd( -127.185, -170.299, -0.388278, 0.15 ) }
    dend_56 { pt3dadd( -133.701, -177.462, -0.0335255, 0.15 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 99/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -114.455, -155.828, -0.69212, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_55 { pt3dadd( -120.669, -163.251, 0.635208, 0.15 ) }
    dend_55 { pt3dadd( -125.154, -171.601, 2.65031, 0.15 ) }
    dend_55 { pt3dadd( -130.143, -179.515, 5.30706, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -80.1393, -167.318, -133.276, 0.15 ) }
    dend_52 { pt3dadd( -82.029, -171.248, -135.722, 0.15 ) }
    dend_52 { pt3dadd( -84.1928, -175.366, -137.489, 0.15 ) }
    dend_52 { pt3dadd( -85.9243, -179.458, -139.754, 0.15 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 7/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -80.1393, -167.318, -133.276, 0.59 ) }
    dend_51 { pt3dadd( -82.9805, -175.668, -139.317, 0.15 ) }
    dend_51 { pt3dadd( -83.7496, -184.758, -144.825, 0.15 ) }
    dend_51 { pt3dadd( -85.9727, -193.46, -150.581, 0.15 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 11/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 13.9355, -172.959, 47.9071, 0.15 ) }
    dend_45 { pt3dadd( 15.0214, -173.817, 47.9819, 0.15 ) }
    dend_45 { pt3dadd( 15.5219, -174.213, 48.0164, 0.37 ) }
    dend_45 { pt3dadd( 16.361, -174.875, 48.0742, 1.18 ) }
    dend_45 { pt3dadd( 16.9717, -175.358, 48.1163, 0.88 ) }
    dend_45 { pt3dadd( 18.0446, -176.206, 48.1903, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 13.9355, -172.959, 47.9071, 0.22 ) }
    dend_44 { pt3dadd( 14.0954, -173.913, 47.6835, 0.22 ) }
    dend_44 { pt3dadd( 14.2088, -174.622, 47.4847, 0.81 ) }
    dend_44 { pt3dadd( 14.2962, -175.311, 47.2892, 1.18 ) }
    dend_44 { pt3dadd( 14.3628, -176.357, 47.0039, 0.22 ) }
    dend_44 { pt3dadd( 14.3323, -177.247, 46.7746, 0.22 ) }
    dend_44 { pt3dadd( 14.235, -178.129, 46.5586, 0.29 ) }
    dend_44 { pt3dadd( 14.0749, -178.961, 46.3671, 0.66 ) }
    dend_44 { pt3dadd( 13.8294, -179.802, 46.1978, 0.81 ) }
    dend_44 { pt3dadd( 13.4855, -180.711, 46.046, 0.22 ) }
    dend_44 { pt3dadd( 12.948, -181.892, 45.9039, 0.22 ) }
    dend_44 { pt3dadd( 12.6695, -182.472, 45.8665, 0.29 ) }
    dend_44 { pt3dadd( 12.3968, -183.054, 45.8513, 0.96 ) }
    dend_44 { pt3dadd( 12.1476, -183.626, 45.8618, 1.7 ) }
    dend_44 { pt3dadd( 11.6743, -184.882, 45.9401, 0.52 ) }
    dend_44 { pt3dadd( 11.336, -186.009, 46.0682, 0.22 ) }
    dend_44 { pt3dadd( 11.2043, -186.602, 46.1676, 0.15 ) }
    dend_44 { pt3dadd( 11.0368, -187.546, 46.3741, 0.22 ) }
    dend_44 { pt3dadd( 10.9172, -188.374, 46.5529, 0.15 ) }
    dend_44 { pt3dadd( 10.8241, -189.078, 46.7041, 0.15 ) }
    dend_44 { pt3dadd( 10.7637, -189.556, 46.8023, 0.15 ) }
    dend_44 { pt3dadd( 10.7062, -190.092, 46.8983, 0.37 ) }
    dend_44 { pt3dadd( 10.6323, -190.786, 46.9773, 0.59 ) }
    dend_44 { pt3dadd( 10.4869, -192.068, 47.0183, 0.07 ) }
    dend_44 { pt3dadd( 10.3896, -192.796, 46.9847, 0.07 ) }
    dend_44 { pt3dadd( 10.2792, -193.589, 46.9129, 0.15 ) }
    dend_44 { pt3dadd( 10.2102, -194.133, 46.8525, 0.66 ) }
    dend_44 { pt3dadd( 10.1328, -194.805, 46.7757, 0.74 ) }
    dend_44 { pt3dadd( 10.0201, -195.935, 46.669, 0.15 ) }
    dend_44 { pt3dadd( 9.95447, -196.659, 46.6357, 0.22 ) }
    dend_44 { pt3dadd( 9.90375, -197.25, 46.6167, 0.15 ) }
    dend_44 { pt3dadd( 9.84287, -197.763, 46.606, 0.81 ) }
    dend_44 { pt3dadd( 9.75361, -198.304, 46.6015, 0.66 ) }
    dend_44 { pt3dadd( 9.56054, -199.218, 46.5845, 0.15 ) }
    dend_44 { pt3dadd( 9.37977, -199.948, 46.5506, 0.22 ) }
    dend_44 { pt3dadd( 9.12984, -200.857, 46.4877, 0.52 ) }
    dend_44 { pt3dadd( 8.87503, -201.587, 46.4352, 0.59 ) }
    dend_44 { pt3dadd( 8.51079, -202.543, 46.4074, 0.07 ) }
    dend_44 { pt3dadd( 8.21445, -203.299, 46.413, 0.22 ) }
    dend_44 { pt3dadd( 8.10456, -203.572, 46.4175, 0.22 ) }
    dend_44 { pt3dadd( 7.85101, -204.194, 46.4361, 0.96 ) }
    dend_44 { pt3dadd( 7.35876, -205.374, 46.4959, 0.07 ) }
    dend_44 { pt3dadd( 6.94831, -206.404, 46.6086, 0.07 ) }
    dend_44 { pt3dadd( 6.76236, -206.876, 46.7097, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -7.43104, -200.115, 29.4488, 0.15 ) }
    dend_41 { pt3dadd( -7.58826, -208.686, 31.5169, 0.15 ) }
    dend_41 { pt3dadd( -8.43341, -217.357, 32.8852, 0.15 ) }
    dend_41 { pt3dadd( -9.38329, -225.989, 34.439, 0.15 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 65/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -7.43104, -200.115, 29.4488, 0.59 ) }
    dend_40 { pt3dadd( -8.13715, -209.057, 31.228, 0.15 ) }
    dend_40 { pt3dadd( -9.12716, -218.133, 30.9089, 0.15 ) }
    dend_40 { pt3dadd( -11.4217, -226.886, 32.4147, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 69/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 15.0647, 31.6727, -1.33656, 0.52 ) }
    dend_32 { pt3dadd( 16.046, 32.6125, -2.02432, 0.52 ) }
    dend_32 { pt3dadd( 17.105, 33.0793, -2.87937, 0.37 ) }
    dend_32 { pt3dadd( 17.8759, 33.2627, -3.48678, 0.37 ) }
    dend_32 { pt3dadd( 18.2716, 33.3464, -3.80599, 0.52 ) }
    dend_32 { pt3dadd( 19.0018, 33.545, -4.42618, 0.52 ) }
    dend_32 { pt3dadd( 20.118, 33.9377, -5.43125, 0.44 ) }
    dend_32 { pt3dadd( 20.6476, 34.1257, -5.96806, 0.44 ) }
    dend_32 { pt3dadd( 21.2334, 34.3961, -6.57018, 0.66 ) }
    dend_32 { pt3dadd( 21.73, 34.7291, -7.0309, 0.66 ) }
    dend_32 { pt3dadd( 22.3406, 35.2908, -7.51249, 0.88 ) }
    dend_32 { pt3dadd( 22.7248, 35.7503, -7.73629, 1.03 ) }
    dend_32 { pt3dadd( 23.509, 36.8232, -8.00853, 0.52 ) }
    dend_32 { pt3dadd( 24.1051, 37.6577, -8.13286, 0.52 ) }
    dend_32 { pt3dadd( 24.6241, 38.3734, -8.19482, 0.52 ) }
    dend_32 { pt3dadd( 25.1055, 38.9916, -8.21903, 0.52 ) }
    dend_32 { pt3dadd( 25.9181, 39.9741, -8.26524, 0.22 ) }
    dend_32 { pt3dadd( 26.6996, 40.8819, -8.29591, 0.44 ) }
    dend_32 { pt3dadd( 27.4762, 41.7802, -8.3165, 0.74 ) }
    dend_32 { pt3dadd( 28.2913, 42.7897, -8.36272, 1.18 ) }
    dend_32 { pt3dadd( 28.8679, 43.5491, -8.43018, 0.88 ) }
    dend_32 { pt3dadd( 29.7912, 44.7652, -8.59763, 0.29 ) }
    dend_32 { pt3dadd( 37.2345, 53.0948, -10.1335, 0.29 ) }
    dend_32 { pt3dadd( 44.8387, 61.1776, -12.2476, 0.29 ) }
    dend_32 { pt3dadd( 51.8442, 69.9504, -12.6986, 0.29 ) }
    dend_32 { pt3dadd( 59.0393, 78.4954, -11.3841, 0.29 ) }
    dend_32 { pt3dadd( 65.7966, 87.328, -9.87286, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 15.0647, 31.6727, -1.33656, 0.88 ) }
    dend_25 { pt3dadd( 16.325, 32.4873, -0.728518, 0.88 ) }
    dend_25 { pt3dadd( 17.1931, 33.0166, -0.370995, 0.81 ) }
    dend_25 { pt3dadd( 18.2323, 33.6453, -0.0548441, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_25 { pt3dadd( 19.3404, 34.3105, 0.173877, 1.33 ) }
    dend_25 { pt3dadd( 20.6454, 35.1257, 0.362382, 1.33 ) }
    dend_25 { pt3dadd( 21.4025, 35.6127, 0.456096, 1.33 ) }
    dend_25 { pt3dadd( 22.2421, 36.1981, 0.523197, 1.33 ) }
    dend_25 { pt3dadd( 23.2953, 36.9554, 0.558201, 1.18 ) }
    dend_25 { pt3dadd( 24.2976, 37.6813, 0.558117, 1.03 ) }
    dend_25 { pt3dadd( 25.1902, 38.3064, 0.563129, 0.88 ) }
    dend_25 { pt3dadd( 26.2935, 39.0857, 0.592916, 1.4 ) }
    dend_25 { pt3dadd( 27.6293, 40.0676, 0.675498, 0.74 ) }
    dend_25 { pt3dadd( 28.717, 40.8835, 0.772585, 1.25 ) }
    dend_25 { pt3dadd( 29.8925, 41.7494, 0.889721, 1.77 ) }
    dend_25 { pt3dadd( 31.4326, 42.8903, 1.00258, 0.96 ) }
    dend_25 { pt3dadd( 32.7145, 43.8605, 1.02618, 0.59 ) }
    dend_25 { pt3dadd( 33.6537, 44.6092, 0.981346, 0.74 ) }
    dend_25 { pt3dadd( 34.3488, 45.1976, 0.909665, 0.96 ) }
    dend_25 { pt3dadd( 35.5454, 46.283, 0.763392, 1.11 ) }
    dend_25 { pt3dadd( 36.3921, 47.096, 0.67561, 1.4 ) }
    dend_25 { pt3dadd( 37.1452, 47.8461, 0.629977, 1.4 ) }
    dend_25 { pt3dadd( 38.4061, 49.0558, 0.622009, 0.96 ) }
    dend_25 { pt3dadd( 38.949, 49.5542, 0.671344, 0.96 ) }
    dend_25 { pt3dadd( 40.0907, 50.5441, 0.918545, 1.18 ) }
    dend_25 { pt3dadd( 41.0498, 51.3066, 1.2495, 1.18 ) }
    dend_25 { pt3dadd( 42.0701, 52.034, 1.65164, 1.03 ) }
    dend_25 { pt3dadd( 42.7949, 52.4982, 1.91801, 0.96 ) }
    dend_25 { pt3dadd( 43.7987, 53.0962, 2.21654, 0.81 ) }
    dend_25 { pt3dadd( 44.9192, 53.7421, 2.44865, 0.74 ) }
    dend_25 { pt3dadd( 46.1333, 54.4379, 2.58349, 0.96 ) }
    dend_25 { pt3dadd( 47.3895, 55.1866, 2.64287, 1.25 ) }
    dend_25 { pt3dadd( 48.7715, 56.0504, 2.64637, 1.55 ) }
    dend_25 { pt3dadd( 49.949, 56.8489, 2.61025, 0.88 ) }
    dend_25 { pt3dadd( 51.2396, 57.8383, 2.50066, 0.59 ) }
    dend_25 { pt3dadd( 51.9937, 58.5086, 2.41923, 0.81 ) }
    dend_25 { pt3dadd( 52.7673, 59.3196, 2.33279, 0.96 ) }
    dend_25 { pt3dadd( 53.5715, 60.2308, 2.26821, 1.33 ) }
    dend_25 { pt3dadd( 54.7443, 61.6977, 2.22532, 1.55 ) }
    dend_25 { pt3dadd( 55.7141, 63.0333, 2.203, 1.7 ) }
    dend_25 { pt3dadd( 56.5936, 64.3747, 2.16111, 1.62 ) }
    dend_25 { pt3dadd( 57.524, 65.9207, 2.07809, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -55.2023, 214.454, -119.088, 0.15 ) }
    dend_23 { pt3dadd( -57.4159, 223.229, -125.057, 0.15 ) }
    dend_23 { pt3dadd( -58.3637, 232.67, -130.209, 0.15 ) }
    dend_23 { pt3dadd( -61.533, 241.717, -135.193, 0.15 ) }
    dend_23 { pt3dadd( -64.6448, 251.012, -139.68, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 43/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -55.2023, 214.454, -119.088, 0.59 ) }
    dend_22 { pt3dadd( -60.1615, 226.242, -123.686, 0.15 ) }
    dend_22 { pt3dadd( -66.2385, 237.542, -128.331, 0.15 ) }
    dend_22 { pt3dadd( -69.3604, 250.374, -131.086, 0.15 ) }
    dend_22 { pt3dadd( -70.8817, 263.143, -135.075, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -16.0662, 15.3281, 18.6321, 0.81 ) }
    dend_17 { pt3dadd( -14.0492, 15.5768, 19.7312, 0.81 ) }
    dend_17 { pt3dadd( -12.8897, 15.8272, 20.2895, 0.44 ) }
    dend_17 { pt3dadd( -11.1805, 16.3759, 21.1753, 0.59 ) }
    dend_17 { pt3dadd( -9.78349, 16.9109, 21.9838, 0.59 ) }
    dend_17 { pt3dadd( -8.62283, 17.3899, 22.7039, 0.88 ) }
    dend_17 { pt3dadd( -7.7396, 17.7682, 23.2795, 1.11 ) }
    dend_17 { pt3dadd( -6.62362, 18.28, 23.8527, 1.11 ) }
    dend_17 { pt3dadd( -5.54246, 18.9919, 24.4519, 0.29 ) }
    dend_17 { pt3dadd( -5.25346, 19.527, 24.8478, 0.29 ) }
    dend_17 { pt3dadd( -5.44158, 20.0304, 25.2626, 0.29 ) }
    dend_17 { pt3dadd( -5.6287, 20.3051, 25.5098, 0.29 ) }
    dend_17 { pt3dadd( -5.81836, 20.5969, 25.8541, 0.29 ) }
    dend_17 { pt3dadd( -6.03613, 21.0334, 26.5911, 0.59 ) }
    dend_17 { pt3dadd( -6.0725, 21.371, 27.3807, 1.11 ) }
    dend_17 { pt3dadd( -5.98635, 21.8321, 28.7263, 1.84 ) }
    dend_17 { pt3dadd( -5.84639, 22.147, 29.9087, 1.84 ) }
    dend_17 { pt3dadd( -5.61623, 22.4918, 31.4626, 0.96 ) }
    dend_17 { pt3dadd( -5.43451, 22.6837, 32.5639, 0.74 ) }
    dend_17 { pt3dadd( -5.20498, 22.8918, 33.7584, 0.74 ) }
    dend_17 { pt3dadd( -4.97968, 23.1733, 35.1063, 0.74 ) }
    dend_17 { pt3dadd( -4.85608, 23.4489, 36.1444, 1.11 ) }
    dend_17 { pt3dadd( -4.72084, 23.8776, 37.3011, 1.47 ) }
    dend_17 { pt3dadd( -4.56528, 24.3786, 38.4052, 1.47 ) }
    dend_17 { pt3dadd( -4.32174, 25.0907, 39.792, 0.74 ) }
    dend_17 { pt3dadd( -3.97069, 26.0654, 41.5508, 0.52 ) }
    dend_17 { pt3dadd( -3.76142, 26.5991, 42.4918, 0.52 ) }
    dend_17 { pt3dadd( -3.47506, 27.3193, 43.8285, 0.37 ) }
    dend_17 { pt3dadd( -3.21133, 27.8024, 44.9975, 0.37 ) }
    dend_17 { pt3dadd( -3.09622, 27.8468, 45.5118, 0.37 ) }
    dend_17 { pt3dadd( -2.97931, 27.6951, 46.1533, 0.37 ) }
    dend_17 { pt3dadd( -2.90234, 27.5278, 46.6254, 0.37 ) }
    dend_17 { pt3dadd( -2.83537, 27.1844, 47.8386, 0.37 ) }
    dend_17 { pt3dadd( -2.92431, 27.062, 48.825, 0.37 ) }
    dend_17 { pt3dadd( -3.10974, 27.1656, 50.2516, 0.37 ) }
    dend_17 { pt3dadd( -3.25776, 27.375, 51.2445, 0.37 ) }
    dend_17 { pt3dadd( -3.45358, 27.6952, 52.2654, 0.59 ) }
    dend_17 { pt3dadd( -3.68575, 28.1257, 53.316, 0.88 ) }
    dend_17 { pt3dadd( -4.1112, 29.0633, 55.0476, 0.88 ) }
    dend_17 { pt3dadd( -4.49789, 29.9253, 56.3812, 0.59 ) }
    dend_17 { pt3dadd( -4.98958, 31.0743, 57.9062, 0.59 ) }
    dend_17 { pt3dadd( -5.24405, 31.8122, 58.7904, 0.29 ) }
    dend_17 { pt3dadd( -5.4328, 32.6203, 59.6698, 0.29 ) }
    dend_17 { pt3dadd( -5.55007, 33.5689, 60.6137, 0.29 ) }
    dend_17 { pt3dadd( -5.5678, 34.2778, 61.2657, 0.96 ) }
    dend_17 { pt3dadd( -5.52131, 34.9588, 61.9097, 1.84 ) }
    dend_17 { pt3dadd( -5.38216, 35.9964, 62.8849, 0.37 ) }
    dend_17 { pt3dadd( -5.28903, 36.7931, 63.6653, 0.81 ) }
    dend_17 { pt3dadd( -5.26809, 37.7337, 64.6593, 1.55 ) }
    dend_17 { pt3dadd( -5.35006, 38.6617, 65.7645, 0.22 ) }
    dend_17 { pt3dadd( -5.46153, 39.3587, 66.6317, 0.22 ) }
    dend_17 { pt3dadd( -5.56602, 39.8433, 67.2866, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_17 { pt3dadd( -5.6325, 40.4413, 68.1121, 0.29 ) }
    dend_17 { pt3dadd( -5.59668, 41.0119, 68.8666, 0.29 ) }
    dend_17 { pt3dadd( -5.45303, 41.6659, 69.7059, 0.59 ) }
    dend_17 { pt3dadd( -5.1286, 42.6039, 70.9385, 1.77 ) }
    dend_17 { pt3dadd( -4.85039, 43.2604, 71.8081, 2.14 ) }
    dend_17 { pt3dadd( -4.21683, 44.4587, 73.414, 0.29 ) }
    dend_17 { pt3dadd( -3.86733, 45.0208, 74.1601, 0.29 ) }
    dend_17 { pt3dadd( -3.52142, 45.5701, 74.8709, 0.29 ) }
    dend_17 { pt3dadd( -3.31292, 45.8766, 75.2759, 0.29 ) }
    dend_17 { pt3dadd( -3.0206, 46.2866, 75.8792, 0.88 ) }
    dend_17 { pt3dadd( -2.65545, 46.771, 76.6809, 1.62 ) }
    dend_17 { pt3dadd( -2.3399, 47.137, 77.3984, 1.62 ) }
    dend_17 { pt3dadd( -1.88022, 47.6026, 78.3182, 2.21 ) }
    dend_17 { pt3dadd( -0.62893, 48.6835, 80.4566, 0.22 ) }
    dend_17 { pt3dadd( -0.0747549, 49.1163, 81.3027, 0.22 ) }
    dend_17 { pt3dadd( 0.318633, 49.3993, 81.8671, 0.22 ) }
    dend_17 { pt3dadd( 0.736071, 49.6831, 82.4256, 0.22 ) }
    dend_17 { pt3dadd( 1.55286, 50.2106, 83.4267, 0.44 ) }
    dend_17 { pt3dadd( 2.54559, 50.7817, 84.4838, 0.66 ) }
    dend_17 { pt3dadd( 2.70631, 50.8811, 84.6427, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -16.0662, 15.3281, 18.6321, 0.96 ) }
    dend_14 { pt3dadd( -15.6326, 14.3299, 19.0694, 0.96 ) }
    dend_14 { pt3dadd( -15.1622, 13.2882, 19.5051, 0.37 ) }
    dend_14 { pt3dadd( -15.0642, 12.9062, 19.634, 0.29 ) }
    dend_14 { pt3dadd( -14.9871, 12.2031, 19.8147, 0.22 ) }
    dend_14 { pt3dadd( -14.9992, 11.7338, 19.9317, 0.22 ) }
    dend_14 { pt3dadd( -15.082, 11.0053, 20.1144, 0.52 ) }
    dend_14 { pt3dadd( -15.2609, 10.1268, 20.3374, 0.74 ) }
    dend_14 { pt3dadd( -15.6847, 8.9286, 20.6259, 0.52 ) }
    dend_14 { pt3dadd( -16.0412, 8.06367, 20.8237, 1.11 ) }
    dend_14 { pt3dadd( -16.6007, 6.74301, 21.1249, 1.62 ) }
    dend_14 { pt3dadd( -17.0906, 5.57027, 21.3799, 1.33 ) }
    dend_14 { pt3dadd( -17.7433, 3.91183, 21.7287, 1.11 ) }
    dend_14 { pt3dadd( -18.5931, 1.63806, 22.1989, 0.44 ) }
    dend_14 { pt3dadd( -19.0213, 0.435068, 22.4364, 0.44 ) }
    dend_14 { pt3dadd( -19.4665, -0.810707, 22.6649, 0.44 ) }
    dend_14 { pt3dadd( -19.8288, -1.80276, 22.8185, 0.96 ) }
    dend_14 { pt3dadd( -20.3621, -3.23299, 23.0278, 1.47 ) }
    dend_14 { pt3dadd( -21.0251, -4.88074, 23.2565, 1.7 ) }
    dend_14 { pt3dadd( -21.8365, -6.70011, 23.536, 1.7 ) }
    dend_14 { pt3dadd( -22.6936, -8.29478, 23.8327, 1.7 ) }
    dend_14 { pt3dadd( -23.6157, -9.76165, 24.149, 0.59 ) }
    dend_14 { pt3dadd( -24.5537, -11.1059, 24.4951, 0.44 ) }
    dend_14 { pt3dadd( -25.4469, -12.2958, 24.8595, 0.44 ) }
    dend_14 { pt3dadd( -25.9788, -12.9871, 25.1273, 0.44 ) }
    dend_14 { pt3dadd( -26.7538, -14.0308, 25.6539, 0.44 ) }
    dend_14 { pt3dadd( -26.9886, -14.4032, 25.8889, 0.44 ) }
    dend_14 { pt3dadd( -27.1751, -14.8981, 26.2028, 0.44 ) }
    dend_14 { pt3dadd( -27.3186, -15.6898, 26.6427, 0.44 ) }
    dend_14 { pt3dadd( -27.3962, -16.2164, 26.9092, 0.88 ) }
    dend_14 { pt3dadd( -27.6429, -17.4538, 27.4697, 1.4 ) }
    dend_14 { pt3dadd( -27.892, -18.2949, 27.8336, 1.4 ) }
    dend_14 { pt3dadd( -28.4623, -19.6225, 28.4034, 0.66 ) }
    dend_14 { pt3dadd( -28.9854, -20.5857, 28.8056, 0.22 ) }
    dend_14 { pt3dadd( -29.5521, -21.5199, 29.2093, 0.22 ) }
    dend_14 { pt3dadd( -29.8832, -22.0557, 29.4529, 1.03 ) }
    dend_14 { pt3dadd( -30.4404, -22.978, 29.8871, 2.36 ) }
    dend_14 { pt3dadd( -31.0373, -24.0642, 30.4189, 2.65 ) }
    dend_14 { pt3dadd( -31.9634, -26.028, 31.4466, 0.81 ) }
    dend_14 { pt3dadd( -32.2997, -27.1493, 31.9945, 0.22 ) }
    dend_14 { pt3dadd( -32.3876, -27.7066, 32.2527, 0.22 ) }
    dend_14 { pt3dadd( -32.4223, -28.2455, 32.4997, 0.66 ) }
    dend_14 { pt3dadd( -32.408, -28.9175, 32.8098, 0.66 ) }
    dend_14 { pt3dadd( -32.3676, -29.3406, 33.0157, 0.66 ) }
    dend_14 { pt3dadd( -32.1711, -30.52, 33.6438, 0.22 ) }
    dend_14 { pt3dadd( -32.1219, -31.1175, 33.9667, 0.22 ) }
    dend_14 { pt3dadd( -32.1385, -31.3897, 34.1293, 0.22 ) }
    dend_14 { pt3dadd( -32.2438, -31.8366, 34.4247, 0.22 ) }
    dend_14 { pt3dadd( -32.4765, -32.4331, 34.8255, 0.22 ) }
    dend_14 { pt3dadd( -32.6143, -32.6794, 34.9877, 0.22 ) }
    dend_14 { pt3dadd( -33.0302, -33.2482, 35.3438, 0.22 ) }
    dend_14 { pt3dadd( -33.2935, -33.5769, 35.5097, 0.29 ) }
    dend_14 { pt3dadd( -33.9883, -34.42, 35.8527, 0.29 ) }
    dend_14 { pt3dadd( -34.3258, -34.8654, 35.9994, 0.59 ) }
    dend_14 { pt3dadd( -34.8918, -35.6986, 36.2283, 0.88 ) }
    dend_14 { pt3dadd( -35.3819, -36.5397, 36.4442, 0.66 ) }
    dend_14 { pt3dadd( -35.867, -37.6514, 36.7134, 0.22 ) }
    dend_14 { pt3dadd( -36.0224, -38.1952, 36.8524, 0.22 ) }
    dend_14 { pt3dadd( -36.2772, -39.5596, 37.2514, 0.59 ) }
    dend_14 { pt3dadd( -36.414, -40.7195, 37.6272, 1.03 ) }
    dend_14 { pt3dadd( -36.5133, -41.8752, 38.021, 1.62 ) }
    dend_14 { pt3dadd( -36.6475, -43.4312, 38.5926, 0.59 ) }
    dend_14 { pt3dadd( -36.8394, -45.0181, 39.1775, 0.22 ) }
    dend_14 { pt3dadd( -37.0443, -46.1123, 39.5932, 0.52 ) }
    dend_14 { pt3dadd( -37.2285, -46.7524, 39.8568, 1.25 ) }
    dend_14 { pt3dadd( -37.6434, -47.7888, 40.3335, 2.14 ) }
    dend_14 { pt3dadd( -38.1394, -48.7137, 40.7954, 1.33 ) }
    dend_14 { pt3dadd( -38.9341, -49.9067, 41.4807, 0.52 ) }
    dend_14 { pt3dadd( -39.3969, -50.5741, 41.8988, 0.22 ) }
    dend_14 { pt3dadd( -39.8768, -51.3325, 42.4021, 0.44 ) }
    dend_14 { pt3dadd( -40.2207, -51.9494, 42.8455, 0.44 ) }
    dend_14 { pt3dadd( -40.4969, -52.6025, 43.3003, 0.22 ) }
    dend_14 { pt3dadd( -40.7163, -53.2453, 43.6566, 0.22 ) }
    dend_14 { pt3dadd( -40.9679, -54.0484, 44.0327, 0.22 ) }
    dend_14 { pt3dadd( -41.1464, -54.6138, 44.2353, 0.52 ) }
    dend_14 { pt3dadd( -41.415, -55.4042, 44.4532, 0.74 ) }
    dend_14 { pt3dadd( -41.9564, -56.663, 44.7982, 0.81 ) }
    dend_14 { pt3dadd( -42.5904, -57.7296, 45.2124, 0.22 ) }
    dend_14 { pt3dadd( -43.1304, -58.3347, 45.5741, 0.22 ) }
    dend_14 { pt3dadd( -43.4104, -58.5757, 45.7869, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -43.8364, -58.9404, 46.1584, 0.66 ) }
    dend_14 { pt3dadd( -44.5404, -59.5719, 46.8795, 1.33 ) }
    dend_14 { pt3dadd( -45.0967, -60.1395, 47.5376, 1.55 ) }
    dend_14 { pt3dadd( -45.6271, -60.8213, 48.2308, 0.88 ) }
    dend_14 { pt3dadd( -46.2726, -61.7521, 48.9874, 0.15 ) }
    dend_14 { pt3dadd( -46.9323, -62.7201, 49.6829, 0.29 ) }
    dend_14 { pt3dadd( -47.2866, -63.2567, 50.0267, 0.88 ) }
    dend_14 { pt3dadd( -47.663, -63.8097, 50.3202, 1.25 ) }
    dend_14 { pt3dadd( -48.0781, -64.4011, 50.6055, 1.33 ) }
    dend_14 { pt3dadd( -49.1974, -65.9466, 51.3385, 0.22 ) }
    dend_14 { pt3dadd( -49.692, -66.6314, 51.6593, 0.74 ) }
    dend_14 { pt3dadd( -50.1606, -67.2867, 51.9681, 1.25 ) }
    dend_14 { pt3dadd( -50.8991, -68.433, 52.4726, 0.44 ) }
    dend_14 { pt3dadd( -51.2964, -69.3246, 52.8295, 0.22 ) }
    dend_14 { pt3dadd( -51.4404, -69.8729, 53.0175, 0.22 ) }
    dend_14 { pt3dadd( -51.5289, -70.6583, 53.2227, 0.96 ) }
    dend_14 { pt3dadd( -51.5539, -71.1641, 53.3415, 1.55 ) }
    dend_14 { pt3dadd( -51.5702, -72.1941, 53.5746, 1.33 ) }
    dend_14 { pt3dadd( -51.5746, -74.5497, 54.1395, 0.15 ) }
    dend_14 { pt3dadd( -51.5968, -75.1146, 54.2753, 0.37 ) }
    dend_14 { pt3dadd( -51.6941, -76.1623, 54.5518, 0.15 ) }
    dend_14 { pt3dadd( -51.8428, -77.0406, 54.8358, 0.15 ) }
    dend_14 { pt3dadd( -52.0386, -77.8369, 55.144, 0.52 ) }
    dend_14 { pt3dadd( -52.3138, -78.6825, 55.5197, 1.18 ) }
    dend_14 { pt3dadd( -52.7292, -79.6942, 56.0299, 2.06 ) }
    dend_14 { pt3dadd( -53.2847, -80.9821, 56.7212, 0.96 ) }
    dend_14 { pt3dadd( -53.8762, -82.3046, 57.4627, 0.22 ) }
    dend_14 { pt3dadd( -54.3195, -83.2398, 57.9903, 0.22 ) }
    dend_14 { pt3dadd( -54.8597, -84.3402, 58.629, 0.22 ) }
    dend_14 { pt3dadd( -55.2102, -85.047, 59.0453, 0.22 ) }
    dend_14 { pt3dadd( -55.731, -86.1005, 59.7016, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 31/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 110.278, -102.726, -112.189, 0.15 ) }
    dend_5 { pt3dadd( 116.414, -110.614, -118.777, 0.15 ) }
    dend_5 { pt3dadd( 121.596, -119.474, -124.795, 0.15 ) }
    dend_5 { pt3dadd( 126.89, -127.842, -131.434, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 110.278, -102.726, -112.189, 0.59 ) }
    dend_4 { pt3dadd( 116.569, -110.141, -117.8, 0.15 ) }
    dend_4 { pt3dadd( 122.951, -118.255, -122.217, 0.15 ) }
    dend_4 { pt3dadd( 126.908, -127.383, -127.12, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 65.7966, 87.328, -9.87286, 0.15 ) }
    dend_34 { pt3dadd( 73.9601, 94.6342, -13.3887, 0.15 ) }
    dend_34 { pt3dadd( 80.1178, 102.855, -18.3758, 0.15 ) }
    dend_34 { pt3dadd( 84.1501, 111.214, -24.9719, 0.15 ) }
    dend_34 { pt3dadd( 86.5884, 119.924, -31.8312, 0.15 ) }
    dend_34 { pt3dadd( 87.7381, 127.831, -39.968, 0.15 ) }
    dend_34 { pt3dadd( 90.4702, 135.56, -47.9222, 0.15 ) }
    dend_34 { pt3dadd( 93.5961, 143.642, -55.3284, 0.15 ) }
    dend_34 { pt3dadd( 96.6198, 151.663, -62.8496, 0.15 ) }
    dend_34 { pt3dadd( 99.5443, 160.84, -68.7972, 0.15 ) }
    dend_34 { pt3dadd( 100.015, 171.032, -73.5043, 0.15 ) }
    dend_34 { pt3dadd( 101.617, 181.953, -75.4211, 0.15 ) }
    dend_34 { pt3dadd( 104.312, 192.822, -76.223, 0.15 ) }
    dend_34 { pt3dadd( 105.018, 203.996, -75.5866, 0.15 ) }
    dend_34 { pt3dadd( 106.45, 215.034, -74.0056, 0.15 ) }
    dend_34 { pt3dadd( 109.126, 225.902, -72.8193, 0.15 ) }
    dend_34 { pt3dadd( 110.034, 237.053, -73.3337, 0.15 ) }
    dend_34 { pt3dadd( 111.002, 248.077, -75.0265, 0.15 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 65.7966, 87.328, -9.87286, 0.59 ) }
    dend_33 { pt3dadd( 70.6394, 94.8614, -5.98065, 0.15 ) }
    dend_33 { pt3dadd( 74.5612, 102.782, -1.9004, 0.15 ) }
    dend_33 { pt3dadd( 78.246, 109.786, 3.90828, 0.15 ) }
    dend_33 { pt3dadd( 80.2711, 117.51, 9.52502, 0.15 ) }
    dend_33 { pt3dadd( 82.6089, 124.344, 16.1987, 0.15 ) }
    dend_33 { pt3dadd( 84.4972, 131.658, 22.4383, 0.15 ) }
    dend_33 { pt3dadd( 85.5534, 139.333, 28.3874, 0.15 ) }
    dend_33 { pt3dadd( 88.9326, 146.468, 34.2075, 0.15 ) }
    dend_33 { pt3dadd( 92.1343, 153.571, 40.1697, 0.15 ) }
    dend_33 { pt3dadd( 94.8645, 161.381, 45.3329, 0.15 ) }
    dend_33 { pt3dadd( 96.741, 169.876, 49.59, 0.15 ) }
    dend_33 { pt3dadd( 99.5373, 177.285, 55.3415, 0.15 ) }
    dend_33 { pt3dadd( 102.996, 182.951, 62.6981, 0.15 ) }
    dend_33 { pt3dadd( 107.206, 187.943, 70.1954, 0.15 ) }
    dend_33 { pt3dadd( 111.802, 193.147, 77.297, 0.15 ) }
    dend_33 { pt3dadd( 117.25, 199.336, 82.7207, 0.15 ) }
    dend_33 { pt3dadd( 124.094, 204.643, 87.5487, 0.15 ) }
    dend_33 { pt3dadd( 130.298, 210.74, 92.214, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 57.524, 65.9207, 2.07809, 0.66 ) }
    dend_27 { pt3dadd( 58.6583, 67.8814, 1.82003, 0.66 ) }
    dend_27 { pt3dadd( 59.3073, 68.8875, 1.66775, 0.66 ) }
    dend_27 { pt3dadd( 60.1067, 70.0925, 1.47675, 0.44 ) }
    dend_27 { pt3dadd( 60.6847, 70.9706, 1.35876, 0.37 ) }
    dend_27 { pt3dadd( 61.433, 72.143, 1.24267, 0.37 ) }
    dend_27 { pt3dadd( 62.0815, 73.1969, 1.19436, 0.37 ) }
    dend_27 { pt3dadd( 62.4055, 73.7017, 1.19917, 0.59 ) }
    dend_27 { pt3dadd( 62.9599, 74.642, 1.23556, 1.11 ) }
    dend_27 { pt3dadd( 63.7253, 76.1886, 1.31807, 0.37 ) }
    dend_27 { pt3dadd( 64.2153, 77.449, 1.48063, 0.59 ) }
    dend_27 { pt3dadd( 64.6943, 79.0176, 1.77893, 0.37 ) }
    dend_27 { pt3dadd( 65.1244, 80.5767, 2.15429, 0.44 ) }
    dend_27 { pt3dadd( 65.371, 81.4284, 2.3869, 0.22 ) }
    dend_27 { pt3dadd( 65.6334, 82.188, 2.61942, 0.22 ) }
    dend_27 { pt3dadd( 66.4674, 84.1645, 3.26784, 0.22 ) }
    dend_27 { pt3dadd( 67.0254, 85.1925, 3.60942, 0.22 ) }
    dend_27 { pt3dadd( 67.3924, 85.709, 3.77708, 0.44 ) }
    dend_27 { pt3dadd( 68.073, 86.4526, 4.00308, 0.66 ) }
    dend_27 { pt3dadd( 69.2085, 87.4609, 4.25703, 0.22 ) }
    dend_27 { pt3dadd( 69.7326, 87.8578, 4.32992, 0.22 ) }
    dend_27 { pt3dadd( 70.4355, 88.3291, 4.38712, 0.66 ) }
    dend_27 { pt3dadd( 71.034, 88.7154, 4.44998, 1.03 ) }
    dend_27 { pt3dadd( 72.3976, 89.6074, 4.60804, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 73.555, 90.4054, 4.74685, 0.66 ) }
    dend_27 { pt3dadd( 74.256, 90.9202, 4.84345, 0.81 ) }
    dend_27 { pt3dadd( 75.8324, 92.1072, 5.08024, 1.03 ) }
    dend_27 { pt3dadd( 77.0323, 93.0196, 5.27443, 0.74 ) }
    dend_27 { pt3dadd( 78.2141, 93.9139, 5.48565, 0.37 ) }
    dend_27 { pt3dadd( 79.0805, 94.531, 5.65065, 0.37 ) }
    dend_27 { pt3dadd( 79.8155, 95.0418, 5.79066, 0.29 ) }
    dend_27 { pt3dadd( 80.5839, 95.5672, 5.93254, 0.29 ) }
    dend_27 { pt3dadd( 81.2262, 96.0021, 6.03843, 0.66 ) }
    dend_27 { pt3dadd( 82.1692, 96.6308, 6.21105, 1.25 ) }
    dend_27 { pt3dadd( 83.8534, 97.727, 6.52337, 0.29 ) }
    dend_27 { pt3dadd( 84.3683, 98.0611, 6.6124, 0.29 ) }
    dend_27 { pt3dadd( 85.4467, 98.7977, 6.77523, 0.88 ) }
    dend_27 { pt3dadd( 86.4796, 99.5627, 6.9163, 0.52 ) }
    dend_27 { pt3dadd( 87.322, 100.229, 7.01703, 1.11 ) }
    dend_27 { pt3dadd( 88.4838, 101.198, 7.13385, 0.66 ) }
    dend_27 { pt3dadd( 89.5757, 102.147, 7.25515, 0.29 ) }
    dend_27 { pt3dadd( 90.3679, 102.809, 7.34929, 0.59 ) }
    dend_27 { pt3dadd( 91.797, 103.911, 7.52674, 0.22 ) }
    dend_27 { pt3dadd( 92.4686, 104.379, 7.61564, 0.59 ) }
    dend_27 { pt3dadd( 93.4061, 104.979, 7.73913, 1.18 ) }
    dend_27 { pt3dadd( 94.5757, 105.662, 7.91366, 0.22 ) }
    dend_27 { pt3dadd( 95.3606, 106.091, 8.03794, 0.22 ) }
    dend_27 { pt3dadd( 96.0207, 106.447, 8.14213, 0.22 ) }
    dend_27 { pt3dadd( 96.7319, 106.86, 8.27134, 0.22 ) }
    dend_27 { pt3dadd( 97.2069, 107.201, 8.35783, 0.22 ) }
    dend_27 { pt3dadd( 97.7455, 107.698, 8.44704, 0.37 ) }
    dend_27 { pt3dadd( 98.5331, 108.618, 8.57053, 0.37 ) }
    dend_27 { pt3dadd( 99.041, 109.308, 8.65991, 0.22 ) }
    dend_27 { pt3dadd( 99.6072, 110.163, 8.78095, 0.52 ) }
    dend_27 { pt3dadd( 100.35, 111.345, 8.98976, 0.52 ) }
    dend_27 { pt3dadd( 100.853, 112.116, 9.15775, 0.96 ) }
    dend_27 { pt3dadd( 101.37, 112.835, 9.34985, 1.77 ) }
    dend_27 { pt3dadd( 101.964, 113.577, 9.58066, 1.77 ) }
    dend_27 { pt3dadd( 102.821, 114.587, 9.90672, 0.22 ) }
    dend_27 { pt3dadd( 103.444, 115.289, 10.1278, 0.22 ) }
    dend_27 { pt3dadd( 104.053, 115.917, 10.3453, 0.22 ) }
    dend_27 { pt3dadd( 104.679, 116.532, 10.5522, 0.22 ) }
    dend_27 { pt3dadd( 105.27, 117.087, 10.7109, 0.22 ) }
    dend_27 { pt3dadd( 105.976, 117.775, 10.8598, 0.22 ) }
    dend_27 { pt3dadd( 106.725, 118.535, 10.959, 0.22 ) }
    dend_27 { pt3dadd( 107.11, 118.952, 10.9965, 0.66 ) }
    dend_27 { pt3dadd( 107.678, 119.588, 11.0508, 0.81 ) }
    dend_27 { pt3dadd( 108.51, 120.538, 11.1551, 0.22 ) }
    dend_27 { pt3dadd( 109.168, 121.265, 11.2691, 0.22 ) }
    dend_27 { pt3dadd( 109.718, 121.908, 11.3844, 0.74 ) }
    dend_27 { pt3dadd( 110.362, 122.761, 11.5313, 0.88 ) }
    dend_27 { pt3dadd( 110.722, 123.306, 11.6243, 1.11 ) }
    dend_27 { pt3dadd( 111.504, 124.677, 11.8807, 1.11 ) }
    dend_27 { pt3dadd( 112.133, 125.975, 12.1285, 0.37 ) }
    dend_27 { pt3dadd( 112.781, 127.447, 12.4381, 0.22 ) }
    dend_27 { pt3dadd( 113.155, 128.377, 12.6586, 0.29 ) }
    dend_27 { pt3dadd( 113.483, 129.228, 12.8917, 0.29 ) }
    dend_27 { pt3dadd( 113.827, 130.083, 13.1689, 0.37 ) }
    dend_27 { pt3dadd( 114.223, 130.845, 13.4946, 0.37 ) }
    dend_27 { pt3dadd( 114.6, 131.327, 13.7952, 0.22 ) }
    dend_27 { pt3dadd( 115.113, 131.765, 14.1714, 0.22 ) }
    dend_27 { pt3dadd( 115.9, 132.303, 14.7182, 0.22 ) }
    dend_27 { pt3dadd( 116.688, 132.765, 15.2247, 0.29 ) }
    dend_27 { pt3dadd( 117.866, 133.417, 15.957, 0.22 ) }
    dend_27 { pt3dadd( 118.574, 133.825, 16.3839, 1.4 ) }
    dend_27 { pt3dadd( 119.318, 134.318, 16.8335, 2.21 ) }
    dend_27 { pt3dadd( 119.825, 134.747, 17.1672, 1.7 ) }
    dend_27 { pt3dadd( 120.447, 135.424, 17.6562, 0.96 ) }
    dend_27 { pt3dadd( 121.115, 136.278, 18.3052, 0.96 ) }
    dend_27 { pt3dadd( 121.484, 136.774, 18.7196, 1.47 ) }
    dend_27 { pt3dadd( 121.877, 137.278, 19.1788, 1.47 ) }
    dend_27 { pt3dadd( 122.672, 138.225, 20.1012, 0.22 ) }
    dend_27 { pt3dadd( 123.194, 138.808, 20.6661, 0.22 ) }
    dend_27 { pt3dadd( 123.755, 139.433, 21.2257, 0.22 ) }
    dend_27 { pt3dadd( 124.332, 140.056, 21.7145, 0.22 ) }
    dend_27 { pt3dadd( 124.844, 140.581, 22.0868, 0.22 ) }
    dend_27 { pt3dadd( 125.249, 140.985, 22.3105, 0.88 ) }
    dend_27 { pt3dadd( 125.887, 141.606, 22.5753, 1.99 ) }
    dend_27 { pt3dadd( 126.818, 142.513, 22.8645, 1.55 ) }
    dend_27 { pt3dadd( 127.933, 143.643, 23.123, 0.22 ) }
    dend_27 { pt3dadd( 128.751, 144.486, 23.2894, 0.22 ) }
    dend_27 { pt3dadd( 129.853, 145.57, 23.4941, 0.29 ) }
    dend_27 { pt3dadd( 130.542, 146.215, 23.6112, 0.59 ) }
    dend_27 { pt3dadd( 131.647, 147.137, 23.7414, 0.96 ) }
    dend_27 { pt3dadd( 132.965, 148.104, 23.8371, 0.15 ) }
    dend_27 { pt3dadd( 134.086, 148.851, 23.904, 1.18 ) }
    dend_27 { pt3dadd( 135.535, 149.759, 23.9844, 1.18 ) }
    dend_27 { pt3dadd( 136.771, 150.496, 24.0577, 1.4 ) }
    dend_27 { pt3dadd( 138.558, 151.516, 24.1672, 0.22 ) }
    dend_27 { pt3dadd( 139.371, 151.98, 24.2135, 0.37 ) }
    dend_27 { pt3dadd( 140.226, 152.497, 24.273, 1.03 ) }
    dend_27 { pt3dadd( 140.609, 152.757, 24.3085, 0.88 ) }
    dend_27 { pt3dadd( 141.134, 153.153, 24.3922, 0.74 ) }
    dend_27 { pt3dadd( 141.857, 153.728, 24.5608, 0.96 ) }
    dend_27 { pt3dadd( 142.82, 154.642, 24.8795, 0.22 ) }
    dend_27 { pt3dadd( 143.684, 155.511, 25.1585, 0.96 ) }
    dend_27 { pt3dadd( 144.151, 155.962, 25.2854, 0.74 ) }
    dend_27 { pt3dadd( 144.97, 156.704, 25.5154, 0.22 ) }
    dend_27 { pt3dadd( 145.787, 157.415, 25.7487, 0.29 ) }
    dend_27 { pt3dadd( 147.005, 158.443, 26.0912, 0.29 ) }
    dend_27 { pt3dadd( 147.857, 159.121, 26.3063, 0.29 ) }
    dend_27 { pt3dadd( 149.204, 160.155, 26.583, 0.22 ) }
    dend_27 { pt3dadd( 149.879, 160.672, 26.7009, 0.66 ) }
    dend_27 { pt3dadd( 150.439, 161.128, 26.7881, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( 150.796, 161.41, 26.8357, 1.55 ) }
    dend_27 { pt3dadd( 152.141, 162.417, 26.9721, 0.15 ) }
    dend_27 { pt3dadd( 153.195, 163.248, 27.0619, 0.15 ) }
    dend_27 { pt3dadd( 154.093, 164.007, 27.1138, 0.15 ) }
    dend_27 { pt3dadd( 154.86, 164.678, 27.1065, 0.15 ) }
    dend_27 { pt3dadd( 155.56, 165.324, 27.0812, 0.15 ) }
    dend_27 { pt3dadd( 156.101, 165.876, 27.0686, 0.88 ) }
    dend_27 { pt3dadd( 156.763, 166.614, 27.0581, 1.18 ) }
    dend_27 { pt3dadd( 157.544, 167.57, 27.0494, 1.18 ) }
    dend_27 { pt3dadd( 158.667, 168.96, 27.0407, 0.22 ) }
    dend_27 { pt3dadd( 159.86, 170.395, 27.045, 0.22 ) }
    dend_27 { pt3dadd( 160.595, 171.325, 27.0498, 1.18 ) }
    dend_27 { pt3dadd( 160.947, 171.777, 27.0577, 1.92 ) }
    dend_27 { pt3dadd( 161.519, 172.535, 27.0888, 1.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 57.524, 65.9207, 2.07809, 0.44 ) }
    dend_26 { pt3dadd( 58.1512, 66.1086, 2.10834, 0.44 ) }
    dend_26 { pt3dadd( 58.8195, 66.3132, 2.14914, 0.44 ) }
    dend_26 { pt3dadd( 59.1533, 66.3969, 2.17678, 0.96 ) }
    dend_26 { pt3dadd( 59.902, 66.5402, 2.25416, 1.7 ) }
    dend_26 { pt3dadd( 60.5665, 66.6516, 2.32674, 1.99 ) }
    dend_26 { pt3dadd( 61.5662, 66.8011, 2.42793, 1.11 ) }
    dend_26 { pt3dadd( 62.2409, 66.8856, 2.47604, 0.37 ) }
    dend_26 { pt3dadd( 62.8653, 66.956, 2.48441, 0.37 ) }
    dend_26 { pt3dadd( 63.6329, 67.0406, 2.45611, 0.37 ) }
    dend_26 { pt3dadd( 64.116, 67.1021, 2.40011, 0.37 ) }
    dend_26 { pt3dadd( 64.5761, 67.1683, 2.31586, 0.44 ) }
    dend_26 { pt3dadd( 65.2453, 67.2677, 2.15069, 0.96 ) }
    dend_26 { pt3dadd( 66.0873, 67.398, 1.89706, 1.62 ) }
    dend_26 { pt3dadd( 66.9267, 67.5444, 1.65022, 1.18 ) }
    dend_26 { pt3dadd( 68.0428, 67.7557, 1.36025, 0.29 ) }
    dend_26 { pt3dadd( 68.6215, 67.8596, 1.24544, 0.44 ) }
    dend_26 { pt3dadd( 69.0547, 67.9323, 1.19218, 0.59 ) }
    dend_26 { pt3dadd( 69.7308, 68.0324, 1.15334, 0.29 ) }
    dend_26 { pt3dadd( 70.6424, 68.1679, 1.15721, 0.29 ) }
    dend_26 { pt3dadd( 71.6848, 68.3454, 1.21135, 0.59 ) }
    dend_26 { pt3dadd( 72.3982, 68.5124, 1.27293, 1.03 ) }
    dend_26 { pt3dadd( 73.2506, 68.7773, 1.35843, 1.7 ) }
    dend_26 { pt3dadd( 74.0553, 69.0774, 1.44511, 1.7 ) }
    dend_26 { pt3dadd( 75.0221, 69.4547, 1.55285, 0.96 ) }
    dend_26 { pt3dadd( 75.6043, 69.6726, 1.60284, 1.33 ) }
    dend_26 { pt3dadd( 76.6991, 70.072, 1.68883, 1.62 ) }
    dend_26 { pt3dadd( 77.5716, 70.393, 1.73576, 0.52 ) }
    dend_26 { pt3dadd( 78.2461, 70.642, 1.76231, 0.22 ) }
    dend_26 { pt3dadd( 78.9689, 70.9112, 1.78052, 0.22 ) }
    dend_26 { pt3dadd( 79.8829, 71.2423, 1.77344, 0.22 ) }
    dend_26 { pt3dadd( 80.5791, 71.5146, 1.74327, 0.74 ) }
    dend_26 { pt3dadd( 81.2086, 71.8011, 1.69384, 1.33 ) }
    dend_26 { pt3dadd( 81.7599, 72.122, 1.63002, 1.77 ) }
    dend_26 { pt3dadd( 82.5696, 72.708, 1.51286, 0.44 ) }
    dend_26 { pt3dadd( 83.3095, 73.352, 1.39478, 0.22 ) }
    dend_26 { pt3dadd( 83.8907, 73.9057, 1.30248, 0.66 ) }
    dend_26 { pt3dadd( 84.3488, 74.3303, 1.23087, 0.29 ) }
    dend_26 { pt3dadd( 84.7516, 74.677, 1.17449, 0.29 ) }
    dend_26 { pt3dadd( 85.0096, 74.8636, 1.14374, 0.22 ) }
    dend_26 { pt3dadd( 85.3657, 75.0764, 1.11785, 0.22 ) }
    dend_26 { pt3dadd( 85.8957, 75.337, 1.10339, 0.52 ) }
    dend_26 { pt3dadd( 86.5431, 75.5878, 1.09165, 0.88 ) }
    dend_26 { pt3dadd( 87.1149, 75.7685, 1.06734, 0.88 ) }
    dend_26 { pt3dadd( 87.7741, 75.9664, 1.02813, 0.22 ) }
    dend_26 { pt3dadd( 88.3624, 76.1601, 0.99852, 0.22 ) }
    dend_26 { pt3dadd( 88.6531, 76.2661, 0.984884, 0.52 ) }
    dend_26 { pt3dadd( 89.1715, 76.4677, 0.962674, 1.4 ) }
    dend_26 { pt3dadd( 89.8695, 76.7296, 0.91958, 1.18 ) }
    dend_26 { pt3dadd( 90.9458, 77.1102, 0.83266, 0.22 ) }
    dend_26 { pt3dadd( 91.7273, 77.3838, 0.737152, 0.59 ) }
    dend_26 { pt3dadd( 92.3057, 77.5821, 0.659384, 0.22 ) }
    dend_26 { pt3dadd( 92.9626, 77.8278, 0.56107, 0.88 ) }
    dend_26 { pt3dadd( 93.7994, 78.1916, 0.426624, 1.55 ) }
    dend_26 { pt3dadd( 94.1158, 78.3538, 0.367199, 1.55 ) }
    dend_26 { pt3dadd( 95.1754, 78.9886, 0.115779, 0.88 ) }
    dend_26 { pt3dadd( 95.6733, 79.3208, -0.0225637, 0.44 ) }
    dend_26 { pt3dadd( 96.1265, 79.6466, -0.152786, 0.22 ) }
    dend_26 { pt3dadd( 96.5852, 79.9685, -0.284938, 0.22 ) }
    dend_26 { pt3dadd( 97.0674, 80.2995, -0.420773, 0.37 ) }
    dend_26 { pt3dadd( 97.5965, 80.6378, -0.56394, 1.11 ) }
    dend_26 { pt3dadd( 98.2827, 81.0418, -0.734813, 1.18 ) }
    dend_26 { pt3dadd( 98.9212, 81.4071, -0.883312, 0.29 ) }
    dend_26 { pt3dadd( 99.803, 81.8943, -1.07264, 0.22 ) }
    dend_26 { pt3dadd( 100.288, 82.155, -1.16105, 0.22 ) }
    dend_26 { pt3dadd( 100.783, 82.428, -1.22784, 1.11 ) }
    dend_26 { pt3dadd( 101.136, 82.6367, -1.25264, 1.18 ) }
    dend_26 { pt3dadd( 101.848, 83.1064, -1.24588, 0.29 ) }
    dend_26 { pt3dadd( 102.509, 83.5419, -1.18933, 0.29 ) }
    dend_26 { pt3dadd( 102.926, 83.8006, -1.13095, 1.03 ) }
    dend_26 { pt3dadd( 103.488, 84.0975, -1.03466, 1.92 ) }
    dend_26 { pt3dadd( 103.885, 84.2779, -0.97993, 1.92 ) }
    dend_26 { pt3dadd( 105.166, 84.7797, -0.866053, 0.15 ) }
    dend_26 { pt3dadd( 105.84, 84.9983, -0.833227, 0.15 ) }
    dend_26 { pt3dadd( 106.24, 85.1195, -0.818002, 0.37 ) }
    dend_26 { pt3dadd( 106.807, 85.2951, -0.803095, 1.11 ) }
    dend_26 { pt3dadd( 107.763, 85.5943, -0.77723, 1.47 ) }
    dend_26 { pt3dadd( 108.692, 85.8672, -0.756123, 0.44 ) }
    dend_26 { pt3dadd( 109.672, 86.1322, -0.73699, 0.22 ) }
    dend_26 { pt3dadd( 110.45, 86.3315, -0.720002, 0.74 ) }
    dend_26 { pt3dadd( 111.071, 86.459, -0.69581, 0.88 ) }
    dend_26 { pt3dadd( 112.138, 86.5554, -0.649019, 0.22 ) }
    dend_26 { pt3dadd( 112.635, 86.5268, -0.619107, 0.22 ) }
    dend_26 { pt3dadd( 113.121, 86.4185, -0.599968, 0.44 ) }
    dend_26 { pt3dadd( 113.596, 86.2546, -0.592105, 0.81 ) }
    dend_26 { pt3dadd( 114.173, 86.0173, -0.590107, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_26 { pt3dadd( 115.111, 85.6363, -0.589697, 0.81 ) }
    dend_26 { pt3dadd( 115.873, 85.35, -0.576701, 0.22 ) }
    dend_26 { pt3dadd( 116.42, 85.1914, -0.562684, 0.22 ) }
    dend_26 { pt3dadd( 116.878, 85.1192, -0.55366, 0.22 ) }
    dend_26 { pt3dadd( 117.771, 85.1049, -0.539306, 0.37 ) }
    dend_26 { pt3dadd( 118.759, 85.2172, -0.530999, 0.22 ) }
    dend_26 { pt3dadd( 119.121, 85.3037, -0.537696, 0.96 ) }
    dend_26 { pt3dadd( 119.779, 85.5233, -0.580707, 1.84 ) }
    dend_26 { pt3dadd( 121.029, 86.039, -0.735385, 0.22 ) }
    dend_26 { pt3dadd( 121.61, 86.3296, -0.846139, 0.22 ) }
    dend_26 { pt3dadd( 121.848, 86.4827, -0.908152, 0.22 ) }
    dend_26 { pt3dadd( 122.271, 86.8352, -1.03866, 0.22 ) }
    dend_26 { pt3dadd( 122.661, 87.2181, -1.1643, 0.44 ) }
    dend_26 { pt3dadd( 123.189, 87.7712, -1.31658, 1.18 ) }
    dend_26 { pt3dadd( 123.646, 88.2341, -1.42155, 1.62 ) }
    dend_26 { pt3dadd( 124.11, 88.6606, -1.49836, 1.7 ) }
    dend_26 { pt3dadd( 124.846, 89.3227, -1.56561, 1.25 ) }
    dend_26 { pt3dadd( 125.802, 90.1316, -1.59538, 0.29 ) }
    dend_26 { pt3dadd( 126.408, 90.5725, -1.5939, 1.03 ) }
    dend_26 { pt3dadd( 126.95, 90.9063, -1.59496, 1.47 ) }
    dend_26 { pt3dadd( 127.992, 91.446, -1.59727, 0.22 ) }
    dend_26 { pt3dadd( 128.837, 91.8186, -1.60979, 0.88 ) }
    dend_26 { pt3dadd( 129.478, 92.069, -1.62455, 0.44 ) }
    dend_26 { pt3dadd( 130.43, 92.4379, -1.65802, 0.22 ) }
    dend_26 { pt3dadd( 131.112, 92.7305, -1.68223, 0.22 ) }
    dend_26 { pt3dadd( 131.642, 92.9856, -1.69832, 1.03 ) }
    dend_26 { pt3dadd( 132.268, 93.3259, -1.70494, 1.47 ) }
    dend_26 { pt3dadd( 132.803, 93.6697, -1.70626, 1.25 ) }
    dend_26 { pt3dadd( 133.6, 94.2904, -1.71377, 0.52 ) }
    dend_26 { pt3dadd( 134.461, 95.0585, -1.73507, 0.37 ) }
    dend_26 { pt3dadd( 134.91, 95.4692, -1.76234, 1.03 ) }
    dend_26 { pt3dadd( 135.171, 95.7025, -1.79826, 1.4 ) }
    dend_26 { pt3dadd( 135.982, 96.3945, -1.96182, 0.96 ) }
    dend_26 { pt3dadd( 136.538, 96.8157, -2.11331, 0.81 ) }
    dend_26 { pt3dadd( 137.381, 97.3839, -2.38296, 0.22 ) }
    dend_26 { pt3dadd( 137.903, 97.6891, -2.56688, 0.22 ) }
    dend_26 { pt3dadd( 138.351, 97.918, -2.71167, 0.74 ) }
    dend_26 { pt3dadd( 138.689, 98.0816, -2.80568, 0.81 ) }
    dend_26 { pt3dadd( 139.337, 98.4105, -2.94866, 0.22 ) }
    dend_26 { pt3dadd( 139.652, 98.598, -3.00498, 0.22 ) }
    dend_26 { pt3dadd( 140.116, 98.913, -3.09361, 0.88 ) }
    dend_26 { pt3dadd( 140.82, 99.4558, -3.22547, 1.33 ) }
    dend_26 { pt3dadd( 141.388, 99.9534, -3.34744, 1.7 ) }
    dend_26 { pt3dadd( 142.091, 100.647, -3.5161, 1.47 ) }
    dend_26 { pt3dadd( 142.84, 101.472, -3.71541, 0.22 ) }
    dend_26 { pt3dadd( 143.282, 101.996, -3.84164, 0.22 ) }
    dend_26 { pt3dadd( 143.774, 102.656, -4.00281, 0.29 ) }
    dend_26 { pt3dadd( 144.082, 103.175, -4.12147, 0.15 ) }
    dend_26 { pt3dadd( 144.268, 103.578, -4.20293, 0.15 ) }
    dend_26 { pt3dadd( 144.477, 104.19, -4.30698, 0.59 ) }
    dend_26 { pt3dadd( 144.642, 104.786, -4.39534, 0.37 ) }
    dend_26 { pt3dadd( 144.857, 105.591, -4.53131, 0.22 ) }
    dend_26 { pt3dadd( 145.098, 106.446, -4.71107, 0.22 ) }
    dend_26 { pt3dadd( 145.233, 106.864, -4.81192, 1.11 ) }
    dend_26 { pt3dadd( 145.53, 107.715, -5.05436, 0.22 ) }
    dend_26 { pt3dadd( 145.758, 108.346, -5.26259, 0.07 ) }
    dend_26 { pt3dadd( 145.964, 108.948, -5.46109, 0.07 ) }
    dend_26 { pt3dadd( 146.085, 109.317, -5.56526, 0.88 ) }
    dend_26 { pt3dadd( 146.17, 109.624, -5.62644, 1.11 ) }
    dend_26 { pt3dadd( 146.279, 110.273, -5.67588, 0.81 ) }
    dend_26 { pt3dadd( 146.321, 110.965, -5.6276, 0.37 ) }
    dend_26 { pt3dadd( 146.325, 111.943, -5.4418, 0.15 ) }
    dend_26 { pt3dadd( 146.307, 112.75, -5.20373, 0.15 ) }
    dend_26 { pt3dadd( 146.275, 113.443, -4.93395, 0.15 ) }
    dend_26 { pt3dadd( 146.254, 114.084, -4.64279, 0.59 ) }
    dend_26 { pt3dadd( 146.222, 114.998, -4.1664, 0.29 ) }
    dend_26 { pt3dadd( 146.199, 115.482, -3.87791, 0.66 ) }
    dend_26 { pt3dadd( 146.178, 116.035, -3.51058, 1.47 ) }
    dend_26 { pt3dadd( 146.15, 116.893, -2.90707, 0.22 ) }
    dend_26 { pt3dadd( 146.14, 117.508, -2.47052, 0.15 ) }
    dend_26 { pt3dadd( 146.162, 118.165, -2.00318, 0.15 ) }
    dend_26 { pt3dadd( 146.192, 118.627, -1.67681, 0.44 ) }
    dend_26 { pt3dadd( 146.236, 119.056, -1.39399, 0.44 ) }
    dend_26 { pt3dadd( 146.33, 119.711, -0.980784, 0.22 ) }
    dend_26 { pt3dadd( 146.373, 120.005, -0.810771, 0.15 ) }
    dend_26 { pt3dadd( 146.406, 120.623, -0.469774, 0.15 ) }
    dend_26 { pt3dadd( 146.401, 120.866, -0.347924, 0.15 ) }
    dend_26 { pt3dadd( 146.342, 121.233, -0.179169, 0.44 ) }
    dend_26 { pt3dadd( 146.268, 121.517, -0.0507419, 0.44 ) }
    dend_26 { pt3dadd( 146.032, 122.343, 0.344467, 0.15 ) }
    dend_26 { pt3dadd( 145.889, 122.923, 0.644378, 0.22 ) }
    dend_26 { pt3dadd( 145.802, 123.315, 0.855007, 0.29 ) }
    dend_26 { pt3dadd( 145.751, 123.958, 1.19888, 0.29 ) }
    dend_26 { pt3dadd( 145.791, 124.461, 1.44965, 0.74 ) }
    dend_26 { pt3dadd( 145.943, 125.064, 1.72287, 0.66 ) }
    dend_26 { pt3dadd( 146.157, 125.6, 1.93705, 1.55 ) }
    dend_26 { pt3dadd( 146.298, 125.892, 2.03439, 1.55 ) }
    dend_26 { pt3dadd( 146.812, 126.8, 2.26661, 0.15 ) }
    dend_26 { pt3dadd( 147.225, 127.45, 2.39581, 0.22 ) }
    dend_26 { pt3dadd( 147.638, 128.068, 2.49305, 0.22 ) }
    dend_26 { pt3dadd( 147.909, 128.457, 2.53881, 0.22 ) }
    dend_26 { pt3dadd( 148.295, 128.978, 2.58378, 0.37 ) }
    dend_26 { pt3dadd( 149.083, 129.978, 2.64796, 0.22 ) }
    dend_26 { pt3dadd( 149.775, 130.862, 2.70887, 0.15 ) }
    dend_26 { pt3dadd( 150.088, 131.274, 2.75408, 1.18 ) }
    dend_26 { pt3dadd( 150.449, 131.784, 2.82956, 2.21 ) }
    dend_26 { pt3dadd( 150.575, 131.975, 2.86352, 2.21 ) }
    dend_26 { pt3dadd( 151.197, 133.082, 3.10076, 0.22 ) }
    dend_26 { pt3dadd( 151.563, 133.938, 3.30912, 0.22 ) }
    dend_26 { pt3dadd( 151.869, 134.889, 3.53355, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_26 { pt3dadd( 151.952, 135.211, 3.60714, 0.66 ) }
    dend_26 { pt3dadd( 152.001, 135.449, 3.65466, 1.25 ) }
    dend_26 { pt3dadd( 152.145, 136.257, 3.78302, 1.62 ) }
    dend_26 { pt3dadd( 152.285, 137.248, 3.89153, 0.22 ) }
    dend_26 { pt3dadd( 152.429, 138.264, 3.92425, 0.22 ) }
    dend_26 { pt3dadd( 152.482, 138.66, 3.9141, 0.37 ) }
    dend_26 { pt3dadd( 152.57, 139.252, 3.88115, 0.88 ) }
    dend_26 { pt3dadd( 152.634, 139.71, 3.84928, 0.88 ) }
    dend_26 { pt3dadd( 152.704, 140.371, 3.78056, 0.22 ) }
    dend_26 { pt3dadd( 152.733, 141.129, 3.69559, 0.15 ) }
    dend_26 { pt3dadd( 152.716, 141.726, 3.64788, 0.15 ) }
    dend_26 { pt3dadd( 152.689, 142.021, 3.58427, 0.52 ) }
    dend_26 { pt3dadd( 152.612, 142.654, 3.40178, 0.88 ) }
    dend_26 { pt3dadd( 152.514, 143.385, 3.16003, 0.22 ) }
    dend_26 { pt3dadd( 152.449, 143.897, 2.96266, 0.22 ) }
    dend_26 { pt3dadd( 152.275, 145.135, 2.47705, 0.15 ) }
    dend_26 { pt3dadd( 152.042, 147.248, 1.68004, 0.22 ) }
    dend_26 { pt3dadd( 151.994, 147.905, 1.44285, 0.44 ) }
    dend_26 { pt3dadd( 151.985, 148.598, 1.21523, 0.22 ) }
    dend_26 { pt3dadd( 152.02, 149.332, 1.01014, 0.29 ) }
    dend_26 { pt3dadd( 152.079, 149.92, 0.881263, 0.22 ) }
    dend_26 { pt3dadd( 152.218, 150.92, 0.748919, 0.15 ) }
    dend_26 { pt3dadd( 152.299, 151.364, 0.773546, 0.15 ) }
    dend_26 { pt3dadd( 152.452, 152.149, 0.824095, 0.15 ) }
    dend_26 { pt3dadd( 152.547, 152.568, 0.860611, 0.29 ) }
    dend_26 { pt3dadd( 152.657, 152.98, 0.919068, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 26/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 2.70631, 50.8811, 84.6427, 0.07 ) }
    dend_19 { pt3dadd( 2.58545, 51.316, 84.7955, 0.07 ) }
    dend_19 { pt3dadd( 2.49248, 51.716, 84.9581, 0.07 ) }
    dend_19 { pt3dadd( 2.3764, 52.4687, 85.3133, 0.07 ) }
    dend_19 { pt3dadd( 2.31386, 53.1016, 85.6099, 0.29 ) }
    dend_19 { pt3dadd( 2.2915, 53.5986, 85.8432, 0.07 ) }
    dend_19 { pt3dadd( 2.30289, 54.4046, 86.2126, 0.07 ) }
    dend_19 { pt3dadd( 2.34135, 54.8014, 86.3993, 0.52 ) }
    dend_19 { pt3dadd( 2.4848, 55.7945, 86.8777, 1.03 ) }
    dend_19 { pt3dadd( 2.67032, 56.8639, 87.4217, 0.15 ) }
    dend_19 { pt3dadd( 2.74277, 57.2976, 87.6462, 0.15 ) }
    dend_19 { pt3dadd( 2.81644, 57.8415, 87.922, 0.15 ) }
    dend_19 { pt3dadd( 2.8648, 58.3432, 88.153, 0.15 ) }
    dend_19 { pt3dadd( 2.8753, 58.794, 88.3664, 0.07 ) }
    dend_19 { pt3dadd( 2.85655, 59.1454, 88.5443, 0.07 ) }
    dend_19 { pt3dadd( 2.83028, 59.5949, 88.7842, 0.44 ) }
    dend_19 { pt3dadd( 2.81853, 59.8503, 88.9293, 0.74 ) }
    dend_19 { pt3dadd( 2.82657, 60.1304, 89.101, 0.74 ) }
    dend_19 { pt3dadd( 2.94449, 61.034, 89.6835, 0.15 ) }
    dend_19 { pt3dadd( 3.05803, 61.5783, 90.0401, 0.15 ) }
    dend_19 { pt3dadd( 3.2263, 62.2442, 90.4724, 0.37 ) }
    dend_19 { pt3dadd( 3.40058, 62.8648, 90.8742, 1.7 ) }
    dend_19 { pt3dadd( 3.59093, 63.5533, 91.3014, 1.03 ) }
    dend_19 { pt3dadd( 3.85771, 64.4824, 91.8601, 0.15 ) }
    dend_19 { pt3dadd( 4.11307, 65.2927, 92.3471, 0.15 ) }
    dend_19 { pt3dadd( 4.21822, 65.625, 92.5427, 0.66 ) }
    dend_19 { pt3dadd( 4.35762, 66.0445, 92.7942, 1.03 ) }
    dend_19 { pt3dadd( 4.61682, 66.7516, 93.199, 0.15 ) }
    dend_19 { pt3dadd( 4.95696, 67.6, 93.6734, 0.15 ) }
    dend_19 { pt3dadd( 5.22231, 68.1667, 94.0086, 0.15 ) }
    dend_19 { pt3dadd( 5.45659, 68.6189, 94.2775, 0.29 ) }
    dend_19 { pt3dadd( 5.70782, 69.098, 94.5541, 0.29 ) }
    dend_19 { pt3dadd( 5.91402, 69.5547, 94.8008, 0.74 ) }
    dend_19 { pt3dadd( 6.10896, 70.102, 95.0929, 0.81 ) }
    dend_19 { pt3dadd( 6.20628, 70.4836, 95.2899, 0.81 ) }
    dend_19 { pt3dadd( 6.3756, 71.551, 95.8244, 0.15 ) }
    dend_19 { pt3dadd( 6.40276, 72.0943, 96.1254, 0.74 ) }
    dend_19 { pt3dadd( 6.31547, 73.2722, 96.8311, 0.15 ) }
    dend_19 { pt3dadd( 6.17916, 73.8404, 97.2145, 0.15 ) }
    dend_19 { pt3dadd( 5.9297, 74.3379, 97.5889, 0.15 ) }
    dend_19 { pt3dadd( 5.67071, 74.6867, 97.8727, 0.29 ) }
    dend_19 { pt3dadd( 5.12508, 75.215, 98.3658, 0.15 ) }
    dend_19 { pt3dadd( 4.93383, 75.3636, 98.5158, 0.52 ) }
    dend_19 { pt3dadd( 4.26035, 75.7724, 99.0105, 1.4 ) }
    dend_19 { pt3dadd( 2.99877, 76.4326, 99.9082, 0.15 ) }
    dend_19 { pt3dadd( 2.65101, 76.5792, 100.146, 0.15 ) }
    dend_19 { pt3dadd( 2.47874, 76.6336, 100.27, 0.15 ) }
    dend_19 { pt3dadd( 1.72646, 76.7813, 100.835, 0.81 ) }
    dend_19 { pt3dadd( 0.910118, 76.8356, 101.472, 0.15 ) }
    dend_19 { pt3dadd( 0.625737, 76.8104, 101.701, 0.15 ) }
    dend_19 { pt3dadd( 0.211155, 76.7328, 102.031, 1.18 ) }
    dend_19 { pt3dadd( -0.973756, 76.4742, 102.948, 0.07 ) }
    dend_19 { pt3dadd( -1.7553, 76.2883, 103.523, 0.07 ) }
    dend_19 { pt3dadd( -2.12216, 76.2031, 103.773, 0.59 ) }
    dend_19 { pt3dadd( -2.5057, 76.137, 104.011, 1.77 ) }
    dend_19 { pt3dadd( -3.8044, 75.9581, 104.765, 0.07 ) }
    dend_19 { pt3dadd( -4.40007, 75.8883, 105.097, 0.07 ) }
    dend_19 { pt3dadd( -4.795, 75.8433, 105.293, 0.37 ) }
    dend_19 { pt3dadd( -5.19311, 75.8066, 105.472, 0.52 ) }
    dend_19 { pt3dadd( -6.10302, 75.7114, 105.877, 0.07 ) }
    dend_19 { pt3dadd( -6.97044, 75.6258, 106.243, 0.07 ) }
    dend_19 { pt3dadd( -7.32806, 75.5841, 106.379, 0.07 ) }
    dend_19 { pt3dadd( -7.62263, 75.5416, 106.488, 0.29 ) }
    dend_19 { pt3dadd( -8.29434, 75.4093, 106.739, 0.66 ) }
    dend_19 { pt3dadd( -9.07774, 75.1873, 107.039, 0.07 ) }
    dend_19 { pt3dadd( -9.65593, 74.9884, 107.255, 0.29 ) }
    dend_19 { pt3dadd( -10.173, 74.8016, 107.45, 0.88 ) }
    dend_19 { pt3dadd( -11.2589, 74.4194, 107.902, 0.15 ) }
    dend_19 { pt3dadd( -11.8107, 74.2261, 108.157, 0.52 ) }
    dend_19 { pt3dadd( -12.9638, 73.8218, 108.714, 0.07 ) }
    dend_19 { pt3dadd( -13.3366, 73.6969, 108.895, 0.59 ) }
    dend_19 { pt3dadd( -13.8444, 73.5269, 109.148, 1.47 ) }
    dend_19 { pt3dadd( -15.0415, 73.1407, 109.76, 0.07 ) }
    dend_19 { pt3dadd( -15.4925, 72.9968, 109.997, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -16.1768, 72.7784, 110.362, 0.07 ) }
    dend_19 { pt3dadd( -16.3876, 72.7125, 110.472, 0.37 ) }
    dend_19 { pt3dadd( -16.8343, 72.5814, 110.688, 0.81 ) }
    dend_19 { pt3dadd( -17.6777, 72.3544, 111.068, 0.07 ) }
    dend_19 { pt3dadd( -18.3519, 72.1945, 111.337, 0.07 ) }
    dend_19 { pt3dadd( -18.698, 72.144, 111.466, 0.44 ) }
    dend_19 { pt3dadd( -19.0591, 72.1183, 111.601, 0.88 ) }
    dend_19 { pt3dadd( -20.0585, 72.1187, 111.956, 0.15 ) }
    dend_19 { pt3dadd( -20.5946, 72.1568, 112.132, 0.37 ) }
    dend_19 { pt3dadd( -20.8924, 72.1938, 112.218, 0.37 ) }
    dend_19 { pt3dadd( -22.125, 72.3513, 112.523, 0.15 ) }
    dend_19 { pt3dadd( -22.5301, 72.399, 112.616, 0.15 ) }
    dend_19 { pt3dadd( -23.1426, 72.4783, 112.748, 0.37 ) }
    dend_19 { pt3dadd( -24.2484, 72.6163, 112.955, 0.07 ) }
    dend_19 { pt3dadd( -24.9592, 72.7129, 113.083, 0.29 ) }
    dend_19 { pt3dadd( -25.6025, 72.8069, 113.203, 0.07 ) }
    dend_19 { pt3dadd( -26.2396, 72.9103, 113.323, 0.07 ) }
    dend_19 { pt3dadd( -27.6031, 73.1465, 113.581, 0.07 ) }
    dend_19 { pt3dadd( -29.4113, 73.4717, 113.928, 0.07 ) }
    dend_19 { pt3dadd( -29.9931, 73.5855, 114.042, 0.07 ) }
    dend_19 { pt3dadd( -30.8256, 73.7596, 114.217, 0.07 ) }
    dend_19 { pt3dadd( -31.3229, 73.8727, 114.333, 0.59 ) }
    dend_19 { pt3dadd( -32.0724, 74.0395, 114.51, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 2.70631, 50.8811, 84.6427, 0.37 ) }
    dend_18 { pt3dadd( 3.77388, 50.1208, 85.0331, 0.37 ) }
    dend_18 { pt3dadd( 4.50689, 49.6623, 85.2361, 0.37 ) }
    dend_18 { pt3dadd( 5.02893, 49.3779, 85.3509, 0.59 ) }
    dend_18 { pt3dadd( 5.93335, 48.9138, 85.4621, 0.22 ) }
    dend_18 { pt3dadd( 6.59027, 48.5695, 85.4976, 0.22 ) }
    dend_18 { pt3dadd( 7.04906, 48.2926, 85.501, 0.15 ) }
    dend_18 { pt3dadd( 7.49508, 48.0104, 85.5173, 0.15 ) }
    dend_18 { pt3dadd( 8.08213, 47.6019, 85.5044, 0.15 ) }
    dend_18 { pt3dadd( 8.60255, 47.1791, 85.4768, 0.59 ) }
    dend_18 { pt3dadd( 8.93876, 46.824, 85.4474, 0.88 ) }
    dend_18 { pt3dadd( 9.68588, 45.8306, 85.3765, 0.15 ) }
    dend_18 { pt3dadd( 10.1745, 45.061, 85.3773, 0.15 ) }
    dend_18 { pt3dadd( 10.416, 44.6126, 85.3861, 0.44 ) }
    dend_18 { pt3dadd( 10.6189, 44.1688, 85.4015, 0.81 ) }
    dend_18 { pt3dadd( 10.8939, 43.491, 85.4353, 0.07 ) }
    dend_18 { pt3dadd( 11.2041, 42.6551, 85.4618, 0.22 ) }
    dend_18 { pt3dadd( 11.5071, 41.7764, 85.466, 0.22 ) }
    dend_18 { pt3dadd( 11.9137, 40.546, 85.4346, 0.07 ) }
    dend_18 { pt3dadd( 12.2283, 39.5277, 85.3959, 0.07 ) }
    dend_18 { pt3dadd( 12.526, 38.5648, 85.3463, 0.07 ) }
    dend_18 { pt3dadd( 12.695, 38.0292, 85.299, 0.29 ) }
    dend_18 { pt3dadd( 13.1066, 36.7339, 85.1642, 0.07 ) }
    dend_18 { pt3dadd( 13.2967, 36.1312, 85.0838, 0.88 ) }
    dend_18 { pt3dadd( 13.5408, 35.3732, 84.9851, 1.25 ) }
    dend_18 { pt3dadd( 13.7082, 34.8836, 84.9131, 1.25 ) }
    dend_18 { pt3dadd( 14.2695, 33.3106, 84.6577, 0.07 ) }
    dend_18 { pt3dadd( 14.6398, 32.2729, 84.4786, 0.07 ) }
    dend_18 { pt3dadd( 14.8474, 31.6913, 84.3676, 0.07 ) }
    dend_18 { pt3dadd( 14.9679, 31.3497, 84.3008, 0.52 ) }
    dend_18 { pt3dadd( 15.2794, 30.4342, 84.1146, 0.66 ) }
    dend_18 { pt3dadd( 15.4233, 29.9561, 84.0164, 0.22 ) }
    dend_18 { pt3dadd( 15.5941, 29.3252, 83.8784, 0.52 ) }
    dend_18 { pt3dadd( 15.7161, 28.794, 83.7539, 0.29 ) }
    dend_18 { pt3dadd( 15.9163, 27.7862, 83.5322, 0.07 ) }
    dend_18 { pt3dadd( 16.0622, 26.9042, 83.3516, 0.07 ) }
    dend_18 { pt3dadd( 16.1552, 26.2516, 83.2341, 0.22 ) }
    dend_18 { pt3dadd( 16.2101, 25.7947, 83.1617, 0.22 ) }
    dend_18 { pt3dadd( 16.3521, 24.5222, 82.9706, 0.07 ) }
    dend_18 { pt3dadd( 16.3845, 24.1875, 82.9245, 0.37 ) }
    dend_18 { pt3dadd( 16.4186, 23.7967, 82.8762, 0.59 ) }
    dend_18 { pt3dadd( 16.4906, 22.8799, 82.7777, 0.07 ) }
    dend_18 { pt3dadd( 16.5467, 22.1334, 82.7092, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -55.731, -86.1005, 59.7016, 0.15 ) }
    dend_16 { pt3dadd( -57.2852, -86.4191, 59.7613, 0.15 ) }
    dend_16 { pt3dadd( -58.8054, -86.7119, 59.7897, 0.15 ) }
    dend_16 { pt3dadd( -60.1945, -86.9689, 59.7808, 0.15 ) }
    dend_16 { pt3dadd( -61.6187, -87.2272, 59.7562, 0.37 ) }
    dend_16 { pt3dadd( -63.19, -87.5027, 59.7147, 0.15 ) }
    dend_16 { pt3dadd( -64.77, -87.7668, 59.6628, 0.07 ) }
    dend_16 { pt3dadd( -65.5678, -87.8994, 59.6402, 0.22 ) }
    dend_16 { pt3dadd( -67.9454, -88.2933, 59.4676, 0.15 ) }
    dend_16 { pt3dadd( -68.1126, -88.3161, 59.4507, 0.59 ) }
    dend_16 { pt3dadd( -69.1749, -88.444, 59.343, 1.11 ) }
    dend_16 { pt3dadd( -69.6553, -88.5028, 59.2943, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -55.731, -86.1005, 59.7016, 0.59 ) }
    dend_15 { pt3dadd( -56.1409, -87.2401, 60.0829, 0.59 ) }
    dend_15 { pt3dadd( -56.4568, -88.066, 60.372, 0.96 ) }
    dend_15 { pt3dadd( -56.8655, -89.361, 60.8229, 1.47 ) }
    dend_15 { pt3dadd( -57.0752, -90.2341, 61.1102, 1.47 ) }
    dend_15 { pt3dadd( -57.3555, -91.8098, 61.6149, 0.22 ) }
    dend_15 { pt3dadd( -57.479, -92.3978, 61.8146, 0.15 ) }
    dend_15 { pt3dadd( -57.6508, -92.9477, 62.0323, 0.15 ) }
    dend_15 { pt3dadd( -57.9913, -93.8753, 62.4445, 0.15 ) }
    dend_15 { pt3dadd( -58.3042, -94.6588, 62.8126, 0.37 ) }
    dend_15 { pt3dadd( -58.6582, -95.4456, 63.2506, 0.37 ) }
    dend_15 { pt3dadd( -59.3541, -96.827, 64.1856, 0.22 ) }
    dend_15 { pt3dadd( -59.7711, -97.6115, 64.8019, 0.22 ) }
    dend_15 { pt3dadd( -60.0198, -98.0745, 65.1879, 0.96 ) }
    dend_15 { pt3dadd( -60.6396, -99.2272, 66.2127, 2.06 ) }
    dend_15 { pt3dadd( -61.2163, -100.334, 67.2554, 1.11 ) }
    dend_15 { pt3dadd( -61.9502, -101.81, 68.6913, 0.22 ) }
    dend_15 { pt3dadd( -62.4557, -102.954, 69.8181, 0.22 ) }
    dend_15 { pt3dadd( -62.6877, -103.462, 70.3109, 0.22 ) }
    dend_15 { pt3dadd( -62.8871, -103.865, 70.696, 0.22 ) }
    dend_15 { pt3dadd( -63.0788, -104.209, 71.0269, 0.22 ) }
    dend_15 { pt3dadd( -63.4169, -104.709, 71.4561, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_15 { pt3dadd( -63.8751, -105.247, 71.8603, 0.22 ) }
    dend_15 { pt3dadd( -64.648, -106.061, 72.4306, 0.22 ) }
    dend_15 { pt3dadd( -65.3116, -106.784, 72.8935, 0.22 ) }
    dend_15 { pt3dadd( -65.7277, -107.276, 73.1766, 0.66 ) }
    dend_15 { pt3dadd( -66.5149, -108.321, 73.7388, 1.11 ) }
    dend_15 { pt3dadd( -67.6175, -109.897, 74.5723, 0.29 ) }
    dend_15 { pt3dadd( -68.5728, -111.271, 75.286, 0.22 ) }
    dend_15 { pt3dadd( -69.3739, -112.418, 75.8857, 0.22 ) }
    dend_15 { pt3dadd( -69.7613, -112.94, 76.1442, 0.29 ) }
    dend_15 { pt3dadd( -70.7455, -114.235, 76.757, 0.22 ) }
    dend_15 { pt3dadd( -71.1928, -114.819, 77.029, 0.96 ) }
    dend_15 { pt3dadd( -71.9652, -115.807, 77.4792, 1.84 ) }
    dend_15 { pt3dadd( -73.278, -117.424, 78.2168, 0.29 ) }
    dend_15 { pt3dadd( -74.3785, -118.669, 78.8406, 0.22 ) }
    dend_15 { pt3dadd( -75.1136, -119.47, 79.2771, 0.22 ) }
    dend_15 { pt3dadd( -75.5728, -119.975, 79.5625, 0.22 ) }
    dend_15 { pt3dadd( -75.9794, -120.487, 79.8474, 0.37 ) }
    dend_15 { pt3dadd( -76.5696, -121.405, 80.3306, 0.52 ) }
    dend_15 { pt3dadd( -77.1368, -122.546, 80.828, 0.29 ) }
    dend_15 { pt3dadd( -77.5491, -123.584, 81.2427, 0.29 ) }
    dend_15 { pt3dadd( -77.77, -124.206, 81.4497, 0.29 ) }
    dend_15 { pt3dadd( -78.1682, -125.441, 81.8266, 0.44 ) }
    dend_15 { pt3dadd( -78.5698, -126.904, 82.2555, 0.52 ) }
    dend_15 { pt3dadd( -79.0525, -128.969, 82.8211, 0.15 ) }
    dend_15 { pt3dadd( -79.2675, -130.01, 83.0964, 0.59 ) }
    dend_15 { pt3dadd( -79.647, -131.703, 83.5776, 1.7 ) }
    dend_15 { pt3dadd( -80.1877, -133.756, 84.2364, 0.15 ) }
    dend_15 { pt3dadd( -80.4827, -134.708, 84.6016, 0.44 ) }
    dend_15 { pt3dadd( -80.6868, -135.355, 84.8804, 0.44 ) }
    dend_15 { pt3dadd( -80.9899, -136.268, 85.3286, 0.07 ) }
    dend_15 { pt3dadd( -81.2759, -137.053, 85.7326, 0.07 ) }
    dend_15 { pt3dadd( -81.5437, -137.636, 86.0539, 0.07 ) }
    dend_15 { pt3dadd( -81.9814, -138.412, 86.4852, 0.29 ) }
    dend_15 { pt3dadd( -82.7843, -139.678, 87.1716, 0.52 ) }
    dend_15 { pt3dadd( -83.3727, -140.577, 87.6661, 0.22 ) }
    dend_15 { pt3dadd( -83.8767, -141.331, 88.0871, 0.22 ) }
    dend_15 { pt3dadd( -84.4432, -142.157, 88.5659, 0.37 ) }
    dend_15 { pt3dadd( -85.0085, -142.938, 89.068, 0.74 ) }
    dend_15 { pt3dadd( -85.89, -144.024, 89.8468, 1.33 ) }
    dend_15 { pt3dadd( -86.8626, -145.057, 90.6696, 0.22 ) }
    dend_15 { pt3dadd( -87.6076, -145.777, 91.2673, 0.15 ) }
    dend_15 { pt3dadd( -88.1919, -146.308, 91.7264, 0.29 ) }
    dend_15 { pt3dadd( -88.9967, -147.028, 92.3703, 0.15 ) }
    dend_15 { pt3dadd( -89.6521, -147.583, 92.8692, 0.59 ) }
    dend_15 { pt3dadd( -90.3575, -148.125, 93.402, 0.74 ) }
    dend_15 { pt3dadd( -91.4194, -148.851, 94.1386, 0.07 ) }
    dend_15 { pt3dadd( -92.4211, -149.504, 94.822, 0.15 ) }
    dend_15 { pt3dadd( -93.1363, -149.962, 95.305, 0.15 ) }
    dend_15 { pt3dadd( -93.724, -150.338, 95.6929, 0.15 ) }
    dend_15 { pt3dadd( -94.3991, -150.761, 96.1054, 0.15 ) }
    dend_15 { pt3dadd( -95.3586, -151.352, 96.6452, 0.29 ) }
    dend_15 { pt3dadd( -96.1525, -151.81, 97.0437, 0.74 ) }
    dend_15 { pt3dadd( -97.3488, -152.482, 97.5775, 1.03 ) }
    dend_15 { pt3dadd( -98.5371, -153.161, 98.0658, 0.29 ) }
    dend_15 { pt3dadd( -100.201, -154.134, 98.7645, 0.22 ) }
    dend_15 { pt3dadd( -101.232, -154.762, 99.176, 0.88 ) }
    dend_15 { pt3dadd( -102.394, -155.451, 99.6429, 1.33 ) }
    dend_15 { pt3dadd( -103.419, -156.033, 100.042, 1.47 ) }
    dend_15 { pt3dadd( -105.38, -157.085, 100.801, 0.22 ) }
    dend_15 { pt3dadd( -106.406, -157.598, 101.191, 0.22 ) }
    dend_15 { pt3dadd( -107.598, -158.178, 101.666, 1.03 ) }
    dend_15 { pt3dadd( -108.873, -158.777, 102.168, 1.55 ) }
    dend_15 { pt3dadd( -110.707, -159.652, 102.898, 0.74 ) }
    dend_15 { pt3dadd( -112.494, -160.579, 103.678, 0.22 ) }
    dend_15 { pt3dadd( -113.402, -161.12, 104.095, 0.22 ) }
    dend_15 { pt3dadd( -114.224, -161.651, 104.468, 0.22 ) }
    dend_15 { pt3dadd( -115.166, -162.323, 104.923, 0.15 ) }
    dend_15 { pt3dadd( -116.016, -163.054, 105.359, 0.37 ) }
    dend_15 { pt3dadd( -117.04, -164.14, 105.959, 0.15 ) }
    dend_15 { pt3dadd( -117.71, -165.027, 106.399, 0.15 ) }
    dend_15 { pt3dadd( -118.518, -166.277, 107.016, 0.22 ) }
    dend_15 { pt3dadd( -118.863, -166.865, 107.296, 0.15 ) }
    dend_15 { pt3dadd( -119.357, -167.786, 107.738, 0.15 ) }
    dend_15 { pt3dadd( -119.626, -168.374, 108.03, 0.74 ) }
    dend_15 { pt3dadd( -119.896, -169.102, 108.402, 0.88 ) }
    dend_15 { pt3dadd( -120.313, -170.658, 109.267, 0.15 ) }
    dend_15 { pt3dadd( -120.459, -171.257, 109.611, 0.22 ) }
    dend_15 { pt3dadd( -120.739, -171.932, 110.05, 0.22 ) }
    dend_15 { pt3dadd( -121.367, -172.976, 110.814, 0.22 ) }
    dend_15 { pt3dadd( -121.576, -173.257, 111.038, 0.22 ) }
    dend_15 { pt3dadd( -122.107, -173.866, 111.548, 0.88 ) }
    dend_15 { pt3dadd( -123.064, -174.777, 112.309, 1.84 ) }
    dend_15 { pt3dadd( -124.639, -176.041, 113.368, 0.15 ) }
    dend_15 { pt3dadd( -125.603, -176.763, 113.909, 0.15 ) }
    dend_15 { pt3dadd( -126.337, -177.286, 114.23, 0.29 ) }
    dend_15 { pt3dadd( -127.396, -178.093, 114.705, 0.74 ) }
    dend_15 { pt3dadd( -128.307, -178.852, 115.145, 1.11 ) }
    dend_15 { pt3dadd( -129.137, -179.631, 115.598, 0.52 ) }
    dend_15 { pt3dadd( -130.261, -180.759, 116.269, 0.22 ) }
    dend_15 { pt3dadd( -132.066, -182.431, 117.379, 0.29 ) }
    dend_15 { pt3dadd( -133.515, -183.694, 118.337, 0.15 ) }
    dend_15 { pt3dadd( -134.32, -184.365, 118.913, 0.37 ) }
    dend_15 { pt3dadd( -135.365, -185.18, 119.722, 1.18 ) }
    dend_15 { pt3dadd( -136.78, -186.255, 120.949, 0.44 ) }
    dend_15 { pt3dadd( -138.018, -187.106, 122.139, 0.29 ) }
    dend_15 { pt3dadd( -138.889, -187.679, 123.046, 0.15 ) }
    dend_15 { pt3dadd( -139.6, -188.111, 123.753, 0.88 ) }
    dend_15 { pt3dadd( -140.649, -188.737, 124.806, 1.03 ) }
    dend_15 { pt3dadd( -142.094, -189.586, 126.342, 0.22 ) }
    dend_15 { pt3dadd( -143.405, -190.39, 127.93, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -144.016, -190.769, 128.729, 0.59 ) }
    dend_15 { pt3dadd( -144.726, -191.191, 129.672, 0.96 ) }
    dend_15 { pt3dadd( -145.72, -191.695, 130.984, 0.37 ) }
    dend_15 { pt3dadd( -147.052, -192.231, 132.738, 0.15 ) }
    dend_15 { pt3dadd( -148.137, -192.521, 134.132, 0.59 ) }
    dend_15 { pt3dadd( -148.796, -192.639, 134.975, 1.77 ) }
    dend_15 { pt3dadd( -150.463, -192.844, 137.109, 0.22 ) }
    dend_15 { pt3dadd( -151.506, -192.95, 138.473, 0.22 ) }
    dend_15 { pt3dadd( -152.278, -193.01, 139.438, 0.37 ) }
    dend_15 { pt3dadd( -153.067, -193.085, 140.338, 0.37 ) }
    dend_15 { pt3dadd( -153.699, -193.177, 141.025, 0.37 ) }
    dend_15 { pt3dadd( -154.54, -193.329, 141.972, 0.81 ) }
    dend_15 { pt3dadd( -155.234, -193.531, 142.846, 0.81 ) }
    dend_15 { pt3dadd( -156.252, -194.081, 144.321, 0.29 ) }
    dend_15 { pt3dadd( -156.782, -194.53, 145.279, 0.29 ) }
    dend_15 { pt3dadd( -157.029, -194.937, 146.061, 0.29 ) }
    dend_15 { pt3dadd( -157.071, -195.151, 146.48, 0.29 ) }
    dend_15 { pt3dadd( -157.018, -195.942, 148.181, 0.29 ) }
    dend_15 { pt3dadd( -156.94, -196.266, 148.879, 0.44 ) }
    dend_15 { pt3dadd( -156.769, -196.87, 150.169, 0.44 ) }
    dend_15 { pt3dadd( -156.625, -197.703, 151.967, 0.81 ) }
    dend_15 { pt3dadd( -156.645, -198.393, 153.553, 0.81 ) }
    dend_15 { pt3dadd( -156.789, -198.925, 154.803, 0.81 ) }
    dend_15 { pt3dadd( -156.964, -199.218, 155.537, 0.22 ) }
    dend_15 { pt3dadd( -157.518, -199.873, 157.246, 0.22 ) }
    dend_15 { pt3dadd( -158.321, -200.587, 159.133, 0.22 ) }
    dend_15 { pt3dadd( -159.165, -201.235, 160.773, 0.81 ) }
    dend_15 { pt3dadd( -160.031, -201.873, 162.251, 0.52 ) }
    dend_15 { pt3dadd( -161.436, -202.906, 164.318, 0.22 ) }
    dend_15 { pt3dadd( -162.087, -203.386, 165.136, 0.22 ) }
    dend_15 { pt3dadd( -162.623, -203.778, 165.656, 0.52 ) }
    dend_15 { pt3dadd( -163.663, -204.51, 166.338, 0.15 ) }
    dend_15 { pt3dadd( -164.191, -204.86, 166.534, 0.59 ) }
    dend_15 { pt3dadd( -165.636, -205.796, 166.789, 0.15 ) }
    dend_15 { pt3dadd( -166.701, -206.486, 166.742, 0.37 ) }
    dend_15 { pt3dadd( -167.896, -207.244, 166.566, 0.15 ) }
    dend_15 { pt3dadd( -168.982, -207.853, 166.309, 0.37 ) }
    dend_15 { pt3dadd( -169.689, -208.137, 166.042, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 38/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 161.519, 172.535, 27.0888, 0.96 ) }
    dend_31 { pt3dadd( 162.43, 173.294, 27.1797, 0.96 ) }
    dend_31 { pt3dadd( 163.065, 173.865, 27.2183, 1.25 ) }
    dend_31 { pt3dadd( 163.645, 174.434, 27.227, 0.66 ) }
    dend_31 { pt3dadd( 164.002, 174.806, 27.2202, 0.22 ) }
    dend_31 { pt3dadd( 164.433, 175.263, 27.2064, 0.15 ) }
    dend_31 { pt3dadd( 164.71, 175.551, 27.201, 0.37 ) }
    dend_31 { pt3dadd( 165.275, 176.163, 27.1749, 0.15 ) }
    dend_31 { pt3dadd( 165.681, 176.586, 27.1662, 0.37 ) }
    dend_31 { pt3dadd( 165.989, 176.882, 27.1733, 0.88 ) }
    dend_31 { pt3dadd( 166.368, 177.192, 27.1861, 0.88 ) }
    dend_31 { pt3dadd( 167.274, 177.772, 27.1951, 0.22 ) }
    dend_31 { pt3dadd( 167.9, 178.136, 27.2085, 0.22 ) }
    dend_31 { pt3dadd( 168.537, 178.448, 27.2379, 0.22 ) }
    dend_31 { pt3dadd( 168.979, 178.633, 27.2625, 0.22 ) }
    dend_31 { pt3dadd( 169.933, 178.978, 27.3056, 1.25 ) }
    dend_31 { pt3dadd( 170.952, 179.276, 27.3148, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 161.519, 172.535, 27.0888, 0.29 ) }
    dend_28 { pt3dadd( 161.645, 173.862, 27.3691, 0.29 ) }
    dend_28 { pt3dadd( 161.826, 174.506, 27.4759, 0.22 ) }
    dend_28 { pt3dadd( 162.027, 175.034, 27.5415, 0.66 ) }
    dend_28 { pt3dadd( 162.36, 175.811, 27.6114, 0.22 ) }
    dend_28 { pt3dadd( 162.711, 176.565, 27.6632, 0.15 ) }
    dend_28 { pt3dadd( 163.035, 177.269, 27.6991, 0.15 ) }
    dend_28 { pt3dadd( 163.48, 178.154, 27.697, 0.15 ) }
    dend_28 { pt3dadd( 163.973, 179.083, 27.6513, 0.22 ) }
    dend_28 { pt3dadd( 164.441, 179.921, 27.5771, 0.29 ) }
    dend_28 { pt3dadd( 164.849, 180.614, 27.4956, 0.22 ) }
    dend_28 { pt3dadd( 165.308, 181.309, 27.3955, 0.29 ) }
    dend_28 { pt3dadd( 166.041, 182.222, 27.2521, 0.22 ) }
    dend_28 { pt3dadd( 166.751, 182.996, 27.126, 0.66 ) }
    dend_28 { pt3dadd( 167.183, 183.435, 27.057, 1.11 ) }
    dend_28 { pt3dadd( 167.725, 183.971, 26.97, 1.18 ) }
    dend_28 { pt3dadd( 168.478, 184.72, 26.8361, 0.37 ) }
    dend_28 { pt3dadd( 169.3, 185.547, 26.6864, 0.37 ) }
    dend_28 { pt3dadd( 169.946, 186.285, 26.5632, 0.22 ) }
    dend_28 { pt3dadd( 170.488, 187.108, 26.454, 0.22 ) }
    dend_28 { pt3dadd( 170.813, 187.735, 26.3675, 0.22 ) }
    dend_28 { pt3dadd( 171.035, 188.266, 26.2997, 0.59 ) }
    dend_28 { pt3dadd( 171.17, 188.658, 26.2644, 1.03 ) }
    dend_28 { pt3dadd( 171.437, 189.541, 26.2159, 1.18 ) }
    dend_28 { pt3dadd( 171.95, 191.216, 26.219, 0.44 ) }
    dend_28 { pt3dadd( 172.186, 191.933, 26.2421, 0.88 ) }
    dend_28 { pt3dadd( 172.451, 192.744, 26.2994, 1.7 ) }
    dend_28 { pt3dadd( 172.757, 193.685, 26.3972, 2.29 ) }
    dend_28 { pt3dadd( 173.035, 194.531, 26.5052, 2.29 ) }
    dend_28 { pt3dadd( 173.245, 195.155, 26.6153, 1.99 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 173.245, 195.155, 26.6153, 0.22 ) }
    dend_30 { pt3dadd( 174.837, 197.53, 26.5145, 0.22 ) }
    dend_30 { pt3dadd( 175.585, 198.645, 26.4671, 0.22 ) }
    dend_30 { pt3dadd( 176.375, 199.824, 26.417, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 173.245, 195.155, 26.6153, 0.29 ) }
    dend_29 { pt3dadd( 174.352, 195.883, 26.8137, 0.29 ) }
    dend_29 { pt3dadd( 175.088, 196.367, 26.9455, 0.29 ) }
    dend_29 { pt3dadd( 175.829, 196.854, 27.0782, 0.29 ) }
    dend_29 { pt3dadd( 176.455, 197.266, 27.1905, 0.52 ) }
    dend_29 { pt3dadd( 177.094, 197.686, 27.3049, 0.52 ) }
    dend_29 { pt3dadd( 178.151, 198.381, 27.4942, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_58 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_58, dend_35, dend_0, axon_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, axon_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_5 = new SectionList()
    dend_58 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_14 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_47 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_60 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_68 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_67 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_57 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_54 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_49 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_25 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_33 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_27 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_58 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_66 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_46 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_45 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_16 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_31 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_56 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_55 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_28 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_29 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_51 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_62 nseg = 3
    dend_59 nseg = 9
    dend_47 nseg = 3
    dend_1 nseg = 3
    dend_63 nseg = 7
    dend_61 nseg = 5
    dend_60 nseg = 7
    dend_53 nseg = 5
    dend_48 nseg = 7
    dend_42 nseg = 5
    dend_68 nseg = 13
    dend_67 nseg = 11
    dend_65 nseg = 11
    dend_64 nseg = 11
    dend_57 nseg = 13
    dend_54 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 5
    dend_43 nseg = 3
    dend_39 nseg = 7
    dend_38 nseg = 15
    dend_21 nseg = 13
    dend_12 nseg = 15
    dend_9 nseg = 3
    dend_8 nseg = 11
    dend_6 nseg = 13
    dend_3 nseg = 7
    dend_32 nseg = 3
    dend_25 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_17 nseg = 5
    dend_14 nseg = 7
    dend_34 nseg = 9
    dend_33 nseg = 9
    dend_27 nseg = 7
    dend_26 nseg = 7
    dend_19 nseg = 3
    dend_15 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_BTC_bc69dce0ae_0_0


