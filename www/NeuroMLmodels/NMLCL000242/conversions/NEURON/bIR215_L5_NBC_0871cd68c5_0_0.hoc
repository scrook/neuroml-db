// Cell: bIR215_L5_NBC_0871cd68c5_0_0
/*
{
  "id" : "bIR215_L5_NBC_0871cd68c5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.76533, -3.11148, 0.0, 3.33266", "-7.9581, -2.82432, 0.0, 5.72456", "-7.15087, -2.53716, 0.0, 7.79007", "-6.34364, -2.25, 0.0, 8.98288", "-5.53641, -1.96284, 0.0, 9.97099", "-4.72918, -1.67568, 0.0, 10.9098", "-3.92195, -1.38852, 0.0, 11.708", "-3.11472, -1.10136, 0.0, 12.2471", "-2.30749, -0.8142, 0.0, 12.5813", "-1.50026, -0.52704, 0.0, 12.8499", "-0.693026, -0.23988, 0.0, 13.1177", "0.114204, 0.0472794, 0.0, 13.2864", "0.921435, 0.334439, 0.0, 13.0353", "1.72867, 0.621599, 0.0, 12.7416", "2.5359, 0.908759, 0.0, 12.4079", "3.34313, 1.19592, 0.0, 11.9163", "4.15036, 1.48308, 0.0, 11.2063", "4.95759, 1.77024, 0.0, 9.60841", "5.76482, 2.0574, 0.0, 7.72848", "6.57205, 2.34456, 0.0, 4.99653", "7.37928, 2.63172, 0.0, 2.95975" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "4.77184, 3.56989, 4.52, 2.05", "6.41042, 4.58339, 4.52, 1.59", "7.39321, 5.19127, 4.52, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-5.33816, -1.85236, -6.49, 1.14", "-7.00602, -2.03306, -7.78429, 0.45", "-8.21174, -2.00542, -8.64412, 0.45", "-9.93784, -1.77553, -9.74606, 0.68", "-11.2981, -1.51342, -10.5339, 0.68", "-13.3384, -1.19549, -11.5822, 0.68", "-14.5063, -1.13064, -12.1413, 0.68", "-17.3425, -1.10235, -13.4829, 0.68", "-19.6192, -1.10701, -14.4704, 0.68", "-21.4948, -1.07995, -15.2061, 0.68", "-23.7365, -0.857863, -15.9719, 1.14", "-26.5126, -0.413872, -16.7423, 0.23", "-37.7232, 1.58778, -23.3714, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.18816, -3.57436, -7.25, 1.36", "-0.974458, -7.01118, -7.20665, 1.36", "-1.56277, -9.58264, -7.17421, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.84184, -3.45136, -2.34, 2.95", "6.06231, -5.36403, -2.40308, 1.59", "7.80093, -8.08874, -2.49293, 1.59", "9.28194, -10.4098, -2.56948, 1.59", "10.9635, -13.0451, -2.65639, 1.36", "12.4947, -15.4446, -2.73552, 2.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.39816, -4.32261, -2.42, 1.82", "-9.50017, -4.19896, -3.20997, 0.68", "-11.6723, -4.06614, -3.93316, 0.45", "-14.2572, -3.86694, -4.73044, 0.45", "-16.205, -3.70752, -5.28259, 0.23", "-17.7692, -3.61964, -5.68935, 0.23", "-19.1764, -3.57661, -6.04095, 0.23", "-20.6695, -3.559, -6.37162, 0.23", "-22.7996, -3.55444, -6.77044, 0.45", "-25.3041, -3.54781, -7.17458, 0.45", "-27.1181, -3.5247, -7.4252, 0.23", "-28.1653, -3.4875, -7.57722, 0.23", "-28.899, -3.46749, -7.7198, 0.23", "-30.2531, -3.44427, -8.03127, 0.23", "-31.5558, -3.4186, -8.34056, 0.23", "-32.9283, -3.35015, -8.69765, 0.23", "-35.2228, -3.14153, -9.34342, 0.23", "-37.6216, -2.92362, -10.0419, 0.23", "-38.9806, -2.85559, -10.4719, 1.36", "-46.4447, -3.19451, -12.7917, 1.36", "-53.4956, -3.32721, -16.1789, 1.36", "-59.9043, -3.50128, -20.6626, 1.36", "-65.7444, -3.61737, -25.8669, 1.36", "-71.4837, -2.70441, -31.1082, 1.36", "-77.5799, -1.06777, -35.7441, 1.36", "-83.1288, 1.43433, -40.6893, 1.36", "-89.4265, 4.5811, -44.1704, 1.36", "-95.8949, 8.43367, -46.4587, 1.36", "-101.901, 13.3634, -47.8699, 1.36", "-107.209, 18.6905, -50.3233, 1.36", "-113.097, 23.5369, -52.3681, 1.36", "-119.605, 26.5341, -55.5768, 1.36", "-126.036, 30.3214, -58.0664, 1.36", "-132.743, 33.9389, -60.0086, 1.36", "-139.378, 37.2402, -62.6177, 1.36", "-146.458, 39.5979, -65.023, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.19184, -6.52636, 3.26, 1.59", "3.77436, -8.60357, 4.38825, 1.59", "5.46817, -10.8269, 5.59586, 1.59", "7.59788, -13.6224, 7.11424, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-8.17816, -2.90811, 1.81, 2.05", "-9.65392, -2.61845, 1.9682, 1.36", "-10.8408, -2.38549, 2.09544, 1.36", "-13.042, -1.95343, 2.33142, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.37928, 2.63172, 0.0, 1.01487", "21.5117, 7.65911, 0.0, 1.01487", "35.6441, 12.6865, 0.0, 1.01487" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "7.39321, 5.19127, 4.52, 2.27", "8.74842, 6.26736, 5.15146, 2.27" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "7.39321, 5.19127, 4.52, 0.68", "10.6337, 4.6051, 6.06029, 0.68", "13.4152, 4.24878, 7.27169, 0.45", "16.4042, 3.99915, 8.50933, 1.14", "18.9604, 3.80902, 9.47621, 0.45", "21.0411, 3.60885, 10.2828, 0.68", "23.2325, 3.40024, 11.1483, 1.14", "26.0848, 3.17048, 12.2558, 0.23", "27.3478, 3.06923, 12.7487, 0.91", "29.5746, 2.86319, 13.5388, 1.14", "32.8884, 2.53111, 14.7062, 0.23", "35.0643, 2.34076, 15.4884, 0.91", "38.0685, 2.09566, 16.7664, 1.14", "40.6572, 1.82239, 17.9584, 0.45", "43.6172, 1.57554, 19.327, 0.68", "45.826, 1.55099, 20.3417, 0.23", "46.687, 1.62142, 20.7618, 1.14", "49.4674, 2.14386, 22.3143, 0.23", "51.5308, 2.73919, 23.5947, 0.45", "54.4382, 3.95662, 25.6107, 1.59", "57.202, 5.36024, 27.5923, 0.45", "59.7445, 6.64069, 29.3674, 1.36", "62.8347, 8.13817, 31.4531, 0.23", "64.1425, 8.76552, 32.3036, 2.05", "66.3854, 9.95029, 33.9718, 0.23", "67.2826, 10.4498, 34.7002, 0.68", "68.67, 11.0385, 35.8854, 0.23", "69.9286, 11.4032, 36.8853, 0.23", "70.8254, 11.5951, 37.5754, 1.14", "73.0993, 12.1226, 39.4604, 0.23", "74.8014, 12.5728, 41.0318, 1.14", "77.0894, 13.3864, 43.4925, 0.23", "78.2734, 13.9576, 44.9187, 0.91", "80.0938, 15.0032, 47.2703, 0.23", "81.684, 16.081, 49.2728, 1.36", "83.3751, 17.3885, 51.3523, 0.23", "84.9723, 18.6868, 53.2639, 1.36", "87.0527, 20.4727, 55.5701, 0.23", "89.0067, 22.1106, 57.5869, 1.14", "90.4953, 23.3244, 58.9289, 0.23", "91.587, 24.1541, 59.7462, 0.91", "92.7163, 25.0424, 60.4796, 0.23", "93.8569, 26.0539, 61.1834, 1.14", "95.8512, 27.9454, 62.3682, 0.23", "97.3652, 29.4298, 63.3037, 1.14", "99.4636, 31.6373, 64.7226, 0.23", "100.77, 33.0725, 65.6289, 0.91", "102.518, 35.0587, 66.9226, 0.23", "103.442, 36.0471, 67.6031, 0.23", "105.198, 37.7489, 68.8829, 1.14", "107.452, 39.4986, 70.4713, 0.23", "107.976, 39.7919, 70.8563, 0.68", "109.533, 40.3887, 72.2379, 0.23", "110.956, 40.6333, 73.7773, 0.91", "112.217, 40.5133, 75.6765, 0.23", "113.586, 39.6241, 78.7433, 0.91", "114.454, 38.5633, 81.4076, 0.23", "115.097, 37.3392, 84.2774, 0.23", "115.272, 36.4352, 86.2647, 1.14", "115.178, 35.614, 88.1335, 0.45", "114.758, 34.5859, 90.5357, 0.45", "114.399, 34.1174, 92.07, 0.91", "114.214, 33.9262, 93.0041, 0.91", "113.884, 33.5691, 96.1005, 1.14", "113.785, 33.5602, 97.9229, 0.23", "113.721, 33.67, 99.0889, 1.14", "113.675, 34.6039, 104.039, 0.23", "113.767, 34.8585, 104.958, 0.23", "114.055, 35.32, 106.099, 0.91", "114.942, 36.5865, 108.269, 0.23", "115.457, 37.2991, 109.218, 0.23", "116.171, 38.3491, 110.337, 0.23", "117.228, 40.1017, 111.729, 0.91", "117.794, 41.0302, 112.402, 0.23", "118.319, 41.7796, 112.932, 0.68", "119.671, 43.3808, 114.008, 0.23", "121.386, 45.0818, 115.2, 0.23", "122.042, 45.688, 115.609, 0.23", "123.366, 46.8278, 116.296, 0.91", "125.715, 48.7484, 117.376, 0.23", "126.595, 49.4702, 117.733, 0.23", "129.114, 51.554, 118.745, 0.68", "130.203, 52.441, 119.16, 0.23", "131.402, 53.4535, 119.637, 0.68", "132.251, 54.2104, 119.984, 0.23", "133.89, 55.8553, 120.607, 0.91", "135.453, 57.6148, 121.264, 0.23" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-37.7232, 1.58778, -23.3714, 0.23", "-44.5421, 1.90579, -26.6081, 0.23", "-50.9423, 2.4817, -30.5816, 0.23", "-56.9108, 3.16214, -35.1641, 0.23", "-62.4212, 3.24699, -40.3308, 0.23", "-67.6326, 2.2126, -45.7068, 0.23", "-71.8718, 1.90015, -51.9526, 0.23", "-75.5402, 0.66279, -58.4475, 0.23", "-80.3454, 0.718234, -64.2763, 0.23", "-84.4707, 1.79711, -70.5148, 0.23", "-88.9496, 3.35037, -76.4041, 0.23", "-93.5022, 3.47706, -82.4311, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-37.7232, 1.58778, -23.3714, 0.23", "-47.4636, 3.37331, -29.3475, 0.23", "-56.6745, 4.87536, -36.1781, 0.23", "-64.1327, 6.78439, -44.8175, 0.23", "-72.0549, 9.139, -52.9221, 0.23", "-79.6835, 12.3215, -61.0414, 0.23", "-86.4492, 16.4554, -69.515, 0.23", "-93.9819, 19.0458, -77.9187, 0.23", "-100.276, 23.2225, -86.7311, 0.23", "-106.598, 27.5422, -95.458, 0.23", "-110.611, 32.7203, -105.075, 0.23", "-115.234, 38.058, -114.325, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.56277, -9.58264, -7.17421, 0.23", "-0.782318, -13.1827, -6.98671, 0.23", "-0.0957192, -15.9343, -7.09036, 0.91", "0.611474, -18.4234, -7.33445, 0.91", "1.49022, -21.3408, -7.7696, 0.23", "2.31617, -23.9459, -8.23607, 0.91", "3.38933, -27.3975, -8.89457, 0.23", "3.99462, -29.1597, -9.34716, 1.14", "5.03329, -32.583, -10.3222, 0.23", "5.43826, -34.1536, -10.7712, 1.14", "5.95316, -36.8874, -11.4315, 0.23", "6.16142, -38.4824, -11.7071, 0.23", "6.33421, -40.4129, -11.9398, 0.91", "6.54947, -44.0694, -12.2237, 0.23", "6.62794, -45.6129, -12.2845, 0.23", "6.71308, -48.3097, -12.3528, 0.91", "6.73157, -51.0084, -12.4193, 0.45", "6.77602, -54.0849, -12.4673, 0.45", "6.82953, -55.7861, -12.4677, 0.91", "7.02758, -59.6636, -12.4138, 0.23", "7.18268, -62.735, -12.4013, 0.23", "7.33922, -65.5617, -12.4411, 0.23", "7.58109, -68.4116, -12.5311, 0.91", "7.8993, -71.2643, -12.5976, 0.23", "8.16166, -73.1855, -12.6293, 1.14", "8.58957, -76.0958, -12.6021, 0.23", "8.88171, -77.7653, -12.591, 0.68", "9.63552, -81.6057, -12.6261, 0.23", "10.3604, -85.284, -12.7548, 0.23", "10.6978, -87.16, -12.8524, 0.23", "11.2149, -90.2989, -13.0258, 0.45", "11.6225, -93.2141, -13.183, 0.45", "11.8567, -95.3536, -13.335, 0.45", "12.0597, -97.7508, -13.563, 0.45", "12.2643, -100.045, -13.8321, 0.68", "12.3817, -101.675, -13.9977, 0.23", "12.4742, -103.581, -14.1486, 0.68", "12.4418, -105.976, -14.2207, 0.23", "12.3063, -108.774, -14.2539, 0.45", "12.237, -110.712, -14.2963, 0.45", "12.2108, -112.879, -14.3722, 0.45", "12.1888, -114.888, -14.4737, 0.45", "12.1458, -117.245, -14.6277, 0.23", "12.0743, -119.563, -14.8101, 1.82", "11.9427, -124.024, -15.2552, 0.45", "11.9425, -125.935, -15.4678, 0.45", "12.014, -127.477, -15.6585, 0.45", "12.2504, -130.906, -16.1303, 0.23", "13.2398, -144.182, -17.7532, 0.23", "12.7909, -157.463, -19.5596, 0.23", "11.1954, -170.286, -23.0649, 0.23", "7.42877, -182.927, -25.3057, 0.23", "4.57099, -195.456, -29.0131, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.56277, -9.58264, -7.17421, 0.91", "-2.92642, -9.38022, -8.6082, 0.91", "-4.49122, -9.5149, -10.306, 1.36", "-5.62, -9.86353, -11.6487, 0.91", "-7.10439, -10.9479, -13.8617, 1.14", "-8.38383, -12.6443, -16.1275, 1.14", "-9.40803, -14.4486, -18.1005, 1.14", "-9.69889, -15.5431, -18.91, 1.36", "-9.93836, -17.644, -20.0908, 0.23", "-9.90871, -19.8262, -21.1747, 0.23", "-9.75174, -21.8895, -22.0689, 0.45", "-9.47007, -23.6451, -22.8073, 0.91", "-9.01598, -26.2548, -23.9344, 0.23", "-8.83093, -27.6511, -24.6026, 0.23", "-8.81017, -29.5708, -25.5902, 0.23", "-10.1935, -38.2888, -33.9378, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "12.4947, -15.4446, -2.73552, 0.68", "13.0519, -17.0361, -2.70912, 0.68", "13.5672, -18.4274, -2.64924, 0.91", "14.2103, -19.994, -2.56592, 0.91", "15.1036, -21.9392, -2.44583, 1.36", "16.1019, -24.065, -2.34731, 0.45", "16.9909, -26.0661, -2.28451, 1.14", "17.9603, -28.423, -2.21969, 0.68", "19.0622, -31.2792, -2.19847, 0.68", "20.0801, -34.0725, -2.30744, 0.68", "20.8178, -36.2695, -2.50718, 1.14", "21.577, -38.6344, -2.8401, 0.68", "22.1246, -40.2452, -3.13726, 0.45", "22.7181, -41.8841, -3.47433, 0.45", "23.4973, -43.7457, -3.8421, 0.68", "24.5889, -45.8862, -4.20511, 0.68", "25.1032, -46.6458, -4.28188, 0.68", "26.2873, -48.1478, -4.32177, 0.68", "27.6796, -49.8954, -4.24231, 0.45", "29.5578, -52.3656, -3.97812, 0.45", "30.5848, -53.8771, -3.76199, 0.91", "32.0634, -56.3163, -3.39246, 0.45", "33.1625, -58.2687, -3.12282, 0.91", "34.2397, -60.4059, -2.87923, 0.91", "34.829, -61.7372, -2.77075, 0.68", "35.7013, -64.0009, -2.62994, 0.68", "36.4422, -66.2362, -2.52248, 0.91", "37.1839, -68.9923, -2.44665, 0.23", "37.6134, -70.698, -2.42775, 0.45", "38.1815, -72.9494, -2.42681, 0.45", "38.6349, -74.9144, -2.40601, 0.45", "38.7956, -75.8665, -2.38062, 0.45", "39.0344, -77.7967, -2.33356, 0.45", "39.283, -80.5509, -2.26499, 0.91", "39.4253, -82.2952, -2.20232, 0.23", "39.6026, -84.7607, -2.07941, 0.91", "39.7917, -88.4642, -1.8604, 0.91", "39.8191, -90.6236, -1.70134, 0.45", "39.7742, -91.5673, -1.62389, 0.45", "39.5942, -92.9909, -1.47153, 0.45", "39.2082, -95.0181, -1.19905, 0.45", "38.6561, -97.3297, -0.839098, 0.45", "38.0961, -99.251, -0.473912, 0.23", "37.64, -100.681, -0.176737, 0.91", "37.1345, -102.396, 0.168006, 0.23", "36.8324, -103.495, 0.368202, 0.68", "36.4393, -104.977, 0.618129, 0.68", "36.0609, -106.658, 0.881585, 0.68", "35.7776, -108.579, 1.14534, 0.23", "35.701, -109.864, 1.30612, 0.68", "35.7128, -111.356, 1.45256, 0.23", "35.826, -112.811, 1.57906, 0.68", "36.131, -115.206, 1.74078, 0.23", "36.2613, -116.106, 1.78728, 0.23", "36.4479, -117.572, 1.85934, 0.91", "36.6962, -119.983, 1.99037, 0.45", "36.9926, -122.908, 2.17114, 0.45", "37.1418, -124.477, 2.27911, 0.91", "37.208, -125.528, 2.36835, 0.23", "37.2435, -126.841, 2.49585, 0.91", "37.2622, -127.671, 2.58338, 0.45", "37.2972, -128.793, 2.71964, 0.91", "37.3895, -130.269, 2.91409, 0.23", "37.7081, -132.729, 3.25492, 0.68", "38.0213, -134.182, 3.42845, 0.23", "38.4345, -135.627, 3.50886, 0.68", "38.6739, -136.329, 3.50854, 0.68", "39.2677, -137.857, 3.45067, 0.23", "40.1157, -139.697, 3.27041, 1.14", "41.2525, -141.835, 2.9526, 0.23", "42.3327, -143.79, 2.60057, 0.23", "43.2655, -145.506, 2.26135, 0.23", "43.7519, -146.391, 2.07684, 0.91", "44.608, -147.933, 1.75258, 1.36", "45.5678, -149.656, 1.40755, 0.23", "46.4256, -151.185, 1.17479, 0.68", "47.0091, -152.248, 1.08697, 0.23", "47.6439, -153.443, 1.02482, 0.45", "48.5838, -155.375, 0.926637, 0.23", "49.071, -156.545, 0.88545, 0.23", "49.5511, -158.025, 0.84763, 0.68", "49.7534, -158.992, 0.82476, 0.23", "49.9529, -160.224, 0.7891, 0.91", "50.2125, -163.048, 0.693349, 0.23", "50.2521, -164.783, 0.617735, 0.23", "50.1856, -166.981, 0.502108, 0.23", "50.0015, -168.992, 0.377329, 0.23", "52.8204, -176.937, 0.662563, 0.23", "55.7572, -184.834, 1.03981, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "12.4947, -15.4446, -2.73552, 0.68", "13.1395, -15.9654, -2.58366, 0.68", "14.3125, -17.0085, -2.25997, 0.68", "15.6991, -18.4671, -1.84982, 0.68", "16.7535, -19.6926, -1.55274, 0.68", "17.7757, -20.9018, -1.32518, 0.91", "19.0042, -22.3383, -1.1027, 0.68", "20.1865, -23.7468, -0.903633, 1.14", "21.7285, -25.5345, -0.670154, 1.14", "23.434, -27.4011, -0.442892, 0.45", "24.6554, -28.6711, -0.271928, 0.68", "25.507, -29.5207, -0.150002, 1.14", "26.9119, -30.8952, 0.0463367, 0.23", "28.2333, -32.1123, 0.246756, 1.14", "29.4148, -33.0917, 0.434865, 0.45", "30.9768, -34.3764, 0.716459, 0.45", "32.2582, -35.4621, 0.974124, 0.45", "33.674, -36.715, 1.24791, 0.45", "34.9514, -37.8752, 1.45878, 1.36", "36.4117, -39.1886, 1.68981, 0.68", "37.506, -40.1604, 1.80013, 0.23", "38.1317, -40.7389, 1.82025, 1.14", "39.3252, -42.0314, 1.78402, 0.23", "39.9683, -42.8687, 1.72849, 1.14", "40.3858, -43.5619, 1.65309, 1.14", "41.1928, -45.2249, 1.41181, 0.23", "41.7341, -46.4463, 1.18974, 0.23", "42.2536, -47.7, 0.93336, 1.36", "42.4615, -48.2006, 0.823106, 1.36", "43.0001, -49.501, 0.573267, 0.23", "43.2535, -50.112, 0.477447, 0.68", "43.6754, -51.0044, 0.355291, 0.23", "44.1106, -51.9251, 0.219531, 1.36", "44.7878, -53.4426, -0.00687605, 0.45", "45.6355, -55.4311, -0.308791, 1.36", "46.5673, -57.6302, -0.662189, 0.23", "47.1704, -59.0113, -0.91418, 1.36", "47.6955, -60.1817, -1.13786, 0.23", "48.1566, -61.1384, -1.3431, 1.14", "48.8107, -62.4119, -1.66554, 0.23", "49.2845, -63.2485, -1.91658, 1.14", "50.0701, -64.5488, -2.35888, 0.23", "50.9056, -65.889, -2.81959, 0.68", "51.7088, -67.1399, -3.22612, 0.91", "52.6986, -68.7569, -3.68955, 0.23", "53.4132, -70.0013, -4.00114, 1.14", "54.2365, -71.4557, -4.3182, 0.23", "55.0333, -72.8635, -4.59406, 0.68", "56.0871, -74.7765, -4.93371, 0.68", "57.2001, -76.9446, -5.25025, 0.68", "57.8214, -78.2236, -5.40793, 0.68", "58.261, -79.159, -5.5138, 0.45", "59.121, -81.0708, -5.71835, 0.45", "59.9765, -83.072, -5.96497, 0.45", "60.7342, -84.8669, -6.23258, 0.45", "61.1247, -85.8586, -6.39765, 0.23", "61.3406, -86.4952, -6.49424, 0.23", "65.1965, -92.8133, -7.69925, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-146.458, 39.5979, -65.023, 0.68", "-152.292, 42.126, -72.1931, 0.68", "-159.004, 44.4248, -78.6172, 0.68", "-165.205, 47.5215, -85.244, 0.68" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-146.458, 39.5979, -65.023, 0.68", "-157.123, 39.8728, -64.4951, 0.68", "-167.634, 38.2411, -65.5445, 0.68" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "7.59788, -13.6224, 7.11424, 1.36", "6.06886, -15.0286, 8.82233, 1.36", "4.85759, -15.8625, 10.0896, 1.36", "3.8155, -16.5839, 11.1824, 1.36", "2.80749, -17.2817, 12.2395, 1.36", "1.39787, -18.2576, 13.7178, 1.82", "-0.507426, -19.5766, 15.7159, 1.36", "-1.76421, -20.0661, 16.6524, 1.59", "-2.66027, -20.2719, 17.2024, 1.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.59788, -13.6224, 7.11424, 1.36", "9.49543, -18.344, 7.32925, 1.36", "10.921, -21.8912, 7.49077, 1.59", "11.7547, -23.9657, 7.58524, 1.59", "13.0737, -27.2478, 7.73469, 2.05" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-13.042, -1.95343, 2.33142, 1.36", "-13.8771, 0.367571, 2.79652, 1.36", "-15.0341, 3.50616, 3.42691, 1.14", "-15.9168, 5.7473, 3.8522, 1.14", "-17.0262, 8.31007, 4.37325, 0.91", "-18.2206, 10.8273, 4.94369, 0.91", "-19.1443, 12.7739, 5.38481, 1.36", "-20.0246, 14.6315, 5.81443, 1.36", "-21.5538, 17.7138, 6.55023, 0.91", "-22.815, 19.8906, 7.10816, 0.91", "-23.9037, 21.453, 7.5404, 1.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-13.042, -1.95343, 2.33142, 1.14", "-14.3383, -4.48449, 2.18954, 1.14" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "35.6441, 12.6865, 0.0, 0.15", "49.7765, 17.7139, 0.0, 0.15", "63.909, 22.7413, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "8.74842, 6.26736, 5.15146, 0.68", "11.6182, 7.86592, 4.26198, 0.68", "13.3821, 8.84852, 3.71524, 1.14", "15.7612, 10.1737, 2.97783, 2.05" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "8.74842, 6.26736, 5.15146, 1.36", "9.86763, 7.9444, 5.67708, 1.36", "10.713, 9.21112, 6.07409, 1.36", "11.6479, 10.6119, 6.51313, 2.05", "12.5639, 11.9845, 6.94331, 0.91" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-10.1935, -38.2888, -33.9378, 0.23", "-12.6747, -45.1971, -43.1253, 0.23", "-14.333, -53.1757, -51.6503, 0.23", "-14.9989, -61.2008, -60.2714, 0.23", "-17.5788, -68.1787, -69.381, 0.23", "-20.3762, -73.0288, -79.6657, 0.23", "-21.9517, -79.216, -89.5202, 0.23", "-21.5238, -85.1366, -99.6469, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-10.1935, -38.2888, -33.9378, 0.23", "-13.0492, -46.0361, -36.6806, 0.23", "-16.0633, -54.1061, -38.021, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.66027, -20.2719, 17.2024, 1.14", "-2.2922, -20.9248, 17.8008, 1.14", "-1.37726, -23.1972, 19.6857, 0.68", "-0.943888, -24.6849, 20.8102, 0.68", "-0.370861, -26.6984, 22.4108, 0.68", "0.379297, -29.0332, 24.3608, 0.68", "1.0591, -30.9417, 26.0413, 0.45", "1.36149, -31.9059, 26.7869, 0.45", "1.68302, -32.9171, 27.4518, 0.45", "2.27758, -34.5895, 28.7671, 0.68", "2.62295, -35.2929, 29.602, 1.14", "3.41044, -36.2246, 31.3179, 0.23", "4.04318, -36.6671, 32.4827, 0.23", "5.01286, -37.0568, 34.5106, 0.91", "5.82877, -37.1384, 36.5978, 0.23", "6.31293, -37.1246, 38.2601, 0.68", "6.68132, -37.0677, 40.059, 0.23", "6.81196, -36.9737, 41.1192, 1.82", "7.0491, -36.6628, 43.7253, 0.23", "7.23709, -36.417, 45.8547, 1.82", "7.63961, -36.3487, 48.1713, 0.23", "8.0176, -36.4567, 49.4203, 0.23", "8.52666, -36.7471, 50.6652, 0.23", "9.11909, -37.0982, 51.8002, 0.23", "9.77553, -37.4662, 52.7815, 0.23", "10.9085, -38.1442, 54.3882, 0.68", "12.2147, -38.965, 56.2661, 2.05", "13.9995, -40.0763, 58.7835, 0.45", "15.3216, -40.9071, 60.661, 0.23", "16.3655, -41.5608, 62.2532, 0.23", "17.5019, -42.2594, 64.0534, 1.14", "18.204, -42.6993, 65.2083, 0.23", "19.3968, -43.2708, 67.0095, 0.91", "20.7745, -43.7381, 68.8261, 0.23", "21.4033, -43.9004, 69.6452, 1.14", "23.0902, -44.1849, 71.9099, 0.23", "24.694, -44.395, 73.9704, 0.23", "25.6958, -44.5237, 75.2763, 2.05", "27.3625, -44.7073, 77.708, 0.23", "28.6981, -44.8777, 79.8163, 1.59", "29.8502, -45.0592, 81.667, 0.23", "30.6238, -45.2051, 83.0185, 0.23", "31.4505, -45.403, 84.5346, 0.91", "32.4302, -45.7274, 86.3355, 0.23", "33.536, -46.1006, 88.3842, 0.23", "34.2428, -46.3542, 89.7728, 1.59", "35.8084, -46.9058, 93.2908, 0.23", "36.4917, -47.1852, 94.9801, 0.91", "37.1739, -47.5353, 96.679, 0.23", "37.7454, -47.8066, 98.032, 1.14", "38.9546, -48.2141, 100.765, 0.23", "39.8945, -48.4879, 102.803, 0.91", "40.8115, -48.7547, 104.68, 0.23", "41.5478, -49.0292, 106.216, 0.68", "42.9569, -49.628, 109.168, 0.23", "43.8951, -50.0387, 110.844, 1.14", "44.9426, -50.3749, 112.336, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-2.66027, -20.2719, 17.2024, 0.23", "-3.81839, -21.5922, 16.0313, 0.23", "-5.03881, -22.8995, 14.9037, 0.45", "-6.19071, -24.0701, 14.006, 0.23", "-7.02451, -24.8664, 13.443, 0.23", "-8.45531, -26.1509, 12.6476, 0.68", "-9.5323, -27.089, 12.1106, 0.23", "-10.8009, -28.101, 11.6102, 1.36", "-12.8899, -29.7393, 10.9314, 0.45", "-13.7316, -30.4087, 10.6705, 1.14", "-15.1585, -31.6148, 10.2161, 0.23", "-16.0817, -32.4093, 9.9105, 1.14", "-17.4139, -33.7368, 9.39174, 0.23", "-18.4171, -34.9308, 8.86012, 0.23", "-19.4931, -36.4213, 8.07894, 1.14", "-20.1687, -37.5473, 7.43436, 0.23", "-20.4939, -38.1769, 7.04775, 0.91", "-21.3571, -39.9527, 5.92802, 0.23", "-22.0855, -41.4437, 4.92734, 0.91", "-22.8974, -43.0482, 3.77968, 0.23", "-24.015, -45.2009, 2.14267, 0.91", "-24.4645, -46.0468, 1.45023, 0.23", "-25.1764, -47.3469, 0.310653, 0.91", "-26.0546, -48.8692, -1.13584, 0.23", "-26.5241, -49.6682, -1.92002, 0.45", "-27.1978, -50.74, -3.05171, 0.23", "-27.8029, -51.5706, -4.00267, 0.23", "-28.6708, -52.6461, -5.28802, 0.91", "-29.2919, -53.3418, -6.15802, 0.23", "-30.0589, -54.1312, -7.11817, 0.68", "-30.3406, -54.396, -7.40954, 0.23", "-31.2691, -55.1774, -8.16073, 0.68", "-32.8326, -56.5015, -9.20576, 0.23", "-33.4016, -57.0403, -9.54301, 0.91", "-34.347, -58.0815, -10.0662, 0.23", "-35.5016, -59.5629, -10.6691, 0.68", "-36.4965, -61.0148, -11.1756, 0.23", "-36.8919, -61.7014, -11.3635, 0.91", "-37.7591, -63.4043, -11.7264, 0.23", "-38.2368, -64.379, -11.9364, 0.91", "-38.9216, -65.8972, -12.2664, 0.23", "-39.3117, -66.8688, -12.4869, 0.91", "-40.0939, -68.8965, -12.9667, 0.23", "-40.4937, -69.8333, -13.1839, 0.23", "-41.0047, -70.9317, -13.4421, 0.91", "-41.7532, -72.4146, -13.8314, 0.23", "-42.2665, -73.3848, -14.1252, 0.68", "-43.3787, -75.5441, -14.8917, 0.23", "-43.7737, -76.3077, -15.2265, 0.68", "-44.1574, -77.1056, -15.6325, 0.23", "-44.7362, -78.2617, -16.3094, 0.91", "-45.0607, -78.8597, -16.7487, 0.91", "-45.681, -79.9971, -17.7004, 0.23", "-46.1819, -80.906, -18.5519, 0.45", "-46.941, -82.2091, -19.8429, 0.23", "-47.5328, -83.1303, -20.8001, 0.91", "-48.1788, -84.0299, -21.7643, 0.23", "-48.962, -84.9188, -22.7272, 0.45", "-49.6788, -85.5829, -23.4717, 0.23", "-50.0902, -85.9392, -23.852, 0.68", "-50.9284, -86.6215, -24.5302, 0.23", "-51.7766, -87.2891, -25.1357, 0.91", "-53.3181, -88.4076, -26.0974, 0.23", "-53.815, -88.7503, -26.3755, 0.23", "-55.0675, -89.6189, -27.0404, 0.23", "-56.3096, -90.4928, -27.6689, 0.91", "-57.0889, -91.0453, -28.0593, 0.23", "-57.8808, -91.6053, -28.4694, 0.91", "-59.7311, -92.8512, -29.4676, 0.23", "-61.1354, -93.7673, -30.2479, 0.91", "-62.7626, -94.7986, -31.13, 0.23", "-64.4883, -95.9151, -32.0724, 0.23", "-65.7398, -96.7521, -32.7779, 0.23", "-66.8284, -97.4797, -33.4021, 0.23", "-67.828, -98.1144, -34.0059, 0.45", "-69.1261, -98.8775, -34.7604, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "13.0737, -27.2478, 7.73469, 0.68", "14.1951, -27.5425, 6.62822, 0.68", "16.5192, -28.208, 4.69681, 0.68", "18.1152, -28.7073, 3.49916, 0.45", "19.0454, -29.0761, 2.9123, 0.68", "21.059, -30.0426, 1.8034, 0.45", "22.6514, -30.8823, 0.996654, 0.91", "24.5018, -31.9479, 0.263555, 0.68", "25.6511, -32.6816, -0.0828739, 1.14", "28.1601, -34.4609, -0.698455, 0.23", "29.4131, -35.4535, -0.965938, 0.45", "30.248, -36.1653, -1.14345, 0.23", "31.1372, -36.9716, -1.37483, 0.91", "32.5911, -38.3706, -1.85378, 0.23", "33.8228, -39.549, -2.30745, 1.14", "35.947, -41.5402, -3.15882, 0.45", "37.5742, -43.0809, -3.8019, 1.14", "40.4366, -45.8349, -4.88721, 0.23", "42.3168, -47.6348, -5.58077, 0.91", "44.254, -49.4178, -6.28022, 0.23", "46.3601, -51.2574, -7.03651, 0.91", "47.9871, -52.5922, -7.61569, 0.23", "49.4114, -53.7045, -8.11524, 0.91", "51.2651, -55.0013, -8.8042, 0.23", "53.1521, -56.1719, -9.58719, 1.14", "54.0892, -56.6899, -10.0466, 0.23", "55.2144, -57.2361, -10.6895, 0.91", "56.5564, -57.8339, -11.5451, 0.91", "58.4749, -58.7239, -12.8608, 0.23", "60.2212, -59.605, -14.1005, 0.68", "61.7472, -60.4535, -15.1346, 0.23", "62.5666, -60.9597, -15.6568, 0.68", "64.0976, -61.977, -16.5785, 0.23", "66.3769, -63.6381, -17.8598, 0.23", "68.1447, -65.0505, -18.7624, 1.82", "70.5958, -67.1564, -19.909, 0.23", "71.5355, -68.011, -20.3201, 0.91", "72.6677, -69.1168, -20.8219, 0.23", "73.9655, -70.4496, -21.4126, 1.14", "76.183, -72.7747, -22.4366, 0.23", "77.5967, -74.2853, -23.0755, 0.45", "80.2868, -77.1615, -24.3065, 0.23", "81.9122, -78.906, -25.0263, 0.68", "83.978, -81.0437, -25.9391, 0.23", "85.4177, -82.44, -26.5802, 0.23", "86.1529, -83.1018, -26.9133, 0.45", "87.3932, -84.0493, -27.5046, 0.23", "88.9947, -85.0541, -28.3148, 0.68", "91.3327, -86.325, -29.5653, 0.23", "92.5881, -86.9594, -30.2608, 0.23", "94.0135, -87.6827, -31.079, 0.68", "96.4154, -88.8957, -32.5109, 0.23", "98.3772, -89.934, -33.6727, 0.68", "100.346, -90.99, -34.807, 0.23", "101.499, -91.6734, -35.4233, 1.36", "104.23, -93.327, -36.7889, 0.23", "105.243, -93.9542, -37.2461, 0.23", "107.131, -95.2071, -37.9901, 0.23", "108.043, -95.8288, -38.3132, 0.68", "109.631, -96.9336, -38.928, 0.23", "110.57, -97.6417, -39.325, 0.91", "111.258, -98.1971, -39.6217, 0.23", "112.996, -99.7228, -40.408, 0.91", "114.238, -100.884, -41.066, 0.23", "116.064, -102.727, -42.1575, 0.23", "117.559, -104.291, -43.1195, 0.23", "117.966, -104.719, -43.3851, 1.14", "119.475, -106.292, -44.337, 0.23", "121.207, -108.006, -45.4021, 0.68", "122.688, -109.377, -46.2889, 0.23", "124.299, -110.772, -47.1873, 0.68", "127.527, -113.284, -49.0448, 0.23", "128.549, -114.015, -49.6546, 0.23", "129.346, -114.532, -50.1542, 0.23", "130.387, -115.146, -50.8343, 0.68", "133.113, -116.609, -52.809, 0.23", "134.745, -117.419, -54.1108, 0.68", "136.924, -118.4, -56.0015, 0.23", "137.613, -118.7, -56.624, 0.68", "139.174, -119.338, -58.0492, 0.23", "141.245, -120.077, -59.8742, 0.23", "142.675, -120.503, -61.1203, 0.23", "143.169, -120.641, -61.536, 0.91", "144.648, -121.011, -62.7262, 0.23", "147.063, -121.56, -64.6014, 0.91", "150.435, -122.234, -67.1571, 0.23", "151.392, -122.408, -67.8643, 0.23", "152.607, -122.629, -68.7743, 0.91", "155.004, -123.081, -70.6093, 0.23", "156.327, -123.315, -71.6543, 0.91", "158.651, -123.718, -73.6087, 0.23", "159.252, -123.807, -74.1511, 0.23", "160.634, -124.036, -75.3977, 0.45", "162.873, -124.475, -77.4236, 0.23", "164.186, -124.728, -78.6237, 0.23", "165.571, -124.958, -79.8969, 0.91", "167.228, -125.181, -81.4779, 0.23", "168.625, -125.347, -82.8535, 0.23", "170.024, -125.516, -84.2448, 0.68", "171.7, -125.771, -85.9801, 0.23", "172.712, -126.019, -87.0877, 0.68", "174.338, -126.528, -88.9261, 0.23", "175.239, -126.898, -90.0311, 0.45", "176.561, -127.523, -91.7286, 0.23", "177.781, -128.174, -93.2968, 0.68", "179.215, -129.023, -95.0716, 0.23", "180.37, -129.761, -96.48, 0.23", "182.459, -131.122, -98.9452, 0.23", "183.293, -131.65, -99.9182, 0.23", "184.631, -132.449, -101.473, 0.45", "185.879, -133.09, -102.803, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "13.0737, -27.2478, 7.73469, 1.82", "12.695, -29.1747, 8.34745, 1.82", "12.1974, -31.7059, 9.15239, 1.82" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-23.9037, 21.453, 7.5404, 0.45", "-24.9716, 24.174, 7.82214, 0.45", "-25.4487, 25.2815, 7.92636, 0.91", "-26.274, 27.1025, 8.1588, 0.23", "-26.9827, 28.851, 8.44268, 0.23", "-27.4933, 30.3029, 8.70935, 0.45", "-28.0305, 32.0757, 9.0778, 1.14", "-28.5791, 34.0682, 9.58255, 0.23", "-29.2613, 37.0803, 10.4567, 0.68", "-29.8317, 40.5171, 11.5554, 0.23", "-30.0942, 42.4919, 12.2603, 0.91", "-30.2614, 44.3991, 12.9816, 0.68", "-30.4767, 47.3239, 14.119, 0.23", "-30.5609, 48.6123, 14.617, 0.23", "-30.6804, 50.4618, 15.3068, 0.23", "-30.9451, 53.5143, 16.3946, 1.36", "-31.1068, 54.9507, 16.8799, 0.23", "-31.3653, 56.9726, 17.5296, 1.14", "-31.6488, 59.0405, 18.1546, 0.23", "-31.988, 60.8574, 18.6979, 0.23", "-32.234, 61.8986, 19.0062, 1.14", "-33.0932, 65.0931, 19.9036, 0.23", "-33.5651, 66.5364, 20.3024, 0.68", "-34.2136, 68.245, 20.787, 0.23", "-34.9472, 69.8481, 21.2285, 1.14", "-35.9404, 71.7226, 21.7214, 0.23", "-36.7442, 73.1398, 22.0962, 0.91", "-37.2154, 73.9211, 22.248, 0.23", "-37.8529, 75.0227, 22.3857, 0.91", "-38.7267, 76.6855, 22.5081, 0.23", "-39.1959, 77.699, 22.537, 0.23", "-39.6741, 78.881, 22.5225, 0.23", "-40.4666, 81.364, 22.4609, 0.91", "-40.8178, 82.8827, 22.4178, 0.23", "-41.0731, 84.3173, 22.3805, 0.91", "-41.2919, 85.8988, 22.3614, 0.23", "-41.3948, 86.9658, 22.3558, 0.91", "-41.6794, 90.9308, 22.4063, 0.23", "-41.7657, 92.4942, 22.4875, 1.14", "-41.9411, 95.0561, 22.6933, 0.23", "-42.0484, 96.4839, 22.8296, 0.91", "-42.174, 98.1021, 23.0387, 0.23", "-42.3817, 100.292, 23.3936, 0.23", "-42.5456, 101.805, 23.7048, 0.91", "-42.81, 104.193, 24.2497, 0.23", "-42.9474, 105.596, 24.5911, 0.91", "-43.2043, 108.188, 25.2695, 0.23", "-43.3798, 109.908, 25.7335, 0.91", "-43.5683, 112.057, 26.2941, 0.23", "-43.6522, 113.123, 26.5641, 0.91", "-43.8586, 115.97, 27.2392, 0.23", "-44.006, 118.544, 27.8408, 0.91", "-44.1421, 120.659, 28.3158, 0.23", "-44.2364, 122.07, 28.6386, 0.91", "-44.4884, 125.661, 29.4578, 0.23", "-44.5559, 126.756, 29.7172, 1.14", "-44.5845, 128.54, 30.1611, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-23.9037, 21.453, 7.5404, 0.68", "-24.8421, 21.1222, 8.1347, 0.68", "-26.725, 20.6483, 9.31748, 0.91", "-28.2296, 20.5416, 10.3977, 0.91", "-29.7818, 20.7052, 11.6428, 0.91", "-31.7272, 20.9104, 13.2034, 0.23", "-33.1044, 21.0556, 14.3082, 1.14", "-34.6365, 21.2937, 15.5216, 0.68", "-37.0441, 21.849, 17.3646, 1.59", "-39.2671, 22.8148, 19.1575, 0.68" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-14.3383, -4.48449, 2.18954, 0.68", "-16.1219, -5.57233, 3.57672, 0.68", "-16.9259, -6.02405, 4.23978, 0.68", "-18.4313, -6.80462, 5.59528, 0.23", "-20.2205, -7.7878, 7.35569, 0.91", "-21.6999, -8.71712, 8.99461, 0.23", "-22.6013, -9.38752, 10.1998, 0.91", "-23.2763, -10.2861, 11.7564, 0.23", "-23.4197, -10.881, 12.8234, 0.23", "-23.2497, -11.4995, 14.0254, 0.23", "-22.89, -12.2142, 15.3741, 0.68", "-22.3784, -13.231, 17.1742, 0.68", "-21.7817, -14.7234, 19.6719, 1.14", "-21.5062, -15.9615, 21.4593, 0.23", "-21.4827, -16.9917, 22.7761, 0.68", "-21.6883, -18.1708, 24.1266, 0.23", "-22.0647, -19.3072, 25.2169, 0.45", "-22.4698, -20.2831, 26.0001, 1.14", "-22.9634, -21.3351, 26.7029, 0.23", "-23.6293, -22.5956, 27.4854, 0.91", "-24.6753, -24.4602, 28.5628, 0.23", "-25.5128, -26.1511, 29.4342, 1.14", "-25.794, -26.7634, 29.7334, 0.23", "-26.3008, -27.8503, 30.2691, 0.68", "-26.7697, -28.8124, 30.7958, 0.23", "-27.281, -29.8368, 31.4139, 1.14", "-28.0897, -31.3989, 32.4905, 0.23", "-28.8975, -32.7473, 33.5728, 0.91", "-29.1792, -33.2085, 34.0156, 0.91", "-29.8262, -34.3235, 35.3716, 0.23", "-30.4087, -35.1117, 36.7893, 0.23", "-31.0087, -35.6496, 38.5125, 0.23", "-31.4414, -35.7623, 40.1825, 1.14", "-31.6649, -35.5344, 42.3478, 0.23", "-31.4553, -35.0366, 44.4123, 0.23", "-30.6255, -34.0799, 47.0604, 0.23", "-29.694, -33.4132, 48.7561, 0.68", "-28.5694, -32.8245, 50.1656, 0.23", "-26.9018, -32.1524, 51.7345, 0.91", "-24.5719, -31.328, 53.3869, 0.23", "-23.1132, -30.913, 54.1828, 0.23", "-20.3697, -30.3029, 55.4636, 0.23", "-18.8248, -30.0295, 56.1487, 0.23", "-17.1176, -29.7489, 56.8307, 0.68", "-15.3119, -29.4073, 57.4238, 0.23", "-13.7093, -29.0917, 57.8599, 0.68", "-11.3758, -28.5224, 58.3792, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-14.3383, -4.48449, 2.18954, 0.68", "-15.9615, -4.48502, 1.29923, 0.68", "-18.4421, -4.28674, 0.176124, 0.68", "-20.3186, -4.10446, -0.511001, 0.68", "-23.0055, -3.804, -1.40728, 1.14", "-25.6733, -3.45168, -2.19227, 0.23", "-27.956, -3.14983, -2.76424, 0.68", "-30.4758, -2.75217, -3.15978, 0.45", "-33.4305, -2.32707, -3.36185, 0.68", "-35.3248, -2.16553, -3.37133, 0.68", "-37.0661, -2.12902, -3.27927, 0.68", "-39.0406, -2.22155, -3.08441, 0.68", "-40.2298, -2.35516, -2.94317, 0.68", "-42.3787, -2.67744, -2.69295, 0.68", "-45.1078, -3.12823, -2.37316, 0.68", "-47.6067, -3.54992, -2.09696, 0.68", "-50.3927, -3.97335, -1.84327, 0.91", "-52.9779, -4.28184, -1.65183, 0.45", "-55.2777, -4.52835, -1.50896, 0.45", "-57.8722, -4.7879, -1.39077, 0.45", "-59.4959, -4.962, -1.36724, 0.45", "-61.241, -5.14087, -1.42888, 0.45", "-63.0562, -5.36559, -1.64739, 0.23", "-65.1754, -5.64755, -2.07772, 0.23", "-66.6953, -5.88853, -2.49058, 0.23", "-68.6752, -6.20953, -3.10914, 0.45", "-70.9308, -6.55371, -3.81635, 0.23", "-73.5115, -6.91363, -4.61049, 0.23", "-75.7707, -7.20193, -5.23789, 0.45", "-77.3781, -7.36446, -5.59295, 0.45", "-79.6646, -7.64049, -5.99766, 0.45", "-81.7694, -7.92361, -6.30712, 0.23", "-82.6802, -8.05656, -6.41323, 0.23", "-84.7023, -8.31208, -6.57864, 2.05", "-89.307, -8.90382, -6.95132, 0.23", "-91.6592, -9.24002, -7.16289, 0.23", "-101.675, -7.78159, -7.96743, 0.23", "-111.814, -8.17654, -7.81998, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "15.7612, 10.1737, 2.97783, 0.68", "18.0564, 11.8928, 1.90174, 0.68", "19.3048, 13.0444, 1.21702, 0.91", "21.2843, 15.0747, 0.101871, 0.68", "22.9655, 16.8192, -0.791863, 0.68", "24.7326, 18.5732, -1.68856, 0.68", "26.1698, 19.8899, -2.4183, 0.68", "27.6332, 21.2317, -3.18205, 0.68", "28.8435, 22.188, -3.76466, 0.68", "30.5708, 23.351, -4.52146, 0.68", "32.4675, 24.4394, -5.23485, 1.14", "34.6959, 25.5348, -5.96679, 0.68", "36.3323, 26.2384, -6.4838, 0.68", "38.0055, 26.9458, -7.01779, 0.68", "39.4894, 27.5866, -7.47887, 1.14", "41.676, 28.5828, -8.11188, 0.45", "44.2275, 29.8348, -8.77138, 0.68", "46.1656, 30.8874, -9.24185, 0.68", "48.4407, 32.2553, -9.83286, 0.68", "50.6368, 33.7264, -10.4478, 0.68", "52.3286, 35.0307, -10.9993, 0.45", "53.0307, 35.7492, -11.2782, 0.45", "53.6222, 36.6278, -11.5641, 0.45", "54.3579, 38.1449, -12.0726, 0.45", "55.1286, 39.7363, -12.7186, 0.45", "56.2968, 41.5593, -13.6148, 0.45", "57.7484, 43.1794, -14.4963, 0.45", "58.5797, 43.9979, -14.9325, 1.14", "60.4159, 45.6884, -15.7843, 0.45", "62.3599, 47.3187, -16.5833, 0.45", "64.6576, 49.1181, -17.4372, 0.45", "66.5666, 50.5793, -18.098, 0.45", "68.9617, 52.4364, -18.9124, 0.68", "70.0511, 53.3211, -19.2585, 0.68", "71.6663, 54.7566, -19.7138, 0.45", "73.4251, 56.523, -20.1968, 0.45", "74.0107, 57.1371, -20.3505, 1.14", "74.8092, 57.8991, -20.5491, 0.23", "76.9123, 59.5002, -20.9861, 0.23", "77.7251, 60.0871, -21.1392, 0.23", "86.1072, 67.8233, -23.2414, 0.23", "92.9071, 76.8926, -25.9086, 0.23", "99.2754, 86.4949, -27.7351, 0.23", "106.874, 95.3051, -27.5153, 0.23", "114.623, 103.725, -25.4765, 0.23", "120.441, 113.106, -21.7137, 0.23", "127.114, 122.167, -18.7051, 0.23", "132.596, 132.278, -16.6131, 0.23", "137.749, 142.681, -15.1443, 0.23", "143.156, 152.453, -11.7327, 0.23", "147.001, 162.435, -7.01643, 0.23", "152.147, 172.27, -3.37698, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "15.7612, 10.1737, 2.97783, 0.68", "17.6475, 12.3948, 3.34502, 0.68", "19.0958, 13.9608, 3.52927, 0.68", "21.7906, 16.7763, 3.78904, 0.68", "23.1218, 18.1625, 3.87387, 0.68", "24.9086, 20.0813, 3.9645, 0.68", "26.4717, 21.8636, 4.01866, 0.68", "28.2415, 23.9441, 4.01716, 0.68", "29.0892, 25.0071, 3.99413, 1.14", "30.1461, 26.52, 3.95431, 0.91", "30.9926, 27.9186, 3.93668, 0.91", "32.3693, 30.5453, 3.94667, 0.68", "33.3861, 32.8541, 3.9985, 0.91", "34.2858, 35.2476, 4.129, 0.91", "35.3677, 38.5296, 4.36465, 0.91", "35.9868, 40.6562, 4.56286, 0.91", "36.3416, 41.9571, 4.6975, 0.91", "36.8184, 43.6226, 4.90398, 0.91", "37.3483, 45.4301, 5.14751, 0.68", "38.1109, 47.8388, 5.49095, 0.68", "38.8552, 50.1054, 5.81958, 1.14", "39.7564, 52.7206, 6.18054, 0.91", "40.6823, 55.5069, 6.55107, 0.91", "41.0986, 56.7679, 6.70168, 0.91", "41.768, 58.6731, 6.89404, 0.91", "42.9549, 61.9234, 7.17256, 0.91", "43.7745, 64.3029, 7.36958, 0.91", "44.4297, 66.3964, 7.57613, 1.36", "45.1486, 68.7251, 7.85858, 0.68", "45.9221, 70.9202, 8.17739, 0.91", "46.6402, 72.7579, 8.48426, 0.68", "47.5245, 74.7562, 8.82667, 0.68", "48.5448, 76.9429, 9.2037, 0.91", "50.0062, 79.9606, 9.74861, 0.91", "51.1609, 82.4635, 10.2267, 0.45", "52.0924, 84.6447, 10.6367, 0.68", "53.0763, 87.09, 11.0772, 0.91", "53.7186, 88.7044, 11.3622, 0.23", "54.7452, 91.3909, 11.8247, 0.45", "55.4829, 93.4438, 12.1256, 0.45", "56.4892, 96.2433, 12.4948, 0.45", "57.1105, 98.0111, 12.7133, 1.14", "58.4056, 101.822, 13.1643, 0.68", "59.4079, 104.687, 13.4477, 0.68", "60.5464, 107.692, 13.6731, 0.68", "61.7919, 110.625, 13.8594, 0.45", "62.8502, 112.92, 14.0054, 0.45", "63.7416, 114.846, 14.1408, 0.68", "64.6182, 116.819, 14.3014, 0.91", "65.3779, 118.591, 14.515, 0.45", "66.1676, 120.547, 14.8582, 0.68", "66.8306, 122.347, 15.1782, 0.45", "67.4243, 123.954, 15.45, 0.45", "67.7769, 124.937, 15.5919, 0.45", "68.2997, 126.49, 15.7449, 0.91", "69.4505, 129.758, 15.8983, 0.68", "70.9105, 133.31, 15.8827, 0.68", "71.9523, 135.404, 15.7648, 0.45", "72.9393, 137.06, 15.6074, 0.45", "74.1333, 138.908, 15.3826, 0.45", "75.3046, 140.609, 15.1211, 0.45", "76.6022, 142.392, 14.7903, 0.45", "77.4208, 143.47, 14.5906, 0.45", "77.9847, 144.24, 14.489, 0.45", "79.0937, 145.735, 14.4314, 0.45", "80.3031, 147.315, 14.4715, 0.45", "81.4996, 148.911, 14.5275, 0.68", "83.4883, 151.637, 14.6261, 0.23", "84.7691, 153.366, 14.7104, 0.45", "86.5877, 155.655, 14.8758, 0.45", "87.7738, 157.051, 15.0231, 0.91", "89.7565, 159.33, 15.3444, 0.23", "90.5425, 160.298, 15.5156, 0.45", "91.8801, 162.127, 15.8907, 0.68", "93.3873, 164.507, 16.4208, 0.45", "94.7118, 167.11, 17.0312, 0.45", "95.3722, 168.695, 17.4527, 0.45", "96.2064, 171.017, 18.1292, 0.45", "96.7498, 172.723, 18.6293, 0.45", "97.3298, 175.11, 19.3219, 0.45", "97.5871, 176.962, 19.8648, 0.45", "97.6263, 177.947, 20.1698, 0.45", "97.571, 179.798, 20.781, 0.45", "97.3697, 181.51, 21.3978, 0.45", "97.0648, 182.952, 21.9311, 0.45", "96.7489, 184.205, 22.4158, 0.45", "96.2056, 186.133, 23.177, 0.68", "95.6068, 188.139, 23.9539, 0.68", "94.7478, 191.02, 24.9727, 0.45", "94.0267, 193.61, 25.7612, 0.45", "93.5185, 195.877, 26.3601, 0.45", "93.2919, 197.391, 26.7303, 1.14", "93.0929, 199.584, 27.2168, 0.45", "92.9505, 202.548, 27.8108, 0.68", "92.913, 204.547, 28.1772, 0.91", "92.8943, 206.371, 28.5113, 0.45", "92.844, 208.557, 28.9059, 0.68", "92.8169, 209.8, 29.1514, 0.68", "92.759, 211.635, 29.5735, 0.45", "92.5994, 214.526, 30.347, 0.45", "92.3677, 216.375, 30.8705, 0.45", "92.0545, 217.881, 31.3083, 0.45", "91.692, 219.245, 31.6964, 0.68", "91.1247, 221.307, 32.3578, 0.45", "90.8103, 222.391, 32.7547, 0.91", "90.0778, 225.05, 33.8454, 0.23", "89.7337, 226.29, 34.3825, 0.45", "89.2099, 228.547, 35.3458, 0.23", "88.8979, 230.34, 36.0798, 0.23", "88.7223, 232.21, 36.8167, 1.14", "88.62, 234.959, 37.8636, 0.23", "88.6459, 236.73, 38.5027, 0.23", "88.7031, 239.37, 39.3924, 0.23", "88.7133, 241.028, 39.908, 0.91", "88.6484, 243.017, 40.4613, 0.23", "88.561, 244.437, 40.83, 0.23", "88.4382, 245.975, 41.2095, 0.23", "88.3478, 247.191, 41.5138, 0.91", "88.1877, 250.551, 42.3407, 0.23", "88.1734, 251.956, 42.7043, 0.68", "88.2096, 253.178, 43.0367, 0.23", "88.3262, 254.736, 43.4863, 0.23", "88.5212, 256.55, 44.0384, 0.68", "88.9072, 259.056, 44.8455, 0.91", "89.3545, 261.585, 45.6953, 0.23", "89.6114, 263.401, 46.3119, 0.91", "89.7923, 265.527, 47.0407, 0.23", "89.8514, 267.469, 47.6922, 0.91", "89.8759, 269.063, 48.2039, 0.23", "89.8984, 270.639, 48.6996, 0.68", "90.0658, 273.695, 49.5841, 0.45", "90.1217, 274.622, 49.848, 0.45", "90.2572, 276.94, 50.5128, 0.45", "90.3805, 279.126, 51.1277, 1.14", "90.6017, 282.254, 51.9831, 0.23", "90.879, 284.161, 52.5076, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "12.5639, 11.9845, 6.94331, 0.91", "13.9156, 13.6867, 7.18407, 0.91", "14.815, 14.8495, 7.3614, 1.14", "16.2392, 16.7633, 7.67118, 0.45", "16.9342, 17.7451, 7.84347, 1.14", "17.9117, 19.1507, 8.15233, 0.68", "18.6959, 20.3177, 8.45372, 1.36", "19.3428, 21.3904, 8.77326, 0.91", "19.7924, 22.1845, 9.03574, 1.36", "20.7133, 23.8729, 9.63066, 0.68", "21.2765, 25.0244, 10.0184, 1.14", "21.7163, 26.0755, 10.3374, 0.23", "21.9108, 26.6238, 10.4851, 0.68", "22.1691, 27.3993, 10.6512, 0.23", "22.5489, 28.7451, 10.8376, 0.23", "22.6982, 29.383, 10.8774, 1.14", "22.9948, 30.8268, 10.9021, 0.23", "23.443, 32.7912, 10.9125, 1.36", "23.8108, 34.1834, 10.9262, 1.36", "24.2401, 35.5735, 10.9521, 0.23", "24.5068, 36.3463, 10.9671, 1.14", "24.8744, 37.2417, 10.9769, 1.14", "25.6575, 38.8464, 10.9762, 0.23", "26.2839, 39.9895, 10.984, 1.36", "26.7233, 40.8005, 10.9931, 1.36", "27.1671, 41.674, 10.9862, 0.23", "27.5998, 42.6488, 10.9877, 1.36", "27.7786, 43.1414, 10.9826, 1.36", "28.1562, 44.589, 10.9569, 0.45", "28.4394, 45.881, 10.9377, 1.14", "28.6474, 46.8863, 10.9248, 1.14", "29.0256, 48.467, 10.9374, 0.23", "29.2075, 49.0479, 10.9692, 1.14", "29.5041, 49.8271, 11.031, 1.14", "30.0324, 50.9441, 11.1489, 0.23", "30.1858, 51.2234, 11.1916, 0.23", "30.7751, 52.2203, 11.3622, 1.36", "31.6542, 53.5864, 11.6222, 0.45", "32.0961, 54.2484, 11.7868, 0.23", "32.7928, 55.3616, 12.061, 1.14", "33.3804, 56.348, 12.2908, 0.23", "33.9046, 57.2365, 12.4927, 1.14", "34.727, 58.5905, 12.8171, 0.23", "35.3765, 59.5755, 13.0697, 1.14", "36.4397, 61.0054, 13.5046, 0.23", "36.8278, 61.481, 13.6563, 0.23", "37.2445, 61.9556, 13.7986, 0.91", "37.9154, 62.6306, 14.0176, 0.23", "38.4031, 63.074, 14.1713, 0.91", "39.1073, 63.6456, 14.3892, 0.23", "39.8371, 64.1863, 14.6231, 1.14", "40.4922, 64.741, 14.8409, 1.14", "41.2494, 65.4582, 15.111, 0.23", "41.6148, 65.8365, 15.2399, 1.59", "42.0498, 66.3582, 15.3614, 1.59", "42.9558, 67.5761, 15.5415, 0.23", "43.5949, 68.4584, 15.6064, 0.91", "44.2145, 69.2733, 15.6205, 0.23", "44.8357, 69.9981, 15.6039, 1.14", "46.3618, 71.4534, 15.5509, 0.23", "46.8621, 71.8442, 15.54, 0.23", "48.0192, 72.6009, 15.522, 0.91", "49.334, 73.3181, 15.4935, 0.23", "50.8648, 74.0945, 15.4587, 0.23", "52.4974, 74.8895, 15.449, 0.91", "53.6528, 75.4939, 15.4435, 0.23", "54.4091, 75.9689, 15.416, 1.14", "55.4866, 76.8614, 15.318, 0.23", "56.1618, 77.6148, 15.1843, 0.23", "56.7331, 78.4552, 15.0025, 1.14", "57.7527, 80.2351, 14.6125, 0.23", "58.1886, 81.057, 14.4361, 0.23", "58.7751, 82.159, 14.2209, 0.68", "59.079, 82.7154, 14.1275, 0.23", "59.5743, 83.513, 14.0146, 0.91", "60.7619, 85.1676, 13.8171, 0.23", "61.1968, 85.6995, 13.7618, 1.14", "61.8594, 86.4978, 13.704, 0.23", "62.271, 86.9756, 13.6846, 0.91", "63.1773, 88.0494, 13.6798, 0.23", "63.9074, 88.9827, 13.7022, 0.91", "64.7376, 90.2049, 13.7499, 0.23", "65.5332, 91.5713, 13.8013, 0.68", "66.0751, 92.7298, 13.8066, 0.23", "66.4253, 93.6879, 13.7728, 0.91", "66.6779, 94.7193, 13.684, 0.23", "66.8385, 95.7874, 13.5443, 0.68", "66.9282, 96.8407, 13.3524, 0.23", "67.035, 98.6719, 12.9615, 0.23", "67.1013, 100.08, 12.6533, 0.68", "67.2271, 101.517, 12.3375, 0.23", "67.324, 102.185, 12.2026, 0.68", "67.5217, 103.183, 12.0552, 0.23", "67.7683, 104.149, 11.9737, 1.14", "67.9415, 104.768, 11.9714, 1.14", "68.2935, 105.923, 12.0041, 0.23", "68.5325, 106.723, 12.047, 0.68", "68.9255, 108.246, 12.1441, 0.23", "69.1097, 108.997, 12.2082, 0.91", "69.4346, 110.317, 12.3834, 0.23", "69.7988, 111.702, 12.6578, 0.91", "70.2283, 113.179, 13.0744, 0.23", "70.4413, 113.796, 13.2852, 1.14", "70.9019, 114.857, 13.7142, 0.23", "71.5319, 116.215, 14.2928, 0.23", "71.8544, 116.86, 14.5792, 1.14", "72.3012, 117.757, 14.9868, 0.23", "72.7302, 118.674, 15.3254, 0.68", "73.1079, 119.662, 15.568, 0.23", "73.3503, 120.496, 15.6811, 0.23", "73.6736, 121.704, 15.7462, 1.59", "74.1004, 123.408, 15.7945, 0.23", "74.4344, 124.809, 15.7948, 0.91", "74.7895, 126.419, 15.7779, 0.23", "75.0019, 127.341, 15.7682, 1.59", "75.4609, 129.022, 15.7707, 0.23", "75.5808, 129.371, 15.7722, 0.91", "75.8485, 129.954, 15.8085, 0.91", "76.8754, 131.585, 16.084, 0.23", "77.7981, 132.745, 16.3742, 0.91", "78.1151, 133.096, 16.4761, 0.91", "79.0444, 134.026, 16.7762, 0.23", "80.3139, 135.134, 17.0871, 0.68", "81.4183, 135.963, 17.2933, 0.23", "82.2722, 136.521, 17.4084, 1.14", "82.7074, 136.802, 17.4455, 1.14", "83.8123, 137.539, 17.5057, 0.23", "85.4248, 138.609, 17.5525, 0.23", "86.6325, 139.35, 17.571, 0.68", "87.9793, 140.051, 17.6168, 0.91", "89.5905, 140.736, 17.7143, 0.23", "90.3039, 141.019, 17.7629, 0.91", "91.2254, 141.348, 17.8366, 0.23", "92.0719, 141.623, 17.9524, 0.91", "93.795, 142.052, 18.204, 0.23", "95.0632, 142.196, 18.4158, 0.23" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "12.5639, 11.9845, 6.94331, 0.68", "13.035, 13.0849, 7.22659, 0.68", "13.6514, 14.6886, 7.50671, 1.36", "14.1062, 15.9067, 7.70445, 1.36", "14.8449, 17.6553, 7.97143, 0.68", "15.8178, 19.7297, 8.34896, 0.68", "16.7302, 21.5938, 8.73413, 1.14", "18.0943, 24.2041, 9.36975, 1.14", "18.8448, 25.6483, 9.7937, 1.14", "20.0539, 28.1043, 10.5998, 0.45", "20.7855, 29.6988, 11.1779, 0.45", "21.7099, 31.6179, 11.9895, 1.14", "22.4384, 33.0832, 12.7347, 0.91", "23.0483, 34.4754, 13.5065, 0.91", "23.5045, 36.1704, 14.336, 0.45", "23.7253, 38.0219, 15.129, 0.45", "23.885, 40.3248, 15.9607, 0.45", "23.9863, 41.3963, 16.3516, 0.45", "24.2311, 43.8504, 17.2478, 0.91", "24.4956, 46.5551, 18.364, 0.68", "24.5699, 47.5567, 18.8017, 0.68", "24.6476, 49.846, 19.7225, 1.36", "24.795, 51.8222, 20.4906, 0.45", "25.053, 54.0671, 21.4185, 0.91", "25.4292, 56.2773, 22.3649, 0.45", "25.9467, 58.7504, 23.4286, 0.91", "26.4626, 61.1702, 24.4382, 1.14", "27.1711, 64.7145, 25.8399, 0.45", "27.7474, 67.5058, 26.9002, 0.45", "28.1662, 69.1646, 27.5363, 1.59", "28.6771, 71.1391, 28.3398, 0.23", "29.3221, 73.9683, 29.5855, 1.36", "29.83, 76.5706, 30.7506, 0.23", "30.1901, 78.9893, 31.7443, 0.23", "30.4419, 80.6219, 32.3881, 1.36", "30.9195, 84.0336, 33.737, 0.23", "31.2087, 86.155, 34.5531, 1.14", "31.3652, 87.395, 35.0152, 0.23", "31.6278, 89.2402, 35.7321, 0.91", "31.9243, 91.3956, 36.5461, 0.23", "32.1336, 93.107, 37.1506, 1.82", "32.3917, 95.3747, 37.8592, 0.23", "32.5991, 97.6497, 38.5774, 1.14", "32.7771, 99.744, 39.3247, 0.23", "32.9028, 101.3, 39.9019, 0.23", "33.0915, 104.307, 40.9384, 0.91", "33.173, 105.749, 41.4354, 0.91", "33.3517, 108.194, 42.2011, 0.23", "33.6325, 110.371, 42.8183, 1.14", "33.8661, 111.664, 43.1068, 1.14", "34.2934, 113.238, 43.4388, 0.23", "34.6862, 114.302, 43.627, 1.14", "35.2157, 115.594, 43.832, 1.14", "36.2761, 118.156, 44.1124, 0.23", "36.9776, 120.012, 44.2516, 0.23", "37.5942, 121.865, 44.4198, 1.14", "37.9488, 123.065, 44.5576, 1.14", "38.5394, 125.174, 44.8241, 0.23", "38.7766, 126.156, 44.9766, 0.23", "39.0783, 127.76, 45.3177, 0.23", "39.4662, 130.136, 46.0642, 1.36", "39.8618, 132.36, 46.8655, 0.23", "40.2503, 134.032, 47.5755, 0.68", "40.6217, 135.115, 48.1321, 0.23", "41.6469, 137.367, 49.5083, 1.14", "42.5064, 138.92, 50.6087, 0.23", "43.4729, 140.398, 51.7253, 1.14", "44.6056, 141.953, 52.9524, 0.23", "46.0472, 143.702, 54.3982, 1.14", "47.0646, 144.805, 55.2853, 0.23", "48.2074, 145.978, 56.1437, 1.14", "49.2918, 147.214, 56.9344, 0.23", "49.7206, 147.844, 57.2903, 0.23", "50.2704, 149.175, 57.8122, 0.23", "50.528, 150.091, 58.0463, 0.91", "50.7471, 151.038, 58.246, 0.91", "51.0642, 152.679, 58.5366, 0.91", "51.371, 155.072, 58.8976, 1.59", "51.6132, 157.962, 59.2281, 0.23", "51.7473, 159.907, 59.4047, 1.36", "52.0295, 162.306, 59.5124, 0.23", "52.2008, 163.275, 59.4929, 0.23", "52.6555, 165.039, 59.3257, 1.14", "53.2875, 166.899, 59.0027, 0.23", "53.8533, 168.352, 58.627, 1.14", "55.1888, 171.43, 57.7, 0.23", "55.8574, 172.854, 57.2237, 0.91", "56.9954, 175.117, 56.4806, 0.23", "57.7798, 176.605, 55.9977, 1.14", "58.3629, 177.836, 55.6112, 1.14", "59.124, 179.864, 55.0238, 0.23", "59.5783, 181.42, 54.6776, 0.91", "59.8469, 182.488, 54.5252, 0.91", "60.2105, 184.174, 54.3693, 0.23", "60.6151, 186.381, 54.2644, 0.23", "60.8412, 187.68, 54.2271, 0.23", "61.237, 189.925, 54.2028, 0.91", "61.8751, 192.79, 54.2326, 0.23", "62.2947, 194.388, 54.2689, 0.68", "62.8633, 196.292, 54.3346, 0.91", "63.4531, 198.015, 54.3748, 0.23", "63.7842, 199.081, 54.3833, 0.68", "64.2589, 200.879, 54.3468, 0.23", "64.6633, 202.563, 54.2895, 0.68", "64.9003, 203.561, 54.2781, 0.23", "65.6681, 206.615, 54.3003, 0.91", "66.1519, 208.505, 54.329, 0.23", "66.5491, 210.126, 54.3447, 0.91", "66.9713, 211.947, 54.3593, 0.23", "67.56, 214.11, 54.3792, 1.14", "68.0367, 215.69, 54.4148, 0.23", "68.7228, 217.816, 54.4713, 1.14", "69.6612, 220.622, 54.5159, 0.23", "70.4523, 223.237, 54.5455, 0.45", "71.2855, 226.077, 54.5559, 0.91", "71.9483, 228.548, 54.5748, 0.23", "72.3518, 230.221, 54.5927, 0.91", "73.1052, 233.482, 54.6574, 0.23", "73.6749, 235.827, 54.7335, 1.14" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "12.1974, -31.7059, 9.15239, 1.59", "14.3892, -33.7778, 9.36327, 1.59", "16.9607, -36.2087, 9.6107, 1.59" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "12.1974, -31.7059, 9.15239, 0.23", "10.4124, -31.6683, 10.8133, 0.23", "9.354, -31.745, 11.6645, 0.91", "8.14309, -31.9437, 12.5001, 0.23", "6.99844, -32.21, 13.1842, 0.68", "5.82228, -32.5898, 13.8312, 0.68", "4.94039, -32.9516, 14.2802, 0.68", "3.74992, -33.6541, 14.7427, 0.23", "2.70491, -34.3671, 15.052, 0.68", "1.88933, -34.9647, 15.2281, 0.23", "0.664281, -35.9207, 15.4342, 0.68", "-0.418615, -36.7686, 15.5779, 0.23", "-0.926849, -37.1926, 15.6349, 0.91", "-2.33626, -38.4793, 15.7718, 0.23", "-3.18119, -39.2858, 15.8358, 0.91", "-4.18001, -40.2953, 15.8844, 0.23", "-4.9822, -41.163, 15.8953, 0.91", "-5.98735, -42.3018, 15.8994, 0.23", "-7.5926, -44.1727, 15.9382, 0.91", "-9.34851, -46.3598, 16.0271, 0.23", "-10.5735, -47.9496, 16.1316, 0.23", "-11.6134, -49.3748, 16.2658, 0.91", "-13.3053, -51.8367, 16.5511, 0.45", "-14.6032, -53.8013, 16.8368, 0.45", "-15.3238, -55.0242, 17.0592, 0.45", "-16.002, -56.3281, 17.3292, 0.91", "-16.7101, -57.8493, 17.6441, 0.45", "-17.4287, -59.6136, 18.0026, 0.23", "-17.7053, -60.4391, 18.1557, 0.68", "-18.6164, -63.1936, 18.6179, 0.45", "-19.5274, -65.5219, 18.992, 0.45", "-20.0863, -66.7987, 19.1953, 0.45", "-20.5493, -67.8265, 19.3525, 0.45", "-21.6074, -70.2072, 19.7088, 0.68", "-22.4641, -72.2776, 19.9884, 0.45", "-23.2586, -74.493, 20.2502, 0.45", "-23.8646, -76.4543, 20.4733, 0.23", "-24.6608, -79.2522, 20.7847, 0.45", "-25.4793, -82.4271, 21.1187, 0.23", "-25.8847, -84.3065, 21.3053, 0.23", "-26.2429, -86.3167, 21.4748, 0.68", "-26.6782, -89.2841, 21.6535, 0.45", "-27.1094, -92.0299, 21.7714, 0.68", "-27.396, -93.4977, 21.8367, 0.68", "-27.6052, -94.3542, 21.8787, 0.68", "-28.5642, -97.6309, 22.0699, 0.23", "-29.3679, -100.139, 22.2137, 0.45", "-29.9965, -102.136, 22.3068, 0.45", "-30.4387, -103.547, 22.3636, 0.45", "-30.9541, -105.107, 22.4156, 0.23", "-31.8688, -107.571, 22.5555, 0.23", "-37.064, -115.451, 25.6667, 0.23", "-41.9381, -123.612, 28.5906, 0.23", "-47.7163, -130.982, 31.8671, 0.23", "-54.6697, -137.501, 34.4996, 0.23", "-61.8214, -142.824, 38.7161, 0.23", "-68.8053, -149.373, 41.1877, 0.23", "-76.3207, -155.568, 42.7818, 0.23", "-84.644, -160.764, 43.4189, 0.23", "-92.7998, -166.24, 43.9831, 0.23", "-100.537, -172.152, 45.5354, 0.23", "-108.282, -178.233, 45.3066, 0.23", "-115.79, -184.53, 44.3131, 0.23", "-122.993, -190.906, 42.2341, 0.23" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-39.2671, 22.8148, 19.1575, 0.68", "-38.0984, 24.3482, 19.42, 0.68", "-36.616, 26.2932, 19.753, 0.23", "-35.8704, 27.2716, 19.9204, 0.23", "-34.7908, 28.6881, 20.1629, 0.23", "-33.8235, 29.9573, 20.3802, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-39.2671, 22.8148, 19.1575, 0.68", "-40.1985, 23.7726, 19.2994, 0.68", "-42.3806, 25.9536, 19.6066, 0.45", "-43.1886, 26.6679, 19.7127, 0.45", "-44.1266, 27.4399, 19.8374, 1.36", "-45.2112, 28.3194, 19.9908, 0.23", "-45.7294, 28.7547, 20.0736, 0.23", "-47.2492, 30.0383, 20.3828, 1.14", "-48.5039, 31.0407, 20.6716, 0.23", "-50.0152, 32.0851, 21.0138, 1.14", "-51.4267, 32.901, 21.3443, 0.45", "-52.7354, 33.543, 21.6776, 1.14", "-54.0685, 34.1113, 22.0426, 0.23", "-55.229, 34.5417, 22.39, 0.68", "-56.8582, 35.0782, 22.8533, 0.68", "-58.1118, 35.4096, 23.1415, 0.23", "-59.4708, 35.7268, 23.3762, 0.23", "-60.7286, 36.0079, 23.5338, 0.91", "-61.6351, 36.2358, 23.5917, 0.23", "-63.4359, 36.7672, 23.6205, 1.36", "-65.2729, 37.3664, 23.5835, 0.23", "-67.0102, 37.9531, 23.4846, 0.23", "-67.8753, 38.2692, 23.4048, 0.68", "-69.3408, 38.883, 23.2562, 1.36", "-70.4676, 39.4634, 23.1518, 0.23", "-71.106, 39.8602, 23.1272, 0.23", "-71.7841, 40.413, 23.1579, 0.91", "-72.8372, 41.3949, 23.295, 0.91", "-73.714, 42.2596, 23.4689, 1.36", "-75.0088, 43.5178, 23.8505, 0.23", "-75.9567, 44.4323, 24.1733, 1.14", "-77.2823, 45.7712, 24.6829, 0.23", "-78.436, 46.9824, 25.1642, 0.91", "-78.9252, 47.5132, 25.385, 0.91", "-80.022, 48.6611, 25.8815, 0.23", "-80.48, 49.1067, 26.0949, 0.23", "-81.7764, 50.3124, 26.7074, 1.14", "-82.3498, 50.8479, 26.9724, 0.23", "-83.2653, 51.7107, 27.4144, 0.23", "-84.251, 52.5507, 27.8787, 0.91", "-85.9025, 53.7725, 28.5895, 0.23", "-87.1941, 54.5552, 29.1151, 0.23", "-88.6582, 55.3045, 29.6771, 0.91", "-89.8782, 55.879, 30.1183, 0.23", "-90.9898, 56.3517, 30.4743, 0.68", "-92.2528, 56.8819, 30.8331, 0.23", "-93.3334, 57.3153, 31.0868, 1.14", "-95.2031, 58.0533, 31.4749, 0.23", "-96.1169, 58.4194, 31.6462, 0.68", "-97.5786, 59.0991, 31.8942, 0.23", "-98.4274, 59.5642, 32.0388, 0.23", "-99.7635, 60.3884, 32.2683, 0.23", "-100.96, 61.194, 32.4959, 1.59", "-102.348, 62.1832, 32.7746, 0.45", "-103.356, 62.9817, 32.9873, 0.45", "-103.873, 63.4428, 33.0975, 0.45", "-105.469, 65.0368, 33.4439, 0.68", "-106.701, 66.4722, 33.7122, 1.14", "-107.845, 67.9014, 33.9212, 0.23", "-108.831, 69.2446, 34.0602, 0.23", "-109.478, 70.2063, 34.1269, 0.23", "-110.309, 71.6046, 34.201, 0.91", "-111.048, 73.0482, 34.2362, 0.23", "-111.537, 74.0641, 34.2421, 0.91", "-112.336, 75.7474, 34.2861, 0.23", "-113.125, 77.2941, 34.358, 1.36", "-113.809, 78.4925, 34.4334, 0.91", "-114.709, 79.9748, 34.5342, 0.23", "-115.303, 80.9848, 34.6047, 0.91", "-115.914, 82.1292, 34.6901, 0.23", "-116.171, 82.6509, 34.7179, 1.14", "-116.615, 83.6931, 34.7255, 1.14", "-117.102, 84.9905, 34.6821, 0.23", "-117.461, 86.1999, 34.6394, 0.23", "-117.539, 86.4822, 34.6284, 0.91", "-117.891, 87.5838, 34.5928, 0.91", "-118.222, 88.4524, 34.5829, 0.91", "-119.04, 90.0978, 34.6199, 0.23", "-119.477, 90.806, 34.6565, 0.23", "-120.105, 91.6535, 34.719, 0.91", "-121.201, 93.0248, 34.8472, 0.23", "-121.961, 93.8845, 34.9453, 0.91", "-123.234, 95.2232, 35.1303, 0.23", "-123.574, 95.5625, 35.181, 0.91", "-124.466, 96.4842, 35.3004, 0.91", "-125.101, 97.2019, 35.3808, 0.45", "-125.774, 98.1005, 35.4563, 0.23", "-126.631, 99.4775, 35.5347, 0.23", "-127.061, 100.239, 35.567, 0.68", "-127.707, 101.427, 35.6109, 0.23", "-128.499, 103.086, 35.6449, 0.23", "-129.156, 104.564, 35.6397, 0.68", "-129.531, 105.639, 35.6144, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "152.147, 172.27, -3.37698, 0.23", "161.933, 178.636, -7.07277, 0.23", "169.875, 186.134, -12.7193, 0.23", "179.764, 192.888, -15.2902, 0.23", "190.875, 196.503, -18.7564, 0.23" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "152.147, 172.27, -3.37698, 0.23", "158.867, 184.669, 2.09004, 0.23", "167.066, 196.727, 6.05787, 0.23", "176.855, 206.578, 11.8169, 0.23", "187.547, 213.356, 19.7827, 0.23", "199.568, 218.59, 26.9249, 0.23", "210.633, 223.915, 35.4216, 0.23", "223.778, 226.679, 41.8812, 0.23", "237.302, 227.131, 48.1162, 0.23", "250.447, 229.493, 54.7288, 0.23" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "90.879, 284.161, 52.5076, 0.23", "90.9607, 286.418, 51.0422, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "90.879, 284.161, 52.5076, 0.23", "89.2413, 283.442, 53.4968, 0.23", "88.4226, 283.134, 54.0059, 0.23", "87.7001, 282.935, 54.4996, 0.23", "85.9086, 282.513, 55.8017, 0.23", "85.2198, 282.366, 56.2867, 1.14", "83.917, 282.101, 57.1473, 0.68", "83.1665, 281.926, 57.6168, 0.23", "81.8152, 281.585, 58.5016, 1.14", "80.1797, 281.121, 59.5911, 0.23", "79.1389, 280.816, 60.296, 0.23", "77.9195, 280.442, 61.0761, 0.45", "77.0683, 280.199, 61.5766, 0.23", "76.5456, 280.073, 61.8724, 0.68", "74.8266, 279.783, 62.7427, 0.23", "73.5084, 279.643, 63.3927, 0.23", "72.3166, 279.613, 64.007, 0.91", "71.0717, 279.761, 64.6241, 0.23", "70.2464, 280.002, 64.9693, 0.23", "69.1203, 280.567, 65.3998, 0.68" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "73.6749, 235.827, 54.7335, 0.23", "73.3199, 238.62, 55.6583, 0.23", "73.0614, 240.653, 56.3316, 1.14", "72.7949, 242.75, 57.0259, 0.23", "72.5532, 244.651, 57.6555, 0.68", "72.3014, 246.632, 58.3113, 0.23", "72.0369, 248.713, 59.0005, 0.45" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "73.6749, 235.827, 54.7335, 0.23", "73.2181, 238.018, 54.5339, 0.23", "72.831, 239.539, 54.3935, 0.23", "72.3075, 241.43, 54.2221, 0.91", "71.9792, 242.515, 54.1243, 0.91", "71.4591, 244.113, 53.9802, 0.23", "70.8145, 246.072, 53.8037, 0.91", "70.2591, 247.768, 53.6263, 0.23", "70.0226, 248.6, 53.5158, 0.23", "69.6709, 249.832, 53.3207, 1.14", "69.1962, 251.554, 53.012, 0.23", "68.8327, 252.861, 52.738, 0.23", "68.4106, 254.547, 52.3503, 0.68", "68.0455, 256.252, 51.9469, 0.23", "67.8374, 257.272, 51.7081, 0.23", "67.6507, 258.189, 51.4992, 0.23", "67.3071, 260.056, 51.0602, 1.14", "67.0069, 261.685, 50.6851, 0.23", "66.6229, 263.838, 50.2266, 0.23", "66.4276, 265.215, 49.943, 0.23", "66.3853, 266.155, 49.7505, 0.91", "66.5467, 268.878, 49.2124, 0.23", "66.7556, 269.979, 49.0064, 1.14", "67.2098, 271.285, 48.7729, 1.14", "68.069, 272.987, 48.4999, 0.23", "69.1546, 274.739, 48.2565, 0.91", "70.1714, 276.185, 48.0722, 0.23", "71.126, 277.432, 47.9384, 0.23", "72.6443, 279.304, 47.7332, 0.45", "73.8929, 280.861, 47.5658, 0.45", "75.0323, 282.356, 47.4118, 0.23", "75.6213, 283.207, 47.3221, 0.45", "76.4328, 284.519, 47.2097, 0.23", "76.7596, 285.174, 47.1634, 0.91", "77.9389, 288.304, 47.036, 0.23", "78.2504, 289.328, 47.0199, 0.23", "78.7196, 291.164, 47.0239, 0.91", "79.1265, 293.06, 47.0531, 0.23", "79.5297, 295.171, 47.0885, 0.91", "79.9309, 297.515, 47.1226, 0.23", "80.1319, 299.061, 47.1416, 1.14", "80.3399, 301.196, 47.142, 0.23", "80.4012, 302.028, 47.112, 0.68", "80.4249, 303.807, 46.932, 0.91", "80.4194, 305.01, 46.7547, 0.23", "80.3293, 306.204, 46.5173, 0.23", "80.0962, 307.627, 46.2093, 1.14", "79.7687, 308.924, 45.918, 0.23", "78.9697, 311.653, 45.3113, 0.23", "78.7389, 312.473, 45.1228, 0.23", "78.4711, 313.607, 44.8379, 0.91", "78.1937, 315.46, 44.2481, 0.23", "78.0099, 317.028, 43.7386, 0.23", "77.9475, 317.83, 43.482, 0.23", "77.9527, 319.94, 42.7468, 0.91", "77.9637, 321.999, 41.9386, 0.23", "78.1212, 324.06, 40.9626, 0.23" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "16.9607, -36.2087, 9.6107, 0.91", "17.9966, -38.9253, 9.58115, 0.91", "18.7169, -40.7755, 9.63866, 0.91", "19.4731, -42.6748, 9.73254, 0.91", "20.9356, -46.4077, 9.95881, 0.91", "22.1151, -49.1014, 10.1394, 0.91", "23.78, -52.573, 10.3695, 0.91", "24.8998, -54.7702, 10.4505, 0.91", "25.9595, -56.7138, 10.4679, 0.91", "27.7532, -59.9873, 10.4461, 1.14", "30.4003, -65.0563, 10.3704, 0.68", "32.4745, -69.1386, 10.2123, 0.68", "34.8241, -73.9489, 9.92237, 0.68", "36.2133, -76.8914, 9.7122, 1.14", "37.6824, -80.1591, 9.47714, 0.68", "38.817, -82.992, 9.28619, 0.68", "39.2021, -84.2534, 9.22112, 1.14", "40.0852, -88.3567, 9.175, 0.68", "40.5873, -91.5553, 9.32143, 0.68", "40.8523, -93.1786, 9.38637, 0.68", "41.3059, -95.3556, 9.43309, 0.68", "42.0193, -98.2448, 9.51001, 1.14", "43.249, -103.007, 9.63841, 0.68", "44.3069, -106.968, 9.80308, 0.68", "45.4925, -110.623, 9.9803, 0.68", "47.2101, -114.634, 10.1377, 1.14", "48.4124, -116.815, 10.1708, 0.45", "49.6646, -118.734, 10.1259, 1.14", "51.116, -120.742, 9.9433, 0.45", "53.0192, -123.38, 9.52547, 0.45", "55.1033, -126.425, 8.94778, 0.45", "57.1316, -129.551, 8.2289, 0.45", "58.9046, -132.426, 7.48758, 0.45", "61.3043, -136.589, 6.46731, 0.68", "62.8694, -139.631, 5.86659, 0.68", "64.2516, -142.65, 5.53949, 0.68", "65.6642, -145.991, 5.42089, 0.68", "66.4008, -147.887, 5.48188, 0.68", "67.5312, -151.197, 5.80866, 0.91", "68.5648, -155.149, 6.43311, 0.45", "69.4237, -159.778, 7.29436, 0.68", "69.6423, -161.497, 7.59121, 0.68", "69.8634, -164.481, 8.04256, 0.68", "69.953, -167.526, 8.41424, 0.68", "69.9135, -171.586, 8.71045, 0.68", "69.8115, -174.545, 8.7993, 0.68", "69.6159, -177.909, 8.84241, 0.68", "69.4931, -180.224, 8.88615, 0.68", "69.399, -182.859, 8.90908, 0.91", "69.3688, -186.007, 8.90257, 0.68", "69.3723, -187.849, 8.86061, 0.23", "69.3503, -189.105, 8.84282, 0.23", "69.2932, -190.636, 8.86386, 0.23", "69.1868, -193.35, 8.93784, 0.45", "69.1051, -196.031, 9.04974, 0.45", "69.04, -199.618, 9.22928, 0.45", "69.0289, -202.342, 9.36988, 0.91", "69.0575, -206.283, 9.57989, 0.68", "69.0432, -208.591, 9.73862, 0.68", "68.8702, -211.953, 10.0704, 0.23", "68.709, -213.308, 10.2593, 0.23", "68.5313, -214.285, 10.4332, 0.23", "67.9029, -216.687, 10.9034, 0.23", "66.5807, -220.208, 11.6415, 0.45", "65.1289, -223.175, 12.2998, 0.45", "63.0571, -226.636, 13.0919, 0.45", "62.2165, -227.892, 13.3816, 0.23", "60.8686, -229.744, 13.84, 0.23", "59.4767, -231.51, 14.2973, 0.45", "57.4759, -233.91, 14.9251, 0.23", "54.5222, -237.628, 15.8132, 0.45", "52.7247, -240.076, 16.3819, 0.68", "51.2115, -242.386, 16.9229, 0.23", "50.4216, -243.821, 17.2546, 0.23", "49.7524, -245.362, 17.6198, 0.68", "48.7254, -248.603, 18.3281, 0.23", "48.2038, -251.136, 18.8059, 0.23", "47.8826, -253.357, 19.1472, 0.68", "47.5629, -255.952, 19.4736, 0.23", "47.1801, -259.488, 19.984, 0.23", "46.8181, -262.706, 20.5396, 0.68", "46.4701, -265.277, 21.0058, 0.45", "45.9869, -268.076, 21.4889, 0.68", "45.3195, -271.094, 22.012, 0.45", "44.618, -273.546, 22.4603, 0.23", "44.1089, -274.933, 22.7417, 0.23", "43.2503, -277.091, 23.2163, 0.45", "41.9645, -280.448, 24.0282, 0.45", "40.7746, -283.843, 24.8924, 0.45", "39.5643, -287.531, 25.8339, 0.45", "38.4544, -290.947, 26.649, 0.45", "37.8081, -293.112, 27.133, 0.45", "36.9486, -296.138, 27.7686, 0.45", "35.9997, -299.693, 28.3826, 0.45", "34.8561, -304.056, 29.0211, 0.91", "34.1845, -306.839, 29.387, 0.45", "33.7024, -309.031, 29.6721, 0.68", "32.8795, -313.069, 30.2143, 0.45", "32.4375, -315.381, 30.5359, 0.45", "31.9942, -318.109, 30.9646, 1.14", "31.5009, -321.596, 31.6003, 0.23", "31.1212, -324.417, 32.211, 0.23", "30.7784, -326.751, 32.7843, 0.23", "30.4351, -329.408, 33.4659, 0.45", "30.0982, -331.761, 33.9893, 0.68", "29.7707, -333.574, 34.2805, 0.45", "29.403, -335.243, 34.4484, 0.68", "29.1302, -336.557, 34.5342, 0.68", "28.8392, -338.175, 34.6113, 0.68", "28.3783, -341.247, 34.8185, 0.45", "27.9778, -344.546, 35.1098, 0.45", "27.7531, -346.785, 35.3746, 0.45", "27.4418, -349.801, 35.8055, 0.91", "27.1161, -352.811, 36.2997, 0.23", "26.7162, -356.055, 36.9082, 0.68", "26.5511, -357.355, 37.1714, 0.68", "26.0918, -360.281, 37.7409, 0.23", "25.428, -362.9, 38.2166, 0.68", "24.6657, -364.7, 38.436, 0.23", "24.2505, -365.427, 38.4655, 0.68", "23.2741, -366.978, 38.3959, 0.23", "21.9066, -369.075, 38.2082, 0.68", "20.2915, -371.683, 37.873, 0.23", "18.9515, -374.238, 37.5409, 0.68", "17.7444, -377.133, 37.1599, 0.23", "17.2582, -379.049, 36.9037, 0.45", "17.0636, -381.772, 36.5495, 0.45", "17.2597, -384.093, 36.2555, 0.45", "17.7722, -386.992, 35.9366, 0.45", "18.1466, -388.537, 35.7875, 0.91", "18.9884, -391.619, 35.4427, 0.23", "19.7685, -394.674, 35.0983, 0.68", "20.5228, -398.231, 34.7102, 0.45", "20.9198, -401.151, 34.4244, 0.45", "21.0359, -403.306, 34.3063, 0.23", "20.9709, -405.241, 34.3115, 0.68", "20.641, -407.449, 34.4893, 0.23", "20.1289, -409.421, 34.8271, 0.23", "19.3679, -411.591, 35.3787, 0.23", "18.131, -414.427, 36.3389, 0.23", "17.1453, -416.298, 37.226, 0.23", "15.8128, -418.4, 38.69, 0.23", "14.6673, -420.12, 40.064, 0.23", "13.8778, -421.219, 41.0986, 0.23", "13.1364, -422.03, 42.0832, 0.68", "11.5841, -423.185, 44.1639, 0.23", "9.72618, -424.01, 46.8488, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.9607, -36.2087, 9.6107, 0.45", "16.4433, -37.9489, 8.2937, 0.45", "15.7091, -40.0276, 6.86996, 0.45", "15.1932, -41.4665, 6.0516, 0.45", "14.9033, -42.4823, 5.61399, 0.45", "14.4997, -44.1304, 5.08249, 0.45", "14.1815, -45.7311, 4.69747, 0.91", "13.9688, -46.9565, 4.53305, 0.68", "13.6503, -48.9224, 4.39812, 1.36", "13.336, -52.2581, 4.2695, 1.14", "13.2915, -54.9287, 4.1962, 0.45", "13.3971, -57.9126, 4.14644, 0.91", "13.5036, -59.9375, 4.13061, 0.45", "13.6918, -63.3646, 4.1499, 0.68", "13.9267, -66.559, 4.18598, 0.68", "14.1866, -69.2054, 4.23543, 0.68", "14.4974, -71.8354, 4.30071, 0.68", "14.8757, -75.1844, 4.43866, 0.68", "15.1178, -77.8119, 4.60073, 0.68", "15.3966, -81.9559, 4.87559, 0.45", "15.4735, -83.7952, 4.99318, 0.45", "15.5986, -86.1178, 5.11562, 0.68", "15.7421, -87.8626, 5.17497, 0.23", "16.0414, -90.3657, 5.19647, 0.91", "16.4535, -93.1757, 5.16911, 0.23", "16.7897, -95.1974, 5.11076, 0.68", "17.4183, -98.611, 4.9762, 0.91", "18.3209, -103.116, 4.69411, 0.91", "18.9354, -106.032, 4.44501, 0.91", "19.3312, -107.936, 4.30122, 0.23", "19.6689, -109.977, 4.20846, 0.68", "19.8659, -111.629, 4.16697, 0.68", "20.0675, -113.813, 4.16643, 0.23", "20.291, -115.863, 4.21233, 0.68", "20.6563, -119.044, 4.29698, 0.68", "20.9593, -122.022, 4.39228, 0.68", "21.1329, -123.679, 4.46099, 0.68", "21.3262, -125.334, 4.51802, 0.68", "21.6811, -128.183, 4.57128, 0.68", "22.0352, -131.393, 4.53771, 0.68", "22.3181, -134.915, 4.35715, 0.68", "22.4998, -137.856, 4.18027, 0.23", "22.5573, -139.401, 4.09682, 1.14", "22.5487, -141.603, 3.9795, 0.23", "22.4731, -142.947, 3.91644, 0.68", "22.2499, -146.281, 3.805, 0.23", "22.1492, -147.7, 3.75688, 0.23", "21.9264, -149.686, 3.67198, 0.23", "21.528, -152.228, 3.58468, 0.68", "20.997, -155.197, 3.49323, 0.68", "20.5898, -157.468, 3.3886, 0.23", "20.2563, -159.139, 3.29591, 0.91", "19.4779, -162.245, 3.08797, 0.91", "18.5292, -165.343, 2.95634, 0.23", "17.9506, -167.243, 2.94258, 0.68", "17.4321, -168.966, 2.97569, 0.23", "16.8522, -170.986, 3.0755, 0.68", "16.0819, -174.021, 3.33172, 0.91", "15.3665, -177.161, 3.70189, 0.45", "14.6159, -180.614, 4.07459, 0.45", "14.082, -182.858, 4.2918, 0.45", "13.5474, -185.124, 4.49621, 0.68", "12.6359, -189.7, 4.85136, 0.45", "12.1105, -192.712, 5.01812, 0.45", "11.4262, -196.554, 5.08333, 0.45", "10.9278, -199.016, 5.07216, 0.45", "10.663, -200.41, 5.04049, 0.23", "10.2679, -202.616, 4.95346, 0.23", "10.0028, -204.513, 4.8674, 0.68", "9.76892, -206.555, 4.80487, 0.23", "9.58363, -207.846, 4.80938, 0.23", "9.16854, -210.117, 4.87974, 0.23", "8.70621, -212.179, 4.99085, 0.23", "8.15963, -214.801, 5.17928, 0.23", "7.88817, -216.214, 5.28438, 0.45", "7.28559, -219.433, 5.50788, 0.23", "6.68375, -222.374, 5.69109, 0.68", "5.71129, -226.882, 5.9433, 0.23", "4.97195, -230.138, 6.09225, 0.23", "4.55397, -231.896, 6.15638, 0.23", "4.21276, -233.592, 6.23063, 0.23", "3.76003, -236.238, 6.322, 0.45", "3.54123, -237.244, 6.34781, 0.68", "2.98919, -238.862, 6.39937, 0.23", "2.56107, -239.753, 6.45525, 0.23", "1.76275, -241.511, 6.68879, 0.23", "2.4947, -252.966, 5.80342, 0.23", "3.4964, -264.431, 5.49573, 0.23", "5.09713, -275.756, 6.79225, 0.23", "7.23969, -286.938, 8.43817, 0.23", "8.10802, -298.024, 11.3995, 0.23", "8.25786, -309.501, 12.4019, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-129.531, 105.639, 35.6144, 0.45", "-130.493, 106.54, 35.7348, 0.45", "-131.054, 107.02, 35.7936, 0.68", "-132.118, 107.852, 35.9033, 0.45", "-133.062, 108.552, 35.9645, 0.23", "-134.048, 109.23, 36.0112, 0.68", "-135.127, 109.912, 36.0527, 0.23", "-135.895, 110.332, 36.0751, 0.23", "-136.859, 110.809, 36.0956, 0.45", "-138.011, 111.341, 36.0905, 0.23", "-138.887, 111.74, 36.0774, 0.23", "-140.08, 112.283, 36.0408, 0.91" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-129.531, 105.639, 35.6144, 0.23", "-127.846, 107.1, 35.9785, 0.23", "-127.002, 108.01, 36.1692, 0.91", "-125.813, 109.727, 36.4618, 0.68", "-124.067, 112.248, 36.8914, 0.23", "-123.239, 113.444, 37.0953, 0.68", "-120.765, 117.016, 37.7041, 0.23", "-119.065, 119.88, 38.0457, 0.23", "-117.273, 123.362, 38.3535, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "90.9607, 286.418, 51.0422, 0.23", "92.2033, 287.807, 51.0443, 0.23", "93.4509, 289.201, 51.0464, 0.23", "94.3941, 290.256, 51.048, 0.23", "95.2644, 291.229, 51.0494, 0.23", "96.3381, 292.429, 51.0513, 0.23", "98.0928, 294.391, 51.0542, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "90.9607, 286.418, 51.0422, 0.23", "89.7815, 287.7, 51.2555, 0.23", "88.7883, 288.891, 51.46, 0.68", "87.2632, 290.877, 51.7881, 0.23", "86.338, 292.214, 51.9857, 0.91", "84.5629, 294.965, 52.3605, 0.45", "82.7096, 298.081, 52.7584, 0.23", "82.0804, 299.36, 52.8767, 0.23", "81.1546, 301.436, 52.9706, 0.23", "80.3804, 303.522, 52.9758, 1.14", "79.8012, 305.34, 52.9305, 0.23", "79.1341, 307.737, 52.716, 0.23", "78.4116, 310.759, 52.3415, 0.91", "77.7882, 313.35, 51.9538, 0.23", "77.2028, 315.936, 51.4931, 0.23", "76.6697, 318.308, 50.9966, 0.23", "76.2732, 320.304, 50.4918, 0.23", "72.9925, 332.205, 51.0899, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-140.08, 112.283, 36.0408, 0.23", "-141.64, 111.254, 35.2576, 0.23", "-142.754, 110.759, 34.7544, 0.23", "-144.951, 109.784, 33.7616, 0.68", "-146.899, 108.918, 32.8809, 0.23", "-148.631, 108.149, 32.0982, 0.23", "-150.146, 107.477, 31.4137, 0.23", "-151.825, 106.705, 30.6017, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-140.08, 112.283, 36.0408, 0.23", "-141.506, 113.737, 36.3549, 0.23", "-142.927, 115.186, 36.6679, 0.68", "-144.009, 116.291, 36.9064, 0.91", "-145.343, 117.651, 37.2003, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_35", "dend_30", "dend_27", "dend_24", "dend_13", "dend_0", "dend_40", "dend_39", "dend_37", "dend_36", "dend_34", "dend_31", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_14", "dend_4", "dend_1", "dend_46", "dend_41", "dend_33", "dend_32", "dend_23", "dend_22", "dend_20", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_52", "dend_47", "dend_45", "dend_42", "dend_17", "dend_16", "dend_11", "dend_6", "dend_54", "dend_53", "dend_49", "dend_48", "dend_44", "dend_43", "dend_19", "dend_18", "dend_8", "dend_7", "dend_51", "dend_50", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_35", "dend_30", "dend_27", "dend_24", "dend_13", "dend_0", "dend_40", "dend_39", "dend_37", "dend_36", "dend_34", "dend_31", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_14", "dend_4", "dend_1", "dend_46", "dend_41", "dend_33", "dend_32", "dend_23", "dend_22", "dend_20", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_52", "dend_47", "dend_45", "dend_42", "dend_17", "dend_16", "dend_11", "dend_6", "dend_54", "dend_53", "dend_49", "dend_48", "dend_44", "dend_43", "dend_19", "dend_18", "dend_8", "dend_7", "dend_51", "dend_50", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_NBC_0871cd68c5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.4999999450176422)
    connect dend_35(0), soma_0(0.4999999450176422)
    connect dend_30(0), soma_0(0.4999999450176422)
    connect dend_27(0), soma_0(0.4999999450176422)
    connect dend_24(0), soma_0(0.4999999450176422)
    connect dend_13(0), soma_0(0.4999999450176422)
    connect dend_0(0), soma_0(0.4999999450176422)
    connect axon_0(0), soma_0(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.76533, -3.11148, 0.0, 3.33266 ) }
    soma_0 { pt3dadd( -7.9581, -2.82432, 0.0, 5.72456 ) }
    soma_0 { pt3dadd( -7.15087, -2.53716, 0.0, 7.79007 ) }
    soma_0 { pt3dadd( -6.34364, -2.25, 0.0, 8.98288 ) }
    soma_0 { pt3dadd( -5.53641, -1.96284, 0.0, 9.97099 ) }
    soma_0 { pt3dadd( -4.72918, -1.67568, 0.0, 10.9098 ) }
    soma_0 { pt3dadd( -3.92195, -1.38852, 0.0, 11.708 ) }
    soma_0 { pt3dadd( -3.11472, -1.10136, 0.0, 12.2471 ) }
    soma_0 { pt3dadd( -2.30749, -0.8142, 0.0, 12.5813 ) }
    soma_0 { pt3dadd( -1.50026, -0.52704, 0.0, 12.8499 ) }
    soma_0 { pt3dadd( -0.693026, -0.23988, 0.0, 13.1177 ) }
    soma_0 { pt3dadd( 0.114204, 0.0472794, 0.0, 13.2864 ) }
    soma_0 { pt3dadd( 0.921435, 0.334439, 0.0, 13.0353 ) }
    soma_0 { pt3dadd( 1.72867, 0.621599, 0.0, 12.7416 ) }
    soma_0 { pt3dadd( 2.5359, 0.908759, 0.0, 12.4079 ) }
    soma_0 { pt3dadd( 3.34313, 1.19592, 0.0, 11.9163 ) }
    soma_0 { pt3dadd( 4.15036, 1.48308, 0.0, 11.2063 ) }
    soma_0 { pt3dadd( 4.95759, 1.77024, 0.0, 9.60841 ) }
    soma_0 { pt3dadd( 5.76482, 2.0574, 0.0, 7.72848 ) }
    soma_0 { pt3dadd( 6.57205, 2.34456, 0.0, 4.99653 ) }
    soma_0 { pt3dadd( 7.37928, 2.63172, 0.0, 2.95975 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 4.77184, 3.56989, 4.52, 2.05 ) }
    dend_38 { pt3dadd( 6.41042, 4.58339, 4.52, 1.59 ) }
    dend_38 { pt3dadd( 7.39321, 5.19127, 4.52, 1.59 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -5.33816, -1.85236, -6.49, 1.14 ) }
    dend_35 { pt3dadd( -7.00602, -2.03306, -7.78429, 0.45 ) }
    dend_35 { pt3dadd( -8.21174, -2.00542, -8.64412, 0.45 ) }
    dend_35 { pt3dadd( -9.93784, -1.77553, -9.74606, 0.68 ) }
    dend_35 { pt3dadd( -11.2981, -1.51342, -10.5339, 0.68 ) }
    dend_35 { pt3dadd( -13.3384, -1.19549, -11.5822, 0.68 ) }
    dend_35 { pt3dadd( -14.5063, -1.13064, -12.1413, 0.68 ) }
    dend_35 { pt3dadd( -17.3425, -1.10235, -13.4829, 0.68 ) }
    dend_35 { pt3dadd( -19.6192, -1.10701, -14.4704, 0.68 ) }
    dend_35 { pt3dadd( -21.4948, -1.07995, -15.2061, 0.68 ) }
    dend_35 { pt3dadd( -23.7365, -0.857863, -15.9719, 1.14 ) }
    dend_35 { pt3dadd( -26.5126, -0.413872, -16.7423, 0.23 ) }
    dend_35 { pt3dadd( -37.7232, 1.58778, -23.3714, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 37/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.18816, -3.57436, -7.25, 1.36 ) }
    dend_30 { pt3dadd( -0.974458, -7.01118, -7.20665, 1.36 ) }
    dend_30 { pt3dadd( -1.56277, -9.58264, -7.17421, 1.36 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.84184, -3.45136, -2.34, 2.95 ) }
    dend_27 { pt3dadd( 6.06231, -5.36403, -2.40308, 1.59 ) }
    dend_27 { pt3dadd( 7.80093, -8.08874, -2.49293, 1.59 ) }
    dend_27 { pt3dadd( 9.28194, -10.4098, -2.56948, 1.59 ) }
    dend_27 { pt3dadd( 10.9635, -13.0451, -2.65639, 1.36 ) }
    dend_27 { pt3dadd( 12.4947, -15.4446, -2.73552, 2.05 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 46/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.39816, -4.32261, -2.42, 1.82 ) }
    dend_24 { pt3dadd( -9.50017, -4.19896, -3.20997, 0.68 ) }
    dend_24 { pt3dadd( -11.6723, -4.06614, -3.93316, 0.45 ) }
    dend_24 { pt3dadd( -14.2572, -3.86694, -4.73044, 0.45 ) }
    dend_24 { pt3dadd( -16.205, -3.70752, -5.28259, 0.23 ) }
    dend_24 { pt3dadd( -17.7692, -3.61964, -5.68935, 0.23 ) }
    dend_24 { pt3dadd( -19.1764, -3.57661, -6.04095, 0.23 ) }
    dend_24 { pt3dadd( -20.6695, -3.559, -6.37162, 0.23 ) }
    dend_24 { pt3dadd( -22.7996, -3.55444, -6.77044, 0.45 ) }
    dend_24 { pt3dadd( -25.3041, -3.54781, -7.17458, 0.45 ) }
    dend_24 { pt3dadd( -27.1181, -3.5247, -7.4252, 0.23 ) }
    dend_24 { pt3dadd( -28.1653, -3.4875, -7.57722, 0.23 ) }
    dend_24 { pt3dadd( -28.899, -3.46749, -7.7198, 0.23 ) }
    dend_24 { pt3dadd( -30.2531, -3.44427, -8.03127, 0.23 ) }
    dend_24 { pt3dadd( -31.5558, -3.4186, -8.34056, 0.23 ) }
    dend_24 { pt3dadd( -32.9283, -3.35015, -8.69765, 0.23 ) }
    dend_24 { pt3dadd( -35.2228, -3.14153, -9.34342, 0.23 ) }
    dend_24 { pt3dadd( -37.6216, -2.92362, -10.0419, 0.23 ) }
    dend_24 { pt3dadd( -38.9806, -2.85559, -10.4719, 1.36 ) }
    dend_24 { pt3dadd( -46.4447, -3.19451, -12.7917, 1.36 ) }
    dend_24 { pt3dadd( -53.4956, -3.32721, -16.1789, 1.36 ) }
    dend_24 { pt3dadd( -59.9043, -3.50128, -20.6626, 1.36 ) }
    dend_24 { pt3dadd( -65.7444, -3.61737, -25.8669, 1.36 ) }
    dend_24 { pt3dadd( -71.4837, -2.70441, -31.1082, 1.36 ) }
    dend_24 { pt3dadd( -77.5799, -1.06777, -35.7441, 1.36 ) }
    dend_24 { pt3dadd( -83.1288, 1.43433, -40.6893, 1.36 ) }
    dend_24 { pt3dadd( -89.4265, 4.5811, -44.1704, 1.36 ) }
    dend_24 { pt3dadd( -95.8949, 8.43367, -46.4587, 1.36 ) }
    dend_24 { pt3dadd( -101.901, 13.3634, -47.8699, 1.36 ) }
    dend_24 { pt3dadd( -107.209, 18.6905, -50.3233, 1.36 ) }
    dend_24 { pt3dadd( -113.097, 23.5369, -52.3681, 1.36 ) }
    dend_24 { pt3dadd( -119.605, 26.5341, -55.5768, 1.36 ) }
    dend_24 { pt3dadd( -126.036, 30.3214, -58.0664, 1.36 ) }
    dend_24 { pt3dadd( -132.743, 33.9389, -60.0086, 1.36 ) }
    dend_24 { pt3dadd( -139.378, 37.2402, -62.6177, 1.36 ) }
    dend_24 { pt3dadd( -146.458, 39.5979, -65.023, 1.36 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 82/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.19184, -6.52636, 3.26, 1.59 ) }
    dend_13 { pt3dadd( 3.77436, -8.60357, 4.38825, 1.59 ) }
    dend_13 { pt3dadd( 5.46817, -10.8269, 5.59586, 1.59 ) }
    dend_13 { pt3dadd( 7.59788, -13.6224, 7.11424, 2.27 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 86/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -8.17816, -2.90811, 1.81, 2.05 ) }
    dend_0 { pt3dadd( -9.65392, -2.61845, 1.9682, 1.36 ) }
    dend_0 { pt3dadd( -10.8408, -2.38549, 2.09544, 1.36 ) }
    dend_0 { pt3dadd( -13.042, -1.95343, 2.33142, 2.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 90/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.37928, 2.63172, 0.0, 1.01487 ) }
    axon_0 { pt3dadd( 21.5117, 7.65911, 0.0, 1.01487 ) }
    axon_0 { pt3dadd( 35.6441, 12.6865, 0.0, 1.01487 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 93/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 7.39321, 5.19127, 4.52, 2.27 ) }
    dend_40 { pt3dadd( 8.74842, 6.26736, 5.15146, 2.27 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 95/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 7.39321, 5.19127, 4.52, 0.68 ) }
    dend_39 { pt3dadd( 10.6337, 4.6051, 6.06029, 0.68 ) }
    dend_39 { pt3dadd( 13.4152, 4.24878, 7.27169, 0.45 ) }
    dend_39 { pt3dadd( 16.4042, 3.99915, 8.50933, 1.14 ) }
    dend_39 { pt3dadd( 18.9604, 3.80902, 9.47621, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 21.0411, 3.60885, 10.2828, 0.68 ) }
    dend_39 { pt3dadd( 23.2325, 3.40024, 11.1483, 1.14 ) }
    dend_39 { pt3dadd( 26.0848, 3.17048, 12.2558, 0.23 ) }
    dend_39 { pt3dadd( 27.3478, 3.06923, 12.7487, 0.91 ) }
    dend_39 { pt3dadd( 29.5746, 2.86319, 13.5388, 1.14 ) }
    dend_39 { pt3dadd( 32.8884, 2.53111, 14.7062, 0.23 ) }
    dend_39 { pt3dadd( 35.0643, 2.34076, 15.4884, 0.91 ) }
    dend_39 { pt3dadd( 38.0685, 2.09566, 16.7664, 1.14 ) }
    dend_39 { pt3dadd( 40.6572, 1.82239, 17.9584, 0.45 ) }
    dend_39 { pt3dadd( 43.6172, 1.57554, 19.327, 0.68 ) }
    dend_39 { pt3dadd( 45.826, 1.55099, 20.3417, 0.23 ) }
    dend_39 { pt3dadd( 46.687, 1.62142, 20.7618, 1.14 ) }
    dend_39 { pt3dadd( 49.4674, 2.14386, 22.3143, 0.23 ) }
    dend_39 { pt3dadd( 51.5308, 2.73919, 23.5947, 0.45 ) }
    dend_39 { pt3dadd( 54.4382, 3.95662, 25.6107, 1.59 ) }
    dend_39 { pt3dadd( 57.202, 5.36024, 27.5923, 0.45 ) }
    dend_39 { pt3dadd( 59.7445, 6.64069, 29.3674, 1.36 ) }
    dend_39 { pt3dadd( 62.8347, 8.13817, 31.4531, 0.23 ) }
    dend_39 { pt3dadd( 64.1425, 8.76552, 32.3036, 2.05 ) }
    dend_39 { pt3dadd( 66.3854, 9.95029, 33.9718, 0.23 ) }
    dend_39 { pt3dadd( 67.2826, 10.4498, 34.7002, 0.68 ) }
    dend_39 { pt3dadd( 68.67, 11.0385, 35.8854, 0.23 ) }
    dend_39 { pt3dadd( 69.9286, 11.4032, 36.8853, 0.23 ) }
    dend_39 { pt3dadd( 70.8254, 11.5951, 37.5754, 1.14 ) }
    dend_39 { pt3dadd( 73.0993, 12.1226, 39.4604, 0.23 ) }
    dend_39 { pt3dadd( 74.8014, 12.5728, 41.0318, 1.14 ) }
    dend_39 { pt3dadd( 77.0894, 13.3864, 43.4925, 0.23 ) }
    dend_39 { pt3dadd( 78.2734, 13.9576, 44.9187, 0.91 ) }
    dend_39 { pt3dadd( 80.0938, 15.0032, 47.2703, 0.23 ) }
    dend_39 { pt3dadd( 81.684, 16.081, 49.2728, 1.36 ) }
    dend_39 { pt3dadd( 83.3751, 17.3885, 51.3523, 0.23 ) }
    dend_39 { pt3dadd( 84.9723, 18.6868, 53.2639, 1.36 ) }
    dend_39 { pt3dadd( 87.0527, 20.4727, 55.5701, 0.23 ) }
    dend_39 { pt3dadd( 89.0067, 22.1106, 57.5869, 1.14 ) }
    dend_39 { pt3dadd( 90.4953, 23.3244, 58.9289, 0.23 ) }
    dend_39 { pt3dadd( 91.587, 24.1541, 59.7462, 0.91 ) }
    dend_39 { pt3dadd( 92.7163, 25.0424, 60.4796, 0.23 ) }
    dend_39 { pt3dadd( 93.8569, 26.0539, 61.1834, 1.14 ) }
    dend_39 { pt3dadd( 95.8512, 27.9454, 62.3682, 0.23 ) }
    dend_39 { pt3dadd( 97.3652, 29.4298, 63.3037, 1.14 ) }
    dend_39 { pt3dadd( 99.4636, 31.6373, 64.7226, 0.23 ) }
    dend_39 { pt3dadd( 100.77, 33.0725, 65.6289, 0.91 ) }
    dend_39 { pt3dadd( 102.518, 35.0587, 66.9226, 0.23 ) }
    dend_39 { pt3dadd( 103.442, 36.0471, 67.6031, 0.23 ) }
    dend_39 { pt3dadd( 105.198, 37.7489, 68.8829, 1.14 ) }
    dend_39 { pt3dadd( 107.452, 39.4986, 70.4713, 0.23 ) }
    dend_39 { pt3dadd( 107.976, 39.7919, 70.8563, 0.68 ) }
    dend_39 { pt3dadd( 109.533, 40.3887, 72.2379, 0.23 ) }
    dend_39 { pt3dadd( 110.956, 40.6333, 73.7773, 0.91 ) }
    dend_39 { pt3dadd( 112.217, 40.5133, 75.6765, 0.23 ) }
    dend_39 { pt3dadd( 113.586, 39.6241, 78.7433, 0.91 ) }
    dend_39 { pt3dadd( 114.454, 38.5633, 81.4076, 0.23 ) }
    dend_39 { pt3dadd( 115.097, 37.3392, 84.2774, 0.23 ) }
    dend_39 { pt3dadd( 115.272, 36.4352, 86.2647, 1.14 ) }
    dend_39 { pt3dadd( 115.178, 35.614, 88.1335, 0.45 ) }
    dend_39 { pt3dadd( 114.758, 34.5859, 90.5357, 0.45 ) }
    dend_39 { pt3dadd( 114.399, 34.1174, 92.07, 0.91 ) }
    dend_39 { pt3dadd( 114.214, 33.9262, 93.0041, 0.91 ) }
    dend_39 { pt3dadd( 113.884, 33.5691, 96.1005, 1.14 ) }
    dend_39 { pt3dadd( 113.785, 33.5602, 97.9229, 0.23 ) }
    dend_39 { pt3dadd( 113.721, 33.67, 99.0889, 1.14 ) }
    dend_39 { pt3dadd( 113.675, 34.6039, 104.039, 0.23 ) }
    dend_39 { pt3dadd( 113.767, 34.8585, 104.958, 0.23 ) }
    dend_39 { pt3dadd( 114.055, 35.32, 106.099, 0.91 ) }
    dend_39 { pt3dadd( 114.942, 36.5865, 108.269, 0.23 ) }
    dend_39 { pt3dadd( 115.457, 37.2991, 109.218, 0.23 ) }
    dend_39 { pt3dadd( 116.171, 38.3491, 110.337, 0.23 ) }
    dend_39 { pt3dadd( 117.228, 40.1017, 111.729, 0.91 ) }
    dend_39 { pt3dadd( 117.794, 41.0302, 112.402, 0.23 ) }
    dend_39 { pt3dadd( 118.319, 41.7796, 112.932, 0.68 ) }
    dend_39 { pt3dadd( 119.671, 43.3808, 114.008, 0.23 ) }
    dend_39 { pt3dadd( 121.386, 45.0818, 115.2, 0.23 ) }
    dend_39 { pt3dadd( 122.042, 45.688, 115.609, 0.23 ) }
    dend_39 { pt3dadd( 123.366, 46.8278, 116.296, 0.91 ) }
    dend_39 { pt3dadd( 125.715, 48.7484, 117.376, 0.23 ) }
    dend_39 { pt3dadd( 126.595, 49.4702, 117.733, 0.23 ) }
    dend_39 { pt3dadd( 129.114, 51.554, 118.745, 0.68 ) }
    dend_39 { pt3dadd( 130.203, 52.441, 119.16, 0.23 ) }
    dend_39 { pt3dadd( 131.402, 53.4535, 119.637, 0.68 ) }
    dend_39 { pt3dadd( 132.251, 54.2104, 119.984, 0.23 ) }
    dend_39 { pt3dadd( 133.89, 55.8553, 120.607, 0.91 ) }
    dend_39 { pt3dadd( 135.453, 57.6148, 121.264, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 82/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -37.7232, 1.58778, -23.3714, 0.23 ) }
    dend_37 { pt3dadd( -44.5421, 1.90579, -26.6081, 0.23 ) }
    dend_37 { pt3dadd( -50.9423, 2.4817, -30.5816, 0.23 ) }
    dend_37 { pt3dadd( -56.9108, 3.16214, -35.1641, 0.23 ) }
    dend_37 { pt3dadd( -62.4212, 3.24699, -40.3308, 0.23 ) }
    dend_37 { pt3dadd( -67.6326, 2.2126, -45.7068, 0.23 ) }
    dend_37 { pt3dadd( -71.8718, 1.90015, -51.9526, 0.23 ) }
    dend_37 { pt3dadd( -75.5402, 0.66279, -58.4475, 0.23 ) }
    dend_37 { pt3dadd( -80.3454, 0.718234, -64.2763, 0.23 ) }
    dend_37 { pt3dadd( -84.4707, 1.79711, -70.5148, 0.23 ) }
    dend_37 { pt3dadd( -88.9496, 3.35037, -76.4041, 0.23 ) }
    dend_37 { pt3dadd( -93.5022, 3.47706, -82.4311, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 94/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -37.7232, 1.58778, -23.3714, 0.23 ) }
    dend_36 { pt3dadd( -47.4636, 3.37331, -29.3475, 0.23 ) }
    dend_36 { pt3dadd( -56.6745, 4.87536, -36.1781, 0.23 ) }
    dend_36 { pt3dadd( -64.1327, 6.78439, -44.8175, 0.23 ) }
    dend_36 { pt3dadd( -72.0549, 9.139, -52.9221, 0.23 ) }
    dend_36 { pt3dadd( -79.6835, 12.3215, -61.0414, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( -86.4492, 16.4554, -69.515, 0.23 ) }
    dend_36 { pt3dadd( -93.9819, 19.0458, -77.9187, 0.23 ) }
    dend_36 { pt3dadd( -100.276, 23.2225, -86.7311, 0.23 ) }
    dend_36 { pt3dadd( -106.598, 27.5422, -95.458, 0.23 ) }
    dend_36 { pt3dadd( -110.611, 32.7203, -105.075, 0.23 ) }
    dend_36 { pt3dadd( -115.234, 38.058, -114.325, 0.23 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.56277, -9.58264, -7.17421, 0.23 ) }
    dend_34 { pt3dadd( -0.782318, -13.1827, -6.98671, 0.23 ) }
    dend_34 { pt3dadd( -0.0957192, -15.9343, -7.09036, 0.91 ) }
    dend_34 { pt3dadd( 0.611474, -18.4234, -7.33445, 0.91 ) }
    dend_34 { pt3dadd( 1.49022, -21.3408, -7.7696, 0.23 ) }
    dend_34 { pt3dadd( 2.31617, -23.9459, -8.23607, 0.91 ) }
    dend_34 { pt3dadd( 3.38933, -27.3975, -8.89457, 0.23 ) }
    dend_34 { pt3dadd( 3.99462, -29.1597, -9.34716, 1.14 ) }
    dend_34 { pt3dadd( 5.03329, -32.583, -10.3222, 0.23 ) }
    dend_34 { pt3dadd( 5.43826, -34.1536, -10.7712, 1.14 ) }
    dend_34 { pt3dadd( 5.95316, -36.8874, -11.4315, 0.23 ) }
    dend_34 { pt3dadd( 6.16142, -38.4824, -11.7071, 0.23 ) }
    dend_34 { pt3dadd( 6.33421, -40.4129, -11.9398, 0.91 ) }
    dend_34 { pt3dadd( 6.54947, -44.0694, -12.2237, 0.23 ) }
    dend_34 { pt3dadd( 6.62794, -45.6129, -12.2845, 0.23 ) }
    dend_34 { pt3dadd( 6.71308, -48.3097, -12.3528, 0.91 ) }
    dend_34 { pt3dadd( 6.73157, -51.0084, -12.4193, 0.45 ) }
    dend_34 { pt3dadd( 6.77602, -54.0849, -12.4673, 0.45 ) }
    dend_34 { pt3dadd( 6.82953, -55.7861, -12.4677, 0.91 ) }
    dend_34 { pt3dadd( 7.02758, -59.6636, -12.4138, 0.23 ) }
    dend_34 { pt3dadd( 7.18268, -62.735, -12.4013, 0.23 ) }
    dend_34 { pt3dadd( 7.33922, -65.5617, -12.4411, 0.23 ) }
    dend_34 { pt3dadd( 7.58109, -68.4116, -12.5311, 0.91 ) }
    dend_34 { pt3dadd( 7.8993, -71.2643, -12.5976, 0.23 ) }
    dend_34 { pt3dadd( 8.16166, -73.1855, -12.6293, 1.14 ) }
    dend_34 { pt3dadd( 8.58957, -76.0958, -12.6021, 0.23 ) }
    dend_34 { pt3dadd( 8.88171, -77.7653, -12.591, 0.68 ) }
    dend_34 { pt3dadd( 9.63552, -81.6057, -12.6261, 0.23 ) }
    dend_34 { pt3dadd( 10.3604, -85.284, -12.7548, 0.23 ) }
    dend_34 { pt3dadd( 10.6978, -87.16, -12.8524, 0.23 ) }
    dend_34 { pt3dadd( 11.2149, -90.2989, -13.0258, 0.45 ) }
    dend_34 { pt3dadd( 11.6225, -93.2141, -13.183, 0.45 ) }
    dend_34 { pt3dadd( 11.8567, -95.3536, -13.335, 0.45 ) }
    dend_34 { pt3dadd( 12.0597, -97.7508, -13.563, 0.45 ) }
    dend_34 { pt3dadd( 12.2643, -100.045, -13.8321, 0.68 ) }
    dend_34 { pt3dadd( 12.3817, -101.675, -13.9977, 0.23 ) }
    dend_34 { pt3dadd( 12.4742, -103.581, -14.1486, 0.68 ) }
    dend_34 { pt3dadd( 12.4418, -105.976, -14.2207, 0.23 ) }
    dend_34 { pt3dadd( 12.3063, -108.774, -14.2539, 0.45 ) }
    dend_34 { pt3dadd( 12.237, -110.712, -14.2963, 0.45 ) }
    dend_34 { pt3dadd( 12.2108, -112.879, -14.3722, 0.45 ) }
    dend_34 { pt3dadd( 12.1888, -114.888, -14.4737, 0.45 ) }
    dend_34 { pt3dadd( 12.1458, -117.245, -14.6277, 0.23 ) }
    dend_34 { pt3dadd( 12.0743, -119.563, -14.8101, 1.82 ) }
    dend_34 { pt3dadd( 11.9427, -124.024, -15.2552, 0.45 ) }
    dend_34 { pt3dadd( 11.9425, -125.935, -15.4678, 0.45 ) }
    dend_34 { pt3dadd( 12.014, -127.477, -15.6585, 0.45 ) }
    dend_34 { pt3dadd( 12.2504, -130.906, -16.1303, 0.23 ) }
    dend_34 { pt3dadd( 13.2398, -144.182, -17.7532, 0.23 ) }
    dend_34 { pt3dadd( 12.7909, -157.463, -19.5596, 0.23 ) }
    dend_34 { pt3dadd( 11.1954, -170.286, -23.0649, 0.23 ) }
    dend_34 { pt3dadd( 7.42877, -182.927, -25.3057, 0.23 ) }
    dend_34 { pt3dadd( 4.57099, -195.456, -29.0131, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 59/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.56277, -9.58264, -7.17421, 0.91 ) }
    dend_31 { pt3dadd( -2.92642, -9.38022, -8.6082, 0.91 ) }
    dend_31 { pt3dadd( -4.49122, -9.5149, -10.306, 1.36 ) }
    dend_31 { pt3dadd( -5.62, -9.86353, -11.6487, 0.91 ) }
    dend_31 { pt3dadd( -7.10439, -10.9479, -13.8617, 1.14 ) }
    dend_31 { pt3dadd( -8.38383, -12.6443, -16.1275, 1.14 ) }
    dend_31 { pt3dadd( -9.40803, -14.4486, -18.1005, 1.14 ) }
    dend_31 { pt3dadd( -9.69889, -15.5431, -18.91, 1.36 ) }
    dend_31 { pt3dadd( -9.93836, -17.644, -20.0908, 0.23 ) }
    dend_31 { pt3dadd( -9.90871, -19.8262, -21.1747, 0.23 ) }
    dend_31 { pt3dadd( -9.75174, -21.8895, -22.0689, 0.45 ) }
    dend_31 { pt3dadd( -9.47007, -23.6451, -22.8073, 0.91 ) }
    dend_31 { pt3dadd( -9.01598, -26.2548, -23.9344, 0.23 ) }
    dend_31 { pt3dadd( -8.83093, -27.6511, -24.6026, 0.23 ) }
    dend_31 { pt3dadd( -8.81017, -29.5708, -25.5902, 0.23 ) }
    dend_31 { pt3dadd( -10.1935, -38.2888, -33.9378, 0.23 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 75/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 12.4947, -15.4446, -2.73552, 0.68 ) }
    dend_29 { pt3dadd( 13.0519, -17.0361, -2.70912, 0.68 ) }
    dend_29 { pt3dadd( 13.5672, -18.4274, -2.64924, 0.91 ) }
    dend_29 { pt3dadd( 14.2103, -19.994, -2.56592, 0.91 ) }
    dend_29 { pt3dadd( 15.1036, -21.9392, -2.44583, 1.36 ) }
    dend_29 { pt3dadd( 16.1019, -24.065, -2.34731, 0.45 ) }
    dend_29 { pt3dadd( 16.9909, -26.0661, -2.28451, 1.14 ) }
    dend_29 { pt3dadd( 17.9603, -28.423, -2.21969, 0.68 ) }
    dend_29 { pt3dadd( 19.0622, -31.2792, -2.19847, 0.68 ) }
    dend_29 { pt3dadd( 20.0801, -34.0725, -2.30744, 0.68 ) }
    dend_29 { pt3dadd( 20.8178, -36.2695, -2.50718, 1.14 ) }
    dend_29 { pt3dadd( 21.577, -38.6344, -2.8401, 0.68 ) }
    dend_29 { pt3dadd( 22.1246, -40.2452, -3.13726, 0.45 ) }
    dend_29 { pt3dadd( 22.7181, -41.8841, -3.47433, 0.45 ) }
    dend_29 { pt3dadd( 23.4973, -43.7457, -3.8421, 0.68 ) }
    dend_29 { pt3dadd( 24.5889, -45.8862, -4.20511, 0.68 ) }
    dend_29 { pt3dadd( 25.1032, -46.6458, -4.28188, 0.68 ) }
    dend_29 { pt3dadd( 26.2873, -48.1478, -4.32177, 0.68 ) }
    dend_29 { pt3dadd( 27.6796, -49.8954, -4.24231, 0.45 ) }
    dend_29 { pt3dadd( 29.5578, -52.3656, -3.97812, 0.45 ) }
    dend_29 { pt3dadd( 30.5848, -53.8771, -3.76199, 0.91 ) }
    dend_29 { pt3dadd( 32.0634, -56.3163, -3.39246, 0.45 ) }
    dend_29 { pt3dadd( 33.1625, -58.2687, -3.12282, 0.91 ) }
    dend_29 { pt3dadd( 34.2397, -60.4059, -2.87923, 0.91 ) }
    dend_29 { pt3dadd( 34.829, -61.7372, -2.77075, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_29 { pt3dadd( 35.7013, -64.0009, -2.62994, 0.68 ) }
    dend_29 { pt3dadd( 36.4422, -66.2362, -2.52248, 0.91 ) }
    dend_29 { pt3dadd( 37.1839, -68.9923, -2.44665, 0.23 ) }
    dend_29 { pt3dadd( 37.6134, -70.698, -2.42775, 0.45 ) }
    dend_29 { pt3dadd( 38.1815, -72.9494, -2.42681, 0.45 ) }
    dend_29 { pt3dadd( 38.6349, -74.9144, -2.40601, 0.45 ) }
    dend_29 { pt3dadd( 38.7956, -75.8665, -2.38062, 0.45 ) }
    dend_29 { pt3dadd( 39.0344, -77.7967, -2.33356, 0.45 ) }
    dend_29 { pt3dadd( 39.283, -80.5509, -2.26499, 0.91 ) }
    dend_29 { pt3dadd( 39.4253, -82.2952, -2.20232, 0.23 ) }
    dend_29 { pt3dadd( 39.6026, -84.7607, -2.07941, 0.91 ) }
    dend_29 { pt3dadd( 39.7917, -88.4642, -1.8604, 0.91 ) }
    dend_29 { pt3dadd( 39.8191, -90.6236, -1.70134, 0.45 ) }
    dend_29 { pt3dadd( 39.7742, -91.5673, -1.62389, 0.45 ) }
    dend_29 { pt3dadd( 39.5942, -92.9909, -1.47153, 0.45 ) }
    dend_29 { pt3dadd( 39.2082, -95.0181, -1.19905, 0.45 ) }
    dend_29 { pt3dadd( 38.6561, -97.3297, -0.839098, 0.45 ) }
    dend_29 { pt3dadd( 38.0961, -99.251, -0.473912, 0.23 ) }
    dend_29 { pt3dadd( 37.64, -100.681, -0.176737, 0.91 ) }
    dend_29 { pt3dadd( 37.1345, -102.396, 0.168006, 0.23 ) }
    dend_29 { pt3dadd( 36.8324, -103.495, 0.368202, 0.68 ) }
    dend_29 { pt3dadd( 36.4393, -104.977, 0.618129, 0.68 ) }
    dend_29 { pt3dadd( 36.0609, -106.658, 0.881585, 0.68 ) }
    dend_29 { pt3dadd( 35.7776, -108.579, 1.14534, 0.23 ) }
    dend_29 { pt3dadd( 35.701, -109.864, 1.30612, 0.68 ) }
    dend_29 { pt3dadd( 35.7128, -111.356, 1.45256, 0.23 ) }
    dend_29 { pt3dadd( 35.826, -112.811, 1.57906, 0.68 ) }
    dend_29 { pt3dadd( 36.131, -115.206, 1.74078, 0.23 ) }
    dend_29 { pt3dadd( 36.2613, -116.106, 1.78728, 0.23 ) }
    dend_29 { pt3dadd( 36.4479, -117.572, 1.85934, 0.91 ) }
    dend_29 { pt3dadd( 36.6962, -119.983, 1.99037, 0.45 ) }
    dend_29 { pt3dadd( 36.9926, -122.908, 2.17114, 0.45 ) }
    dend_29 { pt3dadd( 37.1418, -124.477, 2.27911, 0.91 ) }
    dend_29 { pt3dadd( 37.208, -125.528, 2.36835, 0.23 ) }
    dend_29 { pt3dadd( 37.2435, -126.841, 2.49585, 0.91 ) }
    dend_29 { pt3dadd( 37.2622, -127.671, 2.58338, 0.45 ) }
    dend_29 { pt3dadd( 37.2972, -128.793, 2.71964, 0.91 ) }
    dend_29 { pt3dadd( 37.3895, -130.269, 2.91409, 0.23 ) }
    dend_29 { pt3dadd( 37.7081, -132.729, 3.25492, 0.68 ) }
    dend_29 { pt3dadd( 38.0213, -134.182, 3.42845, 0.23 ) }
    dend_29 { pt3dadd( 38.4345, -135.627, 3.50886, 0.68 ) }
    dend_29 { pt3dadd( 38.6739, -136.329, 3.50854, 0.68 ) }
    dend_29 { pt3dadd( 39.2677, -137.857, 3.45067, 0.23 ) }
    dend_29 { pt3dadd( 40.1157, -139.697, 3.27041, 1.14 ) }
    dend_29 { pt3dadd( 41.2525, -141.835, 2.9526, 0.23 ) }
    dend_29 { pt3dadd( 42.3327, -143.79, 2.60057, 0.23 ) }
    dend_29 { pt3dadd( 43.2655, -145.506, 2.26135, 0.23 ) }
    dend_29 { pt3dadd( 43.7519, -146.391, 2.07684, 0.91 ) }
    dend_29 { pt3dadd( 44.608, -147.933, 1.75258, 1.36 ) }
    dend_29 { pt3dadd( 45.5678, -149.656, 1.40755, 0.23 ) }
    dend_29 { pt3dadd( 46.4256, -151.185, 1.17479, 0.68 ) }
    dend_29 { pt3dadd( 47.0091, -152.248, 1.08697, 0.23 ) }
    dend_29 { pt3dadd( 47.6439, -153.443, 1.02482, 0.45 ) }
    dend_29 { pt3dadd( 48.5838, -155.375, 0.926637, 0.23 ) }
    dend_29 { pt3dadd( 49.071, -156.545, 0.88545, 0.23 ) }
    dend_29 { pt3dadd( 49.5511, -158.025, 0.84763, 0.68 ) }
    dend_29 { pt3dadd( 49.7534, -158.992, 0.82476, 0.23 ) }
    dend_29 { pt3dadd( 49.9529, -160.224, 0.7891, 0.91 ) }
    dend_29 { pt3dadd( 50.2125, -163.048, 0.693349, 0.23 ) }
    dend_29 { pt3dadd( 50.2521, -164.783, 0.617735, 0.23 ) }
    dend_29 { pt3dadd( 50.1856, -166.981, 0.502108, 0.23 ) }
    dend_29 { pt3dadd( 50.0015, -168.992, 0.377329, 0.23 ) }
    dend_29 { pt3dadd( 52.8204, -176.937, 0.662563, 0.23 ) }
    dend_29 { pt3dadd( 55.7572, -184.834, 1.03981, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 64/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 12.4947, -15.4446, -2.73552, 0.68 ) }
    dend_28 { pt3dadd( 13.1395, -15.9654, -2.58366, 0.68 ) }
    dend_28 { pt3dadd( 14.3125, -17.0085, -2.25997, 0.68 ) }
    dend_28 { pt3dadd( 15.6991, -18.4671, -1.84982, 0.68 ) }
    dend_28 { pt3dadd( 16.7535, -19.6926, -1.55274, 0.68 ) }
    dend_28 { pt3dadd( 17.7757, -20.9018, -1.32518, 0.91 ) }
    dend_28 { pt3dadd( 19.0042, -22.3383, -1.1027, 0.68 ) }
    dend_28 { pt3dadd( 20.1865, -23.7468, -0.903633, 1.14 ) }
    dend_28 { pt3dadd( 21.7285, -25.5345, -0.670154, 1.14 ) }
    dend_28 { pt3dadd( 23.434, -27.4011, -0.442892, 0.45 ) }
    dend_28 { pt3dadd( 24.6554, -28.6711, -0.271928, 0.68 ) }
    dend_28 { pt3dadd( 25.507, -29.5207, -0.150002, 1.14 ) }
    dend_28 { pt3dadd( 26.9119, -30.8952, 0.0463367, 0.23 ) }
    dend_28 { pt3dadd( 28.2333, -32.1123, 0.246756, 1.14 ) }
    dend_28 { pt3dadd( 29.4148, -33.0917, 0.434865, 0.45 ) }
    dend_28 { pt3dadd( 30.9768, -34.3764, 0.716459, 0.45 ) }
    dend_28 { pt3dadd( 32.2582, -35.4621, 0.974124, 0.45 ) }
    dend_28 { pt3dadd( 33.674, -36.715, 1.24791, 0.45 ) }
    dend_28 { pt3dadd( 34.9514, -37.8752, 1.45878, 1.36 ) }
    dend_28 { pt3dadd( 36.4117, -39.1886, 1.68981, 0.68 ) }
    dend_28 { pt3dadd( 37.506, -40.1604, 1.80013, 0.23 ) }
    dend_28 { pt3dadd( 38.1317, -40.7389, 1.82025, 1.14 ) }
    dend_28 { pt3dadd( 39.3252, -42.0314, 1.78402, 0.23 ) }
    dend_28 { pt3dadd( 39.9683, -42.8687, 1.72849, 1.14 ) }
    dend_28 { pt3dadd( 40.3858, -43.5619, 1.65309, 1.14 ) }
    dend_28 { pt3dadd( 41.1928, -45.2249, 1.41181, 0.23 ) }
    dend_28 { pt3dadd( 41.7341, -46.4463, 1.18974, 0.23 ) }
    dend_28 { pt3dadd( 42.2536, -47.7, 0.93336, 1.36 ) }
    dend_28 { pt3dadd( 42.4615, -48.2006, 0.823106, 1.36 ) }
    dend_28 { pt3dadd( 43.0001, -49.501, 0.573267, 0.23 ) }
    dend_28 { pt3dadd( 43.2535, -50.112, 0.477447, 0.68 ) }
    dend_28 { pt3dadd( 43.6754, -51.0044, 0.355291, 0.23 ) }
    dend_28 { pt3dadd( 44.1106, -51.9251, 0.219531, 1.36 ) }
    dend_28 { pt3dadd( 44.7878, -53.4426, -0.00687605, 0.45 ) }
    dend_28 { pt3dadd( 45.6355, -55.4311, -0.308791, 1.36 ) }
    dend_28 { pt3dadd( 46.5673, -57.6302, -0.662189, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( 47.1704, -59.0113, -0.91418, 1.36 ) }
    dend_28 { pt3dadd( 47.6955, -60.1817, -1.13786, 0.23 ) }
    dend_28 { pt3dadd( 48.1566, -61.1384, -1.3431, 1.14 ) }
    dend_28 { pt3dadd( 48.8107, -62.4119, -1.66554, 0.23 ) }
    dend_28 { pt3dadd( 49.2845, -63.2485, -1.91658, 1.14 ) }
    dend_28 { pt3dadd( 50.0701, -64.5488, -2.35888, 0.23 ) }
    dend_28 { pt3dadd( 50.9056, -65.889, -2.81959, 0.68 ) }
    dend_28 { pt3dadd( 51.7088, -67.1399, -3.22612, 0.91 ) }
    dend_28 { pt3dadd( 52.6986, -68.7569, -3.68955, 0.23 ) }
    dend_28 { pt3dadd( 53.4132, -70.0013, -4.00114, 1.14 ) }
    dend_28 { pt3dadd( 54.2365, -71.4557, -4.3182, 0.23 ) }
    dend_28 { pt3dadd( 55.0333, -72.8635, -4.59406, 0.68 ) }
    dend_28 { pt3dadd( 56.0871, -74.7765, -4.93371, 0.68 ) }
    dend_28 { pt3dadd( 57.2001, -76.9446, -5.25025, 0.68 ) }
    dend_28 { pt3dadd( 57.8214, -78.2236, -5.40793, 0.68 ) }
    dend_28 { pt3dadd( 58.261, -79.159, -5.5138, 0.45 ) }
    dend_28 { pt3dadd( 59.121, -81.0708, -5.71835, 0.45 ) }
    dend_28 { pt3dadd( 59.9765, -83.072, -5.96497, 0.45 ) }
    dend_28 { pt3dadd( 60.7342, -84.8669, -6.23258, 0.45 ) }
    dend_28 { pt3dadd( 61.1247, -85.8586, -6.39765, 0.23 ) }
    dend_28 { pt3dadd( 61.3406, -86.4952, -6.49424, 0.23 ) }
    dend_28 { pt3dadd( 65.1965, -92.8133, -7.69925, 0.23 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 22/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -146.458, 39.5979, -65.023, 0.68 ) }
    dend_26 { pt3dadd( -152.292, 42.126, -72.1931, 0.68 ) }
    dend_26 { pt3dadd( -159.004, 44.4248, -78.6172, 0.68 ) }
    dend_26 { pt3dadd( -165.205, 47.5215, -85.244, 0.68 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -146.458, 39.5979, -65.023, 0.68 ) }
    dend_25 { pt3dadd( -157.123, 39.8728, -64.4951, 0.68 ) }
    dend_25 { pt3dadd( -167.634, 38.2411, -65.5445, 0.68 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 29/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 7.59788, -13.6224, 7.11424, 1.36 ) }
    dend_21 { pt3dadd( 6.06886, -15.0286, 8.82233, 1.36 ) }
    dend_21 { pt3dadd( 4.85759, -15.8625, 10.0896, 1.36 ) }
    dend_21 { pt3dadd( 3.8155, -16.5839, 11.1824, 1.36 ) }
    dend_21 { pt3dadd( 2.80749, -17.2817, 12.2395, 1.36 ) }
    dend_21 { pt3dadd( 1.39787, -18.2576, 13.7178, 1.82 ) }
    dend_21 { pt3dadd( -0.507426, -19.5766, 15.7159, 1.36 ) }
    dend_21 { pt3dadd( -1.76421, -20.0661, 16.6524, 1.59 ) }
    dend_21 { pt3dadd( -2.66027, -20.2719, 17.2024, 1.59 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 38/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.59788, -13.6224, 7.11424, 1.36 ) }
    dend_14 { pt3dadd( 9.49543, -18.344, 7.32925, 1.36 ) }
    dend_14 { pt3dadd( 10.921, -21.8912, 7.49077, 1.59 ) }
    dend_14 { pt3dadd( 11.7547, -23.9657, 7.58524, 1.59 ) }
    dend_14 { pt3dadd( 13.0737, -27.2478, 7.73469, 2.05 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -13.042, -1.95343, 2.33142, 1.36 ) }
    dend_4 { pt3dadd( -13.8771, 0.367571, 2.79652, 1.36 ) }
    dend_4 { pt3dadd( -15.0341, 3.50616, 3.42691, 1.14 ) }
    dend_4 { pt3dadd( -15.9168, 5.7473, 3.8522, 1.14 ) }
    dend_4 { pt3dadd( -17.0262, 8.31007, 4.37325, 0.91 ) }
    dend_4 { pt3dadd( -18.2206, 10.8273, 4.94369, 0.91 ) }
    dend_4 { pt3dadd( -19.1443, 12.7739, 5.38481, 1.36 ) }
    dend_4 { pt3dadd( -20.0246, 14.6315, 5.81443, 1.36 ) }
    dend_4 { pt3dadd( -21.5538, 17.7138, 6.55023, 0.91 ) }
    dend_4 { pt3dadd( -22.815, 19.8906, 7.10816, 0.91 ) }
    dend_4 { pt3dadd( -23.9037, 21.453, 7.5404, 1.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 54/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -13.042, -1.95343, 2.33142, 1.14 ) }
    dend_1 { pt3dadd( -14.3383, -4.48449, 2.18954, 1.14 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 35.6441, 12.6865, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 49.7765, 17.7139, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 63.909, 22.7413, 0.0, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 59/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 8.74842, 6.26736, 5.15146, 0.68 ) }
    dend_46 { pt3dadd( 11.6182, 7.86592, 4.26198, 0.68 ) }
    dend_46 { pt3dadd( 13.3821, 8.84852, 3.71524, 1.14 ) }
    dend_46 { pt3dadd( 15.7612, 10.1737, 2.97783, 2.05 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 8.74842, 6.26736, 5.15146, 1.36 ) }
    dend_41 { pt3dadd( 9.86763, 7.9444, 5.67708, 1.36 ) }
    dend_41 { pt3dadd( 10.713, 9.21112, 6.07409, 1.36 ) }
    dend_41 { pt3dadd( 11.6479, 10.6119, 6.51313, 2.05 ) }
    dend_41 { pt3dadd( 12.5639, 11.9845, 6.94331, 0.91 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 68/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -10.1935, -38.2888, -33.9378, 0.23 ) }
    dend_33 { pt3dadd( -12.6747, -45.1971, -43.1253, 0.23 ) }
    dend_33 { pt3dadd( -14.333, -53.1757, -51.6503, 0.23 ) }
    dend_33 { pt3dadd( -14.9989, -61.2008, -60.2714, 0.23 ) }
    dend_33 { pt3dadd( -17.5788, -68.1787, -69.381, 0.23 ) }
    dend_33 { pt3dadd( -20.3762, -73.0288, -79.6657, 0.23 ) }
    dend_33 { pt3dadd( -21.9517, -79.216, -89.5202, 0.23 ) }
    dend_33 { pt3dadd( -21.5238, -85.1366, -99.6469, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 76/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -10.1935, -38.2888, -33.9378, 0.23 ) }
    dend_32 { pt3dadd( -13.0492, -46.0361, -36.6806, 0.23 ) }
    dend_32 { pt3dadd( -16.0633, -54.1061, -38.021, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 79/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.66027, -20.2719, 17.2024, 1.14 ) }
    dend_23 { pt3dadd( -2.2922, -20.9248, 17.8008, 1.14 ) }
    dend_23 { pt3dadd( -1.37726, -23.1972, 19.6857, 0.68 ) }
    dend_23 { pt3dadd( -0.943888, -24.6849, 20.8102, 0.68 ) }
    dend_23 { pt3dadd( -0.370861, -26.6984, 22.4108, 0.68 ) }
    dend_23 { pt3dadd( 0.379297, -29.0332, 24.3608, 0.68 ) }
    dend_23 { pt3dadd( 1.0591, -30.9417, 26.0413, 0.45 ) }
    dend_23 { pt3dadd( 1.36149, -31.9059, 26.7869, 0.45 ) }
    dend_23 { pt3dadd( 1.68302, -32.9171, 27.4518, 0.45 ) }
    dend_23 { pt3dadd( 2.27758, -34.5895, 28.7671, 0.68 ) }
    dend_23 { pt3dadd( 2.62295, -35.2929, 29.602, 1.14 ) }
    dend_23 { pt3dadd( 3.41044, -36.2246, 31.3179, 0.23 ) }
    dend_23 { pt3dadd( 4.04318, -36.6671, 32.4827, 0.23 ) }
    dend_23 { pt3dadd( 5.01286, -37.0568, 34.5106, 0.91 ) }
    dend_23 { pt3dadd( 5.82877, -37.1384, 36.5978, 0.23 ) }
    dend_23 { pt3dadd( 6.31293, -37.1246, 38.2601, 0.68 ) }
    dend_23 { pt3dadd( 6.68132, -37.0677, 40.059, 0.23 ) }
    dend_23 { pt3dadd( 6.81196, -36.9737, 41.1192, 1.82 ) }
    dend_23 { pt3dadd( 7.0491, -36.6628, 43.7253, 0.23 ) }
    dend_23 { pt3dadd( 7.23709, -36.417, 45.8547, 1.82 ) }
    dend_23 { pt3dadd( 7.63961, -36.3487, 48.1713, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_23 { pt3dadd( 8.0176, -36.4567, 49.4203, 0.23 ) }
    dend_23 { pt3dadd( 8.52666, -36.7471, 50.6652, 0.23 ) }
    dend_23 { pt3dadd( 9.11909, -37.0982, 51.8002, 0.23 ) }
    dend_23 { pt3dadd( 9.77553, -37.4662, 52.7815, 0.23 ) }
    dend_23 { pt3dadd( 10.9085, -38.1442, 54.3882, 0.68 ) }
    dend_23 { pt3dadd( 12.2147, -38.965, 56.2661, 2.05 ) }
    dend_23 { pt3dadd( 13.9995, -40.0763, 58.7835, 0.45 ) }
    dend_23 { pt3dadd( 15.3216, -40.9071, 60.661, 0.23 ) }
    dend_23 { pt3dadd( 16.3655, -41.5608, 62.2532, 0.23 ) }
    dend_23 { pt3dadd( 17.5019, -42.2594, 64.0534, 1.14 ) }
    dend_23 { pt3dadd( 18.204, -42.6993, 65.2083, 0.23 ) }
    dend_23 { pt3dadd( 19.3968, -43.2708, 67.0095, 0.91 ) }
    dend_23 { pt3dadd( 20.7745, -43.7381, 68.8261, 0.23 ) }
    dend_23 { pt3dadd( 21.4033, -43.9004, 69.6452, 1.14 ) }
    dend_23 { pt3dadd( 23.0902, -44.1849, 71.9099, 0.23 ) }
    dend_23 { pt3dadd( 24.694, -44.395, 73.9704, 0.23 ) }
    dend_23 { pt3dadd( 25.6958, -44.5237, 75.2763, 2.05 ) }
    dend_23 { pt3dadd( 27.3625, -44.7073, 77.708, 0.23 ) }
    dend_23 { pt3dadd( 28.6981, -44.8777, 79.8163, 1.59 ) }
    dend_23 { pt3dadd( 29.8502, -45.0592, 81.667, 0.23 ) }
    dend_23 { pt3dadd( 30.6238, -45.2051, 83.0185, 0.23 ) }
    dend_23 { pt3dadd( 31.4505, -45.403, 84.5346, 0.91 ) }
    dend_23 { pt3dadd( 32.4302, -45.7274, 86.3355, 0.23 ) }
    dend_23 { pt3dadd( 33.536, -46.1006, 88.3842, 0.23 ) }
    dend_23 { pt3dadd( 34.2428, -46.3542, 89.7728, 1.59 ) }
    dend_23 { pt3dadd( 35.8084, -46.9058, 93.2908, 0.23 ) }
    dend_23 { pt3dadd( 36.4917, -47.1852, 94.9801, 0.91 ) }
    dend_23 { pt3dadd( 37.1739, -47.5353, 96.679, 0.23 ) }
    dend_23 { pt3dadd( 37.7454, -47.8066, 98.032, 1.14 ) }
    dend_23 { pt3dadd( 38.9546, -48.2141, 100.765, 0.23 ) }
    dend_23 { pt3dadd( 39.8945, -48.4879, 102.803, 0.91 ) }
    dend_23 { pt3dadd( 40.8115, -48.7547, 104.68, 0.23 ) }
    dend_23 { pt3dadd( 41.5478, -49.0292, 106.216, 0.68 ) }
    dend_23 { pt3dadd( 42.9569, -49.628, 109.168, 0.23 ) }
    dend_23 { pt3dadd( 43.8951, -50.0387, 110.844, 1.14 ) }
    dend_23 { pt3dadd( 44.9426, -50.3749, 112.336, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -2.66027, -20.2719, 17.2024, 0.23 ) }
    dend_22 { pt3dadd( -3.81839, -21.5922, 16.0313, 0.23 ) }
    dend_22 { pt3dadd( -5.03881, -22.8995, 14.9037, 0.45 ) }
    dend_22 { pt3dadd( -6.19071, -24.0701, 14.006, 0.23 ) }
    dend_22 { pt3dadd( -7.02451, -24.8664, 13.443, 0.23 ) }
    dend_22 { pt3dadd( -8.45531, -26.1509, 12.6476, 0.68 ) }
    dend_22 { pt3dadd( -9.5323, -27.089, 12.1106, 0.23 ) }
    dend_22 { pt3dadd( -10.8009, -28.101, 11.6102, 1.36 ) }
    dend_22 { pt3dadd( -12.8899, -29.7393, 10.9314, 0.45 ) }
    dend_22 { pt3dadd( -13.7316, -30.4087, 10.6705, 1.14 ) }
    dend_22 { pt3dadd( -15.1585, -31.6148, 10.2161, 0.23 ) }
    dend_22 { pt3dadd( -16.0817, -32.4093, 9.9105, 1.14 ) }
    dend_22 { pt3dadd( -17.4139, -33.7368, 9.39174, 0.23 ) }
    dend_22 { pt3dadd( -18.4171, -34.9308, 8.86012, 0.23 ) }
    dend_22 { pt3dadd( -19.4931, -36.4213, 8.07894, 1.14 ) }
    dend_22 { pt3dadd( -20.1687, -37.5473, 7.43436, 0.23 ) }
    dend_22 { pt3dadd( -20.4939, -38.1769, 7.04775, 0.91 ) }
    dend_22 { pt3dadd( -21.3571, -39.9527, 5.92802, 0.23 ) }
    dend_22 { pt3dadd( -22.0855, -41.4437, 4.92734, 0.91 ) }
    dend_22 { pt3dadd( -22.8974, -43.0482, 3.77968, 0.23 ) }
    dend_22 { pt3dadd( -24.015, -45.2009, 2.14267, 0.91 ) }
    dend_22 { pt3dadd( -24.4645, -46.0468, 1.45023, 0.23 ) }
    dend_22 { pt3dadd( -25.1764, -47.3469, 0.310653, 0.91 ) }
    dend_22 { pt3dadd( -26.0546, -48.8692, -1.13584, 0.23 ) }
    dend_22 { pt3dadd( -26.5241, -49.6682, -1.92002, 0.45 ) }
    dend_22 { pt3dadd( -27.1978, -50.74, -3.05171, 0.23 ) }
    dend_22 { pt3dadd( -27.8029, -51.5706, -4.00267, 0.23 ) }
    dend_22 { pt3dadd( -28.6708, -52.6461, -5.28802, 0.91 ) }
    dend_22 { pt3dadd( -29.2919, -53.3418, -6.15802, 0.23 ) }
    dend_22 { pt3dadd( -30.0589, -54.1312, -7.11817, 0.68 ) }
    dend_22 { pt3dadd( -30.3406, -54.396, -7.40954, 0.23 ) }
    dend_22 { pt3dadd( -31.2691, -55.1774, -8.16073, 0.68 ) }
    dend_22 { pt3dadd( -32.8326, -56.5015, -9.20576, 0.23 ) }
    dend_22 { pt3dadd( -33.4016, -57.0403, -9.54301, 0.91 ) }
    dend_22 { pt3dadd( -34.347, -58.0815, -10.0662, 0.23 ) }
    dend_22 { pt3dadd( -35.5016, -59.5629, -10.6691, 0.68 ) }
    dend_22 { pt3dadd( -36.4965, -61.0148, -11.1756, 0.23 ) }
    dend_22 { pt3dadd( -36.8919, -61.7014, -11.3635, 0.91 ) }
    dend_22 { pt3dadd( -37.7591, -63.4043, -11.7264, 0.23 ) }
    dend_22 { pt3dadd( -38.2368, -64.379, -11.9364, 0.91 ) }
    dend_22 { pt3dadd( -38.9216, -65.8972, -12.2664, 0.23 ) }
    dend_22 { pt3dadd( -39.3117, -66.8688, -12.4869, 0.91 ) }
    dend_22 { pt3dadd( -40.0939, -68.8965, -12.9667, 0.23 ) }
    dend_22 { pt3dadd( -40.4937, -69.8333, -13.1839, 0.23 ) }
    dend_22 { pt3dadd( -41.0047, -70.9317, -13.4421, 0.91 ) }
    dend_22 { pt3dadd( -41.7532, -72.4146, -13.8314, 0.23 ) }
    dend_22 { pt3dadd( -42.2665, -73.3848, -14.1252, 0.68 ) }
    dend_22 { pt3dadd( -43.3787, -75.5441, -14.8917, 0.23 ) }
    dend_22 { pt3dadd( -43.7737, -76.3077, -15.2265, 0.68 ) }
    dend_22 { pt3dadd( -44.1574, -77.1056, -15.6325, 0.23 ) }
    dend_22 { pt3dadd( -44.7362, -78.2617, -16.3094, 0.91 ) }
    dend_22 { pt3dadd( -45.0607, -78.8597, -16.7487, 0.91 ) }
    dend_22 { pt3dadd( -45.681, -79.9971, -17.7004, 0.23 ) }
    dend_22 { pt3dadd( -46.1819, -80.906, -18.5519, 0.45 ) }
    dend_22 { pt3dadd( -46.941, -82.2091, -19.8429, 0.23 ) }
    dend_22 { pt3dadd( -47.5328, -83.1303, -20.8001, 0.91 ) }
    dend_22 { pt3dadd( -48.1788, -84.0299, -21.7643, 0.23 ) }
    dend_22 { pt3dadd( -48.962, -84.9188, -22.7272, 0.45 ) }
    dend_22 { pt3dadd( -49.6788, -85.5829, -23.4717, 0.23 ) }
    dend_22 { pt3dadd( -50.0902, -85.9392, -23.852, 0.68 ) }
    dend_22 { pt3dadd( -50.9284, -86.6215, -24.5302, 0.23 ) }
    dend_22 { pt3dadd( -51.7766, -87.2891, -25.1357, 0.91 ) }
    dend_22 { pt3dadd( -53.3181, -88.4076, -26.0974, 0.23 ) }
    dend_22 { pt3dadd( -53.815, -88.7503, -26.3755, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( -55.0675, -89.6189, -27.0404, 0.23 ) }
    dend_22 { pt3dadd( -56.3096, -90.4928, -27.6689, 0.91 ) }
    dend_22 { pt3dadd( -57.0889, -91.0453, -28.0593, 0.23 ) }
    dend_22 { pt3dadd( -57.8808, -91.6053, -28.4694, 0.91 ) }
    dend_22 { pt3dadd( -59.7311, -92.8512, -29.4676, 0.23 ) }
    dend_22 { pt3dadd( -61.1354, -93.7673, -30.2479, 0.91 ) }
    dend_22 { pt3dadd( -62.7626, -94.7986, -31.13, 0.23 ) }
    dend_22 { pt3dadd( -64.4883, -95.9151, -32.0724, 0.23 ) }
    dend_22 { pt3dadd( -65.7398, -96.7521, -32.7779, 0.23 ) }
    dend_22 { pt3dadd( -66.8284, -97.4797, -33.4021, 0.23 ) }
    dend_22 { pt3dadd( -67.828, -98.1144, -34.0059, 0.45 ) }
    dend_22 { pt3dadd( -69.1261, -98.8775, -34.7604, 0.23 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 13.0737, -27.2478, 7.73469, 0.68 ) }
    dend_20 { pt3dadd( 14.1951, -27.5425, 6.62822, 0.68 ) }
    dend_20 { pt3dadd( 16.5192, -28.208, 4.69681, 0.68 ) }
    dend_20 { pt3dadd( 18.1152, -28.7073, 3.49916, 0.45 ) }
    dend_20 { pt3dadd( 19.0454, -29.0761, 2.9123, 0.68 ) }
    dend_20 { pt3dadd( 21.059, -30.0426, 1.8034, 0.45 ) }
    dend_20 { pt3dadd( 22.6514, -30.8823, 0.996654, 0.91 ) }
    dend_20 { pt3dadd( 24.5018, -31.9479, 0.263555, 0.68 ) }
    dend_20 { pt3dadd( 25.6511, -32.6816, -0.0828739, 1.14 ) }
    dend_20 { pt3dadd( 28.1601, -34.4609, -0.698455, 0.23 ) }
    dend_20 { pt3dadd( 29.4131, -35.4535, -0.965938, 0.45 ) }
    dend_20 { pt3dadd( 30.248, -36.1653, -1.14345, 0.23 ) }
    dend_20 { pt3dadd( 31.1372, -36.9716, -1.37483, 0.91 ) }
    dend_20 { pt3dadd( 32.5911, -38.3706, -1.85378, 0.23 ) }
    dend_20 { pt3dadd( 33.8228, -39.549, -2.30745, 1.14 ) }
    dend_20 { pt3dadd( 35.947, -41.5402, -3.15882, 0.45 ) }
    dend_20 { pt3dadd( 37.5742, -43.0809, -3.8019, 1.14 ) }
    dend_20 { pt3dadd( 40.4366, -45.8349, -4.88721, 0.23 ) }
    dend_20 { pt3dadd( 42.3168, -47.6348, -5.58077, 0.91 ) }
    dend_20 { pt3dadd( 44.254, -49.4178, -6.28022, 0.23 ) }
    dend_20 { pt3dadd( 46.3601, -51.2574, -7.03651, 0.91 ) }
    dend_20 { pt3dadd( 47.9871, -52.5922, -7.61569, 0.23 ) }
    dend_20 { pt3dadd( 49.4114, -53.7045, -8.11524, 0.91 ) }
    dend_20 { pt3dadd( 51.2651, -55.0013, -8.8042, 0.23 ) }
    dend_20 { pt3dadd( 53.1521, -56.1719, -9.58719, 1.14 ) }
    dend_20 { pt3dadd( 54.0892, -56.6899, -10.0466, 0.23 ) }
    dend_20 { pt3dadd( 55.2144, -57.2361, -10.6895, 0.91 ) }
    dend_20 { pt3dadd( 56.5564, -57.8339, -11.5451, 0.91 ) }
    dend_20 { pt3dadd( 58.4749, -58.7239, -12.8608, 0.23 ) }
    dend_20 { pt3dadd( 60.2212, -59.605, -14.1005, 0.68 ) }
    dend_20 { pt3dadd( 61.7472, -60.4535, -15.1346, 0.23 ) }
    dend_20 { pt3dadd( 62.5666, -60.9597, -15.6568, 0.68 ) }
    dend_20 { pt3dadd( 64.0976, -61.977, -16.5785, 0.23 ) }
    dend_20 { pt3dadd( 66.3769, -63.6381, -17.8598, 0.23 ) }
    dend_20 { pt3dadd( 68.1447, -65.0505, -18.7624, 1.82 ) }
    dend_20 { pt3dadd( 70.5958, -67.1564, -19.909, 0.23 ) }
    dend_20 { pt3dadd( 71.5355, -68.011, -20.3201, 0.91 ) }
    dend_20 { pt3dadd( 72.6677, -69.1168, -20.8219, 0.23 ) }
    dend_20 { pt3dadd( 73.9655, -70.4496, -21.4126, 1.14 ) }
    dend_20 { pt3dadd( 76.183, -72.7747, -22.4366, 0.23 ) }
    dend_20 { pt3dadd( 77.5967, -74.2853, -23.0755, 0.45 ) }
    dend_20 { pt3dadd( 80.2868, -77.1615, -24.3065, 0.23 ) }
    dend_20 { pt3dadd( 81.9122, -78.906, -25.0263, 0.68 ) }
    dend_20 { pt3dadd( 83.978, -81.0437, -25.9391, 0.23 ) }
    dend_20 { pt3dadd( 85.4177, -82.44, -26.5802, 0.23 ) }
    dend_20 { pt3dadd( 86.1529, -83.1018, -26.9133, 0.45 ) }
    dend_20 { pt3dadd( 87.3932, -84.0493, -27.5046, 0.23 ) }
    dend_20 { pt3dadd( 88.9947, -85.0541, -28.3148, 0.68 ) }
    dend_20 { pt3dadd( 91.3327, -86.325, -29.5653, 0.23 ) }
    dend_20 { pt3dadd( 92.5881, -86.9594, -30.2608, 0.23 ) }
    dend_20 { pt3dadd( 94.0135, -87.6827, -31.079, 0.68 ) }
    dend_20 { pt3dadd( 96.4154, -88.8957, -32.5109, 0.23 ) }
    dend_20 { pt3dadd( 98.3772, -89.934, -33.6727, 0.68 ) }
    dend_20 { pt3dadd( 100.346, -90.99, -34.807, 0.23 ) }
    dend_20 { pt3dadd( 101.499, -91.6734, -35.4233, 1.36 ) }
    dend_20 { pt3dadd( 104.23, -93.327, -36.7889, 0.23 ) }
    dend_20 { pt3dadd( 105.243, -93.9542, -37.2461, 0.23 ) }
    dend_20 { pt3dadd( 107.131, -95.2071, -37.9901, 0.23 ) }
    dend_20 { pt3dadd( 108.043, -95.8288, -38.3132, 0.68 ) }
    dend_20 { pt3dadd( 109.631, -96.9336, -38.928, 0.23 ) }
    dend_20 { pt3dadd( 110.57, -97.6417, -39.325, 0.91 ) }
    dend_20 { pt3dadd( 111.258, -98.1971, -39.6217, 0.23 ) }
    dend_20 { pt3dadd( 112.996, -99.7228, -40.408, 0.91 ) }
    dend_20 { pt3dadd( 114.238, -100.884, -41.066, 0.23 ) }
    dend_20 { pt3dadd( 116.064, -102.727, -42.1575, 0.23 ) }
    dend_20 { pt3dadd( 117.559, -104.291, -43.1195, 0.23 ) }
    dend_20 { pt3dadd( 117.966, -104.719, -43.3851, 1.14 ) }
    dend_20 { pt3dadd( 119.475, -106.292, -44.337, 0.23 ) }
    dend_20 { pt3dadd( 121.207, -108.006, -45.4021, 0.68 ) }
    dend_20 { pt3dadd( 122.688, -109.377, -46.2889, 0.23 ) }
    dend_20 { pt3dadd( 124.299, -110.772, -47.1873, 0.68 ) }
    dend_20 { pt3dadd( 127.527, -113.284, -49.0448, 0.23 ) }
    dend_20 { pt3dadd( 128.549, -114.015, -49.6546, 0.23 ) }
    dend_20 { pt3dadd( 129.346, -114.532, -50.1542, 0.23 ) }
    dend_20 { pt3dadd( 130.387, -115.146, -50.8343, 0.68 ) }
    dend_20 { pt3dadd( 133.113, -116.609, -52.809, 0.23 ) }
    dend_20 { pt3dadd( 134.745, -117.419, -54.1108, 0.68 ) }
    dend_20 { pt3dadd( 136.924, -118.4, -56.0015, 0.23 ) }
    dend_20 { pt3dadd( 137.613, -118.7, -56.624, 0.68 ) }
    dend_20 { pt3dadd( 139.174, -119.338, -58.0492, 0.23 ) }
    dend_20 { pt3dadd( 141.245, -120.077, -59.8742, 0.23 ) }
    dend_20 { pt3dadd( 142.675, -120.503, -61.1203, 0.23 ) }
    dend_20 { pt3dadd( 143.169, -120.641, -61.536, 0.91 ) }
    dend_20 { pt3dadd( 144.648, -121.011, -62.7262, 0.23 ) }
    dend_20 { pt3dadd( 147.063, -121.56, -64.6014, 0.91 ) }
    dend_20 { pt3dadd( 150.435, -122.234, -67.1571, 0.23 ) }
    dend_20 { pt3dadd( 151.392, -122.408, -67.8643, 0.23 ) }
    dend_20 { pt3dadd( 152.607, -122.629, -68.7743, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_20 { pt3dadd( 155.004, -123.081, -70.6093, 0.23 ) }
    dend_20 { pt3dadd( 156.327, -123.315, -71.6543, 0.91 ) }
    dend_20 { pt3dadd( 158.651, -123.718, -73.6087, 0.23 ) }
    dend_20 { pt3dadd( 159.252, -123.807, -74.1511, 0.23 ) }
    dend_20 { pt3dadd( 160.634, -124.036, -75.3977, 0.45 ) }
    dend_20 { pt3dadd( 162.873, -124.475, -77.4236, 0.23 ) }
    dend_20 { pt3dadd( 164.186, -124.728, -78.6237, 0.23 ) }
    dend_20 { pt3dadd( 165.571, -124.958, -79.8969, 0.91 ) }
    dend_20 { pt3dadd( 167.228, -125.181, -81.4779, 0.23 ) }
    dend_20 { pt3dadd( 168.625, -125.347, -82.8535, 0.23 ) }
    dend_20 { pt3dadd( 170.024, -125.516, -84.2448, 0.68 ) }
    dend_20 { pt3dadd( 171.7, -125.771, -85.9801, 0.23 ) }
    dend_20 { pt3dadd( 172.712, -126.019, -87.0877, 0.68 ) }
    dend_20 { pt3dadd( 174.338, -126.528, -88.9261, 0.23 ) }
    dend_20 { pt3dadd( 175.239, -126.898, -90.0311, 0.45 ) }
    dend_20 { pt3dadd( 176.561, -127.523, -91.7286, 0.23 ) }
    dend_20 { pt3dadd( 177.781, -128.174, -93.2968, 0.68 ) }
    dend_20 { pt3dadd( 179.215, -129.023, -95.0716, 0.23 ) }
    dend_20 { pt3dadd( 180.37, -129.761, -96.48, 0.23 ) }
    dend_20 { pt3dadd( 182.459, -131.122, -98.9452, 0.23 ) }
    dend_20 { pt3dadd( 183.293, -131.65, -99.9182, 0.23 ) }
    dend_20 { pt3dadd( 184.631, -132.449, -101.473, 0.45 ) }
    dend_20 { pt3dadd( 185.879, -133.09, -102.803, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 23/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 13.0737, -27.2478, 7.73469, 1.82 ) }
    dend_15 { pt3dadd( 12.695, -29.1747, 8.34745, 1.82 ) }
    dend_15 { pt3dadd( 12.1974, -31.7059, 9.15239, 1.82 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 26/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -23.9037, 21.453, 7.5404, 0.45 ) }
    dend_12 { pt3dadd( -24.9716, 24.174, 7.82214, 0.45 ) }
    dend_12 { pt3dadd( -25.4487, 25.2815, 7.92636, 0.91 ) }
    dend_12 { pt3dadd( -26.274, 27.1025, 8.1588, 0.23 ) }
    dend_12 { pt3dadd( -26.9827, 28.851, 8.44268, 0.23 ) }
    dend_12 { pt3dadd( -27.4933, 30.3029, 8.70935, 0.45 ) }
    dend_12 { pt3dadd( -28.0305, 32.0757, 9.0778, 1.14 ) }
    dend_12 { pt3dadd( -28.5791, 34.0682, 9.58255, 0.23 ) }
    dend_12 { pt3dadd( -29.2613, 37.0803, 10.4567, 0.68 ) }
    dend_12 { pt3dadd( -29.8317, 40.5171, 11.5554, 0.23 ) }
    dend_12 { pt3dadd( -30.0942, 42.4919, 12.2603, 0.91 ) }
    dend_12 { pt3dadd( -30.2614, 44.3991, 12.9816, 0.68 ) }
    dend_12 { pt3dadd( -30.4767, 47.3239, 14.119, 0.23 ) }
    dend_12 { pt3dadd( -30.5609, 48.6123, 14.617, 0.23 ) }
    dend_12 { pt3dadd( -30.6804, 50.4618, 15.3068, 0.23 ) }
    dend_12 { pt3dadd( -30.9451, 53.5143, 16.3946, 1.36 ) }
    dend_12 { pt3dadd( -31.1068, 54.9507, 16.8799, 0.23 ) }
    dend_12 { pt3dadd( -31.3653, 56.9726, 17.5296, 1.14 ) }
    dend_12 { pt3dadd( -31.6488, 59.0405, 18.1546, 0.23 ) }
    dend_12 { pt3dadd( -31.988, 60.8574, 18.6979, 0.23 ) }
    dend_12 { pt3dadd( -32.234, 61.8986, 19.0062, 1.14 ) }
    dend_12 { pt3dadd( -33.0932, 65.0931, 19.9036, 0.23 ) }
    dend_12 { pt3dadd( -33.5651, 66.5364, 20.3024, 0.68 ) }
    dend_12 { pt3dadd( -34.2136, 68.245, 20.787, 0.23 ) }
    dend_12 { pt3dadd( -34.9472, 69.8481, 21.2285, 1.14 ) }
    dend_12 { pt3dadd( -35.9404, 71.7226, 21.7214, 0.23 ) }
    dend_12 { pt3dadd( -36.7442, 73.1398, 22.0962, 0.91 ) }
    dend_12 { pt3dadd( -37.2154, 73.9211, 22.248, 0.23 ) }
    dend_12 { pt3dadd( -37.8529, 75.0227, 22.3857, 0.91 ) }
    dend_12 { pt3dadd( -38.7267, 76.6855, 22.5081, 0.23 ) }
    dend_12 { pt3dadd( -39.1959, 77.699, 22.537, 0.23 ) }
    dend_12 { pt3dadd( -39.6741, 78.881, 22.5225, 0.23 ) }
    dend_12 { pt3dadd( -40.4666, 81.364, 22.4609, 0.91 ) }
    dend_12 { pt3dadd( -40.8178, 82.8827, 22.4178, 0.23 ) }
    dend_12 { pt3dadd( -41.0731, 84.3173, 22.3805, 0.91 ) }
    dend_12 { pt3dadd( -41.2919, 85.8988, 22.3614, 0.23 ) }
    dend_12 { pt3dadd( -41.3948, 86.9658, 22.3558, 0.91 ) }
    dend_12 { pt3dadd( -41.6794, 90.9308, 22.4063, 0.23 ) }
    dend_12 { pt3dadd( -41.7657, 92.4942, 22.4875, 1.14 ) }
    dend_12 { pt3dadd( -41.9411, 95.0561, 22.6933, 0.23 ) }
    dend_12 { pt3dadd( -42.0484, 96.4839, 22.8296, 0.91 ) }
    dend_12 { pt3dadd( -42.174, 98.1021, 23.0387, 0.23 ) }
    dend_12 { pt3dadd( -42.3817, 100.292, 23.3936, 0.23 ) }
    dend_12 { pt3dadd( -42.5456, 101.805, 23.7048, 0.91 ) }
    dend_12 { pt3dadd( -42.81, 104.193, 24.2497, 0.23 ) }
    dend_12 { pt3dadd( -42.9474, 105.596, 24.5911, 0.91 ) }
    dend_12 { pt3dadd( -43.2043, 108.188, 25.2695, 0.23 ) }
    dend_12 { pt3dadd( -43.3798, 109.908, 25.7335, 0.91 ) }
    dend_12 { pt3dadd( -43.5683, 112.057, 26.2941, 0.23 ) }
    dend_12 { pt3dadd( -43.6522, 113.123, 26.5641, 0.91 ) }
    dend_12 { pt3dadd( -43.8586, 115.97, 27.2392, 0.23 ) }
    dend_12 { pt3dadd( -44.006, 118.544, 27.8408, 0.91 ) }
    dend_12 { pt3dadd( -44.1421, 120.659, 28.3158, 0.23 ) }
    dend_12 { pt3dadd( -44.2364, 122.07, 28.6386, 0.91 ) }
    dend_12 { pt3dadd( -44.4884, 125.661, 29.4578, 0.23 ) }
    dend_12 { pt3dadd( -44.5559, 126.756, 29.7172, 1.14 ) }
    dend_12 { pt3dadd( -44.5845, 128.54, 30.1611, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -23.9037, 21.453, 7.5404, 0.68 ) }
    dend_5 { pt3dadd( -24.8421, 21.1222, 8.1347, 0.68 ) }
    dend_5 { pt3dadd( -26.725, 20.6483, 9.31748, 0.91 ) }
    dend_5 { pt3dadd( -28.2296, 20.5416, 10.3977, 0.91 ) }
    dend_5 { pt3dadd( -29.7818, 20.7052, 11.6428, 0.91 ) }
    dend_5 { pt3dadd( -31.7272, 20.9104, 13.2034, 0.23 ) }
    dend_5 { pt3dadd( -33.1044, 21.0556, 14.3082, 1.14 ) }
    dend_5 { pt3dadd( -34.6365, 21.2937, 15.5216, 0.68 ) }
    dend_5 { pt3dadd( -37.0441, 21.849, 17.3646, 1.59 ) }
    dend_5 { pt3dadd( -39.2671, 22.8148, 19.1575, 0.68 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -14.3383, -4.48449, 2.18954, 0.68 ) }
    dend_3 { pt3dadd( -16.1219, -5.57233, 3.57672, 0.68 ) }
    dend_3 { pt3dadd( -16.9259, -6.02405, 4.23978, 0.68 ) }
    dend_3 { pt3dadd( -18.4313, -6.80462, 5.59528, 0.23 ) }
    dend_3 { pt3dadd( -20.2205, -7.7878, 7.35569, 0.91 ) }
    dend_3 { pt3dadd( -21.6999, -8.71712, 8.99461, 0.23 ) }
    dend_3 { pt3dadd( -22.6013, -9.38752, 10.1998, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( -23.2763, -10.2861, 11.7564, 0.23 ) }
    dend_3 { pt3dadd( -23.4197, -10.881, 12.8234, 0.23 ) }
    dend_3 { pt3dadd( -23.2497, -11.4995, 14.0254, 0.23 ) }
    dend_3 { pt3dadd( -22.89, -12.2142, 15.3741, 0.68 ) }
    dend_3 { pt3dadd( -22.3784, -13.231, 17.1742, 0.68 ) }
    dend_3 { pt3dadd( -21.7817, -14.7234, 19.6719, 1.14 ) }
    dend_3 { pt3dadd( -21.5062, -15.9615, 21.4593, 0.23 ) }
    dend_3 { pt3dadd( -21.4827, -16.9917, 22.7761, 0.68 ) }
    dend_3 { pt3dadd( -21.6883, -18.1708, 24.1266, 0.23 ) }
    dend_3 { pt3dadd( -22.0647, -19.3072, 25.2169, 0.45 ) }
    dend_3 { pt3dadd( -22.4698, -20.2831, 26.0001, 1.14 ) }
    dend_3 { pt3dadd( -22.9634, -21.3351, 26.7029, 0.23 ) }
    dend_3 { pt3dadd( -23.6293, -22.5956, 27.4854, 0.91 ) }
    dend_3 { pt3dadd( -24.6753, -24.4602, 28.5628, 0.23 ) }
    dend_3 { pt3dadd( -25.5128, -26.1511, 29.4342, 1.14 ) }
    dend_3 { pt3dadd( -25.794, -26.7634, 29.7334, 0.23 ) }
    dend_3 { pt3dadd( -26.3008, -27.8503, 30.2691, 0.68 ) }
    dend_3 { pt3dadd( -26.7697, -28.8124, 30.7958, 0.23 ) }
    dend_3 { pt3dadd( -27.281, -29.8368, 31.4139, 1.14 ) }
    dend_3 { pt3dadd( -28.0897, -31.3989, 32.4905, 0.23 ) }
    dend_3 { pt3dadd( -28.8975, -32.7473, 33.5728, 0.91 ) }
    dend_3 { pt3dadd( -29.1792, -33.2085, 34.0156, 0.91 ) }
    dend_3 { pt3dadd( -29.8262, -34.3235, 35.3716, 0.23 ) }
    dend_3 { pt3dadd( -30.4087, -35.1117, 36.7893, 0.23 ) }
    dend_3 { pt3dadd( -31.0087, -35.6496, 38.5125, 0.23 ) }
    dend_3 { pt3dadd( -31.4414, -35.7623, 40.1825, 1.14 ) }
    dend_3 { pt3dadd( -31.6649, -35.5344, 42.3478, 0.23 ) }
    dend_3 { pt3dadd( -31.4553, -35.0366, 44.4123, 0.23 ) }
    dend_3 { pt3dadd( -30.6255, -34.0799, 47.0604, 0.23 ) }
    dend_3 { pt3dadd( -29.694, -33.4132, 48.7561, 0.68 ) }
    dend_3 { pt3dadd( -28.5694, -32.8245, 50.1656, 0.23 ) }
    dend_3 { pt3dadd( -26.9018, -32.1524, 51.7345, 0.91 ) }
    dend_3 { pt3dadd( -24.5719, -31.328, 53.3869, 0.23 ) }
    dend_3 { pt3dadd( -23.1132, -30.913, 54.1828, 0.23 ) }
    dend_3 { pt3dadd( -20.3697, -30.3029, 55.4636, 0.23 ) }
    dend_3 { pt3dadd( -18.8248, -30.0295, 56.1487, 0.23 ) }
    dend_3 { pt3dadd( -17.1176, -29.7489, 56.8307, 0.68 ) }
    dend_3 { pt3dadd( -15.3119, -29.4073, 57.4238, 0.23 ) }
    dend_3 { pt3dadd( -13.7093, -29.0917, 57.8599, 0.68 ) }
    dend_3 { pt3dadd( -11.3758, -28.5224, 58.3792, 0.23 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 40/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -14.3383, -4.48449, 2.18954, 0.68 ) }
    dend_2 { pt3dadd( -15.9615, -4.48502, 1.29923, 0.68 ) }
    dend_2 { pt3dadd( -18.4421, -4.28674, 0.176124, 0.68 ) }
    dend_2 { pt3dadd( -20.3186, -4.10446, -0.511001, 0.68 ) }
    dend_2 { pt3dadd( -23.0055, -3.804, -1.40728, 1.14 ) }
    dend_2 { pt3dadd( -25.6733, -3.45168, -2.19227, 0.23 ) }
    dend_2 { pt3dadd( -27.956, -3.14983, -2.76424, 0.68 ) }
    dend_2 { pt3dadd( -30.4758, -2.75217, -3.15978, 0.45 ) }
    dend_2 { pt3dadd( -33.4305, -2.32707, -3.36185, 0.68 ) }
    dend_2 { pt3dadd( -35.3248, -2.16553, -3.37133, 0.68 ) }
    dend_2 { pt3dadd( -37.0661, -2.12902, -3.27927, 0.68 ) }
    dend_2 { pt3dadd( -39.0406, -2.22155, -3.08441, 0.68 ) }
    dend_2 { pt3dadd( -40.2298, -2.35516, -2.94317, 0.68 ) }
    dend_2 { pt3dadd( -42.3787, -2.67744, -2.69295, 0.68 ) }
    dend_2 { pt3dadd( -45.1078, -3.12823, -2.37316, 0.68 ) }
    dend_2 { pt3dadd( -47.6067, -3.54992, -2.09696, 0.68 ) }
    dend_2 { pt3dadd( -50.3927, -3.97335, -1.84327, 0.91 ) }
    dend_2 { pt3dadd( -52.9779, -4.28184, -1.65183, 0.45 ) }
    dend_2 { pt3dadd( -55.2777, -4.52835, -1.50896, 0.45 ) }
    dend_2 { pt3dadd( -57.8722, -4.7879, -1.39077, 0.45 ) }
    dend_2 { pt3dadd( -59.4959, -4.962, -1.36724, 0.45 ) }
    dend_2 { pt3dadd( -61.241, -5.14087, -1.42888, 0.45 ) }
    dend_2 { pt3dadd( -63.0562, -5.36559, -1.64739, 0.23 ) }
    dend_2 { pt3dadd( -65.1754, -5.64755, -2.07772, 0.23 ) }
    dend_2 { pt3dadd( -66.6953, -5.88853, -2.49058, 0.23 ) }
    dend_2 { pt3dadd( -68.6752, -6.20953, -3.10914, 0.45 ) }
    dend_2 { pt3dadd( -70.9308, -6.55371, -3.81635, 0.23 ) }
    dend_2 { pt3dadd( -73.5115, -6.91363, -4.61049, 0.23 ) }
    dend_2 { pt3dadd( -75.7707, -7.20193, -5.23789, 0.45 ) }
    dend_2 { pt3dadd( -77.3781, -7.36446, -5.59295, 0.45 ) }
    dend_2 { pt3dadd( -79.6646, -7.64049, -5.99766, 0.45 ) }
    dend_2 { pt3dadd( -81.7694, -7.92361, -6.30712, 0.23 ) }
    dend_2 { pt3dadd( -82.6802, -8.05656, -6.41323, 0.23 ) }
    dend_2 { pt3dadd( -84.7023, -8.31208, -6.57864, 2.05 ) }
    dend_2 { pt3dadd( -89.307, -8.90382, -6.95132, 0.23 ) }
    dend_2 { pt3dadd( -91.6592, -9.24002, -7.16289, 0.23 ) }
    dend_2 { pt3dadd( -101.675, -7.78159, -7.96743, 0.23 ) }
    dend_2 { pt3dadd( -111.814, -8.17654, -7.81998, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 78/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 15.7612, 10.1737, 2.97783, 0.68 ) }
    dend_52 { pt3dadd( 18.0564, 11.8928, 1.90174, 0.68 ) }
    dend_52 { pt3dadd( 19.3048, 13.0444, 1.21702, 0.91 ) }
    dend_52 { pt3dadd( 21.2843, 15.0747, 0.101871, 0.68 ) }
    dend_52 { pt3dadd( 22.9655, 16.8192, -0.791863, 0.68 ) }
    dend_52 { pt3dadd( 24.7326, 18.5732, -1.68856, 0.68 ) }
    dend_52 { pt3dadd( 26.1698, 19.8899, -2.4183, 0.68 ) }
    dend_52 { pt3dadd( 27.6332, 21.2317, -3.18205, 0.68 ) }
    dend_52 { pt3dadd( 28.8435, 22.188, -3.76466, 0.68 ) }
    dend_52 { pt3dadd( 30.5708, 23.351, -4.52146, 0.68 ) }
    dend_52 { pt3dadd( 32.4675, 24.4394, -5.23485, 1.14 ) }
    dend_52 { pt3dadd( 34.6959, 25.5348, -5.96679, 0.68 ) }
    dend_52 { pt3dadd( 36.3323, 26.2384, -6.4838, 0.68 ) }
    dend_52 { pt3dadd( 38.0055, 26.9458, -7.01779, 0.68 ) }
    dend_52 { pt3dadd( 39.4894, 27.5866, -7.47887, 1.14 ) }
    dend_52 { pt3dadd( 41.676, 28.5828, -8.11188, 0.45 ) }
    dend_52 { pt3dadd( 44.2275, 29.8348, -8.77138, 0.68 ) }
    dend_52 { pt3dadd( 46.1656, 30.8874, -9.24185, 0.68 ) }
    dend_52 { pt3dadd( 48.4407, 32.2553, -9.83286, 0.68 ) }
    dend_52 { pt3dadd( 50.6368, 33.7264, -10.4478, 0.68 ) }
    dend_52 { pt3dadd( 52.3286, 35.0307, -10.9993, 0.45 ) }
    dend_52 { pt3dadd( 53.0307, 35.7492, -11.2782, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_52 { pt3dadd( 53.6222, 36.6278, -11.5641, 0.45 ) }
    dend_52 { pt3dadd( 54.3579, 38.1449, -12.0726, 0.45 ) }
    dend_52 { pt3dadd( 55.1286, 39.7363, -12.7186, 0.45 ) }
    dend_52 { pt3dadd( 56.2968, 41.5593, -13.6148, 0.45 ) }
    dend_52 { pt3dadd( 57.7484, 43.1794, -14.4963, 0.45 ) }
    dend_52 { pt3dadd( 58.5797, 43.9979, -14.9325, 1.14 ) }
    dend_52 { pt3dadd( 60.4159, 45.6884, -15.7843, 0.45 ) }
    dend_52 { pt3dadd( 62.3599, 47.3187, -16.5833, 0.45 ) }
    dend_52 { pt3dadd( 64.6576, 49.1181, -17.4372, 0.45 ) }
    dend_52 { pt3dadd( 66.5666, 50.5793, -18.098, 0.45 ) }
    dend_52 { pt3dadd( 68.9617, 52.4364, -18.9124, 0.68 ) }
    dend_52 { pt3dadd( 70.0511, 53.3211, -19.2585, 0.68 ) }
    dend_52 { pt3dadd( 71.6663, 54.7566, -19.7138, 0.45 ) }
    dend_52 { pt3dadd( 73.4251, 56.523, -20.1968, 0.45 ) }
    dend_52 { pt3dadd( 74.0107, 57.1371, -20.3505, 1.14 ) }
    dend_52 { pt3dadd( 74.8092, 57.8991, -20.5491, 0.23 ) }
    dend_52 { pt3dadd( 76.9123, 59.5002, -20.9861, 0.23 ) }
    dend_52 { pt3dadd( 77.7251, 60.0871, -21.1392, 0.23 ) }
    dend_52 { pt3dadd( 86.1072, 67.8233, -23.2414, 0.23 ) }
    dend_52 { pt3dadd( 92.9071, 76.8926, -25.9086, 0.23 ) }
    dend_52 { pt3dadd( 99.2754, 86.4949, -27.7351, 0.23 ) }
    dend_52 { pt3dadd( 106.874, 95.3051, -27.5153, 0.23 ) }
    dend_52 { pt3dadd( 114.623, 103.725, -25.4765, 0.23 ) }
    dend_52 { pt3dadd( 120.441, 113.106, -21.7137, 0.23 ) }
    dend_52 { pt3dadd( 127.114, 122.167, -18.7051, 0.23 ) }
    dend_52 { pt3dadd( 132.596, 132.278, -16.6131, 0.23 ) }
    dend_52 { pt3dadd( 137.749, 142.681, -15.1443, 0.23 ) }
    dend_52 { pt3dadd( 143.156, 152.453, -11.7327, 0.23 ) }
    dend_52 { pt3dadd( 147.001, 162.435, -7.01643, 0.23 ) }
    dend_52 { pt3dadd( 152.147, 172.27, -3.37698, 0.23 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 30/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 15.7612, 10.1737, 2.97783, 0.68 ) }
    dend_47 { pt3dadd( 17.6475, 12.3948, 3.34502, 0.68 ) }
    dend_47 { pt3dadd( 19.0958, 13.9608, 3.52927, 0.68 ) }
    dend_47 { pt3dadd( 21.7906, 16.7763, 3.78904, 0.68 ) }
    dend_47 { pt3dadd( 23.1218, 18.1625, 3.87387, 0.68 ) }
    dend_47 { pt3dadd( 24.9086, 20.0813, 3.9645, 0.68 ) }
    dend_47 { pt3dadd( 26.4717, 21.8636, 4.01866, 0.68 ) }
    dend_47 { pt3dadd( 28.2415, 23.9441, 4.01716, 0.68 ) }
    dend_47 { pt3dadd( 29.0892, 25.0071, 3.99413, 1.14 ) }
    dend_47 { pt3dadd( 30.1461, 26.52, 3.95431, 0.91 ) }
    dend_47 { pt3dadd( 30.9926, 27.9186, 3.93668, 0.91 ) }
    dend_47 { pt3dadd( 32.3693, 30.5453, 3.94667, 0.68 ) }
    dend_47 { pt3dadd( 33.3861, 32.8541, 3.9985, 0.91 ) }
    dend_47 { pt3dadd( 34.2858, 35.2476, 4.129, 0.91 ) }
    dend_47 { pt3dadd( 35.3677, 38.5296, 4.36465, 0.91 ) }
    dend_47 { pt3dadd( 35.9868, 40.6562, 4.56286, 0.91 ) }
    dend_47 { pt3dadd( 36.3416, 41.9571, 4.6975, 0.91 ) }
    dend_47 { pt3dadd( 36.8184, 43.6226, 4.90398, 0.91 ) }
    dend_47 { pt3dadd( 37.3483, 45.4301, 5.14751, 0.68 ) }
    dend_47 { pt3dadd( 38.1109, 47.8388, 5.49095, 0.68 ) }
    dend_47 { pt3dadd( 38.8552, 50.1054, 5.81958, 1.14 ) }
    dend_47 { pt3dadd( 39.7564, 52.7206, 6.18054, 0.91 ) }
    dend_47 { pt3dadd( 40.6823, 55.5069, 6.55107, 0.91 ) }
    dend_47 { pt3dadd( 41.0986, 56.7679, 6.70168, 0.91 ) }
    dend_47 { pt3dadd( 41.768, 58.6731, 6.89404, 0.91 ) }
    dend_47 { pt3dadd( 42.9549, 61.9234, 7.17256, 0.91 ) }
    dend_47 { pt3dadd( 43.7745, 64.3029, 7.36958, 0.91 ) }
    dend_47 { pt3dadd( 44.4297, 66.3964, 7.57613, 1.36 ) }
    dend_47 { pt3dadd( 45.1486, 68.7251, 7.85858, 0.68 ) }
    dend_47 { pt3dadd( 45.9221, 70.9202, 8.17739, 0.91 ) }
    dend_47 { pt3dadd( 46.6402, 72.7579, 8.48426, 0.68 ) }
    dend_47 { pt3dadd( 47.5245, 74.7562, 8.82667, 0.68 ) }
    dend_47 { pt3dadd( 48.5448, 76.9429, 9.2037, 0.91 ) }
    dend_47 { pt3dadd( 50.0062, 79.9606, 9.74861, 0.91 ) }
    dend_47 { pt3dadd( 51.1609, 82.4635, 10.2267, 0.45 ) }
    dend_47 { pt3dadd( 52.0924, 84.6447, 10.6367, 0.68 ) }
    dend_47 { pt3dadd( 53.0763, 87.09, 11.0772, 0.91 ) }
    dend_47 { pt3dadd( 53.7186, 88.7044, 11.3622, 0.23 ) }
    dend_47 { pt3dadd( 54.7452, 91.3909, 11.8247, 0.45 ) }
    dend_47 { pt3dadd( 55.4829, 93.4438, 12.1256, 0.45 ) }
    dend_47 { pt3dadd( 56.4892, 96.2433, 12.4948, 0.45 ) }
    dend_47 { pt3dadd( 57.1105, 98.0111, 12.7133, 1.14 ) }
    dend_47 { pt3dadd( 58.4056, 101.822, 13.1643, 0.68 ) }
    dend_47 { pt3dadd( 59.4079, 104.687, 13.4477, 0.68 ) }
    dend_47 { pt3dadd( 60.5464, 107.692, 13.6731, 0.68 ) }
    dend_47 { pt3dadd( 61.7919, 110.625, 13.8594, 0.45 ) }
    dend_47 { pt3dadd( 62.8502, 112.92, 14.0054, 0.45 ) }
    dend_47 { pt3dadd( 63.7416, 114.846, 14.1408, 0.68 ) }
    dend_47 { pt3dadd( 64.6182, 116.819, 14.3014, 0.91 ) }
    dend_47 { pt3dadd( 65.3779, 118.591, 14.515, 0.45 ) }
    dend_47 { pt3dadd( 66.1676, 120.547, 14.8582, 0.68 ) }
    dend_47 { pt3dadd( 66.8306, 122.347, 15.1782, 0.45 ) }
    dend_47 { pt3dadd( 67.4243, 123.954, 15.45, 0.45 ) }
    dend_47 { pt3dadd( 67.7769, 124.937, 15.5919, 0.45 ) }
    dend_47 { pt3dadd( 68.2997, 126.49, 15.7449, 0.91 ) }
    dend_47 { pt3dadd( 69.4505, 129.758, 15.8983, 0.68 ) }
    dend_47 { pt3dadd( 70.9105, 133.31, 15.8827, 0.68 ) }
    dend_47 { pt3dadd( 71.9523, 135.404, 15.7648, 0.45 ) }
    dend_47 { pt3dadd( 72.9393, 137.06, 15.6074, 0.45 ) }
    dend_47 { pt3dadd( 74.1333, 138.908, 15.3826, 0.45 ) }
    dend_47 { pt3dadd( 75.3046, 140.609, 15.1211, 0.45 ) }
    dend_47 { pt3dadd( 76.6022, 142.392, 14.7903, 0.45 ) }
    dend_47 { pt3dadd( 77.4208, 143.47, 14.5906, 0.45 ) }
    dend_47 { pt3dadd( 77.9847, 144.24, 14.489, 0.45 ) }
    dend_47 { pt3dadd( 79.0937, 145.735, 14.4314, 0.45 ) }
    dend_47 { pt3dadd( 80.3031, 147.315, 14.4715, 0.45 ) }
    dend_47 { pt3dadd( 81.4996, 148.911, 14.5275, 0.68 ) }
    dend_47 { pt3dadd( 83.4883, 151.637, 14.6261, 0.23 ) }
    dend_47 { pt3dadd( 84.7691, 153.366, 14.7104, 0.45 ) }
    dend_47 { pt3dadd( 86.5877, 155.655, 14.8758, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_47 { pt3dadd( 87.7738, 157.051, 15.0231, 0.91 ) }
    dend_47 { pt3dadd( 89.7565, 159.33, 15.3444, 0.23 ) }
    dend_47 { pt3dadd( 90.5425, 160.298, 15.5156, 0.45 ) }
    dend_47 { pt3dadd( 91.8801, 162.127, 15.8907, 0.68 ) }
    dend_47 { pt3dadd( 93.3873, 164.507, 16.4208, 0.45 ) }
    dend_47 { pt3dadd( 94.7118, 167.11, 17.0312, 0.45 ) }
    dend_47 { pt3dadd( 95.3722, 168.695, 17.4527, 0.45 ) }
    dend_47 { pt3dadd( 96.2064, 171.017, 18.1292, 0.45 ) }
    dend_47 { pt3dadd( 96.7498, 172.723, 18.6293, 0.45 ) }
    dend_47 { pt3dadd( 97.3298, 175.11, 19.3219, 0.45 ) }
    dend_47 { pt3dadd( 97.5871, 176.962, 19.8648, 0.45 ) }
    dend_47 { pt3dadd( 97.6263, 177.947, 20.1698, 0.45 ) }
    dend_47 { pt3dadd( 97.571, 179.798, 20.781, 0.45 ) }
    dend_47 { pt3dadd( 97.3697, 181.51, 21.3978, 0.45 ) }
    dend_47 { pt3dadd( 97.0648, 182.952, 21.9311, 0.45 ) }
    dend_47 { pt3dadd( 96.7489, 184.205, 22.4158, 0.45 ) }
    dend_47 { pt3dadd( 96.2056, 186.133, 23.177, 0.68 ) }
    dend_47 { pt3dadd( 95.6068, 188.139, 23.9539, 0.68 ) }
    dend_47 { pt3dadd( 94.7478, 191.02, 24.9727, 0.45 ) }
    dend_47 { pt3dadd( 94.0267, 193.61, 25.7612, 0.45 ) }
    dend_47 { pt3dadd( 93.5185, 195.877, 26.3601, 0.45 ) }
    dend_47 { pt3dadd( 93.2919, 197.391, 26.7303, 1.14 ) }
    dend_47 { pt3dadd( 93.0929, 199.584, 27.2168, 0.45 ) }
    dend_47 { pt3dadd( 92.9505, 202.548, 27.8108, 0.68 ) }
    dend_47 { pt3dadd( 92.913, 204.547, 28.1772, 0.91 ) }
    dend_47 { pt3dadd( 92.8943, 206.371, 28.5113, 0.45 ) }
    dend_47 { pt3dadd( 92.844, 208.557, 28.9059, 0.68 ) }
    dend_47 { pt3dadd( 92.8169, 209.8, 29.1514, 0.68 ) }
    dend_47 { pt3dadd( 92.759, 211.635, 29.5735, 0.45 ) }
    dend_47 { pt3dadd( 92.5994, 214.526, 30.347, 0.45 ) }
    dend_47 { pt3dadd( 92.3677, 216.375, 30.8705, 0.45 ) }
    dend_47 { pt3dadd( 92.0545, 217.881, 31.3083, 0.45 ) }
    dend_47 { pt3dadd( 91.692, 219.245, 31.6964, 0.68 ) }
    dend_47 { pt3dadd( 91.1247, 221.307, 32.3578, 0.45 ) }
    dend_47 { pt3dadd( 90.8103, 222.391, 32.7547, 0.91 ) }
    dend_47 { pt3dadd( 90.0778, 225.05, 33.8454, 0.23 ) }
    dend_47 { pt3dadd( 89.7337, 226.29, 34.3825, 0.45 ) }
    dend_47 { pt3dadd( 89.2099, 228.547, 35.3458, 0.23 ) }
    dend_47 { pt3dadd( 88.8979, 230.34, 36.0798, 0.23 ) }
    dend_47 { pt3dadd( 88.7223, 232.21, 36.8167, 1.14 ) }
    dend_47 { pt3dadd( 88.62, 234.959, 37.8636, 0.23 ) }
    dend_47 { pt3dadd( 88.6459, 236.73, 38.5027, 0.23 ) }
    dend_47 { pt3dadd( 88.7031, 239.37, 39.3924, 0.23 ) }
    dend_47 { pt3dadd( 88.7133, 241.028, 39.908, 0.91 ) }
    dend_47 { pt3dadd( 88.6484, 243.017, 40.4613, 0.23 ) }
    dend_47 { pt3dadd( 88.561, 244.437, 40.83, 0.23 ) }
    dend_47 { pt3dadd( 88.4382, 245.975, 41.2095, 0.23 ) }
    dend_47 { pt3dadd( 88.3478, 247.191, 41.5138, 0.91 ) }
    dend_47 { pt3dadd( 88.1877, 250.551, 42.3407, 0.23 ) }
    dend_47 { pt3dadd( 88.1734, 251.956, 42.7043, 0.68 ) }
    dend_47 { pt3dadd( 88.2096, 253.178, 43.0367, 0.23 ) }
    dend_47 { pt3dadd( 88.3262, 254.736, 43.4863, 0.23 ) }
    dend_47 { pt3dadd( 88.5212, 256.55, 44.0384, 0.68 ) }
    dend_47 { pt3dadd( 88.9072, 259.056, 44.8455, 0.91 ) }
    dend_47 { pt3dadd( 89.3545, 261.585, 45.6953, 0.23 ) }
    dend_47 { pt3dadd( 89.6114, 263.401, 46.3119, 0.91 ) }
    dend_47 { pt3dadd( 89.7923, 265.527, 47.0407, 0.23 ) }
    dend_47 { pt3dadd( 89.8514, 267.469, 47.6922, 0.91 ) }
    dend_47 { pt3dadd( 89.8759, 269.063, 48.2039, 0.23 ) }
    dend_47 { pt3dadd( 89.8984, 270.639, 48.6996, 0.68 ) }
    dend_47 { pt3dadd( 90.0658, 273.695, 49.5841, 0.45 ) }
    dend_47 { pt3dadd( 90.1217, 274.622, 49.848, 0.45 ) }
    dend_47 { pt3dadd( 90.2572, 276.94, 50.5128, 0.45 ) }
    dend_47 { pt3dadd( 90.3805, 279.126, 51.1277, 1.14 ) }
    dend_47 { pt3dadd( 90.6017, 282.254, 51.9831, 0.23 ) }
    dend_47 { pt3dadd( 90.879, 284.161, 52.5076, 0.23 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 12.5639, 11.9845, 6.94331, 0.91 ) }
    dend_45 { pt3dadd( 13.9156, 13.6867, 7.18407, 0.91 ) }
    dend_45 { pt3dadd( 14.815, 14.8495, 7.3614, 1.14 ) }
    dend_45 { pt3dadd( 16.2392, 16.7633, 7.67118, 0.45 ) }
    dend_45 { pt3dadd( 16.9342, 17.7451, 7.84347, 1.14 ) }
    dend_45 { pt3dadd( 17.9117, 19.1507, 8.15233, 0.68 ) }
    dend_45 { pt3dadd( 18.6959, 20.3177, 8.45372, 1.36 ) }
    dend_45 { pt3dadd( 19.3428, 21.3904, 8.77326, 0.91 ) }
    dend_45 { pt3dadd( 19.7924, 22.1845, 9.03574, 1.36 ) }
    dend_45 { pt3dadd( 20.7133, 23.8729, 9.63066, 0.68 ) }
    dend_45 { pt3dadd( 21.2765, 25.0244, 10.0184, 1.14 ) }
    dend_45 { pt3dadd( 21.7163, 26.0755, 10.3374, 0.23 ) }
    dend_45 { pt3dadd( 21.9108, 26.6238, 10.4851, 0.68 ) }
    dend_45 { pt3dadd( 22.1691, 27.3993, 10.6512, 0.23 ) }
    dend_45 { pt3dadd( 22.5489, 28.7451, 10.8376, 0.23 ) }
    dend_45 { pt3dadd( 22.6982, 29.383, 10.8774, 1.14 ) }
    dend_45 { pt3dadd( 22.9948, 30.8268, 10.9021, 0.23 ) }
    dend_45 { pt3dadd( 23.443, 32.7912, 10.9125, 1.36 ) }
    dend_45 { pt3dadd( 23.8108, 34.1834, 10.9262, 1.36 ) }
    dend_45 { pt3dadd( 24.2401, 35.5735, 10.9521, 0.23 ) }
    dend_45 { pt3dadd( 24.5068, 36.3463, 10.9671, 1.14 ) }
    dend_45 { pt3dadd( 24.8744, 37.2417, 10.9769, 1.14 ) }
    dend_45 { pt3dadd( 25.6575, 38.8464, 10.9762, 0.23 ) }
    dend_45 { pt3dadd( 26.2839, 39.9895, 10.984, 1.36 ) }
    dend_45 { pt3dadd( 26.7233, 40.8005, 10.9931, 1.36 ) }
    dend_45 { pt3dadd( 27.1671, 41.674, 10.9862, 0.23 ) }
    dend_45 { pt3dadd( 27.5998, 42.6488, 10.9877, 1.36 ) }
    dend_45 { pt3dadd( 27.7786, 43.1414, 10.9826, 1.36 ) }
    dend_45 { pt3dadd( 28.1562, 44.589, 10.9569, 0.45 ) }
    dend_45 { pt3dadd( 28.4394, 45.881, 10.9377, 1.14 ) }
    dend_45 { pt3dadd( 28.6474, 46.8863, 10.9248, 1.14 ) }
    dend_45 { pt3dadd( 29.0256, 48.467, 10.9374, 0.23 ) }
    dend_45 { pt3dadd( 29.2075, 49.0479, 10.9692, 1.14 ) }
    dend_45 { pt3dadd( 29.5041, 49.8271, 11.031, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 30.0324, 50.9441, 11.1489, 0.23 ) }
    dend_45 { pt3dadd( 30.1858, 51.2234, 11.1916, 0.23 ) }
    dend_45 { pt3dadd( 30.7751, 52.2203, 11.3622, 1.36 ) }
    dend_45 { pt3dadd( 31.6542, 53.5864, 11.6222, 0.45 ) }
    dend_45 { pt3dadd( 32.0961, 54.2484, 11.7868, 0.23 ) }
    dend_45 { pt3dadd( 32.7928, 55.3616, 12.061, 1.14 ) }
    dend_45 { pt3dadd( 33.3804, 56.348, 12.2908, 0.23 ) }
    dend_45 { pt3dadd( 33.9046, 57.2365, 12.4927, 1.14 ) }
    dend_45 { pt3dadd( 34.727, 58.5905, 12.8171, 0.23 ) }
    dend_45 { pt3dadd( 35.3765, 59.5755, 13.0697, 1.14 ) }
    dend_45 { pt3dadd( 36.4397, 61.0054, 13.5046, 0.23 ) }
    dend_45 { pt3dadd( 36.8278, 61.481, 13.6563, 0.23 ) }
    dend_45 { pt3dadd( 37.2445, 61.9556, 13.7986, 0.91 ) }
    dend_45 { pt3dadd( 37.9154, 62.6306, 14.0176, 0.23 ) }
    dend_45 { pt3dadd( 38.4031, 63.074, 14.1713, 0.91 ) }
    dend_45 { pt3dadd( 39.1073, 63.6456, 14.3892, 0.23 ) }
    dend_45 { pt3dadd( 39.8371, 64.1863, 14.6231, 1.14 ) }
    dend_45 { pt3dadd( 40.4922, 64.741, 14.8409, 1.14 ) }
    dend_45 { pt3dadd( 41.2494, 65.4582, 15.111, 0.23 ) }
    dend_45 { pt3dadd( 41.6148, 65.8365, 15.2399, 1.59 ) }
    dend_45 { pt3dadd( 42.0498, 66.3582, 15.3614, 1.59 ) }
    dend_45 { pt3dadd( 42.9558, 67.5761, 15.5415, 0.23 ) }
    dend_45 { pt3dadd( 43.5949, 68.4584, 15.6064, 0.91 ) }
    dend_45 { pt3dadd( 44.2145, 69.2733, 15.6205, 0.23 ) }
    dend_45 { pt3dadd( 44.8357, 69.9981, 15.6039, 1.14 ) }
    dend_45 { pt3dadd( 46.3618, 71.4534, 15.5509, 0.23 ) }
    dend_45 { pt3dadd( 46.8621, 71.8442, 15.54, 0.23 ) }
    dend_45 { pt3dadd( 48.0192, 72.6009, 15.522, 0.91 ) }
    dend_45 { pt3dadd( 49.334, 73.3181, 15.4935, 0.23 ) }
    dend_45 { pt3dadd( 50.8648, 74.0945, 15.4587, 0.23 ) }
    dend_45 { pt3dadd( 52.4974, 74.8895, 15.449, 0.91 ) }
    dend_45 { pt3dadd( 53.6528, 75.4939, 15.4435, 0.23 ) }
    dend_45 { pt3dadd( 54.4091, 75.9689, 15.416, 1.14 ) }
    dend_45 { pt3dadd( 55.4866, 76.8614, 15.318, 0.23 ) }
    dend_45 { pt3dadd( 56.1618, 77.6148, 15.1843, 0.23 ) }
    dend_45 { pt3dadd( 56.7331, 78.4552, 15.0025, 1.14 ) }
    dend_45 { pt3dadd( 57.7527, 80.2351, 14.6125, 0.23 ) }
    dend_45 { pt3dadd( 58.1886, 81.057, 14.4361, 0.23 ) }
    dend_45 { pt3dadd( 58.7751, 82.159, 14.2209, 0.68 ) }
    dend_45 { pt3dadd( 59.079, 82.7154, 14.1275, 0.23 ) }
    dend_45 { pt3dadd( 59.5743, 83.513, 14.0146, 0.91 ) }
    dend_45 { pt3dadd( 60.7619, 85.1676, 13.8171, 0.23 ) }
    dend_45 { pt3dadd( 61.1968, 85.6995, 13.7618, 1.14 ) }
    dend_45 { pt3dadd( 61.8594, 86.4978, 13.704, 0.23 ) }
    dend_45 { pt3dadd( 62.271, 86.9756, 13.6846, 0.91 ) }
    dend_45 { pt3dadd( 63.1773, 88.0494, 13.6798, 0.23 ) }
    dend_45 { pt3dadd( 63.9074, 88.9827, 13.7022, 0.91 ) }
    dend_45 { pt3dadd( 64.7376, 90.2049, 13.7499, 0.23 ) }
    dend_45 { pt3dadd( 65.5332, 91.5713, 13.8013, 0.68 ) }
    dend_45 { pt3dadd( 66.0751, 92.7298, 13.8066, 0.23 ) }
    dend_45 { pt3dadd( 66.4253, 93.6879, 13.7728, 0.91 ) }
    dend_45 { pt3dadd( 66.6779, 94.7193, 13.684, 0.23 ) }
    dend_45 { pt3dadd( 66.8385, 95.7874, 13.5443, 0.68 ) }
    dend_45 { pt3dadd( 66.9282, 96.8407, 13.3524, 0.23 ) }
    dend_45 { pt3dadd( 67.035, 98.6719, 12.9615, 0.23 ) }
    dend_45 { pt3dadd( 67.1013, 100.08, 12.6533, 0.68 ) }
    dend_45 { pt3dadd( 67.2271, 101.517, 12.3375, 0.23 ) }
    dend_45 { pt3dadd( 67.324, 102.185, 12.2026, 0.68 ) }
    dend_45 { pt3dadd( 67.5217, 103.183, 12.0552, 0.23 ) }
    dend_45 { pt3dadd( 67.7683, 104.149, 11.9737, 1.14 ) }
    dend_45 { pt3dadd( 67.9415, 104.768, 11.9714, 1.14 ) }
    dend_45 { pt3dadd( 68.2935, 105.923, 12.0041, 0.23 ) }
    dend_45 { pt3dadd( 68.5325, 106.723, 12.047, 0.68 ) }
    dend_45 { pt3dadd( 68.9255, 108.246, 12.1441, 0.23 ) }
    dend_45 { pt3dadd( 69.1097, 108.997, 12.2082, 0.91 ) }
    dend_45 { pt3dadd( 69.4346, 110.317, 12.3834, 0.23 ) }
    dend_45 { pt3dadd( 69.7988, 111.702, 12.6578, 0.91 ) }
    dend_45 { pt3dadd( 70.2283, 113.179, 13.0744, 0.23 ) }
    dend_45 { pt3dadd( 70.4413, 113.796, 13.2852, 1.14 ) }
    dend_45 { pt3dadd( 70.9019, 114.857, 13.7142, 0.23 ) }
    dend_45 { pt3dadd( 71.5319, 116.215, 14.2928, 0.23 ) }
    dend_45 { pt3dadd( 71.8544, 116.86, 14.5792, 1.14 ) }
    dend_45 { pt3dadd( 72.3012, 117.757, 14.9868, 0.23 ) }
    dend_45 { pt3dadd( 72.7302, 118.674, 15.3254, 0.68 ) }
    dend_45 { pt3dadd( 73.1079, 119.662, 15.568, 0.23 ) }
    dend_45 { pt3dadd( 73.3503, 120.496, 15.6811, 0.23 ) }
    dend_45 { pt3dadd( 73.6736, 121.704, 15.7462, 1.59 ) }
    dend_45 { pt3dadd( 74.1004, 123.408, 15.7945, 0.23 ) }
    dend_45 { pt3dadd( 74.4344, 124.809, 15.7948, 0.91 ) }
    dend_45 { pt3dadd( 74.7895, 126.419, 15.7779, 0.23 ) }
    dend_45 { pt3dadd( 75.0019, 127.341, 15.7682, 1.59 ) }
    dend_45 { pt3dadd( 75.4609, 129.022, 15.7707, 0.23 ) }
    dend_45 { pt3dadd( 75.5808, 129.371, 15.7722, 0.91 ) }
    dend_45 { pt3dadd( 75.8485, 129.954, 15.8085, 0.91 ) }
    dend_45 { pt3dadd( 76.8754, 131.585, 16.084, 0.23 ) }
    dend_45 { pt3dadd( 77.7981, 132.745, 16.3742, 0.91 ) }
    dend_45 { pt3dadd( 78.1151, 133.096, 16.4761, 0.91 ) }
    dend_45 { pt3dadd( 79.0444, 134.026, 16.7762, 0.23 ) }
    dend_45 { pt3dadd( 80.3139, 135.134, 17.0871, 0.68 ) }
    dend_45 { pt3dadd( 81.4183, 135.963, 17.2933, 0.23 ) }
    dend_45 { pt3dadd( 82.2722, 136.521, 17.4084, 1.14 ) }
    dend_45 { pt3dadd( 82.7074, 136.802, 17.4455, 1.14 ) }
    dend_45 { pt3dadd( 83.8123, 137.539, 17.5057, 0.23 ) }
    dend_45 { pt3dadd( 85.4248, 138.609, 17.5525, 0.23 ) }
    dend_45 { pt3dadd( 86.6325, 139.35, 17.571, 0.68 ) }
    dend_45 { pt3dadd( 87.9793, 140.051, 17.6168, 0.91 ) }
    dend_45 { pt3dadd( 89.5905, 140.736, 17.7143, 0.23 ) }
    dend_45 { pt3dadd( 90.3039, 141.019, 17.7629, 0.91 ) }
    dend_45 { pt3dadd( 91.2254, 141.348, 17.8366, 0.23 ) }
    dend_45 { pt3dadd( 92.0719, 141.623, 17.9524, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_45 { pt3dadd( 93.795, 142.052, 18.204, 0.23 ) }
    dend_45 { pt3dadd( 95.0632, 142.196, 18.4158, 0.23 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 2/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 12.5639, 11.9845, 6.94331, 0.68 ) }
    dend_42 { pt3dadd( 13.035, 13.0849, 7.22659, 0.68 ) }
    dend_42 { pt3dadd( 13.6514, 14.6886, 7.50671, 1.36 ) }
    dend_42 { pt3dadd( 14.1062, 15.9067, 7.70445, 1.36 ) }
    dend_42 { pt3dadd( 14.8449, 17.6553, 7.97143, 0.68 ) }
    dend_42 { pt3dadd( 15.8178, 19.7297, 8.34896, 0.68 ) }
    dend_42 { pt3dadd( 16.7302, 21.5938, 8.73413, 1.14 ) }
    dend_42 { pt3dadd( 18.0943, 24.2041, 9.36975, 1.14 ) }
    dend_42 { pt3dadd( 18.8448, 25.6483, 9.7937, 1.14 ) }
    dend_42 { pt3dadd( 20.0539, 28.1043, 10.5998, 0.45 ) }
    dend_42 { pt3dadd( 20.7855, 29.6988, 11.1779, 0.45 ) }
    dend_42 { pt3dadd( 21.7099, 31.6179, 11.9895, 1.14 ) }
    dend_42 { pt3dadd( 22.4384, 33.0832, 12.7347, 0.91 ) }
    dend_42 { pt3dadd( 23.0483, 34.4754, 13.5065, 0.91 ) }
    dend_42 { pt3dadd( 23.5045, 36.1704, 14.336, 0.45 ) }
    dend_42 { pt3dadd( 23.7253, 38.0219, 15.129, 0.45 ) }
    dend_42 { pt3dadd( 23.885, 40.3248, 15.9607, 0.45 ) }
    dend_42 { pt3dadd( 23.9863, 41.3963, 16.3516, 0.45 ) }
    dend_42 { pt3dadd( 24.2311, 43.8504, 17.2478, 0.91 ) }
    dend_42 { pt3dadd( 24.4956, 46.5551, 18.364, 0.68 ) }
    dend_42 { pt3dadd( 24.5699, 47.5567, 18.8017, 0.68 ) }
    dend_42 { pt3dadd( 24.6476, 49.846, 19.7225, 1.36 ) }
    dend_42 { pt3dadd( 24.795, 51.8222, 20.4906, 0.45 ) }
    dend_42 { pt3dadd( 25.053, 54.0671, 21.4185, 0.91 ) }
    dend_42 { pt3dadd( 25.4292, 56.2773, 22.3649, 0.45 ) }
    dend_42 { pt3dadd( 25.9467, 58.7504, 23.4286, 0.91 ) }
    dend_42 { pt3dadd( 26.4626, 61.1702, 24.4382, 1.14 ) }
    dend_42 { pt3dadd( 27.1711, 64.7145, 25.8399, 0.45 ) }
    dend_42 { pt3dadd( 27.7474, 67.5058, 26.9002, 0.45 ) }
    dend_42 { pt3dadd( 28.1662, 69.1646, 27.5363, 1.59 ) }
    dend_42 { pt3dadd( 28.6771, 71.1391, 28.3398, 0.23 ) }
    dend_42 { pt3dadd( 29.3221, 73.9683, 29.5855, 1.36 ) }
    dend_42 { pt3dadd( 29.83, 76.5706, 30.7506, 0.23 ) }
    dend_42 { pt3dadd( 30.1901, 78.9893, 31.7443, 0.23 ) }
    dend_42 { pt3dadd( 30.4419, 80.6219, 32.3881, 1.36 ) }
    dend_42 { pt3dadd( 30.9195, 84.0336, 33.737, 0.23 ) }
    dend_42 { pt3dadd( 31.2087, 86.155, 34.5531, 1.14 ) }
    dend_42 { pt3dadd( 31.3652, 87.395, 35.0152, 0.23 ) }
    dend_42 { pt3dadd( 31.6278, 89.2402, 35.7321, 0.91 ) }
    dend_42 { pt3dadd( 31.9243, 91.3956, 36.5461, 0.23 ) }
    dend_42 { pt3dadd( 32.1336, 93.107, 37.1506, 1.82 ) }
    dend_42 { pt3dadd( 32.3917, 95.3747, 37.8592, 0.23 ) }
    dend_42 { pt3dadd( 32.5991, 97.6497, 38.5774, 1.14 ) }
    dend_42 { pt3dadd( 32.7771, 99.744, 39.3247, 0.23 ) }
    dend_42 { pt3dadd( 32.9028, 101.3, 39.9019, 0.23 ) }
    dend_42 { pt3dadd( 33.0915, 104.307, 40.9384, 0.91 ) }
    dend_42 { pt3dadd( 33.173, 105.749, 41.4354, 0.91 ) }
    dend_42 { pt3dadd( 33.3517, 108.194, 42.2011, 0.23 ) }
    dend_42 { pt3dadd( 33.6325, 110.371, 42.8183, 1.14 ) }
    dend_42 { pt3dadd( 33.8661, 111.664, 43.1068, 1.14 ) }
    dend_42 { pt3dadd( 34.2934, 113.238, 43.4388, 0.23 ) }
    dend_42 { pt3dadd( 34.6862, 114.302, 43.627, 1.14 ) }
    dend_42 { pt3dadd( 35.2157, 115.594, 43.832, 1.14 ) }
    dend_42 { pt3dadd( 36.2761, 118.156, 44.1124, 0.23 ) }
    dend_42 { pt3dadd( 36.9776, 120.012, 44.2516, 0.23 ) }
    dend_42 { pt3dadd( 37.5942, 121.865, 44.4198, 1.14 ) }
    dend_42 { pt3dadd( 37.9488, 123.065, 44.5576, 1.14 ) }
    dend_42 { pt3dadd( 38.5394, 125.174, 44.8241, 0.23 ) }
    dend_42 { pt3dadd( 38.7766, 126.156, 44.9766, 0.23 ) }
    dend_42 { pt3dadd( 39.0783, 127.76, 45.3177, 0.23 ) }
    dend_42 { pt3dadd( 39.4662, 130.136, 46.0642, 1.36 ) }
    dend_42 { pt3dadd( 39.8618, 132.36, 46.8655, 0.23 ) }
    dend_42 { pt3dadd( 40.2503, 134.032, 47.5755, 0.68 ) }
    dend_42 { pt3dadd( 40.6217, 135.115, 48.1321, 0.23 ) }
    dend_42 { pt3dadd( 41.6469, 137.367, 49.5083, 1.14 ) }
    dend_42 { pt3dadd( 42.5064, 138.92, 50.6087, 0.23 ) }
    dend_42 { pt3dadd( 43.4729, 140.398, 51.7253, 1.14 ) }
    dend_42 { pt3dadd( 44.6056, 141.953, 52.9524, 0.23 ) }
    dend_42 { pt3dadd( 46.0472, 143.702, 54.3982, 1.14 ) }
    dend_42 { pt3dadd( 47.0646, 144.805, 55.2853, 0.23 ) }
    dend_42 { pt3dadd( 48.2074, 145.978, 56.1437, 1.14 ) }
    dend_42 { pt3dadd( 49.2918, 147.214, 56.9344, 0.23 ) }
    dend_42 { pt3dadd( 49.7206, 147.844, 57.2903, 0.23 ) }
    dend_42 { pt3dadd( 50.2704, 149.175, 57.8122, 0.23 ) }
    dend_42 { pt3dadd( 50.528, 150.091, 58.0463, 0.91 ) }
    dend_42 { pt3dadd( 50.7471, 151.038, 58.246, 0.91 ) }
    dend_42 { pt3dadd( 51.0642, 152.679, 58.5366, 0.91 ) }
    dend_42 { pt3dadd( 51.371, 155.072, 58.8976, 1.59 ) }
    dend_42 { pt3dadd( 51.6132, 157.962, 59.2281, 0.23 ) }
    dend_42 { pt3dadd( 51.7473, 159.907, 59.4047, 1.36 ) }
    dend_42 { pt3dadd( 52.0295, 162.306, 59.5124, 0.23 ) }
    dend_42 { pt3dadd( 52.2008, 163.275, 59.4929, 0.23 ) }
    dend_42 { pt3dadd( 52.6555, 165.039, 59.3257, 1.14 ) }
    dend_42 { pt3dadd( 53.2875, 166.899, 59.0027, 0.23 ) }
    dend_42 { pt3dadd( 53.8533, 168.352, 58.627, 1.14 ) }
    dend_42 { pt3dadd( 55.1888, 171.43, 57.7, 0.23 ) }
    dend_42 { pt3dadd( 55.8574, 172.854, 57.2237, 0.91 ) }
    dend_42 { pt3dadd( 56.9954, 175.117, 56.4806, 0.23 ) }
    dend_42 { pt3dadd( 57.7798, 176.605, 55.9977, 1.14 ) }
    dend_42 { pt3dadd( 58.3629, 177.836, 55.6112, 1.14 ) }
    dend_42 { pt3dadd( 59.124, 179.864, 55.0238, 0.23 ) }
    dend_42 { pt3dadd( 59.5783, 181.42, 54.6776, 0.91 ) }
    dend_42 { pt3dadd( 59.8469, 182.488, 54.5252, 0.91 ) }
    dend_42 { pt3dadd( 60.2105, 184.174, 54.3693, 0.23 ) }
    dend_42 { pt3dadd( 60.6151, 186.381, 54.2644, 0.23 ) }
    dend_42 { pt3dadd( 60.8412, 187.68, 54.2271, 0.23 ) }
    dend_42 { pt3dadd( 61.237, 189.925, 54.2028, 0.91 ) }
    dend_42 { pt3dadd( 61.8751, 192.79, 54.2326, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_42 { pt3dadd( 62.2947, 194.388, 54.2689, 0.68 ) }
    dend_42 { pt3dadd( 62.8633, 196.292, 54.3346, 0.91 ) }
    dend_42 { pt3dadd( 63.4531, 198.015, 54.3748, 0.23 ) }
    dend_42 { pt3dadd( 63.7842, 199.081, 54.3833, 0.68 ) }
    dend_42 { pt3dadd( 64.2589, 200.879, 54.3468, 0.23 ) }
    dend_42 { pt3dadd( 64.6633, 202.563, 54.2895, 0.68 ) }
    dend_42 { pt3dadd( 64.9003, 203.561, 54.2781, 0.23 ) }
    dend_42 { pt3dadd( 65.6681, 206.615, 54.3003, 0.91 ) }
    dend_42 { pt3dadd( 66.1519, 208.505, 54.329, 0.23 ) }
    dend_42 { pt3dadd( 66.5491, 210.126, 54.3447, 0.91 ) }
    dend_42 { pt3dadd( 66.9713, 211.947, 54.3593, 0.23 ) }
    dend_42 { pt3dadd( 67.56, 214.11, 54.3792, 1.14 ) }
    dend_42 { pt3dadd( 68.0367, 215.69, 54.4148, 0.23 ) }
    dend_42 { pt3dadd( 68.7228, 217.816, 54.4713, 1.14 ) }
    dend_42 { pt3dadd( 69.6612, 220.622, 54.5159, 0.23 ) }
    dend_42 { pt3dadd( 70.4523, 223.237, 54.5455, 0.45 ) }
    dend_42 { pt3dadd( 71.2855, 226.077, 54.5559, 0.91 ) }
    dend_42 { pt3dadd( 71.9483, 228.548, 54.5748, 0.23 ) }
    dend_42 { pt3dadd( 72.3518, 230.221, 54.5927, 0.91 ) }
    dend_42 { pt3dadd( 73.1052, 233.482, 54.6574, 0.23 ) }
    dend_42 { pt3dadd( 73.6749, 235.827, 54.7335, 1.14 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 21/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 12.1974, -31.7059, 9.15239, 1.59 ) }
    dend_17 { pt3dadd( 14.3892, -33.7778, 9.36327, 1.59 ) }
    dend_17 { pt3dadd( 16.9607, -36.2087, 9.6107, 1.59 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 12.1974, -31.7059, 9.15239, 0.23 ) }
    dend_16 { pt3dadd( 10.4124, -31.6683, 10.8133, 0.23 ) }
    dend_16 { pt3dadd( 9.354, -31.745, 11.6645, 0.91 ) }
    dend_16 { pt3dadd( 8.14309, -31.9437, 12.5001, 0.23 ) }
    dend_16 { pt3dadd( 6.99844, -32.21, 13.1842, 0.68 ) }
    dend_16 { pt3dadd( 5.82228, -32.5898, 13.8312, 0.68 ) }
    dend_16 { pt3dadd( 4.94039, -32.9516, 14.2802, 0.68 ) }
    dend_16 { pt3dadd( 3.74992, -33.6541, 14.7427, 0.23 ) }
    dend_16 { pt3dadd( 2.70491, -34.3671, 15.052, 0.68 ) }
    dend_16 { pt3dadd( 1.88933, -34.9647, 15.2281, 0.23 ) }
    dend_16 { pt3dadd( 0.664281, -35.9207, 15.4342, 0.68 ) }
    dend_16 { pt3dadd( -0.418615, -36.7686, 15.5779, 0.23 ) }
    dend_16 { pt3dadd( -0.926849, -37.1926, 15.6349, 0.91 ) }
    dend_16 { pt3dadd( -2.33626, -38.4793, 15.7718, 0.23 ) }
    dend_16 { pt3dadd( -3.18119, -39.2858, 15.8358, 0.91 ) }
    dend_16 { pt3dadd( -4.18001, -40.2953, 15.8844, 0.23 ) }
    dend_16 { pt3dadd( -4.9822, -41.163, 15.8953, 0.91 ) }
    dend_16 { pt3dadd( -5.98735, -42.3018, 15.8994, 0.23 ) }
    dend_16 { pt3dadd( -7.5926, -44.1727, 15.9382, 0.91 ) }
    dend_16 { pt3dadd( -9.34851, -46.3598, 16.0271, 0.23 ) }
    dend_16 { pt3dadd( -10.5735, -47.9496, 16.1316, 0.23 ) }
    dend_16 { pt3dadd( -11.6134, -49.3748, 16.2658, 0.91 ) }
    dend_16 { pt3dadd( -13.3053, -51.8367, 16.5511, 0.45 ) }
    dend_16 { pt3dadd( -14.6032, -53.8013, 16.8368, 0.45 ) }
    dend_16 { pt3dadd( -15.3238, -55.0242, 17.0592, 0.45 ) }
    dend_16 { pt3dadd( -16.002, -56.3281, 17.3292, 0.91 ) }
    dend_16 { pt3dadd( -16.7101, -57.8493, 17.6441, 0.45 ) }
    dend_16 { pt3dadd( -17.4287, -59.6136, 18.0026, 0.23 ) }
    dend_16 { pt3dadd( -17.7053, -60.4391, 18.1557, 0.68 ) }
    dend_16 { pt3dadd( -18.6164, -63.1936, 18.6179, 0.45 ) }
    dend_16 { pt3dadd( -19.5274, -65.5219, 18.992, 0.45 ) }
    dend_16 { pt3dadd( -20.0863, -66.7987, 19.1953, 0.45 ) }
    dend_16 { pt3dadd( -20.5493, -67.8265, 19.3525, 0.45 ) }
    dend_16 { pt3dadd( -21.6074, -70.2072, 19.7088, 0.68 ) }
    dend_16 { pt3dadd( -22.4641, -72.2776, 19.9884, 0.45 ) }
    dend_16 { pt3dadd( -23.2586, -74.493, 20.2502, 0.45 ) }
    dend_16 { pt3dadd( -23.8646, -76.4543, 20.4733, 0.23 ) }
    dend_16 { pt3dadd( -24.6608, -79.2522, 20.7847, 0.45 ) }
    dend_16 { pt3dadd( -25.4793, -82.4271, 21.1187, 0.23 ) }
    dend_16 { pt3dadd( -25.8847, -84.3065, 21.3053, 0.23 ) }
    dend_16 { pt3dadd( -26.2429, -86.3167, 21.4748, 0.68 ) }
    dend_16 { pt3dadd( -26.6782, -89.2841, 21.6535, 0.45 ) }
    dend_16 { pt3dadd( -27.1094, -92.0299, 21.7714, 0.68 ) }
    dend_16 { pt3dadd( -27.396, -93.4977, 21.8367, 0.68 ) }
    dend_16 { pt3dadd( -27.6052, -94.3542, 21.8787, 0.68 ) }
    dend_16 { pt3dadd( -28.5642, -97.6309, 22.0699, 0.23 ) }
    dend_16 { pt3dadd( -29.3679, -100.139, 22.2137, 0.45 ) }
    dend_16 { pt3dadd( -29.9965, -102.136, 22.3068, 0.45 ) }
    dend_16 { pt3dadd( -30.4387, -103.547, 22.3636, 0.45 ) }
    dend_16 { pt3dadd( -30.9541, -105.107, 22.4156, 0.23 ) }
    dend_16 { pt3dadd( -31.8688, -107.571, 22.5555, 0.23 ) }
    dend_16 { pt3dadd( -37.064, -115.451, 25.6667, 0.23 ) }
    dend_16 { pt3dadd( -41.9381, -123.612, 28.5906, 0.23 ) }
    dend_16 { pt3dadd( -47.7163, -130.982, 31.8671, 0.23 ) }
    dend_16 { pt3dadd( -54.6697, -137.501, 34.4996, 0.23 ) }
    dend_16 { pt3dadd( -61.8214, -142.824, 38.7161, 0.23 ) }
    dend_16 { pt3dadd( -68.8053, -149.373, 41.1877, 0.23 ) }
    dend_16 { pt3dadd( -76.3207, -155.568, 42.7818, 0.23 ) }
    dend_16 { pt3dadd( -84.644, -160.764, 43.4189, 0.23 ) }
    dend_16 { pt3dadd( -92.7998, -166.24, 43.9831, 0.23 ) }
    dend_16 { pt3dadd( -100.537, -172.152, 45.5354, 0.23 ) }
    dend_16 { pt3dadd( -108.282, -178.233, 45.3066, 0.23 ) }
    dend_16 { pt3dadd( -115.79, -184.53, 44.3131, 0.23 ) }
    dend_16 { pt3dadd( -122.993, -190.906, 42.2341, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 88/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -39.2671, 22.8148, 19.1575, 0.68 ) }
    dend_11 { pt3dadd( -38.0984, 24.3482, 19.42, 0.68 ) }
    dend_11 { pt3dadd( -36.616, 26.2932, 19.753, 0.23 ) }
    dend_11 { pt3dadd( -35.8704, 27.2716, 19.9204, 0.23 ) }
    dend_11 { pt3dadd( -34.7908, 28.6881, 20.1629, 0.23 ) }
    dend_11 { pt3dadd( -33.8235, 29.9573, 20.3802, 0.68 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 94/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -39.2671, 22.8148, 19.1575, 0.68 ) }
    dend_6 { pt3dadd( -40.1985, 23.7726, 19.2994, 0.68 ) }
    dend_6 { pt3dadd( -42.3806, 25.9536, 19.6066, 0.45 ) }
    dend_6 { pt3dadd( -43.1886, 26.6679, 19.7127, 0.45 ) }
    dend_6 { pt3dadd( -44.1266, 27.4399, 19.8374, 1.36 ) }
    dend_6 { pt3dadd( -45.2112, 28.3194, 19.9908, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( -45.7294, 28.7547, 20.0736, 0.23 ) }
    dend_6 { pt3dadd( -47.2492, 30.0383, 20.3828, 1.14 ) }
    dend_6 { pt3dadd( -48.5039, 31.0407, 20.6716, 0.23 ) }
    dend_6 { pt3dadd( -50.0152, 32.0851, 21.0138, 1.14 ) }
    dend_6 { pt3dadd( -51.4267, 32.901, 21.3443, 0.45 ) }
    dend_6 { pt3dadd( -52.7354, 33.543, 21.6776, 1.14 ) }
    dend_6 { pt3dadd( -54.0685, 34.1113, 22.0426, 0.23 ) }
    dend_6 { pt3dadd( -55.229, 34.5417, 22.39, 0.68 ) }
    dend_6 { pt3dadd( -56.8582, 35.0782, 22.8533, 0.68 ) }
    dend_6 { pt3dadd( -58.1118, 35.4096, 23.1415, 0.23 ) }
    dend_6 { pt3dadd( -59.4708, 35.7268, 23.3762, 0.23 ) }
    dend_6 { pt3dadd( -60.7286, 36.0079, 23.5338, 0.91 ) }
    dend_6 { pt3dadd( -61.6351, 36.2358, 23.5917, 0.23 ) }
    dend_6 { pt3dadd( -63.4359, 36.7672, 23.6205, 1.36 ) }
    dend_6 { pt3dadd( -65.2729, 37.3664, 23.5835, 0.23 ) }
    dend_6 { pt3dadd( -67.0102, 37.9531, 23.4846, 0.23 ) }
    dend_6 { pt3dadd( -67.8753, 38.2692, 23.4048, 0.68 ) }
    dend_6 { pt3dadd( -69.3408, 38.883, 23.2562, 1.36 ) }
    dend_6 { pt3dadd( -70.4676, 39.4634, 23.1518, 0.23 ) }
    dend_6 { pt3dadd( -71.106, 39.8602, 23.1272, 0.23 ) }
    dend_6 { pt3dadd( -71.7841, 40.413, 23.1579, 0.91 ) }
    dend_6 { pt3dadd( -72.8372, 41.3949, 23.295, 0.91 ) }
    dend_6 { pt3dadd( -73.714, 42.2596, 23.4689, 1.36 ) }
    dend_6 { pt3dadd( -75.0088, 43.5178, 23.8505, 0.23 ) }
    dend_6 { pt3dadd( -75.9567, 44.4323, 24.1733, 1.14 ) }
    dend_6 { pt3dadd( -77.2823, 45.7712, 24.6829, 0.23 ) }
    dend_6 { pt3dadd( -78.436, 46.9824, 25.1642, 0.91 ) }
    dend_6 { pt3dadd( -78.9252, 47.5132, 25.385, 0.91 ) }
    dend_6 { pt3dadd( -80.022, 48.6611, 25.8815, 0.23 ) }
    dend_6 { pt3dadd( -80.48, 49.1067, 26.0949, 0.23 ) }
    dend_6 { pt3dadd( -81.7764, 50.3124, 26.7074, 1.14 ) }
    dend_6 { pt3dadd( -82.3498, 50.8479, 26.9724, 0.23 ) }
    dend_6 { pt3dadd( -83.2653, 51.7107, 27.4144, 0.23 ) }
    dend_6 { pt3dadd( -84.251, 52.5507, 27.8787, 0.91 ) }
    dend_6 { pt3dadd( -85.9025, 53.7725, 28.5895, 0.23 ) }
    dend_6 { pt3dadd( -87.1941, 54.5552, 29.1151, 0.23 ) }
    dend_6 { pt3dadd( -88.6582, 55.3045, 29.6771, 0.91 ) }
    dend_6 { pt3dadd( -89.8782, 55.879, 30.1183, 0.23 ) }
    dend_6 { pt3dadd( -90.9898, 56.3517, 30.4743, 0.68 ) }
    dend_6 { pt3dadd( -92.2528, 56.8819, 30.8331, 0.23 ) }
    dend_6 { pt3dadd( -93.3334, 57.3153, 31.0868, 1.14 ) }
    dend_6 { pt3dadd( -95.2031, 58.0533, 31.4749, 0.23 ) }
    dend_6 { pt3dadd( -96.1169, 58.4194, 31.6462, 0.68 ) }
    dend_6 { pt3dadd( -97.5786, 59.0991, 31.8942, 0.23 ) }
    dend_6 { pt3dadd( -98.4274, 59.5642, 32.0388, 0.23 ) }
    dend_6 { pt3dadd( -99.7635, 60.3884, 32.2683, 0.23 ) }
    dend_6 { pt3dadd( -100.96, 61.194, 32.4959, 1.59 ) }
    dend_6 { pt3dadd( -102.348, 62.1832, 32.7746, 0.45 ) }
    dend_6 { pt3dadd( -103.356, 62.9817, 32.9873, 0.45 ) }
    dend_6 { pt3dadd( -103.873, 63.4428, 33.0975, 0.45 ) }
    dend_6 { pt3dadd( -105.469, 65.0368, 33.4439, 0.68 ) }
    dend_6 { pt3dadd( -106.701, 66.4722, 33.7122, 1.14 ) }
    dend_6 { pt3dadd( -107.845, 67.9014, 33.9212, 0.23 ) }
    dend_6 { pt3dadd( -108.831, 69.2446, 34.0602, 0.23 ) }
    dend_6 { pt3dadd( -109.478, 70.2063, 34.1269, 0.23 ) }
    dend_6 { pt3dadd( -110.309, 71.6046, 34.201, 0.91 ) }
    dend_6 { pt3dadd( -111.048, 73.0482, 34.2362, 0.23 ) }
    dend_6 { pt3dadd( -111.537, 74.0641, 34.2421, 0.91 ) }
    dend_6 { pt3dadd( -112.336, 75.7474, 34.2861, 0.23 ) }
    dend_6 { pt3dadd( -113.125, 77.2941, 34.358, 1.36 ) }
    dend_6 { pt3dadd( -113.809, 78.4925, 34.4334, 0.91 ) }
    dend_6 { pt3dadd( -114.709, 79.9748, 34.5342, 0.23 ) }
    dend_6 { pt3dadd( -115.303, 80.9848, 34.6047, 0.91 ) }
    dend_6 { pt3dadd( -115.914, 82.1292, 34.6901, 0.23 ) }
    dend_6 { pt3dadd( -116.171, 82.6509, 34.7179, 1.14 ) }
    dend_6 { pt3dadd( -116.615, 83.6931, 34.7255, 1.14 ) }
    dend_6 { pt3dadd( -117.102, 84.9905, 34.6821, 0.23 ) }
    dend_6 { pt3dadd( -117.461, 86.1999, 34.6394, 0.23 ) }
    dend_6 { pt3dadd( -117.539, 86.4822, 34.6284, 0.91 ) }
    dend_6 { pt3dadd( -117.891, 87.5838, 34.5928, 0.91 ) }
    dend_6 { pt3dadd( -118.222, 88.4524, 34.5829, 0.91 ) }
    dend_6 { pt3dadd( -119.04, 90.0978, 34.6199, 0.23 ) }
    dend_6 { pt3dadd( -119.477, 90.806, 34.6565, 0.23 ) }
    dend_6 { pt3dadd( -120.105, 91.6535, 34.719, 0.91 ) }
    dend_6 { pt3dadd( -121.201, 93.0248, 34.8472, 0.23 ) }
    dend_6 { pt3dadd( -121.961, 93.8845, 34.9453, 0.91 ) }
    dend_6 { pt3dadd( -123.234, 95.2232, 35.1303, 0.23 ) }
    dend_6 { pt3dadd( -123.574, 95.5625, 35.181, 0.91 ) }
    dend_6 { pt3dadd( -124.466, 96.4842, 35.3004, 0.91 ) }
    dend_6 { pt3dadd( -125.101, 97.2019, 35.3808, 0.45 ) }
    dend_6 { pt3dadd( -125.774, 98.1005, 35.4563, 0.23 ) }
    dend_6 { pt3dadd( -126.631, 99.4775, 35.5347, 0.23 ) }
    dend_6 { pt3dadd( -127.061, 100.239, 35.567, 0.68 ) }
    dend_6 { pt3dadd( -127.707, 101.427, 35.6109, 0.23 ) }
    dend_6 { pt3dadd( -128.499, 103.086, 35.6449, 0.23 ) }
    dend_6 { pt3dadd( -129.156, 104.564, 35.6397, 0.68 ) }
    dend_6 { pt3dadd( -129.531, 105.639, 35.6144, 0.68 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 87/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 152.147, 172.27, -3.37698, 0.23 ) }
    dend_54 { pt3dadd( 161.933, 178.636, -7.07277, 0.23 ) }
    dend_54 { pt3dadd( 169.875, 186.134, -12.7193, 0.23 ) }
    dend_54 { pt3dadd( 179.764, 192.888, -15.2902, 0.23 ) }
    dend_54 { pt3dadd( 190.875, 196.503, -18.7564, 0.23 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 92/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 152.147, 172.27, -3.37698, 0.23 ) }
    dend_53 { pt3dadd( 158.867, 184.669, 2.09004, 0.23 ) }
    dend_53 { pt3dadd( 167.066, 196.727, 6.05787, 0.23 ) }
    dend_53 { pt3dadd( 176.855, 206.578, 11.8169, 0.23 ) }
    dend_53 { pt3dadd( 187.547, 213.356, 19.7827, 0.23 ) }
    dend_53 { pt3dadd( 199.568, 218.59, 26.9249, 0.23 ) }
    dend_53 { pt3dadd( 210.633, 223.915, 35.4216, 0.23 ) }
    dend_53 { pt3dadd( 223.778, 226.679, 41.8812, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_53 { pt3dadd( 237.302, 227.131, 48.1162, 0.23 ) }
    dend_53 { pt3dadd( 250.447, 229.493, 54.7288, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 2/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 90.879, 284.161, 52.5076, 0.23 ) }
    dend_49 { pt3dadd( 90.9607, 286.418, 51.0422, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 4/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 90.879, 284.161, 52.5076, 0.23 ) }
    dend_48 { pt3dadd( 89.2413, 283.442, 53.4968, 0.23 ) }
    dend_48 { pt3dadd( 88.4226, 283.134, 54.0059, 0.23 ) }
    dend_48 { pt3dadd( 87.7001, 282.935, 54.4996, 0.23 ) }
    dend_48 { pt3dadd( 85.9086, 282.513, 55.8017, 0.23 ) }
    dend_48 { pt3dadd( 85.2198, 282.366, 56.2867, 1.14 ) }
    dend_48 { pt3dadd( 83.917, 282.101, 57.1473, 0.68 ) }
    dend_48 { pt3dadd( 83.1665, 281.926, 57.6168, 0.23 ) }
    dend_48 { pt3dadd( 81.8152, 281.585, 58.5016, 1.14 ) }
    dend_48 { pt3dadd( 80.1797, 281.121, 59.5911, 0.23 ) }
    dend_48 { pt3dadd( 79.1389, 280.816, 60.296, 0.23 ) }
    dend_48 { pt3dadd( 77.9195, 280.442, 61.0761, 0.45 ) }
    dend_48 { pt3dadd( 77.0683, 280.199, 61.5766, 0.23 ) }
    dend_48 { pt3dadd( 76.5456, 280.073, 61.8724, 0.68 ) }
    dend_48 { pt3dadd( 74.8266, 279.783, 62.7427, 0.23 ) }
    dend_48 { pt3dadd( 73.5084, 279.643, 63.3927, 0.23 ) }
    dend_48 { pt3dadd( 72.3166, 279.613, 64.007, 0.91 ) }
    dend_48 { pt3dadd( 71.0717, 279.761, 64.6241, 0.23 ) }
    dend_48 { pt3dadd( 70.2464, 280.002, 64.9693, 0.23 ) }
    dend_48 { pt3dadd( 69.1203, 280.567, 65.3998, 0.68 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 73.6749, 235.827, 54.7335, 0.23 ) }
    dend_44 { pt3dadd( 73.3199, 238.62, 55.6583, 0.23 ) }
    dend_44 { pt3dadd( 73.0614, 240.653, 56.3316, 1.14 ) }
    dend_44 { pt3dadd( 72.7949, 242.75, 57.0259, 0.23 ) }
    dend_44 { pt3dadd( 72.5532, 244.651, 57.6555, 0.68 ) }
    dend_44 { pt3dadd( 72.3014, 246.632, 58.3113, 0.23 ) }
    dend_44 { pt3dadd( 72.0369, 248.713, 59.0005, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 31/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 73.6749, 235.827, 54.7335, 0.23 ) }
    dend_43 { pt3dadd( 73.2181, 238.018, 54.5339, 0.23 ) }
    dend_43 { pt3dadd( 72.831, 239.539, 54.3935, 0.23 ) }
    dend_43 { pt3dadd( 72.3075, 241.43, 54.2221, 0.91 ) }
    dend_43 { pt3dadd( 71.9792, 242.515, 54.1243, 0.91 ) }
    dend_43 { pt3dadd( 71.4591, 244.113, 53.9802, 0.23 ) }
    dend_43 { pt3dadd( 70.8145, 246.072, 53.8037, 0.91 ) }
    dend_43 { pt3dadd( 70.2591, 247.768, 53.6263, 0.23 ) }
    dend_43 { pt3dadd( 70.0226, 248.6, 53.5158, 0.23 ) }
    dend_43 { pt3dadd( 69.6709, 249.832, 53.3207, 1.14 ) }
    dend_43 { pt3dadd( 69.1962, 251.554, 53.012, 0.23 ) }
    dend_43 { pt3dadd( 68.8327, 252.861, 52.738, 0.23 ) }
    dend_43 { pt3dadd( 68.4106, 254.547, 52.3503, 0.68 ) }
    dend_43 { pt3dadd( 68.0455, 256.252, 51.9469, 0.23 ) }
    dend_43 { pt3dadd( 67.8374, 257.272, 51.7081, 0.23 ) }
    dend_43 { pt3dadd( 67.6507, 258.189, 51.4992, 0.23 ) }
    dend_43 { pt3dadd( 67.3071, 260.056, 51.0602, 1.14 ) }
    dend_43 { pt3dadd( 67.0069, 261.685, 50.6851, 0.23 ) }
    dend_43 { pt3dadd( 66.6229, 263.838, 50.2266, 0.23 ) }
    dend_43 { pt3dadd( 66.4276, 265.215, 49.943, 0.23 ) }
    dend_43 { pt3dadd( 66.3853, 266.155, 49.7505, 0.91 ) }
    dend_43 { pt3dadd( 66.5467, 268.878, 49.2124, 0.23 ) }
    dend_43 { pt3dadd( 66.7556, 269.979, 49.0064, 1.14 ) }
    dend_43 { pt3dadd( 67.2098, 271.285, 48.7729, 1.14 ) }
    dend_43 { pt3dadd( 68.069, 272.987, 48.4999, 0.23 ) }
    dend_43 { pt3dadd( 69.1546, 274.739, 48.2565, 0.91 ) }
    dend_43 { pt3dadd( 70.1714, 276.185, 48.0722, 0.23 ) }
    dend_43 { pt3dadd( 71.126, 277.432, 47.9384, 0.23 ) }
    dend_43 { pt3dadd( 72.6443, 279.304, 47.7332, 0.45 ) }
    dend_43 { pt3dadd( 73.8929, 280.861, 47.5658, 0.45 ) }
    dend_43 { pt3dadd( 75.0323, 282.356, 47.4118, 0.23 ) }
    dend_43 { pt3dadd( 75.6213, 283.207, 47.3221, 0.45 ) }
    dend_43 { pt3dadd( 76.4328, 284.519, 47.2097, 0.23 ) }
    dend_43 { pt3dadd( 76.7596, 285.174, 47.1634, 0.91 ) }
    dend_43 { pt3dadd( 77.9389, 288.304, 47.036, 0.23 ) }
    dend_43 { pt3dadd( 78.2504, 289.328, 47.0199, 0.23 ) }
    dend_43 { pt3dadd( 78.7196, 291.164, 47.0239, 0.91 ) }
    dend_43 { pt3dadd( 79.1265, 293.06, 47.0531, 0.23 ) }
    dend_43 { pt3dadd( 79.5297, 295.171, 47.0885, 0.91 ) }
    dend_43 { pt3dadd( 79.9309, 297.515, 47.1226, 0.23 ) }
    dend_43 { pt3dadd( 80.1319, 299.061, 47.1416, 1.14 ) }
    dend_43 { pt3dadd( 80.3399, 301.196, 47.142, 0.23 ) }
    dend_43 { pt3dadd( 80.4012, 302.028, 47.112, 0.68 ) }
    dend_43 { pt3dadd( 80.4249, 303.807, 46.932, 0.91 ) }
    dend_43 { pt3dadd( 80.4194, 305.01, 46.7547, 0.23 ) }
    dend_43 { pt3dadd( 80.3293, 306.204, 46.5173, 0.23 ) }
    dend_43 { pt3dadd( 80.0962, 307.627, 46.2093, 1.14 ) }
    dend_43 { pt3dadd( 79.7687, 308.924, 45.918, 0.23 ) }
    dend_43 { pt3dadd( 78.9697, 311.653, 45.3113, 0.23 ) }
    dend_43 { pt3dadd( 78.7389, 312.473, 45.1228, 0.23 ) }
    dend_43 { pt3dadd( 78.4711, 313.607, 44.8379, 0.91 ) }
    dend_43 { pt3dadd( 78.1937, 315.46, 44.2481, 0.23 ) }
    dend_43 { pt3dadd( 78.0099, 317.028, 43.7386, 0.23 ) }
    dend_43 { pt3dadd( 77.9475, 317.83, 43.482, 0.23 ) }
    dend_43 { pt3dadd( 77.9527, 319.94, 42.7468, 0.91 ) }
    dend_43 { pt3dadd( 77.9637, 321.999, 41.9386, 0.23 ) }
    dend_43 { pt3dadd( 78.1212, 324.06, 40.9626, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 88/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 16.9607, -36.2087, 9.6107, 0.91 ) }
    dend_19 { pt3dadd( 17.9966, -38.9253, 9.58115, 0.91 ) }
    dend_19 { pt3dadd( 18.7169, -40.7755, 9.63866, 0.91 ) }
    dend_19 { pt3dadd( 19.4731, -42.6748, 9.73254, 0.91 ) }
    dend_19 { pt3dadd( 20.9356, -46.4077, 9.95881, 0.91 ) }
    dend_19 { pt3dadd( 22.1151, -49.1014, 10.1394, 0.91 ) }
    dend_19 { pt3dadd( 23.78, -52.573, 10.3695, 0.91 ) }
    dend_19 { pt3dadd( 24.8998, -54.7702, 10.4505, 0.91 ) }
    dend_19 { pt3dadd( 25.9595, -56.7138, 10.4679, 0.91 ) }
    dend_19 { pt3dadd( 27.7532, -59.9873, 10.4461, 1.14 ) }
    dend_19 { pt3dadd( 30.4003, -65.0563, 10.3704, 0.68 ) }
    dend_19 { pt3dadd( 32.4745, -69.1386, 10.2123, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_19 { pt3dadd( 34.8241, -73.9489, 9.92237, 0.68 ) }
    dend_19 { pt3dadd( 36.2133, -76.8914, 9.7122, 1.14 ) }
    dend_19 { pt3dadd( 37.6824, -80.1591, 9.47714, 0.68 ) }
    dend_19 { pt3dadd( 38.817, -82.992, 9.28619, 0.68 ) }
    dend_19 { pt3dadd( 39.2021, -84.2534, 9.22112, 1.14 ) }
    dend_19 { pt3dadd( 40.0852, -88.3567, 9.175, 0.68 ) }
    dend_19 { pt3dadd( 40.5873, -91.5553, 9.32143, 0.68 ) }
    dend_19 { pt3dadd( 40.8523, -93.1786, 9.38637, 0.68 ) }
    dend_19 { pt3dadd( 41.3059, -95.3556, 9.43309, 0.68 ) }
    dend_19 { pt3dadd( 42.0193, -98.2448, 9.51001, 1.14 ) }
    dend_19 { pt3dadd( 43.249, -103.007, 9.63841, 0.68 ) }
    dend_19 { pt3dadd( 44.3069, -106.968, 9.80308, 0.68 ) }
    dend_19 { pt3dadd( 45.4925, -110.623, 9.9803, 0.68 ) }
    dend_19 { pt3dadd( 47.2101, -114.634, 10.1377, 1.14 ) }
    dend_19 { pt3dadd( 48.4124, -116.815, 10.1708, 0.45 ) }
    dend_19 { pt3dadd( 49.6646, -118.734, 10.1259, 1.14 ) }
    dend_19 { pt3dadd( 51.116, -120.742, 9.9433, 0.45 ) }
    dend_19 { pt3dadd( 53.0192, -123.38, 9.52547, 0.45 ) }
    dend_19 { pt3dadd( 55.1033, -126.425, 8.94778, 0.45 ) }
    dend_19 { pt3dadd( 57.1316, -129.551, 8.2289, 0.45 ) }
    dend_19 { pt3dadd( 58.9046, -132.426, 7.48758, 0.45 ) }
    dend_19 { pt3dadd( 61.3043, -136.589, 6.46731, 0.68 ) }
    dend_19 { pt3dadd( 62.8694, -139.631, 5.86659, 0.68 ) }
    dend_19 { pt3dadd( 64.2516, -142.65, 5.53949, 0.68 ) }
    dend_19 { pt3dadd( 65.6642, -145.991, 5.42089, 0.68 ) }
    dend_19 { pt3dadd( 66.4008, -147.887, 5.48188, 0.68 ) }
    dend_19 { pt3dadd( 67.5312, -151.197, 5.80866, 0.91 ) }
    dend_19 { pt3dadd( 68.5648, -155.149, 6.43311, 0.45 ) }
    dend_19 { pt3dadd( 69.4237, -159.778, 7.29436, 0.68 ) }
    dend_19 { pt3dadd( 69.6423, -161.497, 7.59121, 0.68 ) }
    dend_19 { pt3dadd( 69.8634, -164.481, 8.04256, 0.68 ) }
    dend_19 { pt3dadd( 69.953, -167.526, 8.41424, 0.68 ) }
    dend_19 { pt3dadd( 69.9135, -171.586, 8.71045, 0.68 ) }
    dend_19 { pt3dadd( 69.8115, -174.545, 8.7993, 0.68 ) }
    dend_19 { pt3dadd( 69.6159, -177.909, 8.84241, 0.68 ) }
    dend_19 { pt3dadd( 69.4931, -180.224, 8.88615, 0.68 ) }
    dend_19 { pt3dadd( 69.399, -182.859, 8.90908, 0.91 ) }
    dend_19 { pt3dadd( 69.3688, -186.007, 8.90257, 0.68 ) }
    dend_19 { pt3dadd( 69.3723, -187.849, 8.86061, 0.23 ) }
    dend_19 { pt3dadd( 69.3503, -189.105, 8.84282, 0.23 ) }
    dend_19 { pt3dadd( 69.2932, -190.636, 8.86386, 0.23 ) }
    dend_19 { pt3dadd( 69.1868, -193.35, 8.93784, 0.45 ) }
    dend_19 { pt3dadd( 69.1051, -196.031, 9.04974, 0.45 ) }
    dend_19 { pt3dadd( 69.04, -199.618, 9.22928, 0.45 ) }
    dend_19 { pt3dadd( 69.0289, -202.342, 9.36988, 0.91 ) }
    dend_19 { pt3dadd( 69.0575, -206.283, 9.57989, 0.68 ) }
    dend_19 { pt3dadd( 69.0432, -208.591, 9.73862, 0.68 ) }
    dend_19 { pt3dadd( 68.8702, -211.953, 10.0704, 0.23 ) }
    dend_19 { pt3dadd( 68.709, -213.308, 10.2593, 0.23 ) }
    dend_19 { pt3dadd( 68.5313, -214.285, 10.4332, 0.23 ) }
    dend_19 { pt3dadd( 67.9029, -216.687, 10.9034, 0.23 ) }
    dend_19 { pt3dadd( 66.5807, -220.208, 11.6415, 0.45 ) }
    dend_19 { pt3dadd( 65.1289, -223.175, 12.2998, 0.45 ) }
    dend_19 { pt3dadd( 63.0571, -226.636, 13.0919, 0.45 ) }
    dend_19 { pt3dadd( 62.2165, -227.892, 13.3816, 0.23 ) }
    dend_19 { pt3dadd( 60.8686, -229.744, 13.84, 0.23 ) }
    dend_19 { pt3dadd( 59.4767, -231.51, 14.2973, 0.45 ) }
    dend_19 { pt3dadd( 57.4759, -233.91, 14.9251, 0.23 ) }
    dend_19 { pt3dadd( 54.5222, -237.628, 15.8132, 0.45 ) }
    dend_19 { pt3dadd( 52.7247, -240.076, 16.3819, 0.68 ) }
    dend_19 { pt3dadd( 51.2115, -242.386, 16.9229, 0.23 ) }
    dend_19 { pt3dadd( 50.4216, -243.821, 17.2546, 0.23 ) }
    dend_19 { pt3dadd( 49.7524, -245.362, 17.6198, 0.68 ) }
    dend_19 { pt3dadd( 48.7254, -248.603, 18.3281, 0.23 ) }
    dend_19 { pt3dadd( 48.2038, -251.136, 18.8059, 0.23 ) }
    dend_19 { pt3dadd( 47.8826, -253.357, 19.1472, 0.68 ) }
    dend_19 { pt3dadd( 47.5629, -255.952, 19.4736, 0.23 ) }
    dend_19 { pt3dadd( 47.1801, -259.488, 19.984, 0.23 ) }
    dend_19 { pt3dadd( 46.8181, -262.706, 20.5396, 0.68 ) }
    dend_19 { pt3dadd( 46.4701, -265.277, 21.0058, 0.45 ) }
    dend_19 { pt3dadd( 45.9869, -268.076, 21.4889, 0.68 ) }
    dend_19 { pt3dadd( 45.3195, -271.094, 22.012, 0.45 ) }
    dend_19 { pt3dadd( 44.618, -273.546, 22.4603, 0.23 ) }
    dend_19 { pt3dadd( 44.1089, -274.933, 22.7417, 0.23 ) }
    dend_19 { pt3dadd( 43.2503, -277.091, 23.2163, 0.45 ) }
    dend_19 { pt3dadd( 41.9645, -280.448, 24.0282, 0.45 ) }
    dend_19 { pt3dadd( 40.7746, -283.843, 24.8924, 0.45 ) }
    dend_19 { pt3dadd( 39.5643, -287.531, 25.8339, 0.45 ) }
    dend_19 { pt3dadd( 38.4544, -290.947, 26.649, 0.45 ) }
    dend_19 { pt3dadd( 37.8081, -293.112, 27.133, 0.45 ) }
    dend_19 { pt3dadd( 36.9486, -296.138, 27.7686, 0.45 ) }
    dend_19 { pt3dadd( 35.9997, -299.693, 28.3826, 0.45 ) }
    dend_19 { pt3dadd( 34.8561, -304.056, 29.0211, 0.91 ) }
    dend_19 { pt3dadd( 34.1845, -306.839, 29.387, 0.45 ) }
    dend_19 { pt3dadd( 33.7024, -309.031, 29.6721, 0.68 ) }
    dend_19 { pt3dadd( 32.8795, -313.069, 30.2143, 0.45 ) }
    dend_19 { pt3dadd( 32.4375, -315.381, 30.5359, 0.45 ) }
    dend_19 { pt3dadd( 31.9942, -318.109, 30.9646, 1.14 ) }
    dend_19 { pt3dadd( 31.5009, -321.596, 31.6003, 0.23 ) }
    dend_19 { pt3dadd( 31.1212, -324.417, 32.211, 0.23 ) }
    dend_19 { pt3dadd( 30.7784, -326.751, 32.7843, 0.23 ) }
    dend_19 { pt3dadd( 30.4351, -329.408, 33.4659, 0.45 ) }
    dend_19 { pt3dadd( 30.0982, -331.761, 33.9893, 0.68 ) }
    dend_19 { pt3dadd( 29.7707, -333.574, 34.2805, 0.45 ) }
    dend_19 { pt3dadd( 29.403, -335.243, 34.4484, 0.68 ) }
    dend_19 { pt3dadd( 29.1302, -336.557, 34.5342, 0.68 ) }
    dend_19 { pt3dadd( 28.8392, -338.175, 34.6113, 0.68 ) }
    dend_19 { pt3dadd( 28.3783, -341.247, 34.8185, 0.45 ) }
    dend_19 { pt3dadd( 27.9778, -344.546, 35.1098, 0.45 ) }
    dend_19 { pt3dadd( 27.7531, -346.785, 35.3746, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_19 { pt3dadd( 27.4418, -349.801, 35.8055, 0.91 ) }
    dend_19 { pt3dadd( 27.1161, -352.811, 36.2997, 0.23 ) }
    dend_19 { pt3dadd( 26.7162, -356.055, 36.9082, 0.68 ) }
    dend_19 { pt3dadd( 26.5511, -357.355, 37.1714, 0.68 ) }
    dend_19 { pt3dadd( 26.0918, -360.281, 37.7409, 0.23 ) }
    dend_19 { pt3dadd( 25.428, -362.9, 38.2166, 0.68 ) }
    dend_19 { pt3dadd( 24.6657, -364.7, 38.436, 0.23 ) }
    dend_19 { pt3dadd( 24.2505, -365.427, 38.4655, 0.68 ) }
    dend_19 { pt3dadd( 23.2741, -366.978, 38.3959, 0.23 ) }
    dend_19 { pt3dadd( 21.9066, -369.075, 38.2082, 0.68 ) }
    dend_19 { pt3dadd( 20.2915, -371.683, 37.873, 0.23 ) }
    dend_19 { pt3dadd( 18.9515, -374.238, 37.5409, 0.68 ) }
    dend_19 { pt3dadd( 17.7444, -377.133, 37.1599, 0.23 ) }
    dend_19 { pt3dadd( 17.2582, -379.049, 36.9037, 0.45 ) }
    dend_19 { pt3dadd( 17.0636, -381.772, 36.5495, 0.45 ) }
    dend_19 { pt3dadd( 17.2597, -384.093, 36.2555, 0.45 ) }
    dend_19 { pt3dadd( 17.7722, -386.992, 35.9366, 0.45 ) }
    dend_19 { pt3dadd( 18.1466, -388.537, 35.7875, 0.91 ) }
    dend_19 { pt3dadd( 18.9884, -391.619, 35.4427, 0.23 ) }
    dend_19 { pt3dadd( 19.7685, -394.674, 35.0983, 0.68 ) }
    dend_19 { pt3dadd( 20.5228, -398.231, 34.7102, 0.45 ) }
    dend_19 { pt3dadd( 20.9198, -401.151, 34.4244, 0.45 ) }
    dend_19 { pt3dadd( 21.0359, -403.306, 34.3063, 0.23 ) }
    dend_19 { pt3dadd( 20.9709, -405.241, 34.3115, 0.68 ) }
    dend_19 { pt3dadd( 20.641, -407.449, 34.4893, 0.23 ) }
    dend_19 { pt3dadd( 20.1289, -409.421, 34.8271, 0.23 ) }
    dend_19 { pt3dadd( 19.3679, -411.591, 35.3787, 0.23 ) }
    dend_19 { pt3dadd( 18.131, -414.427, 36.3389, 0.23 ) }
    dend_19 { pt3dadd( 17.1453, -416.298, 37.226, 0.23 ) }
    dend_19 { pt3dadd( 15.8128, -418.4, 38.69, 0.23 ) }
    dend_19 { pt3dadd( 14.6673, -420.12, 40.064, 0.23 ) }
    dend_19 { pt3dadd( 13.8778, -421.219, 41.0986, 0.23 ) }
    dend_19 { pt3dadd( 13.1364, -422.03, 42.0832, 0.68 ) }
    dend_19 { pt3dadd( 11.5841, -423.185, 44.1639, 0.23 ) }
    dend_19 { pt3dadd( 9.72618, -424.01, 46.8488, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 35/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.9607, -36.2087, 9.6107, 0.45 ) }
    dend_18 { pt3dadd( 16.4433, -37.9489, 8.2937, 0.45 ) }
    dend_18 { pt3dadd( 15.7091, -40.0276, 6.86996, 0.45 ) }
    dend_18 { pt3dadd( 15.1932, -41.4665, 6.0516, 0.45 ) }
    dend_18 { pt3dadd( 14.9033, -42.4823, 5.61399, 0.45 ) }
    dend_18 { pt3dadd( 14.4997, -44.1304, 5.08249, 0.45 ) }
    dend_18 { pt3dadd( 14.1815, -45.7311, 4.69747, 0.91 ) }
    dend_18 { pt3dadd( 13.9688, -46.9565, 4.53305, 0.68 ) }
    dend_18 { pt3dadd( 13.6503, -48.9224, 4.39812, 1.36 ) }
    dend_18 { pt3dadd( 13.336, -52.2581, 4.2695, 1.14 ) }
    dend_18 { pt3dadd( 13.2915, -54.9287, 4.1962, 0.45 ) }
    dend_18 { pt3dadd( 13.3971, -57.9126, 4.14644, 0.91 ) }
    dend_18 { pt3dadd( 13.5036, -59.9375, 4.13061, 0.45 ) }
    dend_18 { pt3dadd( 13.6918, -63.3646, 4.1499, 0.68 ) }
    dend_18 { pt3dadd( 13.9267, -66.559, 4.18598, 0.68 ) }
    dend_18 { pt3dadd( 14.1866, -69.2054, 4.23543, 0.68 ) }
    dend_18 { pt3dadd( 14.4974, -71.8354, 4.30071, 0.68 ) }
    dend_18 { pt3dadd( 14.8757, -75.1844, 4.43866, 0.68 ) }
    dend_18 { pt3dadd( 15.1178, -77.8119, 4.60073, 0.68 ) }
    dend_18 { pt3dadd( 15.3966, -81.9559, 4.87559, 0.45 ) }
    dend_18 { pt3dadd( 15.4735, -83.7952, 4.99318, 0.45 ) }
    dend_18 { pt3dadd( 15.5986, -86.1178, 5.11562, 0.68 ) }
    dend_18 { pt3dadd( 15.7421, -87.8626, 5.17497, 0.23 ) }
    dend_18 { pt3dadd( 16.0414, -90.3657, 5.19647, 0.91 ) }
    dend_18 { pt3dadd( 16.4535, -93.1757, 5.16911, 0.23 ) }
    dend_18 { pt3dadd( 16.7897, -95.1974, 5.11076, 0.68 ) }
    dend_18 { pt3dadd( 17.4183, -98.611, 4.9762, 0.91 ) }
    dend_18 { pt3dadd( 18.3209, -103.116, 4.69411, 0.91 ) }
    dend_18 { pt3dadd( 18.9354, -106.032, 4.44501, 0.91 ) }
    dend_18 { pt3dadd( 19.3312, -107.936, 4.30122, 0.23 ) }
    dend_18 { pt3dadd( 19.6689, -109.977, 4.20846, 0.68 ) }
    dend_18 { pt3dadd( 19.8659, -111.629, 4.16697, 0.68 ) }
    dend_18 { pt3dadd( 20.0675, -113.813, 4.16643, 0.23 ) }
    dend_18 { pt3dadd( 20.291, -115.863, 4.21233, 0.68 ) }
    dend_18 { pt3dadd( 20.6563, -119.044, 4.29698, 0.68 ) }
    dend_18 { pt3dadd( 20.9593, -122.022, 4.39228, 0.68 ) }
    dend_18 { pt3dadd( 21.1329, -123.679, 4.46099, 0.68 ) }
    dend_18 { pt3dadd( 21.3262, -125.334, 4.51802, 0.68 ) }
    dend_18 { pt3dadd( 21.6811, -128.183, 4.57128, 0.68 ) }
    dend_18 { pt3dadd( 22.0352, -131.393, 4.53771, 0.68 ) }
    dend_18 { pt3dadd( 22.3181, -134.915, 4.35715, 0.68 ) }
    dend_18 { pt3dadd( 22.4998, -137.856, 4.18027, 0.23 ) }
    dend_18 { pt3dadd( 22.5573, -139.401, 4.09682, 1.14 ) }
    dend_18 { pt3dadd( 22.5487, -141.603, 3.9795, 0.23 ) }
    dend_18 { pt3dadd( 22.4731, -142.947, 3.91644, 0.68 ) }
    dend_18 { pt3dadd( 22.2499, -146.281, 3.805, 0.23 ) }
    dend_18 { pt3dadd( 22.1492, -147.7, 3.75688, 0.23 ) }
    dend_18 { pt3dadd( 21.9264, -149.686, 3.67198, 0.23 ) }
    dend_18 { pt3dadd( 21.528, -152.228, 3.58468, 0.68 ) }
    dend_18 { pt3dadd( 20.997, -155.197, 3.49323, 0.68 ) }
    dend_18 { pt3dadd( 20.5898, -157.468, 3.3886, 0.23 ) }
    dend_18 { pt3dadd( 20.2563, -159.139, 3.29591, 0.91 ) }
    dend_18 { pt3dadd( 19.4779, -162.245, 3.08797, 0.91 ) }
    dend_18 { pt3dadd( 18.5292, -165.343, 2.95634, 0.23 ) }
    dend_18 { pt3dadd( 17.9506, -167.243, 2.94258, 0.68 ) }
    dend_18 { pt3dadd( 17.4321, -168.966, 2.97569, 0.23 ) }
    dend_18 { pt3dadd( 16.8522, -170.986, 3.0755, 0.68 ) }
    dend_18 { pt3dadd( 16.0819, -174.021, 3.33172, 0.91 ) }
    dend_18 { pt3dadd( 15.3665, -177.161, 3.70189, 0.45 ) }
    dend_18 { pt3dadd( 14.6159, -180.614, 4.07459, 0.45 ) }
    dend_18 { pt3dadd( 14.082, -182.858, 4.2918, 0.45 ) }
    dend_18 { pt3dadd( 13.5474, -185.124, 4.49621, 0.68 ) }
    dend_18 { pt3dadd( 12.6359, -189.7, 4.85136, 0.45 ) }
    dend_18 { pt3dadd( 12.1105, -192.712, 5.01812, 0.45 ) }
    dend_18 { pt3dadd( 11.4262, -196.554, 5.08333, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_18 { pt3dadd( 10.9278, -199.016, 5.07216, 0.45 ) }
    dend_18 { pt3dadd( 10.663, -200.41, 5.04049, 0.23 ) }
    dend_18 { pt3dadd( 10.2679, -202.616, 4.95346, 0.23 ) }
    dend_18 { pt3dadd( 10.0028, -204.513, 4.8674, 0.68 ) }
    dend_18 { pt3dadd( 9.76892, -206.555, 4.80487, 0.23 ) }
    dend_18 { pt3dadd( 9.58363, -207.846, 4.80938, 0.23 ) }
    dend_18 { pt3dadd( 9.16854, -210.117, 4.87974, 0.23 ) }
    dend_18 { pt3dadd( 8.70621, -212.179, 4.99085, 0.23 ) }
    dend_18 { pt3dadd( 8.15963, -214.801, 5.17928, 0.23 ) }
    dend_18 { pt3dadd( 7.88817, -216.214, 5.28438, 0.45 ) }
    dend_18 { pt3dadd( 7.28559, -219.433, 5.50788, 0.23 ) }
    dend_18 { pt3dadd( 6.68375, -222.374, 5.69109, 0.68 ) }
    dend_18 { pt3dadd( 5.71129, -226.882, 5.9433, 0.23 ) }
    dend_18 { pt3dadd( 4.97195, -230.138, 6.09225, 0.23 ) }
    dend_18 { pt3dadd( 4.55397, -231.896, 6.15638, 0.23 ) }
    dend_18 { pt3dadd( 4.21276, -233.592, 6.23063, 0.23 ) }
    dend_18 { pt3dadd( 3.76003, -236.238, 6.322, 0.45 ) }
    dend_18 { pt3dadd( 3.54123, -237.244, 6.34781, 0.68 ) }
    dend_18 { pt3dadd( 2.98919, -238.862, 6.39937, 0.23 ) }
    dend_18 { pt3dadd( 2.56107, -239.753, 6.45525, 0.23 ) }
    dend_18 { pt3dadd( 1.76275, -241.511, 6.68879, 0.23 ) }
    dend_18 { pt3dadd( 2.4947, -252.966, 5.80342, 0.23 ) }
    dend_18 { pt3dadd( 3.4964, -264.431, 5.49573, 0.23 ) }
    dend_18 { pt3dadd( 5.09713, -275.756, 6.79225, 0.23 ) }
    dend_18 { pt3dadd( 7.23969, -286.938, 8.43817, 0.23 ) }
    dend_18 { pt3dadd( 8.10802, -298.024, 11.3995, 0.23 ) }
    dend_18 { pt3dadd( 8.25786, -309.501, 12.4019, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 27/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -129.531, 105.639, 35.6144, 0.45 ) }
    dend_8 { pt3dadd( -130.493, 106.54, 35.7348, 0.45 ) }
    dend_8 { pt3dadd( -131.054, 107.02, 35.7936, 0.68 ) }
    dend_8 { pt3dadd( -132.118, 107.852, 35.9033, 0.45 ) }
    dend_8 { pt3dadd( -133.062, 108.552, 35.9645, 0.23 ) }
    dend_8 { pt3dadd( -134.048, 109.23, 36.0112, 0.68 ) }
    dend_8 { pt3dadd( -135.127, 109.912, 36.0527, 0.23 ) }
    dend_8 { pt3dadd( -135.895, 110.332, 36.0751, 0.23 ) }
    dend_8 { pt3dadd( -136.859, 110.809, 36.0956, 0.45 ) }
    dend_8 { pt3dadd( -138.011, 111.341, 36.0905, 0.23 ) }
    dend_8 { pt3dadd( -138.887, 111.74, 36.0774, 0.23 ) }
    dend_8 { pt3dadd( -140.08, 112.283, 36.0408, 0.91 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 39/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -129.531, 105.639, 35.6144, 0.23 ) }
    dend_7 { pt3dadd( -127.846, 107.1, 35.9785, 0.23 ) }
    dend_7 { pt3dadd( -127.002, 108.01, 36.1692, 0.91 ) }
    dend_7 { pt3dadd( -125.813, 109.727, 36.4618, 0.68 ) }
    dend_7 { pt3dadd( -124.067, 112.248, 36.8914, 0.23 ) }
    dend_7 { pt3dadd( -123.239, 113.444, 37.0953, 0.68 ) }
    dend_7 { pt3dadd( -120.765, 117.016, 37.7041, 0.23 ) }
    dend_7 { pt3dadd( -119.065, 119.88, 38.0457, 0.23 ) }
    dend_7 { pt3dadd( -117.273, 123.362, 38.3535, 0.23 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 48/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 90.9607, 286.418, 51.0422, 0.23 ) }
    dend_51 { pt3dadd( 92.2033, 287.807, 51.0443, 0.23 ) }
    dend_51 { pt3dadd( 93.4509, 289.201, 51.0464, 0.23 ) }
    dend_51 { pt3dadd( 94.3941, 290.256, 51.048, 0.23 ) }
    dend_51 { pt3dadd( 95.2644, 291.229, 51.0494, 0.23 ) }
    dend_51 { pt3dadd( 96.3381, 292.429, 51.0513, 0.23 ) }
    dend_51 { pt3dadd( 98.0928, 294.391, 51.0542, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 55/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 90.9607, 286.418, 51.0422, 0.23 ) }
    dend_50 { pt3dadd( 89.7815, 287.7, 51.2555, 0.23 ) }
    dend_50 { pt3dadd( 88.7883, 288.891, 51.46, 0.68 ) }
    dend_50 { pt3dadd( 87.2632, 290.877, 51.7881, 0.23 ) }
    dend_50 { pt3dadd( 86.338, 292.214, 51.9857, 0.91 ) }
    dend_50 { pt3dadd( 84.5629, 294.965, 52.3605, 0.45 ) }
    dend_50 { pt3dadd( 82.7096, 298.081, 52.7584, 0.23 ) }
    dend_50 { pt3dadd( 82.0804, 299.36, 52.8767, 0.23 ) }
    dend_50 { pt3dadd( 81.1546, 301.436, 52.9706, 0.23 ) }
    dend_50 { pt3dadd( 80.3804, 303.522, 52.9758, 1.14 ) }
    dend_50 { pt3dadd( 79.8012, 305.34, 52.9305, 0.23 ) }
    dend_50 { pt3dadd( 79.1341, 307.737, 52.716, 0.23 ) }
    dend_50 { pt3dadd( 78.4116, 310.759, 52.3415, 0.91 ) }
    dend_50 { pt3dadd( 77.7882, 313.35, 51.9538, 0.23 ) }
    dend_50 { pt3dadd( 77.2028, 315.936, 51.4931, 0.23 ) }
    dend_50 { pt3dadd( 76.6697, 318.308, 50.9966, 0.23 ) }
    dend_50 { pt3dadd( 76.2732, 320.304, 50.4918, 0.23 ) }
    dend_50 { pt3dadd( 72.9925, 332.205, 51.0899, 0.23 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 73/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -140.08, 112.283, 36.0408, 0.23 ) }
    dend_10 { pt3dadd( -141.64, 111.254, 35.2576, 0.23 ) }
    dend_10 { pt3dadd( -142.754, 110.759, 34.7544, 0.23 ) }
    dend_10 { pt3dadd( -144.951, 109.784, 33.7616, 0.68 ) }
    dend_10 { pt3dadd( -146.899, 108.918, 32.8809, 0.23 ) }
    dend_10 { pt3dadd( -148.631, 108.149, 32.0982, 0.23 ) }
    dend_10 { pt3dadd( -150.146, 107.477, 31.4137, 0.23 ) }
    dend_10 { pt3dadd( -151.825, 106.705, 30.6017, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 81/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -140.08, 112.283, 36.0408, 0.23 ) }
    dend_9 { pt3dadd( -141.506, 113.737, 36.3549, 0.23 ) }
    dend_9 { pt3dadd( -142.927, 115.186, 36.6679, 0.68 ) }
    dend_9 { pt3dadd( -144.009, 116.291, 36.9064, 0.91 ) }
    dend_9 { pt3dadd( -145.343, 117.651, 37.2003, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_39 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_37 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_29 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_28 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_22 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_12 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_2 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_47 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_42 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_54 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_53 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_43 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_19 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_18 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_50 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_40 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_30 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_13 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_41 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_46 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_21 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_15 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_5 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_25 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_26 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_9 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_44 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_49 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_48 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_24 nseg = 9
    dend_39 nseg = 11
    dend_37 nseg = 5
    dend_36 nseg = 7
    dend_34 nseg = 9
    dend_31 nseg = 3
    dend_29 nseg = 9
    dend_28 nseg = 5
    dend_33 nseg = 5
    dend_23 nseg = 5
    dend_22 nseg = 5
    dend_20 nseg = 11
    dend_12 nseg = 5
    dend_3 nseg = 5
    dend_2 nseg = 5
    dend_52 nseg = 11
    dend_47 nseg = 15
    dend_45 nseg = 9
    dend_42 nseg = 13
    dend_16 nseg = 11
    dend_6 nseg = 7
    dend_54 nseg = 3
    dend_53 nseg = 7
    dend_43 nseg = 5
    dend_19 nseg = 21
    dend_18 nseg = 13
    dend_50 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_NBC_0871cd68c5_0_0


