// Cell: bNAC219_L23_SBC_da4a711a61_0_0
/*
{
  "id" : "bNAC219_L23_SBC_da4a711a61_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.25508, -13.4521, 2.42889, 2.61101", "-1.17194, -12.2461, 2.20976, 4.55022", "-1.0888, -11.04, 1.99062, 6.58753", "-1.00566, -9.83393, 1.77148, 7.73381", "-0.922515, -8.62787, 1.55235, 8.55635", "-0.839375, -7.42181, 1.33321, 9.12633", "-0.756234, -6.21574, 1.11408, 9.69574", "-0.673093, -5.00968, 0.894941, 10.2984", "-0.589953, -3.80361, 0.675805, 11.0621", "-0.506812, -2.59755, 0.456669, 11.9272", "-0.423672, -1.39149, 0.237533, 12.7888", "-0.340531, -0.185422, 0.0183969, 13.0953", "-0.25739, 1.02064, -0.200739, 13.3342", "-0.17425, 2.22671, -0.419875, 13.2437", "-0.0911092, 3.43277, -0.639011, 12.9712", "-0.00796856, 4.63883, -0.858147, 11.9671", "0.0751721, 5.8449, -1.07728, 9.81972", "0.158313, 7.05096, -1.29642, 7.58985", "0.241453, 8.25703, -1.51556, 5.99858", "0.324594, 9.46309, -1.73469, 4.47562", "0.407735, 10.6692, -1.95383, 2.65929" ]
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.78468, -0.87652, -9.66877, 1.39", "-2.04411, -2.27926, -13.5, 1.39", "-2.17614, -3.32861, -16.141, 1.39", "-2.39954, -5.10411, -20.6096, 1.39", "-2.781, -8.13583, -28.2399, 0.83", "-2.86079, -8.76994, -29.8358, 0.83", "-2.94653, -9.45143, -31.551, 0.83", "-2.97022, -10.1429, -33.2756, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999983816635283
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.35468, 9.28348, -0.168775, 1.11", "-3.8588, 11.2597, -0.429238, 1.11", "-4.93558, 12.6744, -0.615701, 0.83", "-5.25749, 13.0973, -0.671445, 0.83", "-6.19118, 14.324, -0.833128, 0.83", "-7.50671, 16.0524, -1.06093, 1.11", "-8.32795, 17.1313, -1.20314, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999983816635283
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-7.50468, 0.813481, -2.02877, 1.11", "-9.27526, -0.19067, -2.48521, 1.11", "-12.7597, -2.16677, -3.38345, 1.11", "-14.9554, -3.41204, -3.94949, 1.11", "-18.1458, -5.22142, -4.77195, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999983816635283
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.78468, -12.1365, 0.191225, 1.11", "-3.03096, -13.6248, -0.374676, 1.11", "-3.47645, -16.317, -1.39832, 1.11", "-4.2416, -20.9409, -3.15648, 1.11", "-4.70139, -23.7194, -4.21296, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999983816635283
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "0.935323, -10.8265, -8.86877, 0.83", "1.02598, -10.8915, -9.98511, 0.83", "1.29378, -10.9372, -12.537, 0.83", "1.46941, -10.9697, -13.8457, 0.83", "2.59291, -11.2775, -21.6521, 0.83", "3.64024, -11.5645, -28.9292, 0.83", "5.21843, -11.9969, -39.8949, 0.83", "6.04003, -12.0987, -45.5884, 0.83", "6.9899, -12.0517, -51.9185, 0.55", "7.78731, -11.9533, -57.0795, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999983816635283,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.42532, 3.42348, -6.61877, 1.11", "9.34424, 4.78796, -7.17748, 1.11", "12.9217, 6.46028, -7.86224, 1.11", "15.6125, 7.71813, -8.37729, 1.11", "17.7031, 8.69543, -8.77746, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999983816635283
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.135322, 10.4435, -3.09877, 1.94", "1.75492, 12.368, -2.508, 1.94", "4.41232, 15.5256, -1.53867, 0.83", "7.71178, 19.4461, -0.335133, 0.83", "11.125, 23.5018, 0.909901, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999983816635283
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.407735, 10.6692, -1.95383, 0.83", "1.43932, 25.6337, -1.95383, 0.83", "2.4709, 40.5982, -1.95383, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-2.97022, -10.1429, -33.2756, 0.83", "-2.75323, -11.9299, -33.1133, 0.83", "-2.53552, -13.5824, -32.8887, 0.83", "-2.37998, -15.0649, -32.6111, 0.83", "-2.14849, -17.2713, -32.1979, 0.83", "-1.83287, -20.2796, -31.6347, 0.83", "-1.60182, -22.4818, -31.2223, 0.83", "-1.46329, -23.8507, -30.8894, 0.83", "-1.25491, -25.9689, -30.2357, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.97022, -10.1429, -33.2756, 0.83", "-2.24341, -9.98179, -35.3653, 0.83", "-0.387268, -9.57039, -40.702, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-8.32795, 17.1313, -1.20314, 0.55", "-9.32423, 20.5479, -0.39092, 0.55", "-9.96321, 22.7039, 0.116878, 0.55", "-12.2297, 29.6604, 1.62392, 0.55", "-14.2614, 35.8968, 2.97495, 0.55", "-17.933, 47.1664, 5.41636, 0.55", "-18.885, 50.0884, 6.04938, 0.55", "-19.9336, 53.2002, 6.84667, 0.55", "-21.2649, 56.8707, 7.90591, 0.55", "-23.6976, 66.905, 11.4025, 0.55", "-26.0478, 76.8663, 15.1552, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.32795, 17.1313, -1.20314, 0.83", "-9.55172, 18.1273, 0.178224, 0.83", "-10.7542, 19.4853, 1.57922, 0.83", "-12.1078, 21.3148, 3.22865, 0.83", "-12.9845, 22.8207, 4.46004, 0.83", "-14.4074, 25.6094, 6.60615, 0.83", "-15.0383, 26.8457, 7.55759, 0.83", "-16.2007, 29.6299, 9.42467, 0.55", "-16.3783, 30.2239, 9.78951, 0.55", "-17.0278, 33.3759, 11.4401, 0.55", "-17.074, 33.7278, 11.5991, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-18.1458, -5.22142, -4.77195, 1.11", "-20.2461, -10.1117, -10.5541, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-18.1458, -5.22142, -4.77195, 0.55", "-21.3701, -4.72582, -5.66761, 0.55", "-24.8285, -4.19425, -6.62827, 0.55", "-27.8111, -3.73581, -7.45678, 0.55", "-29.6084, -3.45956, -7.95603, 0.28", "-32.657, -2.99096, -8.80289, 0.83", "-37.9763, -2.17336, -10.2805, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.70139, -23.7194, -4.21296, 1.11", "-4.64394, -26.1462, -3.21819, 1.11", "-4.52715, -31.0797, -1.19591, 0.83", "-4.40516, -36.2331, 0.916525, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.70139, -23.7194, -4.21296, 0.83", "-6.16326, -26.1365, -4.12087, 0.83", "-7.34155, -27.4828, -3.88016, 0.83", "-9.05838, -28.9622, -3.52997, 0.83", "-12.9286, -31.607, -2.82154, 0.83", "-14.4467, -32.39, -2.47567, 0.83", "-19.6604, -34.5952, -0.85506, 0.83", "-24.4733, -36.1248, 1.02207, 0.55", "-28.2482, -36.9825, 2.70663, 0.55", "-31.375, -37.2798, 4.33031, 0.55", "-36.998, -37.1524, 7.65187, 0.55", "-41.3867, -36.8456, 10.3112, 0.55", "-43.4046, -36.5847, 11.5927, 0.28", "-45.5277, -36.1794, 13.2171, 0.28", "-50.2225, -35.032, 17.399, 0.28", "-53.4834, -34.0836, 20.6697, 0.28", "-61.574, -36.7987, 26.4574, 0.28", "-69.1642, -39.3617, 32.9495, 0.28" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "7.78731, -11.9533, -57.0795, 0.55", "11.7925, -13.1176, -52.3888, 0.55", "15.6026, -14.302, -47.0983, 0.55", "19.5227, -15.6781, -40.4746, 0.55", "20.4741, -16.006, -38.5824, 0.55", "22.3463, -16.6306, -34.5104, 0.55", "24.6581, -17.4441, -29.254, 0.55", "27.4014, -18.5821, -22.4086, 0.55", "30.2468, -19.945, -14.7045, 0.55", "34.2095, -21.8336, -3.52438, 0.55", "36.0894, -22.721, 1.97096, 0.55", "38.3167, -23.7322, 8.5871, 0.55", "39.1881, -24.151, 11.3425, 0.55", "39.6682, -24.4172, 12.8965, 0.83", "43.3872, -26.5396, 24.876, 0.28", "44.7368, -27.3871, 29.3792, 0.55", "45.5674, -27.9082, 32.2638, 0.83", "48.1014, -29.3688, 41.776, 0.28", "49.6644, -30.2022, 47.9597, 0.83", "55.6076, -31.2076, 58.1783, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "7.78731, -11.9533, -57.0795, 0.55", "7.20408, -12.4183, -58.8643, 0.55", "6.22823, -13.2882, -62.202, 0.55", "5.10013, -14.3665, -66.2242, 0.55", "4.14919, -15.385, -69.8097, 0.55", "3.17518, -16.5327, -73.6217, 1.11", "1.35656, -19.0804, -81.4734, 0.55", "0.600444, -20.3819, -85.1826, 0.28", "0.407609, -20.8602, -86.4083, 0.83", "0.108275, -22.1789, -89.3843, 0.28", "0.0805202, -22.5675, -90.1401, 0.55", "0.182333, -24.2233, -92.4408, 0.28", "0.334183, -25.48, -93.5991, 0.55", "0.476649, -27.1069, -94.9591, 0.28", "0.458205, -27.5063, -95.2662, 0.83", "0.315171, -28.4201, -95.915, 0.28", "0.16484, -28.9969, -96.3339, 0.55", "-1.0321, -32.5544, -98.8611, 0.28", "-1.22266, -33.0812, -99.2364, 0.83", "-2.79848, -37.2343, -101.858, 0.28", "-3.05505, -37.9525, -102.308, 0.83", "-3.6001, -39.7011, -103.419, 0.28", "-3.71324, -40.2205, -103.746, 0.55", "-3.75656, -41.0197, -104.175, 0.28", "-3.60544, -42.248, -104.84, 0.83", "-2.9591, -44.0716, -105.793, 0.28", "-1.98085, -46.3306, -106.989, 0.55", "-1.12971, -47.9646, -107.822, 0.55", "-0.29233, -49.4891, -108.618, 0.55", "0.705076, -51.1688, -109.458, 0.55", "1.02318, -51.6859, -109.713, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "17.7031, 8.69543, -8.77746, 0.83", "20.1843, 9.07223, -10.9323, 0.83", "23.4998, 9.57574, -13.8116, 0.83", "26.3798, 10.0131, -16.3128, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "17.7031, 8.69543, -8.77746, 0.83", "19.6253, 10.1729, -13.0686, 0.83", "20.2839, 10.6864, -14.675, 0.83", "22.8096, 12.8999, -21.158, 0.83", "24.6041, 14.5718, -25.7869, 0.83", "26.6826, 16.7393, -31.4738, 0.83", "29.0804, 19.3727, -38.0925, 0.83", "30.2776, 20.7469, -41.4985, 0.83", "31.9889, 22.9474, -46.6794, 0.55", "32.8336, 24.0949, -49.3012, 0.83", "35.5425, 28.1556, -57.8048, 0.28", "35.9314, 28.7921, -59.01, 0.28", "36.7496, 30.1251, -61.3403, 1.11", "38.7921, 33.3986, -67.1537, 0.28", "39.3372, 34.219, -68.732, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "11.125, 23.5018, 0.909901, 0.55", "13.9646, 24.9141, 1.81721, 0.55", "15.4606, 25.6099, 2.39467, 0.55", "17.6616, 26.5751, 3.26163, 0.55", "19.7794, 27.3755, 4.09508, 0.55", "23.8349, 28.6175, 5.4998, 0.83", "25.6921, 29.1087, 6.0478, 0.83", "28.6521, 29.8094, 6.50791, 0.28", "29.5813, 29.9404, 6.50489, 0.83", "32.8155, 30.0479, 5.81767, 0.55", "35.8484, 29.8483, 4.4443, 0.55", "37.2625, 29.681, 3.41909, 1.11", "41.2876, 29.1794, -0.356779, 0.55", "44.1913, 28.9185, -4.15208, 0.55", "45.9408, 28.8631, -7.02361, 0.28", "47.4247, 29.0011, -10.3509, 0.55", "48.6902, 29.2436, -13.5204, 0.28", "50.0261, 29.632, -16.8376, 1.11", "52.8767, 30.6948, -23.7641, 0.28", "53.7221, 31.0825, -25.8534, 0.83", "59.0303, 33.6548, -38.1308, 0.28", "60.0321, 34.1345, -40.2778, 0.83", "62.0609, 35.0314, -44.2293, 0.28", "62.5165, 35.2166, -45.0411, 0.55", "64.3523, 35.8404, -47.7284, 0.28", "65.0856, 36.0631, -48.6841, 0.55", "67.151, 36.6053, -50.5213, 0.28", "69.0151, 37.048, -52.5099, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "11.125, 23.5018, 0.909901, 0.55", "11.9923, 26.8884, -0.338214, 0.55", "13.4351, 32.6688, -2.29876, 0.55", "15.6861, 42.4939, -5.57543, 0.55", "17.3767, 50.7989, -8.37252, 0.55", "18.1463, 54.7988, -9.59343, 0.28", "18.7224, 58.0972, -10.5111, 0.28", "19.2062, 61.3488, -11.1128, 0.83", "19.8653, 66.7946, -11.5103, 0.55", "20.2, 71.1102, -11.4403, 0.55", "20.4705, 75.697, -11.0595, 0.55", "20.6374, 78.4911, -10.7445, 0.55", "21.2719, 89.5834, -9.40232, 0.55", "21.4694, 93.2725, -8.89283, 0.28", "21.6663, 95.9663, -8.44766, 0.55", "22.0492, 100.386, -7.92384, 0.28", "22.1656, 101.752, -7.82799, 0.55", "22.5382, 105.598, -7.65609, 0.28", "22.6438, 106.89, -7.68013, 0.83", "23.5926, 116.454, -7.91115, 0.28", "24.0833, 121.1, -8.024, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.4709, 40.5982, -1.95383, 0.55", "3.50249, 55.5627, -1.95383, 0.55", "4.53407, 70.5271, -1.95383, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.25491, -25.9689, -30.2357, 0.55", "-0.697211, -27.569, -29.4635, 0.55", "0.24737, -30.7023, -28.2057, 0.55", "1.04316, -33.4825, -27.2531, 0.55", "1.65118, -35.7885, -26.5141, 0.55", "2.35133, -38.6755, -25.6592, 0.55", "3.15809, -42.0875, -24.7316, 0.55", "3.55368, -44.0457, -24.3068, 0.55", "3.89061, -45.8578, -24.0155, 0.55", "4.21736, -47.6067, -23.7628, 0.55", "4.5073, -49.3128, -23.5879, 0.55", "4.78314, -50.9117, -23.3984, 0.55", "5.00081, -52.1794, -23.1291, 0.55", "5.38221, -54.0489, -22.6899, 0.55", "5.65508, -55.3836, -22.3446, 0.55", "6.1178, -57.3681, -21.8168, 0.55", "6.40404, -58.5595, -21.4265, 0.83", "6.98977, -61.3249, -20.3539, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-1.25491, -25.9689, -30.2357, 0.55", "-3.87466, -27.5487, -30.1023, 0.55", "-5.10675, -28.1893, -30.1292, 0.55", "-5.70881, -28.4587, -30.1568, 0.83", "-7.64957, -29.2618, -30.2582, 0.55", "-8.52079, -29.577, -30.3337, 0.83", "-10.436, -30.1511, -30.5202, 0.55", "-14.3063, -31.188, -31.0126, 0.55", "-17.1637, -31.9273, -31.3806, 0.55", "-19.337, -32.4557, -31.659, 0.55", "-22.6862, -33.1665, -32.0783, 0.28", "-27.8115, -34.1533, -32.7245, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-0.387268, -9.57039, -40.702, 0.55", "0.436938, -9.9063, -45.9537, 0.55", "0.352624, -10.4159, -49.0679, 0.55", "-0.265625, -11.6297, -54.8412, 0.55", "-0.867017, -12.466, -58.5061, 0.55", "-1.8687, -13.8589, -64.6105, 0.55", "-4.08337, -16.9385, -78.107, 0.55", "-6.47661, -19.9852, -90.9009, 0.55", "-8.72791, -22.7414, -101.556, 0.55", "-12.6407, -27.4083, -117.758, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.387268, -9.57039, -40.702, 0.55", "-0.579953, -8.99554, -42.7844, 0.55", "-0.941773, -7.91612, -46.6947, 0.55", "-1.85858, -5.18101, -56.6029, 0.55", "-2.83207, -2.27677, -67.1238, 0.55", "-3.59288, -0.00702171, -75.3461, 0.55", "-3.79217, 0.587512, -77.4999, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-17.074, 33.7278, 11.5991, 0.55", "-17.9044, 35.7585, 13.1808, 0.55", "-19.1241, 38.7414, 15.5042, 0.55", "-22.3456, 46.6195, 21.6403, 0.55", "-24.6594, 52.278, 26.0476, 0.55", "-27.0263, 58.0662, 30.5559, 0.55", "-29.7656, 65.2918, 37.9535, 0.55", "-33.803, 73.5466, 43.4303, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-17.074, 33.7278, 11.5991, 0.55", "-18.6079, 34.4597, 12.6984, 0.55", "-22.3876, 36.2406, 14.7669, 0.55", "-28.6517, 39.0219, 17.4585, 0.55", "-31.3357, 40.2226, 18.4807, 0.55", "-34.3613, 41.5438, 19.5074, 0.55", "-40.3048, 44.1123, 21.5373, 0.55", "-43.4959, 45.4343, 22.5392, 0.55", "-46.2404, 46.4761, 23.1772, 0.55", "-48.9195, 47.5137, 23.4171, 0.28", "-50.9757, 48.3339, 23.5325, 0.55", "-56.102, 50.1934, 24.0486, 0.28", "-64.1763, 51.7256, 27.5919, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-20.2461, -10.1117, -10.5541, 0.83", "-21.0637, -12.3728, -12.5854, 0.83", "-21.6689, -14.158, -13.9524, 0.83", "-23.7362, -20.6619, -18.3533, 0.83", "-24.513, -23.0085, -19.6592, 0.83", "-25.1183, -24.7855, -20.5071, 0.83", "-26.581, -29.0758, -22.3193, 0.55", "-27.0058, -30.2827, -22.7048, 1.11", "-27.7024, -32.1307, -23.1051, 0.83", "-29.4251, -36.4844, -23.4785, 0.83", "-30.5913, -39.0617, -23.4745, 0.83", "-31.2519, -40.2743, -23.3683, 1.11", "-32.6737, -42.5289, -23.0457, 0.83", "-33.7953, -44.2009, -22.683, 0.83", "-34.4247, -45.0925, -22.4223, 1.11", "-37.6541, -49.4648, -20.828, 0.55", "-39.7409, -52.1498, -19.6358, 0.55", "-40.2502, -52.7869, -19.3165, 0.55", "-41.0483, -53.8009, -18.7203, 0.28", "-43.2945, -56.6347, -16.959, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-20.2461, -10.1117, -10.5541, 0.55", "-22.5676, -11.4109, -11.3079, 0.55", "-25.0843, -12.924, -12.0196, 0.83", "-28.19, -14.8251, -12.8579, 0.83", "-29.1959, -15.4448, -13.0968, 0.83", "-34.0193, -18.3441, -14.0988, 0.55", "-35.6257, -19.3011, -14.428, 0.83", "-37.7447, -20.6116, -14.7034, 0.83", "-40.0319, -22.0641, -14.8575, 0.55", "-43.5756, -24.27, -14.894, 0.83", "-45.835, -25.6096, -14.8176, 0.55", "-46.8912, -26.2165, -14.7983, 0.83", "-51.2194, -28.6596, -14.8258, 0.28", "-51.8432, -29.0151, -14.8622, 0.55", "-53.2181, -29.8167, -14.9999, 0.28", "-56.2044, -31.603, -15.6162, 0.55", "-59.5627, -33.6479, -16.5289, 0.28", "-61.0455, -34.5927, -17.0612, 0.55", "-63.2577, -36.0488, -18.084, 0.28", "-64.1526, -36.6493, -18.5621, 0.55", "-66.2309, -38.0802, -19.8261, 0.28", "-67.9751, -39.3399, -20.9036, 0.55", "-71.0347, -41.5808, -22.6629, 0.28", "-71.8875, -42.2187, -23.1819, 0.55", "-75.2241, -44.7592, -25.2585, 0.28", "-76.5679, -45.7985, -26.1483, 0.83", "-78.9975, -47.6897, -27.8215, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-4.40516, -36.2331, 0.916525, 0.55", "-4.43196, -38.9444, 1.70425, 0.55", "-4.58075, -46.0737, 3.69828, 0.55", "-4.74344, -50.4587, 4.92997, 0.55", "-5.36643, -58.7055, 6.89569, 0.55", "-5.53928, -60.8791, 7.3483, 0.55", "-5.88052, -65.6331, 8.16151, 0.55", "-6.11232, -68.6535, 8.60152, 0.55", "-6.29058, -71.1794, 8.89649, 0.55", "-6.79025, -77.441, 9.1676, 0.55", "-7.30221, -80.4579, 9.19104, 0.55", "-7.78664, -83.2624, 9.07183, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.40516, -36.2331, 0.916525, 0.55", "-8.10662, -39.9824, -5.71335, 0.55", "-9.30477, -41.135, -7.66917, 0.55", "-12.3905, -44.0355, -12.2984, 0.55", "-15.4434, -47.0391, -16.7018, 0.83", "-17.9741, -49.5425, -20.0193, 0.55", "-18.8984, -50.4568, -21.2311, 0.83", "-21.1283, -52.6487, -23.6469, 0.55", "-22.5715, -54.0221, -25.1906, 0.55", "-25.2336, -56.5712, -27.6662, 0.55", "-27.3377, -58.6289, -29.0762, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "55.6076, -31.2076, 58.1783, 0.55", "56.5783, -32.5659, 65.5872, 0.55", "56.421, -35.211, 72.7047, 0.55", "55.6166, -36.1313, 80.2004, 0.55", "55.9478, -37.6004, 87.6443, 0.55", "57.0948, -38.8093, 95.0539, 0.55", "57.165, -39.7725, 102.586, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "55.6076, -31.2076, 58.1783, 0.55", "60.1211, -30.8912, 64.9977, 0.55", "64.6413, -30.3581, 71.7991, 0.55", "70.286, -29.9541, 77.711, 0.55", "76.0106, -30.5178, 83.5322, 0.55", "80.9634, -32.565, 89.7173, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "26.3798, 10.0131, -16.3128, 0.55", "30.8813, 7.70548, -16.2178, 0.55", "32.3585, 7.02034, -16.0421, 0.83", "33.5213, 6.55078, -15.7647, 0.83", "36.6858, 5.36947, -14.323, 0.55", "39.6676, 4.44879, -12.5285, 0.28", "40.2352, 4.31043, -11.9578, 0.55", "42.412, 3.94707, -9.35326, 0.55", "44.9397, 3.63566, -5.89306, 0.55", "47.8435, 3.40919, -1.25259, 0.55", "49.2551, 3.36015, 1.5664, 0.55", "53.3081, 3.29745, 11.2154, 0.55", "60.6698, 0.95672, 18.9884, 0.55", "68.5415, -1.06061, 26.3408, 0.55", "77.5883, -1.42628, 32.5145, 0.55", "86.653, -2.18526, 38.6256, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "26.3798, 10.0131, -16.3128, 0.55", "27.5543, 10.2425, -17.4523, 0.55", "29.7208, 10.6706, -19.4008, 0.55", "32.0189, 11.081, -21.3188, 0.55", "33.5989, 11.3903, -22.5409, 0.55", "34.5859, 11.6092, -23.1123, 0.83", "36.5505, 12.0252, -24.0041, 0.28", "36.9357, 12.0966, -24.1231, 0.83", "39.2116, 12.2997, -24.4526, 0.55", "41.6148, 12.3322, -24.6077, 0.83", "45.9765, 12.0317, -24.9417, 0.55", "47.5916, 11.8191, -25.0853, 0.55", "48.417, 11.6513, -25.1813, 0.83", "53.9796, 10.2131, -25.9722, 0.28", "55.146, 9.85169, -26.1091, 0.55", "59.292, 8.40562, -26.5917, 0.28", "60.1437, 8.09305, -26.7146, 0.83", "63.6544, 6.94315, -27.0967, 0.28", "64.4501, 6.72813, -27.1468, 0.55", "67.7046, 6.16647, -27.0905, 0.55", "69.2942, 6.00115, -26.9737, 0.28", "70.3838, 5.96581, -26.8092, 0.55", "72.1285, 5.95867, -26.5379, 0.28", "73.2273, 6.03657, -26.3979, 0.55", "74.9066, 6.19948, -26.3418, 0.28", "75.7404, 6.30292, -26.3615, 0.55", "77.3674, 6.52453, -26.3852, 0.55", "78.0034, 6.62421, -26.3894, 0.55", "81.1966, 7.21761, -26.3873, 0.55", "85.212, 8.25491, -26.5339, 0.83", "87.4667, 9.06317, -26.6717, 0.28", "88.4038, 9.47628, -26.7746, 0.83", "89.6869, 10.1173, -26.9583, 0.55", "90.8096, 10.7422, -27.1521, 0.55", "94.558, 13.1188, -28.0131, 0.28", "96.4707, 14.4662, -28.5669, 0.55", "99.2394, 16.4912, -29.5201, 0.28", "99.8985, 16.9866, -29.7609, 0.55", "100.818, 17.7095, -30.1366, 0.55", "103.008, 19.4915, -31.0542, 0.28", "103.52, 19.9734, -31.2909, 0.55", "104.506, 21.1112, -31.8446, 0.28", "105.169, 22.1369, -32.3017, 0.55", "105.974, 23.6253, -32.9579, 0.28", "106.452, 24.6268, -33.4067, 0.55", "107.394, 26.9235, -34.4053, 0.28", "107.714, 27.7189, -34.7503, 0.55", "108.264, 29.0306, -35.3088, 0.28", "108.417, 29.3834, -35.4492, 0.83", "109.759, 32.2829, -36.5626, 0.28", "109.949, 32.6709, -36.7363, 0.55", "110.895, 34.4651, -37.5809, 0.28", "111.164, 34.9608, -37.8213, 0.55", "112.634, 37.6781, -39.1329, 0.28", "113.157, 38.6881, -39.6267, 0.55", "114.493, 41.5755, -41.0265, 0.28", "114.6, 41.8172, -41.1468, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-7.78664, -83.2624, 9.07183, 0.55", "-3.70985, -87.7763, 11.9274, 0.55", "1.77633, -93.8507, 15.7703, 0.55", "5.22447, -97.6685, 18.1855, 0.55", "9.32445, -102.208, 21.0574, 0.55", "18.4947, -110.791, 26.5662, 0.55", "27.9725, -120.193, 29.7104, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-7.78664, -83.2624, 9.07183, 0.55", "-8.60744, -85.5697, 8.82673, 0.55", "-10.0233, -89.5497, 8.40396, 0.55", "-11.7361, -94.3645, 7.89251, 0.55", "-12.7548, -97.2281, 7.58831, 0.55", "-14.2549, -101.445, 7.14038, 0.55", "-15.4034, -104.674, 6.79743, 0.55", "-19.9346, -114.478, 5.67597, 0.55", "-25.2165, -123.954, 6.14266, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_30", "dend_25", "dend_20", "dend_13", "dend_8", "dend_3", "dend_0", "dend_34", "dend_31", "dend_29", "dend_26", "dend_22", "dend_21", "dend_15", "dend_14", "dend_10", "dend_9", "dend_5", "dend_4", "dend_2", "dend_1", "dend_36", "dend_35", "dend_33", "dend_32", "dend_28", "dend_27", "dend_24", "dend_23", "dend_17", "dend_16", "dend_12", "dend_11", "dend_7", "dend_6", "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_30", "dend_25", "dend_20", "dend_13", "dend_8", "dend_3", "dend_0", "dend_34", "dend_31", "dend_29", "dend_26", "dend_22", "dend_21", "dend_15", "dend_14", "dend_10", "dend_9", "dend_5", "dend_4", "dend_2", "dend_1", "dend_36", "dend_35", "dend_33", "dend_32", "dend_28", "dend_27", "dend_24", "dend_23", "dend_17", "dend_16", "dend_12", "dend_11", "dend_7", "dend_6", "dend_19", "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_SBC_da4a711a61_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_20, dend_13, dend_8, dend_3, dend_0, dend_34, dend_31, dend_29, dend_26, dend_22, dend_21, dend_15, dend_14, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_36, dend_35, dend_33, dend_32, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_12, dend_11, dend_7, dend_6, dend_19, dend_18]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_20, dend_13, dend_8, dend_3, dend_0, dend_34, dend_31, dend_29, dend_26, dend_22, dend_21, dend_15, dend_14, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_36, dend_35, dend_33, dend_32, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_12, dend_11, dend_7, dend_6, dend_19, dend_18]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_25
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_30(0), soma_0(0.4999983816635283)
    connect dend_25(0), soma_0(0.4999983816635283)
    connect dend_20(0), soma_0(0.4999983816635283)
    connect dend_13(0), soma_0(0.4999983816635283)
    connect dend_8(0), soma_0(0.4999983816635283)
    connect dend_3(0), soma_0(0.4999983816635283)
    connect dend_0(0), soma_0(0.4999983816635283)
    connect axon_0(0), soma_0(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.25508, -13.4521, 2.42889, 2.61101 ) }
    soma_0 { pt3dadd( -1.17194, -12.2461, 2.20976, 4.55022 ) }
    soma_0 { pt3dadd( -1.0888, -11.04, 1.99062, 6.58753 ) }
    soma_0 { pt3dadd( -1.00566, -9.83393, 1.77148, 7.73381 ) }
    soma_0 { pt3dadd( -0.922515, -8.62787, 1.55235, 8.55635 ) }
    soma_0 { pt3dadd( -0.839375, -7.42181, 1.33321, 9.12633 ) }
    soma_0 { pt3dadd( -0.756234, -6.21574, 1.11408, 9.69574 ) }
    soma_0 { pt3dadd( -0.673093, -5.00968, 0.894941, 10.2984 ) }
    soma_0 { pt3dadd( -0.589953, -3.80361, 0.675805, 11.0621 ) }
    soma_0 { pt3dadd( -0.506812, -2.59755, 0.456669, 11.9272 ) }
    soma_0 { pt3dadd( -0.423672, -1.39149, 0.237533, 12.7888 ) }
    soma_0 { pt3dadd( -0.340531, -0.185422, 0.0183969, 13.0953 ) }
    soma_0 { pt3dadd( -0.25739, 1.02064, -0.200739, 13.3342 ) }
    soma_0 { pt3dadd( -0.17425, 2.22671, -0.419875, 13.2437 ) }
    soma_0 { pt3dadd( -0.0911092, 3.43277, -0.639011, 12.9712 ) }
    soma_0 { pt3dadd( -0.00796856, 4.63883, -0.858147, 11.9671 ) }
    soma_0 { pt3dadd( 0.0751721, 5.8449, -1.07728, 9.81972 ) }
    soma_0 { pt3dadd( 0.158313, 7.05096, -1.29642, 7.58985 ) }
    soma_0 { pt3dadd( 0.241453, 8.25703, -1.51556, 5.99858 ) }
    soma_0 { pt3dadd( 0.324594, 9.46309, -1.73469, 4.47562 ) }
    soma_0 { pt3dadd( 0.407735, 10.6692, -1.95383, 2.65929 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.78468, -0.87652, -9.66877, 1.39 ) }
    dend_30 { pt3dadd( -2.04411, -2.27926, -13.5, 1.39 ) }
    dend_30 { pt3dadd( -2.17614, -3.32861, -16.141, 1.39 ) }
    dend_30 { pt3dadd( -2.39954, -5.10411, -20.6096, 1.39 ) }
    dend_30 { pt3dadd( -2.781, -8.13583, -28.2399, 0.83 ) }
    dend_30 { pt3dadd( -2.86079, -8.76994, -29.8358, 0.83 ) }
    dend_30 { pt3dadd( -2.94653, -9.45143, -31.551, 0.83 ) }
    dend_30 { pt3dadd( -2.97022, -10.1429, -33.2756, 1.39 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.35468, 9.28348, -0.168775, 1.11 ) }
    dend_25 { pt3dadd( -3.8588, 11.2597, -0.429238, 1.11 ) }
    dend_25 { pt3dadd( -4.93558, 12.6744, -0.615701, 0.83 ) }
    dend_25 { pt3dadd( -5.25749, 13.0973, -0.671445, 0.83 ) }
    dend_25 { pt3dadd( -6.19118, 14.324, -0.833128, 0.83 ) }
    dend_25 { pt3dadd( -7.50671, 16.0524, -1.06093, 1.11 ) }
    dend_25 { pt3dadd( -8.32795, 17.1313, -1.20314, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 36/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -7.50468, 0.813481, -2.02877, 1.11 ) }
    dend_20 { pt3dadd( -9.27526, -0.19067, -2.48521, 1.11 ) }
    dend_20 { pt3dadd( -12.7597, -2.16677, -3.38345, 1.11 ) }
    dend_20 { pt3dadd( -14.9554, -3.41204, -3.94949, 1.11 ) }
    dend_20 { pt3dadd( -18.1458, -5.22142, -4.77195, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 41/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.78468, -12.1365, 0.191225, 1.11 ) }
    dend_13 { pt3dadd( -3.03096, -13.6248, -0.374676, 1.11 ) }
    dend_13 { pt3dadd( -3.47645, -16.317, -1.39832, 1.11 ) }
    dend_13 { pt3dadd( -4.2416, -20.9409, -3.15648, 1.11 ) }
    dend_13 { pt3dadd( -4.70139, -23.7194, -4.21296, 1.94 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 46/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 0.935323, -10.8265, -8.86877, 0.83 ) }
    dend_8 { pt3dadd( 1.02598, -10.8915, -9.98511, 0.83 ) }
    dend_8 { pt3dadd( 1.29378, -10.9372, -12.537, 0.83 ) }
    dend_8 { pt3dadd( 1.46941, -10.9697, -13.8457, 0.83 ) }
    dend_8 { pt3dadd( 2.59291, -11.2775, -21.6521, 0.83 ) }
    dend_8 { pt3dadd( 3.64024, -11.5645, -28.9292, 0.83 ) }
    dend_8 { pt3dadd( 5.21843, -11.9969, -39.8949, 0.83 ) }
    dend_8 { pt3dadd( 6.04003, -12.0987, -45.5884, 0.83 ) }
    dend_8 { pt3dadd( 6.9899, -12.0517, -51.9185, 0.55 ) }
    dend_8 { pt3dadd( 7.78731, -11.9533, -57.0795, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 56/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.42532, 3.42348, -6.61877, 1.11 ) }
    dend_3 { pt3dadd( 9.34424, 4.78796, -7.17748, 1.11 ) }
    dend_3 { pt3dadd( 12.9217, 6.46028, -7.86224, 1.11 ) }
    dend_3 { pt3dadd( 15.6125, 7.71813, -8.37729, 1.11 ) }
    dend_3 { pt3dadd( 17.7031, 8.69543, -8.77746, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 61/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.135322, 10.4435, -3.09877, 1.94 ) }
    dend_0 { pt3dadd( 1.75492, 12.368, -2.508, 1.94 ) }
    dend_0 { pt3dadd( 4.41232, 15.5256, -1.53867, 0.83 ) }
    dend_0 { pt3dadd( 7.71178, 19.4461, -0.335133, 0.83 ) }
    dend_0 { pt3dadd( 11.125, 23.5018, 0.909901, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 66/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.407735, 10.6692, -1.95383, 0.83 ) }
    axon_0 { pt3dadd( 1.43932, 25.6337, -1.95383, 0.83 ) }
    axon_0 { pt3dadd( 2.4709, 40.5982, -1.95383, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 69/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -2.97022, -10.1429, -33.2756, 0.83 ) }
    dend_34 { pt3dadd( -2.75323, -11.9299, -33.1133, 0.83 ) }
    dend_34 { pt3dadd( -2.53552, -13.5824, -32.8887, 0.83 ) }
    dend_34 { pt3dadd( -2.37998, -15.0649, -32.6111, 0.83 ) }
    dend_34 { pt3dadd( -2.14849, -17.2713, -32.1979, 0.83 ) }
    dend_34 { pt3dadd( -1.83287, -20.2796, -31.6347, 0.83 ) }
    dend_34 { pt3dadd( -1.60182, -22.4818, -31.2223, 0.83 ) }
    dend_34 { pt3dadd( -1.46329, -23.8507, -30.8894, 0.83 ) }
    dend_34 { pt3dadd( -1.25491, -25.9689, -30.2357, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 78/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.97022, -10.1429, -33.2756, 0.83 ) }
    dend_31 { pt3dadd( -2.24341, -9.98179, -35.3653, 0.83 ) }
    dend_31 { pt3dadd( -0.387268, -9.57039, -40.702, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 81/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -8.32795, 17.1313, -1.20314, 0.55 ) }
    dend_29 { pt3dadd( -9.32423, 20.5479, -0.39092, 0.55 ) }
    dend_29 { pt3dadd( -9.96321, 22.7039, 0.116878, 0.55 ) }
    dend_29 { pt3dadd( -12.2297, 29.6604, 1.62392, 0.55 ) }
    dend_29 { pt3dadd( -14.2614, 35.8968, 2.97495, 0.55 ) }
    dend_29 { pt3dadd( -17.933, 47.1664, 5.41636, 0.55 ) }
    dend_29 { pt3dadd( -18.885, 50.0884, 6.04938, 0.55 ) }
    dend_29 { pt3dadd( -19.9336, 53.2002, 6.84667, 0.55 ) }
    dend_29 { pt3dadd( -21.2649, 56.8707, 7.90591, 0.55 ) }
    dend_29 { pt3dadd( -23.6976, 66.905, 11.4025, 0.55 ) }
    dend_29 { pt3dadd( -26.0478, 76.8663, 15.1552, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 92/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.32795, 17.1313, -1.20314, 0.83 ) }
    dend_26 { pt3dadd( -9.55172, 18.1273, 0.178224, 0.83 ) }
    dend_26 { pt3dadd( -10.7542, 19.4853, 1.57922, 0.83 ) }
    dend_26 { pt3dadd( -12.1078, 21.3148, 3.22865, 0.83 ) }
    dend_26 { pt3dadd( -12.9845, 22.8207, 4.46004, 0.83 ) }
    dend_26 { pt3dadd( -14.4074, 25.6094, 6.60615, 0.83 ) }
    dend_26 { pt3dadd( -15.0383, 26.8457, 7.55759, 0.83 ) }
    dend_26 { pt3dadd( -16.2007, 29.6299, 9.42467, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_26 { pt3dadd( -16.3783, 30.2239, 9.78951, 0.55 ) }
    dend_26 { pt3dadd( -17.0278, 33.3759, 11.4401, 0.55 ) }
    dend_26 { pt3dadd( -17.074, 33.7278, 11.5991, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 3/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -18.1458, -5.22142, -4.77195, 1.11 ) }
    dend_22 { pt3dadd( -20.2461, -10.1117, -10.5541, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 5/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -18.1458, -5.22142, -4.77195, 0.55 ) }
    dend_21 { pt3dadd( -21.3701, -4.72582, -5.66761, 0.55 ) }
    dend_21 { pt3dadd( -24.8285, -4.19425, -6.62827, 0.55 ) }
    dend_21 { pt3dadd( -27.8111, -3.73581, -7.45678, 0.55 ) }
    dend_21 { pt3dadd( -29.6084, -3.45956, -7.95603, 0.28 ) }
    dend_21 { pt3dadd( -32.657, -2.99096, -8.80289, 0.83 ) }
    dend_21 { pt3dadd( -37.9763, -2.17336, -10.2805, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 12/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.70139, -23.7194, -4.21296, 1.11 ) }
    dend_15 { pt3dadd( -4.64394, -26.1462, -3.21819, 1.11 ) }
    dend_15 { pt3dadd( -4.52715, -31.0797, -1.19591, 0.83 ) }
    dend_15 { pt3dadd( -4.40516, -36.2331, 0.916525, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 16/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.70139, -23.7194, -4.21296, 0.83 ) }
    dend_14 { pt3dadd( -6.16326, -26.1365, -4.12087, 0.83 ) }
    dend_14 { pt3dadd( -7.34155, -27.4828, -3.88016, 0.83 ) }
    dend_14 { pt3dadd( -9.05838, -28.9622, -3.52997, 0.83 ) }
    dend_14 { pt3dadd( -12.9286, -31.607, -2.82154, 0.83 ) }
    dend_14 { pt3dadd( -14.4467, -32.39, -2.47567, 0.83 ) }
    dend_14 { pt3dadd( -19.6604, -34.5952, -0.85506, 0.83 ) }
    dend_14 { pt3dadd( -24.4733, -36.1248, 1.02207, 0.55 ) }
    dend_14 { pt3dadd( -28.2482, -36.9825, 2.70663, 0.55 ) }
    dend_14 { pt3dadd( -31.375, -37.2798, 4.33031, 0.55 ) }
    dend_14 { pt3dadd( -36.998, -37.1524, 7.65187, 0.55 ) }
    dend_14 { pt3dadd( -41.3867, -36.8456, 10.3112, 0.55 ) }
    dend_14 { pt3dadd( -43.4046, -36.5847, 11.5927, 0.28 ) }
    dend_14 { pt3dadd( -45.5277, -36.1794, 13.2171, 0.28 ) }
    dend_14 { pt3dadd( -50.2225, -35.032, 17.399, 0.28 ) }
    dend_14 { pt3dadd( -53.4834, -34.0836, 20.6697, 0.28 ) }
    dend_14 { pt3dadd( -61.574, -36.7987, 26.4574, 0.28 ) }
    dend_14 { pt3dadd( -69.1642, -39.3617, 32.9495, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 7.78731, -11.9533, -57.0795, 0.55 ) }
    dend_10 { pt3dadd( 11.7925, -13.1176, -52.3888, 0.55 ) }
    dend_10 { pt3dadd( 15.6026, -14.302, -47.0983, 0.55 ) }
    dend_10 { pt3dadd( 19.5227, -15.6781, -40.4746, 0.55 ) }
    dend_10 { pt3dadd( 20.4741, -16.006, -38.5824, 0.55 ) }
    dend_10 { pt3dadd( 22.3463, -16.6306, -34.5104, 0.55 ) }
    dend_10 { pt3dadd( 24.6581, -17.4441, -29.254, 0.55 ) }
    dend_10 { pt3dadd( 27.4014, -18.5821, -22.4086, 0.55 ) }
    dend_10 { pt3dadd( 30.2468, -19.945, -14.7045, 0.55 ) }
    dend_10 { pt3dadd( 34.2095, -21.8336, -3.52438, 0.55 ) }
    dend_10 { pt3dadd( 36.0894, -22.721, 1.97096, 0.55 ) }
    dend_10 { pt3dadd( 38.3167, -23.7322, 8.5871, 0.55 ) }
    dend_10 { pt3dadd( 39.1881, -24.151, 11.3425, 0.55 ) }
    dend_10 { pt3dadd( 39.6682, -24.4172, 12.8965, 0.83 ) }
    dend_10 { pt3dadd( 43.3872, -26.5396, 24.876, 0.28 ) }
    dend_10 { pt3dadd( 44.7368, -27.3871, 29.3792, 0.55 ) }
    dend_10 { pt3dadd( 45.5674, -27.9082, 32.2638, 0.83 ) }
    dend_10 { pt3dadd( 48.1014, -29.3688, 41.776, 0.28 ) }
    dend_10 { pt3dadd( 49.6644, -30.2022, 47.9597, 0.83 ) }
    dend_10 { pt3dadd( 55.6076, -31.2076, 58.1783, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 7.78731, -11.9533, -57.0795, 0.55 ) }
    dend_9 { pt3dadd( 7.20408, -12.4183, -58.8643, 0.55 ) }
    dend_9 { pt3dadd( 6.22823, -13.2882, -62.202, 0.55 ) }
    dend_9 { pt3dadd( 5.10013, -14.3665, -66.2242, 0.55 ) }
    dend_9 { pt3dadd( 4.14919, -15.385, -69.8097, 0.55 ) }
    dend_9 { pt3dadd( 3.17518, -16.5327, -73.6217, 1.11 ) }
    dend_9 { pt3dadd( 1.35656, -19.0804, -81.4734, 0.55 ) }
    dend_9 { pt3dadd( 0.600444, -20.3819, -85.1826, 0.28 ) }
    dend_9 { pt3dadd( 0.407609, -20.8602, -86.4083, 0.83 ) }
    dend_9 { pt3dadd( 0.108275, -22.1789, -89.3843, 0.28 ) }
    dend_9 { pt3dadd( 0.0805202, -22.5675, -90.1401, 0.55 ) }
    dend_9 { pt3dadd( 0.182333, -24.2233, -92.4408, 0.28 ) }
    dend_9 { pt3dadd( 0.334183, -25.48, -93.5991, 0.55 ) }
    dend_9 { pt3dadd( 0.476649, -27.1069, -94.9591, 0.28 ) }
    dend_9 { pt3dadd( 0.458205, -27.5063, -95.2662, 0.83 ) }
    dend_9 { pt3dadd( 0.315171, -28.4201, -95.915, 0.28 ) }
    dend_9 { pt3dadd( 0.16484, -28.9969, -96.3339, 0.55 ) }
    dend_9 { pt3dadd( -1.0321, -32.5544, -98.8611, 0.28 ) }
    dend_9 { pt3dadd( -1.22266, -33.0812, -99.2364, 0.83 ) }
    dend_9 { pt3dadd( -2.79848, -37.2343, -101.858, 0.28 ) }
    dend_9 { pt3dadd( -3.05505, -37.9525, -102.308, 0.83 ) }
    dend_9 { pt3dadd( -3.6001, -39.7011, -103.419, 0.28 ) }
    dend_9 { pt3dadd( -3.71324, -40.2205, -103.746, 0.55 ) }
    dend_9 { pt3dadd( -3.75656, -41.0197, -104.175, 0.28 ) }
    dend_9 { pt3dadd( -3.60544, -42.248, -104.84, 0.83 ) }
    dend_9 { pt3dadd( -2.9591, -44.0716, -105.793, 0.28 ) }
    dend_9 { pt3dadd( -1.98085, -46.3306, -106.989, 0.55 ) }
    dend_9 { pt3dadd( -1.12971, -47.9646, -107.822, 0.55 ) }
    dend_9 { pt3dadd( -0.29233, -49.4891, -108.618, 0.55 ) }
    dend_9 { pt3dadd( 0.705076, -51.1688, -109.458, 0.55 ) }
    dend_9 { pt3dadd( 1.02318, -51.6859, -109.713, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 85/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 17.7031, 8.69543, -8.77746, 0.83 ) }
    dend_5 { pt3dadd( 20.1843, 9.07223, -10.9323, 0.83 ) }
    dend_5 { pt3dadd( 23.4998, 9.57574, -13.8116, 0.83 ) }
    dend_5 { pt3dadd( 26.3798, 10.0131, -16.3128, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 17.7031, 8.69543, -8.77746, 0.83 ) }
    dend_4 { pt3dadd( 19.6253, 10.1729, -13.0686, 0.83 ) }
    dend_4 { pt3dadd( 20.2839, 10.6864, -14.675, 0.83 ) }
    dend_4 { pt3dadd( 22.8096, 12.8999, -21.158, 0.83 ) }
    dend_4 { pt3dadd( 24.6041, 14.5718, -25.7869, 0.83 ) }
    dend_4 { pt3dadd( 26.6826, 16.7393, -31.4738, 0.83 ) }
    dend_4 { pt3dadd( 29.0804, 19.3727, -38.0925, 0.83 ) }
    dend_4 { pt3dadd( 30.2776, 20.7469, -41.4985, 0.83 ) }
    dend_4 { pt3dadd( 31.9889, 22.9474, -46.6794, 0.55 ) }
    dend_4 { pt3dadd( 32.8336, 24.0949, -49.3012, 0.83 ) }
    dend_4 { pt3dadd( 35.5425, 28.1556, -57.8048, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_4 { pt3dadd( 35.9314, 28.7921, -59.01, 0.28 ) }
    dend_4 { pt3dadd( 36.7496, 30.1251, -61.3403, 1.11 ) }
    dend_4 { pt3dadd( 38.7921, 33.3986, -67.1537, 0.28 ) }
    dend_4 { pt3dadd( 39.3372, 34.219, -68.732, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 4/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 11.125, 23.5018, 0.909901, 0.55 ) }
    dend_2 { pt3dadd( 13.9646, 24.9141, 1.81721, 0.55 ) }
    dend_2 { pt3dadd( 15.4606, 25.6099, 2.39467, 0.55 ) }
    dend_2 { pt3dadd( 17.6616, 26.5751, 3.26163, 0.55 ) }
    dend_2 { pt3dadd( 19.7794, 27.3755, 4.09508, 0.55 ) }
    dend_2 { pt3dadd( 23.8349, 28.6175, 5.4998, 0.83 ) }
    dend_2 { pt3dadd( 25.6921, 29.1087, 6.0478, 0.83 ) }
    dend_2 { pt3dadd( 28.6521, 29.8094, 6.50791, 0.28 ) }
    dend_2 { pt3dadd( 29.5813, 29.9404, 6.50489, 0.83 ) }
    dend_2 { pt3dadd( 32.8155, 30.0479, 5.81767, 0.55 ) }
    dend_2 { pt3dadd( 35.8484, 29.8483, 4.4443, 0.55 ) }
    dend_2 { pt3dadd( 37.2625, 29.681, 3.41909, 1.11 ) }
    dend_2 { pt3dadd( 41.2876, 29.1794, -0.356779, 0.55 ) }
    dend_2 { pt3dadd( 44.1913, 28.9185, -4.15208, 0.55 ) }
    dend_2 { pt3dadd( 45.9408, 28.8631, -7.02361, 0.28 ) }
    dend_2 { pt3dadd( 47.4247, 29.0011, -10.3509, 0.55 ) }
    dend_2 { pt3dadd( 48.6902, 29.2436, -13.5204, 0.28 ) }
    dend_2 { pt3dadd( 50.0261, 29.632, -16.8376, 1.11 ) }
    dend_2 { pt3dadd( 52.8767, 30.6948, -23.7641, 0.28 ) }
    dend_2 { pt3dadd( 53.7221, 31.0825, -25.8534, 0.83 ) }
    dend_2 { pt3dadd( 59.0303, 33.6548, -38.1308, 0.28 ) }
    dend_2 { pt3dadd( 60.0321, 34.1345, -40.2778, 0.83 ) }
    dend_2 { pt3dadd( 62.0609, 35.0314, -44.2293, 0.28 ) }
    dend_2 { pt3dadd( 62.5165, 35.2166, -45.0411, 0.55 ) }
    dend_2 { pt3dadd( 64.3523, 35.8404, -47.7284, 0.28 ) }
    dend_2 { pt3dadd( 65.0856, 36.0631, -48.6841, 0.55 ) }
    dend_2 { pt3dadd( 67.151, 36.6053, -50.5213, 0.28 ) }
    dend_2 { pt3dadd( 69.0151, 37.048, -52.5099, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 32/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 11.125, 23.5018, 0.909901, 0.55 ) }
    dend_1 { pt3dadd( 11.9923, 26.8884, -0.338214, 0.55 ) }
    dend_1 { pt3dadd( 13.4351, 32.6688, -2.29876, 0.55 ) }
    dend_1 { pt3dadd( 15.6861, 42.4939, -5.57543, 0.55 ) }
    dend_1 { pt3dadd( 17.3767, 50.7989, -8.37252, 0.55 ) }
    dend_1 { pt3dadd( 18.1463, 54.7988, -9.59343, 0.28 ) }
    dend_1 { pt3dadd( 18.7224, 58.0972, -10.5111, 0.28 ) }
    dend_1 { pt3dadd( 19.2062, 61.3488, -11.1128, 0.83 ) }
    dend_1 { pt3dadd( 19.8653, 66.7946, -11.5103, 0.55 ) }
    dend_1 { pt3dadd( 20.2, 71.1102, -11.4403, 0.55 ) }
    dend_1 { pt3dadd( 20.4705, 75.697, -11.0595, 0.55 ) }
    dend_1 { pt3dadd( 20.6374, 78.4911, -10.7445, 0.55 ) }
    dend_1 { pt3dadd( 21.2719, 89.5834, -9.40232, 0.55 ) }
    dend_1 { pt3dadd( 21.4694, 93.2725, -8.89283, 0.28 ) }
    dend_1 { pt3dadd( 21.6663, 95.9663, -8.44766, 0.55 ) }
    dend_1 { pt3dadd( 22.0492, 100.386, -7.92384, 0.28 ) }
    dend_1 { pt3dadd( 22.1656, 101.752, -7.82799, 0.55 ) }
    dend_1 { pt3dadd( 22.5382, 105.598, -7.65609, 0.28 ) }
    dend_1 { pt3dadd( 22.6438, 106.89, -7.68013, 0.83 ) }
    dend_1 { pt3dadd( 23.5926, 116.454, -7.91115, 0.28 ) }
    dend_1 { pt3dadd( 24.0833, 121.1, -8.024, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 53/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.4709, 40.5982, -1.95383, 0.55 ) }
    axon_1 { pt3dadd( 3.50249, 55.5627, -1.95383, 0.55 ) }
    axon_1 { pt3dadd( 4.53407, 70.5271, -1.95383, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 56/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.25491, -25.9689, -30.2357, 0.55 ) }
    dend_36 { pt3dadd( -0.697211, -27.569, -29.4635, 0.55 ) }
    dend_36 { pt3dadd( 0.24737, -30.7023, -28.2057, 0.55 ) }
    dend_36 { pt3dadd( 1.04316, -33.4825, -27.2531, 0.55 ) }
    dend_36 { pt3dadd( 1.65118, -35.7885, -26.5141, 0.55 ) }
    dend_36 { pt3dadd( 2.35133, -38.6755, -25.6592, 0.55 ) }
    dend_36 { pt3dadd( 3.15809, -42.0875, -24.7316, 0.55 ) }
    dend_36 { pt3dadd( 3.55368, -44.0457, -24.3068, 0.55 ) }
    dend_36 { pt3dadd( 3.89061, -45.8578, -24.0155, 0.55 ) }
    dend_36 { pt3dadd( 4.21736, -47.6067, -23.7628, 0.55 ) }
    dend_36 { pt3dadd( 4.5073, -49.3128, -23.5879, 0.55 ) }
    dend_36 { pt3dadd( 4.78314, -50.9117, -23.3984, 0.55 ) }
    dend_36 { pt3dadd( 5.00081, -52.1794, -23.1291, 0.55 ) }
    dend_36 { pt3dadd( 5.38221, -54.0489, -22.6899, 0.55 ) }
    dend_36 { pt3dadd( 5.65508, -55.3836, -22.3446, 0.55 ) }
    dend_36 { pt3dadd( 6.1178, -57.3681, -21.8168, 0.55 ) }
    dend_36 { pt3dadd( 6.40404, -58.5595, -21.4265, 0.83 ) }
    dend_36 { pt3dadd( 6.98977, -61.3249, -20.3539, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 74/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -1.25491, -25.9689, -30.2357, 0.55 ) }
    dend_35 { pt3dadd( -3.87466, -27.5487, -30.1023, 0.55 ) }
    dend_35 { pt3dadd( -5.10675, -28.1893, -30.1292, 0.55 ) }
    dend_35 { pt3dadd( -5.70881, -28.4587, -30.1568, 0.83 ) }
    dend_35 { pt3dadd( -7.64957, -29.2618, -30.2582, 0.55 ) }
    dend_35 { pt3dadd( -8.52079, -29.577, -30.3337, 0.83 ) }
    dend_35 { pt3dadd( -10.436, -30.1511, -30.5202, 0.55 ) }
    dend_35 { pt3dadd( -14.3063, -31.188, -31.0126, 0.55 ) }
    dend_35 { pt3dadd( -17.1637, -31.9273, -31.3806, 0.55 ) }
    dend_35 { pt3dadd( -19.337, -32.4557, -31.659, 0.55 ) }
    dend_35 { pt3dadd( -22.6862, -33.1665, -32.0783, 0.28 ) }
    dend_35 { pt3dadd( -27.8115, -34.1533, -32.7245, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 86/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -0.387268, -9.57039, -40.702, 0.55 ) }
    dend_33 { pt3dadd( 0.436938, -9.9063, -45.9537, 0.55 ) }
    dend_33 { pt3dadd( 0.352624, -10.4159, -49.0679, 0.55 ) }
    dend_33 { pt3dadd( -0.265625, -11.6297, -54.8412, 0.55 ) }
    dend_33 { pt3dadd( -0.867017, -12.466, -58.5061, 0.55 ) }
    dend_33 { pt3dadd( -1.8687, -13.8589, -64.6105, 0.55 ) }
    dend_33 { pt3dadd( -4.08337, -16.9385, -78.107, 0.55 ) }
    dend_33 { pt3dadd( -6.47661, -19.9852, -90.9009, 0.55 ) }
    dend_33 { pt3dadd( -8.72791, -22.7414, -101.556, 0.55 ) }
    dend_33 { pt3dadd( -12.6407, -27.4083, -117.758, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 96/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.387268, -9.57039, -40.702, 0.55 ) }
    dend_32 { pt3dadd( -0.579953, -8.99554, -42.7844, 0.55 ) }
    dend_32 { pt3dadd( -0.941773, -7.91612, -46.6947, 0.55 ) }
    dend_32 { pt3dadd( -1.85858, -5.18101, -56.6029, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_32 { pt3dadd( -2.83207, -2.27677, -67.1238, 0.55 ) }
    dend_32 { pt3dadd( -3.59288, -0.00702171, -75.3461, 0.55 ) }
    dend_32 { pt3dadd( -3.79217, 0.587512, -77.4999, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 3/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -17.074, 33.7278, 11.5991, 0.55 ) }
    dend_28 { pt3dadd( -17.9044, 35.7585, 13.1808, 0.55 ) }
    dend_28 { pt3dadd( -19.1241, 38.7414, 15.5042, 0.55 ) }
    dend_28 { pt3dadd( -22.3456, 46.6195, 21.6403, 0.55 ) }
    dend_28 { pt3dadd( -24.6594, 52.278, 26.0476, 0.55 ) }
    dend_28 { pt3dadd( -27.0263, 58.0662, 30.5559, 0.55 ) }
    dend_28 { pt3dadd( -29.7656, 65.2918, 37.9535, 0.55 ) }
    dend_28 { pt3dadd( -33.803, 73.5466, 43.4303, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -17.074, 33.7278, 11.5991, 0.55 ) }
    dend_27 { pt3dadd( -18.6079, 34.4597, 12.6984, 0.55 ) }
    dend_27 { pt3dadd( -22.3876, 36.2406, 14.7669, 0.55 ) }
    dend_27 { pt3dadd( -28.6517, 39.0219, 17.4585, 0.55 ) }
    dend_27 { pt3dadd( -31.3357, 40.2226, 18.4807, 0.55 ) }
    dend_27 { pt3dadd( -34.3613, 41.5438, 19.5074, 0.55 ) }
    dend_27 { pt3dadd( -40.3048, 44.1123, 21.5373, 0.55 ) }
    dend_27 { pt3dadd( -43.4959, 45.4343, 22.5392, 0.55 ) }
    dend_27 { pt3dadd( -46.2404, 46.4761, 23.1772, 0.55 ) }
    dend_27 { pt3dadd( -48.9195, 47.5137, 23.4171, 0.28 ) }
    dend_27 { pt3dadd( -50.9757, 48.3339, 23.5325, 0.55 ) }
    dend_27 { pt3dadd( -56.102, 50.1934, 24.0486, 0.28 ) }
    dend_27 { pt3dadd( -64.1763, 51.7256, 27.5919, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 24/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -20.2461, -10.1117, -10.5541, 0.83 ) }
    dend_24 { pt3dadd( -21.0637, -12.3728, -12.5854, 0.83 ) }
    dend_24 { pt3dadd( -21.6689, -14.158, -13.9524, 0.83 ) }
    dend_24 { pt3dadd( -23.7362, -20.6619, -18.3533, 0.83 ) }
    dend_24 { pt3dadd( -24.513, -23.0085, -19.6592, 0.83 ) }
    dend_24 { pt3dadd( -25.1183, -24.7855, -20.5071, 0.83 ) }
    dend_24 { pt3dadd( -26.581, -29.0758, -22.3193, 0.55 ) }
    dend_24 { pt3dadd( -27.0058, -30.2827, -22.7048, 1.11 ) }
    dend_24 { pt3dadd( -27.7024, -32.1307, -23.1051, 0.83 ) }
    dend_24 { pt3dadd( -29.4251, -36.4844, -23.4785, 0.83 ) }
    dend_24 { pt3dadd( -30.5913, -39.0617, -23.4745, 0.83 ) }
    dend_24 { pt3dadd( -31.2519, -40.2743, -23.3683, 1.11 ) }
    dend_24 { pt3dadd( -32.6737, -42.5289, -23.0457, 0.83 ) }
    dend_24 { pt3dadd( -33.7953, -44.2009, -22.683, 0.83 ) }
    dend_24 { pt3dadd( -34.4247, -45.0925, -22.4223, 1.11 ) }
    dend_24 { pt3dadd( -37.6541, -49.4648, -20.828, 0.55 ) }
    dend_24 { pt3dadd( -39.7409, -52.1498, -19.6358, 0.55 ) }
    dend_24 { pt3dadd( -40.2502, -52.7869, -19.3165, 0.55 ) }
    dend_24 { pt3dadd( -41.0483, -53.8009, -18.7203, 0.28 ) }
    dend_24 { pt3dadd( -43.2945, -56.6347, -16.959, 0.28 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 44/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -20.2461, -10.1117, -10.5541, 0.55 ) }
    dend_23 { pt3dadd( -22.5676, -11.4109, -11.3079, 0.55 ) }
    dend_23 { pt3dadd( -25.0843, -12.924, -12.0196, 0.83 ) }
    dend_23 { pt3dadd( -28.19, -14.8251, -12.8579, 0.83 ) }
    dend_23 { pt3dadd( -29.1959, -15.4448, -13.0968, 0.83 ) }
    dend_23 { pt3dadd( -34.0193, -18.3441, -14.0988, 0.55 ) }
    dend_23 { pt3dadd( -35.6257, -19.3011, -14.428, 0.83 ) }
    dend_23 { pt3dadd( -37.7447, -20.6116, -14.7034, 0.83 ) }
    dend_23 { pt3dadd( -40.0319, -22.0641, -14.8575, 0.55 ) }
    dend_23 { pt3dadd( -43.5756, -24.27, -14.894, 0.83 ) }
    dend_23 { pt3dadd( -45.835, -25.6096, -14.8176, 0.55 ) }
    dend_23 { pt3dadd( -46.8912, -26.2165, -14.7983, 0.83 ) }
    dend_23 { pt3dadd( -51.2194, -28.6596, -14.8258, 0.28 ) }
    dend_23 { pt3dadd( -51.8432, -29.0151, -14.8622, 0.55 ) }
    dend_23 { pt3dadd( -53.2181, -29.8167, -14.9999, 0.28 ) }
    dend_23 { pt3dadd( -56.2044, -31.603, -15.6162, 0.55 ) }
    dend_23 { pt3dadd( -59.5627, -33.6479, -16.5289, 0.28 ) }
    dend_23 { pt3dadd( -61.0455, -34.5927, -17.0612, 0.55 ) }
    dend_23 { pt3dadd( -63.2577, -36.0488, -18.084, 0.28 ) }
    dend_23 { pt3dadd( -64.1526, -36.6493, -18.5621, 0.55 ) }
    dend_23 { pt3dadd( -66.2309, -38.0802, -19.8261, 0.28 ) }
    dend_23 { pt3dadd( -67.9751, -39.3399, -20.9036, 0.55 ) }
    dend_23 { pt3dadd( -71.0347, -41.5808, -22.6629, 0.28 ) }
    dend_23 { pt3dadd( -71.8875, -42.2187, -23.1819, 0.55 ) }
    dend_23 { pt3dadd( -75.2241, -44.7592, -25.2585, 0.28 ) }
    dend_23 { pt3dadd( -76.5679, -45.7985, -26.1483, 0.83 ) }
    dend_23 { pt3dadd( -78.9975, -47.6897, -27.8215, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -4.40516, -36.2331, 0.916525, 0.55 ) }
    dend_17 { pt3dadd( -4.43196, -38.9444, 1.70425, 0.55 ) }
    dend_17 { pt3dadd( -4.58075, -46.0737, 3.69828, 0.55 ) }
    dend_17 { pt3dadd( -4.74344, -50.4587, 4.92997, 0.55 ) }
    dend_17 { pt3dadd( -5.36643, -58.7055, 6.89569, 0.55 ) }
    dend_17 { pt3dadd( -5.53928, -60.8791, 7.3483, 0.55 ) }
    dend_17 { pt3dadd( -5.88052, -65.6331, 8.16151, 0.55 ) }
    dend_17 { pt3dadd( -6.11232, -68.6535, 8.60152, 0.55 ) }
    dend_17 { pt3dadd( -6.29058, -71.1794, 8.89649, 0.55 ) }
    dend_17 { pt3dadd( -6.79025, -77.441, 9.1676, 0.55 ) }
    dend_17 { pt3dadd( -7.30221, -80.4579, 9.19104, 0.55 ) }
    dend_17 { pt3dadd( -7.78664, -83.2624, 9.07183, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 83/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.40516, -36.2331, 0.916525, 0.55 ) }
    dend_16 { pt3dadd( -8.10662, -39.9824, -5.71335, 0.55 ) }
    dend_16 { pt3dadd( -9.30477, -41.135, -7.66917, 0.55 ) }
    dend_16 { pt3dadd( -12.3905, -44.0355, -12.2984, 0.55 ) }
    dend_16 { pt3dadd( -15.4434, -47.0391, -16.7018, 0.83 ) }
    dend_16 { pt3dadd( -17.9741, -49.5425, -20.0193, 0.55 ) }
    dend_16 { pt3dadd( -18.8984, -50.4568, -21.2311, 0.83 ) }
    dend_16 { pt3dadd( -21.1283, -52.6487, -23.6469, 0.55 ) }
    dend_16 { pt3dadd( -22.5715, -54.0221, -25.1906, 0.55 ) }
    dend_16 { pt3dadd( -25.2336, -56.5712, -27.6662, 0.55 ) }
    dend_16 { pt3dadd( -27.3377, -58.6289, -29.0762, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 94/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 55.6076, -31.2076, 58.1783, 0.55 ) }
    dend_12 { pt3dadd( 56.5783, -32.5659, 65.5872, 0.55 ) }
    dend_12 { pt3dadd( 56.421, -35.211, 72.7047, 0.55 ) }
    dend_12 { pt3dadd( 55.6166, -36.1313, 80.2004, 0.55 ) }
    dend_12 { pt3dadd( 55.9478, -37.6004, 87.6443, 0.55 ) }
    dend_12 { pt3dadd( 57.0948, -38.8093, 95.0539, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_12 { pt3dadd( 57.165, -39.7725, 102.586, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 1/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 55.6076, -31.2076, 58.1783, 0.55 ) }
    dend_11 { pt3dadd( 60.1211, -30.8912, 64.9977, 0.55 ) }
    dend_11 { pt3dadd( 64.6413, -30.3581, 71.7991, 0.55 ) }
    dend_11 { pt3dadd( 70.286, -29.9541, 77.711, 0.55 ) }
    dend_11 { pt3dadd( 76.0106, -30.5178, 83.5322, 0.55 ) }
    dend_11 { pt3dadd( 80.9634, -32.565, 89.7173, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 7/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 26.3798, 10.0131, -16.3128, 0.55 ) }
    dend_7 { pt3dadd( 30.8813, 7.70548, -16.2178, 0.55 ) }
    dend_7 { pt3dadd( 32.3585, 7.02034, -16.0421, 0.83 ) }
    dend_7 { pt3dadd( 33.5213, 6.55078, -15.7647, 0.83 ) }
    dend_7 { pt3dadd( 36.6858, 5.36947, -14.323, 0.55 ) }
    dend_7 { pt3dadd( 39.6676, 4.44879, -12.5285, 0.28 ) }
    dend_7 { pt3dadd( 40.2352, 4.31043, -11.9578, 0.55 ) }
    dend_7 { pt3dadd( 42.412, 3.94707, -9.35326, 0.55 ) }
    dend_7 { pt3dadd( 44.9397, 3.63566, -5.89306, 0.55 ) }
    dend_7 { pt3dadd( 47.8435, 3.40919, -1.25259, 0.55 ) }
    dend_7 { pt3dadd( 49.2551, 3.36015, 1.5664, 0.55 ) }
    dend_7 { pt3dadd( 53.3081, 3.29745, 11.2154, 0.55 ) }
    dend_7 { pt3dadd( 60.6698, 0.95672, 18.9884, 0.55 ) }
    dend_7 { pt3dadd( 68.5415, -1.06061, 26.3408, 0.55 ) }
    dend_7 { pt3dadd( 77.5883, -1.42628, 32.5145, 0.55 ) }
    dend_7 { pt3dadd( 86.653, -2.18526, 38.6256, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 23/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 26.3798, 10.0131, -16.3128, 0.55 ) }
    dend_6 { pt3dadd( 27.5543, 10.2425, -17.4523, 0.55 ) }
    dend_6 { pt3dadd( 29.7208, 10.6706, -19.4008, 0.55 ) }
    dend_6 { pt3dadd( 32.0189, 11.081, -21.3188, 0.55 ) }
    dend_6 { pt3dadd( 33.5989, 11.3903, -22.5409, 0.55 ) }
    dend_6 { pt3dadd( 34.5859, 11.6092, -23.1123, 0.83 ) }
    dend_6 { pt3dadd( 36.5505, 12.0252, -24.0041, 0.28 ) }
    dend_6 { pt3dadd( 36.9357, 12.0966, -24.1231, 0.83 ) }
    dend_6 { pt3dadd( 39.2116, 12.2997, -24.4526, 0.55 ) }
    dend_6 { pt3dadd( 41.6148, 12.3322, -24.6077, 0.83 ) }
    dend_6 { pt3dadd( 45.9765, 12.0317, -24.9417, 0.55 ) }
    dend_6 { pt3dadd( 47.5916, 11.8191, -25.0853, 0.55 ) }
    dend_6 { pt3dadd( 48.417, 11.6513, -25.1813, 0.83 ) }
    dend_6 { pt3dadd( 53.9796, 10.2131, -25.9722, 0.28 ) }
    dend_6 { pt3dadd( 55.146, 9.85169, -26.1091, 0.55 ) }
    dend_6 { pt3dadd( 59.292, 8.40562, -26.5917, 0.28 ) }
    dend_6 { pt3dadd( 60.1437, 8.09305, -26.7146, 0.83 ) }
    dend_6 { pt3dadd( 63.6544, 6.94315, -27.0967, 0.28 ) }
    dend_6 { pt3dadd( 64.4501, 6.72813, -27.1468, 0.55 ) }
    dend_6 { pt3dadd( 67.7046, 6.16647, -27.0905, 0.55 ) }
    dend_6 { pt3dadd( 69.2942, 6.00115, -26.9737, 0.28 ) }
    dend_6 { pt3dadd( 70.3838, 5.96581, -26.8092, 0.55 ) }
    dend_6 { pt3dadd( 72.1285, 5.95867, -26.5379, 0.28 ) }
    dend_6 { pt3dadd( 73.2273, 6.03657, -26.3979, 0.55 ) }
    dend_6 { pt3dadd( 74.9066, 6.19948, -26.3418, 0.28 ) }
    dend_6 { pt3dadd( 75.7404, 6.30292, -26.3615, 0.55 ) }
    dend_6 { pt3dadd( 77.3674, 6.52453, -26.3852, 0.55 ) }
    dend_6 { pt3dadd( 78.0034, 6.62421, -26.3894, 0.55 ) }
    dend_6 { pt3dadd( 81.1966, 7.21761, -26.3873, 0.55 ) }
    dend_6 { pt3dadd( 85.212, 8.25491, -26.5339, 0.83 ) }
    dend_6 { pt3dadd( 87.4667, 9.06317, -26.6717, 0.28 ) }
    dend_6 { pt3dadd( 88.4038, 9.47628, -26.7746, 0.83 ) }
    dend_6 { pt3dadd( 89.6869, 10.1173, -26.9583, 0.55 ) }
    dend_6 { pt3dadd( 90.8096, 10.7422, -27.1521, 0.55 ) }
    dend_6 { pt3dadd( 94.558, 13.1188, -28.0131, 0.28 ) }
    dend_6 { pt3dadd( 96.4707, 14.4662, -28.5669, 0.55 ) }
    dend_6 { pt3dadd( 99.2394, 16.4912, -29.5201, 0.28 ) }
    dend_6 { pt3dadd( 99.8985, 16.9866, -29.7609, 0.55 ) }
    dend_6 { pt3dadd( 100.818, 17.7095, -30.1366, 0.55 ) }
    dend_6 { pt3dadd( 103.008, 19.4915, -31.0542, 0.28 ) }
    dend_6 { pt3dadd( 103.52, 19.9734, -31.2909, 0.55 ) }
    dend_6 { pt3dadd( 104.506, 21.1112, -31.8446, 0.28 ) }
    dend_6 { pt3dadd( 105.169, 22.1369, -32.3017, 0.55 ) }
    dend_6 { pt3dadd( 105.974, 23.6253, -32.9579, 0.28 ) }
    dend_6 { pt3dadd( 106.452, 24.6268, -33.4067, 0.55 ) }
    dend_6 { pt3dadd( 107.394, 26.9235, -34.4053, 0.28 ) }
    dend_6 { pt3dadd( 107.714, 27.7189, -34.7503, 0.55 ) }
    dend_6 { pt3dadd( 108.264, 29.0306, -35.3088, 0.28 ) }
    dend_6 { pt3dadd( 108.417, 29.3834, -35.4492, 0.83 ) }
    dend_6 { pt3dadd( 109.759, 32.2829, -36.5626, 0.28 ) }
    dend_6 { pt3dadd( 109.949, 32.6709, -36.7363, 0.55 ) }
    dend_6 { pt3dadd( 110.895, 34.4651, -37.5809, 0.28 ) }
    dend_6 { pt3dadd( 111.164, 34.9608, -37.8213, 0.55 ) }
    dend_6 { pt3dadd( 112.634, 37.6781, -39.1329, 0.28 ) }
    dend_6 { pt3dadd( 113.157, 38.6881, -39.6267, 0.55 ) }
    dend_6 { pt3dadd( 114.493, 41.5755, -41.0265, 0.28 ) }
    dend_6 { pt3dadd( 114.6, 41.8172, -41.1468, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 80/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -7.78664, -83.2624, 9.07183, 0.55 ) }
    dend_19 { pt3dadd( -3.70985, -87.7763, 11.9274, 0.55 ) }
    dend_19 { pt3dadd( 1.77633, -93.8507, 15.7703, 0.55 ) }
    dend_19 { pt3dadd( 5.22447, -97.6685, 18.1855, 0.55 ) }
    dend_19 { pt3dadd( 9.32445, -102.208, 21.0574, 0.55 ) }
    dend_19 { pt3dadd( 18.4947, -110.791, 26.5662, 0.55 ) }
    dend_19 { pt3dadd( 27.9725, -120.193, 29.7104, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 87/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -7.78664, -83.2624, 9.07183, 0.55 ) }
    dend_18 { pt3dadd( -8.60744, -85.5697, 8.82673, 0.55 ) }
    dend_18 { pt3dadd( -10.0233, -89.5497, 8.40396, 0.55 ) }
    dend_18 { pt3dadd( -11.7361, -94.3645, 7.89251, 0.55 ) }
    dend_18 { pt3dadd( -12.7548, -97.2281, 7.58831, 0.55 ) }
    dend_18 { pt3dadd( -14.2549, -101.445, 7.14038, 0.55 ) }
    dend_18 { pt3dadd( -15.4034, -104.674, 6.79743, 0.55 ) }
    dend_18 { pt3dadd( -19.9346, -114.478, 5.67597, 0.55 ) }
    dend_18 { pt3dadd( -25.2165, -123.954, 6.14266, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_30, dend_25, dend_20, dend_13, dend_8, dend_3, dend_0, dend_34, dend_31, dend_29, dend_26, dend_22, dend_21, dend_15, dend_14, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_36, dend_35, dend_33, dend_32, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_12, dend_11, dend_7, dend_6, dend_19, dend_18]}
    ModelViewParmSubset_2 = new SectionList()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_30, dend_25, dend_20, dend_13, dend_8, dend_3, dend_0, dend_34, dend_31, dend_29, dend_26, dend_22, dend_21, dend_15, dend_14, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_36, dend_35, dend_33, dend_32, dend_28, dend_27, dend_24, dend_23, dend_17, dend_16, dend_12, dend_11, dend_7, dend_6, dend_19, dend_18]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_8 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_29 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_10 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_9 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_4 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_28 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_27 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_24 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_23 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_17 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_16 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_11 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_7 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_6 OneSecGrp_SectionRef_38.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_19 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_18 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_20 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_13 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_3 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_22 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_5 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_30 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_15 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_26 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_31 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_21 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_34 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_35 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_36 OneSecGrp_SectionRef_25.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_8 nseg = 3
    dend_29 nseg = 3
    dend_14 nseg = 5
    dend_10 nseg = 7
    dend_9 nseg = 3
    dend_4 nseg = 3
    dend_2 nseg = 5
    dend_1 nseg = 5
    dend_33 nseg = 5
    dend_28 nseg = 3
    dend_27 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 3
    dend_17 nseg = 3
    dend_16 nseg = 3
    dend_12 nseg = 3
    dend_11 nseg = 3
    dend_7 nseg = 5
    dend_6 nseg = 5
    dend_19 nseg = 3
    dend_18 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_SBC_da4a711a61_0_0


