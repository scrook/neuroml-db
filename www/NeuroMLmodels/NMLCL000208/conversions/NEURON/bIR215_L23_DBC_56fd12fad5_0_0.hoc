// Cell: bIR215_L23_DBC_56fd12fad5_0_0
/*
{
  "id" : "bIR215_L23_DBC_56fd12fad5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.250943, 5.15502, -0.455322, 3.76408", "-0.287266, 4.50998, -0.403251, 6.96761", "-0.32359, 3.86493, -0.351181, 8.3161", "-0.359913, 3.21989, -0.299111, 9.45043", "-0.396236, 2.57484, -0.247041, 9.98693", "-0.43256, 1.9298, -0.194971, 10.312", "-0.468883, 1.28475, -0.142901, 10.5326", "-0.505206, 0.639706, -0.0908309, 10.6917", "-0.54153, -0.00533917, -0.0387608, 10.8509", "-0.577853, -0.650384, 0.0133093, 11.01", "-0.614177, -1.29543, 0.0653794, 11.1688", "-0.6505, -1.94047, 0.11745, 11.0157", "-0.686823, -2.58552, 0.16952, 10.5759", "-0.723147, -3.23057, 0.22159, 10.1362", "-0.75947, -3.87561, 0.27366, 9.69643", "-0.795793, -4.52066, 0.32573, 9.25667", "-0.832117, -5.1657, 0.3778, 8.77464", "-0.86844, -5.81075, 0.42987, 7.84202", "-0.904764, -6.45579, 0.48194, 6.36994", "-0.941087, -7.10084, 0.53401, 4.84705", "-0.97741, -7.74588, 0.58608, 2.62404" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-4.32706, 4.28382, 0.284896, 0.83", "-4.70279, 5.24142, 0.284896, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.73706, -4.26468, 3.5949, 0.28", "-7.69339, -5.58466, 4.32753, 0.28", "-9.51626, -6.74708, 4.92155, 1.38", "-12.5277, -8.72814, 5.85184, 0.83", "-16.4561, -11.3124, 7.06538, 0.28", "-18.3299, -12.5451, 7.64424, 1.38", "-21.3221, -14.5134, 8.56859, 0.28", "-24.2527, -16.4207, 9.50922, 0.28", "-26.523, -17.8385, 10.2149, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.50706, -7.16543, 2.1449, 0.55", "-4.90708, -11.0571, 2.88992, 0.55", "-5.05225, -12.2993, 3.1286, 0.83", "-5.25423, -13.7943, 3.40348, 0.55", "-5.82493, -17.417, 4.20152, 1.11", "-6.75812, -23.2024, 5.38021, 0.28", "-7.00554, -24.7406, 5.63565, 0.83", "-7.20947, -25.9786, 5.81128, 0.28", "-7.561, -28.1073, 6.01729, 0.83", "-8.22729, -32.3815, 6.23986, 0.28", "-8.68694, -35.1786, 6.23068, 0.55", "-9.12055, -38.0508, 6.04217, 0.28", "-9.28339, -39.2829, 5.92147, 0.55", "-9.45201, -40.9358, 5.69917, 0.28", "-9.64307, -44.1195, 5.02239, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "4.26294, 2.79757, 2.6749, 0.28", "5.76758, 5.06253, 2.6749, 0.28", "6.46591, 6.27606, 2.71178, 0.83", "7.40484, 8.00969, 2.78609, 0.28", "8.11408, 9.42567, 2.88288, 1.11", "9.20111, 11.7224, 3.07295, 0.28", "9.90467, 13.2449, 3.23836, 0.83", "11.0409, 15.9883, 3.61383, 0.28", "11.5164, 17.2074, 3.79991, 0.55", "12.338, 19.4396, 4.21495, 0.28", "12.6926, 20.4177, 4.4197, 0.83", "13.5913, 22.8065, 5.05024, 0.55", "14.6332, 25.4561, 5.85383, 0.28", "15.0898, 26.584, 6.22906, 0.83", "15.9781, 28.8043, 7.00611, 0.28", "16.3537, 29.7512, 7.32586, 0.83", "17.0492, 31.646, 7.96087, 0.28", "17.2533, 32.2498, 8.13396, 0.55", "17.456, 32.8621, 8.28202, 0.28", "17.7945, 33.8687, 8.43987, 0.55", "18.3475, 35.518, 8.55471, 0.28", "18.5884, 36.2418, 8.56848, 0.55", "19.1168, 37.8781, 8.49331, 0.28", "19.3321, 38.5122, 8.46807, 0.55", "19.889, 39.9813, 8.42809, 0.55", "20.4703, 41.3428, 8.42925, 0.28", "21.1177, 42.7256, 8.51607, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.78294, -6.96043, -1.9751, 0.55", "3.89371, -7.85941, -2.25287, 0.55", "5.73175, -9.34699, -2.7125, 1.11", "10.2859, -13.0328, -3.85135, 0.28", "11.3195, -13.8694, -4.10983, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999992506011677
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.97741, -7.74588, 0.58608, 0.55", "-1.82074, -22.7222, 0.58608, 0.55", "-2.66408, -37.6984, 0.58608, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-4.70279, 5.24142, 0.284896, 0.28", "-6.47603, 7.13917, 0.85354, 0.28", "-7.72732, 8.47833, 1.25481, 0.55", "-8.71513, 9.5355, 1.57158, 0.28", "-9.70168, 10.5913, 1.88795, 0.55", "-12.2199, 13.2863, 2.69547, 0.28", "-13.2295, 14.3668, 3.01925, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-4.70279, 5.24142, 0.284896, 0.28", "-4.31917, 8.01003, 0.358406, 0.28", "-3.87135, 10.4997, 0.356039, 0.83", "-2.82248, 15.6055, 0.388491, 0.28", "-2.57662, 16.6622, 0.372917, 0.55", "-1.86156, 19.404, 0.334531, 0.28", "-1.36984, 21.1197, 0.295377, 0.83", "0.0251441, 25.3739, 0.121841, 0.28", "0.777995, 27.3788, -0.00423189, 0.55", "2.78003, 32.1509, -0.391759, 0.28", "3.56771, 33.999, -0.511677, 0.83", "4.53816, 36.2377, -0.596037, 0.28", "4.83378, 36.9494, -0.641761, 0.55", "5.55237, 38.7868, -0.758044, 0.28", "6.10357, 40.1646, -0.808698, 0.83", "7.56275, 44.0343, -0.781621, 0.28", "8.25665, 45.9802, -0.73354, 0.83", "9.5485, 49.7451, -0.565045, 0.28", "10.4857, 52.5286, -0.412719, 0.28", "11.4477, 55.2977, -0.200788, 0.83", "12.0383, 56.8995, -0.106939, 0.55", "12.2022, 57.3023, -0.0811952, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-26.523, -17.8385, 10.2149, 0.28", "-27.9846, -19.2251, 9.81655, 0.28", "-28.5149, -19.8051, 9.65267, 0.55", "-29.6716, -21.1917, 9.28389, 0.28", "-30.1893, -21.8123, 9.11883, 0.83", "-31.7888, -23.7299, 8.60883, 0.28", "-32.5035, -24.5866, 8.38097, 0.55", "-33.3648, -25.7722, 8.02163, 0.28", "-33.9896, -26.7043, 7.70881, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-26.523, -17.8385, 10.2149, 0.28", "-25.7782, -20.1998, 10.0455, 0.28", "-25.2363, -22.3008, 9.88846, 0.55", "-24.4281, -26.3473, 9.59175, 0.28", "-24.3336, -26.8204, 9.55706, 0.55", "-23.9238, -28.8722, 9.40661, 0.28", "-23.7133, -29.9259, 9.32935, 0.55", "-23.5601, -30.9387, 9.23695, 0.28", "-23.5747, -31.9994, 9.08746, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-9.64307, -44.1195, 5.02239, 0.28", "-6.87429, -47.1483, 4.93816, 0.28", "-5.85439, -48.591, 4.95504, 0.55", "-5.06744, -50.0639, 5.04065, 0.28", "-4.5196, -51.2684, 5.12614, 0.55", "-3.82712, -53.1332, 5.28504, 0.28", "-3.55222, -53.9829, 5.37513, 0.83", "-2.86908, -56.9694, 5.73487, 0.28", "-2.00307, -61.7659, 6.41163, 0.55", "-1.70942, -63.6879, 6.70729, 0.55", "-1.22656, -66.8054, 7.00011, 0.28", "-1.00971, -68.2794, 7.09047, 0.55", "-0.692025, -70.4986, 7.12793, 0.28", "-0.3353, -73.0477, 7.0882, 0.55", "0.242573, -77.4744, 7.09027, 1.11", "0.9433, -82.6616, 7.20052, 0.28", "1.12512, -83.9533, 7.21778, 0.55", "1.68867, -88.1771, 7.27483, 0.28", "2.07288, -91.7676, 7.15008, 1.11", "2.44517, -96.0885, 6.92271, 0.28", "2.65496, -99.634, 6.64209, 0.83", "2.86095, -104.5, 6.24615, 0.28", "3.02824, -106.678, 5.94805, 1.11", "3.79412, -113.872, 4.6068, 0.28", "3.93482, -115.153, 4.32921, 0.55", "4.18831, -117.55, 3.77175, 0.28", "4.3794, -118.977, 3.45839, 0.55", "5.48279, -125.715, 2.23668, 0.28", "6.21299, -129.653, 1.67112, 1.11", "7.39501, -135.142, 1.17972, 0.28", "7.734, -136.662, 1.06455, 0.55", "8.96093, -141.998, 0.763174, 0.28", "9.46416, -144.212, 0.672122, 0.55", "10.1576, -147.304, 0.669335, 0.28", "10.618, -149.254, 0.703049, 0.83", "11.7142, -153.554, 0.928875, 0.28", "12.071, -155.071, 1.04268, 0.55", "12.9925, -159.984, 1.58266, 0.28", "13.3547, -162.03, 1.80487, 0.55", "14.3, -167.658, 2.43989, 0.28", "14.4742, -168.934, 2.58819, 0.55", "14.5563, -169.688, 2.68379, 0.55", "14.8103, -172.891, 3.12468, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-9.64307, -44.1195, 5.02239, 0.55", "-11.0731, -46.0204, 4.88189, 0.55", "-12.4873, -47.8662, 4.73291, 0.28", "-13.0012, -48.6022, 4.70101, 0.55", "-16.0911, -53.289, 4.64741, 0.28", "-16.5649, -54.0552, 4.60475, 0.83", "-17.8047, -56.1595, 4.43237, 0.28", "-18.3046, -57.1151, 4.33143, 0.55", "-21.3977, -63.8061, 3.61795, 0.28", "-21.8043, -65.0942, 3.46558, 0.55", "-22.4189, -68.5159, 3.06365, 0.28", "-22.51, -69.3831, 2.96418, 0.55", "-22.5813, -71.4681, 2.75903, 0.28", "-22.6248, -72.241, 2.65698, 0.55", "-23.1221, -80.4347, 1.47193, 0.28", "-23.2184, -81.3273, 1.34317, 0.55", "-23.4608, -83.0522, 1.06015, 0.28", "-23.8173, -85.1248, 0.634976, 0.55", "-25.5729, -93.3359, -1.26116, 0.28", "-25.8743, -94.6005, -1.60802, 0.83", "-26.3312, -96.246, -2.13238, 0.83", "-27.4486, -100.558, -3.69018, 0.28", "-27.6378, -101.372, -4.01757, 0.55", "-27.9437, -102.97, -4.65305, 0.28", "-28.2342, -105.815, -5.57289, 0.55", "-28.3354, -106.644, -5.75223, 0.55", "-28.712, -109.837, -6.04874, 0.28", "-28.7908, -110.747, -6.05871, 0.55", "-28.9825, -114.037, -6.04176, 0.28", "-29.0454, -115.515, -6.02063, 0.83", "-29.1809, -119.052, -5.83343, 0.28", "-29.2538, -121.717, -5.67414, 0.83", "-29.2648, -126.499, -5.32803, 0.28", "-29.2575, -127.431, -5.27096, 0.55", "-29.2171, -129.693, -5.16354, 0.28", "-29.2215, -130.278, -5.1256, 0.55", "-29.2785, -131.711, -4.99963, 0.28", "-29.3518, -132.614, -4.88089, 0.55", "-29.4785, -133.832, -4.70234, 0.28", "-29.6443, -135.533, -4.46014, 1.11", "-30.1342, -140.474, -3.85199, 0.28", "-30.2493, -141.631, -3.73173, 0.83", "-30.4202, -143.429, -3.58785, 0.83", "-30.9787, -149.188, -3.24977, 0.28", "-31.0492, -149.859, -3.23889, 0.55", "-31.2699, -151.81, -3.28023, 0.28", "-31.3923, -152.686, -3.35707, 0.55", "-31.7007, -154.757, -3.61098, 0.28", "-31.9558, -156.17, -3.85784, 0.83", "-32.4265, -158.293, -4.34069, 0.28", "-32.4814, -158.567, -4.42971, 0.55", "-32.7904, -160.574, -5.18225, 0.28", "-32.8621, -161.169, -5.42107, 0.55", "-32.9444, -162.194, -5.86985, 0.55", "-32.8639, -163.532, -6.57487, 0.83", "-32.3345, -166.637, -8.32941, 0.28", "-31.9377, -167.376, -9.19099, 0.55", "-31.3619, -167.956, -10.2397, 0.28", "-30.8755, -168.318, -11.0451, 0.55", "-29.1287, -169.385, -13.7337, 0.28", "-28.7922, -169.562, -14.2346, 0.83", "-24.1418, -171.791, -21.0675, 0.28", "-23.8133, -171.952, -21.575, 0.55", "-22.3471, -172.703, -23.9286, 0.28", "-21.7418, -173.107, -24.9696, 0.55", "-21.2724, -173.595, -25.8659, 0.28", "-20.9585, -174.041, -26.4965, 0.55", "-20.5705, -175.433, -27.4263, 0.28", "-20.4167, -176.163, -27.9145, 0.55", "-20.1851, -178.486, -29.3566, 0.28", "-20.03, -180.24, -30.4045, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "21.1177, 42.7256, 8.51607, 0.28", "19.6964, 44.2855, 9.68039, 0.28", "19.1884, 44.8749, 10.0767, 0.55", "16.9557, 47.6218, 11.7967, 0.28", "16.3452, 48.4319, 12.2605, 0.55", "13.1185, 52.981, 14.7014, 0.28", "12.137, 54.4442, 15.4513, 0.83", "10.9153, 56.4813, 16.4073, 0.28", "10.2922, 57.6014, 16.8519, 0.55", "9.67091, 58.9784, 17.2505, 0.28", "9.49992, 59.4465, 17.3348, 0.55", "9.14762, 61.0499, 17.3381, 0.28", "8.93933, 62.1412, 17.2782, 0.55", "8.55995, 64.3566, 17.2394, 0.28", "8.29212, 65.8923, 17.2632, 0.83", "8.17031, 66.9612, 17.32, 0.83", "8.09848, 69.0274, 17.455, 0.28", "8.0964, 69.8607, 17.5056, 0.55", "8.20835, 73.9962, 17.8249, 0.28", "8.25031, 74.5569, 17.9021, 0.55", "8.61398, 78.1756, 18.5299, 0.28", "8.82782, 79.5576, 18.7844, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "21.1177, 42.7256, 8.51607, 0.28", "22.1754, 46.0355, 8.90531, 0.28", "22.285, 46.4487, 8.98435, 0.55", "23.3243, 51.0575, 10.0812, 0.28", "23.6349, 52.6267, 10.5529, 0.55", "24.2764, 56.2937, 11.779, 0.28", "24.4874, 57.5899, 12.2416, 0.55", "24.725, 59.7351, 13.1775, 0.28", "24.9007, 62.1042, 14.1882, 0.83", "25.0057, 65.2158, 15.5346, 0.28", "25.015, 65.8195, 15.7669, 0.55", "25.034, 68.0165, 16.5517, 0.28", "25.0187, 69.5866, 17.073, 0.83", "24.8899, 75.2424, 18.7663, 0.28", "24.8346, 76.5718, 19.1256, 0.55", "24.7019, 78.8055, 19.6886, 0.28", "24.6579, 79.4883, 19.8649, 0.55", "24.2698, 83.8995, 21.042, 0.28", "24.2335, 84.2794, 21.1458, 0.55", "23.8556, 87.5367, 22.0832, 0.28", "23.8166, 88.3754, 22.2784, 0.55", "23.8563, 90.1169, 22.6244, 0.28", "23.9358, 91.7252, 22.9089, 0.83", "24.2402, 94.8048, 23.3552, 0.28", "24.3094, 95.3533, 23.4255, 0.83", "25.1595, 100.353, 23.9052, 0.28", "25.5219, 102.12, 24.003, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "11.3195, -13.8694, -4.10983, 0.28", "12.7872, -17.2282, -4.92036, 0.28", "13.5844, -19.0526, -5.36062, 0.55", "14.7674, -21.7598, -6.0139, 0.28", "16.2234, -25.092, -6.818, 0.83", "17.8102, -28.7235, -7.69433, 0.28", "18.7568, -30.8897, -8.21706, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "11.3195, -13.8694, -4.10983, 0.28", "13.4525, -14.7667, -4.12999, 0.28", "14.7135, -15.2972, -4.14191, 0.83", "17.0672, -16.2874, -4.16416, 0.28", "18.6793, -16.9656, -4.1794, 1.11", "20.5463, -17.7511, -4.19705, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.66408, -37.6984, 0.58608, 0.28", "-3.50741, -52.6747, 0.58608, 0.28", "-4.35075, -67.651, 0.58608, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-13.2295, 14.3668, 3.01925, 0.28", "-16.4423, 14.7683, 3.73065, 0.28", "-18.358, 15.0347, 4.20955, 0.55", "-20.052, 15.2498, 4.63996, 0.28", "-22.731, 15.5556, 5.38037, 0.83", "-25.675, 15.8002, 6.18491, 0.28", "-27.9746, 15.9418, 6.80075, 0.28", "-30.5498, 16.0515, 7.5402, 0.83", "-32.9907, 16.1227, 8.25669, 0.28", "-35.0255, 16.1572, 8.83965, 0.83", "-40.2922, 16.1827, 10.3298, 0.28", "-43.5685, 16.2091, 11.1531, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-13.2295, 14.3668, 3.01925, 0.28", "-12.3714, 17.2312, 3.89996, 0.28", "-11.8659, 18.9186, 4.41878, 0.28", "-11.6548, 19.6232, 4.6354, 0.55", "-10.517, 23.4212, 5.80317, 0.28", "-9.95821, 25.2863, 6.37664, 0.83", "-8.90323, 28.8078, 7.45939, 0.28" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "12.2022, 57.3023, -0.0811952, 0.28", "13.1414, 61.7581, 0.457076, 0.28", "13.3444, 62.6988, 0.555188, 0.55", "13.6259, 63.9392, 0.681963, 0.28", "13.8464, 64.9145, 0.780878, 0.55", "14.7581, 68.9472, 1.18986, 0.28", "15.4019, 71.7951, 1.47869, 0.83", "16.1291, 75.0616, 1.93233, 0.28", "16.4186, 76.3349, 2.09798, 0.55", "16.4985, 76.6728, 2.1395, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "12.2022, 57.3023, -0.0811952, 0.28", "16.3799, 62.3259, 0.155604, 0.28", "18.3002, 64.6868, 0.257684, 0.55", "20.9449, 67.9224, 0.445832, 0.28", "21.3955, 68.441, 0.450039, 0.55", "24.5693, 72.0548, 0.399456, 0.28", "25.78, 73.3888, 0.293746, 0.55", "28.0549, 75.9996, -0.0518926, 0.28", "28.8381, 76.8583, -0.261473, 0.55", "32.6609, 80.9269, -1.59342, 0.28", "33.5229, 81.6613, -2.16685, 0.83", "36.5354, 83.8258, -4.80499, 0.28", "37.6022, 84.491, -5.81755, 0.55", "39.0692, 85.2403, -7.23837, 0.28", "40.6889, 85.9234, -8.75531, 0.55", "51.2954, 89.4678, -18.3128, 0.28", "52.1927, 89.7016, -19.0604, 0.55", "54.918, 90.2012, -21.0355, 0.28", "57.0988, 90.4117, -22.3314, 0.55", "60.8176, 90.5305, -23.9743, 0.28", "62.2571, 90.4551, -24.3553, 0.55", "64.2023, 90.1954, -24.3778, 0.28", "67.4144, 89.6057, -24.4185, 0.55", "72.5303, 88.3937, -24.4536, 0.28", "74.4559, 87.8408, -24.4781, 0.55", "76.7642, 87.0874, -24.5075, 0.28", "78.8147, 86.4008, -24.5639, 0.55", "82.135, 85.3524, -24.7955, 0.28", "84.0469, 84.8058, -25.0565, 0.83", "90.2016, 83.2897, -26.09, 0.28", "91.3342, 83.1287, -26.2526, 0.55", "94.0391, 83.0066, -26.5788, 0.28", "96.5355, 83.1215, -26.8443, 0.55", "99.9946, 83.6055, -27.2485, 0.28", "101.556, 83.9641, -27.541, 0.55", "111.859, 87.0818, -29.8138, 0.28", "113.645, 87.6255, -30.2704, 0.55", "118.982, 89.2592, -31.757, 0.28", "121.558, 90.0657, -32.483, 0.55", "127.899, 92.1552, -34.3896, 0.28", "129.806, 92.8039, -35.0986, 0.55", "132.471, 93.7883, -36.6395, 0.28", "134.21, 94.2989, -37.672, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-33.9896, -26.7043, 7.70881, 0.28", "-32.1427, -31.7073, 6.46275, 0.28", "-31.813, -32.6003, 6.24032, 0.55", "-30.4763, -36.2213, 5.33847, 0.28", "-30.0341, -37.4192, 5.04013, 0.83", "-28.9554, -40.3414, 4.31232, 0.28", "-28.4162, -41.8019, 3.94857, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-33.9896, -26.7043, 7.70881, 0.28", "-34.7248, -29.4241, 8.0463, 0.28", "-34.8297, -29.7739, 8.07332, 0.83", "-35.383, -31.5444, 8.21328, 0.28", "-35.564, -32.0791, 8.21753, 0.83", "-36.1191, -33.541, 8.16884, 0.28", "-36.2753, -33.9134, 8.14252, 0.55", "-36.9659, -35.2894, 7.95086, 0.28", "-37.8468, -36.8642, 7.65989, 0.83", "-39.1872, -39.0144, 7.19591, 0.28", "-39.9306, -40.1454, 6.92273, 0.83", "-40.8155, -41.3851, 6.58255, 0.28", "-41.7172, -42.5261, 6.25563, 0.83", "-42.4271, -43.3054, 6.00114, 0.28", "-42.9442, -43.8149, 5.80792, 0.55", "-43.6798, -44.4819, 5.58393, 0.28", "-44.2653, -45.0121, 5.4059, 0.55", "-46.3688, -46.8491, 4.82821, 0.83", "-47.647, -47.9703, 4.48795, 0.28", "-48.4743, -48.652, 4.28712, 0.55", "-50.6388, -50.3418, 3.80271, 0.28", "-51.8299, -51.2974, 3.57873, 1.11", "-53.956, -53.0438, 3.18974, 0.28", "-54.7072, -53.7314, 3.05595, 0.55", "-56.1673, -55.2109, 2.77486, 0.28", "-56.9077, -56.0223, 2.601, 0.83", "-59.1991, -59.0185, 1.79778, 0.28", "-59.9437, -60.2035, 1.42075, 0.83", "-61.6145, -63.4481, 0.244646, 0.28", "-62.3003, -65.0215, -0.364898, 1.11", "-62.6458, -65.9735, -0.755626, 1.11", "-63.4558, -68.6475, -1.85577, 0.28", "-64.0265, -70.9186, -2.81792, 0.28", "-64.2209, -71.6591, -3.13867, 0.55", "-64.7676, -73.5814, -3.98948, 0.28", "-65.0735, -74.4971, -4.41531, 0.83", "-65.9849, -76.8834, -5.56977, 0.28", "-66.3766, -77.8189, -6.041, 0.55", "-68.4185, -82.5538, -8.47814, 0.28", "-68.8362, -83.5486, -8.95113, 0.55", "-69.8327, -85.9283, -10.0187, 0.28", "-70.1226, -86.6256, -10.3175, 0.55", "-71.7441, -90.4692, -11.9136, 0.28", "-72.5547, -92.5665, -12.7391, 0.83", "-73.5497, -95.5948, -13.8376, 0.28", "-73.854, -96.5279, -14.2049, 0.83", "-74.2138, -97.7144, -14.6556, 0.28", "-74.444, -98.4268, -14.9966, 0.55", "-75.1163, -100.361, -16.0967, 0.28", "-75.3511, -101.046, -16.5097, 0.55", "-76.3697, -104.078, -18.3895, 0.28", "-76.7148, -105.114, -19.0058, 0.55", "-79.0098, -112.111, -22.9724, 0.28", "-79.4392, -113.424, -23.6878, 0.83", "-80.9839, -118.077, -26.0995, 0.28", "-81.2408, -118.888, -26.5191, 0.55", "-82.6366, -123.616, -28.943, 0.28", "-82.7736, -124.081, -29.1858, 0.55", "-83.4967, -126.849, -30.5836, 0.28", "-83.6253, -127.376, -30.8479, 0.83", "-83.862, -128.304, -31.3056, 0.83", "-84.3308, -130.028, -32.1208, 0.83", "-84.9219, -132.272, -33.1415, 0.28", "-85.4346, -133.895, -33.989, 0.28", "-85.6178, -134.447, -34.3198, 0.55", "-86.1978, -136.19, -35.4099, 0.28", "-86.572, -137.265, -36.1009, 0.55", "-87.7815, -140.795, -38.4581, 0.28", "-88.5401, -142.984, -39.945, 0.83", "-90.645, -149.008, -44.1416, 0.28", "-90.8989, -149.763, -44.6862, 0.83", "-91.2795, -150.979, -45.5802, 0.28", "-91.5021, -151.7, -46.1153, 0.83", "-92.4383, -154.684, -48.3368, 0.28", "-92.5476, -155.057, -48.5937, 0.55", "-93.1941, -157.107, -50.0468, 0.28", "-93.5287, -158.187, -50.8212, 0.83", "-94.1846, -160.389, -52.3846, 0.28", "-94.5198, -161.485, -53.1597, 0.55", "-96.0288, -166.344, -56.582, 0.28", "-96.1373, -166.705, -56.828, 0.55", "-96.4929, -167.924, -57.6259, 0.28", "-96.8543, -169.251, -58.4934, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "14.8103, -172.891, 3.12468, 0.28", "18.1089, -173.846, 4.3172, 0.28", "20.2579, -174.468, 5.09414, 0.83", "23.2015, -175.32, 6.15833, 0.28", "24.9748, -175.834, 6.79941, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "14.8103, -172.891, 3.12468, 0.83", "15.0309, -175.809, 3.24969, 0.83", "15.4707, -178.862, 3.4735, 0.28", "15.5992, -179.465, 3.50381, 0.55", "16.0558, -181.482, 3.59171, 0.28", "16.1992, -182.124, 3.62544, 0.55", "16.5496, -183.777, 3.72691, 0.28", "16.8557, -185.188, 3.86739, 0.83", "17.5593, -188.184, 4.27332, 0.28", "17.7283, -189.042, 4.4173, 0.55", "18.1195, -191.582, 4.86456, 0.28", "18.2278, -192.682, 5.04857, 0.55", "18.2863, -195.344, 5.41005, 0.28", "18.2617, -196.567, 5.58409, 0.83", "18.2498, -198.571, 5.92623, 0.83", "18.3041, -200.168, 6.20101, 0.28", "18.4068, -201.543, 6.44859, 0.55", "18.8169, -205.999, 7.29455, 0.28", "18.9634, -207.423, 7.61327, 0.55", "19.271, -210.534, 8.40074, 0.28", "19.4704, -212.615, 9.02487, 0.55", "19.7142, -215.574, 10.072, 0.28", "19.8323, -217.688, 10.8863, 0.55", "19.9673, -220.988, 12.2403, 0.28", "19.9774, -223.344, 13.1213, 0.83", "19.8769, -227.001, 14.3767, 0.28", "19.8503, -228.302, 14.7794, 0.55", "19.8155, -232.674, 15.9838, 0.28", "19.8497, -234.511, 16.4135, 0.55", "19.9928, -238.949, 17.2475, 0.28", "20.1613, -241.77, 17.6775, 0.83", "20.3902, -244.562, 17.9965, 0.28", "20.4434, -245.184, 18.0537, 0.55", "20.6436, -247.74, 18.2896, 0.28", "20.6821, -248.628, 18.3708, 0.83", "20.7681, -251.118, 18.6412, 0.28", "20.7378, -252.335, 18.7643, 0.55", "20.4661, -255.124, 19.0247, 0.28", "20.3069, -256.087, 19.0492, 0.55", "19.8798, -258.246, 19.0269, 0.28", "19.7881, -258.705, 19.021, 0.55", "19.5102, -260.102, 18.999, 0.28", "19.3336, -261.207, 18.993, 0.55", "18.3678, -268.702, 19.0306, 0.28", "18.0632, -271.777, 19.0849, 0.83", "17.8772, -274.36, 19.1761, 0.28", "17.8323, -275.863, 19.263, 0.55", "18.0915, -283.476, 19.85, 0.28", "18.3452, -285.22, 19.9975, 1.11", "18.716, -286.462, 20.1422, 0.28", "19.0997, -287.406, 20.2438, 0.55", "20.663, -290.412, 20.5864, 0.28", "21.7039, -292.131, 20.8153, 0.28", "24.9835, -296.732, 21.4937, 0.28", "25.8186, -297.879, 21.6615, 0.83", "26.742, -299.163, 21.8401, 0.28", "27.9257, -300.885, 22.0711, 0.83", "30.1354, -304.379, 22.4927, 0.28", "30.4032, -304.898, 22.5805, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-20.03, -180.24, -30.4045, 0.28", "-19.5456, -188.917, -28.7327, 0.28", "-19.332, -191.958, -28.4878, 0.55", "-19.1597, -194.636, -28.3332, 0.28", "-19.0876, -196.404, -28.239, 0.55", "-19.0372, -199.266, -28.1008, 0.28", "-19.0478, -201.821, -27.9459, 0.55", "-19.3783, -209.678, -27.5724, 0.28", "-19.4716, -211.019, -27.4948, 0.55", "-19.7259, -213.677, -27.2298, 0.28", "-19.9145, -215.38, -26.9696, 0.55", "-20.2018, -217.907, -26.4386, 0.28", "-20.4224, -220.258, -25.8241, 1.94", "-20.8684, -224.869, -24.2821, 0.28", "-21.1185, -228.488, -23.0972, 1.38", "-21.2033, -231.013, -22.2574, 0.28", "-21.2127, -232.648, -21.7072, 0.83", "-21.1452, -235.659, -20.7454, 0.28", "-21.0202, -238.159, -19.9228, 1.94" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-20.03, -180.24, -30.4045, 0.55", "-23.9877, -181.847, -34.2227, 0.55", "-26.1802, -182.716, -35.9172, 0.28", "-26.8848, -182.995, -36.4618, 0.55", "-30.7756, -184.536, -39.4688, 0.28", "-32.9899, -185.413, -41.18, 0.83", "-36.9209, -186.97, -44.218, 0.28", "-38.9788, -187.583, -45.2666, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "18.7568, -30.8897, -8.21706, 0.28", "21.1537, -29.5489, -8.82074, 0.28", "21.8272, -29.1999, -8.9606, 0.83", "24.5336, -28.0168, -9.3005, 0.28", "25.4111, -27.664, -9.42166, 0.55", "26.9911, -27.0289, -9.6398, 0.28", "27.994, -26.6258, -9.77829, 0.55", "29.0642, -26.2247, -9.8876, 0.55", "31.6597, -25.3594, -10.0692, 0.28", "33.2248, -24.9903, -10.0392, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "18.7568, -30.8897, -8.21706, 0.28", "17.5977, -34.5739, -8.55276, 0.28", "17.1702, -36.4285, -8.86677, 0.83", "16.6526, -39.057, -9.34866, 0.28", "16.5547, -39.6849, -9.42923, 0.55", "16.2225, -42.2525, -9.66892, 0.28", "15.9318, -45.5845, -9.96476, 1.11", "15.8998, -49.8514, -10.3145, 0.28", "15.9557, -51.3285, -10.4177, 0.55", "16.2932, -55.4088, -10.6506, 0.28", "16.4371, -56.6634, -10.7242, 0.55", "17.1737, -61.2514, -10.9695, 0.28", "17.6144, -63.5208, -11.0572, 0.83", "18.2909, -66.6878, -11.0539, 0.28", "18.6617, -68.2982, -11.0889, 0.55", "19.34, -71.0603, -11.2476, 0.28", "19.801, -72.8861, -11.3257, 0.55", "20.3992, -75.1623, -11.2819, 0.28", "21.0124, -77.4409, -11.1859, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "20.5463, -17.7511, -4.19705, 0.28", "21.9431, -17.8214, -2.75949, 0.28", "24.4505, -16.9896, -0.0322054, 0.28", "27.7929, -14.8182, 3.74216, 0.28", "28.7108, -13.9367, 4.69326, 0.83", "30.4865, -11.8725, 6.45042, 0.28", "31.4047, -10.8051, 7.35898, 0.83", "32.9911, -8.09096, 8.96346, 0.28", "33.3591, -7.08609, 9.37178, 0.55", "34.1312, -3.9315, 9.95206, 0.28", "34.2902, -3.23631, 10.0435, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "20.5463, -17.7511, -4.19705, 0.55", "20.6014, -18.6914, -4.36849, 0.55", "20.9004, -21.5443, -4.74655, 0.28", "21.1398, -23.3623, -4.84171, 0.28", "21.2845, -24.4616, -4.89925, 0.55", "21.3904, -25.2666, -4.94138, 0.55", "21.7302, -27.8474, -5.07647, 0.83", "22.6524, -33.8743, -5.25341, 0.28", "23.0155, -35.9641, -5.19547, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-43.5685, 16.2091, 11.1531, 0.55", "-46.6732, 16.5726, 11.9845, 0.55", "-50.9304, 17.0281, 13.2793, 0.28", "-54.7841, 17.4506, 14.7066, 0.55", "-57.6808, 17.7603, 15.849, 0.28", "-58.9567, 17.9499, 16.4206, 0.28", "-60.491, 18.2636, 17.1865, 0.55", "-63.1556, 18.7639, 18.7431, 0.55", "-65.4947, 19.3508, 20.4123, 0.28", "-66.3087, 19.6507, 21.0644, 0.55", "-68.7895, 20.6424, 23.0238, 0.28", "-70.2057, 21.3709, 24.3224, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-43.5685, 16.2091, 11.1531, 0.28", "-47.2585, 15.7086, 11.2168, 0.28", "-47.7357, 15.6379, 11.1697, 0.55", "-50.2695, 15.208, 11.1391, 0.28", "-51.3338, 14.9985, 11.184, 0.55", "-53.2367, 14.6351, 11.4383, 0.28", "-54.6675, 14.2958, 11.7516, 0.55", "-60.476, 12.7877, 13.535, 0.28", "-64.1692, 11.787, 14.8477, 0.55", "-65.3652, 11.4627, 15.3177, 0.28", "-68.4903, 10.6094, 16.6855, 0.28", "-73.3745, 9.26013, 18.7929, 0.83", "-75.1714, 8.75281, 19.6608, 0.55", "-77.4275, 8.10552, 20.9148, 0.28", "-79.273, 7.60892, 21.7739, 0.55", "-81.5438, 7.04284, 22.6711, 0.28", "-84.7505, 6.22997, 23.5437, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-8.90323, 28.8078, 7.45939, 0.28", "-8.01242, 29.1605, 8.02069, 0.28", "-7.60063, 29.3236, 8.28016, 0.55", "-5.85673, 30.014, 9.379, 0.28", "-4.94495, 30.375, 9.95352, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-8.90323, 28.8078, 7.45939, 0.28", "-9.10456, 30.5902, 8.5589, 0.28", "-9.26287, 31.9917, 9.42348, 0.83" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "16.4985, 76.6728, 2.1395, 0.28", "19.3751, 77.2766, 2.19715, 0.28", "20.0284, 77.3901, 2.23248, 0.55", "21.1406, 77.5268, 2.33868, 0.28", "22.1993, 77.607, 2.46721, 0.55", "23.0862, 77.6617, 2.56968, 0.28", "24.8639, 77.7026, 2.81578, 0.83", "26.7712, 77.688, 3.16115, 0.28", "28.3083, 77.6798, 3.44624, 0.55", "30.8215, 77.7062, 3.94568, 0.28", "32.6255, 77.7924, 4.28766, 0.55", "35.3304, 77.9897, 4.8031, 0.28", "37.1954, 78.231, 5.13342, 0.83", "39.2417, 78.6311, 5.47459, 0.28", "40.1712, 78.8967, 5.59082, 0.55", "42.6769, 79.8135, 5.83595, 0.28", "43.6128, 80.2284, 5.90771, 0.55", "46.2237, 81.5501, 6.01627, 0.28", "47.2931, 82.1358, 6.03016, 0.55", "50.5368, 84.0795, 6.0555, 0.28", "51.5344, 84.738, 6.06135, 0.83", "52.6012, 85.5622, 6.09564, 0.83", "53.4086, 86.2807, 6.13284, 0.83", "55.4661, 88.5008, 6.2712, 0.28", "56.7165, 90.2012, 6.39419, 0.28", "57.1006, 90.8638, 6.46101, 0.55", "58.5076, 93.5003, 6.6244, 0.28", "58.8974, 94.2598, 6.65604, 0.55", "59.8372, 96.088, 6.61365, 0.28", "61.2579, 98.9646, 6.51044, 0.28", "62.0543, 100.551, 6.40181, 0.83", "63.7873, 103.827, 6.08224, 0.28", "64.2976, 104.754, 5.9446, 0.55", "66.057, 107.668, 5.41226, 0.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "16.4985, 76.6728, 2.1395, 0.28", "14.9348, 79.9464, 1.51362, 0.28", "14.484, 80.6605, 1.28916, 0.55", "10.828, 85.6329, -0.607438, 0.28", "10.4018, 86.1466, -0.845576, 0.55", "9.20949, 87.3867, -1.52722, 0.28", "8.09116, 88.3637, -2.19499, 0.55", "4.07954, 90.7651, -4.71042, 0.28", "3.5298, 90.9803, -5.10107, 0.55", "2.07443, 91.3467, -6.16745, 0.28", "0.458427, 91.7257, -7.41181, 0.83", "-1.76584, 92.2051, -9.12939, 0.28", "-3.51781, 92.6247, -10.3716, 0.83", "-9.74427, 94.3686, -14.787, 0.28", "-11.99, 95.0913, -16.4078, 0.55", "-14.3848, 95.9219, -18.1275, 0.28", "-15.8011, 96.4841, -19.2168, 0.55", "-22.0711, 99.0598, -24.1711, 0.28", "-23.8209, 99.7708, -25.5666, 0.55", "-25.5139, 100.44, -26.9103, 0.28", "-26.7591, 100.892, -27.9205, 0.55", "-30.9522, 102.255, -31.3135, 0.28", "-33.006, 102.811, -33.082, 0.28", "-34.6003, 103.117, -34.5215, 0.55", "-36.1552, 103.373, -35.8588, 0.28", "-37.7757, 103.677, -37.2643, 0.83", "-40.6733, 104.309, -39.8349, 0.28", "-42.4039, 104.729, -41.3595, 0.83", "-47.3729, 106.243, -46.1361, 0.28", "-48.802, 106.801, -47.6761, 0.55", "-50.7518, 107.772, -49.9552, 0.28", "-51.1572, 107.985, -50.4878, 0.55", "-51.6351, 108.233, -51.1719, 0.28", "-52.5969, 108.709, -52.6599, 0.55", "-54.8853, 109.685, -56.3646, 0.28", "-56.687, 110.149, -58.8966, 0.83", "-62.3837, 110.995, -66.1741, 0.28", "-64.1622, 111.133, -68.2753, 0.55", "-66.1056, 111.19, -70.3892, 0.28", "-67.1092, 111.184, -71.3382, 0.55", "-72.5202, 110.976, -75.894, 0.28", "-74.1859, 110.881, -77.1817, 0.55", "-76.4376, 110.781, -78.628, 0.28", "-78.4169, 110.735, -79.7776, 0.55", "-82.237, 110.739, -81.8179, 0.28", "-83.9672, 110.824, -82.7966, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-28.4162, -41.8019, 3.94857, 0.55", "-26.2742, -41.7651, 3.15111, 0.55", "-24.8022, -41.7398, 2.60309, 0.28", "-23.667, -41.7203, 2.18047, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-28.4162, -41.8019, 3.94857, 0.28", "-29.1835, -45.147, 3.00054, 0.28", "-29.4721, -46.4319, 2.72969, 0.83", "-29.608, -47.0318, 2.5422, 0.83", "-29.8948, -48.4067, 2.05346, 0.28", "-29.9895, -48.8917, 1.87588, 0.55", "-30.1322, -49.7434, 1.57163, 0.28", "-30.2558, -50.7024, 1.23818, 0.55", "-30.6044, -54.095, -0.0621657, 0.28", "-30.6346, -54.7291, -0.322303, 0.55", "-30.6216, -56.2428, -0.98535, 0.28", "-30.594, -57.0317, -1.36529, 0.55", "-30.553, -57.925, -1.81998, 0.28", "-30.4793, -59.086, -2.40251, 1.38", "-30.4236, -59.9372, -2.79192, 0.83", "-30.3999, -61.2446, -3.40172, 0.83", "-30.4555, -63.0215, -4.27202, 0.28", "-30.5373, -63.6038, -4.58788, 0.55", "-30.6613, -64.1042, -4.85818, 0.28", "-30.9499, -64.9234, -5.31935, 0.55", "-31.3291, -65.7695, -5.76234, 0.28", "-31.7411, -66.6139, -6.16166, 1.38", "-32.4968, -68.1059, -6.77151, 0.55", "-33.0255, -69.258, -7.17828, 0.28", "-33.3776, -70.0529, -7.42559, 0.55", "-34.0492, -71.6887, -7.89057, 0.28", "-34.4017, -72.6207, -8.14668, 1.11", "-34.7373, -73.5582, -8.36591, 1.11", "-36.2079, -77.9256, -9.29511, 0.28", "-36.5137, -78.8451, -9.52777, 0.83", "-37.5002, -81.8288, -10.3429, 0.28", "-37.7745, -82.7016, -10.6112, 0.55", "-38.4293, -84.806, -11.297, 0.28", "-38.838, -86.1564, -11.7643, 0.83", "-39.4853, -88.2985, -12.5784, 0.28", "-39.6381, -88.8156, -12.7872, 0.83", "-40.2969, -91.0406, -13.7484, 0.28", "-40.6007, -92.0563, -14.2126, 0.83", "-40.642, -92.2176, -14.2991, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "33.2248, -24.9903, -10.0392, 0.28", "31.9235, -20.0992, -9.39718, 0.28", "31.5448, -18.6754, -9.21031, 0.83", "30.092, -13.2147, -8.4936, 0.28", "29.5801, -11.2908, -8.24108, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "33.2248, -24.9903, -10.0392, 0.28", "34.6622, -24.1025, -9.37973, 0.28", "35.2261, -23.7044, -9.1328, 0.83", "36.2396, -22.9282, -8.70484, 0.83", "38.3163, -21.2381, -7.90452, 0.28", "40.5723, -19.3447, -7.08033, 0.28", "41.1179, -18.8953, -6.88491, 0.83", "42.2459, -17.9192, -6.49127, 0.28", "43.2025, -17.079, -6.1842, 0.83", "44.7916, -15.6781, -5.70452, 0.28", "45.2626, -15.3355, -5.61074, 0.55", "46.0834, -14.9177, -5.485, 0.28", "46.4119, -14.7744, -5.43755, 0.55", "47.6367, -14.3604, -5.27323, 0.28", "48.0335, -14.2561, -5.22754, 0.83", "52.6852, -13.3495, -4.76135, 0.28", "53.4812, -13.1978, -4.69973, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "21.0124, -77.4409, -11.1859, 0.83", "21.0026, -77.5253, -11.2677, 0.83", "20.7163, -79.0934, -13.066, 0.28", "20.4537, -80.2425, -14.4219, 0.83", "20.0357, -81.899, -16.4707, 0.28", "19.8463, -82.5932, -17.3313, 0.83", "19.3511, -84.4435, -19.6806, 0.28", "19.08, -85.4578, -21.0901, 0.28", "18.9391, -85.939, -21.8513, 0.55", "18.7965, -86.6998, -23.1449, 0.28", "18.7747, -87.0782, -23.7456, 0.55", "18.7877, -87.8153, -24.8115, 0.83", "18.9368, -88.6849, -25.9099, 0.28", "19.0267, -88.9593, -26.2693, 0.55", "19.734, -90.5644, -28.4699, 0.28", "20.1164, -91.2805, -29.4094, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "21.0124, -77.4409, -11.1859, 0.28", "22.3173, -78.2689, -10.2081, 0.28", "23.6708, -78.8657, -9.03736, 0.83", "26.765, -79.984, -6.31235, 0.28", "28.2564, -80.412, -5.04608, 0.83", "31.1633, -81.122, -2.65655, 0.28", "31.9866, -81.2774, -2.01512, 0.55", "37.9698, -81.9071, 2.48133, 0.28", "38.9114, -81.954, 3.18126, 0.55", "41.6367, -81.948, 5.11859, 0.28", "42.6654, -81.9332, 5.84638, 0.55", "46.4065, -81.7854, 8.37561, 0.28", "47.6112, -81.7231, 9.12517, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "34.2902, -3.23631, 10.0435, 0.28", "35.1301, 0.081372, 10.1389, 0.28", "35.2486, 0.487775, 10.1378, 0.55", "38.1879, 10.2438, 10.0834, 0.28", "38.6, 11.5519, 10.1431, 0.55", "39.5237, 14.3971, 10.3435, 0.28", "40.1166, 16.2233, 10.4721, 0.83", "43.4932, 26.3682, 11.2458, 0.28", "44.059, 27.9986, 11.3857, 0.55", "47.1093, 36.2437, 12.2852, 0.28", "47.4619, 37.1782, 12.3957, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "34.2902, -3.23631, 10.0435, 0.28", "35.7287, -0.117332, 10.9556, 0.28", "36.3541, 1.24342, 11.3518, 0.55", "37.9885, 4.91409, 12.2883, 0.28", "38.5081, 6.06717, 12.5373, 0.55", "41.9804, 13.7676, 14.0591, 0.28", "42.8313, 15.6418, 14.3841, 0.83", "45.9651, 22.5691, 15.3717, 0.28", "47.0845, 25.0494, 15.6765, 0.83", "48.6084, 28.3516, 15.999, 0.28", "48.9578, 29.1119, 16.0487, 0.55", "49.9277, 31.227, 15.9959, 0.28", "50.5286, 32.5027, 15.8873, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "23.0155, -35.9641, -5.19547, 0.83", "22.969, -36.2043, -5.18016, 0.83", "22.5045, -39.1791, -4.9265, 0.28", "22.3685, -40.5452, -4.86932, 0.55", "22.1046, -43.3728, -4.64444, 0.28", "21.9557, -45.2373, -4.55147, 0.55", "21.6841, -48.6076, -4.4096, 0.28", "21.581, -50.7744, -4.33642, 0.55", "21.5142, -53.7862, -4.25392, 0.28", "21.4744, -56.7517, -4.19034, 0.83", "21.4614, -60.8154, -4.24575, 0.28", "21.4223, -63.7775, -4.23526, 0.83", "21.3506, -66.0051, -4.14815, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "23.0155, -35.9641, -5.19547, 0.28", "20.1792, -36.5161, -2.66897, 0.28", "19.1714, -36.6579, -2.21031, 0.55", "14.2508, -37.3379, -0.285982, 0.28", "13.2253, -37.5193, 0.116546, 0.55", "9.88557, -38.2099, 1.50233, 0.28", "8.05307, -38.5887, 2.26269, 0.83", "-0.664668, -40.1045, 5.45788, 0.28", "-2.59439, -40.4502, 6.09876, 0.83", "-5.96639, -41.1828, 7.00681, 0.28", "-7.85095, -41.618, 7.5544, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-84.7505, 6.22997, 23.5437, 0.55", "-86.9201, 4.86024, 23.378, 0.55", "-88.8697, 3.60804, 22.9987, 0.28", "-90.4202, 2.59859, 22.5879, 0.28", "-93.704, 0.443112, 21.3073, 0.55", "-95.1637, -0.496573, 20.6769, 0.28", "-95.5119, -0.727121, 20.4959, 0.55", "-97.9319, -2.39654, 18.8265, 0.28", "-98.9238, -3.10899, 17.9803, 0.55", "-101.026, -4.66632, 15.9198, 0.28", "-101.554, -5.08271, 15.3264, 0.55", "-103.478, -6.71998, 13.1294, 0.28", "-103.702, -6.95307, 12.8492, 0.83", "-105.053, -8.64712, 11.0625, 0.28", "-105.616, -9.5481, 10.2192, 0.55", "-107.106, -12.3934, 7.99174, 0.28", "-107.727, -13.8019, 7.0387, 0.83", "-108.774, -16.5195, 5.51331, 0.28", "-109.062, -17.3574, 5.11075, 0.55", "-110.35, -21.4988, 3.44523, 0.28", "-111.141, -24.1892, 2.4744, 0.83", "-111.957, -27.0813, 1.62374, 0.28", "-112.41, -28.6396, 1.21869, 0.55", "-112.908, -30.21, 0.864166, 0.28", "-113.702, -32.6271, 0.330066, 0.83" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-84.7505, 6.22997, 23.5437, 0.28", "-85.8611, 6.87374, 23.0671, 0.28", "-86.2153, 7.09012, 22.9285, 0.55", "-87.3603, 7.80869, 22.5124, 0.28", "-88.1249, 8.25232, 22.3196, 0.55", "-92.9322, 10.9822, 21.0623, 0.28", "-93.3589, 11.2211, 20.9647, 0.55", "-94.8039, 12.0266, 20.6974, 0.28", "-95.1772, 12.2424, 20.6141, 0.55", "-98.7757, 14.3839, 19.7451, 0.28", "-100.774, 15.5786, 19.1697, 0.55", "-102.577, 16.631, 18.6222, 0.28", "-103.238, 17.0105, 18.3767, 0.55", "-106.104, 18.664, 17.1694, 0.28", "-106.399, 18.8383, 16.9964, 0.55", "-107.392, 19.4374, 16.2159, 0.28", "-108.094, 19.8341, 15.5929, 0.55", "-109.983, 20.9007, 13.6362, 0.28", "-110.293, 21.0843, 13.2818, 0.55", "-112.653, 22.554, 10.4043, 0.28", "-112.946, 22.76, 10.0009, 0.55", "-113.692, 23.4074, 8.71295, 0.28", "-114.143, 23.9126, 7.70571, 0.55", "-114.656, 24.7122, 6.22681, 0.28", "-114.818, 24.9969, 5.76742, 0.28", "-114.818, 24.9969, 5.76742, 0.55", "-115.711, 26.078, 4.11586, 0.28", "-116.031, 26.4447, 3.54892, 0.55", "-117.292, 27.7631, 1.41114, 0.28", "-117.565, 28.0224, 0.983951, 0.55", "-120.651, 30.7681, -3.61433, 0.28", "-121.751, 31.6897, -5.16537, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-9.26287, 31.9917, 9.42348, 0.28", "-6.47862, 33.2239, 9.91687, 0.28", "-5.15127, 33.8114, 10.1521, 0.55", "-2.97805, 34.7732, 10.5372, 0.28", "-2.01007, 35.2015, 10.7087, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-9.26287, 31.9917, 9.42348, 0.28", "-10.0955, 33.4677, 9.6481, 0.28", "-10.4779, 34.2436, 9.76619, 0.55", "-11.2312, 35.8479, 10.0334, 0.28", "-11.4506, 36.3402, 10.0906, 0.55", "-11.9946, 37.6663, 10.1559, 0.28", "-12.0558, 37.8355, 10.1636, 0.55", "-12.4145, 39.1909, 10.1916, 0.28", "-12.5698, 39.719, 10.2033, 0.55", "-12.921, 40.858, 10.2407, 0.28", "-13.2632, 41.9536, 10.2572, 0.83", "-13.7549, 43.6277, 10.3765, 0.28", "-13.9586, 44.3575, 10.4503, 0.55", "-15.0157, 48.6546, 10.9632, 0.28", "-15.1813, 49.4164, 11.0699, 0.83", "-15.6633, 52.0799, 11.5295, 0.28", "-16.0369, 54.6247, 12.0053, 0.28", "-16.1439, 56.1227, 12.2824, 0.83", "-16.1122, 57.867, 12.626, 0.28", "-16.0033, 58.5802, 12.7837, 0.55", "-15.6361, 60.271, 13.1419, 0.28", "-15.4055, 61.1186, 13.3126, 0.55", "-14.692, 63.5299, 13.683, 0.28", "-14.3599, 64.508, 13.8695, 0.55", "-13.8796, 65.8335, 14.1408, 0.28", "-13.5462, 66.6961, 14.3032, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "66.057, 107.668, 5.41226, 0.28", "68.118, 107.537, 5.50712, 0.28", "69.3375, 107.413, 5.58658, 0.55", "71.1908, 107.174, 5.55407, 0.55", "73.5901, 106.879, 5.44632, 0.28", "74.577, 106.733, 5.38989, 0.55", "76.7441, 106.402, 5.26762, 0.28", "77.7219, 106.258, 5.18399, 0.55", "80.8564, 105.913, 4.9447, 0.28", "81.9603, 105.795, 4.85472, 0.55", "84.8089, 105.515, 4.65263, 0.28", "85.5, 105.461, 4.58743, 0.55", "88.7307, 105.321, 4.30298, 0.28", "90.3844, 105.311, 4.19901, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "66.057, 107.668, 5.41226, 0.28", "69.5655, 104.59, 6.35096, 0.28", "70.5069, 103.764, 6.60282, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-40.642, -92.2176, -14.2991, 0.28", "-41.9416, -95.6767, -14.5361, 0.28", "-42.3513, -96.8387, -14.6207, 0.55", "-44.0026, -101.971, -15.08, 0.28", "-44.3384, -103.021, -15.1983, 0.83", "-44.9049, -104.81, -15.4234, 0.83", "-45.3816, -106.288, -15.6186, 0.28", "-45.8303, -107.751, -15.8286, 0.55", "-47.358, -112.617, -16.4933, 0.28", "-47.7956, -113.873, -16.6831, 0.83", "-49.4266, -118.069, -17.3669, 0.28", "-50.2958, -119.977, -17.6622, 0.83", "-51.4433, -122.242, -17.9957, 0.28", "-52.4222, -124.056, -18.254, 0.83", "-54.6047, -127.754, -18.7441, 0.28", "-55.7938, -129.678, -18.9764, 0.83", "-57.4434, -132.05, -19.2808, 0.28", "-58.8828, -133.987, -19.5464, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-40.642, -92.2176, -14.2991, 0.28", "-41.0166, -93.8439, -14.8262, 0.28", "-41.9526, -97.8522, -16.1101, 0.28", "-43.1043, -102.579, -17.601, 0.28", "-44.4749, -108.286, -19.4017, 0.28", "-45.4651, -112.76, -20.8359, 0.28", "-46.3507, -117.008, -22.2082, 0.28", "-47.1753, -121.04, -23.4953, 0.28", "-47.669, -123.386, -24.239, 0.28", "-48.4383, -127.025, -25.3904, 0.28", "-50.3401, -137.469, -28.7976, 0.28", "-50.728, -139.966, -29.6372, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "20.1164, -91.2805, -29.4094, 0.28", "22.0231, -96.2821, -28.4812, 0.28", "22.3542, -97.1508, -28.32, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "20.1164, -91.2805, -29.4094, 0.28", "19.1214, -92.9893, -31.9096, 0.28", "18.6999, -93.7133, -32.9689, 0.55", "17.9571, -94.9889, -34.8353, 0.28", "17.1375, -96.3964, -36.8947, 0.83", "15.0744, -99.9397, -42.079, 0.28", "14.5372, -100.862, -43.4287, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "21.3506, -66.0051, -4.14815, 0.83", "21.7619, -66.8666, -4.3629, 0.83", "23.045, -70.1503, -5.08224, 0.28", "23.2831, -70.865, -5.28318, 0.83", "23.9786, -73.1774, -5.99115, 0.28", "24.1401, -74.0389, -6.15822, 0.55", "24.2802, -75.313, -6.31762, 0.28", "24.2712, -76.2739, -6.35736, 0.55", "23.8953, -78.5589, -6.19279, 0.28", "23.5857, -80.1075, -6.05468, 0.83", "22.6744, -84.1546, -5.76227, 0.28", "22.4628, -85.1206, -5.70856, 0.83", "22.3127, -85.8858, -5.67868, 0.83", "21.2768, -91.4128, -5.4905, 0.28", "21.1679, -92.0202, -5.46796, 0.55", "20.44, -96.1577, -5.51525, 0.28", "20.3516, -96.8879, -5.62486, 0.55", "20.0804, -99.8349, -6.23425, 0.28", "20.0553, -100.313, -6.35309, 0.83", "20.0422, -101.494, -6.70462, 0.83", "19.9944, -103.521, -7.29938, 0.83", "19.7204, -110.51, -9.39145, 0.28", "19.6415, -111.169, -9.59425, 0.55", "18.9299, -115.065, -10.8148, 0.28", "18.7528, -115.78, -11.0385, 0.55", "16.7997, -121.366, -12.8181, 0.28", "16.0739, -122.933, -13.2967, 0.83", "13.5, -126.922, -14.4145, 0.28", "12.9234, -127.675, -14.6464, 0.55", "11.9838, -128.692, -14.9964, 0.55", "10.0484, -130.611, -15.6769, 0.28", "9.41493, -131.185, -15.8946, 0.55", "8.58065, -132.062, -16.187, 0.28", "8.18365, -132.608, -16.3366, 0.55", "7.15203, -134.231, -16.7418, 0.28", "6.76276, -134.895, -16.8864, 0.55", "5.33572, -137.466, -17.4029, 0.28", "4.82505, -138.409, -17.5723, 0.55", "4.47988, -139.05, -17.6644, 0.28", "4.03531, -140.056, -17.7117, 0.55", "2.83001, -143.227, -17.602, 0.28", "2.56794, -143.96, -17.5497, 0.83", "2.05384, -145.57, -17.3423, 0.28", "1.8908, -146.171, -17.2486, 0.55", "0.973311, -150.597, -16.3684, 0.28", "0.93299, -151.068, -16.2459, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "21.3506, -66.0051, -4.14815, 0.28", "22.3079, -64.9617, -4.52419, 0.28", "22.8369, -64.2081, -4.8394, 0.55", "24.2103, -62.0147, -5.71505, 0.28", "24.6037, -61.0096, -6.01604, 0.55", "25.2067, -59.1125, -6.49087, 0.28", "25.6931, -57.4503, -6.70705, 0.83", "26.9887, -52.4655, -7.0393, 0.28", "27.2287, -51.3909, -7.06097, 0.83", "29.0212, -42.0368, -6.88163, 0.28", "29.4469, -39.3276, -6.80795, 0.83", "30.3782, -31.3945, -6.42109, 0.28", "30.4872, -30.2866, -6.34495, 0.55", "30.7438, -27.2574, -5.99664, 0.28", "30.8563, -25.8085, -5.8125, 0.83", "31.1071, -21.5943, -5.06033, 0.28", "31.1035, -19.755, -4.86162, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-113.702, -32.6271, 0.330066, 0.28", "-119.86, -30.9239, 1.09617, 0.28", "-121.215, -30.5162, 1.26459, 0.55", "-129.594, -27.9581, 2.63569, 0.28", "-130.017, -27.8296, 2.71994, 0.55", "-133.717, -26.7955, 3.57081, 0.28", "-135.131, -26.4183, 3.94653, 0.83", "-136.874, -25.9653, 4.57558, 0.83", "-141.689, -24.6452, 6.72924, 0.28", "-143.342, -24.0793, 7.82198, 0.55", "-146.441, -22.7759, 10.3377, 0.28", "-147.867, -21.5197, 11.9304, 0.83", "-149.293, -19.8013, 13.7807, 0.28", "-149.513, -19.4571, 14.1029, 0.55", "-151.868, -14.8187, 17.9117, 0.28", "-152.757, -12.8612, 19.3398, 0.55", "-157.641, -0.926277, 27.5276, 0.28", "-158.151, 0.351578, 28.3524, 0.83", "-159.986, 4.89485, 31.1052, 0.28", "-160.471, 6.12755, 31.8138, 0.83", "-161.318, 8.40351, 32.9403, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-113.702, -32.6271, 0.330066, 0.28", "-115.165, -38.681, -2.48856, 0.28", "-115.48, -39.9816, -3.09411, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-115.48, -39.9816, -3.09411, 0.28", "-114.951, -43.1748, -4.59056, 0.28", "-114.863, -43.7049, -4.83902, 0.55", "-114.77, -44.2632, -5.10067, 0.28", "-114.703, -44.6664, -5.28963, 0.55", "-114.272, -47.266, -6.50793, 0.28", "-114.099, -48.3121, -6.99818, 0.83" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-115.48, -39.9816, -3.09411, 0.28", "-117.118, -43.4567, -2.35352, 0.28", "-118.038, -44.7283, -2.2365, 0.55", "-119.815, -46.7882, -2.14263, 0.28", "-120.77, -47.7467, -2.17394, 0.55", "-122.903, -49.7982, -2.31537, 0.28", "-124.094, -50.9408, -2.38125, 0.55", "-127.96, -54.3686, -2.358, 0.28", "-128.462, -54.8601, -2.31517, 0.55", "-130.335, -56.8125, -2.01704, 0.28", "-132.047, -58.7864, -1.52438, 0.83", "-133.747, -60.9674, -0.745717, 0.28", "-134.217, -61.7243, -0.410196, 0.55", "-136.697, -66.6227, 2.20107, 0.28", "-137.171, -67.7545, 2.86293, 0.83", "-138.049, -70.3392, 4.47727, 0.28", "-138.384, -71.6822, 5.30246, 0.55", "-139.119, -75.7759, 7.74987, 0.28", "-139.22, -76.8158, 8.28925, 0.83", "-139.289, -81.5668, 10.5579, 0.28", "-139.286, -82.6108, 10.99, 0.83", "-139.201, -86.1044, 12.2382, 0.28", "-139.148, -87.2423, 12.6109, 0.83", "-138.752, -93.2262, 14.385, 0.28", "-138.671, -94.7737, 14.7623, 0.55", "-138.601, -99.2786, 15.4952, 0.28", "-138.649, -100.614, 15.6965, 0.83" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_29", "dend_22", "dend_19", "dend_0", "dend_46", "dend_39", "dend_31", "dend_30", "dend_26", "dend_23", "dend_21", "dend_20", "dend_10", "dend_1", "dend_52", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_16", "dend_11", "dend_7", "dend_2", "dend_60", "dend_53", "dend_51", "dend_48", "dend_43", "dend_42", "dend_37", "dend_34", "dend_18", "dend_17", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_45", "dend_44", "dend_36", "dend_35", "dend_15", "dend_14", "dend_6", "dend_5", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_29", "dend_22", "dend_19", "dend_0", "dend_46", "dend_39", "dend_31", "dend_30", "dend_26", "dend_23", "dend_21", "dend_20", "dend_10", "dend_1", "dend_52", "dend_47", "dend_41", "dend_40", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_16", "dend_11", "dend_7", "dend_2", "dend_60", "dend_53", "dend_51", "dend_48", "dend_43", "dend_42", "dend_37", "dend_34", "dend_18", "dend_17", "dend_13", "dend_12", "dend_9", "dend_8", "dend_4", "dend_3", "dend_55", "dend_54", "dend_50", "dend_49", "dend_45", "dend_44", "dend_36", "dend_35", "dend_15", "dend_14", "dend_6", "dend_5", "dend_59", "dend_56", "dend_58", "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L23_DBC_56fd12fad5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_38
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.44999992506011677)
    connect dend_29(0), soma_0(0.44999992506011677)
    connect dend_22(0), soma_0(0.44999992506011677)
    connect dend_19(0), soma_0(0.44999992506011677)
    connect dend_0(0), soma_0(0.44999992506011677)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.250943, 5.15502, -0.455322, 3.76408 ) }
    soma_0 { pt3dadd( -0.287266, 4.50998, -0.403251, 6.96761 ) }
    soma_0 { pt3dadd( -0.32359, 3.86493, -0.351181, 8.3161 ) }
    soma_0 { pt3dadd( -0.359913, 3.21989, -0.299111, 9.45043 ) }
    soma_0 { pt3dadd( -0.396236, 2.57484, -0.247041, 9.98693 ) }
    soma_0 { pt3dadd( -0.43256, 1.9298, -0.194971, 10.312 ) }
    soma_0 { pt3dadd( -0.468883, 1.28475, -0.142901, 10.5326 ) }
    soma_0 { pt3dadd( -0.505206, 0.639706, -0.0908309, 10.6917 ) }
    soma_0 { pt3dadd( -0.54153, -0.00533917, -0.0387608, 10.8509 ) }
    soma_0 { pt3dadd( -0.577853, -0.650384, 0.0133093, 11.01 ) }
    soma_0 { pt3dadd( -0.614177, -1.29543, 0.0653794, 11.1688 ) }
    soma_0 { pt3dadd( -0.6505, -1.94047, 0.11745, 11.0157 ) }
    soma_0 { pt3dadd( -0.686823, -2.58552, 0.16952, 10.5759 ) }
    soma_0 { pt3dadd( -0.723147, -3.23057, 0.22159, 10.1362 ) }
    soma_0 { pt3dadd( -0.75947, -3.87561, 0.27366, 9.69643 ) }
    soma_0 { pt3dadd( -0.795793, -4.52066, 0.32573, 9.25667 ) }
    soma_0 { pt3dadd( -0.832117, -5.1657, 0.3778, 8.77464 ) }
    soma_0 { pt3dadd( -0.86844, -5.81075, 0.42987, 7.84202 ) }
    soma_0 { pt3dadd( -0.904764, -6.45579, 0.48194, 6.36994 ) }
    soma_0 { pt3dadd( -0.941087, -7.10084, 0.53401, 4.84705 ) }
    soma_0 { pt3dadd( -0.97741, -7.74588, 0.58608, 2.62404 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -4.32706, 4.28382, 0.284896, 0.83 ) }
    dend_38 { pt3dadd( -4.70279, 5.24142, 0.284896, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 23/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.73706, -4.26468, 3.5949, 0.28 ) }
    dend_29 { pt3dadd( -7.69339, -5.58466, 4.32753, 0.28 ) }
    dend_29 { pt3dadd( -9.51626, -6.74708, 4.92155, 1.38 ) }
    dend_29 { pt3dadd( -12.5277, -8.72814, 5.85184, 0.83 ) }
    dend_29 { pt3dadd( -16.4561, -11.3124, 7.06538, 0.28 ) }
    dend_29 { pt3dadd( -18.3299, -12.5451, 7.64424, 1.38 ) }
    dend_29 { pt3dadd( -21.3221, -14.5134, 8.56859, 0.28 ) }
    dend_29 { pt3dadd( -24.2527, -16.4207, 9.50922, 0.28 ) }
    dend_29 { pt3dadd( -26.523, -17.8385, 10.2149, 1.11 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 32/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.50706, -7.16543, 2.1449, 0.55 ) }
    dend_22 { pt3dadd( -4.90708, -11.0571, 2.88992, 0.55 ) }
    dend_22 { pt3dadd( -5.05225, -12.2993, 3.1286, 0.83 ) }
    dend_22 { pt3dadd( -5.25423, -13.7943, 3.40348, 0.55 ) }
    dend_22 { pt3dadd( -5.82493, -17.417, 4.20152, 1.11 ) }
    dend_22 { pt3dadd( -6.75812, -23.2024, 5.38021, 0.28 ) }
    dend_22 { pt3dadd( -7.00554, -24.7406, 5.63565, 0.83 ) }
    dend_22 { pt3dadd( -7.20947, -25.9786, 5.81128, 0.28 ) }
    dend_22 { pt3dadd( -7.561, -28.1073, 6.01729, 0.83 ) }
    dend_22 { pt3dadd( -8.22729, -32.3815, 6.23986, 0.28 ) }
    dend_22 { pt3dadd( -8.68694, -35.1786, 6.23068, 0.55 ) }
    dend_22 { pt3dadd( -9.12055, -38.0508, 6.04217, 0.28 ) }
    dend_22 { pt3dadd( -9.28339, -39.2829, 5.92147, 0.55 ) }
    dend_22 { pt3dadd( -9.45201, -40.9358, 5.69917, 0.28 ) }
    dend_22 { pt3dadd( -9.64307, -44.1195, 5.02239, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 47/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 4.26294, 2.79757, 2.6749, 0.28 ) }
    dend_19 { pt3dadd( 5.76758, 5.06253, 2.6749, 0.28 ) }
    dend_19 { pt3dadd( 6.46591, 6.27606, 2.71178, 0.83 ) }
    dend_19 { pt3dadd( 7.40484, 8.00969, 2.78609, 0.28 ) }
    dend_19 { pt3dadd( 8.11408, 9.42567, 2.88288, 1.11 ) }
    dend_19 { pt3dadd( 9.20111, 11.7224, 3.07295, 0.28 ) }
    dend_19 { pt3dadd( 9.90467, 13.2449, 3.23836, 0.83 ) }
    dend_19 { pt3dadd( 11.0409, 15.9883, 3.61383, 0.28 ) }
    dend_19 { pt3dadd( 11.5164, 17.2074, 3.79991, 0.55 ) }
    dend_19 { pt3dadd( 12.338, 19.4396, 4.21495, 0.28 ) }
    dend_19 { pt3dadd( 12.6926, 20.4177, 4.4197, 0.83 ) }
    dend_19 { pt3dadd( 13.5913, 22.8065, 5.05024, 0.55 ) }
    dend_19 { pt3dadd( 14.6332, 25.4561, 5.85383, 0.28 ) }
    dend_19 { pt3dadd( 15.0898, 26.584, 6.22906, 0.83 ) }
    dend_19 { pt3dadd( 15.9781, 28.8043, 7.00611, 0.28 ) }
    dend_19 { pt3dadd( 16.3537, 29.7512, 7.32586, 0.83 ) }
    dend_19 { pt3dadd( 17.0492, 31.646, 7.96087, 0.28 ) }
    dend_19 { pt3dadd( 17.2533, 32.2498, 8.13396, 0.55 ) }
    dend_19 { pt3dadd( 17.456, 32.8621, 8.28202, 0.28 ) }
    dend_19 { pt3dadd( 17.7945, 33.8687, 8.43987, 0.55 ) }
    dend_19 { pt3dadd( 18.3475, 35.518, 8.55471, 0.28 ) }
    dend_19 { pt3dadd( 18.5884, 36.2418, 8.56848, 0.55 ) }
    dend_19 { pt3dadd( 19.1168, 37.8781, 8.49331, 0.28 ) }
    dend_19 { pt3dadd( 19.3321, 38.5122, 8.46807, 0.55 ) }
    dend_19 { pt3dadd( 19.889, 39.9813, 8.42809, 0.55 ) }
    dend_19 { pt3dadd( 20.4703, 41.3428, 8.42925, 0.28 ) }
    dend_19 { pt3dadd( 21.1177, 42.7256, 8.51607, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 74/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.78294, -6.96043, -1.9751, 0.55 ) }
    dend_0 { pt3dadd( 3.89371, -7.85941, -2.25287, 0.55 ) }
    dend_0 { pt3dadd( 5.73175, -9.34699, -2.7125, 1.11 ) }
    dend_0 { pt3dadd( 10.2859, -13.0328, -3.85135, 0.28 ) }
    dend_0 { pt3dadd( 11.3195, -13.8694, -4.10983, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 79/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.97741, -7.74588, 0.58608, 0.55 ) }
    axon_0 { pt3dadd( -1.82074, -22.7222, 0.58608, 0.55 ) }
    axon_0 { pt3dadd( -2.66408, -37.6984, 0.58608, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_38 (entry count 82/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -4.70279, 5.24142, 0.284896, 0.28 ) }
    dend_46 { pt3dadd( -6.47603, 7.13917, 0.85354, 0.28 ) }
    dend_46 { pt3dadd( -7.72732, 8.47833, 1.25481, 0.55 ) }
    dend_46 { pt3dadd( -8.71513, 9.5355, 1.57158, 0.28 ) }
    dend_46 { pt3dadd( -9.70168, 10.5913, 1.88795, 0.55 ) }
    dend_46 { pt3dadd( -12.2199, 13.2863, 2.69547, 0.28 ) }
    dend_46 { pt3dadd( -13.2295, 14.3668, 3.01925, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -4.70279, 5.24142, 0.284896, 0.28 ) }
    dend_39 { pt3dadd( -4.31917, 8.01003, 0.358406, 0.28 ) }
    dend_39 { pt3dadd( -3.87135, 10.4997, 0.356039, 0.83 ) }
    dend_39 { pt3dadd( -2.82248, 15.6055, 0.388491, 0.28 ) }
    dend_39 { pt3dadd( -2.57662, 16.6622, 0.372917, 0.55 ) }
    dend_39 { pt3dadd( -1.86156, 19.404, 0.334531, 0.28 ) }
    dend_39 { pt3dadd( -1.36984, 21.1197, 0.295377, 0.83 ) }
    dend_39 { pt3dadd( 0.0251441, 25.3739, 0.121841, 0.28 ) }
    dend_39 { pt3dadd( 0.777995, 27.3788, -0.00423189, 0.55 ) }
    dend_39 { pt3dadd( 2.78003, 32.1509, -0.391759, 0.28 ) }
    dend_39 { pt3dadd( 3.56771, 33.999, -0.511677, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 4.53816, 36.2377, -0.596037, 0.28 ) }
    dend_39 { pt3dadd( 4.83378, 36.9494, -0.641761, 0.55 ) }
    dend_39 { pt3dadd( 5.55237, 38.7868, -0.758044, 0.28 ) }
    dend_39 { pt3dadd( 6.10357, 40.1646, -0.808698, 0.83 ) }
    dend_39 { pt3dadd( 7.56275, 44.0343, -0.781621, 0.28 ) }
    dend_39 { pt3dadd( 8.25665, 45.9802, -0.73354, 0.83 ) }
    dend_39 { pt3dadd( 9.5485, 49.7451, -0.565045, 0.28 ) }
    dend_39 { pt3dadd( 10.4857, 52.5286, -0.412719, 0.28 ) }
    dend_39 { pt3dadd( 11.4477, 55.2977, -0.200788, 0.83 ) }
    dend_39 { pt3dadd( 12.0383, 56.8995, -0.106939, 0.55 ) }
    dend_39 { pt3dadd( 12.2022, 57.3023, -0.0811952, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 11/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -26.523, -17.8385, 10.2149, 0.28 ) }
    dend_31 { pt3dadd( -27.9846, -19.2251, 9.81655, 0.28 ) }
    dend_31 { pt3dadd( -28.5149, -19.8051, 9.65267, 0.55 ) }
    dend_31 { pt3dadd( -29.6716, -21.1917, 9.28389, 0.28 ) }
    dend_31 { pt3dadd( -30.1893, -21.8123, 9.11883, 0.83 ) }
    dend_31 { pt3dadd( -31.7888, -23.7299, 8.60883, 0.28 ) }
    dend_31 { pt3dadd( -32.5035, -24.5866, 8.38097, 0.55 ) }
    dend_31 { pt3dadd( -33.3648, -25.7722, 8.02163, 0.28 ) }
    dend_31 { pt3dadd( -33.9896, -26.7043, 7.70881, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 20/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -26.523, -17.8385, 10.2149, 0.28 ) }
    dend_30 { pt3dadd( -25.7782, -20.1998, 10.0455, 0.28 ) }
    dend_30 { pt3dadd( -25.2363, -22.3008, 9.88846, 0.55 ) }
    dend_30 { pt3dadd( -24.4281, -26.3473, 9.59175, 0.28 ) }
    dend_30 { pt3dadd( -24.3336, -26.8204, 9.55706, 0.55 ) }
    dend_30 { pt3dadd( -23.9238, -28.8722, 9.40661, 0.28 ) }
    dend_30 { pt3dadd( -23.7133, -29.9259, 9.32935, 0.55 ) }
    dend_30 { pt3dadd( -23.5601, -30.9387, 9.23695, 0.28 ) }
    dend_30 { pt3dadd( -23.5747, -31.9994, 9.08746, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 29/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -9.64307, -44.1195, 5.02239, 0.28 ) }
    dend_26 { pt3dadd( -6.87429, -47.1483, 4.93816, 0.28 ) }
    dend_26 { pt3dadd( -5.85439, -48.591, 4.95504, 0.55 ) }
    dend_26 { pt3dadd( -5.06744, -50.0639, 5.04065, 0.28 ) }
    dend_26 { pt3dadd( -4.5196, -51.2684, 5.12614, 0.55 ) }
    dend_26 { pt3dadd( -3.82712, -53.1332, 5.28504, 0.28 ) }
    dend_26 { pt3dadd( -3.55222, -53.9829, 5.37513, 0.83 ) }
    dend_26 { pt3dadd( -2.86908, -56.9694, 5.73487, 0.28 ) }
    dend_26 { pt3dadd( -2.00307, -61.7659, 6.41163, 0.55 ) }
    dend_26 { pt3dadd( -1.70942, -63.6879, 6.70729, 0.55 ) }
    dend_26 { pt3dadd( -1.22656, -66.8054, 7.00011, 0.28 ) }
    dend_26 { pt3dadd( -1.00971, -68.2794, 7.09047, 0.55 ) }
    dend_26 { pt3dadd( -0.692025, -70.4986, 7.12793, 0.28 ) }
    dend_26 { pt3dadd( -0.3353, -73.0477, 7.0882, 0.55 ) }
    dend_26 { pt3dadd( 0.242573, -77.4744, 7.09027, 1.11 ) }
    dend_26 { pt3dadd( 0.9433, -82.6616, 7.20052, 0.28 ) }
    dend_26 { pt3dadd( 1.12512, -83.9533, 7.21778, 0.55 ) }
    dend_26 { pt3dadd( 1.68867, -88.1771, 7.27483, 0.28 ) }
    dend_26 { pt3dadd( 2.07288, -91.7676, 7.15008, 1.11 ) }
    dend_26 { pt3dadd( 2.44517, -96.0885, 6.92271, 0.28 ) }
    dend_26 { pt3dadd( 2.65496, -99.634, 6.64209, 0.83 ) }
    dend_26 { pt3dadd( 2.86095, -104.5, 6.24615, 0.28 ) }
    dend_26 { pt3dadd( 3.02824, -106.678, 5.94805, 1.11 ) }
    dend_26 { pt3dadd( 3.79412, -113.872, 4.6068, 0.28 ) }
    dend_26 { pt3dadd( 3.93482, -115.153, 4.32921, 0.55 ) }
    dend_26 { pt3dadd( 4.18831, -117.55, 3.77175, 0.28 ) }
    dend_26 { pt3dadd( 4.3794, -118.977, 3.45839, 0.55 ) }
    dend_26 { pt3dadd( 5.48279, -125.715, 2.23668, 0.28 ) }
    dend_26 { pt3dadd( 6.21299, -129.653, 1.67112, 1.11 ) }
    dend_26 { pt3dadd( 7.39501, -135.142, 1.17972, 0.28 ) }
    dend_26 { pt3dadd( 7.734, -136.662, 1.06455, 0.55 ) }
    dend_26 { pt3dadd( 8.96093, -141.998, 0.763174, 0.28 ) }
    dend_26 { pt3dadd( 9.46416, -144.212, 0.672122, 0.55 ) }
    dend_26 { pt3dadd( 10.1576, -147.304, 0.669335, 0.28 ) }
    dend_26 { pt3dadd( 10.618, -149.254, 0.703049, 0.83 ) }
    dend_26 { pt3dadd( 11.7142, -153.554, 0.928875, 0.28 ) }
    dend_26 { pt3dadd( 12.071, -155.071, 1.04268, 0.55 ) }
    dend_26 { pt3dadd( 12.9925, -159.984, 1.58266, 0.28 ) }
    dend_26 { pt3dadd( 13.3547, -162.03, 1.80487, 0.55 ) }
    dend_26 { pt3dadd( 14.3, -167.658, 2.43989, 0.28 ) }
    dend_26 { pt3dadd( 14.4742, -168.934, 2.58819, 0.55 ) }
    dend_26 { pt3dadd( 14.5563, -169.688, 2.68379, 0.55 ) }
    dend_26 { pt3dadd( 14.8103, -172.891, 3.12468, 0.28 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 72/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -9.64307, -44.1195, 5.02239, 0.55 ) }
    dend_23 { pt3dadd( -11.0731, -46.0204, 4.88189, 0.55 ) }
    dend_23 { pt3dadd( -12.4873, -47.8662, 4.73291, 0.28 ) }
    dend_23 { pt3dadd( -13.0012, -48.6022, 4.70101, 0.55 ) }
    dend_23 { pt3dadd( -16.0911, -53.289, 4.64741, 0.28 ) }
    dend_23 { pt3dadd( -16.5649, -54.0552, 4.60475, 0.83 ) }
    dend_23 { pt3dadd( -17.8047, -56.1595, 4.43237, 0.28 ) }
    dend_23 { pt3dadd( -18.3046, -57.1151, 4.33143, 0.55 ) }
    dend_23 { pt3dadd( -21.3977, -63.8061, 3.61795, 0.28 ) }
    dend_23 { pt3dadd( -21.8043, -65.0942, 3.46558, 0.55 ) }
    dend_23 { pt3dadd( -22.4189, -68.5159, 3.06365, 0.28 ) }
    dend_23 { pt3dadd( -22.51, -69.3831, 2.96418, 0.55 ) }
    dend_23 { pt3dadd( -22.5813, -71.4681, 2.75903, 0.28 ) }
    dend_23 { pt3dadd( -22.6248, -72.241, 2.65698, 0.55 ) }
    dend_23 { pt3dadd( -23.1221, -80.4347, 1.47193, 0.28 ) }
    dend_23 { pt3dadd( -23.2184, -81.3273, 1.34317, 0.55 ) }
    dend_23 { pt3dadd( -23.4608, -83.0522, 1.06015, 0.28 ) }
    dend_23 { pt3dadd( -23.8173, -85.1248, 0.634976, 0.55 ) }
    dend_23 { pt3dadd( -25.5729, -93.3359, -1.26116, 0.28 ) }
    dend_23 { pt3dadd( -25.8743, -94.6005, -1.60802, 0.83 ) }
    dend_23 { pt3dadd( -26.3312, -96.246, -2.13238, 0.83 ) }
    dend_23 { pt3dadd( -27.4486, -100.558, -3.69018, 0.28 ) }
    dend_23 { pt3dadd( -27.6378, -101.372, -4.01757, 0.55 ) }
    dend_23 { pt3dadd( -27.9437, -102.97, -4.65305, 0.28 ) }
    dend_23 { pt3dadd( -28.2342, -105.815, -5.57289, 0.55 ) }
    dend_23 { pt3dadd( -28.3354, -106.644, -5.75223, 0.55 ) }
    dend_23 { pt3dadd( -28.712, -109.837, -6.04874, 0.28 ) }
    dend_23 { pt3dadd( -28.7908, -110.747, -6.05871, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_23 { pt3dadd( -28.9825, -114.037, -6.04176, 0.28 ) }
    dend_23 { pt3dadd( -29.0454, -115.515, -6.02063, 0.83 ) }
    dend_23 { pt3dadd( -29.1809, -119.052, -5.83343, 0.28 ) }
    dend_23 { pt3dadd( -29.2538, -121.717, -5.67414, 0.83 ) }
    dend_23 { pt3dadd( -29.2648, -126.499, -5.32803, 0.28 ) }
    dend_23 { pt3dadd( -29.2575, -127.431, -5.27096, 0.55 ) }
    dend_23 { pt3dadd( -29.2171, -129.693, -5.16354, 0.28 ) }
    dend_23 { pt3dadd( -29.2215, -130.278, -5.1256, 0.55 ) }
    dend_23 { pt3dadd( -29.2785, -131.711, -4.99963, 0.28 ) }
    dend_23 { pt3dadd( -29.3518, -132.614, -4.88089, 0.55 ) }
    dend_23 { pt3dadd( -29.4785, -133.832, -4.70234, 0.28 ) }
    dend_23 { pt3dadd( -29.6443, -135.533, -4.46014, 1.11 ) }
    dend_23 { pt3dadd( -30.1342, -140.474, -3.85199, 0.28 ) }
    dend_23 { pt3dadd( -30.2493, -141.631, -3.73173, 0.83 ) }
    dend_23 { pt3dadd( -30.4202, -143.429, -3.58785, 0.83 ) }
    dend_23 { pt3dadd( -30.9787, -149.188, -3.24977, 0.28 ) }
    dend_23 { pt3dadd( -31.0492, -149.859, -3.23889, 0.55 ) }
    dend_23 { pt3dadd( -31.2699, -151.81, -3.28023, 0.28 ) }
    dend_23 { pt3dadd( -31.3923, -152.686, -3.35707, 0.55 ) }
    dend_23 { pt3dadd( -31.7007, -154.757, -3.61098, 0.28 ) }
    dend_23 { pt3dadd( -31.9558, -156.17, -3.85784, 0.83 ) }
    dend_23 { pt3dadd( -32.4265, -158.293, -4.34069, 0.28 ) }
    dend_23 { pt3dadd( -32.4814, -158.567, -4.42971, 0.55 ) }
    dend_23 { pt3dadd( -32.7904, -160.574, -5.18225, 0.28 ) }
    dend_23 { pt3dadd( -32.8621, -161.169, -5.42107, 0.55 ) }
    dend_23 { pt3dadd( -32.9444, -162.194, -5.86985, 0.55 ) }
    dend_23 { pt3dadd( -32.8639, -163.532, -6.57487, 0.83 ) }
    dend_23 { pt3dadd( -32.3345, -166.637, -8.32941, 0.28 ) }
    dend_23 { pt3dadd( -31.9377, -167.376, -9.19099, 0.55 ) }
    dend_23 { pt3dadd( -31.3619, -167.956, -10.2397, 0.28 ) }
    dend_23 { pt3dadd( -30.8755, -168.318, -11.0451, 0.55 ) }
    dend_23 { pt3dadd( -29.1287, -169.385, -13.7337, 0.28 ) }
    dend_23 { pt3dadd( -28.7922, -169.562, -14.2346, 0.83 ) }
    dend_23 { pt3dadd( -24.1418, -171.791, -21.0675, 0.28 ) }
    dend_23 { pt3dadd( -23.8133, -171.952, -21.575, 0.55 ) }
    dend_23 { pt3dadd( -22.3471, -172.703, -23.9286, 0.28 ) }
    dend_23 { pt3dadd( -21.7418, -173.107, -24.9696, 0.55 ) }
    dend_23 { pt3dadd( -21.2724, -173.595, -25.8659, 0.28 ) }
    dend_23 { pt3dadd( -20.9585, -174.041, -26.4965, 0.55 ) }
    dend_23 { pt3dadd( -20.5705, -175.433, -27.4263, 0.28 ) }
    dend_23 { pt3dadd( -20.4167, -176.163, -27.9145, 0.55 ) }
    dend_23 { pt3dadd( -20.1851, -178.486, -29.3566, 0.28 ) }
    dend_23 { pt3dadd( -20.03, -180.24, -30.4045, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 43/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 21.1177, 42.7256, 8.51607, 0.28 ) }
    dend_21 { pt3dadd( 19.6964, 44.2855, 9.68039, 0.28 ) }
    dend_21 { pt3dadd( 19.1884, 44.8749, 10.0767, 0.55 ) }
    dend_21 { pt3dadd( 16.9557, 47.6218, 11.7967, 0.28 ) }
    dend_21 { pt3dadd( 16.3452, 48.4319, 12.2605, 0.55 ) }
    dend_21 { pt3dadd( 13.1185, 52.981, 14.7014, 0.28 ) }
    dend_21 { pt3dadd( 12.137, 54.4442, 15.4513, 0.83 ) }
    dend_21 { pt3dadd( 10.9153, 56.4813, 16.4073, 0.28 ) }
    dend_21 { pt3dadd( 10.2922, 57.6014, 16.8519, 0.55 ) }
    dend_21 { pt3dadd( 9.67091, 58.9784, 17.2505, 0.28 ) }
    dend_21 { pt3dadd( 9.49992, 59.4465, 17.3348, 0.55 ) }
    dend_21 { pt3dadd( 9.14762, 61.0499, 17.3381, 0.28 ) }
    dend_21 { pt3dadd( 8.93933, 62.1412, 17.2782, 0.55 ) }
    dend_21 { pt3dadd( 8.55995, 64.3566, 17.2394, 0.28 ) }
    dend_21 { pt3dadd( 8.29212, 65.8923, 17.2632, 0.83 ) }
    dend_21 { pt3dadd( 8.17031, 66.9612, 17.32, 0.83 ) }
    dend_21 { pt3dadd( 8.09848, 69.0274, 17.455, 0.28 ) }
    dend_21 { pt3dadd( 8.0964, 69.8607, 17.5056, 0.55 ) }
    dend_21 { pt3dadd( 8.20835, 73.9962, 17.8249, 0.28 ) }
    dend_21 { pt3dadd( 8.25031, 74.5569, 17.9021, 0.55 ) }
    dend_21 { pt3dadd( 8.61398, 78.1756, 18.5299, 0.28 ) }
    dend_21 { pt3dadd( 8.82782, 79.5576, 18.7844, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 65/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 21.1177, 42.7256, 8.51607, 0.28 ) }
    dend_20 { pt3dadd( 22.1754, 46.0355, 8.90531, 0.28 ) }
    dend_20 { pt3dadd( 22.285, 46.4487, 8.98435, 0.55 ) }
    dend_20 { pt3dadd( 23.3243, 51.0575, 10.0812, 0.28 ) }
    dend_20 { pt3dadd( 23.6349, 52.6267, 10.5529, 0.55 ) }
    dend_20 { pt3dadd( 24.2764, 56.2937, 11.779, 0.28 ) }
    dend_20 { pt3dadd( 24.4874, 57.5899, 12.2416, 0.55 ) }
    dend_20 { pt3dadd( 24.725, 59.7351, 13.1775, 0.28 ) }
    dend_20 { pt3dadd( 24.9007, 62.1042, 14.1882, 0.83 ) }
    dend_20 { pt3dadd( 25.0057, 65.2158, 15.5346, 0.28 ) }
    dend_20 { pt3dadd( 25.015, 65.8195, 15.7669, 0.55 ) }
    dend_20 { pt3dadd( 25.034, 68.0165, 16.5517, 0.28 ) }
    dend_20 { pt3dadd( 25.0187, 69.5866, 17.073, 0.83 ) }
    dend_20 { pt3dadd( 24.8899, 75.2424, 18.7663, 0.28 ) }
    dend_20 { pt3dadd( 24.8346, 76.5718, 19.1256, 0.55 ) }
    dend_20 { pt3dadd( 24.7019, 78.8055, 19.6886, 0.28 ) }
    dend_20 { pt3dadd( 24.6579, 79.4883, 19.8649, 0.55 ) }
    dend_20 { pt3dadd( 24.2698, 83.8995, 21.042, 0.28 ) }
    dend_20 { pt3dadd( 24.2335, 84.2794, 21.1458, 0.55 ) }
    dend_20 { pt3dadd( 23.8556, 87.5367, 22.0832, 0.28 ) }
    dend_20 { pt3dadd( 23.8166, 88.3754, 22.2784, 0.55 ) }
    dend_20 { pt3dadd( 23.8563, 90.1169, 22.6244, 0.28 ) }
    dend_20 { pt3dadd( 23.9358, 91.7252, 22.9089, 0.83 ) }
    dend_20 { pt3dadd( 24.2402, 94.8048, 23.3552, 0.28 ) }
    dend_20 { pt3dadd( 24.3094, 95.3533, 23.4255, 0.83 ) }
    dend_20 { pt3dadd( 25.1595, 100.353, 23.9052, 0.28 ) }
    dend_20 { pt3dadd( 25.5219, 102.12, 24.003, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 92/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 11.3195, -13.8694, -4.10983, 0.28 ) }
    dend_10 { pt3dadd( 12.7872, -17.2282, -4.92036, 0.28 ) }
    dend_10 { pt3dadd( 13.5844, -19.0526, -5.36062, 0.55 ) }
    dend_10 { pt3dadd( 14.7674, -21.7598, -6.0139, 0.28 ) }
    dend_10 { pt3dadd( 16.2234, -25.092, -6.818, 0.83 ) }
    dend_10 { pt3dadd( 17.8102, -28.7235, -7.69433, 0.28 ) }
    dend_10 { pt3dadd( 18.7568, -30.8897, -8.21706, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 11.3195, -13.8694, -4.10983, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 13.4525, -14.7667, -4.12999, 0.28 ) }
    dend_1 { pt3dadd( 14.7135, -15.2972, -4.14191, 0.83 ) }
    dend_1 { pt3dadd( 17.0672, -16.2874, -4.16416, 0.28 ) }
    dend_1 { pt3dadd( 18.6793, -16.9656, -4.1794, 1.11 ) }
    dend_1 { pt3dadd( 20.5463, -17.7511, -4.19705, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 5/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.66408, -37.6984, 0.58608, 0.28 ) }
    axon_1 { pt3dadd( -3.50741, -52.6747, 0.58608, 0.28 ) }
    axon_1 { pt3dadd( -4.35075, -67.651, 0.58608, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 8/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -13.2295, 14.3668, 3.01925, 0.28 ) }
    dend_52 { pt3dadd( -16.4423, 14.7683, 3.73065, 0.28 ) }
    dend_52 { pt3dadd( -18.358, 15.0347, 4.20955, 0.55 ) }
    dend_52 { pt3dadd( -20.052, 15.2498, 4.63996, 0.28 ) }
    dend_52 { pt3dadd( -22.731, 15.5556, 5.38037, 0.83 ) }
    dend_52 { pt3dadd( -25.675, 15.8002, 6.18491, 0.28 ) }
    dend_52 { pt3dadd( -27.9746, 15.9418, 6.80075, 0.28 ) }
    dend_52 { pt3dadd( -30.5498, 16.0515, 7.5402, 0.83 ) }
    dend_52 { pt3dadd( -32.9907, 16.1227, 8.25669, 0.28 ) }
    dend_52 { pt3dadd( -35.0255, 16.1572, 8.83965, 0.83 ) }
    dend_52 { pt3dadd( -40.2922, 16.1827, 10.3298, 0.28 ) }
    dend_52 { pt3dadd( -43.5685, 16.2091, 11.1531, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -13.2295, 14.3668, 3.01925, 0.28 ) }
    dend_47 { pt3dadd( -12.3714, 17.2312, 3.89996, 0.28 ) }
    dend_47 { pt3dadd( -11.8659, 18.9186, 4.41878, 0.28 ) }
    dend_47 { pt3dadd( -11.6548, 19.6232, 4.6354, 0.55 ) }
    dend_47 { pt3dadd( -10.517, 23.4212, 5.80317, 0.28 ) }
    dend_47 { pt3dadd( -9.95821, 25.2863, 6.37664, 0.83 ) }
    dend_47 { pt3dadd( -8.90323, 28.8078, 7.45939, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 27/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 12.2022, 57.3023, -0.0811952, 0.28 ) }
    dend_41 { pt3dadd( 13.1414, 61.7581, 0.457076, 0.28 ) }
    dend_41 { pt3dadd( 13.3444, 62.6988, 0.555188, 0.55 ) }
    dend_41 { pt3dadd( 13.6259, 63.9392, 0.681963, 0.28 ) }
    dend_41 { pt3dadd( 13.8464, 64.9145, 0.780878, 0.55 ) }
    dend_41 { pt3dadd( 14.7581, 68.9472, 1.18986, 0.28 ) }
    dend_41 { pt3dadd( 15.4019, 71.7951, 1.47869, 0.83 ) }
    dend_41 { pt3dadd( 16.1291, 75.0616, 1.93233, 0.28 ) }
    dend_41 { pt3dadd( 16.4186, 76.3349, 2.09798, 0.55 ) }
    dend_41 { pt3dadd( 16.4985, 76.6728, 2.1395, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 12.2022, 57.3023, -0.0811952, 0.28 ) }
    dend_40 { pt3dadd( 16.3799, 62.3259, 0.155604, 0.28 ) }
    dend_40 { pt3dadd( 18.3002, 64.6868, 0.257684, 0.55 ) }
    dend_40 { pt3dadd( 20.9449, 67.9224, 0.445832, 0.28 ) }
    dend_40 { pt3dadd( 21.3955, 68.441, 0.450039, 0.55 ) }
    dend_40 { pt3dadd( 24.5693, 72.0548, 0.399456, 0.28 ) }
    dend_40 { pt3dadd( 25.78, 73.3888, 0.293746, 0.55 ) }
    dend_40 { pt3dadd( 28.0549, 75.9996, -0.0518926, 0.28 ) }
    dend_40 { pt3dadd( 28.8381, 76.8583, -0.261473, 0.55 ) }
    dend_40 { pt3dadd( 32.6609, 80.9269, -1.59342, 0.28 ) }
    dend_40 { pt3dadd( 33.5229, 81.6613, -2.16685, 0.83 ) }
    dend_40 { pt3dadd( 36.5354, 83.8258, -4.80499, 0.28 ) }
    dend_40 { pt3dadd( 37.6022, 84.491, -5.81755, 0.55 ) }
    dend_40 { pt3dadd( 39.0692, 85.2403, -7.23837, 0.28 ) }
    dend_40 { pt3dadd( 40.6889, 85.9234, -8.75531, 0.55 ) }
    dend_40 { pt3dadd( 51.2954, 89.4678, -18.3128, 0.28 ) }
    dend_40 { pt3dadd( 52.1927, 89.7016, -19.0604, 0.55 ) }
    dend_40 { pt3dadd( 54.918, 90.2012, -21.0355, 0.28 ) }
    dend_40 { pt3dadd( 57.0988, 90.4117, -22.3314, 0.55 ) }
    dend_40 { pt3dadd( 60.8176, 90.5305, -23.9743, 0.28 ) }
    dend_40 { pt3dadd( 62.2571, 90.4551, -24.3553, 0.55 ) }
    dend_40 { pt3dadd( 64.2023, 90.1954, -24.3778, 0.28 ) }
    dend_40 { pt3dadd( 67.4144, 89.6057, -24.4185, 0.55 ) }
    dend_40 { pt3dadd( 72.5303, 88.3937, -24.4536, 0.28 ) }
    dend_40 { pt3dadd( 74.4559, 87.8408, -24.4781, 0.55 ) }
    dend_40 { pt3dadd( 76.7642, 87.0874, -24.5075, 0.28 ) }
    dend_40 { pt3dadd( 78.8147, 86.4008, -24.5639, 0.55 ) }
    dend_40 { pt3dadd( 82.135, 85.3524, -24.7955, 0.28 ) }
    dend_40 { pt3dadd( 84.0469, 84.8058, -25.0565, 0.83 ) }
    dend_40 { pt3dadd( 90.2016, 83.2897, -26.09, 0.28 ) }
    dend_40 { pt3dadd( 91.3342, 83.1287, -26.2526, 0.55 ) }
    dend_40 { pt3dadd( 94.0391, 83.0066, -26.5788, 0.28 ) }
    dend_40 { pt3dadd( 96.5355, 83.1215, -26.8443, 0.55 ) }
    dend_40 { pt3dadd( 99.9946, 83.6055, -27.2485, 0.28 ) }
    dend_40 { pt3dadd( 101.556, 83.9641, -27.541, 0.55 ) }
    dend_40 { pt3dadd( 111.859, 87.0818, -29.8138, 0.28 ) }
    dend_40 { pt3dadd( 113.645, 87.6255, -30.2704, 0.55 ) }
    dend_40 { pt3dadd( 118.982, 89.2592, -31.757, 0.28 ) }
    dend_40 { pt3dadd( 121.558, 90.0657, -32.483, 0.55 ) }
    dend_40 { pt3dadd( 127.899, 92.1552, -34.3896, 0.28 ) }
    dend_40 { pt3dadd( 129.806, 92.8039, -35.0986, 0.55 ) }
    dend_40 { pt3dadd( 132.471, 93.7883, -36.6395, 0.28 ) }
    dend_40 { pt3dadd( 134.21, 94.2989, -37.672, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 80/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -33.9896, -26.7043, 7.70881, 0.28 ) }
    dend_33 { pt3dadd( -32.1427, -31.7073, 6.46275, 0.28 ) }
    dend_33 { pt3dadd( -31.813, -32.6003, 6.24032, 0.55 ) }
    dend_33 { pt3dadd( -30.4763, -36.2213, 5.33847, 0.28 ) }
    dend_33 { pt3dadd( -30.0341, -37.4192, 5.04013, 0.83 ) }
    dend_33 { pt3dadd( -28.9554, -40.3414, 4.31232, 0.28 ) }
    dend_33 { pt3dadd( -28.4162, -41.8019, 3.94857, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 87/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -33.9896, -26.7043, 7.70881, 0.28 ) }
    dend_32 { pt3dadd( -34.7248, -29.4241, 8.0463, 0.28 ) }
    dend_32 { pt3dadd( -34.8297, -29.7739, 8.07332, 0.83 ) }
    dend_32 { pt3dadd( -35.383, -31.5444, 8.21328, 0.28 ) }
    dend_32 { pt3dadd( -35.564, -32.0791, 8.21753, 0.83 ) }
    dend_32 { pt3dadd( -36.1191, -33.541, 8.16884, 0.28 ) }
    dend_32 { pt3dadd( -36.2753, -33.9134, 8.14252, 0.55 ) }
    dend_32 { pt3dadd( -36.9659, -35.2894, 7.95086, 0.28 ) }
    dend_32 { pt3dadd( -37.8468, -36.8642, 7.65989, 0.83 ) }
    dend_32 { pt3dadd( -39.1872, -39.0144, 7.19591, 0.28 ) }
    dend_32 { pt3dadd( -39.9306, -40.1454, 6.92273, 0.83 ) }
    dend_32 { pt3dadd( -40.8155, -41.3851, 6.58255, 0.28 ) }
    dend_32 { pt3dadd( -41.7172, -42.5261, 6.25563, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -42.4271, -43.3054, 6.00114, 0.28 ) }
    dend_32 { pt3dadd( -42.9442, -43.8149, 5.80792, 0.55 ) }
    dend_32 { pt3dadd( -43.6798, -44.4819, 5.58393, 0.28 ) }
    dend_32 { pt3dadd( -44.2653, -45.0121, 5.4059, 0.55 ) }
    dend_32 { pt3dadd( -46.3688, -46.8491, 4.82821, 0.83 ) }
    dend_32 { pt3dadd( -47.647, -47.9703, 4.48795, 0.28 ) }
    dend_32 { pt3dadd( -48.4743, -48.652, 4.28712, 0.55 ) }
    dend_32 { pt3dadd( -50.6388, -50.3418, 3.80271, 0.28 ) }
    dend_32 { pt3dadd( -51.8299, -51.2974, 3.57873, 1.11 ) }
    dend_32 { pt3dadd( -53.956, -53.0438, 3.18974, 0.28 ) }
    dend_32 { pt3dadd( -54.7072, -53.7314, 3.05595, 0.55 ) }
    dend_32 { pt3dadd( -56.1673, -55.2109, 2.77486, 0.28 ) }
    dend_32 { pt3dadd( -56.9077, -56.0223, 2.601, 0.83 ) }
    dend_32 { pt3dadd( -59.1991, -59.0185, 1.79778, 0.28 ) }
    dend_32 { pt3dadd( -59.9437, -60.2035, 1.42075, 0.83 ) }
    dend_32 { pt3dadd( -61.6145, -63.4481, 0.244646, 0.28 ) }
    dend_32 { pt3dadd( -62.3003, -65.0215, -0.364898, 1.11 ) }
    dend_32 { pt3dadd( -62.6458, -65.9735, -0.755626, 1.11 ) }
    dend_32 { pt3dadd( -63.4558, -68.6475, -1.85577, 0.28 ) }
    dend_32 { pt3dadd( -64.0265, -70.9186, -2.81792, 0.28 ) }
    dend_32 { pt3dadd( -64.2209, -71.6591, -3.13867, 0.55 ) }
    dend_32 { pt3dadd( -64.7676, -73.5814, -3.98948, 0.28 ) }
    dend_32 { pt3dadd( -65.0735, -74.4971, -4.41531, 0.83 ) }
    dend_32 { pt3dadd( -65.9849, -76.8834, -5.56977, 0.28 ) }
    dend_32 { pt3dadd( -66.3766, -77.8189, -6.041, 0.55 ) }
    dend_32 { pt3dadd( -68.4185, -82.5538, -8.47814, 0.28 ) }
    dend_32 { pt3dadd( -68.8362, -83.5486, -8.95113, 0.55 ) }
    dend_32 { pt3dadd( -69.8327, -85.9283, -10.0187, 0.28 ) }
    dend_32 { pt3dadd( -70.1226, -86.6256, -10.3175, 0.55 ) }
    dend_32 { pt3dadd( -71.7441, -90.4692, -11.9136, 0.28 ) }
    dend_32 { pt3dadd( -72.5547, -92.5665, -12.7391, 0.83 ) }
    dend_32 { pt3dadd( -73.5497, -95.5948, -13.8376, 0.28 ) }
    dend_32 { pt3dadd( -73.854, -96.5279, -14.2049, 0.83 ) }
    dend_32 { pt3dadd( -74.2138, -97.7144, -14.6556, 0.28 ) }
    dend_32 { pt3dadd( -74.444, -98.4268, -14.9966, 0.55 ) }
    dend_32 { pt3dadd( -75.1163, -100.361, -16.0967, 0.28 ) }
    dend_32 { pt3dadd( -75.3511, -101.046, -16.5097, 0.55 ) }
    dend_32 { pt3dadd( -76.3697, -104.078, -18.3895, 0.28 ) }
    dend_32 { pt3dadd( -76.7148, -105.114, -19.0058, 0.55 ) }
    dend_32 { pt3dadd( -79.0098, -112.111, -22.9724, 0.28 ) }
    dend_32 { pt3dadd( -79.4392, -113.424, -23.6878, 0.83 ) }
    dend_32 { pt3dadd( -80.9839, -118.077, -26.0995, 0.28 ) }
    dend_32 { pt3dadd( -81.2408, -118.888, -26.5191, 0.55 ) }
    dend_32 { pt3dadd( -82.6366, -123.616, -28.943, 0.28 ) }
    dend_32 { pt3dadd( -82.7736, -124.081, -29.1858, 0.55 ) }
    dend_32 { pt3dadd( -83.4967, -126.849, -30.5836, 0.28 ) }
    dend_32 { pt3dadd( -83.6253, -127.376, -30.8479, 0.83 ) }
    dend_32 { pt3dadd( -83.862, -128.304, -31.3056, 0.83 ) }
    dend_32 { pt3dadd( -84.3308, -130.028, -32.1208, 0.83 ) }
    dend_32 { pt3dadd( -84.9219, -132.272, -33.1415, 0.28 ) }
    dend_32 { pt3dadd( -85.4346, -133.895, -33.989, 0.28 ) }
    dend_32 { pt3dadd( -85.6178, -134.447, -34.3198, 0.55 ) }
    dend_32 { pt3dadd( -86.1978, -136.19, -35.4099, 0.28 ) }
    dend_32 { pt3dadd( -86.572, -137.265, -36.1009, 0.55 ) }
    dend_32 { pt3dadd( -87.7815, -140.795, -38.4581, 0.28 ) }
    dend_32 { pt3dadd( -88.5401, -142.984, -39.945, 0.83 ) }
    dend_32 { pt3dadd( -90.645, -149.008, -44.1416, 0.28 ) }
    dend_32 { pt3dadd( -90.8989, -149.763, -44.6862, 0.83 ) }
    dend_32 { pt3dadd( -91.2795, -150.979, -45.5802, 0.28 ) }
    dend_32 { pt3dadd( -91.5021, -151.7, -46.1153, 0.83 ) }
    dend_32 { pt3dadd( -92.4383, -154.684, -48.3368, 0.28 ) }
    dend_32 { pt3dadd( -92.5476, -155.057, -48.5937, 0.55 ) }
    dend_32 { pt3dadd( -93.1941, -157.107, -50.0468, 0.28 ) }
    dend_32 { pt3dadd( -93.5287, -158.187, -50.8212, 0.83 ) }
    dend_32 { pt3dadd( -94.1846, -160.389, -52.3846, 0.28 ) }
    dend_32 { pt3dadd( -94.5198, -161.485, -53.1597, 0.55 ) }
    dend_32 { pt3dadd( -96.0288, -166.344, -56.582, 0.28 ) }
    dend_32 { pt3dadd( -96.1373, -166.705, -56.828, 0.55 ) }
    dend_32 { pt3dadd( -96.4929, -167.924, -57.6259, 0.28 ) }
    dend_32 { pt3dadd( -96.8543, -169.251, -58.4934, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 14.8103, -172.891, 3.12468, 0.28 ) }
    dend_28 { pt3dadd( 18.1089, -173.846, 4.3172, 0.28 ) }
    dend_28 { pt3dadd( 20.2579, -174.468, 5.09414, 0.83 ) }
    dend_28 { pt3dadd( 23.2015, -175.32, 6.15833, 0.28 ) }
    dend_28 { pt3dadd( 24.9748, -175.834, 6.79941, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 75/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 14.8103, -172.891, 3.12468, 0.83 ) }
    dend_27 { pt3dadd( 15.0309, -175.809, 3.24969, 0.83 ) }
    dend_27 { pt3dadd( 15.4707, -178.862, 3.4735, 0.28 ) }
    dend_27 { pt3dadd( 15.5992, -179.465, 3.50381, 0.55 ) }
    dend_27 { pt3dadd( 16.0558, -181.482, 3.59171, 0.28 ) }
    dend_27 { pt3dadd( 16.1992, -182.124, 3.62544, 0.55 ) }
    dend_27 { pt3dadd( 16.5496, -183.777, 3.72691, 0.28 ) }
    dend_27 { pt3dadd( 16.8557, -185.188, 3.86739, 0.83 ) }
    dend_27 { pt3dadd( 17.5593, -188.184, 4.27332, 0.28 ) }
    dend_27 { pt3dadd( 17.7283, -189.042, 4.4173, 0.55 ) }
    dend_27 { pt3dadd( 18.1195, -191.582, 4.86456, 0.28 ) }
    dend_27 { pt3dadd( 18.2278, -192.682, 5.04857, 0.55 ) }
    dend_27 { pt3dadd( 18.2863, -195.344, 5.41005, 0.28 ) }
    dend_27 { pt3dadd( 18.2617, -196.567, 5.58409, 0.83 ) }
    dend_27 { pt3dadd( 18.2498, -198.571, 5.92623, 0.83 ) }
    dend_27 { pt3dadd( 18.3041, -200.168, 6.20101, 0.28 ) }
    dend_27 { pt3dadd( 18.4068, -201.543, 6.44859, 0.55 ) }
    dend_27 { pt3dadd( 18.8169, -205.999, 7.29455, 0.28 ) }
    dend_27 { pt3dadd( 18.9634, -207.423, 7.61327, 0.55 ) }
    dend_27 { pt3dadd( 19.271, -210.534, 8.40074, 0.28 ) }
    dend_27 { pt3dadd( 19.4704, -212.615, 9.02487, 0.55 ) }
    dend_27 { pt3dadd( 19.7142, -215.574, 10.072, 0.28 ) }
    dend_27 { pt3dadd( 19.8323, -217.688, 10.8863, 0.55 ) }
    dend_27 { pt3dadd( 19.9673, -220.988, 12.2403, 0.28 ) }
    dend_27 { pt3dadd( 19.9774, -223.344, 13.1213, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_27 { pt3dadd( 19.8769, -227.001, 14.3767, 0.28 ) }
    dend_27 { pt3dadd( 19.8503, -228.302, 14.7794, 0.55 ) }
    dend_27 { pt3dadd( 19.8155, -232.674, 15.9838, 0.28 ) }
    dend_27 { pt3dadd( 19.8497, -234.511, 16.4135, 0.55 ) }
    dend_27 { pt3dadd( 19.9928, -238.949, 17.2475, 0.28 ) }
    dend_27 { pt3dadd( 20.1613, -241.77, 17.6775, 0.83 ) }
    dend_27 { pt3dadd( 20.3902, -244.562, 17.9965, 0.28 ) }
    dend_27 { pt3dadd( 20.4434, -245.184, 18.0537, 0.55 ) }
    dend_27 { pt3dadd( 20.6436, -247.74, 18.2896, 0.28 ) }
    dend_27 { pt3dadd( 20.6821, -248.628, 18.3708, 0.83 ) }
    dend_27 { pt3dadd( 20.7681, -251.118, 18.6412, 0.28 ) }
    dend_27 { pt3dadd( 20.7378, -252.335, 18.7643, 0.55 ) }
    dend_27 { pt3dadd( 20.4661, -255.124, 19.0247, 0.28 ) }
    dend_27 { pt3dadd( 20.3069, -256.087, 19.0492, 0.55 ) }
    dend_27 { pt3dadd( 19.8798, -258.246, 19.0269, 0.28 ) }
    dend_27 { pt3dadd( 19.7881, -258.705, 19.021, 0.55 ) }
    dend_27 { pt3dadd( 19.5102, -260.102, 18.999, 0.28 ) }
    dend_27 { pt3dadd( 19.3336, -261.207, 18.993, 0.55 ) }
    dend_27 { pt3dadd( 18.3678, -268.702, 19.0306, 0.28 ) }
    dend_27 { pt3dadd( 18.0632, -271.777, 19.0849, 0.83 ) }
    dend_27 { pt3dadd( 17.8772, -274.36, 19.1761, 0.28 ) }
    dend_27 { pt3dadd( 17.8323, -275.863, 19.263, 0.55 ) }
    dend_27 { pt3dadd( 18.0915, -283.476, 19.85, 0.28 ) }
    dend_27 { pt3dadd( 18.3452, -285.22, 19.9975, 1.11 ) }
    dend_27 { pt3dadd( 18.716, -286.462, 20.1422, 0.28 ) }
    dend_27 { pt3dadd( 19.0997, -287.406, 20.2438, 0.55 ) }
    dend_27 { pt3dadd( 20.663, -290.412, 20.5864, 0.28 ) }
    dend_27 { pt3dadd( 21.7039, -292.131, 20.8153, 0.28 ) }
    dend_27 { pt3dadd( 24.9835, -296.732, 21.4937, 0.28 ) }
    dend_27 { pt3dadd( 25.8186, -297.879, 21.6615, 0.83 ) }
    dend_27 { pt3dadd( 26.742, -299.163, 21.8401, 0.28 ) }
    dend_27 { pt3dadd( 27.9257, -300.885, 22.0711, 0.83 ) }
    dend_27 { pt3dadd( 30.1354, -304.379, 22.4927, 0.28 ) }
    dend_27 { pt3dadd( 30.4032, -304.898, 22.5805, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 34/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -20.03, -180.24, -30.4045, 0.28 ) }
    dend_25 { pt3dadd( -19.5456, -188.917, -28.7327, 0.28 ) }
    dend_25 { pt3dadd( -19.332, -191.958, -28.4878, 0.55 ) }
    dend_25 { pt3dadd( -19.1597, -194.636, -28.3332, 0.28 ) }
    dend_25 { pt3dadd( -19.0876, -196.404, -28.239, 0.55 ) }
    dend_25 { pt3dadd( -19.0372, -199.266, -28.1008, 0.28 ) }
    dend_25 { pt3dadd( -19.0478, -201.821, -27.9459, 0.55 ) }
    dend_25 { pt3dadd( -19.3783, -209.678, -27.5724, 0.28 ) }
    dend_25 { pt3dadd( -19.4716, -211.019, -27.4948, 0.55 ) }
    dend_25 { pt3dadd( -19.7259, -213.677, -27.2298, 0.28 ) }
    dend_25 { pt3dadd( -19.9145, -215.38, -26.9696, 0.55 ) }
    dend_25 { pt3dadd( -20.2018, -217.907, -26.4386, 0.28 ) }
    dend_25 { pt3dadd( -20.4224, -220.258, -25.8241, 1.94 ) }
    dend_25 { pt3dadd( -20.8684, -224.869, -24.2821, 0.28 ) }
    dend_25 { pt3dadd( -21.1185, -228.488, -23.0972, 1.38 ) }
    dend_25 { pt3dadd( -21.2033, -231.013, -22.2574, 0.28 ) }
    dend_25 { pt3dadd( -21.2127, -232.648, -21.7072, 0.83 ) }
    dend_25 { pt3dadd( -21.1452, -235.659, -20.7454, 0.28 ) }
    dend_25 { pt3dadd( -21.0202, -238.159, -19.9228, 1.94 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 53/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -20.03, -180.24, -30.4045, 0.55 ) }
    dend_24 { pt3dadd( -23.9877, -181.847, -34.2227, 0.55 ) }
    dend_24 { pt3dadd( -26.1802, -182.716, -35.9172, 0.28 ) }
    dend_24 { pt3dadd( -26.8848, -182.995, -36.4618, 0.55 ) }
    dend_24 { pt3dadd( -30.7756, -184.536, -39.4688, 0.28 ) }
    dend_24 { pt3dadd( -32.9899, -185.413, -41.18, 0.83 ) }
    dend_24 { pt3dadd( -36.9209, -186.97, -44.218, 0.28 ) }
    dend_24 { pt3dadd( -38.9788, -187.583, -45.2666, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 61/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 18.7568, -30.8897, -8.21706, 0.28 ) }
    dend_16 { pt3dadd( 21.1537, -29.5489, -8.82074, 0.28 ) }
    dend_16 { pt3dadd( 21.8272, -29.1999, -8.9606, 0.83 ) }
    dend_16 { pt3dadd( 24.5336, -28.0168, -9.3005, 0.28 ) }
    dend_16 { pt3dadd( 25.4111, -27.664, -9.42166, 0.55 ) }
    dend_16 { pt3dadd( 26.9911, -27.0289, -9.6398, 0.28 ) }
    dend_16 { pt3dadd( 27.994, -26.6258, -9.77829, 0.55 ) }
    dend_16 { pt3dadd( 29.0642, -26.2247, -9.8876, 0.55 ) }
    dend_16 { pt3dadd( 31.6597, -25.3594, -10.0692, 0.28 ) }
    dend_16 { pt3dadd( 33.2248, -24.9903, -10.0392, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 71/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 18.7568, -30.8897, -8.21706, 0.28 ) }
    dend_11 { pt3dadd( 17.5977, -34.5739, -8.55276, 0.28 ) }
    dend_11 { pt3dadd( 17.1702, -36.4285, -8.86677, 0.83 ) }
    dend_11 { pt3dadd( 16.6526, -39.057, -9.34866, 0.28 ) }
    dend_11 { pt3dadd( 16.5547, -39.6849, -9.42923, 0.55 ) }
    dend_11 { pt3dadd( 16.2225, -42.2525, -9.66892, 0.28 ) }
    dend_11 { pt3dadd( 15.9318, -45.5845, -9.96476, 1.11 ) }
    dend_11 { pt3dadd( 15.8998, -49.8514, -10.3145, 0.28 ) }
    dend_11 { pt3dadd( 15.9557, -51.3285, -10.4177, 0.55 ) }
    dend_11 { pt3dadd( 16.2932, -55.4088, -10.6506, 0.28 ) }
    dend_11 { pt3dadd( 16.4371, -56.6634, -10.7242, 0.55 ) }
    dend_11 { pt3dadd( 17.1737, -61.2514, -10.9695, 0.28 ) }
    dend_11 { pt3dadd( 17.6144, -63.5208, -11.0572, 0.83 ) }
    dend_11 { pt3dadd( 18.2909, -66.6878, -11.0539, 0.28 ) }
    dend_11 { pt3dadd( 18.6617, -68.2982, -11.0889, 0.55 ) }
    dend_11 { pt3dadd( 19.34, -71.0603, -11.2476, 0.28 ) }
    dend_11 { pt3dadd( 19.801, -72.8861, -11.3257, 0.55 ) }
    dend_11 { pt3dadd( 20.3992, -75.1623, -11.2819, 0.28 ) }
    dend_11 { pt3dadd( 21.0124, -77.4409, -11.1859, 0.28 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 90/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 20.5463, -17.7511, -4.19705, 0.28 ) }
    dend_7 { pt3dadd( 21.9431, -17.8214, -2.75949, 0.28 ) }
    dend_7 { pt3dadd( 24.4505, -16.9896, -0.0322054, 0.28 ) }
    dend_7 { pt3dadd( 27.7929, -14.8182, 3.74216, 0.28 ) }
    dend_7 { pt3dadd( 28.7108, -13.9367, 4.69326, 0.83 ) }
    dend_7 { pt3dadd( 30.4865, -11.8725, 6.45042, 0.28 ) }
    dend_7 { pt3dadd( 31.4047, -10.8051, 7.35898, 0.83 ) }
    dend_7 { pt3dadd( 32.9911, -8.09096, 8.96346, 0.28 ) }
    dend_7 { pt3dadd( 33.3591, -7.08609, 9.37178, 0.55 ) }
    dend_7 { pt3dadd( 34.1312, -3.9315, 9.95206, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( 34.2902, -3.23631, 10.0435, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 1/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 20.5463, -17.7511, -4.19705, 0.55 ) }
    dend_2 { pt3dadd( 20.6014, -18.6914, -4.36849, 0.55 ) }
    dend_2 { pt3dadd( 20.9004, -21.5443, -4.74655, 0.28 ) }
    dend_2 { pt3dadd( 21.1398, -23.3623, -4.84171, 0.28 ) }
    dend_2 { pt3dadd( 21.2845, -24.4616, -4.89925, 0.55 ) }
    dend_2 { pt3dadd( 21.3904, -25.2666, -4.94138, 0.55 ) }
    dend_2 { pt3dadd( 21.7302, -27.8474, -5.07647, 0.83 ) }
    dend_2 { pt3dadd( 22.6524, -33.8743, -5.25341, 0.28 ) }
    dend_2 { pt3dadd( 23.0155, -35.9641, -5.19547, 0.28 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 10/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -43.5685, 16.2091, 11.1531, 0.55 ) }
    dend_60 { pt3dadd( -46.6732, 16.5726, 11.9845, 0.55 ) }
    dend_60 { pt3dadd( -50.9304, 17.0281, 13.2793, 0.28 ) }
    dend_60 { pt3dadd( -54.7841, 17.4506, 14.7066, 0.55 ) }
    dend_60 { pt3dadd( -57.6808, 17.7603, 15.849, 0.28 ) }
    dend_60 { pt3dadd( -58.9567, 17.9499, 16.4206, 0.28 ) }
    dend_60 { pt3dadd( -60.491, 18.2636, 17.1865, 0.55 ) }
    dend_60 { pt3dadd( -63.1556, 18.7639, 18.7431, 0.55 ) }
    dend_60 { pt3dadd( -65.4947, 19.3508, 20.4123, 0.28 ) }
    dend_60 { pt3dadd( -66.3087, 19.6507, 21.0644, 0.55 ) }
    dend_60 { pt3dadd( -68.7895, 20.6424, 23.0238, 0.28 ) }
    dend_60 { pt3dadd( -70.2057, 21.3709, 24.3224, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 22/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -43.5685, 16.2091, 11.1531, 0.28 ) }
    dend_53 { pt3dadd( -47.2585, 15.7086, 11.2168, 0.28 ) }
    dend_53 { pt3dadd( -47.7357, 15.6379, 11.1697, 0.55 ) }
    dend_53 { pt3dadd( -50.2695, 15.208, 11.1391, 0.28 ) }
    dend_53 { pt3dadd( -51.3338, 14.9985, 11.184, 0.55 ) }
    dend_53 { pt3dadd( -53.2367, 14.6351, 11.4383, 0.28 ) }
    dend_53 { pt3dadd( -54.6675, 14.2958, 11.7516, 0.55 ) }
    dend_53 { pt3dadd( -60.476, 12.7877, 13.535, 0.28 ) }
    dend_53 { pt3dadd( -64.1692, 11.787, 14.8477, 0.55 ) }
    dend_53 { pt3dadd( -65.3652, 11.4627, 15.3177, 0.28 ) }
    dend_53 { pt3dadd( -68.4903, 10.6094, 16.6855, 0.28 ) }
    dend_53 { pt3dadd( -73.3745, 9.26013, 18.7929, 0.83 ) }
    dend_53 { pt3dadd( -75.1714, 8.75281, 19.6608, 0.55 ) }
    dend_53 { pt3dadd( -77.4275, 8.10552, 20.9148, 0.28 ) }
    dend_53 { pt3dadd( -79.273, 7.60892, 21.7739, 0.55 ) }
    dend_53 { pt3dadd( -81.5438, 7.04284, 22.6711, 0.28 ) }
    dend_53 { pt3dadd( -84.7505, 6.22997, 23.5437, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 39/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -8.90323, 28.8078, 7.45939, 0.28 ) }
    dend_51 { pt3dadd( -8.01242, 29.1605, 8.02069, 0.28 ) }
    dend_51 { pt3dadd( -7.60063, 29.3236, 8.28016, 0.55 ) }
    dend_51 { pt3dadd( -5.85673, 30.014, 9.379, 0.28 ) }
    dend_51 { pt3dadd( -4.94495, 30.375, 9.95352, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 44/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -8.90323, 28.8078, 7.45939, 0.28 ) }
    dend_48 { pt3dadd( -9.10456, 30.5902, 8.5589, 0.28 ) }
    dend_48 { pt3dadd( -9.26287, 31.9917, 9.42348, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 47/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 16.4985, 76.6728, 2.1395, 0.28 ) }
    dend_43 { pt3dadd( 19.3751, 77.2766, 2.19715, 0.28 ) }
    dend_43 { pt3dadd( 20.0284, 77.3901, 2.23248, 0.55 ) }
    dend_43 { pt3dadd( 21.1406, 77.5268, 2.33868, 0.28 ) }
    dend_43 { pt3dadd( 22.1993, 77.607, 2.46721, 0.55 ) }
    dend_43 { pt3dadd( 23.0862, 77.6617, 2.56968, 0.28 ) }
    dend_43 { pt3dadd( 24.8639, 77.7026, 2.81578, 0.83 ) }
    dend_43 { pt3dadd( 26.7712, 77.688, 3.16115, 0.28 ) }
    dend_43 { pt3dadd( 28.3083, 77.6798, 3.44624, 0.55 ) }
    dend_43 { pt3dadd( 30.8215, 77.7062, 3.94568, 0.28 ) }
    dend_43 { pt3dadd( 32.6255, 77.7924, 4.28766, 0.55 ) }
    dend_43 { pt3dadd( 35.3304, 77.9897, 4.8031, 0.28 ) }
    dend_43 { pt3dadd( 37.1954, 78.231, 5.13342, 0.83 ) }
    dend_43 { pt3dadd( 39.2417, 78.6311, 5.47459, 0.28 ) }
    dend_43 { pt3dadd( 40.1712, 78.8967, 5.59082, 0.55 ) }
    dend_43 { pt3dadd( 42.6769, 79.8135, 5.83595, 0.28 ) }
    dend_43 { pt3dadd( 43.6128, 80.2284, 5.90771, 0.55 ) }
    dend_43 { pt3dadd( 46.2237, 81.5501, 6.01627, 0.28 ) }
    dend_43 { pt3dadd( 47.2931, 82.1358, 6.03016, 0.55 ) }
    dend_43 { pt3dadd( 50.5368, 84.0795, 6.0555, 0.28 ) }
    dend_43 { pt3dadd( 51.5344, 84.738, 6.06135, 0.83 ) }
    dend_43 { pt3dadd( 52.6012, 85.5622, 6.09564, 0.83 ) }
    dend_43 { pt3dadd( 53.4086, 86.2807, 6.13284, 0.83 ) }
    dend_43 { pt3dadd( 55.4661, 88.5008, 6.2712, 0.28 ) }
    dend_43 { pt3dadd( 56.7165, 90.2012, 6.39419, 0.28 ) }
    dend_43 { pt3dadd( 57.1006, 90.8638, 6.46101, 0.55 ) }
    dend_43 { pt3dadd( 58.5076, 93.5003, 6.6244, 0.28 ) }
    dend_43 { pt3dadd( 58.8974, 94.2598, 6.65604, 0.55 ) }
    dend_43 { pt3dadd( 59.8372, 96.088, 6.61365, 0.28 ) }
    dend_43 { pt3dadd( 61.2579, 98.9646, 6.51044, 0.28 ) }
    dend_43 { pt3dadd( 62.0543, 100.551, 6.40181, 0.83 ) }
    dend_43 { pt3dadd( 63.7873, 103.827, 6.08224, 0.28 ) }
    dend_43 { pt3dadd( 64.2976, 104.754, 5.9446, 0.55 ) }
    dend_43 { pt3dadd( 66.057, 107.668, 5.41226, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 81/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 16.4985, 76.6728, 2.1395, 0.28 ) }
    dend_42 { pt3dadd( 14.9348, 79.9464, 1.51362, 0.28 ) }
    dend_42 { pt3dadd( 14.484, 80.6605, 1.28916, 0.55 ) }
    dend_42 { pt3dadd( 10.828, 85.6329, -0.607438, 0.28 ) }
    dend_42 { pt3dadd( 10.4018, 86.1466, -0.845576, 0.55 ) }
    dend_42 { pt3dadd( 9.20949, 87.3867, -1.52722, 0.28 ) }
    dend_42 { pt3dadd( 8.09116, 88.3637, -2.19499, 0.55 ) }
    dend_42 { pt3dadd( 4.07954, 90.7651, -4.71042, 0.28 ) }
    dend_42 { pt3dadd( 3.5298, 90.9803, -5.10107, 0.55 ) }
    dend_42 { pt3dadd( 2.07443, 91.3467, -6.16745, 0.28 ) }
    dend_42 { pt3dadd( 0.458427, 91.7257, -7.41181, 0.83 ) }
    dend_42 { pt3dadd( -1.76584, 92.2051, -9.12939, 0.28 ) }
    dend_42 { pt3dadd( -3.51781, 92.6247, -10.3716, 0.83 ) }
    dend_42 { pt3dadd( -9.74427, 94.3686, -14.787, 0.28 ) }
    dend_42 { pt3dadd( -11.99, 95.0913, -16.4078, 0.55 ) }
    dend_42 { pt3dadd( -14.3848, 95.9219, -18.1275, 0.28 ) }
    dend_42 { pt3dadd( -15.8011, 96.4841, -19.2168, 0.55 ) }
    dend_42 { pt3dadd( -22.0711, 99.0598, -24.1711, 0.28 ) }
    dend_42 { pt3dadd( -23.8209, 99.7708, -25.5666, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_42 { pt3dadd( -25.5139, 100.44, -26.9103, 0.28 ) }
    dend_42 { pt3dadd( -26.7591, 100.892, -27.9205, 0.55 ) }
    dend_42 { pt3dadd( -30.9522, 102.255, -31.3135, 0.28 ) }
    dend_42 { pt3dadd( -33.006, 102.811, -33.082, 0.28 ) }
    dend_42 { pt3dadd( -34.6003, 103.117, -34.5215, 0.55 ) }
    dend_42 { pt3dadd( -36.1552, 103.373, -35.8588, 0.28 ) }
    dend_42 { pt3dadd( -37.7757, 103.677, -37.2643, 0.83 ) }
    dend_42 { pt3dadd( -40.6733, 104.309, -39.8349, 0.28 ) }
    dend_42 { pt3dadd( -42.4039, 104.729, -41.3595, 0.83 ) }
    dend_42 { pt3dadd( -47.3729, 106.243, -46.1361, 0.28 ) }
    dend_42 { pt3dadd( -48.802, 106.801, -47.6761, 0.55 ) }
    dend_42 { pt3dadd( -50.7518, 107.772, -49.9552, 0.28 ) }
    dend_42 { pt3dadd( -51.1572, 107.985, -50.4878, 0.55 ) }
    dend_42 { pt3dadd( -51.6351, 108.233, -51.1719, 0.28 ) }
    dend_42 { pt3dadd( -52.5969, 108.709, -52.6599, 0.55 ) }
    dend_42 { pt3dadd( -54.8853, 109.685, -56.3646, 0.28 ) }
    dend_42 { pt3dadd( -56.687, 110.149, -58.8966, 0.83 ) }
    dend_42 { pt3dadd( -62.3837, 110.995, -66.1741, 0.28 ) }
    dend_42 { pt3dadd( -64.1622, 111.133, -68.2753, 0.55 ) }
    dend_42 { pt3dadd( -66.1056, 111.19, -70.3892, 0.28 ) }
    dend_42 { pt3dadd( -67.1092, 111.184, -71.3382, 0.55 ) }
    dend_42 { pt3dadd( -72.5202, 110.976, -75.894, 0.28 ) }
    dend_42 { pt3dadd( -74.1859, 110.881, -77.1817, 0.55 ) }
    dend_42 { pt3dadd( -76.4376, 110.781, -78.628, 0.28 ) }
    dend_42 { pt3dadd( -78.4169, 110.735, -79.7776, 0.55 ) }
    dend_42 { pt3dadd( -82.237, 110.739, -81.8179, 0.28 ) }
    dend_42 { pt3dadd( -83.9672, 110.824, -82.7966, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 27/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -28.4162, -41.8019, 3.94857, 0.55 ) }
    dend_37 { pt3dadd( -26.2742, -41.7651, 3.15111, 0.55 ) }
    dend_37 { pt3dadd( -24.8022, -41.7398, 2.60309, 0.28 ) }
    dend_37 { pt3dadd( -23.667, -41.7203, 2.18047, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 31/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -28.4162, -41.8019, 3.94857, 0.28 ) }
    dend_34 { pt3dadd( -29.1835, -45.147, 3.00054, 0.28 ) }
    dend_34 { pt3dadd( -29.4721, -46.4319, 2.72969, 0.83 ) }
    dend_34 { pt3dadd( -29.608, -47.0318, 2.5422, 0.83 ) }
    dend_34 { pt3dadd( -29.8948, -48.4067, 2.05346, 0.28 ) }
    dend_34 { pt3dadd( -29.9895, -48.8917, 1.87588, 0.55 ) }
    dend_34 { pt3dadd( -30.1322, -49.7434, 1.57163, 0.28 ) }
    dend_34 { pt3dadd( -30.2558, -50.7024, 1.23818, 0.55 ) }
    dend_34 { pt3dadd( -30.6044, -54.095, -0.0621657, 0.28 ) }
    dend_34 { pt3dadd( -30.6346, -54.7291, -0.322303, 0.55 ) }
    dend_34 { pt3dadd( -30.6216, -56.2428, -0.98535, 0.28 ) }
    dend_34 { pt3dadd( -30.594, -57.0317, -1.36529, 0.55 ) }
    dend_34 { pt3dadd( -30.553, -57.925, -1.81998, 0.28 ) }
    dend_34 { pt3dadd( -30.4793, -59.086, -2.40251, 1.38 ) }
    dend_34 { pt3dadd( -30.4236, -59.9372, -2.79192, 0.83 ) }
    dend_34 { pt3dadd( -30.3999, -61.2446, -3.40172, 0.83 ) }
    dend_34 { pt3dadd( -30.4555, -63.0215, -4.27202, 0.28 ) }
    dend_34 { pt3dadd( -30.5373, -63.6038, -4.58788, 0.55 ) }
    dend_34 { pt3dadd( -30.6613, -64.1042, -4.85818, 0.28 ) }
    dend_34 { pt3dadd( -30.9499, -64.9234, -5.31935, 0.55 ) }
    dend_34 { pt3dadd( -31.3291, -65.7695, -5.76234, 0.28 ) }
    dend_34 { pt3dadd( -31.7411, -66.6139, -6.16166, 1.38 ) }
    dend_34 { pt3dadd( -32.4968, -68.1059, -6.77151, 0.55 ) }
    dend_34 { pt3dadd( -33.0255, -69.258, -7.17828, 0.28 ) }
    dend_34 { pt3dadd( -33.3776, -70.0529, -7.42559, 0.55 ) }
    dend_34 { pt3dadd( -34.0492, -71.6887, -7.89057, 0.28 ) }
    dend_34 { pt3dadd( -34.4017, -72.6207, -8.14668, 1.11 ) }
    dend_34 { pt3dadd( -34.7373, -73.5582, -8.36591, 1.11 ) }
    dend_34 { pt3dadd( -36.2079, -77.9256, -9.29511, 0.28 ) }
    dend_34 { pt3dadd( -36.5137, -78.8451, -9.52777, 0.83 ) }
    dend_34 { pt3dadd( -37.5002, -81.8288, -10.3429, 0.28 ) }
    dend_34 { pt3dadd( -37.7745, -82.7016, -10.6112, 0.55 ) }
    dend_34 { pt3dadd( -38.4293, -84.806, -11.297, 0.28 ) }
    dend_34 { pt3dadd( -38.838, -86.1564, -11.7643, 0.83 ) }
    dend_34 { pt3dadd( -39.4853, -88.2985, -12.5784, 0.28 ) }
    dend_34 { pt3dadd( -39.6381, -88.8156, -12.7872, 0.83 ) }
    dend_34 { pt3dadd( -40.2969, -91.0406, -13.7484, 0.28 ) }
    dend_34 { pt3dadd( -40.6007, -92.0563, -14.2126, 0.83 ) }
    dend_34 { pt3dadd( -40.642, -92.2176, -14.2991, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 70/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 33.2248, -24.9903, -10.0392, 0.28 ) }
    dend_18 { pt3dadd( 31.9235, -20.0992, -9.39718, 0.28 ) }
    dend_18 { pt3dadd( 31.5448, -18.6754, -9.21031, 0.83 ) }
    dend_18 { pt3dadd( 30.092, -13.2147, -8.4936, 0.28 ) }
    dend_18 { pt3dadd( 29.5801, -11.2908, -8.24108, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 75/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 33.2248, -24.9903, -10.0392, 0.28 ) }
    dend_17 { pt3dadd( 34.6622, -24.1025, -9.37973, 0.28 ) }
    dend_17 { pt3dadd( 35.2261, -23.7044, -9.1328, 0.83 ) }
    dend_17 { pt3dadd( 36.2396, -22.9282, -8.70484, 0.83 ) }
    dend_17 { pt3dadd( 38.3163, -21.2381, -7.90452, 0.28 ) }
    dend_17 { pt3dadd( 40.5723, -19.3447, -7.08033, 0.28 ) }
    dend_17 { pt3dadd( 41.1179, -18.8953, -6.88491, 0.83 ) }
    dend_17 { pt3dadd( 42.2459, -17.9192, -6.49127, 0.28 ) }
    dend_17 { pt3dadd( 43.2025, -17.079, -6.1842, 0.83 ) }
    dend_17 { pt3dadd( 44.7916, -15.6781, -5.70452, 0.28 ) }
    dend_17 { pt3dadd( 45.2626, -15.3355, -5.61074, 0.55 ) }
    dend_17 { pt3dadd( 46.0834, -14.9177, -5.485, 0.28 ) }
    dend_17 { pt3dadd( 46.4119, -14.7744, -5.43755, 0.55 ) }
    dend_17 { pt3dadd( 47.6367, -14.3604, -5.27323, 0.28 ) }
    dend_17 { pt3dadd( 48.0335, -14.2561, -5.22754, 0.83 ) }
    dend_17 { pt3dadd( 52.6852, -13.3495, -4.76135, 0.28 ) }
    dend_17 { pt3dadd( 53.4812, -13.1978, -4.69973, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 92/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 21.0124, -77.4409, -11.1859, 0.83 ) }
    dend_13 { pt3dadd( 21.0026, -77.5253, -11.2677, 0.83 ) }
    dend_13 { pt3dadd( 20.7163, -79.0934, -13.066, 0.28 ) }
    dend_13 { pt3dadd( 20.4537, -80.2425, -14.4219, 0.83 ) }
    dend_13 { pt3dadd( 20.0357, -81.899, -16.4707, 0.28 ) }
    dend_13 { pt3dadd( 19.8463, -82.5932, -17.3313, 0.83 ) }
    dend_13 { pt3dadd( 19.3511, -84.4435, -19.6806, 0.28 ) }
    dend_13 { pt3dadd( 19.08, -85.4578, -21.0901, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_13 { pt3dadd( 18.9391, -85.939, -21.8513, 0.55 ) }
    dend_13 { pt3dadd( 18.7965, -86.6998, -23.1449, 0.28 ) }
    dend_13 { pt3dadd( 18.7747, -87.0782, -23.7456, 0.55 ) }
    dend_13 { pt3dadd( 18.7877, -87.8153, -24.8115, 0.83 ) }
    dend_13 { pt3dadd( 18.9368, -88.6849, -25.9099, 0.28 ) }
    dend_13 { pt3dadd( 19.0267, -88.9593, -26.2693, 0.55 ) }
    dend_13 { pt3dadd( 19.734, -90.5644, -28.4699, 0.28 ) }
    dend_13 { pt3dadd( 20.1164, -91.2805, -29.4094, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 8/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 21.0124, -77.4409, -11.1859, 0.28 ) }
    dend_12 { pt3dadd( 22.3173, -78.2689, -10.2081, 0.28 ) }
    dend_12 { pt3dadd( 23.6708, -78.8657, -9.03736, 0.83 ) }
    dend_12 { pt3dadd( 26.765, -79.984, -6.31235, 0.28 ) }
    dend_12 { pt3dadd( 28.2564, -80.412, -5.04608, 0.83 ) }
    dend_12 { pt3dadd( 31.1633, -81.122, -2.65655, 0.28 ) }
    dend_12 { pt3dadd( 31.9866, -81.2774, -2.01512, 0.55 ) }
    dend_12 { pt3dadd( 37.9698, -81.9071, 2.48133, 0.28 ) }
    dend_12 { pt3dadd( 38.9114, -81.954, 3.18126, 0.55 ) }
    dend_12 { pt3dadd( 41.6367, -81.948, 5.11859, 0.28 ) }
    dend_12 { pt3dadd( 42.6654, -81.9332, 5.84638, 0.55 ) }
    dend_12 { pt3dadd( 46.4065, -81.7854, 8.37561, 0.28 ) }
    dend_12 { pt3dadd( 47.6112, -81.7231, 9.12517, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 34.2902, -3.23631, 10.0435, 0.28 ) }
    dend_9 { pt3dadd( 35.1301, 0.081372, 10.1389, 0.28 ) }
    dend_9 { pt3dadd( 35.2486, 0.487775, 10.1378, 0.55 ) }
    dend_9 { pt3dadd( 38.1879, 10.2438, 10.0834, 0.28 ) }
    dend_9 { pt3dadd( 38.6, 11.5519, 10.1431, 0.55 ) }
    dend_9 { pt3dadd( 39.5237, 14.3971, 10.3435, 0.28 ) }
    dend_9 { pt3dadd( 40.1166, 16.2233, 10.4721, 0.83 ) }
    dend_9 { pt3dadd( 43.4932, 26.3682, 11.2458, 0.28 ) }
    dend_9 { pt3dadd( 44.059, 27.9986, 11.3857, 0.55 ) }
    dend_9 { pt3dadd( 47.1093, 36.2437, 12.2852, 0.28 ) }
    dend_9 { pt3dadd( 47.4619, 37.1782, 12.3957, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 34.2902, -3.23631, 10.0435, 0.28 ) }
    dend_8 { pt3dadd( 35.7287, -0.117332, 10.9556, 0.28 ) }
    dend_8 { pt3dadd( 36.3541, 1.24342, 11.3518, 0.55 ) }
    dend_8 { pt3dadd( 37.9885, 4.91409, 12.2883, 0.28 ) }
    dend_8 { pt3dadd( 38.5081, 6.06717, 12.5373, 0.55 ) }
    dend_8 { pt3dadd( 41.9804, 13.7676, 14.0591, 0.28 ) }
    dend_8 { pt3dadd( 42.8313, 15.6418, 14.3841, 0.83 ) }
    dend_8 { pt3dadd( 45.9651, 22.5691, 15.3717, 0.28 ) }
    dend_8 { pt3dadd( 47.0845, 25.0494, 15.6765, 0.83 ) }
    dend_8 { pt3dadd( 48.6084, 28.3516, 15.999, 0.28 ) }
    dend_8 { pt3dadd( 48.9578, 29.1119, 16.0487, 0.55 ) }
    dend_8 { pt3dadd( 49.9277, 31.227, 15.9959, 0.28 ) }
    dend_8 { pt3dadd( 50.5286, 32.5027, 15.8873, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 23.0155, -35.9641, -5.19547, 0.83 ) }
    dend_4 { pt3dadd( 22.969, -36.2043, -5.18016, 0.83 ) }
    dend_4 { pt3dadd( 22.5045, -39.1791, -4.9265, 0.28 ) }
    dend_4 { pt3dadd( 22.3685, -40.5452, -4.86932, 0.55 ) }
    dend_4 { pt3dadd( 22.1046, -43.3728, -4.64444, 0.28 ) }
    dend_4 { pt3dadd( 21.9557, -45.2373, -4.55147, 0.55 ) }
    dend_4 { pt3dadd( 21.6841, -48.6076, -4.4096, 0.28 ) }
    dend_4 { pt3dadd( 21.581, -50.7744, -4.33642, 0.55 ) }
    dend_4 { pt3dadd( 21.5142, -53.7862, -4.25392, 0.28 ) }
    dend_4 { pt3dadd( 21.4744, -56.7517, -4.19034, 0.83 ) }
    dend_4 { pt3dadd( 21.4614, -60.8154, -4.24575, 0.28 ) }
    dend_4 { pt3dadd( 21.4223, -63.7775, -4.23526, 0.83 ) }
    dend_4 { pt3dadd( 21.3506, -66.0051, -4.14815, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 58/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 23.0155, -35.9641, -5.19547, 0.28 ) }
    dend_3 { pt3dadd( 20.1792, -36.5161, -2.66897, 0.28 ) }
    dend_3 { pt3dadd( 19.1714, -36.6579, -2.21031, 0.55 ) }
    dend_3 { pt3dadd( 14.2508, -37.3379, -0.285982, 0.28 ) }
    dend_3 { pt3dadd( 13.2253, -37.5193, 0.116546, 0.55 ) }
    dend_3 { pt3dadd( 9.88557, -38.2099, 1.50233, 0.28 ) }
    dend_3 { pt3dadd( 8.05307, -38.5887, 2.26269, 0.83 ) }
    dend_3 { pt3dadd( -0.664668, -40.1045, 5.45788, 0.28 ) }
    dend_3 { pt3dadd( -2.59439, -40.4502, 6.09876, 0.83 ) }
    dend_3 { pt3dadd( -5.96639, -41.1828, 7.00681, 0.28 ) }
    dend_3 { pt3dadd( -7.85095, -41.618, 7.5544, 0.83 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 69/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -84.7505, 6.22997, 23.5437, 0.55 ) }
    dend_55 { pt3dadd( -86.9201, 4.86024, 23.378, 0.55 ) }
    dend_55 { pt3dadd( -88.8697, 3.60804, 22.9987, 0.28 ) }
    dend_55 { pt3dadd( -90.4202, 2.59859, 22.5879, 0.28 ) }
    dend_55 { pt3dadd( -93.704, 0.443112, 21.3073, 0.55 ) }
    dend_55 { pt3dadd( -95.1637, -0.496573, 20.6769, 0.28 ) }
    dend_55 { pt3dadd( -95.5119, -0.727121, 20.4959, 0.55 ) }
    dend_55 { pt3dadd( -97.9319, -2.39654, 18.8265, 0.28 ) }
    dend_55 { pt3dadd( -98.9238, -3.10899, 17.9803, 0.55 ) }
    dend_55 { pt3dadd( -101.026, -4.66632, 15.9198, 0.28 ) }
    dend_55 { pt3dadd( -101.554, -5.08271, 15.3264, 0.55 ) }
    dend_55 { pt3dadd( -103.478, -6.71998, 13.1294, 0.28 ) }
    dend_55 { pt3dadd( -103.702, -6.95307, 12.8492, 0.83 ) }
    dend_55 { pt3dadd( -105.053, -8.64712, 11.0625, 0.28 ) }
    dend_55 { pt3dadd( -105.616, -9.5481, 10.2192, 0.55 ) }
    dend_55 { pt3dadd( -107.106, -12.3934, 7.99174, 0.28 ) }
    dend_55 { pt3dadd( -107.727, -13.8019, 7.0387, 0.83 ) }
    dend_55 { pt3dadd( -108.774, -16.5195, 5.51331, 0.28 ) }
    dend_55 { pt3dadd( -109.062, -17.3574, 5.11075, 0.55 ) }
    dend_55 { pt3dadd( -110.35, -21.4988, 3.44523, 0.28 ) }
    dend_55 { pt3dadd( -111.141, -24.1892, 2.4744, 0.83 ) }
    dend_55 { pt3dadd( -111.957, -27.0813, 1.62374, 0.28 ) }
    dend_55 { pt3dadd( -112.41, -28.6396, 1.21869, 0.55 ) }
    dend_55 { pt3dadd( -112.908, -30.21, 0.864166, 0.28 ) }
    dend_55 { pt3dadd( -113.702, -32.6271, 0.330066, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -84.7505, 6.22997, 23.5437, 0.28 ) }
    dend_54 { pt3dadd( -85.8611, 6.87374, 23.0671, 0.28 ) }
    dend_54 { pt3dadd( -86.2153, 7.09012, 22.9285, 0.55 ) }
    dend_54 { pt3dadd( -87.3603, 7.80869, 22.5124, 0.28 ) }
    dend_54 { pt3dadd( -88.1249, 8.25232, 22.3196, 0.55 ) }
    dend_54 { pt3dadd( -92.9322, 10.9822, 21.0623, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_54 { pt3dadd( -93.3589, 11.2211, 20.9647, 0.55 ) }
    dend_54 { pt3dadd( -94.8039, 12.0266, 20.6974, 0.28 ) }
    dend_54 { pt3dadd( -95.1772, 12.2424, 20.6141, 0.55 ) }
    dend_54 { pt3dadd( -98.7757, 14.3839, 19.7451, 0.28 ) }
    dend_54 { pt3dadd( -100.774, 15.5786, 19.1697, 0.55 ) }
    dend_54 { pt3dadd( -102.577, 16.631, 18.6222, 0.28 ) }
    dend_54 { pt3dadd( -103.238, 17.0105, 18.3767, 0.55 ) }
    dend_54 { pt3dadd( -106.104, 18.664, 17.1694, 0.28 ) }
    dend_54 { pt3dadd( -106.399, 18.8383, 16.9964, 0.55 ) }
    dend_54 { pt3dadd( -107.392, 19.4374, 16.2159, 0.28 ) }
    dend_54 { pt3dadd( -108.094, 19.8341, 15.5929, 0.55 ) }
    dend_54 { pt3dadd( -109.983, 20.9007, 13.6362, 0.28 ) }
    dend_54 { pt3dadd( -110.293, 21.0843, 13.2818, 0.55 ) }
    dend_54 { pt3dadd( -112.653, 22.554, 10.4043, 0.28 ) }
    dend_54 { pt3dadd( -112.946, 22.76, 10.0009, 0.55 ) }
    dend_54 { pt3dadd( -113.692, 23.4074, 8.71295, 0.28 ) }
    dend_54 { pt3dadd( -114.143, 23.9126, 7.70571, 0.55 ) }
    dend_54 { pt3dadd( -114.656, 24.7122, 6.22681, 0.28 ) }
    dend_54 { pt3dadd( -114.818, 24.9969, 5.76742, 0.28 ) }
    dend_54 { pt3dadd( -114.818, 24.9969, 5.76742, 0.55 ) }
    dend_54 { pt3dadd( -115.711, 26.078, 4.11586, 0.28 ) }
    dend_54 { pt3dadd( -116.031, 26.4447, 3.54892, 0.55 ) }
    dend_54 { pt3dadd( -117.292, 27.7631, 1.41114, 0.28 ) }
    dend_54 { pt3dadd( -117.565, 28.0224, 0.983951, 0.55 ) }
    dend_54 { pt3dadd( -120.651, 30.7681, -3.61433, 0.28 ) }
    dend_54 { pt3dadd( -121.751, 31.6897, -5.16537, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 26/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -9.26287, 31.9917, 9.42348, 0.28 ) }
    dend_50 { pt3dadd( -6.47862, 33.2239, 9.91687, 0.28 ) }
    dend_50 { pt3dadd( -5.15127, 33.8114, 10.1521, 0.55 ) }
    dend_50 { pt3dadd( -2.97805, 34.7732, 10.5372, 0.28 ) }
    dend_50 { pt3dadd( -2.01007, 35.2015, 10.7087, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 31/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -9.26287, 31.9917, 9.42348, 0.28 ) }
    dend_49 { pt3dadd( -10.0955, 33.4677, 9.6481, 0.28 ) }
    dend_49 { pt3dadd( -10.4779, 34.2436, 9.76619, 0.55 ) }
    dend_49 { pt3dadd( -11.2312, 35.8479, 10.0334, 0.28 ) }
    dend_49 { pt3dadd( -11.4506, 36.3402, 10.0906, 0.55 ) }
    dend_49 { pt3dadd( -11.9946, 37.6663, 10.1559, 0.28 ) }
    dend_49 { pt3dadd( -12.0558, 37.8355, 10.1636, 0.55 ) }
    dend_49 { pt3dadd( -12.4145, 39.1909, 10.1916, 0.28 ) }
    dend_49 { pt3dadd( -12.5698, 39.719, 10.2033, 0.55 ) }
    dend_49 { pt3dadd( -12.921, 40.858, 10.2407, 0.28 ) }
    dend_49 { pt3dadd( -13.2632, 41.9536, 10.2572, 0.83 ) }
    dend_49 { pt3dadd( -13.7549, 43.6277, 10.3765, 0.28 ) }
    dend_49 { pt3dadd( -13.9586, 44.3575, 10.4503, 0.55 ) }
    dend_49 { pt3dadd( -15.0157, 48.6546, 10.9632, 0.28 ) }
    dend_49 { pt3dadd( -15.1813, 49.4164, 11.0699, 0.83 ) }
    dend_49 { pt3dadd( -15.6633, 52.0799, 11.5295, 0.28 ) }
    dend_49 { pt3dadd( -16.0369, 54.6247, 12.0053, 0.28 ) }
    dend_49 { pt3dadd( -16.1439, 56.1227, 12.2824, 0.83 ) }
    dend_49 { pt3dadd( -16.1122, 57.867, 12.626, 0.28 ) }
    dend_49 { pt3dadd( -16.0033, 58.5802, 12.7837, 0.55 ) }
    dend_49 { pt3dadd( -15.6361, 60.271, 13.1419, 0.28 ) }
    dend_49 { pt3dadd( -15.4055, 61.1186, 13.3126, 0.55 ) }
    dend_49 { pt3dadd( -14.692, 63.5299, 13.683, 0.28 ) }
    dend_49 { pt3dadd( -14.3599, 64.508, 13.8695, 0.55 ) }
    dend_49 { pt3dadd( -13.8796, 65.8335, 14.1408, 0.28 ) }
    dend_49 { pt3dadd( -13.5462, 66.6961, 14.3032, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 57/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 66.057, 107.668, 5.41226, 0.28 ) }
    dend_45 { pt3dadd( 68.118, 107.537, 5.50712, 0.28 ) }
    dend_45 { pt3dadd( 69.3375, 107.413, 5.58658, 0.55 ) }
    dend_45 { pt3dadd( 71.1908, 107.174, 5.55407, 0.55 ) }
    dend_45 { pt3dadd( 73.5901, 106.879, 5.44632, 0.28 ) }
    dend_45 { pt3dadd( 74.577, 106.733, 5.38989, 0.55 ) }
    dend_45 { pt3dadd( 76.7441, 106.402, 5.26762, 0.28 ) }
    dend_45 { pt3dadd( 77.7219, 106.258, 5.18399, 0.55 ) }
    dend_45 { pt3dadd( 80.8564, 105.913, 4.9447, 0.28 ) }
    dend_45 { pt3dadd( 81.9603, 105.795, 4.85472, 0.55 ) }
    dend_45 { pt3dadd( 84.8089, 105.515, 4.65263, 0.28 ) }
    dend_45 { pt3dadd( 85.5, 105.461, 4.58743, 0.55 ) }
    dend_45 { pt3dadd( 88.7307, 105.321, 4.30298, 0.28 ) }
    dend_45 { pt3dadd( 90.3844, 105.311, 4.19901, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 71/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 66.057, 107.668, 5.41226, 0.28 ) }
    dend_44 { pt3dadd( 69.5655, 104.59, 6.35096, 0.28 ) }
    dend_44 { pt3dadd( 70.5069, 103.764, 6.60282, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 74/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -40.642, -92.2176, -14.2991, 0.28 ) }
    dend_36 { pt3dadd( -41.9416, -95.6767, -14.5361, 0.28 ) }
    dend_36 { pt3dadd( -42.3513, -96.8387, -14.6207, 0.55 ) }
    dend_36 { pt3dadd( -44.0026, -101.971, -15.08, 0.28 ) }
    dend_36 { pt3dadd( -44.3384, -103.021, -15.1983, 0.83 ) }
    dend_36 { pt3dadd( -44.9049, -104.81, -15.4234, 0.83 ) }
    dend_36 { pt3dadd( -45.3816, -106.288, -15.6186, 0.28 ) }
    dend_36 { pt3dadd( -45.8303, -107.751, -15.8286, 0.55 ) }
    dend_36 { pt3dadd( -47.358, -112.617, -16.4933, 0.28 ) }
    dend_36 { pt3dadd( -47.7956, -113.873, -16.6831, 0.83 ) }
    dend_36 { pt3dadd( -49.4266, -118.069, -17.3669, 0.28 ) }
    dend_36 { pt3dadd( -50.2958, -119.977, -17.6622, 0.83 ) }
    dend_36 { pt3dadd( -51.4433, -122.242, -17.9957, 0.28 ) }
    dend_36 { pt3dadd( -52.4222, -124.056, -18.254, 0.83 ) }
    dend_36 { pt3dadd( -54.6047, -127.754, -18.7441, 0.28 ) }
    dend_36 { pt3dadd( -55.7938, -129.678, -18.9764, 0.83 ) }
    dend_36 { pt3dadd( -57.4434, -132.05, -19.2808, 0.28 ) }
    dend_36 { pt3dadd( -58.8828, -133.987, -19.5464, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -40.642, -92.2176, -14.2991, 0.28 ) }
    dend_35 { pt3dadd( -41.0166, -93.8439, -14.8262, 0.28 ) }
    dend_35 { pt3dadd( -41.9526, -97.8522, -16.1101, 0.28 ) }
    dend_35 { pt3dadd( -43.1043, -102.579, -17.601, 0.28 ) }
    dend_35 { pt3dadd( -44.4749, -108.286, -19.4017, 0.28 ) }
    dend_35 { pt3dadd( -45.4651, -112.76, -20.8359, 0.28 ) }
    dend_35 { pt3dadd( -46.3507, -117.008, -22.2082, 0.28 ) }
    dend_35 { pt3dadd( -47.1753, -121.04, -23.4953, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( -47.669, -123.386, -24.239, 0.28 ) }
    dend_35 { pt3dadd( -48.4383, -127.025, -25.3904, 0.28 ) }
    dend_35 { pt3dadd( -50.3401, -137.469, -28.7976, 0.28 ) }
    dend_35 { pt3dadd( -50.728, -139.966, -29.6372, 0.28 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 4/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 20.1164, -91.2805, -29.4094, 0.28 ) }
    dend_15 { pt3dadd( 22.0231, -96.2821, -28.4812, 0.28 ) }
    dend_15 { pt3dadd( 22.3542, -97.1508, -28.32, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 7/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 20.1164, -91.2805, -29.4094, 0.28 ) }
    dend_14 { pt3dadd( 19.1214, -92.9893, -31.9096, 0.28 ) }
    dend_14 { pt3dadd( 18.6999, -93.7133, -32.9689, 0.55 ) }
    dend_14 { pt3dadd( 17.9571, -94.9889, -34.8353, 0.28 ) }
    dend_14 { pt3dadd( 17.1375, -96.3964, -36.8947, 0.83 ) }
    dend_14 { pt3dadd( 15.0744, -99.9397, -42.079, 0.28 ) }
    dend_14 { pt3dadd( 14.5372, -100.862, -43.4287, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 14/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 21.3506, -66.0051, -4.14815, 0.83 ) }
    dend_6 { pt3dadd( 21.7619, -66.8666, -4.3629, 0.83 ) }
    dend_6 { pt3dadd( 23.045, -70.1503, -5.08224, 0.28 ) }
    dend_6 { pt3dadd( 23.2831, -70.865, -5.28318, 0.83 ) }
    dend_6 { pt3dadd( 23.9786, -73.1774, -5.99115, 0.28 ) }
    dend_6 { pt3dadd( 24.1401, -74.0389, -6.15822, 0.55 ) }
    dend_6 { pt3dadd( 24.2802, -75.313, -6.31762, 0.28 ) }
    dend_6 { pt3dadd( 24.2712, -76.2739, -6.35736, 0.55 ) }
    dend_6 { pt3dadd( 23.8953, -78.5589, -6.19279, 0.28 ) }
    dend_6 { pt3dadd( 23.5857, -80.1075, -6.05468, 0.83 ) }
    dend_6 { pt3dadd( 22.6744, -84.1546, -5.76227, 0.28 ) }
    dend_6 { pt3dadd( 22.4628, -85.1206, -5.70856, 0.83 ) }
    dend_6 { pt3dadd( 22.3127, -85.8858, -5.67868, 0.83 ) }
    dend_6 { pt3dadd( 21.2768, -91.4128, -5.4905, 0.28 ) }
    dend_6 { pt3dadd( 21.1679, -92.0202, -5.46796, 0.55 ) }
    dend_6 { pt3dadd( 20.44, -96.1577, -5.51525, 0.28 ) }
    dend_6 { pt3dadd( 20.3516, -96.8879, -5.62486, 0.55 ) }
    dend_6 { pt3dadd( 20.0804, -99.8349, -6.23425, 0.28 ) }
    dend_6 { pt3dadd( 20.0553, -100.313, -6.35309, 0.83 ) }
    dend_6 { pt3dadd( 20.0422, -101.494, -6.70462, 0.83 ) }
    dend_6 { pt3dadd( 19.9944, -103.521, -7.29938, 0.83 ) }
    dend_6 { pt3dadd( 19.7204, -110.51, -9.39145, 0.28 ) }
    dend_6 { pt3dadd( 19.6415, -111.169, -9.59425, 0.55 ) }
    dend_6 { pt3dadd( 18.9299, -115.065, -10.8148, 0.28 ) }
    dend_6 { pt3dadd( 18.7528, -115.78, -11.0385, 0.55 ) }
    dend_6 { pt3dadd( 16.7997, -121.366, -12.8181, 0.28 ) }
    dend_6 { pt3dadd( 16.0739, -122.933, -13.2967, 0.83 ) }
    dend_6 { pt3dadd( 13.5, -126.922, -14.4145, 0.28 ) }
    dend_6 { pt3dadd( 12.9234, -127.675, -14.6464, 0.55 ) }
    dend_6 { pt3dadd( 11.9838, -128.692, -14.9964, 0.55 ) }
    dend_6 { pt3dadd( 10.0484, -130.611, -15.6769, 0.28 ) }
    dend_6 { pt3dadd( 9.41493, -131.185, -15.8946, 0.55 ) }
    dend_6 { pt3dadd( 8.58065, -132.062, -16.187, 0.28 ) }
    dend_6 { pt3dadd( 8.18365, -132.608, -16.3366, 0.55 ) }
    dend_6 { pt3dadd( 7.15203, -134.231, -16.7418, 0.28 ) }
    dend_6 { pt3dadd( 6.76276, -134.895, -16.8864, 0.55 ) }
    dend_6 { pt3dadd( 5.33572, -137.466, -17.4029, 0.28 ) }
    dend_6 { pt3dadd( 4.82505, -138.409, -17.5723, 0.55 ) }
    dend_6 { pt3dadd( 4.47988, -139.05, -17.6644, 0.28 ) }
    dend_6 { pt3dadd( 4.03531, -140.056, -17.7117, 0.55 ) }
    dend_6 { pt3dadd( 2.83001, -143.227, -17.602, 0.28 ) }
    dend_6 { pt3dadd( 2.56794, -143.96, -17.5497, 0.83 ) }
    dend_6 { pt3dadd( 2.05384, -145.57, -17.3423, 0.28 ) }
    dend_6 { pt3dadd( 1.8908, -146.171, -17.2486, 0.55 ) }
    dend_6 { pt3dadd( 0.973311, -150.597, -16.3684, 0.28 ) }
    dend_6 { pt3dadd( 0.93299, -151.068, -16.2459, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 60/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 21.3506, -66.0051, -4.14815, 0.28 ) }
    dend_5 { pt3dadd( 22.3079, -64.9617, -4.52419, 0.28 ) }
    dend_5 { pt3dadd( 22.8369, -64.2081, -4.8394, 0.55 ) }
    dend_5 { pt3dadd( 24.2103, -62.0147, -5.71505, 0.28 ) }
    dend_5 { pt3dadd( 24.6037, -61.0096, -6.01604, 0.55 ) }
    dend_5 { pt3dadd( 25.2067, -59.1125, -6.49087, 0.28 ) }
    dend_5 { pt3dadd( 25.6931, -57.4503, -6.70705, 0.83 ) }
    dend_5 { pt3dadd( 26.9887, -52.4655, -7.0393, 0.28 ) }
    dend_5 { pt3dadd( 27.2287, -51.3909, -7.06097, 0.83 ) }
    dend_5 { pt3dadd( 29.0212, -42.0368, -6.88163, 0.28 ) }
    dend_5 { pt3dadd( 29.4469, -39.3276, -6.80795, 0.83 ) }
    dend_5 { pt3dadd( 30.3782, -31.3945, -6.42109, 0.28 ) }
    dend_5 { pt3dadd( 30.4872, -30.2866, -6.34495, 0.55 ) }
    dend_5 { pt3dadd( 30.7438, -27.2574, -5.99664, 0.28 ) }
    dend_5 { pt3dadd( 30.8563, -25.8085, -5.8125, 0.83 ) }
    dend_5 { pt3dadd( 31.1071, -21.5943, -5.06033, 0.28 ) }
    dend_5 { pt3dadd( 31.1035, -19.755, -4.86162, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 77/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -113.702, -32.6271, 0.330066, 0.28 ) }
    dend_59 { pt3dadd( -119.86, -30.9239, 1.09617, 0.28 ) }
    dend_59 { pt3dadd( -121.215, -30.5162, 1.26459, 0.55 ) }
    dend_59 { pt3dadd( -129.594, -27.9581, 2.63569, 0.28 ) }
    dend_59 { pt3dadd( -130.017, -27.8296, 2.71994, 0.55 ) }
    dend_59 { pt3dadd( -133.717, -26.7955, 3.57081, 0.28 ) }
    dend_59 { pt3dadd( -135.131, -26.4183, 3.94653, 0.83 ) }
    dend_59 { pt3dadd( -136.874, -25.9653, 4.57558, 0.83 ) }
    dend_59 { pt3dadd( -141.689, -24.6452, 6.72924, 0.28 ) }
    dend_59 { pt3dadd( -143.342, -24.0793, 7.82198, 0.55 ) }
    dend_59 { pt3dadd( -146.441, -22.7759, 10.3377, 0.28 ) }
    dend_59 { pt3dadd( -147.867, -21.5197, 11.9304, 0.83 ) }
    dend_59 { pt3dadd( -149.293, -19.8013, 13.7807, 0.28 ) }
    dend_59 { pt3dadd( -149.513, -19.4571, 14.1029, 0.55 ) }
    dend_59 { pt3dadd( -151.868, -14.8187, 17.9117, 0.28 ) }
    dend_59 { pt3dadd( -152.757, -12.8612, 19.3398, 0.55 ) }
    dend_59 { pt3dadd( -157.641, -0.926277, 27.5276, 0.28 ) }
    dend_59 { pt3dadd( -158.151, 0.351578, 28.3524, 0.83 ) }
    dend_59 { pt3dadd( -159.986, 4.89485, 31.1052, 0.28 ) }
    dend_59 { pt3dadd( -160.471, 6.12755, 31.8138, 0.83 ) }
    dend_59 { pt3dadd( -161.318, 8.40351, 32.9403, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 98/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -113.702, -32.6271, 0.330066, 0.28 ) }
    dend_56 { pt3dadd( -115.165, -38.681, -2.48856, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_56 { pt3dadd( -115.48, -39.9816, -3.09411, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 1/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -115.48, -39.9816, -3.09411, 0.28 ) }
    dend_58 { pt3dadd( -114.951, -43.1748, -4.59056, 0.28 ) }
    dend_58 { pt3dadd( -114.863, -43.7049, -4.83902, 0.55 ) }
    dend_58 { pt3dadd( -114.77, -44.2632, -5.10067, 0.28 ) }
    dend_58 { pt3dadd( -114.703, -44.6664, -5.28963, 0.55 ) }
    dend_58 { pt3dadd( -114.272, -47.266, -6.50793, 0.28 ) }
    dend_58 { pt3dadd( -114.099, -48.3121, -6.99818, 0.83 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 8/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -115.48, -39.9816, -3.09411, 0.28 ) }
    dend_57 { pt3dadd( -117.118, -43.4567, -2.35352, 0.28 ) }
    dend_57 { pt3dadd( -118.038, -44.7283, -2.2365, 0.55 ) }
    dend_57 { pt3dadd( -119.815, -46.7882, -2.14263, 0.28 ) }
    dend_57 { pt3dadd( -120.77, -47.7467, -2.17394, 0.55 ) }
    dend_57 { pt3dadd( -122.903, -49.7982, -2.31537, 0.28 ) }
    dend_57 { pt3dadd( -124.094, -50.9408, -2.38125, 0.55 ) }
    dend_57 { pt3dadd( -127.96, -54.3686, -2.358, 0.28 ) }
    dend_57 { pt3dadd( -128.462, -54.8601, -2.31517, 0.55 ) }
    dend_57 { pt3dadd( -130.335, -56.8125, -2.01704, 0.28 ) }
    dend_57 { pt3dadd( -132.047, -58.7864, -1.52438, 0.83 ) }
    dend_57 { pt3dadd( -133.747, -60.9674, -0.745717, 0.28 ) }
    dend_57 { pt3dadd( -134.217, -61.7243, -0.410196, 0.55 ) }
    dend_57 { pt3dadd( -136.697, -66.6227, 2.20107, 0.28 ) }
    dend_57 { pt3dadd( -137.171, -67.7545, 2.86293, 0.83 ) }
    dend_57 { pt3dadd( -138.049, -70.3392, 4.47727, 0.28 ) }
    dend_57 { pt3dadd( -138.384, -71.6822, 5.30246, 0.55 ) }
    dend_57 { pt3dadd( -139.119, -75.7759, 7.74987, 0.28 ) }
    dend_57 { pt3dadd( -139.22, -76.8158, 8.28925, 0.83 ) }
    dend_57 { pt3dadd( -139.289, -81.5668, 10.5579, 0.28 ) }
    dend_57 { pt3dadd( -139.286, -82.6108, 10.99, 0.83 ) }
    dend_57 { pt3dadd( -139.201, -86.1044, 12.2382, 0.28 ) }
    dend_57 { pt3dadd( -139.148, -87.2423, 12.6109, 0.83 ) }
    dend_57 { pt3dadd( -138.752, -93.2262, 14.385, 0.28 ) }
    dend_57 { pt3dadd( -138.671, -94.7737, 14.7623, 0.55 ) }
    dend_57 { pt3dadd( -138.601, -99.2786, 15.4952, 0.28 ) }
    dend_57 { pt3dadd( -138.649, -100.614, 15.6965, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_29, dend_22, dend_19, dend_0, dend_46, dend_39, dend_31, dend_30, dend_26, dend_23, dend_21, dend_20, dend_10, dend_1, dend_52, dend_47, dend_41, dend_40, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_16, dend_11, dend_7, dend_2, dend_60, dend_53, dend_51, dend_48, dend_43, dend_42, dend_37, dend_34, dend_18, dend_17, dend_13, dend_12, dend_9, dend_8, dend_4, dend_3, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_36, dend_35, dend_15, dend_14, dend_6, dend_5, dend_59, dend_56, dend_58, dend_57]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_19 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_39 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_26 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_20 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_27 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_25 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_11 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_53 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_43 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_36 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_35 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_6 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_5 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_59 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_57 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_46 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_29 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_10 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_48 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_51 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_31 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_30 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_50 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_52 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_33 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_37 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_18 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_4 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_49 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_3 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_41 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_60 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_15 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_44 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_56 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_58 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_45 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_35 all.append()
    dend_35 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_19 nseg = 3
    dend_39 nseg = 3
    dend_26 nseg = 7
    dend_23 nseg = 7
    dend_21 nseg = 3
    dend_20 nseg = 3
    dend_40 nseg = 7
    dend_32 nseg = 9
    dend_27 nseg = 7
    dend_25 nseg = 3
    dend_11 nseg = 3
    dend_53 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 7
    dend_34 nseg = 3
    dend_9 nseg = 3
    dend_55 nseg = 3
    dend_54 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 3
    dend_59 nseg = 3
    dend_57 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L23_DBC_56fd12fad5_0_0


