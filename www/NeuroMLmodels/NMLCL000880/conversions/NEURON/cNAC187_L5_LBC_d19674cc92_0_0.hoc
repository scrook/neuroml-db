// Cell: cNAC187_L5_LBC_d19674cc92_0_0
/*
{
  "id" : "cNAC187_L5_LBC_d19674cc92_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-9.18524, -4.81916, 0.0, 3.9822", "-8.34327, -4.32353, 0.0, 6.87607", "-7.5013, -3.82789, 0.0, 10.1189", "-6.65933, -3.33226, 0.0, 12.2867", "-5.81736, -2.83662, 0.0, 13.8376", "-4.97539, -2.34099, 0.0, 14.8265", "-4.13342, -1.84535, 0.0, 15.382", "-3.29145, -1.34972, 0.0, 16.0094", "-2.44948, -0.854082, 0.0, 16.562", "-1.60751, -0.358447, 0.0, 16.8144", "-0.765536, 0.137188, 0.0, 17.0145", "0.0764342, 0.632823, 0.0, 17.0541", "0.918405, 1.12846, 0.0, 16.8224", "1.76037, 1.62409, 0.0, 16.2232", "2.60235, 2.11973, 0.0, 15.3709", "3.44432, 2.61536, 0.0, 14.0738", "4.28629, 3.111, 0.0, 12.5479", "5.12826, 3.60663, 0.0, 11.1251", "5.97023, 4.10227, 0.0, 9.76121", "6.8122, 4.5979, 0.0, 7.58188", "7.65417, 5.09354, 0.0, 4.50057" ]
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-4.45607, 3.18838, -15.4, 1.55", "-4.45607, 3.18838, -15.4, 1.55", "-5.50256, 3.5015, -15.4, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.93607, -6.74862, -8.99, 1.77", "-4.93607, -6.74862, -8.99, 1.62", "-5.56759, -7.33143, -9.17043, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.77393, 3.07438, 4.25, 0.96", "8.77393, 3.07438, 4.25, 0.96", "10.0742, 3.1875, 4.06263, 0.81", "11.3447, 3.22619, 3.86892, 0.74", "12.7212, 3.26811, 3.65903, 0.66", "14.1079, 3.31034, 3.44758, 0.66", "15.3832, 3.34918, 3.25312, 1.25", "16.6933, 3.35399, 3.03448, 1.92", "17.5676, 3.29848, 2.85698, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.38393, 6.58938, 4.97, 0.74", "5.06092, 6.90221, 5.34281, 0.74", "4.55769, 7.32152, 5.79576, 0.74", "3.72211, 7.94085, 6.48427, 0.74", "2.80618, 8.5845, 7.24334, 0.59", "1.8075, 9.28922, 8.09573, 0.74", "0.927377, 9.94106, 8.86225, 0.96", "-0.100894, 10.7364, 9.74028, 0.52", "-0.847086, 11.3588, 10.4022, 0.22", "-1.42976, 11.9258, 11.0082, 0.22", "-1.82697, 12.4262, 11.5341, 0.66", "-2.09928, 12.8833, 12.0273, 0.66", "-2.52731, 13.7908, 13.0303, 0.29", "-2.73891, 14.4296, 13.7035, 0.29", "-2.95188, 15.2984, 14.5631, 1.03", "-3.09138, 15.9552, 15.1951, 2.51", "-3.29288, 16.8773, 16.1233, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-7.87607, 3.51138, 6.38, 0.52", "-8.26195, 3.47763, 6.24326, 0.52", "-8.98572, 3.42775, 5.96105, 0.52", "-9.43523, 3.401, 5.78959, 0.74", "-10.3466, 3.39298, 5.46014, 1.25", "-11.0964, 3.44006, 5.20837, 1.33", "-12.1933, 3.58727, 4.86827, 0.74", "-13.2201, 3.81644, 4.57378, 0.59", "-14.0472, 4.08317, 4.35247, 0.29", "-14.8566, 4.44079, 4.15212, 0.44", "-15.7599, 4.96581, 3.97157, 0.59", "-16.5081, 5.4742, 3.84908, 0.44", "-16.9304, 5.78265, 3.79639, 0.81", "-17.4903, 6.18728, 3.74734, 1.62", "-18.233, 6.65779, 3.6735, 1.77", "-19.472, 7.21103, 3.53451, 0.37", "-19.9992, 7.34783, 3.47924, 0.37", "-20.522, 7.4164, 3.42536, 0.52", "-21.1553, 7.44687, 3.36827, 0.59", "-22.0267, 7.45728, 3.30779, 0.22", "-22.5851, 7.4818, 3.24508, 0.29", "-23.1675, 7.53243, 3.1692, 0.74", "-23.9718, 7.64282, 3.06937, 1.77", "-24.7762, 7.80031, 2.97705, 2.8", "-25.9789, 8.09578, 2.85769, 3.17", "-27.6914, 8.57832, 2.72328, 0.44", "-28.8657, 8.94634, 2.6584, 0.29", "-30.4941, 9.49063, 2.60253, 0.37", "-31.4959, 9.85812, 2.6226, 0.37", "-32.363, 10.199, 2.69009, 0.52", "-32.8838, 10.4179, 2.76567, 1.03", "-33.8516, 10.8399, 2.97973, 1.84", "-34.6143, 11.1786, 3.16342, 1.4", "-35.6673, 11.6175, 3.42194, 0.22", "-36.5442, 11.9027, 3.62186, 0.59", "-36.8274, 11.9765, 3.68164, 0.59", "-38.1032, 12.2581, 3.92726, 0.44", "-38.7226, 12.3635, 4.05084, 1.47", "-39.4208, 12.4592, 4.19602, 2.51", "-40.4509, 12.5686, 4.39587, 2.36", "-42.277, 12.748, 4.76609, 0.15", "-42.5786, 12.7685, 4.83153, 0.22", "-43.5171, 12.7965, 5.04636, 0.22", "-44.1258, 12.782, 5.16964, 0.22", "-45.2675, 12.7025, 5.37953, 0.22", "-45.6075, 12.6675, 5.43138, 0.96", "-46.3809, 12.564, 5.52481, 2.06", "-47.3446, 12.4547, 5.61992, 2.58", "-49.3785, 12.3134, 5.75992, 0.22", "-49.9683, 12.2934, 5.80522, 0.81", "-50.6557, 12.2971, 5.8613, 1.77", "-51.1612, 12.3214, 5.90184, 1.99", "-52.5367, 12.4526, 6.00583, 0.44", "-54.2021, 12.6435, 6.11931, 0.29", "-54.7475, 12.7133, 6.15728, 0.29", "-55.2439, 12.7722, 6.18786, 0.81", "-55.9422, 12.8476, 6.23453, 1.99", "-56.7751, 12.9197, 6.2928, 2.06", "-58.4444, 13.0231, 6.40943, 0.15", "-58.9101, 13.0334, 6.44039, 0.22", "-59.3714, 13.0295, 6.46697, 0.15", "-59.6574, 13.0265, 6.48625, 0.37", "-60.0761, 13.026, 6.51695, 0.66", "-60.9073, 13.0736, 6.58809, 0.37", "-61.6833, 13.154, 6.62764, 0.22", "-62.2945, 13.2188, 6.6413, 0.88", "-63.1562, 13.3049, 6.64792, 1.99", "-64.0455, 13.3893, 6.64368, 1.4", "-65.436, 13.5101, 6.61858, 0.22", "-66.4843, 13.6101, 6.59085, 0.22", "-66.8353, 13.6545, 6.57922, 0.37", "-67.3004, 13.7253, 6.56358, 0.81", "-67.6113, 13.781, 6.56068, 1.11", "-68.7425, 14.0372, 6.61404, 0.59", "-69.4538, 14.2268, 6.70117, 0.15", "-70.0001, 14.3997, 6.82576, 0.66", "-70.5112, 14.5708, 6.95832, 0.66", "-71.6066, 14.9729, 7.25779, 0.15", "-72.2839, 15.2331, 7.44512, 0.88", "-73.1835, 15.5858, 7.69462, 1.7", "-74.9201, 16.2278, 8.13741, 0.22", "-75.5577, 16.4528, 8.29238, 0.29", "-76.454, 16.7636, 8.48919, 0.29", "-77.066, 16.9648, 8.60023, 0.66", "-77.5499, 17.111, 8.67437, 0.81", "-78.5129, 17.3485, 8.82763, 0.29", "-79.5863, 17.5231, 9.04825, 0.22", "-80.0243, 17.5615, 9.16262, 1.03", "-80.8244, 17.5765, 9.40374, 1.92", "-81.4366, 17.5635, 9.61652, 1.92", "-82.7474, 17.4902, 10.1153, 0.37", "-83.9428, 17.3706, 10.5944, 0.29", "-84.4902, 17.2889, 10.805, 0.22", "-85.0635, 17.1838, 11.0223, 0.59", "-85.8024, 17.0299, 11.2856, 0.22", "-86.0539, 16.9722, 11.3629, 0.44", "-86.7507, 16.7974, 11.5382, 0.96", "-87.7432, 16.5545, 11.7401, 0.22", "-88.7163, 16.3485, 11.9308, 0.22", "-88.8505, 16.3197, 11.9547, 0.52", "-89.2531, 16.2367, 12.0164, 1.03", "-89.8782, 16.1274, 12.1119, 1.62", "-90.6372, 16.0343, 12.226, 1.47", "-91.886, 15.9671, 12.3975, 0.22", "-92.4624, 15.9757, 12.4532, 0.22", "-92.9406, 16.0166, 12.4945, 0.15", "-93.2707, 16.078, 12.5185, 0.15", "-93.5444, 16.156, 12.5666, 0.29", "-93.9466, 16.3026, 12.6663, 0.29", "-94.4423, 16.5064, 12.8207, 0.22", "-95.0379, 16.7565, 13.0268, 1.25", "-95.7139, 17.0243, 13.2613, 1.99", "-97.4171, 17.6343, 13.8323, 0.29", "-98.4646, 17.9858, 14.1723, 0.22", "-98.9957, 18.1598, 14.3372, 0.66", "-99.5991, 18.3602, 14.5152, 1.62", "-100.638, 18.7561, 14.7745, 0.52", "-101.733, 19.2407, 15.0113, 0.22", "-102.081, 19.42, 15.0669, 0.59", "-102.656, 19.7476, 15.1725, 1.25", "-102.946, 19.9267, 15.2338, 1.25", "-104.082, 20.6631, 15.5643, 0.15", "-105.041, 21.3039, 15.9528, 0.15", "-105.298, 21.4764, 16.085, 0.66", "-105.813, 21.8055, 16.3947, 1.55", "-106.284, 22.092, 16.7059, 0.96", "-107.357, 22.716, 17.4744, 0.15", "-108.116, 23.1583, 18.0735, 0.15", "-108.559, 23.4506, 18.4497, 0.44", "-109.147, 23.8772, 18.9652, 0.88", "-109.486, 24.15, 19.2561, 0.44", "-110.046, 24.6634, 19.6813, 0.15", "-110.81, 25.4602, 20.1606, 0.74", "-111.5, 26.2366, 20.407, 0.22", "-111.75, 26.5288, 20.4487, 1.03", "-112.187, 27.051, 20.4581, 1.99", "-113.291, 28.4026, 20.3674, 0.15", "-113.875, 29.1175, 20.2565, 1.25", "-115.038, 30.5188, 19.9267, 0.07", "-115.62, 31.203, 19.7258, 0.07", "-116.192, 31.8774, 19.5217, 0.88", "-116.635, 32.4057, 19.3571, 1.62", "-116.925, 32.7661, 19.2338, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.12393, -6.05512, 1.7, 0.88", "5.16243, -6.73775, 1.84782, 0.74", "5.1677, -7.37085, 1.99957, 0.88", "5.15737, -8.07978, 2.17274, 1.25", "5.14218, -9.18056, 2.43394, 0.88", "5.12868, -10.5014, 2.72913, 0.74", "5.12063, -11.7524, 2.99371, 0.66", "5.11647, -12.8895, 3.20846, 0.96", "5.12814, -13.9946, 3.39469, 1.18", "5.1817, -15.029, 3.55397, 1.25", "5.38289, -16.3837, 3.7313, 0.81", "5.64983, -17.3912, 3.83053, 0.74", "6.08388, -18.6683, 3.93207, 0.52", "6.35155, -19.3457, 3.98296, 1.4", "6.76816, -20.3246, 4.07693, 2.43", "7.36505, -21.7018, 4.24131, 3.1", "8.14986, -23.4909, 4.50926, 0.22", "8.41392, -24.171, 4.6255, 0.22", "8.56073, -24.646, 4.7251, 0.74", "8.71691, -25.3175, 4.87066, 1.25", "8.80404, -25.8288, 4.98663, 1.7", "8.9312, -26.8292, 5.23875, 1.03", "9.16705, -28.1392, 5.60554, 0.52", "9.43531, -29.1044, 5.86508, 0.22", "9.58432, -29.5143, 5.96538, 0.22", "9.78146, -29.9342, 6.06769, 0.22", "9.89839, -30.1427, 6.11882, 0.22", "10.1867, -30.6468, 6.22277, 0.22", "10.5298, -31.293, 6.32734, 0.81", "10.7949, -31.9138, 6.39664, 1.7", "11.2411, -33.0561, 6.48374, 2.88", "11.6527, -34.1934, 6.54118, 2.06", "12.1675, -35.7275, 6.61368, 1.47", "12.5395, -36.923, 6.67619, 1.33", "12.9683, -38.3796, 6.75048, 0.22", "13.2072, -39.2556, 6.80183, 0.15", "13.4028, -40.0244, 6.8492, 0.29", "13.6571, -41.0045, 6.92513, 0.29", "13.8858, -41.8097, 6.9998, 1.03", "14.0548, -42.4102, 7.06098, 1.99", "14.3194, -43.4332, 7.16699, 2.21", "14.5722, -44.6222, 7.30983, 0.37", "14.7619, -45.5863, 7.42097, 0.15", "14.8307, -45.9784, 7.46005, 0.15", "14.963, -46.8054, 7.54135, 0.22", "15.1005, -47.6795, 7.63559, 0.37", "15.2222, -48.4675, 7.74172, 0.96", "15.3103, -49.1534, 7.84344, 1.7", "15.3894, -49.8464, 7.95166, 1.99", "15.4989, -50.7257, 8.08805, 1.7", "15.7997, -52.6736, 8.3637, 0.37", "15.9732, -53.727, 8.49975, 0.22", "16.0952, -54.3817, 8.56748, 0.22", "16.2289, -55.0039, 8.65121, 0.22", "16.414, -55.7567, 8.78997, 0.37", "16.5523, -56.2907, 8.91278, 1.03", "16.7075, -56.8548, 9.0666, 1.77", "16.977, -57.8053, 9.31896, 0.88", "17.3148, -58.9685, 9.66486, 0.29", "17.556, -59.7902, 9.93632, 0.52", "17.7291, -60.3678, 10.1473, 1.03", "18.0139, -61.3143, 10.5289, 1.55", "18.3578, -62.5043, 11.0272, 0.88", "18.6211, -63.4856, 11.4617, 0.22", "18.7404, -63.9637, 11.6617, 0.22", "18.8071, -64.2552, 11.7792, 0.22", "18.9248, -64.8429, 12.0284, 0.29", "19.0584, -65.6381, 12.3616, 0.52", "19.1103, -66.0465, 12.5201, 1.18", "19.1867, -66.8396, 12.7758, 1.33", "19.2765, -67.844, 13.0557, 0.59", "19.3788, -68.753, 13.2736, 0.22", "19.4624, -69.4322, 13.4211, 0.22", "19.532, -69.9139, 13.5204, 0.59", "19.6803, -70.8206, 13.6973, 0.29", "19.846, -71.6568, 13.8687, 1.18", "20.065, -72.5825, 14.0488, 2.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.70607, -8.66762, 3.08, 0.66", "-1.70607, -8.66762, 3.08, 0.66", "-1.44919, -9.68002, 3.08719, 0.66", "-1.16064, -11.1481, 3.0195, 0.88", "-0.954156, -12.6533, 2.9154, 1.03", "-0.762572, -14.7223, 2.75244, 0.81", "-0.674268, -16.6499, 2.59856, 0.96", "-0.743298, -18.1439, 2.47686, 1.33", "-1.08379, -19.9718, 2.36695, 1.77", "-1.64151, -21.5692, 2.33926, 2.21", "-2.12671, -22.5315, 2.37978, 2.58", "-3.4471, -24.5387, 2.64397, 2.73", "-4.97707, -26.4307, 3.11536, 0.81", "-6.77628, -28.4385, 3.75702, 0.52", "-8.10882, -29.7799, 4.32106, 0.59", "-8.98711, -30.5701, 4.72127, 1.25", "-10.2335, -31.5667, 5.33588, 2.73", "-11.5978, -32.4668, 6.09548, 3.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999039757195
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.65417, 5.09354, 0.0, 0.684699", "20.5808, 12.7029, 0.0, 0.684699", "33.5074, 20.3123, 0.0, 0.684699" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-5.50256, 3.5015, -15.4, 0.74", "-6.87674, 3.70283, -15.5099, 0.74", "-7.51861, 3.8559, -15.6631, 0.81", "-8.37567, 4.10572, -16.0108, 0.74", "-9.24104, 4.35797, -16.362, 0.96", "-10.1688, 4.62843, -16.7384, 1.03", "-11.2863, 4.95415, -17.1918, 1.03", "-12.1914, 5.34292, -17.6729, 1.47", "-13.2093, 5.86902, -18.3396, 2.29" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-5.50256, 3.5015, -15.4, 0.37", "-5.19801, 4.05887, -15.3778, 0.37", "-5.08211, 4.60841, -15.3536, 0.22", "-5.06683, 5.05525, -15.3409, 0.22", "-5.0731, 5.61056, -15.3529, 0.66", "-5.0746, 5.76605, -15.3682, 0.66", "-5.0786, 6.37409, -15.4521, 0.96", "-5.10823, 6.9384, -15.5708, 0.52", "-5.13449, 7.47863, -15.7231, 0.81", "-5.11977, 7.91988, -15.8885, 0.88", "-4.99379, 8.52318, -16.1797, 0.81", "-4.82946, 8.9129, -16.4143, 0.22", "-4.63634, 9.22602, -16.6354, 0.29", "-4.40101, 9.57089, -16.908, 0.37", "-4.2129, 9.91111, -17.1794, 0.15", "-4.16191, 10.1702, -17.3593, 0.22", "-4.18277, 10.49, -17.5574, 0.22", "-4.242, 10.9566, -17.8198, 0.52", "-4.28709, 11.425, -18.0509, 0.37", "-4.31414, 11.9016, -18.2726, 0.44", "-4.32495, 12.6671, -18.6052, 0.37", "-4.30933, 12.9846, -18.7434, 0.37", "-4.24325, 13.6596, -19.041, 0.52", "-4.1618, 14.3097, -19.3184, 0.59", "-4.05818, 15.1591, -19.6524, 0.44", "-4.01955, 15.7635, -19.8653, 0.29", "-4.03613, 16.318, -20.0236, 0.22", "-4.12642, 16.7488, -20.1228, 0.88", "-4.31084, 17.249, -20.2217, 0.29", "-4.55553, 17.6949, -20.2885, 0.66", "-5.03424, 18.3326, -20.3211, 0.22", "-5.27595, 18.5918, -20.3145, 0.22", "-5.63371, 18.9295, -20.2656, 0.59", "-6.14329, 24.692, -20.863, 0.59", "-6.01614, 30.2119, -22.6685, 0.59", "-5.14608, 35.882, -23.4255, 0.59", "-3.71237, 41.226, -25.1407, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-5.56759, -7.33143, -9.17043, 1.03", "-6.88517, -8.76947, -9.12031, 1.03", "-7.72077, -9.78746, -9.02553, 0.88", "-8.58128, -10.8358, -8.92793, 1.33", "-9.36679, -11.7928, -8.83884, 1.92", "-10.2961, -12.9249, -8.73343, 2.29", "-11.601, -14.5147, -8.58542, 1.7", "-12.4837, -15.7739, -8.43959, 1.47" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-5.56759, -7.33143, -9.17043, 0.37", "-4.42675, -8.856, -9.08259, 0.37", "-3.70828, -9.69227, -9.04804, 0.59", "-3.12978, -10.2729, -9.06336, 0.52", "-1.93496, -11.2606, -9.17567, 0.37", "-0.535793, -12.092, -9.39258, 0.37", "0.568104, -12.6358, -9.63181, 0.37", "1.20751, -12.8724, -9.8113, 0.88", "2.49804, -13.2825, -10.2169, 1.4", "3.90007, -13.6798, -10.6744, 1.18", "6.73525, -14.5174, -11.6292, 0.37", "9.03402, -15.3129, -12.421, 0.22", "10.0816, -15.7538, -12.7661, 0.81", "11.4251, -16.4416, -13.1692, 1.92", "14.271, -18.3088, -13.9649, 0.59", "15.7231, -19.5641, -14.3732, 0.66", "16.5873, -20.5777, -14.6201, 0.52", "17.4897, -21.9856, -14.9114, 0.59", "18.0677, -23.1638, -15.1405, 0.44", "18.7008, -24.7732, -15.4927, 0.44", "19.0624, -25.8191, -15.7317, 0.44", "19.4243, -26.7283, -15.9787, 0.66", "20.3115, -28.5509, -16.567, 1.03", "21.4627, -30.4531, -17.2818, 0.74", "22.7323, -32.0125, -17.9323, 0.59", "23.8969, -33.1208, -18.418, 0.44", "24.8052, -33.8381, -18.7422, 0.81", "25.6655, -34.4081, -19.0186, 1.47", "26.5464, -34.908, -19.275, 1.47", "29.2005, -36.2234, -20.039, 0.29", "30.7377, -36.9297, -20.4518, 0.37", "31.9961, -37.488, -20.7857, 0.29", "32.7586, -37.8337, -20.9559, 0.15", "43.3049, -46.3225, -24.4346, 0.15", "54.3319, -54.0578, -28.349, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "17.5676, 3.29848, 2.85698, 0.88", "17.9615, 1.88955, 3.99836, 0.88", "18.157, 0.661859, 4.95338, 0.44", "18.2379, -0.0357475, 5.46789, 0.44", "18.3409, -0.858105, 6.04026, 0.59", "18.462, -1.59308, 6.52669, 0.44", "18.6906, -2.5082, 7.07034, 0.29", "18.8474, -2.96574, 7.30388, 0.29", "19.2724, -3.63387, 7.58138, 0.52", "19.7047, -4.05934, 7.74041, 0.96", "20.3685, -4.51967, 7.90331, 1.92", "21.8026, -5.24481, 8.12463, 2.8", "23.5714, -5.90052, 8.30339, 1.18", "24.9231, -6.32713, 8.42381, 0.29", "25.6521, -6.51299, 8.47631, 0.29", "26.3769, -6.65594, 8.52164, 0.74", "27.5266, -6.78457, 8.56842, 1.47", "28.3958, -6.75403, 8.58259, 1.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "17.5676, 3.29848, 2.85698, 0.44", "18.5691, 3.46282, 1.97845, 0.44", "18.9069, 3.49093, 1.5564, 0.44", "19.2888, 3.43117, 1.05041, 0.44", "19.6724, 3.33756, 0.580621, 0.44", "20.2303, 3.20785, -0.106723, 0.52", "20.9328, 3.06575, -0.983346, 0.37", "22.0251, 2.89341, -2.37809, 1.4", "23.1134, 2.72785, -3.73274, 2.29", "24.5269, 2.46732, -5.27434, 0.22", "24.9093, 2.3756, -5.65751, 0.22", "25.2558, 2.26188, -5.97173, 0.22", "25.8585, 2.07104, -6.3707, 0.37", "26.3466, 1.92058, -6.61327, 0.37", "27.922, 1.45615, -7.2619, 0.22", "28.9868, 1.14915, -7.60685, 0.74", "30.3718, 0.766821, -8.00943, 2.36", "32.8651, 0.104299, -8.67327, 0.15", "33.4631, -0.0491215, -8.82579, 1.11", "33.855, -0.148597, -8.93543, 1.62", "35.8231, -0.639518, -9.56618, 0.15", "36.8831, -0.88464, -9.92725, 0.15", "37.2977, -0.9749, -10.0937, 0.59", "37.6676, -1.08505, -10.3039, 0.59", "38.801, -1.48857, -11.1266, 0.22", "39.5512, -1.78431, -11.7536, 0.37", "39.962, -1.96071, -12.1581, 0.59", "40.3463, -2.09478, -12.5205, 0.22", "41.1627, -2.2978, -13.1877, 0.15", "42.1041, -2.48123, -13.8863, 0.15", "42.6975, -2.56616, -14.2609, 0.66", "43.2954, -2.65111, -14.6113, 1.47", "44.251, -2.81029, -15.1962, 1.11", "45.853, -3.05032, -16.1941, 0.22", "53.8897, -7.42151, -23.0914, 0.22", "62.5389, -11.4243, -29.4636, 0.22", "71.3405, -15.9831, -35.1889, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-3.29288, 16.8773, 16.1233, 0.29", "-4.97471, 17.5094, 17.9133, 0.29", "-6.14522, 18.0587, 19.1831, 0.15", "-6.68619, 18.3787, 19.8256, 0.96", "-7.24066, 18.7824, 20.5526, 2.06", "-8.44941, 19.8662, 22.3144, 0.22", "-8.76257, 20.26, 22.8754, 0.37", "-8.89399, 20.5833, 23.2618, 0.37", "-9.07295, 21.3287, 24.0914, 0.29", "-9.19848, 22.1432, 24.9711, 1.99", "-9.23932, 22.7157, 25.5851, 2.06", "-9.28986, 24.2993, 27.336, 0.15", "-9.35223, 25.4128, 28.588, 0.15", "-9.40396, 26.003, 29.256, 1.18", "-9.45773, 26.4981, 29.8088, 2.14", "-9.63556, 27.9292, 31.4311, 0.15", "-9.77222, 28.7141, 32.3224, 0.44", "-9.95403, 29.4854, 33.2081, 0.15", "-10.1324, 30.1797, 34.0122, 0.29", "-10.2896, 30.7778, 34.7598, 0.44", "-10.4555, 31.4079, 35.6126, 1.03", "-10.5723, 31.8535, 36.2612, 1.7", "-10.8339, 33.0562, 38.1294, 0.15", "-10.9337, 33.6303, 39.0915, 0.22", "-10.9933, 34.3698, 40.3734, 0.15", "-11.0013, 34.9135, 41.3528, 0.52", "-10.9791, 35.5342, 42.5483, 0.88", "-10.914, 36.2895, 44.1565, 1.25", "-10.8599, 36.7581, 45.2119, 1.62", "-10.7669, 37.7291, 47.4242, 0.15", "-10.7547, 38.1689, 48.4459, 0.22", "-10.7908, 38.7859, 49.8803, 0.22", "-10.839, 39.1569, 50.721, 0.37", "-10.9135, 39.6164, 51.7044, 0.88", "-10.9765, 39.9318, 52.37, 1.4", "-11.2223, 40.883, 54.3722, 0.37", "-11.4422, 41.7873, 56.1106, 0.22", "-11.5916, 42.4649, 57.2821, 0.88", "-11.715, 43.0345, 58.217, 1.7" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-3.29288, 16.8773, 16.1233, 0.22", "-2.85717, 17.5679, 15.5824, 0.22", "-2.44185, 18.2683, 15.0841, 0.15", "-2.19334, 18.6847, 14.8299, 0.15", "-1.92113, 19.1352, 14.5837, 0.44", "-1.47018, 19.874, 14.2194, 0.15", "-1.20554, 20.2996, 14.0285, 0.66", "-0.957646, 20.7083, 13.8808, 1.7", "-0.557352, 21.3522, 13.6993, 0.22", "-0.154202, 21.9865, 13.5354, 0.22", "0.0771502, 22.349, 13.4429, 0.44", "0.300579, 22.6967, 13.3682, 0.81", "0.486431, 22.9919, 13.3045, 0.37", "0.955652, 23.7935, 13.1167, 0.22", "1.14219, 24.1576, 13.0287, 0.59", "1.26309, 24.419, 12.9711, 1.18", "1.47631, 24.9454, 12.8957, 1.11", "1.92812, 26.1622, 12.7877, 0.22", "2.09372, 26.6339, 12.7693, 0.66", "2.27155, 27.1459, 12.776, 1.7", "2.43372, 27.6232, 12.7945, 1.62", "3.05445, 29.4701, 12.9015, 0.15", "3.16309, 29.7978, 12.9291, 0.66", "3.29185, 30.1701, 12.972, 0.22", "3.43799, 30.5595, 13.016, 0.07", "3.63477, 31.0541, 13.0667, 0.07", "3.7671, 31.3788, 13.092, 0.37", "3.93819, 31.7612, 13.1067, 0.22", "4.32895, 32.5908, 13.1378, 0.15", "4.56949, 33.082, 13.153, 0.44", "4.82616, 33.5908, 13.1671, 0.81", "5.18359, 34.2593, 13.1821, 1.84", "5.91922, 35.6224, 13.2242, 0.07", "6.16845, 36.0835, 13.2476, 0.29", "6.66169, 36.9969, 13.3123, 0.07", "6.79648, 37.2491, 13.3366, 0.66", "7.02501, 37.6865, 13.3931, 1.33", "7.51731, 38.6778, 13.5643, 0.07", "7.73867, 39.167, 13.6729, 0.07", "7.83193, 39.3865, 13.7279, 0.22", "8.00357, 39.8082, 13.8482, 0.74", "8.12682, 40.1202, 13.9404, 1.55", "8.60006, 41.3506, 14.3208, 0.07", "8.71065, 41.6245, 14.4046, 0.22", "8.89907, 42.0835, 14.5361, 0.07", "9.09731, 42.5583, 14.6671, 1.03" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-116.925, 32.7661, 19.2338, 0.15", "-117.445, 34.8943, 19.0055, 0.15", "-117.72, 36.0151, 18.8853, 0.66", "-117.855, 36.5689, 18.8259, 0.66", "-118.208, 38.0083, 18.6715, 0.07", "-118.376, 38.6952, 18.5978, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-116.925, 32.7661, 19.2338, 0.07", "-117.925, 33.5073, 18.8994, 0.07", "-118.784, 34.1407, 18.6683, 0.07", "-119.284, 34.4942, 18.5866, 0.52", "-119.84, 34.8886, 18.5363, 1.11", "-121.497, 36.1259, 18.4739, 0.07", "-121.828, 36.3883, 18.4725, 0.07", "-122.391, 36.8897, 18.5513, 0.52", "-123.156, 37.6222, 18.7414, 0.15", "-123.656, 38.1316, 18.8983, 0.22", "-124.084, 38.5829, 19.0551, 0.59", "-124.452, 38.9524, 19.2011, 0.59", "-125.19, 39.6259, 19.4975, 0.15", "-125.601, 39.944, 19.6495, 0.22", "-126.095, 40.254, 19.8023, 0.66", "-126.57, 40.5017, 19.9318, 1.62", "-127.257, 40.8238, 20.1178, 1.62", "-128.696, 41.485, 20.4985, 0.22", "-129.478, 41.8215, 20.6988, 0.22", "-130.155, 42.1094, 20.8752, 0.22", "-130.9, 42.431, 21.0675, 0.22", "-131.771, 42.8296, 21.3034, 0.22", "-132.559, 43.2514, 21.5166, 1.77" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "20.065, -72.5825, 14.0488, 0.22", "21.2952, -74.352, 15.0486, 0.22", "22.3769, -75.9837, 15.9836, 0.22", "22.7225, -76.5611, 16.3119, 0.66", "23.0771, -77.2011, 16.6665, 0.88", "23.4906, -78.0732, 17.1324, 0.22", "23.8858, -79.0104, 17.6154, 0.07", "24.098, -79.7088, 17.9413, 0.15", "24.3134, -80.6014, 18.335, 0.07", "24.4372, -81.1859, 18.601, 0.15", "24.7061, -82.6647, 19.2738, 0.07", "24.801, -83.2829, 19.5301, 0.52", "24.8847, -84.0124, 19.7918, 0.88" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "20.065, -72.5825, 14.0488, 2.8", "20.6612, -73.583, 14.2176, 2.8", "21.4299, -74.9371, 14.4888, 0.37", "21.8263, -75.7013, 14.6508, 0.22", "22.3503, -76.8287, 14.8819, 0.22", "22.6461, -77.5726, 15.0439, 0.22", "22.882, -78.2503, 15.1998, 0.29", "23.033, -78.7892, 15.3366, 0.88", "23.2308, -79.6327, 15.5763, 0.96", "23.3954, -80.4156, 15.7972, 0.52", "23.6424, -81.699, 16.1431, 0.37", "23.8046, -82.479, 16.3313, 0.81", "23.9807, -83.1525, 16.502, 0.44", "24.291, -84.1705, 16.7991, 0.29", "24.5095, -84.8318, 17.0267, 0.88", "24.7163, -85.4585, 17.277, 1.92", "24.9973, -86.3725, 17.662, 2.06", "25.405, -87.8209, 18.2781, 0.29", "25.658, -88.8543, 18.7172, 0.37", "25.8639, -89.7655, 19.0731, 0.29", "26.0451, -90.5603, 19.3585, 0.37", "26.3293, -91.716, 19.6802, 0.37", "26.6203, -92.8782, 19.8967, 0.29", "26.7292, -93.3147, 19.916, 0.88", "26.9987, -94.2937, 19.8329, 1.84", "27.1768, -94.8697, 19.7275, 2.06", "27.7064, -96.3952, 19.3241, 0.29", "27.9515, -97.0642, 19.1112, 0.37", "28.1974, -97.7281, 18.8876, 0.22", "28.3892, -98.2188, 18.7302, 0.22", "28.6412, -98.8349, 18.5653, 0.37", "29.0052, -99.6195, 18.4135, 0.29", "29.1501, -99.9139, 18.3834, 1.03", "29.4451, -100.497, 18.3691, 1.62", "29.7134, -101.034, 18.3912, 1.92", "30.241, -102.104, 18.4779, 0.81", "30.7206, -103.116, 18.5945, 0.22", "31.1779, -104.109, 18.7872, 0.22", "31.6283, -105.137, 19.0396, 0.22", "31.7675, -105.474, 19.1374, 1.03", "32.0098, -106.09, 19.3414, 2.14", "32.35, -107.006, 19.6745, 1.4", "32.8573, -108.357, 20.2126, 0.22", "33.1696, -109.165, 20.552, 0.29", "33.4115, -109.786, 20.8174, 0.66", "33.6038, -110.254, 21.0052, 0.66", "33.9313, -110.98, 21.2746, 0.22", "34.3893, -111.876, 21.585, 0.22", "34.6085, -112.274, 21.7106, 0.74", "34.922, -112.815, 21.8929, 1.62", "35.3814, -113.632, 22.1733, 0.96", "35.9098, -114.683, 22.5384, 0.22", "36.1756, -115.299, 22.7511, 0.15", "36.2864, -115.636, 22.8564, 0.15", "36.3549, -115.884, 22.9333, 0.44", "36.4532, -116.349, 23.0715, 0.66", "36.5682, -117.092, 23.2794, 0.15", "36.6176, -117.488, 23.395, 0.15", "36.6818, -117.943, 23.5321, 0.29", "36.764, -118.391, 23.6882, 0.29", "36.9571, -119.217, 24.0048, 0.07", "37.0204, -119.447, 24.0943, 0.44", "37.2371, -120.199, 24.3851, 1.18", "37.3766, -120.752, 24.5939, 2.06", "37.5172, -121.371, 24.8171, 1.55", "37.8282, -122.828, 25.3113, 0.44", "38.0422, -123.833, 25.6252, 0.66", "38.2483, -124.759, 25.8714, 0.22", "38.5604, -126.044, 26.1417, 0.22", "38.6648, -126.471, 26.2165, 0.96", "38.7903, -127.0, 26.2874, 1.92", "38.9021, -127.493, 26.3328, 1.99", "39.2722, -129.052, 26.4335, 0.29", "39.5668, -130.147, 26.4932, 0.15", "39.7176, -130.644, 26.5088, 0.74", "39.8312, -131.012, 26.5181, 0.74", "40.1081, -131.933, 26.5316, 0.22", "40.2752, -132.544, 26.5328, 0.37", "40.4923, -133.435, 26.532, 0.22", "40.6383, -134.124, 26.541, 0.22", "40.7224, -134.566, 26.5503, 0.59", "40.8237, -135.212, 26.5645, 1.18", "41.0375, -136.969, 26.6234, 0.22", "41.1043, -137.628, 26.6497, 0.44", "41.1746, -138.27, 26.6686, 0.22", "41.2241, -138.716, 26.683, 0.81", "41.2843, -139.219, 26.6976, 1.47", "41.3706, -139.904, 26.7157, 1.55", "41.4918, -140.861, 26.733, 0.22", "41.6264, -141.919, 26.757, 0.15", "41.762, -142.941, 26.788, 0.15", "41.8246, -143.442, 26.8229, 0.29", "41.8744, -143.898, 26.8733, 0.59", "41.9075, -144.271, 26.9335, 0.96", "41.961, -144.981, 27.1092, 0.22", "42.0163, -145.704, 27.3302, 0.15", "42.1101, -146.676, 27.663, 0.15", "42.1573, -147.206, 27.8438, 0.96", "42.2234, -148.053, 28.141, 1.92", "42.3001, -149.245, 28.5665, 0.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-11.5978, -32.4668, 6.09548, 1.03", "-10.8825, -33.6327, 6.67346, 1.03", "-10.1461, -34.7779, 7.26694, 0.37", "-9.60694, -35.5933, 7.67188, 0.66", "-9.06696, -36.4036, 8.03049, 1.11", "-8.52885, -37.2178, 8.34285, 1.55", "-7.93153, -38.1685, 8.64133, 0.52", "-7.37097, -39.1, 8.87444, 0.44", "-6.7448, -40.2354, 9.07629, 0.88", "-6.21406, -41.2526, 9.20682, 0.74", "-5.74054, -42.2095, 9.28887, 0.44", "-5.21877, -43.3302, 9.31417, 0.37", "-4.96794, -43.9363, 9.30145, 1.18", "-4.52837, -45.193, 9.1959, 2.51" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-11.5978, -32.4668, 6.09548, 1.03", "-12.4543, -32.7494, 6.42177, 1.03", "-13.7576, -33.2668, 6.97862, 0.52", "-14.7524, -33.7478, 7.48294, 0.44", "-15.5494, -34.2317, 7.96242, 0.29", "-16.0285, -34.6021, 8.28484, 0.29", "-16.3146, -34.8815, 8.51762, 0.29", "-16.7149, -35.4361, 8.94773, 0.96", "-17.0565, -36.1041, 9.40474, 2.14", "-17.426, -37.0116, 9.97067, 2.06", "-17.7717, -38.0423, 10.5792, 0.74", "-18.187, -39.4172, 11.34, 0.44", "-18.3366, -39.9435, 11.6185, 0.59", "-18.4926, -40.5453, 11.9096, 0.88", "-18.6804, -41.3203, 12.2621, 0.29", "-18.8618, -42.1623, 12.6244, 0.15", "-18.9451, -42.5602, 12.7939, 0.29", "-19.1698, -43.6073, 13.1624, 0.22", "-19.2581, -44.0083, 13.3022, 0.66", "-19.4176, -44.7269, 13.5321, 1.7", "-19.5571, -45.3265, 13.6977, 2.21", "-19.7212, -45.9904, 13.8786, 1.92", "-20.1623, -47.7754, 14.3704, 0.37", "-20.3485, -48.5559, 14.5932, 1.25", "-20.5507, -49.463, 14.8622, 0.96", "-20.7849, -50.609, 15.1951, 0.22", "-20.9857, -51.6016, 15.4791, 0.22", "-21.1441, -52.3437, 15.6744, 0.44", "-21.3158, -53.0422, 15.8508, 1.18", "-21.4954, -53.6361, 15.972, 2.29", "-21.802, -54.4797, 16.1179, 2.51", "-22.2624, -55.6321, 16.2651, 0.44", "-22.7255, -56.7141, 16.3448, 0.44", "-22.9519, -57.2078, 16.3703, 0.37", "-23.4816, -58.3029, 16.4016, 0.37", "-23.6751, -58.6873, 16.4192, 0.22", "-23.8618, -59.0525, 16.4441, 0.22", "-24.1649, -59.6895, 16.4991, 0.22", "-24.3138, -60.0059, 16.538, 0.74", "-24.5165, -60.4628, 16.6166, 1.4", "-24.794, -61.1557, 16.7575, 2.14", "-25.2129, -62.2083, 16.9786, 0.66", "-25.6313, -63.2443, 17.1953, 0.37", "-25.9609, -64.1311, 17.3432, 0.22", "-26.2029, -64.8831, 17.4383, 0.22", "-26.3751, -65.518, 17.4924, 1.11", "-26.5338, -66.1692, 17.537, 1.25", "-26.7283, -67.025, 17.588, 0.59", "-26.959, -68.0012, 17.6273, 0.22", "-27.0574, -68.3963, 17.6329, 0.22", "-27.3647, -69.4077, 17.6368, 0.29", "-27.8499, -70.746, 17.6629, 0.29", "-28.0474, -71.2226, 17.6957, 0.29", "-28.2848, -71.7356, 17.7546, 0.96", "-28.5065, -72.1675, 17.8229, 1.99", "-28.6969, -72.5219, 17.8759, 2.51", "-29.3147, -73.6489, 18.0264, 0.81", "-29.9698, -74.8724, 18.1495, 0.22", "-30.2967, -75.5016, 18.1929, 0.22", "-30.5395, -76.0001, 18.2129, 0.22", "-30.6731, -76.289, 18.2149, 0.44", "-30.8797, -76.7637, 18.1994, 0.96", "-31.1142, -77.3359, 18.1557, 0.44", "-31.4277, -78.1477, 18.043, 0.15", "-31.6259, -78.6766, 17.9685, 0.15", "-31.779, -79.1003, 17.912, 0.44", "-31.9503, -79.5654, 17.8616, 0.52", "-32.1376, -80.1012, 17.7957, 0.22", "-32.3252, -80.599, 17.722, 0.22", "-32.5232, -81.0742, 17.649, 0.74", "-32.8222, -81.743, 17.5331, 1.33", "-33.1562, -82.4602, 17.4103, 0.29", "-33.6295, -83.4156, 17.2551, 0.22", "-33.9713, -84.0657, 17.1571, 0.22", "-34.4789, -84.9954, 17.0388, 0.22", "-34.6781, -85.3569, 16.9988, 0.52", "-35.1233, -86.1721, 16.9269, 1.7", "-35.7178, -87.2758, 16.8519, 0.44", "-36.1647, -88.1039, 16.82, 0.37", "-36.683, -89.124, 16.7943, 0.15", "-36.9271, -89.617, 16.7799, 0.81", "-37.2108, -90.2008, 16.7583, 1.7", "-37.4359, -90.6869, 16.7317, 0.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "33.5074, 20.3123, 0.0, 0.15", "46.434, 27.9217, 0.0, 0.15", "59.3606, 35.5311, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "-13.2093, 5.86902, -18.3396, 0.52", "-12.1239, 5.50327, -19.1471, 0.52", "-10.8937, 5.27829, -20.1396, 0.37", "-9.81593, 5.38652, -21.1567, 0.22", "-9.42342, 5.61004, -21.6494, 0.29", "-9.15602, 5.82055, -22.0652, 0.29", "-8.78584, 6.0895, -22.7109, 0.66", "-8.38322, 6.39513, -23.5442, 1.03", "-8.08484, 6.73714, -24.3246, 0.81", "-7.7456, 7.18178, -25.2306, 0.44", "-7.24694, 7.73689, -26.3532, 0.74", "-6.71609, 8.20385, -27.2845, 0.66", "-6.17764, 8.61479, -27.9977, 0.66", "-5.15149, 9.29337, -29.2376, 0.29", "-4.49604, 9.70135, -29.9288, 0.29", "-3.65685, 10.2511, -30.6483, 0.52", "-2.94652, 10.815, -31.1083, 0.52", "-2.09317, 11.594, -31.5102, 1.03", "5.33402, 16.9152, -37.949, 1.03", "12.2959, 22.0556, -45.0409, 1.03", "18.7405, 26.1007, -53.3347, 1.03", "24.845, 29.6089, -62.1579, 1.03", "30.5047, 34.3317, -70.6188, 1.03", "34.9884, 39.6336, -79.4053, 1.03", "40.8722, 44.0999, -87.8701, 1.03", "47.7764, 48.9914, -95.2135, 1.03", "55.7527, 54.196, -101.079, 1.03", "63.5644, 58.9719, -107.546, 1.03", "72.1344, 64.0891, -112.615, 1.03", "81.2169, 67.9527, -118.046, 1.03" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "-13.2093, 5.86902, -18.3396, 1.25", "-13.6623, 4.37428, -18.4118, 1.25", "-14.0011, 2.86619, -18.4416, 0.59", "-14.2477, 1.65423, -18.4909, 0.81", "-14.5473, 0.197037, -18.6302, 1.11", "-14.8444, -1.39025, -18.807, 1.4", "-15.0602, -2.78941, -18.9451, 1.11", "-15.1954, -5.42832, -19.2021, 0.52", "-15.158, -7.21103, -19.3757, 0.74", "-15.0405, -8.84346, -19.5966, 1.7", "-14.8309, -10.4865, -19.8975, 1.84", "-14.4837, -12.2386, -20.2931, 1.92", "-13.7539, -15.1445, -21.0071, 0.96", "-13.3017, -16.4873, -21.3493, 0.96", "-12.8172, -17.6608, -21.6361, 0.44", "-12.2166, -18.9075, -21.9314, 1.18", "-11.928, -19.4402, -22.1081, 1.18", "-9.84053, -30.5214, -22.3412, 1.18", "-7.11164, -41.4725, -21.9321, 1.18", "-6.68555, -52.686, -22.3841, 1.18", "-6.22192, -63.7435, -20.6395, 1.18", "-4.4683, -74.2653, -17.0595, 1.18", "-3.80642, -85.2154, -14.7602, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-3.71237, 41.226, -25.1407, 0.07", "-4.00342, 49.603, -26.8233, 0.07", "-4.10016, 58.15, -27.0097, 0.07", "-6.17541, 66.518, -26.6478, 0.07", "-9.36911, 74.5533, -27.309, 0.07", "-13.7824, 82.1017, -27.2141, 0.07", "-19.033, 89.0489, -25.8801, 0.07", "-22.762, 96.6452, -23.6574, 0.07", "-28.3234, 102.96, -20.8915, 0.07" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-3.71237, 41.226, -25.1407, 0.81", "-2.99366, 50.8432, -27.7079, 0.07", "-1.2849, 59.8833, -31.6405, 0.07", "1.65424, 69.0724, -34.1735, 0.07", "3.94049, 78.4171, -36.8002, 0.07", "6.90911, 87.6513, -39.1114, 0.07", "8.14092, 96.7916, -42.9924, 0.07", "8.11025, 106.278, -46.1712, 0.07" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "-12.4837, -15.7739, -8.43959, 0.37", "-13.5761, -15.6372, -8.64876, 0.37", "-14.4009, -15.5335, -8.93004, 0.37", "-14.9378, -15.5284, -9.14175, 0.22", "-15.5066, -15.5961, -9.45999, 0.22", "-15.7934, -15.6505, -9.64102, 0.22", "-16.207, -15.7335, -9.90136, 0.44", "-16.62, -15.8342, -10.1939, 0.52", "-17.2514, -15.9954, -10.6126, 1.18", "-18.3313, -16.3133, -11.2341, 0.22", "-19.0211, -16.5375, -11.5872, 0.22", "-19.5249, -16.7057, -11.8133, 0.22", "-20.0326, -16.8857, -12.0325, 0.22", "-20.6517, -17.1135, -12.2833, 0.29", "-21.1897, -17.3262, -12.4893, 0.59", "-21.6132, -17.5191, -12.6289, 0.96", "-22.2874, -17.8937, -12.8515, 0.37", "-22.9495, -18.349, -13.0864, 0.22", "-23.5165, -18.8273, -13.3016, 0.07", "-24.12, -19.3924, -13.5404, 0.07", "-24.586, -19.8601, -13.7234, 0.22", "-25.0799, -20.3788, -13.8965, 0.07", "-25.453, -20.8223, -14.0246, 0.07", "-25.7695, -21.2433, -14.0976, 0.74", "-33.3318, -25.1303, -15.7227, 0.74", "-41.4446, -28.1184, -16.6641, 0.74", "-49.3748, -31.3116, -18.2213, 0.74", "-57.5768, -34.024, -19.3184, 0.74" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-12.4837, -15.7739, -8.43959, 0.96", "-12.4801, -16.9502, -8.57952, 0.96", "-12.4748, -17.851, -8.74043, 0.88", "-12.4781, -19.0325, -8.99781, 0.81", "-12.4877, -19.7304, -9.17692, 1.03", "-12.5181, -20.3771, -9.36512, 1.33", "-12.6308, -21.6868, -9.76617, 0.88", "-12.7995, -22.8265, -10.1812, 1.03", "-13.0213, -23.828, -10.589, 1.62", "-13.3816, -25.2599, -11.216, 0.37", "-13.6045, -26.0263, -11.5589, 0.37", "-13.8106, -26.6256, -11.8444, 0.74", "-14.0317, -27.0974, -12.081, 1.25", "-14.4194, -27.7122, -12.4026, 1.77" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "28.3958, -6.75403, 8.58259, 0.15", "29.7634, -5.6679, 7.76046, 0.15", "30.4506, -5.11245, 7.36057, 0.15", "31.0171, -4.6284, 6.99113, 0.88", "31.6511, -4.04282, 6.54161, 1.55", "33.1117, -2.52896, 5.38982, 0.22", "33.7734, -1.84312, 4.86802, 0.22", "34.2031, -1.3697, 4.54066, 0.37", "34.9423, -0.528916, 3.99112, 0.07", "35.2556, -0.132153, 3.72517, 0.07", "35.6493, 0.509202, 3.22992, 1.18" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "28.3958, -6.75403, 8.58259, 0.29", "29.2962, -7.01738, 9.87426, 0.29", "29.925, -7.12896, 10.6706, 0.29", "30.9055, -7.20695, 11.7657, 0.66", "31.1912, -7.20926, 12.0518, 0.66", "32.0325, -7.17507, 12.8137, 0.22", "32.5178, -7.15568, 13.2213, 0.22", "33.2243, -7.10823, 13.7943, 0.66", "34.2279, -7.05042, 14.574, 1.84", "35.4558, -7.01712, 15.5279, 3.02", "36.813, -7.04505, 16.6571, 1.55", "38.203, -7.21578, 17.8718, 0.44", "39.2722, -7.46281, 18.8593, 0.44", "40.3748, -7.82609, 19.9351, 0.22", "41.3119, -8.21227, 20.8718, 1.03", "42.0389, -8.56976, 21.5899, 2.29", "43.6393, -9.43792, 23.1158, 0.22", "44.4423, -9.83679, 23.8542, 0.22", "44.9317, -10.0535, 24.2654, 0.22", "45.5466, -10.2877, 24.7395, 1.47", "46.542, -10.6131, 25.432, 2.88", "47.3944, -10.8483, 25.9714, 2.14", "50.2892, -11.5561, 27.6444, 0.29", "51.4085, -11.8111, 28.2545, 0.29", "52.0861, -11.9548, 28.6138, 0.29", "52.705, -12.0732, 28.9408, 0.66", "53.5592, -12.2087, 29.3655, 1.03", "54.4589, -12.3378, 29.7237, 0.22", "55.4724, -12.4243, 30.0269, 0.22", "56.1698, -12.4293, 30.2544, 0.22", "56.9114, -12.4026, 30.5101, 0.59", "57.822, -12.3471, 30.8293, 1.4", "59.2456, -12.2597, 31.3343, 0.37", "60.3229, -12.2636, 31.7191, 0.22", "61.3217, -12.3362, 32.0445, 0.22", "61.8525, -12.4149, 32.2118, 1.33", "62.707, -12.5914, 32.4761, 2.73", "63.4531, -12.7819, 32.7138, 2.73", "65.8918, -13.5392, 33.5171, 0.22", "66.8276, -13.884, 33.8317, 0.52", "67.9495, -14.3218, 34.2437, 0.15", "68.5114, -14.5459, 34.4672, 0.52", "69.2371, -14.8368, 34.7699, 0.96", "70.8917, -15.4948, 35.4863, 0.22", "71.8392, -15.8496, 35.9069, 0.96", "72.8511, -16.1997, 36.3964, 2.29", "75.0338, -16.8949, 37.4717, 0.22", "75.6367, -17.0801, 37.7738, 0.74", "76.5732, -17.3591, 38.2532, 1.11", "78.4173, -17.8918, 39.2124, 0.15", "79.4603, -18.1934, 39.75, 0.44", "80.2615, -18.4305, 40.1669, 1.25", "82.0396, -18.9256, 41.1546, 0.15", "82.5491, -19.069, 41.4416, 0.15", "82.9965, -19.2009, 41.6961, 0.44", "83.5555, -19.3904, 42.013, 0.66", "84.61, -19.7619, 42.5518, 0.15", "85.5228, -20.0725, 42.9961, 1.03", "86.3319, -20.3524, 43.3517, 2.14", "88.0183, -20.9114, 44.0594, 0.15", "88.5547, -21.0669, 44.2976, 0.15", "89.4056, -21.2504, 44.7024, 0.15", "90.3189, -21.372, 45.1786, 0.15", "90.7597, -21.3942, 45.435, 0.74", "91.7082, -21.3411, 46.0651, 1.92", "93.3644, -21.086, 47.3064, 0.15", "94.4236, -20.8546, 48.2087, 0.59", "95.2688, -20.6327, 49.0129, 0.15", "96.0362, -20.4033, 49.7769, 1.03", "96.8187, -20.1682, 50.5508, 1.33", "98.2223, -19.7507, 51.936, 0.15", "99.54, -19.3762, 53.2282, 0.15", "100.284, -19.2022, 53.9522, 1.03", "101.254, -19.0147, 54.8913, 1.77", "102.497, -18.8299, 56.1047, 0.15", "103.529, -18.7334, 57.095, 0.15", "104.362, -18.7246, 57.8171, 0.59", "105.435, -18.7861, 58.6743, 0.15", "105.958, -18.8355, 59.0849, 0.15", "106.515, -18.9065, 59.5178, 1.03", "107.28, -18.9965, 60.0791, 1.62", "109.302, -19.2063, 61.4308, 0.15", "110.018, -19.2532, 61.8752, 0.15", "110.793, -19.2636, 62.3279, 0.81", "111.836, -19.207, 62.9301, 1.62", "113.366, -19.0368, 63.81, 0.07", "114.414, -18.8639, 64.4278, 0.07", "114.908, -18.7522, 64.7117, 0.59", "115.276, -18.6634, 64.9029, 0.59", "116.264, -18.4065, 65.3893, 0.07", "116.998, -18.2149, 65.7332, 0.07", "117.385, -18.1159, 65.905, 0.07", "118.072, -17.9286, 66.1866, 0.59", "118.851, -17.7135, 66.5116, 1.33", "119.98, -17.4204, 66.9864, 0.15", "120.791, -17.2109, 67.3503, 0.52", "121.576, -16.984, 67.7409, 0.07", "122.099, -16.8325, 68.0199, 0.22", "122.892, -16.592, 68.4669, 0.07", "123.904, -16.2675, 69.0863, 0.66", "125.145, -15.8728, 69.8877, 0.22", "125.963, -15.6367, 70.4182, 0.96", "126.815, -15.4353, 71.0235, 1.62", "128.454, -15.1042, 72.2256, 0.15", "129.375, -14.9249, 72.9016, 0.74", "130.219, -14.7674, 73.52, 1.11", "131.651, -14.5383, 74.5308, 0.22", "133.624, -14.2732, 75.8892, 0.29", "134.098, -14.2227, 76.1994, 0.15", "134.472, -14.2091, 76.4222, 0.15", "135.188, -14.2047, 76.7817, 0.22", "135.555, -14.197, 76.9364, 0.74", "136.435, -14.1474, 77.1941, 1.47", "137.296, -14.0676, 77.3562, 1.18", "138.839, -13.8901, 77.6775, 0.15", "139.316, -13.8249, 77.7974, 0.37", "139.868, -13.7473, 77.9525, 0.37", "140.927, -13.5953, 78.2444, 0.15", "141.774, -13.4447, 78.4863, 1.25", "142.237, -13.3465, 78.6312, 1.25", "143.677, -13.0173, 79.0735, 0.15", "144.36, -12.8759, 79.2824, 0.15", "145.274, -12.7143, 79.545, 0.22", "146.193, -12.5856, 79.7596, 0.15", "146.957, -12.4734, 79.8803, 0.22", "147.685, -12.354, 79.9708, 0.96", "148.698, -12.1694, 80.0541, 1.62", "149.328, -12.0548, 80.0919, 1.33", "151.199, -11.7411, 80.197, 0.15", "152.28, -11.574, 80.2404, 0.15", "152.897, -11.4765, 80.2649, 0.66", "153.684, -11.3506, 80.2761, 1.11", "155.255, -11.0921, 80.2525, 0.15", "156.071, -10.9596, 80.2087, 0.44", "156.452, -10.8985, 80.1691, 0.44", "157.491, -10.7721, 80.0252, 0.15", "158.723, -10.661, 79.821, 0.15", "159.129, -10.6256, 79.7457, 0.88", "160.178, -10.5438, 79.5028, 1.7", "161.595, -10.4598, 79.1382, 0.15", "162.365, -10.4224, 78.9436, 0.29", "163.138, -10.3948, 78.7582, 0.07", "164.029, -10.3765, 78.5868, 0.22", "165.266, -10.3772, 78.3641, 0.15", "165.892, -10.3863, 78.2608, 0.59", "166.844, -10.4117, 78.1159, 1.4", "167.487, -10.4319, 78.0277, 1.25", "169.293, -10.5387, 77.8224, 0.15", "170.301, -10.6343, 77.7398, 0.37", "171.235, -10.738, 77.694, 0.15", "172.012, -10.8243, 77.6925, 0.37", "172.484, -10.8685, 77.7321, 0.37", "173.158, -10.9064, 77.8331, 0.88", "173.804, -10.9348, 77.9656, 1.62", "174.2, -10.9464, 78.07, 1.62", "176.134, -10.9969, 78.6691, 0.07", "177.452, -11.0185, 79.1272, 0.07", "178.047, -11.0035, 79.3573, 0.66" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "71.3405, -15.9831, -35.1889, 0.07", "80.4786, -20.0522, -40.6513, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "71.3405, -15.9831, -35.1889, 0.81", "79.964, -18.0737, -41.6115, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-11.715, 43.0345, 58.217, 0.07", "-10.2879, 44.1464, 58.0021, 0.07", "-9.34459, 44.8976, 57.7894, 0.07", "-8.70947, 45.4326, 57.6225, 0.81", "-7.78775, 46.2648, 57.3149, 0.07", "-7.38044, 46.6564, 57.1472, 0.15", "-6.50034, 47.5026, 56.7849, 0.07", "-6.06382, 47.9496, 56.5461, 0.66", "-5.73307, 48.3182, 56.3178, 0.88", "-5.01775, 49.1839, 55.7718, 0.15", "-4.56096, 49.8274, 55.3127, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-11.715, 43.0345, 58.217, 0.07", "-11.9966, 44.0686, 59.328, 0.07", "-12.1981, 44.8233, 60.1557, 0.07", "-12.3247, 45.4036, 60.8686, 0.07", "-12.4364, 45.8632, 61.5166, 0.96", "-12.479, 46.0032, 61.743, 0.96", "-12.689, 46.643, 62.8994, 0.07", "-12.8203, 47.0332, 63.756, 0.59", "-12.9897, 47.5822, 65.1474, 0.22", "-13.1263, 47.9964, 66.3328, 1.25", "-13.3601, 48.5454, 68.0779, 0.22", "-13.5351, 48.9013, 69.3043, 0.22", "-13.7469, 49.3002, 70.771, 0.22", "-13.9373, 49.6562, 72.089, 0.22", "-14.076, 49.8924, 72.9529, 1.33", "-14.3711, 50.4649, 74.9555, 0.15", "-14.503, 50.7761, 76.0693, 0.29", "-14.6244, 51.1052, 77.226, 0.29", "-14.6731, 51.3062, 77.8754, 0.44", "-14.6999, 51.8682, 79.6235, 0.22", "-14.6265, 52.3355, 81.0409, 0.22", "-14.384, 53.0053, 83.0703, 0.29", "-14.3356, 53.1053, 83.3803, 1.11", "-14.0223, 53.5795, 85.011, 0.29", "-13.7413, 53.9026, 86.3216, 0.29", "-13.6428, 53.9811, 86.7226, 0.29", "-13.4477, 54.1206, 87.8529, 0.29", "-13.4285, 54.1376, 88.1631, 0.29", "-13.4624, 54.1396, 89.2827, 0.29", "-13.5711, 54.088, 90.2795, 0.29", "-13.6774, 54.0421, 90.947, 0.29", "-13.8771, 53.9185, 92.3402, 0.29", "-14.0392, 53.7841, 93.6163, 0.29", "-14.2099, 53.634, 94.9635, 0.29", "-14.3732, 53.4974, 96.1658, 0.29", "-14.5885, 53.3213, 97.8853, 0.29", "-14.7707, 53.1865, 99.5381, 0.52", "-14.871, 53.1361, 100.688, 0.52", "-14.9403, 53.1495, 101.583, 0.52", "-14.9851, 53.2197, 102.241, 0.22", "-15.102, 53.565, 104.126, 0.22", "-15.1819, 53.8819, 105.327, 0.22", "-15.2946, 54.3139, 106.677, 0.44", "-15.3962, 54.7914, 108.069, 0.88", "-15.5091, 55.6127, 110.493, 0.15", "-15.5475, 56.0221, 111.73, 0.15", "-15.5826, 56.3, 112.542, 0.22", "-15.6245, 56.4891, 113.134, 0.22", "-15.6784, 56.6253, 113.586, 0.22", "-15.7377, 56.7509, 114.034, 0.22", "-15.7924, 56.8801, 114.557, 0.22", "-15.8563, 57.1097, 115.386, 0.22", "-15.9739, 57.4381, 116.625, 0.22", "-16.0344, 57.5608, 117.112, 0.22", "-16.1814, 57.8441, 118.336, 0.22", "-16.3093, 58.1344, 119.7, 0.22", "-16.3333, 58.2496, 120.332, 0.22", "-16.2908, 58.428, 121.421, 0.22", "-16.1839, 58.606, 122.432, 0.22", "-16.0673, 58.7392, 123.324, 0.22", "-15.9301, 58.8477, 124.273, 0.22", "-15.6481, 58.9819, 125.602, 0.22", "-15.3918, 59.0753, 126.513, 0.22", "-15.1121, 59.2022, 127.225, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-132.559, 43.2514, 21.5166, 0.29", "-133.305, 44.0443, 21.6715, 0.29", "-134.041, 44.7913, 21.7946, 0.07", "-134.275, 45.024, 21.828, 0.15", "-134.618, 45.3479, 21.8823, 0.07", "-134.891, 45.5924, 21.9271, 0.29", "-135.47, 46.0882, 22.0186, 0.07", "-135.718, 46.2784, 22.0518, 0.37", "-135.869, 46.3962, 22.0638, 0.37", "-136.388, 46.8063, 22.1092, 0.07", "-136.545, 46.9362, 22.1262, 0.15", "-137.0, 47.3567, 22.2041, 0.07", "-137.387, 47.7695, 22.2916, 0.07", "-137.621, 48.0915, 22.376, 0.74", "-137.767, 48.3318, 22.4507, 0.74", "-138.09, 48.9667, 22.6625, 0.07", "-138.321, 49.505, 22.888, 0.07", "-138.423, 49.777, 23.0379, 0.29", "-138.682, 50.5149, 23.5762, 0.07", "-138.834, 50.9601, 23.9817, 0.07", "-138.925, 51.2459, 24.2836, 0.66", "-139.107, 51.8231, 24.956, 0.07", "-139.287, 52.2982, 25.5616, 0.29", "-139.511, 52.8447, 26.3294, 0.22", "-139.754, 53.396, 27.141, 1.33", "-140.006, 53.9534, 27.9763, 0.07", "-140.154, 54.3003, 28.5091, 0.44", "-140.392, 54.9169, 29.4403, 0.15", "-140.488, 55.2159, 29.863, 0.15", "-140.6, 55.6681, 30.4491, 1.4", "-140.74, 56.5216, 31.4922, 0.22", "-140.806, 57.0405, 32.1225, 0.15", "-140.831, 57.4328, 32.5864, 0.22", "-140.819, 58.0064, 33.2164, 1.7", "-140.766, 58.9801, 34.2294, 0.07", "-140.713, 59.3966, 34.6585, 0.59" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-132.559, 43.2514, 21.5166, 0.96", "-134.141, 43.4512, 21.9355, 0.96", "-135.575, 43.5277, 22.2674, 0.07", "-136.024, 43.5383, 22.3594, 0.07", "-136.657, 43.5432, 22.4869, 0.15", "-136.905, 43.5452, 22.5369, 0.37", "-137.534, 43.5501, 22.6638, 0.44", "-138.927, 43.4533, 22.9411, 0.22", "-139.723, 43.3622, 23.0573, 0.96", "-140.464, 43.3053, 23.1612, 1.7" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "42.3001, -149.245, 28.5665, 0.07", "42.452, -151.145, 30.415, 0.07", "42.4769, -152.107, 31.4758, 0.07", "42.4763, -152.221, 31.6089, 0.59", "42.4679, -152.756, 32.2219, 1.11", "42.4547, -153.762, 33.3221, 0.07", "42.4655, -154.226, 33.7936, 0.52", "42.5582, -156.159, 35.5727, 0.07", "42.5832, -156.553, 35.9177, 0.07", "42.5992, -157.011, 36.2995, 1.03", "42.5892, -157.545, 36.727, 1.25", "42.4548, -159.136, 38.0818, 0.15", "42.3097, -160.187, 39.026, 0.15", "42.198, -160.856, 39.6201, 1.03", "41.9314, -162.065, 40.6938, 0.07", "41.7204, -162.85, 41.3981, 0.81", "41.0866, -164.855, 43.1984, 0.07", "40.8188, -165.59, 43.8262, 0.66", "40.6092, -166.172, 44.2972, 1.18", "40.1156, -167.623, 45.4045, 0.15", "39.8456, -168.52, 45.9971, 0.44", "39.7531, -168.87, 46.1767, 0.44", "39.3747, -170.532, 46.8419, 0.22", "39.1462, -171.738, 47.2923, 0.66", "39.0026, -172.655, 47.6347, 1.47", "38.8919, -173.637, 47.9819, 0.52", "38.7562, -174.934, 48.4816, 0.15", "38.6349, -176.258, 49.0139, 0.15", "38.5718, -177.215, 49.4009, 0.15", "38.5369, -177.856, 49.6456, 0.96", "38.5005, -178.474, 49.8953, 1.11", "38.3384, -180.874, 50.902, 0.07", "38.2965, -181.347, 51.095, 0.07", "38.2156, -181.977, 51.2978, 0.52", "38.0021, -183.422, 51.6933, 0.07", "37.8526, -184.539, 51.9264, 0.07", "37.8124, -184.945, 51.9843, 0.22", "37.7908, -185.321, 52.0036, 0.52", "37.7233, -186.861, 52.0929, 0.07", "37.7148, -187.186, 52.114, 0.52", "37.725, -187.971, 52.1689, 1.03", "37.789, -189.718, 52.3422, 0.07", "37.8116, -190.211, 52.4214, 0.15", "37.8418, -190.86, 52.5578, 0.07", "37.8616, -191.211, 52.6474, 0.44", "37.8821, -191.681, 52.7764, 0.81", "37.9138, -193.322, 53.2768, 0.22", "37.9259, -194.119, 53.5499, 0.81", "37.9288, -194.776, 53.8057, 1.92" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "42.3001, -149.245, 28.5665, 0.07", "42.4926, -150.47, 28.779, 0.07", "42.5466, -150.774, 28.8276, 0.22", "42.7137, -151.616, 28.9476, 0.07", "42.7577, -151.82, 28.9736, 0.15", "43.0282, -152.964, 29.1072, 0.07", "43.1035, -153.27, 29.1377, 0.66", "43.1934, -153.579, 29.1594, 0.66", "43.3732, -154.147, 29.1942, 0.07", "43.5313, -154.599, 29.2157, 0.74", "43.6568, -154.951, 29.2311, 1.55", "43.9938, -155.939, 29.266, 0.22", "44.3123, -156.872, 29.2807, 0.07", "44.4048, -157.14, 29.2711, 0.74", "44.6106, -157.707, 29.2143, 1.77", "44.9735, -158.608, 29.0603, 0.22", "45.2427, -159.161, 28.8984, 0.22", "45.5113, -159.586, 28.6818, 0.22", "45.8864, -160.055, 28.32, 0.22", "46.1591, -160.342, 28.0497, 0.81", "46.4906, -160.64, 27.7083, 1.55", "47.1248, -161.148, 27.0481, 0.22", "47.5703, -161.491, 26.5673, 0.66", "48.0183, -161.845, 26.0442, 1.25", "48.44, -162.189, 25.5219, 0.22", "48.8865, -162.577, 24.9215, 0.22", "49.1869, -162.892, 24.4736, 0.22", "49.4679, -163.245, 24.0318, 0.22", "49.8319, -163.757, 23.4448, 0.29", "50.0113, -164.027, 23.1543, 1.03", "50.1358, -164.214, 22.963, 1.92", "50.9055, -165.322, 21.9213, 0.22", "51.3833, -165.977, 21.3666, 0.15", "51.6602, -166.359, 21.0856, 0.74", "51.9272, -166.742, 20.8324, 1.33", "52.4155, -167.464, 20.3835, 0.07", "52.5774, -167.698, 20.2447, 0.22", "52.8279, -168.044, 20.0757, 0.15", "53.0127, -168.305, 19.9663, 0.22", "53.3379, -168.793, 19.7697, 0.22", "53.5362, -169.124, 19.6364, 0.66", "53.7072, -169.435, 19.5252, 1.18", "53.9949, -169.963, 19.3258, 0.15", "54.2718, -170.441, 19.1409, 0.15", "54.6103, -170.969, 18.9445, 0.22", "54.8713, -171.36, 18.8183, 0.66", "55.1962, -171.828, 18.6786, 0.15", "55.7317, -172.558, 18.4906, 0.22", "55.984, -172.883, 18.4233, 0.74", "56.2894, -173.261, 18.3716, 1.18", "56.9318, -174.017, 18.308, 0.15", "57.2332, -174.378, 18.2878, 0.22", "57.6424, -174.912, 18.2759, 0.15", "57.8146, -175.162, 18.284, 0.59", "57.9217, -175.338, 18.2899, 0.96", "58.0867, -175.656, 18.2979, 0.59", "58.3341, -176.173, 18.3088, 0.15", "58.524, -176.577, 18.317, 0.37", "58.8699, -177.31, 18.3319, 0.15", "58.9879, -177.544, 18.3375, 0.52", "59.2116, -177.971, 18.3484, 0.88", "59.6304, -178.712, 18.3706, 0.15", "59.8642, -179.093, 18.3839, 0.29", "60.0659, -179.409, 18.3958, 0.22", "60.2131, -179.654, 18.404, 0.44", "60.4268, -180.016, 18.4158, 0.44", "60.9158, -180.853, 18.4425, 0.15" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-4.52837, -45.193, 9.1959, 0.29", "-4.02466, -46.0494, 8.42007, 0.29", "-3.63881, -47.007, 7.61536, 0.07", "-3.52776, -47.4149, 7.25837, 0.29", "-3.37385, -48.1846, 6.60913, 0.15", "-3.29667, -48.6822, 6.19023, 0.52", "-3.22003, -49.3328, 5.65996, 0.59", "-3.12948, -50.5716, 4.72477, 0.15", "-3.10608, -51.4974, 4.05887, 0.74", "-3.10838, -52.2587, 3.51481, 1.99", "-3.11342, -52.8194, 3.12742, 1.99", "-3.09638, -54.5161, 2.00038, 0.15", "-3.06378, -55.0175, 1.68592, 0.29", "-2.92963, -56.0869, 1.10476, 0.22", "-2.8779, -56.4012, 0.95133, 0.81", "-2.75469, -57.0665, 0.647915, 1.18", "-2.61942, -57.7115, 0.37262, 0.59", "-2.30924, -59.0216, -0.154746, 0.07", "-2.12194, -59.799, -0.454556, 0.07", "-2.04433, -60.0792, -0.553532, 0.07", "-1.84884, -60.7588, -0.799058, 0.29", "-1.56033, -61.7502, -1.15556, 0.22", "-1.30918, -62.5529, -1.44267, 0.96", "-1.0464, -63.3953, -1.72019, 0.22", "-0.690347, -64.709, -2.14673, 0.15", "-0.413443, -65.9032, -2.51665, 0.15", "-0.236597, -66.7519, -2.7661, 1.03", "-0.039459, -67.7974, -3.04512, 2.14", "0.206717, -69.3208, -3.44207, 0.22", "0.376532, -70.5948, -3.75711, 0.22", "0.437784, -71.2621, -3.90375, 0.66", "0.471183, -71.9366, -4.04482, 0.96", "0.489167, -73.1338, -4.29414, 0.52", "0.46222, -74.3986, -4.54161, 0.22", "0.414461, -75.5182, -4.75079, 0.88", "0.314468, -77.2189, -5.04232, 0.22", "0.179537, -78.6447, -5.24343, 0.15", "0.048103, -79.6169, -5.36449, 0.22", "-0.217048, -81.1833, -5.52509, 0.15", "-0.364615, -82.0179, -5.59351, 0.81", "-0.493076, -82.7628, -5.64618, 0.81", "-0.71355, -84.5213, -5.75826, 0.15", "-0.770608, -85.6023, -5.77097, 0.22", "-0.768997, -86.222, -5.78377, 0.88", "-0.727238, -87.012, -5.82088, 1.84", "-0.633645, -87.8494, -5.88919, 1.03", "-0.391366, -89.4723, -6.12199, 0.22", "-0.125541, -90.9183, -6.3846, 0.22", "0.029372, -91.8097, -6.60048, 0.22", "0.134199, -92.57, -6.8087, 0.81", "0.24144, -93.4688, -7.07333, 1.47", "0.407949, -95.203, -7.63407, 0.37", "0.464978, -96.2463, -8.02446, 0.44", "0.522707, -97.7733, -8.68365, 0.74", "0.582398, -99.2998, -9.25882, 0.96" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.52837, -45.193, 9.1959, 0.22", "-4.56497, -47.632, 10.7242, 0.22", "-4.53934, -48.5122, 11.3164, 0.66", "-4.49419, -49.5673, 12.0277, 1.03", "-4.43674, -50.7426, 12.7979, 0.22", "-4.40096, -51.6779, 13.3931, 0.22", "-4.37528, -52.6422, 13.9717, 0.37", "-4.33046, -53.6584, 14.5257, 0.37", "-4.32028, -54.336, 14.891, 0.88", "-4.32641, -54.8676, 15.1649, 1.92", "-4.34961, -55.5854, 15.5051, 2.14", "-4.40407, -57.3547, 16.2852, 0.22", "-4.42869, -58.824, 16.9284, 0.22", "-4.42649, -59.6815, 17.3133, 0.88", "-4.38594, -60.4972, 17.7104, 1.7", "-4.30174, -61.3143, 18.1355, 2.06", "-3.96947, -63.4134, 19.2875, 0.29", "-3.72568, -64.6567, 19.9713, 0.29", "-3.50514, -65.6301, 20.4923, 0.81", "-3.31186, -66.524, 20.9241, 1.25", "-2.97369, -68.4652, 21.8165, 0.15", "-2.87581, -69.2723, 22.1531, 0.15", "-2.82606, -70.0017, 22.4213, 0.88", "-2.79826, -71.2305, 22.8126, 2.43", "-2.83839, -73.1832, 23.3521, 0.66", "-2.96885, -75.2081, 23.8418, 0.29", "-3.05333, -76.177, 24.0438, 0.88", "-3.20141, -77.9023, 24.3724, 0.22", "-3.2352, -78.4824, 24.4932, 0.52", "-3.25272, -79.2147, 24.6319, 0.88", "-3.22439, -79.953, 24.7616, 0.37", "-3.13136, -80.9347, 24.8916, 0.15", "-3.02132, -81.9647, 25.0338, 0.52", "-2.89566, -83.1152, 25.2039, 0.15", "-2.79224, -84.0229, 25.3654, 0.15", "-2.74337, -84.4522, 25.4614, 0.66", "-2.68655, -85.0272, 25.6084, 0.96", "-2.53718, -86.625, 26.0561, 0.22", "-2.4433, -87.6401, 26.3475, 1.25", "-2.38953, -88.2922, 26.5377, 2.43", "-2.32282, -89.0343, 26.7724, 1.99", "-2.12993, -90.9803, 27.4171, 0.22", "-1.98673, -92.2757, 27.8561, 0.07", "-1.88618, -93.1473, 28.1681, 0.96", "-1.72955, -94.7545, 28.7954, 0.15", "-1.69236, -95.3845, 29.0723, 0.15", "-1.69239, -95.9999, 29.3879, 0.88", "-1.77331, -96.7259, 29.8763, 1.47", "-2.17533, -98.177, 31.1043, 0.15", "-2.42493, -98.7027, 31.6582, 0.22", "-2.87396, -99.3129, 32.466, 0.22", "-3.31536, -99.7737, 33.1828, 0.37", "-3.91392, -100.279, 34.0945, 0.81", "-4.5179, -100.693, 34.9266, 1.25", "-5.12352, -101.045, 35.6842, 0.22", "-5.89972, -101.504, 36.6181, 0.22", "-6.55988, -101.906, 37.3988, 0.66", "-7.14855, -102.277, 38.0741, 1.11", "-8.07593, -102.9, 39.1556, 0.15", "-8.30046, -103.064, 39.4255, 0.37", "-9.04052, -103.638, 40.3157, 0.15", "-9.6055, -104.081, 40.9627, 0.66", "-9.99913, -104.408, 41.3748, 1.18", "-11.169, -105.439, 42.6488, 0.29", "-12.1109, -106.328, 43.7461, 0.15", "-12.3651, -106.599, 44.0624, 0.74", "-12.8436, -107.169, 44.693, 1.7", "-14.005, -108.705, 46.3555, 0.22", "-14.8764, -110.067, 47.7916, 0.22", "-15.3685, -110.996, 48.7299, 1.18", "-15.962, -112.365, 50.1092, 0.07", "-16.1519, -112.928, 50.6617, 0.29", "-16.3784, -113.979, 51.6671, 0.66", "-16.4555, -114.913, 52.5499, 0.15", "-16.4626, -115.357, 52.9338, 0.29", "-16.4396, -115.977, 53.4724, 0.37", "-16.365, -116.707, 54.147, 1.11", "-16.1913, -117.662, 55.0907, 0.29", "-15.9045, -118.725, 56.1919, 0.88", "-15.3895, -120.135, 57.7794, 0.15", "-15.035, -120.845, 58.6602, 1.11", "-14.3294, -121.964, 60.1696, 0.66", "-13.5386, -123.072, 61.7772, 0.22", "-13.0453, -123.732, 62.7276, 0.96", "-12.1855, -124.845, 64.3011, 0.88", "-11.2296, -126.079, 66.1001, 0.22", "-10.621, -126.905, 67.3168, 0.74", "-10.1759, -127.546, 68.2517, 1.03", "-9.34842, -128.849, 70.0905, 0.15", "-8.75205, -129.862, 71.4683, 1.33", "-7.71108, -131.761, 73.9388, 0.37", "-7.22571, -132.691, 75.0903, 0.37", "-6.82664, -133.483, 76.0295, 0.22", "-6.63164, -133.87, 76.4783, 0.74", "-6.0769, -135.047, 77.8026, 0.22", "-5.76906, -135.849, 78.5987, 0.52", "-5.60322, -136.414, 79.054, 1.11", "-5.34879, -137.664, 79.9964, 0.07", "-5.26022, -138.374, 80.5008, 0.15", "-5.21266, -139.069, 80.9617, 0.66", "-5.22221, -140.069, 81.5322, 0.07", "-5.23988, -140.5, 81.7638, 0.22", "-5.28138, -141.226, 82.1695, 0.07", "-5.34796, -141.883, 82.5481, 1.03", "-5.42656, -142.531, 82.9193, 1.4", "-5.62191, -144.069, 83.7799, 0.22", "-5.78432, -145.318, 84.4883, 0.07", "-5.89216, -146.123, 84.9601, 0.59", "-6.05459, -147.385, 85.7362, 0.07", "-6.15148, -148.147, 86.245, 0.15", "-6.27408, -148.932, 86.8259, 1.18", "-6.42081, -149.723, 87.4439, 0.15", "-6.55918, -150.46, 88.0898, 0.88", "-6.74709, -151.443, 89.0119, 0.07", "-6.84701, -151.984, 89.5557, 0.44", "-7.08421, -153.105, 90.8221, 0.15", "-7.24842, -153.83, 91.7113, 0.96", "-7.58254, -155.284, 93.5665, 0.29", "-7.70784, -155.793, 94.2197, 0.15", "-7.82906, -156.202, 94.7227, 0.52", "-8.16736, -157.254, 95.9353, 0.37", "-8.48162, -158.232, 96.9426, 1.25", "-8.7331, -159.006, 97.6385, 0.07", "-8.90264, -159.556, 98.0547, 0.22", "-9.2472, -160.799, 98.9173, 0.07", "-9.34067, -161.194, 99.161, 0.59", "-9.50122, -161.985, 99.5941, 1.33", "-9.83173, -163.733, 100.5, 0.07", "-10.046, -165.031, 101.168, 0.07", "-10.1213, -165.662, 101.513, 0.59", "-10.176, -166.554, 102.032, 0.15", "-10.2163, -167.374, 102.543, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-37.4359, -90.6869, 16.7317, 0.22", "-38.5522, -91.8381, 17.454, 0.22", "-39.3233, -92.6628, 17.842, 0.22", "-39.6494, -92.9782, 17.96, 0.15", "-40.1078, -93.4114, 18.1229, 0.44", "-40.539, -93.8137, 18.2798, 0.96", "-40.9845, -94.2272, 18.443, 1.11", "-41.9122, -95.0842, 18.7389, 0.29", "-43.2284, -96.3522, 19.1938, 0.22", "-43.7263, -96.817, 19.3587, 0.59", "-44.0653, -97.1211, 19.4691, 0.96", "-44.5733, -97.5638, 19.6471, 0.96", "-45.3218, -98.2015, 19.9321, 0.22", "-45.9746, -98.7638, 20.21, 0.22", "-46.8323, -99.5605, 20.6151, 0.22", "-47.2061, -99.9089, 20.803, 0.52", "-47.833, -100.507, 21.1506, 1.33", "-48.5659, -101.213, 21.5927, 0.22", "-49.1881, -101.823, 21.9867, 0.52", "-49.9787, -102.638, 22.5427, 0.15", "-50.5327, -103.269, 22.9675, 0.15", "-50.8483, -103.649, 23.2086, 0.22", "-50.9959, -103.85, 23.3296, 0.37", "-51.364, -104.383, 23.6547, 0.81", "-51.8359, -105.127, 24.1251, 0.15", "-51.9691, -105.36, 24.2811, 0.07", "-52.1575, -105.73, 24.5333, 0.15", "-52.503, -106.351, 25.0058, 0.22", "-52.8517, -106.919, 25.5271, 0.15", "-53.1367, -107.309, 25.9633, 0.15", "-53.3563, -107.547, 26.2838, 0.44", "-53.6749, -107.836, 26.7294, 0.66", "-54.5234, -108.541, 27.9432, 0.22", "-55.1303, -109.03, 28.8018, 0.74", "-55.7679, -109.533, 29.7067, 1.7", "-56.6725, -110.24, 30.9922, 0.22", "-57.1645, -110.633, 31.7068, 0.15", "-57.6942, -111.055, 32.4975, 0.52", "-57.9914, -111.289, 32.9616, 0.66", "-58.6313, -111.77, 33.9213, 0.22", "-59.1678, -112.146, 34.6962, 0.37", "-59.6616, -112.451, 35.3614, 0.22", "-60.1212, -112.674, 35.9078, 0.37", "-60.5723, -112.836, 36.3588, 0.37", "-61.0431, -112.978, 36.8057, 0.15", "-61.7546, -113.204, 37.4253, 0.15", "-62.0517, -113.299, 37.6651, 0.74", "-62.8772, -113.599, 38.2818, 1.55", "-64.1997, -114.163, 39.264, 0.07", "-65.1275, -114.622, 39.9701, 0.15", "-65.835, -115.018, 40.5268, 0.07", "-66.0685, -115.174, 40.7183, 0.44", "-66.4051, -115.434, 41.0118, 0.44", "-67.1529, -116.111, 41.701, 0.22", "-67.6376, -116.619, 42.1678, 0.88", "-67.9911, -117.016, 42.4913, 1.47", "-68.926, -118.136, 43.3545, 0.07", "-69.4208, -118.758, 43.8038, 0.07", "-69.5746, -118.961, 43.9398, 0.29", "-70.0192, -119.575, 44.2914, 0.81", "-70.6401, -120.422, 44.7171, 0.07", "-71.1898, -121.166, 45.0361, 0.07", "-71.786, -121.985, 45.2895, 0.07", "-72.0117, -122.307, 45.3724, 0.59", "-72.3502, -122.797, 45.4893, 0.96", "-73.1664, -124.029, 45.777, 0.15", "-73.552, -124.646, 45.9201, 0.88", "-74.4775, -126.147, 46.2778, 0.07", "-74.8507, -126.79, 46.4562, 0.37", "-74.8851, -126.854, 46.4771, 0.37", "-75.3735, -127.869, 46.871, 0.07", "-75.6618, -128.59, 47.2059, 0.88", "-76.0767, -129.763, 47.8436, 0.07", "-76.3161, -130.556, 48.313, 0.07", "-76.413, -130.932, 48.5315, 0.29", "-76.4855, -131.232, 48.7065, 0.29", "-76.7359, -132.314, 49.3366, 0.07", "-76.929, -133.054, 49.7688, 0.81", "-77.0709, -133.537, 50.043, 1.4", "-77.8742, -135.851, 51.4004, 0.07", "-78.0939, -136.412, 51.7472, 0.74", "-78.2819, -136.846, 52.0229, 0.74", "-78.8891, -138.146, 52.8823, 0.07", "-79.1324, -138.626, 53.2149, 0.22", "-79.6564, -139.547, 53.9067, 0.07", "-80.0184, -140.105, 54.3799, 0.81", "-80.2614, -140.487, 54.7303, 1.25", "-80.8938, -141.48, 55.7734, 0.22", "-81.2016, -141.948, 56.3126, 0.07", "-81.4314, -142.292, 56.7202, 0.44", "-82.229, -143.416, 58.0851, 0.07", "-82.7298, -144.096, 58.9552, 1.03", "-83.3478, -144.913, 60.0831, 0.07", "-83.6086, -145.244, 60.5763, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-37.4359, -90.6869, 16.7317, 0.07", "-37.6545, -91.1487, 16.7756, 0.07", "-37.8223, -91.475, 16.8139, 0.29", "-38.0875, -91.9282, 16.8774, 0.15", "-38.2743, -92.2114, 16.9193, 0.15", "-38.5218, -92.5619, 16.9699, 0.74", "-38.6201, -92.7007, 16.9868, 0.74", "-39.0655, -93.3228, 17.0265, 0.15", "-39.3792, -93.7779, 17.0282, 0.15", "-39.5753, -94.0892, 17.0117, 0.29", "-39.8159, -94.5057, 16.9666, 0.15", "-39.9723, -94.8302, 16.9142, 0.29", "-40.1862, -95.4242, 16.806, 0.07", "-40.2332, -95.6239, 16.7652, 0.52", "-40.2716, -95.8732, 16.715, 0.88", "-40.3132, -96.2456, 16.6599, 0.88", "-40.3936, -96.9381, 16.6047, 0.07", "-40.4595, -97.4166, 16.5945, 0.07", "-40.5091, -97.707, 16.6017, 0.29", "-40.5647, -97.9883, 16.6122, 0.74", "-40.6845, -98.4814, 16.6335, 0.22", "-40.953, -99.4257, 16.6494, 0.22", "-41.0496, -99.6973, 16.6471, 0.59", "-41.1704, -99.9829, 16.6358, 1.11", "-41.2293, -100.113, 16.6252, 1.25", "-41.43, -100.547, 16.5693, 0.74", "-41.6725, -101.068, 16.4729, 0.22", "-41.8754, -101.516, 16.372, 0.15", "-42.0493, -101.924, 16.2726, 0.15", "-42.1694, -102.224, 16.1984, 0.15", "-42.3061, -102.573, 16.1181, 0.15", "-42.4287, -102.89, 16.0441, 0.37", "-42.6282, -103.404, 15.9317, 0.22", "-42.7691, -103.777, 15.8487, 0.74", "-42.894, -104.131, 15.7572, 1.25", "-43.0777, -104.684, 15.6092, 0.22", "-43.2709, -105.32, 15.4339, 0.15", "-43.3371, -105.565, 15.368, 0.74", "-43.4207, -105.929, 15.2798, 0.88", "-43.609, -106.889, 15.0469, 0.15", "-43.6968, -107.454, 14.9052, 0.15", "-43.7169, -107.646, 14.8567, 0.29", "-43.7399, -108.038, 14.7687, 0.37", "-43.7643, -108.473, 14.6718, 0.22" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-14.4194, -27.7122, -12.4026, 0.66", "-13.8038, -29.1399, -11.9226, 0.66", "-13.0946, -30.344, -11.6291, 0.29", "-12.7389, -30.932, -11.5172, 0.29", "-12.3154, -31.7081, -11.3943, 0.66", "-11.6424, -33.0879, -11.1423, 0.81", "-10.925, -34.6793, -10.8295, 0.37", "-10.328, -35.9142, -10.5902, 0.37", "-9.83983, -36.9686, -10.3549, 0.22", "-9.40315, -37.9913, -10.1193, 0.29", "-8.94884, -39.2667, -9.77301, 0.29", "-8.78992, -39.9124, -9.55245, 1.4", "-8.68814, -40.6345, -9.225, 2.58", "-8.61807, -41.9808, -8.44894, 2.58" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-14.4194, -27.7122, -12.4026, 0.59", "-14.1972, -27.9661, -12.9919, 0.59", "-13.7114, -28.3093, -13.9982, 0.59", "-13.2149, -28.5581, -14.9814, 0.59", "-12.9887, -28.6414, -15.4918, 0.59", "-12.5781, -28.77, -16.6199, 0.44", "-12.1676, -28.8985, -17.7477, 0.44", "-11.8202, -28.9684, -18.5368, 0.74", "-11.4883, -28.971, -19.1924, 0.74", "-11.0193, -28.8545, -20.1627, 0.22", "-10.7809, -28.6989, -20.8455, 0.37", "-4.84974, -30.514, -28.337, 0.37", "0.179603, -31.4795, -36.616, 0.37", "4.33093, -31.0392, -45.4082, 0.37", "7.39381, -30.5417, -54.633, 0.37", "9.67014, -29.9599, -64.0774, 0.37" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "178.047, -11.0035, 79.3573, 0.07", "178.245, -10.3008, 79.4272, 0.07", "178.401, -9.78013, 79.5205, 0.22", "178.683, -8.91884, 79.7062, 0.07", "178.801, -8.59243, 79.7886, 0.59", "178.91, -8.31314, 79.8627, 0.96", "179.417, -7.0606, 80.1982, 0.07", "179.707, -6.43776, 80.3697, 0.15", "180.115, -5.62745, 80.6045, 0.07", "180.542, -4.82927, 80.8161, 0.07", "180.726, -4.50674, 80.8906, 0.29", "180.961, -4.11965, 80.9593, 0.96", "181.568, -3.17621, 81.0833, 0.07", "181.949, -2.57138, 81.1315, 0.07", "182.255, -2.07516, 81.1764, 0.29", "182.64, -1.43184, 81.2423, 1.18", "183.337, -0.238651, 81.4013, 0.07", "183.712, 0.427162, 81.5145, 0.07", "183.95, 0.879301, 81.6058, 0.22", "184.408, 1.80132, 81.8647, 0.07", "184.551, 2.10589, 81.9792, 0.29", "184.732, 2.53163, 82.1502, 0.52", "185.109, 3.54458, 82.5575, 0.07", "185.189, 3.78118, 82.6595, 0.29", "185.654, 5.11776, 83.3771, 0.07", "185.865, 5.69143, 83.7592, 0.07", "186.055, 6.21492, 84.1279, 1.11", "186.358, 7.03902, 84.7598, 0.07", "186.641, 7.78691, 85.4133, 0.07", "187.058, 8.80919, 86.3989, 0.29", "187.329, 9.37882, 87.0685, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "178.047, -11.0035, 79.3573, 0.07", "179.069, -11.6184, 79.5389, 0.07", "179.705, -12.0013, 79.652, 0.15", "180.391, -12.4144, 79.7741, 1.4", "181.37, -13.0035, 79.9481, 0.52", "182.129, -13.4599, 80.0829, 0.88" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-140.464, 43.3053, 23.1612, 0.22", "-141.816, 43.1857, 22.7237, 0.22", "-142.212, 43.154, 22.5913, 0.44", "-142.815, 43.1041, 22.3795, 0.66", "-143.759, 43.0318, 22.0317, 0.15", "-144.675, 42.9821, 21.6729, 0.15", "-144.983, 42.9771, 21.5472, 0.52", "-145.561, 42.9759, 21.2689, 1.18", "-146.145, 42.9861, 20.9682, 0.37", "-146.672, 43.0209, 20.6837, 0.07", "-147.007, 43.0689, 20.513, 0.07", "-147.551, 43.1679, 20.2315, 0.15", "-148.239, 43.3011, 19.8525, 0.07", "-148.545, 43.3597, 19.6779, 0.59", "-148.842, 43.4049, 19.5071, 1.11", "-150.124, 43.5409, 18.7419, 0.15", "-150.832, 43.5922, 18.2906, 0.15", "-151.227, 43.6196, 18.0157, 0.59", "-151.524, 43.6367, 17.7759, 0.52", "-152.139, 43.6562, 17.218, 0.15", "-152.516, 43.6628, 16.8338, 0.15", "-152.828, 43.6538, 16.4323, 0.15", "-153.126, 43.6625, 15.9705, 0.66", "-153.665, 43.7002, 15.0343, 0.15", "-153.919, 43.7328, 14.5444, 0.37", "-154.183, 43.7897, 13.9796, 0.22", "-154.58, 43.8682, 13.0675, 0.22", "-154.801, 43.9022, 12.5183, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-140.464, 43.3053, 23.1612, 0.15", "-142.136, 43.6283, 24.2731, 0.15", "-142.65, 43.7079, 24.6026, 0.59", "-143.12, 43.7756, 24.8438, 0.81", "-143.872, 43.8843, 25.1742, 0.15", "-145.173, 44.0766, 25.6774, 0.15", "-145.483, 44.133, 25.7855, 0.59", "-145.901, 44.2078, 25.8935, 1.03", "-147.68, 44.5922, 26.2742, 0.07", "-148.225, 44.7252, 26.3753, 0.74", "-148.764, 44.8705, 26.4558, 0.74", "-150.291, 45.2733, 26.6532, 0.07", "-151.388, 45.5671, 26.8151, 0.07", "-152.546, 45.8845, 26.9931, 0.07", "-152.786, 45.948, 27.0371, 0.88", "-153.654, 46.1707, 27.1996, 1.4", "-155.277, 46.5729, 27.4941, 0.44", "-156.727, 46.9027, 27.7333, 0.07", "-157.479, 47.0859, 27.8618, 0.07", "-158.391, 47.3287, 28.0289, 0.07", "-159.197, 47.5734, 28.1785, 0.07", "-159.758, 47.7635, 28.2796, 0.81", "-161.46, 48.4007, 28.5681, 0.07", "-162.428, 48.7932, 28.728, 0.96", "-164.075, 49.508, 29.0771, 0.15", "-164.78, 49.8419, 29.2574, 0.15", "-165.351, 50.1292, 29.4324, 0.74", "-165.982, 50.4676, 29.6482, 1.18", "-167.084, 51.0906, 30.0796, 0.07", "-168.069, 51.5941, 30.4774, 0.15", "-168.856, 51.9496, 30.8047, 0.15", "-169.238, 52.0919, 30.9605, 0.15", "-169.781, 52.2641, 31.172, 0.81", "-170.69, 52.5019, 31.4661, 1.25", "-171.897, 52.7811, 31.7946, 0.15", "-172.663, 52.9492, 31.9679, 0.15", "-173.312, 53.0746, 32.1178, 0.66", "-173.9, 53.1829, 32.2568, 0.22", "-175.101, 53.4401, 32.5293, 0.15", "-175.915, 53.6536, 32.6893, 0.96", "-176.399, 53.8046, 32.7818, 1.11", "-177.099, 54.0531, 32.9018, 0.52", "-178.043, 54.4337, 33.0257, 0.15", "-178.689, 54.7305, 33.0589, 0.22", "-179.06, 54.9492, 33.0336, 0.15", "-179.395, 55.1893, 32.9559, 0.15", "-179.897, 55.6214, 32.7728, 0.37", "-180.141, 55.8471, 32.6763, 0.37", "-180.917, 56.5382, 32.4036, 0.15", "-181.729, 57.1946, 32.214, 0.22", "-182.255, 57.6171, 32.1305, 0.74", "-182.637, 57.9213, 32.0898, 1.18", "-184.056, 59.0771, 32.0429, 0.07", "-184.724, 59.6399, 32.0472, 0.81", "-185.837, 60.658, 32.096, 0.15", "-186.355, 61.1723, 32.1236, 0.59", "-186.769, 61.6826, 32.1611, 1.18", "-187.863, 63.2616, 32.3153, 0.15", "-188.268, 63.9338, 32.3989, 0.29", "-188.764, 64.7951, 32.5298, 0.52", "-189.093, 65.3596, 32.6248, 0.96", "-190.177, 67.0366, 32.9769, 0.22", "-190.659, 67.6916, 33.1802, 0.29", "-191.312, 68.4163, 33.5473, 0.15", "-192.008, 69.06, 34.026, 0.15", "-192.413, 69.3818, 34.3724, 0.88", "-192.761, 69.6739, 34.7984, 1.4", "-193.46, 70.4838, 36.2676, 0.22", "-193.64, 70.9947, 37.1928, 0.29", "-193.62, 71.3868, 37.9218, 0.15", "-193.442, 71.9171, 38.9521, 0.37", "-193.096, 72.6265, 40.3114, 0.15", "-192.725, 73.1909, 41.4029, 0.81", "-192.342, 73.6887, 42.3471, 0.15", "-191.97, 74.1883, 43.2188, 0.66", "-191.344, 75.1096, 44.682, 0.15", "-190.836, 75.9073, 45.8786, 0.74", "-190.262, 76.8839, 47.2705, 0.22", "-189.739, 77.8008, 48.5569, 0.22", "-189.068, 79.0215, 50.2738, 0.81", "-188.652, 79.806, 51.3724, 1.25", "-187.81, 81.4455, 53.5913, 0.15", "-187.254, 82.5629, 55.0248, 0.44", "-186.958, 83.1675, 55.7509, 0.44", "-186.753, 83.5776, 56.21, 0.44", "-186.62, 83.8381, 56.4865, 0.44", "-186.301, 84.5093, 57.1562, 0.44", "-185.953, 85.2772, 57.863, 0.44", "-185.715, 85.7221, 58.2782, 0.44", "-185.045, 86.762, 59.2699, 0.44", "-184.706, 87.1742, 59.7165, 0.44", "-183.564, 88.1827, 61.0837, 0.44", "-183.227, 88.3811, 61.4506, 0.07", "-182.481, 88.6939, 62.1931, 0.07", "-181.634, 88.9759, 62.9504, 0.37", "-180.581, 89.2805, 63.7437, 0.15", "-179.771, 89.5409, 64.2871, 1.47", "-178.563, 89.8909, 65.0314, 0.07", "-178.136, 90.0462, 65.3022, 0.22", "-177.047, 90.5521, 66.0259, 0.07", "-176.217, 91.0315, 66.5912, 0.44", "-175.366, 91.5632, 67.0908, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "37.9288, -194.776, 53.8057, 0.15", "39.4293, -196.356, 54.2681, 0.15", "39.744, -196.703, 54.3629, 0.29", "40.1241, -197.128, 54.4766, 0.66", "41.0578, -198.183, 54.7542, 0.15", "41.4863, -198.633, 54.8865, 0.29", "42.4007, -199.564, 55.1728, 0.07", "42.8697, -200.037, 55.3202, 0.07", "43.1696, -200.332, 55.4155, 0.74", "43.6691, -200.812, 55.5759, 1.47", "45.4048, -202.399, 56.1442, 0.22", "45.7987, -202.736, 56.2765, 0.81", "46.294, -203.11, 56.4497, 1.4" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "37.9288, -194.776, 53.8057, 0.22", "37.3684, -195.776, 54.7011, 0.22", "37.1329, -196.238, 55.0984, 0.29", "36.9135, -196.744, 55.5462, 0.15", "36.7085, -197.273, 56.0253, 0.37", "36.6364, -197.473, 56.2068, 0.52", "36.4632, -197.974, 56.6595, 0.22", "36.335, -198.389, 57.0398, 0.81", "36.1788, -198.971, 57.5588, 0.15", "36.1367, -199.138, 57.7102, 0.22", "36.07, -199.364, 57.9387, 0.52", "35.8842, -199.908, 58.5305, 0.15", "35.7088, -200.374, 59.0391, 0.88", "35.6203, -200.594, 59.2694, 0.96", "35.3333, -201.252, 59.9284, 0.22", "35.0466, -201.926, 60.5857, 1.33", "34.7366, -202.579, 61.2107, 0.22", "34.5737, -202.878, 61.4988, 0.07", "34.4397, -203.101, 61.7179, 0.15", "34.0495, -203.66, 62.2987, 0.15", "33.9114, -203.841, 62.4915, 1.18", "33.2076, -204.729, 63.4706, 0.22", "32.7145, -205.325, 64.2105, 0.22", "32.5024, -205.589, 64.5654, 0.37", "32.124, -206.089, 65.2695, 0.37", "31.9359, -206.358, 65.656, 1.25", "31.5372, -207.005, 66.606, 0.15", "31.343, -207.407, 67.1972, 0.15", "31.2577, -207.616, 67.488, 0.37", "31.0272, -208.267, 68.3292, 0.22", "30.9337, -208.589, 68.7167, 0.81", "30.6819, -209.384, 69.6112, 0.07", "30.6098, -209.6, 69.8228, 0.29", "30.4986, -209.915, 70.1067, 0.44", "30.4357, -210.078, 70.247, 0.22", "30.3823, -210.222, 70.3576, 0.37", "30.0046, -211.237, 71.0373, 0.15", "29.8006, -211.707, 71.2787, 1.47" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "0.582398, -99.2998, -9.25882, 0.59", "-0.811526, -98.9866, -11.322, 0.59", "-1.67975, -99.1205, -12.4417, 0.59", "-1.88135, -99.2276, -12.6905, 0.59", "-2.56553, -99.9499, -13.6928, 0.59", "-2.88912, -100.479, -14.2592, 0.59", "-3.28252, -101.123, -14.9478, 1.11", "-3.87476, -102.569, -15.9569, 0.15", "-4.18166, -103.547, -16.524, 1.03", "-4.58178, -105.288, -17.4481, 0.15", "-4.68954, -106.439, -17.976, 0.22", "-7.57643, -113.682, -25.5406, 0.22", "-11.2665, -121.843, -31.5588, 0.22", "-14.5714, -130.336, -37.2891, 0.22", "-17.8428, -139.7, -41.2807, 0.22" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "0.582398, -99.2998, -9.25882, 0.07", "0.359885, -101.839, -9.41951, 0.07", "0.268909, -103.106, -9.505, 0.07", "0.224748, -103.721, -9.5465, 0.81", "0.146547, -104.81, -9.61998, 1.62", "0.0152649, -106.639, -9.74335, 0.15", "-0.0400871, -107.41, -9.79536, 0.15", "-0.057557, -107.869, -9.8307, 0.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-43.7643, -108.473, 14.6718, 0.07", "-44.611, -108.823, 15.0614, 0.07", "-45.5075, -109.194, 15.4737, 0.07", "-46.0679, -109.425, 15.7315, 0.15", "-46.9829, -109.804, 16.1524, 0.07", "-47.6172, -110.066, 16.4442, 0.07", "-48.1566, -110.289, 16.6923, 0.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-43.7643, -108.473, 14.6718, 0.81", "-43.8046, -109.005, 14.4122, 0.81", "-43.8441, -109.777, 14.0447, 0.22", "-43.8757, -110.54, 13.7022, 0.22", "-43.9193, -111.069, 13.4611, 0.15", "-43.9918, -111.778, 13.1373, 0.15", "-43.9998, -111.857, 13.1029, 0.15", "-44.0346, -112.201, 12.939, 0.66", "-44.0714, -112.577, 12.7451, 1.03", "-44.1705, -113.559, 12.2507, 0.22", "-44.2453, -114.052, 12.0015, 0.66", "-44.3411, -114.591, 11.7421, 0.22", "-44.4574, -115.244, 11.4426, 0.15", "-44.5314, -115.666, 11.2603, 0.15", "-44.5719, -115.954, 11.149, 0.66", "-44.6189, -116.479, 10.9879, 0.29", "-44.6938, -117.425, 10.7558, 0.15", "-44.7338, -117.841, 10.6804, 0.15", "-44.7742, -118.197, 10.642, 0.15", "-44.8532, -118.741, 10.6025, 0.22", "-44.9418, -119.271, 10.5689, 0.59", "-45.0866, -119.987, 10.5311, 1.18", "-45.2462, -120.605, 10.5079, 1.7", "-45.4587, -121.322, 10.4796, 1.99", "-45.6901, -122.044, 10.4458, 1.25", "-46.0363, -123.062, 10.3905, 0.22", "-46.2524, -123.682, 10.3525, 0.37", "-46.5173, -124.397, 10.2889, 0.15", "-46.8607, -125.294, 10.1821, 0.22", "-47.0061, -125.646, 10.1321, 0.59", "-47.1807, -126.039, 10.0674, 1.11", "-47.4641, -126.615, 9.98399, 0.52", "-47.966, -127.595, 9.86127, 0.22", "-48.1707, -127.954, 9.82723, 0.88", "-48.5082, -128.501, 9.78715, 0.96", "-49.039, -129.335, 9.74439, 0.07", "-49.4607, -129.98, 9.72776, 0.07", "-49.5279, -130.082, 9.73008, 0.44", "-49.7466, -130.441, 9.78176, 0.52" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-8.61807, -41.9808, -8.44894, 0.44", "-10.0112, -43.4458, -8.25506, 0.44", "-10.6765, -44.14, -8.15291, 0.66", "-11.2818, -44.7928, -8.05924, 0.66", "-12.0827, -45.683, -7.94334, 0.44", "-12.5438, -46.2112, -7.88136, 0.81", "-12.895, -46.6318, -7.83635, 1.33", "-13.5647, -47.4807, -7.74423, 0.74", "-14.1363, -48.253, -7.66307, 0.37", "-14.4901, -48.7757, -7.61613, 0.22", "-14.8878, -49.4087, -7.58258, 0.96", "-15.164, -49.8815, -7.58916, 0.15", "-15.3627, -50.2625, -7.59676, 0.29", "-19.516, -56.2837, -7.74391, 0.29", "-24.6831, -61.4562, -6.71656, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-8.61807, -41.9808, -8.44894, 0.59", "-7.48028, -43.2558, -8.41963, 0.59", "-6.79435, -44.0917, -8.32267, 0.29", "-6.48443, -44.4694, -8.27886, 0.81", "-5.75238, -45.3616, -8.17538, 0.52", "-4.95746, -46.3304, -8.06301, 0.22", "-4.46769, -46.9272, -7.99378, 0.66", "-3.97604, -47.7517, -7.81916, 1.18" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "9.67014, -29.9599, -64.0774, 0.07", "15.591, -30.7087, -74.5351, 0.07", "21.5131, -29.4628, -84.94, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "9.67014, -29.9599, -64.0774, 0.81", "11.9084, -29.6066, -73.6049, 0.07", "13.8374, -28.3189, -83.1125, 0.07", "14.3788, -27.4704, -92.8465, 0.07", "15.2357, -28.0186, -102.587, 0.07", "15.9827, -28.2362, -112.349, 0.07", "17.7236, -28.213, -121.986, 0.07", "19.5234, -27.6843, -131.597, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "182.129, -13.4599, 80.0829, 0.15", "182.894, -13.7364, 79.7108, 0.15", "183.336, -13.8883, 79.4935, 0.66", "183.729, -14.0218, 79.2938, 0.66", "184.804, -14.3834, 78.7365, 0.07", "185.618, -14.6648, 78.2889, 0.07", "186.206, -14.869, 77.9621, 0.96", "187.381, -15.2773, 77.3233, 0.07", "187.779, -15.3971, 77.0985, 0.07", "188.015, -15.4568, 76.9592, 0.22", "188.58, -15.5732, 76.5879, 0.07", "189.093, -15.68, 76.2289, 0.66", "189.276, -15.7188, 76.0919, 0.66", "190.352, -15.9576, 75.217, 0.07", "190.784, -16.0613, 74.8406, 0.44", "191.43, -16.2354, 74.2507, 0.22", "191.836, -16.3649, 73.8724, 0.96", "192.609, -16.684, 73.1086, 0.22", "193.213, -17.0024, 72.5341, 0.07", "193.842, -17.4014, 71.9723, 0.74", "194.081, -17.5603, 71.7871, 1.03", "194.525, -17.8572, 71.496, 0.59", "195.308, -18.3821, 71.0449, 0.15", "196.287, -19.0481, 70.568, 0.15", "196.556, -19.217, 70.4396, 0.59", "197.597, -19.8129, 69.9564, 0.07", "197.924, -19.9681, 69.7942, 0.74", "198.271, -20.0947, 69.6012, 0.96", "199.438, -20.4019, 68.8933, 0.07", "200.353, -20.5848, 68.2843, 0.07", "200.709, -20.6407, 68.0307, 0.66", "201.485, -20.7026, 67.4249, 0.22", "202.177, -20.7304, 66.8556, 0.66", "202.485, -20.7175, 66.5813, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "182.129, -13.4599, 80.0829, 0.07", "184.108, -13.0348, 81.676, 0.07", "185.388, -12.775, 82.6886, 0.07", "186.214, -12.6163, 83.3183, 0.81", "187.14, -12.4542, 84.0304, 0.22", "188.131, -12.294, 84.7835, 0.96", "190.487, -11.971, 86.5432, 0.07", "191.127, -11.8906, 86.9862, 0.07", "191.737, -11.8155, 87.4218, 0.29", "192.792, -11.6957, 88.2342, 1.11", "193.509, -11.6319, 88.8061, 1.55", "195.359, -11.5092, 90.2667, 0.22", "196.877, -11.4297, 91.4802, 0.88", "198.519, -11.3378, 92.9218, 0.22", "199.377, -11.2832, 93.7773, 0.22", "200.309, -11.2001, 94.8642, 0.66", "200.574, -11.1667, 95.2397, 1.33", "202.118, -10.941, 97.839, 0.22", "203.164, -10.8054, 99.8556, 0.22", "204.08, -10.6874, 101.785, 0.66", "205.015, -10.5117, 103.842, 0.88", "205.985, -10.2571, 106.02, 0.37", "206.571, -10.0877, 107.395, 0.37", "207.103, -9.91752, 108.715, 0.81", "207.442, -9.81609, 109.483, 1.11", "208.174, -9.61949, 110.933, 0.22", "208.787, -9.4831, 111.909, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-24.6831, -61.4562, -6.71656, 0.07", "-31.9235, -69.1095, -7.65602, 0.07", "-38.8613, -77.0209, -8.51024, 0.07", "-46.4865, -84.3543, -9.13164, 0.07", "-53.4993, -91.9636, -11.4038, 0.07", "-60.1993, -99.6797, -14.1923, 0.07", "-68.009, -106.255, -17.3044, 0.07", "-75.9308, -112.541, -20.7827, 0.07", "-83.2648, -119.421, -24.3141, 0.07", "-90.8739, -126.541, -26.3951, 0.07", "-98.9321, -133.398, -27.4729, 0.07" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-24.6831, -61.4562, -6.71656, 0.81", "-28.9055, -68.273, -4.92804, 0.07", "-34.2499, -74.269, -2.90457, 0.07", "-38.9099, -80.9076, -1.51361, 0.07", "-43.6046, -87.6447, -1.20719, 0.07", "-48.7759, -93.9756, -0.0655763, 0.07", "-54.6243, -99.8444, -0.201695, 0.07", "-60.261, -105.766, 1.15312, 0.07" ],
    "parent" : "dend_90",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-3.97604, -47.7517, -7.81916, 0.15", "-4.93769, -49.6738, -7.53251, 0.15", "-5.16962, -50.1374, -7.46338, 0.59", "-5.57156, -50.9408, -7.34357, 1.33", "-5.99922, -51.7956, -7.21609, 0.22", "-11.8023, -62.3549, -7.32825, 0.22", "-17.2198, -72.9935, -5.69932, 0.22", "-22.8613, -83.6245, -6.07003, 0.22", "-28.9948, -93.8964, -4.36271, 0.22" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-3.97604, -47.7517, -7.81916, 0.44", "-3.60892, -49.0116, -7.72736, 0.44", "-3.26297, -50.2509, -7.62176, 0.15", "-3.01251, -51.1313, -7.52605, 0.15", "-2.86405, -51.6327, -7.46032, 0.88", "-2.59149, -52.5613, -7.33068, 1.92", "-1.72465, -55.5149, -6.91835, 0.22", "-1.48112, -56.3884, -6.78873, 0.66", "-1.23498, -57.2271, -6.6646, 1.33", "-1.02424, -57.9847, -6.56555, 2.06", "-0.796666, -58.829, -6.44053, 1.62", "1.74095, -68.9071, -3.03545, 1.62", "5.53914, -78.1093, 1.69534, 1.62" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "21.5131, -29.4628, -84.94, 0.07", "26.6549, -29.8243, -92.7266, 0.07", "31.5834, -29.8843, -100.657, 0.07", "35.9199, -30.7321, -108.882, 0.07", "40.0667, -33.6366, -116.685, 0.07", "46.0235, -35.4123, -123.643, 0.07", "52.38, -37.411, -130.169, 0.07", "58.8818, -40.2976, -136.172, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "21.5131, -29.4628, -84.94, 0.07", "26.4334, -29.0946, -93.9847, 0.07", "32.6147, -27.8085, -102.118, 0.07", "40.6485, -27.0965, -108.529, 0.07", "49.2647, -25.2259, -113.839, 0.07", "57.4278, -22.8957, -119.643, 0.07", "66.1249, -19.1099, -123.517, 0.07", "75.2378, -15.729, -126.805, 0.07", "83.9646, -12.5517, -131.176, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "19.5234, -27.6843, -131.597, 0.07", "20.8272, -27.381, -140.683, 0.07", "21.9985, -27.8209, -149.78, 0.07", "22.5165, -28.3928, -158.932, 0.07", "21.5389, -30.0106, -167.917, 0.07", "21.7651, -32.1019, -176.844, 0.07" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "19.5234, -27.6843, -131.597, 0.07", "22.4069, -27.5882, -142.356, 0.07", "26.475, -29.2717, -152.586, 0.07", "31.1334, -31.8781, -162.349, 0.07", "35.9029, -33.2071, -172.328, 0.07", "40.2793, -33.1929, -182.57, 0.07", "43.2815, -33.9777, -193.269, 0.07", "45.0487, -33.6346, -204.262, 0.07" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "208.787, -9.4831, 111.909, 0.29", "209.714, -9.88422, 113.287, 0.29", "210.309, -10.0438, 114.022, 0.52", "210.776, -10.0959, 114.553, 0.52", "211.279, -10.1213, 115.13, 0.52", "211.626, -10.1366, 115.529, 0.52", "211.92, -10.1469, 115.889, 0.52", "212.742, -10.1372, 116.867, 0.15", "213.564, -10.1398, 117.931, 0.15", "214.05, -10.1285, 118.535, 0.15", "214.424, -10.1187, 118.977, 0.59", "215.09, -10.1264, 119.757, 0.59", "215.456, -10.147, 120.21, 0.59", "216.055, -10.2044, 121.029, 0.81", "216.546, -10.2723, 121.68, 0.15", "217.078, -10.3458, 122.339, 0.37" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "208.787, -9.4831, 111.909, 0.15", "208.925, -8.88109, 112.335, 0.15", "209.059, -8.33348, 112.743, 0.15", "209.128, -8.0636, 112.946, 0.52", "209.219, -7.74917, 113.18, 0.88", "209.286, -7.51574, 113.351, 1.11", "209.505, -6.76116, 113.897, 0.07", "209.633, -6.29766, 114.234, 0.07", "209.714, -5.97289, 114.46, 1.11", "209.869, -5.33258, 114.906, 0.15", "209.923, -5.08337, 115.081, 0.15", "209.945, -4.97337, 115.159, 0.29", "210.002, -4.63299, 115.393, 0.15", "210.066, -4.24062, 115.65, 0.74", "210.128, -3.86194, 115.918, 0.07", "210.172, -3.60681, 116.111, 0.07", "210.228, -3.34902, 116.322, 0.07", "210.301, -3.02798, 116.573, 0.74", "210.434, -2.51628, 116.984, 0.07", "210.57, -2.07768, 117.37, 0.07", "210.685, -1.76703, 117.67, 0.44", "210.915, -1.21442, 118.234, 0.07", "211.07, -0.854981, 118.61, 0.59", "211.231, -0.493687, 118.995, 1.11", "211.546, 0.172003, 119.701, 0.15", "211.718, 0.522333, 120.054, 0.15", "211.886, 0.853014, 120.379, 0.96", "212.162, 1.39202, 120.889, 0.07", "212.25, 1.57309, 121.054, 0.22", "212.395, 1.88879, 121.294, 0.07", "212.526, 2.19087, 121.488, 0.22", "212.739, 2.66767, 121.784, 0.07", "212.834, 2.86409, 121.908, 0.22", "213.106, 3.37302, 122.237, 0.07", "213.307, 3.71646, 122.464, 0.96", "213.644, 4.24954, 122.82, 0.07", "213.924, 4.64787, 123.087, 0.07", "214.12, 4.90928, 123.261, 0.52", "214.284, 5.12285, 123.394, 0.29", "214.702, 5.65845, 123.696, 0.15", "214.953, 5.98596, 123.865, 0.59", "215.489, 6.64439, 124.173, 0.07", "215.823, 7.03699, 124.339, 0.07", "216.116, 7.3694, 124.469, 0.44", "216.833, 8.18451, 124.776, 0.07", "217.017, 8.39002, 124.847, 0.22", "217.65, 9.08039, 125.076, 0.07", "217.932, 9.37053, 125.166, 0.29", "218.217, 9.63859, 125.25, 0.52" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-28.9948, -93.8964, -4.36271, 0.07", "-33.9424, -102.779, -3.95015, 0.07", "-39.8356, -111.042, -2.61193, 0.07", "-44.6964, -119.95, -1.88648, 0.07", "-48.5311, -129.284, -2.70485, 0.07" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-28.9948, -93.8964, -4.36271, 0.81", "-33.8837, -102.677, -3.79341, 0.07", "-39.9107, -110.813, -3.94613, 0.07", "-46.4903, -118.534, -4.53611, 0.07", "-51.6186, -127.084, -6.06321, 0.07", "-54.4309, -136.662, -5.96324, 0.07", "-58.0904, -145.928, -4.92525, 0.07" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "5.53914, -78.1093, 1.69534, 0.22", "9.23561, -88.2944, 4.38673, 0.22", "12.2078, -98.7476, 6.81975, 0.22", "13.7268, -109.654, 8.11493, 0.22", "14.3231, -120.665, 9.13827, 0.22", "17.2413, -131.285, 10.6597, 0.22", "20.9712, -141.521, 13.0765, 0.22" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "5.53914, -78.1093, 1.69534, 0.07", "8.00073, -85.3572, 3.83666, 0.22", "10.2196, -92.3164, 7.04379, 0.22" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "58.8818, -40.2976, -136.172, 0.07", "64.6241, -41.9735, -144.11, 0.07", "68.9247, -45.0821, -152.476, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "58.8818, -40.2976, -136.172, 0.07", "64.1409, -41.7234, -143.326, 0.07", "70.0819, -44.1383, -149.599, 0.07", "77.1154, -45.9491, -154.886, 0.07", "82.972, -48.5015, -161.179, 0.07", "88.3047, -51.6593, -167.634, 0.07", "93.6661, -55.5156, -173.629, 0.07", "99.7225, -59.33, -178.95, 0.07", "105.419, -63.995, -183.906, 0.07", "110.438, -68.9492, -189.272, 0.07" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "83.9646, -12.5517, -131.176, 0.07", "93.3875, -12.8796, -134.643, 0.07", "103.113, -12.8697, -137.166, 0.07", "112.327, -13.472, -141.118, 0.07" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "83.9646, -12.5517, -131.176, 0.07", "90.3401, -9.30116, -137.71, 0.07", "96.6757, -6.54185, -144.527, 0.07", "103.961, -5.29879, -150.869, 0.07" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "21.7651, -32.1019, -176.844, 0.07", "22.4227, -32.0817, -186.044, 0.07", "22.2175, -31.9038, -195.259, 0.07", "21.2451, -31.2678, -204.392, 0.07", "19.0719, -30.3754, -213.27, 0.07" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "21.7651, -32.1019, -176.844, 0.07", "19.5256, -36.5948, -190.172, 0.07", "18.7047, -41.9231, -203.319, 0.07", "17.554, -45.6447, -217.028, 0.07", "16.6113, -49.6755, -230.658, 0.07" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-58.0904, -145.928, -4.92525, 0.07", "-61.4636, -155.052, -3.40578, 0.07", "-63.7237, -164.509, -2.10202, 0.07", "-65.6639, -173.597, 1.28956, 0.07" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-58.0904, -145.928, -4.92525, 0.07", "-64.5202, -155.505, -6.53887, 0.07", "-70.604, -165.086, -9.10299, 0.07", "-76.2298, -174.129, -13.8379, 0.07" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "10.2196, -92.3164, 7.04379, 0.07", "12.9455, -99.9429, 9.69442, 0.07", "14.3513, -107.999, 11.929, 0.07", "16.7068, -115.897, 13.987, 0.07", "18.9161, -124.024, 14.8818, 0.07", "21.8876, -131.677, 17.1575, 0.07" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "10.2196, -92.3164, 7.04379, 0.81", "12.4266, -100.143, 10.2764, 0.07", "14.5241, -108.172, 12.9852, 0.07", "15.9175, -116.565, 14.7571, 0.07", "16.5075, -125.078, 16.3295, 0.07", "18.2375, -133.577, 16.2209, 0.07", "21.4395, -141.569, 17.6613, 0.07" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "103.961, -5.29879, -150.869, 0.07", "112.662, -3.4671, -157.082, 0.07", "121.382, -0.908629, -162.975, 0.07", "130.516, 2.07761, -167.944, 0.07", "139.032, 6.14973, -173.149, 0.07", "148.143, 10.9965, -176.129, 0.07", "156.616, 16.7088, -179.287, 0.07", "165.208, 22.5267, -181.852, 0.07", "173.114, 28.8306, -185.226, 0.07" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "103.961, -5.29879, -150.869, 0.07", "110.388, -2.4432, -157.988, 0.07", "116.4, -0.34205, -165.739, 0.07", "123.591, 1.75266, -172.4, 0.07", "131.692, 3.81092, -177.914, 0.07", "139.156, 7.02511, -183.707, 0.07", "146.71, 11.3031, -188.513, 0.07", "154.798, 15.5699, -192.333, 0.07" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "19.0719, -30.3754, -213.27, 0.07", "16.1609, -31.6097, -220.966, 0.07", "12.4598, -31.9411, -228.37, 0.07" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "19.0719, -30.3754, -213.27, 0.07", "19.4942, -29.286, -222.771, 0.07", "21.5678, -28.1519, -232.053, 0.07" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "16.6113, -49.6755, -230.658, 0.07", "15.297, -53.6893, -243.188, 0.07", "14.5963, -56.7155, -256.052, 0.07" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "16.6113, -49.6755, -230.658, 0.07", "16.0089, -52.739, -238.676, 0.07", "14.0476, -57.2811, -245.644, 0.07" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "21.8876, -131.677, 17.1575, 0.07", "24.4249, -141.558, 20.0548, 0.07", "29.1233, -150.758, 22.7298, 0.07" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "21.8876, -131.677, 17.1575, 0.07", "24.6236, -139.306, 18.7403, 0.07", "25.9357, -146.906, 21.7152, 0.07", "28.6256, -153.453, 26.1717, 0.07" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "21.4395, -141.569, 17.6613, 0.07", "23.6735, -150.496, 19.3082, 0.07", "26.1035, -159.483, 18.4732, 0.07" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "21.4395, -141.569, 17.6613, 0.07", "23.3027, -149.343, 19.304, 0.07", "24.4047, -157.194, 21.1943, 0.07", "24.1088, -165.241, 22.2955, 0.07", "22.294, -173.171, 22.2956, 0.07", "18.9465, -180.594, 21.4826, 0.07", "16.3676, -188.308, 20.8733, 0.07", "13.8451, -195.804, 18.798, 0.07", "10.1814, -202.544, 15.7721, 0.07" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "29.1233, -150.758, 22.7298, 0.07", "31.8679, -157.571, 24.6899, 0.07", "34.5919, -164.521, 26.0419, 0.07", "38.0144, -171.237, 27.0381, 0.07", "41.7364, -177.662, 28.8154, 0.07", "45.3583, -183.827, 31.5699, 0.07", "49.0529, -190.023, 34.1435, 0.07" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "29.1233, -150.758, 22.7298, 0.07", "31.4678, -157.967, 25.242, 0.07", "34.0213, -165.086, 27.8346, 0.07", "36.9882, -172.283, 29.6143, 0.07", "38.6689, -179.945, 30.8261, 0.07", "40.7331, -187.569, 31.6369, 0.07", "43.1082, -195.133, 32.1525, 0.07" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "10.1814, -202.544, 15.7721, 0.07", "8.36203, -212.272, 15.45, 0.07", "4.50825, -221.374, 14.2298, 0.07" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "10.1814, -202.544, 15.7721, 0.07", "7.95313, -214.169, 15.5627, 0.07", "5.55428, -225.531, 13.1259, 0.07" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "49.0529, -190.023, 34.1435, 0.07", "56.9505, -193.196, 35.6027, 0.07" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "49.0529, -190.023, 34.1435, 0.07", "50.6146, -199.146, 36.6275, 0.07", "50.9029, -208.619, 37.7497, 0.07" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "43.1082, -195.133, 32.1525, 0.07", "46.6682, -201.789, 35.0652, 0.07", "50.2044, -208.661, 37.3882, 0.07" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "43.1082, -195.133, 32.1525, 0.07", "43.1061, -204.08, 28.8576, 0.07", "44.7806, -212.322, 24.2693, 0.07", "45.6107, -221.06, 20.5171, 0.07" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_94", "dend_43", "dend_30", "dend_25", "dend_18", "dend_11", "dend_0", "dend_98", "dend_95", "dend_45", "dend_44", "dend_34", "dend_31", "dend_27", "dend_26", "dend_24", "dend_19", "dend_17", "dend_12", "dend_6", "dend_1", "dend_100", "dend_99", "dend_97", "dend_96", "dend_93", "dend_46", "dend_42", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_23", "dend_20", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_66", "dend_47", "dend_41", "dend_36", "dend_22", "dend_21", "dend_16", "dend_15", "dend_10", "dend_9", "dend_4", "dend_3", "dend_90", "dend_67", "dend_57", "dend_48", "dend_40", "dend_37", "dend_92", "dend_91", "dend_85", "dend_68", "dend_63", "dend_58", "dend_50", "dend_49", "dend_39", "dend_38", "dend_89", "dend_86", "dend_84", "dend_69", "dend_65", "dend_64", "dend_62", "dend_59", "dend_54", "dend_51", "dend_88", "dend_87", "dend_75", "dend_70", "dend_61", "dend_60", "dend_56", "dend_55", "dend_53", "dend_52", "dend_77", "dend_76", "dend_74", "dend_71", "dend_81", "dend_78", "dend_73", "dend_72", "dend_83", "dend_82", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_94", "dend_43", "dend_30", "dend_25", "dend_18", "dend_11", "dend_0", "dend_98", "dend_95", "dend_45", "dend_44", "dend_34", "dend_31", "dend_27", "dend_26", "dend_24", "dend_19", "dend_17", "dend_12", "dend_6", "dend_1", "dend_100", "dend_99", "dend_97", "dend_96", "dend_93", "dend_46", "dend_42", "dend_35", "dend_33", "dend_32", "dend_29", "dend_28", "dend_23", "dend_20", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_66", "dend_47", "dend_41", "dend_36", "dend_22", "dend_21", "dend_16", "dend_15", "dend_10", "dend_9", "dend_4", "dend_3", "dend_90", "dend_67", "dend_57", "dend_48", "dend_40", "dend_37", "dend_92", "dend_91", "dend_85", "dend_68", "dend_63", "dend_58", "dend_50", "dend_49", "dend_39", "dend_38", "dend_89", "dend_86", "dend_84", "dend_69", "dend_65", "dend_64", "dend_62", "dend_59", "dend_54", "dend_51", "dend_88", "dend_87", "dend_75", "dend_70", "dend_61", "dend_60", "dend_56", "dend_55", "dend_53", "dend_52", "dend_77", "dend_76", "dend_74", "dend_71", "dend_81", "dend_78", "dend_73", "dend_72", "dend_83", "dend_82", "dend_80", "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_94", "dend_94", "dend_43", "dend_43", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_57", "dend_57", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_69", "dend_69", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_88", "dend_88", "dend_88", "dend_87", "dend_87", "dend_87", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_55", "dend_55", "dend_53", "dend_53", "dend_52", "dend_52", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_73", "dend_73", "dend_72", "dend_72", "dend_83", "dend_82", "dend_82", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_LBC_d19674cc92_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_94, id: dend_94, parent: soma_0
create dend_94
public dend_94
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_94
create dend_98
public dend_98
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_100, id: dend_100, parent: dend_98
create dend_100
public dend_100
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_95
create dend_97
public dend_97
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_93, id: dend_93, parent: dend_45
create dend_93
public dend_93
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_66, id: dend_66, parent: dend_46
create dend_66
public dend_66
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_90, id: dend_90, parent: dend_66
create dend_90
public dend_90
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_57, id: dend_57, parent: dend_47
create dend_57
public dend_57
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_92, id: dend_92, parent: dend_90
create dend_92
public dend_92
// Section: dend_91, id: dend_91, parent: dend_90
create dend_91
public dend_91
// Section: dend_85, id: dend_85, parent: dend_67
create dend_85
public dend_85
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_63, id: dend_63, parent: dend_57
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_89, id: dend_89, parent: dend_85
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_84, id: dend_84, parent: dend_68
create dend_84
public dend_84
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_88, id: dend_88, parent: dend_86
create dend_88
public dend_88
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_75, id: dend_75, parent: dend_69
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_81, id: dend_81, parent: dend_77
create dend_81
public dend_81
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_91
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_94, dend_94, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_69, dend_69, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_55, dend_55, dend_53, dend_53, dend_52, dend_52, dend_77, dend_77, dend_76, dend_76, dend_76, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_72, dend_72, dend_83, dend_82, dend_82, dend_80, dend_80, dend_79, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_94(0), soma_0(0.4999999039757195)
    connect dend_43(0), soma_0(0.4999999039757195)
    connect dend_30(0), soma_0(0.4999999039757195)
    connect dend_25(0), soma_0(0.4999999039757195)
    connect dend_18(0), soma_0(0.4999999039757195)
    connect dend_11(0), soma_0(0.4999999039757195)
    connect dend_0(0), soma_0(0.4999999039757195)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_100(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_93(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_66(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_90(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_57(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_92(0), dend_90(1.0)
    connect dend_91(0), dend_90(1.0)
    connect dend_85(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_63(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_89(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_84(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_88(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_75(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_81(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -9.18524, -4.81916, 0.0, 3.9822 ) }
    soma_0 { pt3dadd( -8.34327, -4.32353, 0.0, 6.87607 ) }
    soma_0 { pt3dadd( -7.5013, -3.82789, 0.0, 10.1189 ) }
    soma_0 { pt3dadd( -6.65933, -3.33226, 0.0, 12.2867 ) }
    soma_0 { pt3dadd( -5.81736, -2.83662, 0.0, 13.8376 ) }
    soma_0 { pt3dadd( -4.97539, -2.34099, 0.0, 14.8265 ) }
    soma_0 { pt3dadd( -4.13342, -1.84535, 0.0, 15.382 ) }
    soma_0 { pt3dadd( -3.29145, -1.34972, 0.0, 16.0094 ) }
    soma_0 { pt3dadd( -2.44948, -0.854082, 0.0, 16.562 ) }
    soma_0 { pt3dadd( -1.60751, -0.358447, 0.0, 16.8144 ) }
    soma_0 { pt3dadd( -0.765536, 0.137188, 0.0, 17.0145 ) }
    soma_0 { pt3dadd( 0.0764342, 0.632823, 0.0, 17.0541 ) }
    soma_0 { pt3dadd( 0.918405, 1.12846, 0.0, 16.8224 ) }
    soma_0 { pt3dadd( 1.76037, 1.62409, 0.0, 16.2232 ) }
    soma_0 { pt3dadd( 2.60235, 2.11973, 0.0, 15.3709 ) }
    soma_0 { pt3dadd( 3.44432, 2.61536, 0.0, 14.0738 ) }
    soma_0 { pt3dadd( 4.28629, 3.111, 0.0, 12.5479 ) }
    soma_0 { pt3dadd( 5.12826, 3.60663, 0.0, 11.1251 ) }
    soma_0 { pt3dadd( 5.97023, 4.10227, 0.0, 9.76121 ) }
    soma_0 { pt3dadd( 6.8122, 4.5979, 0.0, 7.58188 ) }
    soma_0 { pt3dadd( 7.65417, 5.09354, 0.0, 4.50057 ) }
    // Section: dend_94, id: dend_94, parent: soma_0 (entry count 21/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -4.45607, 3.18838, -15.4, 1.55 ) }
    dend_94 { pt3dadd( -4.45607, 3.18838, -15.4, 1.55 ) }
    dend_94 { pt3dadd( -5.50256, 3.5015, -15.4, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 24/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.93607, -6.74862, -8.99, 1.77 ) }
    dend_43 { pt3dadd( -4.93607, -6.74862, -8.99, 1.62 ) }
    dend_43 { pt3dadd( -5.56759, -7.33143, -9.17043, 1.77 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 27/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.77393, 3.07438, 4.25, 0.96 ) }
    dend_30 { pt3dadd( 8.77393, 3.07438, 4.25, 0.96 ) }
    dend_30 { pt3dadd( 10.0742, 3.1875, 4.06263, 0.81 ) }
    dend_30 { pt3dadd( 11.3447, 3.22619, 3.86892, 0.74 ) }
    dend_30 { pt3dadd( 12.7212, 3.26811, 3.65903, 0.66 ) }
    dend_30 { pt3dadd( 14.1079, 3.31034, 3.44758, 0.66 ) }
    dend_30 { pt3dadd( 15.3832, 3.34918, 3.25312, 1.25 ) }
    dend_30 { pt3dadd( 16.6933, 3.35399, 3.03448, 1.92 ) }
    dend_30 { pt3dadd( 17.5676, 3.29848, 2.85698, 1.77 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 36/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.38393, 6.58938, 4.97, 0.74 ) }
    dend_25 { pt3dadd( 5.06092, 6.90221, 5.34281, 0.74 ) }
    dend_25 { pt3dadd( 4.55769, 7.32152, 5.79576, 0.74 ) }
    dend_25 { pt3dadd( 3.72211, 7.94085, 6.48427, 0.74 ) }
    dend_25 { pt3dadd( 2.80618, 8.5845, 7.24334, 0.59 ) }
    dend_25 { pt3dadd( 1.8075, 9.28922, 8.09573, 0.74 ) }
    dend_25 { pt3dadd( 0.927377, 9.94106, 8.86225, 0.96 ) }
    dend_25 { pt3dadd( -0.100894, 10.7364, 9.74028, 0.52 ) }
    dend_25 { pt3dadd( -0.847086, 11.3588, 10.4022, 0.22 ) }
    dend_25 { pt3dadd( -1.42976, 11.9258, 11.0082, 0.22 ) }
    dend_25 { pt3dadd( -1.82697, 12.4262, 11.5341, 0.66 ) }
    dend_25 { pt3dadd( -2.09928, 12.8833, 12.0273, 0.66 ) }
    dend_25 { pt3dadd( -2.52731, 13.7908, 13.0303, 0.29 ) }
    dend_25 { pt3dadd( -2.73891, 14.4296, 13.7035, 0.29 ) }
    dend_25 { pt3dadd( -2.95188, 15.2984, 14.5631, 1.03 ) }
    dend_25 { pt3dadd( -3.09138, 15.9552, 15.1951, 2.51 ) }
    dend_25 { pt3dadd( -3.29288, 16.8773, 16.1233, 3.32 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 53/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -7.87607, 3.51138, 6.38, 0.52 ) }
    dend_18 { pt3dadd( -8.26195, 3.47763, 6.24326, 0.52 ) }
    dend_18 { pt3dadd( -8.98572, 3.42775, 5.96105, 0.52 ) }
    dend_18 { pt3dadd( -9.43523, 3.401, 5.78959, 0.74 ) }
    dend_18 { pt3dadd( -10.3466, 3.39298, 5.46014, 1.25 ) }
    dend_18 { pt3dadd( -11.0964, 3.44006, 5.20837, 1.33 ) }
    dend_18 { pt3dadd( -12.1933, 3.58727, 4.86827, 0.74 ) }
    dend_18 { pt3dadd( -13.2201, 3.81644, 4.57378, 0.59 ) }
    dend_18 { pt3dadd( -14.0472, 4.08317, 4.35247, 0.29 ) }
    dend_18 { pt3dadd( -14.8566, 4.44079, 4.15212, 0.44 ) }
    dend_18 { pt3dadd( -15.7599, 4.96581, 3.97157, 0.59 ) }
    dend_18 { pt3dadd( -16.5081, 5.4742, 3.84908, 0.44 ) }
    dend_18 { pt3dadd( -16.9304, 5.78265, 3.79639, 0.81 ) }
    dend_18 { pt3dadd( -17.4903, 6.18728, 3.74734, 1.62 ) }
    dend_18 { pt3dadd( -18.233, 6.65779, 3.6735, 1.77 ) }
    dend_18 { pt3dadd( -19.472, 7.21103, 3.53451, 0.37 ) }
    dend_18 { pt3dadd( -19.9992, 7.34783, 3.47924, 0.37 ) }
    dend_18 { pt3dadd( -20.522, 7.4164, 3.42536, 0.52 ) }
    dend_18 { pt3dadd( -21.1553, 7.44687, 3.36827, 0.59 ) }
    dend_18 { pt3dadd( -22.0267, 7.45728, 3.30779, 0.22 ) }
    dend_18 { pt3dadd( -22.5851, 7.4818, 3.24508, 0.29 ) }
    dend_18 { pt3dadd( -23.1675, 7.53243, 3.1692, 0.74 ) }
    dend_18 { pt3dadd( -23.9718, 7.64282, 3.06937, 1.77 ) }
    dend_18 { pt3dadd( -24.7762, 7.80031, 2.97705, 2.8 ) }
    dend_18 { pt3dadd( -25.9789, 8.09578, 2.85769, 3.17 ) }
    dend_18 { pt3dadd( -27.6914, 8.57832, 2.72328, 0.44 ) }
    dend_18 { pt3dadd( -28.8657, 8.94634, 2.6584, 0.29 ) }
    dend_18 { pt3dadd( -30.4941, 9.49063, 2.60253, 0.37 ) }
    dend_18 { pt3dadd( -31.4959, 9.85812, 2.6226, 0.37 ) }
    dend_18 { pt3dadd( -32.363, 10.199, 2.69009, 0.52 ) }
    dend_18 { pt3dadd( -32.8838, 10.4179, 2.76567, 1.03 ) }
    dend_18 { pt3dadd( -33.8516, 10.8399, 2.97973, 1.84 ) }
    dend_18 { pt3dadd( -34.6143, 11.1786, 3.16342, 1.4 ) }
    dend_18 { pt3dadd( -35.6673, 11.6175, 3.42194, 0.22 ) }
    dend_18 { pt3dadd( -36.5442, 11.9027, 3.62186, 0.59 ) }
    dend_18 { pt3dadd( -36.8274, 11.9765, 3.68164, 0.59 ) }
    dend_18 { pt3dadd( -38.1032, 12.2581, 3.92726, 0.44 ) }
    dend_18 { pt3dadd( -38.7226, 12.3635, 4.05084, 1.47 ) }
    dend_18 { pt3dadd( -39.4208, 12.4592, 4.19602, 2.51 ) }
    dend_18 { pt3dadd( -40.4509, 12.5686, 4.39587, 2.36 ) }
    dend_18 { pt3dadd( -42.277, 12.748, 4.76609, 0.15 ) }
    dend_18 { pt3dadd( -42.5786, 12.7685, 4.83153, 0.22 ) }
    dend_18 { pt3dadd( -43.5171, 12.7965, 5.04636, 0.22 ) }
    dend_18 { pt3dadd( -44.1258, 12.782, 5.16964, 0.22 ) }
    dend_18 { pt3dadd( -45.2675, 12.7025, 5.37953, 0.22 ) }
    dend_18 { pt3dadd( -45.6075, 12.6675, 5.43138, 0.96 ) }
    dend_18 { pt3dadd( -46.3809, 12.564, 5.52481, 2.06 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( -47.3446, 12.4547, 5.61992, 2.58 ) }
    dend_18 { pt3dadd( -49.3785, 12.3134, 5.75992, 0.22 ) }
    dend_18 { pt3dadd( -49.9683, 12.2934, 5.80522, 0.81 ) }
    dend_18 { pt3dadd( -50.6557, 12.2971, 5.8613, 1.77 ) }
    dend_18 { pt3dadd( -51.1612, 12.3214, 5.90184, 1.99 ) }
    dend_18 { pt3dadd( -52.5367, 12.4526, 6.00583, 0.44 ) }
    dend_18 { pt3dadd( -54.2021, 12.6435, 6.11931, 0.29 ) }
    dend_18 { pt3dadd( -54.7475, 12.7133, 6.15728, 0.29 ) }
    dend_18 { pt3dadd( -55.2439, 12.7722, 6.18786, 0.81 ) }
    dend_18 { pt3dadd( -55.9422, 12.8476, 6.23453, 1.99 ) }
    dend_18 { pt3dadd( -56.7751, 12.9197, 6.2928, 2.06 ) }
    dend_18 { pt3dadd( -58.4444, 13.0231, 6.40943, 0.15 ) }
    dend_18 { pt3dadd( -58.9101, 13.0334, 6.44039, 0.22 ) }
    dend_18 { pt3dadd( -59.3714, 13.0295, 6.46697, 0.15 ) }
    dend_18 { pt3dadd( -59.6574, 13.0265, 6.48625, 0.37 ) }
    dend_18 { pt3dadd( -60.0761, 13.026, 6.51695, 0.66 ) }
    dend_18 { pt3dadd( -60.9073, 13.0736, 6.58809, 0.37 ) }
    dend_18 { pt3dadd( -61.6833, 13.154, 6.62764, 0.22 ) }
    dend_18 { pt3dadd( -62.2945, 13.2188, 6.6413, 0.88 ) }
    dend_18 { pt3dadd( -63.1562, 13.3049, 6.64792, 1.99 ) }
    dend_18 { pt3dadd( -64.0455, 13.3893, 6.64368, 1.4 ) }
    dend_18 { pt3dadd( -65.436, 13.5101, 6.61858, 0.22 ) }
    dend_18 { pt3dadd( -66.4843, 13.6101, 6.59085, 0.22 ) }
    dend_18 { pt3dadd( -66.8353, 13.6545, 6.57922, 0.37 ) }
    dend_18 { pt3dadd( -67.3004, 13.7253, 6.56358, 0.81 ) }
    dend_18 { pt3dadd( -67.6113, 13.781, 6.56068, 1.11 ) }
    dend_18 { pt3dadd( -68.7425, 14.0372, 6.61404, 0.59 ) }
    dend_18 { pt3dadd( -69.4538, 14.2268, 6.70117, 0.15 ) }
    dend_18 { pt3dadd( -70.0001, 14.3997, 6.82576, 0.66 ) }
    dend_18 { pt3dadd( -70.5112, 14.5708, 6.95832, 0.66 ) }
    dend_18 { pt3dadd( -71.6066, 14.9729, 7.25779, 0.15 ) }
    dend_18 { pt3dadd( -72.2839, 15.2331, 7.44512, 0.88 ) }
    dend_18 { pt3dadd( -73.1835, 15.5858, 7.69462, 1.7 ) }
    dend_18 { pt3dadd( -74.9201, 16.2278, 8.13741, 0.22 ) }
    dend_18 { pt3dadd( -75.5577, 16.4528, 8.29238, 0.29 ) }
    dend_18 { pt3dadd( -76.454, 16.7636, 8.48919, 0.29 ) }
    dend_18 { pt3dadd( -77.066, 16.9648, 8.60023, 0.66 ) }
    dend_18 { pt3dadd( -77.5499, 17.111, 8.67437, 0.81 ) }
    dend_18 { pt3dadd( -78.5129, 17.3485, 8.82763, 0.29 ) }
    dend_18 { pt3dadd( -79.5863, 17.5231, 9.04825, 0.22 ) }
    dend_18 { pt3dadd( -80.0243, 17.5615, 9.16262, 1.03 ) }
    dend_18 { pt3dadd( -80.8244, 17.5765, 9.40374, 1.92 ) }
    dend_18 { pt3dadd( -81.4366, 17.5635, 9.61652, 1.92 ) }
    dend_18 { pt3dadd( -82.7474, 17.4902, 10.1153, 0.37 ) }
    dend_18 { pt3dadd( -83.9428, 17.3706, 10.5944, 0.29 ) }
    dend_18 { pt3dadd( -84.4902, 17.2889, 10.805, 0.22 ) }
    dend_18 { pt3dadd( -85.0635, 17.1838, 11.0223, 0.59 ) }
    dend_18 { pt3dadd( -85.8024, 17.0299, 11.2856, 0.22 ) }
    dend_18 { pt3dadd( -86.0539, 16.9722, 11.3629, 0.44 ) }
    dend_18 { pt3dadd( -86.7507, 16.7974, 11.5382, 0.96 ) }
    dend_18 { pt3dadd( -87.7432, 16.5545, 11.7401, 0.22 ) }
    dend_18 { pt3dadd( -88.7163, 16.3485, 11.9308, 0.22 ) }
    dend_18 { pt3dadd( -88.8505, 16.3197, 11.9547, 0.52 ) }
    dend_18 { pt3dadd( -89.2531, 16.2367, 12.0164, 1.03 ) }
    dend_18 { pt3dadd( -89.8782, 16.1274, 12.1119, 1.62 ) }
    dend_18 { pt3dadd( -90.6372, 16.0343, 12.226, 1.47 ) }
    dend_18 { pt3dadd( -91.886, 15.9671, 12.3975, 0.22 ) }
    dend_18 { pt3dadd( -92.4624, 15.9757, 12.4532, 0.22 ) }
    dend_18 { pt3dadd( -92.9406, 16.0166, 12.4945, 0.15 ) }
    dend_18 { pt3dadd( -93.2707, 16.078, 12.5185, 0.15 ) }
    dend_18 { pt3dadd( -93.5444, 16.156, 12.5666, 0.29 ) }
    dend_18 { pt3dadd( -93.9466, 16.3026, 12.6663, 0.29 ) }
    dend_18 { pt3dadd( -94.4423, 16.5064, 12.8207, 0.22 ) }
    dend_18 { pt3dadd( -95.0379, 16.7565, 13.0268, 1.25 ) }
    dend_18 { pt3dadd( -95.7139, 17.0243, 13.2613, 1.99 ) }
    dend_18 { pt3dadd( -97.4171, 17.6343, 13.8323, 0.29 ) }
    dend_18 { pt3dadd( -98.4646, 17.9858, 14.1723, 0.22 ) }
    dend_18 { pt3dadd( -98.9957, 18.1598, 14.3372, 0.66 ) }
    dend_18 { pt3dadd( -99.5991, 18.3602, 14.5152, 1.62 ) }
    dend_18 { pt3dadd( -100.638, 18.7561, 14.7745, 0.52 ) }
    dend_18 { pt3dadd( -101.733, 19.2407, 15.0113, 0.22 ) }
    dend_18 { pt3dadd( -102.081, 19.42, 15.0669, 0.59 ) }
    dend_18 { pt3dadd( -102.656, 19.7476, 15.1725, 1.25 ) }
    dend_18 { pt3dadd( -102.946, 19.9267, 15.2338, 1.25 ) }
    dend_18 { pt3dadd( -104.082, 20.6631, 15.5643, 0.15 ) }
    dend_18 { pt3dadd( -105.041, 21.3039, 15.9528, 0.15 ) }
    dend_18 { pt3dadd( -105.298, 21.4764, 16.085, 0.66 ) }
    dend_18 { pt3dadd( -105.813, 21.8055, 16.3947, 1.55 ) }
    dend_18 { pt3dadd( -106.284, 22.092, 16.7059, 0.96 ) }
    dend_18 { pt3dadd( -107.357, 22.716, 17.4744, 0.15 ) }
    dend_18 { pt3dadd( -108.116, 23.1583, 18.0735, 0.15 ) }
    dend_18 { pt3dadd( -108.559, 23.4506, 18.4497, 0.44 ) }
    dend_18 { pt3dadd( -109.147, 23.8772, 18.9652, 0.88 ) }
    dend_18 { pt3dadd( -109.486, 24.15, 19.2561, 0.44 ) }
    dend_18 { pt3dadd( -110.046, 24.6634, 19.6813, 0.15 ) }
    dend_18 { pt3dadd( -110.81, 25.4602, 20.1606, 0.74 ) }
    dend_18 { pt3dadd( -111.5, 26.2366, 20.407, 0.22 ) }
    dend_18 { pt3dadd( -111.75, 26.5288, 20.4487, 1.03 ) }
    dend_18 { pt3dadd( -112.187, 27.051, 20.4581, 1.99 ) }
    dend_18 { pt3dadd( -113.291, 28.4026, 20.3674, 0.15 ) }
    dend_18 { pt3dadd( -113.875, 29.1175, 20.2565, 1.25 ) }
    dend_18 { pt3dadd( -115.038, 30.5188, 19.9267, 0.07 ) }
    dend_18 { pt3dadd( -115.62, 31.203, 19.7258, 0.07 ) }
    dend_18 { pt3dadd( -116.192, 31.8774, 19.5217, 0.88 ) }
    dend_18 { pt3dadd( -116.635, 32.4057, 19.3571, 1.62 ) }
    dend_18 { pt3dadd( -116.925, 32.7661, 19.2338, 1.62 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 96/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.12393, -6.05512, 1.7, 0.88 ) }
    dend_11 { pt3dadd( 5.16243, -6.73775, 1.84782, 0.74 ) }
    dend_11 { pt3dadd( 5.1677, -7.37085, 1.99957, 0.88 ) }
    dend_11 { pt3dadd( 5.15737, -8.07978, 2.17274, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_11 { pt3dadd( 5.14218, -9.18056, 2.43394, 0.88 ) }
    dend_11 { pt3dadd( 5.12868, -10.5014, 2.72913, 0.74 ) }
    dend_11 { pt3dadd( 5.12063, -11.7524, 2.99371, 0.66 ) }
    dend_11 { pt3dadd( 5.11647, -12.8895, 3.20846, 0.96 ) }
    dend_11 { pt3dadd( 5.12814, -13.9946, 3.39469, 1.18 ) }
    dend_11 { pt3dadd( 5.1817, -15.029, 3.55397, 1.25 ) }
    dend_11 { pt3dadd( 5.38289, -16.3837, 3.7313, 0.81 ) }
    dend_11 { pt3dadd( 5.64983, -17.3912, 3.83053, 0.74 ) }
    dend_11 { pt3dadd( 6.08388, -18.6683, 3.93207, 0.52 ) }
    dend_11 { pt3dadd( 6.35155, -19.3457, 3.98296, 1.4 ) }
    dend_11 { pt3dadd( 6.76816, -20.3246, 4.07693, 2.43 ) }
    dend_11 { pt3dadd( 7.36505, -21.7018, 4.24131, 3.1 ) }
    dend_11 { pt3dadd( 8.14986, -23.4909, 4.50926, 0.22 ) }
    dend_11 { pt3dadd( 8.41392, -24.171, 4.6255, 0.22 ) }
    dend_11 { pt3dadd( 8.56073, -24.646, 4.7251, 0.74 ) }
    dend_11 { pt3dadd( 8.71691, -25.3175, 4.87066, 1.25 ) }
    dend_11 { pt3dadd( 8.80404, -25.8288, 4.98663, 1.7 ) }
    dend_11 { pt3dadd( 8.9312, -26.8292, 5.23875, 1.03 ) }
    dend_11 { pt3dadd( 9.16705, -28.1392, 5.60554, 0.52 ) }
    dend_11 { pt3dadd( 9.43531, -29.1044, 5.86508, 0.22 ) }
    dend_11 { pt3dadd( 9.58432, -29.5143, 5.96538, 0.22 ) }
    dend_11 { pt3dadd( 9.78146, -29.9342, 6.06769, 0.22 ) }
    dend_11 { pt3dadd( 9.89839, -30.1427, 6.11882, 0.22 ) }
    dend_11 { pt3dadd( 10.1867, -30.6468, 6.22277, 0.22 ) }
    dend_11 { pt3dadd( 10.5298, -31.293, 6.32734, 0.81 ) }
    dend_11 { pt3dadd( 10.7949, -31.9138, 6.39664, 1.7 ) }
    dend_11 { pt3dadd( 11.2411, -33.0561, 6.48374, 2.88 ) }
    dend_11 { pt3dadd( 11.6527, -34.1934, 6.54118, 2.06 ) }
    dend_11 { pt3dadd( 12.1675, -35.7275, 6.61368, 1.47 ) }
    dend_11 { pt3dadd( 12.5395, -36.923, 6.67619, 1.33 ) }
    dend_11 { pt3dadd( 12.9683, -38.3796, 6.75048, 0.22 ) }
    dend_11 { pt3dadd( 13.2072, -39.2556, 6.80183, 0.15 ) }
    dend_11 { pt3dadd( 13.4028, -40.0244, 6.8492, 0.29 ) }
    dend_11 { pt3dadd( 13.6571, -41.0045, 6.92513, 0.29 ) }
    dend_11 { pt3dadd( 13.8858, -41.8097, 6.9998, 1.03 ) }
    dend_11 { pt3dadd( 14.0548, -42.4102, 7.06098, 1.99 ) }
    dend_11 { pt3dadd( 14.3194, -43.4332, 7.16699, 2.21 ) }
    dend_11 { pt3dadd( 14.5722, -44.6222, 7.30983, 0.37 ) }
    dend_11 { pt3dadd( 14.7619, -45.5863, 7.42097, 0.15 ) }
    dend_11 { pt3dadd( 14.8307, -45.9784, 7.46005, 0.15 ) }
    dend_11 { pt3dadd( 14.963, -46.8054, 7.54135, 0.22 ) }
    dend_11 { pt3dadd( 15.1005, -47.6795, 7.63559, 0.37 ) }
    dend_11 { pt3dadd( 15.2222, -48.4675, 7.74172, 0.96 ) }
    dend_11 { pt3dadd( 15.3103, -49.1534, 7.84344, 1.7 ) }
    dend_11 { pt3dadd( 15.3894, -49.8464, 7.95166, 1.99 ) }
    dend_11 { pt3dadd( 15.4989, -50.7257, 8.08805, 1.7 ) }
    dend_11 { pt3dadd( 15.7997, -52.6736, 8.3637, 0.37 ) }
    dend_11 { pt3dadd( 15.9732, -53.727, 8.49975, 0.22 ) }
    dend_11 { pt3dadd( 16.0952, -54.3817, 8.56748, 0.22 ) }
    dend_11 { pt3dadd( 16.2289, -55.0039, 8.65121, 0.22 ) }
    dend_11 { pt3dadd( 16.414, -55.7567, 8.78997, 0.37 ) }
    dend_11 { pt3dadd( 16.5523, -56.2907, 8.91278, 1.03 ) }
    dend_11 { pt3dadd( 16.7075, -56.8548, 9.0666, 1.77 ) }
    dend_11 { pt3dadd( 16.977, -57.8053, 9.31896, 0.88 ) }
    dend_11 { pt3dadd( 17.3148, -58.9685, 9.66486, 0.29 ) }
    dend_11 { pt3dadd( 17.556, -59.7902, 9.93632, 0.52 ) }
    dend_11 { pt3dadd( 17.7291, -60.3678, 10.1473, 1.03 ) }
    dend_11 { pt3dadd( 18.0139, -61.3143, 10.5289, 1.55 ) }
    dend_11 { pt3dadd( 18.3578, -62.5043, 11.0272, 0.88 ) }
    dend_11 { pt3dadd( 18.6211, -63.4856, 11.4617, 0.22 ) }
    dend_11 { pt3dadd( 18.7404, -63.9637, 11.6617, 0.22 ) }
    dend_11 { pt3dadd( 18.8071, -64.2552, 11.7792, 0.22 ) }
    dend_11 { pt3dadd( 18.9248, -64.8429, 12.0284, 0.29 ) }
    dend_11 { pt3dadd( 19.0584, -65.6381, 12.3616, 0.52 ) }
    dend_11 { pt3dadd( 19.1103, -66.0465, 12.5201, 1.18 ) }
    dend_11 { pt3dadd( 19.1867, -66.8396, 12.7758, 1.33 ) }
    dend_11 { pt3dadd( 19.2765, -67.844, 13.0557, 0.59 ) }
    dend_11 { pt3dadd( 19.3788, -68.753, 13.2736, 0.22 ) }
    dend_11 { pt3dadd( 19.4624, -69.4322, 13.4211, 0.22 ) }
    dend_11 { pt3dadd( 19.532, -69.9139, 13.5204, 0.59 ) }
    dend_11 { pt3dadd( 19.6803, -70.8206, 13.6973, 0.29 ) }
    dend_11 { pt3dadd( 19.846, -71.6568, 13.8687, 1.18 ) }
    dend_11 { pt3dadd( 20.065, -72.5825, 14.0488, 2.88 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 73/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.70607, -8.66762, 3.08, 0.66 ) }
    dend_0 { pt3dadd( -1.70607, -8.66762, 3.08, 0.66 ) }
    dend_0 { pt3dadd( -1.44919, -9.68002, 3.08719, 0.66 ) }
    dend_0 { pt3dadd( -1.16064, -11.1481, 3.0195, 0.88 ) }
    dend_0 { pt3dadd( -0.954156, -12.6533, 2.9154, 1.03 ) }
    dend_0 { pt3dadd( -0.762572, -14.7223, 2.75244, 0.81 ) }
    dend_0 { pt3dadd( -0.674268, -16.6499, 2.59856, 0.96 ) }
    dend_0 { pt3dadd( -0.743298, -18.1439, 2.47686, 1.33 ) }
    dend_0 { pt3dadd( -1.08379, -19.9718, 2.36695, 1.77 ) }
    dend_0 { pt3dadd( -1.64151, -21.5692, 2.33926, 2.21 ) }
    dend_0 { pt3dadd( -2.12671, -22.5315, 2.37978, 2.58 ) }
    dend_0 { pt3dadd( -3.4471, -24.5387, 2.64397, 2.73 ) }
    dend_0 { pt3dadd( -4.97707, -26.4307, 3.11536, 0.81 ) }
    dend_0 { pt3dadd( -6.77628, -28.4385, 3.75702, 0.52 ) }
    dend_0 { pt3dadd( -8.10882, -29.7799, 4.32106, 0.59 ) }
    dend_0 { pt3dadd( -8.98711, -30.5701, 4.72127, 1.25 ) }
    dend_0 { pt3dadd( -10.2335, -31.5667, 5.33588, 2.73 ) }
    dend_0 { pt3dadd( -11.5978, -32.4668, 6.09548, 3.24 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 91/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.65417, 5.09354, 0.0, 0.684699 ) }
    axon_0 { pt3dadd( 20.5808, 12.7029, 0.0, 0.684699 ) }
    axon_0 { pt3dadd( 33.5074, 20.3123, 0.0, 0.684699 ) }
    // Section: dend_98, id: dend_98, parent: dend_94 (entry count 94/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -5.50256, 3.5015, -15.4, 0.74 ) }
    dend_98 { pt3dadd( -6.87674, 3.70283, -15.5099, 0.74 ) }
    dend_98 { pt3dadd( -7.51861, 3.8559, -15.6631, 0.81 ) }
    dend_98 { pt3dadd( -8.37567, 4.10572, -16.0108, 0.74 ) }
    dend_98 { pt3dadd( -9.24104, 4.35797, -16.362, 0.96 ) }
    dend_98 { pt3dadd( -10.1688, 4.62843, -16.7384, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_98 { pt3dadd( -11.2863, 4.95415, -17.1918, 1.03 ) }
    dend_98 { pt3dadd( -12.1914, 5.34292, -17.6729, 1.47 ) }
    dend_98 { pt3dadd( -13.2093, 5.86902, -18.3396, 2.29 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 3/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -5.50256, 3.5015, -15.4, 0.37 ) }
    dend_95 { pt3dadd( -5.19801, 4.05887, -15.3778, 0.37 ) }
    dend_95 { pt3dadd( -5.08211, 4.60841, -15.3536, 0.22 ) }
    dend_95 { pt3dadd( -5.06683, 5.05525, -15.3409, 0.22 ) }
    dend_95 { pt3dadd( -5.0731, 5.61056, -15.3529, 0.66 ) }
    dend_95 { pt3dadd( -5.0746, 5.76605, -15.3682, 0.66 ) }
    dend_95 { pt3dadd( -5.0786, 6.37409, -15.4521, 0.96 ) }
    dend_95 { pt3dadd( -5.10823, 6.9384, -15.5708, 0.52 ) }
    dend_95 { pt3dadd( -5.13449, 7.47863, -15.7231, 0.81 ) }
    dend_95 { pt3dadd( -5.11977, 7.91988, -15.8885, 0.88 ) }
    dend_95 { pt3dadd( -4.99379, 8.52318, -16.1797, 0.81 ) }
    dend_95 { pt3dadd( -4.82946, 8.9129, -16.4143, 0.22 ) }
    dend_95 { pt3dadd( -4.63634, 9.22602, -16.6354, 0.29 ) }
    dend_95 { pt3dadd( -4.40101, 9.57089, -16.908, 0.37 ) }
    dend_95 { pt3dadd( -4.2129, 9.91111, -17.1794, 0.15 ) }
    dend_95 { pt3dadd( -4.16191, 10.1702, -17.3593, 0.22 ) }
    dend_95 { pt3dadd( -4.18277, 10.49, -17.5574, 0.22 ) }
    dend_95 { pt3dadd( -4.242, 10.9566, -17.8198, 0.52 ) }
    dend_95 { pt3dadd( -4.28709, 11.425, -18.0509, 0.37 ) }
    dend_95 { pt3dadd( -4.31414, 11.9016, -18.2726, 0.44 ) }
    dend_95 { pt3dadd( -4.32495, 12.6671, -18.6052, 0.37 ) }
    dend_95 { pt3dadd( -4.30933, 12.9846, -18.7434, 0.37 ) }
    dend_95 { pt3dadd( -4.24325, 13.6596, -19.041, 0.52 ) }
    dend_95 { pt3dadd( -4.1618, 14.3097, -19.3184, 0.59 ) }
    dend_95 { pt3dadd( -4.05818, 15.1591, -19.6524, 0.44 ) }
    dend_95 { pt3dadd( -4.01955, 15.7635, -19.8653, 0.29 ) }
    dend_95 { pt3dadd( -4.03613, 16.318, -20.0236, 0.22 ) }
    dend_95 { pt3dadd( -4.12642, 16.7488, -20.1228, 0.88 ) }
    dend_95 { pt3dadd( -4.31084, 17.249, -20.2217, 0.29 ) }
    dend_95 { pt3dadd( -4.55553, 17.6949, -20.2885, 0.66 ) }
    dend_95 { pt3dadd( -5.03424, 18.3326, -20.3211, 0.22 ) }
    dend_95 { pt3dadd( -5.27595, 18.5918, -20.3145, 0.22 ) }
    dend_95 { pt3dadd( -5.63371, 18.9295, -20.2656, 0.59 ) }
    dend_95 { pt3dadd( -6.14329, 24.692, -20.863, 0.59 ) }
    dend_95 { pt3dadd( -6.01614, 30.2119, -22.6685, 0.59 ) }
    dend_95 { pt3dadd( -5.14608, 35.882, -23.4255, 0.59 ) }
    dend_95 { pt3dadd( -3.71237, 41.226, -25.1407, 0.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 40/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -5.56759, -7.33143, -9.17043, 1.03 ) }
    dend_45 { pt3dadd( -6.88517, -8.76947, -9.12031, 1.03 ) }
    dend_45 { pt3dadd( -7.72077, -9.78746, -9.02553, 0.88 ) }
    dend_45 { pt3dadd( -8.58128, -10.8358, -8.92793, 1.33 ) }
    dend_45 { pt3dadd( -9.36679, -11.7928, -8.83884, 1.92 ) }
    dend_45 { pt3dadd( -10.2961, -12.9249, -8.73343, 2.29 ) }
    dend_45 { pt3dadd( -11.601, -14.5147, -8.58542, 1.7 ) }
    dend_45 { pt3dadd( -12.4837, -15.7739, -8.43959, 1.47 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 48/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -5.56759, -7.33143, -9.17043, 0.37 ) }
    dend_44 { pt3dadd( -4.42675, -8.856, -9.08259, 0.37 ) }
    dend_44 { pt3dadd( -3.70828, -9.69227, -9.04804, 0.59 ) }
    dend_44 { pt3dadd( -3.12978, -10.2729, -9.06336, 0.52 ) }
    dend_44 { pt3dadd( -1.93496, -11.2606, -9.17567, 0.37 ) }
    dend_44 { pt3dadd( -0.535793, -12.092, -9.39258, 0.37 ) }
    dend_44 { pt3dadd( 0.568104, -12.6358, -9.63181, 0.37 ) }
    dend_44 { pt3dadd( 1.20751, -12.8724, -9.8113, 0.88 ) }
    dend_44 { pt3dadd( 2.49804, -13.2825, -10.2169, 1.4 ) }
    dend_44 { pt3dadd( 3.90007, -13.6798, -10.6744, 1.18 ) }
    dend_44 { pt3dadd( 6.73525, -14.5174, -11.6292, 0.37 ) }
    dend_44 { pt3dadd( 9.03402, -15.3129, -12.421, 0.22 ) }
    dend_44 { pt3dadd( 10.0816, -15.7538, -12.7661, 0.81 ) }
    dend_44 { pt3dadd( 11.4251, -16.4416, -13.1692, 1.92 ) }
    dend_44 { pt3dadd( 14.271, -18.3088, -13.9649, 0.59 ) }
    dend_44 { pt3dadd( 15.7231, -19.5641, -14.3732, 0.66 ) }
    dend_44 { pt3dadd( 16.5873, -20.5777, -14.6201, 0.52 ) }
    dend_44 { pt3dadd( 17.4897, -21.9856, -14.9114, 0.59 ) }
    dend_44 { pt3dadd( 18.0677, -23.1638, -15.1405, 0.44 ) }
    dend_44 { pt3dadd( 18.7008, -24.7732, -15.4927, 0.44 ) }
    dend_44 { pt3dadd( 19.0624, -25.8191, -15.7317, 0.44 ) }
    dend_44 { pt3dadd( 19.4243, -26.7283, -15.9787, 0.66 ) }
    dend_44 { pt3dadd( 20.3115, -28.5509, -16.567, 1.03 ) }
    dend_44 { pt3dadd( 21.4627, -30.4531, -17.2818, 0.74 ) }
    dend_44 { pt3dadd( 22.7323, -32.0125, -17.9323, 0.59 ) }
    dend_44 { pt3dadd( 23.8969, -33.1208, -18.418, 0.44 ) }
    dend_44 { pt3dadd( 24.8052, -33.8381, -18.7422, 0.81 ) }
    dend_44 { pt3dadd( 25.6655, -34.4081, -19.0186, 1.47 ) }
    dend_44 { pt3dadd( 26.5464, -34.908, -19.275, 1.47 ) }
    dend_44 { pt3dadd( 29.2005, -36.2234, -20.039, 0.29 ) }
    dend_44 { pt3dadd( 30.7377, -36.9297, -20.4518, 0.37 ) }
    dend_44 { pt3dadd( 31.9961, -37.488, -20.7857, 0.29 ) }
    dend_44 { pt3dadd( 32.7586, -37.8337, -20.9559, 0.15 ) }
    dend_44 { pt3dadd( 43.3049, -46.3225, -24.4346, 0.15 ) }
    dend_44 { pt3dadd( 54.3319, -54.0578, -28.349, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 83/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 17.5676, 3.29848, 2.85698, 0.88 ) }
    dend_34 { pt3dadd( 17.9615, 1.88955, 3.99836, 0.88 ) }
    dend_34 { pt3dadd( 18.157, 0.661859, 4.95338, 0.44 ) }
    dend_34 { pt3dadd( 18.2379, -0.0357475, 5.46789, 0.44 ) }
    dend_34 { pt3dadd( 18.3409, -0.858105, 6.04026, 0.59 ) }
    dend_34 { pt3dadd( 18.462, -1.59308, 6.52669, 0.44 ) }
    dend_34 { pt3dadd( 18.6906, -2.5082, 7.07034, 0.29 ) }
    dend_34 { pt3dadd( 18.8474, -2.96574, 7.30388, 0.29 ) }
    dend_34 { pt3dadd( 19.2724, -3.63387, 7.58138, 0.52 ) }
    dend_34 { pt3dadd( 19.7047, -4.05934, 7.74041, 0.96 ) }
    dend_34 { pt3dadd( 20.3685, -4.51967, 7.90331, 1.92 ) }
    dend_34 { pt3dadd( 21.8026, -5.24481, 8.12463, 2.8 ) }
    dend_34 { pt3dadd( 23.5714, -5.90052, 8.30339, 1.18 ) }
    dend_34 { pt3dadd( 24.9231, -6.32713, 8.42381, 0.29 ) }
    dend_34 { pt3dadd( 25.6521, -6.51299, 8.47631, 0.29 ) }
    dend_34 { pt3dadd( 26.3769, -6.65594, 8.52164, 0.74 ) }
    dend_34 { pt3dadd( 27.5266, -6.78457, 8.56842, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( 28.3958, -6.75403, 8.58259, 1.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 1/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 17.5676, 3.29848, 2.85698, 0.44 ) }
    dend_31 { pt3dadd( 18.5691, 3.46282, 1.97845, 0.44 ) }
    dend_31 { pt3dadd( 18.9069, 3.49093, 1.5564, 0.44 ) }
    dend_31 { pt3dadd( 19.2888, 3.43117, 1.05041, 0.44 ) }
    dend_31 { pt3dadd( 19.6724, 3.33756, 0.580621, 0.44 ) }
    dend_31 { pt3dadd( 20.2303, 3.20785, -0.106723, 0.52 ) }
    dend_31 { pt3dadd( 20.9328, 3.06575, -0.983346, 0.37 ) }
    dend_31 { pt3dadd( 22.0251, 2.89341, -2.37809, 1.4 ) }
    dend_31 { pt3dadd( 23.1134, 2.72785, -3.73274, 2.29 ) }
    dend_31 { pt3dadd( 24.5269, 2.46732, -5.27434, 0.22 ) }
    dend_31 { pt3dadd( 24.9093, 2.3756, -5.65751, 0.22 ) }
    dend_31 { pt3dadd( 25.2558, 2.26188, -5.97173, 0.22 ) }
    dend_31 { pt3dadd( 25.8585, 2.07104, -6.3707, 0.37 ) }
    dend_31 { pt3dadd( 26.3466, 1.92058, -6.61327, 0.37 ) }
    dend_31 { pt3dadd( 27.922, 1.45615, -7.2619, 0.22 ) }
    dend_31 { pt3dadd( 28.9868, 1.14915, -7.60685, 0.74 ) }
    dend_31 { pt3dadd( 30.3718, 0.766821, -8.00943, 2.36 ) }
    dend_31 { pt3dadd( 32.8651, 0.104299, -8.67327, 0.15 ) }
    dend_31 { pt3dadd( 33.4631, -0.0491215, -8.82579, 1.11 ) }
    dend_31 { pt3dadd( 33.855, -0.148597, -8.93543, 1.62 ) }
    dend_31 { pt3dadd( 35.8231, -0.639518, -9.56618, 0.15 ) }
    dend_31 { pt3dadd( 36.8831, -0.88464, -9.92725, 0.15 ) }
    dend_31 { pt3dadd( 37.2977, -0.9749, -10.0937, 0.59 ) }
    dend_31 { pt3dadd( 37.6676, -1.08505, -10.3039, 0.59 ) }
    dend_31 { pt3dadd( 38.801, -1.48857, -11.1266, 0.22 ) }
    dend_31 { pt3dadd( 39.5512, -1.78431, -11.7536, 0.37 ) }
    dend_31 { pt3dadd( 39.962, -1.96071, -12.1581, 0.59 ) }
    dend_31 { pt3dadd( 40.3463, -2.09478, -12.5205, 0.22 ) }
    dend_31 { pt3dadd( 41.1627, -2.2978, -13.1877, 0.15 ) }
    dend_31 { pt3dadd( 42.1041, -2.48123, -13.8863, 0.15 ) }
    dend_31 { pt3dadd( 42.6975, -2.56616, -14.2609, 0.66 ) }
    dend_31 { pt3dadd( 43.2954, -2.65111, -14.6113, 1.47 ) }
    dend_31 { pt3dadd( 44.251, -2.81029, -15.1962, 1.11 ) }
    dend_31 { pt3dadd( 45.853, -3.05032, -16.1941, 0.22 ) }
    dend_31 { pt3dadd( 53.8897, -7.42151, -23.0914, 0.22 ) }
    dend_31 { pt3dadd( 62.5389, -11.4243, -29.4636, 0.22 ) }
    dend_31 { pt3dadd( 71.3405, -15.9831, -35.1889, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -3.29288, 16.8773, 16.1233, 0.29 ) }
    dend_27 { pt3dadd( -4.97471, 17.5094, 17.9133, 0.29 ) }
    dend_27 { pt3dadd( -6.14522, 18.0587, 19.1831, 0.15 ) }
    dend_27 { pt3dadd( -6.68619, 18.3787, 19.8256, 0.96 ) }
    dend_27 { pt3dadd( -7.24066, 18.7824, 20.5526, 2.06 ) }
    dend_27 { pt3dadd( -8.44941, 19.8662, 22.3144, 0.22 ) }
    dend_27 { pt3dadd( -8.76257, 20.26, 22.8754, 0.37 ) }
    dend_27 { pt3dadd( -8.89399, 20.5833, 23.2618, 0.37 ) }
    dend_27 { pt3dadd( -9.07295, 21.3287, 24.0914, 0.29 ) }
    dend_27 { pt3dadd( -9.19848, 22.1432, 24.9711, 1.99 ) }
    dend_27 { pt3dadd( -9.23932, 22.7157, 25.5851, 2.06 ) }
    dend_27 { pt3dadd( -9.28986, 24.2993, 27.336, 0.15 ) }
    dend_27 { pt3dadd( -9.35223, 25.4128, 28.588, 0.15 ) }
    dend_27 { pt3dadd( -9.40396, 26.003, 29.256, 1.18 ) }
    dend_27 { pt3dadd( -9.45773, 26.4981, 29.8088, 2.14 ) }
    dend_27 { pt3dadd( -9.63556, 27.9292, 31.4311, 0.15 ) }
    dend_27 { pt3dadd( -9.77222, 28.7141, 32.3224, 0.44 ) }
    dend_27 { pt3dadd( -9.95403, 29.4854, 33.2081, 0.15 ) }
    dend_27 { pt3dadd( -10.1324, 30.1797, 34.0122, 0.29 ) }
    dend_27 { pt3dadd( -10.2896, 30.7778, 34.7598, 0.44 ) }
    dend_27 { pt3dadd( -10.4555, 31.4079, 35.6126, 1.03 ) }
    dend_27 { pt3dadd( -10.5723, 31.8535, 36.2612, 1.7 ) }
    dend_27 { pt3dadd( -10.8339, 33.0562, 38.1294, 0.15 ) }
    dend_27 { pt3dadd( -10.9337, 33.6303, 39.0915, 0.22 ) }
    dend_27 { pt3dadd( -10.9933, 34.3698, 40.3734, 0.15 ) }
    dend_27 { pt3dadd( -11.0013, 34.9135, 41.3528, 0.52 ) }
    dend_27 { pt3dadd( -10.9791, 35.5342, 42.5483, 0.88 ) }
    dend_27 { pt3dadd( -10.914, 36.2895, 44.1565, 1.25 ) }
    dend_27 { pt3dadd( -10.8599, 36.7581, 45.2119, 1.62 ) }
    dend_27 { pt3dadd( -10.7669, 37.7291, 47.4242, 0.15 ) }
    dend_27 { pt3dadd( -10.7547, 38.1689, 48.4459, 0.22 ) }
    dend_27 { pt3dadd( -10.7908, 38.7859, 49.8803, 0.22 ) }
    dend_27 { pt3dadd( -10.839, 39.1569, 50.721, 0.37 ) }
    dend_27 { pt3dadd( -10.9135, 39.6164, 51.7044, 0.88 ) }
    dend_27 { pt3dadd( -10.9765, 39.9318, 52.37, 1.4 ) }
    dend_27 { pt3dadd( -11.2223, 40.883, 54.3722, 0.37 ) }
    dend_27 { pt3dadd( -11.4422, 41.7873, 56.1106, 0.22 ) }
    dend_27 { pt3dadd( -11.5916, 42.4649, 57.2821, 0.88 ) }
    dend_27 { pt3dadd( -11.715, 43.0345, 58.217, 1.7 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 77/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -3.29288, 16.8773, 16.1233, 0.22 ) }
    dend_26 { pt3dadd( -2.85717, 17.5679, 15.5824, 0.22 ) }
    dend_26 { pt3dadd( -2.44185, 18.2683, 15.0841, 0.15 ) }
    dend_26 { pt3dadd( -2.19334, 18.6847, 14.8299, 0.15 ) }
    dend_26 { pt3dadd( -1.92113, 19.1352, 14.5837, 0.44 ) }
    dend_26 { pt3dadd( -1.47018, 19.874, 14.2194, 0.15 ) }
    dend_26 { pt3dadd( -1.20554, 20.2996, 14.0285, 0.66 ) }
    dend_26 { pt3dadd( -0.957646, 20.7083, 13.8808, 1.7 ) }
    dend_26 { pt3dadd( -0.557352, 21.3522, 13.6993, 0.22 ) }
    dend_26 { pt3dadd( -0.154202, 21.9865, 13.5354, 0.22 ) }
    dend_26 { pt3dadd( 0.0771502, 22.349, 13.4429, 0.44 ) }
    dend_26 { pt3dadd( 0.300579, 22.6967, 13.3682, 0.81 ) }
    dend_26 { pt3dadd( 0.486431, 22.9919, 13.3045, 0.37 ) }
    dend_26 { pt3dadd( 0.955652, 23.7935, 13.1167, 0.22 ) }
    dend_26 { pt3dadd( 1.14219, 24.1576, 13.0287, 0.59 ) }
    dend_26 { pt3dadd( 1.26309, 24.419, 12.9711, 1.18 ) }
    dend_26 { pt3dadd( 1.47631, 24.9454, 12.8957, 1.11 ) }
    dend_26 { pt3dadd( 1.92812, 26.1622, 12.7877, 0.22 ) }
    dend_26 { pt3dadd( 2.09372, 26.6339, 12.7693, 0.66 ) }
    dend_26 { pt3dadd( 2.27155, 27.1459, 12.776, 1.7 ) }
    dend_26 { pt3dadd( 2.43372, 27.6232, 12.7945, 1.62 ) }
    dend_26 { pt3dadd( 3.05445, 29.4701, 12.9015, 0.15 ) }
    dend_26 { pt3dadd( 3.16309, 29.7978, 12.9291, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 3.29185, 30.1701, 12.972, 0.22 ) }
    dend_26 { pt3dadd( 3.43799, 30.5595, 13.016, 0.07 ) }
    dend_26 { pt3dadd( 3.63477, 31.0541, 13.0667, 0.07 ) }
    dend_26 { pt3dadd( 3.7671, 31.3788, 13.092, 0.37 ) }
    dend_26 { pt3dadd( 3.93819, 31.7612, 13.1067, 0.22 ) }
    dend_26 { pt3dadd( 4.32895, 32.5908, 13.1378, 0.15 ) }
    dend_26 { pt3dadd( 4.56949, 33.082, 13.153, 0.44 ) }
    dend_26 { pt3dadd( 4.82616, 33.5908, 13.1671, 0.81 ) }
    dend_26 { pt3dadd( 5.18359, 34.2593, 13.1821, 1.84 ) }
    dend_26 { pt3dadd( 5.91922, 35.6224, 13.2242, 0.07 ) }
    dend_26 { pt3dadd( 6.16845, 36.0835, 13.2476, 0.29 ) }
    dend_26 { pt3dadd( 6.66169, 36.9969, 13.3123, 0.07 ) }
    dend_26 { pt3dadd( 6.79648, 37.2491, 13.3366, 0.66 ) }
    dend_26 { pt3dadd( 7.02501, 37.6865, 13.3931, 1.33 ) }
    dend_26 { pt3dadd( 7.51731, 38.6778, 13.5643, 0.07 ) }
    dend_26 { pt3dadd( 7.73867, 39.167, 13.6729, 0.07 ) }
    dend_26 { pt3dadd( 7.83193, 39.3865, 13.7279, 0.22 ) }
    dend_26 { pt3dadd( 8.00357, 39.8082, 13.8482, 0.74 ) }
    dend_26 { pt3dadd( 8.12682, 40.1202, 13.9404, 1.55 ) }
    dend_26 { pt3dadd( 8.60006, 41.3506, 14.3208, 0.07 ) }
    dend_26 { pt3dadd( 8.71065, 41.6245, 14.4046, 0.22 ) }
    dend_26 { pt3dadd( 8.89907, 42.0835, 14.5361, 0.07 ) }
    dend_26 { pt3dadd( 9.09731, 42.5583, 14.6671, 1.03 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -116.925, 32.7661, 19.2338, 0.15 ) }
    dend_24 { pt3dadd( -117.445, 34.8943, 19.0055, 0.15 ) }
    dend_24 { pt3dadd( -117.72, 36.0151, 18.8853, 0.66 ) }
    dend_24 { pt3dadd( -117.855, 36.5689, 18.8259, 0.66 ) }
    dend_24 { pt3dadd( -118.208, 38.0083, 18.6715, 0.07 ) }
    dend_24 { pt3dadd( -118.376, 38.6952, 18.5978, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 29/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -116.925, 32.7661, 19.2338, 0.07 ) }
    dend_19 { pt3dadd( -117.925, 33.5073, 18.8994, 0.07 ) }
    dend_19 { pt3dadd( -118.784, 34.1407, 18.6683, 0.07 ) }
    dend_19 { pt3dadd( -119.284, 34.4942, 18.5866, 0.52 ) }
    dend_19 { pt3dadd( -119.84, 34.8886, 18.5363, 1.11 ) }
    dend_19 { pt3dadd( -121.497, 36.1259, 18.4739, 0.07 ) }
    dend_19 { pt3dadd( -121.828, 36.3883, 18.4725, 0.07 ) }
    dend_19 { pt3dadd( -122.391, 36.8897, 18.5513, 0.52 ) }
    dend_19 { pt3dadd( -123.156, 37.6222, 18.7414, 0.15 ) }
    dend_19 { pt3dadd( -123.656, 38.1316, 18.8983, 0.22 ) }
    dend_19 { pt3dadd( -124.084, 38.5829, 19.0551, 0.59 ) }
    dend_19 { pt3dadd( -124.452, 38.9524, 19.2011, 0.59 ) }
    dend_19 { pt3dadd( -125.19, 39.6259, 19.4975, 0.15 ) }
    dend_19 { pt3dadd( -125.601, 39.944, 19.6495, 0.22 ) }
    dend_19 { pt3dadd( -126.095, 40.254, 19.8023, 0.66 ) }
    dend_19 { pt3dadd( -126.57, 40.5017, 19.9318, 1.62 ) }
    dend_19 { pt3dadd( -127.257, 40.8238, 20.1178, 1.62 ) }
    dend_19 { pt3dadd( -128.696, 41.485, 20.4985, 0.22 ) }
    dend_19 { pt3dadd( -129.478, 41.8215, 20.6988, 0.22 ) }
    dend_19 { pt3dadd( -130.155, 42.1094, 20.8752, 0.22 ) }
    dend_19 { pt3dadd( -130.9, 42.431, 21.0675, 0.22 ) }
    dend_19 { pt3dadd( -131.771, 42.8296, 21.3034, 0.22 ) }
    dend_19 { pt3dadd( -132.559, 43.2514, 21.5166, 1.77 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 20.065, -72.5825, 14.0488, 0.22 ) }
    dend_17 { pt3dadd( 21.2952, -74.352, 15.0486, 0.22 ) }
    dend_17 { pt3dadd( 22.3769, -75.9837, 15.9836, 0.22 ) }
    dend_17 { pt3dadd( 22.7225, -76.5611, 16.3119, 0.66 ) }
    dend_17 { pt3dadd( 23.0771, -77.2011, 16.6665, 0.88 ) }
    dend_17 { pt3dadd( 23.4906, -78.0732, 17.1324, 0.22 ) }
    dend_17 { pt3dadd( 23.8858, -79.0104, 17.6154, 0.07 ) }
    dend_17 { pt3dadd( 24.098, -79.7088, 17.9413, 0.15 ) }
    dend_17 { pt3dadd( 24.3134, -80.6014, 18.335, 0.07 ) }
    dend_17 { pt3dadd( 24.4372, -81.1859, 18.601, 0.15 ) }
    dend_17 { pt3dadd( 24.7061, -82.6647, 19.2738, 0.07 ) }
    dend_17 { pt3dadd( 24.801, -83.2829, 19.5301, 0.52 ) }
    dend_17 { pt3dadd( 24.8847, -84.0124, 19.7918, 0.88 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 65/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 20.065, -72.5825, 14.0488, 2.8 ) }
    dend_12 { pt3dadd( 20.6612, -73.583, 14.2176, 2.8 ) }
    dend_12 { pt3dadd( 21.4299, -74.9371, 14.4888, 0.37 ) }
    dend_12 { pt3dadd( 21.8263, -75.7013, 14.6508, 0.22 ) }
    dend_12 { pt3dadd( 22.3503, -76.8287, 14.8819, 0.22 ) }
    dend_12 { pt3dadd( 22.6461, -77.5726, 15.0439, 0.22 ) }
    dend_12 { pt3dadd( 22.882, -78.2503, 15.1998, 0.29 ) }
    dend_12 { pt3dadd( 23.033, -78.7892, 15.3366, 0.88 ) }
    dend_12 { pt3dadd( 23.2308, -79.6327, 15.5763, 0.96 ) }
    dend_12 { pt3dadd( 23.3954, -80.4156, 15.7972, 0.52 ) }
    dend_12 { pt3dadd( 23.6424, -81.699, 16.1431, 0.37 ) }
    dend_12 { pt3dadd( 23.8046, -82.479, 16.3313, 0.81 ) }
    dend_12 { pt3dadd( 23.9807, -83.1525, 16.502, 0.44 ) }
    dend_12 { pt3dadd( 24.291, -84.1705, 16.7991, 0.29 ) }
    dend_12 { pt3dadd( 24.5095, -84.8318, 17.0267, 0.88 ) }
    dend_12 { pt3dadd( 24.7163, -85.4585, 17.277, 1.92 ) }
    dend_12 { pt3dadd( 24.9973, -86.3725, 17.662, 2.06 ) }
    dend_12 { pt3dadd( 25.405, -87.8209, 18.2781, 0.29 ) }
    dend_12 { pt3dadd( 25.658, -88.8543, 18.7172, 0.37 ) }
    dend_12 { pt3dadd( 25.8639, -89.7655, 19.0731, 0.29 ) }
    dend_12 { pt3dadd( 26.0451, -90.5603, 19.3585, 0.37 ) }
    dend_12 { pt3dadd( 26.3293, -91.716, 19.6802, 0.37 ) }
    dend_12 { pt3dadd( 26.6203, -92.8782, 19.8967, 0.29 ) }
    dend_12 { pt3dadd( 26.7292, -93.3147, 19.916, 0.88 ) }
    dend_12 { pt3dadd( 26.9987, -94.2937, 19.8329, 1.84 ) }
    dend_12 { pt3dadd( 27.1768, -94.8697, 19.7275, 2.06 ) }
    dend_12 { pt3dadd( 27.7064, -96.3952, 19.3241, 0.29 ) }
    dend_12 { pt3dadd( 27.9515, -97.0642, 19.1112, 0.37 ) }
    dend_12 { pt3dadd( 28.1974, -97.7281, 18.8876, 0.22 ) }
    dend_12 { pt3dadd( 28.3892, -98.2188, 18.7302, 0.22 ) }
    dend_12 { pt3dadd( 28.6412, -98.8349, 18.5653, 0.37 ) }
    dend_12 { pt3dadd( 29.0052, -99.6195, 18.4135, 0.29 ) }
    dend_12 { pt3dadd( 29.1501, -99.9139, 18.3834, 1.03 ) }
    dend_12 { pt3dadd( 29.4451, -100.497, 18.3691, 1.62 ) }
    dend_12 { pt3dadd( 29.7134, -101.034, 18.3912, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_12 { pt3dadd( 30.241, -102.104, 18.4779, 0.81 ) }
    dend_12 { pt3dadd( 30.7206, -103.116, 18.5945, 0.22 ) }
    dend_12 { pt3dadd( 31.1779, -104.109, 18.7872, 0.22 ) }
    dend_12 { pt3dadd( 31.6283, -105.137, 19.0396, 0.22 ) }
    dend_12 { pt3dadd( 31.7675, -105.474, 19.1374, 1.03 ) }
    dend_12 { pt3dadd( 32.0098, -106.09, 19.3414, 2.14 ) }
    dend_12 { pt3dadd( 32.35, -107.006, 19.6745, 1.4 ) }
    dend_12 { pt3dadd( 32.8573, -108.357, 20.2126, 0.22 ) }
    dend_12 { pt3dadd( 33.1696, -109.165, 20.552, 0.29 ) }
    dend_12 { pt3dadd( 33.4115, -109.786, 20.8174, 0.66 ) }
    dend_12 { pt3dadd( 33.6038, -110.254, 21.0052, 0.66 ) }
    dend_12 { pt3dadd( 33.9313, -110.98, 21.2746, 0.22 ) }
    dend_12 { pt3dadd( 34.3893, -111.876, 21.585, 0.22 ) }
    dend_12 { pt3dadd( 34.6085, -112.274, 21.7106, 0.74 ) }
    dend_12 { pt3dadd( 34.922, -112.815, 21.8929, 1.62 ) }
    dend_12 { pt3dadd( 35.3814, -113.632, 22.1733, 0.96 ) }
    dend_12 { pt3dadd( 35.9098, -114.683, 22.5384, 0.22 ) }
    dend_12 { pt3dadd( 36.1756, -115.299, 22.7511, 0.15 ) }
    dend_12 { pt3dadd( 36.2864, -115.636, 22.8564, 0.15 ) }
    dend_12 { pt3dadd( 36.3549, -115.884, 22.9333, 0.44 ) }
    dend_12 { pt3dadd( 36.4532, -116.349, 23.0715, 0.66 ) }
    dend_12 { pt3dadd( 36.5682, -117.092, 23.2794, 0.15 ) }
    dend_12 { pt3dadd( 36.6176, -117.488, 23.395, 0.15 ) }
    dend_12 { pt3dadd( 36.6818, -117.943, 23.5321, 0.29 ) }
    dend_12 { pt3dadd( 36.764, -118.391, 23.6882, 0.29 ) }
    dend_12 { pt3dadd( 36.9571, -119.217, 24.0048, 0.07 ) }
    dend_12 { pt3dadd( 37.0204, -119.447, 24.0943, 0.44 ) }
    dend_12 { pt3dadd( 37.2371, -120.199, 24.3851, 1.18 ) }
    dend_12 { pt3dadd( 37.3766, -120.752, 24.5939, 2.06 ) }
    dend_12 { pt3dadd( 37.5172, -121.371, 24.8171, 1.55 ) }
    dend_12 { pt3dadd( 37.8282, -122.828, 25.3113, 0.44 ) }
    dend_12 { pt3dadd( 38.0422, -123.833, 25.6252, 0.66 ) }
    dend_12 { pt3dadd( 38.2483, -124.759, 25.8714, 0.22 ) }
    dend_12 { pt3dadd( 38.5604, -126.044, 26.1417, 0.22 ) }
    dend_12 { pt3dadd( 38.6648, -126.471, 26.2165, 0.96 ) }
    dend_12 { pt3dadd( 38.7903, -127.0, 26.2874, 1.92 ) }
    dend_12 { pt3dadd( 38.9021, -127.493, 26.3328, 1.99 ) }
    dend_12 { pt3dadd( 39.2722, -129.052, 26.4335, 0.29 ) }
    dend_12 { pt3dadd( 39.5668, -130.147, 26.4932, 0.15 ) }
    dend_12 { pt3dadd( 39.7176, -130.644, 26.5088, 0.74 ) }
    dend_12 { pt3dadd( 39.8312, -131.012, 26.5181, 0.74 ) }
    dend_12 { pt3dadd( 40.1081, -131.933, 26.5316, 0.22 ) }
    dend_12 { pt3dadd( 40.2752, -132.544, 26.5328, 0.37 ) }
    dend_12 { pt3dadd( 40.4923, -133.435, 26.532, 0.22 ) }
    dend_12 { pt3dadd( 40.6383, -134.124, 26.541, 0.22 ) }
    dend_12 { pt3dadd( 40.7224, -134.566, 26.5503, 0.59 ) }
    dend_12 { pt3dadd( 40.8237, -135.212, 26.5645, 1.18 ) }
    dend_12 { pt3dadd( 41.0375, -136.969, 26.6234, 0.22 ) }
    dend_12 { pt3dadd( 41.1043, -137.628, 26.6497, 0.44 ) }
    dend_12 { pt3dadd( 41.1746, -138.27, 26.6686, 0.22 ) }
    dend_12 { pt3dadd( 41.2241, -138.716, 26.683, 0.81 ) }
    dend_12 { pt3dadd( 41.2843, -139.219, 26.6976, 1.47 ) }
    dend_12 { pt3dadd( 41.3706, -139.904, 26.7157, 1.55 ) }
    dend_12 { pt3dadd( 41.4918, -140.861, 26.733, 0.22 ) }
    dend_12 { pt3dadd( 41.6264, -141.919, 26.757, 0.15 ) }
    dend_12 { pt3dadd( 41.762, -142.941, 26.788, 0.15 ) }
    dend_12 { pt3dadd( 41.8246, -143.442, 26.8229, 0.29 ) }
    dend_12 { pt3dadd( 41.8744, -143.898, 26.8733, 0.59 ) }
    dend_12 { pt3dadd( 41.9075, -144.271, 26.9335, 0.96 ) }
    dend_12 { pt3dadd( 41.961, -144.981, 27.1092, 0.22 ) }
    dend_12 { pt3dadd( 42.0163, -145.704, 27.3302, 0.15 ) }
    dend_12 { pt3dadd( 42.1101, -146.676, 27.663, 0.15 ) }
    dend_12 { pt3dadd( 42.1573, -147.206, 27.8438, 0.96 ) }
    dend_12 { pt3dadd( 42.2234, -148.053, 28.141, 1.92 ) }
    dend_12 { pt3dadd( 42.3001, -149.245, 28.5665, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 65/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -11.5978, -32.4668, 6.09548, 1.03 ) }
    dend_6 { pt3dadd( -10.8825, -33.6327, 6.67346, 1.03 ) }
    dend_6 { pt3dadd( -10.1461, -34.7779, 7.26694, 0.37 ) }
    dend_6 { pt3dadd( -9.60694, -35.5933, 7.67188, 0.66 ) }
    dend_6 { pt3dadd( -9.06696, -36.4036, 8.03049, 1.11 ) }
    dend_6 { pt3dadd( -8.52885, -37.2178, 8.34285, 1.55 ) }
    dend_6 { pt3dadd( -7.93153, -38.1685, 8.64133, 0.52 ) }
    dend_6 { pt3dadd( -7.37097, -39.1, 8.87444, 0.44 ) }
    dend_6 { pt3dadd( -6.7448, -40.2354, 9.07629, 0.88 ) }
    dend_6 { pt3dadd( -6.21406, -41.2526, 9.20682, 0.74 ) }
    dend_6 { pt3dadd( -5.74054, -42.2095, 9.28887, 0.44 ) }
    dend_6 { pt3dadd( -5.21877, -43.3302, 9.31417, 0.37 ) }
    dend_6 { pt3dadd( -4.96794, -43.9363, 9.30145, 1.18 ) }
    dend_6 { pt3dadd( -4.52837, -45.193, 9.1959, 2.51 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 79/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -11.5978, -32.4668, 6.09548, 1.03 ) }
    dend_1 { pt3dadd( -12.4543, -32.7494, 6.42177, 1.03 ) }
    dend_1 { pt3dadd( -13.7576, -33.2668, 6.97862, 0.52 ) }
    dend_1 { pt3dadd( -14.7524, -33.7478, 7.48294, 0.44 ) }
    dend_1 { pt3dadd( -15.5494, -34.2317, 7.96242, 0.29 ) }
    dend_1 { pt3dadd( -16.0285, -34.6021, 8.28484, 0.29 ) }
    dend_1 { pt3dadd( -16.3146, -34.8815, 8.51762, 0.29 ) }
    dend_1 { pt3dadd( -16.7149, -35.4361, 8.94773, 0.96 ) }
    dend_1 { pt3dadd( -17.0565, -36.1041, 9.40474, 2.14 ) }
    dend_1 { pt3dadd( -17.426, -37.0116, 9.97067, 2.06 ) }
    dend_1 { pt3dadd( -17.7717, -38.0423, 10.5792, 0.74 ) }
    dend_1 { pt3dadd( -18.187, -39.4172, 11.34, 0.44 ) }
    dend_1 { pt3dadd( -18.3366, -39.9435, 11.6185, 0.59 ) }
    dend_1 { pt3dadd( -18.4926, -40.5453, 11.9096, 0.88 ) }
    dend_1 { pt3dadd( -18.6804, -41.3203, 12.2621, 0.29 ) }
    dend_1 { pt3dadd( -18.8618, -42.1623, 12.6244, 0.15 ) }
    dend_1 { pt3dadd( -18.9451, -42.5602, 12.7939, 0.29 ) }
    dend_1 { pt3dadd( -19.1698, -43.6073, 13.1624, 0.22 ) }
    dend_1 { pt3dadd( -19.2581, -44.0083, 13.3022, 0.66 ) }
    dend_1 { pt3dadd( -19.4176, -44.7269, 13.5321, 1.7 ) }
    dend_1 { pt3dadd( -19.5571, -45.3265, 13.6977, 2.21 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -19.7212, -45.9904, 13.8786, 1.92 ) }
    dend_1 { pt3dadd( -20.1623, -47.7754, 14.3704, 0.37 ) }
    dend_1 { pt3dadd( -20.3485, -48.5559, 14.5932, 1.25 ) }
    dend_1 { pt3dadd( -20.5507, -49.463, 14.8622, 0.96 ) }
    dend_1 { pt3dadd( -20.7849, -50.609, 15.1951, 0.22 ) }
    dend_1 { pt3dadd( -20.9857, -51.6016, 15.4791, 0.22 ) }
    dend_1 { pt3dadd( -21.1441, -52.3437, 15.6744, 0.44 ) }
    dend_1 { pt3dadd( -21.3158, -53.0422, 15.8508, 1.18 ) }
    dend_1 { pt3dadd( -21.4954, -53.6361, 15.972, 2.29 ) }
    dend_1 { pt3dadd( -21.802, -54.4797, 16.1179, 2.51 ) }
    dend_1 { pt3dadd( -22.2624, -55.6321, 16.2651, 0.44 ) }
    dend_1 { pt3dadd( -22.7255, -56.7141, 16.3448, 0.44 ) }
    dend_1 { pt3dadd( -22.9519, -57.2078, 16.3703, 0.37 ) }
    dend_1 { pt3dadd( -23.4816, -58.3029, 16.4016, 0.37 ) }
    dend_1 { pt3dadd( -23.6751, -58.6873, 16.4192, 0.22 ) }
    dend_1 { pt3dadd( -23.8618, -59.0525, 16.4441, 0.22 ) }
    dend_1 { pt3dadd( -24.1649, -59.6895, 16.4991, 0.22 ) }
    dend_1 { pt3dadd( -24.3138, -60.0059, 16.538, 0.74 ) }
    dend_1 { pt3dadd( -24.5165, -60.4628, 16.6166, 1.4 ) }
    dend_1 { pt3dadd( -24.794, -61.1557, 16.7575, 2.14 ) }
    dend_1 { pt3dadd( -25.2129, -62.2083, 16.9786, 0.66 ) }
    dend_1 { pt3dadd( -25.6313, -63.2443, 17.1953, 0.37 ) }
    dend_1 { pt3dadd( -25.9609, -64.1311, 17.3432, 0.22 ) }
    dend_1 { pt3dadd( -26.2029, -64.8831, 17.4383, 0.22 ) }
    dend_1 { pt3dadd( -26.3751, -65.518, 17.4924, 1.11 ) }
    dend_1 { pt3dadd( -26.5338, -66.1692, 17.537, 1.25 ) }
    dend_1 { pt3dadd( -26.7283, -67.025, 17.588, 0.59 ) }
    dend_1 { pt3dadd( -26.959, -68.0012, 17.6273, 0.22 ) }
    dend_1 { pt3dadd( -27.0574, -68.3963, 17.6329, 0.22 ) }
    dend_1 { pt3dadd( -27.3647, -69.4077, 17.6368, 0.29 ) }
    dend_1 { pt3dadd( -27.8499, -70.746, 17.6629, 0.29 ) }
    dend_1 { pt3dadd( -28.0474, -71.2226, 17.6957, 0.29 ) }
    dend_1 { pt3dadd( -28.2848, -71.7356, 17.7546, 0.96 ) }
    dend_1 { pt3dadd( -28.5065, -72.1675, 17.8229, 1.99 ) }
    dend_1 { pt3dadd( -28.6969, -72.5219, 17.8759, 2.51 ) }
    dend_1 { pt3dadd( -29.3147, -73.6489, 18.0264, 0.81 ) }
    dend_1 { pt3dadd( -29.9698, -74.8724, 18.1495, 0.22 ) }
    dend_1 { pt3dadd( -30.2967, -75.5016, 18.1929, 0.22 ) }
    dend_1 { pt3dadd( -30.5395, -76.0001, 18.2129, 0.22 ) }
    dend_1 { pt3dadd( -30.6731, -76.289, 18.2149, 0.44 ) }
    dend_1 { pt3dadd( -30.8797, -76.7637, 18.1994, 0.96 ) }
    dend_1 { pt3dadd( -31.1142, -77.3359, 18.1557, 0.44 ) }
    dend_1 { pt3dadd( -31.4277, -78.1477, 18.043, 0.15 ) }
    dend_1 { pt3dadd( -31.6259, -78.6766, 17.9685, 0.15 ) }
    dend_1 { pt3dadd( -31.779, -79.1003, 17.912, 0.44 ) }
    dend_1 { pt3dadd( -31.9503, -79.5654, 17.8616, 0.52 ) }
    dend_1 { pt3dadd( -32.1376, -80.1012, 17.7957, 0.22 ) }
    dend_1 { pt3dadd( -32.3252, -80.599, 17.722, 0.22 ) }
    dend_1 { pt3dadd( -32.5232, -81.0742, 17.649, 0.74 ) }
    dend_1 { pt3dadd( -32.8222, -81.743, 17.5331, 1.33 ) }
    dend_1 { pt3dadd( -33.1562, -82.4602, 17.4103, 0.29 ) }
    dend_1 { pt3dadd( -33.6295, -83.4156, 17.2551, 0.22 ) }
    dend_1 { pt3dadd( -33.9713, -84.0657, 17.1571, 0.22 ) }
    dend_1 { pt3dadd( -34.4789, -84.9954, 17.0388, 0.22 ) }
    dend_1 { pt3dadd( -34.6781, -85.3569, 16.9988, 0.52 ) }
    dend_1 { pt3dadd( -35.1233, -86.1721, 16.9269, 1.7 ) }
    dend_1 { pt3dadd( -35.7178, -87.2758, 16.8519, 0.44 ) }
    dend_1 { pt3dadd( -36.1647, -88.1039, 16.82, 0.37 ) }
    dend_1 { pt3dadd( -36.683, -89.124, 16.7943, 0.15 ) }
    dend_1 { pt3dadd( -36.9271, -89.617, 16.7799, 0.81 ) }
    dend_1 { pt3dadd( -37.2108, -90.2008, 16.7583, 1.7 ) }
    dend_1 { pt3dadd( -37.4359, -90.6869, 16.7317, 0.96 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 33.5074, 20.3123, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 46.434, 27.9217, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 59.3606, 35.5311, 0.0, 0.15 ) }
    // Section: dend_100, id: dend_100, parent: dend_98 (entry count 65/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( -13.2093, 5.86902, -18.3396, 0.52 ) }
    dend_100 { pt3dadd( -12.1239, 5.50327, -19.1471, 0.52 ) }
    dend_100 { pt3dadd( -10.8937, 5.27829, -20.1396, 0.37 ) }
    dend_100 { pt3dadd( -9.81593, 5.38652, -21.1567, 0.22 ) }
    dend_100 { pt3dadd( -9.42342, 5.61004, -21.6494, 0.29 ) }
    dend_100 { pt3dadd( -9.15602, 5.82055, -22.0652, 0.29 ) }
    dend_100 { pt3dadd( -8.78584, 6.0895, -22.7109, 0.66 ) }
    dend_100 { pt3dadd( -8.38322, 6.39513, -23.5442, 1.03 ) }
    dend_100 { pt3dadd( -8.08484, 6.73714, -24.3246, 0.81 ) }
    dend_100 { pt3dadd( -7.7456, 7.18178, -25.2306, 0.44 ) }
    dend_100 { pt3dadd( -7.24694, 7.73689, -26.3532, 0.74 ) }
    dend_100 { pt3dadd( -6.71609, 8.20385, -27.2845, 0.66 ) }
    dend_100 { pt3dadd( -6.17764, 8.61479, -27.9977, 0.66 ) }
    dend_100 { pt3dadd( -5.15149, 9.29337, -29.2376, 0.29 ) }
    dend_100 { pt3dadd( -4.49604, 9.70135, -29.9288, 0.29 ) }
    dend_100 { pt3dadd( -3.65685, 10.2511, -30.6483, 0.52 ) }
    dend_100 { pt3dadd( -2.94652, 10.815, -31.1083, 0.52 ) }
    dend_100 { pt3dadd( -2.09317, 11.594, -31.5102, 1.03 ) }
    dend_100 { pt3dadd( 5.33402, 16.9152, -37.949, 1.03 ) }
    dend_100 { pt3dadd( 12.2959, 22.0556, -45.0409, 1.03 ) }
    dend_100 { pt3dadd( 18.7405, 26.1007, -53.3347, 1.03 ) }
    dend_100 { pt3dadd( 24.845, 29.6089, -62.1579, 1.03 ) }
    dend_100 { pt3dadd( 30.5047, 34.3317, -70.6188, 1.03 ) }
    dend_100 { pt3dadd( 34.9884, 39.6336, -79.4053, 1.03 ) }
    dend_100 { pt3dadd( 40.8722, 44.0999, -87.8701, 1.03 ) }
    dend_100 { pt3dadd( 47.7764, 48.9914, -95.2135, 1.03 ) }
    dend_100 { pt3dadd( 55.7527, 54.196, -101.079, 1.03 ) }
    dend_100 { pt3dadd( 63.5644, 58.9719, -107.546, 1.03 ) }
    dend_100 { pt3dadd( 72.1344, 64.0891, -112.615, 1.03 ) }
    dend_100 { pt3dadd( 81.2169, 67.9527, -118.046, 1.03 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 95/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( -13.2093, 5.86902, -18.3396, 1.25 ) }
    dend_99 { pt3dadd( -13.6623, 4.37428, -18.4118, 1.25 ) }
    dend_99 { pt3dadd( -14.0011, 2.86619, -18.4416, 0.59 ) }
    dend_99 { pt3dadd( -14.2477, 1.65423, -18.4909, 0.81 ) }
    dend_99 { pt3dadd( -14.5473, 0.197037, -18.6302, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_99 { pt3dadd( -14.8444, -1.39025, -18.807, 1.4 ) }
    dend_99 { pt3dadd( -15.0602, -2.78941, -18.9451, 1.11 ) }
    dend_99 { pt3dadd( -15.1954, -5.42832, -19.2021, 0.52 ) }
    dend_99 { pt3dadd( -15.158, -7.21103, -19.3757, 0.74 ) }
    dend_99 { pt3dadd( -15.0405, -8.84346, -19.5966, 1.7 ) }
    dend_99 { pt3dadd( -14.8309, -10.4865, -19.8975, 1.84 ) }
    dend_99 { pt3dadd( -14.4837, -12.2386, -20.2931, 1.92 ) }
    dend_99 { pt3dadd( -13.7539, -15.1445, -21.0071, 0.96 ) }
    dend_99 { pt3dadd( -13.3017, -16.4873, -21.3493, 0.96 ) }
    dend_99 { pt3dadd( -12.8172, -17.6608, -21.6361, 0.44 ) }
    dend_99 { pt3dadd( -12.2166, -18.9075, -21.9314, 1.18 ) }
    dend_99 { pt3dadd( -11.928, -19.4402, -22.1081, 1.18 ) }
    dend_99 { pt3dadd( -9.84053, -30.5214, -22.3412, 1.18 ) }
    dend_99 { pt3dadd( -7.11164, -41.4725, -21.9321, 1.18 ) }
    dend_99 { pt3dadd( -6.68555, -52.686, -22.3841, 1.18 ) }
    dend_99 { pt3dadd( -6.22192, -63.7435, -20.6395, 1.18 ) }
    dend_99 { pt3dadd( -4.4683, -74.2653, -17.0595, 1.18 ) }
    dend_99 { pt3dadd( -3.80642, -85.2154, -14.7602, 1.18 ) }
    // Section: dend_97, id: dend_97, parent: dend_95 (entry count 18/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -3.71237, 41.226, -25.1407, 0.07 ) }
    dend_97 { pt3dadd( -4.00342, 49.603, -26.8233, 0.07 ) }
    dend_97 { pt3dadd( -4.10016, 58.15, -27.0097, 0.07 ) }
    dend_97 { pt3dadd( -6.17541, 66.518, -26.6478, 0.07 ) }
    dend_97 { pt3dadd( -9.36911, 74.5533, -27.309, 0.07 ) }
    dend_97 { pt3dadd( -13.7824, 82.1017, -27.2141, 0.07 ) }
    dend_97 { pt3dadd( -19.033, 89.0489, -25.8801, 0.07 ) }
    dend_97 { pt3dadd( -22.762, 96.6452, -23.6574, 0.07 ) }
    dend_97 { pt3dadd( -28.3234, 102.96, -20.8915, 0.07 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 27/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -3.71237, 41.226, -25.1407, 0.81 ) }
    dend_96 { pt3dadd( -2.99366, 50.8432, -27.7079, 0.07 ) }
    dend_96 { pt3dadd( -1.2849, 59.8833, -31.6405, 0.07 ) }
    dend_96 { pt3dadd( 1.65424, 69.0724, -34.1735, 0.07 ) }
    dend_96 { pt3dadd( 3.94049, 78.4171, -36.8002, 0.07 ) }
    dend_96 { pt3dadd( 6.90911, 87.6513, -39.1114, 0.07 ) }
    dend_96 { pt3dadd( 8.14092, 96.7916, -42.9924, 0.07 ) }
    dend_96 { pt3dadd( 8.11025, 106.278, -46.1712, 0.07 ) }
    // Section: dend_93, id: dend_93, parent: dend_45 (entry count 35/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( -12.4837, -15.7739, -8.43959, 0.37 ) }
    dend_93 { pt3dadd( -13.5761, -15.6372, -8.64876, 0.37 ) }
    dend_93 { pt3dadd( -14.4009, -15.5335, -8.93004, 0.37 ) }
    dend_93 { pt3dadd( -14.9378, -15.5284, -9.14175, 0.22 ) }
    dend_93 { pt3dadd( -15.5066, -15.5961, -9.45999, 0.22 ) }
    dend_93 { pt3dadd( -15.7934, -15.6505, -9.64102, 0.22 ) }
    dend_93 { pt3dadd( -16.207, -15.7335, -9.90136, 0.44 ) }
    dend_93 { pt3dadd( -16.62, -15.8342, -10.1939, 0.52 ) }
    dend_93 { pt3dadd( -17.2514, -15.9954, -10.6126, 1.18 ) }
    dend_93 { pt3dadd( -18.3313, -16.3133, -11.2341, 0.22 ) }
    dend_93 { pt3dadd( -19.0211, -16.5375, -11.5872, 0.22 ) }
    dend_93 { pt3dadd( -19.5249, -16.7057, -11.8133, 0.22 ) }
    dend_93 { pt3dadd( -20.0326, -16.8857, -12.0325, 0.22 ) }
    dend_93 { pt3dadd( -20.6517, -17.1135, -12.2833, 0.29 ) }
    dend_93 { pt3dadd( -21.1897, -17.3262, -12.4893, 0.59 ) }
    dend_93 { pt3dadd( -21.6132, -17.5191, -12.6289, 0.96 ) }
    dend_93 { pt3dadd( -22.2874, -17.8937, -12.8515, 0.37 ) }
    dend_93 { pt3dadd( -22.9495, -18.349, -13.0864, 0.22 ) }
    dend_93 { pt3dadd( -23.5165, -18.8273, -13.3016, 0.07 ) }
    dend_93 { pt3dadd( -24.12, -19.3924, -13.5404, 0.07 ) }
    dend_93 { pt3dadd( -24.586, -19.8601, -13.7234, 0.22 ) }
    dend_93 { pt3dadd( -25.0799, -20.3788, -13.8965, 0.07 ) }
    dend_93 { pt3dadd( -25.453, -20.8223, -14.0246, 0.07 ) }
    dend_93 { pt3dadd( -25.7695, -21.2433, -14.0976, 0.74 ) }
    dend_93 { pt3dadd( -33.3318, -25.1303, -15.7227, 0.74 ) }
    dend_93 { pt3dadd( -41.4446, -28.1184, -16.6641, 0.74 ) }
    dend_93 { pt3dadd( -49.3748, -31.3116, -18.2213, 0.74 ) }
    dend_93 { pt3dadd( -57.5768, -34.024, -19.3184, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 63/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -12.4837, -15.7739, -8.43959, 0.96 ) }
    dend_46 { pt3dadd( -12.4801, -16.9502, -8.57952, 0.96 ) }
    dend_46 { pt3dadd( -12.4748, -17.851, -8.74043, 0.88 ) }
    dend_46 { pt3dadd( -12.4781, -19.0325, -8.99781, 0.81 ) }
    dend_46 { pt3dadd( -12.4877, -19.7304, -9.17692, 1.03 ) }
    dend_46 { pt3dadd( -12.5181, -20.3771, -9.36512, 1.33 ) }
    dend_46 { pt3dadd( -12.6308, -21.6868, -9.76617, 0.88 ) }
    dend_46 { pt3dadd( -12.7995, -22.8265, -10.1812, 1.03 ) }
    dend_46 { pt3dadd( -13.0213, -23.828, -10.589, 1.62 ) }
    dend_46 { pt3dadd( -13.3816, -25.2599, -11.216, 0.37 ) }
    dend_46 { pt3dadd( -13.6045, -26.0263, -11.5589, 0.37 ) }
    dend_46 { pt3dadd( -13.8106, -26.6256, -11.8444, 0.74 ) }
    dend_46 { pt3dadd( -14.0317, -27.0974, -12.081, 1.25 ) }
    dend_46 { pt3dadd( -14.4194, -27.7122, -12.4026, 1.77 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 28.3958, -6.75403, 8.58259, 0.15 ) }
    dend_42 { pt3dadd( 29.7634, -5.6679, 7.76046, 0.15 ) }
    dend_42 { pt3dadd( 30.4506, -5.11245, 7.36057, 0.15 ) }
    dend_42 { pt3dadd( 31.0171, -4.6284, 6.99113, 0.88 ) }
    dend_42 { pt3dadd( 31.6511, -4.04282, 6.54161, 1.55 ) }
    dend_42 { pt3dadd( 33.1117, -2.52896, 5.38982, 0.22 ) }
    dend_42 { pt3dadd( 33.7734, -1.84312, 4.86802, 0.22 ) }
    dend_42 { pt3dadd( 34.2031, -1.3697, 4.54066, 0.37 ) }
    dend_42 { pt3dadd( 34.9423, -0.528916, 3.99112, 0.07 ) }
    dend_42 { pt3dadd( 35.2556, -0.132153, 3.72517, 0.07 ) }
    dend_42 { pt3dadd( 35.6493, 0.509202, 3.22992, 1.18 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 88/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 28.3958, -6.75403, 8.58259, 0.29 ) }
    dend_35 { pt3dadd( 29.2962, -7.01738, 9.87426, 0.29 ) }
    dend_35 { pt3dadd( 29.925, -7.12896, 10.6706, 0.29 ) }
    dend_35 { pt3dadd( 30.9055, -7.20695, 11.7657, 0.66 ) }
    dend_35 { pt3dadd( 31.1912, -7.20926, 12.0518, 0.66 ) }
    dend_35 { pt3dadd( 32.0325, -7.17507, 12.8137, 0.22 ) }
    dend_35 { pt3dadd( 32.5178, -7.15568, 13.2213, 0.22 ) }
    dend_35 { pt3dadd( 33.2243, -7.10823, 13.7943, 0.66 ) }
    dend_35 { pt3dadd( 34.2279, -7.05042, 14.574, 1.84 ) }
    dend_35 { pt3dadd( 35.4558, -7.01712, 15.5279, 3.02 ) }
    dend_35 { pt3dadd( 36.813, -7.04505, 16.6571, 1.55 ) }
    dend_35 { pt3dadd( 38.203, -7.21578, 17.8718, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_35 { pt3dadd( 39.2722, -7.46281, 18.8593, 0.44 ) }
    dend_35 { pt3dadd( 40.3748, -7.82609, 19.9351, 0.22 ) }
    dend_35 { pt3dadd( 41.3119, -8.21227, 20.8718, 1.03 ) }
    dend_35 { pt3dadd( 42.0389, -8.56976, 21.5899, 2.29 ) }
    dend_35 { pt3dadd( 43.6393, -9.43792, 23.1158, 0.22 ) }
    dend_35 { pt3dadd( 44.4423, -9.83679, 23.8542, 0.22 ) }
    dend_35 { pt3dadd( 44.9317, -10.0535, 24.2654, 0.22 ) }
    dend_35 { pt3dadd( 45.5466, -10.2877, 24.7395, 1.47 ) }
    dend_35 { pt3dadd( 46.542, -10.6131, 25.432, 2.88 ) }
    dend_35 { pt3dadd( 47.3944, -10.8483, 25.9714, 2.14 ) }
    dend_35 { pt3dadd( 50.2892, -11.5561, 27.6444, 0.29 ) }
    dend_35 { pt3dadd( 51.4085, -11.8111, 28.2545, 0.29 ) }
    dend_35 { pt3dadd( 52.0861, -11.9548, 28.6138, 0.29 ) }
    dend_35 { pt3dadd( 52.705, -12.0732, 28.9408, 0.66 ) }
    dend_35 { pt3dadd( 53.5592, -12.2087, 29.3655, 1.03 ) }
    dend_35 { pt3dadd( 54.4589, -12.3378, 29.7237, 0.22 ) }
    dend_35 { pt3dadd( 55.4724, -12.4243, 30.0269, 0.22 ) }
    dend_35 { pt3dadd( 56.1698, -12.4293, 30.2544, 0.22 ) }
    dend_35 { pt3dadd( 56.9114, -12.4026, 30.5101, 0.59 ) }
    dend_35 { pt3dadd( 57.822, -12.3471, 30.8293, 1.4 ) }
    dend_35 { pt3dadd( 59.2456, -12.2597, 31.3343, 0.37 ) }
    dend_35 { pt3dadd( 60.3229, -12.2636, 31.7191, 0.22 ) }
    dend_35 { pt3dadd( 61.3217, -12.3362, 32.0445, 0.22 ) }
    dend_35 { pt3dadd( 61.8525, -12.4149, 32.2118, 1.33 ) }
    dend_35 { pt3dadd( 62.707, -12.5914, 32.4761, 2.73 ) }
    dend_35 { pt3dadd( 63.4531, -12.7819, 32.7138, 2.73 ) }
    dend_35 { pt3dadd( 65.8918, -13.5392, 33.5171, 0.22 ) }
    dend_35 { pt3dadd( 66.8276, -13.884, 33.8317, 0.52 ) }
    dend_35 { pt3dadd( 67.9495, -14.3218, 34.2437, 0.15 ) }
    dend_35 { pt3dadd( 68.5114, -14.5459, 34.4672, 0.52 ) }
    dend_35 { pt3dadd( 69.2371, -14.8368, 34.7699, 0.96 ) }
    dend_35 { pt3dadd( 70.8917, -15.4948, 35.4863, 0.22 ) }
    dend_35 { pt3dadd( 71.8392, -15.8496, 35.9069, 0.96 ) }
    dend_35 { pt3dadd( 72.8511, -16.1997, 36.3964, 2.29 ) }
    dend_35 { pt3dadd( 75.0338, -16.8949, 37.4717, 0.22 ) }
    dend_35 { pt3dadd( 75.6367, -17.0801, 37.7738, 0.74 ) }
    dend_35 { pt3dadd( 76.5732, -17.3591, 38.2532, 1.11 ) }
    dend_35 { pt3dadd( 78.4173, -17.8918, 39.2124, 0.15 ) }
    dend_35 { pt3dadd( 79.4603, -18.1934, 39.75, 0.44 ) }
    dend_35 { pt3dadd( 80.2615, -18.4305, 40.1669, 1.25 ) }
    dend_35 { pt3dadd( 82.0396, -18.9256, 41.1546, 0.15 ) }
    dend_35 { pt3dadd( 82.5491, -19.069, 41.4416, 0.15 ) }
    dend_35 { pt3dadd( 82.9965, -19.2009, 41.6961, 0.44 ) }
    dend_35 { pt3dadd( 83.5555, -19.3904, 42.013, 0.66 ) }
    dend_35 { pt3dadd( 84.61, -19.7619, 42.5518, 0.15 ) }
    dend_35 { pt3dadd( 85.5228, -20.0725, 42.9961, 1.03 ) }
    dend_35 { pt3dadd( 86.3319, -20.3524, 43.3517, 2.14 ) }
    dend_35 { pt3dadd( 88.0183, -20.9114, 44.0594, 0.15 ) }
    dend_35 { pt3dadd( 88.5547, -21.0669, 44.2976, 0.15 ) }
    dend_35 { pt3dadd( 89.4056, -21.2504, 44.7024, 0.15 ) }
    dend_35 { pt3dadd( 90.3189, -21.372, 45.1786, 0.15 ) }
    dend_35 { pt3dadd( 90.7597, -21.3942, 45.435, 0.74 ) }
    dend_35 { pt3dadd( 91.7082, -21.3411, 46.0651, 1.92 ) }
    dend_35 { pt3dadd( 93.3644, -21.086, 47.3064, 0.15 ) }
    dend_35 { pt3dadd( 94.4236, -20.8546, 48.2087, 0.59 ) }
    dend_35 { pt3dadd( 95.2688, -20.6327, 49.0129, 0.15 ) }
    dend_35 { pt3dadd( 96.0362, -20.4033, 49.7769, 1.03 ) }
    dend_35 { pt3dadd( 96.8187, -20.1682, 50.5508, 1.33 ) }
    dend_35 { pt3dadd( 98.2223, -19.7507, 51.936, 0.15 ) }
    dend_35 { pt3dadd( 99.54, -19.3762, 53.2282, 0.15 ) }
    dend_35 { pt3dadd( 100.284, -19.2022, 53.9522, 1.03 ) }
    dend_35 { pt3dadd( 101.254, -19.0147, 54.8913, 1.77 ) }
    dend_35 { pt3dadd( 102.497, -18.8299, 56.1047, 0.15 ) }
    dend_35 { pt3dadd( 103.529, -18.7334, 57.095, 0.15 ) }
    dend_35 { pt3dadd( 104.362, -18.7246, 57.8171, 0.59 ) }
    dend_35 { pt3dadd( 105.435, -18.7861, 58.6743, 0.15 ) }
    dend_35 { pt3dadd( 105.958, -18.8355, 59.0849, 0.15 ) }
    dend_35 { pt3dadd( 106.515, -18.9065, 59.5178, 1.03 ) }
    dend_35 { pt3dadd( 107.28, -18.9965, 60.0791, 1.62 ) }
    dend_35 { pt3dadd( 109.302, -19.2063, 61.4308, 0.15 ) }
    dend_35 { pt3dadd( 110.018, -19.2532, 61.8752, 0.15 ) }
    dend_35 { pt3dadd( 110.793, -19.2636, 62.3279, 0.81 ) }
    dend_35 { pt3dadd( 111.836, -19.207, 62.9301, 1.62 ) }
    dend_35 { pt3dadd( 113.366, -19.0368, 63.81, 0.07 ) }
    dend_35 { pt3dadd( 114.414, -18.8639, 64.4278, 0.07 ) }
    dend_35 { pt3dadd( 114.908, -18.7522, 64.7117, 0.59 ) }
    dend_35 { pt3dadd( 115.276, -18.6634, 64.9029, 0.59 ) }
    dend_35 { pt3dadd( 116.264, -18.4065, 65.3893, 0.07 ) }
    dend_35 { pt3dadd( 116.998, -18.2149, 65.7332, 0.07 ) }
    dend_35 { pt3dadd( 117.385, -18.1159, 65.905, 0.07 ) }
    dend_35 { pt3dadd( 118.072, -17.9286, 66.1866, 0.59 ) }
    dend_35 { pt3dadd( 118.851, -17.7135, 66.5116, 1.33 ) }
    dend_35 { pt3dadd( 119.98, -17.4204, 66.9864, 0.15 ) }
    dend_35 { pt3dadd( 120.791, -17.2109, 67.3503, 0.52 ) }
    dend_35 { pt3dadd( 121.576, -16.984, 67.7409, 0.07 ) }
    dend_35 { pt3dadd( 122.099, -16.8325, 68.0199, 0.22 ) }
    dend_35 { pt3dadd( 122.892, -16.592, 68.4669, 0.07 ) }
    dend_35 { pt3dadd( 123.904, -16.2675, 69.0863, 0.66 ) }
    dend_35 { pt3dadd( 125.145, -15.8728, 69.8877, 0.22 ) }
    dend_35 { pt3dadd( 125.963, -15.6367, 70.4182, 0.96 ) }
    dend_35 { pt3dadd( 126.815, -15.4353, 71.0235, 1.62 ) }
    dend_35 { pt3dadd( 128.454, -15.1042, 72.2256, 0.15 ) }
    dend_35 { pt3dadd( 129.375, -14.9249, 72.9016, 0.74 ) }
    dend_35 { pt3dadd( 130.219, -14.7674, 73.52, 1.11 ) }
    dend_35 { pt3dadd( 131.651, -14.5383, 74.5308, 0.22 ) }
    dend_35 { pt3dadd( 133.624, -14.2732, 75.8892, 0.29 ) }
    dend_35 { pt3dadd( 134.098, -14.2227, 76.1994, 0.15 ) }
    dend_35 { pt3dadd( 134.472, -14.2091, 76.4222, 0.15 ) }
    dend_35 { pt3dadd( 135.188, -14.2047, 76.7817, 0.22 ) }
    dend_35 { pt3dadd( 135.555, -14.197, 76.9364, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_35 { pt3dadd( 136.435, -14.1474, 77.1941, 1.47 ) }
    dend_35 { pt3dadd( 137.296, -14.0676, 77.3562, 1.18 ) }
    dend_35 { pt3dadd( 138.839, -13.8901, 77.6775, 0.15 ) }
    dend_35 { pt3dadd( 139.316, -13.8249, 77.7974, 0.37 ) }
    dend_35 { pt3dadd( 139.868, -13.7473, 77.9525, 0.37 ) }
    dend_35 { pt3dadd( 140.927, -13.5953, 78.2444, 0.15 ) }
    dend_35 { pt3dadd( 141.774, -13.4447, 78.4863, 1.25 ) }
    dend_35 { pt3dadd( 142.237, -13.3465, 78.6312, 1.25 ) }
    dend_35 { pt3dadd( 143.677, -13.0173, 79.0735, 0.15 ) }
    dend_35 { pt3dadd( 144.36, -12.8759, 79.2824, 0.15 ) }
    dend_35 { pt3dadd( 145.274, -12.7143, 79.545, 0.22 ) }
    dend_35 { pt3dadd( 146.193, -12.5856, 79.7596, 0.15 ) }
    dend_35 { pt3dadd( 146.957, -12.4734, 79.8803, 0.22 ) }
    dend_35 { pt3dadd( 147.685, -12.354, 79.9708, 0.96 ) }
    dend_35 { pt3dadd( 148.698, -12.1694, 80.0541, 1.62 ) }
    dend_35 { pt3dadd( 149.328, -12.0548, 80.0919, 1.33 ) }
    dend_35 { pt3dadd( 151.199, -11.7411, 80.197, 0.15 ) }
    dend_35 { pt3dadd( 152.28, -11.574, 80.2404, 0.15 ) }
    dend_35 { pt3dadd( 152.897, -11.4765, 80.2649, 0.66 ) }
    dend_35 { pt3dadd( 153.684, -11.3506, 80.2761, 1.11 ) }
    dend_35 { pt3dadd( 155.255, -11.0921, 80.2525, 0.15 ) }
    dend_35 { pt3dadd( 156.071, -10.9596, 80.2087, 0.44 ) }
    dend_35 { pt3dadd( 156.452, -10.8985, 80.1691, 0.44 ) }
    dend_35 { pt3dadd( 157.491, -10.7721, 80.0252, 0.15 ) }
    dend_35 { pt3dadd( 158.723, -10.661, 79.821, 0.15 ) }
    dend_35 { pt3dadd( 159.129, -10.6256, 79.7457, 0.88 ) }
    dend_35 { pt3dadd( 160.178, -10.5438, 79.5028, 1.7 ) }
    dend_35 { pt3dadd( 161.595, -10.4598, 79.1382, 0.15 ) }
    dend_35 { pt3dadd( 162.365, -10.4224, 78.9436, 0.29 ) }
    dend_35 { pt3dadd( 163.138, -10.3948, 78.7582, 0.07 ) }
    dend_35 { pt3dadd( 164.029, -10.3765, 78.5868, 0.22 ) }
    dend_35 { pt3dadd( 165.266, -10.3772, 78.3641, 0.15 ) }
    dend_35 { pt3dadd( 165.892, -10.3863, 78.2608, 0.59 ) }
    dend_35 { pt3dadd( 166.844, -10.4117, 78.1159, 1.4 ) }
    dend_35 { pt3dadd( 167.487, -10.4319, 78.0277, 1.25 ) }
    dend_35 { pt3dadd( 169.293, -10.5387, 77.8224, 0.15 ) }
    dend_35 { pt3dadd( 170.301, -10.6343, 77.7398, 0.37 ) }
    dend_35 { pt3dadd( 171.235, -10.738, 77.694, 0.15 ) }
    dend_35 { pt3dadd( 172.012, -10.8243, 77.6925, 0.37 ) }
    dend_35 { pt3dadd( 172.484, -10.8685, 77.7321, 0.37 ) }
    dend_35 { pt3dadd( 173.158, -10.9064, 77.8331, 0.88 ) }
    dend_35 { pt3dadd( 173.804, -10.9348, 77.9656, 1.62 ) }
    dend_35 { pt3dadd( 174.2, -10.9464, 78.07, 1.62 ) }
    dend_35 { pt3dadd( 176.134, -10.9969, 78.6691, 0.07 ) }
    dend_35 { pt3dadd( 177.452, -11.0185, 79.1272, 0.07 ) }
    dend_35 { pt3dadd( 178.047, -11.0035, 79.3573, 0.66 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 46/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 71.3405, -15.9831, -35.1889, 0.07 ) }
    dend_33 { pt3dadd( 80.4786, -20.0522, -40.6513, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 48/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 71.3405, -15.9831, -35.1889, 0.81 ) }
    dend_32 { pt3dadd( 79.964, -18.0737, -41.6115, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 50/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -11.715, 43.0345, 58.217, 0.07 ) }
    dend_29 { pt3dadd( -10.2879, 44.1464, 58.0021, 0.07 ) }
    dend_29 { pt3dadd( -9.34459, 44.8976, 57.7894, 0.07 ) }
    dend_29 { pt3dadd( -8.70947, 45.4326, 57.6225, 0.81 ) }
    dend_29 { pt3dadd( -7.78775, 46.2648, 57.3149, 0.07 ) }
    dend_29 { pt3dadd( -7.38044, 46.6564, 57.1472, 0.15 ) }
    dend_29 { pt3dadd( -6.50034, 47.5026, 56.7849, 0.07 ) }
    dend_29 { pt3dadd( -6.06382, 47.9496, 56.5461, 0.66 ) }
    dend_29 { pt3dadd( -5.73307, 48.3182, 56.3178, 0.88 ) }
    dend_29 { pt3dadd( -5.01775, 49.1839, 55.7718, 0.15 ) }
    dend_29 { pt3dadd( -4.56096, 49.8274, 55.3127, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 61/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -11.715, 43.0345, 58.217, 0.07 ) }
    dend_28 { pt3dadd( -11.9966, 44.0686, 59.328, 0.07 ) }
    dend_28 { pt3dadd( -12.1981, 44.8233, 60.1557, 0.07 ) }
    dend_28 { pt3dadd( -12.3247, 45.4036, 60.8686, 0.07 ) }
    dend_28 { pt3dadd( -12.4364, 45.8632, 61.5166, 0.96 ) }
    dend_28 { pt3dadd( -12.479, 46.0032, 61.743, 0.96 ) }
    dend_28 { pt3dadd( -12.689, 46.643, 62.8994, 0.07 ) }
    dend_28 { pt3dadd( -12.8203, 47.0332, 63.756, 0.59 ) }
    dend_28 { pt3dadd( -12.9897, 47.5822, 65.1474, 0.22 ) }
    dend_28 { pt3dadd( -13.1263, 47.9964, 66.3328, 1.25 ) }
    dend_28 { pt3dadd( -13.3601, 48.5454, 68.0779, 0.22 ) }
    dend_28 { pt3dadd( -13.5351, 48.9013, 69.3043, 0.22 ) }
    dend_28 { pt3dadd( -13.7469, 49.3002, 70.771, 0.22 ) }
    dend_28 { pt3dadd( -13.9373, 49.6562, 72.089, 0.22 ) }
    dend_28 { pt3dadd( -14.076, 49.8924, 72.9529, 1.33 ) }
    dend_28 { pt3dadd( -14.3711, 50.4649, 74.9555, 0.15 ) }
    dend_28 { pt3dadd( -14.503, 50.7761, 76.0693, 0.29 ) }
    dend_28 { pt3dadd( -14.6244, 51.1052, 77.226, 0.29 ) }
    dend_28 { pt3dadd( -14.6731, 51.3062, 77.8754, 0.44 ) }
    dend_28 { pt3dadd( -14.6999, 51.8682, 79.6235, 0.22 ) }
    dend_28 { pt3dadd( -14.6265, 52.3355, 81.0409, 0.22 ) }
    dend_28 { pt3dadd( -14.384, 53.0053, 83.0703, 0.29 ) }
    dend_28 { pt3dadd( -14.3356, 53.1053, 83.3803, 1.11 ) }
    dend_28 { pt3dadd( -14.0223, 53.5795, 85.011, 0.29 ) }
    dend_28 { pt3dadd( -13.7413, 53.9026, 86.3216, 0.29 ) }
    dend_28 { pt3dadd( -13.6428, 53.9811, 86.7226, 0.29 ) }
    dend_28 { pt3dadd( -13.4477, 54.1206, 87.8529, 0.29 ) }
    dend_28 { pt3dadd( -13.4285, 54.1376, 88.1631, 0.29 ) }
    dend_28 { pt3dadd( -13.4624, 54.1396, 89.2827, 0.29 ) }
    dend_28 { pt3dadd( -13.5711, 54.088, 90.2795, 0.29 ) }
    dend_28 { pt3dadd( -13.6774, 54.0421, 90.947, 0.29 ) }
    dend_28 { pt3dadd( -13.8771, 53.9185, 92.3402, 0.29 ) }
    dend_28 { pt3dadd( -14.0392, 53.7841, 93.6163, 0.29 ) }
    dend_28 { pt3dadd( -14.2099, 53.634, 94.9635, 0.29 ) }
    dend_28 { pt3dadd( -14.3732, 53.4974, 96.1658, 0.29 ) }
    dend_28 { pt3dadd( -14.5885, 53.3213, 97.8853, 0.29 ) }
    dend_28 { pt3dadd( -14.7707, 53.1865, 99.5381, 0.52 ) }
    dend_28 { pt3dadd( -14.871, 53.1361, 100.688, 0.52 ) }
    dend_28 { pt3dadd( -14.9403, 53.1495, 101.583, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( -14.9851, 53.2197, 102.241, 0.22 ) }
    dend_28 { pt3dadd( -15.102, 53.565, 104.126, 0.22 ) }
    dend_28 { pt3dadd( -15.1819, 53.8819, 105.327, 0.22 ) }
    dend_28 { pt3dadd( -15.2946, 54.3139, 106.677, 0.44 ) }
    dend_28 { pt3dadd( -15.3962, 54.7914, 108.069, 0.88 ) }
    dend_28 { pt3dadd( -15.5091, 55.6127, 110.493, 0.15 ) }
    dend_28 { pt3dadd( -15.5475, 56.0221, 111.73, 0.15 ) }
    dend_28 { pt3dadd( -15.5826, 56.3, 112.542, 0.22 ) }
    dend_28 { pt3dadd( -15.6245, 56.4891, 113.134, 0.22 ) }
    dend_28 { pt3dadd( -15.6784, 56.6253, 113.586, 0.22 ) }
    dend_28 { pt3dadd( -15.7377, 56.7509, 114.034, 0.22 ) }
    dend_28 { pt3dadd( -15.7924, 56.8801, 114.557, 0.22 ) }
    dend_28 { pt3dadd( -15.8563, 57.1097, 115.386, 0.22 ) }
    dend_28 { pt3dadd( -15.9739, 57.4381, 116.625, 0.22 ) }
    dend_28 { pt3dadd( -16.0344, 57.5608, 117.112, 0.22 ) }
    dend_28 { pt3dadd( -16.1814, 57.8441, 118.336, 0.22 ) }
    dend_28 { pt3dadd( -16.3093, 58.1344, 119.7, 0.22 ) }
    dend_28 { pt3dadd( -16.3333, 58.2496, 120.332, 0.22 ) }
    dend_28 { pt3dadd( -16.2908, 58.428, 121.421, 0.22 ) }
    dend_28 { pt3dadd( -16.1839, 58.606, 122.432, 0.22 ) }
    dend_28 { pt3dadd( -16.0673, 58.7392, 123.324, 0.22 ) }
    dend_28 { pt3dadd( -15.9301, 58.8477, 124.273, 0.22 ) }
    dend_28 { pt3dadd( -15.6481, 58.9819, 125.602, 0.22 ) }
    dend_28 { pt3dadd( -15.3918, 59.0753, 126.513, 0.22 ) }
    dend_28 { pt3dadd( -15.1121, 59.2022, 127.225, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 25/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -132.559, 43.2514, 21.5166, 0.29 ) }
    dend_23 { pt3dadd( -133.305, 44.0443, 21.6715, 0.29 ) }
    dend_23 { pt3dadd( -134.041, 44.7913, 21.7946, 0.07 ) }
    dend_23 { pt3dadd( -134.275, 45.024, 21.828, 0.15 ) }
    dend_23 { pt3dadd( -134.618, 45.3479, 21.8823, 0.07 ) }
    dend_23 { pt3dadd( -134.891, 45.5924, 21.9271, 0.29 ) }
    dend_23 { pt3dadd( -135.47, 46.0882, 22.0186, 0.07 ) }
    dend_23 { pt3dadd( -135.718, 46.2784, 22.0518, 0.37 ) }
    dend_23 { pt3dadd( -135.869, 46.3962, 22.0638, 0.37 ) }
    dend_23 { pt3dadd( -136.388, 46.8063, 22.1092, 0.07 ) }
    dend_23 { pt3dadd( -136.545, 46.9362, 22.1262, 0.15 ) }
    dend_23 { pt3dadd( -137.0, 47.3567, 22.2041, 0.07 ) }
    dend_23 { pt3dadd( -137.387, 47.7695, 22.2916, 0.07 ) }
    dend_23 { pt3dadd( -137.621, 48.0915, 22.376, 0.74 ) }
    dend_23 { pt3dadd( -137.767, 48.3318, 22.4507, 0.74 ) }
    dend_23 { pt3dadd( -138.09, 48.9667, 22.6625, 0.07 ) }
    dend_23 { pt3dadd( -138.321, 49.505, 22.888, 0.07 ) }
    dend_23 { pt3dadd( -138.423, 49.777, 23.0379, 0.29 ) }
    dend_23 { pt3dadd( -138.682, 50.5149, 23.5762, 0.07 ) }
    dend_23 { pt3dadd( -138.834, 50.9601, 23.9817, 0.07 ) }
    dend_23 { pt3dadd( -138.925, 51.2459, 24.2836, 0.66 ) }
    dend_23 { pt3dadd( -139.107, 51.8231, 24.956, 0.07 ) }
    dend_23 { pt3dadd( -139.287, 52.2982, 25.5616, 0.29 ) }
    dend_23 { pt3dadd( -139.511, 52.8447, 26.3294, 0.22 ) }
    dend_23 { pt3dadd( -139.754, 53.396, 27.141, 1.33 ) }
    dend_23 { pt3dadd( -140.006, 53.9534, 27.9763, 0.07 ) }
    dend_23 { pt3dadd( -140.154, 54.3003, 28.5091, 0.44 ) }
    dend_23 { pt3dadd( -140.392, 54.9169, 29.4403, 0.15 ) }
    dend_23 { pt3dadd( -140.488, 55.2159, 29.863, 0.15 ) }
    dend_23 { pt3dadd( -140.6, 55.6681, 30.4491, 1.4 ) }
    dend_23 { pt3dadd( -140.74, 56.5216, 31.4922, 0.22 ) }
    dend_23 { pt3dadd( -140.806, 57.0405, 32.1225, 0.15 ) }
    dend_23 { pt3dadd( -140.831, 57.4328, 32.5864, 0.22 ) }
    dend_23 { pt3dadd( -140.819, 58.0064, 33.2164, 1.7 ) }
    dend_23 { pt3dadd( -140.766, 58.9801, 34.2294, 0.07 ) }
    dend_23 { pt3dadd( -140.713, 59.3966, 34.6585, 0.59 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 61/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -132.559, 43.2514, 21.5166, 0.96 ) }
    dend_20 { pt3dadd( -134.141, 43.4512, 21.9355, 0.96 ) }
    dend_20 { pt3dadd( -135.575, 43.5277, 22.2674, 0.07 ) }
    dend_20 { pt3dadd( -136.024, 43.5383, 22.3594, 0.07 ) }
    dend_20 { pt3dadd( -136.657, 43.5432, 22.4869, 0.15 ) }
    dend_20 { pt3dadd( -136.905, 43.5452, 22.5369, 0.37 ) }
    dend_20 { pt3dadd( -137.534, 43.5501, 22.6638, 0.44 ) }
    dend_20 { pt3dadd( -138.927, 43.4533, 22.9411, 0.22 ) }
    dend_20 { pt3dadd( -139.723, 43.3622, 23.0573, 0.96 ) }
    dend_20 { pt3dadd( -140.464, 43.3053, 23.1612, 1.7 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 71/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 42.3001, -149.245, 28.5665, 0.07 ) }
    dend_14 { pt3dadd( 42.452, -151.145, 30.415, 0.07 ) }
    dend_14 { pt3dadd( 42.4769, -152.107, 31.4758, 0.07 ) }
    dend_14 { pt3dadd( 42.4763, -152.221, 31.6089, 0.59 ) }
    dend_14 { pt3dadd( 42.4679, -152.756, 32.2219, 1.11 ) }
    dend_14 { pt3dadd( 42.4547, -153.762, 33.3221, 0.07 ) }
    dend_14 { pt3dadd( 42.4655, -154.226, 33.7936, 0.52 ) }
    dend_14 { pt3dadd( 42.5582, -156.159, 35.5727, 0.07 ) }
    dend_14 { pt3dadd( 42.5832, -156.553, 35.9177, 0.07 ) }
    dend_14 { pt3dadd( 42.5992, -157.011, 36.2995, 1.03 ) }
    dend_14 { pt3dadd( 42.5892, -157.545, 36.727, 1.25 ) }
    dend_14 { pt3dadd( 42.4548, -159.136, 38.0818, 0.15 ) }
    dend_14 { pt3dadd( 42.3097, -160.187, 39.026, 0.15 ) }
    dend_14 { pt3dadd( 42.198, -160.856, 39.6201, 1.03 ) }
    dend_14 { pt3dadd( 41.9314, -162.065, 40.6938, 0.07 ) }
    dend_14 { pt3dadd( 41.7204, -162.85, 41.3981, 0.81 ) }
    dend_14 { pt3dadd( 41.0866, -164.855, 43.1984, 0.07 ) }
    dend_14 { pt3dadd( 40.8188, -165.59, 43.8262, 0.66 ) }
    dend_14 { pt3dadd( 40.6092, -166.172, 44.2972, 1.18 ) }
    dend_14 { pt3dadd( 40.1156, -167.623, 45.4045, 0.15 ) }
    dend_14 { pt3dadd( 39.8456, -168.52, 45.9971, 0.44 ) }
    dend_14 { pt3dadd( 39.7531, -168.87, 46.1767, 0.44 ) }
    dend_14 { pt3dadd( 39.3747, -170.532, 46.8419, 0.22 ) }
    dend_14 { pt3dadd( 39.1462, -171.738, 47.2923, 0.66 ) }
    dend_14 { pt3dadd( 39.0026, -172.655, 47.6347, 1.47 ) }
    dend_14 { pt3dadd( 38.8919, -173.637, 47.9819, 0.52 ) }
    dend_14 { pt3dadd( 38.7562, -174.934, 48.4816, 0.15 ) }
    dend_14 { pt3dadd( 38.6349, -176.258, 49.0139, 0.15 ) }
    dend_14 { pt3dadd( 38.5718, -177.215, 49.4009, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( 38.5369, -177.856, 49.6456, 0.96 ) }
    dend_14 { pt3dadd( 38.5005, -178.474, 49.8953, 1.11 ) }
    dend_14 { pt3dadd( 38.3384, -180.874, 50.902, 0.07 ) }
    dend_14 { pt3dadd( 38.2965, -181.347, 51.095, 0.07 ) }
    dend_14 { pt3dadd( 38.2156, -181.977, 51.2978, 0.52 ) }
    dend_14 { pt3dadd( 38.0021, -183.422, 51.6933, 0.07 ) }
    dend_14 { pt3dadd( 37.8526, -184.539, 51.9264, 0.07 ) }
    dend_14 { pt3dadd( 37.8124, -184.945, 51.9843, 0.22 ) }
    dend_14 { pt3dadd( 37.7908, -185.321, 52.0036, 0.52 ) }
    dend_14 { pt3dadd( 37.7233, -186.861, 52.0929, 0.07 ) }
    dend_14 { pt3dadd( 37.7148, -187.186, 52.114, 0.52 ) }
    dend_14 { pt3dadd( 37.725, -187.971, 52.1689, 1.03 ) }
    dend_14 { pt3dadd( 37.789, -189.718, 52.3422, 0.07 ) }
    dend_14 { pt3dadd( 37.8116, -190.211, 52.4214, 0.15 ) }
    dend_14 { pt3dadd( 37.8418, -190.86, 52.5578, 0.07 ) }
    dend_14 { pt3dadd( 37.8616, -191.211, 52.6474, 0.44 ) }
    dend_14 { pt3dadd( 37.8821, -191.681, 52.7764, 0.81 ) }
    dend_14 { pt3dadd( 37.9138, -193.322, 53.2768, 0.22 ) }
    dend_14 { pt3dadd( 37.9259, -194.119, 53.5499, 0.81 ) }
    dend_14 { pt3dadd( 37.9288, -194.776, 53.8057, 1.92 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 20/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 42.3001, -149.245, 28.5665, 0.07 ) }
    dend_13 { pt3dadd( 42.4926, -150.47, 28.779, 0.07 ) }
    dend_13 { pt3dadd( 42.5466, -150.774, 28.8276, 0.22 ) }
    dend_13 { pt3dadd( 42.7137, -151.616, 28.9476, 0.07 ) }
    dend_13 { pt3dadd( 42.7577, -151.82, 28.9736, 0.15 ) }
    dend_13 { pt3dadd( 43.0282, -152.964, 29.1072, 0.07 ) }
    dend_13 { pt3dadd( 43.1035, -153.27, 29.1377, 0.66 ) }
    dend_13 { pt3dadd( 43.1934, -153.579, 29.1594, 0.66 ) }
    dend_13 { pt3dadd( 43.3732, -154.147, 29.1942, 0.07 ) }
    dend_13 { pt3dadd( 43.5313, -154.599, 29.2157, 0.74 ) }
    dend_13 { pt3dadd( 43.6568, -154.951, 29.2311, 1.55 ) }
    dend_13 { pt3dadd( 43.9938, -155.939, 29.266, 0.22 ) }
    dend_13 { pt3dadd( 44.3123, -156.872, 29.2807, 0.07 ) }
    dend_13 { pt3dadd( 44.4048, -157.14, 29.2711, 0.74 ) }
    dend_13 { pt3dadd( 44.6106, -157.707, 29.2143, 1.77 ) }
    dend_13 { pt3dadd( 44.9735, -158.608, 29.0603, 0.22 ) }
    dend_13 { pt3dadd( 45.2427, -159.161, 28.8984, 0.22 ) }
    dend_13 { pt3dadd( 45.5113, -159.586, 28.6818, 0.22 ) }
    dend_13 { pt3dadd( 45.8864, -160.055, 28.32, 0.22 ) }
    dend_13 { pt3dadd( 46.1591, -160.342, 28.0497, 0.81 ) }
    dend_13 { pt3dadd( 46.4906, -160.64, 27.7083, 1.55 ) }
    dend_13 { pt3dadd( 47.1248, -161.148, 27.0481, 0.22 ) }
    dend_13 { pt3dadd( 47.5703, -161.491, 26.5673, 0.66 ) }
    dend_13 { pt3dadd( 48.0183, -161.845, 26.0442, 1.25 ) }
    dend_13 { pt3dadd( 48.44, -162.189, 25.5219, 0.22 ) }
    dend_13 { pt3dadd( 48.8865, -162.577, 24.9215, 0.22 ) }
    dend_13 { pt3dadd( 49.1869, -162.892, 24.4736, 0.22 ) }
    dend_13 { pt3dadd( 49.4679, -163.245, 24.0318, 0.22 ) }
    dend_13 { pt3dadd( 49.8319, -163.757, 23.4448, 0.29 ) }
    dend_13 { pt3dadd( 50.0113, -164.027, 23.1543, 1.03 ) }
    dend_13 { pt3dadd( 50.1358, -164.214, 22.963, 1.92 ) }
    dend_13 { pt3dadd( 50.9055, -165.322, 21.9213, 0.22 ) }
    dend_13 { pt3dadd( 51.3833, -165.977, 21.3666, 0.15 ) }
    dend_13 { pt3dadd( 51.6602, -166.359, 21.0856, 0.74 ) }
    dend_13 { pt3dadd( 51.9272, -166.742, 20.8324, 1.33 ) }
    dend_13 { pt3dadd( 52.4155, -167.464, 20.3835, 0.07 ) }
    dend_13 { pt3dadd( 52.5774, -167.698, 20.2447, 0.22 ) }
    dend_13 { pt3dadd( 52.8279, -168.044, 20.0757, 0.15 ) }
    dend_13 { pt3dadd( 53.0127, -168.305, 19.9663, 0.22 ) }
    dend_13 { pt3dadd( 53.3379, -168.793, 19.7697, 0.22 ) }
    dend_13 { pt3dadd( 53.5362, -169.124, 19.6364, 0.66 ) }
    dend_13 { pt3dadd( 53.7072, -169.435, 19.5252, 1.18 ) }
    dend_13 { pt3dadd( 53.9949, -169.963, 19.3258, 0.15 ) }
    dend_13 { pt3dadd( 54.2718, -170.441, 19.1409, 0.15 ) }
    dend_13 { pt3dadd( 54.6103, -170.969, 18.9445, 0.22 ) }
    dend_13 { pt3dadd( 54.8713, -171.36, 18.8183, 0.66 ) }
    dend_13 { pt3dadd( 55.1962, -171.828, 18.6786, 0.15 ) }
    dend_13 { pt3dadd( 55.7317, -172.558, 18.4906, 0.22 ) }
    dend_13 { pt3dadd( 55.984, -172.883, 18.4233, 0.74 ) }
    dend_13 { pt3dadd( 56.2894, -173.261, 18.3716, 1.18 ) }
    dend_13 { pt3dadd( 56.9318, -174.017, 18.308, 0.15 ) }
    dend_13 { pt3dadd( 57.2332, -174.378, 18.2878, 0.22 ) }
    dend_13 { pt3dadd( 57.6424, -174.912, 18.2759, 0.15 ) }
    dend_13 { pt3dadd( 57.8146, -175.162, 18.284, 0.59 ) }
    dend_13 { pt3dadd( 57.9217, -175.338, 18.2899, 0.96 ) }
    dend_13 { pt3dadd( 58.0867, -175.656, 18.2979, 0.59 ) }
    dend_13 { pt3dadd( 58.3341, -176.173, 18.3088, 0.15 ) }
    dend_13 { pt3dadd( 58.524, -176.577, 18.317, 0.37 ) }
    dend_13 { pt3dadd( 58.8699, -177.31, 18.3319, 0.15 ) }
    dend_13 { pt3dadd( 58.9879, -177.544, 18.3375, 0.52 ) }
    dend_13 { pt3dadd( 59.2116, -177.971, 18.3484, 0.88 ) }
    dend_13 { pt3dadd( 59.6304, -178.712, 18.3706, 0.15 ) }
    dend_13 { pt3dadd( 59.8642, -179.093, 18.3839, 0.29 ) }
    dend_13 { pt3dadd( 60.0659, -179.409, 18.3958, 0.22 ) }
    dend_13 { pt3dadd( 60.2131, -179.654, 18.404, 0.44 ) }
    dend_13 { pt3dadd( 60.4268, -180.016, 18.4158, 0.44 ) }
    dend_13 { pt3dadd( 60.9158, -180.853, 18.4425, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 87/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -4.52837, -45.193, 9.1959, 0.29 ) }
    dend_8 { pt3dadd( -4.02466, -46.0494, 8.42007, 0.29 ) }
    dend_8 { pt3dadd( -3.63881, -47.007, 7.61536, 0.07 ) }
    dend_8 { pt3dadd( -3.52776, -47.4149, 7.25837, 0.29 ) }
    dend_8 { pt3dadd( -3.37385, -48.1846, 6.60913, 0.15 ) }
    dend_8 { pt3dadd( -3.29667, -48.6822, 6.19023, 0.52 ) }
    dend_8 { pt3dadd( -3.22003, -49.3328, 5.65996, 0.59 ) }
    dend_8 { pt3dadd( -3.12948, -50.5716, 4.72477, 0.15 ) }
    dend_8 { pt3dadd( -3.10608, -51.4974, 4.05887, 0.74 ) }
    dend_8 { pt3dadd( -3.10838, -52.2587, 3.51481, 1.99 ) }
    dend_8 { pt3dadd( -3.11342, -52.8194, 3.12742, 1.99 ) }
    dend_8 { pt3dadd( -3.09638, -54.5161, 2.00038, 0.15 ) }
    dend_8 { pt3dadd( -3.06378, -55.0175, 1.68592, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_8 { pt3dadd( -2.92963, -56.0869, 1.10476, 0.22 ) }
    dend_8 { pt3dadd( -2.8779, -56.4012, 0.95133, 0.81 ) }
    dend_8 { pt3dadd( -2.75469, -57.0665, 0.647915, 1.18 ) }
    dend_8 { pt3dadd( -2.61942, -57.7115, 0.37262, 0.59 ) }
    dend_8 { pt3dadd( -2.30924, -59.0216, -0.154746, 0.07 ) }
    dend_8 { pt3dadd( -2.12194, -59.799, -0.454556, 0.07 ) }
    dend_8 { pt3dadd( -2.04433, -60.0792, -0.553532, 0.07 ) }
    dend_8 { pt3dadd( -1.84884, -60.7588, -0.799058, 0.29 ) }
    dend_8 { pt3dadd( -1.56033, -61.7502, -1.15556, 0.22 ) }
    dend_8 { pt3dadd( -1.30918, -62.5529, -1.44267, 0.96 ) }
    dend_8 { pt3dadd( -1.0464, -63.3953, -1.72019, 0.22 ) }
    dend_8 { pt3dadd( -0.690347, -64.709, -2.14673, 0.15 ) }
    dend_8 { pt3dadd( -0.413443, -65.9032, -2.51665, 0.15 ) }
    dend_8 { pt3dadd( -0.236597, -66.7519, -2.7661, 1.03 ) }
    dend_8 { pt3dadd( -0.039459, -67.7974, -3.04512, 2.14 ) }
    dend_8 { pt3dadd( 0.206717, -69.3208, -3.44207, 0.22 ) }
    dend_8 { pt3dadd( 0.376532, -70.5948, -3.75711, 0.22 ) }
    dend_8 { pt3dadd( 0.437784, -71.2621, -3.90375, 0.66 ) }
    dend_8 { pt3dadd( 0.471183, -71.9366, -4.04482, 0.96 ) }
    dend_8 { pt3dadd( 0.489167, -73.1338, -4.29414, 0.52 ) }
    dend_8 { pt3dadd( 0.46222, -74.3986, -4.54161, 0.22 ) }
    dend_8 { pt3dadd( 0.414461, -75.5182, -4.75079, 0.88 ) }
    dend_8 { pt3dadd( 0.314468, -77.2189, -5.04232, 0.22 ) }
    dend_8 { pt3dadd( 0.179537, -78.6447, -5.24343, 0.15 ) }
    dend_8 { pt3dadd( 0.048103, -79.6169, -5.36449, 0.22 ) }
    dend_8 { pt3dadd( -0.217048, -81.1833, -5.52509, 0.15 ) }
    dend_8 { pt3dadd( -0.364615, -82.0179, -5.59351, 0.81 ) }
    dend_8 { pt3dadd( -0.493076, -82.7628, -5.64618, 0.81 ) }
    dend_8 { pt3dadd( -0.71355, -84.5213, -5.75826, 0.15 ) }
    dend_8 { pt3dadd( -0.770608, -85.6023, -5.77097, 0.22 ) }
    dend_8 { pt3dadd( -0.768997, -86.222, -5.78377, 0.88 ) }
    dend_8 { pt3dadd( -0.727238, -87.012, -5.82088, 1.84 ) }
    dend_8 { pt3dadd( -0.633645, -87.8494, -5.88919, 1.03 ) }
    dend_8 { pt3dadd( -0.391366, -89.4723, -6.12199, 0.22 ) }
    dend_8 { pt3dadd( -0.125541, -90.9183, -6.3846, 0.22 ) }
    dend_8 { pt3dadd( 0.029372, -91.8097, -6.60048, 0.22 ) }
    dend_8 { pt3dadd( 0.134199, -92.57, -6.8087, 0.81 ) }
    dend_8 { pt3dadd( 0.24144, -93.4688, -7.07333, 1.47 ) }
    dend_8 { pt3dadd( 0.407949, -95.203, -7.63407, 0.37 ) }
    dend_8 { pt3dadd( 0.464978, -96.2463, -8.02446, 0.44 ) }
    dend_8 { pt3dadd( 0.522707, -97.7733, -8.68365, 0.74 ) }
    dend_8 { pt3dadd( 0.582398, -99.2998, -9.25882, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 42/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.52837, -45.193, 9.1959, 0.22 ) }
    dend_7 { pt3dadd( -4.56497, -47.632, 10.7242, 0.22 ) }
    dend_7 { pt3dadd( -4.53934, -48.5122, 11.3164, 0.66 ) }
    dend_7 { pt3dadd( -4.49419, -49.5673, 12.0277, 1.03 ) }
    dend_7 { pt3dadd( -4.43674, -50.7426, 12.7979, 0.22 ) }
    dend_7 { pt3dadd( -4.40096, -51.6779, 13.3931, 0.22 ) }
    dend_7 { pt3dadd( -4.37528, -52.6422, 13.9717, 0.37 ) }
    dend_7 { pt3dadd( -4.33046, -53.6584, 14.5257, 0.37 ) }
    dend_7 { pt3dadd( -4.32028, -54.336, 14.891, 0.88 ) }
    dend_7 { pt3dadd( -4.32641, -54.8676, 15.1649, 1.92 ) }
    dend_7 { pt3dadd( -4.34961, -55.5854, 15.5051, 2.14 ) }
    dend_7 { pt3dadd( -4.40407, -57.3547, 16.2852, 0.22 ) }
    dend_7 { pt3dadd( -4.42869, -58.824, 16.9284, 0.22 ) }
    dend_7 { pt3dadd( -4.42649, -59.6815, 17.3133, 0.88 ) }
    dend_7 { pt3dadd( -4.38594, -60.4972, 17.7104, 1.7 ) }
    dend_7 { pt3dadd( -4.30174, -61.3143, 18.1355, 2.06 ) }
    dend_7 { pt3dadd( -3.96947, -63.4134, 19.2875, 0.29 ) }
    dend_7 { pt3dadd( -3.72568, -64.6567, 19.9713, 0.29 ) }
    dend_7 { pt3dadd( -3.50514, -65.6301, 20.4923, 0.81 ) }
    dend_7 { pt3dadd( -3.31186, -66.524, 20.9241, 1.25 ) }
    dend_7 { pt3dadd( -2.97369, -68.4652, 21.8165, 0.15 ) }
    dend_7 { pt3dadd( -2.87581, -69.2723, 22.1531, 0.15 ) }
    dend_7 { pt3dadd( -2.82606, -70.0017, 22.4213, 0.88 ) }
    dend_7 { pt3dadd( -2.79826, -71.2305, 22.8126, 2.43 ) }
    dend_7 { pt3dadd( -2.83839, -73.1832, 23.3521, 0.66 ) }
    dend_7 { pt3dadd( -2.96885, -75.2081, 23.8418, 0.29 ) }
    dend_7 { pt3dadd( -3.05333, -76.177, 24.0438, 0.88 ) }
    dend_7 { pt3dadd( -3.20141, -77.9023, 24.3724, 0.22 ) }
    dend_7 { pt3dadd( -3.2352, -78.4824, 24.4932, 0.52 ) }
    dend_7 { pt3dadd( -3.25272, -79.2147, 24.6319, 0.88 ) }
    dend_7 { pt3dadd( -3.22439, -79.953, 24.7616, 0.37 ) }
    dend_7 { pt3dadd( -3.13136, -80.9347, 24.8916, 0.15 ) }
    dend_7 { pt3dadd( -3.02132, -81.9647, 25.0338, 0.52 ) }
    dend_7 { pt3dadd( -2.89566, -83.1152, 25.2039, 0.15 ) }
    dend_7 { pt3dadd( -2.79224, -84.0229, 25.3654, 0.15 ) }
    dend_7 { pt3dadd( -2.74337, -84.4522, 25.4614, 0.66 ) }
    dend_7 { pt3dadd( -2.68655, -85.0272, 25.6084, 0.96 ) }
    dend_7 { pt3dadd( -2.53718, -86.625, 26.0561, 0.22 ) }
    dend_7 { pt3dadd( -2.4433, -87.6401, 26.3475, 1.25 ) }
    dend_7 { pt3dadd( -2.38953, -88.2922, 26.5377, 2.43 ) }
    dend_7 { pt3dadd( -2.32282, -89.0343, 26.7724, 1.99 ) }
    dend_7 { pt3dadd( -2.12993, -90.9803, 27.4171, 0.22 ) }
    dend_7 { pt3dadd( -1.98673, -92.2757, 27.8561, 0.07 ) }
    dend_7 { pt3dadd( -1.88618, -93.1473, 28.1681, 0.96 ) }
    dend_7 { pt3dadd( -1.72955, -94.7545, 28.7954, 0.15 ) }
    dend_7 { pt3dadd( -1.69236, -95.3845, 29.0723, 0.15 ) }
    dend_7 { pt3dadd( -1.69239, -95.9999, 29.3879, 0.88 ) }
    dend_7 { pt3dadd( -1.77331, -96.7259, 29.8763, 1.47 ) }
    dend_7 { pt3dadd( -2.17533, -98.177, 31.1043, 0.15 ) }
    dend_7 { pt3dadd( -2.42493, -98.7027, 31.6582, 0.22 ) }
    dend_7 { pt3dadd( -2.87396, -99.3129, 32.466, 0.22 ) }
    dend_7 { pt3dadd( -3.31536, -99.7737, 33.1828, 0.37 ) }
    dend_7 { pt3dadd( -3.91392, -100.279, 34.0945, 0.81 ) }
    dend_7 { pt3dadd( -4.5179, -100.693, 34.9266, 1.25 ) }
    dend_7 { pt3dadd( -5.12352, -101.045, 35.6842, 0.22 ) }
    dend_7 { pt3dadd( -5.89972, -101.504, 36.6181, 0.22 ) }
    dend_7 { pt3dadd( -6.55988, -101.906, 37.3988, 0.66 ) }
    dend_7 { pt3dadd( -7.14855, -102.277, 38.0741, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( -8.07593, -102.9, 39.1556, 0.15 ) }
    dend_7 { pt3dadd( -8.30046, -103.064, 39.4255, 0.37 ) }
    dend_7 { pt3dadd( -9.04052, -103.638, 40.3157, 0.15 ) }
    dend_7 { pt3dadd( -9.6055, -104.081, 40.9627, 0.66 ) }
    dend_7 { pt3dadd( -9.99913, -104.408, 41.3748, 1.18 ) }
    dend_7 { pt3dadd( -11.169, -105.439, 42.6488, 0.29 ) }
    dend_7 { pt3dadd( -12.1109, -106.328, 43.7461, 0.15 ) }
    dend_7 { pt3dadd( -12.3651, -106.599, 44.0624, 0.74 ) }
    dend_7 { pt3dadd( -12.8436, -107.169, 44.693, 1.7 ) }
    dend_7 { pt3dadd( -14.005, -108.705, 46.3555, 0.22 ) }
    dend_7 { pt3dadd( -14.8764, -110.067, 47.7916, 0.22 ) }
    dend_7 { pt3dadd( -15.3685, -110.996, 48.7299, 1.18 ) }
    dend_7 { pt3dadd( -15.962, -112.365, 50.1092, 0.07 ) }
    dend_7 { pt3dadd( -16.1519, -112.928, 50.6617, 0.29 ) }
    dend_7 { pt3dadd( -16.3784, -113.979, 51.6671, 0.66 ) }
    dend_7 { pt3dadd( -16.4555, -114.913, 52.5499, 0.15 ) }
    dend_7 { pt3dadd( -16.4626, -115.357, 52.9338, 0.29 ) }
    dend_7 { pt3dadd( -16.4396, -115.977, 53.4724, 0.37 ) }
    dend_7 { pt3dadd( -16.365, -116.707, 54.147, 1.11 ) }
    dend_7 { pt3dadd( -16.1913, -117.662, 55.0907, 0.29 ) }
    dend_7 { pt3dadd( -15.9045, -118.725, 56.1919, 0.88 ) }
    dend_7 { pt3dadd( -15.3895, -120.135, 57.7794, 0.15 ) }
    dend_7 { pt3dadd( -15.035, -120.845, 58.6602, 1.11 ) }
    dend_7 { pt3dadd( -14.3294, -121.964, 60.1696, 0.66 ) }
    dend_7 { pt3dadd( -13.5386, -123.072, 61.7772, 0.22 ) }
    dend_7 { pt3dadd( -13.0453, -123.732, 62.7276, 0.96 ) }
    dend_7 { pt3dadd( -12.1855, -124.845, 64.3011, 0.88 ) }
    dend_7 { pt3dadd( -11.2296, -126.079, 66.1001, 0.22 ) }
    dend_7 { pt3dadd( -10.621, -126.905, 67.3168, 0.74 ) }
    dend_7 { pt3dadd( -10.1759, -127.546, 68.2517, 1.03 ) }
    dend_7 { pt3dadd( -9.34842, -128.849, 70.0905, 0.15 ) }
    dend_7 { pt3dadd( -8.75205, -129.862, 71.4683, 1.33 ) }
    dend_7 { pt3dadd( -7.71108, -131.761, 73.9388, 0.37 ) }
    dend_7 { pt3dadd( -7.22571, -132.691, 75.0903, 0.37 ) }
    dend_7 { pt3dadd( -6.82664, -133.483, 76.0295, 0.22 ) }
    dend_7 { pt3dadd( -6.63164, -133.87, 76.4783, 0.74 ) }
    dend_7 { pt3dadd( -6.0769, -135.047, 77.8026, 0.22 ) }
    dend_7 { pt3dadd( -5.76906, -135.849, 78.5987, 0.52 ) }
    dend_7 { pt3dadd( -5.60322, -136.414, 79.054, 1.11 ) }
    dend_7 { pt3dadd( -5.34879, -137.664, 79.9964, 0.07 ) }
    dend_7 { pt3dadd( -5.26022, -138.374, 80.5008, 0.15 ) }
    dend_7 { pt3dadd( -5.21266, -139.069, 80.9617, 0.66 ) }
    dend_7 { pt3dadd( -5.22221, -140.069, 81.5322, 0.07 ) }
    dend_7 { pt3dadd( -5.23988, -140.5, 81.7638, 0.22 ) }
    dend_7 { pt3dadd( -5.28138, -141.226, 82.1695, 0.07 ) }
    dend_7 { pt3dadd( -5.34796, -141.883, 82.5481, 1.03 ) }
    dend_7 { pt3dadd( -5.42656, -142.531, 82.9193, 1.4 ) }
    dend_7 { pt3dadd( -5.62191, -144.069, 83.7799, 0.22 ) }
    dend_7 { pt3dadd( -5.78432, -145.318, 84.4883, 0.07 ) }
    dend_7 { pt3dadd( -5.89216, -146.123, 84.9601, 0.59 ) }
    dend_7 { pt3dadd( -6.05459, -147.385, 85.7362, 0.07 ) }
    dend_7 { pt3dadd( -6.15148, -148.147, 86.245, 0.15 ) }
    dend_7 { pt3dadd( -6.27408, -148.932, 86.8259, 1.18 ) }
    dend_7 { pt3dadd( -6.42081, -149.723, 87.4439, 0.15 ) }
    dend_7 { pt3dadd( -6.55918, -150.46, 88.0898, 0.88 ) }
    dend_7 { pt3dadd( -6.74709, -151.443, 89.0119, 0.07 ) }
    dend_7 { pt3dadd( -6.84701, -151.984, 89.5557, 0.44 ) }
    dend_7 { pt3dadd( -7.08421, -153.105, 90.8221, 0.15 ) }
    dend_7 { pt3dadd( -7.24842, -153.83, 91.7113, 0.96 ) }
    dend_7 { pt3dadd( -7.58254, -155.284, 93.5665, 0.29 ) }
    dend_7 { pt3dadd( -7.70784, -155.793, 94.2197, 0.15 ) }
    dend_7 { pt3dadd( -7.82906, -156.202, 94.7227, 0.52 ) }
    dend_7 { pt3dadd( -8.16736, -157.254, 95.9353, 0.37 ) }
    dend_7 { pt3dadd( -8.48162, -158.232, 96.9426, 1.25 ) }
    dend_7 { pt3dadd( -8.7331, -159.006, 97.6385, 0.07 ) }
    dend_7 { pt3dadd( -8.90264, -159.556, 98.0547, 0.22 ) }
    dend_7 { pt3dadd( -9.2472, -160.799, 98.9173, 0.07 ) }
    dend_7 { pt3dadd( -9.34067, -161.194, 99.161, 0.59 ) }
    dend_7 { pt3dadd( -9.50122, -161.985, 99.5941, 1.33 ) }
    dend_7 { pt3dadd( -9.83173, -163.733, 100.5, 0.07 ) }
    dend_7 { pt3dadd( -10.046, -165.031, 101.168, 0.07 ) }
    dend_7 { pt3dadd( -10.1213, -165.662, 101.513, 0.59 ) }
    dend_7 { pt3dadd( -10.176, -166.554, 102.032, 0.15 ) }
    dend_7 { pt3dadd( -10.2163, -167.374, 102.543, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -37.4359, -90.6869, 16.7317, 0.22 ) }
    dend_5 { pt3dadd( -38.5522, -91.8381, 17.454, 0.22 ) }
    dend_5 { pt3dadd( -39.3233, -92.6628, 17.842, 0.22 ) }
    dend_5 { pt3dadd( -39.6494, -92.9782, 17.96, 0.15 ) }
    dend_5 { pt3dadd( -40.1078, -93.4114, 18.1229, 0.44 ) }
    dend_5 { pt3dadd( -40.539, -93.8137, 18.2798, 0.96 ) }
    dend_5 { pt3dadd( -40.9845, -94.2272, 18.443, 1.11 ) }
    dend_5 { pt3dadd( -41.9122, -95.0842, 18.7389, 0.29 ) }
    dend_5 { pt3dadd( -43.2284, -96.3522, 19.1938, 0.22 ) }
    dend_5 { pt3dadd( -43.7263, -96.817, 19.3587, 0.59 ) }
    dend_5 { pt3dadd( -44.0653, -97.1211, 19.4691, 0.96 ) }
    dend_5 { pt3dadd( -44.5733, -97.5638, 19.6471, 0.96 ) }
    dend_5 { pt3dadd( -45.3218, -98.2015, 19.9321, 0.22 ) }
    dend_5 { pt3dadd( -45.9746, -98.7638, 20.21, 0.22 ) }
    dend_5 { pt3dadd( -46.8323, -99.5605, 20.6151, 0.22 ) }
    dend_5 { pt3dadd( -47.2061, -99.9089, 20.803, 0.52 ) }
    dend_5 { pt3dadd( -47.833, -100.507, 21.1506, 1.33 ) }
    dend_5 { pt3dadd( -48.5659, -101.213, 21.5927, 0.22 ) }
    dend_5 { pt3dadd( -49.1881, -101.823, 21.9867, 0.52 ) }
    dend_5 { pt3dadd( -49.9787, -102.638, 22.5427, 0.15 ) }
    dend_5 { pt3dadd( -50.5327, -103.269, 22.9675, 0.15 ) }
    dend_5 { pt3dadd( -50.8483, -103.649, 23.2086, 0.22 ) }
    dend_5 { pt3dadd( -50.9959, -103.85, 23.3296, 0.37 ) }
    dend_5 { pt3dadd( -51.364, -104.383, 23.6547, 0.81 ) }
    dend_5 { pt3dadd( -51.8359, -105.127, 24.1251, 0.15 ) }
    dend_5 { pt3dadd( -51.9691, -105.36, 24.2811, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( -52.1575, -105.73, 24.5333, 0.15 ) }
    dend_5 { pt3dadd( -52.503, -106.351, 25.0058, 0.22 ) }
    dend_5 { pt3dadd( -52.8517, -106.919, 25.5271, 0.15 ) }
    dend_5 { pt3dadd( -53.1367, -107.309, 25.9633, 0.15 ) }
    dend_5 { pt3dadd( -53.3563, -107.547, 26.2838, 0.44 ) }
    dend_5 { pt3dadd( -53.6749, -107.836, 26.7294, 0.66 ) }
    dend_5 { pt3dadd( -54.5234, -108.541, 27.9432, 0.22 ) }
    dend_5 { pt3dadd( -55.1303, -109.03, 28.8018, 0.74 ) }
    dend_5 { pt3dadd( -55.7679, -109.533, 29.7067, 1.7 ) }
    dend_5 { pt3dadd( -56.6725, -110.24, 30.9922, 0.22 ) }
    dend_5 { pt3dadd( -57.1645, -110.633, 31.7068, 0.15 ) }
    dend_5 { pt3dadd( -57.6942, -111.055, 32.4975, 0.52 ) }
    dend_5 { pt3dadd( -57.9914, -111.289, 32.9616, 0.66 ) }
    dend_5 { pt3dadd( -58.6313, -111.77, 33.9213, 0.22 ) }
    dend_5 { pt3dadd( -59.1678, -112.146, 34.6962, 0.37 ) }
    dend_5 { pt3dadd( -59.6616, -112.451, 35.3614, 0.22 ) }
    dend_5 { pt3dadd( -60.1212, -112.674, 35.9078, 0.37 ) }
    dend_5 { pt3dadd( -60.5723, -112.836, 36.3588, 0.37 ) }
    dend_5 { pt3dadd( -61.0431, -112.978, 36.8057, 0.15 ) }
    dend_5 { pt3dadd( -61.7546, -113.204, 37.4253, 0.15 ) }
    dend_5 { pt3dadd( -62.0517, -113.299, 37.6651, 0.74 ) }
    dend_5 { pt3dadd( -62.8772, -113.599, 38.2818, 1.55 ) }
    dend_5 { pt3dadd( -64.1997, -114.163, 39.264, 0.07 ) }
    dend_5 { pt3dadd( -65.1275, -114.622, 39.9701, 0.15 ) }
    dend_5 { pt3dadd( -65.835, -115.018, 40.5268, 0.07 ) }
    dend_5 { pt3dadd( -66.0685, -115.174, 40.7183, 0.44 ) }
    dend_5 { pt3dadd( -66.4051, -115.434, 41.0118, 0.44 ) }
    dend_5 { pt3dadd( -67.1529, -116.111, 41.701, 0.22 ) }
    dend_5 { pt3dadd( -67.6376, -116.619, 42.1678, 0.88 ) }
    dend_5 { pt3dadd( -67.9911, -117.016, 42.4913, 1.47 ) }
    dend_5 { pt3dadd( -68.926, -118.136, 43.3545, 0.07 ) }
    dend_5 { pt3dadd( -69.4208, -118.758, 43.8038, 0.07 ) }
    dend_5 { pt3dadd( -69.5746, -118.961, 43.9398, 0.29 ) }
    dend_5 { pt3dadd( -70.0192, -119.575, 44.2914, 0.81 ) }
    dend_5 { pt3dadd( -70.6401, -120.422, 44.7171, 0.07 ) }
    dend_5 { pt3dadd( -71.1898, -121.166, 45.0361, 0.07 ) }
    dend_5 { pt3dadd( -71.786, -121.985, 45.2895, 0.07 ) }
    dend_5 { pt3dadd( -72.0117, -122.307, 45.3724, 0.59 ) }
    dend_5 { pt3dadd( -72.3502, -122.797, 45.4893, 0.96 ) }
    dend_5 { pt3dadd( -73.1664, -124.029, 45.777, 0.15 ) }
    dend_5 { pt3dadd( -73.552, -124.646, 45.9201, 0.88 ) }
    dend_5 { pt3dadd( -74.4775, -126.147, 46.2778, 0.07 ) }
    dend_5 { pt3dadd( -74.8507, -126.79, 46.4562, 0.37 ) }
    dend_5 { pt3dadd( -74.8851, -126.854, 46.4771, 0.37 ) }
    dend_5 { pt3dadd( -75.3735, -127.869, 46.871, 0.07 ) }
    dend_5 { pt3dadd( -75.6618, -128.59, 47.2059, 0.88 ) }
    dend_5 { pt3dadd( -76.0767, -129.763, 47.8436, 0.07 ) }
    dend_5 { pt3dadd( -76.3161, -130.556, 48.313, 0.07 ) }
    dend_5 { pt3dadd( -76.413, -130.932, 48.5315, 0.29 ) }
    dend_5 { pt3dadd( -76.4855, -131.232, 48.7065, 0.29 ) }
    dend_5 { pt3dadd( -76.7359, -132.314, 49.3366, 0.07 ) }
    dend_5 { pt3dadd( -76.929, -133.054, 49.7688, 0.81 ) }
    dend_5 { pt3dadd( -77.0709, -133.537, 50.043, 1.4 ) }
    dend_5 { pt3dadd( -77.8742, -135.851, 51.4004, 0.07 ) }
    dend_5 { pt3dadd( -78.0939, -136.412, 51.7472, 0.74 ) }
    dend_5 { pt3dadd( -78.2819, -136.846, 52.0229, 0.74 ) }
    dend_5 { pt3dadd( -78.8891, -138.146, 52.8823, 0.07 ) }
    dend_5 { pt3dadd( -79.1324, -138.626, 53.2149, 0.22 ) }
    dend_5 { pt3dadd( -79.6564, -139.547, 53.9067, 0.07 ) }
    dend_5 { pt3dadd( -80.0184, -140.105, 54.3799, 0.81 ) }
    dend_5 { pt3dadd( -80.2614, -140.487, 54.7303, 1.25 ) }
    dend_5 { pt3dadd( -80.8938, -141.48, 55.7734, 0.22 ) }
    dend_5 { pt3dadd( -81.2016, -141.948, 56.3126, 0.07 ) }
    dend_5 { pt3dadd( -81.4314, -142.292, 56.7202, 0.44 ) }
    dend_5 { pt3dadd( -82.229, -143.416, 58.0851, 0.07 ) }
    dend_5 { pt3dadd( -82.7298, -144.096, 58.9552, 1.03 ) }
    dend_5 { pt3dadd( -83.3478, -144.913, 60.0831, 0.07 ) }
    dend_5 { pt3dadd( -83.6086, -145.244, 60.5763, 0.22 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -37.4359, -90.6869, 16.7317, 0.07 ) }
    dend_2 { pt3dadd( -37.6545, -91.1487, 16.7756, 0.07 ) }
    dend_2 { pt3dadd( -37.8223, -91.475, 16.8139, 0.29 ) }
    dend_2 { pt3dadd( -38.0875, -91.9282, 16.8774, 0.15 ) }
    dend_2 { pt3dadd( -38.2743, -92.2114, 16.9193, 0.15 ) }
    dend_2 { pt3dadd( -38.5218, -92.5619, 16.9699, 0.74 ) }
    dend_2 { pt3dadd( -38.6201, -92.7007, 16.9868, 0.74 ) }
    dend_2 { pt3dadd( -39.0655, -93.3228, 17.0265, 0.15 ) }
    dend_2 { pt3dadd( -39.3792, -93.7779, 17.0282, 0.15 ) }
    dend_2 { pt3dadd( -39.5753, -94.0892, 17.0117, 0.29 ) }
    dend_2 { pt3dadd( -39.8159, -94.5057, 16.9666, 0.15 ) }
    dend_2 { pt3dadd( -39.9723, -94.8302, 16.9142, 0.29 ) }
    dend_2 { pt3dadd( -40.1862, -95.4242, 16.806, 0.07 ) }
    dend_2 { pt3dadd( -40.2332, -95.6239, 16.7652, 0.52 ) }
    dend_2 { pt3dadd( -40.2716, -95.8732, 16.715, 0.88 ) }
    dend_2 { pt3dadd( -40.3132, -96.2456, 16.6599, 0.88 ) }
    dend_2 { pt3dadd( -40.3936, -96.9381, 16.6047, 0.07 ) }
    dend_2 { pt3dadd( -40.4595, -97.4166, 16.5945, 0.07 ) }
    dend_2 { pt3dadd( -40.5091, -97.707, 16.6017, 0.29 ) }
    dend_2 { pt3dadd( -40.5647, -97.9883, 16.6122, 0.74 ) }
    dend_2 { pt3dadd( -40.6845, -98.4814, 16.6335, 0.22 ) }
    dend_2 { pt3dadd( -40.953, -99.4257, 16.6494, 0.22 ) }
    dend_2 { pt3dadd( -41.0496, -99.6973, 16.6471, 0.59 ) }
    dend_2 { pt3dadd( -41.1704, -99.9829, 16.6358, 1.11 ) }
    dend_2 { pt3dadd( -41.2293, -100.113, 16.6252, 1.25 ) }
    dend_2 { pt3dadd( -41.43, -100.547, 16.5693, 0.74 ) }
    dend_2 { pt3dadd( -41.6725, -101.068, 16.4729, 0.22 ) }
    dend_2 { pt3dadd( -41.8754, -101.516, 16.372, 0.15 ) }
    dend_2 { pt3dadd( -42.0493, -101.924, 16.2726, 0.15 ) }
    dend_2 { pt3dadd( -42.1694, -102.224, 16.1984, 0.15 ) }
    dend_2 { pt3dadd( -42.3061, -102.573, 16.1181, 0.15 ) }
    dend_2 { pt3dadd( -42.4287, -102.89, 16.0441, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -42.6282, -103.404, 15.9317, 0.22 ) }
    dend_2 { pt3dadd( -42.7691, -103.777, 15.8487, 0.74 ) }
    dend_2 { pt3dadd( -42.894, -104.131, 15.7572, 1.25 ) }
    dend_2 { pt3dadd( -43.0777, -104.684, 15.6092, 0.22 ) }
    dend_2 { pt3dadd( -43.2709, -105.32, 15.4339, 0.15 ) }
    dend_2 { pt3dadd( -43.3371, -105.565, 15.368, 0.74 ) }
    dend_2 { pt3dadd( -43.4207, -105.929, 15.2798, 0.88 ) }
    dend_2 { pt3dadd( -43.609, -106.889, 15.0469, 0.15 ) }
    dend_2 { pt3dadd( -43.6968, -107.454, 14.9052, 0.15 ) }
    dend_2 { pt3dadd( -43.7169, -107.646, 14.8567, 0.29 ) }
    dend_2 { pt3dadd( -43.7399, -108.038, 14.7687, 0.37 ) }
    dend_2 { pt3dadd( -43.7643, -108.473, 14.6718, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_46 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -14.4194, -27.7122, -12.4026, 0.66 ) }
    dend_66 { pt3dadd( -13.8038, -29.1399, -11.9226, 0.66 ) }
    dend_66 { pt3dadd( -13.0946, -30.344, -11.6291, 0.29 ) }
    dend_66 { pt3dadd( -12.7389, -30.932, -11.5172, 0.29 ) }
    dend_66 { pt3dadd( -12.3154, -31.7081, -11.3943, 0.66 ) }
    dend_66 { pt3dadd( -11.6424, -33.0879, -11.1423, 0.81 ) }
    dend_66 { pt3dadd( -10.925, -34.6793, -10.8295, 0.37 ) }
    dend_66 { pt3dadd( -10.328, -35.9142, -10.5902, 0.37 ) }
    dend_66 { pt3dadd( -9.83983, -36.9686, -10.3549, 0.22 ) }
    dend_66 { pt3dadd( -9.40315, -37.9913, -10.1193, 0.29 ) }
    dend_66 { pt3dadd( -8.94884, -39.2667, -9.77301, 0.29 ) }
    dend_66 { pt3dadd( -8.78992, -39.9124, -9.55245, 1.4 ) }
    dend_66 { pt3dadd( -8.68814, -40.6345, -9.225, 2.58 ) }
    dend_66 { pt3dadd( -8.61807, -41.9808, -8.44894, 2.58 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 26/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -14.4194, -27.7122, -12.4026, 0.59 ) }
    dend_47 { pt3dadd( -14.1972, -27.9661, -12.9919, 0.59 ) }
    dend_47 { pt3dadd( -13.7114, -28.3093, -13.9982, 0.59 ) }
    dend_47 { pt3dadd( -13.2149, -28.5581, -14.9814, 0.59 ) }
    dend_47 { pt3dadd( -12.9887, -28.6414, -15.4918, 0.59 ) }
    dend_47 { pt3dadd( -12.5781, -28.77, -16.6199, 0.44 ) }
    dend_47 { pt3dadd( -12.1676, -28.8985, -17.7477, 0.44 ) }
    dend_47 { pt3dadd( -11.8202, -28.9684, -18.5368, 0.74 ) }
    dend_47 { pt3dadd( -11.4883, -28.971, -19.1924, 0.74 ) }
    dend_47 { pt3dadd( -11.0193, -28.8545, -20.1627, 0.22 ) }
    dend_47 { pt3dadd( -10.7809, -28.6989, -20.8455, 0.37 ) }
    dend_47 { pt3dadd( -4.84974, -30.514, -28.337, 0.37 ) }
    dend_47 { pt3dadd( 0.179603, -31.4795, -36.616, 0.37 ) }
    dend_47 { pt3dadd( 4.33093, -31.0392, -45.4082, 0.37 ) }
    dend_47 { pt3dadd( 7.39381, -30.5417, -54.633, 0.37 ) }
    dend_47 { pt3dadd( 9.67014, -29.9599, -64.0774, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 178.047, -11.0035, 79.3573, 0.07 ) }
    dend_41 { pt3dadd( 178.245, -10.3008, 79.4272, 0.07 ) }
    dend_41 { pt3dadd( 178.401, -9.78013, 79.5205, 0.22 ) }
    dend_41 { pt3dadd( 178.683, -8.91884, 79.7062, 0.07 ) }
    dend_41 { pt3dadd( 178.801, -8.59243, 79.7886, 0.59 ) }
    dend_41 { pt3dadd( 178.91, -8.31314, 79.8627, 0.96 ) }
    dend_41 { pt3dadd( 179.417, -7.0606, 80.1982, 0.07 ) }
    dend_41 { pt3dadd( 179.707, -6.43776, 80.3697, 0.15 ) }
    dend_41 { pt3dadd( 180.115, -5.62745, 80.6045, 0.07 ) }
    dend_41 { pt3dadd( 180.542, -4.82927, 80.8161, 0.07 ) }
    dend_41 { pt3dadd( 180.726, -4.50674, 80.8906, 0.29 ) }
    dend_41 { pt3dadd( 180.961, -4.11965, 80.9593, 0.96 ) }
    dend_41 { pt3dadd( 181.568, -3.17621, 81.0833, 0.07 ) }
    dend_41 { pt3dadd( 181.949, -2.57138, 81.1315, 0.07 ) }
    dend_41 { pt3dadd( 182.255, -2.07516, 81.1764, 0.29 ) }
    dend_41 { pt3dadd( 182.64, -1.43184, 81.2423, 1.18 ) }
    dend_41 { pt3dadd( 183.337, -0.238651, 81.4013, 0.07 ) }
    dend_41 { pt3dadd( 183.712, 0.427162, 81.5145, 0.07 ) }
    dend_41 { pt3dadd( 183.95, 0.879301, 81.6058, 0.22 ) }
    dend_41 { pt3dadd( 184.408, 1.80132, 81.8647, 0.07 ) }
    dend_41 { pt3dadd( 184.551, 2.10589, 81.9792, 0.29 ) }
    dend_41 { pt3dadd( 184.732, 2.53163, 82.1502, 0.52 ) }
    dend_41 { pt3dadd( 185.109, 3.54458, 82.5575, 0.07 ) }
    dend_41 { pt3dadd( 185.189, 3.78118, 82.6595, 0.29 ) }
    dend_41 { pt3dadd( 185.654, 5.11776, 83.3771, 0.07 ) }
    dend_41 { pt3dadd( 185.865, 5.69143, 83.7592, 0.07 ) }
    dend_41 { pt3dadd( 186.055, 6.21492, 84.1279, 1.11 ) }
    dend_41 { pt3dadd( 186.358, 7.03902, 84.7598, 0.07 ) }
    dend_41 { pt3dadd( 186.641, 7.78691, 85.4133, 0.07 ) }
    dend_41 { pt3dadd( 187.058, 8.80919, 86.3989, 0.29 ) }
    dend_41 { pt3dadd( 187.329, 9.37882, 87.0685, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 178.047, -11.0035, 79.3573, 0.07 ) }
    dend_36 { pt3dadd( 179.069, -11.6184, 79.5389, 0.07 ) }
    dend_36 { pt3dadd( 179.705, -12.0013, 79.652, 0.15 ) }
    dend_36 { pt3dadd( 180.391, -12.4144, 79.7741, 1.4 ) }
    dend_36 { pt3dadd( 181.37, -13.0035, 79.9481, 0.52 ) }
    dend_36 { pt3dadd( 182.129, -13.4599, 80.0829, 0.88 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 79/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -140.464, 43.3053, 23.1612, 0.22 ) }
    dend_22 { pt3dadd( -141.816, 43.1857, 22.7237, 0.22 ) }
    dend_22 { pt3dadd( -142.212, 43.154, 22.5913, 0.44 ) }
    dend_22 { pt3dadd( -142.815, 43.1041, 22.3795, 0.66 ) }
    dend_22 { pt3dadd( -143.759, 43.0318, 22.0317, 0.15 ) }
    dend_22 { pt3dadd( -144.675, 42.9821, 21.6729, 0.15 ) }
    dend_22 { pt3dadd( -144.983, 42.9771, 21.5472, 0.52 ) }
    dend_22 { pt3dadd( -145.561, 42.9759, 21.2689, 1.18 ) }
    dend_22 { pt3dadd( -146.145, 42.9861, 20.9682, 0.37 ) }
    dend_22 { pt3dadd( -146.672, 43.0209, 20.6837, 0.07 ) }
    dend_22 { pt3dadd( -147.007, 43.0689, 20.513, 0.07 ) }
    dend_22 { pt3dadd( -147.551, 43.1679, 20.2315, 0.15 ) }
    dend_22 { pt3dadd( -148.239, 43.3011, 19.8525, 0.07 ) }
    dend_22 { pt3dadd( -148.545, 43.3597, 19.6779, 0.59 ) }
    dend_22 { pt3dadd( -148.842, 43.4049, 19.5071, 1.11 ) }
    dend_22 { pt3dadd( -150.124, 43.5409, 18.7419, 0.15 ) }
    dend_22 { pt3dadd( -150.832, 43.5922, 18.2906, 0.15 ) }
    dend_22 { pt3dadd( -151.227, 43.6196, 18.0157, 0.59 ) }
    dend_22 { pt3dadd( -151.524, 43.6367, 17.7759, 0.52 ) }
    dend_22 { pt3dadd( -152.139, 43.6562, 17.218, 0.15 ) }
    dend_22 { pt3dadd( -152.516, 43.6628, 16.8338, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_22 { pt3dadd( -152.828, 43.6538, 16.4323, 0.15 ) }
    dend_22 { pt3dadd( -153.126, 43.6625, 15.9705, 0.66 ) }
    dend_22 { pt3dadd( -153.665, 43.7002, 15.0343, 0.15 ) }
    dend_22 { pt3dadd( -153.919, 43.7328, 14.5444, 0.37 ) }
    dend_22 { pt3dadd( -154.183, 43.7897, 13.9796, 0.22 ) }
    dend_22 { pt3dadd( -154.58, 43.8682, 13.0675, 0.22 ) }
    dend_22 { pt3dadd( -154.801, 43.9022, 12.5183, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 7/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -140.464, 43.3053, 23.1612, 0.15 ) }
    dend_21 { pt3dadd( -142.136, 43.6283, 24.2731, 0.15 ) }
    dend_21 { pt3dadd( -142.65, 43.7079, 24.6026, 0.59 ) }
    dend_21 { pt3dadd( -143.12, 43.7756, 24.8438, 0.81 ) }
    dend_21 { pt3dadd( -143.872, 43.8843, 25.1742, 0.15 ) }
    dend_21 { pt3dadd( -145.173, 44.0766, 25.6774, 0.15 ) }
    dend_21 { pt3dadd( -145.483, 44.133, 25.7855, 0.59 ) }
    dend_21 { pt3dadd( -145.901, 44.2078, 25.8935, 1.03 ) }
    dend_21 { pt3dadd( -147.68, 44.5922, 26.2742, 0.07 ) }
    dend_21 { pt3dadd( -148.225, 44.7252, 26.3753, 0.74 ) }
    dend_21 { pt3dadd( -148.764, 44.8705, 26.4558, 0.74 ) }
    dend_21 { pt3dadd( -150.291, 45.2733, 26.6532, 0.07 ) }
    dend_21 { pt3dadd( -151.388, 45.5671, 26.8151, 0.07 ) }
    dend_21 { pt3dadd( -152.546, 45.8845, 26.9931, 0.07 ) }
    dend_21 { pt3dadd( -152.786, 45.948, 27.0371, 0.88 ) }
    dend_21 { pt3dadd( -153.654, 46.1707, 27.1996, 1.4 ) }
    dend_21 { pt3dadd( -155.277, 46.5729, 27.4941, 0.44 ) }
    dend_21 { pt3dadd( -156.727, 46.9027, 27.7333, 0.07 ) }
    dend_21 { pt3dadd( -157.479, 47.0859, 27.8618, 0.07 ) }
    dend_21 { pt3dadd( -158.391, 47.3287, 28.0289, 0.07 ) }
    dend_21 { pt3dadd( -159.197, 47.5734, 28.1785, 0.07 ) }
    dend_21 { pt3dadd( -159.758, 47.7635, 28.2796, 0.81 ) }
    dend_21 { pt3dadd( -161.46, 48.4007, 28.5681, 0.07 ) }
    dend_21 { pt3dadd( -162.428, 48.7932, 28.728, 0.96 ) }
    dend_21 { pt3dadd( -164.075, 49.508, 29.0771, 0.15 ) }
    dend_21 { pt3dadd( -164.78, 49.8419, 29.2574, 0.15 ) }
    dend_21 { pt3dadd( -165.351, 50.1292, 29.4324, 0.74 ) }
    dend_21 { pt3dadd( -165.982, 50.4676, 29.6482, 1.18 ) }
    dend_21 { pt3dadd( -167.084, 51.0906, 30.0796, 0.07 ) }
    dend_21 { pt3dadd( -168.069, 51.5941, 30.4774, 0.15 ) }
    dend_21 { pt3dadd( -168.856, 51.9496, 30.8047, 0.15 ) }
    dend_21 { pt3dadd( -169.238, 52.0919, 30.9605, 0.15 ) }
    dend_21 { pt3dadd( -169.781, 52.2641, 31.172, 0.81 ) }
    dend_21 { pt3dadd( -170.69, 52.5019, 31.4661, 1.25 ) }
    dend_21 { pt3dadd( -171.897, 52.7811, 31.7946, 0.15 ) }
    dend_21 { pt3dadd( -172.663, 52.9492, 31.9679, 0.15 ) }
    dend_21 { pt3dadd( -173.312, 53.0746, 32.1178, 0.66 ) }
    dend_21 { pt3dadd( -173.9, 53.1829, 32.2568, 0.22 ) }
    dend_21 { pt3dadd( -175.101, 53.4401, 32.5293, 0.15 ) }
    dend_21 { pt3dadd( -175.915, 53.6536, 32.6893, 0.96 ) }
    dend_21 { pt3dadd( -176.399, 53.8046, 32.7818, 1.11 ) }
    dend_21 { pt3dadd( -177.099, 54.0531, 32.9018, 0.52 ) }
    dend_21 { pt3dadd( -178.043, 54.4337, 33.0257, 0.15 ) }
    dend_21 { pt3dadd( -178.689, 54.7305, 33.0589, 0.22 ) }
    dend_21 { pt3dadd( -179.06, 54.9492, 33.0336, 0.15 ) }
    dend_21 { pt3dadd( -179.395, 55.1893, 32.9559, 0.15 ) }
    dend_21 { pt3dadd( -179.897, 55.6214, 32.7728, 0.37 ) }
    dend_21 { pt3dadd( -180.141, 55.8471, 32.6763, 0.37 ) }
    dend_21 { pt3dadd( -180.917, 56.5382, 32.4036, 0.15 ) }
    dend_21 { pt3dadd( -181.729, 57.1946, 32.214, 0.22 ) }
    dend_21 { pt3dadd( -182.255, 57.6171, 32.1305, 0.74 ) }
    dend_21 { pt3dadd( -182.637, 57.9213, 32.0898, 1.18 ) }
    dend_21 { pt3dadd( -184.056, 59.0771, 32.0429, 0.07 ) }
    dend_21 { pt3dadd( -184.724, 59.6399, 32.0472, 0.81 ) }
    dend_21 { pt3dadd( -185.837, 60.658, 32.096, 0.15 ) }
    dend_21 { pt3dadd( -186.355, 61.1723, 32.1236, 0.59 ) }
    dend_21 { pt3dadd( -186.769, 61.6826, 32.1611, 1.18 ) }
    dend_21 { pt3dadd( -187.863, 63.2616, 32.3153, 0.15 ) }
    dend_21 { pt3dadd( -188.268, 63.9338, 32.3989, 0.29 ) }
    dend_21 { pt3dadd( -188.764, 64.7951, 32.5298, 0.52 ) }
    dend_21 { pt3dadd( -189.093, 65.3596, 32.6248, 0.96 ) }
    dend_21 { pt3dadd( -190.177, 67.0366, 32.9769, 0.22 ) }
    dend_21 { pt3dadd( -190.659, 67.6916, 33.1802, 0.29 ) }
    dend_21 { pt3dadd( -191.312, 68.4163, 33.5473, 0.15 ) }
    dend_21 { pt3dadd( -192.008, 69.06, 34.026, 0.15 ) }
    dend_21 { pt3dadd( -192.413, 69.3818, 34.3724, 0.88 ) }
    dend_21 { pt3dadd( -192.761, 69.6739, 34.7984, 1.4 ) }
    dend_21 { pt3dadd( -193.46, 70.4838, 36.2676, 0.22 ) }
    dend_21 { pt3dadd( -193.64, 70.9947, 37.1928, 0.29 ) }
    dend_21 { pt3dadd( -193.62, 71.3868, 37.9218, 0.15 ) }
    dend_21 { pt3dadd( -193.442, 71.9171, 38.9521, 0.37 ) }
    dend_21 { pt3dadd( -193.096, 72.6265, 40.3114, 0.15 ) }
    dend_21 { pt3dadd( -192.725, 73.1909, 41.4029, 0.81 ) }
    dend_21 { pt3dadd( -192.342, 73.6887, 42.3471, 0.15 ) }
    dend_21 { pt3dadd( -191.97, 74.1883, 43.2188, 0.66 ) }
    dend_21 { pt3dadd( -191.344, 75.1096, 44.682, 0.15 ) }
    dend_21 { pt3dadd( -190.836, 75.9073, 45.8786, 0.74 ) }
    dend_21 { pt3dadd( -190.262, 76.8839, 47.2705, 0.22 ) }
    dend_21 { pt3dadd( -189.739, 77.8008, 48.5569, 0.22 ) }
    dend_21 { pt3dadd( -189.068, 79.0215, 50.2738, 0.81 ) }
    dend_21 { pt3dadd( -188.652, 79.806, 51.3724, 1.25 ) }
    dend_21 { pt3dadd( -187.81, 81.4455, 53.5913, 0.15 ) }
    dend_21 { pt3dadd( -187.254, 82.5629, 55.0248, 0.44 ) }
    dend_21 { pt3dadd( -186.958, 83.1675, 55.7509, 0.44 ) }
    dend_21 { pt3dadd( -186.753, 83.5776, 56.21, 0.44 ) }
    dend_21 { pt3dadd( -186.62, 83.8381, 56.4865, 0.44 ) }
    dend_21 { pt3dadd( -186.301, 84.5093, 57.1562, 0.44 ) }
    dend_21 { pt3dadd( -185.953, 85.2772, 57.863, 0.44 ) }
    dend_21 { pt3dadd( -185.715, 85.7221, 58.2782, 0.44 ) }
    dend_21 { pt3dadd( -185.045, 86.762, 59.2699, 0.44 ) }
    dend_21 { pt3dadd( -184.706, 87.1742, 59.7165, 0.44 ) }
    dend_21 { pt3dadd( -183.564, 88.1827, 61.0837, 0.44 ) }
    dend_21 { pt3dadd( -183.227, 88.3811, 61.4506, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_21 { pt3dadd( -182.481, 88.6939, 62.1931, 0.07 ) }
    dend_21 { pt3dadd( -181.634, 88.9759, 62.9504, 0.37 ) }
    dend_21 { pt3dadd( -180.581, 89.2805, 63.7437, 0.15 ) }
    dend_21 { pt3dadd( -179.771, 89.5409, 64.2871, 1.47 ) }
    dend_21 { pt3dadd( -178.563, 89.8909, 65.0314, 0.07 ) }
    dend_21 { pt3dadd( -178.136, 90.0462, 65.3022, 0.22 ) }
    dend_21 { pt3dadd( -177.047, 90.5521, 66.0259, 0.07 ) }
    dend_21 { pt3dadd( -176.217, 91.0315, 66.5912, 0.44 ) }
    dend_21 { pt3dadd( -175.366, 91.5632, 67.0908, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 37.9288, -194.776, 53.8057, 0.15 ) }
    dend_16 { pt3dadd( 39.4293, -196.356, 54.2681, 0.15 ) }
    dend_16 { pt3dadd( 39.744, -196.703, 54.3629, 0.29 ) }
    dend_16 { pt3dadd( 40.1241, -197.128, 54.4766, 0.66 ) }
    dend_16 { pt3dadd( 41.0578, -198.183, 54.7542, 0.15 ) }
    dend_16 { pt3dadd( 41.4863, -198.633, 54.8865, 0.29 ) }
    dend_16 { pt3dadd( 42.4007, -199.564, 55.1728, 0.07 ) }
    dend_16 { pt3dadd( 42.8697, -200.037, 55.3202, 0.07 ) }
    dend_16 { pt3dadd( 43.1696, -200.332, 55.4155, 0.74 ) }
    dend_16 { pt3dadd( 43.6691, -200.812, 55.5759, 1.47 ) }
    dend_16 { pt3dadd( 45.4048, -202.399, 56.1442, 0.22 ) }
    dend_16 { pt3dadd( 45.7987, -202.736, 56.2765, 0.81 ) }
    dend_16 { pt3dadd( 46.294, -203.11, 56.4497, 1.4 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 37.9288, -194.776, 53.8057, 0.22 ) }
    dend_15 { pt3dadd( 37.3684, -195.776, 54.7011, 0.22 ) }
    dend_15 { pt3dadd( 37.1329, -196.238, 55.0984, 0.29 ) }
    dend_15 { pt3dadd( 36.9135, -196.744, 55.5462, 0.15 ) }
    dend_15 { pt3dadd( 36.7085, -197.273, 56.0253, 0.37 ) }
    dend_15 { pt3dadd( 36.6364, -197.473, 56.2068, 0.52 ) }
    dend_15 { pt3dadd( 36.4632, -197.974, 56.6595, 0.22 ) }
    dend_15 { pt3dadd( 36.335, -198.389, 57.0398, 0.81 ) }
    dend_15 { pt3dadd( 36.1788, -198.971, 57.5588, 0.15 ) }
    dend_15 { pt3dadd( 36.1367, -199.138, 57.7102, 0.22 ) }
    dend_15 { pt3dadd( 36.07, -199.364, 57.9387, 0.52 ) }
    dend_15 { pt3dadd( 35.8842, -199.908, 58.5305, 0.15 ) }
    dend_15 { pt3dadd( 35.7088, -200.374, 59.0391, 0.88 ) }
    dend_15 { pt3dadd( 35.6203, -200.594, 59.2694, 0.96 ) }
    dend_15 { pt3dadd( 35.3333, -201.252, 59.9284, 0.22 ) }
    dend_15 { pt3dadd( 35.0466, -201.926, 60.5857, 1.33 ) }
    dend_15 { pt3dadd( 34.7366, -202.579, 61.2107, 0.22 ) }
    dend_15 { pt3dadd( 34.5737, -202.878, 61.4988, 0.07 ) }
    dend_15 { pt3dadd( 34.4397, -203.101, 61.7179, 0.15 ) }
    dend_15 { pt3dadd( 34.0495, -203.66, 62.2987, 0.15 ) }
    dend_15 { pt3dadd( 33.9114, -203.841, 62.4915, 1.18 ) }
    dend_15 { pt3dadd( 33.2076, -204.729, 63.4706, 0.22 ) }
    dend_15 { pt3dadd( 32.7145, -205.325, 64.2105, 0.22 ) }
    dend_15 { pt3dadd( 32.5024, -205.589, 64.5654, 0.37 ) }
    dend_15 { pt3dadd( 32.124, -206.089, 65.2695, 0.37 ) }
    dend_15 { pt3dadd( 31.9359, -206.358, 65.656, 1.25 ) }
    dend_15 { pt3dadd( 31.5372, -207.005, 66.606, 0.15 ) }
    dend_15 { pt3dadd( 31.343, -207.407, 67.1972, 0.15 ) }
    dend_15 { pt3dadd( 31.2577, -207.616, 67.488, 0.37 ) }
    dend_15 { pt3dadd( 31.0272, -208.267, 68.3292, 0.22 ) }
    dend_15 { pt3dadd( 30.9337, -208.589, 68.7167, 0.81 ) }
    dend_15 { pt3dadd( 30.6819, -209.384, 69.6112, 0.07 ) }
    dend_15 { pt3dadd( 30.6098, -209.6, 69.8228, 0.29 ) }
    dend_15 { pt3dadd( 30.4986, -209.915, 70.1067, 0.44 ) }
    dend_15 { pt3dadd( 30.4357, -210.078, 70.247, 0.22 ) }
    dend_15 { pt3dadd( 30.3823, -210.222, 70.3576, 0.37 ) }
    dend_15 { pt3dadd( 30.0046, -211.237, 71.0373, 0.15 ) }
    dend_15 { pt3dadd( 29.8006, -211.707, 71.2787, 1.47 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 60/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 0.582398, -99.2998, -9.25882, 0.59 ) }
    dend_10 { pt3dadd( -0.811526, -98.9866, -11.322, 0.59 ) }
    dend_10 { pt3dadd( -1.67975, -99.1205, -12.4417, 0.59 ) }
    dend_10 { pt3dadd( -1.88135, -99.2276, -12.6905, 0.59 ) }
    dend_10 { pt3dadd( -2.56553, -99.9499, -13.6928, 0.59 ) }
    dend_10 { pt3dadd( -2.88912, -100.479, -14.2592, 0.59 ) }
    dend_10 { pt3dadd( -3.28252, -101.123, -14.9478, 1.11 ) }
    dend_10 { pt3dadd( -3.87476, -102.569, -15.9569, 0.15 ) }
    dend_10 { pt3dadd( -4.18166, -103.547, -16.524, 1.03 ) }
    dend_10 { pt3dadd( -4.58178, -105.288, -17.4481, 0.15 ) }
    dend_10 { pt3dadd( -4.68954, -106.439, -17.976, 0.22 ) }
    dend_10 { pt3dadd( -7.57643, -113.682, -25.5406, 0.22 ) }
    dend_10 { pt3dadd( -11.2665, -121.843, -31.5588, 0.22 ) }
    dend_10 { pt3dadd( -14.5714, -130.336, -37.2891, 0.22 ) }
    dend_10 { pt3dadd( -17.8428, -139.7, -41.2807, 0.22 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 75/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 0.582398, -99.2998, -9.25882, 0.07 ) }
    dend_9 { pt3dadd( 0.359885, -101.839, -9.41951, 0.07 ) }
    dend_9 { pt3dadd( 0.268909, -103.106, -9.505, 0.07 ) }
    dend_9 { pt3dadd( 0.224748, -103.721, -9.5465, 0.81 ) }
    dend_9 { pt3dadd( 0.146547, -104.81, -9.61998, 1.62 ) }
    dend_9 { pt3dadd( 0.0152649, -106.639, -9.74335, 0.15 ) }
    dend_9 { pt3dadd( -0.0400871, -107.41, -9.79536, 0.15 ) }
    dend_9 { pt3dadd( -0.057557, -107.869, -9.8307, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 83/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -43.7643, -108.473, 14.6718, 0.07 ) }
    dend_4 { pt3dadd( -44.611, -108.823, 15.0614, 0.07 ) }
    dend_4 { pt3dadd( -45.5075, -109.194, 15.4737, 0.07 ) }
    dend_4 { pt3dadd( -46.0679, -109.425, 15.7315, 0.15 ) }
    dend_4 { pt3dadd( -46.9829, -109.804, 16.1524, 0.07 ) }
    dend_4 { pt3dadd( -47.6172, -110.066, 16.4442, 0.07 ) }
    dend_4 { pt3dadd( -48.1566, -110.289, 16.6923, 0.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 90/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -43.7643, -108.473, 14.6718, 0.81 ) }
    dend_3 { pt3dadd( -43.8046, -109.005, 14.4122, 0.81 ) }
    dend_3 { pt3dadd( -43.8441, -109.777, 14.0447, 0.22 ) }
    dend_3 { pt3dadd( -43.8757, -110.54, 13.7022, 0.22 ) }
    dend_3 { pt3dadd( -43.9193, -111.069, 13.4611, 0.15 ) }
    dend_3 { pt3dadd( -43.9918, -111.778, 13.1373, 0.15 ) }
    dend_3 { pt3dadd( -43.9998, -111.857, 13.1029, 0.15 ) }
    dend_3 { pt3dadd( -44.0346, -112.201, 12.939, 0.66 ) }
    dend_3 { pt3dadd( -44.0714, -112.577, 12.7451, 1.03 ) }
    dend_3 { pt3dadd( -44.1705, -113.559, 12.2507, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_3 { pt3dadd( -44.2453, -114.052, 12.0015, 0.66 ) }
    dend_3 { pt3dadd( -44.3411, -114.591, 11.7421, 0.22 ) }
    dend_3 { pt3dadd( -44.4574, -115.244, 11.4426, 0.15 ) }
    dend_3 { pt3dadd( -44.5314, -115.666, 11.2603, 0.15 ) }
    dend_3 { pt3dadd( -44.5719, -115.954, 11.149, 0.66 ) }
    dend_3 { pt3dadd( -44.6189, -116.479, 10.9879, 0.29 ) }
    dend_3 { pt3dadd( -44.6938, -117.425, 10.7558, 0.15 ) }
    dend_3 { pt3dadd( -44.7338, -117.841, 10.6804, 0.15 ) }
    dend_3 { pt3dadd( -44.7742, -118.197, 10.642, 0.15 ) }
    dend_3 { pt3dadd( -44.8532, -118.741, 10.6025, 0.22 ) }
    dend_3 { pt3dadd( -44.9418, -119.271, 10.5689, 0.59 ) }
    dend_3 { pt3dadd( -45.0866, -119.987, 10.5311, 1.18 ) }
    dend_3 { pt3dadd( -45.2462, -120.605, 10.5079, 1.7 ) }
    dend_3 { pt3dadd( -45.4587, -121.322, 10.4796, 1.99 ) }
    dend_3 { pt3dadd( -45.6901, -122.044, 10.4458, 1.25 ) }
    dend_3 { pt3dadd( -46.0363, -123.062, 10.3905, 0.22 ) }
    dend_3 { pt3dadd( -46.2524, -123.682, 10.3525, 0.37 ) }
    dend_3 { pt3dadd( -46.5173, -124.397, 10.2889, 0.15 ) }
    dend_3 { pt3dadd( -46.8607, -125.294, 10.1821, 0.22 ) }
    dend_3 { pt3dadd( -47.0061, -125.646, 10.1321, 0.59 ) }
    dend_3 { pt3dadd( -47.1807, -126.039, 10.0674, 1.11 ) }
    dend_3 { pt3dadd( -47.4641, -126.615, 9.98399, 0.52 ) }
    dend_3 { pt3dadd( -47.966, -127.595, 9.86127, 0.22 ) }
    dend_3 { pt3dadd( -48.1707, -127.954, 9.82723, 0.88 ) }
    dend_3 { pt3dadd( -48.5082, -128.501, 9.78715, 0.96 ) }
    dend_3 { pt3dadd( -49.039, -129.335, 9.74439, 0.07 ) }
    dend_3 { pt3dadd( -49.4607, -129.98, 9.72776, 0.07 ) }
    dend_3 { pt3dadd( -49.5279, -130.082, 9.73008, 0.44 ) }
    dend_3 { pt3dadd( -49.7466, -130.441, 9.78176, 0.52 ) }
    // Section: dend_90, id: dend_90, parent: dend_66 (entry count 29/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -8.61807, -41.9808, -8.44894, 0.44 ) }
    dend_90 { pt3dadd( -10.0112, -43.4458, -8.25506, 0.44 ) }
    dend_90 { pt3dadd( -10.6765, -44.14, -8.15291, 0.66 ) }
    dend_90 { pt3dadd( -11.2818, -44.7928, -8.05924, 0.66 ) }
    dend_90 { pt3dadd( -12.0827, -45.683, -7.94334, 0.44 ) }
    dend_90 { pt3dadd( -12.5438, -46.2112, -7.88136, 0.81 ) }
    dend_90 { pt3dadd( -12.895, -46.6318, -7.83635, 1.33 ) }
    dend_90 { pt3dadd( -13.5647, -47.4807, -7.74423, 0.74 ) }
    dend_90 { pt3dadd( -14.1363, -48.253, -7.66307, 0.37 ) }
    dend_90 { pt3dadd( -14.4901, -48.7757, -7.61613, 0.22 ) }
    dend_90 { pt3dadd( -14.8878, -49.4087, -7.58258, 0.96 ) }
    dend_90 { pt3dadd( -15.164, -49.8815, -7.58916, 0.15 ) }
    dend_90 { pt3dadd( -15.3627, -50.2625, -7.59676, 0.29 ) }
    dend_90 { pt3dadd( -19.516, -56.2837, -7.74391, 0.29 ) }
    dend_90 { pt3dadd( -24.6831, -61.4562, -6.71656, 0.29 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 44/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -8.61807, -41.9808, -8.44894, 0.59 ) }
    dend_67 { pt3dadd( -7.48028, -43.2558, -8.41963, 0.59 ) }
    dend_67 { pt3dadd( -6.79435, -44.0917, -8.32267, 0.29 ) }
    dend_67 { pt3dadd( -6.48443, -44.4694, -8.27886, 0.81 ) }
    dend_67 { pt3dadd( -5.75238, -45.3616, -8.17538, 0.52 ) }
    dend_67 { pt3dadd( -4.95746, -46.3304, -8.06301, 0.22 ) }
    dend_67 { pt3dadd( -4.46769, -46.9272, -7.99378, 0.66 ) }
    dend_67 { pt3dadd( -3.97604, -47.7517, -7.81916, 1.18 ) }
    // Section: dend_57, id: dend_57, parent: dend_47 (entry count 52/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 9.67014, -29.9599, -64.0774, 0.07 ) }
    dend_57 { pt3dadd( 15.591, -30.7087, -74.5351, 0.07 ) }
    dend_57 { pt3dadd( 21.5131, -29.4628, -84.94, 0.07 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 55/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 9.67014, -29.9599, -64.0774, 0.81 ) }
    dend_48 { pt3dadd( 11.9084, -29.6066, -73.6049, 0.07 ) }
    dend_48 { pt3dadd( 13.8374, -28.3189, -83.1125, 0.07 ) }
    dend_48 { pt3dadd( 14.3788, -27.4704, -92.8465, 0.07 ) }
    dend_48 { pt3dadd( 15.2357, -28.0186, -102.587, 0.07 ) }
    dend_48 { pt3dadd( 15.9827, -28.2362, -112.349, 0.07 ) }
    dend_48 { pt3dadd( 17.7236, -28.213, -121.986, 0.07 ) }
    dend_48 { pt3dadd( 19.5234, -27.6843, -131.597, 0.07 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 63/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 182.129, -13.4599, 80.0829, 0.15 ) }
    dend_40 { pt3dadd( 182.894, -13.7364, 79.7108, 0.15 ) }
    dend_40 { pt3dadd( 183.336, -13.8883, 79.4935, 0.66 ) }
    dend_40 { pt3dadd( 183.729, -14.0218, 79.2938, 0.66 ) }
    dend_40 { pt3dadd( 184.804, -14.3834, 78.7365, 0.07 ) }
    dend_40 { pt3dadd( 185.618, -14.6648, 78.2889, 0.07 ) }
    dend_40 { pt3dadd( 186.206, -14.869, 77.9621, 0.96 ) }
    dend_40 { pt3dadd( 187.381, -15.2773, 77.3233, 0.07 ) }
    dend_40 { pt3dadd( 187.779, -15.3971, 77.0985, 0.07 ) }
    dend_40 { pt3dadd( 188.015, -15.4568, 76.9592, 0.22 ) }
    dend_40 { pt3dadd( 188.58, -15.5732, 76.5879, 0.07 ) }
    dend_40 { pt3dadd( 189.093, -15.68, 76.2289, 0.66 ) }
    dend_40 { pt3dadd( 189.276, -15.7188, 76.0919, 0.66 ) }
    dend_40 { pt3dadd( 190.352, -15.9576, 75.217, 0.07 ) }
    dend_40 { pt3dadd( 190.784, -16.0613, 74.8406, 0.44 ) }
    dend_40 { pt3dadd( 191.43, -16.2354, 74.2507, 0.22 ) }
    dend_40 { pt3dadd( 191.836, -16.3649, 73.8724, 0.96 ) }
    dend_40 { pt3dadd( 192.609, -16.684, 73.1086, 0.22 ) }
    dend_40 { pt3dadd( 193.213, -17.0024, 72.5341, 0.07 ) }
    dend_40 { pt3dadd( 193.842, -17.4014, 71.9723, 0.74 ) }
    dend_40 { pt3dadd( 194.081, -17.5603, 71.7871, 1.03 ) }
    dend_40 { pt3dadd( 194.525, -17.8572, 71.496, 0.59 ) }
    dend_40 { pt3dadd( 195.308, -18.3821, 71.0449, 0.15 ) }
    dend_40 { pt3dadd( 196.287, -19.0481, 70.568, 0.15 ) }
    dend_40 { pt3dadd( 196.556, -19.217, 70.4396, 0.59 ) }
    dend_40 { pt3dadd( 197.597, -19.8129, 69.9564, 0.07 ) }
    dend_40 { pt3dadd( 197.924, -19.9681, 69.7942, 0.74 ) }
    dend_40 { pt3dadd( 198.271, -20.0947, 69.6012, 0.96 ) }
    dend_40 { pt3dadd( 199.438, -20.4019, 68.8933, 0.07 ) }
    dend_40 { pt3dadd( 200.353, -20.5848, 68.2843, 0.07 ) }
    dend_40 { pt3dadd( 200.709, -20.6407, 68.0307, 0.66 ) }
    dend_40 { pt3dadd( 201.485, -20.7026, 67.4249, 0.22 ) }
    dend_40 { pt3dadd( 202.177, -20.7304, 66.8556, 0.66 ) }
    dend_40 { pt3dadd( 202.485, -20.7175, 66.5813, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 97/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 182.129, -13.4599, 80.0829, 0.07 ) }
    dend_37 { pt3dadd( 184.108, -13.0348, 81.676, 0.07 ) }
    dend_37 { pt3dadd( 185.388, -12.775, 82.6886, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_37 { pt3dadd( 186.214, -12.6163, 83.3183, 0.81 ) }
    dend_37 { pt3dadd( 187.14, -12.4542, 84.0304, 0.22 ) }
    dend_37 { pt3dadd( 188.131, -12.294, 84.7835, 0.96 ) }
    dend_37 { pt3dadd( 190.487, -11.971, 86.5432, 0.07 ) }
    dend_37 { pt3dadd( 191.127, -11.8906, 86.9862, 0.07 ) }
    dend_37 { pt3dadd( 191.737, -11.8155, 87.4218, 0.29 ) }
    dend_37 { pt3dadd( 192.792, -11.6957, 88.2342, 1.11 ) }
    dend_37 { pt3dadd( 193.509, -11.6319, 88.8061, 1.55 ) }
    dend_37 { pt3dadd( 195.359, -11.5092, 90.2667, 0.22 ) }
    dend_37 { pt3dadd( 196.877, -11.4297, 91.4802, 0.88 ) }
    dend_37 { pt3dadd( 198.519, -11.3378, 92.9218, 0.22 ) }
    dend_37 { pt3dadd( 199.377, -11.2832, 93.7773, 0.22 ) }
    dend_37 { pt3dadd( 200.309, -11.2001, 94.8642, 0.66 ) }
    dend_37 { pt3dadd( 200.574, -11.1667, 95.2397, 1.33 ) }
    dend_37 { pt3dadd( 202.118, -10.941, 97.839, 0.22 ) }
    dend_37 { pt3dadd( 203.164, -10.8054, 99.8556, 0.22 ) }
    dend_37 { pt3dadd( 204.08, -10.6874, 101.785, 0.66 ) }
    dend_37 { pt3dadd( 205.015, -10.5117, 103.842, 0.88 ) }
    dend_37 { pt3dadd( 205.985, -10.2571, 106.02, 0.37 ) }
    dend_37 { pt3dadd( 206.571, -10.0877, 107.395, 0.37 ) }
    dend_37 { pt3dadd( 207.103, -9.91752, 108.715, 0.81 ) }
    dend_37 { pt3dadd( 207.442, -9.81609, 109.483, 1.11 ) }
    dend_37 { pt3dadd( 208.174, -9.61949, 110.933, 0.22 ) }
    dend_37 { pt3dadd( 208.787, -9.4831, 111.909, 0.74 ) }
    // Section: dend_92, id: dend_92, parent: dend_90 (entry count 24/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -24.6831, -61.4562, -6.71656, 0.07 ) }
    dend_92 { pt3dadd( -31.9235, -69.1095, -7.65602, 0.07 ) }
    dend_92 { pt3dadd( -38.8613, -77.0209, -8.51024, 0.07 ) }
    dend_92 { pt3dadd( -46.4865, -84.3543, -9.13164, 0.07 ) }
    dend_92 { pt3dadd( -53.4993, -91.9636, -11.4038, 0.07 ) }
    dend_92 { pt3dadd( -60.1993, -99.6797, -14.1923, 0.07 ) }
    dend_92 { pt3dadd( -68.009, -106.255, -17.3044, 0.07 ) }
    dend_92 { pt3dadd( -75.9308, -112.541, -20.7827, 0.07 ) }
    dend_92 { pt3dadd( -83.2648, -119.421, -24.3141, 0.07 ) }
    dend_92 { pt3dadd( -90.8739, -126.541, -26.3951, 0.07 ) }
    dend_92 { pt3dadd( -98.9321, -133.398, -27.4729, 0.07 ) }
    // Section: dend_91, id: dend_91, parent: dend_90 (entry count 35/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -24.6831, -61.4562, -6.71656, 0.81 ) }
    dend_91 { pt3dadd( -28.9055, -68.273, -4.92804, 0.07 ) }
    dend_91 { pt3dadd( -34.2499, -74.269, -2.90457, 0.07 ) }
    dend_91 { pt3dadd( -38.9099, -80.9076, -1.51361, 0.07 ) }
    dend_91 { pt3dadd( -43.6046, -87.6447, -1.20719, 0.07 ) }
    dend_91 { pt3dadd( -48.7759, -93.9756, -0.0655763, 0.07 ) }
    dend_91 { pt3dadd( -54.6243, -99.8444, -0.201695, 0.07 ) }
    dend_91 { pt3dadd( -60.261, -105.766, 1.15312, 0.07 ) }
    // Section: dend_85, id: dend_85, parent: dend_67 (entry count 43/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -3.97604, -47.7517, -7.81916, 0.15 ) }
    dend_85 { pt3dadd( -4.93769, -49.6738, -7.53251, 0.15 ) }
    dend_85 { pt3dadd( -5.16962, -50.1374, -7.46338, 0.59 ) }
    dend_85 { pt3dadd( -5.57156, -50.9408, -7.34357, 1.33 ) }
    dend_85 { pt3dadd( -5.99922, -51.7956, -7.21609, 0.22 ) }
    dend_85 { pt3dadd( -11.8023, -62.3549, -7.32825, 0.22 ) }
    dend_85 { pt3dadd( -17.2198, -72.9935, -5.69932, 0.22 ) }
    dend_85 { pt3dadd( -22.8613, -83.6245, -6.07003, 0.22 ) }
    dend_85 { pt3dadd( -28.9948, -93.8964, -4.36271, 0.22 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 52/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -3.97604, -47.7517, -7.81916, 0.44 ) }
    dend_68 { pt3dadd( -3.60892, -49.0116, -7.72736, 0.44 ) }
    dend_68 { pt3dadd( -3.26297, -50.2509, -7.62176, 0.15 ) }
    dend_68 { pt3dadd( -3.01251, -51.1313, -7.52605, 0.15 ) }
    dend_68 { pt3dadd( -2.86405, -51.6327, -7.46032, 0.88 ) }
    dend_68 { pt3dadd( -2.59149, -52.5613, -7.33068, 1.92 ) }
    dend_68 { pt3dadd( -1.72465, -55.5149, -6.91835, 0.22 ) }
    dend_68 { pt3dadd( -1.48112, -56.3884, -6.78873, 0.66 ) }
    dend_68 { pt3dadd( -1.23498, -57.2271, -6.6646, 1.33 ) }
    dend_68 { pt3dadd( -1.02424, -57.9847, -6.56555, 2.06 ) }
    dend_68 { pt3dadd( -0.796666, -58.829, -6.44053, 1.62 ) }
    dend_68 { pt3dadd( 1.74095, -68.9071, -3.03545, 1.62 ) }
    dend_68 { pt3dadd( 5.53914, -78.1093, 1.69534, 1.62 ) }
    // Section: dend_63, id: dend_63, parent: dend_57 (entry count 65/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 21.5131, -29.4628, -84.94, 0.07 ) }
    dend_63 { pt3dadd( 26.6549, -29.8243, -92.7266, 0.07 ) }
    dend_63 { pt3dadd( 31.5834, -29.8843, -100.657, 0.07 ) }
    dend_63 { pt3dadd( 35.9199, -30.7321, -108.882, 0.07 ) }
    dend_63 { pt3dadd( 40.0667, -33.6366, -116.685, 0.07 ) }
    dend_63 { pt3dadd( 46.0235, -35.4123, -123.643, 0.07 ) }
    dend_63 { pt3dadd( 52.38, -37.411, -130.169, 0.07 ) }
    dend_63 { pt3dadd( 58.8818, -40.2976, -136.172, 0.07 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 73/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 21.5131, -29.4628, -84.94, 0.07 ) }
    dend_58 { pt3dadd( 26.4334, -29.0946, -93.9847, 0.07 ) }
    dend_58 { pt3dadd( 32.6147, -27.8085, -102.118, 0.07 ) }
    dend_58 { pt3dadd( 40.6485, -27.0965, -108.529, 0.07 ) }
    dend_58 { pt3dadd( 49.2647, -25.2259, -113.839, 0.07 ) }
    dend_58 { pt3dadd( 57.4278, -22.8957, -119.643, 0.07 ) }
    dend_58 { pt3dadd( 66.1249, -19.1099, -123.517, 0.07 ) }
    dend_58 { pt3dadd( 75.2378, -15.729, -126.805, 0.07 ) }
    dend_58 { pt3dadd( 83.9646, -12.5517, -131.176, 0.07 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 82/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 19.5234, -27.6843, -131.597, 0.07 ) }
    dend_50 { pt3dadd( 20.8272, -27.381, -140.683, 0.07 ) }
    dend_50 { pt3dadd( 21.9985, -27.8209, -149.78, 0.07 ) }
    dend_50 { pt3dadd( 22.5165, -28.3928, -158.932, 0.07 ) }
    dend_50 { pt3dadd( 21.5389, -30.0106, -167.917, 0.07 ) }
    dend_50 { pt3dadd( 21.7651, -32.1019, -176.844, 0.07 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 88/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 19.5234, -27.6843, -131.597, 0.07 ) }
    dend_49 { pt3dadd( 22.4069, -27.5882, -142.356, 0.07 ) }
    dend_49 { pt3dadd( 26.475, -29.2717, -152.586, 0.07 ) }
    dend_49 { pt3dadd( 31.1334, -31.8781, -162.349, 0.07 ) }
    dend_49 { pt3dadd( 35.9029, -33.2071, -172.328, 0.07 ) }
    dend_49 { pt3dadd( 40.2793, -33.1929, -182.57, 0.07 ) }
    dend_49 { pt3dadd( 43.2815, -33.9777, -193.269, 0.07 ) }
    dend_49 { pt3dadd( 45.0487, -33.6346, -204.262, 0.07 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 96/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 208.787, -9.4831, 111.909, 0.29 ) }
    dend_39 { pt3dadd( 209.714, -9.88422, 113.287, 0.29 ) }
    dend_39 { pt3dadd( 210.309, -10.0438, 114.022, 0.52 ) }
    dend_39 { pt3dadd( 210.776, -10.0959, 114.553, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_39 { pt3dadd( 211.279, -10.1213, 115.13, 0.52 ) }
    dend_39 { pt3dadd( 211.626, -10.1366, 115.529, 0.52 ) }
    dend_39 { pt3dadd( 211.92, -10.1469, 115.889, 0.52 ) }
    dend_39 { pt3dadd( 212.742, -10.1372, 116.867, 0.15 ) }
    dend_39 { pt3dadd( 213.564, -10.1398, 117.931, 0.15 ) }
    dend_39 { pt3dadd( 214.05, -10.1285, 118.535, 0.15 ) }
    dend_39 { pt3dadd( 214.424, -10.1187, 118.977, 0.59 ) }
    dend_39 { pt3dadd( 215.09, -10.1264, 119.757, 0.59 ) }
    dend_39 { pt3dadd( 215.456, -10.147, 120.21, 0.59 ) }
    dend_39 { pt3dadd( 216.055, -10.2044, 121.029, 0.81 ) }
    dend_39 { pt3dadd( 216.546, -10.2723, 121.68, 0.15 ) }
    dend_39 { pt3dadd( 217.078, -10.3458, 122.339, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 12/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 208.787, -9.4831, 111.909, 0.15 ) }
    dend_38 { pt3dadd( 208.925, -8.88109, 112.335, 0.15 ) }
    dend_38 { pt3dadd( 209.059, -8.33348, 112.743, 0.15 ) }
    dend_38 { pt3dadd( 209.128, -8.0636, 112.946, 0.52 ) }
    dend_38 { pt3dadd( 209.219, -7.74917, 113.18, 0.88 ) }
    dend_38 { pt3dadd( 209.286, -7.51574, 113.351, 1.11 ) }
    dend_38 { pt3dadd( 209.505, -6.76116, 113.897, 0.07 ) }
    dend_38 { pt3dadd( 209.633, -6.29766, 114.234, 0.07 ) }
    dend_38 { pt3dadd( 209.714, -5.97289, 114.46, 1.11 ) }
    dend_38 { pt3dadd( 209.869, -5.33258, 114.906, 0.15 ) }
    dend_38 { pt3dadd( 209.923, -5.08337, 115.081, 0.15 ) }
    dend_38 { pt3dadd( 209.945, -4.97337, 115.159, 0.29 ) }
    dend_38 { pt3dadd( 210.002, -4.63299, 115.393, 0.15 ) }
    dend_38 { pt3dadd( 210.066, -4.24062, 115.65, 0.74 ) }
    dend_38 { pt3dadd( 210.128, -3.86194, 115.918, 0.07 ) }
    dend_38 { pt3dadd( 210.172, -3.60681, 116.111, 0.07 ) }
    dend_38 { pt3dadd( 210.228, -3.34902, 116.322, 0.07 ) }
    dend_38 { pt3dadd( 210.301, -3.02798, 116.573, 0.74 ) }
    dend_38 { pt3dadd( 210.434, -2.51628, 116.984, 0.07 ) }
    dend_38 { pt3dadd( 210.57, -2.07768, 117.37, 0.07 ) }
    dend_38 { pt3dadd( 210.685, -1.76703, 117.67, 0.44 ) }
    dend_38 { pt3dadd( 210.915, -1.21442, 118.234, 0.07 ) }
    dend_38 { pt3dadd( 211.07, -0.854981, 118.61, 0.59 ) }
    dend_38 { pt3dadd( 211.231, -0.493687, 118.995, 1.11 ) }
    dend_38 { pt3dadd( 211.546, 0.172003, 119.701, 0.15 ) }
    dend_38 { pt3dadd( 211.718, 0.522333, 120.054, 0.15 ) }
    dend_38 { pt3dadd( 211.886, 0.853014, 120.379, 0.96 ) }
    dend_38 { pt3dadd( 212.162, 1.39202, 120.889, 0.07 ) }
    dend_38 { pt3dadd( 212.25, 1.57309, 121.054, 0.22 ) }
    dend_38 { pt3dadd( 212.395, 1.88879, 121.294, 0.07 ) }
    dend_38 { pt3dadd( 212.526, 2.19087, 121.488, 0.22 ) }
    dend_38 { pt3dadd( 212.739, 2.66767, 121.784, 0.07 ) }
    dend_38 { pt3dadd( 212.834, 2.86409, 121.908, 0.22 ) }
    dend_38 { pt3dadd( 213.106, 3.37302, 122.237, 0.07 ) }
    dend_38 { pt3dadd( 213.307, 3.71646, 122.464, 0.96 ) }
    dend_38 { pt3dadd( 213.644, 4.24954, 122.82, 0.07 ) }
    dend_38 { pt3dadd( 213.924, 4.64787, 123.087, 0.07 ) }
    dend_38 { pt3dadd( 214.12, 4.90928, 123.261, 0.52 ) }
    dend_38 { pt3dadd( 214.284, 5.12285, 123.394, 0.29 ) }
    dend_38 { pt3dadd( 214.702, 5.65845, 123.696, 0.15 ) }
    dend_38 { pt3dadd( 214.953, 5.98596, 123.865, 0.59 ) }
    dend_38 { pt3dadd( 215.489, 6.64439, 124.173, 0.07 ) }
    dend_38 { pt3dadd( 215.823, 7.03699, 124.339, 0.07 ) }
    dend_38 { pt3dadd( 216.116, 7.3694, 124.469, 0.44 ) }
    dend_38 { pt3dadd( 216.833, 8.18451, 124.776, 0.07 ) }
    dend_38 { pt3dadd( 217.017, 8.39002, 124.847, 0.22 ) }
    dend_38 { pt3dadd( 217.65, 9.08039, 125.076, 0.07 ) }
    dend_38 { pt3dadd( 217.932, 9.37053, 125.166, 0.29 ) }
    dend_38 { pt3dadd( 218.217, 9.63859, 125.25, 0.52 ) }
    // Section: dend_89, id: dend_89, parent: dend_85 (entry count 61/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -28.9948, -93.8964, -4.36271, 0.07 ) }
    dend_89 { pt3dadd( -33.9424, -102.779, -3.95015, 0.07 ) }
    dend_89 { pt3dadd( -39.8356, -111.042, -2.61193, 0.07 ) }
    dend_89 { pt3dadd( -44.6964, -119.95, -1.88648, 0.07 ) }
    dend_89 { pt3dadd( -48.5311, -129.284, -2.70485, 0.07 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 66/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -28.9948, -93.8964, -4.36271, 0.81 ) }
    dend_86 { pt3dadd( -33.8837, -102.677, -3.79341, 0.07 ) }
    dend_86 { pt3dadd( -39.9107, -110.813, -3.94613, 0.07 ) }
    dend_86 { pt3dadd( -46.4903, -118.534, -4.53611, 0.07 ) }
    dend_86 { pt3dadd( -51.6186, -127.084, -6.06321, 0.07 ) }
    dend_86 { pt3dadd( -54.4309, -136.662, -5.96324, 0.07 ) }
    dend_86 { pt3dadd( -58.0904, -145.928, -4.92525, 0.07 ) }
    // Section: dend_84, id: dend_84, parent: dend_68 (entry count 73/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 5.53914, -78.1093, 1.69534, 0.22 ) }
    dend_84 { pt3dadd( 9.23561, -88.2944, 4.38673, 0.22 ) }
    dend_84 { pt3dadd( 12.2078, -98.7476, 6.81975, 0.22 ) }
    dend_84 { pt3dadd( 13.7268, -109.654, 8.11493, 0.22 ) }
    dend_84 { pt3dadd( 14.3231, -120.665, 9.13827, 0.22 ) }
    dend_84 { pt3dadd( 17.2413, -131.285, 10.6597, 0.22 ) }
    dend_84 { pt3dadd( 20.9712, -141.521, 13.0765, 0.22 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 80/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 5.53914, -78.1093, 1.69534, 0.07 ) }
    dend_69 { pt3dadd( 8.00073, -85.3572, 3.83666, 0.22 ) }
    dend_69 { pt3dadd( 10.2196, -92.3164, 7.04379, 0.22 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 83/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 58.8818, -40.2976, -136.172, 0.07 ) }
    dend_65 { pt3dadd( 64.6241, -41.9735, -144.11, 0.07 ) }
    dend_65 { pt3dadd( 68.9247, -45.0821, -152.476, 0.07 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 86/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 58.8818, -40.2976, -136.172, 0.07 ) }
    dend_64 { pt3dadd( 64.1409, -41.7234, -143.326, 0.07 ) }
    dend_64 { pt3dadd( 70.0819, -44.1383, -149.599, 0.07 ) }
    dend_64 { pt3dadd( 77.1154, -45.9491, -154.886, 0.07 ) }
    dend_64 { pt3dadd( 82.972, -48.5015, -161.179, 0.07 ) }
    dend_64 { pt3dadd( 88.3047, -51.6593, -167.634, 0.07 ) }
    dend_64 { pt3dadd( 93.6661, -55.5156, -173.629, 0.07 ) }
    dend_64 { pt3dadd( 99.7225, -59.33, -178.95, 0.07 ) }
    dend_64 { pt3dadd( 105.419, -63.995, -183.906, 0.07 ) }
    dend_64 { pt3dadd( 110.438, -68.9492, -189.272, 0.07 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 96/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 83.9646, -12.5517, -131.176, 0.07 ) }
    dend_62 { pt3dadd( 93.3875, -12.8796, -134.643, 0.07 ) }
    dend_62 { pt3dadd( 103.113, -12.8697, -137.166, 0.07 ) }
    dend_62 { pt3dadd( 112.327, -13.472, -141.118, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 0/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 83.9646, -12.5517, -131.176, 0.07 ) }
    dend_59 { pt3dadd( 90.3401, -9.30116, -137.71, 0.07 ) }
    dend_59 { pt3dadd( 96.6757, -6.54185, -144.527, 0.07 ) }
    dend_59 { pt3dadd( 103.961, -5.29879, -150.869, 0.07 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 4/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 21.7651, -32.1019, -176.844, 0.07 ) }
    dend_54 { pt3dadd( 22.4227, -32.0817, -186.044, 0.07 ) }
    dend_54 { pt3dadd( 22.2175, -31.9038, -195.259, 0.07 ) }
    dend_54 { pt3dadd( 21.2451, -31.2678, -204.392, 0.07 ) }
    dend_54 { pt3dadd( 19.0719, -30.3754, -213.27, 0.07 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 9/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 21.7651, -32.1019, -176.844, 0.07 ) }
    dend_51 { pt3dadd( 19.5256, -36.5948, -190.172, 0.07 ) }
    dend_51 { pt3dadd( 18.7047, -41.9231, -203.319, 0.07 ) }
    dend_51 { pt3dadd( 17.554, -45.6447, -217.028, 0.07 ) }
    dend_51 { pt3dadd( 16.6113, -49.6755, -230.658, 0.07 ) }
    // Section: dend_88, id: dend_88, parent: dend_86 (entry count 14/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -58.0904, -145.928, -4.92525, 0.07 ) }
    dend_88 { pt3dadd( -61.4636, -155.052, -3.40578, 0.07 ) }
    dend_88 { pt3dadd( -63.7237, -164.509, -2.10202, 0.07 ) }
    dend_88 { pt3dadd( -65.6639, -173.597, 1.28956, 0.07 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 18/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -58.0904, -145.928, -4.92525, 0.07 ) }
    dend_87 { pt3dadd( -64.5202, -155.505, -6.53887, 0.07 ) }
    dend_87 { pt3dadd( -70.604, -165.086, -9.10299, 0.07 ) }
    dend_87 { pt3dadd( -76.2298, -174.129, -13.8379, 0.07 ) }
    // Section: dend_75, id: dend_75, parent: dend_69 (entry count 22/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 10.2196, -92.3164, 7.04379, 0.07 ) }
    dend_75 { pt3dadd( 12.9455, -99.9429, 9.69442, 0.07 ) }
    dend_75 { pt3dadd( 14.3513, -107.999, 11.929, 0.07 ) }
    dend_75 { pt3dadd( 16.7068, -115.897, 13.987, 0.07 ) }
    dend_75 { pt3dadd( 18.9161, -124.024, 14.8818, 0.07 ) }
    dend_75 { pt3dadd( 21.8876, -131.677, 17.1575, 0.07 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 28/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 10.2196, -92.3164, 7.04379, 0.81 ) }
    dend_70 { pt3dadd( 12.4266, -100.143, 10.2764, 0.07 ) }
    dend_70 { pt3dadd( 14.5241, -108.172, 12.9852, 0.07 ) }
    dend_70 { pt3dadd( 15.9175, -116.565, 14.7571, 0.07 ) }
    dend_70 { pt3dadd( 16.5075, -125.078, 16.3295, 0.07 ) }
    dend_70 { pt3dadd( 18.2375, -133.577, 16.2209, 0.07 ) }
    dend_70 { pt3dadd( 21.4395, -141.569, 17.6613, 0.07 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 35/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 103.961, -5.29879, -150.869, 0.07 ) }
    dend_61 { pt3dadd( 112.662, -3.4671, -157.082, 0.07 ) }
    dend_61 { pt3dadd( 121.382, -0.908629, -162.975, 0.07 ) }
    dend_61 { pt3dadd( 130.516, 2.07761, -167.944, 0.07 ) }
    dend_61 { pt3dadd( 139.032, 6.14973, -173.149, 0.07 ) }
    dend_61 { pt3dadd( 148.143, 10.9965, -176.129, 0.07 ) }
    dend_61 { pt3dadd( 156.616, 16.7088, -179.287, 0.07 ) }
    dend_61 { pt3dadd( 165.208, 22.5267, -181.852, 0.07 ) }
    dend_61 { pt3dadd( 173.114, 28.8306, -185.226, 0.07 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 44/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 103.961, -5.29879, -150.869, 0.07 ) }
    dend_60 { pt3dadd( 110.388, -2.4432, -157.988, 0.07 ) }
    dend_60 { pt3dadd( 116.4, -0.34205, -165.739, 0.07 ) }
    dend_60 { pt3dadd( 123.591, 1.75266, -172.4, 0.07 ) }
    dend_60 { pt3dadd( 131.692, 3.81092, -177.914, 0.07 ) }
    dend_60 { pt3dadd( 139.156, 7.02511, -183.707, 0.07 ) }
    dend_60 { pt3dadd( 146.71, 11.3031, -188.513, 0.07 ) }
    dend_60 { pt3dadd( 154.798, 15.5699, -192.333, 0.07 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 52/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 19.0719, -30.3754, -213.27, 0.07 ) }
    dend_56 { pt3dadd( 16.1609, -31.6097, -220.966, 0.07 ) }
    dend_56 { pt3dadd( 12.4598, -31.9411, -228.37, 0.07 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 55/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 19.0719, -30.3754, -213.27, 0.07 ) }
    dend_55 { pt3dadd( 19.4942, -29.286, -222.771, 0.07 ) }
    dend_55 { pt3dadd( 21.5678, -28.1519, -232.053, 0.07 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 16.6113, -49.6755, -230.658, 0.07 ) }
    dend_53 { pt3dadd( 15.297, -53.6893, -243.188, 0.07 ) }
    dend_53 { pt3dadd( 14.5963, -56.7155, -256.052, 0.07 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 61/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 16.6113, -49.6755, -230.658, 0.07 ) }
    dend_52 { pt3dadd( 16.0089, -52.739, -238.676, 0.07 ) }
    dend_52 { pt3dadd( 14.0476, -57.2811, -245.644, 0.07 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 64/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 21.8876, -131.677, 17.1575, 0.07 ) }
    dend_77 { pt3dadd( 24.4249, -141.558, 20.0548, 0.07 ) }
    dend_77 { pt3dadd( 29.1233, -150.758, 22.7298, 0.07 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 67/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 21.8876, -131.677, 17.1575, 0.07 ) }
    dend_76 { pt3dadd( 24.6236, -139.306, 18.7403, 0.07 ) }
    dend_76 { pt3dadd( 25.9357, -146.906, 21.7152, 0.07 ) }
    dend_76 { pt3dadd( 28.6256, -153.453, 26.1717, 0.07 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 71/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 21.4395, -141.569, 17.6613, 0.07 ) }
    dend_74 { pt3dadd( 23.6735, -150.496, 19.3082, 0.07 ) }
    dend_74 { pt3dadd( 26.1035, -159.483, 18.4732, 0.07 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 74/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 21.4395, -141.569, 17.6613, 0.07 ) }
    dend_71 { pt3dadd( 23.3027, -149.343, 19.304, 0.07 ) }
    dend_71 { pt3dadd( 24.4047, -157.194, 21.1943, 0.07 ) }
    dend_71 { pt3dadd( 24.1088, -165.241, 22.2955, 0.07 ) }
    dend_71 { pt3dadd( 22.294, -173.171, 22.2956, 0.07 ) }
    dend_71 { pt3dadd( 18.9465, -180.594, 21.4826, 0.07 ) }
    dend_71 { pt3dadd( 16.3676, -188.308, 20.8733, 0.07 ) }
    dend_71 { pt3dadd( 13.8451, -195.804, 18.798, 0.07 ) }
    dend_71 { pt3dadd( 10.1814, -202.544, 15.7721, 0.07 ) }
    // Section: dend_81, id: dend_81, parent: dend_77 (entry count 83/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 29.1233, -150.758, 22.7298, 0.07 ) }
    dend_81 { pt3dadd( 31.8679, -157.571, 24.6899, 0.07 ) }
    dend_81 { pt3dadd( 34.5919, -164.521, 26.0419, 0.07 ) }
    dend_81 { pt3dadd( 38.0144, -171.237, 27.0381, 0.07 ) }
    dend_81 { pt3dadd( 41.7364, -177.662, 28.8154, 0.07 ) }
    dend_81 { pt3dadd( 45.3583, -183.827, 31.5699, 0.07 ) }
    dend_81 { pt3dadd( 49.0529, -190.023, 34.1435, 0.07 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 90/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 29.1233, -150.758, 22.7298, 0.07 ) }
    dend_78 { pt3dadd( 31.4678, -157.967, 25.242, 0.07 ) }
    dend_78 { pt3dadd( 34.0213, -165.086, 27.8346, 0.07 ) }
    dend_78 { pt3dadd( 36.9882, -172.283, 29.6143, 0.07 ) }
    dend_78 { pt3dadd( 38.6689, -179.945, 30.8261, 0.07 ) }
    dend_78 { pt3dadd( 40.7331, -187.569, 31.6369, 0.07 ) }
    dend_78 { pt3dadd( 43.1082, -195.133, 32.1525, 0.07 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 97/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 10.1814, -202.544, 15.7721, 0.07 ) }
    dend_73 { pt3dadd( 8.36203, -212.272, 15.45, 0.07 ) }
    dend_73 { pt3dadd( 4.50825, -221.374, 14.2298, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 0/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 10.1814, -202.544, 15.7721, 0.07 ) }
    dend_72 { pt3dadd( 7.95313, -214.169, 15.5627, 0.07 ) }
    dend_72 { pt3dadd( 5.55428, -225.531, 13.1259, 0.07 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 3/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 49.0529, -190.023, 34.1435, 0.07 ) }
    dend_83 { pt3dadd( 56.9505, -193.196, 35.6027, 0.07 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 5/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 49.0529, -190.023, 34.1435, 0.07 ) }
    dend_82 { pt3dadd( 50.6146, -199.146, 36.6275, 0.07 ) }
    dend_82 { pt3dadd( 50.9029, -208.619, 37.7497, 0.07 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 8/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 43.1082, -195.133, 32.1525, 0.07 ) }
    dend_80 { pt3dadd( 46.6682, -201.789, 35.0652, 0.07 ) }
    dend_80 { pt3dadd( 50.2044, -208.661, 37.3882, 0.07 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 11/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 43.1082, -195.133, 32.1525, 0.07 ) }
    dend_79 { pt3dadd( 43.1061, -204.08, 28.8576, 0.07 ) }
    dend_79 { pt3dadd( 44.7806, -212.322, 24.2693, 0.07 ) }
    dend_79 { pt3dadd( 45.6107, -221.06, 20.5171, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_94 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_94, dend_43, dend_30, dend_25, dend_18, dend_11, dend_0, dend_98, dend_95, dend_45, dend_44, dend_34, dend_31, dend_27, dend_26, dend_24, dend_19, dend_17, dend_12, dend_6, dend_1, dend_100, dend_99, dend_97, dend_96, dend_93, dend_46, dend_42, dend_35, dend_33, dend_32, dend_29, dend_28, dend_23, dend_20, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_66, dend_47, dend_41, dend_36, dend_22, dend_21, dend_16, dend_15, dend_10, dend_9, dend_4, dend_3, dend_90, dend_67, dend_57, dend_48, dend_40, dend_37, dend_92, dend_91, dend_85, dend_68, dend_63, dend_58, dend_50, dend_49, dend_39, dend_38, dend_89, dend_86, dend_84, dend_69, dend_65, dend_64, dend_62, dend_59, dend_54, dend_51, dend_88, dend_87, dend_75, dend_70, dend_61, dend_60, dend_56, dend_55, dend_53, dend_52, dend_77, dend_76, dend_74, dend_71, dend_81, dend_78, dend_73, dend_72, dend_83, dend_82, dend_80, dend_79]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_81 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_11 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_95 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_44 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_100 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_99 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_97 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_96 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_93 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_35 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_28 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_14 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_8 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_7 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_5 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_47 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_21 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_10 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_48 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_37 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_92 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_91 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_85 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_63 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_58 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_50 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_49 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_89 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_86 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_84 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_64 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_51 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_75 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_70 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_61 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_60 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_71 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_81 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_78 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_43 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_94 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_30 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_98 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_45 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_42 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_6 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_67 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_90 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_29 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_68 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_17 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_32 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_69 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_57 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_2 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_3 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_77 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_23 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_76 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_74 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_88 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_87 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_83 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_59 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_62 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_80 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_82 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_41 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_40 OneSecGrp_SectionRef_61.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_54 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_73 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_79 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_72 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_56 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_55 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_39 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_52 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_38 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_53 OneSecGrp_SectionRef_91.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_94, dend_94, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_69, dend_69, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_55, dend_55, dend_53, dend_53, dend_52, dend_52, dend_77, dend_77, dend_76, dend_76, dend_76, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_73, dend_73, dend_72, dend_72, dend_83, dend_82, dend_82, dend_80, dend_80, dend_79, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_90 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_85 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_71 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 7
    dend_11 nseg = 3
    dend_95 nseg = 3
    dend_44 nseg = 5
    dend_31 nseg = 3
    dend_27 nseg = 3
    dend_12 nseg = 5
    dend_1 nseg = 3
    dend_100 nseg = 7
    dend_99 nseg = 5
    dend_97 nseg = 3
    dend_96 nseg = 3
    dend_93 nseg = 3
    dend_35 nseg = 9
    dend_28 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_8 nseg = 3
    dend_7 nseg = 9
    dend_5 nseg = 5
    dend_47 nseg = 3
    dend_21 nseg = 5
    dend_10 nseg = 3
    dend_48 nseg = 3
    dend_37 nseg = 3
    dend_92 nseg = 5
    dend_91 nseg = 3
    dend_85 nseg = 3
    dend_63 nseg = 3
    dend_58 nseg = 5
    dend_50 nseg = 3
    dend_49 nseg = 3
    dend_89 nseg = 3
    dend_86 nseg = 3
    dend_84 nseg = 3
    dend_64 nseg = 5
    dend_51 nseg = 3
    dend_75 nseg = 3
    dend_70 nseg = 3
    dend_61 nseg = 5
    dend_60 nseg = 3
    dend_71 nseg = 3
    dend_81 nseg = 3
    dend_78 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_LBC_d19674cc92_0_0


