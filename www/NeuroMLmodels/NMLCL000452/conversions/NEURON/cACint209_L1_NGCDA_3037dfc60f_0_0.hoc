// Cell: cACint209_L1_NGCDA_3037dfc60f_0_0
/*
{
  "id" : "cACint209_L1_NGCDA_3037dfc60f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.65332, -8.14477, 0.0, 3.38868", "2.3235, -7.30837, 0.0, 5.83516", "1.99367, -6.47197, 0.0, 8.36487", "1.66385, -5.63557, 0.0, 10.3053", "1.33402, -4.79917, 0.0, 11.2702", "1.0042, -3.96277, 0.0, 12.1037", "0.674371, -3.12636, 0.0, 12.478", "0.344546, -2.28996, 0.0, 12.8036", "0.0147201, -1.45356, 0.0, 13.3328", "-0.315105, -0.617159, 0.0, 13.8945", "-0.644931, 0.219243, 0.0, 14.1853", "-0.974756, 1.05564, 0.0, 14.2726", "-1.30458, 1.89205, 0.0, 14.0804", "-1.63441, 2.72845, 0.0, 13.7203", "-1.96423, 3.56485, 0.0, 13.3603", "-2.29406, 4.40125, 0.0, 12.7772", "-2.62388, 5.23765, 0.0, 12.1069", "-2.95371, 6.07405, 0.0, 11.425", "-3.28353, 6.91045, 0.0, 9.72987", "-3.61336, 7.74686, 0.0, 7.67118", "-3.94319, 8.58326, 0.0, 4.32164" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "2.92163, -8.4076, 0.209999, 1.37", "3.42488, -9.24962, 0.0269364, 1.37", "4.04047, -10.0759, -0.271055, 1.37", "4.90251, -11.2289, -0.719326, 1.37", "5.40604, -11.8715, -0.888724, 1.37", "6.23193, -12.8962, -1.05122, 1.37", "7.12815, -13.9688, -1.15279, 0.91", "8.68599, -15.7357, -1.29446, 0.91", "9.74545, -16.8178, -1.44191, 0.91", "11.5476, -18.3548, -1.82961, 0.91", "12.8532, -19.3009, -2.18965, 0.68", "14.501, -20.2942, -2.80267, 0.91", "16.3762, -21.1329, -3.73319, 0.68", "18.4322, -21.7152, -5.00422, 0.68", "20.4508, -21.8519, -6.69706, 0.68", "21.3944, -21.67, -7.73469, 0.68", "22.5346, -20.9468, -9.46204, 0.68", "23.1809, -20.0702, -10.8738, 0.68", "23.5801, -19.1606, -12.1696, 0.68", "23.8387, -18.1883, -13.7181, 0.91", "23.935, -17.6694, -14.8828, 1.37", "24.1276, -17.0916, -17.1908, 0.68", "24.3206, -16.923, -18.8604, 0.68", "24.5901, -16.8705, -20.7486, 0.68", "25.1278, -16.9487, -23.413, 0.68", "25.77, -17.1466, -25.8984, 0.68", "26.4815, -17.3544, -27.9552, 0.68", "27.048, -17.4794, -29.102, 0.68", "27.5445, -17.5253, -29.964, 0.68", "28.4635, -17.4689, -31.3682, 0.91", "28.8863, -17.4258, -31.9886, 0.91", "30.2514, -17.2697, -34.1763, 0.46", "31.2758, -17.1591, -36.0859, 0.91", "32.1974, -17.1367, -38.2554, 0.91", "33.2444, -17.1604, -41.1419, 0.91", "33.7223, -17.1866, -42.7284, 0.91", "34.1019, -17.2153, -44.3014, 0.91", "34.3043, -17.2547, -45.5868, 0.91", "34.5744, -17.3145, -48.0865, 0.91", "35.002, -17.4668, -51.4405, 0.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.55163, -2.9546, 7.25, 1.37", "6.57971, -2.94769, 7.26611, 1.37", "8.51774, -2.42656, 8.16151, 1.37", "9.93778, -1.99834, 8.62419, 1.14", "11.9907, -1.37219, 9.0751, 1.37", "14.2635, -0.672278, 9.3491, 1.14", "16.0798, -0.113097, 9.35645, 0.91", "17.231, 0.225362, 9.12381, 0.91", "18.8908, 0.631591, 8.33526, 0.91", "20.1435, 0.810836, 7.47058, 1.14", "21.1315, 0.828466, 6.63825, 1.37", "22.6562, 0.693919, 5.3269, 1.82", "24.1815, 0.47527, 4.01331, 1.37", "25.5466, 0.179799, 2.84946, 1.14", "27.2917, -0.321997, 1.38866, 1.14", "28.5989, -0.765278, 0.271546, 1.14", "30.3273, -1.44857, -1.05769, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.741626, 9.1199, -6.69, 3.19", "0.946928, 9.71082, -8.44011, 2.73", "1.30003, 10.7271, -11.4501, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.36163, 3.4209, 7.23, 1.37", "4.74142, 4.13555, 7.51455, 1.37", "5.38563, 5.34777, 7.99721, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-7.36837, 5.29665, -1.97, 1.59", "-7.36837, 5.29665, -1.97, 1.59", "-8.10317, 6.34138, -2.65734, 1.37", "-8.80196, 7.65175, -3.85475, 1.37", "-9.34983, 8.92248, -5.25869, 1.59", "-9.657, 9.62232, -6.06819, 1.37", "-10.2062, 10.8735, -7.51549, 1.14", "-10.5712, 11.8145, -8.68723, 1.14", "-11.066, 13.5298, -11.1191, 1.14", "-11.2378, 14.3804, -12.5559, 1.14", "-11.288, 15.0577, -13.8103, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.09837, -7.33135, 5.48, 1.14", "-3.65095, -7.54347, 5.39545, 1.14", "-4.99699, -7.96017, 5.18853, 0.91", "-6.10001, -8.24359, 5.06414, 0.91", "-7.36073, -8.48384, 4.95219, 1.14", "-8.63988, -8.65384, 4.88697, 0.91", "-10.7999, -8.81797, 4.83049, 1.14", "-12.862, -8.77894, 4.87582, 1.14", "-14.0452, -8.61157, 4.99316, 1.14", "-15.2878, -8.3098, 5.21369, 0.91", "-16.318, -7.99943, 5.45748, 0.91", "-17.1817, -7.72503, 5.72638, 1.14", "-18.375, -7.39591, 6.28596, 0.91", "-19.3286, -7.33656, 6.88229, 0.91", "-19.9874, -7.39461, 7.31281, 1.14", "-21.0494, -7.71391, 8.05218, 1.14", "-21.7795, -8.08296, 8.55246, 0.91", "-23.0268, -8.96944, 9.45095, 0.91", "-24.2472, -10.0932, 10.3206, 1.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.371626, -6.81885, 10.68, 3.19", "0.378896, -7.47567, 11.3517, 3.19", "0.392438, -8.69919, 12.603, 2.73", "0.405919, -9.91716, 13.8486, 2.73", "0.421651, -11.3386, 15.3023, 2.51", "0.437509, -12.7713, 16.7675, 2.28", "0.451673, -14.0509, 18.0762, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999981492465656
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-3.94319, 8.58326, 0.0, 0.567226", "-9.44588, 22.5375, 0.0, 0.567226", "-14.9486, 36.4917, 0.0, 0.567226" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "30.3273, -1.44857, -1.05769, 0.91", "31.1547, -1.41235, 0.0848549, 0.91", "32.202, -1.26086, 1.61491, 0.91", "33.1076, -1.09191, 3.08319, 0.68", "34.0171, -0.974088, 4.7218, 0.91", "34.7912, -1.0139, 6.25763, 0.91", "36.0015, -1.39213, 8.81642, 0.68", "36.8887, -1.89869, 10.7575, 0.68", "37.5873, -2.4894, 12.4364, 0.91", "38.1961, -3.12876, 13.9952, 0.68", "39.1998, -4.3256, 16.6518, 0.68", "40.1312, -5.46879, 19.0869, 0.91", "40.8641, -6.28039, 20.7966, 0.68", "42.0955, -7.44577, 23.4206, 1.14", "43.1932, -8.32372, 25.7, 0.91", "44.3572, -9.13646, 28.1131, 0.91", "45.2432, -9.6827, 30.0067, 0.68", "46.1744, -10.2143, 31.9229, 0.68", "46.8839, -10.6657, 33.3904, 0.68", "47.921, -11.4418, 35.5332, 0.91", "48.7226, -12.1656, 37.173, 0.68", "50.0114, -13.5354, 39.7425, 0.68", "51.5025, -15.2187, 42.5102, 0.68", "52.4694, -16.3583, 44.1666, 0.68", "53.4375, -17.4768, 45.6114, 0.68", "54.8237, -19.1505, 47.5386, 0.68", "56.2807, -21.0218, 49.5809, 0.68", "56.9599, -21.9608, 50.5049, 0.68", "58.1105, -23.5195, 52.0345, 0.68", "59.6617, -25.3326, 53.8333, 0.68", "61.3212, -26.9999, 55.5671, 0.68", "62.8813, -28.4008, 57.1035, 0.68", "63.9833, -29.3245, 58.1088, 0.91", "65.8921, -30.9125, 59.7607, 0.68", "67.4013, -32.1275, 60.9508, 0.68", "69.3476, -33.7336, 62.3685, 0.91", "70.5596, -34.7627, 63.256, 0.68", "71.9496, -36.0737, 64.4228, 0.68", "73.0617, -37.2809, 65.5429, 0.68", "74.1516, -38.6897, 66.8624, 0.91", "75.3031, -40.3116, 68.5221, 0.68", "76.623, -42.0736, 70.639, 0.46", "77.8164, -43.5199, 72.8075, 0.46", "78.4373, -44.24, 74.1721, 0.91", "79.2663, -45.1569, 76.1419, 0.68", "80.0642, -46.0325, 78.1454, 0.46", "80.9677, -47.1136, 80.4277, 0.46", "81.9301, -48.4401, 82.79, 0.46", "83.0785, -50.2977, 85.4587, 0.46", "83.9814, -51.7907, 87.5781, 0.46", "84.4879, -52.6968, 88.7712, 0.46", "85.2929, -54.5703, 90.7089, 0.46", "85.6219, -55.5713, 91.4036, 1.14", "86.2186, -57.5258, 92.2076, 1.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "30.3273, -1.44857, -1.05769, 0.91", "31.3614, -1.02616, -1.78625, 0.91", "32.5019, -0.907224, -2.35785, 0.91", "33.625, -0.946814, -2.77924, 0.91", "34.5775, -1.0652, -3.03407, 0.91", "36.6918, -1.42602, -3.4153, 0.91", "38.8629, -1.82549, -3.70498, 0.91", "40.7615, -2.29326, -3.89649, 0.91", "42.1346, -2.70024, -3.97845, 0.91", "44.1345, -3.38908, -4.00789, 0.68", "45.738, -3.98676, -3.94057, 0.68", "46.8589, -4.38767, -3.77927, 0.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "1.30003, 10.7271, -11.4501, 1.59", "2.60667, 10.7037, -12.5036, 1.59", "4.01354, 10.708, -13.7846, 1.37", "5.55086, 10.7495, -15.397, 1.37", "6.82242, 10.8341, -16.8218, 1.37", "8.18197, 10.9247, -18.3452, 1.37", "9.24886, 10.9958, -19.5407, 1.14", "10.8354, 11.1279, -21.457, 1.14", "12.3879, 11.3379, -23.5791, 1.14", "12.773, 11.4302, -24.1746, 1.14" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "1.30003, 10.7271, -11.4501, 1.82", "1.26662, 11.9068, -12.8338, 1.82", "1.38986, 13.9066, -15.2521, 1.82", "1.55731, 15.5014, -17.0866, 1.82", "1.64466, 16.4674, -18.115, 1.82", "1.75175, 17.6438, -19.2909, 1.37", "1.87439, 19.0565, -20.6975, 1.37", "2.02187, 20.5145, -22.1813, 1.37", "2.15352, 21.7605, -23.4143, 1.37", "2.28067, 23.255, -24.9301, 1.14", "2.36479, 24.6144, -26.4125, 1.14", "2.4478, 26.1058, -28.1953, 1.14", "2.58789, 27.8466, -30.5047, 1.14", "2.70919, 29.1187, -32.4409, 1.14", "2.78633, 29.9288, -33.8636, 1.14", "2.85027, 30.7895, -35.7797, 1.14", "2.8849, 31.3839, -37.458, 1.37", "3.00054, 31.9363, -39.6528, 1.37", "3.23191, 32.2787, -41.7945, 1.37", "3.4107, 32.3961, -42.9819, 0.91", "3.86727, 32.5817, -45.7011, 0.91", "4.2554, 32.6567, -47.7139, 0.91", "4.93245, 32.7384, -50.8245, 0.91", "5.75645, 32.8331, -53.7985, 0.91", "6.44054, 32.8846, -55.649, 0.91" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "5.38563, 5.34777, 7.99721, 0.91", "7.08358, 5.75649, 8.73711, 0.91", "9.25858, 6.28003, 9.68491, 1.14", "11.5645, 6.8351, 10.6898, 1.14", "12.5254, 7.06641, 11.1085, 1.14", "13.7937, 7.3717, 11.6612, 1.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.38563, 5.34777, 7.99721, 1.14", "5.63637, 7.5531, 7.57306, 1.14", "5.82421, 9.11054, 7.29265, 1.14", "5.96458, 10.2948, 7.05151, 1.14", "6.16176, 11.883, 6.72074, 1.14", "6.40417, 13.8357, 6.31405, 1.14", "6.70309, 16.2434, 5.8126, 0.91", "6.91573, 17.6998, 5.48071, 0.91", "7.1446, 19.2123, 5.10777, 0.91", "7.417, 21.2676, 4.58866, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-11.288, 15.0577, -13.8103, 1.14", "-11.4118, 15.1568, -13.8352, 1.14", "-11.9727, 15.6061, -13.9481, 1.14", "-12.5034, 16.0311, -14.0548, 0.91", "-13.0742, 16.4883, -14.1697, 0.91", "-13.7777, 17.0517, -14.3112, 0.91" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-11.288, 15.0577, -13.8103, 1.14", "-11.9966, 15.5055, -14.897, 1.14", "-13.159, 16.1306, -16.593, 0.91", "-13.9204, 16.5387, -17.8307, 0.91", "-14.5361, 16.8796, -18.9448, 1.14", "-15.1384, 17.2192, -20.2118, 0.91", "-15.7929, 17.6092, -21.8369, 1.14", "-16.4588, 18.0783, -23.9587, 1.14", "-17.0522, 18.4823, -25.9595, 1.14", "-17.5114, 18.7831, -27.831, 1.14", "-17.8131, 19.0111, -29.6063, 0.68", "-17.9475, 19.1127, -30.887, 0.68", "-17.9202, 19.1718, -32.2901, 0.68" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-24.2472, -10.0932, 10.3206, 0.91", "-26.0803, -10.4782, 10.9975, 0.91", "-28.1061, -10.6616, 11.375, 0.91", "-30.1521, -10.5889, 11.3672, 0.91", "-31.1995, -10.4526, 11.1623, 0.68", "-33.7382, -10.0568, 10.2177, 0.46", "-35.1434, -9.86877, 9.49523, 0.46", "-36.6376, -9.68392, 8.31755, 0.46", "-37.8995, -9.58386, 7.08824, 0.68", "-39.2293, -9.51576, 5.65739, 0.68", "-40.898, -9.42752, 3.89242, 0.68", "-42.1648, -9.40487, 2.63109, 0.68", "-43.6077, -9.44921, 1.30507, 0.68", "-44.4729, -9.51736, 0.654374, 0.46", "-45.7166, -9.69368, -0.0904852, 0.46", "-48.0561, -10.1099, -1.23784, 0.46", "-49.7085, -10.3434, -2.00286, 0.46", "-51.1111, -10.4751, -2.68424, 0.46", "-53.0174, -10.5853, -3.74152, 0.46", "-54.4418, -10.6662, -4.66802, 0.23", "-56.1219, -10.845, -5.93844, 0.46", "-57.8248, -11.1539, -7.42813, 0.46", "-58.9333, -11.3564, -8.46918, 0.68", "-59.5776, -11.4082, -9.09549, 0.68", "-59.8858, -11.3945, -9.40078, 0.46", "-60.994, -11.2646, -10.3451, 0.46", "-62.1127, -11.1321, -11.0978, 0.46", "-62.8382, -11.0809, -11.536, 0.46", "-64.3276, -10.9595, -12.47, 0.46", "-66.0486, -10.7353, -13.6292, 0.46", "-67.4763, -10.4962, -14.6748, 0.68", "-68.8666, -10.2581, -15.7555, 0.68", "-69.9231, -10.0871, -16.6057, 0.68", "-70.8282, -9.98337, -17.3802, 0.68", "-72.0886, -9.96243, -18.4744, 0.46", "-73.1474, -10.0296, -19.3878, 0.46", "-74.2666, -10.1825, -20.267, 0.46", "-74.7277, -10.2736, -20.5177, 0.46", "-75.5946, -10.4814, -20.8004, 0.46", "-76.9467, -10.9072, -21.1638, 0.23", "-77.7716, -11.2087, -21.3722, 0.68", "-78.9765, -11.549, -21.6956, 0.46", "-79.9875, -11.8223, -22.0273, 0.46", "-81.0941, -12.173, -22.4827, 0.68", "-82.441, -12.6168, -23.0795, 0.46", "-82.8462, -12.738, -23.2702, 0.91", "-84.5563, -13.1196, -24.0775, 0.23", "-85.9304, -13.2902, -24.7613, 0.23", "-86.8294, -13.3376, -25.2291, 0.46", "-88.2497, -13.2668, -25.9493, 1.14", "-89.4678, -13.1302, -26.5748, 0.23", "-90.41, -13.0164, -27.1216, 0.23", "-91.8181, -12.8883, -28.0533, 0.23", "-93.1515, -12.8208, -28.9805, 0.23", "-94.2861, -12.9116, -29.8825, 0.68", "-95.2813, -13.1707, -30.8069, 0.23", "-96.4807, -13.6227, -31.9912, 0.23", "-97.5709, -14.1639, -33.0604, 0.23", "-98.3686, -14.6677, -33.8414, 0.68", "-99.4001, -15.5161, -34.927, 0.46", "-99.736, -15.8589, -35.2926, 0.68" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-24.2472, -10.0932, 10.3206, 1.14", "-23.5298, -11.0372, 12.1582, 1.14", "-22.9388, -11.9232, 13.8811, 0.91", "-22.4902, -12.7608, 15.5346, 0.91", "-22.143, -13.6016, 17.2919, 0.91", "-21.9585, -14.2609, 18.7989, 0.91", "-21.8631, -15.2353, 21.177, 0.91", "-22.2224, -15.7543, 22.7177, 0.91", "-23.2049, -15.8963, 23.685, 0.91", "-24.8019, -15.8749, 24.631, 0.91", "-26.7776, -15.8098, 25.639, 0.68", "-28.6735, -15.8175, 26.489, 0.68", "-29.9033, -15.9193, 27.0387, 0.68", "-31.1244, -16.208, 27.771, 0.68", "-32.7243, -17.0962, 29.3393, 0.68", "-33.5804, -17.8828, 30.6233, 0.91", "-34.0906, -18.5002, 31.6079, 0.91", "-34.8888, -19.5345, 33.2306, 0.68", "-35.7488, -20.6935, 34.9105, 0.68", "-36.6153, -21.9101, 36.5232, 0.68", "-37.748, -23.5587, 38.4431, 0.91", "-38.6424, -24.8564, 39.8374, 0.91", "-40.0592, -26.5959, 41.7289, 0.91", "-40.8799, -27.574, 42.7167, 0.91", "-41.4649, -28.257, 43.3118, 0.91", "-42.4917, -29.3941, 44.1944, 0.91", "-44.0644, -31.2553, 45.4009, 0.91", "-45.9525, -33.569, 46.9056, 0.46" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.451673, -14.0509, 18.0762, 2.73", "0.380231, -14.8228, 17.8361, 2.73", "0.301526, -15.6731, 17.5715, 2.51" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.451673, -14.0509, 18.0762, 2.05", "3.98321, -16.3463, 17.6167, 2.05", "6.44988, -17.9495, 17.2958, 1.82", "8.20483, -19.0901, 17.0674, 1.82" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-14.9486, 36.4917, 0.0, 0.567226", "-20.4513, 50.4459, 0.0, 0.567226", "-25.954, 64.4002, 0.0, 0.567226" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "46.8589, -4.38767, -3.77927, 0.46", "47.2262, -3.83419, -2.82567, 0.46", "48.0262, -2.94103, -1.0392, 0.46", "48.6142, -2.44764, 0.0277961, 0.46", "49.3601, -1.94936, 1.09236, 0.46", "50.0417, -1.58669, 1.86788, 0.23", "50.6369, -1.26496, 2.45854, 0.23", "51.4477, -0.904679, 3.14208, 0.23", "52.2191, -0.53337, 3.72146, 0.46", "53.1214, -0.0789223, 4.35031, 0.46", "54.2076, 0.472887, 5.06946, 0.46", "55.3606, 1.15507, 5.83475, 0.46", "56.7151, 2.12222, 6.81085, 0.46", "57.9218, 3.11841, 7.78445, 0.46" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "46.8589, -4.38767, -3.77927, 0.46", "47.2606, -6.25132, -4.57527, 0.46", "47.6395, -7.7734, -5.41926, 0.46", "48.1814, -9.67429, -6.70431, 0.46", "48.5487, -10.7127, -7.55153, 0.46", "49.3007, -12.3304, -9.06579, 0.46", "49.9097, -13.2848, -10.0395, 0.46", "51.0629, -14.3232, -11.346, 0.46", "51.9582, -14.7478, -11.8676, 0.46", "53.096, -15.1639, -12.258, 0.68", "54.1913, -15.633, -12.5947, 0.68", "55.7126, -16.4476, -13.0596, 0.46", "58.0995, -18.0803, -13.9266, 0.46", "60.3615, -20.0442, -14.9718, 0.46", "61.8557, -21.6839, -15.9228, 0.46", "63.6018, -23.9833, -17.451, 0.46", "65.0097, -26.1022, -19.1343, 0.46", "65.8428, -27.3878, -20.5265, 0.46", "66.3895, -28.1947, -21.8666, 0.46", "67.0849, -28.8012, -23.9696, 0.46", "67.4574, -28.6393, -25.0324, 0.46", "67.9813, -28.1157, -26.3507, 0.46", "69.1691, -26.7591, -29.0244, 0.68", "70.0537, -25.7909, -30.8535, 0.68", "71.1843, -24.7776, -33.1581, 0.68", "71.9846, -24.1476, -34.9671, 0.46", "73.1044, -23.4974, -37.6658, 0.68", "73.5109, -23.3161, -38.7471, 0.46", "74.0741, -23.1154, -40.3203, 0.46", "75.308, -22.7497, -44.0857, 0.46", "76.0096, -22.5433, -46.2913, 0.68", "76.6443, -22.3648, -48.2096, 0.46", "77.4787, -22.2086, -50.6472, 0.68", "78.0589, -22.1443, -52.1324, 0.46", "79.2849, -22.0094, -54.5391, 0.46", "80.4061, -21.8947, -56.3834, 0.46", "82.2844, -21.9142, -58.9197, 0.46", "83.7146, -22.0986, -60.4731, 0.46", "85.2471, -22.502, -61.6981, 0.23", "87.0532, -23.1018, -62.8492, 0.23" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "13.7937, 7.3717, 11.6612, 0.91", "14.7399, 7.01319, 12.9519, 0.91", "15.3187, 6.70016, 13.8833, 0.91", "16.3061, 6.02158, 15.752, 0.91", "16.9945, 5.41226, 17.337, 1.14", "17.7076, 4.60033, 19.2915, 0.91", "18.1949, 3.81544, 20.9343, 0.91", "18.6385, 2.83931, 22.9813, 1.14", "18.8243, 2.19628, 24.2597, 0.91", "18.9239, 1.28266, 25.8853, 0.91", "18.87, 0.667692, 26.8429, 0.91", "18.506, -0.654546, 28.5587, 1.14" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "13.7937, 7.3717, 11.6612, 1.37", "14.1248, 8.33013, 10.8782, 1.37", "14.4729, 9.57166, 9.71759, 0.91", "14.773, 10.6782, 8.53441, 0.91", "15.2286, 12.0991, 6.91681, 0.91", "15.8472, 13.6691, 5.0368, 0.91", "16.4302, 14.7908, 3.67208, 0.91", "17.0352, 15.7034, 2.49112, 0.91", "17.9105, 16.7516, 0.994221, 0.91", "18.7302, 17.5423, -0.22782, 0.91", "19.7897, 18.4192, -1.50338, 0.91", "21.3634, 19.5244, -2.98398, 0.91", "22.3292, 20.2007, -3.73924, 0.91", "22.4953, 20.3177, -3.86471, 0.91", "24.0564, 21.5263, -5.28097, 0.68", "25.1395, 22.41, -6.60681, 0.68", "25.8846, 23.0031, -7.80558, 0.46", "26.3623, 23.4046, -8.7935, 0.68", "27.0636, 24.0227, -10.4727, 0.68", "27.8577, 24.7207, -12.5122, 0.68", "28.4489, 25.2076, -14.0918, 0.68", "29.0126, 25.6746, -15.7896, 0.68", "29.5057, 26.1719, -17.4842, 0.23", "30.0599, 26.771, -19.4614, 0.23", "30.2905, 27.0774, -20.2412, 0.23", "30.5256, 27.4497, -20.9292, 0.23" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-13.7777, 17.0517, -14.3112, 0.91", "-15.4356, 17.6357, -15.9121, 0.91", "-17.3607, 18.1794, -17.9601, 0.91", "-19.4401, 18.6273, -20.1954, 0.91", "-20.9097, 18.9438, -21.7751, 0.91", "-23.3575, 19.4711, -24.4065, 0.91", "-25.1526, 19.8578, -26.3362, 0.91", "-26.9814, 20.1991, -28.4362, 0.91", "-28.7601, 20.3698, -30.6231, 0.68" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-13.7777, 17.0517, -14.3112, 0.68", "-13.7096, 18.0278, -14.6011, 0.68", "-13.6765, 19.0199, -14.8435, 0.68", "-13.726, 19.9923, -15.0123, 0.91", "-13.8437, 21.0301, -15.2581, 0.91", "-13.9053, 21.5737, -15.3868, 0.68", "-13.9699, 22.1435, -15.5217, 0.68", "-14.1262, 23.1329, -15.7573, 0.68", "-14.444, 24.6441, -16.0835, 0.68", "-14.8322, 26.0173, -16.3931, 0.91" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "0.301526, -15.6731, 17.5715, 1.14", "-0.810647, -16.2892, 16.6868, 1.14", "-2.77647, -17.2021, 15.0284, 1.14", "-4.8031, -17.9596, 13.21, 1.14", "-6.48725, -18.4651, 11.6228, 1.14", "-8.21145, -18.8894, 9.92022, 0.91", "-9.6368, -19.191, 8.48635, 1.14", "-11.083, -19.3998, 6.93693, 0.91", "-12.7782, -19.4702, 4.9976, 0.91", "-14.0252, -19.3625, 3.54196, 1.14", "-14.7861, -19.2287, 2.63419, 1.37", "-15.0836, -19.1634, 2.25092, 1.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.301526, -15.6731, 17.5715, 1.14", "1.26521, -17.0066, 17.5996, 1.14", "1.7656, -17.699, 17.6142, 1.14", "2.49237, -18.7046, 17.6354, 1.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.20483, -19.0901, 17.0674, 1.37", "9.4573, -19.3141, 16.5432, 1.37", "10.7266, -19.567, 15.869, 1.37", "11.4975, -19.7692, 15.4103, 1.37", "12.7461, -20.1371, 14.6545, 1.37", "14.2252, -20.5892, 13.7555, 1.37", "15.303, -20.9212, 13.0616, 1.37", "16.5897, -21.3448, 12.2142, 1.37", "17.9106, -21.8399, 11.3456, 1.37", "18.6438, -22.1575, 10.863, 1.37", "20.1661, -23.0429, 9.8348, 1.14", "21.6081, -24.1786, 8.89426, 1.14", "22.8071, -25.1928, 8.15944, 1.14", "23.5848, -25.9215, 7.70392, 1.14", "24.1849, -26.5719, 7.34254, 1.14", "25.2173, -28.0449, 6.66578, 1.14", "25.8641, -29.6245, 6.20284, 1.14" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.20483, -19.0901, 17.0674, 1.82", "8.02908, -20.6554, 17.2716, 1.82", "7.88034, -21.9802, 17.4445, 1.82", "7.71025, -23.495, 17.6421, 1.59", "7.58221, -24.6354, 17.7908, 1.59", "7.47095, -25.6263, 17.9201, 1.59", "7.29715, -27.1743, 18.1221, 1.82" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "18.506, -0.654546, 28.5587, 0.68", "15.9946, 0.0976601, 29.5817, 0.68", "12.2922, 0.950846, 30.8714, 1.14", "9.82826, 1.37842, 31.7246, 0.91", "7.04767, 1.71852, 32.7529, 0.68", "5.38345, 1.82725, 33.4294, 0.68", "3.26625, 1.87722, 34.3936, 0.91", "0.091887, 1.75762, 35.9624, 0.68", "-2.29897, 1.4936, 37.3011, 0.68", "-3.83621, 1.19328, 38.3883, 0.91", "-5.59067, 0.691658, 39.8408, 0.91", "-7.4541, 0.0771231, 41.4981, 0.91", "-9.06527, -0.525459, 42.994, 0.91", "-10.1844, -0.987814, 43.9975, 0.91", "-11.7513, -1.62302, 45.2645, 0.91", "-12.7124, -1.95385, 45.9557, 0.91", "-14.9521, -2.7045, 47.4932, 0.68", "-17.1627, -3.51596, 48.9886, 0.68", "-19.6654, -4.449, 50.61, 0.68", "-21.4656, -5.12596, 51.7689, 0.68", "-23.7411, -5.88895, 53.1921, 0.68", "-25.7172, -6.46652, 54.5643, 0.68", "-27.7012, -7.0156, 56.2692, 0.91" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "18.506, -0.654546, 28.5587, 0.68", "18.9601, -0.525963, 29.363, 0.68", "20.0153, -0.326541, 31.3282, 0.68", "20.4356, -0.276735, 32.2233, 0.68", "21.4477, -0.268411, 34.6213, 0.68", "22.1663, -0.356488, 36.3493, 0.68", "22.9134, -0.516431, 38.1089, 0.68", "23.5838, -0.703455, 39.6523, 0.68", "24.2443, -0.964458, 40.9778, 0.68", "24.8121, -1.31001, 42.0993, 0.68", "25.3041, -1.75792, 43.0342, 0.68", "25.8003, -2.30131, 43.9802, 0.68", "26.3262, -2.96508, 45.1362, 0.68", "26.8718, -3.73116, 46.5672, 0.46", "27.3024, -4.33546, 47.7028, 0.46", "27.866, -5.17819, 49.363, 0.68", "28.5364, -6.36235, 51.8429, 0.68", "28.95, -7.35275, 53.9734, 0.68", "29.1192, -8.04044, 55.5605, 0.46" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-15.0836, -19.1634, 2.25092, 0.68", "-14.4082, -18.3919, 0.742811, 0.68", "-13.7183, -17.5853, -0.597286, 0.68", "-13.4344, -17.2427, -1.11641, 0.46", "-12.7321, -16.3591, -2.43463, 0.68", "-12.0931, -15.53, -3.73843, 0.68", "-11.5687, -14.8428, -4.91538, 0.68", "-11.0598, -14.1536, -6.12336, 0.68", "-10.7474, -13.7655, -6.9275, 0.68", "-10.3751, -13.4048, -8.00938, 0.91", "-9.94634, -13.143, -9.49862, 0.91", "-9.68977, -13.1385, -10.5909, 0.91", "-9.62671, -13.2053, -10.9485, 0.68", "-9.4625, -13.8331, -12.5886, 0.68", "-9.47163, -14.7932, -14.2362, 0.68", "-9.54489, -15.1721, -14.6928, 0.68", "-9.68732, -15.7499, -15.2579, 0.46", "-10.0262, -16.8134, -16.155, 0.23", "-10.3108, -17.4819, -16.6501, 0.23", "-11.054, -18.63, -17.2781, 0.23", "-11.6499, -19.3387, -17.6125, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-15.0836, -19.1634, 2.25092, 1.14", "-15.5088, -19.2422, 1.92377, 1.14", "-16.4444, -19.4158, 1.20372, 1.14", "-17.0179, -19.5222, 0.762336, 1.14", "-17.7664, -19.661, 0.186366, 1.14" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "25.8641, -29.6245, 6.20284, 1.37", "25.9761, -29.8483, 6.16247, 1.37", "26.9857, -31.4373, 5.86106, 1.37", "27.7614, -32.446, 5.64481, 0.91", "28.8439, -33.6608, 5.35806, 1.14", "29.7297, -34.5643, 5.16886, 0.68", "31.3174, -36.0405, 4.94398, 0.68", "32.7636, -37.2155, 4.83144, 0.68", "33.9212, -38.0173, 4.80971, 0.68", "35.5059, -38.9964, 4.79443, 0.68", "36.8381, -39.7344, 4.78483, 0.68", "38.826, -40.7316, 4.77967, 0.91", "39.8707, -41.2059, 4.79395, 0.68", "41.0404, -41.6927, 4.78828, 0.68", "41.9297, -42.0614, 4.79575, 0.68", "43.1941, -42.5995, 4.80351, 0.68", "44.4851, -43.1694, 4.77407, 0.23", "45.7505, -43.7736, 4.719, 0.68", "47.3916, -44.6713, 4.67511, 0.46", "48.7196, -45.4937, 4.64673, 0.46", "49.9351, -46.2975, 4.63109, 0.46", "50.519, -46.672, 4.61686, 0.68", "52.1086, -47.638, 4.52905, 0.68", "53.2093, -48.2565, 4.41479, 0.46", "54.0602, -48.6873, 4.25853, 0.46", "54.7172, -48.9626, 4.07799, 0.46", "56.9058, -49.6821, 3.37212, 0.68", "57.7725, -49.9625, 3.07234, 0.68", "58.1829, -50.1179, 2.92222, 0.68", "59.4305, -50.6651, 2.4568, 0.23", "60.0414, -51.0418, 2.24613, 0.46", "61.1423, -52.0257, 1.92757, 0.23", "62.3739, -53.645, 1.69224, 0.91", "63.5657, -55.7556, 1.6002, 0.91", "63.7824, -56.2689, 1.59119, 0.91", "64.5025, -58.5207, 1.57633, 0.68", "64.9276, -60.3069, 1.52204, 0.68", "65.2983, -62.6451, 1.35241, 0.91", "65.5268, -64.8303, 1.02779, 0.68", "65.7202, -66.6949, 0.615582, 1.14", "65.9056, -67.9055, 0.216917, 0.91", "66.2493, -69.2524, -0.4035, 0.91", "66.9938, -71.1404, -1.52799, 0.91", "67.9389, -72.9164, -2.78863, 0.46", "68.6638, -74.078, -3.64598, 0.46", "69.891, -75.9652, -4.92544, 0.46", "70.8811, -77.5215, -5.91816, 0.68", "71.8921, -79.0869, -6.85596, 0.46", "73.3225, -81.1769, -8.05506, 0.68", "73.9239, -82.0693, -8.49714, 0.46", "74.7643, -83.4826, -9.12678, 0.23", "75.3313, -84.5948, -9.513, 0.23", "75.6658, -85.4307, -9.74656, 0.46", "76.1556, -86.7535, -9.98742, 0.68", "77.0478, -88.5312, -10.2311, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "25.8641, -29.6245, 6.20284, 0.68", "25.3587, -29.1562, 2.75802, 0.68", "25.2865, -28.7485, 0.621308, 0.68", "25.4551, -28.3085, -1.1678, 0.68", "25.7503, -27.9236, -2.55461, 0.68", "26.1104, -27.584, -3.74048, 0.46", "26.6271, -27.2405, -5.08571, 0.46", "27.3875, -26.8805, -6.23021, 0.46", "28.2603, -26.6186, -7.21142, 0.68", "29.1085, -26.5059, -8.02204, 0.68", "29.5637, -26.5267, -8.41885, 0.68", "31.0554, -26.7904, -9.79997, 0.46", "31.7548, -26.9513, -10.5226, 0.46", "32.7043, -27.1818, -11.5426, 0.46", "33.6477, -27.4505, -12.5043, 0.46", "34.8768, -27.8374, -13.6775, 0.46", "36.3861, -28.3159, -15.0028, 0.46", "37.9391, -28.7981, -16.1504, 0.23", "38.783, -29.0626, -16.69, 0.46", "39.7167, -29.3839, -17.2241, 0.23", "40.7684, -29.7331, -17.7288, 0.68", "41.6713, -29.9829, -18.1497, 0.23", "43.1207, -30.3572, -18.787, 0.46", "44.3703, -30.6375, -19.3436, 0.46", "45.7259, -30.914, -20.0652, 0.23", "47.4418, -31.264, -21.1304, 0.68", "49.082, -31.6551, -22.2771, 0.46", "50.2944, -32.0257, -23.1964, 0.46", "51.5418, -32.5269, -24.1924, 0.68", "53.3098, -33.4, -25.5937, 0.46", "54.3721, -34.0782, -26.3631, 0.46", "54.9951, -34.6407, -26.7548, 0.46", "56.0009, -35.9287, -27.295, 0.46", "56.6918, -37.1547, -27.6321, 0.46", "56.9596, -37.8839, -27.7777, 0.46", "57.3188, -39.5887, -28.0541, 0.46", "57.4807, -41.2001, -28.4099, 0.23", "57.538, -43.0103, -28.9406, 0.23", "57.5286, -43.8295, -29.2278, 0.68", "57.5197, -45.545, -29.9149, 0.23", "57.5809, -47.1194, -30.636, 0.68", "57.749, -48.9864, -31.5839, 0.23", "57.9395, -50.3099, -32.3085, 0.23", "58.1451, -51.2025, -32.806, 0.68", "58.4751, -52.2763, -33.4086, 0.23", "59.1499, -53.9255, -34.2667, 0.68", "60.0901, -55.861, -35.1617, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "7.29715, -27.1743, 18.1221, 1.37", "6.85848, -29.111, 17.6025, 1.37", "6.59383, -30.2794, 17.289, 1.37", "6.0345, -32.7488, 16.6265, 1.37", "5.6731, -34.3443, 16.1985, 1.37", "5.01633, -37.2439, 15.4206, 1.59", "4.49648, -39.5391, 14.8048, 1.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "7.29715, -27.1743, 18.1221, 1.14", "6.75151, -27.4541, 19.6947, 1.14", "5.61606, -27.9031, 22.687, 1.14", "4.61113, -28.289, 25.2922, 1.14", "3.74618, -28.5658, 27.3384, 1.14", "3.04483, -28.7953, 28.8862, 0.91", "1.95224, -29.1895, 31.1853, 0.91", "0.890885, -29.6098, 33.2511, 0.91", "0.0603556, -30.0186, 34.7735, 0.91", "-0.80664, -30.5948, 36.345, 0.91", "-1.33562, -31.051, 37.2325, 1.14", "-2.22985, -32.0803, 38.5533, 1.14", "-3.06307, -33.4885, 39.3238, 1.14", "-3.65431, -34.478, 39.4271, 1.14", "-4.45621, -35.6606, 39.4411, 0.91", "-6.42141, -38.0008, 39.6501, 0.91", "-8.29395, -39.5459, 40.2661, 0.91", "-9.59823, -40.3792, 41.0044, 1.14", "-10.9337, -41.1071, 42.1575, 0.91", "-12.5876, -41.8671, 44.2688, 0.91", "-13.9506, -42.3437, 46.7806, 0.91", "-14.7981, -42.4425, 48.8646, 0.91", "-15.3842, -42.3556, 50.6119, 0.91", "-15.7614, -42.2013, 51.8538, 0.91", "-16.3839, -41.8997, 53.7648, 0.91", "-16.7387, -41.7786, 54.4591, 1.14", "-18.2391, -41.2515, 56.9136, 1.14", "-19.395, -40.8589, 58.3641, 1.14", "-21.0457, -40.3412, 60.0853, 0.91", "-22.8801, -39.9015, 61.7421, 0.91", "-25.3726, -39.5959, 63.741, 1.14" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-17.7664, -19.661, 0.186366, 0.91", "-18.5936, -20.4999, -0.349721, 0.91", "-19.6605, -21.4467, -0.892987, 0.68", "-20.7788, -22.3219, -1.40179, 0.68", "-21.8432, -23.0567, -1.85111, 0.91", "-22.3858, -23.3911, -2.09757, 0.68", "-23.564, -24.0371, -2.65727, 0.68", "-24.4483, -24.3975, -3.02216, 0.68", "-25.0486, -24.5769, -3.30555, 0.91", "-25.511, -24.6725, -3.61414, 0.68", "-26.4066, -24.8472, -4.45834, 0.68", "-27.0828, -25.0374, -5.26531, 1.37", "-27.2731, -25.113, -5.54253, 0.91", "-27.9766, -25.521, -6.71701, 0.91", "-28.5778, -25.9771, -7.74992, 0.91", "-29.297, -26.5762, -8.93746, 0.91", "-30.2116, -27.3631, -10.3546, 0.68", "-30.8839, -27.9421, -11.3154, 0.68", "-31.4414, -28.4068, -12.0162, 0.46", "-32.0334, -28.8696, -12.612, 0.46", "-32.9651, -29.5283, -13.4022, 0.68", "-33.9957, -30.1986, -14.1438, 0.68", "-35.1556, -30.9011, -14.8738, 0.46", "-36.7588, -31.7856, -15.7846, 0.46", "-38.4713, -32.6132, -16.7041, 0.46", "-39.2755, -32.9798, -17.1204, 0.68", "-39.9539, -33.2878, -17.4537, 0.68", "-41.2547, -33.895, -18.0306, 0.23", "-42.1271, -34.3102, -18.4231, 0.46", "-43.1639, -34.8039, -18.8782, 0.23", "-44.126, -35.2366, -19.286, 0.23", "-44.3724, -35.3353, -19.3832, 0.46", "-45.9822, -35.8448, -19.9825, 0.23", "-46.7283, -36.0591, -20.2493, 0.23", "-47.9984, -36.4128, -20.6883, 0.91", "-49.3477, -36.7462, -21.1321, 0.91", "-50.7235, -36.9583, -21.5591, 0.91", "-51.7331, -37.0179, -21.8488, 1.14" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-17.7664, -19.661, 0.186366, 0.46", "-18.1825, -19.9664, 1.17025, 0.46", "-18.5568, -20.2177, 2.09512, 0.46", "-19.0311, -20.5346, 3.30438, 0.68", "-19.9932, -21.2054, 5.87778, 0.68", "-20.8952, -21.8704, 8.36612, 0.68", "-21.5755, -22.4085, 10.3197, 0.68", "-22.0872, -22.7509, 11.6951, 0.91", "-22.729, -23.098, 13.1233, 0.91", "-23.5426, -23.4751, 14.5351, 0.91", "-24.3324, -23.7961, 15.4207, 0.91", "-25.5357, -24.1426, 15.9765, 0.68", "-27.0239, -24.4953, 16.2661, 0.68", "-29.4582, -25.0297, 16.4741, 0.91", "-31.7746, -25.5361, 16.5179, 0.91", "-34.3844, -26.0975, 16.5229, 0.68", "-36.8016, -26.6122, 16.5817, 0.68", "-38.7588, -27.0625, 16.7755, 0.68", "-40.5912, -27.6117, 17.4039, 0.68", "-41.0998, -27.8129, 17.7497, 1.14", "-42.217, -28.3967, 18.7676, 1.14", "-43.4711, -29.2007, 20.0634, 1.14", "-44.5249, -30.0401, 21.1081, 0.91", "-45.5822, -30.9672, 21.9844, 0.91", "-47.5083, -32.6403, 23.3421, 0.91", "-48.9634, -33.8444, 24.2114, 0.91", "-50.0588, -34.6824, 24.781, 1.14", "-51.6249, -35.7182, 25.5679, 0.68", "-53.1914, -36.5212, 26.4412, 0.68", "-54.1187, -36.8953, 27.1611, 0.68", "-54.6095, -37.025, 27.7369, 0.91", "-55.8558, -37.0942, 29.4198, 0.91", "-57.1042, -37.0194, 31.2808, 0.91", "-57.9908, -36.9694, 32.7756, 0.91", "-59.069, -37.06, 34.8153, 0.91", "-59.5206, -37.2293, 35.7133, 0.91", "-60.0036, -37.6674, 36.7036, 0.91", "-60.3968, -38.7277, 37.7351, 0.91", "-60.6448, -40.4165, 38.7496, 0.91", "-60.8179, -41.5733, 39.2561, 0.91", "-61.334, -43.4133, 39.8594, 0.68", "-61.7932, -44.5456, 40.2338, 0.46", "-62.3419, -45.5782, 40.6476, 0.46", "-63.4707, -46.9539, 41.2579, 0.46", "-64.4972, -47.926, 41.7878, 0.46", "-65.619, -48.8197, 42.3979, 0.46", "-66.9648, -49.7218, 43.1389, 0.46", "-67.8323, -50.223, 43.5294, 0.46", "-69.2565, -50.9225, 44.1049, 0.68" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "4.49648, -39.5391, 14.8048, 1.37", "4.73615, -41.1297, 14.2464, 1.37", "5.21655, -44.3179, 13.1272, 1.14", "5.60755, -46.9129, 12.2162, 1.14", "5.85011, -48.5227, 11.6511, 1.14", "6.11959, -50.3111, 11.0233, 1.14", "6.49833, -52.8247, 10.1409, 1.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "4.49648, -39.5391, 14.8048, 0.68", "4.10573, -39.2277, 11.8989, 0.68", "3.56678, -38.9332, 9.82112, 0.68", "2.9042, -38.6303, 8.25393, 0.68", "1.54654, -38.1035, 5.65625, 0.68", "0.686832, -37.7554, 4.20961, 0.68", "-0.117167, -37.4106, 2.94171, 0.68", "-0.939615, -37.0101, 1.91874, 0.68", "-2.1457, -36.314, 0.454741, 0.23", "-3.5343, -35.4528, -1.38894, 0.23", "-4.15353, -35.1087, -2.3114, 0.23", "-4.33163, -35.0119, -2.61371, 0.68", "-5.47514, -34.3611, -4.58747, 0.91", "-7.06838, -33.3962, -7.22495, 0.91", "-8.37586, -32.6157, -9.27547, 0.68", "-9.92935, -31.7028, -11.455, 0.68", "-11.2654, -30.9336, -13.3088, 0.91", "-12.5601, -30.2015, -15.1732, 0.68", "-14.2652, -29.2442, -17.7979, 0.46", "-15.3865, -28.5908, -19.6212, 0.68", "-16.9329, -27.5718, -22.3823, 0.46", "-17.9689, -26.8376, -24.3947, 0.46", "-19.4541, -25.7776, -27.7359, 0.46", "-20.5193, -25.0368, -30.4951, 0.46", "-21.0487, -24.6491, -32.0475, 0.68", "-21.3821, -24.3801, -33.1855, 0.68", "-21.8552, -23.9203, -35.2709, 0.46", "-22.5873, -23.189, -38.4167, 0.46", "-23.0341, -22.6938, -40.3783, 0.46", "-23.5396, -22.071, -42.9031, 0.46", "-24.0541, -21.3069, -46.3674, 0.46", "-24.4337, -20.7199, -49.531, 0.46" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-25.3726, -39.5959, 63.741, 0.46", "-25.9406, -40.8961, 65.8551, 0.46", "-26.2724, -41.8885, 67.1261, 0.46", "-26.4436, -42.5535, 68.0415, 0.46", "-26.5465, -43.0062, 68.7634, 0.46", "-26.6576, -43.4129, 69.4439, 0.46", "-26.9549, -44.2441, 70.8643, 0.46", "-27.3391, -45.1491, 72.4676, 0.68", "-27.8899, -46.1001, 74.2974, 0.68", "-28.6265, -47.0081, 76.2793, 0.68", "-29.1976, -47.5464, 77.5954, 0.68", "-29.8258, -48.0367, 78.6995, 0.46", "-30.6135, -48.5821, 79.7426, 0.46", "-31.2426, -48.9899, 80.4407, 0.46", "-31.7878, -49.3642, 80.9659, 0.68", "-32.5335, -49.979, 81.7573, 0.68", "-33.9959, -51.4083, 83.7358, 0.46", "-34.8969, -52.4308, 85.2677, 0.46", "-35.5775, -53.3453, 86.8443, 0.46", "-35.6935, -53.5199, 87.2308, 0.46", "-36.2242, -54.4194, 89.8251, 0.46", "-36.4148, -54.8044, 91.3151, 0.46", "-36.465, -54.9094, 92.1346, 0.46", "-36.531, -55.0309, 93.8765, 0.46", "-36.6104, -55.0524, 95.0712, 0.46", "-36.71, -54.9947, 96.3468, 0.46" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.3726, -39.5959, 63.741, 0.46", "-27.0606, -39.4812, 63.2979, 0.46", "-27.8861, -39.3677, 63.169, 0.23", "-29.1365, -39.1656, 63.0414, 0.23", "-31.1878, -38.8503, 62.8918, 0.23", "-31.7513, -38.7985, 62.8616, 0.46", "-33.8676, -38.7054, 62.7712, 0.46", "-35.1367, -38.672, 62.7773, 0.46", "-36.1753, -38.6694, 62.7989, 0.46", "-37.4146, -38.7096, 62.8499, 0.46", "-39.0663, -38.9518, 62.8851, 0.46", "-40.0761, -39.2847, 62.8465, 0.23", "-41.0049, -39.8462, 62.7299, 0.23", "-41.6705, -40.3856, 62.5916, 0.23", "-42.5378, -41.2095, 62.3897, 0.46", "-43.4253, -42.0939, 62.1805, 0.46", "-44.5024, -43.1502, 62.037, 0.46", "-45.0954, -43.7527, 62.0282, 0.23", "-46.172, -44.8429, 62.1191, 0.23", "-46.8368, -45.4505, 62.2221, 0.23", "-48.1803, -46.4541, 62.4706, 0.23", "-49.6552, -47.3841, 62.7414, 0.23", "-50.6014, -47.9168, 62.8958, 0.46", "-52.0425, -48.6661, 63.0228, 0.46", "-53.6488, -49.4715, 63.0624, 0.46", "-55.064, -50.1264, 63.0047, 0.46", "-56.1479, -50.5707, 62.9381, 0.68", "-57.8087, -51.2005, 62.7953, 0.46", "-59.5531, -51.7972, 62.6778, 0.46", "-61.1292, -52.2582, 62.6112, 0.46", "-62.9841, -52.7556, 62.6176, 0.46", "-64.5318, -53.1531, 62.7215, 0.46", "-66.2404, -53.5355, 62.9349, 0.46", "-67.0311, -53.6851, 63.0768, 0.46", "-68.2167, -53.8605, 63.3547, 0.46", "-69.93, -54.0464, 63.7622, 0.46", "-71.0809, -54.1258, 64.0095, 0.46", "-71.635, -54.1404, 64.0992, 0.46", "-73.1505, -54.1087, 64.3161, 0.46", "-74.8617, -54.1207, 64.4824, 0.91", "-76.185, -54.1666, 64.5315, 0.68", "-77.5527, -54.2489, 64.4628, 0.68", "-78.6039, -54.3788, 64.33, 0.68", "-79.4376, -54.5293, 64.1575, 0.68", "-80.8273, -54.8435, 63.7223, 0.68", "-81.7938, -55.1015, 63.3143, 0.68", "-83.8208, -55.6025, 62.2495, 0.68", "-84.9107, -55.9135, 61.6385, 0.68", "-86.238, -56.2984, 60.846, 0.68", "-87.191, -56.5439, 60.2493, 0.68", "-88.0106, -56.6806, 59.726, 0.68", "-89.1313, -56.8178, 58.9191, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-69.2565, -50.9225, 44.1049, 0.46", "-70.1485, -51.0603, 41.8663, 0.46", "-71.3648, -51.2483, 38.8142, 0.23", "-72.7097, -51.4562, 35.439, 0.23", "-73.3145, -51.5497, 33.9214, 0.23" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-69.2565, -50.9225, 44.1049, 0.46", "-70.1728, -50.5512, 44.9596, 0.46", "-71.6941, -49.9348, 46.3785, 0.46", "-73.1895, -49.3289, 47.7733, 0.68", "-74.3413, -48.8622, 48.8475, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.49833, -52.8247, 10.1409, 0.91", "5.5693, -54.5897, 9.87653, 0.91", "4.77194, -56.3257, 9.68293, 0.91", "4.27742, -57.8114, 9.51327, 0.68", "4.00203, -59.5401, 9.34713, 0.68", "3.97475, -60.6005, 9.26522, 0.68", "4.01616, -61.4909, 9.23842, 0.68", "4.23333, -63.0949, 9.29929, 0.68", "4.55685, -65.0191, 9.51655, 0.68", "4.90555, -66.9765, 9.86409, 0.91", "5.10753, -68.2106, 10.1134, 0.68", "5.31463, -69.807, 10.4352, 0.68", "5.5415, -72.1547, 10.883, 0.68", "5.59993, -74.103, 11.1922, 0.68", "5.57751, -74.712, 11.2762, 0.68", "5.48921, -76.289, 11.3942, 0.46", "5.43827, -77.2545, 11.4303, 0.91", "5.38165, -78.6055, 11.4614, 1.37", "5.35164, -80.2538, 11.546, 0.91", "5.21337, -82.7024, 11.8222, 0.68", "5.07284, -84.2979, 12.068, 0.91", "4.91319, -86.1237, 12.3889, 0.68", "4.66331, -88.6116, 12.8159, 0.68", "4.49986, -90.2823, 13.0893, 0.68", "4.33259, -92.4119, 13.4444, 0.68", "4.23508, -93.9771, 13.6639, 1.14", "4.03331, -96.3492, 13.8767, 0.68", "3.87314, -97.9313, 13.8833, 0.68", "3.69939, -99.4705, 13.7616, 0.46", "3.513, -100.775, 13.5844, 0.46", "3.29866, -102.19, 13.349, 0.23", "2.99628, -103.948, 13.0021, 0.23", "2.81507, -104.974, 12.7789, 0.91", "2.50392, -107.085, 12.2764, 0.23", "2.28159, -108.896, 11.8127, 1.14", "2.11776, -110.763, 11.3347, 0.46", "2.04946, -112.739, 10.8388, 0.46", "2.15652, -114.883, 10.306, 0.46", "2.33286, -116.221, 10.0005, 0.91", "2.65729, -117.711, 9.69708, 0.46", "3.23895, -119.538, 9.41708, 0.46", "3.65488, -120.649, 9.28051, 0.46", "4.39418, -122.484, 9.12175, 0.46", "5.14627, -124.172, 9.01124, 0.46", "5.69767, -125.318, 8.90911, 0.91", "6.60659, -127.103, 8.60716, 0.68", "7.43356, -128.737, 8.17548, 0.68", "7.92946, -129.803, 7.75553, 0.68", "8.62543, -131.502, 6.70494, 0.68", "9.32652, -133.173, 5.25871, 0.68", "9.98409, -134.512, 3.82825, 0.68", "10.3726, -135.214, 2.90989, 1.14", "10.9193, -136.233, 1.36853, 0.91", "11.48, -137.461, -0.727098, 0.68", "11.7621, -138.171, -2.07066, 0.68", "12.1197, -139.063, -3.74423, 0.91", "12.5892, -140.296, -5.77597, 0.68", "13.0578, -141.649, -7.64154, 0.91", "13.4144, -142.966, -9.04432, 0.91", "13.7578, -144.791, -10.5739, 0.91", "13.9051, -146.487, -11.7513, 0.68", "13.9247, -148.433, -12.8339, 0.68", "13.842, -150.479, -13.7324, 0.68", "13.6196, -153.141, -14.711, 0.68", "13.374, -155.029, -15.3195, 0.68", "13.0258, -156.852, -15.8646, 0.91", "12.4427, -159.065, -16.5375, 0.68", "11.9784, -160.643, -17.1065, 0.68", "11.5978, -161.835, -17.6014, 0.68", "11.0835, -163.419, -18.3256, 0.23", "10.6909, -164.677, -18.9049, 0.68", "10.027, -167.041, -19.9555, 0.23", "9.58678, -168.806, -20.696, 0.23", "9.39784, -169.768, -21.0502, 0.46", "9.20286, -171.301, -21.58, 0.23", "9.15115, -172.352, -21.9413, 0.23", "9.24625, -173.253, -22.2859, 0.46", "9.57174, -174.63, -22.9416, 0.23", "9.92147, -175.683, -23.5523, 0.46", "10.7292, -177.507, -24.7986, 0.46", "11.5351, -178.83, -25.9737, 0.46", "12.7665, -180.438, -27.5449, 0.46", "14.0049, -181.939, -29.1281, 0.46", "15.2053, -183.286, -30.6811, 0.46", "16.1097, -184.234, -31.8634, 0.91", "18.3913, -186.452, -34.8048, 0.91", "20.7768, -188.555, -37.7195, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "6.49833, -52.8247, 10.1409, 0.68", "7.55963, -53.0457, 9.10325, 0.68", "9.38748, -53.5094, 7.9223, 0.68", "11.3216, -53.9585, 6.97316, 0.68", "13.1742, -54.2955, 6.24787, 0.68", "14.947, -54.5209, 5.66476, 0.46", "17.3095, -54.7469, 4.96359, 0.46", "20.0211, -54.9635, 4.41898, 0.46", "21.1934, -55.0366, 4.27886, 0.46", "22.5771, -55.0865, 4.17031, 0.68", "24.4704, -55.0869, 3.98004, 0.46", "27.09, -54.9591, 3.60777, 0.68", "29.6823, -54.739, 3.23377, 0.46", "30.9636, -54.5962, 3.03812, 0.46", "32.5398, -54.4325, 2.78358, 0.46", "34.7579, -54.1583, 2.46268, 0.46", "35.7912, -53.9847, 2.36151, 0.68", "38.4755, -53.3835, 2.21098, 0.23", "40.7201, -52.8547, 2.11953, 0.23", "42.3295, -52.5008, 2.08576, 0.23", "44.0682, -52.1198, 2.12754, 0.23", "45.8166, -51.7499, 2.23472, 0.23", "47.9364, -51.3352, 2.3997, 0.46", "50.1856, -50.8638, 2.60805, 0.46", "52.2343, -50.4082, 2.86639, 0.46", "54.8349, -49.8675, 3.25863, 0.46", "56.8518, -49.4701, 3.57453, 0.46", "58.57, -49.1134, 3.87193, 0.46", "60.3834, -48.7018, 4.24507, 0.23", "61.257, -48.4835, 4.44898, 0.46", "62.7933, -48.1055, 4.83846, 0.23", "64.01, -47.8402, 5.18209, 0.23", "65.0026, -47.631, 5.49807, 0.68", "65.9821, -47.4449, 5.83214, 0.23", "66.9215, -47.3094, 6.1691, 0.23", "68.8637, -47.0106, 7.0451, 0.23", "70.4858, -46.7044, 7.90575, 0.68", "71.1434, -46.5935, 8.266, 0.68", "71.667, -46.5343, 8.54698, 0.68", "74.1387, -46.3919, 9.81216, 0.23", "76.7358, -46.4727, 11.0557, 0.23", "77.5024, -46.5729, 11.3325, 0.46", "79.0344, -46.8816, 11.582, 0.46", "81.41, -47.5169, 11.3851, 0.23", "83.0835, -48.0142, 10.9228, 0.46", "84.6938, -48.4775, 10.0827, 0.46", "86.9302, -49.1102, 8.42951, 0.46", "89.0115, -49.6726, 6.49975, 0.23", "90.6211, -50.0668, 4.77031, 0.68", "91.1165, -50.1619, 4.21222, 0.68", "93.1712, -50.5079, 1.77699, 0.23", "95.4944, -50.8041, -0.998415, 0.46", "97.4417, -51.0369, -3.21976, 0.46", "98.9528, -51.2566, -4.94955, 0.46", "101.414, -51.6958, -7.8338, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_41", "dend_38", "dend_31", "dend_26", "dend_23", "dend_0", "dend_45", "dend_42", "dend_40", "dend_39", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_14", "dend_1", "dend_44", "dend_43", "dend_35", "dend_34", "dend_30", "dend_29", "dend_16", "dend_15", "dend_11", "dend_2", "dend_37", "dend_36", "dend_22", "dend_17", "dend_13", "dend_12", "dend_6", "dend_3", "dend_21", "dend_18", "dend_8", "dend_7", "dend_5", "dend_4", "dend_20", "dend_19", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_41", "dend_38", "dend_31", "dend_26", "dend_23", "dend_0", "dend_45", "dend_42", "dend_40", "dend_39", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_14", "dend_1", "dend_44", "dend_43", "dend_35", "dend_34", "dend_30", "dend_29", "dend_16", "dend_15", "dend_11", "dend_2", "dend_37", "dend_36", "dend_22", "dend_17", "dend_13", "dend_12", "dend_6", "dend_3", "dend_21", "dend_18", "dend_8", "dend_7", "dend_5", "dend_4", "dend_20", "dend_19", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_41", "dend_38", "dend_31", "dend_26", "dend_23", "dend_0", "axon_0", "dend_45", "dend_42", "dend_40", "dend_39", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_14", "dend_1", "axon_1", "dend_44", "dend_43", "dend_35", "dend_34", "dend_30", "dend_29", "dend_16", "dend_15", "dend_11", "dend_2", "dend_37", "dend_36", "dend_22", "dend_17", "dend_13", "dend_12", "dend_6", "dend_3", "dend_21", "dend_18", "dend_8", "dend_7", "dend_5", "dend_4", "dend_20", "dend_19", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L1_NGCDA_3037dfc60f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, axon_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, axon_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.49999981492465656)
    connect dend_41(0), soma_0(0.49999981492465656)
    connect dend_38(0), soma_0(0.49999981492465656)
    connect dend_31(0), soma_0(0.49999981492465656)
    connect dend_26(0), soma_0(0.49999981492465656)
    connect dend_23(0), soma_0(0.49999981492465656)
    connect dend_0(0), soma_0(0.49999981492465656)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.65332, -8.14477, 0.0, 3.38868 ) }
    soma_0 { pt3dadd( 2.3235, -7.30837, 0.0, 5.83516 ) }
    soma_0 { pt3dadd( 1.99367, -6.47197, 0.0, 8.36487 ) }
    soma_0 { pt3dadd( 1.66385, -5.63557, 0.0, 10.3053 ) }
    soma_0 { pt3dadd( 1.33402, -4.79917, 0.0, 11.2702 ) }
    soma_0 { pt3dadd( 1.0042, -3.96277, 0.0, 12.1037 ) }
    soma_0 { pt3dadd( 0.674371, -3.12636, 0.0, 12.478 ) }
    soma_0 { pt3dadd( 0.344546, -2.28996, 0.0, 12.8036 ) }
    soma_0 { pt3dadd( 0.0147201, -1.45356, 0.0, 13.3328 ) }
    soma_0 { pt3dadd( -0.315105, -0.617159, 0.0, 13.8945 ) }
    soma_0 { pt3dadd( -0.644931, 0.219243, 0.0, 14.1853 ) }
    soma_0 { pt3dadd( -0.974756, 1.05564, 0.0, 14.2726 ) }
    soma_0 { pt3dadd( -1.30458, 1.89205, 0.0, 14.0804 ) }
    soma_0 { pt3dadd( -1.63441, 2.72845, 0.0, 13.7203 ) }
    soma_0 { pt3dadd( -1.96423, 3.56485, 0.0, 13.3603 ) }
    soma_0 { pt3dadd( -2.29406, 4.40125, 0.0, 12.7772 ) }
    soma_0 { pt3dadd( -2.62388, 5.23765, 0.0, 12.1069 ) }
    soma_0 { pt3dadd( -2.95371, 6.07405, 0.0, 11.425 ) }
    soma_0 { pt3dadd( -3.28353, 6.91045, 0.0, 9.72987 ) }
    soma_0 { pt3dadd( -3.61336, 7.74686, 0.0, 7.67118 ) }
    soma_0 { pt3dadd( -3.94319, 8.58326, 0.0, 4.32164 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 2.92163, -8.4076, 0.209999, 1.37 ) }
    dend_46 { pt3dadd( 3.42488, -9.24962, 0.0269364, 1.37 ) }
    dend_46 { pt3dadd( 4.04047, -10.0759, -0.271055, 1.37 ) }
    dend_46 { pt3dadd( 4.90251, -11.2289, -0.719326, 1.37 ) }
    dend_46 { pt3dadd( 5.40604, -11.8715, -0.888724, 1.37 ) }
    dend_46 { pt3dadd( 6.23193, -12.8962, -1.05122, 1.37 ) }
    dend_46 { pt3dadd( 7.12815, -13.9688, -1.15279, 0.91 ) }
    dend_46 { pt3dadd( 8.68599, -15.7357, -1.29446, 0.91 ) }
    dend_46 { pt3dadd( 9.74545, -16.8178, -1.44191, 0.91 ) }
    dend_46 { pt3dadd( 11.5476, -18.3548, -1.82961, 0.91 ) }
    dend_46 { pt3dadd( 12.8532, -19.3009, -2.18965, 0.68 ) }
    dend_46 { pt3dadd( 14.501, -20.2942, -2.80267, 0.91 ) }
    dend_46 { pt3dadd( 16.3762, -21.1329, -3.73319, 0.68 ) }
    dend_46 { pt3dadd( 18.4322, -21.7152, -5.00422, 0.68 ) }
    dend_46 { pt3dadd( 20.4508, -21.8519, -6.69706, 0.68 ) }
    dend_46 { pt3dadd( 21.3944, -21.67, -7.73469, 0.68 ) }
    dend_46 { pt3dadd( 22.5346, -20.9468, -9.46204, 0.68 ) }
    dend_46 { pt3dadd( 23.1809, -20.0702, -10.8738, 0.68 ) }
    dend_46 { pt3dadd( 23.5801, -19.1606, -12.1696, 0.68 ) }
    dend_46 { pt3dadd( 23.8387, -18.1883, -13.7181, 0.91 ) }
    dend_46 { pt3dadd( 23.935, -17.6694, -14.8828, 1.37 ) }
    dend_46 { pt3dadd( 24.1276, -17.0916, -17.1908, 0.68 ) }
    dend_46 { pt3dadd( 24.3206, -16.923, -18.8604, 0.68 ) }
    dend_46 { pt3dadd( 24.5901, -16.8705, -20.7486, 0.68 ) }
    dend_46 { pt3dadd( 25.1278, -16.9487, -23.413, 0.68 ) }
    dend_46 { pt3dadd( 25.77, -17.1466, -25.8984, 0.68 ) }
    dend_46 { pt3dadd( 26.4815, -17.3544, -27.9552, 0.68 ) }
    dend_46 { pt3dadd( 27.048, -17.4794, -29.102, 0.68 ) }
    dend_46 { pt3dadd( 27.5445, -17.5253, -29.964, 0.68 ) }
    dend_46 { pt3dadd( 28.4635, -17.4689, -31.3682, 0.91 ) }
    dend_46 { pt3dadd( 28.8863, -17.4258, -31.9886, 0.91 ) }
    dend_46 { pt3dadd( 30.2514, -17.2697, -34.1763, 0.46 ) }
    dend_46 { pt3dadd( 31.2758, -17.1591, -36.0859, 0.91 ) }
    dend_46 { pt3dadd( 32.1974, -17.1367, -38.2554, 0.91 ) }
    dend_46 { pt3dadd( 33.2444, -17.1604, -41.1419, 0.91 ) }
    dend_46 { pt3dadd( 33.7223, -17.1866, -42.7284, 0.91 ) }
    dend_46 { pt3dadd( 34.1019, -17.2153, -44.3014, 0.91 ) }
    dend_46 { pt3dadd( 34.3043, -17.2547, -45.5868, 0.91 ) }
    dend_46 { pt3dadd( 34.5744, -17.3145, -48.0865, 0.91 ) }
    dend_46 { pt3dadd( 35.002, -17.4668, -51.4405, 0.46 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.55163, -2.9546, 7.25, 1.37 ) }
    dend_41 { pt3dadd( 6.57971, -2.94769, 7.26611, 1.37 ) }
    dend_41 { pt3dadd( 8.51774, -2.42656, 8.16151, 1.37 ) }
    dend_41 { pt3dadd( 9.93778, -1.99834, 8.62419, 1.14 ) }
    dend_41 { pt3dadd( 11.9907, -1.37219, 9.0751, 1.37 ) }
    dend_41 { pt3dadd( 14.2635, -0.672278, 9.3491, 1.14 ) }
    dend_41 { pt3dadd( 16.0798, -0.113097, 9.35645, 0.91 ) }
    dend_41 { pt3dadd( 17.231, 0.225362, 9.12381, 0.91 ) }
    dend_41 { pt3dadd( 18.8908, 0.631591, 8.33526, 0.91 ) }
    dend_41 { pt3dadd( 20.1435, 0.810836, 7.47058, 1.14 ) }
    dend_41 { pt3dadd( 21.1315, 0.828466, 6.63825, 1.37 ) }
    dend_41 { pt3dadd( 22.6562, 0.693919, 5.3269, 1.82 ) }
    dend_41 { pt3dadd( 24.1815, 0.47527, 4.01331, 1.37 ) }
    dend_41 { pt3dadd( 25.5466, 0.179799, 2.84946, 1.14 ) }
    dend_41 { pt3dadd( 27.2917, -0.321997, 1.38866, 1.14 ) }
    dend_41 { pt3dadd( 28.5989, -0.765278, 0.271546, 1.14 ) }
    dend_41 { pt3dadd( 30.3273, -1.44857, -1.05769, 1.14 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.741626, 9.1199, -6.69, 3.19 ) }
    dend_38 { pt3dadd( 0.946928, 9.71082, -8.44011, 2.73 ) }
    dend_38 { pt3dadd( 1.30003, 10.7271, -11.4501, 2.73 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 81/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.36163, 3.4209, 7.23, 1.37 ) }
    dend_31 { pt3dadd( 4.74142, 4.13555, 7.51455, 1.37 ) }
    dend_31 { pt3dadd( 5.38563, 5.34777, 7.99721, 1.59 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 84/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -7.36837, 5.29665, -1.97, 1.59 ) }
    dend_26 { pt3dadd( -7.36837, 5.29665, -1.97, 1.59 ) }
    dend_26 { pt3dadd( -8.10317, 6.34138, -2.65734, 1.37 ) }
    dend_26 { pt3dadd( -8.80196, 7.65175, -3.85475, 1.37 ) }
    dend_26 { pt3dadd( -9.34983, 8.92248, -5.25869, 1.59 ) }
    dend_26 { pt3dadd( -9.657, 9.62232, -6.06819, 1.37 ) }
    dend_26 { pt3dadd( -10.2062, 10.8735, -7.51549, 1.14 ) }
    dend_26 { pt3dadd( -10.5712, 11.8145, -8.68723, 1.14 ) }
    dend_26 { pt3dadd( -11.066, 13.5298, -11.1191, 1.14 ) }
    dend_26 { pt3dadd( -11.2378, 14.3804, -12.5559, 1.14 ) }
    dend_26 { pt3dadd( -11.288, 15.0577, -13.8103, 1.14 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 95/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.09837, -7.33135, 5.48, 1.14 ) }
    dend_23 { pt3dadd( -3.65095, -7.54347, 5.39545, 1.14 ) }
    dend_23 { pt3dadd( -4.99699, -7.96017, 5.18853, 0.91 ) }
    dend_23 { pt3dadd( -6.10001, -8.24359, 5.06414, 0.91 ) }
    dend_23 { pt3dadd( -7.36073, -8.48384, 4.95219, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( -8.63988, -8.65384, 4.88697, 0.91 ) }
    dend_23 { pt3dadd( -10.7999, -8.81797, 4.83049, 1.14 ) }
    dend_23 { pt3dadd( -12.862, -8.77894, 4.87582, 1.14 ) }
    dend_23 { pt3dadd( -14.0452, -8.61157, 4.99316, 1.14 ) }
    dend_23 { pt3dadd( -15.2878, -8.3098, 5.21369, 0.91 ) }
    dend_23 { pt3dadd( -16.318, -7.99943, 5.45748, 0.91 ) }
    dend_23 { pt3dadd( -17.1817, -7.72503, 5.72638, 1.14 ) }
    dend_23 { pt3dadd( -18.375, -7.39591, 6.28596, 0.91 ) }
    dend_23 { pt3dadd( -19.3286, -7.33656, 6.88229, 0.91 ) }
    dend_23 { pt3dadd( -19.9874, -7.39461, 7.31281, 1.14 ) }
    dend_23 { pt3dadd( -21.0494, -7.71391, 8.05218, 1.14 ) }
    dend_23 { pt3dadd( -21.7795, -8.08296, 8.55246, 0.91 ) }
    dend_23 { pt3dadd( -23.0268, -8.96944, 9.45095, 0.91 ) }
    dend_23 { pt3dadd( -24.2472, -10.0932, 10.3206, 1.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 14/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.371626, -6.81885, 10.68, 3.19 ) }
    dend_0 { pt3dadd( 0.378896, -7.47567, 11.3517, 3.19 ) }
    dend_0 { pt3dadd( 0.392438, -8.69919, 12.603, 2.73 ) }
    dend_0 { pt3dadd( 0.405919, -9.91716, 13.8486, 2.73 ) }
    dend_0 { pt3dadd( 0.421651, -11.3386, 15.3023, 2.51 ) }
    dend_0 { pt3dadd( 0.437509, -12.7713, 16.7675, 2.28 ) }
    dend_0 { pt3dadd( 0.451673, -14.0509, 18.0762, 2.73 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 21/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -3.94319, 8.58326, 0.0, 0.567226 ) }
    axon_0 { pt3dadd( -9.44588, 22.5375, 0.0, 0.567226 ) }
    axon_0 { pt3dadd( -14.9486, 36.4917, 0.0, 0.567226 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 24/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 30.3273, -1.44857, -1.05769, 0.91 ) }
    dend_45 { pt3dadd( 31.1547, -1.41235, 0.0848549, 0.91 ) }
    dend_45 { pt3dadd( 32.202, -1.26086, 1.61491, 0.91 ) }
    dend_45 { pt3dadd( 33.1076, -1.09191, 3.08319, 0.68 ) }
    dend_45 { pt3dadd( 34.0171, -0.974088, 4.7218, 0.91 ) }
    dend_45 { pt3dadd( 34.7912, -1.0139, 6.25763, 0.91 ) }
    dend_45 { pt3dadd( 36.0015, -1.39213, 8.81642, 0.68 ) }
    dend_45 { pt3dadd( 36.8887, -1.89869, 10.7575, 0.68 ) }
    dend_45 { pt3dadd( 37.5873, -2.4894, 12.4364, 0.91 ) }
    dend_45 { pt3dadd( 38.1961, -3.12876, 13.9952, 0.68 ) }
    dend_45 { pt3dadd( 39.1998, -4.3256, 16.6518, 0.68 ) }
    dend_45 { pt3dadd( 40.1312, -5.46879, 19.0869, 0.91 ) }
    dend_45 { pt3dadd( 40.8641, -6.28039, 20.7966, 0.68 ) }
    dend_45 { pt3dadd( 42.0955, -7.44577, 23.4206, 1.14 ) }
    dend_45 { pt3dadd( 43.1932, -8.32372, 25.7, 0.91 ) }
    dend_45 { pt3dadd( 44.3572, -9.13646, 28.1131, 0.91 ) }
    dend_45 { pt3dadd( 45.2432, -9.6827, 30.0067, 0.68 ) }
    dend_45 { pt3dadd( 46.1744, -10.2143, 31.9229, 0.68 ) }
    dend_45 { pt3dadd( 46.8839, -10.6657, 33.3904, 0.68 ) }
    dend_45 { pt3dadd( 47.921, -11.4418, 35.5332, 0.91 ) }
    dend_45 { pt3dadd( 48.7226, -12.1656, 37.173, 0.68 ) }
    dend_45 { pt3dadd( 50.0114, -13.5354, 39.7425, 0.68 ) }
    dend_45 { pt3dadd( 51.5025, -15.2187, 42.5102, 0.68 ) }
    dend_45 { pt3dadd( 52.4694, -16.3583, 44.1666, 0.68 ) }
    dend_45 { pt3dadd( 53.4375, -17.4768, 45.6114, 0.68 ) }
    dend_45 { pt3dadd( 54.8237, -19.1505, 47.5386, 0.68 ) }
    dend_45 { pt3dadd( 56.2807, -21.0218, 49.5809, 0.68 ) }
    dend_45 { pt3dadd( 56.9599, -21.9608, 50.5049, 0.68 ) }
    dend_45 { pt3dadd( 58.1105, -23.5195, 52.0345, 0.68 ) }
    dend_45 { pt3dadd( 59.6617, -25.3326, 53.8333, 0.68 ) }
    dend_45 { pt3dadd( 61.3212, -26.9999, 55.5671, 0.68 ) }
    dend_45 { pt3dadd( 62.8813, -28.4008, 57.1035, 0.68 ) }
    dend_45 { pt3dadd( 63.9833, -29.3245, 58.1088, 0.91 ) }
    dend_45 { pt3dadd( 65.8921, -30.9125, 59.7607, 0.68 ) }
    dend_45 { pt3dadd( 67.4013, -32.1275, 60.9508, 0.68 ) }
    dend_45 { pt3dadd( 69.3476, -33.7336, 62.3685, 0.91 ) }
    dend_45 { pt3dadd( 70.5596, -34.7627, 63.256, 0.68 ) }
    dend_45 { pt3dadd( 71.9496, -36.0737, 64.4228, 0.68 ) }
    dend_45 { pt3dadd( 73.0617, -37.2809, 65.5429, 0.68 ) }
    dend_45 { pt3dadd( 74.1516, -38.6897, 66.8624, 0.91 ) }
    dend_45 { pt3dadd( 75.3031, -40.3116, 68.5221, 0.68 ) }
    dend_45 { pt3dadd( 76.623, -42.0736, 70.639, 0.46 ) }
    dend_45 { pt3dadd( 77.8164, -43.5199, 72.8075, 0.46 ) }
    dend_45 { pt3dadd( 78.4373, -44.24, 74.1721, 0.91 ) }
    dend_45 { pt3dadd( 79.2663, -45.1569, 76.1419, 0.68 ) }
    dend_45 { pt3dadd( 80.0642, -46.0325, 78.1454, 0.46 ) }
    dend_45 { pt3dadd( 80.9677, -47.1136, 80.4277, 0.46 ) }
    dend_45 { pt3dadd( 81.9301, -48.4401, 82.79, 0.46 ) }
    dend_45 { pt3dadd( 83.0785, -50.2977, 85.4587, 0.46 ) }
    dend_45 { pt3dadd( 83.9814, -51.7907, 87.5781, 0.46 ) }
    dend_45 { pt3dadd( 84.4879, -52.6968, 88.7712, 0.46 ) }
    dend_45 { pt3dadd( 85.2929, -54.5703, 90.7089, 0.46 ) }
    dend_45 { pt3dadd( 85.6219, -55.5713, 91.4036, 1.14 ) }
    dend_45 { pt3dadd( 86.2186, -57.5258, 92.2076, 1.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 78/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 30.3273, -1.44857, -1.05769, 0.91 ) }
    dend_42 { pt3dadd( 31.3614, -1.02616, -1.78625, 0.91 ) }
    dend_42 { pt3dadd( 32.5019, -0.907224, -2.35785, 0.91 ) }
    dend_42 { pt3dadd( 33.625, -0.946814, -2.77924, 0.91 ) }
    dend_42 { pt3dadd( 34.5775, -1.0652, -3.03407, 0.91 ) }
    dend_42 { pt3dadd( 36.6918, -1.42602, -3.4153, 0.91 ) }
    dend_42 { pt3dadd( 38.8629, -1.82549, -3.70498, 0.91 ) }
    dend_42 { pt3dadd( 40.7615, -2.29326, -3.89649, 0.91 ) }
    dend_42 { pt3dadd( 42.1346, -2.70024, -3.97845, 0.91 ) }
    dend_42 { pt3dadd( 44.1345, -3.38908, -4.00789, 0.68 ) }
    dend_42 { pt3dadd( 45.738, -3.98676, -3.94057, 0.68 ) }
    dend_42 { pt3dadd( 46.8589, -4.38767, -3.77927, 0.68 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 90/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 1.30003, 10.7271, -11.4501, 1.59 ) }
    dend_40 { pt3dadd( 2.60667, 10.7037, -12.5036, 1.59 ) }
    dend_40 { pt3dadd( 4.01354, 10.708, -13.7846, 1.37 ) }
    dend_40 { pt3dadd( 5.55086, 10.7495, -15.397, 1.37 ) }
    dend_40 { pt3dadd( 6.82242, 10.8341, -16.8218, 1.37 ) }
    dend_40 { pt3dadd( 8.18197, 10.9247, -18.3452, 1.37 ) }
    dend_40 { pt3dadd( 9.24886, 10.9958, -19.5407, 1.14 ) }
    dend_40 { pt3dadd( 10.8354, 11.1279, -21.457, 1.14 ) }
    dend_40 { pt3dadd( 12.3879, 11.3379, -23.5791, 1.14 ) }
    dend_40 { pt3dadd( 12.773, 11.4302, -24.1746, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 0/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 1.30003, 10.7271, -11.4501, 1.82 ) }
    dend_39 { pt3dadd( 1.26662, 11.9068, -12.8338, 1.82 ) }
    dend_39 { pt3dadd( 1.38986, 13.9066, -15.2521, 1.82 ) }
    dend_39 { pt3dadd( 1.55731, 15.5014, -17.0866, 1.82 ) }
    dend_39 { pt3dadd( 1.64466, 16.4674, -18.115, 1.82 ) }
    dend_39 { pt3dadd( 1.75175, 17.6438, -19.2909, 1.37 ) }
    dend_39 { pt3dadd( 1.87439, 19.0565, -20.6975, 1.37 ) }
    dend_39 { pt3dadd( 2.02187, 20.5145, -22.1813, 1.37 ) }
    dend_39 { pt3dadd( 2.15352, 21.7605, -23.4143, 1.37 ) }
    dend_39 { pt3dadd( 2.28067, 23.255, -24.9301, 1.14 ) }
    dend_39 { pt3dadd( 2.36479, 24.6144, -26.4125, 1.14 ) }
    dend_39 { pt3dadd( 2.4478, 26.1058, -28.1953, 1.14 ) }
    dend_39 { pt3dadd( 2.58789, 27.8466, -30.5047, 1.14 ) }
    dend_39 { pt3dadd( 2.70919, 29.1187, -32.4409, 1.14 ) }
    dend_39 { pt3dadd( 2.78633, 29.9288, -33.8636, 1.14 ) }
    dend_39 { pt3dadd( 2.85027, 30.7895, -35.7797, 1.14 ) }
    dend_39 { pt3dadd( 2.8849, 31.3839, -37.458, 1.37 ) }
    dend_39 { pt3dadd( 3.00054, 31.9363, -39.6528, 1.37 ) }
    dend_39 { pt3dadd( 3.23191, 32.2787, -41.7945, 1.37 ) }
    dend_39 { pt3dadd( 3.4107, 32.3961, -42.9819, 0.91 ) }
    dend_39 { pt3dadd( 3.86727, 32.5817, -45.7011, 0.91 ) }
    dend_39 { pt3dadd( 4.2554, 32.6567, -47.7139, 0.91 ) }
    dend_39 { pt3dadd( 4.93245, 32.7384, -50.8245, 0.91 ) }
    dend_39 { pt3dadd( 5.75645, 32.8331, -53.7985, 0.91 ) }
    dend_39 { pt3dadd( 6.44054, 32.8846, -55.649, 0.91 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 25/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 5.38563, 5.34777, 7.99721, 0.91 ) }
    dend_33 { pt3dadd( 7.08358, 5.75649, 8.73711, 0.91 ) }
    dend_33 { pt3dadd( 9.25858, 6.28003, 9.68491, 1.14 ) }
    dend_33 { pt3dadd( 11.5645, 6.8351, 10.6898, 1.14 ) }
    dend_33 { pt3dadd( 12.5254, 7.06641, 11.1085, 1.14 ) }
    dend_33 { pt3dadd( 13.7937, 7.3717, 11.6612, 1.37 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 31/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.38563, 5.34777, 7.99721, 1.14 ) }
    dend_32 { pt3dadd( 5.63637, 7.5531, 7.57306, 1.14 ) }
    dend_32 { pt3dadd( 5.82421, 9.11054, 7.29265, 1.14 ) }
    dend_32 { pt3dadd( 5.96458, 10.2948, 7.05151, 1.14 ) }
    dend_32 { pt3dadd( 6.16176, 11.883, 6.72074, 1.14 ) }
    dend_32 { pt3dadd( 6.40417, 13.8357, 6.31405, 1.14 ) }
    dend_32 { pt3dadd( 6.70309, 16.2434, 5.8126, 0.91 ) }
    dend_32 { pt3dadd( 6.91573, 17.6998, 5.48071, 0.91 ) }
    dend_32 { pt3dadd( 7.1446, 19.2123, 5.10777, 0.91 ) }
    dend_32 { pt3dadd( 7.417, 21.2676, 4.58866, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 41/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -11.288, 15.0577, -13.8103, 1.14 ) }
    dend_28 { pt3dadd( -11.4118, 15.1568, -13.8352, 1.14 ) }
    dend_28 { pt3dadd( -11.9727, 15.6061, -13.9481, 1.14 ) }
    dend_28 { pt3dadd( -12.5034, 16.0311, -14.0548, 0.91 ) }
    dend_28 { pt3dadd( -13.0742, 16.4883, -14.1697, 0.91 ) }
    dend_28 { pt3dadd( -13.7777, 17.0517, -14.3112, 0.91 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 47/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -11.288, 15.0577, -13.8103, 1.14 ) }
    dend_27 { pt3dadd( -11.9966, 15.5055, -14.897, 1.14 ) }
    dend_27 { pt3dadd( -13.159, 16.1306, -16.593, 0.91 ) }
    dend_27 { pt3dadd( -13.9204, 16.5387, -17.8307, 0.91 ) }
    dend_27 { pt3dadd( -14.5361, 16.8796, -18.9448, 1.14 ) }
    dend_27 { pt3dadd( -15.1384, 17.2192, -20.2118, 0.91 ) }
    dend_27 { pt3dadd( -15.7929, 17.6092, -21.8369, 1.14 ) }
    dend_27 { pt3dadd( -16.4588, 18.0783, -23.9587, 1.14 ) }
    dend_27 { pt3dadd( -17.0522, 18.4823, -25.9595, 1.14 ) }
    dend_27 { pt3dadd( -17.5114, 18.7831, -27.831, 1.14 ) }
    dend_27 { pt3dadd( -17.8131, 19.0111, -29.6063, 0.68 ) }
    dend_27 { pt3dadd( -17.9475, 19.1127, -30.887, 0.68 ) }
    dend_27 { pt3dadd( -17.9202, 19.1718, -32.2901, 0.68 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 60/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -24.2472, -10.0932, 10.3206, 0.91 ) }
    dend_25 { pt3dadd( -26.0803, -10.4782, 10.9975, 0.91 ) }
    dend_25 { pt3dadd( -28.1061, -10.6616, 11.375, 0.91 ) }
    dend_25 { pt3dadd( -30.1521, -10.5889, 11.3672, 0.91 ) }
    dend_25 { pt3dadd( -31.1995, -10.4526, 11.1623, 0.68 ) }
    dend_25 { pt3dadd( -33.7382, -10.0568, 10.2177, 0.46 ) }
    dend_25 { pt3dadd( -35.1434, -9.86877, 9.49523, 0.46 ) }
    dend_25 { pt3dadd( -36.6376, -9.68392, 8.31755, 0.46 ) }
    dend_25 { pt3dadd( -37.8995, -9.58386, 7.08824, 0.68 ) }
    dend_25 { pt3dadd( -39.2293, -9.51576, 5.65739, 0.68 ) }
    dend_25 { pt3dadd( -40.898, -9.42752, 3.89242, 0.68 ) }
    dend_25 { pt3dadd( -42.1648, -9.40487, 2.63109, 0.68 ) }
    dend_25 { pt3dadd( -43.6077, -9.44921, 1.30507, 0.68 ) }
    dend_25 { pt3dadd( -44.4729, -9.51736, 0.654374, 0.46 ) }
    dend_25 { pt3dadd( -45.7166, -9.69368, -0.0904852, 0.46 ) }
    dend_25 { pt3dadd( -48.0561, -10.1099, -1.23784, 0.46 ) }
    dend_25 { pt3dadd( -49.7085, -10.3434, -2.00286, 0.46 ) }
    dend_25 { pt3dadd( -51.1111, -10.4751, -2.68424, 0.46 ) }
    dend_25 { pt3dadd( -53.0174, -10.5853, -3.74152, 0.46 ) }
    dend_25 { pt3dadd( -54.4418, -10.6662, -4.66802, 0.23 ) }
    dend_25 { pt3dadd( -56.1219, -10.845, -5.93844, 0.46 ) }
    dend_25 { pt3dadd( -57.8248, -11.1539, -7.42813, 0.46 ) }
    dend_25 { pt3dadd( -58.9333, -11.3564, -8.46918, 0.68 ) }
    dend_25 { pt3dadd( -59.5776, -11.4082, -9.09549, 0.68 ) }
    dend_25 { pt3dadd( -59.8858, -11.3945, -9.40078, 0.46 ) }
    dend_25 { pt3dadd( -60.994, -11.2646, -10.3451, 0.46 ) }
    dend_25 { pt3dadd( -62.1127, -11.1321, -11.0978, 0.46 ) }
    dend_25 { pt3dadd( -62.8382, -11.0809, -11.536, 0.46 ) }
    dend_25 { pt3dadd( -64.3276, -10.9595, -12.47, 0.46 ) }
    dend_25 { pt3dadd( -66.0486, -10.7353, -13.6292, 0.46 ) }
    dend_25 { pt3dadd( -67.4763, -10.4962, -14.6748, 0.68 ) }
    dend_25 { pt3dadd( -68.8666, -10.2581, -15.7555, 0.68 ) }
    dend_25 { pt3dadd( -69.9231, -10.0871, -16.6057, 0.68 ) }
    dend_25 { pt3dadd( -70.8282, -9.98337, -17.3802, 0.68 ) }
    dend_25 { pt3dadd( -72.0886, -9.96243, -18.4744, 0.46 ) }
    dend_25 { pt3dadd( -73.1474, -10.0296, -19.3878, 0.46 ) }
    dend_25 { pt3dadd( -74.2666, -10.1825, -20.267, 0.46 ) }
    dend_25 { pt3dadd( -74.7277, -10.2736, -20.5177, 0.46 ) }
    dend_25 { pt3dadd( -75.5946, -10.4814, -20.8004, 0.46 ) }
    dend_25 { pt3dadd( -76.9467, -10.9072, -21.1638, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_25 { pt3dadd( -77.7716, -11.2087, -21.3722, 0.68 ) }
    dend_25 { pt3dadd( -78.9765, -11.549, -21.6956, 0.46 ) }
    dend_25 { pt3dadd( -79.9875, -11.8223, -22.0273, 0.46 ) }
    dend_25 { pt3dadd( -81.0941, -12.173, -22.4827, 0.68 ) }
    dend_25 { pt3dadd( -82.441, -12.6168, -23.0795, 0.46 ) }
    dend_25 { pt3dadd( -82.8462, -12.738, -23.2702, 0.91 ) }
    dend_25 { pt3dadd( -84.5563, -13.1196, -24.0775, 0.23 ) }
    dend_25 { pt3dadd( -85.9304, -13.2902, -24.7613, 0.23 ) }
    dend_25 { pt3dadd( -86.8294, -13.3376, -25.2291, 0.46 ) }
    dend_25 { pt3dadd( -88.2497, -13.2668, -25.9493, 1.14 ) }
    dend_25 { pt3dadd( -89.4678, -13.1302, -26.5748, 0.23 ) }
    dend_25 { pt3dadd( -90.41, -13.0164, -27.1216, 0.23 ) }
    dend_25 { pt3dadd( -91.8181, -12.8883, -28.0533, 0.23 ) }
    dend_25 { pt3dadd( -93.1515, -12.8208, -28.9805, 0.23 ) }
    dend_25 { pt3dadd( -94.2861, -12.9116, -29.8825, 0.68 ) }
    dend_25 { pt3dadd( -95.2813, -13.1707, -30.8069, 0.23 ) }
    dend_25 { pt3dadd( -96.4807, -13.6227, -31.9912, 0.23 ) }
    dend_25 { pt3dadd( -97.5709, -14.1639, -33.0604, 0.23 ) }
    dend_25 { pt3dadd( -98.3686, -14.6677, -33.8414, 0.68 ) }
    dend_25 { pt3dadd( -99.4001, -15.5161, -34.927, 0.46 ) }
    dend_25 { pt3dadd( -99.736, -15.8589, -35.2926, 0.68 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -24.2472, -10.0932, 10.3206, 1.14 ) }
    dend_24 { pt3dadd( -23.5298, -11.0372, 12.1582, 1.14 ) }
    dend_24 { pt3dadd( -22.9388, -11.9232, 13.8811, 0.91 ) }
    dend_24 { pt3dadd( -22.4902, -12.7608, 15.5346, 0.91 ) }
    dend_24 { pt3dadd( -22.143, -13.6016, 17.2919, 0.91 ) }
    dend_24 { pt3dadd( -21.9585, -14.2609, 18.7989, 0.91 ) }
    dend_24 { pt3dadd( -21.8631, -15.2353, 21.177, 0.91 ) }
    dend_24 { pt3dadd( -22.2224, -15.7543, 22.7177, 0.91 ) }
    dend_24 { pt3dadd( -23.2049, -15.8963, 23.685, 0.91 ) }
    dend_24 { pt3dadd( -24.8019, -15.8749, 24.631, 0.91 ) }
    dend_24 { pt3dadd( -26.7776, -15.8098, 25.639, 0.68 ) }
    dend_24 { pt3dadd( -28.6735, -15.8175, 26.489, 0.68 ) }
    dend_24 { pt3dadd( -29.9033, -15.9193, 27.0387, 0.68 ) }
    dend_24 { pt3dadd( -31.1244, -16.208, 27.771, 0.68 ) }
    dend_24 { pt3dadd( -32.7243, -17.0962, 29.3393, 0.68 ) }
    dend_24 { pt3dadd( -33.5804, -17.8828, 30.6233, 0.91 ) }
    dend_24 { pt3dadd( -34.0906, -18.5002, 31.6079, 0.91 ) }
    dend_24 { pt3dadd( -34.8888, -19.5345, 33.2306, 0.68 ) }
    dend_24 { pt3dadd( -35.7488, -20.6935, 34.9105, 0.68 ) }
    dend_24 { pt3dadd( -36.6153, -21.9101, 36.5232, 0.68 ) }
    dend_24 { pt3dadd( -37.748, -23.5587, 38.4431, 0.91 ) }
    dend_24 { pt3dadd( -38.6424, -24.8564, 39.8374, 0.91 ) }
    dend_24 { pt3dadd( -40.0592, -26.5959, 41.7289, 0.91 ) }
    dend_24 { pt3dadd( -40.8799, -27.574, 42.7167, 0.91 ) }
    dend_24 { pt3dadd( -41.4649, -28.257, 43.3118, 0.91 ) }
    dend_24 { pt3dadd( -42.4917, -29.3941, 44.1944, 0.91 ) }
    dend_24 { pt3dadd( -44.0644, -31.2553, 45.4009, 0.91 ) }
    dend_24 { pt3dadd( -45.9525, -33.569, 46.9056, 0.46 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 49/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.451673, -14.0509, 18.0762, 2.73 ) }
    dend_14 { pt3dadd( 0.380231, -14.8228, 17.8361, 2.73 ) }
    dend_14 { pt3dadd( 0.301526, -15.6731, 17.5715, 2.51 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 52/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.451673, -14.0509, 18.0762, 2.05 ) }
    dend_1 { pt3dadd( 3.98321, -16.3463, 17.6167, 2.05 ) }
    dend_1 { pt3dadd( 6.44988, -17.9495, 17.2958, 1.82 ) }
    dend_1 { pt3dadd( 8.20483, -19.0901, 17.0674, 1.82 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -14.9486, 36.4917, 0.0, 0.567226 ) }
    axon_1 { pt3dadd( -20.4513, 50.4459, 0.0, 0.567226 ) }
    axon_1 { pt3dadd( -25.954, 64.4002, 0.0, 0.567226 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 59/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 46.8589, -4.38767, -3.77927, 0.46 ) }
    dend_44 { pt3dadd( 47.2262, -3.83419, -2.82567, 0.46 ) }
    dend_44 { pt3dadd( 48.0262, -2.94103, -1.0392, 0.46 ) }
    dend_44 { pt3dadd( 48.6142, -2.44764, 0.0277961, 0.46 ) }
    dend_44 { pt3dadd( 49.3601, -1.94936, 1.09236, 0.46 ) }
    dend_44 { pt3dadd( 50.0417, -1.58669, 1.86788, 0.23 ) }
    dend_44 { pt3dadd( 50.6369, -1.26496, 2.45854, 0.23 ) }
    dend_44 { pt3dadd( 51.4477, -0.904679, 3.14208, 0.23 ) }
    dend_44 { pt3dadd( 52.2191, -0.53337, 3.72146, 0.46 ) }
    dend_44 { pt3dadd( 53.1214, -0.0789223, 4.35031, 0.46 ) }
    dend_44 { pt3dadd( 54.2076, 0.472887, 5.06946, 0.46 ) }
    dend_44 { pt3dadd( 55.3606, 1.15507, 5.83475, 0.46 ) }
    dend_44 { pt3dadd( 56.7151, 2.12222, 6.81085, 0.46 ) }
    dend_44 { pt3dadd( 57.9218, 3.11841, 7.78445, 0.46 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 46.8589, -4.38767, -3.77927, 0.46 ) }
    dend_43 { pt3dadd( 47.2606, -6.25132, -4.57527, 0.46 ) }
    dend_43 { pt3dadd( 47.6395, -7.7734, -5.41926, 0.46 ) }
    dend_43 { pt3dadd( 48.1814, -9.67429, -6.70431, 0.46 ) }
    dend_43 { pt3dadd( 48.5487, -10.7127, -7.55153, 0.46 ) }
    dend_43 { pt3dadd( 49.3007, -12.3304, -9.06579, 0.46 ) }
    dend_43 { pt3dadd( 49.9097, -13.2848, -10.0395, 0.46 ) }
    dend_43 { pt3dadd( 51.0629, -14.3232, -11.346, 0.46 ) }
    dend_43 { pt3dadd( 51.9582, -14.7478, -11.8676, 0.46 ) }
    dend_43 { pt3dadd( 53.096, -15.1639, -12.258, 0.68 ) }
    dend_43 { pt3dadd( 54.1913, -15.633, -12.5947, 0.68 ) }
    dend_43 { pt3dadd( 55.7126, -16.4476, -13.0596, 0.46 ) }
    dend_43 { pt3dadd( 58.0995, -18.0803, -13.9266, 0.46 ) }
    dend_43 { pt3dadd( 60.3615, -20.0442, -14.9718, 0.46 ) }
    dend_43 { pt3dadd( 61.8557, -21.6839, -15.9228, 0.46 ) }
    dend_43 { pt3dadd( 63.6018, -23.9833, -17.451, 0.46 ) }
    dend_43 { pt3dadd( 65.0097, -26.1022, -19.1343, 0.46 ) }
    dend_43 { pt3dadd( 65.8428, -27.3878, -20.5265, 0.46 ) }
    dend_43 { pt3dadd( 66.3895, -28.1947, -21.8666, 0.46 ) }
    dend_43 { pt3dadd( 67.0849, -28.8012, -23.9696, 0.46 ) }
    dend_43 { pt3dadd( 67.4574, -28.6393, -25.0324, 0.46 ) }
    dend_43 { pt3dadd( 67.9813, -28.1157, -26.3507, 0.46 ) }
    dend_43 { pt3dadd( 69.1691, -26.7591, -29.0244, 0.68 ) }
    dend_43 { pt3dadd( 70.0537, -25.7909, -30.8535, 0.68 ) }
    dend_43 { pt3dadd( 71.1843, -24.7776, -33.1581, 0.68 ) }
    dend_43 { pt3dadd( 71.9846, -24.1476, -34.9671, 0.46 ) }
    dend_43 { pt3dadd( 73.1044, -23.4974, -37.6658, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_43 { pt3dadd( 73.5109, -23.3161, -38.7471, 0.46 ) }
    dend_43 { pt3dadd( 74.0741, -23.1154, -40.3203, 0.46 ) }
    dend_43 { pt3dadd( 75.308, -22.7497, -44.0857, 0.46 ) }
    dend_43 { pt3dadd( 76.0096, -22.5433, -46.2913, 0.68 ) }
    dend_43 { pt3dadd( 76.6443, -22.3648, -48.2096, 0.46 ) }
    dend_43 { pt3dadd( 77.4787, -22.2086, -50.6472, 0.68 ) }
    dend_43 { pt3dadd( 78.0589, -22.1443, -52.1324, 0.46 ) }
    dend_43 { pt3dadd( 79.2849, -22.0094, -54.5391, 0.46 ) }
    dend_43 { pt3dadd( 80.4061, -21.8947, -56.3834, 0.46 ) }
    dend_43 { pt3dadd( 82.2844, -21.9142, -58.9197, 0.46 ) }
    dend_43 { pt3dadd( 83.7146, -22.0986, -60.4731, 0.46 ) }
    dend_43 { pt3dadd( 85.2471, -22.502, -61.6981, 0.23 ) }
    dend_43 { pt3dadd( 87.0532, -23.1018, -62.8492, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 13/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 13.7937, 7.3717, 11.6612, 0.91 ) }
    dend_35 { pt3dadd( 14.7399, 7.01319, 12.9519, 0.91 ) }
    dend_35 { pt3dadd( 15.3187, 6.70016, 13.8833, 0.91 ) }
    dend_35 { pt3dadd( 16.3061, 6.02158, 15.752, 0.91 ) }
    dend_35 { pt3dadd( 16.9945, 5.41226, 17.337, 1.14 ) }
    dend_35 { pt3dadd( 17.7076, 4.60033, 19.2915, 0.91 ) }
    dend_35 { pt3dadd( 18.1949, 3.81544, 20.9343, 0.91 ) }
    dend_35 { pt3dadd( 18.6385, 2.83931, 22.9813, 1.14 ) }
    dend_35 { pt3dadd( 18.8243, 2.19628, 24.2597, 0.91 ) }
    dend_35 { pt3dadd( 18.9239, 1.28266, 25.8853, 0.91 ) }
    dend_35 { pt3dadd( 18.87, 0.667692, 26.8429, 0.91 ) }
    dend_35 { pt3dadd( 18.506, -0.654546, 28.5587, 1.14 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 13.7937, 7.3717, 11.6612, 1.37 ) }
    dend_34 { pt3dadd( 14.1248, 8.33013, 10.8782, 1.37 ) }
    dend_34 { pt3dadd( 14.4729, 9.57166, 9.71759, 0.91 ) }
    dend_34 { pt3dadd( 14.773, 10.6782, 8.53441, 0.91 ) }
    dend_34 { pt3dadd( 15.2286, 12.0991, 6.91681, 0.91 ) }
    dend_34 { pt3dadd( 15.8472, 13.6691, 5.0368, 0.91 ) }
    dend_34 { pt3dadd( 16.4302, 14.7908, 3.67208, 0.91 ) }
    dend_34 { pt3dadd( 17.0352, 15.7034, 2.49112, 0.91 ) }
    dend_34 { pt3dadd( 17.9105, 16.7516, 0.994221, 0.91 ) }
    dend_34 { pt3dadd( 18.7302, 17.5423, -0.22782, 0.91 ) }
    dend_34 { pt3dadd( 19.7897, 18.4192, -1.50338, 0.91 ) }
    dend_34 { pt3dadd( 21.3634, 19.5244, -2.98398, 0.91 ) }
    dend_34 { pt3dadd( 22.3292, 20.2007, -3.73924, 0.91 ) }
    dend_34 { pt3dadd( 22.4953, 20.3177, -3.86471, 0.91 ) }
    dend_34 { pt3dadd( 24.0564, 21.5263, -5.28097, 0.68 ) }
    dend_34 { pt3dadd( 25.1395, 22.41, -6.60681, 0.68 ) }
    dend_34 { pt3dadd( 25.8846, 23.0031, -7.80558, 0.46 ) }
    dend_34 { pt3dadd( 26.3623, 23.4046, -8.7935, 0.68 ) }
    dend_34 { pt3dadd( 27.0636, 24.0227, -10.4727, 0.68 ) }
    dend_34 { pt3dadd( 27.8577, 24.7207, -12.5122, 0.68 ) }
    dend_34 { pt3dadd( 28.4489, 25.2076, -14.0918, 0.68 ) }
    dend_34 { pt3dadd( 29.0126, 25.6746, -15.7896, 0.68 ) }
    dend_34 { pt3dadd( 29.5057, 26.1719, -17.4842, 0.23 ) }
    dend_34 { pt3dadd( 30.0599, 26.771, -19.4614, 0.23 ) }
    dend_34 { pt3dadd( 30.2905, 27.0774, -20.2412, 0.23 ) }
    dend_34 { pt3dadd( 30.5256, 27.4497, -20.9292, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -13.7777, 17.0517, -14.3112, 0.91 ) }
    dend_30 { pt3dadd( -15.4356, 17.6357, -15.9121, 0.91 ) }
    dend_30 { pt3dadd( -17.3607, 18.1794, -17.9601, 0.91 ) }
    dend_30 { pt3dadd( -19.4401, 18.6273, -20.1954, 0.91 ) }
    dend_30 { pt3dadd( -20.9097, 18.9438, -21.7751, 0.91 ) }
    dend_30 { pt3dadd( -23.3575, 19.4711, -24.4065, 0.91 ) }
    dend_30 { pt3dadd( -25.1526, 19.8578, -26.3362, 0.91 ) }
    dend_30 { pt3dadd( -26.9814, 20.1991, -28.4362, 0.91 ) }
    dend_30 { pt3dadd( -28.7601, 20.3698, -30.6231, 0.68 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -13.7777, 17.0517, -14.3112, 0.68 ) }
    dend_29 { pt3dadd( -13.7096, 18.0278, -14.6011, 0.68 ) }
    dend_29 { pt3dadd( -13.6765, 19.0199, -14.8435, 0.68 ) }
    dend_29 { pt3dadd( -13.726, 19.9923, -15.0123, 0.91 ) }
    dend_29 { pt3dadd( -13.8437, 21.0301, -15.2581, 0.91 ) }
    dend_29 { pt3dadd( -13.9053, 21.5737, -15.3868, 0.68 ) }
    dend_29 { pt3dadd( -13.9699, 22.1435, -15.5217, 0.68 ) }
    dend_29 { pt3dadd( -14.1262, 23.1329, -15.7573, 0.68 ) }
    dend_29 { pt3dadd( -14.444, 24.6441, -16.0835, 0.68 ) }
    dend_29 { pt3dadd( -14.8322, 26.0173, -16.3931, 0.91 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 70/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 0.301526, -15.6731, 17.5715, 1.14 ) }
    dend_16 { pt3dadd( -0.810647, -16.2892, 16.6868, 1.14 ) }
    dend_16 { pt3dadd( -2.77647, -17.2021, 15.0284, 1.14 ) }
    dend_16 { pt3dadd( -4.8031, -17.9596, 13.21, 1.14 ) }
    dend_16 { pt3dadd( -6.48725, -18.4651, 11.6228, 1.14 ) }
    dend_16 { pt3dadd( -8.21145, -18.8894, 9.92022, 0.91 ) }
    dend_16 { pt3dadd( -9.6368, -19.191, 8.48635, 1.14 ) }
    dend_16 { pt3dadd( -11.083, -19.3998, 6.93693, 0.91 ) }
    dend_16 { pt3dadd( -12.7782, -19.4702, 4.9976, 0.91 ) }
    dend_16 { pt3dadd( -14.0252, -19.3625, 3.54196, 1.14 ) }
    dend_16 { pt3dadd( -14.7861, -19.2287, 2.63419, 1.37 ) }
    dend_16 { pt3dadd( -15.0836, -19.1634, 2.25092, 1.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.301526, -15.6731, 17.5715, 1.14 ) }
    dend_15 { pt3dadd( 1.26521, -17.0066, 17.5996, 1.14 ) }
    dend_15 { pt3dadd( 1.7656, -17.699, 17.6142, 1.14 ) }
    dend_15 { pt3dadd( 2.49237, -18.7046, 17.6354, 1.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.20483, -19.0901, 17.0674, 1.37 ) }
    dend_11 { pt3dadd( 9.4573, -19.3141, 16.5432, 1.37 ) }
    dend_11 { pt3dadd( 10.7266, -19.567, 15.869, 1.37 ) }
    dend_11 { pt3dadd( 11.4975, -19.7692, 15.4103, 1.37 ) }
    dend_11 { pt3dadd( 12.7461, -20.1371, 14.6545, 1.37 ) }
    dend_11 { pt3dadd( 14.2252, -20.5892, 13.7555, 1.37 ) }
    dend_11 { pt3dadd( 15.303, -20.9212, 13.0616, 1.37 ) }
    dend_11 { pt3dadd( 16.5897, -21.3448, 12.2142, 1.37 ) }
    dend_11 { pt3dadd( 17.9106, -21.8399, 11.3456, 1.37 ) }
    dend_11 { pt3dadd( 18.6438, -22.1575, 10.863, 1.37 ) }
    dend_11 { pt3dadd( 20.1661, -23.0429, 9.8348, 1.14 ) }
    dend_11 { pt3dadd( 21.6081, -24.1786, 8.89426, 1.14 ) }
    dend_11 { pt3dadd( 22.8071, -25.1928, 8.15944, 1.14 ) }
    dend_11 { pt3dadd( 23.5848, -25.9215, 7.70392, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_11 { pt3dadd( 24.1849, -26.5719, 7.34254, 1.14 ) }
    dend_11 { pt3dadd( 25.2173, -28.0449, 6.66578, 1.14 ) }
    dend_11 { pt3dadd( 25.8641, -29.6245, 6.20284, 1.14 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 3/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.20483, -19.0901, 17.0674, 1.82 ) }
    dend_2 { pt3dadd( 8.02908, -20.6554, 17.2716, 1.82 ) }
    dend_2 { pt3dadd( 7.88034, -21.9802, 17.4445, 1.82 ) }
    dend_2 { pt3dadd( 7.71025, -23.495, 17.6421, 1.59 ) }
    dend_2 { pt3dadd( 7.58221, -24.6354, 17.7908, 1.59 ) }
    dend_2 { pt3dadd( 7.47095, -25.6263, 17.9201, 1.59 ) }
    dend_2 { pt3dadd( 7.29715, -27.1743, 18.1221, 1.82 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 10/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 18.506, -0.654546, 28.5587, 0.68 ) }
    dend_37 { pt3dadd( 15.9946, 0.0976601, 29.5817, 0.68 ) }
    dend_37 { pt3dadd( 12.2922, 0.950846, 30.8714, 1.14 ) }
    dend_37 { pt3dadd( 9.82826, 1.37842, 31.7246, 0.91 ) }
    dend_37 { pt3dadd( 7.04767, 1.71852, 32.7529, 0.68 ) }
    dend_37 { pt3dadd( 5.38345, 1.82725, 33.4294, 0.68 ) }
    dend_37 { pt3dadd( 3.26625, 1.87722, 34.3936, 0.91 ) }
    dend_37 { pt3dadd( 0.091887, 1.75762, 35.9624, 0.68 ) }
    dend_37 { pt3dadd( -2.29897, 1.4936, 37.3011, 0.68 ) }
    dend_37 { pt3dadd( -3.83621, 1.19328, 38.3883, 0.91 ) }
    dend_37 { pt3dadd( -5.59067, 0.691658, 39.8408, 0.91 ) }
    dend_37 { pt3dadd( -7.4541, 0.0771231, 41.4981, 0.91 ) }
    dend_37 { pt3dadd( -9.06527, -0.525459, 42.994, 0.91 ) }
    dend_37 { pt3dadd( -10.1844, -0.987814, 43.9975, 0.91 ) }
    dend_37 { pt3dadd( -11.7513, -1.62302, 45.2645, 0.91 ) }
    dend_37 { pt3dadd( -12.7124, -1.95385, 45.9557, 0.91 ) }
    dend_37 { pt3dadd( -14.9521, -2.7045, 47.4932, 0.68 ) }
    dend_37 { pt3dadd( -17.1627, -3.51596, 48.9886, 0.68 ) }
    dend_37 { pt3dadd( -19.6654, -4.449, 50.61, 0.68 ) }
    dend_37 { pt3dadd( -21.4656, -5.12596, 51.7689, 0.68 ) }
    dend_37 { pt3dadd( -23.7411, -5.88895, 53.1921, 0.68 ) }
    dend_37 { pt3dadd( -25.7172, -6.46652, 54.5643, 0.68 ) }
    dend_37 { pt3dadd( -27.7012, -7.0156, 56.2692, 0.91 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 33/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 18.506, -0.654546, 28.5587, 0.68 ) }
    dend_36 { pt3dadd( 18.9601, -0.525963, 29.363, 0.68 ) }
    dend_36 { pt3dadd( 20.0153, -0.326541, 31.3282, 0.68 ) }
    dend_36 { pt3dadd( 20.4356, -0.276735, 32.2233, 0.68 ) }
    dend_36 { pt3dadd( 21.4477, -0.268411, 34.6213, 0.68 ) }
    dend_36 { pt3dadd( 22.1663, -0.356488, 36.3493, 0.68 ) }
    dend_36 { pt3dadd( 22.9134, -0.516431, 38.1089, 0.68 ) }
    dend_36 { pt3dadd( 23.5838, -0.703455, 39.6523, 0.68 ) }
    dend_36 { pt3dadd( 24.2443, -0.964458, 40.9778, 0.68 ) }
    dend_36 { pt3dadd( 24.8121, -1.31001, 42.0993, 0.68 ) }
    dend_36 { pt3dadd( 25.3041, -1.75792, 43.0342, 0.68 ) }
    dend_36 { pt3dadd( 25.8003, -2.30131, 43.9802, 0.68 ) }
    dend_36 { pt3dadd( 26.3262, -2.96508, 45.1362, 0.68 ) }
    dend_36 { pt3dadd( 26.8718, -3.73116, 46.5672, 0.46 ) }
    dend_36 { pt3dadd( 27.3024, -4.33546, 47.7028, 0.46 ) }
    dend_36 { pt3dadd( 27.866, -5.17819, 49.363, 0.68 ) }
    dend_36 { pt3dadd( 28.5364, -6.36235, 51.8429, 0.68 ) }
    dend_36 { pt3dadd( 28.95, -7.35275, 53.9734, 0.68 ) }
    dend_36 { pt3dadd( 29.1192, -8.04044, 55.5605, 0.46 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -15.0836, -19.1634, 2.25092, 0.68 ) }
    dend_22 { pt3dadd( -14.4082, -18.3919, 0.742811, 0.68 ) }
    dend_22 { pt3dadd( -13.7183, -17.5853, -0.597286, 0.68 ) }
    dend_22 { pt3dadd( -13.4344, -17.2427, -1.11641, 0.46 ) }
    dend_22 { pt3dadd( -12.7321, -16.3591, -2.43463, 0.68 ) }
    dend_22 { pt3dadd( -12.0931, -15.53, -3.73843, 0.68 ) }
    dend_22 { pt3dadd( -11.5687, -14.8428, -4.91538, 0.68 ) }
    dend_22 { pt3dadd( -11.0598, -14.1536, -6.12336, 0.68 ) }
    dend_22 { pt3dadd( -10.7474, -13.7655, -6.9275, 0.68 ) }
    dend_22 { pt3dadd( -10.3751, -13.4048, -8.00938, 0.91 ) }
    dend_22 { pt3dadd( -9.94634, -13.143, -9.49862, 0.91 ) }
    dend_22 { pt3dadd( -9.68977, -13.1385, -10.5909, 0.91 ) }
    dend_22 { pt3dadd( -9.62671, -13.2053, -10.9485, 0.68 ) }
    dend_22 { pt3dadd( -9.4625, -13.8331, -12.5886, 0.68 ) }
    dend_22 { pt3dadd( -9.47163, -14.7932, -14.2362, 0.68 ) }
    dend_22 { pt3dadd( -9.54489, -15.1721, -14.6928, 0.68 ) }
    dend_22 { pt3dadd( -9.68732, -15.7499, -15.2579, 0.46 ) }
    dend_22 { pt3dadd( -10.0262, -16.8134, -16.155, 0.23 ) }
    dend_22 { pt3dadd( -10.3108, -17.4819, -16.6501, 0.23 ) }
    dend_22 { pt3dadd( -11.054, -18.63, -17.2781, 0.23 ) }
    dend_22 { pt3dadd( -11.6499, -19.3387, -17.6125, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -15.0836, -19.1634, 2.25092, 1.14 ) }
    dend_17 { pt3dadd( -15.5088, -19.2422, 1.92377, 1.14 ) }
    dend_17 { pt3dadd( -16.4444, -19.4158, 1.20372, 1.14 ) }
    dend_17 { pt3dadd( -17.0179, -19.5222, 0.762336, 1.14 ) }
    dend_17 { pt3dadd( -17.7664, -19.661, 0.186366, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 78/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 25.8641, -29.6245, 6.20284, 1.37 ) }
    dend_13 { pt3dadd( 25.9761, -29.8483, 6.16247, 1.37 ) }
    dend_13 { pt3dadd( 26.9857, -31.4373, 5.86106, 1.37 ) }
    dend_13 { pt3dadd( 27.7614, -32.446, 5.64481, 0.91 ) }
    dend_13 { pt3dadd( 28.8439, -33.6608, 5.35806, 1.14 ) }
    dend_13 { pt3dadd( 29.7297, -34.5643, 5.16886, 0.68 ) }
    dend_13 { pt3dadd( 31.3174, -36.0405, 4.94398, 0.68 ) }
    dend_13 { pt3dadd( 32.7636, -37.2155, 4.83144, 0.68 ) }
    dend_13 { pt3dadd( 33.9212, -38.0173, 4.80971, 0.68 ) }
    dend_13 { pt3dadd( 35.5059, -38.9964, 4.79443, 0.68 ) }
    dend_13 { pt3dadd( 36.8381, -39.7344, 4.78483, 0.68 ) }
    dend_13 { pt3dadd( 38.826, -40.7316, 4.77967, 0.91 ) }
    dend_13 { pt3dadd( 39.8707, -41.2059, 4.79395, 0.68 ) }
    dend_13 { pt3dadd( 41.0404, -41.6927, 4.78828, 0.68 ) }
    dend_13 { pt3dadd( 41.9297, -42.0614, 4.79575, 0.68 ) }
    dend_13 { pt3dadd( 43.1941, -42.5995, 4.80351, 0.68 ) }
    dend_13 { pt3dadd( 44.4851, -43.1694, 4.77407, 0.23 ) }
    dend_13 { pt3dadd( 45.7505, -43.7736, 4.719, 0.68 ) }
    dend_13 { pt3dadd( 47.3916, -44.6713, 4.67511, 0.46 ) }
    dend_13 { pt3dadd( 48.7196, -45.4937, 4.64673, 0.46 ) }
    dend_13 { pt3dadd( 49.9351, -46.2975, 4.63109, 0.46 ) }
    dend_13 { pt3dadd( 50.519, -46.672, 4.61686, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_13 { pt3dadd( 52.1086, -47.638, 4.52905, 0.68 ) }
    dend_13 { pt3dadd( 53.2093, -48.2565, 4.41479, 0.46 ) }
    dend_13 { pt3dadd( 54.0602, -48.6873, 4.25853, 0.46 ) }
    dend_13 { pt3dadd( 54.7172, -48.9626, 4.07799, 0.46 ) }
    dend_13 { pt3dadd( 56.9058, -49.6821, 3.37212, 0.68 ) }
    dend_13 { pt3dadd( 57.7725, -49.9625, 3.07234, 0.68 ) }
    dend_13 { pt3dadd( 58.1829, -50.1179, 2.92222, 0.68 ) }
    dend_13 { pt3dadd( 59.4305, -50.6651, 2.4568, 0.23 ) }
    dend_13 { pt3dadd( 60.0414, -51.0418, 2.24613, 0.46 ) }
    dend_13 { pt3dadd( 61.1423, -52.0257, 1.92757, 0.23 ) }
    dend_13 { pt3dadd( 62.3739, -53.645, 1.69224, 0.91 ) }
    dend_13 { pt3dadd( 63.5657, -55.7556, 1.6002, 0.91 ) }
    dend_13 { pt3dadd( 63.7824, -56.2689, 1.59119, 0.91 ) }
    dend_13 { pt3dadd( 64.5025, -58.5207, 1.57633, 0.68 ) }
    dend_13 { pt3dadd( 64.9276, -60.3069, 1.52204, 0.68 ) }
    dend_13 { pt3dadd( 65.2983, -62.6451, 1.35241, 0.91 ) }
    dend_13 { pt3dadd( 65.5268, -64.8303, 1.02779, 0.68 ) }
    dend_13 { pt3dadd( 65.7202, -66.6949, 0.615582, 1.14 ) }
    dend_13 { pt3dadd( 65.9056, -67.9055, 0.216917, 0.91 ) }
    dend_13 { pt3dadd( 66.2493, -69.2524, -0.4035, 0.91 ) }
    dend_13 { pt3dadd( 66.9938, -71.1404, -1.52799, 0.91 ) }
    dend_13 { pt3dadd( 67.9389, -72.9164, -2.78863, 0.46 ) }
    dend_13 { pt3dadd( 68.6638, -74.078, -3.64598, 0.46 ) }
    dend_13 { pt3dadd( 69.891, -75.9652, -4.92544, 0.46 ) }
    dend_13 { pt3dadd( 70.8811, -77.5215, -5.91816, 0.68 ) }
    dend_13 { pt3dadd( 71.8921, -79.0869, -6.85596, 0.46 ) }
    dend_13 { pt3dadd( 73.3225, -81.1769, -8.05506, 0.68 ) }
    dend_13 { pt3dadd( 73.9239, -82.0693, -8.49714, 0.46 ) }
    dend_13 { pt3dadd( 74.7643, -83.4826, -9.12678, 0.23 ) }
    dend_13 { pt3dadd( 75.3313, -84.5948, -9.513, 0.23 ) }
    dend_13 { pt3dadd( 75.6658, -85.4307, -9.74656, 0.46 ) }
    dend_13 { pt3dadd( 76.1556, -86.7535, -9.98742, 0.68 ) }
    dend_13 { pt3dadd( 77.0478, -88.5312, -10.2311, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 33/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 25.8641, -29.6245, 6.20284, 0.68 ) }
    dend_12 { pt3dadd( 25.3587, -29.1562, 2.75802, 0.68 ) }
    dend_12 { pt3dadd( 25.2865, -28.7485, 0.621308, 0.68 ) }
    dend_12 { pt3dadd( 25.4551, -28.3085, -1.1678, 0.68 ) }
    dend_12 { pt3dadd( 25.7503, -27.9236, -2.55461, 0.68 ) }
    dend_12 { pt3dadd( 26.1104, -27.584, -3.74048, 0.46 ) }
    dend_12 { pt3dadd( 26.6271, -27.2405, -5.08571, 0.46 ) }
    dend_12 { pt3dadd( 27.3875, -26.8805, -6.23021, 0.46 ) }
    dend_12 { pt3dadd( 28.2603, -26.6186, -7.21142, 0.68 ) }
    dend_12 { pt3dadd( 29.1085, -26.5059, -8.02204, 0.68 ) }
    dend_12 { pt3dadd( 29.5637, -26.5267, -8.41885, 0.68 ) }
    dend_12 { pt3dadd( 31.0554, -26.7904, -9.79997, 0.46 ) }
    dend_12 { pt3dadd( 31.7548, -26.9513, -10.5226, 0.46 ) }
    dend_12 { pt3dadd( 32.7043, -27.1818, -11.5426, 0.46 ) }
    dend_12 { pt3dadd( 33.6477, -27.4505, -12.5043, 0.46 ) }
    dend_12 { pt3dadd( 34.8768, -27.8374, -13.6775, 0.46 ) }
    dend_12 { pt3dadd( 36.3861, -28.3159, -15.0028, 0.46 ) }
    dend_12 { pt3dadd( 37.9391, -28.7981, -16.1504, 0.23 ) }
    dend_12 { pt3dadd( 38.783, -29.0626, -16.69, 0.46 ) }
    dend_12 { pt3dadd( 39.7167, -29.3839, -17.2241, 0.23 ) }
    dend_12 { pt3dadd( 40.7684, -29.7331, -17.7288, 0.68 ) }
    dend_12 { pt3dadd( 41.6713, -29.9829, -18.1497, 0.23 ) }
    dend_12 { pt3dadd( 43.1207, -30.3572, -18.787, 0.46 ) }
    dend_12 { pt3dadd( 44.3703, -30.6375, -19.3436, 0.46 ) }
    dend_12 { pt3dadd( 45.7259, -30.914, -20.0652, 0.23 ) }
    dend_12 { pt3dadd( 47.4418, -31.264, -21.1304, 0.68 ) }
    dend_12 { pt3dadd( 49.082, -31.6551, -22.2771, 0.46 ) }
    dend_12 { pt3dadd( 50.2944, -32.0257, -23.1964, 0.46 ) }
    dend_12 { pt3dadd( 51.5418, -32.5269, -24.1924, 0.68 ) }
    dend_12 { pt3dadd( 53.3098, -33.4, -25.5937, 0.46 ) }
    dend_12 { pt3dadd( 54.3721, -34.0782, -26.3631, 0.46 ) }
    dend_12 { pt3dadd( 54.9951, -34.6407, -26.7548, 0.46 ) }
    dend_12 { pt3dadd( 56.0009, -35.9287, -27.295, 0.46 ) }
    dend_12 { pt3dadd( 56.6918, -37.1547, -27.6321, 0.46 ) }
    dend_12 { pt3dadd( 56.9596, -37.8839, -27.7777, 0.46 ) }
    dend_12 { pt3dadd( 57.3188, -39.5887, -28.0541, 0.46 ) }
    dend_12 { pt3dadd( 57.4807, -41.2001, -28.4099, 0.23 ) }
    dend_12 { pt3dadd( 57.538, -43.0103, -28.9406, 0.23 ) }
    dend_12 { pt3dadd( 57.5286, -43.8295, -29.2278, 0.68 ) }
    dend_12 { pt3dadd( 57.5197, -45.545, -29.9149, 0.23 ) }
    dend_12 { pt3dadd( 57.5809, -47.1194, -30.636, 0.68 ) }
    dend_12 { pt3dadd( 57.749, -48.9864, -31.5839, 0.23 ) }
    dend_12 { pt3dadd( 57.9395, -50.3099, -32.3085, 0.23 ) }
    dend_12 { pt3dadd( 58.1451, -51.2025, -32.806, 0.68 ) }
    dend_12 { pt3dadd( 58.4751, -52.2763, -33.4086, 0.23 ) }
    dend_12 { pt3dadd( 59.1499, -53.9255, -34.2667, 0.68 ) }
    dend_12 { pt3dadd( 60.0901, -55.861, -35.1617, 0.23 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 80/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 7.29715, -27.1743, 18.1221, 1.37 ) }
    dend_6 { pt3dadd( 6.85848, -29.111, 17.6025, 1.37 ) }
    dend_6 { pt3dadd( 6.59383, -30.2794, 17.289, 1.37 ) }
    dend_6 { pt3dadd( 6.0345, -32.7488, 16.6265, 1.37 ) }
    dend_6 { pt3dadd( 5.6731, -34.3443, 16.1985, 1.37 ) }
    dend_6 { pt3dadd( 5.01633, -37.2439, 15.4206, 1.59 ) }
    dend_6 { pt3dadd( 4.49648, -39.5391, 14.8048, 1.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 7.29715, -27.1743, 18.1221, 1.14 ) }
    dend_3 { pt3dadd( 6.75151, -27.4541, 19.6947, 1.14 ) }
    dend_3 { pt3dadd( 5.61606, -27.9031, 22.687, 1.14 ) }
    dend_3 { pt3dadd( 4.61113, -28.289, 25.2922, 1.14 ) }
    dend_3 { pt3dadd( 3.74618, -28.5658, 27.3384, 1.14 ) }
    dend_3 { pt3dadd( 3.04483, -28.7953, 28.8862, 0.91 ) }
    dend_3 { pt3dadd( 1.95224, -29.1895, 31.1853, 0.91 ) }
    dend_3 { pt3dadd( 0.890885, -29.6098, 33.2511, 0.91 ) }
    dend_3 { pt3dadd( 0.0603556, -30.0186, 34.7735, 0.91 ) }
    dend_3 { pt3dadd( -0.80664, -30.5948, 36.345, 0.91 ) }
    dend_3 { pt3dadd( -1.33562, -31.051, 37.2325, 1.14 ) }
    dend_3 { pt3dadd( -2.22985, -32.0803, 38.5533, 1.14 ) }
    dend_3 { pt3dadd( -3.06307, -33.4885, 39.3238, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_3 { pt3dadd( -3.65431, -34.478, 39.4271, 1.14 ) }
    dend_3 { pt3dadd( -4.45621, -35.6606, 39.4411, 0.91 ) }
    dend_3 { pt3dadd( -6.42141, -38.0008, 39.6501, 0.91 ) }
    dend_3 { pt3dadd( -8.29395, -39.5459, 40.2661, 0.91 ) }
    dend_3 { pt3dadd( -9.59823, -40.3792, 41.0044, 1.14 ) }
    dend_3 { pt3dadd( -10.9337, -41.1071, 42.1575, 0.91 ) }
    dend_3 { pt3dadd( -12.5876, -41.8671, 44.2688, 0.91 ) }
    dend_3 { pt3dadd( -13.9506, -42.3437, 46.7806, 0.91 ) }
    dend_3 { pt3dadd( -14.7981, -42.4425, 48.8646, 0.91 ) }
    dend_3 { pt3dadd( -15.3842, -42.3556, 50.6119, 0.91 ) }
    dend_3 { pt3dadd( -15.7614, -42.2013, 51.8538, 0.91 ) }
    dend_3 { pt3dadd( -16.3839, -41.8997, 53.7648, 0.91 ) }
    dend_3 { pt3dadd( -16.7387, -41.7786, 54.4591, 1.14 ) }
    dend_3 { pt3dadd( -18.2391, -41.2515, 56.9136, 1.14 ) }
    dend_3 { pt3dadd( -19.395, -40.8589, 58.3641, 1.14 ) }
    dend_3 { pt3dadd( -21.0457, -40.3412, 60.0853, 0.91 ) }
    dend_3 { pt3dadd( -22.8801, -39.9015, 61.7421, 0.91 ) }
    dend_3 { pt3dadd( -25.3726, -39.5959, 63.741, 1.14 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 18/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -17.7664, -19.661, 0.186366, 0.91 ) }
    dend_21 { pt3dadd( -18.5936, -20.4999, -0.349721, 0.91 ) }
    dend_21 { pt3dadd( -19.6605, -21.4467, -0.892987, 0.68 ) }
    dend_21 { pt3dadd( -20.7788, -22.3219, -1.40179, 0.68 ) }
    dend_21 { pt3dadd( -21.8432, -23.0567, -1.85111, 0.91 ) }
    dend_21 { pt3dadd( -22.3858, -23.3911, -2.09757, 0.68 ) }
    dend_21 { pt3dadd( -23.564, -24.0371, -2.65727, 0.68 ) }
    dend_21 { pt3dadd( -24.4483, -24.3975, -3.02216, 0.68 ) }
    dend_21 { pt3dadd( -25.0486, -24.5769, -3.30555, 0.91 ) }
    dend_21 { pt3dadd( -25.511, -24.6725, -3.61414, 0.68 ) }
    dend_21 { pt3dadd( -26.4066, -24.8472, -4.45834, 0.68 ) }
    dend_21 { pt3dadd( -27.0828, -25.0374, -5.26531, 1.37 ) }
    dend_21 { pt3dadd( -27.2731, -25.113, -5.54253, 0.91 ) }
    dend_21 { pt3dadd( -27.9766, -25.521, -6.71701, 0.91 ) }
    dend_21 { pt3dadd( -28.5778, -25.9771, -7.74992, 0.91 ) }
    dend_21 { pt3dadd( -29.297, -26.5762, -8.93746, 0.91 ) }
    dend_21 { pt3dadd( -30.2116, -27.3631, -10.3546, 0.68 ) }
    dend_21 { pt3dadd( -30.8839, -27.9421, -11.3154, 0.68 ) }
    dend_21 { pt3dadd( -31.4414, -28.4068, -12.0162, 0.46 ) }
    dend_21 { pt3dadd( -32.0334, -28.8696, -12.612, 0.46 ) }
    dend_21 { pt3dadd( -32.9651, -29.5283, -13.4022, 0.68 ) }
    dend_21 { pt3dadd( -33.9957, -30.1986, -14.1438, 0.68 ) }
    dend_21 { pt3dadd( -35.1556, -30.9011, -14.8738, 0.46 ) }
    dend_21 { pt3dadd( -36.7588, -31.7856, -15.7846, 0.46 ) }
    dend_21 { pt3dadd( -38.4713, -32.6132, -16.7041, 0.46 ) }
    dend_21 { pt3dadd( -39.2755, -32.9798, -17.1204, 0.68 ) }
    dend_21 { pt3dadd( -39.9539, -33.2878, -17.4537, 0.68 ) }
    dend_21 { pt3dadd( -41.2547, -33.895, -18.0306, 0.23 ) }
    dend_21 { pt3dadd( -42.1271, -34.3102, -18.4231, 0.46 ) }
    dend_21 { pt3dadd( -43.1639, -34.8039, -18.8782, 0.23 ) }
    dend_21 { pt3dadd( -44.126, -35.2366, -19.286, 0.23 ) }
    dend_21 { pt3dadd( -44.3724, -35.3353, -19.3832, 0.46 ) }
    dend_21 { pt3dadd( -45.9822, -35.8448, -19.9825, 0.23 ) }
    dend_21 { pt3dadd( -46.7283, -36.0591, -20.2493, 0.23 ) }
    dend_21 { pt3dadd( -47.9984, -36.4128, -20.6883, 0.91 ) }
    dend_21 { pt3dadd( -49.3477, -36.7462, -21.1321, 0.91 ) }
    dend_21 { pt3dadd( -50.7235, -36.9583, -21.5591, 0.91 ) }
    dend_21 { pt3dadd( -51.7331, -37.0179, -21.8488, 1.14 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 56/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -17.7664, -19.661, 0.186366, 0.46 ) }
    dend_18 { pt3dadd( -18.1825, -19.9664, 1.17025, 0.46 ) }
    dend_18 { pt3dadd( -18.5568, -20.2177, 2.09512, 0.46 ) }
    dend_18 { pt3dadd( -19.0311, -20.5346, 3.30438, 0.68 ) }
    dend_18 { pt3dadd( -19.9932, -21.2054, 5.87778, 0.68 ) }
    dend_18 { pt3dadd( -20.8952, -21.8704, 8.36612, 0.68 ) }
    dend_18 { pt3dadd( -21.5755, -22.4085, 10.3197, 0.68 ) }
    dend_18 { pt3dadd( -22.0872, -22.7509, 11.6951, 0.91 ) }
    dend_18 { pt3dadd( -22.729, -23.098, 13.1233, 0.91 ) }
    dend_18 { pt3dadd( -23.5426, -23.4751, 14.5351, 0.91 ) }
    dend_18 { pt3dadd( -24.3324, -23.7961, 15.4207, 0.91 ) }
    dend_18 { pt3dadd( -25.5357, -24.1426, 15.9765, 0.68 ) }
    dend_18 { pt3dadd( -27.0239, -24.4953, 16.2661, 0.68 ) }
    dend_18 { pt3dadd( -29.4582, -25.0297, 16.4741, 0.91 ) }
    dend_18 { pt3dadd( -31.7746, -25.5361, 16.5179, 0.91 ) }
    dend_18 { pt3dadd( -34.3844, -26.0975, 16.5229, 0.68 ) }
    dend_18 { pt3dadd( -36.8016, -26.6122, 16.5817, 0.68 ) }
    dend_18 { pt3dadd( -38.7588, -27.0625, 16.7755, 0.68 ) }
    dend_18 { pt3dadd( -40.5912, -27.6117, 17.4039, 0.68 ) }
    dend_18 { pt3dadd( -41.0998, -27.8129, 17.7497, 1.14 ) }
    dend_18 { pt3dadd( -42.217, -28.3967, 18.7676, 1.14 ) }
    dend_18 { pt3dadd( -43.4711, -29.2007, 20.0634, 1.14 ) }
    dend_18 { pt3dadd( -44.5249, -30.0401, 21.1081, 0.91 ) }
    dend_18 { pt3dadd( -45.5822, -30.9672, 21.9844, 0.91 ) }
    dend_18 { pt3dadd( -47.5083, -32.6403, 23.3421, 0.91 ) }
    dend_18 { pt3dadd( -48.9634, -33.8444, 24.2114, 0.91 ) }
    dend_18 { pt3dadd( -50.0588, -34.6824, 24.781, 1.14 ) }
    dend_18 { pt3dadd( -51.6249, -35.7182, 25.5679, 0.68 ) }
    dend_18 { pt3dadd( -53.1914, -36.5212, 26.4412, 0.68 ) }
    dend_18 { pt3dadd( -54.1187, -36.8953, 27.1611, 0.68 ) }
    dend_18 { pt3dadd( -54.6095, -37.025, 27.7369, 0.91 ) }
    dend_18 { pt3dadd( -55.8558, -37.0942, 29.4198, 0.91 ) }
    dend_18 { pt3dadd( -57.1042, -37.0194, 31.2808, 0.91 ) }
    dend_18 { pt3dadd( -57.9908, -36.9694, 32.7756, 0.91 ) }
    dend_18 { pt3dadd( -59.069, -37.06, 34.8153, 0.91 ) }
    dend_18 { pt3dadd( -59.5206, -37.2293, 35.7133, 0.91 ) }
    dend_18 { pt3dadd( -60.0036, -37.6674, 36.7036, 0.91 ) }
    dend_18 { pt3dadd( -60.3968, -38.7277, 37.7351, 0.91 ) }
    dend_18 { pt3dadd( -60.6448, -40.4165, 38.7496, 0.91 ) }
    dend_18 { pt3dadd( -60.8179, -41.5733, 39.2561, 0.91 ) }
    dend_18 { pt3dadd( -61.334, -43.4133, 39.8594, 0.68 ) }
    dend_18 { pt3dadd( -61.7932, -44.5456, 40.2338, 0.46 ) }
    dend_18 { pt3dadd( -62.3419, -45.5782, 40.6476, 0.46 ) }
    dend_18 { pt3dadd( -63.4707, -46.9539, 41.2579, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( -64.4972, -47.926, 41.7878, 0.46 ) }
    dend_18 { pt3dadd( -65.619, -48.8197, 42.3979, 0.46 ) }
    dend_18 { pt3dadd( -66.9648, -49.7218, 43.1389, 0.46 ) }
    dend_18 { pt3dadd( -67.8323, -50.223, 43.5294, 0.46 ) }
    dend_18 { pt3dadd( -69.2565, -50.9225, 44.1049, 0.68 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 5/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 4.49648, -39.5391, 14.8048, 1.37 ) }
    dend_8 { pt3dadd( 4.73615, -41.1297, 14.2464, 1.37 ) }
    dend_8 { pt3dadd( 5.21655, -44.3179, 13.1272, 1.14 ) }
    dend_8 { pt3dadd( 5.60755, -46.9129, 12.2162, 1.14 ) }
    dend_8 { pt3dadd( 5.85011, -48.5227, 11.6511, 1.14 ) }
    dend_8 { pt3dadd( 6.11959, -50.3111, 11.0233, 1.14 ) }
    dend_8 { pt3dadd( 6.49833, -52.8247, 10.1409, 1.14 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 12/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 4.49648, -39.5391, 14.8048, 0.68 ) }
    dend_7 { pt3dadd( 4.10573, -39.2277, 11.8989, 0.68 ) }
    dend_7 { pt3dadd( 3.56678, -38.9332, 9.82112, 0.68 ) }
    dend_7 { pt3dadd( 2.9042, -38.6303, 8.25393, 0.68 ) }
    dend_7 { pt3dadd( 1.54654, -38.1035, 5.65625, 0.68 ) }
    dend_7 { pt3dadd( 0.686832, -37.7554, 4.20961, 0.68 ) }
    dend_7 { pt3dadd( -0.117167, -37.4106, 2.94171, 0.68 ) }
    dend_7 { pt3dadd( -0.939615, -37.0101, 1.91874, 0.68 ) }
    dend_7 { pt3dadd( -2.1457, -36.314, 0.454741, 0.23 ) }
    dend_7 { pt3dadd( -3.5343, -35.4528, -1.38894, 0.23 ) }
    dend_7 { pt3dadd( -4.15353, -35.1087, -2.3114, 0.23 ) }
    dend_7 { pt3dadd( -4.33163, -35.0119, -2.61371, 0.68 ) }
    dend_7 { pt3dadd( -5.47514, -34.3611, -4.58747, 0.91 ) }
    dend_7 { pt3dadd( -7.06838, -33.3962, -7.22495, 0.91 ) }
    dend_7 { pt3dadd( -8.37586, -32.6157, -9.27547, 0.68 ) }
    dend_7 { pt3dadd( -9.92935, -31.7028, -11.455, 0.68 ) }
    dend_7 { pt3dadd( -11.2654, -30.9336, -13.3088, 0.91 ) }
    dend_7 { pt3dadd( -12.5601, -30.2015, -15.1732, 0.68 ) }
    dend_7 { pt3dadd( -14.2652, -29.2442, -17.7979, 0.46 ) }
    dend_7 { pt3dadd( -15.3865, -28.5908, -19.6212, 0.68 ) }
    dend_7 { pt3dadd( -16.9329, -27.5718, -22.3823, 0.46 ) }
    dend_7 { pt3dadd( -17.9689, -26.8376, -24.3947, 0.46 ) }
    dend_7 { pt3dadd( -19.4541, -25.7776, -27.7359, 0.46 ) }
    dend_7 { pt3dadd( -20.5193, -25.0368, -30.4951, 0.46 ) }
    dend_7 { pt3dadd( -21.0487, -24.6491, -32.0475, 0.68 ) }
    dend_7 { pt3dadd( -21.3821, -24.3801, -33.1855, 0.68 ) }
    dend_7 { pt3dadd( -21.8552, -23.9203, -35.2709, 0.46 ) }
    dend_7 { pt3dadd( -22.5873, -23.189, -38.4167, 0.46 ) }
    dend_7 { pt3dadd( -23.0341, -22.6938, -40.3783, 0.46 ) }
    dend_7 { pt3dadd( -23.5396, -22.071, -42.9031, 0.46 ) }
    dend_7 { pt3dadd( -24.0541, -21.3069, -46.3674, 0.46 ) }
    dend_7 { pt3dadd( -24.4337, -20.7199, -49.531, 0.46 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -25.3726, -39.5959, 63.741, 0.46 ) }
    dend_5 { pt3dadd( -25.9406, -40.8961, 65.8551, 0.46 ) }
    dend_5 { pt3dadd( -26.2724, -41.8885, 67.1261, 0.46 ) }
    dend_5 { pt3dadd( -26.4436, -42.5535, 68.0415, 0.46 ) }
    dend_5 { pt3dadd( -26.5465, -43.0062, 68.7634, 0.46 ) }
    dend_5 { pt3dadd( -26.6576, -43.4129, 69.4439, 0.46 ) }
    dend_5 { pt3dadd( -26.9549, -44.2441, 70.8643, 0.46 ) }
    dend_5 { pt3dadd( -27.3391, -45.1491, 72.4676, 0.68 ) }
    dend_5 { pt3dadd( -27.8899, -46.1001, 74.2974, 0.68 ) }
    dend_5 { pt3dadd( -28.6265, -47.0081, 76.2793, 0.68 ) }
    dend_5 { pt3dadd( -29.1976, -47.5464, 77.5954, 0.68 ) }
    dend_5 { pt3dadd( -29.8258, -48.0367, 78.6995, 0.46 ) }
    dend_5 { pt3dadd( -30.6135, -48.5821, 79.7426, 0.46 ) }
    dend_5 { pt3dadd( -31.2426, -48.9899, 80.4407, 0.46 ) }
    dend_5 { pt3dadd( -31.7878, -49.3642, 80.9659, 0.68 ) }
    dend_5 { pt3dadd( -32.5335, -49.979, 81.7573, 0.68 ) }
    dend_5 { pt3dadd( -33.9959, -51.4083, 83.7358, 0.46 ) }
    dend_5 { pt3dadd( -34.8969, -52.4308, 85.2677, 0.46 ) }
    dend_5 { pt3dadd( -35.5775, -53.3453, 86.8443, 0.46 ) }
    dend_5 { pt3dadd( -35.6935, -53.5199, 87.2308, 0.46 ) }
    dend_5 { pt3dadd( -36.2242, -54.4194, 89.8251, 0.46 ) }
    dend_5 { pt3dadd( -36.4148, -54.8044, 91.3151, 0.46 ) }
    dend_5 { pt3dadd( -36.465, -54.9094, 92.1346, 0.46 ) }
    dend_5 { pt3dadd( -36.531, -55.0309, 93.8765, 0.46 ) }
    dend_5 { pt3dadd( -36.6104, -55.0524, 95.0712, 0.46 ) }
    dend_5 { pt3dadd( -36.71, -54.9947, 96.3468, 0.46 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.3726, -39.5959, 63.741, 0.46 ) }
    dend_4 { pt3dadd( -27.0606, -39.4812, 63.2979, 0.46 ) }
    dend_4 { pt3dadd( -27.8861, -39.3677, 63.169, 0.23 ) }
    dend_4 { pt3dadd( -29.1365, -39.1656, 63.0414, 0.23 ) }
    dend_4 { pt3dadd( -31.1878, -38.8503, 62.8918, 0.23 ) }
    dend_4 { pt3dadd( -31.7513, -38.7985, 62.8616, 0.46 ) }
    dend_4 { pt3dadd( -33.8676, -38.7054, 62.7712, 0.46 ) }
    dend_4 { pt3dadd( -35.1367, -38.672, 62.7773, 0.46 ) }
    dend_4 { pt3dadd( -36.1753, -38.6694, 62.7989, 0.46 ) }
    dend_4 { pt3dadd( -37.4146, -38.7096, 62.8499, 0.46 ) }
    dend_4 { pt3dadd( -39.0663, -38.9518, 62.8851, 0.46 ) }
    dend_4 { pt3dadd( -40.0761, -39.2847, 62.8465, 0.23 ) }
    dend_4 { pt3dadd( -41.0049, -39.8462, 62.7299, 0.23 ) }
    dend_4 { pt3dadd( -41.6705, -40.3856, 62.5916, 0.23 ) }
    dend_4 { pt3dadd( -42.5378, -41.2095, 62.3897, 0.46 ) }
    dend_4 { pt3dadd( -43.4253, -42.0939, 62.1805, 0.46 ) }
    dend_4 { pt3dadd( -44.5024, -43.1502, 62.037, 0.46 ) }
    dend_4 { pt3dadd( -45.0954, -43.7527, 62.0282, 0.23 ) }
    dend_4 { pt3dadd( -46.172, -44.8429, 62.1191, 0.23 ) }
    dend_4 { pt3dadd( -46.8368, -45.4505, 62.2221, 0.23 ) }
    dend_4 { pt3dadd( -48.1803, -46.4541, 62.4706, 0.23 ) }
    dend_4 { pt3dadd( -49.6552, -47.3841, 62.7414, 0.23 ) }
    dend_4 { pt3dadd( -50.6014, -47.9168, 62.8958, 0.46 ) }
    dend_4 { pt3dadd( -52.0425, -48.6661, 63.0228, 0.46 ) }
    dend_4 { pt3dadd( -53.6488, -49.4715, 63.0624, 0.46 ) }
    dend_4 { pt3dadd( -55.064, -50.1264, 63.0047, 0.46 ) }
    dend_4 { pt3dadd( -56.1479, -50.5707, 62.9381, 0.68 ) }
    dend_4 { pt3dadd( -57.8087, -51.2005, 62.7953, 0.46 ) }
    dend_4 { pt3dadd( -59.5531, -51.7972, 62.6778, 0.46 ) }
    dend_4 { pt3dadd( -61.1292, -52.2582, 62.6112, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_4 { pt3dadd( -62.9841, -52.7556, 62.6176, 0.46 ) }
    dend_4 { pt3dadd( -64.5318, -53.1531, 62.7215, 0.46 ) }
    dend_4 { pt3dadd( -66.2404, -53.5355, 62.9349, 0.46 ) }
    dend_4 { pt3dadd( -67.0311, -53.6851, 63.0768, 0.46 ) }
    dend_4 { pt3dadd( -68.2167, -53.8605, 63.3547, 0.46 ) }
    dend_4 { pt3dadd( -69.93, -54.0464, 63.7622, 0.46 ) }
    dend_4 { pt3dadd( -71.0809, -54.1258, 64.0095, 0.46 ) }
    dend_4 { pt3dadd( -71.635, -54.1404, 64.0992, 0.46 ) }
    dend_4 { pt3dadd( -73.1505, -54.1087, 64.3161, 0.46 ) }
    dend_4 { pt3dadd( -74.8617, -54.1207, 64.4824, 0.91 ) }
    dend_4 { pt3dadd( -76.185, -54.1666, 64.5315, 0.68 ) }
    dend_4 { pt3dadd( -77.5527, -54.2489, 64.4628, 0.68 ) }
    dend_4 { pt3dadd( -78.6039, -54.3788, 64.33, 0.68 ) }
    dend_4 { pt3dadd( -79.4376, -54.5293, 64.1575, 0.68 ) }
    dend_4 { pt3dadd( -80.8273, -54.8435, 63.7223, 0.68 ) }
    dend_4 { pt3dadd( -81.7938, -55.1015, 63.3143, 0.68 ) }
    dend_4 { pt3dadd( -83.8208, -55.6025, 62.2495, 0.68 ) }
    dend_4 { pt3dadd( -84.9107, -55.9135, 61.6385, 0.68 ) }
    dend_4 { pt3dadd( -86.238, -56.2984, 60.846, 0.68 ) }
    dend_4 { pt3dadd( -87.191, -56.5439, 60.2493, 0.68 ) }
    dend_4 { pt3dadd( -88.0106, -56.6806, 59.726, 0.68 ) }
    dend_4 { pt3dadd( -89.1313, -56.8178, 58.9191, 0.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -69.2565, -50.9225, 44.1049, 0.46 ) }
    dend_20 { pt3dadd( -70.1485, -51.0603, 41.8663, 0.46 ) }
    dend_20 { pt3dadd( -71.3648, -51.2483, 38.8142, 0.23 ) }
    dend_20 { pt3dadd( -72.7097, -51.4562, 35.439, 0.23 ) }
    dend_20 { pt3dadd( -73.3145, -51.5497, 33.9214, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -69.2565, -50.9225, 44.1049, 0.46 ) }
    dend_19 { pt3dadd( -70.1728, -50.5512, 44.9596, 0.46 ) }
    dend_19 { pt3dadd( -71.6941, -49.9348, 46.3785, 0.46 ) }
    dend_19 { pt3dadd( -73.1895, -49.3289, 47.7733, 0.68 ) }
    dend_19 { pt3dadd( -74.3413, -48.8622, 48.8475, 0.68 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 32/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.49833, -52.8247, 10.1409, 0.91 ) }
    dend_10 { pt3dadd( 5.5693, -54.5897, 9.87653, 0.91 ) }
    dend_10 { pt3dadd( 4.77194, -56.3257, 9.68293, 0.91 ) }
    dend_10 { pt3dadd( 4.27742, -57.8114, 9.51327, 0.68 ) }
    dend_10 { pt3dadd( 4.00203, -59.5401, 9.34713, 0.68 ) }
    dend_10 { pt3dadd( 3.97475, -60.6005, 9.26522, 0.68 ) }
    dend_10 { pt3dadd( 4.01616, -61.4909, 9.23842, 0.68 ) }
    dend_10 { pt3dadd( 4.23333, -63.0949, 9.29929, 0.68 ) }
    dend_10 { pt3dadd( 4.55685, -65.0191, 9.51655, 0.68 ) }
    dend_10 { pt3dadd( 4.90555, -66.9765, 9.86409, 0.91 ) }
    dend_10 { pt3dadd( 5.10753, -68.2106, 10.1134, 0.68 ) }
    dend_10 { pt3dadd( 5.31463, -69.807, 10.4352, 0.68 ) }
    dend_10 { pt3dadd( 5.5415, -72.1547, 10.883, 0.68 ) }
    dend_10 { pt3dadd( 5.59993, -74.103, 11.1922, 0.68 ) }
    dend_10 { pt3dadd( 5.57751, -74.712, 11.2762, 0.68 ) }
    dend_10 { pt3dadd( 5.48921, -76.289, 11.3942, 0.46 ) }
    dend_10 { pt3dadd( 5.43827, -77.2545, 11.4303, 0.91 ) }
    dend_10 { pt3dadd( 5.38165, -78.6055, 11.4614, 1.37 ) }
    dend_10 { pt3dadd( 5.35164, -80.2538, 11.546, 0.91 ) }
    dend_10 { pt3dadd( 5.21337, -82.7024, 11.8222, 0.68 ) }
    dend_10 { pt3dadd( 5.07284, -84.2979, 12.068, 0.91 ) }
    dend_10 { pt3dadd( 4.91319, -86.1237, 12.3889, 0.68 ) }
    dend_10 { pt3dadd( 4.66331, -88.6116, 12.8159, 0.68 ) }
    dend_10 { pt3dadd( 4.49986, -90.2823, 13.0893, 0.68 ) }
    dend_10 { pt3dadd( 4.33259, -92.4119, 13.4444, 0.68 ) }
    dend_10 { pt3dadd( 4.23508, -93.9771, 13.6639, 1.14 ) }
    dend_10 { pt3dadd( 4.03331, -96.3492, 13.8767, 0.68 ) }
    dend_10 { pt3dadd( 3.87314, -97.9313, 13.8833, 0.68 ) }
    dend_10 { pt3dadd( 3.69939, -99.4705, 13.7616, 0.46 ) }
    dend_10 { pt3dadd( 3.513, -100.775, 13.5844, 0.46 ) }
    dend_10 { pt3dadd( 3.29866, -102.19, 13.349, 0.23 ) }
    dend_10 { pt3dadd( 2.99628, -103.948, 13.0021, 0.23 ) }
    dend_10 { pt3dadd( 2.81507, -104.974, 12.7789, 0.91 ) }
    dend_10 { pt3dadd( 2.50392, -107.085, 12.2764, 0.23 ) }
    dend_10 { pt3dadd( 2.28159, -108.896, 11.8127, 1.14 ) }
    dend_10 { pt3dadd( 2.11776, -110.763, 11.3347, 0.46 ) }
    dend_10 { pt3dadd( 2.04946, -112.739, 10.8388, 0.46 ) }
    dend_10 { pt3dadd( 2.15652, -114.883, 10.306, 0.46 ) }
    dend_10 { pt3dadd( 2.33286, -116.221, 10.0005, 0.91 ) }
    dend_10 { pt3dadd( 2.65729, -117.711, 9.69708, 0.46 ) }
    dend_10 { pt3dadd( 3.23895, -119.538, 9.41708, 0.46 ) }
    dend_10 { pt3dadd( 3.65488, -120.649, 9.28051, 0.46 ) }
    dend_10 { pt3dadd( 4.39418, -122.484, 9.12175, 0.46 ) }
    dend_10 { pt3dadd( 5.14627, -124.172, 9.01124, 0.46 ) }
    dend_10 { pt3dadd( 5.69767, -125.318, 8.90911, 0.91 ) }
    dend_10 { pt3dadd( 6.60659, -127.103, 8.60716, 0.68 ) }
    dend_10 { pt3dadd( 7.43356, -128.737, 8.17548, 0.68 ) }
    dend_10 { pt3dadd( 7.92946, -129.803, 7.75553, 0.68 ) }
    dend_10 { pt3dadd( 8.62543, -131.502, 6.70494, 0.68 ) }
    dend_10 { pt3dadd( 9.32652, -133.173, 5.25871, 0.68 ) }
    dend_10 { pt3dadd( 9.98409, -134.512, 3.82825, 0.68 ) }
    dend_10 { pt3dadd( 10.3726, -135.214, 2.90989, 1.14 ) }
    dend_10 { pt3dadd( 10.9193, -136.233, 1.36853, 0.91 ) }
    dend_10 { pt3dadd( 11.48, -137.461, -0.727098, 0.68 ) }
    dend_10 { pt3dadd( 11.7621, -138.171, -2.07066, 0.68 ) }
    dend_10 { pt3dadd( 12.1197, -139.063, -3.74423, 0.91 ) }
    dend_10 { pt3dadd( 12.5892, -140.296, -5.77597, 0.68 ) }
    dend_10 { pt3dadd( 13.0578, -141.649, -7.64154, 0.91 ) }
    dend_10 { pt3dadd( 13.4144, -142.966, -9.04432, 0.91 ) }
    dend_10 { pt3dadd( 13.7578, -144.791, -10.5739, 0.91 ) }
    dend_10 { pt3dadd( 13.9051, -146.487, -11.7513, 0.68 ) }
    dend_10 { pt3dadd( 13.9247, -148.433, -12.8339, 0.68 ) }
    dend_10 { pt3dadd( 13.842, -150.479, -13.7324, 0.68 ) }
    dend_10 { pt3dadd( 13.6196, -153.141, -14.711, 0.68 ) }
    dend_10 { pt3dadd( 13.374, -155.029, -15.3195, 0.68 ) }
    dend_10 { pt3dadd( 13.0258, -156.852, -15.8646, 0.91 ) }
    dend_10 { pt3dadd( 12.4427, -159.065, -16.5375, 0.68 ) }
    dend_10 { pt3dadd( 11.9784, -160.643, -17.1065, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 11.5978, -161.835, -17.6014, 0.68 ) }
    dend_10 { pt3dadd( 11.0835, -163.419, -18.3256, 0.23 ) }
    dend_10 { pt3dadd( 10.6909, -164.677, -18.9049, 0.68 ) }
    dend_10 { pt3dadd( 10.027, -167.041, -19.9555, 0.23 ) }
    dend_10 { pt3dadd( 9.58678, -168.806, -20.696, 0.23 ) }
    dend_10 { pt3dadd( 9.39784, -169.768, -21.0502, 0.46 ) }
    dend_10 { pt3dadd( 9.20286, -171.301, -21.58, 0.23 ) }
    dend_10 { pt3dadd( 9.15115, -172.352, -21.9413, 0.23 ) }
    dend_10 { pt3dadd( 9.24625, -173.253, -22.2859, 0.46 ) }
    dend_10 { pt3dadd( 9.57174, -174.63, -22.9416, 0.23 ) }
    dend_10 { pt3dadd( 9.92147, -175.683, -23.5523, 0.46 ) }
    dend_10 { pt3dadd( 10.7292, -177.507, -24.7986, 0.46 ) }
    dend_10 { pt3dadd( 11.5351, -178.83, -25.9737, 0.46 ) }
    dend_10 { pt3dadd( 12.7665, -180.438, -27.5449, 0.46 ) }
    dend_10 { pt3dadd( 14.0049, -181.939, -29.1281, 0.46 ) }
    dend_10 { pt3dadd( 15.2053, -183.286, -30.6811, 0.46 ) }
    dend_10 { pt3dadd( 16.1097, -184.234, -31.8634, 0.91 ) }
    dend_10 { pt3dadd( 18.3913, -186.452, -34.8048, 0.91 ) }
    dend_10 { pt3dadd( 20.7768, -188.555, -37.7195, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 19/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 6.49833, -52.8247, 10.1409, 0.68 ) }
    dend_9 { pt3dadd( 7.55963, -53.0457, 9.10325, 0.68 ) }
    dend_9 { pt3dadd( 9.38748, -53.5094, 7.9223, 0.68 ) }
    dend_9 { pt3dadd( 11.3216, -53.9585, 6.97316, 0.68 ) }
    dend_9 { pt3dadd( 13.1742, -54.2955, 6.24787, 0.68 ) }
    dend_9 { pt3dadd( 14.947, -54.5209, 5.66476, 0.46 ) }
    dend_9 { pt3dadd( 17.3095, -54.7469, 4.96359, 0.46 ) }
    dend_9 { pt3dadd( 20.0211, -54.9635, 4.41898, 0.46 ) }
    dend_9 { pt3dadd( 21.1934, -55.0366, 4.27886, 0.46 ) }
    dend_9 { pt3dadd( 22.5771, -55.0865, 4.17031, 0.68 ) }
    dend_9 { pt3dadd( 24.4704, -55.0869, 3.98004, 0.46 ) }
    dend_9 { pt3dadd( 27.09, -54.9591, 3.60777, 0.68 ) }
    dend_9 { pt3dadd( 29.6823, -54.739, 3.23377, 0.46 ) }
    dend_9 { pt3dadd( 30.9636, -54.5962, 3.03812, 0.46 ) }
    dend_9 { pt3dadd( 32.5398, -54.4325, 2.78358, 0.46 ) }
    dend_9 { pt3dadd( 34.7579, -54.1583, 2.46268, 0.46 ) }
    dend_9 { pt3dadd( 35.7912, -53.9847, 2.36151, 0.68 ) }
    dend_9 { pt3dadd( 38.4755, -53.3835, 2.21098, 0.23 ) }
    dend_9 { pt3dadd( 40.7201, -52.8547, 2.11953, 0.23 ) }
    dend_9 { pt3dadd( 42.3295, -52.5008, 2.08576, 0.23 ) }
    dend_9 { pt3dadd( 44.0682, -52.1198, 2.12754, 0.23 ) }
    dend_9 { pt3dadd( 45.8166, -51.7499, 2.23472, 0.23 ) }
    dend_9 { pt3dadd( 47.9364, -51.3352, 2.3997, 0.46 ) }
    dend_9 { pt3dadd( 50.1856, -50.8638, 2.60805, 0.46 ) }
    dend_9 { pt3dadd( 52.2343, -50.4082, 2.86639, 0.46 ) }
    dend_9 { pt3dadd( 54.8349, -49.8675, 3.25863, 0.46 ) }
    dend_9 { pt3dadd( 56.8518, -49.4701, 3.57453, 0.46 ) }
    dend_9 { pt3dadd( 58.57, -49.1134, 3.87193, 0.46 ) }
    dend_9 { pt3dadd( 60.3834, -48.7018, 4.24507, 0.23 ) }
    dend_9 { pt3dadd( 61.257, -48.4835, 4.44898, 0.46 ) }
    dend_9 { pt3dadd( 62.7933, -48.1055, 4.83846, 0.23 ) }
    dend_9 { pt3dadd( 64.01, -47.8402, 5.18209, 0.23 ) }
    dend_9 { pt3dadd( 65.0026, -47.631, 5.49807, 0.68 ) }
    dend_9 { pt3dadd( 65.9821, -47.4449, 5.83214, 0.23 ) }
    dend_9 { pt3dadd( 66.9215, -47.3094, 6.1691, 0.23 ) }
    dend_9 { pt3dadd( 68.8637, -47.0106, 7.0451, 0.23 ) }
    dend_9 { pt3dadd( 70.4858, -46.7044, 7.90575, 0.68 ) }
    dend_9 { pt3dadd( 71.1434, -46.5935, 8.266, 0.68 ) }
    dend_9 { pt3dadd( 71.667, -46.5343, 8.54698, 0.68 ) }
    dend_9 { pt3dadd( 74.1387, -46.3919, 9.81216, 0.23 ) }
    dend_9 { pt3dadd( 76.7358, -46.4727, 11.0557, 0.23 ) }
    dend_9 { pt3dadd( 77.5024, -46.5729, 11.3325, 0.46 ) }
    dend_9 { pt3dadd( 79.0344, -46.8816, 11.582, 0.46 ) }
    dend_9 { pt3dadd( 81.41, -47.5169, 11.3851, 0.23 ) }
    dend_9 { pt3dadd( 83.0835, -48.0142, 10.9228, 0.46 ) }
    dend_9 { pt3dadd( 84.6938, -48.4775, 10.0827, 0.46 ) }
    dend_9 { pt3dadd( 86.9302, -49.1102, 8.42951, 0.46 ) }
    dend_9 { pt3dadd( 89.0115, -49.6726, 6.49975, 0.23 ) }
    dend_9 { pt3dadd( 90.6211, -50.0668, 4.77031, 0.68 ) }
    dend_9 { pt3dadd( 91.1165, -50.1619, 4.21222, 0.68 ) }
    dend_9 { pt3dadd( 93.1712, -50.5079, 1.77699, 0.23 ) }
    dend_9 { pt3dadd( 95.4944, -50.8041, -0.998415, 0.46 ) }
    dend_9 { pt3dadd( 97.4417, -51.0369, -3.21976, 0.46 ) }
    dend_9 { pt3dadd( 98.9528, -51.2566, -4.94955, 0.46 ) }
    dend_9 { pt3dadd( 101.414, -51.6958, -7.8338, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_46, dend_41, dend_38, dend_31, dend_26, dend_23, dend_0, axon_0, dend_45, dend_42, dend_40, dend_39, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_14, dend_1, axon_1, dend_44, dend_43, dend_35, dend_34, dend_30, dend_29, dend_16, dend_15, dend_11, dend_2, dend_37, dend_36, dend_22, dend_17, dend_13, dend_12, dend_6, dend_3, dend_21, dend_18, dend_8, dend_7, dend_5, dend_4, dend_20, dend_19, dend_10, dend_9]}
    ModelViewParmSubset_5 = new SectionList()
    dend_46 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_39 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_25 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_24 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_43 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_34 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_3 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_18 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_7 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_38 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_14 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_15 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_32 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_40 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_41 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_35 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_27 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_30 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_42 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_44 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_19 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_5 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_20 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_14, dend_14, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_46 nseg = 3
    dend_45 nseg = 7
    dend_39 nseg = 3
    dend_25 nseg = 5
    dend_24 nseg = 3
    dend_43 nseg = 5
    dend_34 nseg = 3
    dend_37 nseg = 3
    dend_13 nseg = 5
    dend_12 nseg = 3
    dend_3 nseg = 3
    dend_21 nseg = 3
    dend_18 nseg = 5
    dend_7 nseg = 3
    dend_4 nseg = 3
    dend_10 nseg = 9
    dend_9 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L1_NGCDA_3037dfc60f_0_0


