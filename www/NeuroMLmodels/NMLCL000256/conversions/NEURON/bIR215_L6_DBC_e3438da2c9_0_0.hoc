// Cell: bIR215_L6_DBC_e3438da2c9_0_0
/*
{
  "id" : "bIR215_L6_DBC_e3438da2c9_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.25432, 14.9511, 0.00157081, 3.62034", "-2.93315, 13.5105, 0.00126201, 6.40385", "-2.61199, 12.0699, 9.53205E-4, 8.96308", "-2.29082, 10.6293, 6.44404E-4, 10.4523", "-1.96966, 9.18875, 3.35604E-4, 11.6707", "-1.64849, 7.74817, 2.68037E-5, 11.8736", "-1.32732, 6.30759, -2.81997E-4, 11.9675", "-1.00616, 4.86701, -5.90797E-4, 12.0614", "-0.684991, 3.42643, -8.99597E-4, 12.1873", "-0.363825, 1.98585, -0.0012084, 12.1453", "-0.0426595, 0.545272, -0.0015172, 12.019", "0.278507, -0.895307, -0.001826, 11.8927", "0.599673, -2.33589, -0.0021348, 11.8279", "0.920839, -3.77647, -0.0024436, 11.7176", "1.242, -5.21704, -0.0027524, 11.0046", "1.56317, -6.65762, -0.0030612, 10.0239", "1.88434, -8.0982, -0.00337, 9.09175", "2.2055, -9.53878, -0.0036788, 8.30332", "2.52667, -10.9794, -0.0039876, 7.17422", "2.84783, -12.4199, -0.0042964, 5.37678", "3.169, -13.8605, -0.0046052, 3.2773" ]
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-4.98075, 8.997, 10.9227, 2.76", "-6.06293, 10.03, 9.34376, 2.16", "-9.18818, 12.5087, 5.60423, 2.52", "-11.4562, 14.1281, 3.16164, 2.52", "-13.1057, 15.2028, 1.59056, 2.52", "-13.9732, 15.7161, 0.827453, 2.52", "-15.0201, 16.2621, 0.026779, 2.28", "-17.8098, 17.6248, -1.74421, 1.92", "-19.0037, 18.1385, -2.30394, 1.92", "-21.5881, 19.1035, -3.37255, 1.8", "-23.1392, 19.6609, -3.92747, 1.8", "-26.4929, 20.7197, -4.9673, 1.56", "-29.0993, 21.4502, -5.66714, 1.92", "-31.3472, 21.9701, -6.18216, 1.92", "-32.9529, 22.1763, -6.47204, 1.92", "-35.0049, 22.2075, -6.75451, 1.92", "-38.9303, 21.9886, -7.27446, 1.8", "-39.5956, 21.8952, -7.37415, 1.8", "-40.9879, 21.5977, -7.58322, 1.8", "-44.2891, 20.7304, -8.15615, 1.32", "-45.4569, 20.3998, -8.41793, 1.32", "-47.7091, 19.7517, -9.13046, 1.92", "-48.5869, 19.6865, -9.64352, 1.92", "-49.2182, 20.2164, -10.6302, 1.92", "-49.5046, 20.5916, -11.254, 1.92", "-49.8081, 21.045, -12.0104, 1.92", "-50.2225, 21.3206, -12.6863, 1.92", "-50.8912, 21.4386, -13.5078, 1.92", "-52.8663, 21.4122, -15.7156, 1.44", "-54.3537, 21.3164, -17.2707, 1.44", "-55.1084, 21.2339, -18.011, 1.44", "-57.0523, 20.9063, -19.8323, 1.44", "-58.3335, 20.6112, -20.997, 1.8", "-59.3354, 20.3076, -21.8987, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-3.03075, 13.302, 1.77275, 1.32", "-2.83356, 15.8077, 0.838929, 1.32", "-2.6446, 18.4574, -0.0310362, 1.32", "-2.54824, 19.8965, -0.453827, 1.32", "-2.45012, 21.4475, -0.852999, 1.32", "-2.39165, 22.4153, -1.06847, 1.32", "-2.30868, 23.5222, -1.27877, 1.32", "-2.19767, 24.875, -1.40891, 1.32", "-2.11883, 25.7229, -1.37771, 1.32", "-1.95878, 27.3017, -1.25816, 1.08", "-1.76947, 28.9871, -1.09463, 1.56", "-1.56698, 30.7766, -0.879365, 1.56", "-1.38223, 32.3365, -0.654885, 1.56", "-0.87366, 35.9114, -0.0408348, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-5.85074, 10.6575, 11.3727, 1.8", "-6.58716, 11.8517, 11.8015, 1.8", "-7.3951, 13.119, 12.2877, 1.8", "-8.9758, 15.4111, 13.342, 1.56", "-9.42948, 16.0689, 13.6446, 1.56", "-10.4658, 17.5717, 14.3359, 1.44", "-11.5464, 19.1386, 15.0567, 0.96", "-12.0054, 19.8003, 15.3927, 0.96", "-13.9045, 22.3824, 16.8263, 1.92", "-19.2167, 30.1629, 20.5896, 1.92", "-26.1495, 36.0978, 24.8801, 1.92", "-34.2112, 41.4881, 27.5922, 1.92", "-41.5466, 48.0849, 29.7763, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.42925, -11.6362, 11.5527, 2.64", "1.6148, -13.8505, 11.3952, 2.64", "1.82906, -16.4072, 11.2134, 2.64", "1.98708, -18.2929, 11.0792, 2.64", "2.13442, -20.0512, 10.9541, 2.64", "2.43423, -23.6289, 10.6997, 2.4", "2.73629, -27.2334, 10.4432, 3.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "4.77925, -12.446, 13.0827, 2.16", "4.99623, -13.1091, 12.8654, 2.16", "5.57089, -15.2176, 12.312, 2.16", "6.00883, -16.7263, 11.9892, 2.16", "6.76272, -19.3234, 11.4336, 2.16", "7.31701, -21.233, 11.025, 2.16", "7.71892, -22.6176, 10.7288, 2.16", "8.78145, -26.2238, 9.94534, 2.52", "9.53233, -29.0253, 9.33937, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.610745, 12.9843, 11.8327, 2.52", "-0.142174, 16.542, 11.8327, 2.52", "0.319266, 20.0455, 11.8327, 2.52", "0.733633, 23.1917, 11.8327, 2.52", "0.943147, 24.7824, 11.8327, 2.52", "1.19844, 26.7208, 11.8327, 2.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.169, -13.8605, -0.0046052, 1.29094", "6.433, -28.5011, -0.0046052, 1.29094", "9.697, -43.1416, -0.0046052, 1.29094" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-59.3354, 20.3076, -21.8987, 1.2", "-60.6626, 22.747, -21.0304, 1.2", "-62.1449, 24.5614, -20.2723, 1.2", "-63.24, 25.3568, -19.8584, 1.2", "-63.9627, 25.7918, -19.6117, 1.56", "-64.421, 26.0002, -19.546, 1.56", "-65.2362, 26.2986, -19.5123, 1.56", "-67.5124, 26.8652, -19.522, 0.96", "-71.0735, 27.5387, -19.7435, 1.56", "-71.4276, 27.5976, -19.7737, 1.56", "-75.8849, 28.2412, -20.2849, 1.08", "-77.2591, 28.3983, -20.5042, 1.08" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-59.3354, 20.3076, -21.8987, 1.08", "-60.9208, 20.0431, -22.9231, 1.08", "-62.579, 19.5668, -24.1078, 1.56", "-65.9621, 18.1162, -27.1205, 0.84", "-67.1963, 17.3911, -28.531, 0.84", "-67.583, 17.1023, -29.0604, 0.84", "-68.5397, 16.2605, -30.5549, 0.84", "-69.3564, 15.2376, -32.2857, 0.84", "-70.1986, 13.7419, -34.6201, 0.84", "-70.7915, 12.2276, -36.6401, 0.84", "-71.1375, 11.2465, -37.851, 0.84", "-71.5194, 10.2719, -39.0295, 0.84", "-71.871, 9.51959, -39.8936, 0.84", "-72.5651, 8.33135, -41.0596, 0.84", "-73.3103, 7.31079, -41.7873, 0.84", "-73.7983, 6.76854, -42.0818, 0.84", "-74.8786, 5.76554, -42.5357, 0.84", "-75.6717, 5.1311, -42.767, 0.84", "-76.9325, 4.23556, -43.02, 0.84", "-78.4925, 3.08795, -43.259, 0.84", "-80.1815, 1.69798, -43.4743, 0.84", "-81.2444, 0.639919, -43.5816, 0.84", "-82.4741, -0.815133, -43.7144, 0.84", "-84.3952, -3.49265, -44.0358, 0.84", "-85.895, -5.99208, -44.3729, 1.32", "-86.95, -8.05498, -44.6443, 0.6", "-87.9907, -10.5029, -44.9479, 1.2", "-88.712, -12.5714, -45.2268, 0.72", "-89.2389, -14.5508, -45.5356, 0.72", "-89.4721, -15.8461, -45.79, 0.72" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-0.87366, 35.9114, -0.0408348, 1.32", "-0.11258, 37.5243, 0.733007, 1.32", "1.6094, 41.4796, 2.36534, 0.96", "2.30326, 43.3201, 3.01551, 0.96", "2.87062, 45.2448, 3.57981, 1.2", "3.10836, 46.3443, 3.8394, 1.2", "3.26699, 47.3146, 4.03668, 1.2", "3.30306, 48.4027, 4.16595, 1.44", "3.06778, 49.896, 4.16795, 1.08", "2.52081, 51.7935, 4.16952, 1.08", "1.75868, 53.8579, 4.17088, 1.56", "1.51699, 54.4208, 4.17107, 1.56", "0.771854, 55.9449, 4.17072, 1.56", "-0.315571, 57.9051, 4.16796, 1.56", "-0.413173, 58.0563, 4.16733, 1.56" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-41.5466, 48.0849, 29.7763, 1.2", "-48.098, 54.9934, 33.1898, 1.2", "-53.1943, 61.9787, 38.4419, 1.2", "-59.9434, 68.7666, 41.6968, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-41.5466, 48.0849, 29.7763, 1.44", "-48.1682, 54.9562, 33.1251, 1.2", "-53.5684, 62.7424, 36.7491, 1.2", "-59.679, 70.2198, 39.8223, 1.2", "-66.6637, 77.0637, 42.3976, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "2.73629, -27.2334, 10.4432, 1.2", "2.39845, -31.252, 9.7317, 1.2", "2.24586, -33.6569, 9.30257, 1.2", "2.12959, -36.3641, 8.82883, 1.2", "2.06048, -38.7559, 8.4222, 1.2", "2.04954, -40.4602, 8.14594, 1.2", "2.05062, -41.7358, 7.93872, 1.2", "2.10853, -42.7002, 7.76487, 1.2", "2.22939, -43.9488, 7.5495, 1.2", "2.3412, -44.683, 7.45486, 1.2", "2.6105, -46.0746, 7.31394, 1.2", "2.79502, -47.0932, 7.2271, 1.2", "2.92088, -48.1867, 7.15748, 1.2", "2.92515, -49.0659, 7.1158, 1.2", "2.77278, -50.8084, 7.06028, 1.2", "2.66874, -51.5402, 7.04474, 1.2", "2.3959, -53.1031, 7.01702, 1.2", "1.92468, -55.7556, 6.98384, 1.68", "1.32821, -58.9832, 6.94226, 1.08", "0.814417, -61.8093, 6.9026, 0.72", "0.583511, -63.2533, 6.88127, 1.92", "0.0978234, -67.0242, 6.82613, 0.96", "-0.160579, -69.7993, 6.78839, 0.84", "-0.228726, -71.3872, 6.76728, 1.44", "-0.204296, -73.478, 6.74258, 1.08", "-0.10495, -75.4444, 6.72605, 1.08", "0.126571, -78.6057, 6.711, 0.72", "0.236845, -79.9557, 6.71222, 1.44", "0.364828, -81.8684, 6.71545, 1.44", "0.488299, -84.4384, 6.72129, 0.72", "0.516249, -85.4444, 6.72395, 1.2", "0.538475, -87.2907, 6.72907, 1.2", "0.565017, -88.7207, 6.73282, 1.56", "0.572767, -90.6924, 6.6842, 1.32", "0.534968, -92.918, 6.58466, 0.84", "0.536001, -95.5246, 6.42767, 1.56", "0.562112, -97.065, 6.32391, 1.56", "0.636752, -99.8116, 6.12682, 0.96", "0.721386, -102.344, 5.93673, 0.96", "0.771991, -104.296, 5.78843, 1.32", "0.750984, -106.692, 5.61697, 1.32", "0.589889, -110.015, 5.41315, 0.72", "0.493154, -111.137, 5.35483, 1.56", "0.343492, -112.253, 5.29744, 1.56", "-0.020923, -114.414, 5.19305, 0.96", "-0.458889, -116.277, 5.07539, 1.68", "-1.25638, -119.193, 4.79381, 1.08", "-1.91727, -121.555, 4.50482, 0.96", "-2.68886, -124.573, 4.09651, 1.44", "-3.06789, -126.206, 3.86198, 1.08", "-3.62126, -128.801, 3.44798, 0.84", "-4.07224, -131.133, 3.02956, 1.44", "-4.28331, -132.287, 2.80968, 1.44", "-4.64863, -134.566, 2.38451, 0.72", "-4.86995, -136.231, 2.06891, 0.72", "-5.2281, -139.231, 1.48881, 1.32", "-5.47808, -141.45, 1.02987, 0.96", "-5.62833, -142.401, 0.834027, 0.96", "-5.81561, -143.461, 0.585392, 0.96", "-6.12279, -144.818, 0.22311, 0.96", "-6.32644, -145.608, 0.0129333, 0.96", "-6.63828, -146.679, -0.305416, 0.96", "-6.98174, -147.801, -0.651919, 0.96", "-8.02291, -151.136, -1.68061, 1.44", "-9.2154, -154.977, -2.8226, 0.48", "-9.76308, -156.838, -3.33774, 1.56", "-10.8097, -160.651, -4.32667, 0.84", "-11.0663, -161.689, -4.60042, 0.84", "-11.4628, -163.529, -5.08804, 0.84", "-11.7267, -165.047, -5.45874, 0.84", "-11.9233, -166.541, -5.77327, 0.84", "-12.1041, -167.981, -6.03684, 0.84", "-12.5504, -171.884, -6.64463, 0.6", "-12.8147, -174.04, -7.00046, 1.08", "-13.2113, -177.035, -7.52508, 0.72", "-13.6224, -179.822, -8.02533, 0.6", "-13.852, -181.15, -8.25554, 1.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "2.73629, -27.2334, 10.4432, 1.92", "2.8956, -31.1791, 10.1749, 1.92", "3.07001, -35.4986, 9.88115, 1.92", "3.26671, -40.37, 9.54985, 2.28", "3.37115, -42.9564, 9.37396, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "9.53233, -29.0253, 9.33937, 1.32", "12.1665, -30.5048, 9.62058, 1.32", "13.9632, -31.3067, 9.85499, 1.32", "15.4357, -31.8694, 10.0699, 1.32", "17.0267, -32.428, 10.3197, 1.32", "19.1569, -33.1071, 10.6872, 1.32", "20.2807, -33.4655, 10.898, 1.32", "23.2199, -34.3623, 11.5706, 1.08", "24.1546, -34.6362, 11.8068, 1.08", "24.5416, -34.7532, 11.912, 1.08", "26.611, -35.4322, 12.5156, 1.44", "28.1914, -36.0802, 12.9734, 1.08", "28.9827, -36.4908, 13.202, 1.08", "30.859, -37.5989, 13.6969, 1.08", "32.0746, -38.3188, 13.9782, 0.84", "33.289, -39.0436, 14.2202, 0.84", "34.7496, -39.8392, 14.4588, 0.84", "35.9358, -40.4576, 14.6397, 0.84", "38.8213, -41.9331, 14.9448, 1.2", "40.4565, -42.7473, 15.0221, 0.84", "41.8595, -43.3666, 15.0037, 0.84", "44.6069, -44.4292, 14.8516, 0.96", "47.3125, -45.4423, 14.6661, 0.72", "50.3285, -46.5574, 14.3935, 1.2", "51.9927, -47.1818, 14.1752, 1.2", "53.7464, -47.7801, 13.86, 0.6", "54.5609, -48.0291, 13.6697, 0.6", "64.2198, -50.6371, 13.1898, 0.6", "73.2362, -54.9277, 12.1027, 0.6", "83.0037, -57.065, 11.6046, 0.6", "92.9763, -57.6579, 11.142, 0.6" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.53233, -29.0253, 9.33937, 1.8", "9.64567, -32.3664, 9.41443, 1.8", "9.87169, -35.7772, 9.4804, 1.8", "10.0761, -37.7706, 9.51282, 1.8", "10.1953, -38.7503, 9.50593, 1.8", "10.3814, -40.1666, 9.47451, 1.8", "10.5704, -41.4688, 9.47986, 1.8", "10.7843, -42.533, 9.50885, 1.8", "11.0807, -44.254, 9.60879, 1.8", "11.1988, -45.3927, 9.69139, 1.8", "11.3067, -46.9951, 9.8227, 1.8", "11.3958, -49.9596, 9.95725, 1.8", "11.4103, -51.4781, 9.99115, 1.8", "11.4093, -54.5295, 10.0069, 2.16", "11.4412, -56.8814, 9.95541, 1.92", "11.4835, -57.8592, 9.90715, 1.92", "11.745, -63.4318, 9.47965, 2.16", "11.8637, -65.6421, 9.21384, 2.16", "11.9829, -67.1388, 9.00036, 2.16", "12.3394, -70.043, 8.52613, 1.92", "12.6477, -71.875, 8.19909, 2.16" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.19844, 26.7208, 11.8327, 1.8", "2.62662, 29.5664, 12.9302, 1.8", "3.92656, 32.1566, 13.9291, 1.8", "5.28695, 34.8671, 14.9744, 1.8", "6.88688, 38.055, 16.2039, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.697, -43.1416, -0.0046052, 0.932377", "12.961, -57.7822, -0.0046052, 0.932377", "16.225, -72.4228, -0.0046052, 0.932377" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-77.2591, 28.3983, -20.5042, 1.68", "-77.5506, 28.3845, -20.5582, 1.68", "-80.9922, 28.4014, -21.1265, 1.2", "-83.7109, 28.5862, -21.5273, 1.68", "-84.9143, 28.7315, -21.6986, 1.68", "-86.6739, 29.0634, -21.9594, 1.2", "-89.757, 29.7833, -22.4618, 1.2", "-91.5043, 30.3235, -22.8604, 0.84", "-93.2246, 31.0854, -23.4415, 1.32", "-94.2154, 31.6177, -23.9184, 1.32", "-95.815, 32.5486, -24.8765, 0.84", "-96.4975, 32.9701, -25.3716, 0.84", "-98.8901, 34.5291, -27.3622, 0.84", "-100.701, 35.7011, -28.9426, 0.84", "-101.905, 36.4977, -29.9965, 0.84", "-102.837, 37.1089, -30.7427, 0.84", "-104.091, 37.8956, -31.6093, 0.84", "-105.353, 38.6941, -32.3228, 0.84", "-107.165, 39.9306, -33.1192, 0.84", "-108.42, 40.8232, -33.5759, 0.84", "-110.154, 42.0992, -34.1453, 0.84", "-112.315, 43.7865, -34.8608, 0.84", "-113.45, 44.7262, -35.2246, 0.84", "-115.756, 46.6885, -35.9998, 1.32", "-117.377, 48.0822, -36.5733, 1.32", "-119.55, 50.0727, -37.3586, 0.96", "-121.162, 51.6664, -37.9962, 0.96", "-122.077, 52.5532, -38.3569, 0.96", "-123.331, 53.6771, -38.8774, 0.96", "-124.441, 54.5288, -39.325, 0.96", "-127.483, 56.595, -40.4652, 0.72", "-128.595, 57.2403, -40.8486, 0.72", "-132.96, 59.3677, -42.1849, 1.08", "-134.217, 59.9057, -42.5408, 1.08", "-138.255, 61.6265, -43.4886, 1.08", "-140.344, 62.5278, -43.9737, 1.08", "-142.668, 63.6459, -44.4941, 1.08", "-144.702, 64.7728, -44.9519, 1.08", "-145.422, 65.2363, -45.1434, 1.08", "-148.507, 67.4434, -46.0604, 1.08", "-150.839, 69.2702, -46.8746, 1.08", "-155.236, 72.7427, -48.5471, 1.44", "-156.405, 73.6403, -49.0167, 1.44", "-159.248, 75.5569, -50.1508, 1.2", "-160.403, 76.1834, -50.5221, 1.2", "-162.018, 76.8504, -50.919, 1.2", "-166.639, 78.3924, -51.7125, 1.08", "-169.514, 79.2047, -52.1696, 1.08", "-173.072, 80.2039, -52.6683, 1.08", "-178.148, 81.5828, -53.3233, 0.72", "-181.46, 82.4578, -53.7578, 0.72", "-184.105, 83.14, -54.1023, 1.08", "-187.344, 83.8778, -54.5177, 0.84", "-189.203, 84.1616, -54.7937, 0.84", "-190.51, 84.2707, -55.0397, 0.84", "-192.065, 84.3357, -55.4051, 0.84", "-194.746, 84.2831, -55.9872, 0.84", "-198.582, 83.9406, -56.6354, 0.84", "-204.424, 82.9991, -57.3467, 0.6", "-205.262, 82.8255, -57.4516, 0.6" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-77.2591, 28.3983, -20.5042, 1.32", "-77.6495, 29.6203, -21.0382, 1.32", "-78.1998, 31.305, -21.8495, 0.84", "-78.8154, 33.3883, -22.9465, 1.44", "-79.7439, 36.3602, -24.7216, 1.08", "-80.3766, 38.07, -25.817, 1.08", "-80.6254, 38.6461, -26.2108, 1.08", "-81.6045, 40.5589, -27.7085, 1.56", "-82.7424, 42.2754, -29.2503, 0.96", "-83.6812, 43.3445, -30.326, 0.96", "-84.8484, 44.2096, -31.2234, 0.96", "-85.7869, 44.6642, -31.7287, 0.96", "-86.6838, 44.9667, -32.1069, 0.96", "-87.5705, 45.1448, -32.3835, 0.96", "-88.8363, 45.3671, -32.6888, 0.96", "-91.5237, 45.8859, -33.3025, 0.72", "-93.8772, 46.2877, -33.8716, 0.72", "-95.6287, 46.5674, -34.29, 0.72", "-96.9452, 46.7542, -34.615, 0.72", "-98.5768, 46.9757, -35.0359, 0.72", "-101.081, 47.3597, -35.7125, 0.72", "-103.771, 47.8446, -36.4353, 1.2" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-0.413173, 58.0563, 4.16733, 1.32", "-0.98325, 59.1693, 4.56976, 1.32", "-1.78686, 60.6007, 5.0252, 1.32", "-2.88096, 62.5557, 5.61411, 1.08", "-3.55678, 63.8157, 5.96996, 1.08", "-3.9408, 64.5873, 6.1691, 1.08", "-4.49574, 65.7804, 6.45109, 1.08", "-5.1191, 67.1025, 6.67538, 1.08", "-5.41235, 67.7168, 6.7628, 1.08", "-5.76087, 68.4879, 6.83393, 1.08", "-6.2283, 69.4707, 6.91765, 1.08", "-6.58944, 70.1178, 6.97941, 1.08", "-7.00305, 70.6569, 7.03977, 1.08", "-7.52111, 71.1026, 7.09762, 1.08", "-8.31462, 71.6734, 7.16902, 1.08", "-9.31398, 72.3598, 7.27299, 1.08", "-10.1959, 72.9895, 7.37822, 1.08", "-11.1394, 73.7722, 7.51046, 1.08", "-11.9852, 74.772, 7.51942, 0.96", "-12.2358, 75.4944, 7.39097, 0.96", "-12.3117, 76.6014, 7.07045, 0.96", "-12.2779, 77.5067, 6.78259, 0.96", "-12.2099, 78.2886, 6.5275, 0.96", "-11.8748, 81.2727, 5.53417, 0.72", "-11.7517, 82.5073, 5.09801, 0.72", "-11.7013, 83.5696, 4.71711, 0.72", "-11.693, 84.7077, 4.3398, 0.72", "-11.7439, 86.634, 3.81669, 0.72", "-11.7936, 87.5928, 3.62422, 0.72", "-11.8799, 88.4939, 3.53849, 0.72", "-12.051, 89.7922, 3.37229, 0.72", "-12.3266, 91.7945, 3.08613, 0.72", "-12.5802, 93.2268, 2.87437, 0.72", "-12.8663, 94.4228, 2.70051, 0.72", "-13.4252, 96.2601, 2.43745, 1.2", "-14.6109, 99.0648, 2.05973, 1.08", "-15.378, 100.3, 1.92229, 1.08", "-16.2343, 101.366, 1.83077, 1.08", "-16.8846, 102.1, 1.80163, 1.08", "-17.4905, 102.747, 1.77696, 0.72", "-19.223, 104.563, 1.68542, 1.2", "-21.082, 106.495, 1.63082, 1.08", "-22.6469, 108.163, 1.591, 1.44", "-23.4153, 109.108, 1.57243, 1.44", "-24.5724, 110.888, 1.54136, 1.2", "-25.2063, 112.152, 1.52613, 1.2", "-25.8715, 114.034, 1.53739, 1.08", "-26.3673, 116.21, 1.60478, 1.08", "-26.7401, 118.369, 1.75024, 0.96", "-27.0458, 120.534, 1.96079, 0.96", "-27.1697, 121.664, 2.11921, 1.2", "-27.2772, 123.02, 2.24345, 0.72", "-27.3404, 125.721, 2.30092, 1.2", "-27.3384, 126.437, 2.25716, 1.2", "-27.3996, 127.851, 2.09081, 1.2", "-27.5716, 129.244, 1.84929, 1.2", "-28.0957, 131.913, 1.23252, 1.2", "-28.4599, 133.104, 0.875849, 1.2", "-28.8057, 133.842, 0.614366, 1.2", "-29.8224, 135.313, 0.13348, 0.96", "-30.6706, 136.16, -0.0591405, 1.2", "-31.2316, 136.636, -0.107883, 1.2", "-32.1858, 137.392, -0.103742, 1.2", "-32.7832, 137.877, -0.100587, 1.2", "-34.2505, 139.184, -0.091393, 1.2", "-35.9036, 140.944, -0.0794076, 1.2", "-36.7813, 142.057, -0.072801, 1.2", "-37.3441, 142.853, -0.0689369, 1.2", "-37.9499, 143.841, -0.0649725, 1.2", "-38.4626, 144.797, -0.0618546, 1.2", "-39.2604, 146.641, -0.0574682, 0.84", "-39.9612, 148.509, -0.0328283, 1.32", "-40.9477, 151.3, 0.0298504, 0.84", "-41.4344, 152.702, 0.0731551, 0.84", "-41.8164, 153.8, 0.115487, 0.84", "-42.329, 155.295, 0.183276, 0.84", "-42.9523, 157.002, 0.308259, 0.84", "-43.355, 157.958, 0.401905, 0.84", "-43.9759, 159.09, 0.470701, 0.84", "-44.4336, 159.722, 0.479213, 0.84", "-45.3117, 160.681, 0.447157, 1.2", "-46.743, 161.974, 0.305219, 0.84", "-48.0793, 163.022, 0.145737, 0.84", "-49.6489, 164.09, -0.0267945, 1.2", "-50.9417, 164.725, -0.145439, 0.6", "-52.5182, 165.408, -0.295905, 0.6", "-54.1967, 166.008, -0.462355, 1.08", "-56.1272, 166.555, -0.661343, 0.48", "-57.231, 166.784, -0.722536, 0.48", "-60.4654, 167.27, -0.615443, 0.84", "-65.5525, 176.01, 0.572595, 0.84", "-70.5481, 184.887, 0.379738, 0.84", "-74.3377, 194.366, 0.0278418, 0.84", "-78.4042, 203.578, -1.61014, 0.84", "-82.1964, 212.928, -3.16269, 0.84" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-0.413173, 58.0563, 4.16733, 1.32", "-2.93851, 60.6691, 3.53508, 1.32", "-3.7974, 61.6136, 3.24546, 1.32", "-4.81361, 62.8658, 2.81324, 1.32", "-5.79017, 64.2897, 2.27512, 1.32", "-6.33146, 65.1583, 1.93893, 1.32", "-7.09121, 66.6761, 1.37714, 1.32", "-7.56317, 68.2527, 0.758485, 1.32", "-7.82969, 70.1231, 0.0542461, 1.56", "-7.75766, 71.983, -0.615673, 1.56", "-7.60674, 72.6451, -0.816278, 1.56", "-6.56758, 75.2619, -1.53534, 1.2", "-6.05923, 76.1408, -1.75156, 1.2", "-5.13006, 77.3467, -2.056, 1.2", "-3.5638, 78.9613, -2.52702, 1.08", "-2.3649, 80.0077, -2.88354, 1.08", "-1.60153, 80.602, -3.15757, 1.08", "-0.87069, 81.1421, -3.49626, 1.08", "-0.135018, 81.7656, -3.94253, 1.08", "1.19484, 83.1218, -4.99865, 1.8", "1.43717, 83.4613, -5.27494, 1.8", "2.29735, 85.3085, -6.74039, 1.32", "2.58448, 86.3873, -7.57187, 1.32", "2.63392, 87.7705, -8.59816, 1.08", "2.53115, 88.1688, -8.86983, 1.08", "2.00569, 89.1617, -9.44112, 1.08", "1.32903, 90.2076, -9.97884, 1.44", "0.760222, 90.9701, -10.3394, 1.44", "0.06023, 91.8919, -10.7852, 1.44", "-0.533595, 92.7023, -11.2226, 1.44", "-1.67595, 94.4991, -12.2809, 0.84", "-2.23909, 95.5765, -12.9294, 0.84", "-3.09672, 97.81, -14.3262, 1.44", "-3.44687, 99.0889, -14.9846, 1.44", "-3.80149, 101.014, -15.7962, 0.96", "-4.10502, 102.994, -16.608, 0.96", "-4.25602, 104.003, -17.0006, 0.96", "-4.38398, 105.503, -17.4673, 0.72", "-4.25018, 109.454, -18.2075, 1.2", "-4.05925, 111.162, -18.3346, 1.2" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-59.9434, 68.7666, 41.6968, 0.6", "-65.7831, 76.3297, 45.0812, 0.6", "-70.6938, 85.0909, 46.7618, 0.6", "-74.4001, 94.1201, 49.7055, 0.6", "-79.4408, 102.204, 53.2257, 0.6", "-83.4171, 110.631, 57.2994, 0.6", "-88.0369, 118.724, 61.3375, 0.6", "-93.1892, 127.078, 63.9888, 0.6", "-99.8645, 134.425, 66.0071, 0.6", "-106.326, 141.675, 68.8744, 0.6", "-111.128, 149.642, 72.9398, 0.6", "-116.555, 158.033, 74.8184, 0.6", "-120.672, 167.023, 77.2918, 0.6", "-125.214, 175.488, 80.6332, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-59.9434, 68.7666, 41.6968, 0.84", "-66.7693, 73.654, 47.2349, 0.6", "-72.9875, 80.2722, 51.667, 0.6", "-77.7285, 88.4603, 55.3695, 0.6", "-82.0256, 97.1371, 58.5122, 0.6", "-86.5038, 105.358, 62.4633, 0.6", "-93.0955, 111.897, 66.4453, 0.6", "-99.6727, 119.029, 69.3311, 0.6", "-105.938, 126.284, 72.5939, 0.6", "-111.993, 133.955, 75.3028, 0.6", "-117.633, 141.762, 78.4925, 0.6", "-123.566, 149.943, 79.5371, 0.6", "-128.827, 158.569, 80.7607, 0.6", "-133.411, 167.638, 81.6044, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-13.852, -181.15, -8.25554, 0.96", "-15.7132, -180.749, -8.25554, 0.96", "-17.1296, -180.444, -8.25554, 0.96", "-18.1362, -180.227, -8.25554, 0.72", "-18.8772, -180.067, -8.25554, 0.72", "-19.5063, -179.932, -8.25554, 0.72", "-20.5773, -179.701, -8.25554, 1.08" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-13.852, -181.15, -8.25554, 0.96", "-15.2072, -185.451, -9.35051, 0.96", "-15.7892, -186.979, -10.131, 0.96", "-16.3759, -188.733, -11.1531, 1.32", "-16.999, -191.02, -12.4267, 0.6", "-17.2848, -192.373, -13.2969, 0.6", "-17.543, -193.98, -14.3403, 1.2", "-18.1465, -199.085, -17.5779, 1.2", "-18.3398, -200.803, -18.7089, 1.56", "-18.5546, -203.258, -20.323, 0.96", "-18.7468, -207.698, -23.0974, 0.6", "-18.7684, -209.721, -24.2015, 1.08", "-18.794, -211.587, -25.151, 0.72", "-18.8629, -212.559, -25.5573, 0.72", "-19.0709, -213.905, -26.1179, 1.08", "-19.3786, -215.375, -26.6898, 0.72", "-19.8057, -217.067, -27.2056, 0.72", "-21.0689, -221.508, -28.558, 0.48", "-21.5557, -223.115, -29.0303, 1.56", "-22.4796, -225.921, -29.7616, 1.08", "-22.8876, -227.036, -30.0042, 0.72", "-23.7182, -229.195, -30.3648, 1.08", "-24.5147, -231.211, -30.661, 0.72", "-24.9061, -232.264, -30.7603, 0.72", "-25.8194, -234.822, -31.1013, 1.2", "-26.4931, -236.847, -31.445, 0.72", "-26.7828, -237.764, -31.6224, 0.72", "-27.4915, -240.508, -32.1929, 0.72", "-27.7458, -242.099, -32.7138, 1.08", "-27.8608, -243.48, -33.2208, 0.96", "-27.892, -244.513, -33.6088, 0.96", "-27.8808, -245.702, -34.0362, 0.96", "-27.8011, -247.902, -34.7464, 0.96", "-27.5135, -252.706, -36.0786, 1.2", "-27.2403, -256.047, -36.9942, 0.6", "-26.9744, -258.273, -37.5744, 0.6", "-26.7683, -259.531, -37.8606, 0.6", "-26.4729, -260.953, -38.1182, 0.6", "-26.2823, -261.934, -38.2039, 0.6", "-26.1428, -262.742, -38.1918, 0.6", "-25.9486, -263.876, -38.1904, 0.6", "-25.5453, -266.457, -38.3244, 0.6", "-25.4244, -267.34, -38.3989, 0.6", "-24.8091, -272.401, -38.9266, 0.96", "-24.5458, -274.819, -39.2009, 0.48", "-24.412, -276.345, -39.3806, 0.48", "-24.2001, -279.951, -39.805, 0.72", "-24.1145, -282.101, -40.0525, 0.48", "-24.0562, -283.809, -40.1726, 1.2", "-23.9998, -287.036, -40.2629, 0.84", "-24.0248, -288.992, -40.2376, 1.32", "-24.1562, -291.797, -40.1008, 0.84", "-24.3311, -293.948, -39.914, 1.44", "-24.9034, -298.769, -39.3849, 0.48", "-25.258, -301.249, -39.0736, 0.48", "-25.8749, -304.454, -38.6288, 0.48", "-26.352, -306.356, -38.3496, 0.48", "-26.9416, -308.104, -38.0769, 0.96", "-28.6866, -311.897, -37.4903, 0.48", "-29.08, -312.606, -37.3907, 0.84", "-30.4515, -314.766, -37.0349, 0.6", "-31.5093, -316.127, -36.7693, 0.84", "-32.7944, -317.541, -36.4689, 0.6", "-34.3134, -318.889, -36.1865, 1.2" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.37115, -42.9564, 9.37396, 0.96", "2.73308, -44.3962, 9.49526, 0.96", "2.23615, -45.9218, 9.58181, 0.96", "2.08935, -46.5054, 9.68959, 0.96", "1.81679, -47.5616, 9.99742, 0.96", "1.55019, -48.5196, 10.3501, 0.96", "1.22612, -49.6032, 10.8537, 0.96", "0.754851, -51.3007, 11.7873, 1.32", "0.148112, -53.4023, 13.0611, 0.84", "-0.234796, -54.7872, 13.9558, 0.84", "-0.474154, -55.7169, 14.6014, 0.84", "-1.0032, -57.7064, 16.105, 1.32", "-1.37675, -58.8719, 17.0775, 1.32", "-1.78802, -59.9173, 18.0211, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "3.37115, -42.9564, 9.37396, 1.44", "3.65425, -47.3187, 9.58995, 1.44", "3.84265, -50.4411, 9.72381, 1.44", "3.95684, -52.3098, 9.79082, 1.44", "4.16762, -56.2185, 9.90585, 1.8", "4.25548, -57.8476, 9.9538, 1.8", "4.34217, -59.4553, 10.0011, 1.8", "4.40238, -60.7968, 10.0013, 1.8", "4.49929, -63.5501, 10.0031, 1.56", "4.59717, -66.4851, 10.0075, 1.56" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "12.6477, -71.875, 8.19909, 1.56", "14.944, -74.4397, 8.19909, 1.56", "16.3259, -76.0099, 8.19909, 1.56", "18.038, -77.9503, 8.19909, 1.2", "19.0703, -79.1168, 8.19909, 1.2", "20.6166, -80.8501, 8.19909, 1.56", "22.8304, -83.3816, 8.19909, 1.2", "23.8308, -84.5695, 8.19909, 1.8", "24.8872, -85.8423, 8.19909, 1.8", "26.943, -88.3826, 8.22058, 1.08", "28.3907, -90.2125, 8.24863, 1.68", "30.0496, -92.3744, 8.26392, 1.32", "31.1259, -93.825, 8.26426, 1.32", "31.7869, -94.7318, 8.25907, 1.32", "33.334, -96.9397, 8.23382, 1.08", "34.3966, -98.547, 8.17955, 1.56", "35.9708, -101.096, 8.10126, 1.2", "36.5202, -102.025, 8.07543, 1.2", "37.041, -102.918, 8.06662, 1.2", "38.0594, -104.666, 8.07511, 1.68", "38.9106, -106.115, 8.14137, 1.2", "39.9966, -107.921, 8.30382, 0.96", "40.7157, -109.019, 8.44763, 0.96", "42.6316, -111.697, 8.83554, 0.84", "43.6089, -112.988, 9.04429, 0.84", "45.1412, -114.891, 9.38875, 1.44", "45.955, -115.859, 9.57841, 1.44", "47.4291, -117.591, 9.87799, 1.44", "48.2804, -118.649, 10.0515, 0.96", "49.2033, -119.888, 10.223, 1.44", "49.5296, -120.338, 10.275, 1.44", "50.3556, -121.511, 10.3656, 1.44", "50.9901, -122.458, 10.4319, 1.44", "52.1494, -124.234, 10.5334, 1.08", "53.2136, -125.813, 10.5989, 1.08", "53.856, -126.688, 10.6191, 1.08", "55.1443, -128.297, 10.6412, 1.44", "55.7838, -129.04, 10.6532, 1.44", "57.4302, -130.943, 10.7049, 0.84", "58.4924, -132.196, 10.7474, 1.56", "60.2784, -134.392, 10.8333, 1.08", "61.1421, -135.477, 10.8789, 1.32", "63.7363, -138.467, 11.0089, 1.08", "65.0527, -139.874, 11.0855, 1.08", "66.1954, -141.018, 11.1565, 1.08", "67.8848, -142.587, 11.2579, 1.08", "69.0429, -143.619, 11.2834, 1.08", "72.5412, -146.638, 11.2236, 1.44", "74.9356, -148.658, 11.0859, 1.08", "76.4158, -149.923, 10.9625, 1.08", "78.7803, -152.05, 10.7416, 1.08", "81.4648, -154.521, 10.4471, 0.72", "83.4919, -156.508, 10.1742, 1.32", "84.9073, -158.105, 9.90912, 0.84", "85.7742, -159.159, 9.69624, 0.84", "87.2216, -161.144, 9.29267, 1.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "12.6477, -71.875, 8.19909, 1.68", "12.7391, -74.5058, 8.26517, 1.68", "12.8808, -76.8295, 8.32388, 1.68", "12.9986, -78.1628, 8.35617, 1.68", "13.4453, -82.0111, 8.44276, 1.32", "13.788, -84.5695, 8.49409, 1.56", "14.1684, -87.8727, 8.55057, 1.56", "14.3102, -89.1172, 8.56329, 1.56", "14.4619, -91.0257, 8.57988, 1.56", "14.5608, -93.3221, 8.59596, 1.56", "14.6184, -96.5789, 8.61233, 1.2", "14.6327, -101.159, 8.62474, 1.56", "14.6195, -104.347, 8.65514, 1.2", "14.6162, -108.353, 8.72207, 1.2", "14.622, -110.675, 8.75123, 1.56", "14.6383, -113.352, 8.75475, 1.56", "14.6858, -115.512, 8.72327, 1.56", "14.856, -118.844, 8.69985, 1.2", "14.9892, -121.739, 8.69859, 1.56", "15.1061, -125.027, 8.71405, 1.44", "15.1405, -127.33, 8.73312, 1.44", "15.1221, -128.985, 8.75109, 1.44", "15.0154, -134.553, 8.8209, 1.08", "14.9599, -137.551, 8.78877, 1.08", "14.9431, -140.241, 8.70335, 1.44", "14.9595, -141.443, 8.64854, 1.44", "15.0198, -143.192, 8.52893, 1.44", "15.1554, -145.688, 8.2548, 1.44", "15.4589, -149.206, 7.6073, 1.32", "15.7757, -151.646, 7.09997, 1.32", "15.971, -152.941, 6.81236, 1.32", "16.1163, -154.013, 6.58405, 1.32", "16.3227, -155.899, 6.22395, 1.32", "16.4019, -157.024, 6.05347, 1.32", "16.4863, -158.345, 5.9065, 1.32", "16.6551, -161.118, 5.5864, 1.8", "16.7923, -163.785, 5.26193, 1.8", "16.903, -166.104, 5.04483, 1.8", "16.9914, -168.418, 4.88259, 1.8", "17.0804, -172.183, 4.69524, 1.56", "17.1079, -176.005, 4.56884, 1.56", "17.0898, -177.838, 4.53964, 1.56", "17.0177, -181.743, 4.5565, 1.32", "16.9688, -183.574, 4.59959, 1.32", "16.8381, -186.857, 4.74416, 1.8", "16.6677, -189.733, 4.9426, 1.8", "16.5277, -192.681, 5.17728, 1.56", "16.4923, -195.462, 5.35964, 1.56", "16.5416, -197.334, 5.43745, 1.56", "16.6256, -198.689, 5.49158, 1.56", "16.7281, -200.078, 5.52791, 1.56", "16.8701, -202.086, 5.54404, 1.56", "17.0075, -204.558, 5.5202, 1.2", "17.0732, -206.928, 5.436, 1.2", "17.0819, -208.56, 5.35142, 1.2", "17.0154, -211.605, 5.13951, 1.56", "16.9076, -214.533, 4.88164, 1.56", "16.8331, -216.357, 4.69662, 1.56", "16.7797, -218.759, 4.44325, 1.56", "16.7569, -221.044, 4.18342, 1.56", "16.7896, -225.55, 3.63988, 1.56", "16.9425, -230.731, 2.9716, 1.32", "17.1036, -235.047, 2.36902, 1.32", "17.1925, -237.371, 2.03893, 0.84", "17.2819, -239.759, 1.70228, 1.32", "17.3971, -242.593, 1.29904, 1.08", "17.5493, -245.252, 0.894805, 1.44", "17.7106, -248.057, 0.422057, 1.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.88688, 38.055, 16.2039, 1.2", "5.20081, 40.9767, 16.9623, 1.2", "4.56512, 42.3103, 17.3838, 1.2", "4.097, 43.4728, 17.7901, 1.2", "3.36826, 45.856, 18.7841, 1.2", "3.08431, 47.1396, 19.3544, 1.2", "2.90129, 48.3733, 19.9142, 1.08", "2.84833, 50.3386, 20.8839, 1.56", "2.89326, 51.6603, 21.5417, 1.56", "3.15546, 54.5744, 22.9301, 1.2", "3.41205, 56.4505, 23.7465, 0.96", "3.67969, 58.5051, 24.5285, 1.32", "3.76162, 59.4424, 24.8567, 1.32", "3.80352, 60.4867, 25.1782, 1.32", "3.82367, 62.0435, 25.5733, 1.32", "3.81511, 62.9167, 25.7585, 1.32", "3.81927, 64.6204, 26.1265, 1.2", "3.87832, 66.3921, 26.5603, 1.56", "3.93555, 67.5753, 26.8682, 1.2", "4.06689, 69.3976, 27.3825, 1.68", "4.3603, 71.8707, 28.1359, 1.2", "4.54288, 72.8602, 28.4555, 1.44", "5.02966, 74.5008, 28.9977, 1.08" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.88688, 38.055, 16.2039, 1.44", "6.84667, 41.7454, 15.8367, 1.44", "6.82824, 43.4375, 15.6684, 1.44", "6.80692, 45.3937, 15.4737, 1.44", "6.7824, 47.6449, 15.2498, 1.44", "6.7527, 50.3704, 14.9786, 1.8", "6.72758, 52.6761, 14.7492, 1.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-1.78802, -59.9173, 18.0211, 0.96", "-2.7382, -63.5736, 18.7942, 0.96", "-3.39613, -65.8196, 19.1948, 0.96", "-3.80662, -67.2734, 19.4139, 0.96", "-4.12209, -68.3761, 19.5726, 0.96", "-4.47846, -69.6293, 19.7371, 0.96", "-5.05753, -71.8975, 20.0144, 0.6", "-5.27057, -72.5937, 20.0763, 0.6", "-5.66602, -73.8333, 20.214, 1.08", "-6.52751, -76.4195, 20.591, 0.72", "-7.19536, -78.3596, 20.9123, 0.72", "-8.267, -81.3514, 21.4265, 0.72", "-9.37861, -84.2066, 21.9175, 1.2", "-10.0532, -85.7535, 22.1772, 1.08", "-10.9776, -87.5884, 22.4723, 0.48", "-12.1614, -89.7168, 22.7722, 0.48", "-13.5577, -92.0576, 23.057, 1.44", "-14.6484, -93.8248, 23.2163, 0.84", "-15.2103, -94.8299, 23.2742, 1.08", "-16.0522, -96.4567, 23.3262, 1.08", "-17.1065, -98.73, 23.3684, 1.44", "-17.819, -100.427, 23.4145, 0.84", "-18.278, -101.68, 23.4948, 1.32", "-18.921, -103.794, 23.6887, 0.72", "-19.2265, -104.846, 23.8059, 0.72", "-19.5228, -105.784, 23.9432, 0.72", "-20.142, -107.138, 24.201, 0.72", "-21.2124, -108.576, 24.5451, 1.08", "-22.2815, -109.738, 24.8632, 0.6", "-23.6982, -110.921, 25.2356, 1.08", "-24.8039, -111.667, 25.5024, 0.96", "-26.7155, -112.66, 25.9016, 0.84", "-28.7408, -113.363, 26.2233, 0.84", "-32.3475, -122.907, 26.7531, 0.84" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-1.78802, -59.9173, 18.0211, 0.84", "-2.59208, -61.5518, 18.9742, 0.84", "-3.16728, -62.7206, 19.6287, 0.84", "-3.42425, -63.2787, 19.915, 0.84", "-4.29946, -65.3999, 20.9327, 0.48", "-4.74734, -66.5766, 21.4598, 0.48", "-5.47249, -68.6177, 22.2906, 0.84", "-5.88607, -69.9116, 22.7291, 0.84", "-6.27144, -71.1448, 23.0762, 0.84", "-7.07669, -73.9092, 23.725, 0.84", "-7.35025, -74.958, 23.9187, 0.84", "-7.77487, -76.8462, 24.2159, 0.6", "-8.04674, -78.0517, 24.3748, 1.08", "-8.4742, -79.6436, 24.5715, 1.08", "-8.83697, -80.7957, 24.7173, 1.56", "-9.34327, -82.1652, 24.8753, 1.56", "-9.76618, -83.2399, 25.0119, 1.08", "-10.5647, -85.1577, 25.2883, 0.72", "-11.0986, -86.38, 25.4818, 1.32", "-11.5786, -87.4113, 25.6599, 1.32", "-12.3124, -88.8411, 25.9212, 0.72", "-13.1206, -90.3155, 26.1861, 0.72", "-17.748, -99.039, 28.667, 0.72", "-21.226, -108.222, 31.4315, 0.72", "-25.1898, -116.901, 34.9789, 0.72", "-29.1635, -125.592, 38.4901, 0.72", "-32.032, -134.402, 42.719, 0.72", "-33.3067, -143.095, 47.8631, 0.72", "-34.3507, -152.56, 51.5565, 0.72", "-34.6224, -162.651, 53.2898, 0.72", "-34.5865, -172.593, 55.7217, 0.72", "-35.5066, -182.611, 57.6245, 0.72", "-38.1755, -192.484, 57.9355, 0.72", "-41.1065, -202.284, 57.954, 0.72", "-42.5561, -212.391, 58.769, 0.72", "-43.227, -222.44, 60.6246, 0.72" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "4.59717, -66.4851, 10.0075, 1.08", "5.93558, -67.4393, 5.55454, 1.08", "6.95332, -68.3325, 2.55686, 1.08", "7.24266, -68.6652, 1.72079, 1.08", "7.45594, -69.0313, 0.964861, 1.08", "7.57283, -69.2797, 0.521114, 1.08", "7.99642, -70.395, -1.27575, 1.44", "8.2003, -71.3331, -2.4996, 1.44", "8.29453, -72.4317, -3.7647, 1.44", "8.33066, -74.2031, -5.67597, 1.44", "8.30935, -74.892, -6.3512, 1.44", "8.18892, -76.7255, -7.93063, 1.2", "7.87588, -79.6827, -10.1449, 1.2", "7.64674, -81.7022, -11.5667, 1.68", "7.37164, -83.8834, -13.1022, 0.72", "7.1337, -85.5247, -14.2172, 0.72", "6.77938, -87.3268, -15.5481, 1.44", "6.44365, -88.6099, -16.584, 1.44", "5.63717, -90.9395, -18.9717, 0.96", "4.72043, -92.9882, -21.9539, 1.68", "4.36476, -93.6306, -23.1686, 1.68", "3.55388, -94.9323, -26.1984, 1.68", "2.93587, -95.8639, -28.6551, 1.68", "1.98172, -97.3049, -32.5767, 1.68", "0.93588, -98.916, -36.8036, 1.68", "0.156426, -100.149, -39.8822, 1.2", "-0.631722, -101.505, -42.9603, 0.84", "-0.95841, -102.169, -44.2181, 1.44", "-1.25234, -102.867, -45.3109, 0.72", "-1.92835, -104.617, -47.5993, 1.32", "-2.96686, -107.554, -50.9117, 0.6", "-3.20649, -108.289, -51.6853, 0.6", "-3.54152, -109.294, -52.6897, 0.96", "-3.83069, -110.137, -53.5694, 0.96", "-4.94769, -113.45, -57.2815, 0.6", "-5.26947, -114.664, -58.6298, 1.2" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "4.59717, -66.4851, 10.0075, 1.32", "4.60731, -66.6178, 9.98664, 1.32", "4.96451, -70.0996, 9.45924, 1.32", "5.45599, -74.1474, 8.88164, 1.68", "5.78345, -76.725, 8.5468, 2.04", "6.06846, -79.0098, 8.2744, 1.68", "6.29954, -80.8963, 8.06892, 1.68", "6.44363, -82.0372, 7.96692, 1.68", "6.64269, -83.5622, 7.86698, 1.68", "6.91148, -85.8805, 7.76372, 2.04", "7.0347, -87.2147, 7.75026, 1.68", "7.14555, -88.9518, 7.77001, 1.68", "7.24719, -90.8213, 7.83628, 1.68", "7.37851, -92.9413, 7.94121, 1.56", "7.52564, -94.9037, 8.05212, 1.56", "7.88006, -98.8445, 8.28795, 1.56", "8.20833, -102.052, 8.48508, 1.8", "8.78731, -107.179, 8.80052, 1.56", "9.38886, -112.309, 9.09657, 1.44", "9.64264, -114.491, 9.21211, 1.92", "9.93627, -117.135, 9.33054, 1.8", "10.1295, -119.173, 9.40016, 1.68", "10.3018, -121.72, 9.47191, 2.04", "10.6625, -132.14, 9.51552, 1.8", "10.6742, -135.319, 9.46846, 1.8", "10.6489, -137.043, 9.42048, 1.68", "10.5952, -138.671, 9.35505, 1.68", "10.374, -143.179, 9.11808, 1.68", "10.2075, -145.633, 8.893, 1.68", "10.0444, -147.69, 8.6176, 1.68", "9.84829, -150.399, 8.23388, 1.32", "9.6492, -153.648, 7.7762, 1.32", "9.47771, -157.036, 7.31086, 1.32", "9.28453, -162.438, 6.60014, 1.32", "9.19378, -166.095, 6.16989, 1.8", "9.13637, -168.534, 5.91732, 1.8", "9.09406, -170.494, 5.74896, 1.8", "9.06738, -172.218, 5.6457, 1.8", "9.02956, -175.42, 5.57992, 1.68", "9.00344, -180.02, 5.57196, 2.04", "9.0264, -183.646, 5.50564, 2.04", "9.06338, -186.622, 5.43066, 1.8", "9.14393, -190.403, 5.31844, 1.56", "9.25932, -194.239, 5.1939, 1.92", "9.37594, -199.109, 5.02345, 1.56", "9.43694, -202.9, 4.86536, 1.32", "9.47582, -207.178, 4.63073, 1.32", "9.47657, -209.21, 4.52419, 1.32", "9.47601, -210.986, 4.44128, 1.2", "9.43493, -215.097, 4.30106, 1.68", "9.37267, -218.894, 4.34893, 1.68", "9.28689, -221.335, 4.41009, 1.68", "9.20205, -223.414, 4.45479, 1.68", "9.08276, -225.728, 4.5142, 1.68", "9.04812, -226.711, 4.54603, 1.68", "9.23023, -233.007, 4.83797, 2.16" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "87.2216, -161.144, 9.29267, 0.84", "89.696, -160.757, 10.1616, 0.84", "91.6379, -160.419, 10.914, 0.84", "93.1514, -160.154, 11.551, 1.32", "95.6331, -159.74, 12.6995, 1.32", "97.5833, -159.426, 13.6777, 1.68", "100.012, -158.978, 14.9571, 1.2", "101.278, -158.742, 15.7214, 0.96", "102.913, -158.351, 16.8367, 1.44", "104.857, -157.739, 18.2927, 0.84", "105.764, -157.345, 19.0712, 0.84", "106.635, -156.834, 19.9755, 0.84", "107.187, -156.347, 20.7514, 0.84", "107.789, -155.649, 21.7442, 0.84", "108.263, -154.847, 22.7486, 0.84", "108.701, -153.732, 23.9994, 1.08", "109.145, -152.404, 25.4755, 0.72", "109.686, -150.77, 27.4821, 1.2", "118.335, -147.448, 31.3158, 1.2", "126.811, -142.879, 34.1934, 1.2", "135.033, -137.333, 35.9696, 1.2", "141.747, -130.488, 39.1793, 1.2", "149.514, -124.945, 42.4082, 1.2", "156.619, -118.524, 45.6145, 1.2", "164.281, -112.062, 46.8551, 1.2", "171.659, -105.406, 48.7027, 1.2", "178.083, -97.9376, 51.0781, 1.2", "183.944, -89.6982, 52.095, 1.2", "188.898, -81.0815, 54.2816, 1.2", "192.501, -71.633, 55.7123, 1.2", "196.107, -62.2035, 57.2511, 1.2", "199.774, -52.7333, 58.3412, 1.2", "204.842, -44.2071, 60.6045, 1.2", "209.766, -35.4894, 62.4542, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "87.2216, -161.144, 9.29267, 0.84", "88.3658, -163.484, 9.67741, 0.84", "89.6091, -165.924, 10.0601, 0.6", "90.4162, -167.528, 10.2892, 1.32", "91.6855, -170.05, 10.6494, 0.84", "92.5064, -171.681, 10.8824, 0.72", "93.1602, -172.98, 11.068, 1.08", "93.9762, -174.679, 11.2865, 0.72", "94.7362, -176.299, 11.5651, 1.2", "100.126, -184.893, 12.3661, 1.2", "105.894, -192.944, 14.6105, 1.2", "111.512, -200.354, 18.6332, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "17.7106, -248.057, 0.422057, 0.96", "19.6398, -250.334, 1.80307, 0.96", "20.7404, -251.835, 2.71859, 0.96", "22.7284, -254.728, 4.50913, 1.44", "24.207, -256.819, 5.8925, 0.96", "25.3628, -258.465, 6.98302, 0.96", "26.307, -259.85, 7.88028, 0.96", "27.1123, -261.118, 8.6807, 0.96", "28.0499, -262.732, 9.74407, 1.08", "29.1936, -264.954, 11.1469, 1.08", "29.7551, -266.066, 11.8191, 1.08", "30.2752, -267.025, 12.3653, 1.08", "31.512, -269.349, 13.7717, 1.08", "32.5797, -271.675, 15.2146, 0.84", "33.202, -273.606, 16.4182, 1.2", "33.4624, -275.132, 17.3374, 1.2", "33.5846, -276.389, 18.1041, 1.2", "33.754, -279.462, 20.024, 0.96", "33.7756, -281.077, 21.035, 0.96", "33.8561, -282.573, 21.9552, 0.96", "33.993, -284.49, 23.083, 0.72", "34.0609, -285.689, 23.7387, 0.72", "34.2377, -287.42, 24.6344, 0.72", "34.735, -289.605, 25.608, 1.2", "35.8143, -292.83, 27.149, 0.84", "36.3792, -294.169, 27.8315, 0.84", "37.0078, -295.579, 28.615, 0.84", "40.4291, -303.771, 33.5573, 0.84" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "17.7106, -248.057, 0.422057, 1.32", "18.2304, -251.584, 0.585961, 1.32", "18.4946, -253.77, 0.65507, 1.32", "18.7014, -255.898, 0.704359, 1.32", "18.8077, -257.484, 0.73091, 1.32", "19.0467, -260.86, 0.774474, 1.68", "19.2961, -263.679, 0.804841, 1.68", "19.4922, -265.743, 0.743847, 1.68", "19.6893, -267.688, 0.665101, 1.68", "20.0267, -270.964, 0.505899, 1.2", "20.2544, -273.12, 0.382855, 1.2", "20.6483, -276.376, 0.17601, 1.2", "21.1723, -280.078, -0.116057, 1.56", "21.4655, -281.939, -0.28148, 1.56", "21.7336, -283.543, -0.434431, 1.56", "22.0407, -285.231, -0.60233, 1.56", "22.5263, -288.16, -0.767192, 1.44", "23.0047, -291.127, -0.895331, 1.44", "23.2441, -292.474, -0.910882, 1.44", "23.5481, -294.109, -0.91498, 1.44", "23.924, -295.987, -0.885717, 1.44", "24.6074, -299.032, -0.727913, 0.96" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.02966, 74.5008, 28.9977, 1.44", "3.68974, 72.8604, 29.1099, 1.44", "3.16371, 72.2978, 29.1837, 1.2", "2.03095, 71.3126, 29.3421, 0.96", "1.01165, 70.426, 29.4846, 0.96", "0.30927, 69.8151, 29.5828, 0.96", "-0.438268, 69.1649, 29.6873, 0.96", "-1.19097, 68.4347, 29.7004, 0.96", "-2.62092, 67.1886, 29.7751, 1.2", "-10.0242, 60.3441, 28.9995, 1.2", "-16.6801, 52.6946, 29.0544, 1.2", "-23.3472, 45.1268, 28.0353, 1.2" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.02966, 74.5008, 28.9977, 0.96", "5.89556, 73.0191, 29.2408, 0.96", "6.89185, 71.3144, 29.5206, 0.96", "7.63286, 70.0464, 29.7287, 1.2", "8.04311, 69.3445, 29.8439, 1.2", "9.39708, 67.0277, 30.224, 0.84", "10.004, 65.9892, 30.3945, 0.84" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.72758, 52.6761, 14.7492, 1.44", "7.57813, 55.0121, 15.154, 1.44", "8.22485, 56.8467, 15.4502, 1.44", "8.55196, 57.8078, 15.6037, 1.44", "9.28225, 60.042, 15.9969, 1.44", "10.162, 62.6865, 16.5191, 1.32", "10.7195, 64.2026, 16.774, 1.32", "11.4359, 65.8688, 16.9961, 1.32", "12.0885, 67.2138, 17.1506, 1.56", "12.7888, 68.492, 17.263, 1.56", "13.8103, 70.1375, 17.3642, 1.32", "15.7168, 72.8599, 17.5043, 1.32", "16.9396, 74.428, 17.5742, 1.32", "18.0082, 75.6898, 17.5525, 1.32", "19.2065, 77.0383, 17.4536, 1.56", "19.8826, 77.8139, 17.3496, 1.56", "21.5233, 79.7461, 17.0166, 1.2", "22.3946, 80.7958, 16.8412, 1.2", "24.0966, 82.8892, 16.4509, 1.44", "24.9955, 84.0355, 16.1962, 1.92", "26.7224, 86.4209, 15.7528, 1.56", "27.7927, 88.0067, 15.5124, 1.32", "29.334, 90.4965, 15.2087, 1.32", "30.5503, 92.6066, 15.0789, 1.32", "31.7377, 94.813, 15.101, 1.56", "33.279, 98.0283, 15.2814, 1.2", "33.7434, 99.1692, 15.4106, 1.2", "33.9888, 99.9832, 15.5332, 1.2", "34.2029, 101.081, 15.7483, 0.96", "34.292, 101.79, 15.9135, 1.32", "34.4415, 103.874, 16.4347, 0.96", "34.4783, 104.898, 16.6252, 0.96", "34.5134, 105.938, 16.7926, 0.96", "34.6484, 107.908, 17.1175, 1.32", "34.7575, 108.868, 17.2807, 1.32", "35.0195, 110.319, 17.5733, 0.84", "35.4155, 111.81, 17.9433, 1.08", "35.8984, 113.26, 18.4015, 1.08", "36.6864, 115.313, 19.1495, 0.84", "37.0939, 116.309, 19.4769, 1.2", "37.5802, 117.412, 19.873, 0.84", "38.1492, 118.587, 20.3401, 1.2", "39.0442, 120.356, 21.1006, 0.96", "39.3402, 120.968, 21.3649, 0.96", "40.4743, 123.855, 22.3569, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.72758, 52.6761, 14.7492, 1.08", "8.20811, 54.8184, 14.7985, 1.08", "9.97361, 57.4833, 14.8462, 1.08", "10.5067, 58.3042, 14.8583, 1.08", "11.0167, 59.106, 14.8278, 1.08", "11.922, 60.5294, 14.7736, 1.32", "13.2669, 62.644, 14.6932, 0.96", "14.1151, 63.9653, 14.6041, 1.44", "14.6896, 64.8806, 14.5212, 1.44", "15.8318, 66.7743, 14.3187, 1.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "9.23023, -233.007, 4.83797, 1.08", "8.83763, -235.833, 5.69238, 1.08", "8.56495, -237.692, 6.26338, 1.08", "8.10444, -240.343, 7.05879, 1.08", "7.80599, -241.97, 7.54279, 1.08", "7.42183, -243.863, 8.10716, 1.08", "7.1312, -245.16, 8.51607, 1.08", "6.91837, -245.98, 8.76964, 1.08", "6.51818, -247.189, 9.13668, 1.08", "5.6996, -249.28, 9.68867, 0.84", "5.23276, -250.351, 9.95473, 0.84", "4.51113, -251.869, 10.2757, 1.32", "3.46678, -253.927, 10.6377, 1.32", "1.97517, -256.838, 11.079, 0.96", "0.984122, -258.828, 11.3197, 0.96", "0.305076, -260.284, 11.4839, 1.2", "-0.88371, -263.154, 11.8005, 1.2", "-1.59127, -265.116, 12.0293, 1.44", "-2.31572, -267.45, 12.3505, 1.2", "-2.92846, -269.907, 12.7141, 1.2", "-3.64803, -273.169, 13.2254, 1.2", "-3.87604, -274.349, 13.4147, 1.2", "-4.10414, -276.27, 13.7871, 1.2", "-4.15913, -277.346, 14.0308, 1.2" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "9.23023, -233.007, 4.83797, 0.96", "10.0845, -237.035, 3.6355, 0.96", "10.5993, -239.605, 2.88565, 1.32", "10.7185, -240.64, 2.68463, 1.32", "10.8665, -241.924, 2.43531, 1.32", "11.1989, -244.808, 1.87508, 1.56", "11.4455, -246.947, 1.45951, 1.56", "11.5918, -248.529, 1.18432, 1.56", "11.8534, -252.901, 0.868041, 1.92" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "24.6074, -299.032, -0.727913, 0.96", "24.386, -300.804, -0.057056, 0.96", "24.1481, -302.398, 0.495537, 0.96", "23.8571, -303.987, 1.0449, 1.44", "23.1783, -307.507, 2.30193, 1.08", "22.874, -309.147, 2.87291, 1.08", "22.4769, -311.653, 3.70738, 1.08", "22.3521, -312.831, 4.10058, 1.08", "22.1513, -315.878, 5.07649, 0.84", "22.0822, -318.389, 5.79903, 0.84", "22.0975, -319.982, 6.15772, 0.84", "22.1914, -321.777, 6.5407, 0.84", "22.3325, -323.459, 6.87198, 0.84", "22.4424, -324.838, 7.09721, 0.84", "22.4915, -325.817, 7.18934, 0.84", "22.5054, -326.939, 7.25522, 0.84", "22.3958, -328.431, 7.34492, 0.84", "22.1295, -329.728, 7.41248, 0.84", "21.7692, -330.823, 7.44768, 0.84", "20.968, -332.728, 7.52563, 0.6", "18.2756, -342.574, 8.21536, 0.6" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "24.6074, -299.032, -0.727913, 0.84", "24.7088, -301.1, -0.828397, 0.84", "24.7636, -302.585, -0.930864, 0.84", "24.8026, -304.166, -1.08775, 0.84", "24.8107, -307.431, -1.4731, 1.2", "24.7937, -308.192, -1.57262, 1.2", "24.6606, -311.579, -2.04698, 0.96", "24.491, -314.425, -2.5079, 1.32", "24.2943, -318.036, -3.10509, 1.08", "24.2307, -320.071, -3.45774, 1.08", "24.2147, -321.571, -3.71796, 1.08", "24.2644, -322.691, -3.90302, 1.08", "24.3333, -323.457, -4.01616, 1.08", "24.6922, -326.464, -4.41865, 0.84", "25.3009, -330.357, -4.87926, 1.2", "25.5093, -331.455, -4.99957, 1.2", "26.7161, -337.146, -5.58828, 0.84", "27.4101, -340.353, -5.90872, 2.04" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "10.004, 65.9892, 30.3945, 0.72", "9.41288, 64.7307, 30.1098, 0.72", "8.90302, 63.6453, 29.8643, 0.48", "8.28841, 62.3368, 29.5683, 0.96", "7.85268, 61.4092, 29.3585, 0.96", "3.38983, 52.7602, 26.3781, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "10.004, 65.9892, 30.3945, 0.72", "10.4317, 64.4515, 30.5313, 0.72", "10.6509, 63.3692, 30.6428, 1.08", "10.9799, 61.5046, 30.7603, 0.72", "11.1307, 60.1579, 30.7563, 0.72", "11.2371, 58.2406, 30.6251, 0.72", "11.3321, 56.6681, 30.4666, 1.2", "11.325, 55.9227, 30.3836, 1.2", "11.2229, 54.3053, 30.1768, 0.84", "11.0201, 52.3015, 29.8564, 0.84", "10.8788, 50.6747, 29.4202, 1.32", "10.7996, 49.6239, 28.9925, 1.08", "10.1135, 39.472, 27.7953, 1.08", "8.84008, 29.3475, 26.8941, 1.08", "7.30736, 19.5486, 24.3922, 1.08" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "40.4743, 123.855, 22.3569, 0.6", "41.0856, 124.818, 22.7187, 0.6", "41.7098, 125.8, 23.0882, 0.6", "42.5199, 127.076, 23.5678, 0.6", "43.8287, 129.136, 24.3425, 0.6", "44.6776, 130.472, 24.845, 0.6", "45.5413, 131.832, 25.3563, 0.48", "49.4754, 141.15, 26.7295, 0.48", "54.0551, 150.246, 27.2428, 0.48", "58.9293, 158.887, 29.5193, 0.48", "65.5028, 166.538, 30.5512, 0.48", "71.868, 174.442, 30.7035, 0.48", "78.7171, 181.817, 31.8556, 0.48", "83.9101, 190.576, 31.7576, 0.48", "87.2009, 200.069, 29.917, 0.48", "89.294, 210.066, 29.2166, 0.48" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "40.4743, 123.855, 22.3569, 0.84", "41.8025, 126.427, 22.2445, 0.84", "42.552, 127.878, 22.1811, 0.84", "43.3509, 129.425, 22.1135, 0.36", "44.11, 130.895, 22.0493, 0.6", "44.7236, 132.083, 21.9973, 0.6", "45.8156, 134.197, 21.905, 0.6", "50.9274, 142.833, 20.2032, 0.6", "55.5559, 151.554, 17.7156, 0.6", "61.3344, 159.448, 15.0147, 0.6", "66.6013, 167.633, 12.1008, 0.6", "70.0983, 176.273, 8.01262, 0.6", "73.4818, 185.715, 6.08938, 0.6", "77.7302, 194.941, 5.12077, 0.6", "81.669, 204.329, 4.34589, 0.6", "84.0681, 214.022, 2.15074, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "15.8318, 66.7743, 14.3187, 1.08", "15.125, 68.5809, 14.6534, 1.08", "14.6695, 69.4433, 14.8925, 1.08", "14.0073, 70.6972, 15.2401, 1.08", "13.272, 72.0895, 15.626, 0.96", "12.2063, 74.1072, 16.1853, 0.96", "11.3254, 75.775, 16.6477, 0.84", "10.0489, 77.7684, 17.396, 1.08", "4.39266, 86.1496, 18.4672, 1.08", "-0.108503, 95.1789, 19.93, 1.08" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "15.8318, 66.7743, 14.3187, 0.96", "17.527, 67.9269, 13.7802, 0.96", "18.2955, 68.4332, 13.4984, 0.96", "19.5064, 69.2629, 13.0196, 0.96", "20.9379, 70.3023, 12.3187, 0.84", "21.6889, 70.86, 11.9214, 0.84", "22.8866, 71.7483, 11.2565, 0.84", "23.442, 72.1306, 10.9121, 0.84", "24.34, 72.7166, 10.338, 0.84", "26.1902, 73.7774, 9.2205, 1.2", "26.5452, 73.947, 9.04409, 1.2", "27.5119, 74.3174, 8.66341, 1.2", "29.0116, 74.7392, 8.24679, 1.2", "29.4921, 74.8359, 8.15755, 1.2", "31.3797, 75.124, 7.89905, 1.2", "32.8749, 75.3322, 7.75194, 0.96", "34.3567, 75.5676, 7.60823, 0.96", "36.0478, 75.8087, 7.45594, 0.96", "37.7258, 76.0422, 7.30569, 1.32", "40.2561, 76.4185, 7.07112, 0.84", "42.447, 76.7644, 6.8555, 1.2", "43.981, 77.0339, 6.77072, 1.2", "45.4678, 77.3487, 6.76205, 0.96", "46.7154, 77.6656, 6.84372, 1.2", "47.6443, 77.919, 6.98177, 1.2", "48.256, 78.0947, 7.12149, 1.2", "51.3714, 79.1067, 8.02382, 1.2", "52.613, 79.5877, 8.41639, 1.2", "53.656, 80.0774, 8.75789, 1.2", "55.6746, 81.0332, 9.41735, 1.08", "56.5881, 81.4282, 9.69207, 1.44", "58.3289, 82.0494, 10.0126, 1.08", "59.6723, 82.4402, 10.0439, 1.08", "60.6968, 82.7341, 9.97281, 1.08", "62.4256, 83.292, 9.72417, 1.08", "64.3362, 83.9359, 9.32531, 1.44", "67.3009, 84.9439, 8.5424, 1.08", "69.236, 85.6723, 7.93152, 0.84", "70.691, 86.3185, 7.44556, 1.2", "72.1547, 87.0318, 6.93733, 1.2", "73.7836, 87.9456, 6.29564, 0.84", "74.9735, 88.6774, 5.81348, 1.08", "77.5291, 90.2417, 4.85836, 0.72", "80.0567, 91.6751, 3.89097, 0.72", "81.6661, 92.4412, 3.27939, 1.2", "84.0395, 93.4566, 2.39031, 0.72", "84.8762, 93.7926, 2.097, 0.72", "86.628, 94.4385, 1.5473, 0.96", "88.4771, 95.0565, 1.02242, 0.96", "91.7493, 96.2585, 0.226786, 0.72", "93.4316, 97.0223, -0.113623, 0.6", "94.7861, 97.7247, -0.329816, 0.6", "96.5264, 98.7892, -0.601276, 1.2", "97.0436, 99.1642, -0.67572, 1.2", "99.1556, 100.84, -0.9052, 0.72", "100.142, 101.722, -0.99683, 0.72", "100.832, 102.323, -1.05812, 0.72", "102.481, 103.824, -1.26907, 0.6", "102.751, 104.069, -1.30914, 0.6", "104.117, 105.286, -1.60359, 0.96", "105.034, 106.127, -1.90551, 0.72", "105.631, 106.706, -2.14735, 0.96", "107.936, 109.08, -3.21165, 0.72", "109.264, 110.504, -3.8847, 0.72", "111.028, 112.376, -4.8559, 1.2", "112.893, 114.277, -5.8382, 0.72", "114.175, 115.487, -6.44267, 0.72", "115.769, 116.868, -7.12046, 0.72", "116.394, 117.347, -7.33377, 0.72", "118.338, 118.747, -7.81067, 1.08", "120.583, 120.221, -8.05764, 0.72", "122.201, 121.221, -8.09338, 1.08", "122.623, 121.483, -8.0803, 1.08", "124.397, 122.534, -8.00915, 0.72", "125.443, 123.165, -7.9927, 0.72", "127.405, 124.395, -8.03647, 1.08", "128.178, 124.87, -8.11634, 1.08", "129.712, 125.766, -8.3214, 0.84", "132.538, 127.341, -8.73875, 0.84", "134.933, 128.586, -9.07037, 0.6", "136.798, 129.432, -9.25443, 1.08", "137.695, 129.782, -9.297, 1.08", "140.046, 130.646, -9.25541, 0.72", "141.218, 131.062, -9.15189, 0.72", "143.673, 131.96, -8.68642, 1.08", "145.813, 132.728, -8.12369, 0.84", "146.939, 133.151, -7.78487, 1.08", "148.624, 133.84, -7.26121, 0.84", "149.49, 134.199, -7.0028, 0.84", "151.72, 135.103, -6.43319, 0.6", "152.821, 135.497, -6.21383, 0.6", "154.509, 136.036, -5.95807, 0.96", "155.214, 136.19, -5.87891, 0.96", "157.346, 136.399, -5.68677, 0.72", "159.024, 136.451, -5.54686, 0.72", "160.39, 136.432, -5.5036, 0.72", "160.732, 136.439, -5.50946, 0.72", "161.974, 136.548, -5.63642, 0.72", "163.994, 136.858, -6.07219, 0.72", "164.558, 136.983, -6.28227, 0.72", "166.668, 137.51, -7.27117, 0.6", "167.826, 137.808, -7.88588, 0.96", "169.822, 138.24, -8.97751, 0.96", "171.098, 138.518, -9.72901, 0.96", "173.216, 138.919, -11.0738, 0.72", "175.135, 139.202, -12.2938, 0.72", "176.964, 139.344, -13.4333, 1.2", "178.684, 139.373, -14.4763, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-4.15913, -277.346, 14.0308, 0.48", "-4.02258, -280.067, 14.1773, 0.48", "-3.90027, -282.504, 14.3085, 0.48", "-3.79562, -284.589, 14.4208, 0.84", "-3.70514, -286.392, 14.5179, 0.84", "-3.61772, -288.133, 14.6117, 0.6", "-4.44085, -298.302, 13.6622, 0.6" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-4.15913, -277.346, 14.0308, 0.84", "-3.50156, -279.476, 14.6243, 0.84", "-3.00017, -281.218, 15.0797, 0.84", "-2.55634, -282.928, 15.4833, 1.08", "-2.01484, -285.059, 15.9384, 0.84", "-1.64012, -286.535, 16.2387, 0.84", "-1.29218, -287.931, 16.5049, 0.84", "-1.11471, -288.722, 16.6366, 0.84", "-0.622509, -291.193, 16.9559, 1.32", "-0.391069, -292.592, 17.0971, 1.32", "-0.0694213, -295.157, 17.3086, 1.2", "0.0689437, -296.657, 17.4132, 0.96", "0.195948, -298.519, 17.5625, 1.32", "0.271488, -300.212, 17.7201, 1.32", "0.291841, -302.289, 17.956, 1.08", "0.240202, -306.686, 18.4724, 1.08", "0.16628, -308.983, 18.7479, 0.84", "0.0860827, -310.942, 19.0109, 1.2", "-0.0153593, -313.109, 19.3428, 1.08", "-0.0935803, -314.857, 19.6528, 1.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "11.8534, -252.901, 0.868041, 0.96", "10.638, -255.474, 1.16346, 0.96", "10.2002, -256.62, 1.41437, 0.96", "9.79505, -257.635, 1.66441, 0.96", "9.30959, -258.853, 1.96087, 0.96", "8.76472, -260.164, 2.29207, 0.96", "7.63868, -263.05, 3.02535, 1.44", "6.81093, -265.606, 3.76084, 0.96", "5.53874, -269.916, 5.06743, 1.44", "5.16937, -271.29, 5.48958, 0.96", "4.47568, -274.038, 6.32577, 1.56", "3.72577, -277.237, 7.2467, 1.2", "2.84006, -281.653, 8.38386, 0.96", "2.51949, -283.611, 8.84304, 1.44", "2.12264, -286.727, 9.52601, 0.96", "1.68547, -290.13, 10.1932, 1.32", "1.1836, -293.735, 10.7621, 0.96", "0.729229, -296.439, 11.0729, 0.96", "0.471248, -298.01, 11.1807, 0.96", "0.281189, -299.343, 11.245, 0.96", "-0.171113, -302.911, 11.3571, 1.32", "-0.535223, -306.061, 11.4169, 0.96", "-0.96924, -310.556, 11.4978, 1.44", "-1.21967, -313.836, 11.5667, 0.84", "-1.31823, -316.19, 11.6531, 1.2", "-1.33335, -317.403, 11.7458, 1.2", "-1.31087, -318.218, 11.8444, 0.84", "-1.1605, -321.357, 12.4103, 1.2", "-1.03729, -324.244, 13.1084, 1.2", "-1.03918, -326.202, 13.6595, 0.96", "-1.17442, -329.434, 14.6238, 0.96", "-1.45187, -332.449, 15.4761, 1.32", "-1.82898, -334.948, 16.1649, 1.68", "-2.43432, -337.542, 16.8496, 1.2", "-3.50842, -340.812, 17.6525, 0.96", "-4.78353, -343.661, 18.2146, 0.96", "-6.34758, -346.125, 18.5369, 0.84", "-7.61227, -347.391, 18.6187, 0.84", "-9.14832, -348.05, 18.5007, 0.84", "-10.6401, -347.345, 18.2222, 0.84", "-11.4312, -346.616, 18.0442, 0.84", "-12.1477, -345.687, 17.8788, 0.84", "-12.794, -344.494, 17.7705, 1.08", "-13.4752, -342.825, 17.6679, 0.84", "-13.8696, -341.419, 17.6679, 0.6", "-14.6267, -351.478, 19.4316, 0.6" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "11.8534, -252.901, 0.868041, 1.08", "12.1798, -256.708, 1.02739, 1.08", "12.5443, -260.834, 1.17053, 1.44", "12.6756, -262.687, 1.22461, 0.84", "12.8453, -265.381, 1.28738, 1.32", "12.9582, -267.213, 1.32318, 1.32", "13.1455, -270.383, 1.32991, 1.32", "13.2201, -272.422, 1.28725, 1.32", "13.31, -274.645, 1.22469, 1.32", "13.3986, -278.753, 1.09692, 1.44", "13.4251, -280.77, 1.03257, 1.44", "13.4605, -287.12, 0.835103, 1.44", "13.4496, -288.707, 0.788078, 1.44", "13.4278, -291.453, 0.713661, 1.08", "13.4663, -296.936, 0.585099, 1.08", "13.4868, -299.755, 0.533933, 0.84", "13.5234, -303.007, 0.514515, 1.32", "13.6021, -305.579, 0.537453, 1.32", "13.7866, -309.568, 0.588193, 0.96", "13.9166, -311.642, 0.634593, 1.44", "14.1358, -314.68, 0.640253, 1.44", "14.3008, -317.9, 0.585903, 1.2", "14.3692, -321.119, 0.474519, 1.08", "14.3706, -323.683, 0.3472, 1.08", "14.2932, -326.104, 0.197805, 1.68", "14.125, -329.937, -0.0636416, 1.2", "14.0665, -331.519, -0.176894, 1.2", "13.9942, -334.686, -0.399138, 1.44", "13.9772, -337.461, -0.592984, 1.44", "14.0528, -340.878, -0.809778, 1.44", "14.1894, -343.823, -0.95896, 1.44", "14.4588, -347.194, -1.04715, 1.8", "14.7744, -350.688, -1.14836, 1.32", "14.9761, -352.734, -1.21208, 1.08", "15.2372, -355.6, -1.30749, 1.56", "15.534, -358.917, -1.43493, 1.56", "15.6941, -360.766, -1.51103, 1.56", "15.8334, -362.471, -1.58085, 1.56", "16.0303, -365.073, -1.67498, 1.56", "16.2155, -367.273, -1.73173, 1.56", "16.4815, -369.806, -1.80111, 1.32", "16.6121, -370.949, -1.83152, 1.32", "16.7436, -372.641, -1.885, 1.32", "16.8615, -374.508, -1.94652, 1.32", "17.0319, -377.282, -2.07992, 1.32", "17.1559, -379.361, -2.17956, 1.32", "17.2638, -381.806, -2.29635, 1.68", "17.4358, -388.188, -2.63186, 1.32", "17.4561, -390.192, -2.75087, 1.32", "17.443, -392.49, -2.90857, 1.32" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "27.4101, -340.353, -5.90872, 0.96", "29.7265, -341.631, -4.70109, 0.96", "30.8895, -342.254, -4.09936, 1.32", "33.2967, -343.564, -2.86239, 0.96", "35.0905, -344.596, -1.92194, 1.32", "37.3675, -345.986, -0.797181, 1.2", "38.5315, -346.663, -0.258733, 1.2", "39.6681, -347.295, 0.223341, 1.2", "40.4546, -347.75, 0.555679, 1.2", "41.363, -348.29, 0.899746, 1.2", "44.0491, -349.793, 1.75182, 0.96", "45.9624, -350.792, 2.18194, 1.32", "47.0941, -351.328, 2.3949, 1.32" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "27.4101, -340.353, -5.90872, 1.08", "27.7223, -344.451, -5.7692, 1.08", "27.9209, -348.158, -5.66281, 0.72", "28.0205, -349.978, -5.68206, 0.72", "28.2364, -354.377, -5.821, 1.2", "28.4026, -357.961, -5.96938, 0.84", "28.4851, -360.127, -6.06759, 0.84", "28.5482, -361.713, -6.17145, 0.84", "28.7076, -365.867, -6.45381, 0.6", "28.8136, -368.178, -6.59911, 0.6", "29.0379, -371.256, -6.76989, 1.2", "29.3728, -374.764, -6.98446, 1.2", "29.7074, -377.717, -7.16322, 0.84", "29.9938, -380.172, -7.29765, 0.84", "30.4195, -384.069, -7.5016, 1.08", "30.7818, -387.445, -7.74734, 0.72", "31.091, -390.436, -8.04723, 1.08", "31.304, -392.498, -8.30024, 1.08", "31.4728, -394.429, -8.57104, 1.08", "31.691, -397.9, -9.09039, 0.72", "31.8022, -400.138, -9.43284, 0.72", "31.842, -402.294, -9.66578, 1.08", "31.8302, -403.931, -9.73996, 1.08", "31.817, -405.038, -9.72836, 1.08", "31.7274, -408.096, -9.66595, 0.72", "31.6549, -409.804, -9.63498, 0.72", "31.4838, -413.605, -9.64006, 1.2", "31.3322, -417.402, -9.70941, 1.2", "31.1721, -422.384, -9.90808, 1.2", "31.0757, -427.181, -10.2122, 0.84", "31.0411, -429.075, -10.383, 1.32", "30.9909, -431.171, -10.6357, 1.32", "30.979, -432.145, -10.7962, 1.32", "30.9543, -434.311, -11.2026, 0.96", "30.9185, -436.242, -11.5651, 1.56", "30.9206, -438.251, -11.8875, 1.56", "30.9498, -439.946, -12.1446, 1.08", "30.9649, -441.591, -12.3859, 1.08", "31.0289, -444.955, -12.9162, 0.84", "31.1169, -446.523, -13.1726, 1.44", "31.4067, -449.436, -13.6791, 1.08", "31.6853, -451.243, -14.0242, 1.08", "32.1773, -454.114, -14.5858, 0.72", "32.7438, -457.547, -15.2438, 1.08", "33.0651, -459.341, -15.6472, 1.08", "33.448, -461.378, -16.1443, 0.96", "34.0863, -464.832, -16.9851, 0.72", "34.4258, -466.555, -17.4559, 0.72", "34.7093, -467.776, -17.8402, 0.72", "35.5244, -471.399, -19.1229, 0.72", "35.7858, -472.827, -19.6812, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.38983, 52.7602, 26.3781, 0.6", "-0.83032, 43.7707, 24.0818, 0.6", "-4.91519, 34.4589, 23.1974, 0.6", "-8.34585, 25.0998, 20.993, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.38983, 52.7602, 26.3781, 0.84", "-1.35582, 44.4653, 22.9158, 0.6", "-8.05961, 37.1799, 20.7851, 0.6", "-14.5445, 29.5106, 19.3841, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-0.108503, 95.1789, 19.93, 0.6", "-5.02578, 103.472, 23.149, 0.6", "-11.4451, 110.525, 26.5308, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.108503, 95.1789, 19.93, 0.84", "-4.92996, 104.143, 20.4453, 0.6", "-8.27928, 113.801, 20.3566, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-0.0935803, -314.857, 19.6528, 0.6", "-1.64143, -314.509, 20.6402, 0.6", "-3.56782, -314.077, 21.8691, 0.6", "-4.47287, -313.874, 22.4464, 0.6", "-5.55924, -313.63, 23.1394, 0.96", "-14.1064, -310.639, 27.4325, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-0.0935803, -314.857, 19.6528, 0.96", "-0.380495, -316.198, 19.7341, 0.96", "-0.661804, -317.513, 19.8138, 0.72", "-1.12143, -319.662, 19.944, 0.72", "-3.70997, -329.266, 22.2908, 0.72" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "17.443, -392.49, -2.90857, 0.84", "19.0211, -394.836, -3.93063, 0.84", "20.6481, -396.951, -4.91627, 0.84", "21.0691, -397.528, -5.20524, 0.84", "22.0781, -399.029, -6.00879, 0.84", "23.3133, -401.046, -7.08218, 0.6", "24.3582, -402.849, -8.01693, 1.08", "25.0904, -404.232, -8.71582, 1.08", "26.2106, -406.347, -9.77286, 0.72", "27.1337, -408.171, -10.6162, 0.72", "27.6451, -409.282, -11.1425, 0.72", "28.0638, -410.195, -11.6492, 0.72", "28.4826, -411.175, -12.2139, 1.2", "29.5233, -413.603, -13.5661, 0.84", "30.9358, -416.691, -15.2, 1.08", "32.5118, -420.131, -16.9429, 1.08", "34.0648, -423.596, -18.6803, 0.84", "34.716, -425.133, -19.4123, 0.84", "35.4806, -426.98, -20.2439, 1.32", "36.4368, -429.361, -21.2001, 0.84", "36.8048, -430.231, -21.5187, 0.84", "37.4526, -431.683, -21.9417, 1.32", "38.461, -433.919, -22.5859, 0.84", "39.178, -435.412, -23.1704, 1.44", "40.3856, -437.988, -24.4354, 1.2", "40.9151, -439.133, -25.0922, 1.2", "41.6011, -440.64, -25.9954, 1.44", "42.4723, -442.592, -27.1977, 1.08", "43.9939, -446.15, -29.3886, 0.84", "44.7726, -448.058, -30.5224, 1.44", "45.5219, -450.064, -31.6559, 0.96", "45.9932, -451.562, -32.4111, 0.96", "46.3018, -452.748, -32.9201, 1.44", "46.8065, -455.482, -33.9079, 0.96", "46.8979, -456.219, -34.1362, 0.96", "47.1787, -459.025, -34.9524, 1.44", "47.4388, -462.018, -35.8492, 0.84", "47.6983, -465.404, -37.0425, 1.44", "47.9277, -468.91, -38.3978, 0.84", "47.9781, -469.924, -38.8309, 0.84", "48.132, -472.607, -40.0911, 1.44", "48.4119, -476.342, -41.9745, 1.44", "48.6983, -480.44, -44.096, 1.08", "48.8635, -482.624, -45.2727, 0.72", "49.0531, -484.841, -46.5201, 1.32", "49.1875, -486.805, -47.6591, 0.72", "49.2096, -487.801, -48.2469, 0.72", "49.1417, -490.477, -49.7899, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "17.443, -392.49, -2.90857, 1.08", "17.2312, -395.072, -3.10396, 1.08", "17.1654, -396.776, -3.19923, 1.08", "17.1259, -398.003, -3.2076, 1.08", "17.0176, -400.317, -3.35918, 1.08", "16.8932, -403.113, -3.69715, 1.44", "16.8011, -405.805, -4.09602, 0.96", "16.7902, -408.031, -4.47416, 0.96", "16.8279, -410.199, -4.91531, 0.96", "16.948, -414.289, -5.71825, 0.96", "17.0671, -416.96, -6.18548, 0.84", "17.1652, -418.532, -6.41817, 1.44", "17.3089, -420.961, -6.71401, 1.08", "17.4524, -422.907, -6.89185, 1.08", "17.7039, -425.791, -7.07654, 1.56", "18.1399, -430.276, -7.12906, 1.32", "18.3418, -432.51, -7.1415, 0.96", "18.5194, -434.738, -7.17106, 1.32", "18.8422, -438.889, -7.25408, 1.08", "19.0423, -441.506, -7.35284, 0.72", "19.1903, -443.805, -7.4871, 1.32", "19.3786, -447.02, -7.65674, 1.08", "19.5157, -449.581, -7.76408, 1.56", "19.6717, -452.518, -7.84786, 0.84", "19.8564, -456.098, -7.93781, 0.6", "19.9391, -457.64, -7.97511, 1.08", "20.1067, -460.917, -8.05507, 1.2", "20.2725, -463.854, -8.12359, 0.72", "20.3361, -464.831, -8.15148, 0.72", "20.6576, -469.513, -8.32055, 1.32", "20.7412, -470.369, -8.3607, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "47.0941, -351.328, 2.3949, 0.96", "48.9535, -350.037, 2.74027, 0.96", "49.7014, -349.518, 2.87919, 0.96", "50.6125, -348.885, 3.04842, 0.84", "52.8045, -347.364, 3.45558, 0.84", "54.1318, -346.442, 3.70212, 1.08", "55.2889, -345.639, 3.91706, 1.08", "63.054, -339.373, 5.44462, 1.08" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "47.0941, -351.328, 2.3949, 0.6", "48.2949, -353.028, 3.2905, 0.6", "49.7426, -355.199, 4.60336, 1.08", "51.2014, -357.611, 6.07289, 0.96", "52.0134, -358.969, 6.89023, 0.96", "52.8601, -360.384, 7.74244, 1.32", "54.408, -362.97, 9.3004, 1.08", "55.0283, -364.083, 10.0286, 1.08", "56.1961, -366.299, 11.6179, 1.08", "57.2399, -368.384, 13.0759, 0.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "35.7858, -472.827, -19.6812, 0.72", "35.6161, -474.342, -20.0269, 0.72", "35.4846, -475.791, -20.3153, 0.72", "35.2902, -477.775, -20.7179, 0.72", "35.1304, -479.089, -20.9708, 0.72", "35.0594, -479.693, -21.0874, 0.72", "34.8454, -481.774, -21.4806, 0.6", "34.718, -482.865, -21.6627, 0.6", "34.5971, -483.815, -21.8085, 0.6", "34.373, -485.452, -22.0217, 0.48", "34.2359, -486.374, -22.1543, 0.48", "33.9151, -488.324, -22.4543, 0.84", "33.4489, -490.52, -22.8223, 0.36" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "35.7858, -472.827, -19.6812, 0.72", "36.619, -474.962, -19.6222, 0.72", "37.7919, -477.968, -19.5392, 1.2", "38.182, -478.968, -19.5116, 1.2" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "20.7412, -470.369, -8.3607, 0.48", "18.7772, -471.813, -8.23824, 0.48", "18.4197, -472.049, -8.22337, 0.48", "17.2858, -472.883, -8.18526, 0.48", "16.0245, -473.976, -8.03331, 0.48", "15.4701, -474.513, -7.92033, 0.48", "14.0049, -475.974, -7.57084, 0.96", "12.2908, -477.723, -7.07497, 0.6", "11.0131, -479.11, -6.65638, 0.6", "9.11845, -481.259, -5.96009, 1.08", "7.76733, -482.845, -5.40433, 0.84", "6.9211, -483.909, -5.01014, 0.84", "5.95795, -485.295, -4.46365, 1.2", "4.91993, -486.827, -3.78372, 0.84" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "20.7412, -470.369, -8.3607, 0.84", "21.2677, -473.924, -8.86733, 0.84", "21.3948, -475.616, -9.09404, 0.84", "21.4811, -477.114, -9.27313, 0.84", "21.6969, -480.928, -9.73664, 0.84", "21.7819, -482.342, -9.90464, 0.84", "21.9798, -485.633, -10.2813, 1.44", "22.1079, -488.065, -10.5744, 1.08", "22.2219, -490.834, -10.8719, 1.08", "22.2972, -493.471, -11.0999, 0.84", "22.3487, -495.126, -11.1881, 0.84", "22.4527, -496.587, -11.2462, 1.08", "22.7304, -498.525, -11.3157, 0.6", "23.028, -500.083, -11.3589, 0.6", "23.35, -501.71, -11.3655, 0.6", "23.804, -503.861, -11.3965, 1.2", "24.2847, -506.013, -11.481, 1.2", "24.5978, -507.507, -11.5649, 1.2", "24.9142, -509.196, -11.6783, 0.96", "25.1088, -510.32, -11.7576, 1.44", "25.4245, -512.55, -11.9119, 1.44", "25.7714, -515.735, -12.123, 0.96", "26.0802, -519.249, -12.3374, 1.32", "26.2053, -520.706, -12.4178, 1.32", "26.4772, -523.972, -12.5744, 0.84", "26.6651, -526.659, -12.6859, 1.32", "26.757, -528.122, -12.7189, 1.32", "26.8502, -529.841, -12.7883, 1.32", "27.02, -533.168, -12.9675, 1.32", "27.0993, -535.359, -13.1037, 0.96", "27.1348, -537.111, -13.2242, 0.96", "27.246, -541.049, -13.5176, 1.44", "27.3172, -543.463, -13.7254, 1.08", "27.3376, -545.403, -13.9148, 1.08", "27.3304, -547.347, -14.1511, 1.08", "27.3531, -549.722, -14.4617, 1.08", "27.3994, -552.269, -14.8017, 1.08", "27.4521, -555.871, -15.3243, 1.08", "27.5703, -561.216, -16.1446, 0.96", "27.7431, -569.421, -17.4566, 1.32", "27.7993, -572.121, -17.9024, 0.84", "27.8278, -573.729, -18.1705, 0.84", "27.8539, -575.917, -18.527, 0.84", "27.8692, -577.589, -18.7775, 0.84", "27.9085, -580.876, -19.2119, 0.84", "27.8857, -582.514, -19.3834, 0.84", "27.829, -583.874, -19.5111, 0.84", "27.744, -585.298, -19.6177, 1.2", "27.5948, -587.975, -19.775, 0.72", "27.4255, -590.06, -19.8902, 1.32", "27.2744, -591.716, -20.0414, 0.84", "27.074, -593.65, -20.237, 1.56", "26.5048, -598.36, -20.827, 0.84", "26.2539, -600.11, -21.0761, 1.32", "25.7029, -603.267, -21.5646, 0.84", "24.7886, -607.956, -22.3082, 0.6", "24.5099, -609.348, -22.5249, 1.08", "23.9768, -611.96, -22.9146, 0.84", "23.5141, -614.132, -23.2464, 1.44", "23.0051, -616.402, -23.574, 0.96", "22.6153, -618.276, -23.8173, 0.72", "22.2196, -620.081, -23.949, 0.72", "21.5354, -623.464, -24.1945, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "57.2399, -368.384, 13.0759, 0.84", "59.7052, -367.824, 13.4801, 0.84", "60.7876, -367.578, 13.6576, 0.84", "63.3343, -367.0, 14.0751, 0.72", "64.9432, -366.634, 14.3389, 0.72", "74.8956, -365.972, 15.0689, 0.72" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "57.2399, -368.384, 13.0759, 0.72", "58.2774, -370.243, 13.6958, 0.72", "59.3776, -372.214, 14.3532, 0.84", "59.842, -373.047, 14.6307, 0.84", "60.8145, -374.789, 15.2118, 0.6", "61.4878, -375.996, 15.6141, 0.6", "62.1917, -377.257, 16.0347, 0.6", "67.5343, -385.108, 19.6116, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "33.4489, -490.52, -22.8223, 0.48", "29.1365, -490.882, -24.6695, 0.48", "28.1333, -490.966, -25.0993, 1.08", "27.1003, -491.053, -25.5418, 0.48", "25.8042, -491.161, -26.097, 0.96", "24.7078, -491.253, -26.5666, 0.48", "22.5681, -491.433, -27.4831, 0.48" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "33.4489, -490.52, -22.8223, 0.96", "33.3749, -492.066, -24.0501, 0.96", "33.1818, -494.801, -26.0886, 0.48", "33.1032, -495.877, -26.8224, 0.48", "32.9926, -498.087, -28.2509, 0.84", "32.928, -499.696, -29.275, 0.6", "32.9036, -500.475, -29.7646, 0.6", "32.9042, -502.166, -30.8807, 0.96", "32.9265, -503.295, -31.6342, 0.96", "33.0251, -505.464, -33.1995, 0.72", "33.1939, -507.553, -34.8307, 0.72", "33.427, -509.191, -36.3743, 1.2", "33.6932, -510.727, -37.9243, 1.2", "33.883, -511.649, -38.9384, 1.2", "34.1324, -512.736, -40.2729, 1.08", "34.5013, -514.093, -42.1586, 0.84", "35.0324, -515.498, -44.4099, 1.08" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "38.182, -478.968, -19.5116, 0.72", "41.8839, -479.614, -19.5116, 0.72", "44.0993, -480.0, -19.5116, 0.72", "45.525, -480.249, -19.5116, 0.96" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "38.182, -478.968, -19.5116, 0.48", "38.1811, -482.274, -19.5116, 0.48", "38.0872, -484.137, -19.5317, 0.96", "38.0107, -484.999, -19.5449, 0.96", "37.7635, -487.091, -19.58, 0.48", "37.5832, -488.354, -19.6011, 0.48", "37.2794, -490.419, -19.6348, 0.96", "36.931, -492.482, -19.6723, 0.96", "36.6757, -493.849, -19.697, 0.96", "36.2336, -495.888, -19.7473, 1.32", "35.7306, -497.929, -19.8082, 0.96", "35.5384, -498.729, -19.8341, 0.96", "35.3377, -499.691, -19.8652, 0.96", "35.0642, -501.274, -19.9104, 1.32", "34.8634, -502.944, -19.9599, 0.96", "34.7465, -504.772, -20.0152, 0.6", "34.7444, -506.13, -20.1271, 0.6", "34.8663, -507.809, -20.4324, 1.32", "35.1304, -509.555, -20.9274, 0.84", "35.4276, -511.004, -21.4261, 0.84", "35.5941, -511.657, -21.6699, 0.84", "36.3204, -514.258, -22.7094, 0.84", "37.1057, -516.967, -23.8359, 1.44", "37.8803, -519.845, -25.0511, 0.96", "38.1386, -521.071, -25.5105, 0.96", "38.3645, -522.743, -26.03, 0.96", "38.4435, -523.97, -26.3065, 0.96", "38.422, -525.239, -26.4477, 0.96", "38.1045, -528.238, -26.5277, 0.72", "37.5861, -531.323, -26.4479, 1.08", "37.1681, -533.359, -26.3369, 0.72", "36.7293, -535.269, -26.1938, 1.2", "36.2168, -537.471, -25.9943, 0.96", "35.4211, -540.929, -25.6313, 1.44", "34.897, -543.292, -25.3624, 0.96", "34.6109, -544.647, -25.2719, 0.72", "33.9295, -548.032, -25.1696, 1.08", "33.5236, -550.061, -25.1902, 0.6", "33.2543, -551.399, -25.2077, 0.6", "32.9231, -553.031, -25.2247, 1.2", "32.088, -556.789, -25.1627, 0.72", "31.7053, -558.346, -25.1415, 1.08", "31.0348, -560.714, -25.0933, 0.96", "30.3013, -563.036, -25.0324, 0.72", "29.8752, -564.36, -24.9772, 0.72", "28.8086, -567.582, -24.7536, 0.72", "27.945, -569.996, -24.4517, 0.72", "27.5588, -571.049, -24.3381, 1.2", "27.0059, -572.541, -24.2655, 1.2" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_DBC_e3438da2c9_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_73, id: dend_73, parent: soma_0
create dend_73
public dend_73
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_64, id: dend_64, parent: soma_0
create dend_64
public dend_64
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_41
create dend_61
public dend_61
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_18
create dend_40
public dend_40
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_42
create dend_58
public dend_58
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_19
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_43
create dend_57
public dend_57
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_20
create dend_36
public dend_36
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_35, id: dend_35, parent: dend_21
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_73(0), soma_0(0.45000099931593607)
    connect dend_69(0), soma_0(0.45000099931593607)
    connect dend_64(0), soma_0(0.45000099931593607)
    connect dend_41(0), soma_0(0.45000099931593607)
    connect dend_18(0), soma_0(0.45000099931593607)
    connect dend_0(0), soma_0(0.45000099931593607)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_35(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.25432, 14.9511, 0.00157081, 3.62034 ) }
    soma_0 { pt3dadd( -2.93315, 13.5105, 0.00126201, 6.40385 ) }
    soma_0 { pt3dadd( -2.61199, 12.0699, 9.53205E-4, 8.96308 ) }
    soma_0 { pt3dadd( -2.29082, 10.6293, 6.44404E-4, 10.4523 ) }
    soma_0 { pt3dadd( -1.96966, 9.18875, 3.35604E-4, 11.6707 ) }
    soma_0 { pt3dadd( -1.64849, 7.74817, 2.68037E-5, 11.8736 ) }
    soma_0 { pt3dadd( -1.32732, 6.30759, -2.81997E-4, 11.9675 ) }
    soma_0 { pt3dadd( -1.00616, 4.86701, -5.90797E-4, 12.0614 ) }
    soma_0 { pt3dadd( -0.684991, 3.42643, -8.99597E-4, 12.1873 ) }
    soma_0 { pt3dadd( -0.363825, 1.98585, -0.0012084, 12.1453 ) }
    soma_0 { pt3dadd( -0.0426595, 0.545272, -0.0015172, 12.019 ) }
    soma_0 { pt3dadd( 0.278507, -0.895307, -0.001826, 11.8927 ) }
    soma_0 { pt3dadd( 0.599673, -2.33589, -0.0021348, 11.8279 ) }
    soma_0 { pt3dadd( 0.920839, -3.77647, -0.0024436, 11.7176 ) }
    soma_0 { pt3dadd( 1.242, -5.21704, -0.0027524, 11.0046 ) }
    soma_0 { pt3dadd( 1.56317, -6.65762, -0.0030612, 10.0239 ) }
    soma_0 { pt3dadd( 1.88434, -8.0982, -0.00337, 9.09175 ) }
    soma_0 { pt3dadd( 2.2055, -9.53878, -0.0036788, 8.30332 ) }
    soma_0 { pt3dadd( 2.52667, -10.9794, -0.0039876, 7.17422 ) }
    soma_0 { pt3dadd( 2.84783, -12.4199, -0.0042964, 5.37678 ) }
    soma_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 3.2773 ) }
    // Section: dend_73, id: dend_73, parent: soma_0 (entry count 21/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -4.98075, 8.997, 10.9227, 2.76 ) }
    dend_73 { pt3dadd( -6.06293, 10.03, 9.34376, 2.16 ) }
    dend_73 { pt3dadd( -9.18818, 12.5087, 5.60423, 2.52 ) }
    dend_73 { pt3dadd( -11.4562, 14.1281, 3.16164, 2.52 ) }
    dend_73 { pt3dadd( -13.1057, 15.2028, 1.59056, 2.52 ) }
    dend_73 { pt3dadd( -13.9732, 15.7161, 0.827453, 2.52 ) }
    dend_73 { pt3dadd( -15.0201, 16.2621, 0.026779, 2.28 ) }
    dend_73 { pt3dadd( -17.8098, 17.6248, -1.74421, 1.92 ) }
    dend_73 { pt3dadd( -19.0037, 18.1385, -2.30394, 1.92 ) }
    dend_73 { pt3dadd( -21.5881, 19.1035, -3.37255, 1.8 ) }
    dend_73 { pt3dadd( -23.1392, 19.6609, -3.92747, 1.8 ) }
    dend_73 { pt3dadd( -26.4929, 20.7197, -4.9673, 1.56 ) }
    dend_73 { pt3dadd( -29.0993, 21.4502, -5.66714, 1.92 ) }
    dend_73 { pt3dadd( -31.3472, 21.9701, -6.18216, 1.92 ) }
    dend_73 { pt3dadd( -32.9529, 22.1763, -6.47204, 1.92 ) }
    dend_73 { pt3dadd( -35.0049, 22.2075, -6.75451, 1.92 ) }
    dend_73 { pt3dadd( -38.9303, 21.9886, -7.27446, 1.8 ) }
    dend_73 { pt3dadd( -39.5956, 21.8952, -7.37415, 1.8 ) }
    dend_73 { pt3dadd( -40.9879, 21.5977, -7.58322, 1.8 ) }
    dend_73 { pt3dadd( -44.2891, 20.7304, -8.15615, 1.32 ) }
    dend_73 { pt3dadd( -45.4569, 20.3998, -8.41793, 1.32 ) }
    dend_73 { pt3dadd( -47.7091, 19.7517, -9.13046, 1.92 ) }
    dend_73 { pt3dadd( -48.5869, 19.6865, -9.64352, 1.92 ) }
    dend_73 { pt3dadd( -49.2182, 20.2164, -10.6302, 1.92 ) }
    dend_73 { pt3dadd( -49.5046, 20.5916, -11.254, 1.92 ) }
    dend_73 { pt3dadd( -49.8081, 21.045, -12.0104, 1.92 ) }
    dend_73 { pt3dadd( -50.2225, 21.3206, -12.6863, 1.92 ) }
    dend_73 { pt3dadd( -50.8912, 21.4386, -13.5078, 1.92 ) }
    dend_73 { pt3dadd( -52.8663, 21.4122, -15.7156, 1.44 ) }
    dend_73 { pt3dadd( -54.3537, 21.3164, -17.2707, 1.44 ) }
    dend_73 { pt3dadd( -55.1084, 21.2339, -18.011, 1.44 ) }
    dend_73 { pt3dadd( -57.0523, 20.9063, -19.8323, 1.44 ) }
    dend_73 { pt3dadd( -58.3335, 20.6112, -20.997, 1.8 ) }
    dend_73 { pt3dadd( -59.3354, 20.3076, -21.8987, 1.8 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 55/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -3.03075, 13.302, 1.77275, 1.32 ) }
    dend_69 { pt3dadd( -2.83356, 15.8077, 0.838929, 1.32 ) }
    dend_69 { pt3dadd( -2.6446, 18.4574, -0.0310362, 1.32 ) }
    dend_69 { pt3dadd( -2.54824, 19.8965, -0.453827, 1.32 ) }
    dend_69 { pt3dadd( -2.45012, 21.4475, -0.852999, 1.32 ) }
    dend_69 { pt3dadd( -2.39165, 22.4153, -1.06847, 1.32 ) }
    dend_69 { pt3dadd( -2.30868, 23.5222, -1.27877, 1.32 ) }
    dend_69 { pt3dadd( -2.19767, 24.875, -1.40891, 1.32 ) }
    dend_69 { pt3dadd( -2.11883, 25.7229, -1.37771, 1.32 ) }
    dend_69 { pt3dadd( -1.95878, 27.3017, -1.25816, 1.08 ) }
    dend_69 { pt3dadd( -1.76947, 28.9871, -1.09463, 1.56 ) }
    dend_69 { pt3dadd( -1.56698, 30.7766, -0.879365, 1.56 ) }
    dend_69 { pt3dadd( -1.38223, 32.3365, -0.654885, 1.56 ) }
    dend_69 { pt3dadd( -0.87366, 35.9114, -0.0408348, 1.56 ) }
    // Section: dend_64, id: dend_64, parent: soma_0 (entry count 69/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -5.85074, 10.6575, 11.3727, 1.8 ) }
    dend_64 { pt3dadd( -6.58716, 11.8517, 11.8015, 1.8 ) }
    dend_64 { pt3dadd( -7.3951, 13.119, 12.2877, 1.8 ) }
    dend_64 { pt3dadd( -8.9758, 15.4111, 13.342, 1.56 ) }
    dend_64 { pt3dadd( -9.42948, 16.0689, 13.6446, 1.56 ) }
    dend_64 { pt3dadd( -10.4658, 17.5717, 14.3359, 1.44 ) }
    dend_64 { pt3dadd( -11.5464, 19.1386, 15.0567, 0.96 ) }
    dend_64 { pt3dadd( -12.0054, 19.8003, 15.3927, 0.96 ) }
    dend_64 { pt3dadd( -13.9045, 22.3824, 16.8263, 1.92 ) }
    dend_64 { pt3dadd( -19.2167, 30.1629, 20.5896, 1.92 ) }
    dend_64 { pt3dadd( -26.1495, 36.0978, 24.8801, 1.92 ) }
    dend_64 { pt3dadd( -34.2112, 41.4881, 27.5922, 1.92 ) }
    dend_64 { pt3dadd( -41.5466, 48.0849, 29.7763, 1.92 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 82/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.42925, -11.6362, 11.5527, 2.64 ) }
    dend_41 { pt3dadd( 1.6148, -13.8505, 11.3952, 2.64 ) }
    dend_41 { pt3dadd( 1.82906, -16.4072, 11.2134, 2.64 ) }
    dend_41 { pt3dadd( 1.98708, -18.2929, 11.0792, 2.64 ) }
    dend_41 { pt3dadd( 2.13442, -20.0512, 10.9541, 2.64 ) }
    dend_41 { pt3dadd( 2.43423, -23.6289, 10.6997, 2.4 ) }
    dend_41 { pt3dadd( 2.73629, -27.2334, 10.4432, 3.37 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 4.77925, -12.446, 13.0827, 2.16 ) }
    dend_18 { pt3dadd( 4.99623, -13.1091, 12.8654, 2.16 ) }
    dend_18 { pt3dadd( 5.57089, -15.2176, 12.312, 2.16 ) }
    dend_18 { pt3dadd( 6.00883, -16.7263, 11.9892, 2.16 ) }
    dend_18 { pt3dadd( 6.76272, -19.3234, 11.4336, 2.16 ) }
    dend_18 { pt3dadd( 7.31701, -21.233, 11.025, 2.16 ) }
    dend_18 { pt3dadd( 7.71892, -22.6176, 10.7288, 2.16 ) }
    dend_18 { pt3dadd( 8.78145, -26.2238, 9.94534, 2.52 ) }
    dend_18 { pt3dadd( 9.53233, -29.0253, 9.33937, 3.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 98/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.610745, 12.9843, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( -0.142174, 16.542, 11.8327, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 0.319266, 20.0455, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 0.733633, 23.1917, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 0.943147, 24.7824, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.19844, 26.7208, 11.8327, 2.52 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 4/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 1.29094 ) }
    axon_0 { pt3dadd( 6.433, -28.5011, -0.0046052, 1.29094 ) }
    axon_0 { pt3dadd( 9.697, -43.1416, -0.0046052, 1.29094 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 7/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -59.3354, 20.3076, -21.8987, 1.2 ) }
    dend_75 { pt3dadd( -60.6626, 22.747, -21.0304, 1.2 ) }
    dend_75 { pt3dadd( -62.1449, 24.5614, -20.2723, 1.2 ) }
    dend_75 { pt3dadd( -63.24, 25.3568, -19.8584, 1.2 ) }
    dend_75 { pt3dadd( -63.9627, 25.7918, -19.6117, 1.56 ) }
    dend_75 { pt3dadd( -64.421, 26.0002, -19.546, 1.56 ) }
    dend_75 { pt3dadd( -65.2362, 26.2986, -19.5123, 1.56 ) }
    dend_75 { pt3dadd( -67.5124, 26.8652, -19.522, 0.96 ) }
    dend_75 { pt3dadd( -71.0735, 27.5387, -19.7435, 1.56 ) }
    dend_75 { pt3dadd( -71.4276, 27.5976, -19.7737, 1.56 ) }
    dend_75 { pt3dadd( -75.8849, 28.2412, -20.2849, 1.08 ) }
    dend_75 { pt3dadd( -77.2591, 28.3983, -20.5042, 1.08 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 19/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -59.3354, 20.3076, -21.8987, 1.08 ) }
    dend_74 { pt3dadd( -60.9208, 20.0431, -22.9231, 1.08 ) }
    dend_74 { pt3dadd( -62.579, 19.5668, -24.1078, 1.56 ) }
    dend_74 { pt3dadd( -65.9621, 18.1162, -27.1205, 0.84 ) }
    dend_74 { pt3dadd( -67.1963, 17.3911, -28.531, 0.84 ) }
    dend_74 { pt3dadd( -67.583, 17.1023, -29.0604, 0.84 ) }
    dend_74 { pt3dadd( -68.5397, 16.2605, -30.5549, 0.84 ) }
    dend_74 { pt3dadd( -69.3564, 15.2376, -32.2857, 0.84 ) }
    dend_74 { pt3dadd( -70.1986, 13.7419, -34.6201, 0.84 ) }
    dend_74 { pt3dadd( -70.7915, 12.2276, -36.6401, 0.84 ) }
    dend_74 { pt3dadd( -71.1375, 11.2465, -37.851, 0.84 ) }
    dend_74 { pt3dadd( -71.5194, 10.2719, -39.0295, 0.84 ) }
    dend_74 { pt3dadd( -71.871, 9.51959, -39.8936, 0.84 ) }
    dend_74 { pt3dadd( -72.5651, 8.33135, -41.0596, 0.84 ) }
    dend_74 { pt3dadd( -73.3103, 7.31079, -41.7873, 0.84 ) }
    dend_74 { pt3dadd( -73.7983, 6.76854, -42.0818, 0.84 ) }
    dend_74 { pt3dadd( -74.8786, 5.76554, -42.5357, 0.84 ) }
    dend_74 { pt3dadd( -75.6717, 5.1311, -42.767, 0.84 ) }
    dend_74 { pt3dadd( -76.9325, 4.23556, -43.02, 0.84 ) }
    dend_74 { pt3dadd( -78.4925, 3.08795, -43.259, 0.84 ) }
    dend_74 { pt3dadd( -80.1815, 1.69798, -43.4743, 0.84 ) }
    dend_74 { pt3dadd( -81.2444, 0.639919, -43.5816, 0.84 ) }
    dend_74 { pt3dadd( -82.4741, -0.815133, -43.7144, 0.84 ) }
    dend_74 { pt3dadd( -84.3952, -3.49265, -44.0358, 0.84 ) }
    dend_74 { pt3dadd( -85.895, -5.99208, -44.3729, 1.32 ) }
    dend_74 { pt3dadd( -86.95, -8.05498, -44.6443, 0.6 ) }
    dend_74 { pt3dadd( -87.9907, -10.5029, -44.9479, 1.2 ) }
    dend_74 { pt3dadd( -88.712, -12.5714, -45.2268, 0.72 ) }
    dend_74 { pt3dadd( -89.2389, -14.5508, -45.5356, 0.72 ) }
    dend_74 { pt3dadd( -89.4721, -15.8461, -45.79, 0.72 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 49/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -0.87366, 35.9114, -0.0408348, 1.32 ) }
    dend_70 { pt3dadd( -0.11258, 37.5243, 0.733007, 1.32 ) }
    dend_70 { pt3dadd( 1.6094, 41.4796, 2.36534, 0.96 ) }
    dend_70 { pt3dadd( 2.30326, 43.3201, 3.01551, 0.96 ) }
    dend_70 { pt3dadd( 2.87062, 45.2448, 3.57981, 1.2 ) }
    dend_70 { pt3dadd( 3.10836, 46.3443, 3.8394, 1.2 ) }
    dend_70 { pt3dadd( 3.26699, 47.3146, 4.03668, 1.2 ) }
    dend_70 { pt3dadd( 3.30306, 48.4027, 4.16595, 1.44 ) }
    dend_70 { pt3dadd( 3.06778, 49.896, 4.16795, 1.08 ) }
    dend_70 { pt3dadd( 2.52081, 51.7935, 4.16952, 1.08 ) }
    dend_70 { pt3dadd( 1.75868, 53.8579, 4.17088, 1.56 ) }
    dend_70 { pt3dadd( 1.51699, 54.4208, 4.17107, 1.56 ) }
    dend_70 { pt3dadd( 0.771854, 55.9449, 4.17072, 1.56 ) }
    dend_70 { pt3dadd( -0.315571, 57.9051, 4.16796, 1.56 ) }
    dend_70 { pt3dadd( -0.413173, 58.0563, 4.16733, 1.56 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 64/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -41.5466, 48.0849, 29.7763, 1.2 ) }
    dend_66 { pt3dadd( -48.098, 54.9934, 33.1898, 1.2 ) }
    dend_66 { pt3dadd( -53.1943, 61.9787, 38.4419, 1.2 ) }
    dend_66 { pt3dadd( -59.9434, 68.7666, 41.6968, 1.2 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -41.5466, 48.0849, 29.7763, 1.44 ) }
    dend_65 { pt3dadd( -48.1682, 54.9562, 33.1251, 1.2 ) }
    dend_65 { pt3dadd( -53.5684, 62.7424, 36.7491, 1.2 ) }
    dend_65 { pt3dadd( -59.679, 70.2198, 39.8223, 1.2 ) }
    dend_65 { pt3dadd( -66.6637, 77.0637, 42.3976, 1.2 ) }
    // Section: dend_61, id: dend_61, parent: dend_41 (entry count 73/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 2.73629, -27.2334, 10.4432, 1.2 ) }
    dend_61 { pt3dadd( 2.39845, -31.252, 9.7317, 1.2 ) }
    dend_61 { pt3dadd( 2.24586, -33.6569, 9.30257, 1.2 ) }
    dend_61 { pt3dadd( 2.12959, -36.3641, 8.82883, 1.2 ) }
    dend_61 { pt3dadd( 2.06048, -38.7559, 8.4222, 1.2 ) }
    dend_61 { pt3dadd( 2.04954, -40.4602, 8.14594, 1.2 ) }
    dend_61 { pt3dadd( 2.05062, -41.7358, 7.93872, 1.2 ) }
    dend_61 { pt3dadd( 2.10853, -42.7002, 7.76487, 1.2 ) }
    dend_61 { pt3dadd( 2.22939, -43.9488, 7.5495, 1.2 ) }
    dend_61 { pt3dadd( 2.3412, -44.683, 7.45486, 1.2 ) }
    dend_61 { pt3dadd( 2.6105, -46.0746, 7.31394, 1.2 ) }
    dend_61 { pt3dadd( 2.79502, -47.0932, 7.2271, 1.2 ) }
    dend_61 { pt3dadd( 2.92088, -48.1867, 7.15748, 1.2 ) }
    dend_61 { pt3dadd( 2.92515, -49.0659, 7.1158, 1.2 ) }
    dend_61 { pt3dadd( 2.77278, -50.8084, 7.06028, 1.2 ) }
    dend_61 { pt3dadd( 2.66874, -51.5402, 7.04474, 1.2 ) }
    dend_61 { pt3dadd( 2.3959, -53.1031, 7.01702, 1.2 ) }
    dend_61 { pt3dadd( 1.92468, -55.7556, 6.98384, 1.68 ) }
    dend_61 { pt3dadd( 1.32821, -58.9832, 6.94226, 1.08 ) }
    dend_61 { pt3dadd( 0.814417, -61.8093, 6.9026, 0.72 ) }
    dend_61 { pt3dadd( 0.583511, -63.2533, 6.88127, 1.92 ) }
    dend_61 { pt3dadd( 0.0978234, -67.0242, 6.82613, 0.96 ) }
    dend_61 { pt3dadd( -0.160579, -69.7993, 6.78839, 0.84 ) }
    dend_61 { pt3dadd( -0.228726, -71.3872, 6.76728, 1.44 ) }
    dend_61 { pt3dadd( -0.204296, -73.478, 6.74258, 1.08 ) }
    dend_61 { pt3dadd( -0.10495, -75.4444, 6.72605, 1.08 ) }
    dend_61 { pt3dadd( 0.126571, -78.6057, 6.711, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( 0.236845, -79.9557, 6.71222, 1.44 ) }
    dend_61 { pt3dadd( 0.364828, -81.8684, 6.71545, 1.44 ) }
    dend_61 { pt3dadd( 0.488299, -84.4384, 6.72129, 0.72 ) }
    dend_61 { pt3dadd( 0.516249, -85.4444, 6.72395, 1.2 ) }
    dend_61 { pt3dadd( 0.538475, -87.2907, 6.72907, 1.2 ) }
    dend_61 { pt3dadd( 0.565017, -88.7207, 6.73282, 1.56 ) }
    dend_61 { pt3dadd( 0.572767, -90.6924, 6.6842, 1.32 ) }
    dend_61 { pt3dadd( 0.534968, -92.918, 6.58466, 0.84 ) }
    dend_61 { pt3dadd( 0.536001, -95.5246, 6.42767, 1.56 ) }
    dend_61 { pt3dadd( 0.562112, -97.065, 6.32391, 1.56 ) }
    dend_61 { pt3dadd( 0.636752, -99.8116, 6.12682, 0.96 ) }
    dend_61 { pt3dadd( 0.721386, -102.344, 5.93673, 0.96 ) }
    dend_61 { pt3dadd( 0.771991, -104.296, 5.78843, 1.32 ) }
    dend_61 { pt3dadd( 0.750984, -106.692, 5.61697, 1.32 ) }
    dend_61 { pt3dadd( 0.589889, -110.015, 5.41315, 0.72 ) }
    dend_61 { pt3dadd( 0.493154, -111.137, 5.35483, 1.56 ) }
    dend_61 { pt3dadd( 0.343492, -112.253, 5.29744, 1.56 ) }
    dend_61 { pt3dadd( -0.020923, -114.414, 5.19305, 0.96 ) }
    dend_61 { pt3dadd( -0.458889, -116.277, 5.07539, 1.68 ) }
    dend_61 { pt3dadd( -1.25638, -119.193, 4.79381, 1.08 ) }
    dend_61 { pt3dadd( -1.91727, -121.555, 4.50482, 0.96 ) }
    dend_61 { pt3dadd( -2.68886, -124.573, 4.09651, 1.44 ) }
    dend_61 { pt3dadd( -3.06789, -126.206, 3.86198, 1.08 ) }
    dend_61 { pt3dadd( -3.62126, -128.801, 3.44798, 0.84 ) }
    dend_61 { pt3dadd( -4.07224, -131.133, 3.02956, 1.44 ) }
    dend_61 { pt3dadd( -4.28331, -132.287, 2.80968, 1.44 ) }
    dend_61 { pt3dadd( -4.64863, -134.566, 2.38451, 0.72 ) }
    dend_61 { pt3dadd( -4.86995, -136.231, 2.06891, 0.72 ) }
    dend_61 { pt3dadd( -5.2281, -139.231, 1.48881, 1.32 ) }
    dend_61 { pt3dadd( -5.47808, -141.45, 1.02987, 0.96 ) }
    dend_61 { pt3dadd( -5.62833, -142.401, 0.834027, 0.96 ) }
    dend_61 { pt3dadd( -5.81561, -143.461, 0.585392, 0.96 ) }
    dend_61 { pt3dadd( -6.12279, -144.818, 0.22311, 0.96 ) }
    dend_61 { pt3dadd( -6.32644, -145.608, 0.0129333, 0.96 ) }
    dend_61 { pt3dadd( -6.63828, -146.679, -0.305416, 0.96 ) }
    dend_61 { pt3dadd( -6.98174, -147.801, -0.651919, 0.96 ) }
    dend_61 { pt3dadd( -8.02291, -151.136, -1.68061, 1.44 ) }
    dend_61 { pt3dadd( -9.2154, -154.977, -2.8226, 0.48 ) }
    dend_61 { pt3dadd( -9.76308, -156.838, -3.33774, 1.56 ) }
    dend_61 { pt3dadd( -10.8097, -160.651, -4.32667, 0.84 ) }
    dend_61 { pt3dadd( -11.0663, -161.689, -4.60042, 0.84 ) }
    dend_61 { pt3dadd( -11.4628, -163.529, -5.08804, 0.84 ) }
    dend_61 { pt3dadd( -11.7267, -165.047, -5.45874, 0.84 ) }
    dend_61 { pt3dadd( -11.9233, -166.541, -5.77327, 0.84 ) }
    dend_61 { pt3dadd( -12.1041, -167.981, -6.03684, 0.84 ) }
    dend_61 { pt3dadd( -12.5504, -171.884, -6.64463, 0.6 ) }
    dend_61 { pt3dadd( -12.8147, -174.04, -7.00046, 1.08 ) }
    dend_61 { pt3dadd( -13.2113, -177.035, -7.52508, 0.72 ) }
    dend_61 { pt3dadd( -13.6224, -179.822, -8.02533, 0.6 ) }
    dend_61 { pt3dadd( -13.852, -181.15, -8.25554, 1.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 50/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 2.73629, -27.2334, 10.4432, 1.92 ) }
    dend_42 { pt3dadd( 2.8956, -31.1791, 10.1749, 1.92 ) }
    dend_42 { pt3dadd( 3.07001, -35.4986, 9.88115, 1.92 ) }
    dend_42 { pt3dadd( 3.26671, -40.37, 9.54985, 2.28 ) }
    dend_42 { pt3dadd( 3.37115, -42.9564, 9.37396, 2.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_18 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 9.53233, -29.0253, 9.33937, 1.32 ) }
    dend_40 { pt3dadd( 12.1665, -30.5048, 9.62058, 1.32 ) }
    dend_40 { pt3dadd( 13.9632, -31.3067, 9.85499, 1.32 ) }
    dend_40 { pt3dadd( 15.4357, -31.8694, 10.0699, 1.32 ) }
    dend_40 { pt3dadd( 17.0267, -32.428, 10.3197, 1.32 ) }
    dend_40 { pt3dadd( 19.1569, -33.1071, 10.6872, 1.32 ) }
    dend_40 { pt3dadd( 20.2807, -33.4655, 10.898, 1.32 ) }
    dend_40 { pt3dadd( 23.2199, -34.3623, 11.5706, 1.08 ) }
    dend_40 { pt3dadd( 24.1546, -34.6362, 11.8068, 1.08 ) }
    dend_40 { pt3dadd( 24.5416, -34.7532, 11.912, 1.08 ) }
    dend_40 { pt3dadd( 26.611, -35.4322, 12.5156, 1.44 ) }
    dend_40 { pt3dadd( 28.1914, -36.0802, 12.9734, 1.08 ) }
    dend_40 { pt3dadd( 28.9827, -36.4908, 13.202, 1.08 ) }
    dend_40 { pt3dadd( 30.859, -37.5989, 13.6969, 1.08 ) }
    dend_40 { pt3dadd( 32.0746, -38.3188, 13.9782, 0.84 ) }
    dend_40 { pt3dadd( 33.289, -39.0436, 14.2202, 0.84 ) }
    dend_40 { pt3dadd( 34.7496, -39.8392, 14.4588, 0.84 ) }
    dend_40 { pt3dadd( 35.9358, -40.4576, 14.6397, 0.84 ) }
    dend_40 { pt3dadd( 38.8213, -41.9331, 14.9448, 1.2 ) }
    dend_40 { pt3dadd( 40.4565, -42.7473, 15.0221, 0.84 ) }
    dend_40 { pt3dadd( 41.8595, -43.3666, 15.0037, 0.84 ) }
    dend_40 { pt3dadd( 44.6069, -44.4292, 14.8516, 0.96 ) }
    dend_40 { pt3dadd( 47.3125, -45.4423, 14.6661, 0.72 ) }
    dend_40 { pt3dadd( 50.3285, -46.5574, 14.3935, 1.2 ) }
    dend_40 { pt3dadd( 51.9927, -47.1818, 14.1752, 1.2 ) }
    dend_40 { pt3dadd( 53.7464, -47.7801, 13.86, 0.6 ) }
    dend_40 { pt3dadd( 54.5609, -48.0291, 13.6697, 0.6 ) }
    dend_40 { pt3dadd( 64.2198, -50.6371, 13.1898, 0.6 ) }
    dend_40 { pt3dadd( 73.2362, -54.9277, 12.1027, 0.6 ) }
    dend_40 { pt3dadd( 83.0037, -57.065, 11.6046, 0.6 ) }
    dend_40 { pt3dadd( 92.9763, -57.6579, 11.142, 0.6 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 86/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.53233, -29.0253, 9.33937, 1.8 ) }
    dend_19 { pt3dadd( 9.64567, -32.3664, 9.41443, 1.8 ) }
    dend_19 { pt3dadd( 9.87169, -35.7772, 9.4804, 1.8 ) }
    dend_19 { pt3dadd( 10.0761, -37.7706, 9.51282, 1.8 ) }
    dend_19 { pt3dadd( 10.1953, -38.7503, 9.50593, 1.8 ) }
    dend_19 { pt3dadd( 10.3814, -40.1666, 9.47451, 1.8 ) }
    dend_19 { pt3dadd( 10.5704, -41.4688, 9.47986, 1.8 ) }
    dend_19 { pt3dadd( 10.7843, -42.533, 9.50885, 1.8 ) }
    dend_19 { pt3dadd( 11.0807, -44.254, 9.60879, 1.8 ) }
    dend_19 { pt3dadd( 11.1988, -45.3927, 9.69139, 1.8 ) }
    dend_19 { pt3dadd( 11.3067, -46.9951, 9.8227, 1.8 ) }
    dend_19 { pt3dadd( 11.3958, -49.9596, 9.95725, 1.8 ) }
    dend_19 { pt3dadd( 11.4103, -51.4781, 9.99115, 1.8 ) }
    dend_19 { pt3dadd( 11.4093, -54.5295, 10.0069, 2.16 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 11.4412, -56.8814, 9.95541, 1.92 ) }
    dend_19 { pt3dadd( 11.4835, -57.8592, 9.90715, 1.92 ) }
    dend_19 { pt3dadd( 11.745, -63.4318, 9.47965, 2.16 ) }
    dend_19 { pt3dadd( 11.8637, -65.6421, 9.21384, 2.16 ) }
    dend_19 { pt3dadd( 11.9829, -67.1388, 9.00036, 2.16 ) }
    dend_19 { pt3dadd( 12.3394, -70.043, 8.52613, 1.92 ) }
    dend_19 { pt3dadd( 12.6477, -71.875, 8.19909, 2.16 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.19844, 26.7208, 11.8327, 1.8 ) }
    dend_1 { pt3dadd( 2.62662, 29.5664, 12.9302, 1.8 ) }
    dend_1 { pt3dadd( 3.92656, 32.1566, 13.9291, 1.8 ) }
    dend_1 { pt3dadd( 5.28695, 34.8671, 14.9744, 1.8 ) }
    dend_1 { pt3dadd( 6.88688, 38.055, 16.2039, 1.8 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 12/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.697, -43.1416, -0.0046052, 0.932377 ) }
    axon_1 { pt3dadd( 12.961, -57.7822, -0.0046052, 0.932377 ) }
    axon_1 { pt3dadd( 16.225, -72.4228, -0.0046052, 0.932377 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 15/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -77.2591, 28.3983, -20.5042, 1.68 ) }
    dend_77 { pt3dadd( -77.5506, 28.3845, -20.5582, 1.68 ) }
    dend_77 { pt3dadd( -80.9922, 28.4014, -21.1265, 1.2 ) }
    dend_77 { pt3dadd( -83.7109, 28.5862, -21.5273, 1.68 ) }
    dend_77 { pt3dadd( -84.9143, 28.7315, -21.6986, 1.68 ) }
    dend_77 { pt3dadd( -86.6739, 29.0634, -21.9594, 1.2 ) }
    dend_77 { pt3dadd( -89.757, 29.7833, -22.4618, 1.2 ) }
    dend_77 { pt3dadd( -91.5043, 30.3235, -22.8604, 0.84 ) }
    dend_77 { pt3dadd( -93.2246, 31.0854, -23.4415, 1.32 ) }
    dend_77 { pt3dadd( -94.2154, 31.6177, -23.9184, 1.32 ) }
    dend_77 { pt3dadd( -95.815, 32.5486, -24.8765, 0.84 ) }
    dend_77 { pt3dadd( -96.4975, 32.9701, -25.3716, 0.84 ) }
    dend_77 { pt3dadd( -98.8901, 34.5291, -27.3622, 0.84 ) }
    dend_77 { pt3dadd( -100.701, 35.7011, -28.9426, 0.84 ) }
    dend_77 { pt3dadd( -101.905, 36.4977, -29.9965, 0.84 ) }
    dend_77 { pt3dadd( -102.837, 37.1089, -30.7427, 0.84 ) }
    dend_77 { pt3dadd( -104.091, 37.8956, -31.6093, 0.84 ) }
    dend_77 { pt3dadd( -105.353, 38.6941, -32.3228, 0.84 ) }
    dend_77 { pt3dadd( -107.165, 39.9306, -33.1192, 0.84 ) }
    dend_77 { pt3dadd( -108.42, 40.8232, -33.5759, 0.84 ) }
    dend_77 { pt3dadd( -110.154, 42.0992, -34.1453, 0.84 ) }
    dend_77 { pt3dadd( -112.315, 43.7865, -34.8608, 0.84 ) }
    dend_77 { pt3dadd( -113.45, 44.7262, -35.2246, 0.84 ) }
    dend_77 { pt3dadd( -115.756, 46.6885, -35.9998, 1.32 ) }
    dend_77 { pt3dadd( -117.377, 48.0822, -36.5733, 1.32 ) }
    dend_77 { pt3dadd( -119.55, 50.0727, -37.3586, 0.96 ) }
    dend_77 { pt3dadd( -121.162, 51.6664, -37.9962, 0.96 ) }
    dend_77 { pt3dadd( -122.077, 52.5532, -38.3569, 0.96 ) }
    dend_77 { pt3dadd( -123.331, 53.6771, -38.8774, 0.96 ) }
    dend_77 { pt3dadd( -124.441, 54.5288, -39.325, 0.96 ) }
    dend_77 { pt3dadd( -127.483, 56.595, -40.4652, 0.72 ) }
    dend_77 { pt3dadd( -128.595, 57.2403, -40.8486, 0.72 ) }
    dend_77 { pt3dadd( -132.96, 59.3677, -42.1849, 1.08 ) }
    dend_77 { pt3dadd( -134.217, 59.9057, -42.5408, 1.08 ) }
    dend_77 { pt3dadd( -138.255, 61.6265, -43.4886, 1.08 ) }
    dend_77 { pt3dadd( -140.344, 62.5278, -43.9737, 1.08 ) }
    dend_77 { pt3dadd( -142.668, 63.6459, -44.4941, 1.08 ) }
    dend_77 { pt3dadd( -144.702, 64.7728, -44.9519, 1.08 ) }
    dend_77 { pt3dadd( -145.422, 65.2363, -45.1434, 1.08 ) }
    dend_77 { pt3dadd( -148.507, 67.4434, -46.0604, 1.08 ) }
    dend_77 { pt3dadd( -150.839, 69.2702, -46.8746, 1.08 ) }
    dend_77 { pt3dadd( -155.236, 72.7427, -48.5471, 1.44 ) }
    dend_77 { pt3dadd( -156.405, 73.6403, -49.0167, 1.44 ) }
    dend_77 { pt3dadd( -159.248, 75.5569, -50.1508, 1.2 ) }
    dend_77 { pt3dadd( -160.403, 76.1834, -50.5221, 1.2 ) }
    dend_77 { pt3dadd( -162.018, 76.8504, -50.919, 1.2 ) }
    dend_77 { pt3dadd( -166.639, 78.3924, -51.7125, 1.08 ) }
    dend_77 { pt3dadd( -169.514, 79.2047, -52.1696, 1.08 ) }
    dend_77 { pt3dadd( -173.072, 80.2039, -52.6683, 1.08 ) }
    dend_77 { pt3dadd( -178.148, 81.5828, -53.3233, 0.72 ) }
    dend_77 { pt3dadd( -181.46, 82.4578, -53.7578, 0.72 ) }
    dend_77 { pt3dadd( -184.105, 83.14, -54.1023, 1.08 ) }
    dend_77 { pt3dadd( -187.344, 83.8778, -54.5177, 0.84 ) }
    dend_77 { pt3dadd( -189.203, 84.1616, -54.7937, 0.84 ) }
    dend_77 { pt3dadd( -190.51, 84.2707, -55.0397, 0.84 ) }
    dend_77 { pt3dadd( -192.065, 84.3357, -55.4051, 0.84 ) }
    dend_77 { pt3dadd( -194.746, 84.2831, -55.9872, 0.84 ) }
    dend_77 { pt3dadd( -198.582, 83.9406, -56.6354, 0.84 ) }
    dend_77 { pt3dadd( -204.424, 82.9991, -57.3467, 0.6 ) }
    dend_77 { pt3dadd( -205.262, 82.8255, -57.4516, 0.6 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 75/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -77.2591, 28.3983, -20.5042, 1.32 ) }
    dend_76 { pt3dadd( -77.6495, 29.6203, -21.0382, 1.32 ) }
    dend_76 { pt3dadd( -78.1998, 31.305, -21.8495, 0.84 ) }
    dend_76 { pt3dadd( -78.8154, 33.3883, -22.9465, 1.44 ) }
    dend_76 { pt3dadd( -79.7439, 36.3602, -24.7216, 1.08 ) }
    dend_76 { pt3dadd( -80.3766, 38.07, -25.817, 1.08 ) }
    dend_76 { pt3dadd( -80.6254, 38.6461, -26.2108, 1.08 ) }
    dend_76 { pt3dadd( -81.6045, 40.5589, -27.7085, 1.56 ) }
    dend_76 { pt3dadd( -82.7424, 42.2754, -29.2503, 0.96 ) }
    dend_76 { pt3dadd( -83.6812, 43.3445, -30.326, 0.96 ) }
    dend_76 { pt3dadd( -84.8484, 44.2096, -31.2234, 0.96 ) }
    dend_76 { pt3dadd( -85.7869, 44.6642, -31.7287, 0.96 ) }
    dend_76 { pt3dadd( -86.6838, 44.9667, -32.1069, 0.96 ) }
    dend_76 { pt3dadd( -87.5705, 45.1448, -32.3835, 0.96 ) }
    dend_76 { pt3dadd( -88.8363, 45.3671, -32.6888, 0.96 ) }
    dend_76 { pt3dadd( -91.5237, 45.8859, -33.3025, 0.72 ) }
    dend_76 { pt3dadd( -93.8772, 46.2877, -33.8716, 0.72 ) }
    dend_76 { pt3dadd( -95.6287, 46.5674, -34.29, 0.72 ) }
    dend_76 { pt3dadd( -96.9452, 46.7542, -34.615, 0.72 ) }
    dend_76 { pt3dadd( -98.5768, 46.9757, -35.0359, 0.72 ) }
    dend_76 { pt3dadd( -101.081, 47.3597, -35.7125, 0.72 ) }
    dend_76 { pt3dadd( -103.771, 47.8446, -36.4353, 1.2 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 97/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -0.413173, 58.0563, 4.16733, 1.32 ) }
    dend_72 { pt3dadd( -0.98325, 59.1693, 4.56976, 1.32 ) }
    dend_72 { pt3dadd( -1.78686, 60.6007, 5.0252, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_72 { pt3dadd( -2.88096, 62.5557, 5.61411, 1.08 ) }
    dend_72 { pt3dadd( -3.55678, 63.8157, 5.96996, 1.08 ) }
    dend_72 { pt3dadd( -3.9408, 64.5873, 6.1691, 1.08 ) }
    dend_72 { pt3dadd( -4.49574, 65.7804, 6.45109, 1.08 ) }
    dend_72 { pt3dadd( -5.1191, 67.1025, 6.67538, 1.08 ) }
    dend_72 { pt3dadd( -5.41235, 67.7168, 6.7628, 1.08 ) }
    dend_72 { pt3dadd( -5.76087, 68.4879, 6.83393, 1.08 ) }
    dend_72 { pt3dadd( -6.2283, 69.4707, 6.91765, 1.08 ) }
    dend_72 { pt3dadd( -6.58944, 70.1178, 6.97941, 1.08 ) }
    dend_72 { pt3dadd( -7.00305, 70.6569, 7.03977, 1.08 ) }
    dend_72 { pt3dadd( -7.52111, 71.1026, 7.09762, 1.08 ) }
    dend_72 { pt3dadd( -8.31462, 71.6734, 7.16902, 1.08 ) }
    dend_72 { pt3dadd( -9.31398, 72.3598, 7.27299, 1.08 ) }
    dend_72 { pt3dadd( -10.1959, 72.9895, 7.37822, 1.08 ) }
    dend_72 { pt3dadd( -11.1394, 73.7722, 7.51046, 1.08 ) }
    dend_72 { pt3dadd( -11.9852, 74.772, 7.51942, 0.96 ) }
    dend_72 { pt3dadd( -12.2358, 75.4944, 7.39097, 0.96 ) }
    dend_72 { pt3dadd( -12.3117, 76.6014, 7.07045, 0.96 ) }
    dend_72 { pt3dadd( -12.2779, 77.5067, 6.78259, 0.96 ) }
    dend_72 { pt3dadd( -12.2099, 78.2886, 6.5275, 0.96 ) }
    dend_72 { pt3dadd( -11.8748, 81.2727, 5.53417, 0.72 ) }
    dend_72 { pt3dadd( -11.7517, 82.5073, 5.09801, 0.72 ) }
    dend_72 { pt3dadd( -11.7013, 83.5696, 4.71711, 0.72 ) }
    dend_72 { pt3dadd( -11.693, 84.7077, 4.3398, 0.72 ) }
    dend_72 { pt3dadd( -11.7439, 86.634, 3.81669, 0.72 ) }
    dend_72 { pt3dadd( -11.7936, 87.5928, 3.62422, 0.72 ) }
    dend_72 { pt3dadd( -11.8799, 88.4939, 3.53849, 0.72 ) }
    dend_72 { pt3dadd( -12.051, 89.7922, 3.37229, 0.72 ) }
    dend_72 { pt3dadd( -12.3266, 91.7945, 3.08613, 0.72 ) }
    dend_72 { pt3dadd( -12.5802, 93.2268, 2.87437, 0.72 ) }
    dend_72 { pt3dadd( -12.8663, 94.4228, 2.70051, 0.72 ) }
    dend_72 { pt3dadd( -13.4252, 96.2601, 2.43745, 1.2 ) }
    dend_72 { pt3dadd( -14.6109, 99.0648, 2.05973, 1.08 ) }
    dend_72 { pt3dadd( -15.378, 100.3, 1.92229, 1.08 ) }
    dend_72 { pt3dadd( -16.2343, 101.366, 1.83077, 1.08 ) }
    dend_72 { pt3dadd( -16.8846, 102.1, 1.80163, 1.08 ) }
    dend_72 { pt3dadd( -17.4905, 102.747, 1.77696, 0.72 ) }
    dend_72 { pt3dadd( -19.223, 104.563, 1.68542, 1.2 ) }
    dend_72 { pt3dadd( -21.082, 106.495, 1.63082, 1.08 ) }
    dend_72 { pt3dadd( -22.6469, 108.163, 1.591, 1.44 ) }
    dend_72 { pt3dadd( -23.4153, 109.108, 1.57243, 1.44 ) }
    dend_72 { pt3dadd( -24.5724, 110.888, 1.54136, 1.2 ) }
    dend_72 { pt3dadd( -25.2063, 112.152, 1.52613, 1.2 ) }
    dend_72 { pt3dadd( -25.8715, 114.034, 1.53739, 1.08 ) }
    dend_72 { pt3dadd( -26.3673, 116.21, 1.60478, 1.08 ) }
    dend_72 { pt3dadd( -26.7401, 118.369, 1.75024, 0.96 ) }
    dend_72 { pt3dadd( -27.0458, 120.534, 1.96079, 0.96 ) }
    dend_72 { pt3dadd( -27.1697, 121.664, 2.11921, 1.2 ) }
    dend_72 { pt3dadd( -27.2772, 123.02, 2.24345, 0.72 ) }
    dend_72 { pt3dadd( -27.3404, 125.721, 2.30092, 1.2 ) }
    dend_72 { pt3dadd( -27.3384, 126.437, 2.25716, 1.2 ) }
    dend_72 { pt3dadd( -27.3996, 127.851, 2.09081, 1.2 ) }
    dend_72 { pt3dadd( -27.5716, 129.244, 1.84929, 1.2 ) }
    dend_72 { pt3dadd( -28.0957, 131.913, 1.23252, 1.2 ) }
    dend_72 { pt3dadd( -28.4599, 133.104, 0.875849, 1.2 ) }
    dend_72 { pt3dadd( -28.8057, 133.842, 0.614366, 1.2 ) }
    dend_72 { pt3dadd( -29.8224, 135.313, 0.13348, 0.96 ) }
    dend_72 { pt3dadd( -30.6706, 136.16, -0.0591405, 1.2 ) }
    dend_72 { pt3dadd( -31.2316, 136.636, -0.107883, 1.2 ) }
    dend_72 { pt3dadd( -32.1858, 137.392, -0.103742, 1.2 ) }
    dend_72 { pt3dadd( -32.7832, 137.877, -0.100587, 1.2 ) }
    dend_72 { pt3dadd( -34.2505, 139.184, -0.091393, 1.2 ) }
    dend_72 { pt3dadd( -35.9036, 140.944, -0.0794076, 1.2 ) }
    dend_72 { pt3dadd( -36.7813, 142.057, -0.072801, 1.2 ) }
    dend_72 { pt3dadd( -37.3441, 142.853, -0.0689369, 1.2 ) }
    dend_72 { pt3dadd( -37.9499, 143.841, -0.0649725, 1.2 ) }
    dend_72 { pt3dadd( -38.4626, 144.797, -0.0618546, 1.2 ) }
    dend_72 { pt3dadd( -39.2604, 146.641, -0.0574682, 0.84 ) }
    dend_72 { pt3dadd( -39.9612, 148.509, -0.0328283, 1.32 ) }
    dend_72 { pt3dadd( -40.9477, 151.3, 0.0298504, 0.84 ) }
    dend_72 { pt3dadd( -41.4344, 152.702, 0.0731551, 0.84 ) }
    dend_72 { pt3dadd( -41.8164, 153.8, 0.115487, 0.84 ) }
    dend_72 { pt3dadd( -42.329, 155.295, 0.183276, 0.84 ) }
    dend_72 { pt3dadd( -42.9523, 157.002, 0.308259, 0.84 ) }
    dend_72 { pt3dadd( -43.355, 157.958, 0.401905, 0.84 ) }
    dend_72 { pt3dadd( -43.9759, 159.09, 0.470701, 0.84 ) }
    dend_72 { pt3dadd( -44.4336, 159.722, 0.479213, 0.84 ) }
    dend_72 { pt3dadd( -45.3117, 160.681, 0.447157, 1.2 ) }
    dend_72 { pt3dadd( -46.743, 161.974, 0.305219, 0.84 ) }
    dend_72 { pt3dadd( -48.0793, 163.022, 0.145737, 0.84 ) }
    dend_72 { pt3dadd( -49.6489, 164.09, -0.0267945, 1.2 ) }
    dend_72 { pt3dadd( -50.9417, 164.725, -0.145439, 0.6 ) }
    dend_72 { pt3dadd( -52.5182, 165.408, -0.295905, 0.6 ) }
    dend_72 { pt3dadd( -54.1967, 166.008, -0.462355, 1.08 ) }
    dend_72 { pt3dadd( -56.1272, 166.555, -0.661343, 0.48 ) }
    dend_72 { pt3dadd( -57.231, 166.784, -0.722536, 0.48 ) }
    dend_72 { pt3dadd( -60.4654, 167.27, -0.615443, 0.84 ) }
    dend_72 { pt3dadd( -65.5525, 176.01, 0.572595, 0.84 ) }
    dend_72 { pt3dadd( -70.5481, 184.887, 0.379738, 0.84 ) }
    dend_72 { pt3dadd( -74.3377, 194.366, 0.0278418, 0.84 ) }
    dend_72 { pt3dadd( -78.4042, 203.578, -1.61014, 0.84 ) }
    dend_72 { pt3dadd( -82.1964, 212.928, -3.16269, 0.84 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 92/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -0.413173, 58.0563, 4.16733, 1.32 ) }
    dend_71 { pt3dadd( -2.93851, 60.6691, 3.53508, 1.32 ) }
    dend_71 { pt3dadd( -3.7974, 61.6136, 3.24546, 1.32 ) }
    dend_71 { pt3dadd( -4.81361, 62.8658, 2.81324, 1.32 ) }
    dend_71 { pt3dadd( -5.79017, 64.2897, 2.27512, 1.32 ) }
    dend_71 { pt3dadd( -6.33146, 65.1583, 1.93893, 1.32 ) }
    dend_71 { pt3dadd( -7.09121, 66.6761, 1.37714, 1.32 ) }
    dend_71 { pt3dadd( -7.56317, 68.2527, 0.758485, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_71 { pt3dadd( -7.82969, 70.1231, 0.0542461, 1.56 ) }
    dend_71 { pt3dadd( -7.75766, 71.983, -0.615673, 1.56 ) }
    dend_71 { pt3dadd( -7.60674, 72.6451, -0.816278, 1.56 ) }
    dend_71 { pt3dadd( -6.56758, 75.2619, -1.53534, 1.2 ) }
    dend_71 { pt3dadd( -6.05923, 76.1408, -1.75156, 1.2 ) }
    dend_71 { pt3dadd( -5.13006, 77.3467, -2.056, 1.2 ) }
    dend_71 { pt3dadd( -3.5638, 78.9613, -2.52702, 1.08 ) }
    dend_71 { pt3dadd( -2.3649, 80.0077, -2.88354, 1.08 ) }
    dend_71 { pt3dadd( -1.60153, 80.602, -3.15757, 1.08 ) }
    dend_71 { pt3dadd( -0.87069, 81.1421, -3.49626, 1.08 ) }
    dend_71 { pt3dadd( -0.135018, 81.7656, -3.94253, 1.08 ) }
    dend_71 { pt3dadd( 1.19484, 83.1218, -4.99865, 1.8 ) }
    dend_71 { pt3dadd( 1.43717, 83.4613, -5.27494, 1.8 ) }
    dend_71 { pt3dadd( 2.29735, 85.3085, -6.74039, 1.32 ) }
    dend_71 { pt3dadd( 2.58448, 86.3873, -7.57187, 1.32 ) }
    dend_71 { pt3dadd( 2.63392, 87.7705, -8.59816, 1.08 ) }
    dend_71 { pt3dadd( 2.53115, 88.1688, -8.86983, 1.08 ) }
    dend_71 { pt3dadd( 2.00569, 89.1617, -9.44112, 1.08 ) }
    dend_71 { pt3dadd( 1.32903, 90.2076, -9.97884, 1.44 ) }
    dend_71 { pt3dadd( 0.760222, 90.9701, -10.3394, 1.44 ) }
    dend_71 { pt3dadd( 0.06023, 91.8919, -10.7852, 1.44 ) }
    dend_71 { pt3dadd( -0.533595, 92.7023, -11.2226, 1.44 ) }
    dend_71 { pt3dadd( -1.67595, 94.4991, -12.2809, 0.84 ) }
    dend_71 { pt3dadd( -2.23909, 95.5765, -12.9294, 0.84 ) }
    dend_71 { pt3dadd( -3.09672, 97.81, -14.3262, 1.44 ) }
    dend_71 { pt3dadd( -3.44687, 99.0889, -14.9846, 1.44 ) }
    dend_71 { pt3dadd( -3.80149, 101.014, -15.7962, 0.96 ) }
    dend_71 { pt3dadd( -4.10502, 102.994, -16.608, 0.96 ) }
    dend_71 { pt3dadd( -4.25602, 104.003, -17.0006, 0.96 ) }
    dend_71 { pt3dadd( -4.38398, 105.503, -17.4673, 0.72 ) }
    dend_71 { pt3dadd( -4.25018, 109.454, -18.2075, 1.2 ) }
    dend_71 { pt3dadd( -4.05925, 111.162, -18.3346, 1.2 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -59.9434, 68.7666, 41.6968, 0.6 ) }
    dend_68 { pt3dadd( -65.7831, 76.3297, 45.0812, 0.6 ) }
    dend_68 { pt3dadd( -70.6938, 85.0909, 46.7618, 0.6 ) }
    dend_68 { pt3dadd( -74.4001, 94.1201, 49.7055, 0.6 ) }
    dend_68 { pt3dadd( -79.4408, 102.204, 53.2257, 0.6 ) }
    dend_68 { pt3dadd( -83.4171, 110.631, 57.2994, 0.6 ) }
    dend_68 { pt3dadd( -88.0369, 118.724, 61.3375, 0.6 ) }
    dend_68 { pt3dadd( -93.1892, 127.078, 63.9888, 0.6 ) }
    dend_68 { pt3dadd( -99.8645, 134.425, 66.0071, 0.6 ) }
    dend_68 { pt3dadd( -106.326, 141.675, 68.8744, 0.6 ) }
    dend_68 { pt3dadd( -111.128, 149.642, 72.9398, 0.6 ) }
    dend_68 { pt3dadd( -116.555, 158.033, 74.8184, 0.6 ) }
    dend_68 { pt3dadd( -120.672, 167.023, 77.2918, 0.6 ) }
    dend_68 { pt3dadd( -125.214, 175.488, 80.6332, 0.6 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 46/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -59.9434, 68.7666, 41.6968, 0.84 ) }
    dend_67 { pt3dadd( -66.7693, 73.654, 47.2349, 0.6 ) }
    dend_67 { pt3dadd( -72.9875, 80.2722, 51.667, 0.6 ) }
    dend_67 { pt3dadd( -77.7285, 88.4603, 55.3695, 0.6 ) }
    dend_67 { pt3dadd( -82.0256, 97.1371, 58.5122, 0.6 ) }
    dend_67 { pt3dadd( -86.5038, 105.358, 62.4633, 0.6 ) }
    dend_67 { pt3dadd( -93.0955, 111.897, 66.4453, 0.6 ) }
    dend_67 { pt3dadd( -99.6727, 119.029, 69.3311, 0.6 ) }
    dend_67 { pt3dadd( -105.938, 126.284, 72.5939, 0.6 ) }
    dend_67 { pt3dadd( -111.993, 133.955, 75.3028, 0.6 ) }
    dend_67 { pt3dadd( -117.633, 141.762, 78.4925, 0.6 ) }
    dend_67 { pt3dadd( -123.566, 149.943, 79.5371, 0.6 ) }
    dend_67 { pt3dadd( -128.827, 158.569, 80.7607, 0.6 ) }
    dend_67 { pt3dadd( -133.411, 167.638, 81.6044, 0.6 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 60/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -13.852, -181.15, -8.25554, 0.96 ) }
    dend_63 { pt3dadd( -15.7132, -180.749, -8.25554, 0.96 ) }
    dend_63 { pt3dadd( -17.1296, -180.444, -8.25554, 0.96 ) }
    dend_63 { pt3dadd( -18.1362, -180.227, -8.25554, 0.72 ) }
    dend_63 { pt3dadd( -18.8772, -180.067, -8.25554, 0.72 ) }
    dend_63 { pt3dadd( -19.5063, -179.932, -8.25554, 0.72 ) }
    dend_63 { pt3dadd( -20.5773, -179.701, -8.25554, 1.08 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 67/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -13.852, -181.15, -8.25554, 0.96 ) }
    dend_62 { pt3dadd( -15.2072, -185.451, -9.35051, 0.96 ) }
    dend_62 { pt3dadd( -15.7892, -186.979, -10.131, 0.96 ) }
    dend_62 { pt3dadd( -16.3759, -188.733, -11.1531, 1.32 ) }
    dend_62 { pt3dadd( -16.999, -191.02, -12.4267, 0.6 ) }
    dend_62 { pt3dadd( -17.2848, -192.373, -13.2969, 0.6 ) }
    dend_62 { pt3dadd( -17.543, -193.98, -14.3403, 1.2 ) }
    dend_62 { pt3dadd( -18.1465, -199.085, -17.5779, 1.2 ) }
    dend_62 { pt3dadd( -18.3398, -200.803, -18.7089, 1.56 ) }
    dend_62 { pt3dadd( -18.5546, -203.258, -20.323, 0.96 ) }
    dend_62 { pt3dadd( -18.7468, -207.698, -23.0974, 0.6 ) }
    dend_62 { pt3dadd( -18.7684, -209.721, -24.2015, 1.08 ) }
    dend_62 { pt3dadd( -18.794, -211.587, -25.151, 0.72 ) }
    dend_62 { pt3dadd( -18.8629, -212.559, -25.5573, 0.72 ) }
    dend_62 { pt3dadd( -19.0709, -213.905, -26.1179, 1.08 ) }
    dend_62 { pt3dadd( -19.3786, -215.375, -26.6898, 0.72 ) }
    dend_62 { pt3dadd( -19.8057, -217.067, -27.2056, 0.72 ) }
    dend_62 { pt3dadd( -21.0689, -221.508, -28.558, 0.48 ) }
    dend_62 { pt3dadd( -21.5557, -223.115, -29.0303, 1.56 ) }
    dend_62 { pt3dadd( -22.4796, -225.921, -29.7616, 1.08 ) }
    dend_62 { pt3dadd( -22.8876, -227.036, -30.0042, 0.72 ) }
    dend_62 { pt3dadd( -23.7182, -229.195, -30.3648, 1.08 ) }
    dend_62 { pt3dadd( -24.5147, -231.211, -30.661, 0.72 ) }
    dend_62 { pt3dadd( -24.9061, -232.264, -30.7603, 0.72 ) }
    dend_62 { pt3dadd( -25.8194, -234.822, -31.1013, 1.2 ) }
    dend_62 { pt3dadd( -26.4931, -236.847, -31.445, 0.72 ) }
    dend_62 { pt3dadd( -26.7828, -237.764, -31.6224, 0.72 ) }
    dend_62 { pt3dadd( -27.4915, -240.508, -32.1929, 0.72 ) }
    dend_62 { pt3dadd( -27.7458, -242.099, -32.7138, 1.08 ) }
    dend_62 { pt3dadd( -27.8608, -243.48, -33.2208, 0.96 ) }
    dend_62 { pt3dadd( -27.892, -244.513, -33.6088, 0.96 ) }
    dend_62 { pt3dadd( -27.8808, -245.702, -34.0362, 0.96 ) }
    dend_62 { pt3dadd( -27.8011, -247.902, -34.7464, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_62 { pt3dadd( -27.5135, -252.706, -36.0786, 1.2 ) }
    dend_62 { pt3dadd( -27.2403, -256.047, -36.9942, 0.6 ) }
    dend_62 { pt3dadd( -26.9744, -258.273, -37.5744, 0.6 ) }
    dend_62 { pt3dadd( -26.7683, -259.531, -37.8606, 0.6 ) }
    dend_62 { pt3dadd( -26.4729, -260.953, -38.1182, 0.6 ) }
    dend_62 { pt3dadd( -26.2823, -261.934, -38.2039, 0.6 ) }
    dend_62 { pt3dadd( -26.1428, -262.742, -38.1918, 0.6 ) }
    dend_62 { pt3dadd( -25.9486, -263.876, -38.1904, 0.6 ) }
    dend_62 { pt3dadd( -25.5453, -266.457, -38.3244, 0.6 ) }
    dend_62 { pt3dadd( -25.4244, -267.34, -38.3989, 0.6 ) }
    dend_62 { pt3dadd( -24.8091, -272.401, -38.9266, 0.96 ) }
    dend_62 { pt3dadd( -24.5458, -274.819, -39.2009, 0.48 ) }
    dend_62 { pt3dadd( -24.412, -276.345, -39.3806, 0.48 ) }
    dend_62 { pt3dadd( -24.2001, -279.951, -39.805, 0.72 ) }
    dend_62 { pt3dadd( -24.1145, -282.101, -40.0525, 0.48 ) }
    dend_62 { pt3dadd( -24.0562, -283.809, -40.1726, 1.2 ) }
    dend_62 { pt3dadd( -23.9998, -287.036, -40.2629, 0.84 ) }
    dend_62 { pt3dadd( -24.0248, -288.992, -40.2376, 1.32 ) }
    dend_62 { pt3dadd( -24.1562, -291.797, -40.1008, 0.84 ) }
    dend_62 { pt3dadd( -24.3311, -293.948, -39.914, 1.44 ) }
    dend_62 { pt3dadd( -24.9034, -298.769, -39.3849, 0.48 ) }
    dend_62 { pt3dadd( -25.258, -301.249, -39.0736, 0.48 ) }
    dend_62 { pt3dadd( -25.8749, -304.454, -38.6288, 0.48 ) }
    dend_62 { pt3dadd( -26.352, -306.356, -38.3496, 0.48 ) }
    dend_62 { pt3dadd( -26.9416, -308.104, -38.0769, 0.96 ) }
    dend_62 { pt3dadd( -28.6866, -311.897, -37.4903, 0.48 ) }
    dend_62 { pt3dadd( -29.08, -312.606, -37.3907, 0.84 ) }
    dend_62 { pt3dadd( -30.4515, -314.766, -37.0349, 0.6 ) }
    dend_62 { pt3dadd( -31.5093, -316.127, -36.7693, 0.84 ) }
    dend_62 { pt3dadd( -32.7944, -317.541, -36.4689, 0.6 ) }
    dend_62 { pt3dadd( -34.3134, -318.889, -36.1865, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_42 (entry count 31/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.37115, -42.9564, 9.37396, 0.96 ) }
    dend_58 { pt3dadd( 2.73308, -44.3962, 9.49526, 0.96 ) }
    dend_58 { pt3dadd( 2.23615, -45.9218, 9.58181, 0.96 ) }
    dend_58 { pt3dadd( 2.08935, -46.5054, 9.68959, 0.96 ) }
    dend_58 { pt3dadd( 1.81679, -47.5616, 9.99742, 0.96 ) }
    dend_58 { pt3dadd( 1.55019, -48.5196, 10.3501, 0.96 ) }
    dend_58 { pt3dadd( 1.22612, -49.6032, 10.8537, 0.96 ) }
    dend_58 { pt3dadd( 0.754851, -51.3007, 11.7873, 1.32 ) }
    dend_58 { pt3dadd( 0.148112, -53.4023, 13.0611, 0.84 ) }
    dend_58 { pt3dadd( -0.234796, -54.7872, 13.9558, 0.84 ) }
    dend_58 { pt3dadd( -0.474154, -55.7169, 14.6014, 0.84 ) }
    dend_58 { pt3dadd( -1.0032, -57.7064, 16.105, 1.32 ) }
    dend_58 { pt3dadd( -1.37675, -58.8719, 17.0775, 1.32 ) }
    dend_58 { pt3dadd( -1.78802, -59.9173, 18.0211, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 45/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 3.37115, -42.9564, 9.37396, 1.44 ) }
    dend_43 { pt3dadd( 3.65425, -47.3187, 9.58995, 1.44 ) }
    dend_43 { pt3dadd( 3.84265, -50.4411, 9.72381, 1.44 ) }
    dend_43 { pt3dadd( 3.95684, -52.3098, 9.79082, 1.44 ) }
    dend_43 { pt3dadd( 4.16762, -56.2185, 9.90585, 1.8 ) }
    dend_43 { pt3dadd( 4.25548, -57.8476, 9.9538, 1.8 ) }
    dend_43 { pt3dadd( 4.34217, -59.4553, 10.0011, 1.8 ) }
    dend_43 { pt3dadd( 4.40238, -60.7968, 10.0013, 1.8 ) }
    dend_43 { pt3dadd( 4.49929, -63.5501, 10.0031, 1.56 ) }
    dend_43 { pt3dadd( 4.59717, -66.4851, 10.0075, 1.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_19 (entry count 55/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 12.6477, -71.875, 8.19909, 1.56 ) }
    dend_37 { pt3dadd( 14.944, -74.4397, 8.19909, 1.56 ) }
    dend_37 { pt3dadd( 16.3259, -76.0099, 8.19909, 1.56 ) }
    dend_37 { pt3dadd( 18.038, -77.9503, 8.19909, 1.2 ) }
    dend_37 { pt3dadd( 19.0703, -79.1168, 8.19909, 1.2 ) }
    dend_37 { pt3dadd( 20.6166, -80.8501, 8.19909, 1.56 ) }
    dend_37 { pt3dadd( 22.8304, -83.3816, 8.19909, 1.2 ) }
    dend_37 { pt3dadd( 23.8308, -84.5695, 8.19909, 1.8 ) }
    dend_37 { pt3dadd( 24.8872, -85.8423, 8.19909, 1.8 ) }
    dend_37 { pt3dadd( 26.943, -88.3826, 8.22058, 1.08 ) }
    dend_37 { pt3dadd( 28.3907, -90.2125, 8.24863, 1.68 ) }
    dend_37 { pt3dadd( 30.0496, -92.3744, 8.26392, 1.32 ) }
    dend_37 { pt3dadd( 31.1259, -93.825, 8.26426, 1.32 ) }
    dend_37 { pt3dadd( 31.7869, -94.7318, 8.25907, 1.32 ) }
    dend_37 { pt3dadd( 33.334, -96.9397, 8.23382, 1.08 ) }
    dend_37 { pt3dadd( 34.3966, -98.547, 8.17955, 1.56 ) }
    dend_37 { pt3dadd( 35.9708, -101.096, 8.10126, 1.2 ) }
    dend_37 { pt3dadd( 36.5202, -102.025, 8.07543, 1.2 ) }
    dend_37 { pt3dadd( 37.041, -102.918, 8.06662, 1.2 ) }
    dend_37 { pt3dadd( 38.0594, -104.666, 8.07511, 1.68 ) }
    dend_37 { pt3dadd( 38.9106, -106.115, 8.14137, 1.2 ) }
    dend_37 { pt3dadd( 39.9966, -107.921, 8.30382, 0.96 ) }
    dend_37 { pt3dadd( 40.7157, -109.019, 8.44763, 0.96 ) }
    dend_37 { pt3dadd( 42.6316, -111.697, 8.83554, 0.84 ) }
    dend_37 { pt3dadd( 43.6089, -112.988, 9.04429, 0.84 ) }
    dend_37 { pt3dadd( 45.1412, -114.891, 9.38875, 1.44 ) }
    dend_37 { pt3dadd( 45.955, -115.859, 9.57841, 1.44 ) }
    dend_37 { pt3dadd( 47.4291, -117.591, 9.87799, 1.44 ) }
    dend_37 { pt3dadd( 48.2804, -118.649, 10.0515, 0.96 ) }
    dend_37 { pt3dadd( 49.2033, -119.888, 10.223, 1.44 ) }
    dend_37 { pt3dadd( 49.5296, -120.338, 10.275, 1.44 ) }
    dend_37 { pt3dadd( 50.3556, -121.511, 10.3656, 1.44 ) }
    dend_37 { pt3dadd( 50.9901, -122.458, 10.4319, 1.44 ) }
    dend_37 { pt3dadd( 52.1494, -124.234, 10.5334, 1.08 ) }
    dend_37 { pt3dadd( 53.2136, -125.813, 10.5989, 1.08 ) }
    dend_37 { pt3dadd( 53.856, -126.688, 10.6191, 1.08 ) }
    dend_37 { pt3dadd( 55.1443, -128.297, 10.6412, 1.44 ) }
    dend_37 { pt3dadd( 55.7838, -129.04, 10.6532, 1.44 ) }
    dend_37 { pt3dadd( 57.4302, -130.943, 10.7049, 0.84 ) }
    dend_37 { pt3dadd( 58.4924, -132.196, 10.7474, 1.56 ) }
    dend_37 { pt3dadd( 60.2784, -134.392, 10.8333, 1.08 ) }
    dend_37 { pt3dadd( 61.1421, -135.477, 10.8789, 1.32 ) }
    dend_37 { pt3dadd( 63.7363, -138.467, 11.0089, 1.08 ) }
    dend_37 { pt3dadd( 65.0527, -139.874, 11.0855, 1.08 ) }
    dend_37 { pt3dadd( 66.1954, -141.018, 11.1565, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( 67.8848, -142.587, 11.2579, 1.08 ) }
    dend_37 { pt3dadd( 69.0429, -143.619, 11.2834, 1.08 ) }
    dend_37 { pt3dadd( 72.5412, -146.638, 11.2236, 1.44 ) }
    dend_37 { pt3dadd( 74.9356, -148.658, 11.0859, 1.08 ) }
    dend_37 { pt3dadd( 76.4158, -149.923, 10.9625, 1.08 ) }
    dend_37 { pt3dadd( 78.7803, -152.05, 10.7416, 1.08 ) }
    dend_37 { pt3dadd( 81.4648, -154.521, 10.4471, 0.72 ) }
    dend_37 { pt3dadd( 83.4919, -156.508, 10.1742, 1.32 ) }
    dend_37 { pt3dadd( 84.9073, -158.105, 9.90912, 0.84 ) }
    dend_37 { pt3dadd( 85.7742, -159.159, 9.69624, 0.84 ) }
    dend_37 { pt3dadd( 87.2216, -161.144, 9.29267, 1.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 12.6477, -71.875, 8.19909, 1.68 ) }
    dend_20 { pt3dadd( 12.7391, -74.5058, 8.26517, 1.68 ) }
    dend_20 { pt3dadd( 12.8808, -76.8295, 8.32388, 1.68 ) }
    dend_20 { pt3dadd( 12.9986, -78.1628, 8.35617, 1.68 ) }
    dend_20 { pt3dadd( 13.4453, -82.0111, 8.44276, 1.32 ) }
    dend_20 { pt3dadd( 13.788, -84.5695, 8.49409, 1.56 ) }
    dend_20 { pt3dadd( 14.1684, -87.8727, 8.55057, 1.56 ) }
    dend_20 { pt3dadd( 14.3102, -89.1172, 8.56329, 1.56 ) }
    dend_20 { pt3dadd( 14.4619, -91.0257, 8.57988, 1.56 ) }
    dend_20 { pt3dadd( 14.5608, -93.3221, 8.59596, 1.56 ) }
    dend_20 { pt3dadd( 14.6184, -96.5789, 8.61233, 1.2 ) }
    dend_20 { pt3dadd( 14.6327, -101.159, 8.62474, 1.56 ) }
    dend_20 { pt3dadd( 14.6195, -104.347, 8.65514, 1.2 ) }
    dend_20 { pt3dadd( 14.6162, -108.353, 8.72207, 1.2 ) }
    dend_20 { pt3dadd( 14.622, -110.675, 8.75123, 1.56 ) }
    dend_20 { pt3dadd( 14.6383, -113.352, 8.75475, 1.56 ) }
    dend_20 { pt3dadd( 14.6858, -115.512, 8.72327, 1.56 ) }
    dend_20 { pt3dadd( 14.856, -118.844, 8.69985, 1.2 ) }
    dend_20 { pt3dadd( 14.9892, -121.739, 8.69859, 1.56 ) }
    dend_20 { pt3dadd( 15.1061, -125.027, 8.71405, 1.44 ) }
    dend_20 { pt3dadd( 15.1405, -127.33, 8.73312, 1.44 ) }
    dend_20 { pt3dadd( 15.1221, -128.985, 8.75109, 1.44 ) }
    dend_20 { pt3dadd( 15.0154, -134.553, 8.8209, 1.08 ) }
    dend_20 { pt3dadd( 14.9599, -137.551, 8.78877, 1.08 ) }
    dend_20 { pt3dadd( 14.9431, -140.241, 8.70335, 1.44 ) }
    dend_20 { pt3dadd( 14.9595, -141.443, 8.64854, 1.44 ) }
    dend_20 { pt3dadd( 15.0198, -143.192, 8.52893, 1.44 ) }
    dend_20 { pt3dadd( 15.1554, -145.688, 8.2548, 1.44 ) }
    dend_20 { pt3dadd( 15.4589, -149.206, 7.6073, 1.32 ) }
    dend_20 { pt3dadd( 15.7757, -151.646, 7.09997, 1.32 ) }
    dend_20 { pt3dadd( 15.971, -152.941, 6.81236, 1.32 ) }
    dend_20 { pt3dadd( 16.1163, -154.013, 6.58405, 1.32 ) }
    dend_20 { pt3dadd( 16.3227, -155.899, 6.22395, 1.32 ) }
    dend_20 { pt3dadd( 16.4019, -157.024, 6.05347, 1.32 ) }
    dend_20 { pt3dadd( 16.4863, -158.345, 5.9065, 1.32 ) }
    dend_20 { pt3dadd( 16.6551, -161.118, 5.5864, 1.8 ) }
    dend_20 { pt3dadd( 16.7923, -163.785, 5.26193, 1.8 ) }
    dend_20 { pt3dadd( 16.903, -166.104, 5.04483, 1.8 ) }
    dend_20 { pt3dadd( 16.9914, -168.418, 4.88259, 1.8 ) }
    dend_20 { pt3dadd( 17.0804, -172.183, 4.69524, 1.56 ) }
    dend_20 { pt3dadd( 17.1079, -176.005, 4.56884, 1.56 ) }
    dend_20 { pt3dadd( 17.0898, -177.838, 4.53964, 1.56 ) }
    dend_20 { pt3dadd( 17.0177, -181.743, 4.5565, 1.32 ) }
    dend_20 { pt3dadd( 16.9688, -183.574, 4.59959, 1.32 ) }
    dend_20 { pt3dadd( 16.8381, -186.857, 4.74416, 1.8 ) }
    dend_20 { pt3dadd( 16.6677, -189.733, 4.9426, 1.8 ) }
    dend_20 { pt3dadd( 16.5277, -192.681, 5.17728, 1.56 ) }
    dend_20 { pt3dadd( 16.4923, -195.462, 5.35964, 1.56 ) }
    dend_20 { pt3dadd( 16.5416, -197.334, 5.43745, 1.56 ) }
    dend_20 { pt3dadd( 16.6256, -198.689, 5.49158, 1.56 ) }
    dend_20 { pt3dadd( 16.7281, -200.078, 5.52791, 1.56 ) }
    dend_20 { pt3dadd( 16.8701, -202.086, 5.54404, 1.56 ) }
    dend_20 { pt3dadd( 17.0075, -204.558, 5.5202, 1.2 ) }
    dend_20 { pt3dadd( 17.0732, -206.928, 5.436, 1.2 ) }
    dend_20 { pt3dadd( 17.0819, -208.56, 5.35142, 1.2 ) }
    dend_20 { pt3dadd( 17.0154, -211.605, 5.13951, 1.56 ) }
    dend_20 { pt3dadd( 16.9076, -214.533, 4.88164, 1.56 ) }
    dend_20 { pt3dadd( 16.8331, -216.357, 4.69662, 1.56 ) }
    dend_20 { pt3dadd( 16.7797, -218.759, 4.44325, 1.56 ) }
    dend_20 { pt3dadd( 16.7569, -221.044, 4.18342, 1.56 ) }
    dend_20 { pt3dadd( 16.7896, -225.55, 3.63988, 1.56 ) }
    dend_20 { pt3dadd( 16.9425, -230.731, 2.9716, 1.32 ) }
    dend_20 { pt3dadd( 17.1036, -235.047, 2.36902, 1.32 ) }
    dend_20 { pt3dadd( 17.1925, -237.371, 2.03893, 0.84 ) }
    dend_20 { pt3dadd( 17.2819, -239.759, 1.70228, 1.32 ) }
    dend_20 { pt3dadd( 17.3971, -242.593, 1.29904, 1.08 ) }
    dend_20 { pt3dadd( 17.5493, -245.252, 0.894805, 1.44 ) }
    dend_20 { pt3dadd( 17.7106, -248.057, 0.422057, 1.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.88688, 38.055, 16.2039, 1.2 ) }
    dend_11 { pt3dadd( 5.20081, 40.9767, 16.9623, 1.2 ) }
    dend_11 { pt3dadd( 4.56512, 42.3103, 17.3838, 1.2 ) }
    dend_11 { pt3dadd( 4.097, 43.4728, 17.7901, 1.2 ) }
    dend_11 { pt3dadd( 3.36826, 45.856, 18.7841, 1.2 ) }
    dend_11 { pt3dadd( 3.08431, 47.1396, 19.3544, 1.2 ) }
    dend_11 { pt3dadd( 2.90129, 48.3733, 19.9142, 1.08 ) }
    dend_11 { pt3dadd( 2.84833, 50.3386, 20.8839, 1.56 ) }
    dend_11 { pt3dadd( 2.89326, 51.6603, 21.5417, 1.56 ) }
    dend_11 { pt3dadd( 3.15546, 54.5744, 22.9301, 1.2 ) }
    dend_11 { pt3dadd( 3.41205, 56.4505, 23.7465, 0.96 ) }
    dend_11 { pt3dadd( 3.67969, 58.5051, 24.5285, 1.32 ) }
    dend_11 { pt3dadd( 3.76162, 59.4424, 24.8567, 1.32 ) }
    dend_11 { pt3dadd( 3.80352, 60.4867, 25.1782, 1.32 ) }
    dend_11 { pt3dadd( 3.82367, 62.0435, 25.5733, 1.32 ) }
    dend_11 { pt3dadd( 3.81511, 62.9167, 25.7585, 1.32 ) }
    dend_11 { pt3dadd( 3.81927, 64.6204, 26.1265, 1.2 ) }
    dend_11 { pt3dadd( 3.87832, 66.3921, 26.5603, 1.56 ) }
    dend_11 { pt3dadd( 3.93555, 67.5753, 26.8682, 1.2 ) }
    dend_11 { pt3dadd( 4.06689, 69.3976, 27.3825, 1.68 ) }
    dend_11 { pt3dadd( 4.3603, 71.8707, 28.1359, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_11 { pt3dadd( 4.54288, 72.8602, 28.4555, 1.44 ) }
    dend_11 { pt3dadd( 5.02966, 74.5008, 28.9977, 1.08 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 2/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.88688, 38.055, 16.2039, 1.44 ) }
    dend_2 { pt3dadd( 6.84667, 41.7454, 15.8367, 1.44 ) }
    dend_2 { pt3dadd( 6.82824, 43.4375, 15.6684, 1.44 ) }
    dend_2 { pt3dadd( 6.80692, 45.3937, 15.4737, 1.44 ) }
    dend_2 { pt3dadd( 6.7824, 47.6449, 15.2498, 1.44 ) }
    dend_2 { pt3dadd( 6.7527, 50.3704, 14.9786, 1.8 ) }
    dend_2 { pt3dadd( 6.72758, 52.6761, 14.7492, 1.8 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 9/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -1.78802, -59.9173, 18.0211, 0.96 ) }
    dend_60 { pt3dadd( -2.7382, -63.5736, 18.7942, 0.96 ) }
    dend_60 { pt3dadd( -3.39613, -65.8196, 19.1948, 0.96 ) }
    dend_60 { pt3dadd( -3.80662, -67.2734, 19.4139, 0.96 ) }
    dend_60 { pt3dadd( -4.12209, -68.3761, 19.5726, 0.96 ) }
    dend_60 { pt3dadd( -4.47846, -69.6293, 19.7371, 0.96 ) }
    dend_60 { pt3dadd( -5.05753, -71.8975, 20.0144, 0.6 ) }
    dend_60 { pt3dadd( -5.27057, -72.5937, 20.0763, 0.6 ) }
    dend_60 { pt3dadd( -5.66602, -73.8333, 20.214, 1.08 ) }
    dend_60 { pt3dadd( -6.52751, -76.4195, 20.591, 0.72 ) }
    dend_60 { pt3dadd( -7.19536, -78.3596, 20.9123, 0.72 ) }
    dend_60 { pt3dadd( -8.267, -81.3514, 21.4265, 0.72 ) }
    dend_60 { pt3dadd( -9.37861, -84.2066, 21.9175, 1.2 ) }
    dend_60 { pt3dadd( -10.0532, -85.7535, 22.1772, 1.08 ) }
    dend_60 { pt3dadd( -10.9776, -87.5884, 22.4723, 0.48 ) }
    dend_60 { pt3dadd( -12.1614, -89.7168, 22.7722, 0.48 ) }
    dend_60 { pt3dadd( -13.5577, -92.0576, 23.057, 1.44 ) }
    dend_60 { pt3dadd( -14.6484, -93.8248, 23.2163, 0.84 ) }
    dend_60 { pt3dadd( -15.2103, -94.8299, 23.2742, 1.08 ) }
    dend_60 { pt3dadd( -16.0522, -96.4567, 23.3262, 1.08 ) }
    dend_60 { pt3dadd( -17.1065, -98.73, 23.3684, 1.44 ) }
    dend_60 { pt3dadd( -17.819, -100.427, 23.4145, 0.84 ) }
    dend_60 { pt3dadd( -18.278, -101.68, 23.4948, 1.32 ) }
    dend_60 { pt3dadd( -18.921, -103.794, 23.6887, 0.72 ) }
    dend_60 { pt3dadd( -19.2265, -104.846, 23.8059, 0.72 ) }
    dend_60 { pt3dadd( -19.5228, -105.784, 23.9432, 0.72 ) }
    dend_60 { pt3dadd( -20.142, -107.138, 24.201, 0.72 ) }
    dend_60 { pt3dadd( -21.2124, -108.576, 24.5451, 1.08 ) }
    dend_60 { pt3dadd( -22.2815, -109.738, 24.8632, 0.6 ) }
    dend_60 { pt3dadd( -23.6982, -110.921, 25.2356, 1.08 ) }
    dend_60 { pt3dadd( -24.8039, -111.667, 25.5024, 0.96 ) }
    dend_60 { pt3dadd( -26.7155, -112.66, 25.9016, 0.84 ) }
    dend_60 { pt3dadd( -28.7408, -113.363, 26.2233, 0.84 ) }
    dend_60 { pt3dadd( -32.3475, -122.907, 26.7531, 0.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -1.78802, -59.9173, 18.0211, 0.84 ) }
    dend_59 { pt3dadd( -2.59208, -61.5518, 18.9742, 0.84 ) }
    dend_59 { pt3dadd( -3.16728, -62.7206, 19.6287, 0.84 ) }
    dend_59 { pt3dadd( -3.42425, -63.2787, 19.915, 0.84 ) }
    dend_59 { pt3dadd( -4.29946, -65.3999, 20.9327, 0.48 ) }
    dend_59 { pt3dadd( -4.74734, -66.5766, 21.4598, 0.48 ) }
    dend_59 { pt3dadd( -5.47249, -68.6177, 22.2906, 0.84 ) }
    dend_59 { pt3dadd( -5.88607, -69.9116, 22.7291, 0.84 ) }
    dend_59 { pt3dadd( -6.27144, -71.1448, 23.0762, 0.84 ) }
    dend_59 { pt3dadd( -7.07669, -73.9092, 23.725, 0.84 ) }
    dend_59 { pt3dadd( -7.35025, -74.958, 23.9187, 0.84 ) }
    dend_59 { pt3dadd( -7.77487, -76.8462, 24.2159, 0.6 ) }
    dend_59 { pt3dadd( -8.04674, -78.0517, 24.3748, 1.08 ) }
    dend_59 { pt3dadd( -8.4742, -79.6436, 24.5715, 1.08 ) }
    dend_59 { pt3dadd( -8.83697, -80.7957, 24.7173, 1.56 ) }
    dend_59 { pt3dadd( -9.34327, -82.1652, 24.8753, 1.56 ) }
    dend_59 { pt3dadd( -9.76618, -83.2399, 25.0119, 1.08 ) }
    dend_59 { pt3dadd( -10.5647, -85.1577, 25.2883, 0.72 ) }
    dend_59 { pt3dadd( -11.0986, -86.38, 25.4818, 1.32 ) }
    dend_59 { pt3dadd( -11.5786, -87.4113, 25.6599, 1.32 ) }
    dend_59 { pt3dadd( -12.3124, -88.8411, 25.9212, 0.72 ) }
    dend_59 { pt3dadd( -13.1206, -90.3155, 26.1861, 0.72 ) }
    dend_59 { pt3dadd( -17.748, -99.039, 28.667, 0.72 ) }
    dend_59 { pt3dadd( -21.226, -108.222, 31.4315, 0.72 ) }
    dend_59 { pt3dadd( -25.1898, -116.901, 34.9789, 0.72 ) }
    dend_59 { pt3dadd( -29.1635, -125.592, 38.4901, 0.72 ) }
    dend_59 { pt3dadd( -32.032, -134.402, 42.719, 0.72 ) }
    dend_59 { pt3dadd( -33.3067, -143.095, 47.8631, 0.72 ) }
    dend_59 { pt3dadd( -34.3507, -152.56, 51.5565, 0.72 ) }
    dend_59 { pt3dadd( -34.6224, -162.651, 53.2898, 0.72 ) }
    dend_59 { pt3dadd( -34.5865, -172.593, 55.7217, 0.72 ) }
    dend_59 { pt3dadd( -35.5066, -182.611, 57.6245, 0.72 ) }
    dend_59 { pt3dadd( -38.1755, -192.484, 57.9355, 0.72 ) }
    dend_59 { pt3dadd( -41.1065, -202.284, 57.954, 0.72 ) }
    dend_59 { pt3dadd( -42.5561, -212.391, 58.769, 0.72 ) }
    dend_59 { pt3dadd( -43.227, -222.44, 60.6246, 0.72 ) }
    // Section: dend_57, id: dend_57, parent: dend_43 (entry count 79/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 4.59717, -66.4851, 10.0075, 1.08 ) }
    dend_57 { pt3dadd( 5.93558, -67.4393, 5.55454, 1.08 ) }
    dend_57 { pt3dadd( 6.95332, -68.3325, 2.55686, 1.08 ) }
    dend_57 { pt3dadd( 7.24266, -68.6652, 1.72079, 1.08 ) }
    dend_57 { pt3dadd( 7.45594, -69.0313, 0.964861, 1.08 ) }
    dend_57 { pt3dadd( 7.57283, -69.2797, 0.521114, 1.08 ) }
    dend_57 { pt3dadd( 7.99642, -70.395, -1.27575, 1.44 ) }
    dend_57 { pt3dadd( 8.2003, -71.3331, -2.4996, 1.44 ) }
    dend_57 { pt3dadd( 8.29453, -72.4317, -3.7647, 1.44 ) }
    dend_57 { pt3dadd( 8.33066, -74.2031, -5.67597, 1.44 ) }
    dend_57 { pt3dadd( 8.30935, -74.892, -6.3512, 1.44 ) }
    dend_57 { pt3dadd( 8.18892, -76.7255, -7.93063, 1.2 ) }
    dend_57 { pt3dadd( 7.87588, -79.6827, -10.1449, 1.2 ) }
    dend_57 { pt3dadd( 7.64674, -81.7022, -11.5667, 1.68 ) }
    dend_57 { pt3dadd( 7.37164, -83.8834, -13.1022, 0.72 ) }
    dend_57 { pt3dadd( 7.1337, -85.5247, -14.2172, 0.72 ) }
    dend_57 { pt3dadd( 6.77938, -87.3268, -15.5481, 1.44 ) }
    dend_57 { pt3dadd( 6.44365, -88.6099, -16.584, 1.44 ) }
    dend_57 { pt3dadd( 5.63717, -90.9395, -18.9717, 0.96 ) }
    dend_57 { pt3dadd( 4.72043, -92.9882, -21.9539, 1.68 ) }
    dend_57 { pt3dadd( 4.36476, -93.6306, -23.1686, 1.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_57 { pt3dadd( 3.55388, -94.9323, -26.1984, 1.68 ) }
    dend_57 { pt3dadd( 2.93587, -95.8639, -28.6551, 1.68 ) }
    dend_57 { pt3dadd( 1.98172, -97.3049, -32.5767, 1.68 ) }
    dend_57 { pt3dadd( 0.93588, -98.916, -36.8036, 1.68 ) }
    dend_57 { pt3dadd( 0.156426, -100.149, -39.8822, 1.2 ) }
    dend_57 { pt3dadd( -0.631722, -101.505, -42.9603, 0.84 ) }
    dend_57 { pt3dadd( -0.95841, -102.169, -44.2181, 1.44 ) }
    dend_57 { pt3dadd( -1.25234, -102.867, -45.3109, 0.72 ) }
    dend_57 { pt3dadd( -1.92835, -104.617, -47.5993, 1.32 ) }
    dend_57 { pt3dadd( -2.96686, -107.554, -50.9117, 0.6 ) }
    dend_57 { pt3dadd( -3.20649, -108.289, -51.6853, 0.6 ) }
    dend_57 { pt3dadd( -3.54152, -109.294, -52.6897, 0.96 ) }
    dend_57 { pt3dadd( -3.83069, -110.137, -53.5694, 0.96 ) }
    dend_57 { pt3dadd( -4.94769, -113.45, -57.2815, 0.6 ) }
    dend_57 { pt3dadd( -5.26947, -114.664, -58.6298, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 15/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 4.59717, -66.4851, 10.0075, 1.32 ) }
    dend_44 { pt3dadd( 4.60731, -66.6178, 9.98664, 1.32 ) }
    dend_44 { pt3dadd( 4.96451, -70.0996, 9.45924, 1.32 ) }
    dend_44 { pt3dadd( 5.45599, -74.1474, 8.88164, 1.68 ) }
    dend_44 { pt3dadd( 5.78345, -76.725, 8.5468, 2.04 ) }
    dend_44 { pt3dadd( 6.06846, -79.0098, 8.2744, 1.68 ) }
    dend_44 { pt3dadd( 6.29954, -80.8963, 8.06892, 1.68 ) }
    dend_44 { pt3dadd( 6.44363, -82.0372, 7.96692, 1.68 ) }
    dend_44 { pt3dadd( 6.64269, -83.5622, 7.86698, 1.68 ) }
    dend_44 { pt3dadd( 6.91148, -85.8805, 7.76372, 2.04 ) }
    dend_44 { pt3dadd( 7.0347, -87.2147, 7.75026, 1.68 ) }
    dend_44 { pt3dadd( 7.14555, -88.9518, 7.77001, 1.68 ) }
    dend_44 { pt3dadd( 7.24719, -90.8213, 7.83628, 1.68 ) }
    dend_44 { pt3dadd( 7.37851, -92.9413, 7.94121, 1.56 ) }
    dend_44 { pt3dadd( 7.52564, -94.9037, 8.05212, 1.56 ) }
    dend_44 { pt3dadd( 7.88006, -98.8445, 8.28795, 1.56 ) }
    dend_44 { pt3dadd( 8.20833, -102.052, 8.48508, 1.8 ) }
    dend_44 { pt3dadd( 8.78731, -107.179, 8.80052, 1.56 ) }
    dend_44 { pt3dadd( 9.38886, -112.309, 9.09657, 1.44 ) }
    dend_44 { pt3dadd( 9.64264, -114.491, 9.21211, 1.92 ) }
    dend_44 { pt3dadd( 9.93627, -117.135, 9.33054, 1.8 ) }
    dend_44 { pt3dadd( 10.1295, -119.173, 9.40016, 1.68 ) }
    dend_44 { pt3dadd( 10.3018, -121.72, 9.47191, 2.04 ) }
    dend_44 { pt3dadd( 10.6625, -132.14, 9.51552, 1.8 ) }
    dend_44 { pt3dadd( 10.6742, -135.319, 9.46846, 1.8 ) }
    dend_44 { pt3dadd( 10.6489, -137.043, 9.42048, 1.68 ) }
    dend_44 { pt3dadd( 10.5952, -138.671, 9.35505, 1.68 ) }
    dend_44 { pt3dadd( 10.374, -143.179, 9.11808, 1.68 ) }
    dend_44 { pt3dadd( 10.2075, -145.633, 8.893, 1.68 ) }
    dend_44 { pt3dadd( 10.0444, -147.69, 8.6176, 1.68 ) }
    dend_44 { pt3dadd( 9.84829, -150.399, 8.23388, 1.32 ) }
    dend_44 { pt3dadd( 9.6492, -153.648, 7.7762, 1.32 ) }
    dend_44 { pt3dadd( 9.47771, -157.036, 7.31086, 1.32 ) }
    dend_44 { pt3dadd( 9.28453, -162.438, 6.60014, 1.32 ) }
    dend_44 { pt3dadd( 9.19378, -166.095, 6.16989, 1.8 ) }
    dend_44 { pt3dadd( 9.13637, -168.534, 5.91732, 1.8 ) }
    dend_44 { pt3dadd( 9.09406, -170.494, 5.74896, 1.8 ) }
    dend_44 { pt3dadd( 9.06738, -172.218, 5.6457, 1.8 ) }
    dend_44 { pt3dadd( 9.02956, -175.42, 5.57992, 1.68 ) }
    dend_44 { pt3dadd( 9.00344, -180.02, 5.57196, 2.04 ) }
    dend_44 { pt3dadd( 9.0264, -183.646, 5.50564, 2.04 ) }
    dend_44 { pt3dadd( 9.06338, -186.622, 5.43066, 1.8 ) }
    dend_44 { pt3dadd( 9.14393, -190.403, 5.31844, 1.56 ) }
    dend_44 { pt3dadd( 9.25932, -194.239, 5.1939, 1.92 ) }
    dend_44 { pt3dadd( 9.37594, -199.109, 5.02345, 1.56 ) }
    dend_44 { pt3dadd( 9.43694, -202.9, 4.86536, 1.32 ) }
    dend_44 { pt3dadd( 9.47582, -207.178, 4.63073, 1.32 ) }
    dend_44 { pt3dadd( 9.47657, -209.21, 4.52419, 1.32 ) }
    dend_44 { pt3dadd( 9.47601, -210.986, 4.44128, 1.2 ) }
    dend_44 { pt3dadd( 9.43493, -215.097, 4.30106, 1.68 ) }
    dend_44 { pt3dadd( 9.37267, -218.894, 4.34893, 1.68 ) }
    dend_44 { pt3dadd( 9.28689, -221.335, 4.41009, 1.68 ) }
    dend_44 { pt3dadd( 9.20205, -223.414, 4.45479, 1.68 ) }
    dend_44 { pt3dadd( 9.08276, -225.728, 4.5142, 1.68 ) }
    dend_44 { pt3dadd( 9.04812, -226.711, 4.54603, 1.68 ) }
    dend_44 { pt3dadd( 9.23023, -233.007, 4.83797, 2.16 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 87.2216, -161.144, 9.29267, 0.84 ) }
    dend_39 { pt3dadd( 89.696, -160.757, 10.1616, 0.84 ) }
    dend_39 { pt3dadd( 91.6379, -160.419, 10.914, 0.84 ) }
    dend_39 { pt3dadd( 93.1514, -160.154, 11.551, 1.32 ) }
    dend_39 { pt3dadd( 95.6331, -159.74, 12.6995, 1.32 ) }
    dend_39 { pt3dadd( 97.5833, -159.426, 13.6777, 1.68 ) }
    dend_39 { pt3dadd( 100.012, -158.978, 14.9571, 1.2 ) }
    dend_39 { pt3dadd( 101.278, -158.742, 15.7214, 0.96 ) }
    dend_39 { pt3dadd( 102.913, -158.351, 16.8367, 1.44 ) }
    dend_39 { pt3dadd( 104.857, -157.739, 18.2927, 0.84 ) }
    dend_39 { pt3dadd( 105.764, -157.345, 19.0712, 0.84 ) }
    dend_39 { pt3dadd( 106.635, -156.834, 19.9755, 0.84 ) }
    dend_39 { pt3dadd( 107.187, -156.347, 20.7514, 0.84 ) }
    dend_39 { pt3dadd( 107.789, -155.649, 21.7442, 0.84 ) }
    dend_39 { pt3dadd( 108.263, -154.847, 22.7486, 0.84 ) }
    dend_39 { pt3dadd( 108.701, -153.732, 23.9994, 1.08 ) }
    dend_39 { pt3dadd( 109.145, -152.404, 25.4755, 0.72 ) }
    dend_39 { pt3dadd( 109.686, -150.77, 27.4821, 1.2 ) }
    dend_39 { pt3dadd( 118.335, -147.448, 31.3158, 1.2 ) }
    dend_39 { pt3dadd( 126.811, -142.879, 34.1934, 1.2 ) }
    dend_39 { pt3dadd( 135.033, -137.333, 35.9696, 1.2 ) }
    dend_39 { pt3dadd( 141.747, -130.488, 39.1793, 1.2 ) }
    dend_39 { pt3dadd( 149.514, -124.945, 42.4082, 1.2 ) }
    dend_39 { pt3dadd( 156.619, -118.524, 45.6145, 1.2 ) }
    dend_39 { pt3dadd( 164.281, -112.062, 46.8551, 1.2 ) }
    dend_39 { pt3dadd( 171.659, -105.406, 48.7027, 1.2 ) }
    dend_39 { pt3dadd( 178.083, -97.9376, 51.0781, 1.2 ) }
    dend_39 { pt3dadd( 183.944, -89.6982, 52.095, 1.2 ) }
    dend_39 { pt3dadd( 188.898, -81.0815, 54.2816, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_39 { pt3dadd( 192.501, -71.633, 55.7123, 1.2 ) }
    dend_39 { pt3dadd( 196.107, -62.2035, 57.2511, 1.2 ) }
    dend_39 { pt3dadd( 199.774, -52.7333, 58.3412, 1.2 ) }
    dend_39 { pt3dadd( 204.842, -44.2071, 60.6045, 1.2 ) }
    dend_39 { pt3dadd( 209.766, -35.4894, 62.4542, 1.2 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 5/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 87.2216, -161.144, 9.29267, 0.84 ) }
    dend_38 { pt3dadd( 88.3658, -163.484, 9.67741, 0.84 ) }
    dend_38 { pt3dadd( 89.6091, -165.924, 10.0601, 0.6 ) }
    dend_38 { pt3dadd( 90.4162, -167.528, 10.2892, 1.32 ) }
    dend_38 { pt3dadd( 91.6855, -170.05, 10.6494, 0.84 ) }
    dend_38 { pt3dadd( 92.5064, -171.681, 10.8824, 0.72 ) }
    dend_38 { pt3dadd( 93.1602, -172.98, 11.068, 1.08 ) }
    dend_38 { pt3dadd( 93.9762, -174.679, 11.2865, 0.72 ) }
    dend_38 { pt3dadd( 94.7362, -176.299, 11.5651, 1.2 ) }
    dend_38 { pt3dadd( 100.126, -184.893, 12.3661, 1.2 ) }
    dend_38 { pt3dadd( 105.894, -192.944, 14.6105, 1.2 ) }
    dend_38 { pt3dadd( 111.512, -200.354, 18.6332, 1.2 ) }
    // Section: dend_36, id: dend_36, parent: dend_20 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 17.7106, -248.057, 0.422057, 0.96 ) }
    dend_36 { pt3dadd( 19.6398, -250.334, 1.80307, 0.96 ) }
    dend_36 { pt3dadd( 20.7404, -251.835, 2.71859, 0.96 ) }
    dend_36 { pt3dadd( 22.7284, -254.728, 4.50913, 1.44 ) }
    dend_36 { pt3dadd( 24.207, -256.819, 5.8925, 0.96 ) }
    dend_36 { pt3dadd( 25.3628, -258.465, 6.98302, 0.96 ) }
    dend_36 { pt3dadd( 26.307, -259.85, 7.88028, 0.96 ) }
    dend_36 { pt3dadd( 27.1123, -261.118, 8.6807, 0.96 ) }
    dend_36 { pt3dadd( 28.0499, -262.732, 9.74407, 1.08 ) }
    dend_36 { pt3dadd( 29.1936, -264.954, 11.1469, 1.08 ) }
    dend_36 { pt3dadd( 29.7551, -266.066, 11.8191, 1.08 ) }
    dend_36 { pt3dadd( 30.2752, -267.025, 12.3653, 1.08 ) }
    dend_36 { pt3dadd( 31.512, -269.349, 13.7717, 1.08 ) }
    dend_36 { pt3dadd( 32.5797, -271.675, 15.2146, 0.84 ) }
    dend_36 { pt3dadd( 33.202, -273.606, 16.4182, 1.2 ) }
    dend_36 { pt3dadd( 33.4624, -275.132, 17.3374, 1.2 ) }
    dend_36 { pt3dadd( 33.5846, -276.389, 18.1041, 1.2 ) }
    dend_36 { pt3dadd( 33.754, -279.462, 20.024, 0.96 ) }
    dend_36 { pt3dadd( 33.7756, -281.077, 21.035, 0.96 ) }
    dend_36 { pt3dadd( 33.8561, -282.573, 21.9552, 0.96 ) }
    dend_36 { pt3dadd( 33.993, -284.49, 23.083, 0.72 ) }
    dend_36 { pt3dadd( 34.0609, -285.689, 23.7387, 0.72 ) }
    dend_36 { pt3dadd( 34.2377, -287.42, 24.6344, 0.72 ) }
    dend_36 { pt3dadd( 34.735, -289.605, 25.608, 1.2 ) }
    dend_36 { pt3dadd( 35.8143, -292.83, 27.149, 0.84 ) }
    dend_36 { pt3dadd( 36.3792, -294.169, 27.8315, 0.84 ) }
    dend_36 { pt3dadd( 37.0078, -295.579, 28.615, 0.84 ) }
    dend_36 { pt3dadd( 40.4291, -303.771, 33.5573, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 17.7106, -248.057, 0.422057, 1.32 ) }
    dend_21 { pt3dadd( 18.2304, -251.584, 0.585961, 1.32 ) }
    dend_21 { pt3dadd( 18.4946, -253.77, 0.65507, 1.32 ) }
    dend_21 { pt3dadd( 18.7014, -255.898, 0.704359, 1.32 ) }
    dend_21 { pt3dadd( 18.8077, -257.484, 0.73091, 1.32 ) }
    dend_21 { pt3dadd( 19.0467, -260.86, 0.774474, 1.68 ) }
    dend_21 { pt3dadd( 19.2961, -263.679, 0.804841, 1.68 ) }
    dend_21 { pt3dadd( 19.4922, -265.743, 0.743847, 1.68 ) }
    dend_21 { pt3dadd( 19.6893, -267.688, 0.665101, 1.68 ) }
    dend_21 { pt3dadd( 20.0267, -270.964, 0.505899, 1.2 ) }
    dend_21 { pt3dadd( 20.2544, -273.12, 0.382855, 1.2 ) }
    dend_21 { pt3dadd( 20.6483, -276.376, 0.17601, 1.2 ) }
    dend_21 { pt3dadd( 21.1723, -280.078, -0.116057, 1.56 ) }
    dend_21 { pt3dadd( 21.4655, -281.939, -0.28148, 1.56 ) }
    dend_21 { pt3dadd( 21.7336, -283.543, -0.434431, 1.56 ) }
    dend_21 { pt3dadd( 22.0407, -285.231, -0.60233, 1.56 ) }
    dend_21 { pt3dadd( 22.5263, -288.16, -0.767192, 1.44 ) }
    dend_21 { pt3dadd( 23.0047, -291.127, -0.895331, 1.44 ) }
    dend_21 { pt3dadd( 23.2441, -292.474, -0.910882, 1.44 ) }
    dend_21 { pt3dadd( 23.5481, -294.109, -0.91498, 1.44 ) }
    dend_21 { pt3dadd( 23.924, -295.987, -0.885717, 1.44 ) }
    dend_21 { pt3dadd( 24.6074, -299.032, -0.727913, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.02966, 74.5008, 28.9977, 1.44 ) }
    dend_17 { pt3dadd( 3.68974, 72.8604, 29.1099, 1.44 ) }
    dend_17 { pt3dadd( 3.16371, 72.2978, 29.1837, 1.2 ) }
    dend_17 { pt3dadd( 2.03095, 71.3126, 29.3421, 0.96 ) }
    dend_17 { pt3dadd( 1.01165, 70.426, 29.4846, 0.96 ) }
    dend_17 { pt3dadd( 0.30927, 69.8151, 29.5828, 0.96 ) }
    dend_17 { pt3dadd( -0.438268, 69.1649, 29.6873, 0.96 ) }
    dend_17 { pt3dadd( -1.19097, 68.4347, 29.7004, 0.96 ) }
    dend_17 { pt3dadd( -2.62092, 67.1886, 29.7751, 1.2 ) }
    dend_17 { pt3dadd( -10.0242, 60.3441, 28.9995, 1.2 ) }
    dend_17 { pt3dadd( -16.6801, 52.6946, 29.0544, 1.2 ) }
    dend_17 { pt3dadd( -23.3472, 45.1268, 28.0353, 1.2 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.02966, 74.5008, 28.9977, 0.96 ) }
    dend_12 { pt3dadd( 5.89556, 73.0191, 29.2408, 0.96 ) }
    dend_12 { pt3dadd( 6.89185, 71.3144, 29.5206, 0.96 ) }
    dend_12 { pt3dadd( 7.63286, 70.0464, 29.7287, 1.2 ) }
    dend_12 { pt3dadd( 8.04311, 69.3445, 29.8439, 1.2 ) }
    dend_12 { pt3dadd( 9.39708, 67.0277, 30.224, 0.84 ) }
    dend_12 { pt3dadd( 10.004, 65.9892, 30.3945, 0.84 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.72758, 52.6761, 14.7492, 1.44 ) }
    dend_8 { pt3dadd( 7.57813, 55.0121, 15.154, 1.44 ) }
    dend_8 { pt3dadd( 8.22485, 56.8467, 15.4502, 1.44 ) }
    dend_8 { pt3dadd( 8.55196, 57.8078, 15.6037, 1.44 ) }
    dend_8 { pt3dadd( 9.28225, 60.042, 15.9969, 1.44 ) }
    dend_8 { pt3dadd( 10.162, 62.6865, 16.5191, 1.32 ) }
    dend_8 { pt3dadd( 10.7195, 64.2026, 16.774, 1.32 ) }
    dend_8 { pt3dadd( 11.4359, 65.8688, 16.9961, 1.32 ) }
    dend_8 { pt3dadd( 12.0885, 67.2138, 17.1506, 1.56 ) }
    dend_8 { pt3dadd( 12.7888, 68.492, 17.263, 1.56 ) }
    dend_8 { pt3dadd( 13.8103, 70.1375, 17.3642, 1.32 ) }
    dend_8 { pt3dadd( 15.7168, 72.8599, 17.5043, 1.32 ) }
    dend_8 { pt3dadd( 16.9396, 74.428, 17.5742, 1.32 ) }
    dend_8 { pt3dadd( 18.0082, 75.6898, 17.5525, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( 19.2065, 77.0383, 17.4536, 1.56 ) }
    dend_8 { pt3dadd( 19.8826, 77.8139, 17.3496, 1.56 ) }
    dend_8 { pt3dadd( 21.5233, 79.7461, 17.0166, 1.2 ) }
    dend_8 { pt3dadd( 22.3946, 80.7958, 16.8412, 1.2 ) }
    dend_8 { pt3dadd( 24.0966, 82.8892, 16.4509, 1.44 ) }
    dend_8 { pt3dadd( 24.9955, 84.0355, 16.1962, 1.92 ) }
    dend_8 { pt3dadd( 26.7224, 86.4209, 15.7528, 1.56 ) }
    dend_8 { pt3dadd( 27.7927, 88.0067, 15.5124, 1.32 ) }
    dend_8 { pt3dadd( 29.334, 90.4965, 15.2087, 1.32 ) }
    dend_8 { pt3dadd( 30.5503, 92.6066, 15.0789, 1.32 ) }
    dend_8 { pt3dadd( 31.7377, 94.813, 15.101, 1.56 ) }
    dend_8 { pt3dadd( 33.279, 98.0283, 15.2814, 1.2 ) }
    dend_8 { pt3dadd( 33.7434, 99.1692, 15.4106, 1.2 ) }
    dend_8 { pt3dadd( 33.9888, 99.9832, 15.5332, 1.2 ) }
    dend_8 { pt3dadd( 34.2029, 101.081, 15.7483, 0.96 ) }
    dend_8 { pt3dadd( 34.292, 101.79, 15.9135, 1.32 ) }
    dend_8 { pt3dadd( 34.4415, 103.874, 16.4347, 0.96 ) }
    dend_8 { pt3dadd( 34.4783, 104.898, 16.6252, 0.96 ) }
    dend_8 { pt3dadd( 34.5134, 105.938, 16.7926, 0.96 ) }
    dend_8 { pt3dadd( 34.6484, 107.908, 17.1175, 1.32 ) }
    dend_8 { pt3dadd( 34.7575, 108.868, 17.2807, 1.32 ) }
    dend_8 { pt3dadd( 35.0195, 110.319, 17.5733, 0.84 ) }
    dend_8 { pt3dadd( 35.4155, 111.81, 17.9433, 1.08 ) }
    dend_8 { pt3dadd( 35.8984, 113.26, 18.4015, 1.08 ) }
    dend_8 { pt3dadd( 36.6864, 115.313, 19.1495, 0.84 ) }
    dend_8 { pt3dadd( 37.0939, 116.309, 19.4769, 1.2 ) }
    dend_8 { pt3dadd( 37.5802, 117.412, 19.873, 0.84 ) }
    dend_8 { pt3dadd( 38.1492, 118.587, 20.3401, 1.2 ) }
    dend_8 { pt3dadd( 39.0442, 120.356, 21.1006, 0.96 ) }
    dend_8 { pt3dadd( 39.3402, 120.968, 21.3649, 0.96 ) }
    dend_8 { pt3dadd( 40.4743, 123.855, 22.3569, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.72758, 52.6761, 14.7492, 1.08 ) }
    dend_3 { pt3dadd( 8.20811, 54.8184, 14.7985, 1.08 ) }
    dend_3 { pt3dadd( 9.97361, 57.4833, 14.8462, 1.08 ) }
    dend_3 { pt3dadd( 10.5067, 58.3042, 14.8583, 1.08 ) }
    dend_3 { pt3dadd( 11.0167, 59.106, 14.8278, 1.08 ) }
    dend_3 { pt3dadd( 11.922, 60.5294, 14.7736, 1.32 ) }
    dend_3 { pt3dadd( 13.2669, 62.644, 14.6932, 0.96 ) }
    dend_3 { pt3dadd( 14.1151, 63.9653, 14.6041, 1.44 ) }
    dend_3 { pt3dadd( 14.6896, 64.8806, 14.5212, 1.44 ) }
    dend_3 { pt3dadd( 15.8318, 66.7743, 14.3187, 1.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 9.23023, -233.007, 4.83797, 1.08 ) }
    dend_52 { pt3dadd( 8.83763, -235.833, 5.69238, 1.08 ) }
    dend_52 { pt3dadd( 8.56495, -237.692, 6.26338, 1.08 ) }
    dend_52 { pt3dadd( 8.10444, -240.343, 7.05879, 1.08 ) }
    dend_52 { pt3dadd( 7.80599, -241.97, 7.54279, 1.08 ) }
    dend_52 { pt3dadd( 7.42183, -243.863, 8.10716, 1.08 ) }
    dend_52 { pt3dadd( 7.1312, -245.16, 8.51607, 1.08 ) }
    dend_52 { pt3dadd( 6.91837, -245.98, 8.76964, 1.08 ) }
    dend_52 { pt3dadd( 6.51818, -247.189, 9.13668, 1.08 ) }
    dend_52 { pt3dadd( 5.6996, -249.28, 9.68867, 0.84 ) }
    dend_52 { pt3dadd( 5.23276, -250.351, 9.95473, 0.84 ) }
    dend_52 { pt3dadd( 4.51113, -251.869, 10.2757, 1.32 ) }
    dend_52 { pt3dadd( 3.46678, -253.927, 10.6377, 1.32 ) }
    dend_52 { pt3dadd( 1.97517, -256.838, 11.079, 0.96 ) }
    dend_52 { pt3dadd( 0.984122, -258.828, 11.3197, 0.96 ) }
    dend_52 { pt3dadd( 0.305076, -260.284, 11.4839, 1.2 ) }
    dend_52 { pt3dadd( -0.88371, -263.154, 11.8005, 1.2 ) }
    dend_52 { pt3dadd( -1.59127, -265.116, 12.0293, 1.44 ) }
    dend_52 { pt3dadd( -2.31572, -267.45, 12.3505, 1.2 ) }
    dend_52 { pt3dadd( -2.92846, -269.907, 12.7141, 1.2 ) }
    dend_52 { pt3dadd( -3.64803, -273.169, 13.2254, 1.2 ) }
    dend_52 { pt3dadd( -3.87604, -274.349, 13.4147, 1.2 ) }
    dend_52 { pt3dadd( -4.10414, -276.27, 13.7871, 1.2 ) }
    dend_52 { pt3dadd( -4.15913, -277.346, 14.0308, 1.2 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 65/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 9.23023, -233.007, 4.83797, 0.96 ) }
    dend_45 { pt3dadd( 10.0845, -237.035, 3.6355, 0.96 ) }
    dend_45 { pt3dadd( 10.5993, -239.605, 2.88565, 1.32 ) }
    dend_45 { pt3dadd( 10.7185, -240.64, 2.68463, 1.32 ) }
    dend_45 { pt3dadd( 10.8665, -241.924, 2.43531, 1.32 ) }
    dend_45 { pt3dadd( 11.1989, -244.808, 1.87508, 1.56 ) }
    dend_45 { pt3dadd( 11.4455, -246.947, 1.45951, 1.56 ) }
    dend_45 { pt3dadd( 11.5918, -248.529, 1.18432, 1.56 ) }
    dend_45 { pt3dadd( 11.8534, -252.901, 0.868041, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_21 (entry count 74/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 24.6074, -299.032, -0.727913, 0.96 ) }
    dend_35 { pt3dadd( 24.386, -300.804, -0.057056, 0.96 ) }
    dend_35 { pt3dadd( 24.1481, -302.398, 0.495537, 0.96 ) }
    dend_35 { pt3dadd( 23.8571, -303.987, 1.0449, 1.44 ) }
    dend_35 { pt3dadd( 23.1783, -307.507, 2.30193, 1.08 ) }
    dend_35 { pt3dadd( 22.874, -309.147, 2.87291, 1.08 ) }
    dend_35 { pt3dadd( 22.4769, -311.653, 3.70738, 1.08 ) }
    dend_35 { pt3dadd( 22.3521, -312.831, 4.10058, 1.08 ) }
    dend_35 { pt3dadd( 22.1513, -315.878, 5.07649, 0.84 ) }
    dend_35 { pt3dadd( 22.0822, -318.389, 5.79903, 0.84 ) }
    dend_35 { pt3dadd( 22.0975, -319.982, 6.15772, 0.84 ) }
    dend_35 { pt3dadd( 22.1914, -321.777, 6.5407, 0.84 ) }
    dend_35 { pt3dadd( 22.3325, -323.459, 6.87198, 0.84 ) }
    dend_35 { pt3dadd( 22.4424, -324.838, 7.09721, 0.84 ) }
    dend_35 { pt3dadd( 22.4915, -325.817, 7.18934, 0.84 ) }
    dend_35 { pt3dadd( 22.5054, -326.939, 7.25522, 0.84 ) }
    dend_35 { pt3dadd( 22.3958, -328.431, 7.34492, 0.84 ) }
    dend_35 { pt3dadd( 22.1295, -329.728, 7.41248, 0.84 ) }
    dend_35 { pt3dadd( 21.7692, -330.823, 7.44768, 0.84 ) }
    dend_35 { pt3dadd( 20.968, -332.728, 7.52563, 0.6 ) }
    dend_35 { pt3dadd( 18.2756, -342.574, 8.21536, 0.6 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 95/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 24.6074, -299.032, -0.727913, 0.84 ) }
    dend_22 { pt3dadd( 24.7088, -301.1, -0.828397, 0.84 ) }
    dend_22 { pt3dadd( 24.7636, -302.585, -0.930864, 0.84 ) }
    dend_22 { pt3dadd( 24.8026, -304.166, -1.08775, 0.84 ) }
    dend_22 { pt3dadd( 24.8107, -307.431, -1.4731, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( 24.7937, -308.192, -1.57262, 1.2 ) }
    dend_22 { pt3dadd( 24.6606, -311.579, -2.04698, 0.96 ) }
    dend_22 { pt3dadd( 24.491, -314.425, -2.5079, 1.32 ) }
    dend_22 { pt3dadd( 24.2943, -318.036, -3.10509, 1.08 ) }
    dend_22 { pt3dadd( 24.2307, -320.071, -3.45774, 1.08 ) }
    dend_22 { pt3dadd( 24.2147, -321.571, -3.71796, 1.08 ) }
    dend_22 { pt3dadd( 24.2644, -322.691, -3.90302, 1.08 ) }
    dend_22 { pt3dadd( 24.3333, -323.457, -4.01616, 1.08 ) }
    dend_22 { pt3dadd( 24.6922, -326.464, -4.41865, 0.84 ) }
    dend_22 { pt3dadd( 25.3009, -330.357, -4.87926, 1.2 ) }
    dend_22 { pt3dadd( 25.5093, -331.455, -4.99957, 1.2 ) }
    dend_22 { pt3dadd( 26.7161, -337.146, -5.58828, 0.84 ) }
    dend_22 { pt3dadd( 27.4101, -340.353, -5.90872, 2.04 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 10.004, 65.9892, 30.3945, 0.72 ) }
    dend_14 { pt3dadd( 9.41288, 64.7307, 30.1098, 0.72 ) }
    dend_14 { pt3dadd( 8.90302, 63.6453, 29.8643, 0.48 ) }
    dend_14 { pt3dadd( 8.28841, 62.3368, 29.5683, 0.96 ) }
    dend_14 { pt3dadd( 7.85268, 61.4092, 29.3585, 0.96 ) }
    dend_14 { pt3dadd( 3.38983, 52.7602, 26.3781, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 19/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 10.004, 65.9892, 30.3945, 0.72 ) }
    dend_13 { pt3dadd( 10.4317, 64.4515, 30.5313, 0.72 ) }
    dend_13 { pt3dadd( 10.6509, 63.3692, 30.6428, 1.08 ) }
    dend_13 { pt3dadd( 10.9799, 61.5046, 30.7603, 0.72 ) }
    dend_13 { pt3dadd( 11.1307, 60.1579, 30.7563, 0.72 ) }
    dend_13 { pt3dadd( 11.2371, 58.2406, 30.6251, 0.72 ) }
    dend_13 { pt3dadd( 11.3321, 56.6681, 30.4666, 1.2 ) }
    dend_13 { pt3dadd( 11.325, 55.9227, 30.3836, 1.2 ) }
    dend_13 { pt3dadd( 11.2229, 54.3053, 30.1768, 0.84 ) }
    dend_13 { pt3dadd( 11.0201, 52.3015, 29.8564, 0.84 ) }
    dend_13 { pt3dadd( 10.8788, 50.6747, 29.4202, 1.32 ) }
    dend_13 { pt3dadd( 10.7996, 49.6239, 28.9925, 1.08 ) }
    dend_13 { pt3dadd( 10.1135, 39.472, 27.7953, 1.08 ) }
    dend_13 { pt3dadd( 8.84008, 29.3475, 26.8941, 1.08 ) }
    dend_13 { pt3dadd( 7.30736, 19.5486, 24.3922, 1.08 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 40.4743, 123.855, 22.3569, 0.6 ) }
    dend_10 { pt3dadd( 41.0856, 124.818, 22.7187, 0.6 ) }
    dend_10 { pt3dadd( 41.7098, 125.8, 23.0882, 0.6 ) }
    dend_10 { pt3dadd( 42.5199, 127.076, 23.5678, 0.6 ) }
    dend_10 { pt3dadd( 43.8287, 129.136, 24.3425, 0.6 ) }
    dend_10 { pt3dadd( 44.6776, 130.472, 24.845, 0.6 ) }
    dend_10 { pt3dadd( 45.5413, 131.832, 25.3563, 0.48 ) }
    dend_10 { pt3dadd( 49.4754, 141.15, 26.7295, 0.48 ) }
    dend_10 { pt3dadd( 54.0551, 150.246, 27.2428, 0.48 ) }
    dend_10 { pt3dadd( 58.9293, 158.887, 29.5193, 0.48 ) }
    dend_10 { pt3dadd( 65.5028, 166.538, 30.5512, 0.48 ) }
    dend_10 { pt3dadd( 71.868, 174.442, 30.7035, 0.48 ) }
    dend_10 { pt3dadd( 78.7171, 181.817, 31.8556, 0.48 ) }
    dend_10 { pt3dadd( 83.9101, 190.576, 31.7576, 0.48 ) }
    dend_10 { pt3dadd( 87.2009, 200.069, 29.917, 0.48 ) }
    dend_10 { pt3dadd( 89.294, 210.066, 29.2166, 0.48 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 50/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 40.4743, 123.855, 22.3569, 0.84 ) }
    dend_9 { pt3dadd( 41.8025, 126.427, 22.2445, 0.84 ) }
    dend_9 { pt3dadd( 42.552, 127.878, 22.1811, 0.84 ) }
    dend_9 { pt3dadd( 43.3509, 129.425, 22.1135, 0.36 ) }
    dend_9 { pt3dadd( 44.11, 130.895, 22.0493, 0.6 ) }
    dend_9 { pt3dadd( 44.7236, 132.083, 21.9973, 0.6 ) }
    dend_9 { pt3dadd( 45.8156, 134.197, 21.905, 0.6 ) }
    dend_9 { pt3dadd( 50.9274, 142.833, 20.2032, 0.6 ) }
    dend_9 { pt3dadd( 55.5559, 151.554, 17.7156, 0.6 ) }
    dend_9 { pt3dadd( 61.3344, 159.448, 15.0147, 0.6 ) }
    dend_9 { pt3dadd( 66.6013, 167.633, 12.1008, 0.6 ) }
    dend_9 { pt3dadd( 70.0983, 176.273, 8.01262, 0.6 ) }
    dend_9 { pt3dadd( 73.4818, 185.715, 6.08938, 0.6 ) }
    dend_9 { pt3dadd( 77.7302, 194.941, 5.12077, 0.6 ) }
    dend_9 { pt3dadd( 81.669, 204.329, 4.34589, 0.6 ) }
    dend_9 { pt3dadd( 84.0681, 214.022, 2.15074, 0.6 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 15.8318, 66.7743, 14.3187, 1.08 ) }
    dend_5 { pt3dadd( 15.125, 68.5809, 14.6534, 1.08 ) }
    dend_5 { pt3dadd( 14.6695, 69.4433, 14.8925, 1.08 ) }
    dend_5 { pt3dadd( 14.0073, 70.6972, 15.2401, 1.08 ) }
    dend_5 { pt3dadd( 13.272, 72.0895, 15.626, 0.96 ) }
    dend_5 { pt3dadd( 12.2063, 74.1072, 16.1853, 0.96 ) }
    dend_5 { pt3dadd( 11.3254, 75.775, 16.6477, 0.84 ) }
    dend_5 { pt3dadd( 10.0489, 77.7684, 17.396, 1.08 ) }
    dend_5 { pt3dadd( 4.39266, 86.1496, 18.4672, 1.08 ) }
    dend_5 { pt3dadd( -0.108503, 95.1789, 19.93, 1.08 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 76/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 15.8318, 66.7743, 14.3187, 0.96 ) }
    dend_4 { pt3dadd( 17.527, 67.9269, 13.7802, 0.96 ) }
    dend_4 { pt3dadd( 18.2955, 68.4332, 13.4984, 0.96 ) }
    dend_4 { pt3dadd( 19.5064, 69.2629, 13.0196, 0.96 ) }
    dend_4 { pt3dadd( 20.9379, 70.3023, 12.3187, 0.84 ) }
    dend_4 { pt3dadd( 21.6889, 70.86, 11.9214, 0.84 ) }
    dend_4 { pt3dadd( 22.8866, 71.7483, 11.2565, 0.84 ) }
    dend_4 { pt3dadd( 23.442, 72.1306, 10.9121, 0.84 ) }
    dend_4 { pt3dadd( 24.34, 72.7166, 10.338, 0.84 ) }
    dend_4 { pt3dadd( 26.1902, 73.7774, 9.2205, 1.2 ) }
    dend_4 { pt3dadd( 26.5452, 73.947, 9.04409, 1.2 ) }
    dend_4 { pt3dadd( 27.5119, 74.3174, 8.66341, 1.2 ) }
    dend_4 { pt3dadd( 29.0116, 74.7392, 8.24679, 1.2 ) }
    dend_4 { pt3dadd( 29.4921, 74.8359, 8.15755, 1.2 ) }
    dend_4 { pt3dadd( 31.3797, 75.124, 7.89905, 1.2 ) }
    dend_4 { pt3dadd( 32.8749, 75.3322, 7.75194, 0.96 ) }
    dend_4 { pt3dadd( 34.3567, 75.5676, 7.60823, 0.96 ) }
    dend_4 { pt3dadd( 36.0478, 75.8087, 7.45594, 0.96 ) }
    dend_4 { pt3dadd( 37.7258, 76.0422, 7.30569, 1.32 ) }
    dend_4 { pt3dadd( 40.2561, 76.4185, 7.07112, 0.84 ) }
    dend_4 { pt3dadd( 42.447, 76.7644, 6.8555, 1.2 ) }
    dend_4 { pt3dadd( 43.981, 77.0339, 6.77072, 1.2 ) }
    dend_4 { pt3dadd( 45.4678, 77.3487, 6.76205, 0.96 ) }
    dend_4 { pt3dadd( 46.7154, 77.6656, 6.84372, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( 47.6443, 77.919, 6.98177, 1.2 ) }
    dend_4 { pt3dadd( 48.256, 78.0947, 7.12149, 1.2 ) }
    dend_4 { pt3dadd( 51.3714, 79.1067, 8.02382, 1.2 ) }
    dend_4 { pt3dadd( 52.613, 79.5877, 8.41639, 1.2 ) }
    dend_4 { pt3dadd( 53.656, 80.0774, 8.75789, 1.2 ) }
    dend_4 { pt3dadd( 55.6746, 81.0332, 9.41735, 1.08 ) }
    dend_4 { pt3dadd( 56.5881, 81.4282, 9.69207, 1.44 ) }
    dend_4 { pt3dadd( 58.3289, 82.0494, 10.0126, 1.08 ) }
    dend_4 { pt3dadd( 59.6723, 82.4402, 10.0439, 1.08 ) }
    dend_4 { pt3dadd( 60.6968, 82.7341, 9.97281, 1.08 ) }
    dend_4 { pt3dadd( 62.4256, 83.292, 9.72417, 1.08 ) }
    dend_4 { pt3dadd( 64.3362, 83.9359, 9.32531, 1.44 ) }
    dend_4 { pt3dadd( 67.3009, 84.9439, 8.5424, 1.08 ) }
    dend_4 { pt3dadd( 69.236, 85.6723, 7.93152, 0.84 ) }
    dend_4 { pt3dadd( 70.691, 86.3185, 7.44556, 1.2 ) }
    dend_4 { pt3dadd( 72.1547, 87.0318, 6.93733, 1.2 ) }
    dend_4 { pt3dadd( 73.7836, 87.9456, 6.29564, 0.84 ) }
    dend_4 { pt3dadd( 74.9735, 88.6774, 5.81348, 1.08 ) }
    dend_4 { pt3dadd( 77.5291, 90.2417, 4.85836, 0.72 ) }
    dend_4 { pt3dadd( 80.0567, 91.6751, 3.89097, 0.72 ) }
    dend_4 { pt3dadd( 81.6661, 92.4412, 3.27939, 1.2 ) }
    dend_4 { pt3dadd( 84.0395, 93.4566, 2.39031, 0.72 ) }
    dend_4 { pt3dadd( 84.8762, 93.7926, 2.097, 0.72 ) }
    dend_4 { pt3dadd( 86.628, 94.4385, 1.5473, 0.96 ) }
    dend_4 { pt3dadd( 88.4771, 95.0565, 1.02242, 0.96 ) }
    dend_4 { pt3dadd( 91.7493, 96.2585, 0.226786, 0.72 ) }
    dend_4 { pt3dadd( 93.4316, 97.0223, -0.113623, 0.6 ) }
    dend_4 { pt3dadd( 94.7861, 97.7247, -0.329816, 0.6 ) }
    dend_4 { pt3dadd( 96.5264, 98.7892, -0.601276, 1.2 ) }
    dend_4 { pt3dadd( 97.0436, 99.1642, -0.67572, 1.2 ) }
    dend_4 { pt3dadd( 99.1556, 100.84, -0.9052, 0.72 ) }
    dend_4 { pt3dadd( 100.142, 101.722, -0.99683, 0.72 ) }
    dend_4 { pt3dadd( 100.832, 102.323, -1.05812, 0.72 ) }
    dend_4 { pt3dadd( 102.481, 103.824, -1.26907, 0.6 ) }
    dend_4 { pt3dadd( 102.751, 104.069, -1.30914, 0.6 ) }
    dend_4 { pt3dadd( 104.117, 105.286, -1.60359, 0.96 ) }
    dend_4 { pt3dadd( 105.034, 106.127, -1.90551, 0.72 ) }
    dend_4 { pt3dadd( 105.631, 106.706, -2.14735, 0.96 ) }
    dend_4 { pt3dadd( 107.936, 109.08, -3.21165, 0.72 ) }
    dend_4 { pt3dadd( 109.264, 110.504, -3.8847, 0.72 ) }
    dend_4 { pt3dadd( 111.028, 112.376, -4.8559, 1.2 ) }
    dend_4 { pt3dadd( 112.893, 114.277, -5.8382, 0.72 ) }
    dend_4 { pt3dadd( 114.175, 115.487, -6.44267, 0.72 ) }
    dend_4 { pt3dadd( 115.769, 116.868, -7.12046, 0.72 ) }
    dend_4 { pt3dadd( 116.394, 117.347, -7.33377, 0.72 ) }
    dend_4 { pt3dadd( 118.338, 118.747, -7.81067, 1.08 ) }
    dend_4 { pt3dadd( 120.583, 120.221, -8.05764, 0.72 ) }
    dend_4 { pt3dadd( 122.201, 121.221, -8.09338, 1.08 ) }
    dend_4 { pt3dadd( 122.623, 121.483, -8.0803, 1.08 ) }
    dend_4 { pt3dadd( 124.397, 122.534, -8.00915, 0.72 ) }
    dend_4 { pt3dadd( 125.443, 123.165, -7.9927, 0.72 ) }
    dend_4 { pt3dadd( 127.405, 124.395, -8.03647, 1.08 ) }
    dend_4 { pt3dadd( 128.178, 124.87, -8.11634, 1.08 ) }
    dend_4 { pt3dadd( 129.712, 125.766, -8.3214, 0.84 ) }
    dend_4 { pt3dadd( 132.538, 127.341, -8.73875, 0.84 ) }
    dend_4 { pt3dadd( 134.933, 128.586, -9.07037, 0.6 ) }
    dend_4 { pt3dadd( 136.798, 129.432, -9.25443, 1.08 ) }
    dend_4 { pt3dadd( 137.695, 129.782, -9.297, 1.08 ) }
    dend_4 { pt3dadd( 140.046, 130.646, -9.25541, 0.72 ) }
    dend_4 { pt3dadd( 141.218, 131.062, -9.15189, 0.72 ) }
    dend_4 { pt3dadd( 143.673, 131.96, -8.68642, 1.08 ) }
    dend_4 { pt3dadd( 145.813, 132.728, -8.12369, 0.84 ) }
    dend_4 { pt3dadd( 146.939, 133.151, -7.78487, 1.08 ) }
    dend_4 { pt3dadd( 148.624, 133.84, -7.26121, 0.84 ) }
    dend_4 { pt3dadd( 149.49, 134.199, -7.0028, 0.84 ) }
    dend_4 { pt3dadd( 151.72, 135.103, -6.43319, 0.6 ) }
    dend_4 { pt3dadd( 152.821, 135.497, -6.21383, 0.6 ) }
    dend_4 { pt3dadd( 154.509, 136.036, -5.95807, 0.96 ) }
    dend_4 { pt3dadd( 155.214, 136.19, -5.87891, 0.96 ) }
    dend_4 { pt3dadd( 157.346, 136.399, -5.68677, 0.72 ) }
    dend_4 { pt3dadd( 159.024, 136.451, -5.54686, 0.72 ) }
    dend_4 { pt3dadd( 160.39, 136.432, -5.5036, 0.72 ) }
    dend_4 { pt3dadd( 160.732, 136.439, -5.50946, 0.72 ) }
    dend_4 { pt3dadd( 161.974, 136.548, -5.63642, 0.72 ) }
    dend_4 { pt3dadd( 163.994, 136.858, -6.07219, 0.72 ) }
    dend_4 { pt3dadd( 164.558, 136.983, -6.28227, 0.72 ) }
    dend_4 { pt3dadd( 166.668, 137.51, -7.27117, 0.6 ) }
    dend_4 { pt3dadd( 167.826, 137.808, -7.88588, 0.96 ) }
    dend_4 { pt3dadd( 169.822, 138.24, -8.97751, 0.96 ) }
    dend_4 { pt3dadd( 171.098, 138.518, -9.72901, 0.96 ) }
    dend_4 { pt3dadd( 173.216, 138.919, -11.0738, 0.72 ) }
    dend_4 { pt3dadd( 175.135, 139.202, -12.2938, 0.72 ) }
    dend_4 { pt3dadd( 176.964, 139.344, -13.4333, 1.2 ) }
    dend_4 { pt3dadd( 178.684, 139.373, -14.4763, 1.2 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 84/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -4.15913, -277.346, 14.0308, 0.48 ) }
    dend_56 { pt3dadd( -4.02258, -280.067, 14.1773, 0.48 ) }
    dend_56 { pt3dadd( -3.90027, -282.504, 14.3085, 0.48 ) }
    dend_56 { pt3dadd( -3.79562, -284.589, 14.4208, 0.84 ) }
    dend_56 { pt3dadd( -3.70514, -286.392, 14.5179, 0.84 ) }
    dend_56 { pt3dadd( -3.61772, -288.133, 14.6117, 0.6 ) }
    dend_56 { pt3dadd( -4.44085, -298.302, 13.6622, 0.6 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 91/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -4.15913, -277.346, 14.0308, 0.84 ) }
    dend_53 { pt3dadd( -3.50156, -279.476, 14.6243, 0.84 ) }
    dend_53 { pt3dadd( -3.00017, -281.218, 15.0797, 0.84 ) }
    dend_53 { pt3dadd( -2.55634, -282.928, 15.4833, 1.08 ) }
    dend_53 { pt3dadd( -2.01484, -285.059, 15.9384, 0.84 ) }
    dend_53 { pt3dadd( -1.64012, -286.535, 16.2387, 0.84 ) }
    dend_53 { pt3dadd( -1.29218, -287.931, 16.5049, 0.84 ) }
    dend_53 { pt3dadd( -1.11471, -288.722, 16.6366, 0.84 ) }
    dend_53 { pt3dadd( -0.622509, -291.193, 16.9559, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_53 { pt3dadd( -0.391069, -292.592, 17.0971, 1.32 ) }
    dend_53 { pt3dadd( -0.0694213, -295.157, 17.3086, 1.2 ) }
    dend_53 { pt3dadd( 0.0689437, -296.657, 17.4132, 0.96 ) }
    dend_53 { pt3dadd( 0.195948, -298.519, 17.5625, 1.32 ) }
    dend_53 { pt3dadd( 0.271488, -300.212, 17.7201, 1.32 ) }
    dend_53 { pt3dadd( 0.291841, -302.289, 17.956, 1.08 ) }
    dend_53 { pt3dadd( 0.240202, -306.686, 18.4724, 1.08 ) }
    dend_53 { pt3dadd( 0.16628, -308.983, 18.7479, 0.84 ) }
    dend_53 { pt3dadd( 0.0860827, -310.942, 19.0109, 1.2 ) }
    dend_53 { pt3dadd( -0.0153593, -313.109, 19.3428, 1.08 ) }
    dend_53 { pt3dadd( -0.0935803, -314.857, 19.6528, 1.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 11/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 11.8534, -252.901, 0.868041, 0.96 ) }
    dend_51 { pt3dadd( 10.638, -255.474, 1.16346, 0.96 ) }
    dend_51 { pt3dadd( 10.2002, -256.62, 1.41437, 0.96 ) }
    dend_51 { pt3dadd( 9.79505, -257.635, 1.66441, 0.96 ) }
    dend_51 { pt3dadd( 9.30959, -258.853, 1.96087, 0.96 ) }
    dend_51 { pt3dadd( 8.76472, -260.164, 2.29207, 0.96 ) }
    dend_51 { pt3dadd( 7.63868, -263.05, 3.02535, 1.44 ) }
    dend_51 { pt3dadd( 6.81093, -265.606, 3.76084, 0.96 ) }
    dend_51 { pt3dadd( 5.53874, -269.916, 5.06743, 1.44 ) }
    dend_51 { pt3dadd( 5.16937, -271.29, 5.48958, 0.96 ) }
    dend_51 { pt3dadd( 4.47568, -274.038, 6.32577, 1.56 ) }
    dend_51 { pt3dadd( 3.72577, -277.237, 7.2467, 1.2 ) }
    dend_51 { pt3dadd( 2.84006, -281.653, 8.38386, 0.96 ) }
    dend_51 { pt3dadd( 2.51949, -283.611, 8.84304, 1.44 ) }
    dend_51 { pt3dadd( 2.12264, -286.727, 9.52601, 0.96 ) }
    dend_51 { pt3dadd( 1.68547, -290.13, 10.1932, 1.32 ) }
    dend_51 { pt3dadd( 1.1836, -293.735, 10.7621, 0.96 ) }
    dend_51 { pt3dadd( 0.729229, -296.439, 11.0729, 0.96 ) }
    dend_51 { pt3dadd( 0.471248, -298.01, 11.1807, 0.96 ) }
    dend_51 { pt3dadd( 0.281189, -299.343, 11.245, 0.96 ) }
    dend_51 { pt3dadd( -0.171113, -302.911, 11.3571, 1.32 ) }
    dend_51 { pt3dadd( -0.535223, -306.061, 11.4169, 0.96 ) }
    dend_51 { pt3dadd( -0.96924, -310.556, 11.4978, 1.44 ) }
    dend_51 { pt3dadd( -1.21967, -313.836, 11.5667, 0.84 ) }
    dend_51 { pt3dadd( -1.31823, -316.19, 11.6531, 1.2 ) }
    dend_51 { pt3dadd( -1.33335, -317.403, 11.7458, 1.2 ) }
    dend_51 { pt3dadd( -1.31087, -318.218, 11.8444, 0.84 ) }
    dend_51 { pt3dadd( -1.1605, -321.357, 12.4103, 1.2 ) }
    dend_51 { pt3dadd( -1.03729, -324.244, 13.1084, 1.2 ) }
    dend_51 { pt3dadd( -1.03918, -326.202, 13.6595, 0.96 ) }
    dend_51 { pt3dadd( -1.17442, -329.434, 14.6238, 0.96 ) }
    dend_51 { pt3dadd( -1.45187, -332.449, 15.4761, 1.32 ) }
    dend_51 { pt3dadd( -1.82898, -334.948, 16.1649, 1.68 ) }
    dend_51 { pt3dadd( -2.43432, -337.542, 16.8496, 1.2 ) }
    dend_51 { pt3dadd( -3.50842, -340.812, 17.6525, 0.96 ) }
    dend_51 { pt3dadd( -4.78353, -343.661, 18.2146, 0.96 ) }
    dend_51 { pt3dadd( -6.34758, -346.125, 18.5369, 0.84 ) }
    dend_51 { pt3dadd( -7.61227, -347.391, 18.6187, 0.84 ) }
    dend_51 { pt3dadd( -9.14832, -348.05, 18.5007, 0.84 ) }
    dend_51 { pt3dadd( -10.6401, -347.345, 18.2222, 0.84 ) }
    dend_51 { pt3dadd( -11.4312, -346.616, 18.0442, 0.84 ) }
    dend_51 { pt3dadd( -12.1477, -345.687, 17.8788, 0.84 ) }
    dend_51 { pt3dadd( -12.794, -344.494, 17.7705, 1.08 ) }
    dend_51 { pt3dadd( -13.4752, -342.825, 17.6679, 0.84 ) }
    dend_51 { pt3dadd( -13.8696, -341.419, 17.6679, 0.6 ) }
    dend_51 { pt3dadd( -14.6267, -351.478, 19.4316, 0.6 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 11.8534, -252.901, 0.868041, 1.08 ) }
    dend_46 { pt3dadd( 12.1798, -256.708, 1.02739, 1.08 ) }
    dend_46 { pt3dadd( 12.5443, -260.834, 1.17053, 1.44 ) }
    dend_46 { pt3dadd( 12.6756, -262.687, 1.22461, 0.84 ) }
    dend_46 { pt3dadd( 12.8453, -265.381, 1.28738, 1.32 ) }
    dend_46 { pt3dadd( 12.9582, -267.213, 1.32318, 1.32 ) }
    dend_46 { pt3dadd( 13.1455, -270.383, 1.32991, 1.32 ) }
    dend_46 { pt3dadd( 13.2201, -272.422, 1.28725, 1.32 ) }
    dend_46 { pt3dadd( 13.31, -274.645, 1.22469, 1.32 ) }
    dend_46 { pt3dadd( 13.3986, -278.753, 1.09692, 1.44 ) }
    dend_46 { pt3dadd( 13.4251, -280.77, 1.03257, 1.44 ) }
    dend_46 { pt3dadd( 13.4605, -287.12, 0.835103, 1.44 ) }
    dend_46 { pt3dadd( 13.4496, -288.707, 0.788078, 1.44 ) }
    dend_46 { pt3dadd( 13.4278, -291.453, 0.713661, 1.08 ) }
    dend_46 { pt3dadd( 13.4663, -296.936, 0.585099, 1.08 ) }
    dend_46 { pt3dadd( 13.4868, -299.755, 0.533933, 0.84 ) }
    dend_46 { pt3dadd( 13.5234, -303.007, 0.514515, 1.32 ) }
    dend_46 { pt3dadd( 13.6021, -305.579, 0.537453, 1.32 ) }
    dend_46 { pt3dadd( 13.7866, -309.568, 0.588193, 0.96 ) }
    dend_46 { pt3dadd( 13.9166, -311.642, 0.634593, 1.44 ) }
    dend_46 { pt3dadd( 14.1358, -314.68, 0.640253, 1.44 ) }
    dend_46 { pt3dadd( 14.3008, -317.9, 0.585903, 1.2 ) }
    dend_46 { pt3dadd( 14.3692, -321.119, 0.474519, 1.08 ) }
    dend_46 { pt3dadd( 14.3706, -323.683, 0.3472, 1.08 ) }
    dend_46 { pt3dadd( 14.2932, -326.104, 0.197805, 1.68 ) }
    dend_46 { pt3dadd( 14.125, -329.937, -0.0636416, 1.2 ) }
    dend_46 { pt3dadd( 14.0665, -331.519, -0.176894, 1.2 ) }
    dend_46 { pt3dadd( 13.9942, -334.686, -0.399138, 1.44 ) }
    dend_46 { pt3dadd( 13.9772, -337.461, -0.592984, 1.44 ) }
    dend_46 { pt3dadd( 14.0528, -340.878, -0.809778, 1.44 ) }
    dend_46 { pt3dadd( 14.1894, -343.823, -0.95896, 1.44 ) }
    dend_46 { pt3dadd( 14.4588, -347.194, -1.04715, 1.8 ) }
    dend_46 { pt3dadd( 14.7744, -350.688, -1.14836, 1.32 ) }
    dend_46 { pt3dadd( 14.9761, -352.734, -1.21208, 1.08 ) }
    dend_46 { pt3dadd( 15.2372, -355.6, -1.30749, 1.56 ) }
    dend_46 { pt3dadd( 15.534, -358.917, -1.43493, 1.56 ) }
    dend_46 { pt3dadd( 15.6941, -360.766, -1.51103, 1.56 ) }
    dend_46 { pt3dadd( 15.8334, -362.471, -1.58085, 1.56 ) }
    dend_46 { pt3dadd( 16.0303, -365.073, -1.67498, 1.56 ) }
    dend_46 { pt3dadd( 16.2155, -367.273, -1.73173, 1.56 ) }
    dend_46 { pt3dadd( 16.4815, -369.806, -1.80111, 1.32 ) }
    dend_46 { pt3dadd( 16.6121, -370.949, -1.83152, 1.32 ) }
    dend_46 { pt3dadd( 16.7436, -372.641, -1.885, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_46 { pt3dadd( 16.8615, -374.508, -1.94652, 1.32 ) }
    dend_46 { pt3dadd( 17.0319, -377.282, -2.07992, 1.32 ) }
    dend_46 { pt3dadd( 17.1559, -379.361, -2.17956, 1.32 ) }
    dend_46 { pt3dadd( 17.2638, -381.806, -2.29635, 1.68 ) }
    dend_46 { pt3dadd( 17.4358, -388.188, -2.63186, 1.32 ) }
    dend_46 { pt3dadd( 17.4561, -390.192, -2.75087, 1.32 ) }
    dend_46 { pt3dadd( 17.443, -392.49, -2.90857, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 27.4101, -340.353, -5.90872, 0.96 ) }
    dend_30 { pt3dadd( 29.7265, -341.631, -4.70109, 0.96 ) }
    dend_30 { pt3dadd( 30.8895, -342.254, -4.09936, 1.32 ) }
    dend_30 { pt3dadd( 33.2967, -343.564, -2.86239, 0.96 ) }
    dend_30 { pt3dadd( 35.0905, -344.596, -1.92194, 1.32 ) }
    dend_30 { pt3dadd( 37.3675, -345.986, -0.797181, 1.2 ) }
    dend_30 { pt3dadd( 38.5315, -346.663, -0.258733, 1.2 ) }
    dend_30 { pt3dadd( 39.6681, -347.295, 0.223341, 1.2 ) }
    dend_30 { pt3dadd( 40.4546, -347.75, 0.555679, 1.2 ) }
    dend_30 { pt3dadd( 41.363, -348.29, 0.899746, 1.2 ) }
    dend_30 { pt3dadd( 44.0491, -349.793, 1.75182, 0.96 ) }
    dend_30 { pt3dadd( 45.9624, -350.792, 2.18194, 1.32 ) }
    dend_30 { pt3dadd( 47.0941, -351.328, 2.3949, 1.32 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 27.4101, -340.353, -5.90872, 1.08 ) }
    dend_23 { pt3dadd( 27.7223, -344.451, -5.7692, 1.08 ) }
    dend_23 { pt3dadd( 27.9209, -348.158, -5.66281, 0.72 ) }
    dend_23 { pt3dadd( 28.0205, -349.978, -5.68206, 0.72 ) }
    dend_23 { pt3dadd( 28.2364, -354.377, -5.821, 1.2 ) }
    dend_23 { pt3dadd( 28.4026, -357.961, -5.96938, 0.84 ) }
    dend_23 { pt3dadd( 28.4851, -360.127, -6.06759, 0.84 ) }
    dend_23 { pt3dadd( 28.5482, -361.713, -6.17145, 0.84 ) }
    dend_23 { pt3dadd( 28.7076, -365.867, -6.45381, 0.6 ) }
    dend_23 { pt3dadd( 28.8136, -368.178, -6.59911, 0.6 ) }
    dend_23 { pt3dadd( 29.0379, -371.256, -6.76989, 1.2 ) }
    dend_23 { pt3dadd( 29.3728, -374.764, -6.98446, 1.2 ) }
    dend_23 { pt3dadd( 29.7074, -377.717, -7.16322, 0.84 ) }
    dend_23 { pt3dadd( 29.9938, -380.172, -7.29765, 0.84 ) }
    dend_23 { pt3dadd( 30.4195, -384.069, -7.5016, 1.08 ) }
    dend_23 { pt3dadd( 30.7818, -387.445, -7.74734, 0.72 ) }
    dend_23 { pt3dadd( 31.091, -390.436, -8.04723, 1.08 ) }
    dend_23 { pt3dadd( 31.304, -392.498, -8.30024, 1.08 ) }
    dend_23 { pt3dadd( 31.4728, -394.429, -8.57104, 1.08 ) }
    dend_23 { pt3dadd( 31.691, -397.9, -9.09039, 0.72 ) }
    dend_23 { pt3dadd( 31.8022, -400.138, -9.43284, 0.72 ) }
    dend_23 { pt3dadd( 31.842, -402.294, -9.66578, 1.08 ) }
    dend_23 { pt3dadd( 31.8302, -403.931, -9.73996, 1.08 ) }
    dend_23 { pt3dadd( 31.817, -405.038, -9.72836, 1.08 ) }
    dend_23 { pt3dadd( 31.7274, -408.096, -9.66595, 0.72 ) }
    dend_23 { pt3dadd( 31.6549, -409.804, -9.63498, 0.72 ) }
    dend_23 { pt3dadd( 31.4838, -413.605, -9.64006, 1.2 ) }
    dend_23 { pt3dadd( 31.3322, -417.402, -9.70941, 1.2 ) }
    dend_23 { pt3dadd( 31.1721, -422.384, -9.90808, 1.2 ) }
    dend_23 { pt3dadd( 31.0757, -427.181, -10.2122, 0.84 ) }
    dend_23 { pt3dadd( 31.0411, -429.075, -10.383, 1.32 ) }
    dend_23 { pt3dadd( 30.9909, -431.171, -10.6357, 1.32 ) }
    dend_23 { pt3dadd( 30.979, -432.145, -10.7962, 1.32 ) }
    dend_23 { pt3dadd( 30.9543, -434.311, -11.2026, 0.96 ) }
    dend_23 { pt3dadd( 30.9185, -436.242, -11.5651, 1.56 ) }
    dend_23 { pt3dadd( 30.9206, -438.251, -11.8875, 1.56 ) }
    dend_23 { pt3dadd( 30.9498, -439.946, -12.1446, 1.08 ) }
    dend_23 { pt3dadd( 30.9649, -441.591, -12.3859, 1.08 ) }
    dend_23 { pt3dadd( 31.0289, -444.955, -12.9162, 0.84 ) }
    dend_23 { pt3dadd( 31.1169, -446.523, -13.1726, 1.44 ) }
    dend_23 { pt3dadd( 31.4067, -449.436, -13.6791, 1.08 ) }
    dend_23 { pt3dadd( 31.6853, -451.243, -14.0242, 1.08 ) }
    dend_23 { pt3dadd( 32.1773, -454.114, -14.5858, 0.72 ) }
    dend_23 { pt3dadd( 32.7438, -457.547, -15.2438, 1.08 ) }
    dend_23 { pt3dadd( 33.0651, -459.341, -15.6472, 1.08 ) }
    dend_23 { pt3dadd( 33.448, -461.378, -16.1443, 0.96 ) }
    dend_23 { pt3dadd( 34.0863, -464.832, -16.9851, 0.72 ) }
    dend_23 { pt3dadd( 34.4258, -466.555, -17.4559, 0.72 ) }
    dend_23 { pt3dadd( 34.7093, -467.776, -17.8402, 0.72 ) }
    dend_23 { pt3dadd( 35.5244, -471.399, -19.1229, 0.72 ) }
    dend_23 { pt3dadd( 35.7858, -472.827, -19.6812, 0.72 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.38983, 52.7602, 26.3781, 0.6 ) }
    dend_16 { pt3dadd( -0.83032, 43.7707, 24.0818, 0.6 ) }
    dend_16 { pt3dadd( -4.91519, 34.4589, 23.1974, 0.6 ) }
    dend_16 { pt3dadd( -8.34585, 25.0998, 20.993, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 75/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.38983, 52.7602, 26.3781, 0.84 ) }
    dend_15 { pt3dadd( -1.35582, 44.4653, 22.9158, 0.6 ) }
    dend_15 { pt3dadd( -8.05961, 37.1799, 20.7851, 0.6 ) }
    dend_15 { pt3dadd( -14.5445, 29.5106, 19.3841, 0.6 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 79/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -0.108503, 95.1789, 19.93, 0.6 ) }
    dend_7 { pt3dadd( -5.02578, 103.472, 23.149, 0.6 ) }
    dend_7 { pt3dadd( -11.4451, 110.525, 26.5308, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 82/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.108503, 95.1789, 19.93, 0.84 ) }
    dend_6 { pt3dadd( -4.92996, 104.143, 20.4453, 0.6 ) }
    dend_6 { pt3dadd( -8.27928, 113.801, 20.3566, 0.6 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -0.0935803, -314.857, 19.6528, 0.6 ) }
    dend_55 { pt3dadd( -1.64143, -314.509, 20.6402, 0.6 ) }
    dend_55 { pt3dadd( -3.56782, -314.077, 21.8691, 0.6 ) }
    dend_55 { pt3dadd( -4.47287, -313.874, 22.4464, 0.6 ) }
    dend_55 { pt3dadd( -5.55924, -313.63, 23.1394, 0.96 ) }
    dend_55 { pt3dadd( -14.1064, -310.639, 27.4325, 0.96 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 91/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -0.0935803, -314.857, 19.6528, 0.96 ) }
    dend_54 { pt3dadd( -0.380495, -316.198, 19.7341, 0.96 ) }
    dend_54 { pt3dadd( -0.661804, -317.513, 19.8138, 0.72 ) }
    dend_54 { pt3dadd( -1.12143, -319.662, 19.944, 0.72 ) }
    dend_54 { pt3dadd( -3.70997, -329.266, 22.2908, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 17.443, -392.49, -2.90857, 0.84 ) }
    dend_50 { pt3dadd( 19.0211, -394.836, -3.93063, 0.84 ) }
    dend_50 { pt3dadd( 20.6481, -396.951, -4.91627, 0.84 ) }
    dend_50 { pt3dadd( 21.0691, -397.528, -5.20524, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_50 { pt3dadd( 22.0781, -399.029, -6.00879, 0.84 ) }
    dend_50 { pt3dadd( 23.3133, -401.046, -7.08218, 0.6 ) }
    dend_50 { pt3dadd( 24.3582, -402.849, -8.01693, 1.08 ) }
    dend_50 { pt3dadd( 25.0904, -404.232, -8.71582, 1.08 ) }
    dend_50 { pt3dadd( 26.2106, -406.347, -9.77286, 0.72 ) }
    dend_50 { pt3dadd( 27.1337, -408.171, -10.6162, 0.72 ) }
    dend_50 { pt3dadd( 27.6451, -409.282, -11.1425, 0.72 ) }
    dend_50 { pt3dadd( 28.0638, -410.195, -11.6492, 0.72 ) }
    dend_50 { pt3dadd( 28.4826, -411.175, -12.2139, 1.2 ) }
    dend_50 { pt3dadd( 29.5233, -413.603, -13.5661, 0.84 ) }
    dend_50 { pt3dadd( 30.9358, -416.691, -15.2, 1.08 ) }
    dend_50 { pt3dadd( 32.5118, -420.131, -16.9429, 1.08 ) }
    dend_50 { pt3dadd( 34.0648, -423.596, -18.6803, 0.84 ) }
    dend_50 { pt3dadd( 34.716, -425.133, -19.4123, 0.84 ) }
    dend_50 { pt3dadd( 35.4806, -426.98, -20.2439, 1.32 ) }
    dend_50 { pt3dadd( 36.4368, -429.361, -21.2001, 0.84 ) }
    dend_50 { pt3dadd( 36.8048, -430.231, -21.5187, 0.84 ) }
    dend_50 { pt3dadd( 37.4526, -431.683, -21.9417, 1.32 ) }
    dend_50 { pt3dadd( 38.461, -433.919, -22.5859, 0.84 ) }
    dend_50 { pt3dadd( 39.178, -435.412, -23.1704, 1.44 ) }
    dend_50 { pt3dadd( 40.3856, -437.988, -24.4354, 1.2 ) }
    dend_50 { pt3dadd( 40.9151, -439.133, -25.0922, 1.2 ) }
    dend_50 { pt3dadd( 41.6011, -440.64, -25.9954, 1.44 ) }
    dend_50 { pt3dadd( 42.4723, -442.592, -27.1977, 1.08 ) }
    dend_50 { pt3dadd( 43.9939, -446.15, -29.3886, 0.84 ) }
    dend_50 { pt3dadd( 44.7726, -448.058, -30.5224, 1.44 ) }
    dend_50 { pt3dadd( 45.5219, -450.064, -31.6559, 0.96 ) }
    dend_50 { pt3dadd( 45.9932, -451.562, -32.4111, 0.96 ) }
    dend_50 { pt3dadd( 46.3018, -452.748, -32.9201, 1.44 ) }
    dend_50 { pt3dadd( 46.8065, -455.482, -33.9079, 0.96 ) }
    dend_50 { pt3dadd( 46.8979, -456.219, -34.1362, 0.96 ) }
    dend_50 { pt3dadd( 47.1787, -459.025, -34.9524, 1.44 ) }
    dend_50 { pt3dadd( 47.4388, -462.018, -35.8492, 0.84 ) }
    dend_50 { pt3dadd( 47.6983, -465.404, -37.0425, 1.44 ) }
    dend_50 { pt3dadd( 47.9277, -468.91, -38.3978, 0.84 ) }
    dend_50 { pt3dadd( 47.9781, -469.924, -38.8309, 0.84 ) }
    dend_50 { pt3dadd( 48.132, -472.607, -40.0911, 1.44 ) }
    dend_50 { pt3dadd( 48.4119, -476.342, -41.9745, 1.44 ) }
    dend_50 { pt3dadd( 48.6983, -480.44, -44.096, 1.08 ) }
    dend_50 { pt3dadd( 48.8635, -482.624, -45.2727, 0.72 ) }
    dend_50 { pt3dadd( 49.0531, -484.841, -46.5201, 1.32 ) }
    dend_50 { pt3dadd( 49.1875, -486.805, -47.6591, 0.72 ) }
    dend_50 { pt3dadd( 49.2096, -487.801, -48.2469, 0.72 ) }
    dend_50 { pt3dadd( 49.1417, -490.477, -49.7899, 1.32 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 44/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 17.443, -392.49, -2.90857, 1.08 ) }
    dend_47 { pt3dadd( 17.2312, -395.072, -3.10396, 1.08 ) }
    dend_47 { pt3dadd( 17.1654, -396.776, -3.19923, 1.08 ) }
    dend_47 { pt3dadd( 17.1259, -398.003, -3.2076, 1.08 ) }
    dend_47 { pt3dadd( 17.0176, -400.317, -3.35918, 1.08 ) }
    dend_47 { pt3dadd( 16.8932, -403.113, -3.69715, 1.44 ) }
    dend_47 { pt3dadd( 16.8011, -405.805, -4.09602, 0.96 ) }
    dend_47 { pt3dadd( 16.7902, -408.031, -4.47416, 0.96 ) }
    dend_47 { pt3dadd( 16.8279, -410.199, -4.91531, 0.96 ) }
    dend_47 { pt3dadd( 16.948, -414.289, -5.71825, 0.96 ) }
    dend_47 { pt3dadd( 17.0671, -416.96, -6.18548, 0.84 ) }
    dend_47 { pt3dadd( 17.1652, -418.532, -6.41817, 1.44 ) }
    dend_47 { pt3dadd( 17.3089, -420.961, -6.71401, 1.08 ) }
    dend_47 { pt3dadd( 17.4524, -422.907, -6.89185, 1.08 ) }
    dend_47 { pt3dadd( 17.7039, -425.791, -7.07654, 1.56 ) }
    dend_47 { pt3dadd( 18.1399, -430.276, -7.12906, 1.32 ) }
    dend_47 { pt3dadd( 18.3418, -432.51, -7.1415, 0.96 ) }
    dend_47 { pt3dadd( 18.5194, -434.738, -7.17106, 1.32 ) }
    dend_47 { pt3dadd( 18.8422, -438.889, -7.25408, 1.08 ) }
    dend_47 { pt3dadd( 19.0423, -441.506, -7.35284, 0.72 ) }
    dend_47 { pt3dadd( 19.1903, -443.805, -7.4871, 1.32 ) }
    dend_47 { pt3dadd( 19.3786, -447.02, -7.65674, 1.08 ) }
    dend_47 { pt3dadd( 19.5157, -449.581, -7.76408, 1.56 ) }
    dend_47 { pt3dadd( 19.6717, -452.518, -7.84786, 0.84 ) }
    dend_47 { pt3dadd( 19.8564, -456.098, -7.93781, 0.6 ) }
    dend_47 { pt3dadd( 19.9391, -457.64, -7.97511, 1.08 ) }
    dend_47 { pt3dadd( 20.1067, -460.917, -8.05507, 1.2 ) }
    dend_47 { pt3dadd( 20.2725, -463.854, -8.12359, 0.72 ) }
    dend_47 { pt3dadd( 20.3361, -464.831, -8.15148, 0.72 ) }
    dend_47 { pt3dadd( 20.6576, -469.513, -8.32055, 1.32 ) }
    dend_47 { pt3dadd( 20.7412, -470.369, -8.3607, 1.32 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 47.0941, -351.328, 2.3949, 0.96 ) }
    dend_34 { pt3dadd( 48.9535, -350.037, 2.74027, 0.96 ) }
    dend_34 { pt3dadd( 49.7014, -349.518, 2.87919, 0.96 ) }
    dend_34 { pt3dadd( 50.6125, -348.885, 3.04842, 0.84 ) }
    dend_34 { pt3dadd( 52.8045, -347.364, 3.45558, 0.84 ) }
    dend_34 { pt3dadd( 54.1318, -346.442, 3.70212, 1.08 ) }
    dend_34 { pt3dadd( 55.2889, -345.639, 3.91706, 1.08 ) }
    dend_34 { pt3dadd( 63.054, -339.373, 5.44462, 1.08 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 47.0941, -351.328, 2.3949, 0.6 ) }
    dend_31 { pt3dadd( 48.2949, -353.028, 3.2905, 0.6 ) }
    dend_31 { pt3dadd( 49.7426, -355.199, 4.60336, 1.08 ) }
    dend_31 { pt3dadd( 51.2014, -357.611, 6.07289, 0.96 ) }
    dend_31 { pt3dadd( 52.0134, -358.969, 6.89023, 0.96 ) }
    dend_31 { pt3dadd( 52.8601, -360.384, 7.74244, 1.32 ) }
    dend_31 { pt3dadd( 54.408, -362.97, 9.3004, 1.08 ) }
    dend_31 { pt3dadd( 55.0283, -364.083, 10.0286, 1.08 ) }
    dend_31 { pt3dadd( 56.1961, -366.299, 11.6179, 1.08 ) }
    dend_31 { pt3dadd( 57.2399, -368.384, 13.0759, 0.84 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 35.7858, -472.827, -19.6812, 0.72 ) }
    dend_27 { pt3dadd( 35.6161, -474.342, -20.0269, 0.72 ) }
    dend_27 { pt3dadd( 35.4846, -475.791, -20.3153, 0.72 ) }
    dend_27 { pt3dadd( 35.2902, -477.775, -20.7179, 0.72 ) }
    dend_27 { pt3dadd( 35.1304, -479.089, -20.9708, 0.72 ) }
    dend_27 { pt3dadd( 35.0594, -479.693, -21.0874, 0.72 ) }
    dend_27 { pt3dadd( 34.8454, -481.774, -21.4806, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( 34.718, -482.865, -21.6627, 0.6 ) }
    dend_27 { pt3dadd( 34.5971, -483.815, -21.8085, 0.6 ) }
    dend_27 { pt3dadd( 34.373, -485.452, -22.0217, 0.48 ) }
    dend_27 { pt3dadd( 34.2359, -486.374, -22.1543, 0.48 ) }
    dend_27 { pt3dadd( 33.9151, -488.324, -22.4543, 0.84 ) }
    dend_27 { pt3dadd( 33.4489, -490.52, -22.8223, 0.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 35.7858, -472.827, -19.6812, 0.72 ) }
    dend_24 { pt3dadd( 36.619, -474.962, -19.6222, 0.72 ) }
    dend_24 { pt3dadd( 37.7919, -477.968, -19.5392, 1.2 ) }
    dend_24 { pt3dadd( 38.182, -478.968, -19.5116, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 10/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 20.7412, -470.369, -8.3607, 0.48 ) }
    dend_49 { pt3dadd( 18.7772, -471.813, -8.23824, 0.48 ) }
    dend_49 { pt3dadd( 18.4197, -472.049, -8.22337, 0.48 ) }
    dend_49 { pt3dadd( 17.2858, -472.883, -8.18526, 0.48 ) }
    dend_49 { pt3dadd( 16.0245, -473.976, -8.03331, 0.48 ) }
    dend_49 { pt3dadd( 15.4701, -474.513, -7.92033, 0.48 ) }
    dend_49 { pt3dadd( 14.0049, -475.974, -7.57084, 0.96 ) }
    dend_49 { pt3dadd( 12.2908, -477.723, -7.07497, 0.6 ) }
    dend_49 { pt3dadd( 11.0131, -479.11, -6.65638, 0.6 ) }
    dend_49 { pt3dadd( 9.11845, -481.259, -5.96009, 1.08 ) }
    dend_49 { pt3dadd( 7.76733, -482.845, -5.40433, 0.84 ) }
    dend_49 { pt3dadd( 6.9211, -483.909, -5.01014, 0.84 ) }
    dend_49 { pt3dadd( 5.95795, -485.295, -4.46365, 1.2 ) }
    dend_49 { pt3dadd( 4.91993, -486.827, -3.78372, 0.84 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 24/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 20.7412, -470.369, -8.3607, 0.84 ) }
    dend_48 { pt3dadd( 21.2677, -473.924, -8.86733, 0.84 ) }
    dend_48 { pt3dadd( 21.3948, -475.616, -9.09404, 0.84 ) }
    dend_48 { pt3dadd( 21.4811, -477.114, -9.27313, 0.84 ) }
    dend_48 { pt3dadd( 21.6969, -480.928, -9.73664, 0.84 ) }
    dend_48 { pt3dadd( 21.7819, -482.342, -9.90464, 0.84 ) }
    dend_48 { pt3dadd( 21.9798, -485.633, -10.2813, 1.44 ) }
    dend_48 { pt3dadd( 22.1079, -488.065, -10.5744, 1.08 ) }
    dend_48 { pt3dadd( 22.2219, -490.834, -10.8719, 1.08 ) }
    dend_48 { pt3dadd( 22.2972, -493.471, -11.0999, 0.84 ) }
    dend_48 { pt3dadd( 22.3487, -495.126, -11.1881, 0.84 ) }
    dend_48 { pt3dadd( 22.4527, -496.587, -11.2462, 1.08 ) }
    dend_48 { pt3dadd( 22.7304, -498.525, -11.3157, 0.6 ) }
    dend_48 { pt3dadd( 23.028, -500.083, -11.3589, 0.6 ) }
    dend_48 { pt3dadd( 23.35, -501.71, -11.3655, 0.6 ) }
    dend_48 { pt3dadd( 23.804, -503.861, -11.3965, 1.2 ) }
    dend_48 { pt3dadd( 24.2847, -506.013, -11.481, 1.2 ) }
    dend_48 { pt3dadd( 24.5978, -507.507, -11.5649, 1.2 ) }
    dend_48 { pt3dadd( 24.9142, -509.196, -11.6783, 0.96 ) }
    dend_48 { pt3dadd( 25.1088, -510.32, -11.7576, 1.44 ) }
    dend_48 { pt3dadd( 25.4245, -512.55, -11.9119, 1.44 ) }
    dend_48 { pt3dadd( 25.7714, -515.735, -12.123, 0.96 ) }
    dend_48 { pt3dadd( 26.0802, -519.249, -12.3374, 1.32 ) }
    dend_48 { pt3dadd( 26.2053, -520.706, -12.4178, 1.32 ) }
    dend_48 { pt3dadd( 26.4772, -523.972, -12.5744, 0.84 ) }
    dend_48 { pt3dadd( 26.6651, -526.659, -12.6859, 1.32 ) }
    dend_48 { pt3dadd( 26.757, -528.122, -12.7189, 1.32 ) }
    dend_48 { pt3dadd( 26.8502, -529.841, -12.7883, 1.32 ) }
    dend_48 { pt3dadd( 27.02, -533.168, -12.9675, 1.32 ) }
    dend_48 { pt3dadd( 27.0993, -535.359, -13.1037, 0.96 ) }
    dend_48 { pt3dadd( 27.1348, -537.111, -13.2242, 0.96 ) }
    dend_48 { pt3dadd( 27.246, -541.049, -13.5176, 1.44 ) }
    dend_48 { pt3dadd( 27.3172, -543.463, -13.7254, 1.08 ) }
    dend_48 { pt3dadd( 27.3376, -545.403, -13.9148, 1.08 ) }
    dend_48 { pt3dadd( 27.3304, -547.347, -14.1511, 1.08 ) }
    dend_48 { pt3dadd( 27.3531, -549.722, -14.4617, 1.08 ) }
    dend_48 { pt3dadd( 27.3994, -552.269, -14.8017, 1.08 ) }
    dend_48 { pt3dadd( 27.4521, -555.871, -15.3243, 1.08 ) }
    dend_48 { pt3dadd( 27.5703, -561.216, -16.1446, 0.96 ) }
    dend_48 { pt3dadd( 27.7431, -569.421, -17.4566, 1.32 ) }
    dend_48 { pt3dadd( 27.7993, -572.121, -17.9024, 0.84 ) }
    dend_48 { pt3dadd( 27.8278, -573.729, -18.1705, 0.84 ) }
    dend_48 { pt3dadd( 27.8539, -575.917, -18.527, 0.84 ) }
    dend_48 { pt3dadd( 27.8692, -577.589, -18.7775, 0.84 ) }
    dend_48 { pt3dadd( 27.9085, -580.876, -19.2119, 0.84 ) }
    dend_48 { pt3dadd( 27.8857, -582.514, -19.3834, 0.84 ) }
    dend_48 { pt3dadd( 27.829, -583.874, -19.5111, 0.84 ) }
    dend_48 { pt3dadd( 27.744, -585.298, -19.6177, 1.2 ) }
    dend_48 { pt3dadd( 27.5948, -587.975, -19.775, 0.72 ) }
    dend_48 { pt3dadd( 27.4255, -590.06, -19.8902, 1.32 ) }
    dend_48 { pt3dadd( 27.2744, -591.716, -20.0414, 0.84 ) }
    dend_48 { pt3dadd( 27.074, -593.65, -20.237, 1.56 ) }
    dend_48 { pt3dadd( 26.5048, -598.36, -20.827, 0.84 ) }
    dend_48 { pt3dadd( 26.2539, -600.11, -21.0761, 1.32 ) }
    dend_48 { pt3dadd( 25.7029, -603.267, -21.5646, 0.84 ) }
    dend_48 { pt3dadd( 24.7886, -607.956, -22.3082, 0.6 ) }
    dend_48 { pt3dadd( 24.5099, -609.348, -22.5249, 1.08 ) }
    dend_48 { pt3dadd( 23.9768, -611.96, -22.9146, 0.84 ) }
    dend_48 { pt3dadd( 23.5141, -614.132, -23.2464, 1.44 ) }
    dend_48 { pt3dadd( 23.0051, -616.402, -23.574, 0.96 ) }
    dend_48 { pt3dadd( 22.6153, -618.276, -23.8173, 0.72 ) }
    dend_48 { pt3dadd( 22.2196, -620.081, -23.949, 0.72 ) }
    dend_48 { pt3dadd( 21.5354, -623.464, -24.1945, 1.32 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 57.2399, -368.384, 13.0759, 0.84 ) }
    dend_33 { pt3dadd( 59.7052, -367.824, 13.4801, 0.84 ) }
    dend_33 { pt3dadd( 60.7876, -367.578, 13.6576, 0.84 ) }
    dend_33 { pt3dadd( 63.3343, -367.0, 14.0751, 0.72 ) }
    dend_33 { pt3dadd( 64.9432, -366.634, 14.3389, 0.72 ) }
    dend_33 { pt3dadd( 74.8956, -365.972, 15.0689, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 57.2399, -368.384, 13.0759, 0.72 ) }
    dend_32 { pt3dadd( 58.2774, -370.243, 13.6958, 0.72 ) }
    dend_32 { pt3dadd( 59.3776, -372.214, 14.3532, 0.84 ) }
    dend_32 { pt3dadd( 59.842, -373.047, 14.6307, 0.84 ) }
    dend_32 { pt3dadd( 60.8145, -374.789, 15.2118, 0.6 ) }
    dend_32 { pt3dadd( 61.4878, -375.996, 15.6141, 0.6 ) }
    dend_32 { pt3dadd( 62.1917, -377.257, 16.0347, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_32 { pt3dadd( 67.5343, -385.108, 19.6116, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 33.4489, -490.52, -22.8223, 0.48 ) }
    dend_29 { pt3dadd( 29.1365, -490.882, -24.6695, 0.48 ) }
    dend_29 { pt3dadd( 28.1333, -490.966, -25.0993, 1.08 ) }
    dend_29 { pt3dadd( 27.1003, -491.053, -25.5418, 0.48 ) }
    dend_29 { pt3dadd( 25.8042, -491.161, -26.097, 0.96 ) }
    dend_29 { pt3dadd( 24.7078, -491.253, -26.5666, 0.48 ) }
    dend_29 { pt3dadd( 22.5681, -491.433, -27.4831, 0.48 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 8/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 33.4489, -490.52, -22.8223, 0.96 ) }
    dend_28 { pt3dadd( 33.3749, -492.066, -24.0501, 0.96 ) }
    dend_28 { pt3dadd( 33.1818, -494.801, -26.0886, 0.48 ) }
    dend_28 { pt3dadd( 33.1032, -495.877, -26.8224, 0.48 ) }
    dend_28 { pt3dadd( 32.9926, -498.087, -28.2509, 0.84 ) }
    dend_28 { pt3dadd( 32.928, -499.696, -29.275, 0.6 ) }
    dend_28 { pt3dadd( 32.9036, -500.475, -29.7646, 0.6 ) }
    dend_28 { pt3dadd( 32.9042, -502.166, -30.8807, 0.96 ) }
    dend_28 { pt3dadd( 32.9265, -503.295, -31.6342, 0.96 ) }
    dend_28 { pt3dadd( 33.0251, -505.464, -33.1995, 0.72 ) }
    dend_28 { pt3dadd( 33.1939, -507.553, -34.8307, 0.72 ) }
    dend_28 { pt3dadd( 33.427, -509.191, -36.3743, 1.2 ) }
    dend_28 { pt3dadd( 33.6932, -510.727, -37.9243, 1.2 ) }
    dend_28 { pt3dadd( 33.883, -511.649, -38.9384, 1.2 ) }
    dend_28 { pt3dadd( 34.1324, -512.736, -40.2729, 1.08 ) }
    dend_28 { pt3dadd( 34.5013, -514.093, -42.1586, 0.84 ) }
    dend_28 { pt3dadd( 35.0324, -515.498, -44.4099, 1.08 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 25/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 38.182, -478.968, -19.5116, 0.72 ) }
    dend_26 { pt3dadd( 41.8839, -479.614, -19.5116, 0.72 ) }
    dend_26 { pt3dadd( 44.0993, -480.0, -19.5116, 0.72 ) }
    dend_26 { pt3dadd( 45.525, -480.249, -19.5116, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 38.182, -478.968, -19.5116, 0.48 ) }
    dend_25 { pt3dadd( 38.1811, -482.274, -19.5116, 0.48 ) }
    dend_25 { pt3dadd( 38.0872, -484.137, -19.5317, 0.96 ) }
    dend_25 { pt3dadd( 38.0107, -484.999, -19.5449, 0.96 ) }
    dend_25 { pt3dadd( 37.7635, -487.091, -19.58, 0.48 ) }
    dend_25 { pt3dadd( 37.5832, -488.354, -19.6011, 0.48 ) }
    dend_25 { pt3dadd( 37.2794, -490.419, -19.6348, 0.96 ) }
    dend_25 { pt3dadd( 36.931, -492.482, -19.6723, 0.96 ) }
    dend_25 { pt3dadd( 36.6757, -493.849, -19.697, 0.96 ) }
    dend_25 { pt3dadd( 36.2336, -495.888, -19.7473, 1.32 ) }
    dend_25 { pt3dadd( 35.7306, -497.929, -19.8082, 0.96 ) }
    dend_25 { pt3dadd( 35.5384, -498.729, -19.8341, 0.96 ) }
    dend_25 { pt3dadd( 35.3377, -499.691, -19.8652, 0.96 ) }
    dend_25 { pt3dadd( 35.0642, -501.274, -19.9104, 1.32 ) }
    dend_25 { pt3dadd( 34.8634, -502.944, -19.9599, 0.96 ) }
    dend_25 { pt3dadd( 34.7465, -504.772, -20.0152, 0.6 ) }
    dend_25 { pt3dadd( 34.7444, -506.13, -20.1271, 0.6 ) }
    dend_25 { pt3dadd( 34.8663, -507.809, -20.4324, 1.32 ) }
    dend_25 { pt3dadd( 35.1304, -509.555, -20.9274, 0.84 ) }
    dend_25 { pt3dadd( 35.4276, -511.004, -21.4261, 0.84 ) }
    dend_25 { pt3dadd( 35.5941, -511.657, -21.6699, 0.84 ) }
    dend_25 { pt3dadd( 36.3204, -514.258, -22.7094, 0.84 ) }
    dend_25 { pt3dadd( 37.1057, -516.967, -23.8359, 1.44 ) }
    dend_25 { pt3dadd( 37.8803, -519.845, -25.0511, 0.96 ) }
    dend_25 { pt3dadd( 38.1386, -521.071, -25.5105, 0.96 ) }
    dend_25 { pt3dadd( 38.3645, -522.743, -26.03, 0.96 ) }
    dend_25 { pt3dadd( 38.4435, -523.97, -26.3065, 0.96 ) }
    dend_25 { pt3dadd( 38.422, -525.239, -26.4477, 0.96 ) }
    dend_25 { pt3dadd( 38.1045, -528.238, -26.5277, 0.72 ) }
    dend_25 { pt3dadd( 37.5861, -531.323, -26.4479, 1.08 ) }
    dend_25 { pt3dadd( 37.1681, -533.359, -26.3369, 0.72 ) }
    dend_25 { pt3dadd( 36.7293, -535.269, -26.1938, 1.2 ) }
    dend_25 { pt3dadd( 36.2168, -537.471, -25.9943, 0.96 ) }
    dend_25 { pt3dadd( 35.4211, -540.929, -25.6313, 1.44 ) }
    dend_25 { pt3dadd( 34.897, -543.292, -25.3624, 0.96 ) }
    dend_25 { pt3dadd( 34.6109, -544.647, -25.2719, 0.72 ) }
    dend_25 { pt3dadd( 33.9295, -548.032, -25.1696, 1.08 ) }
    dend_25 { pt3dadd( 33.5236, -550.061, -25.1902, 0.6 ) }
    dend_25 { pt3dadd( 33.2543, -551.399, -25.2077, 0.6 ) }
    dend_25 { pt3dadd( 32.9231, -553.031, -25.2247, 1.2 ) }
    dend_25 { pt3dadd( 32.088, -556.789, -25.1627, 0.72 ) }
    dend_25 { pt3dadd( 31.7053, -558.346, -25.1415, 1.08 ) }
    dend_25 { pt3dadd( 31.0348, -560.714, -25.0933, 0.96 ) }
    dend_25 { pt3dadd( 30.3013, -563.036, -25.0324, 0.72 ) }
    dend_25 { pt3dadd( 29.8752, -564.36, -24.9772, 0.72 ) }
    dend_25 { pt3dadd( 28.8086, -567.582, -24.7536, 0.72 ) }
    dend_25 { pt3dadd( 27.945, -569.996, -24.4517, 0.72 ) }
    dend_25 { pt3dadd( 27.5588, -571.049, -24.3381, 1.2 ) }
    dend_25 { pt3dadd( 27.0059, -572.541, -24.2655, 1.2 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_73 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_73 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_64 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_74 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_65 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_19 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_77 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_76 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_72 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_71 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_68 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_67 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_62 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_60 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_39 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_38 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_36 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_52 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_35 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_13 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_46 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_23 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_47 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_48 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_25 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_41 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_69 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_42 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_58 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_12 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_75 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_5 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_7 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_6 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_15 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_63 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_53 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_54 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_55 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_30 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_34 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_31 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_32 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_24 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_26 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_27 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_49 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_29 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_57 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_73 nseg = 3
    dend_64 nseg = 3
    dend_74 nseg = 3
    dend_65 nseg = 3
    dend_61 nseg = 7
    dend_40 nseg = 5
    dend_19 nseg = 3
    dend_77 nseg = 7
    dend_76 nseg = 3
    dend_72 nseg = 9
    dend_71 nseg = 3
    dend_68 nseg = 7
    dend_67 nseg = 7
    dend_62 nseg = 7
    dend_37 nseg = 5
    dend_20 nseg = 9
    dend_60 nseg = 3
    dend_59 nseg = 9
    dend_57 nseg = 5
    dend_44 nseg = 9
    dend_39 nseg = 9
    dend_38 nseg = 3
    dend_36 nseg = 3
    dend_21 nseg = 3
    dend_17 nseg = 3
    dend_8 nseg = 5
    dend_52 nseg = 3
    dend_35 nseg = 3
    dend_22 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 5
    dend_9 nseg = 5
    dend_4 nseg = 9
    dend_51 nseg = 7
    dend_46 nseg = 7
    dend_23 nseg = 7
    dend_50 nseg = 5
    dend_47 nseg = 3
    dend_48 nseg = 7
    dend_25 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_DBC_e3438da2c9_0_0


