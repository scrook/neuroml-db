// Cell: bAC217_L6_LBC_e2449b7b3c_0_0
/*
{
  "id" : "bAC217_L6_LBC_e2449b7b3c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "7.87846, -6.14013, 0.926888, 4.37079", "7.13597, -5.59801, 0.818799, 7.64789", "6.39348, -5.05588, 0.71071, 10.1599", "5.65099, -4.51376, 0.602621, 12.0174", "4.9085, -3.97163, 0.494532, 13.4936", "4.16601, -3.42951, 0.386443, 14.6737", "3.42353, -2.88739, 0.278354, 15.6589", "2.68104, -2.34526, 0.170265, 16.4486", "1.93855, -1.80314, 0.0621757, 17.0812", "1.19606, -1.26101, -0.0459132, 17.5637", "0.453571, -0.718889, -0.154002, 17.6377", "-0.288918, -0.176765, -0.262091, 17.3255", "-1.03141, 0.365359, -0.37018, 16.8591", "-1.7739, 0.907483, -0.478269, 16.3051", "-2.51638, 1.44961, -0.586358, 15.5043", "-3.25887, 1.99173, -0.694447, 14.6925", "-4.00136, 2.53386, -0.802536, 13.7448", "-4.74385, 3.07598, -0.910625, 12.2667", "-5.48634, 3.6181, -1.01871, 10.4241", "-6.22883, 4.16023, -1.1268, 7.15767", "-6.97132, 4.70235, -1.23489, 4.10717" ]
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.81954, 7.26962, -12.8269, 5.16", "3.81954, 7.26962, -12.8269, 5.16", "4.30814, 8.99587, -13.2864, 3.83", "4.73958, 10.5202, -13.6922, 3.39", "5.16579, 12.026, -14.093, 3.24", "5.70074, 13.916, -14.5961, 3.24", "6.24694, 15.8457, -15.1098, 3.76" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999946150783
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "6.87954, -0.387384, -14.2069, 1.11", "6.94205, -0.36886, -14.2246, 1.11", "7.35561, -0.285093, -14.3634, 0.81", "7.90966, -0.245061, -14.537, 0.66", "8.84301, -0.31308, -14.816, 0.52", "10.5665, -0.633016, -15.3399, 0.44", "11.3218, -0.84156, -15.5791, 0.81", "12.2509, -1.18465, -15.8818, 0.96", "13.2715, -1.65845, -16.227, 1.77", "14.4425, -2.31582, -16.6263, 1.4", "15.4896, -3.01753, -16.9591, 1.25", "16.3896, -3.69981, -17.1957, 0.96", "16.8841, -4.10111, -17.3354, 0.88", "17.4711, -4.59135, -17.5028, 0.96", "17.9948, -5.0205, -17.6688, 1.11", "19.1459, -5.90508, -18.0656, 2.14", "20.3333, -6.75532, -18.5034, 1.18", "20.3866, -6.78966, -18.5261, 1.18", "21.3153, -7.3322, -19.0437, 0.74", "22.2549, -7.82422, -19.7067, 0.74", "22.8282, -8.09043, -20.1868, 1.11", "23.2372, -8.25653, -20.5858, 0.96", "24.0422, -8.54742, -21.4444, 0.96", "25.0525, -8.88621, -22.6138, 0.88", "25.6254, -9.04811, -23.3422, 0.52", "25.8134, -9.09087, -23.6013, 0.52", "25.8592, -9.10117, -23.6632, 0.52", "26.3003, -9.19594, -24.208, 0.52", "26.9149, -9.34424, -24.8212, 0.52", "27.2513, -9.4451, -25.0564, 0.52", "27.3082, -9.46658, -25.0922, 0.52", "28.2017, -9.8648, -25.5879, 0.22", "28.5996, -10.0533, -25.7794, 0.37", "29.1387, -10.32, -26.0253, 0.81", "29.6874, -10.5922, -26.2602, 1.18", "30.4741, -10.9704, -26.5962, 1.62", "31.4208, -11.391, -26.9701, 2.43", "32.5525, -11.845, -27.4227, 2.73", "33.2397, -12.1033, -27.7015, 2.43", "33.5657, -12.2194, -27.8279, 2.43", "33.9967, -12.3685, -27.9923, 2.06", "35.0019, -12.7011, -28.363, 1.03", "35.9299, -13.0009, -28.7159, 0.37", "35.9982, -13.0233, -28.7451, 0.37", "36.6175, -13.231, -29.0179, 0.37", "37.4027, -13.5209, -29.3766, 0.66", "37.933, -13.7353, -29.6169, 0.96", "38.611, -14.0319, -29.9617, 0.66", "39.6478, -14.4926, -30.524, 0.59", "40.3278, -14.7964, -30.923, 0.52", "40.97, -15.0828, -31.3803, 0.29", "41.5016, -15.3171, -31.819, 0.15", "42.675, -15.8369, -32.8461, 1.84", "43.3675, -16.132, -33.4635, 2.36", "43.4248, -16.155, -33.5143, 2.36", "44.4314, -16.4992, -34.4476, 2.06", "45.3229, -16.7523, -35.2942, 0.29", "46.0327, -16.9192, -35.9751, 0.29", "46.4071, -17.0043, -36.3034, 0.29", "46.4492, -17.0138, -36.3426, 0.29", "47.2222, -17.1824, -37.0823, 1.33", "48.1362, -17.3904, -37.9415, 2.36", "49.0452, -17.6285, -38.7812, 2.5", "50.3267, -18.0419, -39.9348, 0.15", "51.8741, -18.6184, -41.2308, 0.15", "52.8619, -19.0489, -41.9818, 1.11", "54.0158, -19.6255, -42.7839, 2.58", "55.0953, -20.2214, -43.445, 2.14", "56.5095, -21.0676, -44.189, 0.22", "57.3257, -21.5929, -44.5404, 0.22", "58.2496, -22.1935, -44.9169, 0.22", "59.0573, -22.691, -45.3467, 0.81", "59.6782, -23.0374, -45.721, 1.62", "60.0982, -23.2477, -45.9965, 1.99", "61.0189, -23.6676, -46.6261, 0.52", "63.4696, -24.7803, -48.316, 0.22", "65.2316, -25.5617, -49.516, 1.11", "66.1509, -25.9736, -50.1574, 2.06", "66.756, -26.2471, -50.5974, 1.33", "68.5944, -27.1029, -51.9906, 0.15", "69.4272, -27.5102, -52.6205, 0.15", "69.5467, -27.5772, -52.7028, 0.15", "70.8843, -28.395, -53.626, 0.96", "70.9366, -28.4299, -53.6716, 0.96", "71.7165, -28.9712, -54.4515, 2.28", "72.1519, -29.2899, -54.9205, 2.28", "72.7353, -29.7081, -55.5569, 1.55", "72.7708, -29.733, -55.5951, 1.55", "74.8008, -31.1287, -57.675, 0.15", "75.5788, -31.6393, -58.5507, 1.03", "75.8221, -31.7899, -58.8346, 0.59", "76.7929, -32.3466, -60.0225, 0.15", "77.3714, -32.6634, -60.7398, 1.11", "77.6585, -32.8139, -61.1117, 1.18", "79.6155, -33.7925, -63.6921, 0.15", "79.913, -33.9447, -64.0802, 0.15", "80.4213, -34.2036, -64.8152, 0.52", "80.7009, -34.3547, -65.2315, 0.88", "81.6602, -34.9166, -66.6743, 0.15", "82.3326, -35.3116, -67.6819, 1.92", "82.5831, -35.4536, -68.0487, 1.92", "85.0265, -36.8367, -71.6371, 0.15", "85.5579, -37.1404, -72.4045, 0.44", "86.736, -37.8076, -74.0849, 1.62", "87.7937, -38.408, -75.5385, 1.92", "89.0704, -39.1168, -77.2051, 0.22", "89.3917, -39.2911, -77.5894, 0.22", "90.0832, -39.6632, -78.3064, 1.18", "90.1781, -39.7136, -78.4043, 1.18", "90.5568, -39.9183, -78.7761, 1.18", "92.5409, -41.0263, -80.5723, 0.15", "93.7623, -41.7102, -81.6174, 1.62", "95.1401, -42.4572, -82.7876, 2.5", "96.4273, -43.1362, -83.8349, 0.22", "96.6525, -43.2534, -84.0209, 0.22", "97.7757, -43.8249, -84.937, 0.22", "97.8114, -43.8428, -84.9659, 0.22", "98.922, -44.3688, -85.9428, 0.88", "99.5077, -44.6288, -86.4798, 1.92", "102.176, -45.7233, -89.0722, 0.15", "103.075, -46.0775, -89.9914, 1.62", "103.676, -46.3067, -90.6509, 1.62", "105.929, -47.3258, -93.6036, 0.15", "106.229, -47.4885, -94.0533, 1.33", "107.334, -48.1908, -95.8678, 0.15", "107.357, -48.2085, -95.9076, 0.15", "108.184, -48.909, -97.3044, 2.14", "111.229, -51.6341, -102.29, 0.15", "111.858, -52.233, -103.282, 1.99", "112.317, -52.6725, -103.983, 2.8", "115.893, -56.1028, -109.157, 0.15", "116.557, -56.7198, -110.052, 0.96", "117.7, -57.729, -111.474, 0.15", "118.125, -58.0591, -111.926, 1.11", "118.9, -58.6238, -112.895, 0.22", "119.099, -58.767, -113.171, 0.52", "119.143, -58.7996, -113.239, 0.52", "120.477, -59.8335, -115.365, 0.15", "121.143, -60.3731, -116.437, 2.36", "123.883, -62.6208, -120.987, 0.15", "124.428, -63.077, -121.906, 2.28", "125.163, -63.6971, -123.146, 0.44", "125.407, -63.9038, -123.546, 0.44", "125.442, -63.9333, -123.597, 0.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999946150783,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "2.29954, 4.19162, -2.63688, 2.43", "2.21087, 4.19418, -2.6463, 2.43", "0.9046, 4.27036, -2.74674, 2.28", "-0.12739, 4.35989, -2.8523, 1.4", "-0.7729, 4.42265, -2.92008, 1.25", "-1.48871, 4.49465, -2.99135, 1.18", "-1.95704, 4.54424, -3.032, 1.03", "-2.61913, 4.62299, -3.08105, 1.33", "-3.44285, 4.70073, -3.19298, 1.4", "-4.14714, 4.70609, -3.31254, 1.4", "-4.65446, 4.65698, -3.44112, 1.4", "-5.40427, 4.52404, -3.68214, 1.4", "-5.63938, 4.47156, -3.77395, 1.4", "-6.99815, 4.13046, -4.401, 1.69", "-7.99041, 3.88853, -4.92388, 0.66", "-8.57227, 3.75886, -5.2738, 1.03", "-9.4454, 3.58589, -5.83845, 1.47", "-10.3671, 3.42698, -6.52272, 2.21", "-11.6166, 3.24629, -7.52478, 2.14", "-12.5311, 3.12123, -8.35043, 1.92", "-13.2787, 3.01217, -9.09924, 1.55", "-13.6907, 2.93771, -9.54017, 1.33", "-15.1077, 2.61266, -11.1662, 0.88", "-15.6845, 2.45462, -11.8493, 0.88", "-16.8225, 2.0835, -13.1891, 0.37", "-17.2566, 1.91392, -13.6628, 0.88", "-18.1234, 1.54058, -14.5147, 1.11", "-18.1686, 1.51996, -14.5515, 1.11", "-18.7301, 1.26037, -14.874, 1.4", "-19.502, 0.911351, -15.1917, 1.62", "-20.1348, 0.667169, -15.3162, 1.62", "-20.6548, 0.49051, -15.4066, 1.4", "-21.3203, 0.296697, -15.5197, 0.74", "-21.3872, 0.278453, -15.535, 0.74", "-21.9092, 0.147844, -15.6794, 0.52", "-23.3692, -0.161304, -16.3614, 0.37", "-24.2432, -0.339633, -16.8716, 1.03", "-25.0897, -0.512257, -17.4174, 1.69", "-25.9766, -0.682217, -18.0234, 2.65", "-26.7979, -0.835517, -18.6079, 3.17", "-29.2462, -1.29038, -20.4335, 0.66", "-30.5683, -1.55332, -21.4765, 0.37", "-30.6166, -1.56267, -21.5146, 0.37", "-31.1639, -1.64993, -21.9423, 0.22", "-31.2128, -1.65555, -21.9805, 0.22", "-31.7293, -1.70387, -22.3816, 0.22", "-31.7742, -1.70777, -22.4104, 0.22", "-32.8344, -1.76698, -23.3055, 1.03", "-33.3988, -1.80288, -23.8071, 2.14", "-34.1483, -1.84669, -24.5366, 3.32", "-34.1858, -1.84819, -24.5747, 3.32", "-34.8261, -1.86573, -25.2213, 2.43", "-37.7325, -1.92379, -28.1074, 0.29", "-37.9768, -1.92726, -28.3431, 0.74", "-39.53, -1.92511, -29.9239, 0.22", "-40.5721, -1.90108, -30.9372, 1.11", "-41.2781, -1.8767, -31.5989, 2.28", "-42.5862, -1.81656, -32.7511, 2.36", "-42.9539, -1.79968, -33.0338, 1.77", "-45.1051, -1.66171, -34.5254, 0.15", "-46.611, -1.53663, -35.4984, 0.15", "-47.8107, -1.41738, -36.2378, 1.84", "-48.5397, -1.33528, -36.6754, 2.8", "-49.0196, -1.27679, -36.9527, 2.5", "-52.1029, -0.867484, -38.7358, 0.22", "-53.4463, -0.672315, -39.4922, 1.47", "-54.124, -0.56301, -39.9026, 1.25", "-55.549, -0.320994, -40.7494, 0.15", "-56.5579, -0.153489, -41.3497, 1.25", "-57.2747, -0.0635963, -41.7713, 1.99", "-58.2538, -0.00847077, -42.3254, 1.99", "-60.5599, 0.0194235, -43.5554, 0.15", "-61.1205, 0.00322146, -43.9164, 1.25", "-61.4215, -0.0152869, -44.1411, 1.25", "-63.6903, -0.209387, -45.9531, 0.07", "-64.5727, -0.288649, -46.8058, 1.69", "-64.9367, -0.321429, -47.197, 1.69", "-67.6631, -0.533321, -50.4065, 0.15", "-68.8089, -0.571436, -51.7087, 1.62", "-69.2379, -0.568952, -52.199, 2.28", "-72.6194, -0.42219, -56.0286, 0.22", "-73.1149, -0.390151, -56.5784, 0.15", "-75.2925, -0.234245, -58.8432, 3.39", "-78.4695, 0.0206303, -61.8615, 0.22", "-80.2889, 0.14908, -63.5085, 0.15", "-81.3496, 0.214404, -64.4263, 1.92", "-81.3917, 0.216472, -64.4592, 1.92", "-82.5969, 0.26156, -65.4073, 0.15", "-84.0392, 0.290896, -66.5194, 1.77", "-86.6436, 0.269723, -68.6063, 0.15", "-86.9065, 0.263459, -68.8061, 1.25", "-88.9459, 0.207784, -70.3475, 0.22", "-89.3819, 0.196871, -70.6755, 0.88", "-90.9099, 0.158314, -71.8254, 0.15", "-93.0727, 0.125593, -73.3499, 2.58", "-96.4621, 0.12944, -75.6614, 0.22", "-96.9056, 0.131572, -75.9544, 1.62", "-96.9515, 0.131601, -75.982, 1.62", "-97.7336, 0.129069, -76.4166, 1.62", "-100.161, 0.144841, -77.7135, 0.15", "-100.659, 0.157518, -77.9827, 1.18", "-101.152, 0.176362, -78.2335, 1.47", "-104.533, 0.321622, -79.9967, 0.15", "-104.997, 0.338784, -80.2475, 1.62", "-106.964, 0.389516, -81.3323, 1.92", "-108.307, 0.396904, -82.0715, 0.15", "-111.073, 0.369757, -83.6878, 0.15", "-112.84, 0.330561, -84.9166, 1.99", "-114.715, 0.265234, -86.3933, 0.22", "-115.342, 0.231553, -86.9132, 1.33", "-117.199, 0.0908261, -88.5656, 0.15", "-119.144, -0.0877382, -90.4332, 2.43", "-122.346, -0.415087, -93.8188, 0.15", "-123.027, -0.49981, -94.503, 1.33", "-124.739, -0.73912, -96.1884, 0.07", "-126.078, -0.947237, -97.4965, 0.96", "-126.49, -1.0186, -97.8926, 1.77", "-126.938, -1.10848, -98.2798, 2.14", "-131.841, -2.25812, -102.044, 0.15", "-133.256, -2.62741, -103.118, 1.55", "-134.388, -2.95879, -103.975, 2.65", "-135.324, -3.25855, -104.646, 2.14", "-136.461, -3.64926, -105.46, 0.52", "-137.221, -3.93889, -105.991, 1.18", "-138.37, -4.46753, -106.745, 0.37", "-139.355, -4.94445, -107.304, 0.37", "-140.299, -5.425, -107.786, 0.37", "-140.97, -5.77562, -108.115, 1.03", "-141.028, -5.80486, -108.143, 1.03", "-141.389, -5.98602, -108.289, 1.03", "-141.936, -6.26028, -108.395, 0.59", "-141.99, -6.28815, -108.399, 0.59", "-142.162, -6.37731, -108.405, 0.15", "-143.097, -6.81858, -108.553, 0.15", "-143.153, -6.84275, -108.566, 0.15", "-144.074, -7.21882, -108.807, 2.06", "-145.014, -7.58851, -109.068, 2.87", "-145.804, -7.89008, -109.289, 1.69", "-147.876, -8.65396, -109.871, 0.22", "-148.593, -8.90655, -110.073, 1.55", "-148.65, -8.92441, -110.089, 1.55", "-150.609, -9.46199, -110.591, 0.15", "-150.979, -9.55072, -110.678, 0.66", "-151.354, -9.629, -110.745, 0.96", "-151.783, -9.71014, -110.783, 1.11", "-153.728, -10.0384, -110.948, 0.22", "-153.772, -10.044, -110.951, 0.52", "-154.296, -10.0724, -110.99, 0.15", "-155.286, -10.1094, -111.076, 0.15", "-155.38, -10.107, -111.112, 0.15", "-155.861, -10.081, -111.354, 0.74", "-156.757, -10.0105, -111.887, 0.29", "-157.808, -9.90512, -112.589, 2.06", "-158.24, -9.85365, -112.922, 1.55", "-161.719, -9.4377, -115.802, 0.22", "-162.558, -9.33982, -116.518, 0.66", "-162.779, -9.31464, -116.711, 0.66", "-164.001, -9.1796, -117.774, 0.15", "-165.664, -8.99836, -119.148, 1.99", "-169.178, -8.52669, -121.941, 0.15", "-169.947, -8.40838, -122.526, 0.96", "-170.529, -8.30012, -123.017, 1.92", "-170.996, -8.19651, -123.412, 1.4", "-171.431, -8.08484, -123.788, 1.03", "-174.167, -7.27493, -126.232, 0.15", "-175.564, -6.81369, -127.501, 1.55", "-176.921, -6.37059, -128.692, 1.69", "-179.212, -5.63522, -130.688, 0.15", "-180.547, -5.22695, -131.826, 1.92", "-180.588, -5.2158, -131.859, 1.92", "-181.433, -5.01601, -132.478, 1.92", "-182.684, -4.74164, -133.595, 0.15", "-183.392, -4.52716, -134.775, 0.96", "-183.643, -4.43191, -135.302, 0.96", "-184.395, -4.09732, -136.99, 0.15", "-184.746, -3.91855, -137.818, 1.69", "-186.797, -2.73229, -142.989, 1.62", "-190.703, -0.208966, -153.235, 0.15", "-190.949, -0.0361578, -153.892, 1.18", "-191.308, 0.242233, -154.866, 0.15", "-191.645, 0.534294, -155.782, 1.77", "-192.549, 1.37069, -158.088, 0.37", "-192.892, 1.70515, -158.771, 0.37", "-192.927, 1.73551, -158.813, 0.37", "-193.659, 2.26318, -159.666, 0.15", "-194.75, 2.91446, -160.844, 1.25", "-195.841, 3.44122, -161.879, 0.07", "-196.182, 3.57731, -162.167, 0.52", "-197.744, 4.12379, -163.459, 0.22", "-198.743, 4.44998, -164.221, 1.25", "-199.32, 4.6206, -164.621, 1.99", "-200.828, 5.06959, -165.554, 0.22", "-202.038, 5.46987, -166.246, 0.37", "-202.994, 5.83948, -166.752, 0.52", "-203.975, 6.30866, -167.189, 0.15", "-204.154, 6.40993, -167.256, 0.81", "-204.861, 6.8606, -167.475, 0.59", "-205.643, 7.40388, -167.596, 0.59", "-206.193, 7.80191, -167.611, 0.81", "-206.656, 8.10735, -167.61, 0.66", "-207.148, 8.38062, -167.63, 0.29", "-207.448, 8.51151, -167.655, 0.29", "-207.894, 8.61623, -167.722, 0.29", "-207.993, 8.62139, -167.743, 0.29", "-209.039, 8.52363, -167.983, 0.29", "-209.362, 8.46135, -168.057, 0.29", "-209.511, 8.42702, -168.087, 0.29", "-210.077, 8.31608, -168.2, 0.29", "-210.146, 8.30819, -168.212, 0.29", "-210.612, 8.2681, -168.269, 0.29", "-210.674, 8.26535, -168.272, 0.29", "-211.065, 8.2689, -168.294, 0.15", "-211.829, 8.33637, -168.348, 1.11", "-212.561, 8.48459, -168.415, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999946150783,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-2.41046, 7.06062, 12.4831, 3.76", "-2.41046, 7.06062, 12.4831, 3.76", "-2.894, 8.00804, 12.4831, 3.98" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999946150783
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "0.939533, -5.28938, 13.4231, 4.2", "0.94912, -5.36787, 13.4371, 4.2", "1.22843, -7.65453, 13.8457, 3.32", "1.50671, -9.93286, 14.2528, 3.46", "1.60316, -10.7224, 14.3938, 4.13" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999946150783
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.92046, -7.52188, -1.07688, 1.99", "-4.99924, -7.62482, -0.982712, 2.06", "-5.68038, -8.57116, -0.177028, 1.33", "-6.76628, -10.1708, 1.11785, 1.77", "-7.67084, -11.5961, 2.16101, 1.99", "-8.62352, -13.1405, 3.2038, 1.18", "-9.31524, -14.2781, 3.87978, 1.18", "-9.88359, -15.2324, 4.36616, 2.21", "-10.7717, -16.7787, 5.00783, 1.55", "-11.5565, -18.197, 5.44766, 1.4", "-12.3204, -19.6366, 5.74905, 1.47", "-13.0569, -21.0187, 5.88374, 1.33", "-13.5418, -21.897, 5.90109, 1.55", "-13.8493, -22.4295, 5.87184, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999946150783
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "10.1695, -1.71738, -1.01688, 1.62", "10.1695, -1.71738, -1.01688, 1.62", "12.7297, -1.31581, -1.14908, 1.18", "15.0936, -0.965357, -1.23722, 1.55", "18.1297, -0.54979, -1.33731, 1.69", "21.2093, -0.15757, -1.41312, 1.69", "23.5142, 0.116112, -1.45162, 1.69", "26.0257, 0.385666, -1.44461, 1.55", "28.9432, 0.664141, -1.38053, 1.62", "31.6593, 0.83279, -1.27307, 1.77", "34.6791, 0.907454, -1.08018, 1.69", "37.1724, 0.846757, -0.896701, 1.25", "38.9665, 0.717568, -0.751232, 0.66", "40.3768, 0.542419, -0.658341, 0.44", "42.7339, 0.126225, -0.584511, 0.81", "43.0822, 0.0402627, -0.589086, 1.25", "45.0071, -0.561042, -0.792421, 2.14", "46.4655, -1.08335, -1.11147, 1.69", "48.447, -1.84089, -1.76566, 0.74", "49.5778, -2.31391, -2.20103, 0.44", "50.7337, -2.81435, -2.68686, 0.74", "52.3228, -3.51111, -3.37687, 1.18", "54.1206, -4.2826, -4.16979, 1.55", "55.6522, -4.89717, -4.79524, 0.81", "57.1539, -5.46614, -5.3023, 0.44", "58.1262, -5.81084, -5.54146, 0.44", "58.2497, -5.85146, -5.55982, 0.44", "59.3047, -6.19218, -5.58486, 0.44", "59.7873, -6.34313, -5.55069, 0.44", "59.9121, -6.38461, -5.53595, 0.44", "61.4879, -6.92631, -5.53722, 0.44", "63.5737, -7.76105, -5.68202, 2.28", "63.9248, -7.92483, -5.72569, 2.28", "64.4025, -8.17657, -5.80782, 2.5", "65.8766, -8.98433, -6.09455, 1.55", "67.8832, -10.1019, -6.52913, 0.66", "69.1556, -10.8098, -6.82609, 0.29", "70.2886, -11.4375, -7.00079, 0.29", "70.4806, -11.5452, -7.02183, 0.29", "72.4705, -12.6852, -7.17013, 2.21", "73.1746, -13.0995, -7.19486, 2.36", "75.353, -14.3828, -7.20569, 0.96", "77.3102, -15.4754, -7.32557, 0.29", "78.4454, -16.0844, -7.43548, 0.29", "79.512, -16.6483, -7.62252, 0.52", "79.6142, -16.7028, -7.65137, 0.52", "80.9987, -17.3775, -8.29411, 0.81", "82.6879, -18.1492, -9.35052, 1.92", "82.7652, -18.1826, -9.40722, 1.92", "84.6091, -18.9331, -10.8135, 2.21", "86.0243, -19.4902, -11.8925, 0.96", "88.7797, -20.5606, -14.0736, 0.44", "88.8546, -20.5868, -14.1373, 0.44", "89.555, -20.8075, -14.7684, 0.66", "90.7178, -21.1375, -15.8159, 0.96", "92.0163, -21.4708, -16.9838, 2.06", "93.7205, -21.8545, -18.491, 1.18", "96.3808, -22.417, -20.8034, 0.29", "97.6348, -22.6457, -21.9687, 1.55", "99.2889, -22.9144, -23.5855, 0.52", "99.7247, -22.9827, -24.0229, 0.52", "101.905, -23.3257, -26.2832, 3.17", "103.231, -23.5403, -27.6621, 2.58", "107.119, -24.1578, -31.9204, 0.44", "108.433, -24.3661, -33.4345, 0.44", "109.167, -24.4843, -34.3257, 1.11", "110.75, -24.7445, -36.2588, 1.4", "110.827, -24.759, -36.3503, 1.4", "113.134, -25.2325, -38.9475, 0.29", "114.386, -25.48, -40.3362, 0.29", "114.534, -25.5093, -40.495, 0.29", "115.813, -25.741, -41.8541, 1.84", "116.681, -25.8942, -42.7505, 2.06", "116.833, -25.9237, -42.9033, 2.06", "120.351, -26.7342, -46.0085, 0.29", "121.895, -27.1432, -47.1154, 0.29", "124.009, -28.1832, -46.912, 1.84", "124.081, -28.2329, -46.8569, 1.84", "124.763, -28.7717, -46.2347, 1.84", "130.822, -34.1997, -40.7864, 0.29", "131.411, -34.8076, -40.2149, 0.44", "132.372, -35.8974, -39.3167, 0.88", "133.049, -36.6851, -38.9024, 0.59", "134.256, -38.0104, -39.3486, 0.44", "135.874, -39.7237, -40.9717, 0.52", "136.524, -40.3722, -41.7743, 0.88", "136.651, -40.5004, -41.9281, 0.88", "137.826, -41.5903, -43.2065, 1.18", "138.712, -42.2916, -44.0278, 0.59", "139.034, -42.4987, -44.2751, 0.59", "139.992, -42.965, -44.8468, 0.59", "140.099, -43.0106, -44.9078, 0.59", "141.315, -43.4895, -45.5466, 0.96", "141.48, -43.5337, -45.5991, 4.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999946150783,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-6.97132, 4.70235, -1.23489, 0.997912", "-19.0858, 13.5477, -1.23489, 0.997912", "-31.2003, 22.393, -1.23489, 0.997912" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "6.24694, 15.8457, -15.1098, 2.43", "4.14617, 16.7561, -15.7458, 2.43", "2.92914, 17.213, -16.0963, 1.18", "2.27893, 17.4296, -16.2642, 1.03", "1.07088, 17.8036, -16.5386, 1.62", "0.0121416, 18.1264, -16.7728, 1.62", "-1.28564, 18.5348, -17.0835, 1.84", "-1.28564, 18.5348, -17.0835, 2.28", "-2.54462, 18.9403, -17.4298, 2.28", "-3.82213, 19.4419, -17.8904, 1.84", "-5.1833, 20.0946, -18.4783, 1.62", "-6.42505, 20.7938, -19.0755, 1.4", "-7.15734, 21.2518, -19.4404, 1.84", "-8.46156, 22.1173, -20.077, 1.84", "-9.71797, 23.0227, -20.6774, 1.84", "-10.7865, 23.8356, -21.1624, 1.77", "-11.7944, 24.6293, -21.5848, 1.11", "-12.4503, 25.1524, -21.8366, 1.33", "-13.5466, 26.0246, -22.2382, 1.47", "-14.7865, 27.0235, -22.6524, 1.18", "-15.5016, 27.615, -22.8915, 1.47", "-16.3213, 28.316, -23.1902, 1.99", "-17.1079, 29.0172, -23.5198, 2.06", "-17.7892, 29.6592, -23.84, 2.21", "-18.5672, 30.4401, -24.2376, 2.21", "-19.2902, 31.2095, -24.6287, 2.14", "-19.8321, 31.8155, -24.933, 1.62", "-20.4401, 32.5079, -25.2711, 1.25", "-20.9509, 33.0738, -25.5896, 0.88", "-21.2589, 33.3847, -25.8059, 0.81", "-21.8074, 33.868, -26.239, 0.88", "-22.31, 34.2489, -26.6926, 0.88", "-22.7484, 34.5621, -27.1267, 0.88", "-23.5811, 35.1246, -27.9711, 0.88", "-24.0762, 35.4586, -28.485, 0.88", "-24.3094, 35.6182, -28.7278, 0.88", "-24.7521, 35.9688, -29.1728, 0.59", "-25.1887, 36.3852, -29.5734, 0.59", "-25.4659, 36.7118, -29.769, 0.81", "-25.8646, 37.239, -29.9161, 0.81", "-25.906, 37.294, -29.9265, 0.81", "-26.507, 38.0394, -30.0218, 1.77", "-26.9361, 38.524, -30.0801, 2.65", "-27.6012, 39.2123, -30.1541, 3.68", "-28.0979, 39.7105, -30.1939, 3.68", "-28.652, 40.251, -30.2533, 3.68", "-29.2449, 40.8122, -30.3171, 3.39", "-29.8896, 41.3937, -30.3833, 3.09", "-30.5751, 41.9947, -30.4587, 1.99", "-31.0965, 42.4454, -30.5274, 1.33", "-31.5639, 42.8503, -30.5802, 0.88", "-32.9317, 44.0584, -30.6795, 0.59", "-33.3678, 44.448, -30.7065, 0.59", "-33.8125, 44.8602, -30.7199, 0.59", "-34.1782, 45.2153, -30.7391, 0.81", "-34.2199, 45.2601, -30.7402, 0.81", "-34.6784, 45.8066, -30.7257, 0.81", "-34.713, 45.8572, -30.7255, 0.81", "-35.0665, 46.4005, -30.7103, 0.81", "-35.1612, 46.5361, -30.7225, 0.81", "-35.5412, 47.0111, -30.8611, 0.81", "-35.5944, 47.0742, -30.8869, 0.81", "-36.1459, 47.6945, -31.2572, 0.37", "-36.5662, 48.1527, -31.5468, 1.62", "-37.5272, 49.1693, -32.2156, 2.06", "-38.5258, 50.2239, -32.8846, 2.73", "-38.9286, 50.6486, -33.141, 2.73", "-40.0105, 51.7971, -33.7708, 2.06", "-40.6464, 52.4718, -34.121, 1.33", "-40.9449, 52.7977, -34.2648, 1.33", "-41.9486, 53.9333, -34.6181, 0.66", "-42.4162, 54.4846, -34.734, 1.03", "-42.9409, 55.1146, -34.8425, 1.18", "-43.6985, 56.0476, -34.9584, 0.88", "-44.148, 56.6095, -35.0464, 0.88", "-44.5172, 57.0689, -35.1224, 0.74", "-44.9026, 57.5416, -35.1977, 0.74", "-45.4699, 58.2487, -35.3246, 0.52", "-45.8865, 58.7705, -35.4371, 0.74", "-46.1666, 59.1116, -35.5321, 0.74", "-46.5359, 59.5317, -35.6893, 0.74", "-46.9459, 59.9789, -35.8876, 1.25", "-47.4281, 60.4964, -36.1271, 2.06", "-48.0646, 61.1596, -36.5919, 2.58", "-48.6786, 61.7913, -37.1064, 3.02", "-49.2931, 62.4155, -37.6329, 3.17", "-49.3358, 62.4584, -37.669, 3.17", "-49.859, 62.9819, -38.146, 2.58", "-51.6399, 64.7832, -39.8199, 0.29", "-52.2537, 65.4192, -40.4175, 0.29", "-52.7652, 65.9732, -40.9275, 0.29", "-53.0368, 66.286, -41.2186, 0.88", "-53.9092, 67.3236, -42.1435, 1.18", "-54.3363, 67.855, -42.6109, 1.18", "-54.3677, 67.8972, -42.6439, 1.18", "-54.7629, 68.4577, -43.1129, 1.18", "-55.2707, 69.2103, -43.7257, 0.74", "-55.5753, 69.6733, -44.0643, 0.81", "-56.206, 70.6443, -44.6898, 1.55", "-56.7515, 71.4833, -45.2006, 2.14", "-57.0997, 72.0195, -45.4965, 2.43", "-57.4483, 72.554, -45.7574, 2.43", "-57.7983, 73.0987, -45.9662, 1.47", "-58.4802, 74.2035, -46.2914, 0.59", "-58.8498, 74.8104, -46.4239, 0.59", "-59.2092, 75.4017, -46.5424, 0.59", "-59.3873, 75.6961, -46.6117, 0.74", "-59.8347, 76.4733, -46.7938, 0.74", "-60.1982, 77.1334, -46.9312, 0.52", "-60.7514, 78.1754, -47.1686, 0.22", "-61.0396, 78.7339, -47.3318, 0.74", "-61.511, 79.6754, -47.6261, 2.14", "-62.0245, 80.693, -47.94, 2.95", "-62.4335, 81.4967, -48.193, 2.8", "-63.2244, 83.0213, -48.6538, 1.18", "-63.6573, 83.8411, -48.9057, 0.59", "-64.3073, 85.0741, -49.2985, 0.44", "-64.8119, 86.0228, -49.5946, 0.44", "-65.2704, 86.8788, -49.86, 0.96", "-65.5634, 87.4339, -50.0183, 1.69", "-66.0479, 88.3877, -50.2278, 2.06", "-66.2869, 88.8866, -50.3209, 2.06", "-66.5684, 89.5467, -50.4392, 1.55", "-66.8383, 90.2794, -50.5489, 0.66", "-66.8763, 90.3931, -50.5596, 0.66", "-67.2089, 91.4553, -50.623, 0.44", "-67.5253, 92.4713, -50.6163, 0.59", "-67.7059, 93.0149, -50.6606, 0.59", "-67.7253, 93.0718, -50.669, 0.59", "-67.8817, 93.5239, -50.7686, 0.59", "-67.9041, 93.5868, -50.7856, 0.59", "-68.4757, 95.125, -51.2646, 0.29", "-69.0011, 96.4556, -51.6617, 0.96", "-69.2156, 96.9632, -51.7952, 1.99", "-69.6106, 97.8761, -52.0096, 2.58", "-69.9905, 98.6951, -52.164, 2.58", "-70.4898, 99.6496, -52.2824, 1.4", "-70.9788, 100.446, -52.3124, 0.22", "-71.469, 101.154, -52.2649, 0.22", "-71.5126, 101.211, -52.261, 0.22", "-72.4395, 102.315, -52.1699, 0.22", "-73.2574, 103.233, -52.1536, 0.15", "-73.9684, 103.999, -52.19, 1.84", "-74.4318, 104.491, -52.2425, 2.21", "-75.152, 105.25, -52.336, 2.06", "-75.715, 105.849, -52.4147, 1.69", "-76.5648, 106.759, -52.5775, 0.22", "-77.6816, 108.001, -52.8311, 0.15", "-78.2956, 108.707, -53.0204, 0.15", "-78.4727, 108.914, -53.0946, 0.59", "-78.7786, 109.279, -53.2387, 0.66", "-79.4133, 110.05, -53.5761, 1.11", "-79.7687, 110.484, -53.7902, 2.28", "-80.5102, 111.414, -54.254, 1.92", "-82.1056, 113.438, -55.265, 0.15", "-82.5061, 113.95, -55.5133, 0.15", "-82.7187, 114.23, -55.6454, 0.74", "-83.3282, 115.091, -55.998, 1.77", "-83.9799, 116.061, -56.3518, 2.58", "-84.53, 116.942, -56.6123, 2.06", "-84.8292, 117.478, -56.7528, 1.84", "-86.1755, 120.031, -57.4022, 0.22", "-86.7349, 121.246, -57.7605, 0.22", "-86.9316, 121.739, -57.9291, 1.33", "-87.1571, 122.365, -58.1665, 1.55", "-87.3226, 122.859, -58.3467, 1.55", "-87.4116, 123.153, -58.4568, 1.55", "-88.1712, 126.276, -59.715, 0.22", "-88.4149, 127.308, -60.2018, 1.99", "-88.704, 128.552, -60.8433, 3.24" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "6.24694, 15.8457, -15.1098, 1.03", "8.32818, 17.2048, -14.2265, 1.03", "9.00205, 17.7185, -13.9271, 0.88", "9.69559, 18.2942, -13.6367, 0.96", "10.5206, 19.0305, -13.3423, 0.88", "11.0209, 19.4853, -13.1528, 1.03", "11.8169, 20.2143, -12.8577, 1.18", "12.6475, 21.0778, -12.564, 1.47", "13.4726, 21.9087, -12.2758, 1.62", "14.2494, 22.6855, -12.0203, 1.03", "15.4428, 23.8321, -11.6535, 1.33", "16.2414, 24.5523, -11.4105, 1.62", "16.2816, 24.5859, -11.3976, 1.62", "17.8854, 25.8659, -10.8916, 3.09" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-2.894, 8.00804, 12.4831, 2.06", "-4.11412, 8.63022, 13.0941, 2.06", "-5.77583, 9.47759, 13.9262, 2.06", "-6.6992, 9.94844, 14.3885, 2.14", "-7.47738, 10.3453, 14.7782, 2.14", "-9.10465, 11.1751, 15.593, 2.14" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-2.894, 8.00804, 12.4831, 1.62", "-2.12441, 9.68376, 12.3975, 1.62", "-1.84466, 10.3064, 12.3432, 1.25", "-1.7346, 10.5503, 12.3217, 1.25", "-1.49103, 11.0892, 12.2752, 1.11", "-1.19894, 11.7267, 12.1963, 1.11", "-0.926728, 12.3114, 12.1113, 1.11", "-0.684446, 12.8283, 12.0052, 1.11", "-0.437446, 13.3044, 11.9023, 1.11", "-0.263658, 13.5944, 11.8348, 1.11", "0.100518, 14.0663, 11.731, 1.11", "0.380068, 14.3458, 11.6722, 1.11", "0.537381, 14.464, 11.6355, 1.11", "1.06742, 14.7768, 11.4792, 1.11", "1.66116, 15.0697, 11.2929, 1.47", "2.79475, 15.538, 10.9534, 1.47", "3.83102, 15.9158, 10.6909, 1.47", "5.48656, 16.4686, 10.2984, 1.33", "6.64464, 16.8256, 10.0521, 1.11", "7.44422, 17.0391, 9.94301, 0.81", "8.49039, 17.304, 9.88117, 0.74", "9.5967, 17.585, 9.9244, 1.03", "10.3238, 17.7898, 10.0343, 1.4", "11.4253, 18.1511, 10.3249, 1.84", "12.9402, 18.7231, 10.8221, 2.21", "13.9109, 19.1359, 11.1667, 1.92", "14.4961, 19.4167, 11.386, 1.62", "15.0634, 19.7068, 11.585, 1.47", "15.4768, 19.9294, 11.7196, 1.33", "15.9343, 20.1938, 11.8334, 1.03", "16.2771, 20.3899, 11.8519, 0.88", "16.7549, 20.6333, 11.828, 0.88", "17.2632, 20.8594, 11.7444, 0.66", "17.7638, 21.0596, 11.6199, 0.59", "18.2591, 21.2404, 11.4834, 0.88", "19.1405, 21.5158, 11.2412, 1.18", "20.0712, 21.77, 11.0055, 1.69", "21.005, 22.0043, 10.8166, 1.18", "21.7019, 22.1734, 10.7294, 0.81", "22.5394, 22.3747, 10.6767, 0.81", "23.5467, 22.6187, 10.6794, 0.81", "24.2858, 22.8173, 10.7476, 1.11", "25.0734, 23.0595, 10.8918, 1.55", "25.9044, 23.3667, 11.1031, 2.06", "26.3606, 23.5681, 11.2422, 2.06", "26.7706, 23.7827, 11.3706, 2.06", "27.4451, 24.1984, 11.5805, 1.47", "28.1136, 24.6501, 11.7803, 1.03", "28.4624, 24.9, 11.874, 0.88", "28.9638, 25.2814, 12.0411, 0.81", "29.5131, 25.7201, 12.246, 1.25", "29.9856, 26.1166, 12.4546, 0.81", "30.6766, 26.7362, 12.7823, 0.81", "30.9922, 27.0376, 12.9304, 0.74", "31.6806, 27.7203, 13.2713, 0.74", "32.3906, 28.4333, 13.6161, 1.47", "33.2406, 29.278, 14.0193, 1.77", "34.1779, 30.1578, 14.4288, 1.62", "34.6776, 30.5897, 14.6342, 0.88", "35.3068, 31.0768, 14.8688, 0.52", "35.7377, 31.3561, 15.0014, 0.52", "36.142, 31.5626, 15.1134, 0.52", "36.5731, 31.7441, 15.2127, 0.52", "37.5263, 32.0926, 15.3946, 0.81", "38.231, 32.353, 15.4898, 1.62", "39.3831, 32.8263, 15.5894, 2.36", "40.2683, 33.228, 15.6444, 2.36", "40.6179, 33.4005, 15.6503, 2.36", "41.2915, 33.7561, 15.648, 2.28", "42.3191, 34.334, 15.613, 1.99", "43.3531, 34.9628, 15.61, 1.99", "44.0262, 35.4072, 15.6278, 1.69", "44.8533, 35.9837, 15.6951, 1.18", "45.4566, 36.4243, 15.7769, 0.59", "45.9683, 36.8392, 15.8837, 0.59", "46.5283, 37.3489, 16.0256, 0.81", "46.8482, 37.6766, 16.1093, 1.03", "47.1219, 38.0013, 16.2095, 1.03", "47.437, 38.4295, 16.3509, 1.03", "47.8882, 39.1047, 16.5317, 1.03", "48.1471, 39.5284, 16.6305, 0.74", "48.4657, 40.0993, 16.7171, 0.74", "49.0217, 41.2272, 16.8333, 0.66", "49.2416, 41.7208, 16.8611, 0.29", "49.4806, 42.3139, 16.8578, 0.66", "49.6779, 42.738, 16.8162, 1.18", "50.0029, 43.34, 16.7257, 1.62", "50.3117, 43.8359, 16.6322, 1.11", "50.5316, 44.1333, 16.5872, 0.88", "50.914, 44.6095, 16.5566, 0.74", "52.3281, 46.2346, 16.5868, 0.44", "52.8669, 46.814, 16.6079, 1.11", "53.5043, 47.4421, 16.646, 1.84", "54.428, 48.3107, 16.7187, 2.21", "54.8294, 48.6614, 16.7539, 2.36", "55.3892, 49.1212, 16.8136, 1.77", "56.0085, 49.6205, 16.8821, 1.11", "56.9892, 50.414, 16.9224, 0.44", "57.4581, 50.8115, 16.9018, 0.44", "57.9827, 51.3187, 16.8164, 0.44", "58.0855, 51.4298, 16.7933, 0.44", "58.2185, 51.6165, 16.7516, 0.44", "58.5015, 52.2145, 16.6279, 0.81", "58.641, 52.7775, 16.4938, 1.25", "58.7233, 53.2277, 16.3837, 1.11", "58.8157, 53.8071, 16.2644, 0.96", "58.8536, 53.9945, 16.2296, 0.88", "59.0226, 54.6105, 16.1325, 0.52", "59.246, 55.2043, 16.0643, 0.52", "59.4607, 55.6613, 16.0315, 0.52", "59.7096, 56.1143, 16.0186, 0.96", "59.9157, 56.4626, 16.0029, 0.96", "60.2259, 56.9491, 15.9615, 0.66", "60.5589, 57.4355, 15.8808, 0.66", "61.1141, 58.2809, 15.6501, 1.33", "61.3447, 58.609, 15.5395, 1.92", "61.8769, 59.3687, 15.2625, 2.14", "62.1043, 59.693, 15.1395, 2.14", "62.5956, 60.3993, 14.8628, 1.99", "63.6818, 61.9519, 14.2482, 0.15", "64.2109, 62.6993, 13.9691, 0.22", "64.4394, 63.0184, 13.8718, 0.22", "64.6575, 63.3285, 13.7979, 0.59", "64.8046, 63.5478, 13.7496, 0.59", "65.0173, 63.8935, 13.6575, 0.59", "65.7435, 65.2213, 13.2248, 0.15", "66.106, 65.9336, 12.962, 1.33", "66.4221, 66.5521, 12.7097, 2.21", "66.7962, 67.3093, 12.386, 2.65", "67.903, 69.5655, 11.3334, 0.44", "68.1764, 70.1537, 11.0239, 0.44", "68.2403, 70.3043, 10.9404, 0.15", "68.2646, 70.3633, 10.908, 0.15", "68.4286, 70.7449, 10.6979, 0.15", "68.9741, 71.9583, 10.0633, 2.21", "69.4423, 72.9176, 9.59986, 2.21", "70.3966, 74.716, 8.78438, 0.29", "70.9856, 75.7676, 8.32528, 2.21", "71.4739, 76.5446, 8.00778, 1.77", "72.2705, 77.6964, 7.57202, 0.37", "72.6648, 78.2471, 7.40453, 0.37", "73.0652, 78.7921, 7.26149, 0.88", "73.4802, 79.346, 7.13321, 1.4", "74.5138, 80.77, 6.86472, 0.29", "74.5633, 80.8439, 6.85234, 0.29", "75.2748, 81.9849, 6.66045, 0.29", "75.8515, 82.9626, 6.50014, 1.99", "76.3011, 83.7657, 6.37722, 2.5", "76.487, 84.1104, 6.32799, 2.5", "77.6125, 86.1275, 6.04388, 0.15", "77.8841, 86.5798, 5.96634, 0.96", "78.1786, 87.0356, 5.87829, 1.11", "78.4807, 87.4956, 5.77507, 1.11", "79.3824, 88.8497, 5.37959, 0.22", "80.5965, 90.6411, 4.78457, 0.22", "81.3073, 91.6723, 4.42036, 2.28", "81.3364, 91.7148, 4.40473, 2.28", "82.1053, 92.8536, 3.97803, 2.73", "82.9751, 94.1327, 3.49595, 0.15", "83.4752, 94.8835, 3.22271, 0.22", "83.8725, 95.5087, 3.01365, 0.22", "84.2572, 96.1242, 2.84917, 1.03", "84.5482, 96.6031, 2.73993, 1.77", "84.7921, 97.0238, 2.66226, 1.62", "85.0826, 97.5488, 2.57466, 1.4", "85.7199, 98.7528, 2.3049, 0.15", "86.0136, 99.3189, 2.15434, 0.15", "86.1341, 99.5579, 2.09122, 0.81", "86.4711, 100.193, 1.91044, 1.4", "86.6829, 100.588, 1.79312, 1.03", "87.9279, 102.869, 1.11954, 0.15", "88.3527, 103.641, 0.89113, 1.77", "88.7273, 104.312, 0.693166, 2.14", "89.8795, 106.352, 0.0581472, 0.29", "90.2834, 107.075, -0.163299, 0.29", "90.4926, 107.459, -0.279089, 0.88", "90.807, 108.06, -0.458275, 1.18", "91.0737, 108.616, -0.622919, 0.96", "91.4506, 109.443, -0.859659, 0.22", "91.9646, 110.67, -1.15922, 0.22", "92.3354, 111.548, -1.36351, 1.84", "92.6396, 112.29, -1.53114, 1.99", "92.8055, 112.715, -1.62028, 1.99", "93.4979, 114.576, -1.99509, 0.22", "93.8754, 115.687, -2.21651, 0.22", "93.8907, 115.737, -2.22806, 0.22", "94.0892, 116.491, -2.4145, 1.4", "94.2128, 117.069, -2.55786, 1.55", "94.2757, 117.505, -2.67414, 1.55", "94.3009, 119.153, -3.17216, 0.15", "94.2814, 119.406, -3.25115, 0.52", "94.2259, 119.737, -3.35915, 0.81", "94.1399, 120.056, -3.47018, 0.52", "94.0764, 120.225, -3.52753, 0.52", "93.8302, 120.668, -3.73857, 0.37", "93.4058, 121.286, -4.09417, 0.29", "92.816, 122.109, -4.62125, 0.29", "92.4226, 122.643, -4.99231, 1.69", "92.0906, 123.079, -5.30725, 1.47", "90.5352, 125.082, -6.8747, 0.15", "90.208, 125.492, -7.21274, 1.62", "89.8567, 125.923, -7.58827, 1.62", "89.7945, 125.998, -7.65496, 1.62", "89.3146, 126.575, -8.18087, 0.52", "88.9113, 127.112, -8.7153, 0.15", "88.5105, 127.733, -9.37475, 0.15", "88.4247, 127.879, -9.54493, 0.15", "88.147, 128.411, -10.1848, 1.55", "87.9045, 128.918, -10.8114, 1.55", "87.171, 130.59, -12.8563, 0.07", "86.8593, 131.303, -13.6711, 0.59", "86.6075, 131.89, -14.334, 1.47", "86.3876, 132.401, -14.8831, 1.47", "86.3718, 132.438, -14.9195, 1.47", "85.8215, 133.712, -15.9274, 0.15", "85.4555, 134.473, -16.308, 0.15", "85.429, 134.524, -16.3328, 0.15", "85.3011, 134.765, -16.4635, 0.66", "85.1538, 135.036, -16.6166, 1.33", "84.9549, 135.413, -16.8423, 1.25", "84.888, 135.552, -16.9436, 1.25", "84.0397, 137.458, -18.3956, 0.15", "83.7847, 138.055, -18.8637, 1.84", "83.5779, 138.56, -19.3279, 1.84", "83.5614, 138.599, -19.3619, 1.84", "83.1102, 139.649, -20.2463, 0.96", "82.9008, 140.125, -20.6306, 0.59", "82.6171, 140.74, -21.0918, 0.59", "82.0254, 141.991, -22.03, 0.15", "81.1943, 143.753, -23.3032, 0.15", "81.0623, 144.025, -23.4821, 0.37", "80.7838, 144.574, -23.8248, 0.37", "80.6367, 144.856, -23.9924, 0.52", "80.4513, 145.206, -24.1712, 0.29", "79.6302, 146.755, -24.8191, 0.15", "79.4969, 147.013, -24.9481, 1.03", "79.108, 147.762, -25.2904, 1.33", "78.8248, 148.339, -25.4967, 1.77", "78.7737, 148.447, -25.5319, 2.14", "78.6808, 148.656, -25.5975, 2.36", "78.3614, 149.439, -25.8126, 2.14", "78.0009, 150.454, -26.0603, 0.22", "77.5318, 151.954, -26.3738, 0.15", "77.502, 152.063, -26.3983, 0.15", "77.3298, 152.759, -26.5435, 1.33", "77.2193, 153.251, -26.6415, 1.33", "76.9572, 154.469, -26.9015, 0.22", "76.8619, 154.903, -26.9875, 0.96", "76.4512, 156.67, -27.3481, 0.22", "76.2997, 157.287, -27.4689, 1.47", "76.103, 158.044, -27.6106, 2.06", "75.5366, 160.079, -28.0082, 0.22", "74.9296, 162.194, -28.4198, 0.15", "74.7898, 162.682, -28.5223, 0.66", "74.6972, 163.009, -28.6005, 0.96", "74.6051, 163.347, -28.689, 0.96", "74.0299, 165.618, -29.3128, 0.15", "73.8845, 166.329, -29.5665, 0.29", "73.624, 168.093, -30.3184, 0.15", "73.5442, 168.864, -30.6609, 1.03", "73.5184, 169.328, -30.8856, 1.84", "73.5194, 169.676, -31.0668, 1.47", "73.7915, 171.854, -32.2768, 0.15", "74.042, 173.042, -32.9343, 0.15", "74.2427, 173.696, -33.281, 1.03", "74.4421, 174.225, -33.5452, 1.18", "74.645, 174.675, -33.7647, 0.37", "75.3322, 175.88, -34.3522, 0.15", "75.5184, 176.124, -34.4577, 0.29", "75.5663, 176.18, -34.4909, 0.29", "75.7406, 176.392, -34.6289, 0.29", "75.8937, 176.6, -34.7791, 0.29", "76.5632, 177.745, -35.7274, 0.15", "76.5793, 177.783, -35.762, 0.15", "76.8272, 178.725, -36.5409, 1.25", "76.8957, 179.348, -36.9813, 2.21", "76.9068, 179.872, -37.3132, 2.43", "76.8607, 180.699, -37.7854, 2.14", "76.7681, 181.326, -38.0897, 1.55", "76.5002, 182.682, -38.7012, 0.15", "76.0572, 184.166, -39.2938, 0.15", "75.9596, 184.417, -39.3777, 0.74", "75.8177, 184.721, -39.457, 0.74", "75.5079, 185.228, -39.5519, 0.74", "75.2613, 185.565, -39.586, 0.15", "74.3827, 186.594, -39.6173, 0.15", "73.7229, 187.312, -39.6005, 0.66", "73.4015, 187.667, -39.5844, 1.11", "71.6777, 189.596, -39.4631, 0.15", "71.1865, 190.153, -39.421, 0.81", "70.8851, 190.498, -39.39, 0.81", "70.5578, 190.879, -39.3531, 0.81", "69.6936, 191.889, -39.2273, 0.15", "69.1552, 192.533, -39.0906, 1.33", "68.9506, 192.785, -39.017, 1.77", "68.7416, 193.047, -38.9466, 1.55", "68.2087, 193.732, -38.7468, 0.37", "67.5482, 194.602, -38.4727, 0.22", "66.5301, 196.095, -37.9213, 0.22", "66.3011, 196.457, -37.7886, 0.37", "66.0748, 196.846, -37.6717, 0.66", "65.9771, 197.021, -37.6249, 0.44", "65.883, 197.194, -37.5868, 0.44", "65.1224, 198.625, -37.3059, 0.15", "64.7457, 199.362, -37.1329, 1.25", "64.3242, 200.194, -36.9292, 1.84", "63.3377, 202.219, -36.5424, 0.15", "63.2271, 202.453, -36.5022, 0.37", "62.9683, 203.033, -36.4193, 0.66", "62.8985, 203.206, -36.4039, 0.88", "62.8125, 203.457, -36.3807, 0.88", "62.3142, 205.186, -36.2355, 0.15", "62.1885, 205.727, -36.2001, 0.88", "62.0697, 206.238, -36.1568, 1.69", "61.9376, 206.813, -36.1046, 2.21", "61.7981, 207.416, -36.0464, 1.69", "61.2257, 209.867, -35.7787, 0.15", "61.1219, 210.316, -35.7011, 0.59", "61.059, 210.581, -35.6546, 0.96", "61.0115, 210.777, -35.6228, 0.96", "60.9033, 211.229, -35.5546, 0.52", "60.8874, 211.298, -35.547, 0.52", "60.7145, 212.162, -35.4894, 0.15", "60.4114, 213.778, -35.4635, 0.07", "60.2834, 214.511, -35.4601, 0.37", "60.2487, 214.718, -35.4617, 0.81", "60.2101, 214.983, -35.466, 0.88", "60.2101, 214.983, -35.466, 0.88", "60.204, 215.053, -35.474, 0.88", "60.1928, 215.238, -35.4832, 0.88", "60.1828, 215.414, -35.4833, 0.88", "60.148, 215.822, -35.4939, 0.22", "59.9592, 217.621, -35.559, 0.22", "59.9371, 217.805, -35.5635, 0.44", "59.9119, 217.998, -35.5669, 0.44", "59.8838, 218.198, -35.5813, 0.44", "59.6979, 219.645, -35.7615, 0.15", "59.6328, 220.164, -35.8723, 1.33", "59.5765, 220.639, -36.0182, 1.4", "59.5573, 220.822, -36.0837, 1.4", "59.4566, 221.959, -36.5335, 0.15", "59.358, 223.437, -37.2301, 0.15", "59.3332, 224.093, -37.6006, 0.81", "59.32, 224.5, -37.8518, 1.18", "59.3175, 224.568, -37.8954, 1.18", "59.2942, 224.946, -38.1506, 1.18", "59.0779, 226.695, -39.4415, 0.15", "58.9785, 227.205, -39.8554, 0.81", "58.8816, 227.602, -40.1385, 1.03", "58.8356, 227.768, -40.2527, 1.03", "58.4708, 228.966, -41.0499, 0.15", "58.0795, 230.147, -41.8452, 1.77", "57.6702, 231.248, -42.4952, 0.15", "56.9862, 232.935, -43.4209, 0.15", "56.7717, 233.43, -43.6889, 0.96", "56.6847, 233.62, -43.784, 1.18", "56.4034, 234.206, -44.0491, 0.96", "55.5484, 235.907, -44.7626, 0.15", "55.0083, 236.904, -45.1945, 0.81", "54.688, 237.456, -45.4574, 0.15", "54.0719, 238.511, -45.9275, 0.15", "53.9552, 238.71, -46.0137, 0.29", "53.7671, 239.023, -46.1436, 0.29", "53.6509, 239.235, -46.2399, 0.29", "53.6212, 239.296, -46.2636, 0.29", "53.5668, 239.411, -46.3075, 0.29", "53.3096, 239.943, -46.5261, 0.15", "53.1271, 240.308, -46.6836, 0.74", "52.4608, 241.511, -47.1368, 0.15", "51.9914, 242.319, -47.4272, 1.69", "51.7824, 242.671, -47.5455, 1.47", "51.5111, 243.093, -47.6653, 1.18", "51.1231, 243.655, -47.7974, 0.15", "49.6975, 245.573, -48.157, 0.15", "49.5065, 245.81, -48.1912, 0.59", "49.2302, 246.145, -48.2282, 0.59", "47.9663, 247.642, -48.4264, 0.22", "47.714, 247.937, -48.4684, 0.88", "47.3773, 248.335, -48.5155, 1.62", "47.1741, 248.588, -48.5469, 1.62", "46.8089, 249.068, -48.6006, 1.25", "45.1904, 251.347, -48.8579, 0.22", "45.0164, 251.619, -48.8895, 0.22", "44.6203, 252.298, -48.9386, 1.55", "44.0051, 253.442, -48.9673, 0.22", "43.9088, 253.643, -48.9606, 0.44", "43.8401, 253.815, -48.9413, 0.59", "43.7562, 254.134, -48.8816, 0.96", "43.5092, 255.299, -48.6298, 0.15", "43.4446, 255.637, -48.5541, 0.44", "43.3133, 256.261, -48.4151, 1.47", "43.1747, 256.876, -48.2846, 1.47", "42.8515, 258.067, -48.0799, 0.29", "42.0347, 260.783, -47.6915, 0.29", "41.8895, 261.214, -47.6515, 1.47", "40.9926, 263.643, -47.4947, 0.15", "40.6866, 264.389, -47.4665, 1.84", "39.8309, 266.272, -47.4838, 0.15", "39.6725, 266.58, -47.5109, 0.59", "38.867, 267.964, -47.8268, 0.15", "38.6159, 268.387, -47.9549, 0.88", "38.3047, 268.92, -48.197, 0.15", "37.9825, 269.532, -48.544, 0.96", "37.7805, 269.974, -48.8301, 0.22", "37.1684, 271.422, -49.8227, 0.22", "37.0437, 271.75, -50.055, 1.33", "36.483, 273.335, -51.1339, 0.07", "36.0238, 274.661, -51.9703, 0.07", "35.9238, 274.955, -52.133, 0.81", "35.7861, 275.362, -52.3323, 1.25", "35.6541, 275.714, -52.4907, 1.55", "35.4057, 276.325, -52.713, 0.15", "35.091, 277.025, -52.8573, 0.15", "34.9745, 277.269, -52.9169, 0.74", "34.9473, 277.323, -52.933, 0.74", "34.1861, 278.801, -53.4355, 0.15", "33.9096, 279.328, -53.6343, 1.25", "33.7376, 279.676, -53.7781, 1.77", "33.1634, 280.916, -54.286, 0.15", "32.65, 282.06, -54.7297, 0.15", "32.5315, 282.324, -54.864, 0.66", "32.4278, 282.558, -55.004, 0.15", "31.8544, 283.87, -55.8749, 0.15", "31.7891, 284.032, -56.0005, 0.29", "31.6978, 284.289, -56.2236, 0.88", "31.1074, 286.181, -58.1338, 0.15", "31.0497, 286.389, -58.3415, 0.59", "30.9206, 286.899, -58.8478, 0.15", "30.6345, 288.049, -59.8864, 1.18", "30.4715, 288.742, -60.4199, 0.81", "30.4326, 288.924, -60.5466, 0.15", "30.1792, 290.374, -61.3177, 0.15", "30.1387, 290.6, -61.4336, 0.81", "29.8404, 292.123, -62.1253, 0.22", "29.7056, 292.732, -62.299, 1.47" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "1.60316, -10.7224, 14.3938, 2.21", "1.01871, -12.7593, 15.8313, 2.21", "0.470432, -14.6702, 17.1798, 2.21", "-0.250823, -17.1839, 18.9538, 2.21", "-1.09044, -20.1101, 21.0189, 2.21", "-2.07655, -23.5469, 23.4443, 2.43", "-3.22658, -27.5549, 26.2729, 3.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "1.60316, -10.7224, 14.3938, 1.55", "3.45174, -11.4198, 15.5425, 1.55", "4.42295, -11.8262, 16.1705, 1.03", "6.03426, -12.5545, 17.1713, 1.03", "6.83986, -12.9518, 17.6596, 1.84", "8.45839, -13.8298, 18.5799, 1.55", "9.06035, -14.1872, 18.8991, 1.25", "10.168, -15.0075, 19.4373, 1.11", "10.8636, -15.6377, 19.6892, 1.11", "11.3886, -16.2265, 19.7744, 1.33", "12.0981, -17.1933, 19.7658, 1.33", "12.5548, -17.9257, 19.6266, 1.18", "13.0366, -18.7546, 19.3865, 1.25", "13.5657, -19.6734, 19.0112, 1.4", "13.9927, -20.3515, 18.6701, 1.11", "14.4094, -20.8876, 18.3401, 0.96", "15.0333, -21.4552, 17.9077, 0.74", "15.6849, -21.8591, 17.5234, 0.59", "16.3623, -22.124, 17.1986, 0.88", "17.3339, -22.3725, 16.8136, 1.18", "18.3163, -22.5457, 16.5014, 1.69", "19.7014, -22.7154, 16.1343, 2.06", "20.2102, -22.7612, 16.0219, 2.14", "21.1674, -22.8415, 15.8447, 1.4", "22.0776, -22.926, 15.7005, 1.33", "22.7951, -23.0141, 15.6185, 1.33", "23.2457, -23.092, 15.5947, 1.25", "23.3454, -23.114, 15.5957, 1.25", "24.1724, -23.3155, 15.6844, 1.25", "24.5136, -23.4026, 15.7373, 1.25", "25.4577, -23.6281, 15.8967, 1.25", "26.8684, -23.9567, 16.1108, 0.96", "26.9426, -23.9734, 16.1221, 0.96", "28.2816, -24.2637, 16.3456, 1.4", "29.7051, -24.5593, 16.6403, 2.21", "30.8245, -24.7847, 16.8919, 1.99", "31.6475, -24.9381, 17.0953, 1.47", "32.4228, -25.0687, 17.2861, 1.03", "33.34, -25.209, 17.5089, 0.88", "34.4124, -25.3434, 17.7436, 0.81", "34.4878, -25.3497, 17.7596, 0.81", "35.5463, -25.3951, 17.9581, 0.81", "36.4104, -25.3935, 18.0828, 0.74", "37.3364, -25.354, 18.1528, 1.33", "38.5322, -25.2564, 18.1458, 1.77", "39.5141, -25.1584, 18.0748, 1.47", "40.361, -25.0704, 17.9846, 1.18", "40.8989, -25.0082, 17.9022, 1.03", "41.5077, -24.9398, 17.8529, 0.88", "42.0175, -24.8877, 17.8771, 0.66", "42.7771, -24.8485, 18.0004, 0.66", "43.3979, -24.8443, 18.152, 0.66", "43.7932, -24.8571, 18.2581, 0.66", "45.4396, -24.9689, 18.794, 1.25", "46.6053, -25.075, 19.179, 1.99", "47.5625, -25.1784, 19.4884, 2.36", "48.4971, -25.2832, 19.7669, 2.36", "49.2487, -25.361, 19.9518, 1.4", "50.9664, -25.5406, 20.2222, 0.52", "51.7609, -25.6099, 20.2746, 0.74", "52.249, -25.6375, 20.2915, 0.74", "52.7802, -25.6409, 20.3094, 0.74", "53.4334, -25.6284, 20.3358, 0.74", "54.2733, -25.5913, 20.3778, 0.52", "55.8282, -25.4788, 20.5761, 1.33", "57.0066, -25.3848, 20.8246, 1.77", "58.2036, -25.2883, 21.1273, 1.11", "59.1718, -25.2173, 21.426, 0.88", "59.2444, -25.2119, 21.4561, 0.88", "61.3797, -25.0109, 22.4961, 0.29", "61.4377, -25.0046, 22.5302, 0.29", "62.107, -24.9247, 22.9734, 0.52", "62.805, -24.8465, 23.4509, 0.88", "64.1647, -24.721, 24.3135, 2.21", "64.968, -24.6775, 24.7587, 1.77", "66.2326, -24.6632, 25.2857, 1.25", "67.0148, -24.6655, 25.5605, 0.66", "68.3369, -24.6888, 25.9255, 0.66", "69.4549, -24.7222, 26.1508, 0.66", "70.2904, -24.759, 26.2609, 1.25", "71.4861, -24.8122, 26.3915, 0.96", "72.5697, -24.8675, 26.4793, 0.15", "73.2685, -24.9016, 26.5469, 1.25", "75.0448, -24.9734, 26.712, 0.59", "75.687, -25.0089, 26.7765, 0.96", "76.2141, -25.0511, 26.8336, 0.59", "77.2204, -25.1609, 26.984, 0.37", "77.373, -25.178, 27.003, 0.37", "78.2851, -25.2562, 27.1108, 1.77", "79.2689, -25.3114, 27.2648, 1.84", "79.9677, -25.335, 27.417, 0.88", "81.4188, -25.3503, 27.7388, 0.37", "82.1121, -25.359, 27.8766, 0.37", "82.5721, -25.3687, 27.9978, 0.37", "84.0015, -25.4168, 28.4257, 0.96", "84.6161, -25.4344, 28.6146, 1.33", "85.8901, -25.486, 28.9629, 2.58", "86.8253, -25.5403, 29.2275, 2.06", "88.6887, -25.6885, 29.7809, 0.96", "89.4692, -25.7431, 30.0079, 0.22", "90.0472, -25.7607, 30.1495, 0.44", "90.7653, -25.7591, 30.3329, 0.29", "92.3244, -25.6947, 30.7805, 0.66", "92.995, -25.6194, 30.9559, 1.33", "93.9803, -25.4719, 31.1848, 1.92", "95.0242, -25.2903, 31.4496, 2.06", "95.2452, -25.2541, 31.5026, 2.06", "96.6342, -25.0266, 31.7893, 0.52", "97.532, -24.8898, 31.9097, 0.52", "98.6055, -24.7685, 32.0538, 0.52", "99.1968, -24.7521, 32.1203, 0.96", "100.054, -24.8437, 32.1915, 0.74", "100.526, -24.9345, 32.2129, 0.52", "101.07, -25.0933, 32.2111, 0.52", "102.731, -25.6942, 32.1855, 2.87", "103.613, -26.0453, 32.145, 2.58", "105.419, -26.7951, 32.0614, 0.44", "105.472, -26.8178, 32.0587, 0.44", "106.006, -27.0428, 32.022, 1.03", "106.079, -27.0733, 32.0146, 1.03", "106.968, -27.4469, 31.8674, 0.59", "107.558, -27.6516, 31.7496, 0.52", "107.701, -27.6922, 31.7126, 0.52", "108.326, -27.8594, 31.551, 0.52", "108.798, -27.9748, 31.4825, 0.52", "108.872, -27.9939, 31.4799, 0.52", "109.214, -28.0778, 31.5023, 1.03", "109.297, -28.0991, 31.5147, 1.03", "110.029, -28.2977, 31.6465, 0.74", "111.167, -28.6461, 31.9756, 0.22", "111.806, -28.8725, 32.2205, 1.18", "112.345, -29.0778, 32.4251, 0.29", "112.808, -29.2327, 32.6783, 0.29", "113.289, -29.3768, 32.9697, 0.29", "114.356, -29.6258, 33.6514, 2.14", "116.349, -30.0006, 34.9567, 0.37", "117.186, -30.135, 35.5151, 1.55", "119.947, -30.5254, 37.3218, 0.15", "120.393, -30.576, 37.6009, 1.03", "121.302, -30.6667, 38.1601, 1.77", "123.0, -30.8224, 39.1092, 0.22", "123.883, -30.9031, 39.57, 0.96", "125.19, -31.0559, 40.2087, 0.22", "126.268, -31.2568, 40.617, 0.96", "127.572, -31.553, 41.1484, 0.15", "128.344, -31.7717, 41.4713, 1.18", "128.389, -31.7829, 41.4891, 1.18", "137.322, -35.1666, 42.5139, 1.18", "146.001, -39.2589, 42.1871, 1.18", "154.061, -44.4083, 42.5669, 1.18", "161.596, -50.2672, 42.468, 1.18", "168.419, -56.8747, 42.068, 1.18", "174.516, -64.1093, 41.9801, 1.18", "180.0, -71.7491, 41.2859, 1.18", "185.396, -79.4619, 40.8662, 1.18", "192.006, -86.2728, 40.935, 1.18", "197.682, -93.8065, 41.1536, 1.18", "203.925, -100.926, 41.3043, 1.18", "210.566, -107.582, 42.6174, 1.18", "216.402, -114.987, 41.9789, 1.18", "221.883, -122.654, 41.8256, 1.18", "225.936, -130.886, 39.9321, 1.18", "230.022, -139.272, 39.3072, 1.18", "234.334, -147.534, 40.114, 1.18", "238.919, -155.708, 39.9314, 1.18" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-13.8493, -22.4295, 5.87184, 0.66", "-15.0756, -23.6301, 5.99103, 0.66", "-16.068, -24.7781, 6.18372, 0.88", "-17.0635, -26.1723, 6.57568, 1.33", "-17.7216, -27.2012, 6.8958, 0.37", "-18.4752, -28.4324, 7.31256, 0.59", "-18.5062, -28.4828, 7.33011, 0.59", "-19.6345, -30.3419, 8.0084, 0.74", "-20.691, -32.0851, 8.64396, 0.59", "-21.4671, -33.3245, 9.08744, 0.29", "-22.0886, -34.1848, 9.39793, 1.18", "-23.3411, -35.6952, 9.94, 1.18", "-24.246, -36.7188, 10.2444, 1.4", "-25.0825, -37.5856, 10.4283, 1.03", "-25.7215, -38.2585, 10.5224, 0.66", "-27.0408, -39.7897, 10.7076, 0.22", "-27.6942, -40.6116, 10.7895, 0.52", "-28.8059, -42.1518, 10.9321, 1.18", "-29.4419, -43.1345, 11.0339, 1.47", "-30.2496, -44.5104, 11.186, 0.96", "-30.945, -45.8232, 11.3487, 0.29", "-31.1827, -46.293, 11.4106, 0.29", "-31.5893, -47.009, 11.5362, 0.29", "-32.1409, -47.886, 11.7195, 0.66", "-33.0131, -49.2026, 12.1173, 1.62", "-34.0815, -50.7653, 12.6878, 1.84", "-34.866, -51.9444, 13.1934, 0.81", "-35.4168, -52.8032, 13.5925, 0.59", "-35.8362, -53.4461, 13.9143, 0.37", "-36.9138, -55.0785, 14.7273, 0.37", "-37.4292, -55.8496, 15.0992, 0.37", "-38.092, -56.8532, 15.5417, 0.52", "-38.6036, -57.7408, 15.9228, 0.22", "-39.0913, -58.6988, 16.2966, 1.11", "-39.7658, -60.179, 16.811, 2.28", "-40.2767, -61.3669, 17.1641, 2.28", "-40.3032, -61.4313, 17.1835, 2.28", "-41.1022, -63.4516, 17.7561, 1.18", "-41.837, -65.4033, 18.3004, 0.59", "-42.4546, -67.0741, 18.7503, 0.37", "-42.9242, -68.2968, 19.0609, 0.37", "-43.8004, -70.4745, 19.6071, 2.06", "-44.4742, -72.0015, 19.9668, 2.06", "-45.0713, -73.185, 20.227, 1.18", "-45.5375, -74.0218, 20.4209, 0.59", "-46.4411, -75.4798, 20.78, 0.66", "-47.4725, -76.987, 21.1769, 0.22", "-48.0444, -77.7233, 21.3879, 0.44", "-48.8705, -78.6932, 21.7079, 0.81", "-49.3596, -79.2402, 21.8993, 0.44", "-49.9845, -79.9255, 22.138, 0.15", "-50.4035, -80.3783, 22.2882, 0.15", "-50.8424, -80.8705, 22.4231, 0.15", "-51.2072, -81.3241, 22.5596, 0.59", "-51.628, -82.0641, 22.8013, 0.81", "-51.9055, -82.6658, 23.051, 0.37", "-52.276, -83.6004, 23.4583, 0.15", "-52.5537, -84.356, 23.7899, 1.18", "-53.1034, -85.8958, 24.433, 2.28", "-54.295, -89.1069, 25.7064, 0.59", "-54.9418, -90.7679, 26.3353, 1.18", "-55.3385, -91.6949, 26.6618, 1.18", "-55.6022, -92.2545, 26.839, 0.81", "-56.521, -93.9928, 27.3021, 0.44", "-57.1678, -95.0649, 27.5085, 0.59", "-57.6799, -95.7682, 27.5622, 0.74", "-58.5077, -96.9783, 27.5303, 0.52", "-59.0752, -97.8624, 27.4922, 0.15", "-59.8894, -99.2351, 27.4115, 1.92", "-60.3375, -100.067, 27.3646, 2.14", "-60.9151, -101.34, 27.2724, 1.18", "-62.103, -104.379, 27.0298, 0.52", "-62.4856, -105.512, 26.9565, 1.4", "-62.8488, -106.655, 26.9055, 1.62", "-63.2428, -107.917, 26.8589, 0.29", "-63.9328, -110.088, 26.8045, 0.22", "-64.2113, -110.951, 26.7992, 0.15", "-64.4952, -111.852, 26.8108, 1.11", "-64.7998, -112.892, 26.8164, 1.18", "-65.1131, -114.018, 26.8187, 0.37", "-65.3786, -114.996, 26.8092, 0.15", "-65.5586, -115.679, 26.8386, 0.81", "-65.9536, -117.461, 26.9251, 0.29", "-66.0558, -117.976, 26.9478, 0.96", "-66.1734, -118.564, 26.9888, 0.74", "-66.3206, -119.266, 27.0513, 0.22", "-66.565, -120.367, 27.1217, 0.15", "-66.8995, -121.638, 27.1667, 2.06", "-67.2606, -122.811, 27.1712, 1.62", "-67.8935, -124.691, 27.1497, 0.29", "-68.1347, -125.357, 27.1285, 0.52", "-68.8235, -127.079, 27.038, 0.15", "-69.2635, -128.089, 26.9561, 1.69", "-69.6687, -128.94, 26.8976, 1.11", "-69.9249, -129.443, 26.87, 0.37", "-70.6772, -130.805, 26.8467, 0.29", "-71.2258, -131.712, 26.8657, 0.29", "-71.5948, -132.272, 26.8978, 0.07", "-72.116, -133.034, 26.9682, 0.81", "-72.5767, -133.708, 27.0411, 1.11", "-73.5855, -135.169, 27.2332, 0.07", "-74.3086, -136.203, 27.3797, 1.69", "-74.9943, -137.262, 27.5156, 1.92", "-75.9825, -138.891, 27.7363, 0.15", "-76.4203, -139.645, 27.8707, 0.22", "-77.1056, -140.875, 28.122, 0.29", "-77.7154, -142.007, 28.4091, 0.29", "-78.5099, -143.525, 28.8557, 2.58", "-80.2842, -146.989, 29.9756, 0.22", "-80.9939, -148.351, 30.4498, 0.15", "-81.2159, -148.752, 30.5991, 0.74", "-82.1442, -150.347, 31.2095, 0.15", "-82.3762, -150.691, 31.3484, 0.74", "-82.855, -151.293, 31.5887, 0.59", "-83.5283, -152.048, 31.832, 0.22", "-84.6295, -153.252, 32.0871, 1.84", "-85.3091, -153.993, 32.2024, 0.81", "-86.1248, -154.937, 32.2967, 0.15", "-86.6444, -155.553, 32.3608, 0.15", "-87.0104, -156.012, 32.4279, 1.03", "-87.6356, -156.855, 32.5662, 1.92", "-88.2915, -157.755, 32.7296, 1.55", "-90.6158, -160.869, 33.4047, 0.52", "-91.5222, -162.065, 33.6971, 0.15", "-92.3393, -163.116, 33.9757, 0.15", "-93.1841, -164.152, 34.2725, 1.92", "-93.7681, -164.833, 34.4856, 0.96", "-94.7702, -165.934, 34.8537, 0.22", "-94.9941, -166.153, 34.9307, 0.22", "-95.6977, -166.805, 35.1387, 0.22", "-96.452, -167.452, 35.3029, 0.22", "-96.5154, -167.508, 35.3177, 0.22", "-97.0235, -167.981, 35.4349, 0.59", "-97.6599, -168.597, 35.5734, 0.59", "-98.6768, -169.539, 35.8413, 1.33", "-99.2887, -170.079, 36.0213, 1.69", "-100.586, -171.232, 36.5024, 0.15", "-100.993, -171.609, 36.6817, 0.52", "-101.454, -172.091, 36.8817, 0.22", "-102.215, -173.024, 37.2166, 0.52", "-102.458, -173.383, 37.3242, 0.52", "-103.068, -174.452, 37.5709, 0.15", "-103.834, -176.148, 37.8214, 2.65", "-104.569, -178.196, 37.9714, 0.15", "-104.764, -178.929, 37.9285, 0.07", "-104.861, -179.468, 37.8248, 0.22", "-104.927, -180.004, 37.6709, 0.15", "-104.949, -180.411, 37.4523, 0.52", "-104.933, -180.829, 37.1255, 0.52", "-104.84, -181.861, 36.1576, 0.22", "-104.795, -182.289, 35.7292, 1.25", "-104.788, -182.355, 35.6579, 1.25", "-104.573, -183.898, 33.9294, 0.15", "-104.529, -184.159, 33.6095, 0.37", "-104.46, -184.448, 33.2158, 0.15", "-104.299, -184.866, 32.5879, 0.66", "-110.618, -194.472, 36.4785, 0.66" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-13.8493, -22.4295, 5.87184, 1.03", "-15.6908, -23.4019, 5.65446, 1.03", "-17.4342, -24.3332, 5.4136, 1.03", "-19.0125, -25.1382, 5.1344, 1.69", "-20.5228, -25.8477, 4.78619, 1.33", "-21.4126, -26.2397, 4.58728, 0.81", "-22.9596, -26.9158, 4.28311, 0.59", "-24.0921, -27.4221, 4.06397, 1.33", "-25.5122, -28.0717, 3.82573, 1.84", "-27.0497, -28.8497, 3.62371, 0.96", "-28.7595, -29.9032, 3.48008, 0.74", "-29.5758, -30.523, 3.4545, 0.44", "-30.3365, -31.2222, 3.48768, 0.44", "-30.8685, -31.8061, 3.571, 1.62", "-31.643, -32.7849, 3.7276, 1.47", "-32.74, -34.3124, 3.94268, 0.66", "-33.4757, -35.3354, 3.98817, 0.59", "-34.3894, -36.5055, 3.92481, 0.52", "-35.0459, -37.3092, 3.83348, 0.44", "-36.0658, -38.4925, 3.58783, 0.44", "-36.6571, -39.1495, 3.39313, 1.11", "-37.775, -40.4036, 2.9025, 1.99", "-38.6471, -41.4584, 2.3991, 1.99", "-39.143, -42.1502, 2.03584, 0.88", "-39.8335, -43.2219, 1.46474, 0.52", "-40.2411, -43.9389, 1.1042, 0.44", "-40.6387, -44.738, 0.726841, 0.59", "-40.9652, -45.5326, 0.405467, 0.59", "-41.3402, -46.4843, 0.0647994, 0.22", "-41.6035, -47.1229, -0.166712, 0.22", "-42.0643, -48.2089, -0.534418, 1.33", "-42.3997, -48.9563, -0.755689, 2.36", "-42.9018, -50.008, -1.03772, 1.77", "-43.6879, -51.5533, -1.41198, 0.22", "-44.0651, -52.2551, -1.57155, 0.74", "-44.4635, -52.9838, -1.71736, 0.74", "-45.2129, -54.3115, -1.91851, 0.15", "-45.4899, -54.7615, -1.98489, 0.15", "-46.0572, -55.6061, -2.10483, 2.14", "-46.4972, -56.1992, -2.18806, 1.55", "-47.0693, -56.9169, -2.29513, 0.59", "-47.7905, -57.7642, -2.44594, 0.29", "-48.3946, -58.4272, -2.57739, 1.11", "-48.8609, -58.9381, -2.66391, 0.81", "-49.7357, -59.86, -2.83022, 0.44", "-50.4971, -60.6466, -2.9763, 0.29", "-51.2663, -61.4244, -3.10805, 1.77", "-51.9055, -62.0473, -3.20501, 1.33", "-52.3947, -62.5199, -3.2626, 1.11", "-53.2638, -63.3051, -3.34436, 0.15", "-53.5451, -63.5433, -3.3667, 0.29", "-53.8244, -63.7629, -3.37911, 0.29", "-54.1411, -64.0151, -3.37529, 0.15", "-54.3313, -64.1771, -3.3591, 0.29", "-54.7531, -64.5581, -3.29335, 0.29", "-55.4908, -65.2725, -3.12627, 0.22", "-56.3217, -66.0954, -2.9511, 2.36", "-56.9499, -66.7137, -2.83144, 2.06", "-57.6232, -67.3791, -2.71349, 0.52", "-58.3282, -68.088, -2.58356, 0.29", "-58.7692, -68.5397, -2.50077, 1.47", "-60.9586, -70.7763, -2.04423, 0.29", "-61.467, -71.3029, -1.93407, 1.03", "-61.8761, -71.7263, -1.84592, 1.03", "-62.2836, -72.1514, -1.76408, 0.22", "-63.0121, -72.9162, -1.62585, 0.22", "-63.5449, -73.4868, -1.53467, 1.62", "-64.1862, -74.2042, -1.43235, 1.55", "-65.521, -75.7648, -1.25478, 0.29", "-66.0619, -76.4121, -1.18973, 0.66", "-66.3443, -76.7619, -1.16434, 0.66", "-66.6415, -77.1544, -1.14168, 0.44", "-67.6011, -78.4956, -1.08392, 0.22", "-67.9492, -79.0277, -1.06391, 0.81", "-68.4246, -79.8195, -1.03121, 0.15", "-68.7909, -80.4455, -1.00737, 1.84", "-69.2412, -81.2317, -0.957995, 1.99", "-69.2741, -81.2894, -0.953382, 1.99", "-70.0901, -82.7373, -0.863477, 0.15", "-70.1191, -82.7884, -0.861093, 0.15", "-70.3953, -83.276, -0.849163, 0.44", "-71.1111, -84.5297, -0.795796, 0.15", "-71.6308, -85.4072, -0.740749, 1.99", "-72.3932, -86.6467, -0.645201, 0.15", "-72.7141, -87.1246, -0.595952, 0.74", "-73.0177, -87.5412, -0.547446, 0.74", "-73.548, -88.2062, -0.462884, 0.15", "-73.9844, -88.7048, -0.400688, 0.74", "-74.2866, -89.0136, -0.359602, 0.74", "-75.2634, -89.9408, -0.232359, 0.15", "-75.7501, -90.3732, -0.191351, 1.4", "-76.3254, -90.8609, -0.163409, 1.84", "-77.0834, -91.4845, -0.154376, 0.22", "-78.4026, -92.5598, -0.160135, 0.22", "-78.7475, -92.8366, -0.164203, 0.81", "-79.6552, -93.5477, -0.181661, 0.29", "-79.9621, -93.7777, -0.187864, 0.22", "-80.3851, -94.0902, -0.194998, 0.96", "-80.7965, -94.4061, -0.209819, 0.66", "-81.3207, -94.8235, -0.242461, 0.81", "-82.3641, -95.6877, -0.334643, 2.5", "-83.4421, -96.6642, -0.429069, 0.15", "-83.8979, -97.103, -0.472767, 0.96", "-85.0542, -98.2908, -0.633246, 0.15", "-85.5689, -98.8597, -0.724135, 1.18", "-86.2193, -99.6537, -0.866274, 1.47", "-87.0765, -100.847, -1.10328, 0.15", "-87.3499, -101.28, -1.19413, 0.74", "-88.2021, -102.747, -1.51691, 0.15", "-88.5457, -103.393, -1.68803, 1.69", "-88.9614, -104.232, -1.94686, 1.03", "-89.415, -105.188, -2.2982, 0.15", "-89.6234, -105.645, -2.49138, 0.88", "-89.7884, -105.999, -2.65215, 0.74", "-90.3423, -107.188, -3.21489, 0.22", "-90.7404, -107.963, -3.59953, 0.15", "-90.9565, -108.35, -3.79182, 1.18", "-91.0733, -108.55, -3.88536, 1.18", "-91.7685, -109.688, -4.39764, 0.15", "-92.0418, -110.126, -4.57881, 0.59", "-92.5957, -110.977, -4.85391, 0.15", "-92.9653, -111.528, -5.0139, 1.47", "-93.3973, -112.137, -5.19255, 0.66", "-93.906, -112.838, -5.40329, 0.07", "-94.2833, -113.351, -5.55603, 0.96", "-96.1436, -115.778, -6.33521, 0.15", "-96.7619, -116.559, -6.61316, 2.65", "-98.1588, -118.266, -7.26391, 0.15", "-98.6085, -118.788, -7.48335, 0.74", "-98.6507, -118.835, -7.50455, 0.74", "-99.4311, -119.662, -7.91322, 0.15", "-99.896, -120.108, -8.17198, 1.03", "-100.276, -120.453, -8.35282, 1.03", "-101.579, -121.64, -8.90205, 0.15", "-102.267, -122.275, -9.17426, 1.84", "-104.044, -123.995, -9.83362, 0.15", "-105.392, -125.35, -10.2964, 3.02", "-107.104, -127.118, -10.8391, 0.37", "-108.344, -128.463, -11.2183, 0.15", "-108.86, -129.065, -11.3698, 0.88", "-110.309, -131.005, -11.6674, 0.15", "-110.699, -131.621, -11.6987, 1.25", "-110.927, -132.036, -11.678, 1.25", "-111.483, -133.119, -11.5658, 0.29", "-111.936, -133.998, -11.4245, 1.84", "-113.445, -136.857, -10.7742, 0.22", "-113.808, -137.529, -10.5838, 1.11", "-115.128, -139.896, -9.85167, 0.15", "-115.464, -140.439, -9.665, 0.96", "-115.716, -140.8, -9.52638, 1.4", "-117.253, -142.742, -8.73989, 0.15", "-117.734, -143.259, -8.53629, 1.18", "-117.769, -143.294, -8.52128, 1.11", "-119.606, -144.999, -7.60147, 0.22", "-120.116, -145.45, -7.33676, 0.22", "-120.72, -145.947, -7.02286, 1.33", "-121.343, -146.4, -6.71081, 2.14", "-121.961, -146.871, -6.30314, 1.33", "-122.951, -147.646, -5.52711, 0.22", "-123.464, -148.053, -5.05254, 0.22", "-124.142, -148.614, -4.354, 2.5", "-124.612, -149.008, -3.83697, 1.03", "-126.503, -150.674, -1.53963, 0.15", "-126.74, -150.887, -1.23353, 0.74", "-126.879, -151.051, -0.987048, 0.74", "-127.377, -151.858, 0.217728, 0.22", "-127.494, -152.167, 0.64476, 1.33", "-127.694, -153.073, 1.76466, 0.15", "-127.713, -153.259, 1.96825, 0.74", "-127.863, -155.972, 4.71679, 0.15", "-127.871, -156.459, 5.18576, 1.47", "-127.863, -157.798, 6.3942, 0.15", "-127.87, -158.277, 6.79256, 1.11", "-127.888, -158.571, 7.01392, 0.44", "-127.905, -158.722, 7.12347, 0.44", "-128.448, -160.697, 8.47524, 0.15", "-128.627, -161.155, 8.84625, 0.59", "-128.869, -161.594, 9.25826, 0.15", "-129.123, -161.95, 9.63977, 0.44", "-130.039, -162.937, 10.8025, 0.15", "-130.706, -163.488, 11.5168, 0.15", "-131.624, -163.963, 12.2776, 0.15", "-132.093, -164.166, 12.6619, 0.15", "-132.536, -164.313, 13.0024, 0.15", "-133.174, -164.447, 13.4133, 1.55", "-133.221, -164.45, 13.4354, 1.55", "-134.003, -164.461, 13.8144, 0.52", "-140.081, -170.254, 14.0086, 0.52", "-145.977, -176.13, 15.2589, 0.52", "-151.737, -182.02, 17.0468, 0.52", "-158.091, -187.535, 17.3712, 0.52", "-164.275, -193.174, 16.7355, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-31.2003, 22.393, -1.23489, 0.15", "-43.3147, 31.2383, -1.23489, 0.15", "-55.4292, 40.0836, -1.23489, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-88.704, 128.552, -60.8433, 0.15", "-89.7537, 132.067, -60.8523, 0.15", "-89.8612, 132.507, -60.8713, 0.81", "-89.913, 132.756, -60.8879, 0.81", "-89.968, 133.06, -60.9131, 0.81", "-89.9787, 133.113, -60.9271, 0.81", "-90.4268, 135.252, -61.6906, 0.15", "-90.5056, 135.702, -61.9522, 0.66", "-90.5592, 136.001, -62.145, 0.66", "-90.6043, 136.256, -62.3161, 0.66", "-91.0571, 138.869, -64.1017, 0.15", "-91.078, 138.989, -64.1859, 0.44", "-91.1087, 139.158, -64.3122, 0.44", "-91.1478, 139.354, -64.4589, 0.44", "-91.3035, 140.193, -65.0573, 0.07", "-91.3639, 140.569, -65.2971, 0.96", "-91.4034, 140.943, -65.4825, 1.4", "-91.4759, 141.338, -65.7183, 1.4", "-91.8503, 143.004, -66.8073, 0.22", "-91.966, 143.464, -67.1272, 1.62", "-92.03, 143.692, -67.2922, 1.92", "-92.1143, 143.975, -67.4965, 1.92", "-92.7313, 146.052, -68.8907, 0.15", "-92.8132, 146.306, -69.0524, 0.74", "-92.9042, 146.61, -69.2073, 0.74", "-93.0186, 146.977, -69.3886, 0.74", "-93.1161, 147.301, -69.5388, 1.33", "-93.2946, 147.852, -69.8292, 1.69", "-93.5903, 148.752, -70.3158, 0.66", "-94.0629, 150.153, -71.1248, 0.15", "-94.2875, 150.771, -71.5254, 1.62", "-94.4859, 151.301, -71.8924, 1.62", "-95.3196, 153.477, -73.4399, 0.22", "-95.3891, 153.656, -73.5701, 0.88", "-95.52, 153.965, -73.8105, 0.88", "-96.2146, 155.389, -75.0104, 0.22", "-96.3532, 155.665, -75.2295, 1.47", "-96.609, 156.14, -75.5752, 1.47", "-96.6517, 156.217, -75.6221, 1.47", "-97.794, 158.247, -76.7594, 0.15", "-98.0391, 158.652, -76.9764, 0.15", "-98.3769, 159.197, -77.2112, 1.11", "-99.2191, 160.586, -77.7354, 0.15", "-99.4984, 161.056, -77.889, 1.47", "-99.81, 161.572, -78.0517, 1.47", "-101.021, 163.615, -78.5954, 0.15", "-102.162, 165.54, -79.1296, 0.15", "-102.431, 166.104, -79.2377, 1.33", "-102.617, 166.587, -79.2972, 1.33", "-103.124, 168.164, -79.428, 0.22", "-103.398, 169.103, -79.4882, 2.14", "-103.552, 169.714, -79.4989, 2.14", "-104.498, 173.562, -79.5627, 0.15", "-104.68, 174.226, -79.601, 1.69", "-104.849, 174.842, -79.6322, 1.99", "-105.62, 177.699, -79.7396, 0.22", "-105.903, 178.632, -79.8373, 2.28", "-106.133, 179.315, -79.9423, 1.99", "-107.012, 181.509, -80.4431, 0.15", "-107.356, 182.415, -80.6428, 1.18", "-107.498, 182.823, -80.7375, 1.18", "-108.21, 185.207, -81.3079, 0.15", "-108.347, 185.666, -81.421, 0.74", "-108.451, 186.021, -81.4988, 1.25", "-108.513, 186.215, -81.5343, 1.11", "-109.208, 188.132, -81.9357, 0.15", "-109.304, 188.379, -81.9846, 1.03", "-109.804, 189.618, -82.2071, 0.07", "-110.208, 190.568, -82.3851, 2.28", "-111.488, 193.495, -82.916, 0.15", "-111.801, 194.185, -83.0338, 1.55", "-111.909, 194.415, -83.0697, 1.55", "-112.084, 194.757, -83.1229, 1.55", "-112.867, 196.158, -83.3334, 0.15", "-113.04, 196.446, -83.3696, 0.96", "-113.304, 196.861, -83.4371, 0.96", "-113.405, 197.017, -83.4688, 0.96", "-114.795, 199.123, -83.9759, 0.15", "-115.229, 199.768, -84.1528, 1.84", "-115.516, 200.182, -84.2855, 1.99", "-116.523, 201.634, -84.7572, 0.15", "-116.656, 201.826, -84.8198, 0.37", "-116.836, 202.089, -84.9023, 0.37", "-117.009, 202.337, -84.981, 0.37", "-117.666, 203.186, -85.2024, 0.15", "-118.05, 203.626, -85.2984, 1.25", "-118.26, 203.84, -85.3239, 1.69", "-118.56, 204.128, -85.3594, 1.33", "-119.163, 204.623, -85.515, 0.22", "-119.87, 205.126, -85.7646, 0.22", "-120.455, 205.458, -86.0274, 1.03", "-120.855, 205.648, -86.2337, 1.55", "-120.892, 205.663, -86.2531, 1.55", "-122.398, 206.208, -87.0819, 0.29", "-122.524, 206.251, -87.1511, 0.29", "-123.308, 206.496, -87.558, 0.29", "-123.455, 206.546, -87.6042, 0.29", "-123.796, 206.664, -87.7054, 0.29", "-124.014, 206.746, -87.7577, 0.29", "-124.429, 206.911, -87.8515, 0.29", "-124.94, 207.121, -87.9749, 1.33", "-126.412, 207.75, -88.3462, 0.15", "-127.972, 208.422, -88.7543, 1.99", "-130.318, 209.474, -89.347, 0.15", "-131.319, 209.935, -89.5907, 1.69", "-131.82, 210.166, -89.7121, 2.36", "-131.872, 210.19, -89.7248, 2.36", "-132.183, 210.347, -89.7958, 1.99", "-134.122, 211.381, -90.1361, 0.15", "-134.505, 211.608, -90.2125, 0.88", "-136.587, 212.918, -90.6409, 0.15", "-137.163, 213.299, -90.772, 0.88", "-137.534, 213.557, -90.8627, 1.47", "-137.806, 213.757, -90.9339, 1.47", "-140.019, 215.667, -91.4766, 0.15", "-140.306, 215.944, -91.5327, 1.25", "-140.538, 216.2, -91.5603, 1.62", "-140.572, 216.237, -91.564, 1.62", "-140.848, 216.533, -91.5923, 1.62", "-143.048, 218.689, -91.8299, 0.29", "-143.273, 218.897, -91.852, 0.88", "-143.913, 219.456, -91.9288, 0.15", "-145.065, 220.413, -92.0823, 2.21", "-145.241, 220.553, -92.108, 1.99", "-146.887, 221.754, -92.3588, 0.22", "-147.126, 221.902, -92.3991, 0.37", "-147.219, 221.958, -92.4119, 0.37", "-147.581, 222.153, -92.437, 0.37", "-147.901, 222.301, -92.418, 0.37", "-148.693, 222.571, -92.2985, 0.07", "-148.749, 222.582, -92.2855, 0.07", "-149.163, 222.639, -92.2011, 0.07", "-149.562, 222.599, -92.4263, 0.07", "-150.089, 222.529, -92.7852, 1.11", "-150.661, 222.462, -93.1807, 1.69", "-151.318, 222.387, -93.6496, 0.66", "-151.843, 222.335, -94.0229, 1.33", "-157.291, 221.939, -97.7236, 0.15", "-158.013, 221.906, -98.191, 1.62", "-158.979, 221.887, -98.7813, 0.15", "-159.025, 221.887, -98.8077, 0.15", "-160.052, 221.904, -99.3116, 0.96", "-161.562, 221.987, -99.8711, 0.15", "-162.091, 222.067, -99.9177, 1.25", "-162.473, 222.12, -99.971, 1.4", "-163.866, 222.34, -100.201, 0.15", "-164.474, 222.465, -100.301, 1.25", "-164.586, 222.497, -100.321, 1.25", "-166.628, 223.221, -100.721, 0.07", "-167.076, 223.403, -100.808, 1.11", "-168.415, 224.033, -101.06, 0.15", "-168.945, 224.334, -101.139, 1.55", "-170.209, 225.211, -101.268, 0.15", "-170.596, 225.521, -101.293, 1.11", "-170.639, 225.56, -101.294, 1.11", "-171.463, 226.369, -101.281, 0.15", "-172.104, 227.013, -101.25, 2.06", "-173.776, 228.706, -101.116, 0.15", "-174.116, 229.068, -101.078, 0.81", "-174.221, 229.187, -101.069, 0.81", "-174.879, 229.991, -101.031, 0.15", "-175.283, 230.533, -101.019, 1.25", "-176.413, 232.194, -101.071, 0.15", "-176.836, 232.862, -101.121, 0.15", "-177.351, 233.717, -101.197, 1.55", "-177.946, 234.775, -101.305, 0.07", "-178.103, 235.091, -101.344, 0.37", "-178.186, 235.299, -101.37, 0.37" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-88.704, 128.552, -60.8433, 0.15", "-90.1462, 130.732, -62.7357, 0.15", "-90.6085, 131.419, -63.3293, 1.11", "-91.0895, 132.134, -63.9555, 1.33", "-93.0977, 135.111, -66.5763, 0.22", "-93.7725, 136.113, -67.4509, 0.22", "-94.689, 137.473, -68.5483, 0.22", "-95.0035, 137.925, -68.8892, 0.88", "-95.69, 138.902, -69.5594, 1.84", "-95.7315, 138.961, -69.5945, 1.84", "-96.0516, 139.43, -69.8198, 1.84", "-98.4026, 142.791, -71.2948, 0.15", "-98.6912, 143.203, -71.4292, 0.15", "-99.4353, 144.231, -71.7677, 1.84", "-99.7183, 144.613, -71.8846, 2.14", "-100.506, 145.683, -72.2022, 1.33", "-101.109, 146.603, -72.4773, 0.22", "-102.376, 148.746, -73.1775, 0.15", "-103.033, 149.912, -73.6201, 0.74", "-103.474, 150.742, -73.9388, 1.25", "-103.895, 151.592, -74.2704, 1.25", "-106.067, 156.313, -76.0847, 0.22", "-106.721, 157.832, -76.6792, 2.06", "-107.158, 158.919, -77.105, 2.58", "-107.643, 160.16, -77.5436, 1.77", "-108.635, 162.665, -78.4694, 0.22", "-108.924, 163.358, -78.7247, 0.52", "-109.132, 163.831, -78.8792, 0.52", "-109.168, 163.903, -78.8975, 0.52", "-109.7, 164.889, -79.1197, 0.22", "-110.356, 165.991, -79.3999, 0.81", "-110.736, 166.561, -79.5309, 0.81", "-110.832, 166.698, -79.5646, 0.81", "-112.806, 169.47, -80.2516, 0.07", "-113.215, 170.04, -80.3912, 1.18", "-113.27, 170.111, -80.4084, 1.18", "-114.148, 171.203, -80.6599, 1.99", "-114.791, 171.964, -80.8532, 2.21", "-115.122, 172.338, -80.9497, 2.21", "-115.189, 172.408, -80.9704, 2.21", "-117.631, 174.913, -81.9133, 0.15", "-118.183, 175.47, -82.1428, 0.59", "-118.581, 175.871, -82.3208, 0.59", "-119.207, 176.516, -82.6208, 0.59", "-120.172, 177.529, -83.1363, 0.15", "-121.766, 179.225, -84.0818, 2.21", "-122.288, 179.79, -84.4316, 2.21", "-122.88, 180.453, -84.8774, 1.77", "-126.06, 184.171, -87.3588, 0.15", "-126.89, 185.172, -88.0254, 1.4", "-127.695, 186.16, -88.6631, 2.06", "-128.077, 186.638, -88.9656, 2.06", "-130.808, 190.113, -91.2122, 0.15", "-132.019, 191.677, -92.2333, 0.15", "-132.833, 192.727, -92.9607, 1.33", "-133.2, 193.199, -93.2806, 2.14", "-133.879, 194.073, -93.8685, 2.14", "-135.083, 195.507, -94.9318, 0.15", "-135.123, 195.55, -94.9688, 0.15", "-136.212, 196.633, -96.1012, 1.18", "-136.598, 197.006, -96.5256, 1.62", "-136.841, 197.237, -96.8023, 1.62", "-138.885, 199.146, -99.1119, 0.15", "-139.317, 199.548, -99.6055, 1.47", "-139.888, 200.096, -100.237, 1.47", "-141.633, 201.843, -102.06, 0.15", "-141.738, 201.947, -102.166, 0.15", "-142.038, 202.247, -102.486, 0.15", "-142.082, 202.295, -102.534, 0.15", "-142.518, 202.873, -102.951, 0.15", "-142.854, 203.406, -103.273, 0.15", "-143.475, 204.494, -103.899, 1.62", "-144.682, 206.708, -105.176, 2.5", "-145.351, 207.98, -105.911, 1.77", "-146.755, 210.748, -107.492, 0.22", "-148.186, 213.734, -109.168, 0.15", "-148.571, 214.571, -109.621, 0.37", "-148.745, 214.967, -109.815, 0.37", "-148.779, 215.044, -109.848, 0.37", "-148.925, 215.327, -110.017, 0.37", "-149.046, 215.497, -110.157, 0.37", "-150.072, 216.701, -111.216, 0.07", "-150.714, 217.435, -111.836, 1.84", "-151.15, 217.922, -112.269, 2.36", "-152.503, 219.426, -113.63, 2.5", "-154.191, 221.288, -115.2, 0.15", "-154.239, 221.339, -115.24, 0.15", "-155.037, 222.225, -115.852, 2.36", "-155.91, 223.212, -116.465, 2.36", "-158.142, 225.786, -117.932, 0.22", "-159.226, 227.078, -118.615, 0.22", "-159.755, 227.721, -118.972, 1.33", "-160.267, 228.345, -119.333, 1.77", "-160.57, 228.717, -119.556, 1.77", "-161.241, 229.588, -120.061, 1.77", "-164.023, 233.396, -122.447, 0.15", "-164.25, 233.717, -122.66, 1.03", "-164.839, 234.564, -123.217, 1.4", "-165.195, 235.098, -123.535, 1.4", "-167.05, 238.008, -125.095, 0.15", "-167.847, 239.325, -125.7, 1.99", "-168.236, 240.009, -125.965, 2.21", "-168.592, 240.65, -126.195, 2.21", "-170.319, 243.758, -127.251, 0.15", "-170.356, 243.825, -127.272, 0.15", "-170.504, 244.092, -127.337, 0.52", "-170.627, 244.317, -127.383, 0.52", "-170.822, 244.68, -127.463, 0.52", "-171.544, 246.057, -127.771, 0.15", "-171.691, 246.37, -127.84, 0.44", "-171.93, 246.941, -127.958, 0.81", "-172.175, 247.546, -128.086, 1.4", "-172.263, 247.772, -128.133, 1.4", "-172.475, 248.357, -128.247, 1.4", "-173.216, 250.566, -128.612, 0.15", "-173.383, 251.045, -128.685, 0.88", "-173.611, 251.651, -128.786, 0.88", "-173.673, 251.792, -128.823, 0.88", "-174.019, 252.413, -129.073, 0.88", "-174.089, 252.515, -129.132, 0.88", "-175.291, 254.003, -130.107, 0.44", "-176.257, 255.092, -130.876, 2.5", "-177.457, 256.431, -131.964, 2.5", "-179.338, 258.566, -133.893, 0.15", "-180.391, 259.715, -135.225, 2.36", "-181.256, 260.635, -136.458, 0.22", "-181.905, 261.318, -137.497, 1.18", "-183.49, 263.084, -140.301, 0.15", "-184.187, 264.017, -141.769, 1.99", "-186.015, 267.004, -146.432, 0.22", "-186.034, 267.042, -146.487, 0.22", "-186.465, 268.032, -147.954, 1.99", "-186.648, 268.517, -148.629, 1.99", "-187.662, 271.62, -152.495, 0.29", "-187.861, 272.379, -153.337, 1.62", "-187.938, 272.847, -153.793, 1.62", "-188.347, 275.688, -156.565, 0.22", "-188.409, 276.217, -157.072, 1.47", "-188.486, 277.031, -157.821, 1.99", "-188.502, 277.389, -158.125, 1.99", "-188.548, 280.188, -160.437, 0.15", "-188.542, 280.74, -160.864, 0.15", "-188.497, 281.556, -161.395, 1.03", "-188.485, 282.323, -161.861, 1.03", "-188.526, 284.276, -162.961, 0.15", "-188.546, 284.62, -163.146, 0.66", "-188.614, 285.445, -163.54, 1.92", "-188.702, 286.602, -164.148, 1.92", "-188.965, 289.763, -165.876, 0.22", "-189.003, 290.191, -166.112, 1.18", "-189.161, 291.876, -167.02, 1.92", "-189.251, 292.745, -167.509, 1.92", "-189.49, 294.842, -168.766, 0.22", "-189.585, 295.378, -169.162, 0.81", "-189.714, 295.901, -169.623, 1.25", "-189.733, 295.966, -169.684, 1.25", "-189.928, 296.522, -170.2, 1.25", "-189.964, 296.612, -170.297, 1.25", "-190.811, 298.839, -172.783, 0.29", "-190.872, 299.042, -173.006, 0.29", "-191.119, 300.06, -174.083, 0.29", "-191.19, 300.417, -174.445, 1.03", "-191.526, 302.62, -176.554, 2.36", "-191.63, 303.626, -177.447, 2.73", "-191.657, 304.558, -178.179, 1.84", "-191.66, 306.406, -179.662, 0.22", "-191.66, 306.459, -179.704, 0.22", "-191.656, 306.924, -180.043, 0.22", "-191.652, 307.099, -180.143, 0.44", "-191.663, 307.68, -180.442, 0.44", "-191.78, 309.396, -181.163, 0.15", "-191.84, 310.014, -181.366, 0.52", "-191.877, 310.401, -181.515, 0.52", "-191.927, 310.872, -181.712, 0.52", "-192.08, 312.465, -182.404, 1.62", "-192.139, 313.12, -182.693, 2.21", "-192.204, 314.021, -183.079, 1.99", "-192.201, 315.842, -183.933, 0.44", "-192.196, 315.904, -183.962, 0.44", "-192.116, 316.41, -184.227, 0.44", "-192.063, 316.633, -184.343, 0.44", "-192.052, 316.703, -184.382, 0.44", "-192.033, 317.308, -184.73, 0.88", "-192.078, 317.965, -185.09, 0.88", "-192.194, 318.868, -185.587, 0.29", "-192.396, 319.633, -186.171, 0.29", "-192.824, 321.008, -187.328, 1.77", "-193.125, 321.883, -188.165, 1.77", "-193.144, 321.938, -188.222, 1.77", "-193.383, 322.597, -188.963, 1.77", "-194.357, 325.129, -192.186, 0.22", "-194.607, 325.747, -193.047, 1.84", "-195.121, 327.026, -194.891, 1.84", "-195.528, 328.078, -196.441, 0.22", "-195.569, 328.191, -196.607, 0.22", "-196.105, 329.794, -198.908, 0.15", "-196.15, 329.94, -199.099, 0.29", "-196.289, 330.339, -199.616, 0.29", "-196.366, 330.55, -199.871, 0.29", "-196.544, 331.029, -200.44, 0.74", "-196.711, 331.521, -200.984, 0.74", "-197.342, 333.78, -203.171, 0.15", "-197.591, 335.013, -204.296, 1.69", "-197.599, 335.065, -204.341, 1.69", "-197.744, 335.98, -205.263, 1.18", "-197.828, 336.576, -205.89, 0.88", "-197.968, 337.826, -207.192, 0.29", "-198.012, 339.129, -208.42, 0.29", "-198.012, 339.186, -208.475, 0.29", "-198.002, 341.823, -211.086, 1.25", "-197.994, 342.44, -211.752, 1.77" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "17.8854, 25.8659, -10.8916, 1.03", "20.6719, 26.8141, -7.88419, 1.03", "22.5105, 27.4049, -6.03324, 0.52", "23.8539, 27.8288, -4.74709, 0.52", "23.9039, 27.845, -4.69621, 0.52", "24.5563, 28.087, -4.0059, 0.88", "26.1378, 28.7673, -2.16172, 0.88", "26.8017, 29.0969, -1.30378, 0.52", "27.6332, 29.6361, -0.158969, 0.66", "28.972, 30.6547, 1.66354, 1.4", "29.5321, 31.1222, 2.43958, 0.74", "30.9912, 32.4973, 4.53135, 0.37", "31.9852, 33.5244, 5.93479, 1.25", "32.9974, 34.6366, 7.36973, 2.36", "33.9575, 35.7055, 8.57969, 0.66", "34.7596, 36.5797, 9.40881, 0.59", "35.6138, 37.4748, 10.1651, 1.03", "36.1654, 38.0682, 10.5657, 2.14", "36.967, 38.9611, 11.1216, 1.84", "37.7678, 39.8512, 11.7055, 1.25", "38.3943, 40.5147, 12.098, 0.66", "39.2541, 41.3554, 12.5867, 0.66", "40.3223, 42.3428, 13.2928, 0.52", "40.7426, 42.7634, 13.6297, 0.44", "40.7795, 42.808, 13.6717, 0.44", "41.3168, 43.5911, 14.4262, 0.44", "41.9958, 44.6854, 15.4108, 0.96", "42.8644, 46.1921, 16.6585, 2.73", "43.4858, 47.2769, 17.5043, 1.99", "44.4714, 48.9445, 18.7755, 0.44", "45.1254, 49.9803, 19.599, 0.66", "46.2204, 51.6913, 20.9923, 0.66", "46.7177, 52.3704, 21.553, 0.44", "47.4524, 53.2151, 22.3324, 1.62", "49.0661, 54.7672, 23.9112, 4.13", "51.2906, 56.5975, 25.9109, 0.52", "51.9027, 57.0543, 26.4816, 0.52", "52.987, 57.7751, 27.5373, 0.52", "54.0627, 58.4361, 28.5885, 1.55", "54.9449, 58.9606, 29.4934, 0.96", "55.77, 59.4456, 30.3714, 0.29", "57.0531, 60.2696, 31.8126, 1.4", "58.807, 61.5882, 33.9346, 2.36", "59.3285, 62.0837, 34.641, 2.36", "60.4714, 63.4134, 36.31, 1.92", "61.3336, 64.6205, 37.7623, 0.59", "61.7704, 65.3619, 38.5788, 0.44", "62.1507, 66.1615, 39.3001, 0.81", "62.6684, 67.4417, 40.3027, 0.59", "63.0157, 68.3227, 40.9384, 1.18", "63.6994, 70.0112, 42.0295, 2.65", "64.4015, 71.6358, 43.0576, 1.84", "65.1899, 73.1986, 44.0996, 0.59", "65.7067, 74.1016, 44.7323, 0.44", "66.1151, 74.735, 45.2216, 0.44", "66.3864, 75.1431, 45.5341, 0.44", "66.99, 76.1004, 46.1872, 1.33", "67.8072, 77.5362, 47.1007, 1.77", "67.8442, 77.6073, 47.1453, 1.77", "68.5111, 79.0768, 47.9786, 0.66", "69.2195, 80.7362, 49.0477, 0.59", "69.6284, 81.7437, 49.725, 2.06", "70.1821, 82.9903, 50.6436, 1.33", "70.4406, 83.503, 51.0337, 0.52", "70.809, 84.1256, 51.5671, 0.44", "72.2037, 86.06, 53.4475, 2.36", "72.2456, 86.1076, 53.5036, 2.36", "73.9823, 87.7322, 55.6964, 0.59", "74.7004, 88.2735, 56.5258, 0.59", "75.7892, 88.9877, 57.6473, 1.03", "76.665, 89.4857, 58.4237, 1.62", "76.7339, 89.5183, 58.4776, 1.62", "77.7793, 89.9343, 59.2719, 1.47", "79.5583, 90.4827, 60.5209, 0.44", "80.0914, 90.6259, 60.8907, 0.44", "80.3446, 90.6922, 61.0555, 0.44", "82.1538, 91.2433, 62.3083, 0.81", "82.8401, 91.5076, 62.8306, 0.88", "83.6385, 91.9762, 63.563, 0.52", "84.5495, 92.7717, 64.5693, 0.37", "84.702, 92.9479, 64.7644, 0.37", "85.4811, 94.1111, 65.8594, 2.43", "85.9931, 95.1623, 66.6953, 1.62", "86.6486, 96.7797, 68.1331, 0.44", "86.96, 97.6015, 69.1086, 0.59", "87.1326, 98.0779, 69.7725, 0.81", "87.3168, 98.5793, 70.5424, 0.74", "87.5394, 99.1539, 71.5233, 0.44", "88.1773, 100.635, 74.4351, 2.5", "89.0261, 102.287, 78.4295, 0.96", "89.0435, 102.318, 78.5166, 0.96", "89.2964, 102.71, 79.8453, 2.14" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "17.8854, 25.8659, -10.8916, 1.03", "19.8899, 25.5686, -11.9257, 1.03", "21.1089, 25.3839, -12.7192, 0.29", "22.0494, 25.231, -13.4522, 0.66", "22.8688, 25.096, -14.1438, 1.33", "23.621, 24.9717, -14.7954, 1.18", "24.1843, 24.8788, -15.2901, 0.66", "24.9755, 24.7555, -16.163, 0.66", "25.707, 24.6662, -16.9706, 0.66", "25.7518, 24.6639, -17.0149, 0.66", "26.2423, 24.6855, -17.4687, 0.66", "26.2855, 24.6921, -17.5165, 0.66", "26.7909, 24.7764, -18.0993, 0.74", "27.3918, 24.879, -18.892, 0.88", "28.0728, 25.0151, -19.8575, 1.25", "28.844, 25.1956, -21.0159, 2.21", "30.2858, 25.5386, -23.3089, 2.8", "31.0142, 25.6953, -24.5047, 2.8", "32.5328, 25.975, -27.1291, 0.44", "32.7704, 26.0042, -27.5471, 0.44", "33.2401, 26.0177, -28.3902, 0.44", "33.5724, 25.9828, -29.0035, 0.44", "33.85, 25.9109, -29.4742, 0.44", "34.3722, 25.7261, -30.3398, 1.11", "35.1366, 25.3917, -31.4475, 1.99", "36.3833, 24.8368, -33.1152, 1.11", "37.2637, 24.4573, -34.1916, 0.44", "37.8401, 24.2326, -34.814, 0.44", "38.7332, 23.9152, -35.6508, 1.4", "39.7964, 23.5748, -36.4726, 2.87", "40.9554, 23.2527, -37.1693, 1.84", "41.7975, 23.0551, -37.5276, 0.66", "42.7721, 22.8631, -37.846, 0.37", "43.5313, 22.73, -38.0494, 0.37", "43.9759, 22.6628, -38.1469, 0.37", "44.514, 22.6016, -38.2785, 0.37", "45.2542, 22.5372, -38.613, 0.37", "45.8003, 22.4788, -38.9792, 0.37", "46.0921, 22.4404, -39.3572, 0.59", "46.5409, 22.3706, -40.1089, 0.52", "46.8857, 22.3061, -40.782, 0.52", "47.8389, 22.1017, -42.8687, 3.61", "48.3051, 21.9835, -43.9713, 2.28", "49.8698, 21.4978, -47.8726, 0.66", "49.8921, 21.4901, -47.9302, 0.66", "50.2206, 21.3686, -48.8042, 0.96", "50.5887, 21.2316, -49.7866, 1.33", "50.7644, 21.1697, -50.2405, 0.66", "50.8572, 21.1406, -50.473, 0.66", "51.5847, 20.915, -51.6669, 0.44", "51.6515, 20.894, -51.7749, 0.44", "51.9807, 20.7981, -52.3067, 0.44", "52.0152, 20.7863, -52.3573, 0.44", "52.3089, 20.6417, -52.8008, 0.44", "52.3407, 20.6205, -52.8497, 0.44", "52.5565, 20.4445, -53.1951, 0.44", "52.5912, 20.417, -53.2504, 0.44", "53.0157, 20.0813, -53.9234, 1.25", "53.7656, 19.477, -55.088, 1.84", "54.4739, 18.9005, -56.1554, 1.03", "54.9707, 18.4753, -56.9268, 0.52", "55.3534, 18.1319, -57.5569, 0.52", "55.5717, 17.9296, -57.9271, 0.52", "55.8829, 17.6418, -58.4478, 0.52", "56.1256, 17.4347, -58.9107, 0.66", "56.6378, 17.0277, -60.0097, 1.18", "57.1484, 16.6437, -61.2122, 2.5", "57.173, 16.6263, -61.2765, 2.5", "57.4136, 16.4773, -61.9389, 2.8", "58.4254, 16.0224, -65.2378, 0.52", "58.5616, 15.9856, -65.7718, 0.52", "58.5745, 15.9844, -65.8236, 0.52", "58.8012, 16.0119, -66.8373, 0.52", "58.8135, 16.0158, -66.899, 0.52", "59.4065, 16.2476, -69.6138, 1.84", "59.9518, 16.4522, -71.7294, 0.44", "60.174, 16.5242, -72.4953, 0.44", "60.9495, 16.7202, -74.9005, 1.4", "61.6506, 16.838, -76.8001, 1.99", "62.2916, 16.893, -78.318, 0.37", "62.7769, 16.8793, -79.2264, 0.37", "63.2029, 16.8309, -79.9203, 1.11", "63.9532, 16.6438, -81.1207, 0.22", "64.449, 16.4706, -81.8665, 0.22", "64.4831, 16.4573, -81.9169, 0.22", "65.0451, 16.2315, -82.7638, 0.22", "66.5581, 15.6316, -84.9928, 1.99", "68.6601, 14.8295, -88.0214, 0.22", "69.7716, 14.4203, -89.5551, 2.65", "71.7742, 13.7115, -92.2343, 0.52", "72.2253, 13.5587, -92.8013, 1.18", "72.836, 13.3608, -93.4984, 1.77", "74.0833, 12.9672, -94.6744, 0.22", "74.6044, 12.8212, -95.0891, 0.88", "75.2315, 12.6448, -95.5493, 0.88", "76.8241, 12.2065, -96.7095, 0.29", "77.6754, 11.9704, -97.3385, 1.47", "78.398, 11.7673, -97.8518, 2.21", "81.5116, 10.9247, -100.126, 0.37", "83.0905, 10.5095, -101.287, 0.37", "84.1452, 10.2352, -102.052, 1.84", "84.7956, 10.0718, -102.507, 1.84", "86.9502, 9.55725, -103.975, 0.29", "88.7371, 9.16086, -105.009, 2.28", "90.9227, 8.70687, -106.046, 0.66", "91.8386, 8.52293, -106.437, 1.4", "92.7243, 8.33708, -106.806, 1.77", "93.3262, 8.20746, -107.058, 0.81", "97.4604, 7.26367, -108.766, 0.29", "98.5335, 6.99846, -109.185, 1.92", "99.579, 6.72553, -109.626, 1.84", "102.051, 6.0322, -110.776, 0.29", "102.537, 5.87692, -111.028, 0.59", "103.033, 5.67576, -111.408, 0.59", "103.092, 5.64614, -111.477, 0.59", "103.894, 5.21663, -112.538, 0.15", "104.462, 4.90777, -113.376, 1.03", "104.899, 4.66821, -114.047, 1.62", "107.975, 3.02663, -119.13, 0.15", "109.201, 2.37891, -121.249, 2.28", "109.579, 2.18134, -121.916, 2.65", "110.846, 1.53364, -124.177, 0.22", "111.216, 1.34801, -124.828, 0.96", "113.538, 0.255614, -128.817, 0.15", "113.635, 0.216866, -128.987, 0.66", "113.926, 0.118543, -129.499, 0.66", "114.551, -0.0232078, -130.831, 0.22", "114.751, -0.0469522, -131.285, 0.59", "114.854, -0.0493389, -131.532, 0.59", "116.248, 0.00956818, -134.629, 0.22", "116.626, 0.0192935, -135.405, 1.11", "118.588, -0.0921123, -138.597, 0.22", "119.206, -0.152568, -139.479, 1.99", "119.598, -0.202561, -139.979, 1.33", "122.184, -0.654548, -142.92, 0.22", "123.435, -0.930424, -144.18, 2.87", "126.571, -1.72129, -147.205, 0.22", "127.635, -2.02834, -148.116, 1.47", "127.974, -2.1358, -148.414, 1.47", "129.519, -2.66899, -149.755, 0.22", "130.515, -3.05011, -150.606, 0.96", "130.847, -3.1794, -150.915, 0.59", "131.909, -3.57982, -152.098, 0.07", "132.891, -3.91279, -153.295, 1.33", "133.336, -4.05989, -153.877, 1.33", "134.571, -4.45837, -155.532, 0.37", "135.223, -4.6758, -156.411, 1.18", "136.666, -5.16322, -158.411, 0.22", "138.051, -5.63874, -160.361, 2.28", "139.906, -6.33014, -162.898, 0.15", "140.236, -6.46336, -163.367, 0.88", "141.202, -6.88529, -164.77, 0.22", "141.232, -6.89922, -164.812, 0.22", "141.715, -7.13401, -165.464, 1.47", "143.574, -8.03158, -167.987, 0.15", "144.477, -8.43489, -169.282, 0.74", "145.118, -8.69888, -170.219, 1.33", "145.819, -8.95243, -171.243, 2.36", "145.852, -8.96321, -171.295, 2.36", "147.477, -9.46814, -173.873, 0.29", "147.812, -9.5858, -174.497, 1.11", "148.623, -9.94432, -176.159, 0.22", "149.062, -10.2001, -177.335, 1.77", "149.743, -10.7213, -179.537, 0.29", "150.028, -10.9923, -180.591, 1.4", "150.947, -12.1043, -184.55, 0.22", "151.198, -12.4562, -185.78, 1.84", "151.819, -13.394, -189.235, 0.15", "152.028, -13.6706, -190.274, 1.11", "152.425, -14.0967, -191.934, 0.15", "152.64, -14.2829, -192.746, 0.96", "153.239, -14.6678, -194.547, 0.15", "154.163, -15.1108, -197.036, 2.06", "155.425, -15.4299, -199.851, 0.15", "155.616, -15.4512, -200.256, 0.52", "155.644, -15.452, -200.312, 0.52", "155.912, -15.4372, -200.797, 0.15", "156.996, -15.2773, -202.422, 2.36", "159.217, -14.8088, -205.481, 0.22", "159.53, -14.7266, -205.906, 0.96", "159.572, -14.7177, -205.962, 0.96", "160.143, -14.6774, -206.676, 1.18", "161.715, -14.76, -208.503, 0.22", "162.724, -14.9902, -209.614, 0.81", "163.657, -15.3446, -210.505, 2.21", "164.704, -15.8351, -211.45, 1.33", "166.788, -17.0608, -213.337, 0.22", "167.333, -17.4634, -213.879, 1.25", "168.957, -18.8851, -215.669, 0.22", "170.255, -20.0948, -217.211, 1.47", "170.714, -20.554, -217.867, 1.4", "172.203, -22.1072, -220.287, 0.22", "173.408, -23.4069, -222.525, 1.55", "174.612, -24.7085, -225.214, 0.22", "175.089, -25.2123, -226.43, 1.18", "176.018, -26.1267, -229.007, 0.22", "176.426, -26.479, -230.108, 2.14", "176.445, -26.4922, -230.157, 2.14", "178.273, -27.5334, -234.387, 0.22", "178.793, -27.7689, -235.44, 2.28", "179.983, -28.2312, -237.56, 0.22", "180.405, -28.3727, -238.222, 0.22", "181.479, -28.6876, -239.619, 1.33", "182.274, -28.8957, -240.366, 0.96", "184.141, -29.3738, -241.329, 0.22", "184.198, -29.3905, -241.351, 0.22", "185.855, -30.0065, -241.71, 0.22", "189.393, -31.655, -242.216, 1.11", "190.597, -32.3621, -242.189, 0.22", "191.825, -33.2437, -242.035, 0.22", "192.896, -34.2012, -241.76, 2.06", "194.338, -35.7576, -241.317, 0.37", "194.881, -36.5554, -241.104, 0.37", "196.042, -39.0314, -240.66, 0.22", "196.291, -39.7493, -240.531, 1.11", "196.757, -41.5051, -240.22, 0.22", "196.973, -42.6793, -240.054, 1.99", "197.23, -44.9645, -239.88, 0.22", "197.291, -45.8358, -239.883, 0.52", "197.336, -47.6261, -239.987, 0.22", "197.338, -48.0652, -240.007, 0.66", "197.287, -49.88, -240.088, 0.22", "197.285, -49.9308, -240.087, 0.22", "197.188, -51.2296, -240.029, 1.4", "196.949, -53.6807, -239.779, 0.22", "196.865, -54.354, -239.685, 1.18", "196.759, -55.2818, -239.548, 0.29", "196.739, -56.0177, -239.464, 1.03", "196.783, -56.801, -239.409, 0.29", "196.917, -57.6431, -239.412, 1.18", "197.245, -58.9998, -239.552, 0.22", "197.47, -59.8161, -239.685, 1.18", "198.303, -62.5304, -240.263, 0.22", "198.557, -63.2922, -240.444, 0.96", "199.075, -64.7504, -240.811, 0.22", "199.314, -65.4222, -240.982, 1.11", "199.829, -66.8855, -241.332, 0.22", "199.957, -67.3319, -241.432, 0.52", "200.169, -68.586, -241.662, 0.22", "200.259, -69.2804, -241.771, 0.96", "200.368, -70.5271, -241.903, 0.22", "200.428, -71.3981, -241.962, 1.18", "200.513, -72.7493, -241.969, 0.22", "200.521, -73.5389, -241.984, 1.18" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.10465, 11.1751, 15.593, 1.25", "-9.90063, 11.7827, 16.635, 1.25", "-10.1823, 11.9665, 16.9542, 1.25", "-10.5744, 12.1813, 17.3542, 1.11", "-11.3718, 12.5779, 18.1375, 0.74", "-11.7859, 12.7743, 18.5342, 0.88", "-12.2138, 12.9896, 18.9646, 1.25", "-12.4311, 13.0945, 19.1795, 1.55", "-12.9037, 13.3681, 19.7046, 1.84", "-13.4835, 13.7942, 20.4224, 1.84", "-13.8224, 14.1224, 20.9015, 1.84", "-14.2967, 14.8013, 21.8169, 1.25", "-14.4483, 15.1382, 22.2359, 1.25", "-14.6223, 15.8232, 23.0111, 0.81", "-14.6553, 16.3809, 23.5701, 0.81", "-14.5864, 17.0368, 24.1769, 1.11", "-14.3151, 17.9688, 25.1135, 0.81", "-14.1363, 18.3545, 25.5983, 0.88", "-13.8908, 18.8012, 26.2986, 0.96", "-13.6702, 19.1962, 27.0725, 1.18", "-13.4944, 19.5635, 27.9607, 1.4", "-13.2611, 20.2817, 30.2239, 2.06", "-13.2421, 20.8645, 32.6169, 2.28", "-13.3203, 21.0484, 33.6116, 1.84", "-13.5376, 21.2181, 34.884, 1.33", "-13.7929, 21.3069, 35.8272, 0.96", "-14.5711, 21.4352, 37.7655, 1.69", "-14.9473, 21.4682, 38.3976, 2.14", "-15.3463, 21.4958, 38.9206, 1.84", "-16.5252, 21.6007, 40.3026, 1.33", "-16.8961, 21.6351, 40.6762, 0.88", "-17.5134, 21.6914, 41.1771, 0.88", "-18.0942, 21.7558, 41.506, 0.81", "-18.5491, 21.836, 41.7292, 0.88", "-19.0561, 21.9663, 41.9213, 0.88", "-19.407, 22.0856, 41.9936, 0.88", "-19.468, 22.1163, 42.0087, 0.88", "-19.8974, 22.4105, 42.1465, 0.88", "-20.2843, 22.7417, 42.3143, 0.96", "-20.6103, 23.0842, 42.523, 1.03", "-20.946, 23.4969, 42.837, 1.18", "-21.345, 24.0247, 43.2916, 1.18", "-21.5851, 24.3591, 43.6005, 0.96", "-21.7814, 24.6508, 43.8952, 0.81", "-22.0889, 25.1435, 44.4074, 0.74", "-22.3653, 25.61, 44.9231, 0.74", "-22.5089, 25.8486, 45.1882, 0.66", "-22.7161, 26.1668, 45.5117, 0.66", "-22.7407, 26.201, 45.5422, 0.66", "-22.9539, 26.4659, 45.7497, 0.81", "-23.5765, 27.1762, 46.2262, 0.96", "-23.9508, 27.5888, 46.5094, 0.88", "-24.2156, 27.8606, 46.7092, 1.11", "-24.5984, 28.2229, 46.9972, 1.11", "-25.0729, 28.634, 47.3895, 1.18", "-25.3492, 28.8412, 47.6514, 1.18", "-25.9861, 29.2745, 48.3735, 1.25", "-26.3542, 29.5095, 48.861, 1.25", "-26.6263, 29.6742, 49.2899, 1.25", "-27.1986, 29.9829, 50.2799, 1.11", "-27.7212, 30.2288, 51.2144, 1.11", "-28.256, 30.4554, 52.2112, 0.81", "-28.5338, 30.5767, 52.7409, 0.81", "-29.0537, 30.8337, 53.7636, 1.03", "-29.3842, 31.0139, 54.3949, 1.33", "-29.5599, 31.1235, 54.7035, 1.33", "-29.9529, 31.4144, 55.3277, 0.74", "-30.4918, 31.8649, 56.0375, 0.44", "-30.6663, 32.0469, 56.2213, 0.44", "-30.7009, 32.0901, 56.2447, 0.44", "-30.8748, 32.3394, 56.3345, 0.66", "-31.0464, 32.5971, 56.3924, 0.88", "-31.3343, 33.0364, 56.4775, 1.11", "-31.7088, 33.5857, 56.7245, 1.11", "-31.9746, 33.917, 56.9939, 0.66", "-32.0069, 33.9498, 57.034, 0.66", "-32.2843, 34.1634, 57.4285, 0.74", "-32.7883, 34.4346, 58.1997, 0.74", "-33.4814, 34.6796, 59.4073, 0.74", "-33.8033, 34.7399, 59.9702, 1.11", "-34.014, 34.7667, 60.3176, 1.33", "-34.2812, 34.7939, 60.715, 1.03", "-34.6039, 34.8148, 61.1456, 0.88", "-35.5093, 34.8783, 62.1747, 1.03", "-35.8795, 34.9201, 62.5452, 1.33", "-36.5771, 35.0346, 63.2267, 1.18", "-37.2489, 35.1577, 63.8321, 0.74", "-37.4633, 35.2058, 64.02, 0.74", "-37.9527, 35.327, 64.4181, 1.03", "-38.3767, 35.4507, 64.7552, 1.03", "-38.6365, 35.545, 64.9875, 1.03", "-39.043, 35.7184, 65.4114, 0.81", "-39.833, 36.1159, 66.3346, 0.74", "-40.1032, 36.2768, 66.7012, 0.74", "-40.6009, 36.6197, 67.4597, 0.74", "-40.8711, 36.8509, 67.9433, 0.74", "-41.2027, 37.2171, 68.6484, 0.81", "-41.3373, 37.4423, 69.0351, 1.03", "-41.5284, 38.0559, 69.9144, 0.29", "-41.5325, 38.1281, 70.0028, 0.44", "-41.4391, 38.6187, 70.4863, 0.44", "-41.3058, 38.9737, 70.7762, 0.59", "-41.0757, 39.4547, 71.0948, 0.59", "-40.8795, 39.8621, 71.3623, 0.59", "-40.8576, 39.9111, 71.3921, 0.59", "-40.6957, 40.4319, 71.7552, 0.52", "-40.7006, 40.4861, 71.8021, 0.52", "-40.8774, 40.7725, 72.1082, 0.52", "-41.2678, 41.1112, 72.6081, 0.52", "-41.2971, 41.1357, 72.6442, 0.52", "-41.4602, 41.2852, 72.8344, 0.44", "-41.7908, 41.6047, 73.1787, 0.44", "-41.9451, 41.7659, 73.3287, 0.44", "-42.8555, 42.8434, 74.2349, 1.99", "-43.1237, 43.2194, 74.509, 2.14", "-43.3706, 43.6457, 74.7962, 2.14", "-43.514, 43.9527, 74.9936, 1.33", "-43.6369, 44.2841, 75.1931, 0.81", "-43.8687, 44.9965, 75.5781, 0.37", "-43.9481, 45.2731, 75.712, 0.15", "-44.0769, 45.6843, 75.9646, 0.29", "-44.2232, 46.2026, 76.3104, 0.44", "-44.2367, 46.2587, 76.3526, 0.44", "-44.3008, 46.5134, 76.549, 0.44", "-44.4332, 47.0376, 76.9591, 0.59", "-44.5197, 47.3788, 77.2382, 0.88", "-44.6093, 47.7948, 77.5639, 0.88", "-44.6962, 48.4109, 78.024, 0.88", "-44.7158, 48.9359, 78.4339, 0.59", "-44.7083, 49.4815, 78.8673, 0.59", "-44.7045, 49.5318, 78.9057, 0.59", "-44.6588, 49.8445, 79.1478, 0.59", "-44.6036, 50.0473, 79.3142, 0.66", "-44.2468, 50.7268, 79.7391, 0.66", "-48.0926, 54.7126, 86.5634, 0.66", "-50.9233, 59.6706, 93.2055, 0.66", "-53.0569, 64.332, 100.348, 0.66", "-55.4283, 68.0198, 108.016, 0.66", "-55.7419, 71.8292, 116.008, 0.66", "-55.5137, 74.0336, 124.627, 0.66", "-55.2097, 74.9037, 133.485, 0.66", "-55.7522, 75.3331, 142.362, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-9.10465, 11.1751, 15.593, 1.25", "-10.5486, 10.7468, 17.7369, 1.25", "-11.1114, 10.593, 18.572, 1.25", "-11.7816, 10.4128, 19.6015, 1.25", "-12.2956, 10.2695, 20.7069, 1.62", "-13.1119, 10.0807, 22.6989, 1.62", "-13.359, 10.0302, 23.3436, 1.84", "-13.9839, 9.98116, 25.3071, 1.84", "-14.4917, 10.0037, 27.2047, 1.84", "-15.6634, 10.2456, 32.1387, 1.84", "-15.8145, 10.3032, 32.8311, 1.55", "-15.8274, 10.3108, 32.8938, 1.55", "-16.3743, 10.7648, 35.6937, 1.4", "-16.6308, 11.033, 36.9454, 1.47", "-16.9449, 11.3347, 38.0805, 0.96", "-17.028, 11.3905, 38.2605, 1.18", "-17.237, 11.4822, 38.6155, 1.18", "-18.0738, 11.7178, 39.6678, 0.59", "-19.2032, 11.8452, 40.5896, 0.96", "-19.9548, 11.8522, 41.0588, 0.96", "-20.5699, 11.8127, 41.3636, 1.18", "-21.8421, 11.6881, 41.9441, 1.18", "-22.6639, 11.581, 42.2958, 0.88", "-23.3116, 11.488, 42.5427, 1.11", "-24.1698, 11.3765, 42.9498, 1.69", "-24.9836, 11.2805, 43.4474, 1.69", "-26.1276, 11.1519, 44.2639, 1.25", "-26.9698, 11.0607, 44.9439, 0.88", "-27.2004, 11.0334, 45.1336, 0.88", "-29.004, 10.8007, 46.5366, 0.37", "-29.4506, 10.7265, 46.8541, 1.03", "-30.2334, 10.5599, 47.3583, 1.25", "-31.1154, 10.3269, 47.8689, 1.55", "-32.0441, 10.0538, 48.4033, 1.77", "-32.9095, 9.75266, 48.9609, 1.99", "-33.7334, 9.40551, 49.509, 1.03", "-34.3922, 9.07465, 50.1846, 1.03", "-35.1138, 8.62109, 51.2625, 1.03", "-35.4917, 8.32664, 52.0177, 1.4", "-36.0932, 7.81286, 53.517, 0.81", "-36.3318, 7.60216, 54.1884, 0.52", "-37.2285, 6.83045, 56.8715, 0.88", "-37.5416, 6.56965, 57.8179, 1.11", "-37.8143, 6.36118, 58.5653, 1.18", "-38.1279, 6.1543, 59.2969, 1.33", "-38.6558, 5.88307, 60.3025, 1.55", "-39.4473, 5.55907, 61.6104, 1.03", "-40.0828, 5.34245, 62.4405, 1.25", "-40.6347, 5.19688, 63.1422, 0.96", "-41.3588, 5.04169, 64.0449, 0.74", "-41.7675, 4.96782, 64.5406, 0.74", "-42.6069, 4.88982, 65.4915, 0.74", "-42.9405, 4.8898, 65.8283, 0.66", "-43.9096, 4.95863, 66.7436, 0.66", "-44.2422, 5.0048, 67.0553, 0.66", "-44.821, 5.10896, 67.5575, 0.66", "-45.3183, 5.18985, 67.9934, 0.96", "-45.607, 5.22115, 68.251, 0.81", "-45.9636, 5.25398, 68.5782, 0.81", "-46.4111, 5.28583, 68.9803, 0.81", "-46.7998, 5.30262, 69.3614, 0.81", "-47.5436, 5.2994, 70.1862, 0.15", "-48.1139, 5.24359, 70.9459, 1.11", "-53.2918, 4.40997, 78.5179, 1.11", "-58.2988, 2.95668, 86.1059, 1.11", "-64.465, -0.471259, 91.9665, 1.11", "-70.4306, -3.49393, 98.2577, 1.11", "-76.9544, -6.04299, 104.214, 1.11", "-83.5184, -9.22722, 109.788, 1.11", "-89.5021, -13.2562, 115.418, 1.11", "-95.8344, -17.3603, 120.594, 1.11", "-101.541, -21.8261, 126.15, 1.11", "-106.408, -26.571, 132.218, 1.11", "-112.408, -30.2823, 138.064, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.22658, -27.5549, 26.2729, 3.02", "-3.87682, -30.0747, 26.8705, 3.02", "-4.68525, -33.2075, 27.6134, 2.8" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-3.22658, -27.5549, 26.2729, 0.96", "-5.0987, -27.2876, 29.2549, 0.96", "-5.60552, -27.3147, 30.0793, 0.59", "-5.96174, -27.3717, 30.6326, 0.59", "-6.24395, -27.4406, 31.0783, 0.59", "-7.47895, -27.7789, 32.9242, 0.96", "-8.46225, -28.0388, 34.272, 1.62", "-9.5281, -28.3904, 35.5245, 1.4", "-10.0039, -28.5438, 36.0197, 0.81", "-11.4214, -28.9124, 37.2351, 0.96", "-12.2634, -29.0593, 37.8919, 1.47", "-13.211, -29.138, 38.5185, 1.47", "-14.1525, -29.1505, 39.1342, 0.96", "-15.4216, -29.136, 40.0828, 1.11", "-16.575, -29.0925, 41.3055, 1.92", "-17.913, -29.123, 43.417, 1.03", "-18.2374, -29.1769, 44.1925, 0.59", "-18.5965, -29.2929, 45.3584, 1.11", "-19.1423, -29.6138, 47.8333, 1.62", "-19.594, -30.1431, 51.5128, 1.62", "-19.7615, -30.618, 54.6443, 0.88", "-19.7579, -31.0518, 57.2454, 1.4", "-19.7548, -31.0625, 57.3057, 1.4", "-19.6573, -31.2564, 58.2278, 1.4", "-19.004, -32.3166, 61.9303, 0.59", "-18.9345, -32.4305, 62.2099, 0.59", "-18.7637, -32.6973, 62.8803, 0.59", "-18.6154, -32.9228, 63.3997, 0.59", "-18.2152, -33.6145, 64.8834, 0.52", "-17.9234, -34.3046, 66.149, 0.15", "-17.7369, -35.2126, 67.1631, 1.18", "-17.592, -36.4763, 68.6734, 1.84" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-197.994, 342.44, -211.752, 0.15", "-198.494, 344.754, -214.646, 0.15", "-198.581, 345.158, -215.151, 0.88", "-198.858, 346.439, -216.753, 0.07", "-198.911, 346.685, -217.061, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-197.994, 342.44, -211.752, 0.37", "-197.757, 343.344, -212.835, 0.37", "-197.685, 343.616, -213.162, 0.37", "-197.467, 344.448, -214.158, 0.15", "-197.124, 345.754, -215.723, 0.52" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "89.2964, 102.71, 79.8453, 0.15", "88.4423, 102.942, 81.5834, 0.15", "88.3015, 102.967, 81.7941, 0.74", "87.0943, 103.109, 83.1387, 0.52", "86.4402, 103.139, 83.6319, 0.22", "86.1169, 103.141, 83.8069, 0.74", "85.3139, 103.145, 84.2415, 0.15", "85.0222, 103.115, 84.2854, 0.37", "84.4852, 103.053, 84.281, 0.37", "83.8441, 102.99, 84.1089, 0.15", "83.5739, 102.954, 84.0232, 1.03" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "89.2964, 102.71, 79.8453, 0.15", "90.685, 103.923, 81.3922, 0.15", "91.0418, 104.193, 81.7169, 0.52", "91.8803, 104.65, 82.3421, 0.22", "93.5079, 105.339, 83.3904, 0.81", "94.3318, 105.649, 83.8626, 1.11", "95.6234, 106.107, 84.5528, 0.37", "96.429, 106.359, 84.9003, 0.37", "97.9435, 106.806, 85.4469, 0.37", "99.0634, 107.138, 85.7505, 0.52", "99.742, 107.395, 85.8605, 0.66", "99.8432, 107.454, 85.8787, 0.66", "100.493, 108.232, 86.0239, 0.22", "100.713, 108.822, 86.1103, 0.52", "100.785, 109.381, 86.1371, 0.96", "100.802, 110.203, 86.1354, 0.52", "100.794, 111.507, 86.0758, 0.22", "100.793, 111.667, 86.0632, 0.52", "100.787, 111.815, 86.0486, 0.44", "100.724, 113.658, 85.8198, 0.15", "100.725, 114.282, 85.7122, 0.52", "100.797, 115.146, 85.5036, 0.15", "100.845, 115.378, 85.4348, 0.44", "107.988, 121.772, 90.5423, 0.44", "114.657, 127.698, 96.7952, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.68525, -33.2075, 27.6134, 0.81", "-4.11962, -33.9568, 27.3309, 0.81", "-3.70327, -34.6585, 26.9939, 0.81", "-3.2959, -35.5161, 26.5749, 0.52", "-2.94407, -36.4621, 26.064, 0.59", "-2.65821, -37.3827, 25.4178, 0.74", "-2.34316, -38.4797, 24.6299, 0.52", "-2.06544, -39.6601, 23.8052, 0.52", "-1.91987, -40.4646, 23.3129, 1.11", "-1.70812, -42.0135, 22.4862, 1.84", "-1.35637, -45.1072, 21.0744, 0.66", "-1.18516, -46.586, 20.4925, 1.03", "-0.977232, -48.0798, 20.0343, 1.11", "-0.630411, -50.1025, 19.594, 2.28", "-0.500338, -50.7531, 19.5047, 2.21", "-0.330769, -51.449, 19.5005, 2.06", "-0.12765, -52.1035, 19.5863, 2.06", "0.31772, -53.1777, 19.7108, 0.96", "0.83572, -54.0833, 19.7837, 0.59", "1.15377, -54.5112, 19.8205, 0.59", "1.8488, -55.3439, 19.9204, 0.59", "2.47389, -56.093, 20.1572, 0.59", "2.71674, -56.417, 20.3025, 0.59", "3.1525, -57.1146, 20.633, 0.59", "3.1977, -57.2011, 20.6722, 0.59", "3.5338, -57.9595, 20.9961, 0.59", "4.35412, -60.2, 21.9614, 1.4", "4.88391, -61.8387, 22.6866, 1.69", "5.33407, -63.2359, 23.3511, 1.84", "5.6336, -64.1462, 23.8497, 1.84", "5.65985, -64.224, 23.8949, 1.84", "6.1023, -65.4836, 24.6241, 1.25", "6.67753, -67.0131, 25.4388, 0.52", "6.99465, -67.8154, 25.8899, 0.52", "7.59301, -69.2324, 26.607, 0.52", "7.92595, -70.0223, 26.9283, 0.59", "8.30301, -70.9007, 27.1918, 0.81", "8.78269, -72.0121, 27.3699, 0.52", "9.13424, -72.8436, 27.4078, 0.52", "9.64961, -74.1056, 27.4318, 0.96", "9.96474, -74.8863, 27.4349, 1.33", "10.2461, -75.5696, 27.4898, 1.77", "10.564, -76.3467, 27.6179, 1.99", "10.7964, -76.928, 27.7496, 1.92", "11.343, -78.3264, 28.0969, 1.47", "11.5522, -78.8586, 28.2364, 1.25", "11.783, -79.4022, 28.3484, 1.03", "11.9963, -79.8749, 28.4167, 0.88", "12.2238, -80.3349, 28.4491, 0.74", "12.734, -81.3393, 28.444, 0.29", "13.2722, -82.3438, 28.4125, 0.29", "13.7238, -83.1586, 28.408, 0.44", "13.9598, -83.5812, 28.4142, 0.74", "14.5134, -84.5738, 28.4826, 0.96", "15.0536, -85.5306, 28.5968, 1.92", "15.5729, -86.4656, 28.7504, 2.43", "15.9776, -87.1824, 28.8789, 2.5", "16.4033, -87.924, 29.0247, 2.06", "17.0894, -89.0767, 29.2555, 0.74", "17.4028, -89.5764, 29.3555, 0.52", "17.8362, -90.2234, 29.4676, 0.29", "18.2405, -90.8163, 29.5532, 0.29", "18.674, -91.4411, 29.6845, 1.03", "19.2453, -92.238, 29.8961, 1.77", "19.8441, -93.0312, 30.1722, 1.77", "20.1711, -93.4523, 30.3576, 1.4", "20.7223, -94.1542, 30.7152, 0.96", "21.4081, -95.0443, 31.1981, 0.44", "21.4535, -95.1038, 31.2312, 0.44", "22.1653, -96.051, 31.8, 0.22", "22.5548, -96.5798, 32.1216, 0.74", "22.9739, -97.1725, 32.4475, 1.11", "23.2308, -97.5732, 32.6219, 1.18", "23.5419, -98.1509, 32.8344, 1.18", "23.7953, -98.7065, 33.0283, 1.03", "23.9476, -99.0955, 33.1494, 0.81", "24.2545, -99.8789, 33.4095, 0.59", "24.7827, -101.15, 33.9061, 0.15", "25.0839, -101.814, 34.1792, 0.15", "25.3025, -102.274, 34.3614, 0.44", "25.7605, -103.166, 34.7044, 0.44", "26.6209, -104.742, 35.3107, 0.29", "27.1313, -105.637, 35.6544, 1.18", "27.6537, -106.536, 35.9728, 2.21", "28.3317, -107.677, 36.3376, 2.21", "28.8602, -108.579, 36.6054, 1.33", "29.6719, -109.961, 36.965, 0.52", "29.7175, -110.039, 36.985, 0.52", "30.4282, -111.263, 37.3091, 0.52", "30.6636, -111.672, 37.4526, 0.52", "31.079, -112.371, 37.7656, 0.52", "31.6093, -113.166, 38.1756, 0.52", "32.5397, -114.391, 38.9424, 1.55", "33.1139, -115.071, 39.4134, 2.43", "34.0886, -116.105, 40.1915, 2.06", "35.1139, -117.112, 40.9126, 0.59", "36.4268, -118.296, 41.7348, 0.52", "37.35, -119.062, 42.2324, 0.81", "38.0253, -119.573, 42.5209, 1.33", "38.915, -120.219, 42.8662, 1.03", "40.4927, -121.339, 43.3646, 0.22", "40.9014, -121.656, 43.4965, 0.88", "41.2987, -122.021, 43.6382, 1.11", "41.6262, -122.37, 43.7599, 0.96", "42.2896, -123.211, 44.0577, 0.37", "42.7788, -123.923, 44.3093, 0.15", "43.6348, -125.317, 44.7892, 1.99", "43.9389, -125.844, 44.9424, 2.43", "44.586, -126.991, 45.2339, 2.5", "45.9192, -129.385, 45.7703, 0.22", "46.1657, -129.823, 45.8505, 0.81", "46.5554, -130.491, 45.9581, 0.81", "47.7108, -132.365, 46.2104, 0.22", "48.2903, -133.266, 46.3312, 1.4", "48.3287, -133.324, 46.3387, 1.4", "49.0971, -134.427, 46.513, 1.77", "50.1628, -135.914, 46.7809, 0.37", "50.6441, -136.547, 46.9097, 0.37", "51.1001, -137.142, 47.0413, 1.11", "51.1473, -137.206, 47.058, 1.11", "51.9579, -138.317, 47.3731, 0.74", "52.4716, -139.048, 47.6322, 0.52", "53.1839, -140.096, 48.051, 0.29", "53.4447, -140.483, 48.2127, 0.29", "54.1512, -141.556, 48.6753, 1.11", "55.1533, -143.041, 49.3023, 0.22", "55.6961, -143.83, 49.658, 1.11", "56.0153, -144.29, 49.8848, 1.33", "56.248, -144.629, 50.0608, 1.18", "57.1963, -145.96, 50.7387, 0.37", "58.0278, -147.12, 51.2965, 0.37", "58.9556, -148.416, 51.9044, 2.14", "59.2653, -148.835, 52.0816, 2.14", "60.056, -149.889, 52.5058, 0.44", "60.9187, -151.067, 52.9373, 0.44", "61.301, -151.614, 53.103, 0.74", "61.6643, -152.167, 53.2561, 0.74", "62.1011, -152.844, 53.4334, 0.22", "62.3866, -153.29, 53.5575, 0.22", "62.6686, -153.733, 53.7079, 0.22", "62.9371, -154.151, 53.8754, 0.22", "63.9686, -155.74, 54.6046, 2.95", "65.0288, -157.337, 55.3978, 0.29", "65.8015, -158.463, 55.986, 0.29", "66.4955, -159.426, 56.5441, 1.03", "66.9944, -160.081, 56.9592, 1.25", "67.8801, -161.227, 57.7138, 0.15", "68.1797, -161.605, 57.9562, 0.37", "68.5324, -162.044, 58.2331, 0.37", "69.6507, -163.407, 59.0534, 0.15", "70.2566, -164.142, 59.4445, 1.55", "70.8005, -164.796, 59.7704, 1.11", "71.8272, -166.006, 60.353, 0.15", "72.0971, -166.324, 60.5025, 0.15", "72.493, -166.801, 60.7334, 0.29", "72.5561, -166.878, 60.768, 0.29", "72.9504, -167.355, 61.0037, 0.29", "73.6722, -168.214, 61.4919, 0.81", "74.2016, -168.841, 61.8791, 1.69", "75.5227, -170.384, 62.8419, 0.15", "75.7828, -170.695, 63.0296, 0.29", "76.0936, -171.076, 63.249, 0.29", "76.6414, -171.765, 63.6167, 0.52", "76.875, -172.069, 63.7505, 0.96", "76.9189, -172.13, 63.7816, 0.96", "77.2156, -172.581, 64.0059, 1.18", "78.0413, -173.918, 64.6479, 0.29", "78.2435, -174.256, 64.8232, 0.44", "78.7109, -175.017, 65.2162, 0.22", "79.6171, -176.423, 65.927, 0.44", "80.4093, -177.605, 66.5012, 2.5", "81.2002, -178.764, 67.0341, 0.88", "81.9744, -179.869, 67.4984, 0.52", "82.8874, -181.153, 68.0102, 0.52", "83.5537, -182.056, 68.3379, 0.22", "84.0393, -182.7, 68.5255, 1.18", "84.4496, -183.23, 68.6783, 1.03", "84.9057, -183.813, 68.8296, 0.52", "85.6755, -184.787, 69.0143, 0.15", "86.168, -185.403, 69.1312, 0.81", "86.5621, -185.886, 69.2189, 0.66", "86.9684, -186.384, 69.3019, 0.22", "87.373, -186.854, 69.3766, 0.22", "88.0368, -187.658, 69.4864, 1.4", "88.4188, -188.145, 69.5615, 1.92", "88.7407, -188.579, 69.6518, 1.99", "90.6213, -191.184, 70.2996, 0.29", "91.0358, -191.767, 70.4701, 0.29", "91.812, -192.83, 70.8217, 0.29", "92.5131, -193.728, 71.1498, 0.29", "93.3111, -194.686, 71.5446, 0.29", "93.9226, -195.366, 71.8558, 1.62", "94.6603, -196.125, 72.227, 2.21", "95.6569, -197.124, 72.6929, 0.44", "96.6455, -198.041, 73.154, 0.44", "97.368, -198.713, 73.481, 0.88", "97.7381, -199.078, 73.6549, 0.52", "98.2917, -199.694, 73.9414, 0.15", "98.5666, -200.045, 74.0759, 0.44", "99.4841, -201.366, 74.4984, 0.15", "99.9626, -202.098, 74.6866, 1.55", "100.314, -202.635, 74.808, 1.69", "100.756, -203.283, 74.9327, 1.69", "101.731, -204.656, 75.1787, 0.52", "102.206, -205.308, 75.268, 0.81", "102.598, -205.846, 75.3101, 0.88", "102.939, -206.308, 75.3541, 0.88", "103.958, -207.745, 75.5291, 0.15", "104.404, -208.449, 75.6479, 1.03", "104.698, -208.985, 75.761, 1.47", "104.915, -209.428, 75.8536, 1.4", "105.198, -210.073, 75.9793, 0.29", "105.699, -211.31, 76.2241, 0.29", "106.077, -212.354, 76.4611, 0.15", "106.173, -212.6, 76.5154, 0.37", "106.34, -212.994, 76.6041, 0.37", "106.804, -214.018, 76.8272, 0.37", "107.244, -214.947, 77.0212, 1.18", "107.48, -215.418, 77.1124, 1.62", "108.413, -217.197, 77.3979, 0.15", "108.672, -217.687, 77.4697, 0.44", "109.159, -218.596, 77.5911, 0.44", "109.619, -219.45, 77.6905, 1.4", "110.122, -220.379, 77.7739, 2.14", "110.84, -221.747, 77.8804, 0.44", "111.116, -222.301, 77.917, 0.44", "111.152, -222.374, 77.9221, 0.44", "111.239, -222.549, 77.9354, 0.44", "111.279, -222.633, 77.9419, 0.44", "111.802, -223.764, 78.0445, 0.15", "111.926, -224.041, 78.0732, 0.29", "112.133, -224.559, 78.1803, 0.44", "112.3, -225.004, 78.2954, 0.81", "112.468, -225.464, 78.4318, 0.74", "112.627, -225.908, 78.5759, 0.52", "112.737, -226.219, 78.6859, 0.52", "113.309, -227.893, 79.272, 0.29", "113.433, -228.276, 79.4198, 0.37", "113.456, -228.348, 79.4485, 0.37", "113.637, -228.883, 79.6605, 0.59", "113.786, -229.28, 79.7981, 0.81", "113.889, -229.517, 79.8639, 0.66", "114.204, -230.17, 79.9872, 0.37", "114.448, -230.714, 80.0727, 0.37", "114.659, -231.202, 80.138, 0.37", "115.145, -232.346, 80.2713, 1.69", "115.424, -233.021, 80.3363, 1.55", "115.614, -233.49, 80.3715, 1.47", "116.241, -235.052, 80.4191, 0.22", "116.549, -235.777, 80.4322, 0.37", "116.663, -236.017, 80.4338, 0.37", "117.1, -236.807, 80.4331, 0.52", "117.331, -237.164, 80.4343, 0.74", "118.065, -238.129, 80.4377, 0.37", "118.593, -238.725, 80.4445, 0.37", "119.186, -239.366, 80.4789, 0.37", "119.769, -239.984, 80.531, 0.37", "121.093, -241.362, 80.6871, 1.84", "121.645, -241.941, 80.7684, 2.14", "122.591, -242.964, 80.9135, 0.37", "123.328, -243.812, 81.0168, 0.22", "123.497, -244.02, 81.0384, 0.37", "123.83, -244.468, 81.0996, 0.44", "124.197, -244.989, 81.1929, 0.44", "124.685, -245.697, 81.3336, 0.44", "124.739, -245.774, 81.3488, 0.44", "124.932, -246.033, 81.3995, 0.44", "125.877, -247.277, 81.6606, 1.84", "126.438, -247.981, 81.7842, 1.69", "128.061, -249.907, 82.0902, 0.44", "128.665, -250.601, 82.1917, 1.18", "128.987, -250.959, 82.2294, 1.18", "129.043, -251.018, 82.2325, 1.18", "130.563, -252.366, 82.1577, 0.22", "130.875, -252.585, 82.1704, 0.22", "131.359, -252.802, 82.2378, 0.15", "131.67, -252.858, 82.4692, 0.29", "132.165, -252.798, 83.1845, 0.29", "132.94, -252.496, 84.7534, 0.29", "133.616, -251.933, 86.9086, 1.92", "133.778, -251.702, 87.6911, 1.92", "134.219, -250.054, 92.742, 0.15", "134.19, -249.821, 93.4091, 0.81", "134.14, -249.726, 93.6646, 0.81", "133.696, -249.264, 94.8845, 0.15", "133.566, -249.179, 95.1093, 0.37", "132.878, -248.87, 95.9944, 0.37", "132.229, -248.687, 96.5047, 0.37", "131.758, -248.598, 96.8877, 0.37", "131.693, -248.59, 96.9414, 0.37", "130.827, -248.523, 97.6666, 0.37", "129.974, -248.514, 98.3557, 0.29", "129.603, -248.55, 98.6259, 0.29", "129.327, -248.618, 98.8091, 0.29", "129.11, -248.706, 98.9353, 0.29", "129.05, -248.741, 98.9548, 0.29", "128.763, -248.969, 98.9578, 0.29", "128.693, -249.032, 98.9478, 0.29", "128.165, -249.522, 98.8612, 0.22", "127.77, -249.937, 98.7934, 0.22", "127.241, -250.632, 98.697, 0.37", "127.039, -250.948, 98.6573, 0.44", "126.79, -251.448, 98.6049, 0.44", "126.765, -251.525, 98.5887, 0.44", "126.666, -252.426, 98.3146, 0.37", "126.732, -253.125, 98.0802, 0.37", "126.775, -253.305, 98.0143, 0.37", "126.921, -253.833, 97.8305, 0.22", "127.378, -255.337, 97.3116, 0.29", "127.458, -255.644, 97.2085, 0.44", "127.666, -256.539, 96.9068, 0.66", "127.828, -257.589, 96.599, 0.81", "127.825, -258.611, 96.3828, 0.52", "127.805, -258.69, 96.3763, 0.52", "127.374, -259.437, 96.3474, 0.37", "127.316, -259.512, 96.3413, 0.37", "126.823, -260.06, 96.2811, 0.15", "125.95, -260.913, 96.1907, 1.84", "125.098, -261.697, 96.1154, 2.21", "123.614, -263.056, 95.9776, 0.52", "122.61, -263.977, 95.8768, 1.62", "122.065, -264.48, 95.8153, 2.28", "120.743, -265.727, 95.6326, 1.18", "120.211, -266.243, 95.5546, 1.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.68525, -33.2075, 27.6134, 0.96", "-5.21066, -35.1187, 26.8731, 0.96", "-5.48774, -36.1699, 26.4022, 1.25", "-5.8461, -37.5304, 25.7373, 1.25", "-6.19776, -38.8623, 25.0679, 1.25", "-6.51417, -40.1421, 24.4003, 1.55", "-6.76677, -41.2135, 23.8626, 1.47", "-6.95079, -42.2994, 23.3013, 1.18", "-7.13736, -43.4869, 22.8047, 1.18", "-7.21104, -44.0401, 22.6643, 1.25", "-7.32914, -45.1992, 22.7472, 1.03", "-7.37633, -46.3762, 23.1975, 1.11", "-7.37924, -47.1111, 23.686, 1.11", "-7.29904, -48.791, 25.0482, 1.92", "-7.20099, -49.8345, 25.95, 1.92", "-6.90432, -52.1284, 27.857, 1.99", "-6.74391, -53.1413, 28.6625, 0.81", "-6.38724, -55.0585, 30.0154, 1.25", "-6.15978, -56.2719, 30.7091, 1.55", "-5.87288, -57.7891, 31.2739, 1.69", "-5.62199, -59.3033, 31.5704, 1.25", "-5.4922, -60.2328, 31.5628, 0.96", "-5.4069, -61.0946, 31.4533, 1.11", "-5.31042, -62.2287, 31.1912, 1.18", "-5.25967, -63.2672, 30.937, 1.03", "-5.22898, -64.2668, 30.7031, 0.88", "-5.19018, -65.2478, 30.5391, 0.96", "-5.11518, -66.5062, 30.4164, 1.4", "-4.99669, -68.0004, 30.4542, 1.4", "-4.86913, -69.2179, 30.6059, 1.55", "-4.80428, -70.0696, 30.815, 1.47", "-4.78336, -71.6358, 31.3193, 1.92", "-4.85965, -72.7453, 31.7086, 1.92", "-5.18659, -74.5786, 32.4051, 2.06", "-5.34345, -75.1578, 32.6305, 1.84", "-6.1362, -77.1264, 33.4239, 1.25", "-6.829, -78.4343, 33.919, 1.25", "-7.67525, -79.7132, 34.3213, 1.25", "-8.50098, -80.8533, 34.6247, 1.33", "-8.54676, -80.9147, 34.6399, 1.33", "-9.76827, -82.6774, 35.0967, 1.33", "-10.4832, -83.8453, 35.4528, 1.47", "-11.1842, -85.2738, 36.0069, 1.25", "-11.7227, -86.7594, 36.7993, 1.4", "-12.0017, -87.8725, 37.489, 1.33", "-12.1483, -88.979, 38.2593, 1.18", "-12.1142, -90.0998, 39.1855, 1.55", "-11.9917, -90.9811, 40.1111, 2.06", "-11.5583, -92.5112, 42.0542, 1.47", "-11.5361, -92.5634, 42.1343, 1.47", "-11.2661, -93.0668, 43.081, 1.18", "-10.8286, -93.7473, 44.5325, 0.81", "-10.2618, -94.4869, 46.1462, 1.11", "-9.91378, -94.9038, 47.0774, 1.11", "-9.35776, -95.4631, 48.2867, 1.25", "-8.54411, -96.2233, 49.8623, 1.18", "-8.02482, -96.679, 50.7455, 1.03", "-7.55513, -97.0732, 51.3529, 0.96", "-7.51635, -97.1068, 51.3928, 0.96", "-6.85665, -97.7316, 51.8907, 1.25", "-6.22017, -98.3817, 52.2927, 0.96", "-5.61588, -99.0924, 52.7793, 0.96", "-4.9723, -99.9688, 53.4729, 0.81", "-4.94719, -100.013, 53.5129, 0.81", "-4.29558, -101.415, 54.8166, 0.59", "-3.76647, -102.821, 56.1449, 1.18", "-3.0768, -104.79, 57.9263, 1.99", "-2.78314, -105.603, 58.6167, 1.47", "-2.15574, -107.326, 60.0203, 0.66", "-1.75383, -108.354, 60.7843, 0.66", "-1.40565, -109.14, 61.2626, 0.66", "-0.68132, -110.382, 61.6884, 0.96", "0.0341006, -111.352, 61.8397, 1.47", "0.0840732, -111.412, 61.8444, 1.47", "0.940869, -112.348, 61.8886, 1.69", "1.90564, -113.526, 62.0839, 1.18", "2.55261, -114.547, 62.4273, 0.74", "3.02662, -115.566, 62.9393, 0.37", "3.04877, -115.638, 62.9799, 0.37", "3.26731, -116.946, 63.7802, 0.37", "3.3234, -118.573, 64.824, 2.14", "3.26964, -119.919, 65.7073, 1.4", "3.26564, -119.992, 65.7532, 1.4", "3.24372, -121.057, 66.3846, 0.96", "3.30031, -122.332, 67.0903, 0.81", "3.43355, -123.185, 67.5431, 1.33", "3.84612, -124.53, 68.2893, 0.96", "4.22703, -125.406, 68.8071, 0.88", "4.62432, -126.097, 69.2698, 1.03", "4.67791, -126.169, 69.3288, 1.03", "5.41507, -127.018, 70.0804, 1.03", "6.00825, -127.645, 70.6905, 1.03", "6.05213, -127.689, 70.7353, 1.03", "6.63453, -128.278, 71.3529, 1.47", "7.88017, -129.652, 72.7574, 2.58", "8.23395, -130.075, 73.1639, 2.58" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-17.592, -36.4763, 68.6734, 0.74", "-18.2585, -36.5525, 72.469, 0.74", "-18.4523, -36.5856, 73.429, 0.37", "-18.9397, -36.6767, 75.5043, 0.81", "-19.8013, -36.7864, 78.5585, 0.74", "-20.6715, -36.8733, 81.366, 0.74", "-21.1341, -36.9054, 82.7354, 0.52", "-21.5844, -36.9128, 83.7602, 0.52", "-22.4012, -36.8574, 85.3094, 0.66", "-23.2586, -36.7962, 86.4777, 0.59", "-23.3181, -36.7959, 86.5264, 0.59", "-23.872, -36.8267, 86.7688, 0.59", "-25.0738, -36.9912, 87.0908, 0.37", "-25.7622, -37.1705, 87.196, 0.37", "-26.6563, -37.5457, 87.2506, 0.37", "-27.7874, -38.1615, 87.3127, 0.22", "-28.6668, -38.6768, 87.3661, 0.22", "-29.5822, -39.3057, 87.4767, 0.22", "-29.9418, -39.6121, 87.5348, 0.22", "-30.3315, -39.9712, 87.6153, 0.22", "-30.9607, -40.5639, 87.7908, 0.22", "-31.3242, -40.8779, 87.9309, 0.44", "-32.1935, -41.6175, 88.3335, 0.15", "-32.9296, -42.1413, 88.678, 0.37", "-39.8395, -44.1142, 99.2947, 0.37", "-46.2983, -46.8278, 110.016, 0.37", "-53.3366, -48.1216, 120.66, 0.37", "-60.8634, -49.6661, 130.93, 0.37", "-70.6373, -51.0818, 139.118, 0.37", "-79.7561, -51.5159, 148.13, 0.37", "-88.7115, -53.4735, 157.099, 0.37", "-96.289, -55.9026, 167.145, 0.37", "-102.184, -57.1894, 178.462, 0.37", "-107.9, -60.7092, 189.344, 0.37", "-112.795, -66.7045, 199.401, 0.37", "-117.308, -72.0277, 210.032, 0.37", "-120.394, -78.4921, 220.458, 0.37", "-120.674, -85.4418, 230.957, 0.37", "-122.281, -91.6798, 241.841, 0.37", "-122.704, -97.9534, 252.8, 0.37", "-123.905, -102.444, 264.647, 0.37", "-123.212, -107.215, 276.396, 0.37", "-123.89, -109.872, 288.882, 0.37", "-124.675, -112.639, 301.336, 0.37", "-123.589, -115.173, 313.814, 0.37", "-122.153, -119.185, 325.807, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-17.592, -36.4763, 68.6734, 1.33", "-17.257, -35.7234, 68.8352, 1.33", "-16.8946, -34.9087, 69.0102, 0.15", "-16.6857, -34.4393, 69.1111, 0.44", "-12.2563, -27.8026, 71.194, 0.44", "-7.38115, -21.1876, 71.8946, 0.44", "-3.12556, -14.1911, 71.3572, 0.44" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "83.5739, 102.954, 84.0232, 0.22", "83.2439, 105.278, 86.0334, 0.22", "83.2139, 106.148, 86.8044, 0.22", "83.2233, 106.355, 86.9912, 0.37", "83.2371, 106.659, 87.2662, 0.37", "83.3043, 108.139, 88.6046, 0.22", "83.3156, 108.386, 88.8281, 0.74", "83.5248, 108.687, 89.0766, 1.11", "83.59, 108.744, 89.1389, 1.11", "85.2221, 117.078, 97.4763, 1.11", "85.6615, 126.53, 104.618, 1.11", "85.0943, 135.597, 112.323, 1.11", "82.5637, 144.916, 119.36, 1.11", "78.1895, 152.69, 127.496, 1.11", "74.6532, 159.577, 136.791, 1.11", "72.3255, 165.978, 146.788, 1.11", "68.5897, 171.736, 156.802, 1.11", "67.0142, 178.224, 166.869, 1.11", "65.8295, 183.728, 177.595, 1.11", "65.1605, 189.833, 187.998, 1.11", "64.0662, 197.694, 197.0, 1.11", "65.1408, 204.884, 206.533, 1.11", "66.5887, 213.311, 214.808, 1.11", "69.2955, 222.166, 222.171, 1.11", "74.4766, 231.356, 227.26, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "83.5739, 102.954, 84.0232, 0.22", "83.9635, 102.261, 83.1776, 0.22", "84.026, 102.149, 83.0421, 0.37", "84.4542, 101.387, 82.113, 0.22", "84.7748, 100.817, 81.4172, 0.88", "89.2021, 93.5674, 73.6166, 0.88", "92.4143, 86.6252, 64.9898, 0.88", "94.0786, 78.9281, 56.6674, 0.88" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "120.211, -266.243, 95.5546, 0.15", "119.662, -268.337, 93.0999, 0.15", "119.573, -268.68, 92.6982, 0.59", "119.471, -269.069, 92.2425, 0.29", "119.438, -269.193, 92.0961, 0.29", "119.289, -269.76, 91.4318, 0.81", "119.154, -270.276, 90.8272, 1.11", "116.12, -277.562, 82.0715, 1.11", "112.534, -284.017, 72.8235, 1.11", "109.547, -289.258, 62.5795, 1.11", "107.351, -295.693, 52.8922, 1.11", "103.511, -300.503, 42.7037, 1.11", "99.7766, -306.067, 32.8989, 1.11", "94.4488, -311.965, 24.0956, 1.11", "89.673, -318.847, 15.769, 1.11", "84.5915, -326.638, 8.58548, 1.11", "80.4991, -335.104, 1.6144, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "120.211, -266.243, 95.5546, 0.37", "119.672, -265.822, 95.6925, 0.37", "119.108, -265.38, 95.8369, 0.44", "118.612, -264.992, 95.9638, 0.44", "117.825, -264.376, 96.1653, 1.55", "116.922, -263.669, 96.3963, 0.52", "109.252, -256.412, 99.7903, 0.52", "101.175, -250.25, 104.425, 0.52" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.23395, -130.075, 73.1639, 0.81", "6.85299, -131.66, 76.5903, 0.81", "5.26472, -133.804, 81.0646, 0.52", "5.00412, -134.219, 81.8854, 0.52", "4.35973, -135.434, 84.1449, 0.22", "4.23323, -135.719, 84.6439, 0.96", "4.0391, -136.255, 85.5382, 0.74", "4.00956, -136.808, 86.3249, 1.33", "4.15597, -137.352, 86.9402, 1.47", "4.44635, -138.119, 87.7645, 1.11", "4.64384, -138.573, 88.2057, 0.81", "4.93813, -139.291, 88.8963, 0.37", "5.11552, -139.808, 89.3979, 0.37", "5.24606, -140.358, 89.9768, 0.81", "5.38052, -141.094, 90.775, 0.96", "5.47996, -141.84, 91.5644, 1.18", "5.49931, -142.199, 91.9391, 0.74", "5.5053, -143.377, 93.0782, 0.37", "5.42547, -144.452, 94.2055, 0.22", "5.37627, -144.95, 94.7756, 1.03", "5.35366, -145.325, 95.2525, 0.81", "5.38231, -146.16, 96.4027, 0.59", "5.44624, -146.621, 97.0761, 0.88", "5.87004, -148.45, 99.8786, 0.15", "5.96979, -148.778, 100.407, 1.03", "6.1954, -149.474, 101.658, 0.37", "6.37973, -149.946, 102.608, 0.29", "6.49715, -150.152, 103.082, 0.29", "6.3144, -154.704, 112.36, 0.29", "7.04176, -158.547, 121.941, 0.29", "8.64889, -162.169, 131.489, 0.29", "7.76555, -165.803, 141.185, 0.29", "5.43607, -169.999, 150.413, 0.29", "2.45492, -174.238, 159.446, 0.29", "0.813903, -179.105, 168.441, 0.29", "-2.64692, -182.886, 177.533, 0.29", "-5.5458, -185.028, 187.364, 0.29", "-8.68212, -185.551, 197.367, 0.29", "-11.775, -183.977, 207.273, 0.29", "-13.5168, -181.092, 217.207, 0.29", "-17.255, -178.185, 226.543, 0.29", "-20.2388, -176.049, 236.371, 0.29", "-24.3462, -173.456, 245.649, 0.29", "-28.8628, -172.892, 255.109, 0.29", "-33.1352, -172.282, 264.68, 0.29", "-38.2597, -172.022, 273.838, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "8.23395, -130.075, 73.1639, 0.74", "8.89589, -130.626, 73.4697, 0.74", "9.62029, -131.316, 73.7962, 0.59", "10.2642, -132.019, 74.0794, 0.59", "10.8305, -132.749, 74.3493, 0.44", "11.3623, -133.505, 74.6161, 0.44", "11.8408, -134.221, 74.8639, 0.88", "12.0978, -134.641, 75.0002, 0.88", "12.4807, -135.225, 75.1634, 0.52", "13.0089, -135.928, 75.3507, 0.52", "13.3461, -136.295, 75.4564, 0.29", "13.4046, -136.343, 75.4738, 0.29", "14.6891, -137.171, 75.8413, 2.28", "16.1793, -138.006, 76.2569, 0.29", "16.6998, -138.258, 76.3825, 0.29", "17.0975, -138.442, 76.4633, 0.29", "17.7754, -138.775, 76.5916, 0.22", "18.1401, -138.981, 76.6576, 0.22", "18.6976, -139.387, 76.7638, 0.22", "19.2298, -139.891, 76.9029, 0.59", "19.7337, -140.458, 77.0093, 0.59", "19.8837, -140.672, 77.0339, 0.29", "20.1648, -141.149, 77.0744, 0.29", "20.8259, -142.478, 77.1992, 2.36", "21.2967, -143.529, 77.286, 1.84", "21.6912, -144.508, 77.3641, 0.66", "22.2261, -145.88, 77.4671, 0.44", "22.6896, -147.081, 77.557, 0.44", "23.386, -148.872, 77.6992, 3.17", "23.678, -149.624, 77.7567, 2.8", "24.2271, -151.007, 77.8738, 1.11", "24.5532, -151.844, 77.961, 0.44", "24.7677, -152.436, 78.0372, 0.44", "24.9751, -153.096, 78.1324, 0.44", "25.2086, -153.988, 78.3232, 0.59", "25.3859, -154.704, 78.537, 0.59", "25.7119, -155.945, 78.9873, 2.5", "26.0925, -157.203, 79.4823, 2.8", "26.534, -158.468, 80.0078, 1.03", "27.0023, -159.555, 80.4793, 0.81", "27.6785, -160.784, 81.0515, 0.44", "28.098, -161.411, 81.3553, 0.44", "28.6711, -162.132, 81.6964, 1.4", "29.0061, -162.526, 81.8555, 0.96", "29.6632, -163.359, 82.1163, 0.29", "30.092, -163.979, 82.2405, 0.29", "30.3678, -164.51, 82.3399, 1.18", "30.6485, -165.188, 82.4779, 1.03", "30.92, -165.944, 82.6605, 0.74", "31.0918, -166.462, 82.7959, 0.74", "31.3552, -167.281, 83.0248, 1.11", "31.5883, -167.957, 83.2351, 1.25", "31.8697, -168.782, 83.4946, 0.74", "32.0415, -169.33, 83.6732, 0.59", "32.0802, -169.458, 83.7139, 0.59", "32.277, -170.194, 83.9126, 0.59", "32.4975, -171.257, 84.1878, 0.52", "32.6622, -172.024, 84.3579, 0.52", "32.7379, -172.493, 84.4637, 0.52", "32.8617, -173.432, 84.6719, 1.18", "32.9671, -174.246, 84.8574, 1.33", "33.1457, -175.595, 85.1642, 0.66", "33.4259, -177.123, 85.5391, 0.22", "33.5688, -177.777, 85.7178, 0.22", "33.6443, -178.11, 85.8125, 0.22", "33.7787, -178.708, 85.9856, 1.18", "33.9271, -179.343, 86.1795, 1.55", "34.3546, -180.954, 86.6672, 0.29", "34.4952, -181.444, 86.8293, 0.52", "34.6584, -181.924, 86.9897, 0.52", "34.6873, -182.0, 87.0126, 0.52", "35.1143, -183.056, 87.2927, 0.37", "35.509, -183.984, 87.5016, 0.44", "35.7211, -184.472, 87.575, 0.81", "35.9207, -184.921, 87.6269, 0.88", "36.347, -185.881, 87.705, 0.22", "36.439, -186.08, 87.7163, 0.22", "36.58, -186.35, 87.727, 0.29", "36.7961, -186.747, 87.7677, 0.29", "37.042, -187.176, 87.8451, 1.11", "37.3595, -187.696, 87.9769, 1.03", "37.8003, -188.378, 88.2004, 0.29", "38.1881, -188.95, 88.3848, 0.59", "38.528, -189.439, 88.5381, 0.74", "38.9155, -189.984, 88.6906, 0.81", "39.2016, -190.38, 88.766, 1.18", "39.4797, -190.796, 88.8017, 1.18", "40.1385, -191.903, 88.7533, 0.29", "40.3652, -192.33, 88.698, 0.96", "40.6569, -192.932, 88.5907, 1.47", "41.0074, -193.738, 88.4307, 1.18", "41.4243, -194.809, 88.1969, 0.37", "41.7457, -195.716, 87.983, 0.37", "41.9503, -196.352, 87.8284, 1.33", "42.1316, -196.968, 87.693, 1.4", "42.3259, -197.697, 87.5578, 1.18", "42.4644, -198.24, 87.4775, 0.81", "42.7561, -199.298, 87.3274, 0.22", "42.8508, -199.64, 87.2827, 0.29", "42.9793, -200.112, 87.207, 0.44", "42.9941, -200.165, 87.1962, 0.44", "43.1436, -200.632, 87.0826, 0.44", "43.3542, -201.224, 86.952, 1.25", "43.625, -201.768, 86.8235, 1.03", "43.6918, -201.878, 86.7992, 1.03", "44.2478, -202.588, 86.6322, 0.29", "44.8443, -203.262, 86.4821, 1.62", "45.477, -203.894, 86.3579, 0.96", "46.7161, -204.973, 86.1862, 0.22", "47.2666, -205.429, 86.1141, 0.74", "50.0877, -207.672, 85.7834, 0.15", "50.4664, -207.953, 85.7486, 0.29", "51.0753, -208.381, 85.7001, 0.44", "51.8692, -208.9, 85.6393, 1.11", "56.3732, -216.688, 88.0768, 1.11", "60.5272, -224.943, 89.2138, 1.11", "64.6935, -232.888, 91.7321, 1.11", "68.491, -240.37, 95.8638, 1.11", "72.8767, -248.036, 98.8665, 1.11", "76.9908, -254.905, 103.762, 1.11", "82.4559, -261.648, 107.274, 1.11", "87.2174, -269.481, 108.947, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_23", "dend_22", "dend_17", "dend_4", "dend_1", "dend_0", "dend_32", "dend_25", "dend_19", "dend_18", "dend_6", "dend_5", "dend_3", "dend_2", "dend_36", "dend_33", "dend_27", "dend_26", "dend_21", "dend_20", "dend_10", "dend_7", "dend_35", "dend_34", "dend_29", "dend_28", "dend_14", "dend_11", "dend_9", "dend_8", "dend_31", "dend_30", "dend_16", "dend_15", "dend_13", "dend_12" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_24", "dend_23", "dend_22", "dend_17", "dend_4", "dend_1", "dend_0", "dend_32", "dend_25", "dend_19", "dend_18", "dend_6", "dend_5", "dend_3", "dend_2", "dend_36", "dend_33", "dend_27", "dend_26", "dend_21", "dend_20", "dend_10", "dend_7", "dend_35", "dend_34", "dend_29", "dend_28", "dend_14", "dend_11", "dend_9", "dend_8", "dend_31", "dend_30", "dend_16", "dend_15", "dend_13", "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_LBC_e2449b7b3c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_23, dend_22, dend_17, dend_4, dend_1, dend_0, dend_32, dend_25, dend_19, dend_18, dend_6, dend_5, dend_3, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_20, dend_10, dend_7, dend_35, dend_34, dend_29, dend_28, dend_14, dend_11, dend_9, dend_8, dend_31, dend_30, dend_16, dend_15, dend_13, dend_12]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_23, dend_22, dend_17, dend_4, dend_1, dend_0, dend_32, dend_25, dend_19, dend_18, dend_6, dend_5, dend_3, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_20, dend_10, dend_7, dend_35, dend_34, dend_29, dend_28, dend_14, dend_11, dend_9, dend_8, dend_31, dend_30, dend_16, dend_15, dend_13, dend_12]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_27
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_24(0), soma_0(0.4999999946150783)
    connect dend_23(0), soma_0(0.4999999946150783)
    connect dend_22(0), soma_0(0.4999999946150783)
    connect dend_17(0), soma_0(0.4999999946150783)
    connect dend_4(0), soma_0(0.4999999946150783)
    connect dend_1(0), soma_0(0.4999999946150783)
    connect dend_0(0), soma_0(0.4999999946150783)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 7.87846, -6.14013, 0.926888, 4.37079 ) }
    soma_0 { pt3dadd( 7.13597, -5.59801, 0.818799, 7.64789 ) }
    soma_0 { pt3dadd( 6.39348, -5.05588, 0.71071, 10.1599 ) }
    soma_0 { pt3dadd( 5.65099, -4.51376, 0.602621, 12.0174 ) }
    soma_0 { pt3dadd( 4.9085, -3.97163, 0.494532, 13.4936 ) }
    soma_0 { pt3dadd( 4.16601, -3.42951, 0.386443, 14.6737 ) }
    soma_0 { pt3dadd( 3.42353, -2.88739, 0.278354, 15.6589 ) }
    soma_0 { pt3dadd( 2.68104, -2.34526, 0.170265, 16.4486 ) }
    soma_0 { pt3dadd( 1.93855, -1.80314, 0.0621757, 17.0812 ) }
    soma_0 { pt3dadd( 1.19606, -1.26101, -0.0459132, 17.5637 ) }
    soma_0 { pt3dadd( 0.453571, -0.718889, -0.154002, 17.6377 ) }
    soma_0 { pt3dadd( -0.288918, -0.176765, -0.262091, 17.3255 ) }
    soma_0 { pt3dadd( -1.03141, 0.365359, -0.37018, 16.8591 ) }
    soma_0 { pt3dadd( -1.7739, 0.907483, -0.478269, 16.3051 ) }
    soma_0 { pt3dadd( -2.51638, 1.44961, -0.586358, 15.5043 ) }
    soma_0 { pt3dadd( -3.25887, 1.99173, -0.694447, 14.6925 ) }
    soma_0 { pt3dadd( -4.00136, 2.53386, -0.802536, 13.7448 ) }
    soma_0 { pt3dadd( -4.74385, 3.07598, -0.910625, 12.2667 ) }
    soma_0 { pt3dadd( -5.48634, 3.6181, -1.01871, 10.4241 ) }
    soma_0 { pt3dadd( -6.22883, 4.16023, -1.1268, 7.15767 ) }
    soma_0 { pt3dadd( -6.97132, 4.70235, -1.23489, 4.10717 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.81954, 7.26962, -12.8269, 5.16 ) }
    dend_24 { pt3dadd( 3.81954, 7.26962, -12.8269, 5.16 ) }
    dend_24 { pt3dadd( 4.30814, 8.99587, -13.2864, 3.83 ) }
    dend_24 { pt3dadd( 4.73958, 10.5202, -13.6922, 3.39 ) }
    dend_24 { pt3dadd( 5.16579, 12.026, -14.093, 3.24 ) }
    dend_24 { pt3dadd( 5.70074, 13.916, -14.5961, 3.24 ) }
    dend_24 { pt3dadd( 6.24694, 15.8457, -15.1098, 3.76 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 28/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 6.87954, -0.387384, -14.2069, 1.11 ) }
    dend_23 { pt3dadd( 6.94205, -0.36886, -14.2246, 1.11 ) }
    dend_23 { pt3dadd( 7.35561, -0.285093, -14.3634, 0.81 ) }
    dend_23 { pt3dadd( 7.90966, -0.245061, -14.537, 0.66 ) }
    dend_23 { pt3dadd( 8.84301, -0.31308, -14.816, 0.52 ) }
    dend_23 { pt3dadd( 10.5665, -0.633016, -15.3399, 0.44 ) }
    dend_23 { pt3dadd( 11.3218, -0.84156, -15.5791, 0.81 ) }
    dend_23 { pt3dadd( 12.2509, -1.18465, -15.8818, 0.96 ) }
    dend_23 { pt3dadd( 13.2715, -1.65845, -16.227, 1.77 ) }
    dend_23 { pt3dadd( 14.4425, -2.31582, -16.6263, 1.4 ) }
    dend_23 { pt3dadd( 15.4896, -3.01753, -16.9591, 1.25 ) }
    dend_23 { pt3dadd( 16.3896, -3.69981, -17.1957, 0.96 ) }
    dend_23 { pt3dadd( 16.8841, -4.10111, -17.3354, 0.88 ) }
    dend_23 { pt3dadd( 17.4711, -4.59135, -17.5028, 0.96 ) }
    dend_23 { pt3dadd( 17.9948, -5.0205, -17.6688, 1.11 ) }
    dend_23 { pt3dadd( 19.1459, -5.90508, -18.0656, 2.14 ) }
    dend_23 { pt3dadd( 20.3333, -6.75532, -18.5034, 1.18 ) }
    dend_23 { pt3dadd( 20.3866, -6.78966, -18.5261, 1.18 ) }
    dend_23 { pt3dadd( 21.3153, -7.3322, -19.0437, 0.74 ) }
    dend_23 { pt3dadd( 22.2549, -7.82422, -19.7067, 0.74 ) }
    dend_23 { pt3dadd( 22.8282, -8.09043, -20.1868, 1.11 ) }
    dend_23 { pt3dadd( 23.2372, -8.25653, -20.5858, 0.96 ) }
    dend_23 { pt3dadd( 24.0422, -8.54742, -21.4444, 0.96 ) }
    dend_23 { pt3dadd( 25.0525, -8.88621, -22.6138, 0.88 ) }
    dend_23 { pt3dadd( 25.6254, -9.04811, -23.3422, 0.52 ) }
    dend_23 { pt3dadd( 25.8134, -9.09087, -23.6013, 0.52 ) }
    dend_23 { pt3dadd( 25.8592, -9.10117, -23.6632, 0.52 ) }
    dend_23 { pt3dadd( 26.3003, -9.19594, -24.208, 0.52 ) }
    dend_23 { pt3dadd( 26.9149, -9.34424, -24.8212, 0.52 ) }
    dend_23 { pt3dadd( 27.2513, -9.4451, -25.0564, 0.52 ) }
    dend_23 { pt3dadd( 27.3082, -9.46658, -25.0922, 0.52 ) }
    dend_23 { pt3dadd( 28.2017, -9.8648, -25.5879, 0.22 ) }
    dend_23 { pt3dadd( 28.5996, -10.0533, -25.7794, 0.37 ) }
    dend_23 { pt3dadd( 29.1387, -10.32, -26.0253, 0.81 ) }
    dend_23 { pt3dadd( 29.6874, -10.5922, -26.2602, 1.18 ) }
    dend_23 { pt3dadd( 30.4741, -10.9704, -26.5962, 1.62 ) }
    dend_23 { pt3dadd( 31.4208, -11.391, -26.9701, 2.43 ) }
    dend_23 { pt3dadd( 32.5525, -11.845, -27.4227, 2.73 ) }
    dend_23 { pt3dadd( 33.2397, -12.1033, -27.7015, 2.43 ) }
    dend_23 { pt3dadd( 33.5657, -12.2194, -27.8279, 2.43 ) }
    dend_23 { pt3dadd( 33.9967, -12.3685, -27.9923, 2.06 ) }
    dend_23 { pt3dadd( 35.0019, -12.7011, -28.363, 1.03 ) }
    dend_23 { pt3dadd( 35.9299, -13.0009, -28.7159, 0.37 ) }
    dend_23 { pt3dadd( 35.9982, -13.0233, -28.7451, 0.37 ) }
    dend_23 { pt3dadd( 36.6175, -13.231, -29.0179, 0.37 ) }
    dend_23 { pt3dadd( 37.4027, -13.5209, -29.3766, 0.66 ) }
    dend_23 { pt3dadd( 37.933, -13.7353, -29.6169, 0.96 ) }
    dend_23 { pt3dadd( 38.611, -14.0319, -29.9617, 0.66 ) }
    dend_23 { pt3dadd( 39.6478, -14.4926, -30.524, 0.59 ) }
    dend_23 { pt3dadd( 40.3278, -14.7964, -30.923, 0.52 ) }
    dend_23 { pt3dadd( 40.97, -15.0828, -31.3803, 0.29 ) }
    dend_23 { pt3dadd( 41.5016, -15.3171, -31.819, 0.15 ) }
    dend_23 { pt3dadd( 42.675, -15.8369, -32.8461, 1.84 ) }
    dend_23 { pt3dadd( 43.3675, -16.132, -33.4635, 2.36 ) }
    dend_23 { pt3dadd( 43.4248, -16.155, -33.5143, 2.36 ) }
    dend_23 { pt3dadd( 44.4314, -16.4992, -34.4476, 2.06 ) }
    dend_23 { pt3dadd( 45.3229, -16.7523, -35.2942, 0.29 ) }
    dend_23 { pt3dadd( 46.0327, -16.9192, -35.9751, 0.29 ) }
    dend_23 { pt3dadd( 46.4071, -17.0043, -36.3034, 0.29 ) }
    dend_23 { pt3dadd( 46.4492, -17.0138, -36.3426, 0.29 ) }
    dend_23 { pt3dadd( 47.2222, -17.1824, -37.0823, 1.33 ) }
    dend_23 { pt3dadd( 48.1362, -17.3904, -37.9415, 2.36 ) }
    dend_23 { pt3dadd( 49.0452, -17.6285, -38.7812, 2.5 ) }
    dend_23 { pt3dadd( 50.3267, -18.0419, -39.9348, 0.15 ) }
    dend_23 { pt3dadd( 51.8741, -18.6184, -41.2308, 0.15 ) }
    dend_23 { pt3dadd( 52.8619, -19.0489, -41.9818, 1.11 ) }
    dend_23 { pt3dadd( 54.0158, -19.6255, -42.7839, 2.58 ) }
    dend_23 { pt3dadd( 55.0953, -20.2214, -43.445, 2.14 ) }
    dend_23 { pt3dadd( 56.5095, -21.0676, -44.189, 0.22 ) }
    dend_23 { pt3dadd( 57.3257, -21.5929, -44.5404, 0.22 ) }
    dend_23 { pt3dadd( 58.2496, -22.1935, -44.9169, 0.22 ) }
    dend_23 { pt3dadd( 59.0573, -22.691, -45.3467, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_23 { pt3dadd( 59.6782, -23.0374, -45.721, 1.62 ) }
    dend_23 { pt3dadd( 60.0982, -23.2477, -45.9965, 1.99 ) }
    dend_23 { pt3dadd( 61.0189, -23.6676, -46.6261, 0.52 ) }
    dend_23 { pt3dadd( 63.4696, -24.7803, -48.316, 0.22 ) }
    dend_23 { pt3dadd( 65.2316, -25.5617, -49.516, 1.11 ) }
    dend_23 { pt3dadd( 66.1509, -25.9736, -50.1574, 2.06 ) }
    dend_23 { pt3dadd( 66.756, -26.2471, -50.5974, 1.33 ) }
    dend_23 { pt3dadd( 68.5944, -27.1029, -51.9906, 0.15 ) }
    dend_23 { pt3dadd( 69.4272, -27.5102, -52.6205, 0.15 ) }
    dend_23 { pt3dadd( 69.5467, -27.5772, -52.7028, 0.15 ) }
    dend_23 { pt3dadd( 70.8843, -28.395, -53.626, 0.96 ) }
    dend_23 { pt3dadd( 70.9366, -28.4299, -53.6716, 0.96 ) }
    dend_23 { pt3dadd( 71.7165, -28.9712, -54.4515, 2.28 ) }
    dend_23 { pt3dadd( 72.1519, -29.2899, -54.9205, 2.28 ) }
    dend_23 { pt3dadd( 72.7353, -29.7081, -55.5569, 1.55 ) }
    dend_23 { pt3dadd( 72.7708, -29.733, -55.5951, 1.55 ) }
    dend_23 { pt3dadd( 74.8008, -31.1287, -57.675, 0.15 ) }
    dend_23 { pt3dadd( 75.5788, -31.6393, -58.5507, 1.03 ) }
    dend_23 { pt3dadd( 75.8221, -31.7899, -58.8346, 0.59 ) }
    dend_23 { pt3dadd( 76.7929, -32.3466, -60.0225, 0.15 ) }
    dend_23 { pt3dadd( 77.3714, -32.6634, -60.7398, 1.11 ) }
    dend_23 { pt3dadd( 77.6585, -32.8139, -61.1117, 1.18 ) }
    dend_23 { pt3dadd( 79.6155, -33.7925, -63.6921, 0.15 ) }
    dend_23 { pt3dadd( 79.913, -33.9447, -64.0802, 0.15 ) }
    dend_23 { pt3dadd( 80.4213, -34.2036, -64.8152, 0.52 ) }
    dend_23 { pt3dadd( 80.7009, -34.3547, -65.2315, 0.88 ) }
    dend_23 { pt3dadd( 81.6602, -34.9166, -66.6743, 0.15 ) }
    dend_23 { pt3dadd( 82.3326, -35.3116, -67.6819, 1.92 ) }
    dend_23 { pt3dadd( 82.5831, -35.4536, -68.0487, 1.92 ) }
    dend_23 { pt3dadd( 85.0265, -36.8367, -71.6371, 0.15 ) }
    dend_23 { pt3dadd( 85.5579, -37.1404, -72.4045, 0.44 ) }
    dend_23 { pt3dadd( 86.736, -37.8076, -74.0849, 1.62 ) }
    dend_23 { pt3dadd( 87.7937, -38.408, -75.5385, 1.92 ) }
    dend_23 { pt3dadd( 89.0704, -39.1168, -77.2051, 0.22 ) }
    dend_23 { pt3dadd( 89.3917, -39.2911, -77.5894, 0.22 ) }
    dend_23 { pt3dadd( 90.0832, -39.6632, -78.3064, 1.18 ) }
    dend_23 { pt3dadd( 90.1781, -39.7136, -78.4043, 1.18 ) }
    dend_23 { pt3dadd( 90.5568, -39.9183, -78.7761, 1.18 ) }
    dend_23 { pt3dadd( 92.5409, -41.0263, -80.5723, 0.15 ) }
    dend_23 { pt3dadd( 93.7623, -41.7102, -81.6174, 1.62 ) }
    dend_23 { pt3dadd( 95.1401, -42.4572, -82.7876, 2.5 ) }
    dend_23 { pt3dadd( 96.4273, -43.1362, -83.8349, 0.22 ) }
    dend_23 { pt3dadd( 96.6525, -43.2534, -84.0209, 0.22 ) }
    dend_23 { pt3dadd( 97.7757, -43.8249, -84.937, 0.22 ) }
    dend_23 { pt3dadd( 97.8114, -43.8428, -84.9659, 0.22 ) }
    dend_23 { pt3dadd( 98.922, -44.3688, -85.9428, 0.88 ) }
    dend_23 { pt3dadd( 99.5077, -44.6288, -86.4798, 1.92 ) }
    dend_23 { pt3dadd( 102.176, -45.7233, -89.0722, 0.15 ) }
    dend_23 { pt3dadd( 103.075, -46.0775, -89.9914, 1.62 ) }
    dend_23 { pt3dadd( 103.676, -46.3067, -90.6509, 1.62 ) }
    dend_23 { pt3dadd( 105.929, -47.3258, -93.6036, 0.15 ) }
    dend_23 { pt3dadd( 106.229, -47.4885, -94.0533, 1.33 ) }
    dend_23 { pt3dadd( 107.334, -48.1908, -95.8678, 0.15 ) }
    dend_23 { pt3dadd( 107.357, -48.2085, -95.9076, 0.15 ) }
    dend_23 { pt3dadd( 108.184, -48.909, -97.3044, 2.14 ) }
    dend_23 { pt3dadd( 111.229, -51.6341, -102.29, 0.15 ) }
    dend_23 { pt3dadd( 111.858, -52.233, -103.282, 1.99 ) }
    dend_23 { pt3dadd( 112.317, -52.6725, -103.983, 2.8 ) }
    dend_23 { pt3dadd( 115.893, -56.1028, -109.157, 0.15 ) }
    dend_23 { pt3dadd( 116.557, -56.7198, -110.052, 0.96 ) }
    dend_23 { pt3dadd( 117.7, -57.729, -111.474, 0.15 ) }
    dend_23 { pt3dadd( 118.125, -58.0591, -111.926, 1.11 ) }
    dend_23 { pt3dadd( 118.9, -58.6238, -112.895, 0.22 ) }
    dend_23 { pt3dadd( 119.099, -58.767, -113.171, 0.52 ) }
    dend_23 { pt3dadd( 119.143, -58.7996, -113.239, 0.52 ) }
    dend_23 { pt3dadd( 120.477, -59.8335, -115.365, 0.15 ) }
    dend_23 { pt3dadd( 121.143, -60.3731, -116.437, 2.36 ) }
    dend_23 { pt3dadd( 123.883, -62.6208, -120.987, 0.15 ) }
    dend_23 { pt3dadd( 124.428, -63.077, -121.906, 2.28 ) }
    dend_23 { pt3dadd( 125.163, -63.6971, -123.146, 0.44 ) }
    dend_23 { pt3dadd( 125.407, -63.9038, -123.546, 0.44 ) }
    dend_23 { pt3dadd( 125.442, -63.9333, -123.597, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 2.29954, 4.19162, -2.63688, 2.43 ) }
    dend_22 { pt3dadd( 2.21087, 4.19418, -2.6463, 2.43 ) }
    dend_22 { pt3dadd( 0.9046, 4.27036, -2.74674, 2.28 ) }
    dend_22 { pt3dadd( -0.12739, 4.35989, -2.8523, 1.4 ) }
    dend_22 { pt3dadd( -0.7729, 4.42265, -2.92008, 1.25 ) }
    dend_22 { pt3dadd( -1.48871, 4.49465, -2.99135, 1.18 ) }
    dend_22 { pt3dadd( -1.95704, 4.54424, -3.032, 1.03 ) }
    dend_22 { pt3dadd( -2.61913, 4.62299, -3.08105, 1.33 ) }
    dend_22 { pt3dadd( -3.44285, 4.70073, -3.19298, 1.4 ) }
    dend_22 { pt3dadd( -4.14714, 4.70609, -3.31254, 1.4 ) }
    dend_22 { pt3dadd( -4.65446, 4.65698, -3.44112, 1.4 ) }
    dend_22 { pt3dadd( -5.40427, 4.52404, -3.68214, 1.4 ) }
    dend_22 { pt3dadd( -5.63938, 4.47156, -3.77395, 1.4 ) }
    dend_22 { pt3dadd( -6.99815, 4.13046, -4.401, 1.69 ) }
    dend_22 { pt3dadd( -7.99041, 3.88853, -4.92388, 0.66 ) }
    dend_22 { pt3dadd( -8.57227, 3.75886, -5.2738, 1.03 ) }
    dend_22 { pt3dadd( -9.4454, 3.58589, -5.83845, 1.47 ) }
    dend_22 { pt3dadd( -10.3671, 3.42698, -6.52272, 2.21 ) }
    dend_22 { pt3dadd( -11.6166, 3.24629, -7.52478, 2.14 ) }
    dend_22 { pt3dadd( -12.5311, 3.12123, -8.35043, 1.92 ) }
    dend_22 { pt3dadd( -13.2787, 3.01217, -9.09924, 1.55 ) }
    dend_22 { pt3dadd( -13.6907, 2.93771, -9.54017, 1.33 ) }
    dend_22 { pt3dadd( -15.1077, 2.61266, -11.1662, 0.88 ) }
    dend_22 { pt3dadd( -15.6845, 2.45462, -11.8493, 0.88 ) }
    dend_22 { pt3dadd( -16.8225, 2.0835, -13.1891, 0.37 ) }
    dend_22 { pt3dadd( -17.2566, 1.91392, -13.6628, 0.88 ) }
    dend_22 { pt3dadd( -18.1234, 1.54058, -14.5147, 1.11 ) }
    dend_22 { pt3dadd( -18.1686, 1.51996, -14.5515, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_22 { pt3dadd( -18.7301, 1.26037, -14.874, 1.4 ) }
    dend_22 { pt3dadd( -19.502, 0.911351, -15.1917, 1.62 ) }
    dend_22 { pt3dadd( -20.1348, 0.667169, -15.3162, 1.62 ) }
    dend_22 { pt3dadd( -20.6548, 0.49051, -15.4066, 1.4 ) }
    dend_22 { pt3dadd( -21.3203, 0.296697, -15.5197, 0.74 ) }
    dend_22 { pt3dadd( -21.3872, 0.278453, -15.535, 0.74 ) }
    dend_22 { pt3dadd( -21.9092, 0.147844, -15.6794, 0.52 ) }
    dend_22 { pt3dadd( -23.3692, -0.161304, -16.3614, 0.37 ) }
    dend_22 { pt3dadd( -24.2432, -0.339633, -16.8716, 1.03 ) }
    dend_22 { pt3dadd( -25.0897, -0.512257, -17.4174, 1.69 ) }
    dend_22 { pt3dadd( -25.9766, -0.682217, -18.0234, 2.65 ) }
    dend_22 { pt3dadd( -26.7979, -0.835517, -18.6079, 3.17 ) }
    dend_22 { pt3dadd( -29.2462, -1.29038, -20.4335, 0.66 ) }
    dend_22 { pt3dadd( -30.5683, -1.55332, -21.4765, 0.37 ) }
    dend_22 { pt3dadd( -30.6166, -1.56267, -21.5146, 0.37 ) }
    dend_22 { pt3dadd( -31.1639, -1.64993, -21.9423, 0.22 ) }
    dend_22 { pt3dadd( -31.2128, -1.65555, -21.9805, 0.22 ) }
    dend_22 { pt3dadd( -31.7293, -1.70387, -22.3816, 0.22 ) }
    dend_22 { pt3dadd( -31.7742, -1.70777, -22.4104, 0.22 ) }
    dend_22 { pt3dadd( -32.8344, -1.76698, -23.3055, 1.03 ) }
    dend_22 { pt3dadd( -33.3988, -1.80288, -23.8071, 2.14 ) }
    dend_22 { pt3dadd( -34.1483, -1.84669, -24.5366, 3.32 ) }
    dend_22 { pt3dadd( -34.1858, -1.84819, -24.5747, 3.32 ) }
    dend_22 { pt3dadd( -34.8261, -1.86573, -25.2213, 2.43 ) }
    dend_22 { pt3dadd( -37.7325, -1.92379, -28.1074, 0.29 ) }
    dend_22 { pt3dadd( -37.9768, -1.92726, -28.3431, 0.74 ) }
    dend_22 { pt3dadd( -39.53, -1.92511, -29.9239, 0.22 ) }
    dend_22 { pt3dadd( -40.5721, -1.90108, -30.9372, 1.11 ) }
    dend_22 { pt3dadd( -41.2781, -1.8767, -31.5989, 2.28 ) }
    dend_22 { pt3dadd( -42.5862, -1.81656, -32.7511, 2.36 ) }
    dend_22 { pt3dadd( -42.9539, -1.79968, -33.0338, 1.77 ) }
    dend_22 { pt3dadd( -45.1051, -1.66171, -34.5254, 0.15 ) }
    dend_22 { pt3dadd( -46.611, -1.53663, -35.4984, 0.15 ) }
    dend_22 { pt3dadd( -47.8107, -1.41738, -36.2378, 1.84 ) }
    dend_22 { pt3dadd( -48.5397, -1.33528, -36.6754, 2.8 ) }
    dend_22 { pt3dadd( -49.0196, -1.27679, -36.9527, 2.5 ) }
    dend_22 { pt3dadd( -52.1029, -0.867484, -38.7358, 0.22 ) }
    dend_22 { pt3dadd( -53.4463, -0.672315, -39.4922, 1.47 ) }
    dend_22 { pt3dadd( -54.124, -0.56301, -39.9026, 1.25 ) }
    dend_22 { pt3dadd( -55.549, -0.320994, -40.7494, 0.15 ) }
    dend_22 { pt3dadd( -56.5579, -0.153489, -41.3497, 1.25 ) }
    dend_22 { pt3dadd( -57.2747, -0.0635963, -41.7713, 1.99 ) }
    dend_22 { pt3dadd( -58.2538, -0.00847077, -42.3254, 1.99 ) }
    dend_22 { pt3dadd( -60.5599, 0.0194235, -43.5554, 0.15 ) }
    dend_22 { pt3dadd( -61.1205, 0.00322146, -43.9164, 1.25 ) }
    dend_22 { pt3dadd( -61.4215, -0.0152869, -44.1411, 1.25 ) }
    dend_22 { pt3dadd( -63.6903, -0.209387, -45.9531, 0.07 ) }
    dend_22 { pt3dadd( -64.5727, -0.288649, -46.8058, 1.69 ) }
    dend_22 { pt3dadd( -64.9367, -0.321429, -47.197, 1.69 ) }
    dend_22 { pt3dadd( -67.6631, -0.533321, -50.4065, 0.15 ) }
    dend_22 { pt3dadd( -68.8089, -0.571436, -51.7087, 1.62 ) }
    dend_22 { pt3dadd( -69.2379, -0.568952, -52.199, 2.28 ) }
    dend_22 { pt3dadd( -72.6194, -0.42219, -56.0286, 0.22 ) }
    dend_22 { pt3dadd( -73.1149, -0.390151, -56.5784, 0.15 ) }
    dend_22 { pt3dadd( -75.2925, -0.234245, -58.8432, 3.39 ) }
    dend_22 { pt3dadd( -78.4695, 0.0206303, -61.8615, 0.22 ) }
    dend_22 { pt3dadd( -80.2889, 0.14908, -63.5085, 0.15 ) }
    dend_22 { pt3dadd( -81.3496, 0.214404, -64.4263, 1.92 ) }
    dend_22 { pt3dadd( -81.3917, 0.216472, -64.4592, 1.92 ) }
    dend_22 { pt3dadd( -82.5969, 0.26156, -65.4073, 0.15 ) }
    dend_22 { pt3dadd( -84.0392, 0.290896, -66.5194, 1.77 ) }
    dend_22 { pt3dadd( -86.6436, 0.269723, -68.6063, 0.15 ) }
    dend_22 { pt3dadd( -86.9065, 0.263459, -68.8061, 1.25 ) }
    dend_22 { pt3dadd( -88.9459, 0.207784, -70.3475, 0.22 ) }
    dend_22 { pt3dadd( -89.3819, 0.196871, -70.6755, 0.88 ) }
    dend_22 { pt3dadd( -90.9099, 0.158314, -71.8254, 0.15 ) }
    dend_22 { pt3dadd( -93.0727, 0.125593, -73.3499, 2.58 ) }
    dend_22 { pt3dadd( -96.4621, 0.12944, -75.6614, 0.22 ) }
    dend_22 { pt3dadd( -96.9056, 0.131572, -75.9544, 1.62 ) }
    dend_22 { pt3dadd( -96.9515, 0.131601, -75.982, 1.62 ) }
    dend_22 { pt3dadd( -97.7336, 0.129069, -76.4166, 1.62 ) }
    dend_22 { pt3dadd( -100.161, 0.144841, -77.7135, 0.15 ) }
    dend_22 { pt3dadd( -100.659, 0.157518, -77.9827, 1.18 ) }
    dend_22 { pt3dadd( -101.152, 0.176362, -78.2335, 1.47 ) }
    dend_22 { pt3dadd( -104.533, 0.321622, -79.9967, 0.15 ) }
    dend_22 { pt3dadd( -104.997, 0.338784, -80.2475, 1.62 ) }
    dend_22 { pt3dadd( -106.964, 0.389516, -81.3323, 1.92 ) }
    dend_22 { pt3dadd( -108.307, 0.396904, -82.0715, 0.15 ) }
    dend_22 { pt3dadd( -111.073, 0.369757, -83.6878, 0.15 ) }
    dend_22 { pt3dadd( -112.84, 0.330561, -84.9166, 1.99 ) }
    dend_22 { pt3dadd( -114.715, 0.265234, -86.3933, 0.22 ) }
    dend_22 { pt3dadd( -115.342, 0.231553, -86.9132, 1.33 ) }
    dend_22 { pt3dadd( -117.199, 0.0908261, -88.5656, 0.15 ) }
    dend_22 { pt3dadd( -119.144, -0.0877382, -90.4332, 2.43 ) }
    dend_22 { pt3dadd( -122.346, -0.415087, -93.8188, 0.15 ) }
    dend_22 { pt3dadd( -123.027, -0.49981, -94.503, 1.33 ) }
    dend_22 { pt3dadd( -124.739, -0.73912, -96.1884, 0.07 ) }
    dend_22 { pt3dadd( -126.078, -0.947237, -97.4965, 0.96 ) }
    dend_22 { pt3dadd( -126.49, -1.0186, -97.8926, 1.77 ) }
    dend_22 { pt3dadd( -126.938, -1.10848, -98.2798, 2.14 ) }
    dend_22 { pt3dadd( -131.841, -2.25812, -102.044, 0.15 ) }
    dend_22 { pt3dadd( -133.256, -2.62741, -103.118, 1.55 ) }
    dend_22 { pt3dadd( -134.388, -2.95879, -103.975, 2.65 ) }
    dend_22 { pt3dadd( -135.324, -3.25855, -104.646, 2.14 ) }
    dend_22 { pt3dadd( -136.461, -3.64926, -105.46, 0.52 ) }
    dend_22 { pt3dadd( -137.221, -3.93889, -105.991, 1.18 ) }
    dend_22 { pt3dadd( -138.37, -4.46753, -106.745, 0.37 ) }
    dend_22 { pt3dadd( -139.355, -4.94445, -107.304, 0.37 ) }
    dend_22 { pt3dadd( -140.299, -5.425, -107.786, 0.37 ) }
    dend_22 { pt3dadd( -140.97, -5.77562, -108.115, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_22 { pt3dadd( -141.028, -5.80486, -108.143, 1.03 ) }
    dend_22 { pt3dadd( -141.389, -5.98602, -108.289, 1.03 ) }
    dend_22 { pt3dadd( -141.936, -6.26028, -108.395, 0.59 ) }
    dend_22 { pt3dadd( -141.99, -6.28815, -108.399, 0.59 ) }
    dend_22 { pt3dadd( -142.162, -6.37731, -108.405, 0.15 ) }
    dend_22 { pt3dadd( -143.097, -6.81858, -108.553, 0.15 ) }
    dend_22 { pt3dadd( -143.153, -6.84275, -108.566, 0.15 ) }
    dend_22 { pt3dadd( -144.074, -7.21882, -108.807, 2.06 ) }
    dend_22 { pt3dadd( -145.014, -7.58851, -109.068, 2.87 ) }
    dend_22 { pt3dadd( -145.804, -7.89008, -109.289, 1.69 ) }
    dend_22 { pt3dadd( -147.876, -8.65396, -109.871, 0.22 ) }
    dend_22 { pt3dadd( -148.593, -8.90655, -110.073, 1.55 ) }
    dend_22 { pt3dadd( -148.65, -8.92441, -110.089, 1.55 ) }
    dend_22 { pt3dadd( -150.609, -9.46199, -110.591, 0.15 ) }
    dend_22 { pt3dadd( -150.979, -9.55072, -110.678, 0.66 ) }
    dend_22 { pt3dadd( -151.354, -9.629, -110.745, 0.96 ) }
    dend_22 { pt3dadd( -151.783, -9.71014, -110.783, 1.11 ) }
    dend_22 { pt3dadd( -153.728, -10.0384, -110.948, 0.22 ) }
    dend_22 { pt3dadd( -153.772, -10.044, -110.951, 0.52 ) }
    dend_22 { pt3dadd( -154.296, -10.0724, -110.99, 0.15 ) }
    dend_22 { pt3dadd( -155.286, -10.1094, -111.076, 0.15 ) }
    dend_22 { pt3dadd( -155.38, -10.107, -111.112, 0.15 ) }
    dend_22 { pt3dadd( -155.861, -10.081, -111.354, 0.74 ) }
    dend_22 { pt3dadd( -156.757, -10.0105, -111.887, 0.29 ) }
    dend_22 { pt3dadd( -157.808, -9.90512, -112.589, 2.06 ) }
    dend_22 { pt3dadd( -158.24, -9.85365, -112.922, 1.55 ) }
    dend_22 { pt3dadd( -161.719, -9.4377, -115.802, 0.22 ) }
    dend_22 { pt3dadd( -162.558, -9.33982, -116.518, 0.66 ) }
    dend_22 { pt3dadd( -162.779, -9.31464, -116.711, 0.66 ) }
    dend_22 { pt3dadd( -164.001, -9.1796, -117.774, 0.15 ) }
    dend_22 { pt3dadd( -165.664, -8.99836, -119.148, 1.99 ) }
    dend_22 { pt3dadd( -169.178, -8.52669, -121.941, 0.15 ) }
    dend_22 { pt3dadd( -169.947, -8.40838, -122.526, 0.96 ) }
    dend_22 { pt3dadd( -170.529, -8.30012, -123.017, 1.92 ) }
    dend_22 { pt3dadd( -170.996, -8.19651, -123.412, 1.4 ) }
    dend_22 { pt3dadd( -171.431, -8.08484, -123.788, 1.03 ) }
    dend_22 { pt3dadd( -174.167, -7.27493, -126.232, 0.15 ) }
    dend_22 { pt3dadd( -175.564, -6.81369, -127.501, 1.55 ) }
    dend_22 { pt3dadd( -176.921, -6.37059, -128.692, 1.69 ) }
    dend_22 { pt3dadd( -179.212, -5.63522, -130.688, 0.15 ) }
    dend_22 { pt3dadd( -180.547, -5.22695, -131.826, 1.92 ) }
    dend_22 { pt3dadd( -180.588, -5.2158, -131.859, 1.92 ) }
    dend_22 { pt3dadd( -181.433, -5.01601, -132.478, 1.92 ) }
    dend_22 { pt3dadd( -182.684, -4.74164, -133.595, 0.15 ) }
    dend_22 { pt3dadd( -183.392, -4.52716, -134.775, 0.96 ) }
    dend_22 { pt3dadd( -183.643, -4.43191, -135.302, 0.96 ) }
    dend_22 { pt3dadd( -184.395, -4.09732, -136.99, 0.15 ) }
    dend_22 { pt3dadd( -184.746, -3.91855, -137.818, 1.69 ) }
    dend_22 { pt3dadd( -186.797, -2.73229, -142.989, 1.62 ) }
    dend_22 { pt3dadd( -190.703, -0.208966, -153.235, 0.15 ) }
    dend_22 { pt3dadd( -190.949, -0.0361578, -153.892, 1.18 ) }
    dend_22 { pt3dadd( -191.308, 0.242233, -154.866, 0.15 ) }
    dend_22 { pt3dadd( -191.645, 0.534294, -155.782, 1.77 ) }
    dend_22 { pt3dadd( -192.549, 1.37069, -158.088, 0.37 ) }
    dend_22 { pt3dadd( -192.892, 1.70515, -158.771, 0.37 ) }
    dend_22 { pt3dadd( -192.927, 1.73551, -158.813, 0.37 ) }
    dend_22 { pt3dadd( -193.659, 2.26318, -159.666, 0.15 ) }
    dend_22 { pt3dadd( -194.75, 2.91446, -160.844, 1.25 ) }
    dend_22 { pt3dadd( -195.841, 3.44122, -161.879, 0.07 ) }
    dend_22 { pt3dadd( -196.182, 3.57731, -162.167, 0.52 ) }
    dend_22 { pt3dadd( -197.744, 4.12379, -163.459, 0.22 ) }
    dend_22 { pt3dadd( -198.743, 4.44998, -164.221, 1.25 ) }
    dend_22 { pt3dadd( -199.32, 4.6206, -164.621, 1.99 ) }
    dend_22 { pt3dadd( -200.828, 5.06959, -165.554, 0.22 ) }
    dend_22 { pt3dadd( -202.038, 5.46987, -166.246, 0.37 ) }
    dend_22 { pt3dadd( -202.994, 5.83948, -166.752, 0.52 ) }
    dend_22 { pt3dadd( -203.975, 6.30866, -167.189, 0.15 ) }
    dend_22 { pt3dadd( -204.154, 6.40993, -167.256, 0.81 ) }
    dend_22 { pt3dadd( -204.861, 6.8606, -167.475, 0.59 ) }
    dend_22 { pt3dadd( -205.643, 7.40388, -167.596, 0.59 ) }
    dend_22 { pt3dadd( -206.193, 7.80191, -167.611, 0.81 ) }
    dend_22 { pt3dadd( -206.656, 8.10735, -167.61, 0.66 ) }
    dend_22 { pt3dadd( -207.148, 8.38062, -167.63, 0.29 ) }
    dend_22 { pt3dadd( -207.448, 8.51151, -167.655, 0.29 ) }
    dend_22 { pt3dadd( -207.894, 8.61623, -167.722, 0.29 ) }
    dend_22 { pt3dadd( -207.993, 8.62139, -167.743, 0.29 ) }
    dend_22 { pt3dadd( -209.039, 8.52363, -167.983, 0.29 ) }
    dend_22 { pt3dadd( -209.362, 8.46135, -168.057, 0.29 ) }
    dend_22 { pt3dadd( -209.511, 8.42702, -168.087, 0.29 ) }
    dend_22 { pt3dadd( -210.077, 8.31608, -168.2, 0.29 ) }
    dend_22 { pt3dadd( -210.146, 8.30819, -168.212, 0.29 ) }
    dend_22 { pt3dadd( -210.612, 8.2681, -168.269, 0.29 ) }
    dend_22 { pt3dadd( -210.674, 8.26535, -168.272, 0.29 ) }
    dend_22 { pt3dadd( -211.065, 8.2689, -168.294, 0.15 ) }
    dend_22 { pt3dadd( -211.829, 8.33637, -168.348, 1.11 ) }
    dend_22 { pt3dadd( -212.561, 8.48459, -168.415, 1.11 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 86/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -2.41046, 7.06062, 12.4831, 3.76 ) }
    dend_17 { pt3dadd( -2.41046, 7.06062, 12.4831, 3.76 ) }
    dend_17 { pt3dadd( -2.894, 8.00804, 12.4831, 3.98 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 0.939533, -5.28938, 13.4231, 4.2 ) }
    dend_4 { pt3dadd( 0.94912, -5.36787, 13.4371, 4.2 ) }
    dend_4 { pt3dadd( 1.22843, -7.65453, 13.8457, 3.32 ) }
    dend_4 { pt3dadd( 1.50671, -9.93286, 14.2528, 3.46 ) }
    dend_4 { pt3dadd( 1.60316, -10.7224, 14.3938, 4.13 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 94/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.92046, -7.52188, -1.07688, 1.99 ) }
    dend_1 { pt3dadd( -4.99924, -7.62482, -0.982712, 2.06 ) }
    dend_1 { pt3dadd( -5.68038, -8.57116, -0.177028, 1.33 ) }
    dend_1 { pt3dadd( -6.76628, -10.1708, 1.11785, 1.77 ) }
    dend_1 { pt3dadd( -7.67084, -11.5961, 2.16101, 1.99 ) }
    dend_1 { pt3dadd( -8.62352, -13.1405, 3.2038, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( -9.31524, -14.2781, 3.87978, 1.18 ) }
    dend_1 { pt3dadd( -9.88359, -15.2324, 4.36616, 2.21 ) }
    dend_1 { pt3dadd( -10.7717, -16.7787, 5.00783, 1.55 ) }
    dend_1 { pt3dadd( -11.5565, -18.197, 5.44766, 1.4 ) }
    dend_1 { pt3dadd( -12.3204, -19.6366, 5.74905, 1.47 ) }
    dend_1 { pt3dadd( -13.0569, -21.0187, 5.88374, 1.33 ) }
    dend_1 { pt3dadd( -13.5418, -21.897, 5.90109, 1.55 ) }
    dend_1 { pt3dadd( -13.8493, -22.4295, 5.87184, 1.55 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 8/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 10.1695, -1.71738, -1.01688, 1.62 ) }
    dend_0 { pt3dadd( 10.1695, -1.71738, -1.01688, 1.62 ) }
    dend_0 { pt3dadd( 12.7297, -1.31581, -1.14908, 1.18 ) }
    dend_0 { pt3dadd( 15.0936, -0.965357, -1.23722, 1.55 ) }
    dend_0 { pt3dadd( 18.1297, -0.54979, -1.33731, 1.69 ) }
    dend_0 { pt3dadd( 21.2093, -0.15757, -1.41312, 1.69 ) }
    dend_0 { pt3dadd( 23.5142, 0.116112, -1.45162, 1.69 ) }
    dend_0 { pt3dadd( 26.0257, 0.385666, -1.44461, 1.55 ) }
    dend_0 { pt3dadd( 28.9432, 0.664141, -1.38053, 1.62 ) }
    dend_0 { pt3dadd( 31.6593, 0.83279, -1.27307, 1.77 ) }
    dend_0 { pt3dadd( 34.6791, 0.907454, -1.08018, 1.69 ) }
    dend_0 { pt3dadd( 37.1724, 0.846757, -0.896701, 1.25 ) }
    dend_0 { pt3dadd( 38.9665, 0.717568, -0.751232, 0.66 ) }
    dend_0 { pt3dadd( 40.3768, 0.542419, -0.658341, 0.44 ) }
    dend_0 { pt3dadd( 42.7339, 0.126225, -0.584511, 0.81 ) }
    dend_0 { pt3dadd( 43.0822, 0.0402627, -0.589086, 1.25 ) }
    dend_0 { pt3dadd( 45.0071, -0.561042, -0.792421, 2.14 ) }
    dend_0 { pt3dadd( 46.4655, -1.08335, -1.11147, 1.69 ) }
    dend_0 { pt3dadd( 48.447, -1.84089, -1.76566, 0.74 ) }
    dend_0 { pt3dadd( 49.5778, -2.31391, -2.20103, 0.44 ) }
    dend_0 { pt3dadd( 50.7337, -2.81435, -2.68686, 0.74 ) }
    dend_0 { pt3dadd( 52.3228, -3.51111, -3.37687, 1.18 ) }
    dend_0 { pt3dadd( 54.1206, -4.2826, -4.16979, 1.55 ) }
    dend_0 { pt3dadd( 55.6522, -4.89717, -4.79524, 0.81 ) }
    dend_0 { pt3dadd( 57.1539, -5.46614, -5.3023, 0.44 ) }
    dend_0 { pt3dadd( 58.1262, -5.81084, -5.54146, 0.44 ) }
    dend_0 { pt3dadd( 58.2497, -5.85146, -5.55982, 0.44 ) }
    dend_0 { pt3dadd( 59.3047, -6.19218, -5.58486, 0.44 ) }
    dend_0 { pt3dadd( 59.7873, -6.34313, -5.55069, 0.44 ) }
    dend_0 { pt3dadd( 59.9121, -6.38461, -5.53595, 0.44 ) }
    dend_0 { pt3dadd( 61.4879, -6.92631, -5.53722, 0.44 ) }
    dend_0 { pt3dadd( 63.5737, -7.76105, -5.68202, 2.28 ) }
    dend_0 { pt3dadd( 63.9248, -7.92483, -5.72569, 2.28 ) }
    dend_0 { pt3dadd( 64.4025, -8.17657, -5.80782, 2.5 ) }
    dend_0 { pt3dadd( 65.8766, -8.98433, -6.09455, 1.55 ) }
    dend_0 { pt3dadd( 67.8832, -10.1019, -6.52913, 0.66 ) }
    dend_0 { pt3dadd( 69.1556, -10.8098, -6.82609, 0.29 ) }
    dend_0 { pt3dadd( 70.2886, -11.4375, -7.00079, 0.29 ) }
    dend_0 { pt3dadd( 70.4806, -11.5452, -7.02183, 0.29 ) }
    dend_0 { pt3dadd( 72.4705, -12.6852, -7.17013, 2.21 ) }
    dend_0 { pt3dadd( 73.1746, -13.0995, -7.19486, 2.36 ) }
    dend_0 { pt3dadd( 75.353, -14.3828, -7.20569, 0.96 ) }
    dend_0 { pt3dadd( 77.3102, -15.4754, -7.32557, 0.29 ) }
    dend_0 { pt3dadd( 78.4454, -16.0844, -7.43548, 0.29 ) }
    dend_0 { pt3dadd( 79.512, -16.6483, -7.62252, 0.52 ) }
    dend_0 { pt3dadd( 79.6142, -16.7028, -7.65137, 0.52 ) }
    dend_0 { pt3dadd( 80.9987, -17.3775, -8.29411, 0.81 ) }
    dend_0 { pt3dadd( 82.6879, -18.1492, -9.35052, 1.92 ) }
    dend_0 { pt3dadd( 82.7652, -18.1826, -9.40722, 1.92 ) }
    dend_0 { pt3dadd( 84.6091, -18.9331, -10.8135, 2.21 ) }
    dend_0 { pt3dadd( 86.0243, -19.4902, -11.8925, 0.96 ) }
    dend_0 { pt3dadd( 88.7797, -20.5606, -14.0736, 0.44 ) }
    dend_0 { pt3dadd( 88.8546, -20.5868, -14.1373, 0.44 ) }
    dend_0 { pt3dadd( 89.555, -20.8075, -14.7684, 0.66 ) }
    dend_0 { pt3dadd( 90.7178, -21.1375, -15.8159, 0.96 ) }
    dend_0 { pt3dadd( 92.0163, -21.4708, -16.9838, 2.06 ) }
    dend_0 { pt3dadd( 93.7205, -21.8545, -18.491, 1.18 ) }
    dend_0 { pt3dadd( 96.3808, -22.417, -20.8034, 0.29 ) }
    dend_0 { pt3dadd( 97.6348, -22.6457, -21.9687, 1.55 ) }
    dend_0 { pt3dadd( 99.2889, -22.9144, -23.5855, 0.52 ) }
    dend_0 { pt3dadd( 99.7247, -22.9827, -24.0229, 0.52 ) }
    dend_0 { pt3dadd( 101.905, -23.3257, -26.2832, 3.17 ) }
    dend_0 { pt3dadd( 103.231, -23.5403, -27.6621, 2.58 ) }
    dend_0 { pt3dadd( 107.119, -24.1578, -31.9204, 0.44 ) }
    dend_0 { pt3dadd( 108.433, -24.3661, -33.4345, 0.44 ) }
    dend_0 { pt3dadd( 109.167, -24.4843, -34.3257, 1.11 ) }
    dend_0 { pt3dadd( 110.75, -24.7445, -36.2588, 1.4 ) }
    dend_0 { pt3dadd( 110.827, -24.759, -36.3503, 1.4 ) }
    dend_0 { pt3dadd( 113.134, -25.2325, -38.9475, 0.29 ) }
    dend_0 { pt3dadd( 114.386, -25.48, -40.3362, 0.29 ) }
    dend_0 { pt3dadd( 114.534, -25.5093, -40.495, 0.29 ) }
    dend_0 { pt3dadd( 115.813, -25.741, -41.8541, 1.84 ) }
    dend_0 { pt3dadd( 116.681, -25.8942, -42.7505, 2.06 ) }
    dend_0 { pt3dadd( 116.833, -25.9237, -42.9033, 2.06 ) }
    dend_0 { pt3dadd( 120.351, -26.7342, -46.0085, 0.29 ) }
    dend_0 { pt3dadd( 121.895, -27.1432, -47.1154, 0.29 ) }
    dend_0 { pt3dadd( 124.009, -28.1832, -46.912, 1.84 ) }
    dend_0 { pt3dadd( 124.081, -28.2329, -46.8569, 1.84 ) }
    dend_0 { pt3dadd( 124.763, -28.7717, -46.2347, 1.84 ) }
    dend_0 { pt3dadd( 130.822, -34.1997, -40.7864, 0.29 ) }
    dend_0 { pt3dadd( 131.411, -34.8076, -40.2149, 0.44 ) }
    dend_0 { pt3dadd( 132.372, -35.8974, -39.3167, 0.88 ) }
    dend_0 { pt3dadd( 133.049, -36.6851, -38.9024, 0.59 ) }
    dend_0 { pt3dadd( 134.256, -38.0104, -39.3486, 0.44 ) }
    dend_0 { pt3dadd( 135.874, -39.7237, -40.9717, 0.52 ) }
    dend_0 { pt3dadd( 136.524, -40.3722, -41.7743, 0.88 ) }
    dend_0 { pt3dadd( 136.651, -40.5004, -41.9281, 0.88 ) }
    dend_0 { pt3dadd( 137.826, -41.5903, -43.2065, 1.18 ) }
    dend_0 { pt3dadd( 138.712, -42.2916, -44.0278, 0.59 ) }
    dend_0 { pt3dadd( 139.034, -42.4987, -44.2751, 0.59 ) }
    dend_0 { pt3dadd( 139.992, -42.965, -44.8468, 0.59 ) }
    dend_0 { pt3dadd( 140.099, -43.0106, -44.9078, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_0 { pt3dadd( 141.315, -43.4895, -45.5466, 0.96 ) }
    dend_0 { pt3dadd( 141.48, -43.5337, -45.5991, 4.2 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 2/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -6.97132, 4.70235, -1.23489, 0.997912 ) }
    axon_0 { pt3dadd( -19.0858, 13.5477, -1.23489, 0.997912 ) }
    axon_0 { pt3dadd( -31.2003, 22.393, -1.23489, 0.997912 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 5/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 6.24694, 15.8457, -15.1098, 2.43 ) }
    dend_32 { pt3dadd( 4.14617, 16.7561, -15.7458, 2.43 ) }
    dend_32 { pt3dadd( 2.92914, 17.213, -16.0963, 1.18 ) }
    dend_32 { pt3dadd( 2.27893, 17.4296, -16.2642, 1.03 ) }
    dend_32 { pt3dadd( 1.07088, 17.8036, -16.5386, 1.62 ) }
    dend_32 { pt3dadd( 0.0121416, 18.1264, -16.7728, 1.62 ) }
    dend_32 { pt3dadd( -1.28564, 18.5348, -17.0835, 1.84 ) }
    dend_32 { pt3dadd( -1.28564, 18.5348, -17.0835, 2.28 ) }
    dend_32 { pt3dadd( -2.54462, 18.9403, -17.4298, 2.28 ) }
    dend_32 { pt3dadd( -3.82213, 19.4419, -17.8904, 1.84 ) }
    dend_32 { pt3dadd( -5.1833, 20.0946, -18.4783, 1.62 ) }
    dend_32 { pt3dadd( -6.42505, 20.7938, -19.0755, 1.4 ) }
    dend_32 { pt3dadd( -7.15734, 21.2518, -19.4404, 1.84 ) }
    dend_32 { pt3dadd( -8.46156, 22.1173, -20.077, 1.84 ) }
    dend_32 { pt3dadd( -9.71797, 23.0227, -20.6774, 1.84 ) }
    dend_32 { pt3dadd( -10.7865, 23.8356, -21.1624, 1.77 ) }
    dend_32 { pt3dadd( -11.7944, 24.6293, -21.5848, 1.11 ) }
    dend_32 { pt3dadd( -12.4503, 25.1524, -21.8366, 1.33 ) }
    dend_32 { pt3dadd( -13.5466, 26.0246, -22.2382, 1.47 ) }
    dend_32 { pt3dadd( -14.7865, 27.0235, -22.6524, 1.18 ) }
    dend_32 { pt3dadd( -15.5016, 27.615, -22.8915, 1.47 ) }
    dend_32 { pt3dadd( -16.3213, 28.316, -23.1902, 1.99 ) }
    dend_32 { pt3dadd( -17.1079, 29.0172, -23.5198, 2.06 ) }
    dend_32 { pt3dadd( -17.7892, 29.6592, -23.84, 2.21 ) }
    dend_32 { pt3dadd( -18.5672, 30.4401, -24.2376, 2.21 ) }
    dend_32 { pt3dadd( -19.2902, 31.2095, -24.6287, 2.14 ) }
    dend_32 { pt3dadd( -19.8321, 31.8155, -24.933, 1.62 ) }
    dend_32 { pt3dadd( -20.4401, 32.5079, -25.2711, 1.25 ) }
    dend_32 { pt3dadd( -20.9509, 33.0738, -25.5896, 0.88 ) }
    dend_32 { pt3dadd( -21.2589, 33.3847, -25.8059, 0.81 ) }
    dend_32 { pt3dadd( -21.8074, 33.868, -26.239, 0.88 ) }
    dend_32 { pt3dadd( -22.31, 34.2489, -26.6926, 0.88 ) }
    dend_32 { pt3dadd( -22.7484, 34.5621, -27.1267, 0.88 ) }
    dend_32 { pt3dadd( -23.5811, 35.1246, -27.9711, 0.88 ) }
    dend_32 { pt3dadd( -24.0762, 35.4586, -28.485, 0.88 ) }
    dend_32 { pt3dadd( -24.3094, 35.6182, -28.7278, 0.88 ) }
    dend_32 { pt3dadd( -24.7521, 35.9688, -29.1728, 0.59 ) }
    dend_32 { pt3dadd( -25.1887, 36.3852, -29.5734, 0.59 ) }
    dend_32 { pt3dadd( -25.4659, 36.7118, -29.769, 0.81 ) }
    dend_32 { pt3dadd( -25.8646, 37.239, -29.9161, 0.81 ) }
    dend_32 { pt3dadd( -25.906, 37.294, -29.9265, 0.81 ) }
    dend_32 { pt3dadd( -26.507, 38.0394, -30.0218, 1.77 ) }
    dend_32 { pt3dadd( -26.9361, 38.524, -30.0801, 2.65 ) }
    dend_32 { pt3dadd( -27.6012, 39.2123, -30.1541, 3.68 ) }
    dend_32 { pt3dadd( -28.0979, 39.7105, -30.1939, 3.68 ) }
    dend_32 { pt3dadd( -28.652, 40.251, -30.2533, 3.68 ) }
    dend_32 { pt3dadd( -29.2449, 40.8122, -30.3171, 3.39 ) }
    dend_32 { pt3dadd( -29.8896, 41.3937, -30.3833, 3.09 ) }
    dend_32 { pt3dadd( -30.5751, 41.9947, -30.4587, 1.99 ) }
    dend_32 { pt3dadd( -31.0965, 42.4454, -30.5274, 1.33 ) }
    dend_32 { pt3dadd( -31.5639, 42.8503, -30.5802, 0.88 ) }
    dend_32 { pt3dadd( -32.9317, 44.0584, -30.6795, 0.59 ) }
    dend_32 { pt3dadd( -33.3678, 44.448, -30.7065, 0.59 ) }
    dend_32 { pt3dadd( -33.8125, 44.8602, -30.7199, 0.59 ) }
    dend_32 { pt3dadd( -34.1782, 45.2153, -30.7391, 0.81 ) }
    dend_32 { pt3dadd( -34.2199, 45.2601, -30.7402, 0.81 ) }
    dend_32 { pt3dadd( -34.6784, 45.8066, -30.7257, 0.81 ) }
    dend_32 { pt3dadd( -34.713, 45.8572, -30.7255, 0.81 ) }
    dend_32 { pt3dadd( -35.0665, 46.4005, -30.7103, 0.81 ) }
    dend_32 { pt3dadd( -35.1612, 46.5361, -30.7225, 0.81 ) }
    dend_32 { pt3dadd( -35.5412, 47.0111, -30.8611, 0.81 ) }
    dend_32 { pt3dadd( -35.5944, 47.0742, -30.8869, 0.81 ) }
    dend_32 { pt3dadd( -36.1459, 47.6945, -31.2572, 0.37 ) }
    dend_32 { pt3dadd( -36.5662, 48.1527, -31.5468, 1.62 ) }
    dend_32 { pt3dadd( -37.5272, 49.1693, -32.2156, 2.06 ) }
    dend_32 { pt3dadd( -38.5258, 50.2239, -32.8846, 2.73 ) }
    dend_32 { pt3dadd( -38.9286, 50.6486, -33.141, 2.73 ) }
    dend_32 { pt3dadd( -40.0105, 51.7971, -33.7708, 2.06 ) }
    dend_32 { pt3dadd( -40.6464, 52.4718, -34.121, 1.33 ) }
    dend_32 { pt3dadd( -40.9449, 52.7977, -34.2648, 1.33 ) }
    dend_32 { pt3dadd( -41.9486, 53.9333, -34.6181, 0.66 ) }
    dend_32 { pt3dadd( -42.4162, 54.4846, -34.734, 1.03 ) }
    dend_32 { pt3dadd( -42.9409, 55.1146, -34.8425, 1.18 ) }
    dend_32 { pt3dadd( -43.6985, 56.0476, -34.9584, 0.88 ) }
    dend_32 { pt3dadd( -44.148, 56.6095, -35.0464, 0.88 ) }
    dend_32 { pt3dadd( -44.5172, 57.0689, -35.1224, 0.74 ) }
    dend_32 { pt3dadd( -44.9026, 57.5416, -35.1977, 0.74 ) }
    dend_32 { pt3dadd( -45.4699, 58.2487, -35.3246, 0.52 ) }
    dend_32 { pt3dadd( -45.8865, 58.7705, -35.4371, 0.74 ) }
    dend_32 { pt3dadd( -46.1666, 59.1116, -35.5321, 0.74 ) }
    dend_32 { pt3dadd( -46.5359, 59.5317, -35.6893, 0.74 ) }
    dend_32 { pt3dadd( -46.9459, 59.9789, -35.8876, 1.25 ) }
    dend_32 { pt3dadd( -47.4281, 60.4964, -36.1271, 2.06 ) }
    dend_32 { pt3dadd( -48.0646, 61.1596, -36.5919, 2.58 ) }
    dend_32 { pt3dadd( -48.6786, 61.7913, -37.1064, 3.02 ) }
    dend_32 { pt3dadd( -49.2931, 62.4155, -37.6329, 3.17 ) }
    dend_32 { pt3dadd( -49.3358, 62.4584, -37.669, 3.17 ) }
    dend_32 { pt3dadd( -49.859, 62.9819, -38.146, 2.58 ) }
    dend_32 { pt3dadd( -51.6399, 64.7832, -39.8199, 0.29 ) }
    dend_32 { pt3dadd( -52.2537, 65.4192, -40.4175, 0.29 ) }
    dend_32 { pt3dadd( -52.7652, 65.9732, -40.9275, 0.29 ) }
    dend_32 { pt3dadd( -53.0368, 66.286, -41.2186, 0.88 ) }
    dend_32 { pt3dadd( -53.9092, 67.3236, -42.1435, 1.18 ) }
    dend_32 { pt3dadd( -54.3363, 67.855, -42.6109, 1.18 ) }
    dend_32 { pt3dadd( -54.3677, 67.8972, -42.6439, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( -54.7629, 68.4577, -43.1129, 1.18 ) }
    dend_32 { pt3dadd( -55.2707, 69.2103, -43.7257, 0.74 ) }
    dend_32 { pt3dadd( -55.5753, 69.6733, -44.0643, 0.81 ) }
    dend_32 { pt3dadd( -56.206, 70.6443, -44.6898, 1.55 ) }
    dend_32 { pt3dadd( -56.7515, 71.4833, -45.2006, 2.14 ) }
    dend_32 { pt3dadd( -57.0997, 72.0195, -45.4965, 2.43 ) }
    dend_32 { pt3dadd( -57.4483, 72.554, -45.7574, 2.43 ) }
    dend_32 { pt3dadd( -57.7983, 73.0987, -45.9662, 1.47 ) }
    dend_32 { pt3dadd( -58.4802, 74.2035, -46.2914, 0.59 ) }
    dend_32 { pt3dadd( -58.8498, 74.8104, -46.4239, 0.59 ) }
    dend_32 { pt3dadd( -59.2092, 75.4017, -46.5424, 0.59 ) }
    dend_32 { pt3dadd( -59.3873, 75.6961, -46.6117, 0.74 ) }
    dend_32 { pt3dadd( -59.8347, 76.4733, -46.7938, 0.74 ) }
    dend_32 { pt3dadd( -60.1982, 77.1334, -46.9312, 0.52 ) }
    dend_32 { pt3dadd( -60.7514, 78.1754, -47.1686, 0.22 ) }
    dend_32 { pt3dadd( -61.0396, 78.7339, -47.3318, 0.74 ) }
    dend_32 { pt3dadd( -61.511, 79.6754, -47.6261, 2.14 ) }
    dend_32 { pt3dadd( -62.0245, 80.693, -47.94, 2.95 ) }
    dend_32 { pt3dadd( -62.4335, 81.4967, -48.193, 2.8 ) }
    dend_32 { pt3dadd( -63.2244, 83.0213, -48.6538, 1.18 ) }
    dend_32 { pt3dadd( -63.6573, 83.8411, -48.9057, 0.59 ) }
    dend_32 { pt3dadd( -64.3073, 85.0741, -49.2985, 0.44 ) }
    dend_32 { pt3dadd( -64.8119, 86.0228, -49.5946, 0.44 ) }
    dend_32 { pt3dadd( -65.2704, 86.8788, -49.86, 0.96 ) }
    dend_32 { pt3dadd( -65.5634, 87.4339, -50.0183, 1.69 ) }
    dend_32 { pt3dadd( -66.0479, 88.3877, -50.2278, 2.06 ) }
    dend_32 { pt3dadd( -66.2869, 88.8866, -50.3209, 2.06 ) }
    dend_32 { pt3dadd( -66.5684, 89.5467, -50.4392, 1.55 ) }
    dend_32 { pt3dadd( -66.8383, 90.2794, -50.5489, 0.66 ) }
    dend_32 { pt3dadd( -66.8763, 90.3931, -50.5596, 0.66 ) }
    dend_32 { pt3dadd( -67.2089, 91.4553, -50.623, 0.44 ) }
    dend_32 { pt3dadd( -67.5253, 92.4713, -50.6163, 0.59 ) }
    dend_32 { pt3dadd( -67.7059, 93.0149, -50.6606, 0.59 ) }
    dend_32 { pt3dadd( -67.7253, 93.0718, -50.669, 0.59 ) }
    dend_32 { pt3dadd( -67.8817, 93.5239, -50.7686, 0.59 ) }
    dend_32 { pt3dadd( -67.9041, 93.5868, -50.7856, 0.59 ) }
    dend_32 { pt3dadd( -68.4757, 95.125, -51.2646, 0.29 ) }
    dend_32 { pt3dadd( -69.0011, 96.4556, -51.6617, 0.96 ) }
    dend_32 { pt3dadd( -69.2156, 96.9632, -51.7952, 1.99 ) }
    dend_32 { pt3dadd( -69.6106, 97.8761, -52.0096, 2.58 ) }
    dend_32 { pt3dadd( -69.9905, 98.6951, -52.164, 2.58 ) }
    dend_32 { pt3dadd( -70.4898, 99.6496, -52.2824, 1.4 ) }
    dend_32 { pt3dadd( -70.9788, 100.446, -52.3124, 0.22 ) }
    dend_32 { pt3dadd( -71.469, 101.154, -52.2649, 0.22 ) }
    dend_32 { pt3dadd( -71.5126, 101.211, -52.261, 0.22 ) }
    dend_32 { pt3dadd( -72.4395, 102.315, -52.1699, 0.22 ) }
    dend_32 { pt3dadd( -73.2574, 103.233, -52.1536, 0.15 ) }
    dend_32 { pt3dadd( -73.9684, 103.999, -52.19, 1.84 ) }
    dend_32 { pt3dadd( -74.4318, 104.491, -52.2425, 2.21 ) }
    dend_32 { pt3dadd( -75.152, 105.25, -52.336, 2.06 ) }
    dend_32 { pt3dadd( -75.715, 105.849, -52.4147, 1.69 ) }
    dend_32 { pt3dadd( -76.5648, 106.759, -52.5775, 0.22 ) }
    dend_32 { pt3dadd( -77.6816, 108.001, -52.8311, 0.15 ) }
    dend_32 { pt3dadd( -78.2956, 108.707, -53.0204, 0.15 ) }
    dend_32 { pt3dadd( -78.4727, 108.914, -53.0946, 0.59 ) }
    dend_32 { pt3dadd( -78.7786, 109.279, -53.2387, 0.66 ) }
    dend_32 { pt3dadd( -79.4133, 110.05, -53.5761, 1.11 ) }
    dend_32 { pt3dadd( -79.7687, 110.484, -53.7902, 2.28 ) }
    dend_32 { pt3dadd( -80.5102, 111.414, -54.254, 1.92 ) }
    dend_32 { pt3dadd( -82.1056, 113.438, -55.265, 0.15 ) }
    dend_32 { pt3dadd( -82.5061, 113.95, -55.5133, 0.15 ) }
    dend_32 { pt3dadd( -82.7187, 114.23, -55.6454, 0.74 ) }
    dend_32 { pt3dadd( -83.3282, 115.091, -55.998, 1.77 ) }
    dend_32 { pt3dadd( -83.9799, 116.061, -56.3518, 2.58 ) }
    dend_32 { pt3dadd( -84.53, 116.942, -56.6123, 2.06 ) }
    dend_32 { pt3dadd( -84.8292, 117.478, -56.7528, 1.84 ) }
    dend_32 { pt3dadd( -86.1755, 120.031, -57.4022, 0.22 ) }
    dend_32 { pt3dadd( -86.7349, 121.246, -57.7605, 0.22 ) }
    dend_32 { pt3dadd( -86.9316, 121.739, -57.9291, 1.33 ) }
    dend_32 { pt3dadd( -87.1571, 122.365, -58.1665, 1.55 ) }
    dend_32 { pt3dadd( -87.3226, 122.859, -58.3467, 1.55 ) }
    dend_32 { pt3dadd( -87.4116, 123.153, -58.4568, 1.55 ) }
    dend_32 { pt3dadd( -88.1712, 126.276, -59.715, 0.22 ) }
    dend_32 { pt3dadd( -88.4149, 127.308, -60.2018, 1.99 ) }
    dend_32 { pt3dadd( -88.704, 128.552, -60.8433, 3.24 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 75/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 6.24694, 15.8457, -15.1098, 1.03 ) }
    dend_25 { pt3dadd( 8.32818, 17.2048, -14.2265, 1.03 ) }
    dend_25 { pt3dadd( 9.00205, 17.7185, -13.9271, 0.88 ) }
    dend_25 { pt3dadd( 9.69559, 18.2942, -13.6367, 0.96 ) }
    dend_25 { pt3dadd( 10.5206, 19.0305, -13.3423, 0.88 ) }
    dend_25 { pt3dadd( 11.0209, 19.4853, -13.1528, 1.03 ) }
    dend_25 { pt3dadd( 11.8169, 20.2143, -12.8577, 1.18 ) }
    dend_25 { pt3dadd( 12.6475, 21.0778, -12.564, 1.47 ) }
    dend_25 { pt3dadd( 13.4726, 21.9087, -12.2758, 1.62 ) }
    dend_25 { pt3dadd( 14.2494, 22.6855, -12.0203, 1.03 ) }
    dend_25 { pt3dadd( 15.4428, 23.8321, -11.6535, 1.33 ) }
    dend_25 { pt3dadd( 16.2414, 24.5523, -11.4105, 1.62 ) }
    dend_25 { pt3dadd( 16.2816, 24.5859, -11.3976, 1.62 ) }
    dend_25 { pt3dadd( 17.8854, 25.8659, -10.8916, 3.09 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 89/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -2.894, 8.00804, 12.4831, 2.06 ) }
    dend_19 { pt3dadd( -4.11412, 8.63022, 13.0941, 2.06 ) }
    dend_19 { pt3dadd( -5.77583, 9.47759, 13.9262, 2.06 ) }
    dend_19 { pt3dadd( -6.6992, 9.94844, 14.3885, 2.14 ) }
    dend_19 { pt3dadd( -7.47738, 10.3453, 14.7782, 2.14 ) }
    dend_19 { pt3dadd( -9.10465, 11.1751, 15.593, 2.14 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 95/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -2.894, 8.00804, 12.4831, 1.62 ) }
    dend_18 { pt3dadd( -2.12441, 9.68376, 12.3975, 1.62 ) }
    dend_18 { pt3dadd( -1.84466, 10.3064, 12.3432, 1.25 ) }
    dend_18 { pt3dadd( -1.7346, 10.5503, 12.3217, 1.25 ) }
    dend_18 { pt3dadd( -1.49103, 11.0892, 12.2752, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -1.19894, 11.7267, 12.1963, 1.11 ) }
    dend_18 { pt3dadd( -0.926728, 12.3114, 12.1113, 1.11 ) }
    dend_18 { pt3dadd( -0.684446, 12.8283, 12.0052, 1.11 ) }
    dend_18 { pt3dadd( -0.437446, 13.3044, 11.9023, 1.11 ) }
    dend_18 { pt3dadd( -0.263658, 13.5944, 11.8348, 1.11 ) }
    dend_18 { pt3dadd( 0.100518, 14.0663, 11.731, 1.11 ) }
    dend_18 { pt3dadd( 0.380068, 14.3458, 11.6722, 1.11 ) }
    dend_18 { pt3dadd( 0.537381, 14.464, 11.6355, 1.11 ) }
    dend_18 { pt3dadd( 1.06742, 14.7768, 11.4792, 1.11 ) }
    dend_18 { pt3dadd( 1.66116, 15.0697, 11.2929, 1.47 ) }
    dend_18 { pt3dadd( 2.79475, 15.538, 10.9534, 1.47 ) }
    dend_18 { pt3dadd( 3.83102, 15.9158, 10.6909, 1.47 ) }
    dend_18 { pt3dadd( 5.48656, 16.4686, 10.2984, 1.33 ) }
    dend_18 { pt3dadd( 6.64464, 16.8256, 10.0521, 1.11 ) }
    dend_18 { pt3dadd( 7.44422, 17.0391, 9.94301, 0.81 ) }
    dend_18 { pt3dadd( 8.49039, 17.304, 9.88117, 0.74 ) }
    dend_18 { pt3dadd( 9.5967, 17.585, 9.9244, 1.03 ) }
    dend_18 { pt3dadd( 10.3238, 17.7898, 10.0343, 1.4 ) }
    dend_18 { pt3dadd( 11.4253, 18.1511, 10.3249, 1.84 ) }
    dend_18 { pt3dadd( 12.9402, 18.7231, 10.8221, 2.21 ) }
    dend_18 { pt3dadd( 13.9109, 19.1359, 11.1667, 1.92 ) }
    dend_18 { pt3dadd( 14.4961, 19.4167, 11.386, 1.62 ) }
    dend_18 { pt3dadd( 15.0634, 19.7068, 11.585, 1.47 ) }
    dend_18 { pt3dadd( 15.4768, 19.9294, 11.7196, 1.33 ) }
    dend_18 { pt3dadd( 15.9343, 20.1938, 11.8334, 1.03 ) }
    dend_18 { pt3dadd( 16.2771, 20.3899, 11.8519, 0.88 ) }
    dend_18 { pt3dadd( 16.7549, 20.6333, 11.828, 0.88 ) }
    dend_18 { pt3dadd( 17.2632, 20.8594, 11.7444, 0.66 ) }
    dend_18 { pt3dadd( 17.7638, 21.0596, 11.6199, 0.59 ) }
    dend_18 { pt3dadd( 18.2591, 21.2404, 11.4834, 0.88 ) }
    dend_18 { pt3dadd( 19.1405, 21.5158, 11.2412, 1.18 ) }
    dend_18 { pt3dadd( 20.0712, 21.77, 11.0055, 1.69 ) }
    dend_18 { pt3dadd( 21.005, 22.0043, 10.8166, 1.18 ) }
    dend_18 { pt3dadd( 21.7019, 22.1734, 10.7294, 0.81 ) }
    dend_18 { pt3dadd( 22.5394, 22.3747, 10.6767, 0.81 ) }
    dend_18 { pt3dadd( 23.5467, 22.6187, 10.6794, 0.81 ) }
    dend_18 { pt3dadd( 24.2858, 22.8173, 10.7476, 1.11 ) }
    dend_18 { pt3dadd( 25.0734, 23.0595, 10.8918, 1.55 ) }
    dend_18 { pt3dadd( 25.9044, 23.3667, 11.1031, 2.06 ) }
    dend_18 { pt3dadd( 26.3606, 23.5681, 11.2422, 2.06 ) }
    dend_18 { pt3dadd( 26.7706, 23.7827, 11.3706, 2.06 ) }
    dend_18 { pt3dadd( 27.4451, 24.1984, 11.5805, 1.47 ) }
    dend_18 { pt3dadd( 28.1136, 24.6501, 11.7803, 1.03 ) }
    dend_18 { pt3dadd( 28.4624, 24.9, 11.874, 0.88 ) }
    dend_18 { pt3dadd( 28.9638, 25.2814, 12.0411, 0.81 ) }
    dend_18 { pt3dadd( 29.5131, 25.7201, 12.246, 1.25 ) }
    dend_18 { pt3dadd( 29.9856, 26.1166, 12.4546, 0.81 ) }
    dend_18 { pt3dadd( 30.6766, 26.7362, 12.7823, 0.81 ) }
    dend_18 { pt3dadd( 30.9922, 27.0376, 12.9304, 0.74 ) }
    dend_18 { pt3dadd( 31.6806, 27.7203, 13.2713, 0.74 ) }
    dend_18 { pt3dadd( 32.3906, 28.4333, 13.6161, 1.47 ) }
    dend_18 { pt3dadd( 33.2406, 29.278, 14.0193, 1.77 ) }
    dend_18 { pt3dadd( 34.1779, 30.1578, 14.4288, 1.62 ) }
    dend_18 { pt3dadd( 34.6776, 30.5897, 14.6342, 0.88 ) }
    dend_18 { pt3dadd( 35.3068, 31.0768, 14.8688, 0.52 ) }
    dend_18 { pt3dadd( 35.7377, 31.3561, 15.0014, 0.52 ) }
    dend_18 { pt3dadd( 36.142, 31.5626, 15.1134, 0.52 ) }
    dend_18 { pt3dadd( 36.5731, 31.7441, 15.2127, 0.52 ) }
    dend_18 { pt3dadd( 37.5263, 32.0926, 15.3946, 0.81 ) }
    dend_18 { pt3dadd( 38.231, 32.353, 15.4898, 1.62 ) }
    dend_18 { pt3dadd( 39.3831, 32.8263, 15.5894, 2.36 ) }
    dend_18 { pt3dadd( 40.2683, 33.228, 15.6444, 2.36 ) }
    dend_18 { pt3dadd( 40.6179, 33.4005, 15.6503, 2.36 ) }
    dend_18 { pt3dadd( 41.2915, 33.7561, 15.648, 2.28 ) }
    dend_18 { pt3dadd( 42.3191, 34.334, 15.613, 1.99 ) }
    dend_18 { pt3dadd( 43.3531, 34.9628, 15.61, 1.99 ) }
    dend_18 { pt3dadd( 44.0262, 35.4072, 15.6278, 1.69 ) }
    dend_18 { pt3dadd( 44.8533, 35.9837, 15.6951, 1.18 ) }
    dend_18 { pt3dadd( 45.4566, 36.4243, 15.7769, 0.59 ) }
    dend_18 { pt3dadd( 45.9683, 36.8392, 15.8837, 0.59 ) }
    dend_18 { pt3dadd( 46.5283, 37.3489, 16.0256, 0.81 ) }
    dend_18 { pt3dadd( 46.8482, 37.6766, 16.1093, 1.03 ) }
    dend_18 { pt3dadd( 47.1219, 38.0013, 16.2095, 1.03 ) }
    dend_18 { pt3dadd( 47.437, 38.4295, 16.3509, 1.03 ) }
    dend_18 { pt3dadd( 47.8882, 39.1047, 16.5317, 1.03 ) }
    dend_18 { pt3dadd( 48.1471, 39.5284, 16.6305, 0.74 ) }
    dend_18 { pt3dadd( 48.4657, 40.0993, 16.7171, 0.74 ) }
    dend_18 { pt3dadd( 49.0217, 41.2272, 16.8333, 0.66 ) }
    dend_18 { pt3dadd( 49.2416, 41.7208, 16.8611, 0.29 ) }
    dend_18 { pt3dadd( 49.4806, 42.3139, 16.8578, 0.66 ) }
    dend_18 { pt3dadd( 49.6779, 42.738, 16.8162, 1.18 ) }
    dend_18 { pt3dadd( 50.0029, 43.34, 16.7257, 1.62 ) }
    dend_18 { pt3dadd( 50.3117, 43.8359, 16.6322, 1.11 ) }
    dend_18 { pt3dadd( 50.5316, 44.1333, 16.5872, 0.88 ) }
    dend_18 { pt3dadd( 50.914, 44.6095, 16.5566, 0.74 ) }
    dend_18 { pt3dadd( 52.3281, 46.2346, 16.5868, 0.44 ) }
    dend_18 { pt3dadd( 52.8669, 46.814, 16.6079, 1.11 ) }
    dend_18 { pt3dadd( 53.5043, 47.4421, 16.646, 1.84 ) }
    dend_18 { pt3dadd( 54.428, 48.3107, 16.7187, 2.21 ) }
    dend_18 { pt3dadd( 54.8294, 48.6614, 16.7539, 2.36 ) }
    dend_18 { pt3dadd( 55.3892, 49.1212, 16.8136, 1.77 ) }
    dend_18 { pt3dadd( 56.0085, 49.6205, 16.8821, 1.11 ) }
    dend_18 { pt3dadd( 56.9892, 50.414, 16.9224, 0.44 ) }
    dend_18 { pt3dadd( 57.4581, 50.8115, 16.9018, 0.44 ) }
    dend_18 { pt3dadd( 57.9827, 51.3187, 16.8164, 0.44 ) }
    dend_18 { pt3dadd( 58.0855, 51.4298, 16.7933, 0.44 ) }
    dend_18 { pt3dadd( 58.2185, 51.6165, 16.7516, 0.44 ) }
    dend_18 { pt3dadd( 58.5015, 52.2145, 16.6279, 0.81 ) }
    dend_18 { pt3dadd( 58.641, 52.7775, 16.4938, 1.25 ) }
    dend_18 { pt3dadd( 58.7233, 53.2277, 16.3837, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( 58.8157, 53.8071, 16.2644, 0.96 ) }
    dend_18 { pt3dadd( 58.8536, 53.9945, 16.2296, 0.88 ) }
    dend_18 { pt3dadd( 59.0226, 54.6105, 16.1325, 0.52 ) }
    dend_18 { pt3dadd( 59.246, 55.2043, 16.0643, 0.52 ) }
    dend_18 { pt3dadd( 59.4607, 55.6613, 16.0315, 0.52 ) }
    dend_18 { pt3dadd( 59.7096, 56.1143, 16.0186, 0.96 ) }
    dend_18 { pt3dadd( 59.9157, 56.4626, 16.0029, 0.96 ) }
    dend_18 { pt3dadd( 60.2259, 56.9491, 15.9615, 0.66 ) }
    dend_18 { pt3dadd( 60.5589, 57.4355, 15.8808, 0.66 ) }
    dend_18 { pt3dadd( 61.1141, 58.2809, 15.6501, 1.33 ) }
    dend_18 { pt3dadd( 61.3447, 58.609, 15.5395, 1.92 ) }
    dend_18 { pt3dadd( 61.8769, 59.3687, 15.2625, 2.14 ) }
    dend_18 { pt3dadd( 62.1043, 59.693, 15.1395, 2.14 ) }
    dend_18 { pt3dadd( 62.5956, 60.3993, 14.8628, 1.99 ) }
    dend_18 { pt3dadd( 63.6818, 61.9519, 14.2482, 0.15 ) }
    dend_18 { pt3dadd( 64.2109, 62.6993, 13.9691, 0.22 ) }
    dend_18 { pt3dadd( 64.4394, 63.0184, 13.8718, 0.22 ) }
    dend_18 { pt3dadd( 64.6575, 63.3285, 13.7979, 0.59 ) }
    dend_18 { pt3dadd( 64.8046, 63.5478, 13.7496, 0.59 ) }
    dend_18 { pt3dadd( 65.0173, 63.8935, 13.6575, 0.59 ) }
    dend_18 { pt3dadd( 65.7435, 65.2213, 13.2248, 0.15 ) }
    dend_18 { pt3dadd( 66.106, 65.9336, 12.962, 1.33 ) }
    dend_18 { pt3dadd( 66.4221, 66.5521, 12.7097, 2.21 ) }
    dend_18 { pt3dadd( 66.7962, 67.3093, 12.386, 2.65 ) }
    dend_18 { pt3dadd( 67.903, 69.5655, 11.3334, 0.44 ) }
    dend_18 { pt3dadd( 68.1764, 70.1537, 11.0239, 0.44 ) }
    dend_18 { pt3dadd( 68.2403, 70.3043, 10.9404, 0.15 ) }
    dend_18 { pt3dadd( 68.2646, 70.3633, 10.908, 0.15 ) }
    dend_18 { pt3dadd( 68.4286, 70.7449, 10.6979, 0.15 ) }
    dend_18 { pt3dadd( 68.9741, 71.9583, 10.0633, 2.21 ) }
    dend_18 { pt3dadd( 69.4423, 72.9176, 9.59986, 2.21 ) }
    dend_18 { pt3dadd( 70.3966, 74.716, 8.78438, 0.29 ) }
    dend_18 { pt3dadd( 70.9856, 75.7676, 8.32528, 2.21 ) }
    dend_18 { pt3dadd( 71.4739, 76.5446, 8.00778, 1.77 ) }
    dend_18 { pt3dadd( 72.2705, 77.6964, 7.57202, 0.37 ) }
    dend_18 { pt3dadd( 72.6648, 78.2471, 7.40453, 0.37 ) }
    dend_18 { pt3dadd( 73.0652, 78.7921, 7.26149, 0.88 ) }
    dend_18 { pt3dadd( 73.4802, 79.346, 7.13321, 1.4 ) }
    dend_18 { pt3dadd( 74.5138, 80.77, 6.86472, 0.29 ) }
    dend_18 { pt3dadd( 74.5633, 80.8439, 6.85234, 0.29 ) }
    dend_18 { pt3dadd( 75.2748, 81.9849, 6.66045, 0.29 ) }
    dend_18 { pt3dadd( 75.8515, 82.9626, 6.50014, 1.99 ) }
    dend_18 { pt3dadd( 76.3011, 83.7657, 6.37722, 2.5 ) }
    dend_18 { pt3dadd( 76.487, 84.1104, 6.32799, 2.5 ) }
    dend_18 { pt3dadd( 77.6125, 86.1275, 6.04388, 0.15 ) }
    dend_18 { pt3dadd( 77.8841, 86.5798, 5.96634, 0.96 ) }
    dend_18 { pt3dadd( 78.1786, 87.0356, 5.87829, 1.11 ) }
    dend_18 { pt3dadd( 78.4807, 87.4956, 5.77507, 1.11 ) }
    dend_18 { pt3dadd( 79.3824, 88.8497, 5.37959, 0.22 ) }
    dend_18 { pt3dadd( 80.5965, 90.6411, 4.78457, 0.22 ) }
    dend_18 { pt3dadd( 81.3073, 91.6723, 4.42036, 2.28 ) }
    dend_18 { pt3dadd( 81.3364, 91.7148, 4.40473, 2.28 ) }
    dend_18 { pt3dadd( 82.1053, 92.8536, 3.97803, 2.73 ) }
    dend_18 { pt3dadd( 82.9751, 94.1327, 3.49595, 0.15 ) }
    dend_18 { pt3dadd( 83.4752, 94.8835, 3.22271, 0.22 ) }
    dend_18 { pt3dadd( 83.8725, 95.5087, 3.01365, 0.22 ) }
    dend_18 { pt3dadd( 84.2572, 96.1242, 2.84917, 1.03 ) }
    dend_18 { pt3dadd( 84.5482, 96.6031, 2.73993, 1.77 ) }
    dend_18 { pt3dadd( 84.7921, 97.0238, 2.66226, 1.62 ) }
    dend_18 { pt3dadd( 85.0826, 97.5488, 2.57466, 1.4 ) }
    dend_18 { pt3dadd( 85.7199, 98.7528, 2.3049, 0.15 ) }
    dend_18 { pt3dadd( 86.0136, 99.3189, 2.15434, 0.15 ) }
    dend_18 { pt3dadd( 86.1341, 99.5579, 2.09122, 0.81 ) }
    dend_18 { pt3dadd( 86.4711, 100.193, 1.91044, 1.4 ) }
    dend_18 { pt3dadd( 86.6829, 100.588, 1.79312, 1.03 ) }
    dend_18 { pt3dadd( 87.9279, 102.869, 1.11954, 0.15 ) }
    dend_18 { pt3dadd( 88.3527, 103.641, 0.89113, 1.77 ) }
    dend_18 { pt3dadd( 88.7273, 104.312, 0.693166, 2.14 ) }
    dend_18 { pt3dadd( 89.8795, 106.352, 0.0581472, 0.29 ) }
    dend_18 { pt3dadd( 90.2834, 107.075, -0.163299, 0.29 ) }
    dend_18 { pt3dadd( 90.4926, 107.459, -0.279089, 0.88 ) }
    dend_18 { pt3dadd( 90.807, 108.06, -0.458275, 1.18 ) }
    dend_18 { pt3dadd( 91.0737, 108.616, -0.622919, 0.96 ) }
    dend_18 { pt3dadd( 91.4506, 109.443, -0.859659, 0.22 ) }
    dend_18 { pt3dadd( 91.9646, 110.67, -1.15922, 0.22 ) }
    dend_18 { pt3dadd( 92.3354, 111.548, -1.36351, 1.84 ) }
    dend_18 { pt3dadd( 92.6396, 112.29, -1.53114, 1.99 ) }
    dend_18 { pt3dadd( 92.8055, 112.715, -1.62028, 1.99 ) }
    dend_18 { pt3dadd( 93.4979, 114.576, -1.99509, 0.22 ) }
    dend_18 { pt3dadd( 93.8754, 115.687, -2.21651, 0.22 ) }
    dend_18 { pt3dadd( 93.8907, 115.737, -2.22806, 0.22 ) }
    dend_18 { pt3dadd( 94.0892, 116.491, -2.4145, 1.4 ) }
    dend_18 { pt3dadd( 94.2128, 117.069, -2.55786, 1.55 ) }
    dend_18 { pt3dadd( 94.2757, 117.505, -2.67414, 1.55 ) }
    dend_18 { pt3dadd( 94.3009, 119.153, -3.17216, 0.15 ) }
    dend_18 { pt3dadd( 94.2814, 119.406, -3.25115, 0.52 ) }
    dend_18 { pt3dadd( 94.2259, 119.737, -3.35915, 0.81 ) }
    dend_18 { pt3dadd( 94.1399, 120.056, -3.47018, 0.52 ) }
    dend_18 { pt3dadd( 94.0764, 120.225, -3.52753, 0.52 ) }
    dend_18 { pt3dadd( 93.8302, 120.668, -3.73857, 0.37 ) }
    dend_18 { pt3dadd( 93.4058, 121.286, -4.09417, 0.29 ) }
    dend_18 { pt3dadd( 92.816, 122.109, -4.62125, 0.29 ) }
    dend_18 { pt3dadd( 92.4226, 122.643, -4.99231, 1.69 ) }
    dend_18 { pt3dadd( 92.0906, 123.079, -5.30725, 1.47 ) }
    dend_18 { pt3dadd( 90.5352, 125.082, -6.8747, 0.15 ) }
    dend_18 { pt3dadd( 90.208, 125.492, -7.21274, 1.62 ) }
    dend_18 { pt3dadd( 89.8567, 125.923, -7.58827, 1.62 ) }
    dend_18 { pt3dadd( 89.7945, 125.998, -7.65496, 1.62 ) }
    dend_18 { pt3dadd( 89.3146, 126.575, -8.18087, 0.52 ) }
    dend_18 { pt3dadd( 88.9113, 127.112, -8.7153, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_18 { pt3dadd( 88.5105, 127.733, -9.37475, 0.15 ) }
    dend_18 { pt3dadd( 88.4247, 127.879, -9.54493, 0.15 ) }
    dend_18 { pt3dadd( 88.147, 128.411, -10.1848, 1.55 ) }
    dend_18 { pt3dadd( 87.9045, 128.918, -10.8114, 1.55 ) }
    dend_18 { pt3dadd( 87.171, 130.59, -12.8563, 0.07 ) }
    dend_18 { pt3dadd( 86.8593, 131.303, -13.6711, 0.59 ) }
    dend_18 { pt3dadd( 86.6075, 131.89, -14.334, 1.47 ) }
    dend_18 { pt3dadd( 86.3876, 132.401, -14.8831, 1.47 ) }
    dend_18 { pt3dadd( 86.3718, 132.438, -14.9195, 1.47 ) }
    dend_18 { pt3dadd( 85.8215, 133.712, -15.9274, 0.15 ) }
    dend_18 { pt3dadd( 85.4555, 134.473, -16.308, 0.15 ) }
    dend_18 { pt3dadd( 85.429, 134.524, -16.3328, 0.15 ) }
    dend_18 { pt3dadd( 85.3011, 134.765, -16.4635, 0.66 ) }
    dend_18 { pt3dadd( 85.1538, 135.036, -16.6166, 1.33 ) }
    dend_18 { pt3dadd( 84.9549, 135.413, -16.8423, 1.25 ) }
    dend_18 { pt3dadd( 84.888, 135.552, -16.9436, 1.25 ) }
    dend_18 { pt3dadd( 84.0397, 137.458, -18.3956, 0.15 ) }
    dend_18 { pt3dadd( 83.7847, 138.055, -18.8637, 1.84 ) }
    dend_18 { pt3dadd( 83.5779, 138.56, -19.3279, 1.84 ) }
    dend_18 { pt3dadd( 83.5614, 138.599, -19.3619, 1.84 ) }
    dend_18 { pt3dadd( 83.1102, 139.649, -20.2463, 0.96 ) }
    dend_18 { pt3dadd( 82.9008, 140.125, -20.6306, 0.59 ) }
    dend_18 { pt3dadd( 82.6171, 140.74, -21.0918, 0.59 ) }
    dend_18 { pt3dadd( 82.0254, 141.991, -22.03, 0.15 ) }
    dend_18 { pt3dadd( 81.1943, 143.753, -23.3032, 0.15 ) }
    dend_18 { pt3dadd( 81.0623, 144.025, -23.4821, 0.37 ) }
    dend_18 { pt3dadd( 80.7838, 144.574, -23.8248, 0.37 ) }
    dend_18 { pt3dadd( 80.6367, 144.856, -23.9924, 0.52 ) }
    dend_18 { pt3dadd( 80.4513, 145.206, -24.1712, 0.29 ) }
    dend_18 { pt3dadd( 79.6302, 146.755, -24.8191, 0.15 ) }
    dend_18 { pt3dadd( 79.4969, 147.013, -24.9481, 1.03 ) }
    dend_18 { pt3dadd( 79.108, 147.762, -25.2904, 1.33 ) }
    dend_18 { pt3dadd( 78.8248, 148.339, -25.4967, 1.77 ) }
    dend_18 { pt3dadd( 78.7737, 148.447, -25.5319, 2.14 ) }
    dend_18 { pt3dadd( 78.6808, 148.656, -25.5975, 2.36 ) }
    dend_18 { pt3dadd( 78.3614, 149.439, -25.8126, 2.14 ) }
    dend_18 { pt3dadd( 78.0009, 150.454, -26.0603, 0.22 ) }
    dend_18 { pt3dadd( 77.5318, 151.954, -26.3738, 0.15 ) }
    dend_18 { pt3dadd( 77.502, 152.063, -26.3983, 0.15 ) }
    dend_18 { pt3dadd( 77.3298, 152.759, -26.5435, 1.33 ) }
    dend_18 { pt3dadd( 77.2193, 153.251, -26.6415, 1.33 ) }
    dend_18 { pt3dadd( 76.9572, 154.469, -26.9015, 0.22 ) }
    dend_18 { pt3dadd( 76.8619, 154.903, -26.9875, 0.96 ) }
    dend_18 { pt3dadd( 76.4512, 156.67, -27.3481, 0.22 ) }
    dend_18 { pt3dadd( 76.2997, 157.287, -27.4689, 1.47 ) }
    dend_18 { pt3dadd( 76.103, 158.044, -27.6106, 2.06 ) }
    dend_18 { pt3dadd( 75.5366, 160.079, -28.0082, 0.22 ) }
    dend_18 { pt3dadd( 74.9296, 162.194, -28.4198, 0.15 ) }
    dend_18 { pt3dadd( 74.7898, 162.682, -28.5223, 0.66 ) }
    dend_18 { pt3dadd( 74.6972, 163.009, -28.6005, 0.96 ) }
    dend_18 { pt3dadd( 74.6051, 163.347, -28.689, 0.96 ) }
    dend_18 { pt3dadd( 74.0299, 165.618, -29.3128, 0.15 ) }
    dend_18 { pt3dadd( 73.8845, 166.329, -29.5665, 0.29 ) }
    dend_18 { pt3dadd( 73.624, 168.093, -30.3184, 0.15 ) }
    dend_18 { pt3dadd( 73.5442, 168.864, -30.6609, 1.03 ) }
    dend_18 { pt3dadd( 73.5184, 169.328, -30.8856, 1.84 ) }
    dend_18 { pt3dadd( 73.5194, 169.676, -31.0668, 1.47 ) }
    dend_18 { pt3dadd( 73.7915, 171.854, -32.2768, 0.15 ) }
    dend_18 { pt3dadd( 74.042, 173.042, -32.9343, 0.15 ) }
    dend_18 { pt3dadd( 74.2427, 173.696, -33.281, 1.03 ) }
    dend_18 { pt3dadd( 74.4421, 174.225, -33.5452, 1.18 ) }
    dend_18 { pt3dadd( 74.645, 174.675, -33.7647, 0.37 ) }
    dend_18 { pt3dadd( 75.3322, 175.88, -34.3522, 0.15 ) }
    dend_18 { pt3dadd( 75.5184, 176.124, -34.4577, 0.29 ) }
    dend_18 { pt3dadd( 75.5663, 176.18, -34.4909, 0.29 ) }
    dend_18 { pt3dadd( 75.7406, 176.392, -34.6289, 0.29 ) }
    dend_18 { pt3dadd( 75.8937, 176.6, -34.7791, 0.29 ) }
    dend_18 { pt3dadd( 76.5632, 177.745, -35.7274, 0.15 ) }
    dend_18 { pt3dadd( 76.5793, 177.783, -35.762, 0.15 ) }
    dend_18 { pt3dadd( 76.8272, 178.725, -36.5409, 1.25 ) }
    dend_18 { pt3dadd( 76.8957, 179.348, -36.9813, 2.21 ) }
    dend_18 { pt3dadd( 76.9068, 179.872, -37.3132, 2.43 ) }
    dend_18 { pt3dadd( 76.8607, 180.699, -37.7854, 2.14 ) }
    dend_18 { pt3dadd( 76.7681, 181.326, -38.0897, 1.55 ) }
    dend_18 { pt3dadd( 76.5002, 182.682, -38.7012, 0.15 ) }
    dend_18 { pt3dadd( 76.0572, 184.166, -39.2938, 0.15 ) }
    dend_18 { pt3dadd( 75.9596, 184.417, -39.3777, 0.74 ) }
    dend_18 { pt3dadd( 75.8177, 184.721, -39.457, 0.74 ) }
    dend_18 { pt3dadd( 75.5079, 185.228, -39.5519, 0.74 ) }
    dend_18 { pt3dadd( 75.2613, 185.565, -39.586, 0.15 ) }
    dend_18 { pt3dadd( 74.3827, 186.594, -39.6173, 0.15 ) }
    dend_18 { pt3dadd( 73.7229, 187.312, -39.6005, 0.66 ) }
    dend_18 { pt3dadd( 73.4015, 187.667, -39.5844, 1.11 ) }
    dend_18 { pt3dadd( 71.6777, 189.596, -39.4631, 0.15 ) }
    dend_18 { pt3dadd( 71.1865, 190.153, -39.421, 0.81 ) }
    dend_18 { pt3dadd( 70.8851, 190.498, -39.39, 0.81 ) }
    dend_18 { pt3dadd( 70.5578, 190.879, -39.3531, 0.81 ) }
    dend_18 { pt3dadd( 69.6936, 191.889, -39.2273, 0.15 ) }
    dend_18 { pt3dadd( 69.1552, 192.533, -39.0906, 1.33 ) }
    dend_18 { pt3dadd( 68.9506, 192.785, -39.017, 1.77 ) }
    dend_18 { pt3dadd( 68.7416, 193.047, -38.9466, 1.55 ) }
    dend_18 { pt3dadd( 68.2087, 193.732, -38.7468, 0.37 ) }
    dend_18 { pt3dadd( 67.5482, 194.602, -38.4727, 0.22 ) }
    dend_18 { pt3dadd( 66.5301, 196.095, -37.9213, 0.22 ) }
    dend_18 { pt3dadd( 66.3011, 196.457, -37.7886, 0.37 ) }
    dend_18 { pt3dadd( 66.0748, 196.846, -37.6717, 0.66 ) }
    dend_18 { pt3dadd( 65.9771, 197.021, -37.6249, 0.44 ) }
    dend_18 { pt3dadd( 65.883, 197.194, -37.5868, 0.44 ) }
    dend_18 { pt3dadd( 65.1224, 198.625, -37.3059, 0.15 ) }
    dend_18 { pt3dadd( 64.7457, 199.362, -37.1329, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_18 { pt3dadd( 64.3242, 200.194, -36.9292, 1.84 ) }
    dend_18 { pt3dadd( 63.3377, 202.219, -36.5424, 0.15 ) }
    dend_18 { pt3dadd( 63.2271, 202.453, -36.5022, 0.37 ) }
    dend_18 { pt3dadd( 62.9683, 203.033, -36.4193, 0.66 ) }
    dend_18 { pt3dadd( 62.8985, 203.206, -36.4039, 0.88 ) }
    dend_18 { pt3dadd( 62.8125, 203.457, -36.3807, 0.88 ) }
    dend_18 { pt3dadd( 62.3142, 205.186, -36.2355, 0.15 ) }
    dend_18 { pt3dadd( 62.1885, 205.727, -36.2001, 0.88 ) }
    dend_18 { pt3dadd( 62.0697, 206.238, -36.1568, 1.69 ) }
    dend_18 { pt3dadd( 61.9376, 206.813, -36.1046, 2.21 ) }
    dend_18 { pt3dadd( 61.7981, 207.416, -36.0464, 1.69 ) }
    dend_18 { pt3dadd( 61.2257, 209.867, -35.7787, 0.15 ) }
    dend_18 { pt3dadd( 61.1219, 210.316, -35.7011, 0.59 ) }
    dend_18 { pt3dadd( 61.059, 210.581, -35.6546, 0.96 ) }
    dend_18 { pt3dadd( 61.0115, 210.777, -35.6228, 0.96 ) }
    dend_18 { pt3dadd( 60.9033, 211.229, -35.5546, 0.52 ) }
    dend_18 { pt3dadd( 60.8874, 211.298, -35.547, 0.52 ) }
    dend_18 { pt3dadd( 60.7145, 212.162, -35.4894, 0.15 ) }
    dend_18 { pt3dadd( 60.4114, 213.778, -35.4635, 0.07 ) }
    dend_18 { pt3dadd( 60.2834, 214.511, -35.4601, 0.37 ) }
    dend_18 { pt3dadd( 60.2487, 214.718, -35.4617, 0.81 ) }
    dend_18 { pt3dadd( 60.2101, 214.983, -35.466, 0.88 ) }
    dend_18 { pt3dadd( 60.2101, 214.983, -35.466, 0.88 ) }
    dend_18 { pt3dadd( 60.204, 215.053, -35.474, 0.88 ) }
    dend_18 { pt3dadd( 60.1928, 215.238, -35.4832, 0.88 ) }
    dend_18 { pt3dadd( 60.1828, 215.414, -35.4833, 0.88 ) }
    dend_18 { pt3dadd( 60.148, 215.822, -35.4939, 0.22 ) }
    dend_18 { pt3dadd( 59.9592, 217.621, -35.559, 0.22 ) }
    dend_18 { pt3dadd( 59.9371, 217.805, -35.5635, 0.44 ) }
    dend_18 { pt3dadd( 59.9119, 217.998, -35.5669, 0.44 ) }
    dend_18 { pt3dadd( 59.8838, 218.198, -35.5813, 0.44 ) }
    dend_18 { pt3dadd( 59.6979, 219.645, -35.7615, 0.15 ) }
    dend_18 { pt3dadd( 59.6328, 220.164, -35.8723, 1.33 ) }
    dend_18 { pt3dadd( 59.5765, 220.639, -36.0182, 1.4 ) }
    dend_18 { pt3dadd( 59.5573, 220.822, -36.0837, 1.4 ) }
    dend_18 { pt3dadd( 59.4566, 221.959, -36.5335, 0.15 ) }
    dend_18 { pt3dadd( 59.358, 223.437, -37.2301, 0.15 ) }
    dend_18 { pt3dadd( 59.3332, 224.093, -37.6006, 0.81 ) }
    dend_18 { pt3dadd( 59.32, 224.5, -37.8518, 1.18 ) }
    dend_18 { pt3dadd( 59.3175, 224.568, -37.8954, 1.18 ) }
    dend_18 { pt3dadd( 59.2942, 224.946, -38.1506, 1.18 ) }
    dend_18 { pt3dadd( 59.0779, 226.695, -39.4415, 0.15 ) }
    dend_18 { pt3dadd( 58.9785, 227.205, -39.8554, 0.81 ) }
    dend_18 { pt3dadd( 58.8816, 227.602, -40.1385, 1.03 ) }
    dend_18 { pt3dadd( 58.8356, 227.768, -40.2527, 1.03 ) }
    dend_18 { pt3dadd( 58.4708, 228.966, -41.0499, 0.15 ) }
    dend_18 { pt3dadd( 58.0795, 230.147, -41.8452, 1.77 ) }
    dend_18 { pt3dadd( 57.6702, 231.248, -42.4952, 0.15 ) }
    dend_18 { pt3dadd( 56.9862, 232.935, -43.4209, 0.15 ) }
    dend_18 { pt3dadd( 56.7717, 233.43, -43.6889, 0.96 ) }
    dend_18 { pt3dadd( 56.6847, 233.62, -43.784, 1.18 ) }
    dend_18 { pt3dadd( 56.4034, 234.206, -44.0491, 0.96 ) }
    dend_18 { pt3dadd( 55.5484, 235.907, -44.7626, 0.15 ) }
    dend_18 { pt3dadd( 55.0083, 236.904, -45.1945, 0.81 ) }
    dend_18 { pt3dadd( 54.688, 237.456, -45.4574, 0.15 ) }
    dend_18 { pt3dadd( 54.0719, 238.511, -45.9275, 0.15 ) }
    dend_18 { pt3dadd( 53.9552, 238.71, -46.0137, 0.29 ) }
    dend_18 { pt3dadd( 53.7671, 239.023, -46.1436, 0.29 ) }
    dend_18 { pt3dadd( 53.6509, 239.235, -46.2399, 0.29 ) }
    dend_18 { pt3dadd( 53.6212, 239.296, -46.2636, 0.29 ) }
    dend_18 { pt3dadd( 53.5668, 239.411, -46.3075, 0.29 ) }
    dend_18 { pt3dadd( 53.3096, 239.943, -46.5261, 0.15 ) }
    dend_18 { pt3dadd( 53.1271, 240.308, -46.6836, 0.74 ) }
    dend_18 { pt3dadd( 52.4608, 241.511, -47.1368, 0.15 ) }
    dend_18 { pt3dadd( 51.9914, 242.319, -47.4272, 1.69 ) }
    dend_18 { pt3dadd( 51.7824, 242.671, -47.5455, 1.47 ) }
    dend_18 { pt3dadd( 51.5111, 243.093, -47.6653, 1.18 ) }
    dend_18 { pt3dadd( 51.1231, 243.655, -47.7974, 0.15 ) }
    dend_18 { pt3dadd( 49.6975, 245.573, -48.157, 0.15 ) }
    dend_18 { pt3dadd( 49.5065, 245.81, -48.1912, 0.59 ) }
    dend_18 { pt3dadd( 49.2302, 246.145, -48.2282, 0.59 ) }
    dend_18 { pt3dadd( 47.9663, 247.642, -48.4264, 0.22 ) }
    dend_18 { pt3dadd( 47.714, 247.937, -48.4684, 0.88 ) }
    dend_18 { pt3dadd( 47.3773, 248.335, -48.5155, 1.62 ) }
    dend_18 { pt3dadd( 47.1741, 248.588, -48.5469, 1.62 ) }
    dend_18 { pt3dadd( 46.8089, 249.068, -48.6006, 1.25 ) }
    dend_18 { pt3dadd( 45.1904, 251.347, -48.8579, 0.22 ) }
    dend_18 { pt3dadd( 45.0164, 251.619, -48.8895, 0.22 ) }
    dend_18 { pt3dadd( 44.6203, 252.298, -48.9386, 1.55 ) }
    dend_18 { pt3dadd( 44.0051, 253.442, -48.9673, 0.22 ) }
    dend_18 { pt3dadd( 43.9088, 253.643, -48.9606, 0.44 ) }
    dend_18 { pt3dadd( 43.8401, 253.815, -48.9413, 0.59 ) }
    dend_18 { pt3dadd( 43.7562, 254.134, -48.8816, 0.96 ) }
    dend_18 { pt3dadd( 43.5092, 255.299, -48.6298, 0.15 ) }
    dend_18 { pt3dadd( 43.4446, 255.637, -48.5541, 0.44 ) }
    dend_18 { pt3dadd( 43.3133, 256.261, -48.4151, 1.47 ) }
    dend_18 { pt3dadd( 43.1747, 256.876, -48.2846, 1.47 ) }
    dend_18 { pt3dadd( 42.8515, 258.067, -48.0799, 0.29 ) }
    dend_18 { pt3dadd( 42.0347, 260.783, -47.6915, 0.29 ) }
    dend_18 { pt3dadd( 41.8895, 261.214, -47.6515, 1.47 ) }
    dend_18 { pt3dadd( 40.9926, 263.643, -47.4947, 0.15 ) }
    dend_18 { pt3dadd( 40.6866, 264.389, -47.4665, 1.84 ) }
    dend_18 { pt3dadd( 39.8309, 266.272, -47.4838, 0.15 ) }
    dend_18 { pt3dadd( 39.6725, 266.58, -47.5109, 0.59 ) }
    dend_18 { pt3dadd( 38.867, 267.964, -47.8268, 0.15 ) }
    dend_18 { pt3dadd( 38.6159, 268.387, -47.9549, 0.88 ) }
    dend_18 { pt3dadd( 38.3047, 268.92, -48.197, 0.15 ) }
    dend_18 { pt3dadd( 37.9825, 269.532, -48.544, 0.96 ) }
    dend_18 { pt3dadd( 37.7805, 269.974, -48.8301, 0.22 ) }
    dend_18 { pt3dadd( 37.1684, 271.422, -49.8227, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_18 { pt3dadd( 37.0437, 271.75, -50.055, 1.33 ) }
    dend_18 { pt3dadd( 36.483, 273.335, -51.1339, 0.07 ) }
    dend_18 { pt3dadd( 36.0238, 274.661, -51.9703, 0.07 ) }
    dend_18 { pt3dadd( 35.9238, 274.955, -52.133, 0.81 ) }
    dend_18 { pt3dadd( 35.7861, 275.362, -52.3323, 1.25 ) }
    dend_18 { pt3dadd( 35.6541, 275.714, -52.4907, 1.55 ) }
    dend_18 { pt3dadd( 35.4057, 276.325, -52.713, 0.15 ) }
    dend_18 { pt3dadd( 35.091, 277.025, -52.8573, 0.15 ) }
    dend_18 { pt3dadd( 34.9745, 277.269, -52.9169, 0.74 ) }
    dend_18 { pt3dadd( 34.9473, 277.323, -52.933, 0.74 ) }
    dend_18 { pt3dadd( 34.1861, 278.801, -53.4355, 0.15 ) }
    dend_18 { pt3dadd( 33.9096, 279.328, -53.6343, 1.25 ) }
    dend_18 { pt3dadd( 33.7376, 279.676, -53.7781, 1.77 ) }
    dend_18 { pt3dadd( 33.1634, 280.916, -54.286, 0.15 ) }
    dend_18 { pt3dadd( 32.65, 282.06, -54.7297, 0.15 ) }
    dend_18 { pt3dadd( 32.5315, 282.324, -54.864, 0.66 ) }
    dend_18 { pt3dadd( 32.4278, 282.558, -55.004, 0.15 ) }
    dend_18 { pt3dadd( 31.8544, 283.87, -55.8749, 0.15 ) }
    dend_18 { pt3dadd( 31.7891, 284.032, -56.0005, 0.29 ) }
    dend_18 { pt3dadd( 31.6978, 284.289, -56.2236, 0.88 ) }
    dend_18 { pt3dadd( 31.1074, 286.181, -58.1338, 0.15 ) }
    dend_18 { pt3dadd( 31.0497, 286.389, -58.3415, 0.59 ) }
    dend_18 { pt3dadd( 30.9206, 286.899, -58.8478, 0.15 ) }
    dend_18 { pt3dadd( 30.6345, 288.049, -59.8864, 1.18 ) }
    dend_18 { pt3dadd( 30.4715, 288.742, -60.4199, 0.81 ) }
    dend_18 { pt3dadd( 30.4326, 288.924, -60.5466, 0.15 ) }
    dend_18 { pt3dadd( 30.1792, 290.374, -61.3177, 0.15 ) }
    dend_18 { pt3dadd( 30.1387, 290.6, -61.4336, 0.81 ) }
    dend_18 { pt3dadd( 29.8404, 292.123, -62.1253, 0.22 ) }
    dend_18 { pt3dadd( 29.7056, 292.732, -62.299, 1.47 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 30/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 1.60316, -10.7224, 14.3938, 2.21 ) }
    dend_6 { pt3dadd( 1.01871, -12.7593, 15.8313, 2.21 ) }
    dend_6 { pt3dadd( 0.470432, -14.6702, 17.1798, 2.21 ) }
    dend_6 { pt3dadd( -0.250823, -17.1839, 18.9538, 2.21 ) }
    dend_6 { pt3dadd( -1.09044, -20.1101, 21.0189, 2.21 ) }
    dend_6 { pt3dadd( -2.07655, -23.5469, 23.4443, 2.43 ) }
    dend_6 { pt3dadd( -3.22658, -27.5549, 26.2729, 3.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 37/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 1.60316, -10.7224, 14.3938, 1.55 ) }
    dend_5 { pt3dadd( 3.45174, -11.4198, 15.5425, 1.55 ) }
    dend_5 { pt3dadd( 4.42295, -11.8262, 16.1705, 1.03 ) }
    dend_5 { pt3dadd( 6.03426, -12.5545, 17.1713, 1.03 ) }
    dend_5 { pt3dadd( 6.83986, -12.9518, 17.6596, 1.84 ) }
    dend_5 { pt3dadd( 8.45839, -13.8298, 18.5799, 1.55 ) }
    dend_5 { pt3dadd( 9.06035, -14.1872, 18.8991, 1.25 ) }
    dend_5 { pt3dadd( 10.168, -15.0075, 19.4373, 1.11 ) }
    dend_5 { pt3dadd( 10.8636, -15.6377, 19.6892, 1.11 ) }
    dend_5 { pt3dadd( 11.3886, -16.2265, 19.7744, 1.33 ) }
    dend_5 { pt3dadd( 12.0981, -17.1933, 19.7658, 1.33 ) }
    dend_5 { pt3dadd( 12.5548, -17.9257, 19.6266, 1.18 ) }
    dend_5 { pt3dadd( 13.0366, -18.7546, 19.3865, 1.25 ) }
    dend_5 { pt3dadd( 13.5657, -19.6734, 19.0112, 1.4 ) }
    dend_5 { pt3dadd( 13.9927, -20.3515, 18.6701, 1.11 ) }
    dend_5 { pt3dadd( 14.4094, -20.8876, 18.3401, 0.96 ) }
    dend_5 { pt3dadd( 15.0333, -21.4552, 17.9077, 0.74 ) }
    dend_5 { pt3dadd( 15.6849, -21.8591, 17.5234, 0.59 ) }
    dend_5 { pt3dadd( 16.3623, -22.124, 17.1986, 0.88 ) }
    dend_5 { pt3dadd( 17.3339, -22.3725, 16.8136, 1.18 ) }
    dend_5 { pt3dadd( 18.3163, -22.5457, 16.5014, 1.69 ) }
    dend_5 { pt3dadd( 19.7014, -22.7154, 16.1343, 2.06 ) }
    dend_5 { pt3dadd( 20.2102, -22.7612, 16.0219, 2.14 ) }
    dend_5 { pt3dadd( 21.1674, -22.8415, 15.8447, 1.4 ) }
    dend_5 { pt3dadd( 22.0776, -22.926, 15.7005, 1.33 ) }
    dend_5 { pt3dadd( 22.7951, -23.0141, 15.6185, 1.33 ) }
    dend_5 { pt3dadd( 23.2457, -23.092, 15.5947, 1.25 ) }
    dend_5 { pt3dadd( 23.3454, -23.114, 15.5957, 1.25 ) }
    dend_5 { pt3dadd( 24.1724, -23.3155, 15.6844, 1.25 ) }
    dend_5 { pt3dadd( 24.5136, -23.4026, 15.7373, 1.25 ) }
    dend_5 { pt3dadd( 25.4577, -23.6281, 15.8967, 1.25 ) }
    dend_5 { pt3dadd( 26.8684, -23.9567, 16.1108, 0.96 ) }
    dend_5 { pt3dadd( 26.9426, -23.9734, 16.1221, 0.96 ) }
    dend_5 { pt3dadd( 28.2816, -24.2637, 16.3456, 1.4 ) }
    dend_5 { pt3dadd( 29.7051, -24.5593, 16.6403, 2.21 ) }
    dend_5 { pt3dadd( 30.8245, -24.7847, 16.8919, 1.99 ) }
    dend_5 { pt3dadd( 31.6475, -24.9381, 17.0953, 1.47 ) }
    dend_5 { pt3dadd( 32.4228, -25.0687, 17.2861, 1.03 ) }
    dend_5 { pt3dadd( 33.34, -25.209, 17.5089, 0.88 ) }
    dend_5 { pt3dadd( 34.4124, -25.3434, 17.7436, 0.81 ) }
    dend_5 { pt3dadd( 34.4878, -25.3497, 17.7596, 0.81 ) }
    dend_5 { pt3dadd( 35.5463, -25.3951, 17.9581, 0.81 ) }
    dend_5 { pt3dadd( 36.4104, -25.3935, 18.0828, 0.74 ) }
    dend_5 { pt3dadd( 37.3364, -25.354, 18.1528, 1.33 ) }
    dend_5 { pt3dadd( 38.5322, -25.2564, 18.1458, 1.77 ) }
    dend_5 { pt3dadd( 39.5141, -25.1584, 18.0748, 1.47 ) }
    dend_5 { pt3dadd( 40.361, -25.0704, 17.9846, 1.18 ) }
    dend_5 { pt3dadd( 40.8989, -25.0082, 17.9022, 1.03 ) }
    dend_5 { pt3dadd( 41.5077, -24.9398, 17.8529, 0.88 ) }
    dend_5 { pt3dadd( 42.0175, -24.8877, 17.8771, 0.66 ) }
    dend_5 { pt3dadd( 42.7771, -24.8485, 18.0004, 0.66 ) }
    dend_5 { pt3dadd( 43.3979, -24.8443, 18.152, 0.66 ) }
    dend_5 { pt3dadd( 43.7932, -24.8571, 18.2581, 0.66 ) }
    dend_5 { pt3dadd( 45.4396, -24.9689, 18.794, 1.25 ) }
    dend_5 { pt3dadd( 46.6053, -25.075, 19.179, 1.99 ) }
    dend_5 { pt3dadd( 47.5625, -25.1784, 19.4884, 2.36 ) }
    dend_5 { pt3dadd( 48.4971, -25.2832, 19.7669, 2.36 ) }
    dend_5 { pt3dadd( 49.2487, -25.361, 19.9518, 1.4 ) }
    dend_5 { pt3dadd( 50.9664, -25.5406, 20.2222, 0.52 ) }
    dend_5 { pt3dadd( 51.7609, -25.6099, 20.2746, 0.74 ) }
    dend_5 { pt3dadd( 52.249, -25.6375, 20.2915, 0.74 ) }
    dend_5 { pt3dadd( 52.7802, -25.6409, 20.3094, 0.74 ) }
    dend_5 { pt3dadd( 53.4334, -25.6284, 20.3358, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_5 { pt3dadd( 54.2733, -25.5913, 20.3778, 0.52 ) }
    dend_5 { pt3dadd( 55.8282, -25.4788, 20.5761, 1.33 ) }
    dend_5 { pt3dadd( 57.0066, -25.3848, 20.8246, 1.77 ) }
    dend_5 { pt3dadd( 58.2036, -25.2883, 21.1273, 1.11 ) }
    dend_5 { pt3dadd( 59.1718, -25.2173, 21.426, 0.88 ) }
    dend_5 { pt3dadd( 59.2444, -25.2119, 21.4561, 0.88 ) }
    dend_5 { pt3dadd( 61.3797, -25.0109, 22.4961, 0.29 ) }
    dend_5 { pt3dadd( 61.4377, -25.0046, 22.5302, 0.29 ) }
    dend_5 { pt3dadd( 62.107, -24.9247, 22.9734, 0.52 ) }
    dend_5 { pt3dadd( 62.805, -24.8465, 23.4509, 0.88 ) }
    dend_5 { pt3dadd( 64.1647, -24.721, 24.3135, 2.21 ) }
    dend_5 { pt3dadd( 64.968, -24.6775, 24.7587, 1.77 ) }
    dend_5 { pt3dadd( 66.2326, -24.6632, 25.2857, 1.25 ) }
    dend_5 { pt3dadd( 67.0148, -24.6655, 25.5605, 0.66 ) }
    dend_5 { pt3dadd( 68.3369, -24.6888, 25.9255, 0.66 ) }
    dend_5 { pt3dadd( 69.4549, -24.7222, 26.1508, 0.66 ) }
    dend_5 { pt3dadd( 70.2904, -24.759, 26.2609, 1.25 ) }
    dend_5 { pt3dadd( 71.4861, -24.8122, 26.3915, 0.96 ) }
    dend_5 { pt3dadd( 72.5697, -24.8675, 26.4793, 0.15 ) }
    dend_5 { pt3dadd( 73.2685, -24.9016, 26.5469, 1.25 ) }
    dend_5 { pt3dadd( 75.0448, -24.9734, 26.712, 0.59 ) }
    dend_5 { pt3dadd( 75.687, -25.0089, 26.7765, 0.96 ) }
    dend_5 { pt3dadd( 76.2141, -25.0511, 26.8336, 0.59 ) }
    dend_5 { pt3dadd( 77.2204, -25.1609, 26.984, 0.37 ) }
    dend_5 { pt3dadd( 77.373, -25.178, 27.003, 0.37 ) }
    dend_5 { pt3dadd( 78.2851, -25.2562, 27.1108, 1.77 ) }
    dend_5 { pt3dadd( 79.2689, -25.3114, 27.2648, 1.84 ) }
    dend_5 { pt3dadd( 79.9677, -25.335, 27.417, 0.88 ) }
    dend_5 { pt3dadd( 81.4188, -25.3503, 27.7388, 0.37 ) }
    dend_5 { pt3dadd( 82.1121, -25.359, 27.8766, 0.37 ) }
    dend_5 { pt3dadd( 82.5721, -25.3687, 27.9978, 0.37 ) }
    dend_5 { pt3dadd( 84.0015, -25.4168, 28.4257, 0.96 ) }
    dend_5 { pt3dadd( 84.6161, -25.4344, 28.6146, 1.33 ) }
    dend_5 { pt3dadd( 85.8901, -25.486, 28.9629, 2.58 ) }
    dend_5 { pt3dadd( 86.8253, -25.5403, 29.2275, 2.06 ) }
    dend_5 { pt3dadd( 88.6887, -25.6885, 29.7809, 0.96 ) }
    dend_5 { pt3dadd( 89.4692, -25.7431, 30.0079, 0.22 ) }
    dend_5 { pt3dadd( 90.0472, -25.7607, 30.1495, 0.44 ) }
    dend_5 { pt3dadd( 90.7653, -25.7591, 30.3329, 0.29 ) }
    dend_5 { pt3dadd( 92.3244, -25.6947, 30.7805, 0.66 ) }
    dend_5 { pt3dadd( 92.995, -25.6194, 30.9559, 1.33 ) }
    dend_5 { pt3dadd( 93.9803, -25.4719, 31.1848, 1.92 ) }
    dend_5 { pt3dadd( 95.0242, -25.2903, 31.4496, 2.06 ) }
    dend_5 { pt3dadd( 95.2452, -25.2541, 31.5026, 2.06 ) }
    dend_5 { pt3dadd( 96.6342, -25.0266, 31.7893, 0.52 ) }
    dend_5 { pt3dadd( 97.532, -24.8898, 31.9097, 0.52 ) }
    dend_5 { pt3dadd( 98.6055, -24.7685, 32.0538, 0.52 ) }
    dend_5 { pt3dadd( 99.1968, -24.7521, 32.1203, 0.96 ) }
    dend_5 { pt3dadd( 100.054, -24.8437, 32.1915, 0.74 ) }
    dend_5 { pt3dadd( 100.526, -24.9345, 32.2129, 0.52 ) }
    dend_5 { pt3dadd( 101.07, -25.0933, 32.2111, 0.52 ) }
    dend_5 { pt3dadd( 102.731, -25.6942, 32.1855, 2.87 ) }
    dend_5 { pt3dadd( 103.613, -26.0453, 32.145, 2.58 ) }
    dend_5 { pt3dadd( 105.419, -26.7951, 32.0614, 0.44 ) }
    dend_5 { pt3dadd( 105.472, -26.8178, 32.0587, 0.44 ) }
    dend_5 { pt3dadd( 106.006, -27.0428, 32.022, 1.03 ) }
    dend_5 { pt3dadd( 106.079, -27.0733, 32.0146, 1.03 ) }
    dend_5 { pt3dadd( 106.968, -27.4469, 31.8674, 0.59 ) }
    dend_5 { pt3dadd( 107.558, -27.6516, 31.7496, 0.52 ) }
    dend_5 { pt3dadd( 107.701, -27.6922, 31.7126, 0.52 ) }
    dend_5 { pt3dadd( 108.326, -27.8594, 31.551, 0.52 ) }
    dend_5 { pt3dadd( 108.798, -27.9748, 31.4825, 0.52 ) }
    dend_5 { pt3dadd( 108.872, -27.9939, 31.4799, 0.52 ) }
    dend_5 { pt3dadd( 109.214, -28.0778, 31.5023, 1.03 ) }
    dend_5 { pt3dadd( 109.297, -28.0991, 31.5147, 1.03 ) }
    dend_5 { pt3dadd( 110.029, -28.2977, 31.6465, 0.74 ) }
    dend_5 { pt3dadd( 111.167, -28.6461, 31.9756, 0.22 ) }
    dend_5 { pt3dadd( 111.806, -28.8725, 32.2205, 1.18 ) }
    dend_5 { pt3dadd( 112.345, -29.0778, 32.4251, 0.29 ) }
    dend_5 { pt3dadd( 112.808, -29.2327, 32.6783, 0.29 ) }
    dend_5 { pt3dadd( 113.289, -29.3768, 32.9697, 0.29 ) }
    dend_5 { pt3dadd( 114.356, -29.6258, 33.6514, 2.14 ) }
    dend_5 { pt3dadd( 116.349, -30.0006, 34.9567, 0.37 ) }
    dend_5 { pt3dadd( 117.186, -30.135, 35.5151, 1.55 ) }
    dend_5 { pt3dadd( 119.947, -30.5254, 37.3218, 0.15 ) }
    dend_5 { pt3dadd( 120.393, -30.576, 37.6009, 1.03 ) }
    dend_5 { pt3dadd( 121.302, -30.6667, 38.1601, 1.77 ) }
    dend_5 { pt3dadd( 123.0, -30.8224, 39.1092, 0.22 ) }
    dend_5 { pt3dadd( 123.883, -30.9031, 39.57, 0.96 ) }
    dend_5 { pt3dadd( 125.19, -31.0559, 40.2087, 0.22 ) }
    dend_5 { pt3dadd( 126.268, -31.2568, 40.617, 0.96 ) }
    dend_5 { pt3dadd( 127.572, -31.553, 41.1484, 0.15 ) }
    dend_5 { pt3dadd( 128.344, -31.7717, 41.4713, 1.18 ) }
    dend_5 { pt3dadd( 128.389, -31.7829, 41.4891, 1.18 ) }
    dend_5 { pt3dadd( 137.322, -35.1666, 42.5139, 1.18 ) }
    dend_5 { pt3dadd( 146.001, -39.2589, 42.1871, 1.18 ) }
    dend_5 { pt3dadd( 154.061, -44.4083, 42.5669, 1.18 ) }
    dend_5 { pt3dadd( 161.596, -50.2672, 42.468, 1.18 ) }
    dend_5 { pt3dadd( 168.419, -56.8747, 42.068, 1.18 ) }
    dend_5 { pt3dadd( 174.516, -64.1093, 41.9801, 1.18 ) }
    dend_5 { pt3dadd( 180.0, -71.7491, 41.2859, 1.18 ) }
    dend_5 { pt3dadd( 185.396, -79.4619, 40.8662, 1.18 ) }
    dend_5 { pt3dadd( 192.006, -86.2728, 40.935, 1.18 ) }
    dend_5 { pt3dadd( 197.682, -93.8065, 41.1536, 1.18 ) }
    dend_5 { pt3dadd( 203.925, -100.926, 41.3043, 1.18 ) }
    dend_5 { pt3dadd( 210.566, -107.582, 42.6174, 1.18 ) }
    dend_5 { pt3dadd( 216.402, -114.987, 41.9789, 1.18 ) }
    dend_5 { pt3dadd( 221.883, -122.654, 41.8256, 1.18 ) }
    dend_5 { pt3dadd( 225.936, -130.886, 39.9321, 1.18 ) }
    dend_5 { pt3dadd( 230.022, -139.272, 39.3072, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( 234.334, -147.534, 40.114, 1.18 ) }
    dend_5 { pt3dadd( 238.919, -155.708, 39.9314, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 2/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -13.8493, -22.4295, 5.87184, 0.66 ) }
    dend_3 { pt3dadd( -15.0756, -23.6301, 5.99103, 0.66 ) }
    dend_3 { pt3dadd( -16.068, -24.7781, 6.18372, 0.88 ) }
    dend_3 { pt3dadd( -17.0635, -26.1723, 6.57568, 1.33 ) }
    dend_3 { pt3dadd( -17.7216, -27.2012, 6.8958, 0.37 ) }
    dend_3 { pt3dadd( -18.4752, -28.4324, 7.31256, 0.59 ) }
    dend_3 { pt3dadd( -18.5062, -28.4828, 7.33011, 0.59 ) }
    dend_3 { pt3dadd( -19.6345, -30.3419, 8.0084, 0.74 ) }
    dend_3 { pt3dadd( -20.691, -32.0851, 8.64396, 0.59 ) }
    dend_3 { pt3dadd( -21.4671, -33.3245, 9.08744, 0.29 ) }
    dend_3 { pt3dadd( -22.0886, -34.1848, 9.39793, 1.18 ) }
    dend_3 { pt3dadd( -23.3411, -35.6952, 9.94, 1.18 ) }
    dend_3 { pt3dadd( -24.246, -36.7188, 10.2444, 1.4 ) }
    dend_3 { pt3dadd( -25.0825, -37.5856, 10.4283, 1.03 ) }
    dend_3 { pt3dadd( -25.7215, -38.2585, 10.5224, 0.66 ) }
    dend_3 { pt3dadd( -27.0408, -39.7897, 10.7076, 0.22 ) }
    dend_3 { pt3dadd( -27.6942, -40.6116, 10.7895, 0.52 ) }
    dend_3 { pt3dadd( -28.8059, -42.1518, 10.9321, 1.18 ) }
    dend_3 { pt3dadd( -29.4419, -43.1345, 11.0339, 1.47 ) }
    dend_3 { pt3dadd( -30.2496, -44.5104, 11.186, 0.96 ) }
    dend_3 { pt3dadd( -30.945, -45.8232, 11.3487, 0.29 ) }
    dend_3 { pt3dadd( -31.1827, -46.293, 11.4106, 0.29 ) }
    dend_3 { pt3dadd( -31.5893, -47.009, 11.5362, 0.29 ) }
    dend_3 { pt3dadd( -32.1409, -47.886, 11.7195, 0.66 ) }
    dend_3 { pt3dadd( -33.0131, -49.2026, 12.1173, 1.62 ) }
    dend_3 { pt3dadd( -34.0815, -50.7653, 12.6878, 1.84 ) }
    dend_3 { pt3dadd( -34.866, -51.9444, 13.1934, 0.81 ) }
    dend_3 { pt3dadd( -35.4168, -52.8032, 13.5925, 0.59 ) }
    dend_3 { pt3dadd( -35.8362, -53.4461, 13.9143, 0.37 ) }
    dend_3 { pt3dadd( -36.9138, -55.0785, 14.7273, 0.37 ) }
    dend_3 { pt3dadd( -37.4292, -55.8496, 15.0992, 0.37 ) }
    dend_3 { pt3dadd( -38.092, -56.8532, 15.5417, 0.52 ) }
    dend_3 { pt3dadd( -38.6036, -57.7408, 15.9228, 0.22 ) }
    dend_3 { pt3dadd( -39.0913, -58.6988, 16.2966, 1.11 ) }
    dend_3 { pt3dadd( -39.7658, -60.179, 16.811, 2.28 ) }
    dend_3 { pt3dadd( -40.2767, -61.3669, 17.1641, 2.28 ) }
    dend_3 { pt3dadd( -40.3032, -61.4313, 17.1835, 2.28 ) }
    dend_3 { pt3dadd( -41.1022, -63.4516, 17.7561, 1.18 ) }
    dend_3 { pt3dadd( -41.837, -65.4033, 18.3004, 0.59 ) }
    dend_3 { pt3dadd( -42.4546, -67.0741, 18.7503, 0.37 ) }
    dend_3 { pt3dadd( -42.9242, -68.2968, 19.0609, 0.37 ) }
    dend_3 { pt3dadd( -43.8004, -70.4745, 19.6071, 2.06 ) }
    dend_3 { pt3dadd( -44.4742, -72.0015, 19.9668, 2.06 ) }
    dend_3 { pt3dadd( -45.0713, -73.185, 20.227, 1.18 ) }
    dend_3 { pt3dadd( -45.5375, -74.0218, 20.4209, 0.59 ) }
    dend_3 { pt3dadd( -46.4411, -75.4798, 20.78, 0.66 ) }
    dend_3 { pt3dadd( -47.4725, -76.987, 21.1769, 0.22 ) }
    dend_3 { pt3dadd( -48.0444, -77.7233, 21.3879, 0.44 ) }
    dend_3 { pt3dadd( -48.8705, -78.6932, 21.7079, 0.81 ) }
    dend_3 { pt3dadd( -49.3596, -79.2402, 21.8993, 0.44 ) }
    dend_3 { pt3dadd( -49.9845, -79.9255, 22.138, 0.15 ) }
    dend_3 { pt3dadd( -50.4035, -80.3783, 22.2882, 0.15 ) }
    dend_3 { pt3dadd( -50.8424, -80.8705, 22.4231, 0.15 ) }
    dend_3 { pt3dadd( -51.2072, -81.3241, 22.5596, 0.59 ) }
    dend_3 { pt3dadd( -51.628, -82.0641, 22.8013, 0.81 ) }
    dend_3 { pt3dadd( -51.9055, -82.6658, 23.051, 0.37 ) }
    dend_3 { pt3dadd( -52.276, -83.6004, 23.4583, 0.15 ) }
    dend_3 { pt3dadd( -52.5537, -84.356, 23.7899, 1.18 ) }
    dend_3 { pt3dadd( -53.1034, -85.8958, 24.433, 2.28 ) }
    dend_3 { pt3dadd( -54.295, -89.1069, 25.7064, 0.59 ) }
    dend_3 { pt3dadd( -54.9418, -90.7679, 26.3353, 1.18 ) }
    dend_3 { pt3dadd( -55.3385, -91.6949, 26.6618, 1.18 ) }
    dend_3 { pt3dadd( -55.6022, -92.2545, 26.839, 0.81 ) }
    dend_3 { pt3dadd( -56.521, -93.9928, 27.3021, 0.44 ) }
    dend_3 { pt3dadd( -57.1678, -95.0649, 27.5085, 0.59 ) }
    dend_3 { pt3dadd( -57.6799, -95.7682, 27.5622, 0.74 ) }
    dend_3 { pt3dadd( -58.5077, -96.9783, 27.5303, 0.52 ) }
    dend_3 { pt3dadd( -59.0752, -97.8624, 27.4922, 0.15 ) }
    dend_3 { pt3dadd( -59.8894, -99.2351, 27.4115, 1.92 ) }
    dend_3 { pt3dadd( -60.3375, -100.067, 27.3646, 2.14 ) }
    dend_3 { pt3dadd( -60.9151, -101.34, 27.2724, 1.18 ) }
    dend_3 { pt3dadd( -62.103, -104.379, 27.0298, 0.52 ) }
    dend_3 { pt3dadd( -62.4856, -105.512, 26.9565, 1.4 ) }
    dend_3 { pt3dadd( -62.8488, -106.655, 26.9055, 1.62 ) }
    dend_3 { pt3dadd( -63.2428, -107.917, 26.8589, 0.29 ) }
    dend_3 { pt3dadd( -63.9328, -110.088, 26.8045, 0.22 ) }
    dend_3 { pt3dadd( -64.2113, -110.951, 26.7992, 0.15 ) }
    dend_3 { pt3dadd( -64.4952, -111.852, 26.8108, 1.11 ) }
    dend_3 { pt3dadd( -64.7998, -112.892, 26.8164, 1.18 ) }
    dend_3 { pt3dadd( -65.1131, -114.018, 26.8187, 0.37 ) }
    dend_3 { pt3dadd( -65.3786, -114.996, 26.8092, 0.15 ) }
    dend_3 { pt3dadd( -65.5586, -115.679, 26.8386, 0.81 ) }
    dend_3 { pt3dadd( -65.9536, -117.461, 26.9251, 0.29 ) }
    dend_3 { pt3dadd( -66.0558, -117.976, 26.9478, 0.96 ) }
    dend_3 { pt3dadd( -66.1734, -118.564, 26.9888, 0.74 ) }
    dend_3 { pt3dadd( -66.3206, -119.266, 27.0513, 0.22 ) }
    dend_3 { pt3dadd( -66.565, -120.367, 27.1217, 0.15 ) }
    dend_3 { pt3dadd( -66.8995, -121.638, 27.1667, 2.06 ) }
    dend_3 { pt3dadd( -67.2606, -122.811, 27.1712, 1.62 ) }
    dend_3 { pt3dadd( -67.8935, -124.691, 27.1497, 0.29 ) }
    dend_3 { pt3dadd( -68.1347, -125.357, 27.1285, 0.52 ) }
    dend_3 { pt3dadd( -68.8235, -127.079, 27.038, 0.15 ) }
    dend_3 { pt3dadd( -69.2635, -128.089, 26.9561, 1.69 ) }
    dend_3 { pt3dadd( -69.6687, -128.94, 26.8976, 1.11 ) }
    dend_3 { pt3dadd( -69.9249, -129.443, 26.87, 0.37 ) }
    dend_3 { pt3dadd( -70.6772, -130.805, 26.8467, 0.29 ) }
    dend_3 { pt3dadd( -71.2258, -131.712, 26.8657, 0.29 ) }
    dend_3 { pt3dadd( -71.5948, -132.272, 26.8978, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_3 { pt3dadd( -72.116, -133.034, 26.9682, 0.81 ) }
    dend_3 { pt3dadd( -72.5767, -133.708, 27.0411, 1.11 ) }
    dend_3 { pt3dadd( -73.5855, -135.169, 27.2332, 0.07 ) }
    dend_3 { pt3dadd( -74.3086, -136.203, 27.3797, 1.69 ) }
    dend_3 { pt3dadd( -74.9943, -137.262, 27.5156, 1.92 ) }
    dend_3 { pt3dadd( -75.9825, -138.891, 27.7363, 0.15 ) }
    dend_3 { pt3dadd( -76.4203, -139.645, 27.8707, 0.22 ) }
    dend_3 { pt3dadd( -77.1056, -140.875, 28.122, 0.29 ) }
    dend_3 { pt3dadd( -77.7154, -142.007, 28.4091, 0.29 ) }
    dend_3 { pt3dadd( -78.5099, -143.525, 28.8557, 2.58 ) }
    dend_3 { pt3dadd( -80.2842, -146.989, 29.9756, 0.22 ) }
    dend_3 { pt3dadd( -80.9939, -148.351, 30.4498, 0.15 ) }
    dend_3 { pt3dadd( -81.2159, -148.752, 30.5991, 0.74 ) }
    dend_3 { pt3dadd( -82.1442, -150.347, 31.2095, 0.15 ) }
    dend_3 { pt3dadd( -82.3762, -150.691, 31.3484, 0.74 ) }
    dend_3 { pt3dadd( -82.855, -151.293, 31.5887, 0.59 ) }
    dend_3 { pt3dadd( -83.5283, -152.048, 31.832, 0.22 ) }
    dend_3 { pt3dadd( -84.6295, -153.252, 32.0871, 1.84 ) }
    dend_3 { pt3dadd( -85.3091, -153.993, 32.2024, 0.81 ) }
    dend_3 { pt3dadd( -86.1248, -154.937, 32.2967, 0.15 ) }
    dend_3 { pt3dadd( -86.6444, -155.553, 32.3608, 0.15 ) }
    dend_3 { pt3dadd( -87.0104, -156.012, 32.4279, 1.03 ) }
    dend_3 { pt3dadd( -87.6356, -156.855, 32.5662, 1.92 ) }
    dend_3 { pt3dadd( -88.2915, -157.755, 32.7296, 1.55 ) }
    dend_3 { pt3dadd( -90.6158, -160.869, 33.4047, 0.52 ) }
    dend_3 { pt3dadd( -91.5222, -162.065, 33.6971, 0.15 ) }
    dend_3 { pt3dadd( -92.3393, -163.116, 33.9757, 0.15 ) }
    dend_3 { pt3dadd( -93.1841, -164.152, 34.2725, 1.92 ) }
    dend_3 { pt3dadd( -93.7681, -164.833, 34.4856, 0.96 ) }
    dend_3 { pt3dadd( -94.7702, -165.934, 34.8537, 0.22 ) }
    dend_3 { pt3dadd( -94.9941, -166.153, 34.9307, 0.22 ) }
    dend_3 { pt3dadd( -95.6977, -166.805, 35.1387, 0.22 ) }
    dend_3 { pt3dadd( -96.452, -167.452, 35.3029, 0.22 ) }
    dend_3 { pt3dadd( -96.5154, -167.508, 35.3177, 0.22 ) }
    dend_3 { pt3dadd( -97.0235, -167.981, 35.4349, 0.59 ) }
    dend_3 { pt3dadd( -97.6599, -168.597, 35.5734, 0.59 ) }
    dend_3 { pt3dadd( -98.6768, -169.539, 35.8413, 1.33 ) }
    dend_3 { pt3dadd( -99.2887, -170.079, 36.0213, 1.69 ) }
    dend_3 { pt3dadd( -100.586, -171.232, 36.5024, 0.15 ) }
    dend_3 { pt3dadd( -100.993, -171.609, 36.6817, 0.52 ) }
    dend_3 { pt3dadd( -101.454, -172.091, 36.8817, 0.22 ) }
    dend_3 { pt3dadd( -102.215, -173.024, 37.2166, 0.52 ) }
    dend_3 { pt3dadd( -102.458, -173.383, 37.3242, 0.52 ) }
    dend_3 { pt3dadd( -103.068, -174.452, 37.5709, 0.15 ) }
    dend_3 { pt3dadd( -103.834, -176.148, 37.8214, 2.65 ) }
    dend_3 { pt3dadd( -104.569, -178.196, 37.9714, 0.15 ) }
    dend_3 { pt3dadd( -104.764, -178.929, 37.9285, 0.07 ) }
    dend_3 { pt3dadd( -104.861, -179.468, 37.8248, 0.22 ) }
    dend_3 { pt3dadd( -104.927, -180.004, 37.6709, 0.15 ) }
    dend_3 { pt3dadd( -104.949, -180.411, 37.4523, 0.52 ) }
    dend_3 { pt3dadd( -104.933, -180.829, 37.1255, 0.52 ) }
    dend_3 { pt3dadd( -104.84, -181.861, 36.1576, 0.22 ) }
    dend_3 { pt3dadd( -104.795, -182.289, 35.7292, 1.25 ) }
    dend_3 { pt3dadd( -104.788, -182.355, 35.6579, 1.25 ) }
    dend_3 { pt3dadd( -104.573, -183.898, 33.9294, 0.15 ) }
    dend_3 { pt3dadd( -104.529, -184.159, 33.6095, 0.37 ) }
    dend_3 { pt3dadd( -104.46, -184.448, 33.2158, 0.15 ) }
    dend_3 { pt3dadd( -104.299, -184.866, 32.5879, 0.66 ) }
    dend_3 { pt3dadd( -110.618, -194.472, 36.4785, 0.66 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 59/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -13.8493, -22.4295, 5.87184, 1.03 ) }
    dend_2 { pt3dadd( -15.6908, -23.4019, 5.65446, 1.03 ) }
    dend_2 { pt3dadd( -17.4342, -24.3332, 5.4136, 1.03 ) }
    dend_2 { pt3dadd( -19.0125, -25.1382, 5.1344, 1.69 ) }
    dend_2 { pt3dadd( -20.5228, -25.8477, 4.78619, 1.33 ) }
    dend_2 { pt3dadd( -21.4126, -26.2397, 4.58728, 0.81 ) }
    dend_2 { pt3dadd( -22.9596, -26.9158, 4.28311, 0.59 ) }
    dend_2 { pt3dadd( -24.0921, -27.4221, 4.06397, 1.33 ) }
    dend_2 { pt3dadd( -25.5122, -28.0717, 3.82573, 1.84 ) }
    dend_2 { pt3dadd( -27.0497, -28.8497, 3.62371, 0.96 ) }
    dend_2 { pt3dadd( -28.7595, -29.9032, 3.48008, 0.74 ) }
    dend_2 { pt3dadd( -29.5758, -30.523, 3.4545, 0.44 ) }
    dend_2 { pt3dadd( -30.3365, -31.2222, 3.48768, 0.44 ) }
    dend_2 { pt3dadd( -30.8685, -31.8061, 3.571, 1.62 ) }
    dend_2 { pt3dadd( -31.643, -32.7849, 3.7276, 1.47 ) }
    dend_2 { pt3dadd( -32.74, -34.3124, 3.94268, 0.66 ) }
    dend_2 { pt3dadd( -33.4757, -35.3354, 3.98817, 0.59 ) }
    dend_2 { pt3dadd( -34.3894, -36.5055, 3.92481, 0.52 ) }
    dend_2 { pt3dadd( -35.0459, -37.3092, 3.83348, 0.44 ) }
    dend_2 { pt3dadd( -36.0658, -38.4925, 3.58783, 0.44 ) }
    dend_2 { pt3dadd( -36.6571, -39.1495, 3.39313, 1.11 ) }
    dend_2 { pt3dadd( -37.775, -40.4036, 2.9025, 1.99 ) }
    dend_2 { pt3dadd( -38.6471, -41.4584, 2.3991, 1.99 ) }
    dend_2 { pt3dadd( -39.143, -42.1502, 2.03584, 0.88 ) }
    dend_2 { pt3dadd( -39.8335, -43.2219, 1.46474, 0.52 ) }
    dend_2 { pt3dadd( -40.2411, -43.9389, 1.1042, 0.44 ) }
    dend_2 { pt3dadd( -40.6387, -44.738, 0.726841, 0.59 ) }
    dend_2 { pt3dadd( -40.9652, -45.5326, 0.405467, 0.59 ) }
    dend_2 { pt3dadd( -41.3402, -46.4843, 0.0647994, 0.22 ) }
    dend_2 { pt3dadd( -41.6035, -47.1229, -0.166712, 0.22 ) }
    dend_2 { pt3dadd( -42.0643, -48.2089, -0.534418, 1.33 ) }
    dend_2 { pt3dadd( -42.3997, -48.9563, -0.755689, 2.36 ) }
    dend_2 { pt3dadd( -42.9018, -50.008, -1.03772, 1.77 ) }
    dend_2 { pt3dadd( -43.6879, -51.5533, -1.41198, 0.22 ) }
    dend_2 { pt3dadd( -44.0651, -52.2551, -1.57155, 0.74 ) }
    dend_2 { pt3dadd( -44.4635, -52.9838, -1.71736, 0.74 ) }
    dend_2 { pt3dadd( -45.2129, -54.3115, -1.91851, 0.15 ) }
    dend_2 { pt3dadd( -45.4899, -54.7615, -1.98489, 0.15 ) }
    dend_2 { pt3dadd( -46.0572, -55.6061, -2.10483, 2.14 ) }
    dend_2 { pt3dadd( -46.4972, -56.1992, -2.18806, 1.55 ) }
    dend_2 { pt3dadd( -47.0693, -56.9169, -2.29513, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( -47.7905, -57.7642, -2.44594, 0.29 ) }
    dend_2 { pt3dadd( -48.3946, -58.4272, -2.57739, 1.11 ) }
    dend_2 { pt3dadd( -48.8609, -58.9381, -2.66391, 0.81 ) }
    dend_2 { pt3dadd( -49.7357, -59.86, -2.83022, 0.44 ) }
    dend_2 { pt3dadd( -50.4971, -60.6466, -2.9763, 0.29 ) }
    dend_2 { pt3dadd( -51.2663, -61.4244, -3.10805, 1.77 ) }
    dend_2 { pt3dadd( -51.9055, -62.0473, -3.20501, 1.33 ) }
    dend_2 { pt3dadd( -52.3947, -62.5199, -3.2626, 1.11 ) }
    dend_2 { pt3dadd( -53.2638, -63.3051, -3.34436, 0.15 ) }
    dend_2 { pt3dadd( -53.5451, -63.5433, -3.3667, 0.29 ) }
    dend_2 { pt3dadd( -53.8244, -63.7629, -3.37911, 0.29 ) }
    dend_2 { pt3dadd( -54.1411, -64.0151, -3.37529, 0.15 ) }
    dend_2 { pt3dadd( -54.3313, -64.1771, -3.3591, 0.29 ) }
    dend_2 { pt3dadd( -54.7531, -64.5581, -3.29335, 0.29 ) }
    dend_2 { pt3dadd( -55.4908, -65.2725, -3.12627, 0.22 ) }
    dend_2 { pt3dadd( -56.3217, -66.0954, -2.9511, 2.36 ) }
    dend_2 { pt3dadd( -56.9499, -66.7137, -2.83144, 2.06 ) }
    dend_2 { pt3dadd( -57.6232, -67.3791, -2.71349, 0.52 ) }
    dend_2 { pt3dadd( -58.3282, -68.088, -2.58356, 0.29 ) }
    dend_2 { pt3dadd( -58.7692, -68.5397, -2.50077, 1.47 ) }
    dend_2 { pt3dadd( -60.9586, -70.7763, -2.04423, 0.29 ) }
    dend_2 { pt3dadd( -61.467, -71.3029, -1.93407, 1.03 ) }
    dend_2 { pt3dadd( -61.8761, -71.7263, -1.84592, 1.03 ) }
    dend_2 { pt3dadd( -62.2836, -72.1514, -1.76408, 0.22 ) }
    dend_2 { pt3dadd( -63.0121, -72.9162, -1.62585, 0.22 ) }
    dend_2 { pt3dadd( -63.5449, -73.4868, -1.53467, 1.62 ) }
    dend_2 { pt3dadd( -64.1862, -74.2042, -1.43235, 1.55 ) }
    dend_2 { pt3dadd( -65.521, -75.7648, -1.25478, 0.29 ) }
    dend_2 { pt3dadd( -66.0619, -76.4121, -1.18973, 0.66 ) }
    dend_2 { pt3dadd( -66.3443, -76.7619, -1.16434, 0.66 ) }
    dend_2 { pt3dadd( -66.6415, -77.1544, -1.14168, 0.44 ) }
    dend_2 { pt3dadd( -67.6011, -78.4956, -1.08392, 0.22 ) }
    dend_2 { pt3dadd( -67.9492, -79.0277, -1.06391, 0.81 ) }
    dend_2 { pt3dadd( -68.4246, -79.8195, -1.03121, 0.15 ) }
    dend_2 { pt3dadd( -68.7909, -80.4455, -1.00737, 1.84 ) }
    dend_2 { pt3dadd( -69.2412, -81.2317, -0.957995, 1.99 ) }
    dend_2 { pt3dadd( -69.2741, -81.2894, -0.953382, 1.99 ) }
    dend_2 { pt3dadd( -70.0901, -82.7373, -0.863477, 0.15 ) }
    dend_2 { pt3dadd( -70.1191, -82.7884, -0.861093, 0.15 ) }
    dend_2 { pt3dadd( -70.3953, -83.276, -0.849163, 0.44 ) }
    dend_2 { pt3dadd( -71.1111, -84.5297, -0.795796, 0.15 ) }
    dend_2 { pt3dadd( -71.6308, -85.4072, -0.740749, 1.99 ) }
    dend_2 { pt3dadd( -72.3932, -86.6467, -0.645201, 0.15 ) }
    dend_2 { pt3dadd( -72.7141, -87.1246, -0.595952, 0.74 ) }
    dend_2 { pt3dadd( -73.0177, -87.5412, -0.547446, 0.74 ) }
    dend_2 { pt3dadd( -73.548, -88.2062, -0.462884, 0.15 ) }
    dend_2 { pt3dadd( -73.9844, -88.7048, -0.400688, 0.74 ) }
    dend_2 { pt3dadd( -74.2866, -89.0136, -0.359602, 0.74 ) }
    dend_2 { pt3dadd( -75.2634, -89.9408, -0.232359, 0.15 ) }
    dend_2 { pt3dadd( -75.7501, -90.3732, -0.191351, 1.4 ) }
    dend_2 { pt3dadd( -76.3254, -90.8609, -0.163409, 1.84 ) }
    dend_2 { pt3dadd( -77.0834, -91.4845, -0.154376, 0.22 ) }
    dend_2 { pt3dadd( -78.4026, -92.5598, -0.160135, 0.22 ) }
    dend_2 { pt3dadd( -78.7475, -92.8366, -0.164203, 0.81 ) }
    dend_2 { pt3dadd( -79.6552, -93.5477, -0.181661, 0.29 ) }
    dend_2 { pt3dadd( -79.9621, -93.7777, -0.187864, 0.22 ) }
    dend_2 { pt3dadd( -80.3851, -94.0902, -0.194998, 0.96 ) }
    dend_2 { pt3dadd( -80.7965, -94.4061, -0.209819, 0.66 ) }
    dend_2 { pt3dadd( -81.3207, -94.8235, -0.242461, 0.81 ) }
    dend_2 { pt3dadd( -82.3641, -95.6877, -0.334643, 2.5 ) }
    dend_2 { pt3dadd( -83.4421, -96.6642, -0.429069, 0.15 ) }
    dend_2 { pt3dadd( -83.8979, -97.103, -0.472767, 0.96 ) }
    dend_2 { pt3dadd( -85.0542, -98.2908, -0.633246, 0.15 ) }
    dend_2 { pt3dadd( -85.5689, -98.8597, -0.724135, 1.18 ) }
    dend_2 { pt3dadd( -86.2193, -99.6537, -0.866274, 1.47 ) }
    dend_2 { pt3dadd( -87.0765, -100.847, -1.10328, 0.15 ) }
    dend_2 { pt3dadd( -87.3499, -101.28, -1.19413, 0.74 ) }
    dend_2 { pt3dadd( -88.2021, -102.747, -1.51691, 0.15 ) }
    dend_2 { pt3dadd( -88.5457, -103.393, -1.68803, 1.69 ) }
    dend_2 { pt3dadd( -88.9614, -104.232, -1.94686, 1.03 ) }
    dend_2 { pt3dadd( -89.415, -105.188, -2.2982, 0.15 ) }
    dend_2 { pt3dadd( -89.6234, -105.645, -2.49138, 0.88 ) }
    dend_2 { pt3dadd( -89.7884, -105.999, -2.65215, 0.74 ) }
    dend_2 { pt3dadd( -90.3423, -107.188, -3.21489, 0.22 ) }
    dend_2 { pt3dadd( -90.7404, -107.963, -3.59953, 0.15 ) }
    dend_2 { pt3dadd( -90.9565, -108.35, -3.79182, 1.18 ) }
    dend_2 { pt3dadd( -91.0733, -108.55, -3.88536, 1.18 ) }
    dend_2 { pt3dadd( -91.7685, -109.688, -4.39764, 0.15 ) }
    dend_2 { pt3dadd( -92.0418, -110.126, -4.57881, 0.59 ) }
    dend_2 { pt3dadd( -92.5957, -110.977, -4.85391, 0.15 ) }
    dend_2 { pt3dadd( -92.9653, -111.528, -5.0139, 1.47 ) }
    dend_2 { pt3dadd( -93.3973, -112.137, -5.19255, 0.66 ) }
    dend_2 { pt3dadd( -93.906, -112.838, -5.40329, 0.07 ) }
    dend_2 { pt3dadd( -94.2833, -113.351, -5.55603, 0.96 ) }
    dend_2 { pt3dadd( -96.1436, -115.778, -6.33521, 0.15 ) }
    dend_2 { pt3dadd( -96.7619, -116.559, -6.61316, 2.65 ) }
    dend_2 { pt3dadd( -98.1588, -118.266, -7.26391, 0.15 ) }
    dend_2 { pt3dadd( -98.6085, -118.788, -7.48335, 0.74 ) }
    dend_2 { pt3dadd( -98.6507, -118.835, -7.50455, 0.74 ) }
    dend_2 { pt3dadd( -99.4311, -119.662, -7.91322, 0.15 ) }
    dend_2 { pt3dadd( -99.896, -120.108, -8.17198, 1.03 ) }
    dend_2 { pt3dadd( -100.276, -120.453, -8.35282, 1.03 ) }
    dend_2 { pt3dadd( -101.579, -121.64, -8.90205, 0.15 ) }
    dend_2 { pt3dadd( -102.267, -122.275, -9.17426, 1.84 ) }
    dend_2 { pt3dadd( -104.044, -123.995, -9.83362, 0.15 ) }
    dend_2 { pt3dadd( -105.392, -125.35, -10.2964, 3.02 ) }
    dend_2 { pt3dadd( -107.104, -127.118, -10.8391, 0.37 ) }
    dend_2 { pt3dadd( -108.344, -128.463, -11.2183, 0.15 ) }
    dend_2 { pt3dadd( -108.86, -129.065, -11.3698, 0.88 ) }
    dend_2 { pt3dadd( -110.309, -131.005, -11.6674, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -110.699, -131.621, -11.6987, 1.25 ) }
    dend_2 { pt3dadd( -110.927, -132.036, -11.678, 1.25 ) }
    dend_2 { pt3dadd( -111.483, -133.119, -11.5658, 0.29 ) }
    dend_2 { pt3dadd( -111.936, -133.998, -11.4245, 1.84 ) }
    dend_2 { pt3dadd( -113.445, -136.857, -10.7742, 0.22 ) }
    dend_2 { pt3dadd( -113.808, -137.529, -10.5838, 1.11 ) }
    dend_2 { pt3dadd( -115.128, -139.896, -9.85167, 0.15 ) }
    dend_2 { pt3dadd( -115.464, -140.439, -9.665, 0.96 ) }
    dend_2 { pt3dadd( -115.716, -140.8, -9.52638, 1.4 ) }
    dend_2 { pt3dadd( -117.253, -142.742, -8.73989, 0.15 ) }
    dend_2 { pt3dadd( -117.734, -143.259, -8.53629, 1.18 ) }
    dend_2 { pt3dadd( -117.769, -143.294, -8.52128, 1.11 ) }
    dend_2 { pt3dadd( -119.606, -144.999, -7.60147, 0.22 ) }
    dend_2 { pt3dadd( -120.116, -145.45, -7.33676, 0.22 ) }
    dend_2 { pt3dadd( -120.72, -145.947, -7.02286, 1.33 ) }
    dend_2 { pt3dadd( -121.343, -146.4, -6.71081, 2.14 ) }
    dend_2 { pt3dadd( -121.961, -146.871, -6.30314, 1.33 ) }
    dend_2 { pt3dadd( -122.951, -147.646, -5.52711, 0.22 ) }
    dend_2 { pt3dadd( -123.464, -148.053, -5.05254, 0.22 ) }
    dend_2 { pt3dadd( -124.142, -148.614, -4.354, 2.5 ) }
    dend_2 { pt3dadd( -124.612, -149.008, -3.83697, 1.03 ) }
    dend_2 { pt3dadd( -126.503, -150.674, -1.53963, 0.15 ) }
    dend_2 { pt3dadd( -126.74, -150.887, -1.23353, 0.74 ) }
    dend_2 { pt3dadd( -126.879, -151.051, -0.987048, 0.74 ) }
    dend_2 { pt3dadd( -127.377, -151.858, 0.217728, 0.22 ) }
    dend_2 { pt3dadd( -127.494, -152.167, 0.64476, 1.33 ) }
    dend_2 { pt3dadd( -127.694, -153.073, 1.76466, 0.15 ) }
    dend_2 { pt3dadd( -127.713, -153.259, 1.96825, 0.74 ) }
    dend_2 { pt3dadd( -127.863, -155.972, 4.71679, 0.15 ) }
    dend_2 { pt3dadd( -127.871, -156.459, 5.18576, 1.47 ) }
    dend_2 { pt3dadd( -127.863, -157.798, 6.3942, 0.15 ) }
    dend_2 { pt3dadd( -127.87, -158.277, 6.79256, 1.11 ) }
    dend_2 { pt3dadd( -127.888, -158.571, 7.01392, 0.44 ) }
    dend_2 { pt3dadd( -127.905, -158.722, 7.12347, 0.44 ) }
    dend_2 { pt3dadd( -128.448, -160.697, 8.47524, 0.15 ) }
    dend_2 { pt3dadd( -128.627, -161.155, 8.84625, 0.59 ) }
    dend_2 { pt3dadd( -128.869, -161.594, 9.25826, 0.15 ) }
    dend_2 { pt3dadd( -129.123, -161.95, 9.63977, 0.44 ) }
    dend_2 { pt3dadd( -130.039, -162.937, 10.8025, 0.15 ) }
    dend_2 { pt3dadd( -130.706, -163.488, 11.5168, 0.15 ) }
    dend_2 { pt3dadd( -131.624, -163.963, 12.2776, 0.15 ) }
    dend_2 { pt3dadd( -132.093, -164.166, 12.6619, 0.15 ) }
    dend_2 { pt3dadd( -132.536, -164.313, 13.0024, 0.15 ) }
    dend_2 { pt3dadd( -133.174, -164.447, 13.4133, 1.55 ) }
    dend_2 { pt3dadd( -133.221, -164.45, 13.4354, 1.55 ) }
    dend_2 { pt3dadd( -134.003, -164.461, 13.8144, 0.52 ) }
    dend_2 { pt3dadd( -140.081, -170.254, 14.0086, 0.52 ) }
    dend_2 { pt3dadd( -145.977, -176.13, 15.2589, 0.52 ) }
    dend_2 { pt3dadd( -151.737, -182.02, 17.0468, 0.52 ) }
    dend_2 { pt3dadd( -158.091, -187.535, 17.3712, 0.52 ) }
    dend_2 { pt3dadd( -164.275, -193.174, 16.7355, 0.52 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 51/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -31.2003, 22.393, -1.23489, 0.15 ) }
    axon_1 { pt3dadd( -43.3147, 31.2383, -1.23489, 0.15 ) }
    axon_1 { pt3dadd( -55.4292, 40.0836, -1.23489, 0.15 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 54/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -88.704, 128.552, -60.8433, 0.15 ) }
    dend_36 { pt3dadd( -89.7537, 132.067, -60.8523, 0.15 ) }
    dend_36 { pt3dadd( -89.8612, 132.507, -60.8713, 0.81 ) }
    dend_36 { pt3dadd( -89.913, 132.756, -60.8879, 0.81 ) }
    dend_36 { pt3dadd( -89.968, 133.06, -60.9131, 0.81 ) }
    dend_36 { pt3dadd( -89.9787, 133.113, -60.9271, 0.81 ) }
    dend_36 { pt3dadd( -90.4268, 135.252, -61.6906, 0.15 ) }
    dend_36 { pt3dadd( -90.5056, 135.702, -61.9522, 0.66 ) }
    dend_36 { pt3dadd( -90.5592, 136.001, -62.145, 0.66 ) }
    dend_36 { pt3dadd( -90.6043, 136.256, -62.3161, 0.66 ) }
    dend_36 { pt3dadd( -91.0571, 138.869, -64.1017, 0.15 ) }
    dend_36 { pt3dadd( -91.078, 138.989, -64.1859, 0.44 ) }
    dend_36 { pt3dadd( -91.1087, 139.158, -64.3122, 0.44 ) }
    dend_36 { pt3dadd( -91.1478, 139.354, -64.4589, 0.44 ) }
    dend_36 { pt3dadd( -91.3035, 140.193, -65.0573, 0.07 ) }
    dend_36 { pt3dadd( -91.3639, 140.569, -65.2971, 0.96 ) }
    dend_36 { pt3dadd( -91.4034, 140.943, -65.4825, 1.4 ) }
    dend_36 { pt3dadd( -91.4759, 141.338, -65.7183, 1.4 ) }
    dend_36 { pt3dadd( -91.8503, 143.004, -66.8073, 0.22 ) }
    dend_36 { pt3dadd( -91.966, 143.464, -67.1272, 1.62 ) }
    dend_36 { pt3dadd( -92.03, 143.692, -67.2922, 1.92 ) }
    dend_36 { pt3dadd( -92.1143, 143.975, -67.4965, 1.92 ) }
    dend_36 { pt3dadd( -92.7313, 146.052, -68.8907, 0.15 ) }
    dend_36 { pt3dadd( -92.8132, 146.306, -69.0524, 0.74 ) }
    dend_36 { pt3dadd( -92.9042, 146.61, -69.2073, 0.74 ) }
    dend_36 { pt3dadd( -93.0186, 146.977, -69.3886, 0.74 ) }
    dend_36 { pt3dadd( -93.1161, 147.301, -69.5388, 1.33 ) }
    dend_36 { pt3dadd( -93.2946, 147.852, -69.8292, 1.69 ) }
    dend_36 { pt3dadd( -93.5903, 148.752, -70.3158, 0.66 ) }
    dend_36 { pt3dadd( -94.0629, 150.153, -71.1248, 0.15 ) }
    dend_36 { pt3dadd( -94.2875, 150.771, -71.5254, 1.62 ) }
    dend_36 { pt3dadd( -94.4859, 151.301, -71.8924, 1.62 ) }
    dend_36 { pt3dadd( -95.3196, 153.477, -73.4399, 0.22 ) }
    dend_36 { pt3dadd( -95.3891, 153.656, -73.5701, 0.88 ) }
    dend_36 { pt3dadd( -95.52, 153.965, -73.8105, 0.88 ) }
    dend_36 { pt3dadd( -96.2146, 155.389, -75.0104, 0.22 ) }
    dend_36 { pt3dadd( -96.3532, 155.665, -75.2295, 1.47 ) }
    dend_36 { pt3dadd( -96.609, 156.14, -75.5752, 1.47 ) }
    dend_36 { pt3dadd( -96.6517, 156.217, -75.6221, 1.47 ) }
    dend_36 { pt3dadd( -97.794, 158.247, -76.7594, 0.15 ) }
    dend_36 { pt3dadd( -98.0391, 158.652, -76.9764, 0.15 ) }
    dend_36 { pt3dadd( -98.3769, 159.197, -77.2112, 1.11 ) }
    dend_36 { pt3dadd( -99.2191, 160.586, -77.7354, 0.15 ) }
    dend_36 { pt3dadd( -99.4984, 161.056, -77.889, 1.47 ) }
    dend_36 { pt3dadd( -99.81, 161.572, -78.0517, 1.47 ) }
    dend_36 { pt3dadd( -101.021, 163.615, -78.5954, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_36 { pt3dadd( -102.162, 165.54, -79.1296, 0.15 ) }
    dend_36 { pt3dadd( -102.431, 166.104, -79.2377, 1.33 ) }
    dend_36 { pt3dadd( -102.617, 166.587, -79.2972, 1.33 ) }
    dend_36 { pt3dadd( -103.124, 168.164, -79.428, 0.22 ) }
    dend_36 { pt3dadd( -103.398, 169.103, -79.4882, 2.14 ) }
    dend_36 { pt3dadd( -103.552, 169.714, -79.4989, 2.14 ) }
    dend_36 { pt3dadd( -104.498, 173.562, -79.5627, 0.15 ) }
    dend_36 { pt3dadd( -104.68, 174.226, -79.601, 1.69 ) }
    dend_36 { pt3dadd( -104.849, 174.842, -79.6322, 1.99 ) }
    dend_36 { pt3dadd( -105.62, 177.699, -79.7396, 0.22 ) }
    dend_36 { pt3dadd( -105.903, 178.632, -79.8373, 2.28 ) }
    dend_36 { pt3dadd( -106.133, 179.315, -79.9423, 1.99 ) }
    dend_36 { pt3dadd( -107.012, 181.509, -80.4431, 0.15 ) }
    dend_36 { pt3dadd( -107.356, 182.415, -80.6428, 1.18 ) }
    dend_36 { pt3dadd( -107.498, 182.823, -80.7375, 1.18 ) }
    dend_36 { pt3dadd( -108.21, 185.207, -81.3079, 0.15 ) }
    dend_36 { pt3dadd( -108.347, 185.666, -81.421, 0.74 ) }
    dend_36 { pt3dadd( -108.451, 186.021, -81.4988, 1.25 ) }
    dend_36 { pt3dadd( -108.513, 186.215, -81.5343, 1.11 ) }
    dend_36 { pt3dadd( -109.208, 188.132, -81.9357, 0.15 ) }
    dend_36 { pt3dadd( -109.304, 188.379, -81.9846, 1.03 ) }
    dend_36 { pt3dadd( -109.804, 189.618, -82.2071, 0.07 ) }
    dend_36 { pt3dadd( -110.208, 190.568, -82.3851, 2.28 ) }
    dend_36 { pt3dadd( -111.488, 193.495, -82.916, 0.15 ) }
    dend_36 { pt3dadd( -111.801, 194.185, -83.0338, 1.55 ) }
    dend_36 { pt3dadd( -111.909, 194.415, -83.0697, 1.55 ) }
    dend_36 { pt3dadd( -112.084, 194.757, -83.1229, 1.55 ) }
    dend_36 { pt3dadd( -112.867, 196.158, -83.3334, 0.15 ) }
    dend_36 { pt3dadd( -113.04, 196.446, -83.3696, 0.96 ) }
    dend_36 { pt3dadd( -113.304, 196.861, -83.4371, 0.96 ) }
    dend_36 { pt3dadd( -113.405, 197.017, -83.4688, 0.96 ) }
    dend_36 { pt3dadd( -114.795, 199.123, -83.9759, 0.15 ) }
    dend_36 { pt3dadd( -115.229, 199.768, -84.1528, 1.84 ) }
    dend_36 { pt3dadd( -115.516, 200.182, -84.2855, 1.99 ) }
    dend_36 { pt3dadd( -116.523, 201.634, -84.7572, 0.15 ) }
    dend_36 { pt3dadd( -116.656, 201.826, -84.8198, 0.37 ) }
    dend_36 { pt3dadd( -116.836, 202.089, -84.9023, 0.37 ) }
    dend_36 { pt3dadd( -117.009, 202.337, -84.981, 0.37 ) }
    dend_36 { pt3dadd( -117.666, 203.186, -85.2024, 0.15 ) }
    dend_36 { pt3dadd( -118.05, 203.626, -85.2984, 1.25 ) }
    dend_36 { pt3dadd( -118.26, 203.84, -85.3239, 1.69 ) }
    dend_36 { pt3dadd( -118.56, 204.128, -85.3594, 1.33 ) }
    dend_36 { pt3dadd( -119.163, 204.623, -85.515, 0.22 ) }
    dend_36 { pt3dadd( -119.87, 205.126, -85.7646, 0.22 ) }
    dend_36 { pt3dadd( -120.455, 205.458, -86.0274, 1.03 ) }
    dend_36 { pt3dadd( -120.855, 205.648, -86.2337, 1.55 ) }
    dend_36 { pt3dadd( -120.892, 205.663, -86.2531, 1.55 ) }
    dend_36 { pt3dadd( -122.398, 206.208, -87.0819, 0.29 ) }
    dend_36 { pt3dadd( -122.524, 206.251, -87.1511, 0.29 ) }
    dend_36 { pt3dadd( -123.308, 206.496, -87.558, 0.29 ) }
    dend_36 { pt3dadd( -123.455, 206.546, -87.6042, 0.29 ) }
    dend_36 { pt3dadd( -123.796, 206.664, -87.7054, 0.29 ) }
    dend_36 { pt3dadd( -124.014, 206.746, -87.7577, 0.29 ) }
    dend_36 { pt3dadd( -124.429, 206.911, -87.8515, 0.29 ) }
    dend_36 { pt3dadd( -124.94, 207.121, -87.9749, 1.33 ) }
    dend_36 { pt3dadd( -126.412, 207.75, -88.3462, 0.15 ) }
    dend_36 { pt3dadd( -127.972, 208.422, -88.7543, 1.99 ) }
    dend_36 { pt3dadd( -130.318, 209.474, -89.347, 0.15 ) }
    dend_36 { pt3dadd( -131.319, 209.935, -89.5907, 1.69 ) }
    dend_36 { pt3dadd( -131.82, 210.166, -89.7121, 2.36 ) }
    dend_36 { pt3dadd( -131.872, 210.19, -89.7248, 2.36 ) }
    dend_36 { pt3dadd( -132.183, 210.347, -89.7958, 1.99 ) }
    dend_36 { pt3dadd( -134.122, 211.381, -90.1361, 0.15 ) }
    dend_36 { pt3dadd( -134.505, 211.608, -90.2125, 0.88 ) }
    dend_36 { pt3dadd( -136.587, 212.918, -90.6409, 0.15 ) }
    dend_36 { pt3dadd( -137.163, 213.299, -90.772, 0.88 ) }
    dend_36 { pt3dadd( -137.534, 213.557, -90.8627, 1.47 ) }
    dend_36 { pt3dadd( -137.806, 213.757, -90.9339, 1.47 ) }
    dend_36 { pt3dadd( -140.019, 215.667, -91.4766, 0.15 ) }
    dend_36 { pt3dadd( -140.306, 215.944, -91.5327, 1.25 ) }
    dend_36 { pt3dadd( -140.538, 216.2, -91.5603, 1.62 ) }
    dend_36 { pt3dadd( -140.572, 216.237, -91.564, 1.62 ) }
    dend_36 { pt3dadd( -140.848, 216.533, -91.5923, 1.62 ) }
    dend_36 { pt3dadd( -143.048, 218.689, -91.8299, 0.29 ) }
    dend_36 { pt3dadd( -143.273, 218.897, -91.852, 0.88 ) }
    dend_36 { pt3dadd( -143.913, 219.456, -91.9288, 0.15 ) }
    dend_36 { pt3dadd( -145.065, 220.413, -92.0823, 2.21 ) }
    dend_36 { pt3dadd( -145.241, 220.553, -92.108, 1.99 ) }
    dend_36 { pt3dadd( -146.887, 221.754, -92.3588, 0.22 ) }
    dend_36 { pt3dadd( -147.126, 221.902, -92.3991, 0.37 ) }
    dend_36 { pt3dadd( -147.219, 221.958, -92.4119, 0.37 ) }
    dend_36 { pt3dadd( -147.581, 222.153, -92.437, 0.37 ) }
    dend_36 { pt3dadd( -147.901, 222.301, -92.418, 0.37 ) }
    dend_36 { pt3dadd( -148.693, 222.571, -92.2985, 0.07 ) }
    dend_36 { pt3dadd( -148.749, 222.582, -92.2855, 0.07 ) }
    dend_36 { pt3dadd( -149.163, 222.639, -92.2011, 0.07 ) }
    dend_36 { pt3dadd( -149.562, 222.599, -92.4263, 0.07 ) }
    dend_36 { pt3dadd( -150.089, 222.529, -92.7852, 1.11 ) }
    dend_36 { pt3dadd( -150.661, 222.462, -93.1807, 1.69 ) }
    dend_36 { pt3dadd( -151.318, 222.387, -93.6496, 0.66 ) }
    dend_36 { pt3dadd( -151.843, 222.335, -94.0229, 1.33 ) }
    dend_36 { pt3dadd( -157.291, 221.939, -97.7236, 0.15 ) }
    dend_36 { pt3dadd( -158.013, 221.906, -98.191, 1.62 ) }
    dend_36 { pt3dadd( -158.979, 221.887, -98.7813, 0.15 ) }
    dend_36 { pt3dadd( -159.025, 221.887, -98.8077, 0.15 ) }
    dend_36 { pt3dadd( -160.052, 221.904, -99.3116, 0.96 ) }
    dend_36 { pt3dadd( -161.562, 221.987, -99.8711, 0.15 ) }
    dend_36 { pt3dadd( -162.091, 222.067, -99.9177, 1.25 ) }
    dend_36 { pt3dadd( -162.473, 222.12, -99.971, 1.4 ) }
    dend_36 { pt3dadd( -163.866, 222.34, -100.201, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_36 { pt3dadd( -164.474, 222.465, -100.301, 1.25 ) }
    dend_36 { pt3dadd( -164.586, 222.497, -100.321, 1.25 ) }
    dend_36 { pt3dadd( -166.628, 223.221, -100.721, 0.07 ) }
    dend_36 { pt3dadd( -167.076, 223.403, -100.808, 1.11 ) }
    dend_36 { pt3dadd( -168.415, 224.033, -101.06, 0.15 ) }
    dend_36 { pt3dadd( -168.945, 224.334, -101.139, 1.55 ) }
    dend_36 { pt3dadd( -170.209, 225.211, -101.268, 0.15 ) }
    dend_36 { pt3dadd( -170.596, 225.521, -101.293, 1.11 ) }
    dend_36 { pt3dadd( -170.639, 225.56, -101.294, 1.11 ) }
    dend_36 { pt3dadd( -171.463, 226.369, -101.281, 0.15 ) }
    dend_36 { pt3dadd( -172.104, 227.013, -101.25, 2.06 ) }
    dend_36 { pt3dadd( -173.776, 228.706, -101.116, 0.15 ) }
    dend_36 { pt3dadd( -174.116, 229.068, -101.078, 0.81 ) }
    dend_36 { pt3dadd( -174.221, 229.187, -101.069, 0.81 ) }
    dend_36 { pt3dadd( -174.879, 229.991, -101.031, 0.15 ) }
    dend_36 { pt3dadd( -175.283, 230.533, -101.019, 1.25 ) }
    dend_36 { pt3dadd( -176.413, 232.194, -101.071, 0.15 ) }
    dend_36 { pt3dadd( -176.836, 232.862, -101.121, 0.15 ) }
    dend_36 { pt3dadd( -177.351, 233.717, -101.197, 1.55 ) }
    dend_36 { pt3dadd( -177.946, 234.775, -101.305, 0.07 ) }
    dend_36 { pt3dadd( -178.103, 235.091, -101.344, 0.37 ) }
    dend_36 { pt3dadd( -178.186, 235.299, -101.37, 0.37 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 22/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -88.704, 128.552, -60.8433, 0.15 ) }
    dend_33 { pt3dadd( -90.1462, 130.732, -62.7357, 0.15 ) }
    dend_33 { pt3dadd( -90.6085, 131.419, -63.3293, 1.11 ) }
    dend_33 { pt3dadd( -91.0895, 132.134, -63.9555, 1.33 ) }
    dend_33 { pt3dadd( -93.0977, 135.111, -66.5763, 0.22 ) }
    dend_33 { pt3dadd( -93.7725, 136.113, -67.4509, 0.22 ) }
    dend_33 { pt3dadd( -94.689, 137.473, -68.5483, 0.22 ) }
    dend_33 { pt3dadd( -95.0035, 137.925, -68.8892, 0.88 ) }
    dend_33 { pt3dadd( -95.69, 138.902, -69.5594, 1.84 ) }
    dend_33 { pt3dadd( -95.7315, 138.961, -69.5945, 1.84 ) }
    dend_33 { pt3dadd( -96.0516, 139.43, -69.8198, 1.84 ) }
    dend_33 { pt3dadd( -98.4026, 142.791, -71.2948, 0.15 ) }
    dend_33 { pt3dadd( -98.6912, 143.203, -71.4292, 0.15 ) }
    dend_33 { pt3dadd( -99.4353, 144.231, -71.7677, 1.84 ) }
    dend_33 { pt3dadd( -99.7183, 144.613, -71.8846, 2.14 ) }
    dend_33 { pt3dadd( -100.506, 145.683, -72.2022, 1.33 ) }
    dend_33 { pt3dadd( -101.109, 146.603, -72.4773, 0.22 ) }
    dend_33 { pt3dadd( -102.376, 148.746, -73.1775, 0.15 ) }
    dend_33 { pt3dadd( -103.033, 149.912, -73.6201, 0.74 ) }
    dend_33 { pt3dadd( -103.474, 150.742, -73.9388, 1.25 ) }
    dend_33 { pt3dadd( -103.895, 151.592, -74.2704, 1.25 ) }
    dend_33 { pt3dadd( -106.067, 156.313, -76.0847, 0.22 ) }
    dend_33 { pt3dadd( -106.721, 157.832, -76.6792, 2.06 ) }
    dend_33 { pt3dadd( -107.158, 158.919, -77.105, 2.58 ) }
    dend_33 { pt3dadd( -107.643, 160.16, -77.5436, 1.77 ) }
    dend_33 { pt3dadd( -108.635, 162.665, -78.4694, 0.22 ) }
    dend_33 { pt3dadd( -108.924, 163.358, -78.7247, 0.52 ) }
    dend_33 { pt3dadd( -109.132, 163.831, -78.8792, 0.52 ) }
    dend_33 { pt3dadd( -109.168, 163.903, -78.8975, 0.52 ) }
    dend_33 { pt3dadd( -109.7, 164.889, -79.1197, 0.22 ) }
    dend_33 { pt3dadd( -110.356, 165.991, -79.3999, 0.81 ) }
    dend_33 { pt3dadd( -110.736, 166.561, -79.5309, 0.81 ) }
    dend_33 { pt3dadd( -110.832, 166.698, -79.5646, 0.81 ) }
    dend_33 { pt3dadd( -112.806, 169.47, -80.2516, 0.07 ) }
    dend_33 { pt3dadd( -113.215, 170.04, -80.3912, 1.18 ) }
    dend_33 { pt3dadd( -113.27, 170.111, -80.4084, 1.18 ) }
    dend_33 { pt3dadd( -114.148, 171.203, -80.6599, 1.99 ) }
    dend_33 { pt3dadd( -114.791, 171.964, -80.8532, 2.21 ) }
    dend_33 { pt3dadd( -115.122, 172.338, -80.9497, 2.21 ) }
    dend_33 { pt3dadd( -115.189, 172.408, -80.9704, 2.21 ) }
    dend_33 { pt3dadd( -117.631, 174.913, -81.9133, 0.15 ) }
    dend_33 { pt3dadd( -118.183, 175.47, -82.1428, 0.59 ) }
    dend_33 { pt3dadd( -118.581, 175.871, -82.3208, 0.59 ) }
    dend_33 { pt3dadd( -119.207, 176.516, -82.6208, 0.59 ) }
    dend_33 { pt3dadd( -120.172, 177.529, -83.1363, 0.15 ) }
    dend_33 { pt3dadd( -121.766, 179.225, -84.0818, 2.21 ) }
    dend_33 { pt3dadd( -122.288, 179.79, -84.4316, 2.21 ) }
    dend_33 { pt3dadd( -122.88, 180.453, -84.8774, 1.77 ) }
    dend_33 { pt3dadd( -126.06, 184.171, -87.3588, 0.15 ) }
    dend_33 { pt3dadd( -126.89, 185.172, -88.0254, 1.4 ) }
    dend_33 { pt3dadd( -127.695, 186.16, -88.6631, 2.06 ) }
    dend_33 { pt3dadd( -128.077, 186.638, -88.9656, 2.06 ) }
    dend_33 { pt3dadd( -130.808, 190.113, -91.2122, 0.15 ) }
    dend_33 { pt3dadd( -132.019, 191.677, -92.2333, 0.15 ) }
    dend_33 { pt3dadd( -132.833, 192.727, -92.9607, 1.33 ) }
    dend_33 { pt3dadd( -133.2, 193.199, -93.2806, 2.14 ) }
    dend_33 { pt3dadd( -133.879, 194.073, -93.8685, 2.14 ) }
    dend_33 { pt3dadd( -135.083, 195.507, -94.9318, 0.15 ) }
    dend_33 { pt3dadd( -135.123, 195.55, -94.9688, 0.15 ) }
    dend_33 { pt3dadd( -136.212, 196.633, -96.1012, 1.18 ) }
    dend_33 { pt3dadd( -136.598, 197.006, -96.5256, 1.62 ) }
    dend_33 { pt3dadd( -136.841, 197.237, -96.8023, 1.62 ) }
    dend_33 { pt3dadd( -138.885, 199.146, -99.1119, 0.15 ) }
    dend_33 { pt3dadd( -139.317, 199.548, -99.6055, 1.47 ) }
    dend_33 { pt3dadd( -139.888, 200.096, -100.237, 1.47 ) }
    dend_33 { pt3dadd( -141.633, 201.843, -102.06, 0.15 ) }
    dend_33 { pt3dadd( -141.738, 201.947, -102.166, 0.15 ) }
    dend_33 { pt3dadd( -142.038, 202.247, -102.486, 0.15 ) }
    dend_33 { pt3dadd( -142.082, 202.295, -102.534, 0.15 ) }
    dend_33 { pt3dadd( -142.518, 202.873, -102.951, 0.15 ) }
    dend_33 { pt3dadd( -142.854, 203.406, -103.273, 0.15 ) }
    dend_33 { pt3dadd( -143.475, 204.494, -103.899, 1.62 ) }
    dend_33 { pt3dadd( -144.682, 206.708, -105.176, 2.5 ) }
    dend_33 { pt3dadd( -145.351, 207.98, -105.911, 1.77 ) }
    dend_33 { pt3dadd( -146.755, 210.748, -107.492, 0.22 ) }
    dend_33 { pt3dadd( -148.186, 213.734, -109.168, 0.15 ) }
    dend_33 { pt3dadd( -148.571, 214.571, -109.621, 0.37 ) }
    dend_33 { pt3dadd( -148.745, 214.967, -109.815, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_33 { pt3dadd( -148.779, 215.044, -109.848, 0.37 ) }
    dend_33 { pt3dadd( -148.925, 215.327, -110.017, 0.37 ) }
    dend_33 { pt3dadd( -149.046, 215.497, -110.157, 0.37 ) }
    dend_33 { pt3dadd( -150.072, 216.701, -111.216, 0.07 ) }
    dend_33 { pt3dadd( -150.714, 217.435, -111.836, 1.84 ) }
    dend_33 { pt3dadd( -151.15, 217.922, -112.269, 2.36 ) }
    dend_33 { pt3dadd( -152.503, 219.426, -113.63, 2.5 ) }
    dend_33 { pt3dadd( -154.191, 221.288, -115.2, 0.15 ) }
    dend_33 { pt3dadd( -154.239, 221.339, -115.24, 0.15 ) }
    dend_33 { pt3dadd( -155.037, 222.225, -115.852, 2.36 ) }
    dend_33 { pt3dadd( -155.91, 223.212, -116.465, 2.36 ) }
    dend_33 { pt3dadd( -158.142, 225.786, -117.932, 0.22 ) }
    dend_33 { pt3dadd( -159.226, 227.078, -118.615, 0.22 ) }
    dend_33 { pt3dadd( -159.755, 227.721, -118.972, 1.33 ) }
    dend_33 { pt3dadd( -160.267, 228.345, -119.333, 1.77 ) }
    dend_33 { pt3dadd( -160.57, 228.717, -119.556, 1.77 ) }
    dend_33 { pt3dadd( -161.241, 229.588, -120.061, 1.77 ) }
    dend_33 { pt3dadd( -164.023, 233.396, -122.447, 0.15 ) }
    dend_33 { pt3dadd( -164.25, 233.717, -122.66, 1.03 ) }
    dend_33 { pt3dadd( -164.839, 234.564, -123.217, 1.4 ) }
    dend_33 { pt3dadd( -165.195, 235.098, -123.535, 1.4 ) }
    dend_33 { pt3dadd( -167.05, 238.008, -125.095, 0.15 ) }
    dend_33 { pt3dadd( -167.847, 239.325, -125.7, 1.99 ) }
    dend_33 { pt3dadd( -168.236, 240.009, -125.965, 2.21 ) }
    dend_33 { pt3dadd( -168.592, 240.65, -126.195, 2.21 ) }
    dend_33 { pt3dadd( -170.319, 243.758, -127.251, 0.15 ) }
    dend_33 { pt3dadd( -170.356, 243.825, -127.272, 0.15 ) }
    dend_33 { pt3dadd( -170.504, 244.092, -127.337, 0.52 ) }
    dend_33 { pt3dadd( -170.627, 244.317, -127.383, 0.52 ) }
    dend_33 { pt3dadd( -170.822, 244.68, -127.463, 0.52 ) }
    dend_33 { pt3dadd( -171.544, 246.057, -127.771, 0.15 ) }
    dend_33 { pt3dadd( -171.691, 246.37, -127.84, 0.44 ) }
    dend_33 { pt3dadd( -171.93, 246.941, -127.958, 0.81 ) }
    dend_33 { pt3dadd( -172.175, 247.546, -128.086, 1.4 ) }
    dend_33 { pt3dadd( -172.263, 247.772, -128.133, 1.4 ) }
    dend_33 { pt3dadd( -172.475, 248.357, -128.247, 1.4 ) }
    dend_33 { pt3dadd( -173.216, 250.566, -128.612, 0.15 ) }
    dend_33 { pt3dadd( -173.383, 251.045, -128.685, 0.88 ) }
    dend_33 { pt3dadd( -173.611, 251.651, -128.786, 0.88 ) }
    dend_33 { pt3dadd( -173.673, 251.792, -128.823, 0.88 ) }
    dend_33 { pt3dadd( -174.019, 252.413, -129.073, 0.88 ) }
    dend_33 { pt3dadd( -174.089, 252.515, -129.132, 0.88 ) }
    dend_33 { pt3dadd( -175.291, 254.003, -130.107, 0.44 ) }
    dend_33 { pt3dadd( -176.257, 255.092, -130.876, 2.5 ) }
    dend_33 { pt3dadd( -177.457, 256.431, -131.964, 2.5 ) }
    dend_33 { pt3dadd( -179.338, 258.566, -133.893, 0.15 ) }
    dend_33 { pt3dadd( -180.391, 259.715, -135.225, 2.36 ) }
    dend_33 { pt3dadd( -181.256, 260.635, -136.458, 0.22 ) }
    dend_33 { pt3dadd( -181.905, 261.318, -137.497, 1.18 ) }
    dend_33 { pt3dadd( -183.49, 263.084, -140.301, 0.15 ) }
    dend_33 { pt3dadd( -184.187, 264.017, -141.769, 1.99 ) }
    dend_33 { pt3dadd( -186.015, 267.004, -146.432, 0.22 ) }
    dend_33 { pt3dadd( -186.034, 267.042, -146.487, 0.22 ) }
    dend_33 { pt3dadd( -186.465, 268.032, -147.954, 1.99 ) }
    dend_33 { pt3dadd( -186.648, 268.517, -148.629, 1.99 ) }
    dend_33 { pt3dadd( -187.662, 271.62, -152.495, 0.29 ) }
    dend_33 { pt3dadd( -187.861, 272.379, -153.337, 1.62 ) }
    dend_33 { pt3dadd( -187.938, 272.847, -153.793, 1.62 ) }
    dend_33 { pt3dadd( -188.347, 275.688, -156.565, 0.22 ) }
    dend_33 { pt3dadd( -188.409, 276.217, -157.072, 1.47 ) }
    dend_33 { pt3dadd( -188.486, 277.031, -157.821, 1.99 ) }
    dend_33 { pt3dadd( -188.502, 277.389, -158.125, 1.99 ) }
    dend_33 { pt3dadd( -188.548, 280.188, -160.437, 0.15 ) }
    dend_33 { pt3dadd( -188.542, 280.74, -160.864, 0.15 ) }
    dend_33 { pt3dadd( -188.497, 281.556, -161.395, 1.03 ) }
    dend_33 { pt3dadd( -188.485, 282.323, -161.861, 1.03 ) }
    dend_33 { pt3dadd( -188.526, 284.276, -162.961, 0.15 ) }
    dend_33 { pt3dadd( -188.546, 284.62, -163.146, 0.66 ) }
    dend_33 { pt3dadd( -188.614, 285.445, -163.54, 1.92 ) }
    dend_33 { pt3dadd( -188.702, 286.602, -164.148, 1.92 ) }
    dend_33 { pt3dadd( -188.965, 289.763, -165.876, 0.22 ) }
    dend_33 { pt3dadd( -189.003, 290.191, -166.112, 1.18 ) }
    dend_33 { pt3dadd( -189.161, 291.876, -167.02, 1.92 ) }
    dend_33 { pt3dadd( -189.251, 292.745, -167.509, 1.92 ) }
    dend_33 { pt3dadd( -189.49, 294.842, -168.766, 0.22 ) }
    dend_33 { pt3dadd( -189.585, 295.378, -169.162, 0.81 ) }
    dend_33 { pt3dadd( -189.714, 295.901, -169.623, 1.25 ) }
    dend_33 { pt3dadd( -189.733, 295.966, -169.684, 1.25 ) }
    dend_33 { pt3dadd( -189.928, 296.522, -170.2, 1.25 ) }
    dend_33 { pt3dadd( -189.964, 296.612, -170.297, 1.25 ) }
    dend_33 { pt3dadd( -190.811, 298.839, -172.783, 0.29 ) }
    dend_33 { pt3dadd( -190.872, 299.042, -173.006, 0.29 ) }
    dend_33 { pt3dadd( -191.119, 300.06, -174.083, 0.29 ) }
    dend_33 { pt3dadd( -191.19, 300.417, -174.445, 1.03 ) }
    dend_33 { pt3dadd( -191.526, 302.62, -176.554, 2.36 ) }
    dend_33 { pt3dadd( -191.63, 303.626, -177.447, 2.73 ) }
    dend_33 { pt3dadd( -191.657, 304.558, -178.179, 1.84 ) }
    dend_33 { pt3dadd( -191.66, 306.406, -179.662, 0.22 ) }
    dend_33 { pt3dadd( -191.66, 306.459, -179.704, 0.22 ) }
    dend_33 { pt3dadd( -191.656, 306.924, -180.043, 0.22 ) }
    dend_33 { pt3dadd( -191.652, 307.099, -180.143, 0.44 ) }
    dend_33 { pt3dadd( -191.663, 307.68, -180.442, 0.44 ) }
    dend_33 { pt3dadd( -191.78, 309.396, -181.163, 0.15 ) }
    dend_33 { pt3dadd( -191.84, 310.014, -181.366, 0.52 ) }
    dend_33 { pt3dadd( -191.877, 310.401, -181.515, 0.52 ) }
    dend_33 { pt3dadd( -191.927, 310.872, -181.712, 0.52 ) }
    dend_33 { pt3dadd( -192.08, 312.465, -182.404, 1.62 ) }
    dend_33 { pt3dadd( -192.139, 313.12, -182.693, 2.21 ) }
    dend_33 { pt3dadd( -192.204, 314.021, -183.079, 1.99 ) }
    dend_33 { pt3dadd( -192.201, 315.842, -183.933, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_33 { pt3dadd( -192.196, 315.904, -183.962, 0.44 ) }
    dend_33 { pt3dadd( -192.116, 316.41, -184.227, 0.44 ) }
    dend_33 { pt3dadd( -192.063, 316.633, -184.343, 0.44 ) }
    dend_33 { pt3dadd( -192.052, 316.703, -184.382, 0.44 ) }
    dend_33 { pt3dadd( -192.033, 317.308, -184.73, 0.88 ) }
    dend_33 { pt3dadd( -192.078, 317.965, -185.09, 0.88 ) }
    dend_33 { pt3dadd( -192.194, 318.868, -185.587, 0.29 ) }
    dend_33 { pt3dadd( -192.396, 319.633, -186.171, 0.29 ) }
    dend_33 { pt3dadd( -192.824, 321.008, -187.328, 1.77 ) }
    dend_33 { pt3dadd( -193.125, 321.883, -188.165, 1.77 ) }
    dend_33 { pt3dadd( -193.144, 321.938, -188.222, 1.77 ) }
    dend_33 { pt3dadd( -193.383, 322.597, -188.963, 1.77 ) }
    dend_33 { pt3dadd( -194.357, 325.129, -192.186, 0.22 ) }
    dend_33 { pt3dadd( -194.607, 325.747, -193.047, 1.84 ) }
    dend_33 { pt3dadd( -195.121, 327.026, -194.891, 1.84 ) }
    dend_33 { pt3dadd( -195.528, 328.078, -196.441, 0.22 ) }
    dend_33 { pt3dadd( -195.569, 328.191, -196.607, 0.22 ) }
    dend_33 { pt3dadd( -196.105, 329.794, -198.908, 0.15 ) }
    dend_33 { pt3dadd( -196.15, 329.94, -199.099, 0.29 ) }
    dend_33 { pt3dadd( -196.289, 330.339, -199.616, 0.29 ) }
    dend_33 { pt3dadd( -196.366, 330.55, -199.871, 0.29 ) }
    dend_33 { pt3dadd( -196.544, 331.029, -200.44, 0.74 ) }
    dend_33 { pt3dadd( -196.711, 331.521, -200.984, 0.74 ) }
    dend_33 { pt3dadd( -197.342, 333.78, -203.171, 0.15 ) }
    dend_33 { pt3dadd( -197.591, 335.013, -204.296, 1.69 ) }
    dend_33 { pt3dadd( -197.599, 335.065, -204.341, 1.69 ) }
    dend_33 { pt3dadd( -197.744, 335.98, -205.263, 1.18 ) }
    dend_33 { pt3dadd( -197.828, 336.576, -205.89, 0.88 ) }
    dend_33 { pt3dadd( -197.968, 337.826, -207.192, 0.29 ) }
    dend_33 { pt3dadd( -198.012, 339.129, -208.42, 0.29 ) }
    dend_33 { pt3dadd( -198.012, 339.186, -208.475, 0.29 ) }
    dend_33 { pt3dadd( -198.002, 341.823, -211.086, 1.25 ) }
    dend_33 { pt3dadd( -197.994, 342.44, -211.752, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 33/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 17.8854, 25.8659, -10.8916, 1.03 ) }
    dend_27 { pt3dadd( 20.6719, 26.8141, -7.88419, 1.03 ) }
    dend_27 { pt3dadd( 22.5105, 27.4049, -6.03324, 0.52 ) }
    dend_27 { pt3dadd( 23.8539, 27.8288, -4.74709, 0.52 ) }
    dend_27 { pt3dadd( 23.9039, 27.845, -4.69621, 0.52 ) }
    dend_27 { pt3dadd( 24.5563, 28.087, -4.0059, 0.88 ) }
    dend_27 { pt3dadd( 26.1378, 28.7673, -2.16172, 0.88 ) }
    dend_27 { pt3dadd( 26.8017, 29.0969, -1.30378, 0.52 ) }
    dend_27 { pt3dadd( 27.6332, 29.6361, -0.158969, 0.66 ) }
    dend_27 { pt3dadd( 28.972, 30.6547, 1.66354, 1.4 ) }
    dend_27 { pt3dadd( 29.5321, 31.1222, 2.43958, 0.74 ) }
    dend_27 { pt3dadd( 30.9912, 32.4973, 4.53135, 0.37 ) }
    dend_27 { pt3dadd( 31.9852, 33.5244, 5.93479, 1.25 ) }
    dend_27 { pt3dadd( 32.9974, 34.6366, 7.36973, 2.36 ) }
    dend_27 { pt3dadd( 33.9575, 35.7055, 8.57969, 0.66 ) }
    dend_27 { pt3dadd( 34.7596, 36.5797, 9.40881, 0.59 ) }
    dend_27 { pt3dadd( 35.6138, 37.4748, 10.1651, 1.03 ) }
    dend_27 { pt3dadd( 36.1654, 38.0682, 10.5657, 2.14 ) }
    dend_27 { pt3dadd( 36.967, 38.9611, 11.1216, 1.84 ) }
    dend_27 { pt3dadd( 37.7678, 39.8512, 11.7055, 1.25 ) }
    dend_27 { pt3dadd( 38.3943, 40.5147, 12.098, 0.66 ) }
    dend_27 { pt3dadd( 39.2541, 41.3554, 12.5867, 0.66 ) }
    dend_27 { pt3dadd( 40.3223, 42.3428, 13.2928, 0.52 ) }
    dend_27 { pt3dadd( 40.7426, 42.7634, 13.6297, 0.44 ) }
    dend_27 { pt3dadd( 40.7795, 42.808, 13.6717, 0.44 ) }
    dend_27 { pt3dadd( 41.3168, 43.5911, 14.4262, 0.44 ) }
    dend_27 { pt3dadd( 41.9958, 44.6854, 15.4108, 0.96 ) }
    dend_27 { pt3dadd( 42.8644, 46.1921, 16.6585, 2.73 ) }
    dend_27 { pt3dadd( 43.4858, 47.2769, 17.5043, 1.99 ) }
    dend_27 { pt3dadd( 44.4714, 48.9445, 18.7755, 0.44 ) }
    dend_27 { pt3dadd( 45.1254, 49.9803, 19.599, 0.66 ) }
    dend_27 { pt3dadd( 46.2204, 51.6913, 20.9923, 0.66 ) }
    dend_27 { pt3dadd( 46.7177, 52.3704, 21.553, 0.44 ) }
    dend_27 { pt3dadd( 47.4524, 53.2151, 22.3324, 1.62 ) }
    dend_27 { pt3dadd( 49.0661, 54.7672, 23.9112, 4.13 ) }
    dend_27 { pt3dadd( 51.2906, 56.5975, 25.9109, 0.52 ) }
    dend_27 { pt3dadd( 51.9027, 57.0543, 26.4816, 0.52 ) }
    dend_27 { pt3dadd( 52.987, 57.7751, 27.5373, 0.52 ) }
    dend_27 { pt3dadd( 54.0627, 58.4361, 28.5885, 1.55 ) }
    dend_27 { pt3dadd( 54.9449, 58.9606, 29.4934, 0.96 ) }
    dend_27 { pt3dadd( 55.77, 59.4456, 30.3714, 0.29 ) }
    dend_27 { pt3dadd( 57.0531, 60.2696, 31.8126, 1.4 ) }
    dend_27 { pt3dadd( 58.807, 61.5882, 33.9346, 2.36 ) }
    dend_27 { pt3dadd( 59.3285, 62.0837, 34.641, 2.36 ) }
    dend_27 { pt3dadd( 60.4714, 63.4134, 36.31, 1.92 ) }
    dend_27 { pt3dadd( 61.3336, 64.6205, 37.7623, 0.59 ) }
    dend_27 { pt3dadd( 61.7704, 65.3619, 38.5788, 0.44 ) }
    dend_27 { pt3dadd( 62.1507, 66.1615, 39.3001, 0.81 ) }
    dend_27 { pt3dadd( 62.6684, 67.4417, 40.3027, 0.59 ) }
    dend_27 { pt3dadd( 63.0157, 68.3227, 40.9384, 1.18 ) }
    dend_27 { pt3dadd( 63.6994, 70.0112, 42.0295, 2.65 ) }
    dend_27 { pt3dadd( 64.4015, 71.6358, 43.0576, 1.84 ) }
    dend_27 { pt3dadd( 65.1899, 73.1986, 44.0996, 0.59 ) }
    dend_27 { pt3dadd( 65.7067, 74.1016, 44.7323, 0.44 ) }
    dend_27 { pt3dadd( 66.1151, 74.735, 45.2216, 0.44 ) }
    dend_27 { pt3dadd( 66.3864, 75.1431, 45.5341, 0.44 ) }
    dend_27 { pt3dadd( 66.99, 76.1004, 46.1872, 1.33 ) }
    dend_27 { pt3dadd( 67.8072, 77.5362, 47.1007, 1.77 ) }
    dend_27 { pt3dadd( 67.8442, 77.6073, 47.1453, 1.77 ) }
    dend_27 { pt3dadd( 68.5111, 79.0768, 47.9786, 0.66 ) }
    dend_27 { pt3dadd( 69.2195, 80.7362, 49.0477, 0.59 ) }
    dend_27 { pt3dadd( 69.6284, 81.7437, 49.725, 2.06 ) }
    dend_27 { pt3dadd( 70.1821, 82.9903, 50.6436, 1.33 ) }
    dend_27 { pt3dadd( 70.4406, 83.503, 51.0337, 0.52 ) }
    dend_27 { pt3dadd( 70.809, 84.1256, 51.5671, 0.44 ) }
    dend_27 { pt3dadd( 72.2037, 86.06, 53.4475, 2.36 ) }
    dend_27 { pt3dadd( 72.2456, 86.1076, 53.5036, 2.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_27 { pt3dadd( 73.9823, 87.7322, 55.6964, 0.59 ) }
    dend_27 { pt3dadd( 74.7004, 88.2735, 56.5258, 0.59 ) }
    dend_27 { pt3dadd( 75.7892, 88.9877, 57.6473, 1.03 ) }
    dend_27 { pt3dadd( 76.665, 89.4857, 58.4237, 1.62 ) }
    dend_27 { pt3dadd( 76.7339, 89.5183, 58.4776, 1.62 ) }
    dend_27 { pt3dadd( 77.7793, 89.9343, 59.2719, 1.47 ) }
    dend_27 { pt3dadd( 79.5583, 90.4827, 60.5209, 0.44 ) }
    dend_27 { pt3dadd( 80.0914, 90.6259, 60.8907, 0.44 ) }
    dend_27 { pt3dadd( 80.3446, 90.6922, 61.0555, 0.44 ) }
    dend_27 { pt3dadd( 82.1538, 91.2433, 62.3083, 0.81 ) }
    dend_27 { pt3dadd( 82.8401, 91.5076, 62.8306, 0.88 ) }
    dend_27 { pt3dadd( 83.6385, 91.9762, 63.563, 0.52 ) }
    dend_27 { pt3dadd( 84.5495, 92.7717, 64.5693, 0.37 ) }
    dend_27 { pt3dadd( 84.702, 92.9479, 64.7644, 0.37 ) }
    dend_27 { pt3dadd( 85.4811, 94.1111, 65.8594, 2.43 ) }
    dend_27 { pt3dadd( 85.9931, 95.1623, 66.6953, 1.62 ) }
    dend_27 { pt3dadd( 86.6486, 96.7797, 68.1331, 0.44 ) }
    dend_27 { pt3dadd( 86.96, 97.6015, 69.1086, 0.59 ) }
    dend_27 { pt3dadd( 87.1326, 98.0779, 69.7725, 0.81 ) }
    dend_27 { pt3dadd( 87.3168, 98.5793, 70.5424, 0.74 ) }
    dend_27 { pt3dadd( 87.5394, 99.1539, 71.5233, 0.44 ) }
    dend_27 { pt3dadd( 88.1773, 100.635, 74.4351, 2.5 ) }
    dend_27 { pt3dadd( 89.0261, 102.287, 78.4295, 0.96 ) }
    dend_27 { pt3dadd( 89.0435, 102.318, 78.5166, 0.96 ) }
    dend_27 { pt3dadd( 89.2964, 102.71, 79.8453, 2.14 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 25/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 17.8854, 25.8659, -10.8916, 1.03 ) }
    dend_26 { pt3dadd( 19.8899, 25.5686, -11.9257, 1.03 ) }
    dend_26 { pt3dadd( 21.1089, 25.3839, -12.7192, 0.29 ) }
    dend_26 { pt3dadd( 22.0494, 25.231, -13.4522, 0.66 ) }
    dend_26 { pt3dadd( 22.8688, 25.096, -14.1438, 1.33 ) }
    dend_26 { pt3dadd( 23.621, 24.9717, -14.7954, 1.18 ) }
    dend_26 { pt3dadd( 24.1843, 24.8788, -15.2901, 0.66 ) }
    dend_26 { pt3dadd( 24.9755, 24.7555, -16.163, 0.66 ) }
    dend_26 { pt3dadd( 25.707, 24.6662, -16.9706, 0.66 ) }
    dend_26 { pt3dadd( 25.7518, 24.6639, -17.0149, 0.66 ) }
    dend_26 { pt3dadd( 26.2423, 24.6855, -17.4687, 0.66 ) }
    dend_26 { pt3dadd( 26.2855, 24.6921, -17.5165, 0.66 ) }
    dend_26 { pt3dadd( 26.7909, 24.7764, -18.0993, 0.74 ) }
    dend_26 { pt3dadd( 27.3918, 24.879, -18.892, 0.88 ) }
    dend_26 { pt3dadd( 28.0728, 25.0151, -19.8575, 1.25 ) }
    dend_26 { pt3dadd( 28.844, 25.1956, -21.0159, 2.21 ) }
    dend_26 { pt3dadd( 30.2858, 25.5386, -23.3089, 2.8 ) }
    dend_26 { pt3dadd( 31.0142, 25.6953, -24.5047, 2.8 ) }
    dend_26 { pt3dadd( 32.5328, 25.975, -27.1291, 0.44 ) }
    dend_26 { pt3dadd( 32.7704, 26.0042, -27.5471, 0.44 ) }
    dend_26 { pt3dadd( 33.2401, 26.0177, -28.3902, 0.44 ) }
    dend_26 { pt3dadd( 33.5724, 25.9828, -29.0035, 0.44 ) }
    dend_26 { pt3dadd( 33.85, 25.9109, -29.4742, 0.44 ) }
    dend_26 { pt3dadd( 34.3722, 25.7261, -30.3398, 1.11 ) }
    dend_26 { pt3dadd( 35.1366, 25.3917, -31.4475, 1.99 ) }
    dend_26 { pt3dadd( 36.3833, 24.8368, -33.1152, 1.11 ) }
    dend_26 { pt3dadd( 37.2637, 24.4573, -34.1916, 0.44 ) }
    dend_26 { pt3dadd( 37.8401, 24.2326, -34.814, 0.44 ) }
    dend_26 { pt3dadd( 38.7332, 23.9152, -35.6508, 1.4 ) }
    dend_26 { pt3dadd( 39.7964, 23.5748, -36.4726, 2.87 ) }
    dend_26 { pt3dadd( 40.9554, 23.2527, -37.1693, 1.84 ) }
    dend_26 { pt3dadd( 41.7975, 23.0551, -37.5276, 0.66 ) }
    dend_26 { pt3dadd( 42.7721, 22.8631, -37.846, 0.37 ) }
    dend_26 { pt3dadd( 43.5313, 22.73, -38.0494, 0.37 ) }
    dend_26 { pt3dadd( 43.9759, 22.6628, -38.1469, 0.37 ) }
    dend_26 { pt3dadd( 44.514, 22.6016, -38.2785, 0.37 ) }
    dend_26 { pt3dadd( 45.2542, 22.5372, -38.613, 0.37 ) }
    dend_26 { pt3dadd( 45.8003, 22.4788, -38.9792, 0.37 ) }
    dend_26 { pt3dadd( 46.0921, 22.4404, -39.3572, 0.59 ) }
    dend_26 { pt3dadd( 46.5409, 22.3706, -40.1089, 0.52 ) }
    dend_26 { pt3dadd( 46.8857, 22.3061, -40.782, 0.52 ) }
    dend_26 { pt3dadd( 47.8389, 22.1017, -42.8687, 3.61 ) }
    dend_26 { pt3dadd( 48.3051, 21.9835, -43.9713, 2.28 ) }
    dend_26 { pt3dadd( 49.8698, 21.4978, -47.8726, 0.66 ) }
    dend_26 { pt3dadd( 49.8921, 21.4901, -47.9302, 0.66 ) }
    dend_26 { pt3dadd( 50.2206, 21.3686, -48.8042, 0.96 ) }
    dend_26 { pt3dadd( 50.5887, 21.2316, -49.7866, 1.33 ) }
    dend_26 { pt3dadd( 50.7644, 21.1697, -50.2405, 0.66 ) }
    dend_26 { pt3dadd( 50.8572, 21.1406, -50.473, 0.66 ) }
    dend_26 { pt3dadd( 51.5847, 20.915, -51.6669, 0.44 ) }
    dend_26 { pt3dadd( 51.6515, 20.894, -51.7749, 0.44 ) }
    dend_26 { pt3dadd( 51.9807, 20.7981, -52.3067, 0.44 ) }
    dend_26 { pt3dadd( 52.0152, 20.7863, -52.3573, 0.44 ) }
    dend_26 { pt3dadd( 52.3089, 20.6417, -52.8008, 0.44 ) }
    dend_26 { pt3dadd( 52.3407, 20.6205, -52.8497, 0.44 ) }
    dend_26 { pt3dadd( 52.5565, 20.4445, -53.1951, 0.44 ) }
    dend_26 { pt3dadd( 52.5912, 20.417, -53.2504, 0.44 ) }
    dend_26 { pt3dadd( 53.0157, 20.0813, -53.9234, 1.25 ) }
    dend_26 { pt3dadd( 53.7656, 19.477, -55.088, 1.84 ) }
    dend_26 { pt3dadd( 54.4739, 18.9005, -56.1554, 1.03 ) }
    dend_26 { pt3dadd( 54.9707, 18.4753, -56.9268, 0.52 ) }
    dend_26 { pt3dadd( 55.3534, 18.1319, -57.5569, 0.52 ) }
    dend_26 { pt3dadd( 55.5717, 17.9296, -57.9271, 0.52 ) }
    dend_26 { pt3dadd( 55.8829, 17.6418, -58.4478, 0.52 ) }
    dend_26 { pt3dadd( 56.1256, 17.4347, -58.9107, 0.66 ) }
    dend_26 { pt3dadd( 56.6378, 17.0277, -60.0097, 1.18 ) }
    dend_26 { pt3dadd( 57.1484, 16.6437, -61.2122, 2.5 ) }
    dend_26 { pt3dadd( 57.173, 16.6263, -61.2765, 2.5 ) }
    dend_26 { pt3dadd( 57.4136, 16.4773, -61.9389, 2.8 ) }
    dend_26 { pt3dadd( 58.4254, 16.0224, -65.2378, 0.52 ) }
    dend_26 { pt3dadd( 58.5616, 15.9856, -65.7718, 0.52 ) }
    dend_26 { pt3dadd( 58.5745, 15.9844, -65.8236, 0.52 ) }
    dend_26 { pt3dadd( 58.8012, 16.0119, -66.8373, 0.52 ) }
    dend_26 { pt3dadd( 58.8135, 16.0158, -66.899, 0.52 ) }
    dend_26 { pt3dadd( 59.4065, 16.2476, -69.6138, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_26 { pt3dadd( 59.9518, 16.4522, -71.7294, 0.44 ) }
    dend_26 { pt3dadd( 60.174, 16.5242, -72.4953, 0.44 ) }
    dend_26 { pt3dadd( 60.9495, 16.7202, -74.9005, 1.4 ) }
    dend_26 { pt3dadd( 61.6506, 16.838, -76.8001, 1.99 ) }
    dend_26 { pt3dadd( 62.2916, 16.893, -78.318, 0.37 ) }
    dend_26 { pt3dadd( 62.7769, 16.8793, -79.2264, 0.37 ) }
    dend_26 { pt3dadd( 63.2029, 16.8309, -79.9203, 1.11 ) }
    dend_26 { pt3dadd( 63.9532, 16.6438, -81.1207, 0.22 ) }
    dend_26 { pt3dadd( 64.449, 16.4706, -81.8665, 0.22 ) }
    dend_26 { pt3dadd( 64.4831, 16.4573, -81.9169, 0.22 ) }
    dend_26 { pt3dadd( 65.0451, 16.2315, -82.7638, 0.22 ) }
    dend_26 { pt3dadd( 66.5581, 15.6316, -84.9928, 1.99 ) }
    dend_26 { pt3dadd( 68.6601, 14.8295, -88.0214, 0.22 ) }
    dend_26 { pt3dadd( 69.7716, 14.4203, -89.5551, 2.65 ) }
    dend_26 { pt3dadd( 71.7742, 13.7115, -92.2343, 0.52 ) }
    dend_26 { pt3dadd( 72.2253, 13.5587, -92.8013, 1.18 ) }
    dend_26 { pt3dadd( 72.836, 13.3608, -93.4984, 1.77 ) }
    dend_26 { pt3dadd( 74.0833, 12.9672, -94.6744, 0.22 ) }
    dend_26 { pt3dadd( 74.6044, 12.8212, -95.0891, 0.88 ) }
    dend_26 { pt3dadd( 75.2315, 12.6448, -95.5493, 0.88 ) }
    dend_26 { pt3dadd( 76.8241, 12.2065, -96.7095, 0.29 ) }
    dend_26 { pt3dadd( 77.6754, 11.9704, -97.3385, 1.47 ) }
    dend_26 { pt3dadd( 78.398, 11.7673, -97.8518, 2.21 ) }
    dend_26 { pt3dadd( 81.5116, 10.9247, -100.126, 0.37 ) }
    dend_26 { pt3dadd( 83.0905, 10.5095, -101.287, 0.37 ) }
    dend_26 { pt3dadd( 84.1452, 10.2352, -102.052, 1.84 ) }
    dend_26 { pt3dadd( 84.7956, 10.0718, -102.507, 1.84 ) }
    dend_26 { pt3dadd( 86.9502, 9.55725, -103.975, 0.29 ) }
    dend_26 { pt3dadd( 88.7371, 9.16086, -105.009, 2.28 ) }
    dend_26 { pt3dadd( 90.9227, 8.70687, -106.046, 0.66 ) }
    dend_26 { pt3dadd( 91.8386, 8.52293, -106.437, 1.4 ) }
    dend_26 { pt3dadd( 92.7243, 8.33708, -106.806, 1.77 ) }
    dend_26 { pt3dadd( 93.3262, 8.20746, -107.058, 0.81 ) }
    dend_26 { pt3dadd( 97.4604, 7.26367, -108.766, 0.29 ) }
    dend_26 { pt3dadd( 98.5335, 6.99846, -109.185, 1.92 ) }
    dend_26 { pt3dadd( 99.579, 6.72553, -109.626, 1.84 ) }
    dend_26 { pt3dadd( 102.051, 6.0322, -110.776, 0.29 ) }
    dend_26 { pt3dadd( 102.537, 5.87692, -111.028, 0.59 ) }
    dend_26 { pt3dadd( 103.033, 5.67576, -111.408, 0.59 ) }
    dend_26 { pt3dadd( 103.092, 5.64614, -111.477, 0.59 ) }
    dend_26 { pt3dadd( 103.894, 5.21663, -112.538, 0.15 ) }
    dend_26 { pt3dadd( 104.462, 4.90777, -113.376, 1.03 ) }
    dend_26 { pt3dadd( 104.899, 4.66821, -114.047, 1.62 ) }
    dend_26 { pt3dadd( 107.975, 3.02663, -119.13, 0.15 ) }
    dend_26 { pt3dadd( 109.201, 2.37891, -121.249, 2.28 ) }
    dend_26 { pt3dadd( 109.579, 2.18134, -121.916, 2.65 ) }
    dend_26 { pt3dadd( 110.846, 1.53364, -124.177, 0.22 ) }
    dend_26 { pt3dadd( 111.216, 1.34801, -124.828, 0.96 ) }
    dend_26 { pt3dadd( 113.538, 0.255614, -128.817, 0.15 ) }
    dend_26 { pt3dadd( 113.635, 0.216866, -128.987, 0.66 ) }
    dend_26 { pt3dadd( 113.926, 0.118543, -129.499, 0.66 ) }
    dend_26 { pt3dadd( 114.551, -0.0232078, -130.831, 0.22 ) }
    dend_26 { pt3dadd( 114.751, -0.0469522, -131.285, 0.59 ) }
    dend_26 { pt3dadd( 114.854, -0.0493389, -131.532, 0.59 ) }
    dend_26 { pt3dadd( 116.248, 0.00956818, -134.629, 0.22 ) }
    dend_26 { pt3dadd( 116.626, 0.0192935, -135.405, 1.11 ) }
    dend_26 { pt3dadd( 118.588, -0.0921123, -138.597, 0.22 ) }
    dend_26 { pt3dadd( 119.206, -0.152568, -139.479, 1.99 ) }
    dend_26 { pt3dadd( 119.598, -0.202561, -139.979, 1.33 ) }
    dend_26 { pt3dadd( 122.184, -0.654548, -142.92, 0.22 ) }
    dend_26 { pt3dadd( 123.435, -0.930424, -144.18, 2.87 ) }
    dend_26 { pt3dadd( 126.571, -1.72129, -147.205, 0.22 ) }
    dend_26 { pt3dadd( 127.635, -2.02834, -148.116, 1.47 ) }
    dend_26 { pt3dadd( 127.974, -2.1358, -148.414, 1.47 ) }
    dend_26 { pt3dadd( 129.519, -2.66899, -149.755, 0.22 ) }
    dend_26 { pt3dadd( 130.515, -3.05011, -150.606, 0.96 ) }
    dend_26 { pt3dadd( 130.847, -3.1794, -150.915, 0.59 ) }
    dend_26 { pt3dadd( 131.909, -3.57982, -152.098, 0.07 ) }
    dend_26 { pt3dadd( 132.891, -3.91279, -153.295, 1.33 ) }
    dend_26 { pt3dadd( 133.336, -4.05989, -153.877, 1.33 ) }
    dend_26 { pt3dadd( 134.571, -4.45837, -155.532, 0.37 ) }
    dend_26 { pt3dadd( 135.223, -4.6758, -156.411, 1.18 ) }
    dend_26 { pt3dadd( 136.666, -5.16322, -158.411, 0.22 ) }
    dend_26 { pt3dadd( 138.051, -5.63874, -160.361, 2.28 ) }
    dend_26 { pt3dadd( 139.906, -6.33014, -162.898, 0.15 ) }
    dend_26 { pt3dadd( 140.236, -6.46336, -163.367, 0.88 ) }
    dend_26 { pt3dadd( 141.202, -6.88529, -164.77, 0.22 ) }
    dend_26 { pt3dadd( 141.232, -6.89922, -164.812, 0.22 ) }
    dend_26 { pt3dadd( 141.715, -7.13401, -165.464, 1.47 ) }
    dend_26 { pt3dadd( 143.574, -8.03158, -167.987, 0.15 ) }
    dend_26 { pt3dadd( 144.477, -8.43489, -169.282, 0.74 ) }
    dend_26 { pt3dadd( 145.118, -8.69888, -170.219, 1.33 ) }
    dend_26 { pt3dadd( 145.819, -8.95243, -171.243, 2.36 ) }
    dend_26 { pt3dadd( 145.852, -8.96321, -171.295, 2.36 ) }
    dend_26 { pt3dadd( 147.477, -9.46814, -173.873, 0.29 ) }
    dend_26 { pt3dadd( 147.812, -9.5858, -174.497, 1.11 ) }
    dend_26 { pt3dadd( 148.623, -9.94432, -176.159, 0.22 ) }
    dend_26 { pt3dadd( 149.062, -10.2001, -177.335, 1.77 ) }
    dend_26 { pt3dadd( 149.743, -10.7213, -179.537, 0.29 ) }
    dend_26 { pt3dadd( 150.028, -10.9923, -180.591, 1.4 ) }
    dend_26 { pt3dadd( 150.947, -12.1043, -184.55, 0.22 ) }
    dend_26 { pt3dadd( 151.198, -12.4562, -185.78, 1.84 ) }
    dend_26 { pt3dadd( 151.819, -13.394, -189.235, 0.15 ) }
    dend_26 { pt3dadd( 152.028, -13.6706, -190.274, 1.11 ) }
    dend_26 { pt3dadd( 152.425, -14.0967, -191.934, 0.15 ) }
    dend_26 { pt3dadd( 152.64, -14.2829, -192.746, 0.96 ) }
    dend_26 { pt3dadd( 153.239, -14.6678, -194.547, 0.15 ) }
    dend_26 { pt3dadd( 154.163, -15.1108, -197.036, 2.06 ) }
    dend_26 { pt3dadd( 155.425, -15.4299, -199.851, 0.15 ) }
    dend_26 { pt3dadd( 155.616, -15.4512, -200.256, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_26 { pt3dadd( 155.644, -15.452, -200.312, 0.52 ) }
    dend_26 { pt3dadd( 155.912, -15.4372, -200.797, 0.15 ) }
    dend_26 { pt3dadd( 156.996, -15.2773, -202.422, 2.36 ) }
    dend_26 { pt3dadd( 159.217, -14.8088, -205.481, 0.22 ) }
    dend_26 { pt3dadd( 159.53, -14.7266, -205.906, 0.96 ) }
    dend_26 { pt3dadd( 159.572, -14.7177, -205.962, 0.96 ) }
    dend_26 { pt3dadd( 160.143, -14.6774, -206.676, 1.18 ) }
    dend_26 { pt3dadd( 161.715, -14.76, -208.503, 0.22 ) }
    dend_26 { pt3dadd( 162.724, -14.9902, -209.614, 0.81 ) }
    dend_26 { pt3dadd( 163.657, -15.3446, -210.505, 2.21 ) }
    dend_26 { pt3dadd( 164.704, -15.8351, -211.45, 1.33 ) }
    dend_26 { pt3dadd( 166.788, -17.0608, -213.337, 0.22 ) }
    dend_26 { pt3dadd( 167.333, -17.4634, -213.879, 1.25 ) }
    dend_26 { pt3dadd( 168.957, -18.8851, -215.669, 0.22 ) }
    dend_26 { pt3dadd( 170.255, -20.0948, -217.211, 1.47 ) }
    dend_26 { pt3dadd( 170.714, -20.554, -217.867, 1.4 ) }
    dend_26 { pt3dadd( 172.203, -22.1072, -220.287, 0.22 ) }
    dend_26 { pt3dadd( 173.408, -23.4069, -222.525, 1.55 ) }
    dend_26 { pt3dadd( 174.612, -24.7085, -225.214, 0.22 ) }
    dend_26 { pt3dadd( 175.089, -25.2123, -226.43, 1.18 ) }
    dend_26 { pt3dadd( 176.018, -26.1267, -229.007, 0.22 ) }
    dend_26 { pt3dadd( 176.426, -26.479, -230.108, 2.14 ) }
    dend_26 { pt3dadd( 176.445, -26.4922, -230.157, 2.14 ) }
    dend_26 { pt3dadd( 178.273, -27.5334, -234.387, 0.22 ) }
    dend_26 { pt3dadd( 178.793, -27.7689, -235.44, 2.28 ) }
    dend_26 { pt3dadd( 179.983, -28.2312, -237.56, 0.22 ) }
    dend_26 { pt3dadd( 180.405, -28.3727, -238.222, 0.22 ) }
    dend_26 { pt3dadd( 181.479, -28.6876, -239.619, 1.33 ) }
    dend_26 { pt3dadd( 182.274, -28.8957, -240.366, 0.96 ) }
    dend_26 { pt3dadd( 184.141, -29.3738, -241.329, 0.22 ) }
    dend_26 { pt3dadd( 184.198, -29.3905, -241.351, 0.22 ) }
    dend_26 { pt3dadd( 185.855, -30.0065, -241.71, 0.22 ) }
    dend_26 { pt3dadd( 189.393, -31.655, -242.216, 1.11 ) }
    dend_26 { pt3dadd( 190.597, -32.3621, -242.189, 0.22 ) }
    dend_26 { pt3dadd( 191.825, -33.2437, -242.035, 0.22 ) }
    dend_26 { pt3dadd( 192.896, -34.2012, -241.76, 2.06 ) }
    dend_26 { pt3dadd( 194.338, -35.7576, -241.317, 0.37 ) }
    dend_26 { pt3dadd( 194.881, -36.5554, -241.104, 0.37 ) }
    dend_26 { pt3dadd( 196.042, -39.0314, -240.66, 0.22 ) }
    dend_26 { pt3dadd( 196.291, -39.7493, -240.531, 1.11 ) }
    dend_26 { pt3dadd( 196.757, -41.5051, -240.22, 0.22 ) }
    dend_26 { pt3dadd( 196.973, -42.6793, -240.054, 1.99 ) }
    dend_26 { pt3dadd( 197.23, -44.9645, -239.88, 0.22 ) }
    dend_26 { pt3dadd( 197.291, -45.8358, -239.883, 0.52 ) }
    dend_26 { pt3dadd( 197.336, -47.6261, -239.987, 0.22 ) }
    dend_26 { pt3dadd( 197.338, -48.0652, -240.007, 0.66 ) }
    dend_26 { pt3dadd( 197.287, -49.88, -240.088, 0.22 ) }
    dend_26 { pt3dadd( 197.285, -49.9308, -240.087, 0.22 ) }
    dend_26 { pt3dadd( 197.188, -51.2296, -240.029, 1.4 ) }
    dend_26 { pt3dadd( 196.949, -53.6807, -239.779, 0.22 ) }
    dend_26 { pt3dadd( 196.865, -54.354, -239.685, 1.18 ) }
    dend_26 { pt3dadd( 196.759, -55.2818, -239.548, 0.29 ) }
    dend_26 { pt3dadd( 196.739, -56.0177, -239.464, 1.03 ) }
    dend_26 { pt3dadd( 196.783, -56.801, -239.409, 0.29 ) }
    dend_26 { pt3dadd( 196.917, -57.6431, -239.412, 1.18 ) }
    dend_26 { pt3dadd( 197.245, -58.9998, -239.552, 0.22 ) }
    dend_26 { pt3dadd( 197.47, -59.8161, -239.685, 1.18 ) }
    dend_26 { pt3dadd( 198.303, -62.5304, -240.263, 0.22 ) }
    dend_26 { pt3dadd( 198.557, -63.2922, -240.444, 0.96 ) }
    dend_26 { pt3dadd( 199.075, -64.7504, -240.811, 0.22 ) }
    dend_26 { pt3dadd( 199.314, -65.4222, -240.982, 1.11 ) }
    dend_26 { pt3dadd( 199.829, -66.8855, -241.332, 0.22 ) }
    dend_26 { pt3dadd( 199.957, -67.3319, -241.432, 0.52 ) }
    dend_26 { pt3dadd( 200.169, -68.586, -241.662, 0.22 ) }
    dend_26 { pt3dadd( 200.259, -69.2804, -241.771, 0.96 ) }
    dend_26 { pt3dadd( 200.368, -70.5271, -241.903, 0.22 ) }
    dend_26 { pt3dadd( 200.428, -71.3981, -241.962, 1.18 ) }
    dend_26 { pt3dadd( 200.513, -72.7493, -241.969, 0.22 ) }
    dend_26 { pt3dadd( 200.521, -73.5389, -241.984, 1.18 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 69/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.10465, 11.1751, 15.593, 1.25 ) }
    dend_21 { pt3dadd( -9.90063, 11.7827, 16.635, 1.25 ) }
    dend_21 { pt3dadd( -10.1823, 11.9665, 16.9542, 1.25 ) }
    dend_21 { pt3dadd( -10.5744, 12.1813, 17.3542, 1.11 ) }
    dend_21 { pt3dadd( -11.3718, 12.5779, 18.1375, 0.74 ) }
    dend_21 { pt3dadd( -11.7859, 12.7743, 18.5342, 0.88 ) }
    dend_21 { pt3dadd( -12.2138, 12.9896, 18.9646, 1.25 ) }
    dend_21 { pt3dadd( -12.4311, 13.0945, 19.1795, 1.55 ) }
    dend_21 { pt3dadd( -12.9037, 13.3681, 19.7046, 1.84 ) }
    dend_21 { pt3dadd( -13.4835, 13.7942, 20.4224, 1.84 ) }
    dend_21 { pt3dadd( -13.8224, 14.1224, 20.9015, 1.84 ) }
    dend_21 { pt3dadd( -14.2967, 14.8013, 21.8169, 1.25 ) }
    dend_21 { pt3dadd( -14.4483, 15.1382, 22.2359, 1.25 ) }
    dend_21 { pt3dadd( -14.6223, 15.8232, 23.0111, 0.81 ) }
    dend_21 { pt3dadd( -14.6553, 16.3809, 23.5701, 0.81 ) }
    dend_21 { pt3dadd( -14.5864, 17.0368, 24.1769, 1.11 ) }
    dend_21 { pt3dadd( -14.3151, 17.9688, 25.1135, 0.81 ) }
    dend_21 { pt3dadd( -14.1363, 18.3545, 25.5983, 0.88 ) }
    dend_21 { pt3dadd( -13.8908, 18.8012, 26.2986, 0.96 ) }
    dend_21 { pt3dadd( -13.6702, 19.1962, 27.0725, 1.18 ) }
    dend_21 { pt3dadd( -13.4944, 19.5635, 27.9607, 1.4 ) }
    dend_21 { pt3dadd( -13.2611, 20.2817, 30.2239, 2.06 ) }
    dend_21 { pt3dadd( -13.2421, 20.8645, 32.6169, 2.28 ) }
    dend_21 { pt3dadd( -13.3203, 21.0484, 33.6116, 1.84 ) }
    dend_21 { pt3dadd( -13.5376, 21.2181, 34.884, 1.33 ) }
    dend_21 { pt3dadd( -13.7929, 21.3069, 35.8272, 0.96 ) }
    dend_21 { pt3dadd( -14.5711, 21.4352, 37.7655, 1.69 ) }
    dend_21 { pt3dadd( -14.9473, 21.4682, 38.3976, 2.14 ) }
    dend_21 { pt3dadd( -15.3463, 21.4958, 38.9206, 1.84 ) }
    dend_21 { pt3dadd( -16.5252, 21.6007, 40.3026, 1.33 ) }
    dend_21 { pt3dadd( -16.8961, 21.6351, 40.6762, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_21 { pt3dadd( -17.5134, 21.6914, 41.1771, 0.88 ) }
    dend_21 { pt3dadd( -18.0942, 21.7558, 41.506, 0.81 ) }
    dend_21 { pt3dadd( -18.5491, 21.836, 41.7292, 0.88 ) }
    dend_21 { pt3dadd( -19.0561, 21.9663, 41.9213, 0.88 ) }
    dend_21 { pt3dadd( -19.407, 22.0856, 41.9936, 0.88 ) }
    dend_21 { pt3dadd( -19.468, 22.1163, 42.0087, 0.88 ) }
    dend_21 { pt3dadd( -19.8974, 22.4105, 42.1465, 0.88 ) }
    dend_21 { pt3dadd( -20.2843, 22.7417, 42.3143, 0.96 ) }
    dend_21 { pt3dadd( -20.6103, 23.0842, 42.523, 1.03 ) }
    dend_21 { pt3dadd( -20.946, 23.4969, 42.837, 1.18 ) }
    dend_21 { pt3dadd( -21.345, 24.0247, 43.2916, 1.18 ) }
    dend_21 { pt3dadd( -21.5851, 24.3591, 43.6005, 0.96 ) }
    dend_21 { pt3dadd( -21.7814, 24.6508, 43.8952, 0.81 ) }
    dend_21 { pt3dadd( -22.0889, 25.1435, 44.4074, 0.74 ) }
    dend_21 { pt3dadd( -22.3653, 25.61, 44.9231, 0.74 ) }
    dend_21 { pt3dadd( -22.5089, 25.8486, 45.1882, 0.66 ) }
    dend_21 { pt3dadd( -22.7161, 26.1668, 45.5117, 0.66 ) }
    dend_21 { pt3dadd( -22.7407, 26.201, 45.5422, 0.66 ) }
    dend_21 { pt3dadd( -22.9539, 26.4659, 45.7497, 0.81 ) }
    dend_21 { pt3dadd( -23.5765, 27.1762, 46.2262, 0.96 ) }
    dend_21 { pt3dadd( -23.9508, 27.5888, 46.5094, 0.88 ) }
    dend_21 { pt3dadd( -24.2156, 27.8606, 46.7092, 1.11 ) }
    dend_21 { pt3dadd( -24.5984, 28.2229, 46.9972, 1.11 ) }
    dend_21 { pt3dadd( -25.0729, 28.634, 47.3895, 1.18 ) }
    dend_21 { pt3dadd( -25.3492, 28.8412, 47.6514, 1.18 ) }
    dend_21 { pt3dadd( -25.9861, 29.2745, 48.3735, 1.25 ) }
    dend_21 { pt3dadd( -26.3542, 29.5095, 48.861, 1.25 ) }
    dend_21 { pt3dadd( -26.6263, 29.6742, 49.2899, 1.25 ) }
    dend_21 { pt3dadd( -27.1986, 29.9829, 50.2799, 1.11 ) }
    dend_21 { pt3dadd( -27.7212, 30.2288, 51.2144, 1.11 ) }
    dend_21 { pt3dadd( -28.256, 30.4554, 52.2112, 0.81 ) }
    dend_21 { pt3dadd( -28.5338, 30.5767, 52.7409, 0.81 ) }
    dend_21 { pt3dadd( -29.0537, 30.8337, 53.7636, 1.03 ) }
    dend_21 { pt3dadd( -29.3842, 31.0139, 54.3949, 1.33 ) }
    dend_21 { pt3dadd( -29.5599, 31.1235, 54.7035, 1.33 ) }
    dend_21 { pt3dadd( -29.9529, 31.4144, 55.3277, 0.74 ) }
    dend_21 { pt3dadd( -30.4918, 31.8649, 56.0375, 0.44 ) }
    dend_21 { pt3dadd( -30.6663, 32.0469, 56.2213, 0.44 ) }
    dend_21 { pt3dadd( -30.7009, 32.0901, 56.2447, 0.44 ) }
    dend_21 { pt3dadd( -30.8748, 32.3394, 56.3345, 0.66 ) }
    dend_21 { pt3dadd( -31.0464, 32.5971, 56.3924, 0.88 ) }
    dend_21 { pt3dadd( -31.3343, 33.0364, 56.4775, 1.11 ) }
    dend_21 { pt3dadd( -31.7088, 33.5857, 56.7245, 1.11 ) }
    dend_21 { pt3dadd( -31.9746, 33.917, 56.9939, 0.66 ) }
    dend_21 { pt3dadd( -32.0069, 33.9498, 57.034, 0.66 ) }
    dend_21 { pt3dadd( -32.2843, 34.1634, 57.4285, 0.74 ) }
    dend_21 { pt3dadd( -32.7883, 34.4346, 58.1997, 0.74 ) }
    dend_21 { pt3dadd( -33.4814, 34.6796, 59.4073, 0.74 ) }
    dend_21 { pt3dadd( -33.8033, 34.7399, 59.9702, 1.11 ) }
    dend_21 { pt3dadd( -34.014, 34.7667, 60.3176, 1.33 ) }
    dend_21 { pt3dadd( -34.2812, 34.7939, 60.715, 1.03 ) }
    dend_21 { pt3dadd( -34.6039, 34.8148, 61.1456, 0.88 ) }
    dend_21 { pt3dadd( -35.5093, 34.8783, 62.1747, 1.03 ) }
    dend_21 { pt3dadd( -35.8795, 34.9201, 62.5452, 1.33 ) }
    dend_21 { pt3dadd( -36.5771, 35.0346, 63.2267, 1.18 ) }
    dend_21 { pt3dadd( -37.2489, 35.1577, 63.8321, 0.74 ) }
    dend_21 { pt3dadd( -37.4633, 35.2058, 64.02, 0.74 ) }
    dend_21 { pt3dadd( -37.9527, 35.327, 64.4181, 1.03 ) }
    dend_21 { pt3dadd( -38.3767, 35.4507, 64.7552, 1.03 ) }
    dend_21 { pt3dadd( -38.6365, 35.545, 64.9875, 1.03 ) }
    dend_21 { pt3dadd( -39.043, 35.7184, 65.4114, 0.81 ) }
    dend_21 { pt3dadd( -39.833, 36.1159, 66.3346, 0.74 ) }
    dend_21 { pt3dadd( -40.1032, 36.2768, 66.7012, 0.74 ) }
    dend_21 { pt3dadd( -40.6009, 36.6197, 67.4597, 0.74 ) }
    dend_21 { pt3dadd( -40.8711, 36.8509, 67.9433, 0.74 ) }
    dend_21 { pt3dadd( -41.2027, 37.2171, 68.6484, 0.81 ) }
    dend_21 { pt3dadd( -41.3373, 37.4423, 69.0351, 1.03 ) }
    dend_21 { pt3dadd( -41.5284, 38.0559, 69.9144, 0.29 ) }
    dend_21 { pt3dadd( -41.5325, 38.1281, 70.0028, 0.44 ) }
    dend_21 { pt3dadd( -41.4391, 38.6187, 70.4863, 0.44 ) }
    dend_21 { pt3dadd( -41.3058, 38.9737, 70.7762, 0.59 ) }
    dend_21 { pt3dadd( -41.0757, 39.4547, 71.0948, 0.59 ) }
    dend_21 { pt3dadd( -40.8795, 39.8621, 71.3623, 0.59 ) }
    dend_21 { pt3dadd( -40.8576, 39.9111, 71.3921, 0.59 ) }
    dend_21 { pt3dadd( -40.6957, 40.4319, 71.7552, 0.52 ) }
    dend_21 { pt3dadd( -40.7006, 40.4861, 71.8021, 0.52 ) }
    dend_21 { pt3dadd( -40.8774, 40.7725, 72.1082, 0.52 ) }
    dend_21 { pt3dadd( -41.2678, 41.1112, 72.6081, 0.52 ) }
    dend_21 { pt3dadd( -41.2971, 41.1357, 72.6442, 0.52 ) }
    dend_21 { pt3dadd( -41.4602, 41.2852, 72.8344, 0.44 ) }
    dend_21 { pt3dadd( -41.7908, 41.6047, 73.1787, 0.44 ) }
    dend_21 { pt3dadd( -41.9451, 41.7659, 73.3287, 0.44 ) }
    dend_21 { pt3dadd( -42.8555, 42.8434, 74.2349, 1.99 ) }
    dend_21 { pt3dadd( -43.1237, 43.2194, 74.509, 2.14 ) }
    dend_21 { pt3dadd( -43.3706, 43.6457, 74.7962, 2.14 ) }
    dend_21 { pt3dadd( -43.514, 43.9527, 74.9936, 1.33 ) }
    dend_21 { pt3dadd( -43.6369, 44.2841, 75.1931, 0.81 ) }
    dend_21 { pt3dadd( -43.8687, 44.9965, 75.5781, 0.37 ) }
    dend_21 { pt3dadd( -43.9481, 45.2731, 75.712, 0.15 ) }
    dend_21 { pt3dadd( -44.0769, 45.6843, 75.9646, 0.29 ) }
    dend_21 { pt3dadd( -44.2232, 46.2026, 76.3104, 0.44 ) }
    dend_21 { pt3dadd( -44.2367, 46.2587, 76.3526, 0.44 ) }
    dend_21 { pt3dadd( -44.3008, 46.5134, 76.549, 0.44 ) }
    dend_21 { pt3dadd( -44.4332, 47.0376, 76.9591, 0.59 ) }
    dend_21 { pt3dadd( -44.5197, 47.3788, 77.2382, 0.88 ) }
    dend_21 { pt3dadd( -44.6093, 47.7948, 77.5639, 0.88 ) }
    dend_21 { pt3dadd( -44.6962, 48.4109, 78.024, 0.88 ) }
    dend_21 { pt3dadd( -44.7158, 48.9359, 78.4339, 0.59 ) }
    dend_21 { pt3dadd( -44.7083, 49.4815, 78.8673, 0.59 ) }
    dend_21 { pt3dadd( -44.7045, 49.5318, 78.9057, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_21 { pt3dadd( -44.6588, 49.8445, 79.1478, 0.59 ) }
    dend_21 { pt3dadd( -44.6036, 50.0473, 79.3142, 0.66 ) }
    dend_21 { pt3dadd( -44.2468, 50.7268, 79.7391, 0.66 ) }
    dend_21 { pt3dadd( -48.0926, 54.7126, 86.5634, 0.66 ) }
    dend_21 { pt3dadd( -50.9233, 59.6706, 93.2055, 0.66 ) }
    dend_21 { pt3dadd( -53.0569, 64.332, 100.348, 0.66 ) }
    dend_21 { pt3dadd( -55.4283, 68.0198, 108.016, 0.66 ) }
    dend_21 { pt3dadd( -55.7419, 71.8292, 116.008, 0.66 ) }
    dend_21 { pt3dadd( -55.5137, 74.0336, 124.627, 0.66 ) }
    dend_21 { pt3dadd( -55.2097, 74.9037, 133.485, 0.66 ) }
    dend_21 { pt3dadd( -55.7522, 75.3331, 142.362, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -9.10465, 11.1751, 15.593, 1.25 ) }
    dend_20 { pt3dadd( -10.5486, 10.7468, 17.7369, 1.25 ) }
    dend_20 { pt3dadd( -11.1114, 10.593, 18.572, 1.25 ) }
    dend_20 { pt3dadd( -11.7816, 10.4128, 19.6015, 1.25 ) }
    dend_20 { pt3dadd( -12.2956, 10.2695, 20.7069, 1.62 ) }
    dend_20 { pt3dadd( -13.1119, 10.0807, 22.6989, 1.62 ) }
    dend_20 { pt3dadd( -13.359, 10.0302, 23.3436, 1.84 ) }
    dend_20 { pt3dadd( -13.9839, 9.98116, 25.3071, 1.84 ) }
    dend_20 { pt3dadd( -14.4917, 10.0037, 27.2047, 1.84 ) }
    dend_20 { pt3dadd( -15.6634, 10.2456, 32.1387, 1.84 ) }
    dend_20 { pt3dadd( -15.8145, 10.3032, 32.8311, 1.55 ) }
    dend_20 { pt3dadd( -15.8274, 10.3108, 32.8938, 1.55 ) }
    dend_20 { pt3dadd( -16.3743, 10.7648, 35.6937, 1.4 ) }
    dend_20 { pt3dadd( -16.6308, 11.033, 36.9454, 1.47 ) }
    dend_20 { pt3dadd( -16.9449, 11.3347, 38.0805, 0.96 ) }
    dend_20 { pt3dadd( -17.028, 11.3905, 38.2605, 1.18 ) }
    dend_20 { pt3dadd( -17.237, 11.4822, 38.6155, 1.18 ) }
    dend_20 { pt3dadd( -18.0738, 11.7178, 39.6678, 0.59 ) }
    dend_20 { pt3dadd( -19.2032, 11.8452, 40.5896, 0.96 ) }
    dend_20 { pt3dadd( -19.9548, 11.8522, 41.0588, 0.96 ) }
    dend_20 { pt3dadd( -20.5699, 11.8127, 41.3636, 1.18 ) }
    dend_20 { pt3dadd( -21.8421, 11.6881, 41.9441, 1.18 ) }
    dend_20 { pt3dadd( -22.6639, 11.581, 42.2958, 0.88 ) }
    dend_20 { pt3dadd( -23.3116, 11.488, 42.5427, 1.11 ) }
    dend_20 { pt3dadd( -24.1698, 11.3765, 42.9498, 1.69 ) }
    dend_20 { pt3dadd( -24.9836, 11.2805, 43.4474, 1.69 ) }
    dend_20 { pt3dadd( -26.1276, 11.1519, 44.2639, 1.25 ) }
    dend_20 { pt3dadd( -26.9698, 11.0607, 44.9439, 0.88 ) }
    dend_20 { pt3dadd( -27.2004, 11.0334, 45.1336, 0.88 ) }
    dend_20 { pt3dadd( -29.004, 10.8007, 46.5366, 0.37 ) }
    dend_20 { pt3dadd( -29.4506, 10.7265, 46.8541, 1.03 ) }
    dend_20 { pt3dadd( -30.2334, 10.5599, 47.3583, 1.25 ) }
    dend_20 { pt3dadd( -31.1154, 10.3269, 47.8689, 1.55 ) }
    dend_20 { pt3dadd( -32.0441, 10.0538, 48.4033, 1.77 ) }
    dend_20 { pt3dadd( -32.9095, 9.75266, 48.9609, 1.99 ) }
    dend_20 { pt3dadd( -33.7334, 9.40551, 49.509, 1.03 ) }
    dend_20 { pt3dadd( -34.3922, 9.07465, 50.1846, 1.03 ) }
    dend_20 { pt3dadd( -35.1138, 8.62109, 51.2625, 1.03 ) }
    dend_20 { pt3dadd( -35.4917, 8.32664, 52.0177, 1.4 ) }
    dend_20 { pt3dadd( -36.0932, 7.81286, 53.517, 0.81 ) }
    dend_20 { pt3dadd( -36.3318, 7.60216, 54.1884, 0.52 ) }
    dend_20 { pt3dadd( -37.2285, 6.83045, 56.8715, 0.88 ) }
    dend_20 { pt3dadd( -37.5416, 6.56965, 57.8179, 1.11 ) }
    dend_20 { pt3dadd( -37.8143, 6.36118, 58.5653, 1.18 ) }
    dend_20 { pt3dadd( -38.1279, 6.1543, 59.2969, 1.33 ) }
    dend_20 { pt3dadd( -38.6558, 5.88307, 60.3025, 1.55 ) }
    dend_20 { pt3dadd( -39.4473, 5.55907, 61.6104, 1.03 ) }
    dend_20 { pt3dadd( -40.0828, 5.34245, 62.4405, 1.25 ) }
    dend_20 { pt3dadd( -40.6347, 5.19688, 63.1422, 0.96 ) }
    dend_20 { pt3dadd( -41.3588, 5.04169, 64.0449, 0.74 ) }
    dend_20 { pt3dadd( -41.7675, 4.96782, 64.5406, 0.74 ) }
    dend_20 { pt3dadd( -42.6069, 4.88982, 65.4915, 0.74 ) }
    dend_20 { pt3dadd( -42.9405, 4.8898, 65.8283, 0.66 ) }
    dend_20 { pt3dadd( -43.9096, 4.95863, 66.7436, 0.66 ) }
    dend_20 { pt3dadd( -44.2422, 5.0048, 67.0553, 0.66 ) }
    dend_20 { pt3dadd( -44.821, 5.10896, 67.5575, 0.66 ) }
    dend_20 { pt3dadd( -45.3183, 5.18985, 67.9934, 0.96 ) }
    dend_20 { pt3dadd( -45.607, 5.22115, 68.251, 0.81 ) }
    dend_20 { pt3dadd( -45.9636, 5.25398, 68.5782, 0.81 ) }
    dend_20 { pt3dadd( -46.4111, 5.28583, 68.9803, 0.81 ) }
    dend_20 { pt3dadd( -46.7998, 5.30262, 69.3614, 0.81 ) }
    dend_20 { pt3dadd( -47.5436, 5.2994, 70.1862, 0.15 ) }
    dend_20 { pt3dadd( -48.1139, 5.24359, 70.9459, 1.11 ) }
    dend_20 { pt3dadd( -53.2918, 4.40997, 78.5179, 1.11 ) }
    dend_20 { pt3dadd( -58.2988, 2.95668, 86.1059, 1.11 ) }
    dend_20 { pt3dadd( -64.465, -0.471259, 91.9665, 1.11 ) }
    dend_20 { pt3dadd( -70.4306, -3.49393, 98.2577, 1.11 ) }
    dend_20 { pt3dadd( -76.9544, -6.04299, 104.214, 1.11 ) }
    dend_20 { pt3dadd( -83.5184, -9.22722, 109.788, 1.11 ) }
    dend_20 { pt3dadd( -89.5021, -13.2562, 115.418, 1.11 ) }
    dend_20 { pt3dadd( -95.8344, -17.3603, 120.594, 1.11 ) }
    dend_20 { pt3dadd( -101.541, -21.8261, 126.15, 1.11 ) }
    dend_20 { pt3dadd( -106.408, -26.571, 132.218, 1.11 ) }
    dend_20 { pt3dadd( -112.408, -30.2823, 138.064, 1.11 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 85/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.22658, -27.5549, 26.2729, 3.02 ) }
    dend_10 { pt3dadd( -3.87682, -30.0747, 26.8705, 3.02 ) }
    dend_10 { pt3dadd( -4.68525, -33.2075, 27.6134, 2.8 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -3.22658, -27.5549, 26.2729, 0.96 ) }
    dend_7 { pt3dadd( -5.0987, -27.2876, 29.2549, 0.96 ) }
    dend_7 { pt3dadd( -5.60552, -27.3147, 30.0793, 0.59 ) }
    dend_7 { pt3dadd( -5.96174, -27.3717, 30.6326, 0.59 ) }
    dend_7 { pt3dadd( -6.24395, -27.4406, 31.0783, 0.59 ) }
    dend_7 { pt3dadd( -7.47895, -27.7789, 32.9242, 0.96 ) }
    dend_7 { pt3dadd( -8.46225, -28.0388, 34.272, 1.62 ) }
    dend_7 { pt3dadd( -9.5281, -28.3904, 35.5245, 1.4 ) }
    dend_7 { pt3dadd( -10.0039, -28.5438, 36.0197, 0.81 ) }
    dend_7 { pt3dadd( -11.4214, -28.9124, 37.2351, 0.96 ) }
    dend_7 { pt3dadd( -12.2634, -29.0593, 37.8919, 1.47 ) }
    dend_7 { pt3dadd( -13.211, -29.138, 38.5185, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_7 { pt3dadd( -14.1525, -29.1505, 39.1342, 0.96 ) }
    dend_7 { pt3dadd( -15.4216, -29.136, 40.0828, 1.11 ) }
    dend_7 { pt3dadd( -16.575, -29.0925, 41.3055, 1.92 ) }
    dend_7 { pt3dadd( -17.913, -29.123, 43.417, 1.03 ) }
    dend_7 { pt3dadd( -18.2374, -29.1769, 44.1925, 0.59 ) }
    dend_7 { pt3dadd( -18.5965, -29.2929, 45.3584, 1.11 ) }
    dend_7 { pt3dadd( -19.1423, -29.6138, 47.8333, 1.62 ) }
    dend_7 { pt3dadd( -19.594, -30.1431, 51.5128, 1.62 ) }
    dend_7 { pt3dadd( -19.7615, -30.618, 54.6443, 0.88 ) }
    dend_7 { pt3dadd( -19.7579, -31.0518, 57.2454, 1.4 ) }
    dend_7 { pt3dadd( -19.7548, -31.0625, 57.3057, 1.4 ) }
    dend_7 { pt3dadd( -19.6573, -31.2564, 58.2278, 1.4 ) }
    dend_7 { pt3dadd( -19.004, -32.3166, 61.9303, 0.59 ) }
    dend_7 { pt3dadd( -18.9345, -32.4305, 62.2099, 0.59 ) }
    dend_7 { pt3dadd( -18.7637, -32.6973, 62.8803, 0.59 ) }
    dend_7 { pt3dadd( -18.6154, -32.9228, 63.3997, 0.59 ) }
    dend_7 { pt3dadd( -18.2152, -33.6145, 64.8834, 0.52 ) }
    dend_7 { pt3dadd( -17.9234, -34.3046, 66.149, 0.15 ) }
    dend_7 { pt3dadd( -17.7369, -35.2126, 67.1631, 1.18 ) }
    dend_7 { pt3dadd( -17.592, -36.4763, 68.6734, 1.84 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 20/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -197.994, 342.44, -211.752, 0.15 ) }
    dend_35 { pt3dadd( -198.494, 344.754, -214.646, 0.15 ) }
    dend_35 { pt3dadd( -198.581, 345.158, -215.151, 0.88 ) }
    dend_35 { pt3dadd( -198.858, 346.439, -216.753, 0.07 ) }
    dend_35 { pt3dadd( -198.911, 346.685, -217.061, 1.18 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 25/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -197.994, 342.44, -211.752, 0.37 ) }
    dend_34 { pt3dadd( -197.757, 343.344, -212.835, 0.37 ) }
    dend_34 { pt3dadd( -197.685, 343.616, -213.162, 0.37 ) }
    dend_34 { pt3dadd( -197.467, 344.448, -214.158, 0.15 ) }
    dend_34 { pt3dadd( -197.124, 345.754, -215.723, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 30/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 89.2964, 102.71, 79.8453, 0.15 ) }
    dend_29 { pt3dadd( 88.4423, 102.942, 81.5834, 0.15 ) }
    dend_29 { pt3dadd( 88.3015, 102.967, 81.7941, 0.74 ) }
    dend_29 { pt3dadd( 87.0943, 103.109, 83.1387, 0.52 ) }
    dend_29 { pt3dadd( 86.4402, 103.139, 83.6319, 0.22 ) }
    dend_29 { pt3dadd( 86.1169, 103.141, 83.8069, 0.74 ) }
    dend_29 { pt3dadd( 85.3139, 103.145, 84.2415, 0.15 ) }
    dend_29 { pt3dadd( 85.0222, 103.115, 84.2854, 0.37 ) }
    dend_29 { pt3dadd( 84.4852, 103.053, 84.281, 0.37 ) }
    dend_29 { pt3dadd( 83.8441, 102.99, 84.1089, 0.15 ) }
    dend_29 { pt3dadd( 83.5739, 102.954, 84.0232, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 41/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 89.2964, 102.71, 79.8453, 0.15 ) }
    dend_28 { pt3dadd( 90.685, 103.923, 81.3922, 0.15 ) }
    dend_28 { pt3dadd( 91.0418, 104.193, 81.7169, 0.52 ) }
    dend_28 { pt3dadd( 91.8803, 104.65, 82.3421, 0.22 ) }
    dend_28 { pt3dadd( 93.5079, 105.339, 83.3904, 0.81 ) }
    dend_28 { pt3dadd( 94.3318, 105.649, 83.8626, 1.11 ) }
    dend_28 { pt3dadd( 95.6234, 106.107, 84.5528, 0.37 ) }
    dend_28 { pt3dadd( 96.429, 106.359, 84.9003, 0.37 ) }
    dend_28 { pt3dadd( 97.9435, 106.806, 85.4469, 0.37 ) }
    dend_28 { pt3dadd( 99.0634, 107.138, 85.7505, 0.52 ) }
    dend_28 { pt3dadd( 99.742, 107.395, 85.8605, 0.66 ) }
    dend_28 { pt3dadd( 99.8432, 107.454, 85.8787, 0.66 ) }
    dend_28 { pt3dadd( 100.493, 108.232, 86.0239, 0.22 ) }
    dend_28 { pt3dadd( 100.713, 108.822, 86.1103, 0.52 ) }
    dend_28 { pt3dadd( 100.785, 109.381, 86.1371, 0.96 ) }
    dend_28 { pt3dadd( 100.802, 110.203, 86.1354, 0.52 ) }
    dend_28 { pt3dadd( 100.794, 111.507, 86.0758, 0.22 ) }
    dend_28 { pt3dadd( 100.793, 111.667, 86.0632, 0.52 ) }
    dend_28 { pt3dadd( 100.787, 111.815, 86.0486, 0.44 ) }
    dend_28 { pt3dadd( 100.724, 113.658, 85.8198, 0.15 ) }
    dend_28 { pt3dadd( 100.725, 114.282, 85.7122, 0.52 ) }
    dend_28 { pt3dadd( 100.797, 115.146, 85.5036, 0.15 ) }
    dend_28 { pt3dadd( 100.845, 115.378, 85.4348, 0.44 ) }
    dend_28 { pt3dadd( 107.988, 121.772, 90.5423, 0.44 ) }
    dend_28 { pt3dadd( 114.657, 127.698, 96.7952, 0.44 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 66/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.68525, -33.2075, 27.6134, 0.81 ) }
    dend_14 { pt3dadd( -4.11962, -33.9568, 27.3309, 0.81 ) }
    dend_14 { pt3dadd( -3.70327, -34.6585, 26.9939, 0.81 ) }
    dend_14 { pt3dadd( -3.2959, -35.5161, 26.5749, 0.52 ) }
    dend_14 { pt3dadd( -2.94407, -36.4621, 26.064, 0.59 ) }
    dend_14 { pt3dadd( -2.65821, -37.3827, 25.4178, 0.74 ) }
    dend_14 { pt3dadd( -2.34316, -38.4797, 24.6299, 0.52 ) }
    dend_14 { pt3dadd( -2.06544, -39.6601, 23.8052, 0.52 ) }
    dend_14 { pt3dadd( -1.91987, -40.4646, 23.3129, 1.11 ) }
    dend_14 { pt3dadd( -1.70812, -42.0135, 22.4862, 1.84 ) }
    dend_14 { pt3dadd( -1.35637, -45.1072, 21.0744, 0.66 ) }
    dend_14 { pt3dadd( -1.18516, -46.586, 20.4925, 1.03 ) }
    dend_14 { pt3dadd( -0.977232, -48.0798, 20.0343, 1.11 ) }
    dend_14 { pt3dadd( -0.630411, -50.1025, 19.594, 2.28 ) }
    dend_14 { pt3dadd( -0.500338, -50.7531, 19.5047, 2.21 ) }
    dend_14 { pt3dadd( -0.330769, -51.449, 19.5005, 2.06 ) }
    dend_14 { pt3dadd( -0.12765, -52.1035, 19.5863, 2.06 ) }
    dend_14 { pt3dadd( 0.31772, -53.1777, 19.7108, 0.96 ) }
    dend_14 { pt3dadd( 0.83572, -54.0833, 19.7837, 0.59 ) }
    dend_14 { pt3dadd( 1.15377, -54.5112, 19.8205, 0.59 ) }
    dend_14 { pt3dadd( 1.8488, -55.3439, 19.9204, 0.59 ) }
    dend_14 { pt3dadd( 2.47389, -56.093, 20.1572, 0.59 ) }
    dend_14 { pt3dadd( 2.71674, -56.417, 20.3025, 0.59 ) }
    dend_14 { pt3dadd( 3.1525, -57.1146, 20.633, 0.59 ) }
    dend_14 { pt3dadd( 3.1977, -57.2011, 20.6722, 0.59 ) }
    dend_14 { pt3dadd( 3.5338, -57.9595, 20.9961, 0.59 ) }
    dend_14 { pt3dadd( 4.35412, -60.2, 21.9614, 1.4 ) }
    dend_14 { pt3dadd( 4.88391, -61.8387, 22.6866, 1.69 ) }
    dend_14 { pt3dadd( 5.33407, -63.2359, 23.3511, 1.84 ) }
    dend_14 { pt3dadd( 5.6336, -64.1462, 23.8497, 1.84 ) }
    dend_14 { pt3dadd( 5.65985, -64.224, 23.8949, 1.84 ) }
    dend_14 { pt3dadd( 6.1023, -65.4836, 24.6241, 1.25 ) }
    dend_14 { pt3dadd( 6.67753, -67.0131, 25.4388, 0.52 ) }
    dend_14 { pt3dadd( 6.99465, -67.8154, 25.8899, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_14 { pt3dadd( 7.59301, -69.2324, 26.607, 0.52 ) }
    dend_14 { pt3dadd( 7.92595, -70.0223, 26.9283, 0.59 ) }
    dend_14 { pt3dadd( 8.30301, -70.9007, 27.1918, 0.81 ) }
    dend_14 { pt3dadd( 8.78269, -72.0121, 27.3699, 0.52 ) }
    dend_14 { pt3dadd( 9.13424, -72.8436, 27.4078, 0.52 ) }
    dend_14 { pt3dadd( 9.64961, -74.1056, 27.4318, 0.96 ) }
    dend_14 { pt3dadd( 9.96474, -74.8863, 27.4349, 1.33 ) }
    dend_14 { pt3dadd( 10.2461, -75.5696, 27.4898, 1.77 ) }
    dend_14 { pt3dadd( 10.564, -76.3467, 27.6179, 1.99 ) }
    dend_14 { pt3dadd( 10.7964, -76.928, 27.7496, 1.92 ) }
    dend_14 { pt3dadd( 11.343, -78.3264, 28.0969, 1.47 ) }
    dend_14 { pt3dadd( 11.5522, -78.8586, 28.2364, 1.25 ) }
    dend_14 { pt3dadd( 11.783, -79.4022, 28.3484, 1.03 ) }
    dend_14 { pt3dadd( 11.9963, -79.8749, 28.4167, 0.88 ) }
    dend_14 { pt3dadd( 12.2238, -80.3349, 28.4491, 0.74 ) }
    dend_14 { pt3dadd( 12.734, -81.3393, 28.444, 0.29 ) }
    dend_14 { pt3dadd( 13.2722, -82.3438, 28.4125, 0.29 ) }
    dend_14 { pt3dadd( 13.7238, -83.1586, 28.408, 0.44 ) }
    dend_14 { pt3dadd( 13.9598, -83.5812, 28.4142, 0.74 ) }
    dend_14 { pt3dadd( 14.5134, -84.5738, 28.4826, 0.96 ) }
    dend_14 { pt3dadd( 15.0536, -85.5306, 28.5968, 1.92 ) }
    dend_14 { pt3dadd( 15.5729, -86.4656, 28.7504, 2.43 ) }
    dend_14 { pt3dadd( 15.9776, -87.1824, 28.8789, 2.5 ) }
    dend_14 { pt3dadd( 16.4033, -87.924, 29.0247, 2.06 ) }
    dend_14 { pt3dadd( 17.0894, -89.0767, 29.2555, 0.74 ) }
    dend_14 { pt3dadd( 17.4028, -89.5764, 29.3555, 0.52 ) }
    dend_14 { pt3dadd( 17.8362, -90.2234, 29.4676, 0.29 ) }
    dend_14 { pt3dadd( 18.2405, -90.8163, 29.5532, 0.29 ) }
    dend_14 { pt3dadd( 18.674, -91.4411, 29.6845, 1.03 ) }
    dend_14 { pt3dadd( 19.2453, -92.238, 29.8961, 1.77 ) }
    dend_14 { pt3dadd( 19.8441, -93.0312, 30.1722, 1.77 ) }
    dend_14 { pt3dadd( 20.1711, -93.4523, 30.3576, 1.4 ) }
    dend_14 { pt3dadd( 20.7223, -94.1542, 30.7152, 0.96 ) }
    dend_14 { pt3dadd( 21.4081, -95.0443, 31.1981, 0.44 ) }
    dend_14 { pt3dadd( 21.4535, -95.1038, 31.2312, 0.44 ) }
    dend_14 { pt3dadd( 22.1653, -96.051, 31.8, 0.22 ) }
    dend_14 { pt3dadd( 22.5548, -96.5798, 32.1216, 0.74 ) }
    dend_14 { pt3dadd( 22.9739, -97.1725, 32.4475, 1.11 ) }
    dend_14 { pt3dadd( 23.2308, -97.5732, 32.6219, 1.18 ) }
    dend_14 { pt3dadd( 23.5419, -98.1509, 32.8344, 1.18 ) }
    dend_14 { pt3dadd( 23.7953, -98.7065, 33.0283, 1.03 ) }
    dend_14 { pt3dadd( 23.9476, -99.0955, 33.1494, 0.81 ) }
    dend_14 { pt3dadd( 24.2545, -99.8789, 33.4095, 0.59 ) }
    dend_14 { pt3dadd( 24.7827, -101.15, 33.9061, 0.15 ) }
    dend_14 { pt3dadd( 25.0839, -101.814, 34.1792, 0.15 ) }
    dend_14 { pt3dadd( 25.3025, -102.274, 34.3614, 0.44 ) }
    dend_14 { pt3dadd( 25.7605, -103.166, 34.7044, 0.44 ) }
    dend_14 { pt3dadd( 26.6209, -104.742, 35.3107, 0.29 ) }
    dend_14 { pt3dadd( 27.1313, -105.637, 35.6544, 1.18 ) }
    dend_14 { pt3dadd( 27.6537, -106.536, 35.9728, 2.21 ) }
    dend_14 { pt3dadd( 28.3317, -107.677, 36.3376, 2.21 ) }
    dend_14 { pt3dadd( 28.8602, -108.579, 36.6054, 1.33 ) }
    dend_14 { pt3dadd( 29.6719, -109.961, 36.965, 0.52 ) }
    dend_14 { pt3dadd( 29.7175, -110.039, 36.985, 0.52 ) }
    dend_14 { pt3dadd( 30.4282, -111.263, 37.3091, 0.52 ) }
    dend_14 { pt3dadd( 30.6636, -111.672, 37.4526, 0.52 ) }
    dend_14 { pt3dadd( 31.079, -112.371, 37.7656, 0.52 ) }
    dend_14 { pt3dadd( 31.6093, -113.166, 38.1756, 0.52 ) }
    dend_14 { pt3dadd( 32.5397, -114.391, 38.9424, 1.55 ) }
    dend_14 { pt3dadd( 33.1139, -115.071, 39.4134, 2.43 ) }
    dend_14 { pt3dadd( 34.0886, -116.105, 40.1915, 2.06 ) }
    dend_14 { pt3dadd( 35.1139, -117.112, 40.9126, 0.59 ) }
    dend_14 { pt3dadd( 36.4268, -118.296, 41.7348, 0.52 ) }
    dend_14 { pt3dadd( 37.35, -119.062, 42.2324, 0.81 ) }
    dend_14 { pt3dadd( 38.0253, -119.573, 42.5209, 1.33 ) }
    dend_14 { pt3dadd( 38.915, -120.219, 42.8662, 1.03 ) }
    dend_14 { pt3dadd( 40.4927, -121.339, 43.3646, 0.22 ) }
    dend_14 { pt3dadd( 40.9014, -121.656, 43.4965, 0.88 ) }
    dend_14 { pt3dadd( 41.2987, -122.021, 43.6382, 1.11 ) }
    dend_14 { pt3dadd( 41.6262, -122.37, 43.7599, 0.96 ) }
    dend_14 { pt3dadd( 42.2896, -123.211, 44.0577, 0.37 ) }
    dend_14 { pt3dadd( 42.7788, -123.923, 44.3093, 0.15 ) }
    dend_14 { pt3dadd( 43.6348, -125.317, 44.7892, 1.99 ) }
    dend_14 { pt3dadd( 43.9389, -125.844, 44.9424, 2.43 ) }
    dend_14 { pt3dadd( 44.586, -126.991, 45.2339, 2.5 ) }
    dend_14 { pt3dadd( 45.9192, -129.385, 45.7703, 0.22 ) }
    dend_14 { pt3dadd( 46.1657, -129.823, 45.8505, 0.81 ) }
    dend_14 { pt3dadd( 46.5554, -130.491, 45.9581, 0.81 ) }
    dend_14 { pt3dadd( 47.7108, -132.365, 46.2104, 0.22 ) }
    dend_14 { pt3dadd( 48.2903, -133.266, 46.3312, 1.4 ) }
    dend_14 { pt3dadd( 48.3287, -133.324, 46.3387, 1.4 ) }
    dend_14 { pt3dadd( 49.0971, -134.427, 46.513, 1.77 ) }
    dend_14 { pt3dadd( 50.1628, -135.914, 46.7809, 0.37 ) }
    dend_14 { pt3dadd( 50.6441, -136.547, 46.9097, 0.37 ) }
    dend_14 { pt3dadd( 51.1001, -137.142, 47.0413, 1.11 ) }
    dend_14 { pt3dadd( 51.1473, -137.206, 47.058, 1.11 ) }
    dend_14 { pt3dadd( 51.9579, -138.317, 47.3731, 0.74 ) }
    dend_14 { pt3dadd( 52.4716, -139.048, 47.6322, 0.52 ) }
    dend_14 { pt3dadd( 53.1839, -140.096, 48.051, 0.29 ) }
    dend_14 { pt3dadd( 53.4447, -140.483, 48.2127, 0.29 ) }
    dend_14 { pt3dadd( 54.1512, -141.556, 48.6753, 1.11 ) }
    dend_14 { pt3dadd( 55.1533, -143.041, 49.3023, 0.22 ) }
    dend_14 { pt3dadd( 55.6961, -143.83, 49.658, 1.11 ) }
    dend_14 { pt3dadd( 56.0153, -144.29, 49.8848, 1.33 ) }
    dend_14 { pt3dadd( 56.248, -144.629, 50.0608, 1.18 ) }
    dend_14 { pt3dadd( 57.1963, -145.96, 50.7387, 0.37 ) }
    dend_14 { pt3dadd( 58.0278, -147.12, 51.2965, 0.37 ) }
    dend_14 { pt3dadd( 58.9556, -148.416, 51.9044, 2.14 ) }
    dend_14 { pt3dadd( 59.2653, -148.835, 52.0816, 2.14 ) }
    dend_14 { pt3dadd( 60.056, -149.889, 52.5058, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_14 { pt3dadd( 60.9187, -151.067, 52.9373, 0.44 ) }
    dend_14 { pt3dadd( 61.301, -151.614, 53.103, 0.74 ) }
    dend_14 { pt3dadd( 61.6643, -152.167, 53.2561, 0.74 ) }
    dend_14 { pt3dadd( 62.1011, -152.844, 53.4334, 0.22 ) }
    dend_14 { pt3dadd( 62.3866, -153.29, 53.5575, 0.22 ) }
    dend_14 { pt3dadd( 62.6686, -153.733, 53.7079, 0.22 ) }
    dend_14 { pt3dadd( 62.9371, -154.151, 53.8754, 0.22 ) }
    dend_14 { pt3dadd( 63.9686, -155.74, 54.6046, 2.95 ) }
    dend_14 { pt3dadd( 65.0288, -157.337, 55.3978, 0.29 ) }
    dend_14 { pt3dadd( 65.8015, -158.463, 55.986, 0.29 ) }
    dend_14 { pt3dadd( 66.4955, -159.426, 56.5441, 1.03 ) }
    dend_14 { pt3dadd( 66.9944, -160.081, 56.9592, 1.25 ) }
    dend_14 { pt3dadd( 67.8801, -161.227, 57.7138, 0.15 ) }
    dend_14 { pt3dadd( 68.1797, -161.605, 57.9562, 0.37 ) }
    dend_14 { pt3dadd( 68.5324, -162.044, 58.2331, 0.37 ) }
    dend_14 { pt3dadd( 69.6507, -163.407, 59.0534, 0.15 ) }
    dend_14 { pt3dadd( 70.2566, -164.142, 59.4445, 1.55 ) }
    dend_14 { pt3dadd( 70.8005, -164.796, 59.7704, 1.11 ) }
    dend_14 { pt3dadd( 71.8272, -166.006, 60.353, 0.15 ) }
    dend_14 { pt3dadd( 72.0971, -166.324, 60.5025, 0.15 ) }
    dend_14 { pt3dadd( 72.493, -166.801, 60.7334, 0.29 ) }
    dend_14 { pt3dadd( 72.5561, -166.878, 60.768, 0.29 ) }
    dend_14 { pt3dadd( 72.9504, -167.355, 61.0037, 0.29 ) }
    dend_14 { pt3dadd( 73.6722, -168.214, 61.4919, 0.81 ) }
    dend_14 { pt3dadd( 74.2016, -168.841, 61.8791, 1.69 ) }
    dend_14 { pt3dadd( 75.5227, -170.384, 62.8419, 0.15 ) }
    dend_14 { pt3dadd( 75.7828, -170.695, 63.0296, 0.29 ) }
    dend_14 { pt3dadd( 76.0936, -171.076, 63.249, 0.29 ) }
    dend_14 { pt3dadd( 76.6414, -171.765, 63.6167, 0.52 ) }
    dend_14 { pt3dadd( 76.875, -172.069, 63.7505, 0.96 ) }
    dend_14 { pt3dadd( 76.9189, -172.13, 63.7816, 0.96 ) }
    dend_14 { pt3dadd( 77.2156, -172.581, 64.0059, 1.18 ) }
    dend_14 { pt3dadd( 78.0413, -173.918, 64.6479, 0.29 ) }
    dend_14 { pt3dadd( 78.2435, -174.256, 64.8232, 0.44 ) }
    dend_14 { pt3dadd( 78.7109, -175.017, 65.2162, 0.22 ) }
    dend_14 { pt3dadd( 79.6171, -176.423, 65.927, 0.44 ) }
    dend_14 { pt3dadd( 80.4093, -177.605, 66.5012, 2.5 ) }
    dend_14 { pt3dadd( 81.2002, -178.764, 67.0341, 0.88 ) }
    dend_14 { pt3dadd( 81.9744, -179.869, 67.4984, 0.52 ) }
    dend_14 { pt3dadd( 82.8874, -181.153, 68.0102, 0.52 ) }
    dend_14 { pt3dadd( 83.5537, -182.056, 68.3379, 0.22 ) }
    dend_14 { pt3dadd( 84.0393, -182.7, 68.5255, 1.18 ) }
    dend_14 { pt3dadd( 84.4496, -183.23, 68.6783, 1.03 ) }
    dend_14 { pt3dadd( 84.9057, -183.813, 68.8296, 0.52 ) }
    dend_14 { pt3dadd( 85.6755, -184.787, 69.0143, 0.15 ) }
    dend_14 { pt3dadd( 86.168, -185.403, 69.1312, 0.81 ) }
    dend_14 { pt3dadd( 86.5621, -185.886, 69.2189, 0.66 ) }
    dend_14 { pt3dadd( 86.9684, -186.384, 69.3019, 0.22 ) }
    dend_14 { pt3dadd( 87.373, -186.854, 69.3766, 0.22 ) }
    dend_14 { pt3dadd( 88.0368, -187.658, 69.4864, 1.4 ) }
    dend_14 { pt3dadd( 88.4188, -188.145, 69.5615, 1.92 ) }
    dend_14 { pt3dadd( 88.7407, -188.579, 69.6518, 1.99 ) }
    dend_14 { pt3dadd( 90.6213, -191.184, 70.2996, 0.29 ) }
    dend_14 { pt3dadd( 91.0358, -191.767, 70.4701, 0.29 ) }
    dend_14 { pt3dadd( 91.812, -192.83, 70.8217, 0.29 ) }
    dend_14 { pt3dadd( 92.5131, -193.728, 71.1498, 0.29 ) }
    dend_14 { pt3dadd( 93.3111, -194.686, 71.5446, 0.29 ) }
    dend_14 { pt3dadd( 93.9226, -195.366, 71.8558, 1.62 ) }
    dend_14 { pt3dadd( 94.6603, -196.125, 72.227, 2.21 ) }
    dend_14 { pt3dadd( 95.6569, -197.124, 72.6929, 0.44 ) }
    dend_14 { pt3dadd( 96.6455, -198.041, 73.154, 0.44 ) }
    dend_14 { pt3dadd( 97.368, -198.713, 73.481, 0.88 ) }
    dend_14 { pt3dadd( 97.7381, -199.078, 73.6549, 0.52 ) }
    dend_14 { pt3dadd( 98.2917, -199.694, 73.9414, 0.15 ) }
    dend_14 { pt3dadd( 98.5666, -200.045, 74.0759, 0.44 ) }
    dend_14 { pt3dadd( 99.4841, -201.366, 74.4984, 0.15 ) }
    dend_14 { pt3dadd( 99.9626, -202.098, 74.6866, 1.55 ) }
    dend_14 { pt3dadd( 100.314, -202.635, 74.808, 1.69 ) }
    dend_14 { pt3dadd( 100.756, -203.283, 74.9327, 1.69 ) }
    dend_14 { pt3dadd( 101.731, -204.656, 75.1787, 0.52 ) }
    dend_14 { pt3dadd( 102.206, -205.308, 75.268, 0.81 ) }
    dend_14 { pt3dadd( 102.598, -205.846, 75.3101, 0.88 ) }
    dend_14 { pt3dadd( 102.939, -206.308, 75.3541, 0.88 ) }
    dend_14 { pt3dadd( 103.958, -207.745, 75.5291, 0.15 ) }
    dend_14 { pt3dadd( 104.404, -208.449, 75.6479, 1.03 ) }
    dend_14 { pt3dadd( 104.698, -208.985, 75.761, 1.47 ) }
    dend_14 { pt3dadd( 104.915, -209.428, 75.8536, 1.4 ) }
    dend_14 { pt3dadd( 105.198, -210.073, 75.9793, 0.29 ) }
    dend_14 { pt3dadd( 105.699, -211.31, 76.2241, 0.29 ) }
    dend_14 { pt3dadd( 106.077, -212.354, 76.4611, 0.15 ) }
    dend_14 { pt3dadd( 106.173, -212.6, 76.5154, 0.37 ) }
    dend_14 { pt3dadd( 106.34, -212.994, 76.6041, 0.37 ) }
    dend_14 { pt3dadd( 106.804, -214.018, 76.8272, 0.37 ) }
    dend_14 { pt3dadd( 107.244, -214.947, 77.0212, 1.18 ) }
    dend_14 { pt3dadd( 107.48, -215.418, 77.1124, 1.62 ) }
    dend_14 { pt3dadd( 108.413, -217.197, 77.3979, 0.15 ) }
    dend_14 { pt3dadd( 108.672, -217.687, 77.4697, 0.44 ) }
    dend_14 { pt3dadd( 109.159, -218.596, 77.5911, 0.44 ) }
    dend_14 { pt3dadd( 109.619, -219.45, 77.6905, 1.4 ) }
    dend_14 { pt3dadd( 110.122, -220.379, 77.7739, 2.14 ) }
    dend_14 { pt3dadd( 110.84, -221.747, 77.8804, 0.44 ) }
    dend_14 { pt3dadd( 111.116, -222.301, 77.917, 0.44 ) }
    dend_14 { pt3dadd( 111.152, -222.374, 77.9221, 0.44 ) }
    dend_14 { pt3dadd( 111.239, -222.549, 77.9354, 0.44 ) }
    dend_14 { pt3dadd( 111.279, -222.633, 77.9419, 0.44 ) }
    dend_14 { pt3dadd( 111.802, -223.764, 78.0445, 0.15 ) }
    dend_14 { pt3dadd( 111.926, -224.041, 78.0732, 0.29 ) }
    dend_14 { pt3dadd( 112.133, -224.559, 78.1803, 0.44 ) }
    dend_14 { pt3dadd( 112.3, -225.004, 78.2954, 0.81 ) }
    dend_14 { pt3dadd( 112.468, -225.464, 78.4318, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_14 { pt3dadd( 112.627, -225.908, 78.5759, 0.52 ) }
    dend_14 { pt3dadd( 112.737, -226.219, 78.6859, 0.52 ) }
    dend_14 { pt3dadd( 113.309, -227.893, 79.272, 0.29 ) }
    dend_14 { pt3dadd( 113.433, -228.276, 79.4198, 0.37 ) }
    dend_14 { pt3dadd( 113.456, -228.348, 79.4485, 0.37 ) }
    dend_14 { pt3dadd( 113.637, -228.883, 79.6605, 0.59 ) }
    dend_14 { pt3dadd( 113.786, -229.28, 79.7981, 0.81 ) }
    dend_14 { pt3dadd( 113.889, -229.517, 79.8639, 0.66 ) }
    dend_14 { pt3dadd( 114.204, -230.17, 79.9872, 0.37 ) }
    dend_14 { pt3dadd( 114.448, -230.714, 80.0727, 0.37 ) }
    dend_14 { pt3dadd( 114.659, -231.202, 80.138, 0.37 ) }
    dend_14 { pt3dadd( 115.145, -232.346, 80.2713, 1.69 ) }
    dend_14 { pt3dadd( 115.424, -233.021, 80.3363, 1.55 ) }
    dend_14 { pt3dadd( 115.614, -233.49, 80.3715, 1.47 ) }
    dend_14 { pt3dadd( 116.241, -235.052, 80.4191, 0.22 ) }
    dend_14 { pt3dadd( 116.549, -235.777, 80.4322, 0.37 ) }
    dend_14 { pt3dadd( 116.663, -236.017, 80.4338, 0.37 ) }
    dend_14 { pt3dadd( 117.1, -236.807, 80.4331, 0.52 ) }
    dend_14 { pt3dadd( 117.331, -237.164, 80.4343, 0.74 ) }
    dend_14 { pt3dadd( 118.065, -238.129, 80.4377, 0.37 ) }
    dend_14 { pt3dadd( 118.593, -238.725, 80.4445, 0.37 ) }
    dend_14 { pt3dadd( 119.186, -239.366, 80.4789, 0.37 ) }
    dend_14 { pt3dadd( 119.769, -239.984, 80.531, 0.37 ) }
    dend_14 { pt3dadd( 121.093, -241.362, 80.6871, 1.84 ) }
    dend_14 { pt3dadd( 121.645, -241.941, 80.7684, 2.14 ) }
    dend_14 { pt3dadd( 122.591, -242.964, 80.9135, 0.37 ) }
    dend_14 { pt3dadd( 123.328, -243.812, 81.0168, 0.22 ) }
    dend_14 { pt3dadd( 123.497, -244.02, 81.0384, 0.37 ) }
    dend_14 { pt3dadd( 123.83, -244.468, 81.0996, 0.44 ) }
    dend_14 { pt3dadd( 124.197, -244.989, 81.1929, 0.44 ) }
    dend_14 { pt3dadd( 124.685, -245.697, 81.3336, 0.44 ) }
    dend_14 { pt3dadd( 124.739, -245.774, 81.3488, 0.44 ) }
    dend_14 { pt3dadd( 124.932, -246.033, 81.3995, 0.44 ) }
    dend_14 { pt3dadd( 125.877, -247.277, 81.6606, 1.84 ) }
    dend_14 { pt3dadd( 126.438, -247.981, 81.7842, 1.69 ) }
    dend_14 { pt3dadd( 128.061, -249.907, 82.0902, 0.44 ) }
    dend_14 { pt3dadd( 128.665, -250.601, 82.1917, 1.18 ) }
    dend_14 { pt3dadd( 128.987, -250.959, 82.2294, 1.18 ) }
    dend_14 { pt3dadd( 129.043, -251.018, 82.2325, 1.18 ) }
    dend_14 { pt3dadd( 130.563, -252.366, 82.1577, 0.22 ) }
    dend_14 { pt3dadd( 130.875, -252.585, 82.1704, 0.22 ) }
    dend_14 { pt3dadd( 131.359, -252.802, 82.2378, 0.15 ) }
    dend_14 { pt3dadd( 131.67, -252.858, 82.4692, 0.29 ) }
    dend_14 { pt3dadd( 132.165, -252.798, 83.1845, 0.29 ) }
    dend_14 { pt3dadd( 132.94, -252.496, 84.7534, 0.29 ) }
    dend_14 { pt3dadd( 133.616, -251.933, 86.9086, 1.92 ) }
    dend_14 { pt3dadd( 133.778, -251.702, 87.6911, 1.92 ) }
    dend_14 { pt3dadd( 134.219, -250.054, 92.742, 0.15 ) }
    dend_14 { pt3dadd( 134.19, -249.821, 93.4091, 0.81 ) }
    dend_14 { pt3dadd( 134.14, -249.726, 93.6646, 0.81 ) }
    dend_14 { pt3dadd( 133.696, -249.264, 94.8845, 0.15 ) }
    dend_14 { pt3dadd( 133.566, -249.179, 95.1093, 0.37 ) }
    dend_14 { pt3dadd( 132.878, -248.87, 95.9944, 0.37 ) }
    dend_14 { pt3dadd( 132.229, -248.687, 96.5047, 0.37 ) }
    dend_14 { pt3dadd( 131.758, -248.598, 96.8877, 0.37 ) }
    dend_14 { pt3dadd( 131.693, -248.59, 96.9414, 0.37 ) }
    dend_14 { pt3dadd( 130.827, -248.523, 97.6666, 0.37 ) }
    dend_14 { pt3dadd( 129.974, -248.514, 98.3557, 0.29 ) }
    dend_14 { pt3dadd( 129.603, -248.55, 98.6259, 0.29 ) }
    dend_14 { pt3dadd( 129.327, -248.618, 98.8091, 0.29 ) }
    dend_14 { pt3dadd( 129.11, -248.706, 98.9353, 0.29 ) }
    dend_14 { pt3dadd( 129.05, -248.741, 98.9548, 0.29 ) }
    dend_14 { pt3dadd( 128.763, -248.969, 98.9578, 0.29 ) }
    dend_14 { pt3dadd( 128.693, -249.032, 98.9478, 0.29 ) }
    dend_14 { pt3dadd( 128.165, -249.522, 98.8612, 0.22 ) }
    dend_14 { pt3dadd( 127.77, -249.937, 98.7934, 0.22 ) }
    dend_14 { pt3dadd( 127.241, -250.632, 98.697, 0.37 ) }
    dend_14 { pt3dadd( 127.039, -250.948, 98.6573, 0.44 ) }
    dend_14 { pt3dadd( 126.79, -251.448, 98.6049, 0.44 ) }
    dend_14 { pt3dadd( 126.765, -251.525, 98.5887, 0.44 ) }
    dend_14 { pt3dadd( 126.666, -252.426, 98.3146, 0.37 ) }
    dend_14 { pt3dadd( 126.732, -253.125, 98.0802, 0.37 ) }
    dend_14 { pt3dadd( 126.775, -253.305, 98.0143, 0.37 ) }
    dend_14 { pt3dadd( 126.921, -253.833, 97.8305, 0.22 ) }
    dend_14 { pt3dadd( 127.378, -255.337, 97.3116, 0.29 ) }
    dend_14 { pt3dadd( 127.458, -255.644, 97.2085, 0.44 ) }
    dend_14 { pt3dadd( 127.666, -256.539, 96.9068, 0.66 ) }
    dend_14 { pt3dadd( 127.828, -257.589, 96.599, 0.81 ) }
    dend_14 { pt3dadd( 127.825, -258.611, 96.3828, 0.52 ) }
    dend_14 { pt3dadd( 127.805, -258.69, 96.3763, 0.52 ) }
    dend_14 { pt3dadd( 127.374, -259.437, 96.3474, 0.37 ) }
    dend_14 { pt3dadd( 127.316, -259.512, 96.3413, 0.37 ) }
    dend_14 { pt3dadd( 126.823, -260.06, 96.2811, 0.15 ) }
    dend_14 { pt3dadd( 125.95, -260.913, 96.1907, 1.84 ) }
    dend_14 { pt3dadd( 125.098, -261.697, 96.1154, 2.21 ) }
    dend_14 { pt3dadd( 123.614, -263.056, 95.9776, 0.52 ) }
    dend_14 { pt3dadd( 122.61, -263.977, 95.8768, 1.62 ) }
    dend_14 { pt3dadd( 122.065, -264.48, 95.8153, 2.28 ) }
    dend_14 { pt3dadd( 120.743, -265.727, 95.6326, 1.18 ) }
    dend_14 { pt3dadd( 120.211, -266.243, 95.5546, 1.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 90/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.68525, -33.2075, 27.6134, 0.96 ) }
    dend_11 { pt3dadd( -5.21066, -35.1187, 26.8731, 0.96 ) }
    dend_11 { pt3dadd( -5.48774, -36.1699, 26.4022, 1.25 ) }
    dend_11 { pt3dadd( -5.8461, -37.5304, 25.7373, 1.25 ) }
    dend_11 { pt3dadd( -6.19776, -38.8623, 25.0679, 1.25 ) }
    dend_11 { pt3dadd( -6.51417, -40.1421, 24.4003, 1.55 ) }
    dend_11 { pt3dadd( -6.76677, -41.2135, 23.8626, 1.47 ) }
    dend_11 { pt3dadd( -6.95079, -42.2994, 23.3013, 1.18 ) }
    dend_11 { pt3dadd( -7.13736, -43.4869, 22.8047, 1.18 ) }
    dend_11 { pt3dadd( -7.21104, -44.0401, 22.6643, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_11 { pt3dadd( -7.32914, -45.1992, 22.7472, 1.03 ) }
    dend_11 { pt3dadd( -7.37633, -46.3762, 23.1975, 1.11 ) }
    dend_11 { pt3dadd( -7.37924, -47.1111, 23.686, 1.11 ) }
    dend_11 { pt3dadd( -7.29904, -48.791, 25.0482, 1.92 ) }
    dend_11 { pt3dadd( -7.20099, -49.8345, 25.95, 1.92 ) }
    dend_11 { pt3dadd( -6.90432, -52.1284, 27.857, 1.99 ) }
    dend_11 { pt3dadd( -6.74391, -53.1413, 28.6625, 0.81 ) }
    dend_11 { pt3dadd( -6.38724, -55.0585, 30.0154, 1.25 ) }
    dend_11 { pt3dadd( -6.15978, -56.2719, 30.7091, 1.55 ) }
    dend_11 { pt3dadd( -5.87288, -57.7891, 31.2739, 1.69 ) }
    dend_11 { pt3dadd( -5.62199, -59.3033, 31.5704, 1.25 ) }
    dend_11 { pt3dadd( -5.4922, -60.2328, 31.5628, 0.96 ) }
    dend_11 { pt3dadd( -5.4069, -61.0946, 31.4533, 1.11 ) }
    dend_11 { pt3dadd( -5.31042, -62.2287, 31.1912, 1.18 ) }
    dend_11 { pt3dadd( -5.25967, -63.2672, 30.937, 1.03 ) }
    dend_11 { pt3dadd( -5.22898, -64.2668, 30.7031, 0.88 ) }
    dend_11 { pt3dadd( -5.19018, -65.2478, 30.5391, 0.96 ) }
    dend_11 { pt3dadd( -5.11518, -66.5062, 30.4164, 1.4 ) }
    dend_11 { pt3dadd( -4.99669, -68.0004, 30.4542, 1.4 ) }
    dend_11 { pt3dadd( -4.86913, -69.2179, 30.6059, 1.55 ) }
    dend_11 { pt3dadd( -4.80428, -70.0696, 30.815, 1.47 ) }
    dend_11 { pt3dadd( -4.78336, -71.6358, 31.3193, 1.92 ) }
    dend_11 { pt3dadd( -4.85965, -72.7453, 31.7086, 1.92 ) }
    dend_11 { pt3dadd( -5.18659, -74.5786, 32.4051, 2.06 ) }
    dend_11 { pt3dadd( -5.34345, -75.1578, 32.6305, 1.84 ) }
    dend_11 { pt3dadd( -6.1362, -77.1264, 33.4239, 1.25 ) }
    dend_11 { pt3dadd( -6.829, -78.4343, 33.919, 1.25 ) }
    dend_11 { pt3dadd( -7.67525, -79.7132, 34.3213, 1.25 ) }
    dend_11 { pt3dadd( -8.50098, -80.8533, 34.6247, 1.33 ) }
    dend_11 { pt3dadd( -8.54676, -80.9147, 34.6399, 1.33 ) }
    dend_11 { pt3dadd( -9.76827, -82.6774, 35.0967, 1.33 ) }
    dend_11 { pt3dadd( -10.4832, -83.8453, 35.4528, 1.47 ) }
    dend_11 { pt3dadd( -11.1842, -85.2738, 36.0069, 1.25 ) }
    dend_11 { pt3dadd( -11.7227, -86.7594, 36.7993, 1.4 ) }
    dend_11 { pt3dadd( -12.0017, -87.8725, 37.489, 1.33 ) }
    dend_11 { pt3dadd( -12.1483, -88.979, 38.2593, 1.18 ) }
    dend_11 { pt3dadd( -12.1142, -90.0998, 39.1855, 1.55 ) }
    dend_11 { pt3dadd( -11.9917, -90.9811, 40.1111, 2.06 ) }
    dend_11 { pt3dadd( -11.5583, -92.5112, 42.0542, 1.47 ) }
    dend_11 { pt3dadd( -11.5361, -92.5634, 42.1343, 1.47 ) }
    dend_11 { pt3dadd( -11.2661, -93.0668, 43.081, 1.18 ) }
    dend_11 { pt3dadd( -10.8286, -93.7473, 44.5325, 0.81 ) }
    dend_11 { pt3dadd( -10.2618, -94.4869, 46.1462, 1.11 ) }
    dend_11 { pt3dadd( -9.91378, -94.9038, 47.0774, 1.11 ) }
    dend_11 { pt3dadd( -9.35776, -95.4631, 48.2867, 1.25 ) }
    dend_11 { pt3dadd( -8.54411, -96.2233, 49.8623, 1.18 ) }
    dend_11 { pt3dadd( -8.02482, -96.679, 50.7455, 1.03 ) }
    dend_11 { pt3dadd( -7.55513, -97.0732, 51.3529, 0.96 ) }
    dend_11 { pt3dadd( -7.51635, -97.1068, 51.3928, 0.96 ) }
    dend_11 { pt3dadd( -6.85665, -97.7316, 51.8907, 1.25 ) }
    dend_11 { pt3dadd( -6.22017, -98.3817, 52.2927, 0.96 ) }
    dend_11 { pt3dadd( -5.61588, -99.0924, 52.7793, 0.96 ) }
    dend_11 { pt3dadd( -4.9723, -99.9688, 53.4729, 0.81 ) }
    dend_11 { pt3dadd( -4.94719, -100.013, 53.5129, 0.81 ) }
    dend_11 { pt3dadd( -4.29558, -101.415, 54.8166, 0.59 ) }
    dend_11 { pt3dadd( -3.76647, -102.821, 56.1449, 1.18 ) }
    dend_11 { pt3dadd( -3.0768, -104.79, 57.9263, 1.99 ) }
    dend_11 { pt3dadd( -2.78314, -105.603, 58.6167, 1.47 ) }
    dend_11 { pt3dadd( -2.15574, -107.326, 60.0203, 0.66 ) }
    dend_11 { pt3dadd( -1.75383, -108.354, 60.7843, 0.66 ) }
    dend_11 { pt3dadd( -1.40565, -109.14, 61.2626, 0.66 ) }
    dend_11 { pt3dadd( -0.68132, -110.382, 61.6884, 0.96 ) }
    dend_11 { pt3dadd( 0.0341006, -111.352, 61.8397, 1.47 ) }
    dend_11 { pt3dadd( 0.0840732, -111.412, 61.8444, 1.47 ) }
    dend_11 { pt3dadd( 0.940869, -112.348, 61.8886, 1.69 ) }
    dend_11 { pt3dadd( 1.90564, -113.526, 62.0839, 1.18 ) }
    dend_11 { pt3dadd( 2.55261, -114.547, 62.4273, 0.74 ) }
    dend_11 { pt3dadd( 3.02662, -115.566, 62.9393, 0.37 ) }
    dend_11 { pt3dadd( 3.04877, -115.638, 62.9799, 0.37 ) }
    dend_11 { pt3dadd( 3.26731, -116.946, 63.7802, 0.37 ) }
    dend_11 { pt3dadd( 3.3234, -118.573, 64.824, 2.14 ) }
    dend_11 { pt3dadd( 3.26964, -119.919, 65.7073, 1.4 ) }
    dend_11 { pt3dadd( 3.26564, -119.992, 65.7532, 1.4 ) }
    dend_11 { pt3dadd( 3.24372, -121.057, 66.3846, 0.96 ) }
    dend_11 { pt3dadd( 3.30031, -122.332, 67.0903, 0.81 ) }
    dend_11 { pt3dadd( 3.43355, -123.185, 67.5431, 1.33 ) }
    dend_11 { pt3dadd( 3.84612, -124.53, 68.2893, 0.96 ) }
    dend_11 { pt3dadd( 4.22703, -125.406, 68.8071, 0.88 ) }
    dend_11 { pt3dadd( 4.62432, -126.097, 69.2698, 1.03 ) }
    dend_11 { pt3dadd( 4.67791, -126.169, 69.3288, 1.03 ) }
    dend_11 { pt3dadd( 5.41507, -127.018, 70.0804, 1.03 ) }
    dend_11 { pt3dadd( 6.00825, -127.645, 70.6905, 1.03 ) }
    dend_11 { pt3dadd( 6.05213, -127.689, 70.7353, 1.03 ) }
    dend_11 { pt3dadd( 6.63453, -128.278, 71.3529, 1.47 ) }
    dend_11 { pt3dadd( 7.88017, -129.652, 72.7574, 2.58 ) }
    dend_11 { pt3dadd( 8.23395, -130.075, 73.1639, 2.58 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 86/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -17.592, -36.4763, 68.6734, 0.74 ) }
    dend_9 { pt3dadd( -18.2585, -36.5525, 72.469, 0.74 ) }
    dend_9 { pt3dadd( -18.4523, -36.5856, 73.429, 0.37 ) }
    dend_9 { pt3dadd( -18.9397, -36.6767, 75.5043, 0.81 ) }
    dend_9 { pt3dadd( -19.8013, -36.7864, 78.5585, 0.74 ) }
    dend_9 { pt3dadd( -20.6715, -36.8733, 81.366, 0.74 ) }
    dend_9 { pt3dadd( -21.1341, -36.9054, 82.7354, 0.52 ) }
    dend_9 { pt3dadd( -21.5844, -36.9128, 83.7602, 0.52 ) }
    dend_9 { pt3dadd( -22.4012, -36.8574, 85.3094, 0.66 ) }
    dend_9 { pt3dadd( -23.2586, -36.7962, 86.4777, 0.59 ) }
    dend_9 { pt3dadd( -23.3181, -36.7959, 86.5264, 0.59 ) }
    dend_9 { pt3dadd( -23.872, -36.8267, 86.7688, 0.59 ) }
    dend_9 { pt3dadd( -25.0738, -36.9912, 87.0908, 0.37 ) }
    dend_9 { pt3dadd( -25.7622, -37.1705, 87.196, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_9 { pt3dadd( -26.6563, -37.5457, 87.2506, 0.37 ) }
    dend_9 { pt3dadd( -27.7874, -38.1615, 87.3127, 0.22 ) }
    dend_9 { pt3dadd( -28.6668, -38.6768, 87.3661, 0.22 ) }
    dend_9 { pt3dadd( -29.5822, -39.3057, 87.4767, 0.22 ) }
    dend_9 { pt3dadd( -29.9418, -39.6121, 87.5348, 0.22 ) }
    dend_9 { pt3dadd( -30.3315, -39.9712, 87.6153, 0.22 ) }
    dend_9 { pt3dadd( -30.9607, -40.5639, 87.7908, 0.22 ) }
    dend_9 { pt3dadd( -31.3242, -40.8779, 87.9309, 0.44 ) }
    dend_9 { pt3dadd( -32.1935, -41.6175, 88.3335, 0.15 ) }
    dend_9 { pt3dadd( -32.9296, -42.1413, 88.678, 0.37 ) }
    dend_9 { pt3dadd( -39.8395, -44.1142, 99.2947, 0.37 ) }
    dend_9 { pt3dadd( -46.2983, -46.8278, 110.016, 0.37 ) }
    dend_9 { pt3dadd( -53.3366, -48.1216, 120.66, 0.37 ) }
    dend_9 { pt3dadd( -60.8634, -49.6661, 130.93, 0.37 ) }
    dend_9 { pt3dadd( -70.6373, -51.0818, 139.118, 0.37 ) }
    dend_9 { pt3dadd( -79.7561, -51.5159, 148.13, 0.37 ) }
    dend_9 { pt3dadd( -88.7115, -53.4735, 157.099, 0.37 ) }
    dend_9 { pt3dadd( -96.289, -55.9026, 167.145, 0.37 ) }
    dend_9 { pt3dadd( -102.184, -57.1894, 178.462, 0.37 ) }
    dend_9 { pt3dadd( -107.9, -60.7092, 189.344, 0.37 ) }
    dend_9 { pt3dadd( -112.795, -66.7045, 199.401, 0.37 ) }
    dend_9 { pt3dadd( -117.308, -72.0277, 210.032, 0.37 ) }
    dend_9 { pt3dadd( -120.394, -78.4921, 220.458, 0.37 ) }
    dend_9 { pt3dadd( -120.674, -85.4418, 230.957, 0.37 ) }
    dend_9 { pt3dadd( -122.281, -91.6798, 241.841, 0.37 ) }
    dend_9 { pt3dadd( -122.704, -97.9534, 252.8, 0.37 ) }
    dend_9 { pt3dadd( -123.905, -102.444, 264.647, 0.37 ) }
    dend_9 { pt3dadd( -123.212, -107.215, 276.396, 0.37 ) }
    dend_9 { pt3dadd( -123.89, -109.872, 288.882, 0.37 ) }
    dend_9 { pt3dadd( -124.675, -112.639, 301.336, 0.37 ) }
    dend_9 { pt3dadd( -123.589, -115.173, 313.814, 0.37 ) }
    dend_9 { pt3dadd( -122.153, -119.185, 325.807, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -17.592, -36.4763, 68.6734, 1.33 ) }
    dend_8 { pt3dadd( -17.257, -35.7234, 68.8352, 1.33 ) }
    dend_8 { pt3dadd( -16.8946, -34.9087, 69.0102, 0.15 ) }
    dend_8 { pt3dadd( -16.6857, -34.4393, 69.1111, 0.44 ) }
    dend_8 { pt3dadd( -12.2563, -27.8026, 71.194, 0.44 ) }
    dend_8 { pt3dadd( -7.38115, -21.1876, 71.8946, 0.44 ) }
    dend_8 { pt3dadd( -3.12556, -14.1911, 71.3572, 0.44 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 39/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 83.5739, 102.954, 84.0232, 0.22 ) }
    dend_31 { pt3dadd( 83.2439, 105.278, 86.0334, 0.22 ) }
    dend_31 { pt3dadd( 83.2139, 106.148, 86.8044, 0.22 ) }
    dend_31 { pt3dadd( 83.2233, 106.355, 86.9912, 0.37 ) }
    dend_31 { pt3dadd( 83.2371, 106.659, 87.2662, 0.37 ) }
    dend_31 { pt3dadd( 83.3043, 108.139, 88.6046, 0.22 ) }
    dend_31 { pt3dadd( 83.3156, 108.386, 88.8281, 0.74 ) }
    dend_31 { pt3dadd( 83.5248, 108.687, 89.0766, 1.11 ) }
    dend_31 { pt3dadd( 83.59, 108.744, 89.1389, 1.11 ) }
    dend_31 { pt3dadd( 85.2221, 117.078, 97.4763, 1.11 ) }
    dend_31 { pt3dadd( 85.6615, 126.53, 104.618, 1.11 ) }
    dend_31 { pt3dadd( 85.0943, 135.597, 112.323, 1.11 ) }
    dend_31 { pt3dadd( 82.5637, 144.916, 119.36, 1.11 ) }
    dend_31 { pt3dadd( 78.1895, 152.69, 127.496, 1.11 ) }
    dend_31 { pt3dadd( 74.6532, 159.577, 136.791, 1.11 ) }
    dend_31 { pt3dadd( 72.3255, 165.978, 146.788, 1.11 ) }
    dend_31 { pt3dadd( 68.5897, 171.736, 156.802, 1.11 ) }
    dend_31 { pt3dadd( 67.0142, 178.224, 166.869, 1.11 ) }
    dend_31 { pt3dadd( 65.8295, 183.728, 177.595, 1.11 ) }
    dend_31 { pt3dadd( 65.1605, 189.833, 187.998, 1.11 ) }
    dend_31 { pt3dadd( 64.0662, 197.694, 197.0, 1.11 ) }
    dend_31 { pt3dadd( 65.1408, 204.884, 206.533, 1.11 ) }
    dend_31 { pt3dadd( 66.5887, 213.311, 214.808, 1.11 ) }
    dend_31 { pt3dadd( 69.2955, 222.166, 222.171, 1.11 ) }
    dend_31 { pt3dadd( 74.4766, 231.356, 227.26, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 64/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 83.5739, 102.954, 84.0232, 0.22 ) }
    dend_30 { pt3dadd( 83.9635, 102.261, 83.1776, 0.22 ) }
    dend_30 { pt3dadd( 84.026, 102.149, 83.0421, 0.37 ) }
    dend_30 { pt3dadd( 84.4542, 101.387, 82.113, 0.22 ) }
    dend_30 { pt3dadd( 84.7748, 100.817, 81.4172, 0.88 ) }
    dend_30 { pt3dadd( 89.2021, 93.5674, 73.6166, 0.88 ) }
    dend_30 { pt3dadd( 92.4143, 86.6252, 64.9898, 0.88 ) }
    dend_30 { pt3dadd( 94.0786, 78.9281, 56.6674, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 72/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 120.211, -266.243, 95.5546, 0.15 ) }
    dend_16 { pt3dadd( 119.662, -268.337, 93.0999, 0.15 ) }
    dend_16 { pt3dadd( 119.573, -268.68, 92.6982, 0.59 ) }
    dend_16 { pt3dadd( 119.471, -269.069, 92.2425, 0.29 ) }
    dend_16 { pt3dadd( 119.438, -269.193, 92.0961, 0.29 ) }
    dend_16 { pt3dadd( 119.289, -269.76, 91.4318, 0.81 ) }
    dend_16 { pt3dadd( 119.154, -270.276, 90.8272, 1.11 ) }
    dend_16 { pt3dadd( 116.12, -277.562, 82.0715, 1.11 ) }
    dend_16 { pt3dadd( 112.534, -284.017, 72.8235, 1.11 ) }
    dend_16 { pt3dadd( 109.547, -289.258, 62.5795, 1.11 ) }
    dend_16 { pt3dadd( 107.351, -295.693, 52.8922, 1.11 ) }
    dend_16 { pt3dadd( 103.511, -300.503, 42.7037, 1.11 ) }
    dend_16 { pt3dadd( 99.7766, -306.067, 32.8989, 1.11 ) }
    dend_16 { pt3dadd( 94.4488, -311.965, 24.0956, 1.11 ) }
    dend_16 { pt3dadd( 89.673, -318.847, 15.769, 1.11 ) }
    dend_16 { pt3dadd( 84.5915, -326.638, 8.58548, 1.11 ) }
    dend_16 { pt3dadd( 80.4991, -335.104, 1.6144, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 89/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 120.211, -266.243, 95.5546, 0.37 ) }
    dend_15 { pt3dadd( 119.672, -265.822, 95.6925, 0.37 ) }
    dend_15 { pt3dadd( 119.108, -265.38, 95.8369, 0.44 ) }
    dend_15 { pt3dadd( 118.612, -264.992, 95.9638, 0.44 ) }
    dend_15 { pt3dadd( 117.825, -264.376, 96.1653, 1.55 ) }
    dend_15 { pt3dadd( 116.922, -263.669, 96.3963, 0.52 ) }
    dend_15 { pt3dadd( 109.252, -256.412, 99.7903, 0.52 ) }
    dend_15 { pt3dadd( 101.175, -250.25, 104.425, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 97/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.23395, -130.075, 73.1639, 0.81 ) }
    dend_13 { pt3dadd( 6.85299, -131.66, 76.5903, 0.81 ) }
    dend_13 { pt3dadd( 5.26472, -133.804, 81.0646, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_13 { pt3dadd( 5.00412, -134.219, 81.8854, 0.52 ) }
    dend_13 { pt3dadd( 4.35973, -135.434, 84.1449, 0.22 ) }
    dend_13 { pt3dadd( 4.23323, -135.719, 84.6439, 0.96 ) }
    dend_13 { pt3dadd( 4.0391, -136.255, 85.5382, 0.74 ) }
    dend_13 { pt3dadd( 4.00956, -136.808, 86.3249, 1.33 ) }
    dend_13 { pt3dadd( 4.15597, -137.352, 86.9402, 1.47 ) }
    dend_13 { pt3dadd( 4.44635, -138.119, 87.7645, 1.11 ) }
    dend_13 { pt3dadd( 4.64384, -138.573, 88.2057, 0.81 ) }
    dend_13 { pt3dadd( 4.93813, -139.291, 88.8963, 0.37 ) }
    dend_13 { pt3dadd( 5.11552, -139.808, 89.3979, 0.37 ) }
    dend_13 { pt3dadd( 5.24606, -140.358, 89.9768, 0.81 ) }
    dend_13 { pt3dadd( 5.38052, -141.094, 90.775, 0.96 ) }
    dend_13 { pt3dadd( 5.47996, -141.84, 91.5644, 1.18 ) }
    dend_13 { pt3dadd( 5.49931, -142.199, 91.9391, 0.74 ) }
    dend_13 { pt3dadd( 5.5053, -143.377, 93.0782, 0.37 ) }
    dend_13 { pt3dadd( 5.42547, -144.452, 94.2055, 0.22 ) }
    dend_13 { pt3dadd( 5.37627, -144.95, 94.7756, 1.03 ) }
    dend_13 { pt3dadd( 5.35366, -145.325, 95.2525, 0.81 ) }
    dend_13 { pt3dadd( 5.38231, -146.16, 96.4027, 0.59 ) }
    dend_13 { pt3dadd( 5.44624, -146.621, 97.0761, 0.88 ) }
    dend_13 { pt3dadd( 5.87004, -148.45, 99.8786, 0.15 ) }
    dend_13 { pt3dadd( 5.96979, -148.778, 100.407, 1.03 ) }
    dend_13 { pt3dadd( 6.1954, -149.474, 101.658, 0.37 ) }
    dend_13 { pt3dadd( 6.37973, -149.946, 102.608, 0.29 ) }
    dend_13 { pt3dadd( 6.49715, -150.152, 103.082, 0.29 ) }
    dend_13 { pt3dadd( 6.3144, -154.704, 112.36, 0.29 ) }
    dend_13 { pt3dadd( 7.04176, -158.547, 121.941, 0.29 ) }
    dend_13 { pt3dadd( 8.64889, -162.169, 131.489, 0.29 ) }
    dend_13 { pt3dadd( 7.76555, -165.803, 141.185, 0.29 ) }
    dend_13 { pt3dadd( 5.43607, -169.999, 150.413, 0.29 ) }
    dend_13 { pt3dadd( 2.45492, -174.238, 159.446, 0.29 ) }
    dend_13 { pt3dadd( 0.813903, -179.105, 168.441, 0.29 ) }
    dend_13 { pt3dadd( -2.64692, -182.886, 177.533, 0.29 ) }
    dend_13 { pt3dadd( -5.5458, -185.028, 187.364, 0.29 ) }
    dend_13 { pt3dadd( -8.68212, -185.551, 197.367, 0.29 ) }
    dend_13 { pt3dadd( -11.775, -183.977, 207.273, 0.29 ) }
    dend_13 { pt3dadd( -13.5168, -181.092, 217.207, 0.29 ) }
    dend_13 { pt3dadd( -17.255, -178.185, 226.543, 0.29 ) }
    dend_13 { pt3dadd( -20.2388, -176.049, 236.371, 0.29 ) }
    dend_13 { pt3dadd( -24.3462, -173.456, 245.649, 0.29 ) }
    dend_13 { pt3dadd( -28.8628, -172.892, 255.109, 0.29 ) }
    dend_13 { pt3dadd( -33.1352, -172.282, 264.68, 0.29 ) }
    dend_13 { pt3dadd( -38.2597, -172.022, 273.838, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 43/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 8.23395, -130.075, 73.1639, 0.74 ) }
    dend_12 { pt3dadd( 8.89589, -130.626, 73.4697, 0.74 ) }
    dend_12 { pt3dadd( 9.62029, -131.316, 73.7962, 0.59 ) }
    dend_12 { pt3dadd( 10.2642, -132.019, 74.0794, 0.59 ) }
    dend_12 { pt3dadd( 10.8305, -132.749, 74.3493, 0.44 ) }
    dend_12 { pt3dadd( 11.3623, -133.505, 74.6161, 0.44 ) }
    dend_12 { pt3dadd( 11.8408, -134.221, 74.8639, 0.88 ) }
    dend_12 { pt3dadd( 12.0978, -134.641, 75.0002, 0.88 ) }
    dend_12 { pt3dadd( 12.4807, -135.225, 75.1634, 0.52 ) }
    dend_12 { pt3dadd( 13.0089, -135.928, 75.3507, 0.52 ) }
    dend_12 { pt3dadd( 13.3461, -136.295, 75.4564, 0.29 ) }
    dend_12 { pt3dadd( 13.4046, -136.343, 75.4738, 0.29 ) }
    dend_12 { pt3dadd( 14.6891, -137.171, 75.8413, 2.28 ) }
    dend_12 { pt3dadd( 16.1793, -138.006, 76.2569, 0.29 ) }
    dend_12 { pt3dadd( 16.6998, -138.258, 76.3825, 0.29 ) }
    dend_12 { pt3dadd( 17.0975, -138.442, 76.4633, 0.29 ) }
    dend_12 { pt3dadd( 17.7754, -138.775, 76.5916, 0.22 ) }
    dend_12 { pt3dadd( 18.1401, -138.981, 76.6576, 0.22 ) }
    dend_12 { pt3dadd( 18.6976, -139.387, 76.7638, 0.22 ) }
    dend_12 { pt3dadd( 19.2298, -139.891, 76.9029, 0.59 ) }
    dend_12 { pt3dadd( 19.7337, -140.458, 77.0093, 0.59 ) }
    dend_12 { pt3dadd( 19.8837, -140.672, 77.0339, 0.29 ) }
    dend_12 { pt3dadd( 20.1648, -141.149, 77.0744, 0.29 ) }
    dend_12 { pt3dadd( 20.8259, -142.478, 77.1992, 2.36 ) }
    dend_12 { pt3dadd( 21.2967, -143.529, 77.286, 1.84 ) }
    dend_12 { pt3dadd( 21.6912, -144.508, 77.3641, 0.66 ) }
    dend_12 { pt3dadd( 22.2261, -145.88, 77.4671, 0.44 ) }
    dend_12 { pt3dadd( 22.6896, -147.081, 77.557, 0.44 ) }
    dend_12 { pt3dadd( 23.386, -148.872, 77.6992, 3.17 ) }
    dend_12 { pt3dadd( 23.678, -149.624, 77.7567, 2.8 ) }
    dend_12 { pt3dadd( 24.2271, -151.007, 77.8738, 1.11 ) }
    dend_12 { pt3dadd( 24.5532, -151.844, 77.961, 0.44 ) }
    dend_12 { pt3dadd( 24.7677, -152.436, 78.0372, 0.44 ) }
    dend_12 { pt3dadd( 24.9751, -153.096, 78.1324, 0.44 ) }
    dend_12 { pt3dadd( 25.2086, -153.988, 78.3232, 0.59 ) }
    dend_12 { pt3dadd( 25.3859, -154.704, 78.537, 0.59 ) }
    dend_12 { pt3dadd( 25.7119, -155.945, 78.9873, 2.5 ) }
    dend_12 { pt3dadd( 26.0925, -157.203, 79.4823, 2.8 ) }
    dend_12 { pt3dadd( 26.534, -158.468, 80.0078, 1.03 ) }
    dend_12 { pt3dadd( 27.0023, -159.555, 80.4793, 0.81 ) }
    dend_12 { pt3dadd( 27.6785, -160.784, 81.0515, 0.44 ) }
    dend_12 { pt3dadd( 28.098, -161.411, 81.3553, 0.44 ) }
    dend_12 { pt3dadd( 28.6711, -162.132, 81.6964, 1.4 ) }
    dend_12 { pt3dadd( 29.0061, -162.526, 81.8555, 0.96 ) }
    dend_12 { pt3dadd( 29.6632, -163.359, 82.1163, 0.29 ) }
    dend_12 { pt3dadd( 30.092, -163.979, 82.2405, 0.29 ) }
    dend_12 { pt3dadd( 30.3678, -164.51, 82.3399, 1.18 ) }
    dend_12 { pt3dadd( 30.6485, -165.188, 82.4779, 1.03 ) }
    dend_12 { pt3dadd( 30.92, -165.944, 82.6605, 0.74 ) }
    dend_12 { pt3dadd( 31.0918, -166.462, 82.7959, 0.74 ) }
    dend_12 { pt3dadd( 31.3552, -167.281, 83.0248, 1.11 ) }
    dend_12 { pt3dadd( 31.5883, -167.957, 83.2351, 1.25 ) }
    dend_12 { pt3dadd( 31.8697, -168.782, 83.4946, 0.74 ) }
    dend_12 { pt3dadd( 32.0415, -169.33, 83.6732, 0.59 ) }
    dend_12 { pt3dadd( 32.0802, -169.458, 83.7139, 0.59 ) }
    dend_12 { pt3dadd( 32.277, -170.194, 83.9126, 0.59 ) }
    dend_12 { pt3dadd( 32.4975, -171.257, 84.1878, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_12 { pt3dadd( 32.6622, -172.024, 84.3579, 0.52 ) }
    dend_12 { pt3dadd( 32.7379, -172.493, 84.4637, 0.52 ) }
    dend_12 { pt3dadd( 32.8617, -173.432, 84.6719, 1.18 ) }
    dend_12 { pt3dadd( 32.9671, -174.246, 84.8574, 1.33 ) }
    dend_12 { pt3dadd( 33.1457, -175.595, 85.1642, 0.66 ) }
    dend_12 { pt3dadd( 33.4259, -177.123, 85.5391, 0.22 ) }
    dend_12 { pt3dadd( 33.5688, -177.777, 85.7178, 0.22 ) }
    dend_12 { pt3dadd( 33.6443, -178.11, 85.8125, 0.22 ) }
    dend_12 { pt3dadd( 33.7787, -178.708, 85.9856, 1.18 ) }
    dend_12 { pt3dadd( 33.9271, -179.343, 86.1795, 1.55 ) }
    dend_12 { pt3dadd( 34.3546, -180.954, 86.6672, 0.29 ) }
    dend_12 { pt3dadd( 34.4952, -181.444, 86.8293, 0.52 ) }
    dend_12 { pt3dadd( 34.6584, -181.924, 86.9897, 0.52 ) }
    dend_12 { pt3dadd( 34.6873, -182.0, 87.0126, 0.52 ) }
    dend_12 { pt3dadd( 35.1143, -183.056, 87.2927, 0.37 ) }
    dend_12 { pt3dadd( 35.509, -183.984, 87.5016, 0.44 ) }
    dend_12 { pt3dadd( 35.7211, -184.472, 87.575, 0.81 ) }
    dend_12 { pt3dadd( 35.9207, -184.921, 87.6269, 0.88 ) }
    dend_12 { pt3dadd( 36.347, -185.881, 87.705, 0.22 ) }
    dend_12 { pt3dadd( 36.439, -186.08, 87.7163, 0.22 ) }
    dend_12 { pt3dadd( 36.58, -186.35, 87.727, 0.29 ) }
    dend_12 { pt3dadd( 36.7961, -186.747, 87.7677, 0.29 ) }
    dend_12 { pt3dadd( 37.042, -187.176, 87.8451, 1.11 ) }
    dend_12 { pt3dadd( 37.3595, -187.696, 87.9769, 1.03 ) }
    dend_12 { pt3dadd( 37.8003, -188.378, 88.2004, 0.29 ) }
    dend_12 { pt3dadd( 38.1881, -188.95, 88.3848, 0.59 ) }
    dend_12 { pt3dadd( 38.528, -189.439, 88.5381, 0.74 ) }
    dend_12 { pt3dadd( 38.9155, -189.984, 88.6906, 0.81 ) }
    dend_12 { pt3dadd( 39.2016, -190.38, 88.766, 1.18 ) }
    dend_12 { pt3dadd( 39.4797, -190.796, 88.8017, 1.18 ) }
    dend_12 { pt3dadd( 40.1385, -191.903, 88.7533, 0.29 ) }
    dend_12 { pt3dadd( 40.3652, -192.33, 88.698, 0.96 ) }
    dend_12 { pt3dadd( 40.6569, -192.932, 88.5907, 1.47 ) }
    dend_12 { pt3dadd( 41.0074, -193.738, 88.4307, 1.18 ) }
    dend_12 { pt3dadd( 41.4243, -194.809, 88.1969, 0.37 ) }
    dend_12 { pt3dadd( 41.7457, -195.716, 87.983, 0.37 ) }
    dend_12 { pt3dadd( 41.9503, -196.352, 87.8284, 1.33 ) }
    dend_12 { pt3dadd( 42.1316, -196.968, 87.693, 1.4 ) }
    dend_12 { pt3dadd( 42.3259, -197.697, 87.5578, 1.18 ) }
    dend_12 { pt3dadd( 42.4644, -198.24, 87.4775, 0.81 ) }
    dend_12 { pt3dadd( 42.7561, -199.298, 87.3274, 0.22 ) }
    dend_12 { pt3dadd( 42.8508, -199.64, 87.2827, 0.29 ) }
    dend_12 { pt3dadd( 42.9793, -200.112, 87.207, 0.44 ) }
    dend_12 { pt3dadd( 42.9941, -200.165, 87.1962, 0.44 ) }
    dend_12 { pt3dadd( 43.1436, -200.632, 87.0826, 0.44 ) }
    dend_12 { pt3dadd( 43.3542, -201.224, 86.952, 1.25 ) }
    dend_12 { pt3dadd( 43.625, -201.768, 86.8235, 1.03 ) }
    dend_12 { pt3dadd( 43.6918, -201.878, 86.7992, 1.03 ) }
    dend_12 { pt3dadd( 44.2478, -202.588, 86.6322, 0.29 ) }
    dend_12 { pt3dadd( 44.8443, -203.262, 86.4821, 1.62 ) }
    dend_12 { pt3dadd( 45.477, -203.894, 86.3579, 0.96 ) }
    dend_12 { pt3dadd( 46.7161, -204.973, 86.1862, 0.22 ) }
    dend_12 { pt3dadd( 47.2666, -205.429, 86.1141, 0.74 ) }
    dend_12 { pt3dadd( 50.0877, -207.672, 85.7834, 0.15 ) }
    dend_12 { pt3dadd( 50.4664, -207.953, 85.7486, 0.29 ) }
    dend_12 { pt3dadd( 51.0753, -208.381, 85.7001, 0.44 ) }
    dend_12 { pt3dadd( 51.8692, -208.9, 85.6393, 1.11 ) }
    dend_12 { pt3dadd( 56.3732, -216.688, 88.0768, 1.11 ) }
    dend_12 { pt3dadd( 60.5272, -224.943, 89.2138, 1.11 ) }
    dend_12 { pt3dadd( 64.6935, -232.888, 91.7321, 1.11 ) }
    dend_12 { pt3dadd( 68.491, -240.37, 95.8638, 1.11 ) }
    dend_12 { pt3dadd( 72.8767, -248.036, 98.8665, 1.11 ) }
    dend_12 { pt3dadd( 76.9908, -254.905, 103.762, 1.11 ) }
    dend_12 { pt3dadd( 82.4559, -261.648, 107.274, 1.11 ) }
    dend_12 { pt3dadd( 87.2174, -269.481, 108.947, 1.11 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_23, dend_22, dend_17, dend_4, dend_1, dend_0, dend_32, dend_25, dend_19, dend_18, dend_6, dend_5, dend_3, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_20, dend_10, dend_7, dend_35, dend_34, dend_29, dend_28, dend_14, dend_11, dend_9, dend_8, dend_31, dend_30, dend_16, dend_15, dend_13, dend_12]}
    ModelViewParmSubset_2 = new SectionList()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_23, dend_22, dend_17, dend_4, dend_1, dend_0, dend_32, dend_25, dend_19, dend_18, dend_6, dend_5, dend_3, dend_2, dend_36, dend_33, dend_27, dend_26, dend_21, dend_20, dend_10, dend_7, dend_35, dend_34, dend_29, dend_28, dend_14, dend_11, dend_9, dend_8, dend_31, dend_30, dend_16, dend_15, dend_13, dend_12]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_32 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_18 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_5 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_33 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_27 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_26 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_20 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_7 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_28 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_9 OneSecGrp_SectionRef_33.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_31 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_17 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_4 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_19 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_24 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_1 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_25 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_10 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_8 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_29 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_30 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_15 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_35 OneSecGrp_SectionRef_27.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 9
    dend_22 nseg = 15
    dend_0 nseg = 9
    dend_32 nseg = 9
    dend_18 nseg = 19
    dend_5 nseg = 15
    dend_3 nseg = 11
    dend_2 nseg = 13
    dend_36 nseg = 9
    dend_33 nseg = 15
    dend_27 nseg = 7
    dend_26 nseg = 17
    dend_21 nseg = 9
    dend_20 nseg = 9
    dend_7 nseg = 3
    dend_28 nseg = 3
    dend_14 nseg = 15
    dend_11 nseg = 7
    dend_9 nseg = 15
    dend_31 nseg = 9
    dend_16 nseg = 7
    dend_13 nseg = 11
    dend_12 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_LBC_e2449b7b3c_0_0


