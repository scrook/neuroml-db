// Cell: Cell_472912177
/*
{
  "id" : "Cell_472912177",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "231.573, 233.834, 35.28, 11.8424", "237.494, 233.834, 35.28, 11.8424", "243.416, 233.834, 35.28, 11.8424" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "237.495, 233.834, 35.28, 1.0", "243.336, 247.65, 35.28, 1.0", "249.177, 261.466, 35.28, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995778096766
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "240.975, 238.972, 35.8481, 0.3814", "241.84, 239.353, 34.4294, 0.4576", "242.614, 239.678, 32.5332, 0.661", "243.465, 240.397, 31.9152, 0.7626", "244.395, 241.065, 31.8844, 0.7626", "245.262, 241.794, 31.7251, 0.6102", "245.932, 242.706, 31.5266, 0.5592", "246.515, 243.646, 32.0214, 0.5848", "247.234, 244.451, 32.8115, 0.6356", "248.105, 245.182, 32.8485, 0.6356", "248.961, 245.823, 32.0754, 0.5848", "249.765, 246.354, 30.6043, 0.6102", "250.68, 246.868, 29.7587, 0.661", "251.527, 247.618, 29.6792, 0.7626", "252.15, 248.576, 29.675, 0.788", "252.687, 249.583, 29.652, 0.788", "253.13, 250.633, 29.5142, 0.788", "253.665, 251.625, 29.0752, 0.839", "254.262, 252.571, 28.5202, 0.8644", "254.918, 253.483, 28.0885, 0.839", "255.652, 254.312, 27.4582, 0.7626", "256.417, 255.159, 27.2401, 0.661", "256.958, 256.129, 26.747, 0.5592", "257.557, 257.081, 26.8142, 0.483", "258.432, 257.595, 26.4874, 0.5592", "259.476, 257.692, 25.3949, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995778096766
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "241.814, 228.728, 37.5626, 0.7372", "242.398, 227.766, 37.7896, 0.8898", "242.859, 226.74, 38.2886, 0.8644", "243.275, 225.695, 38.6366, 0.7372", "243.428, 224.575, 38.7629, 0.6864", "243.348, 223.461, 39.2529, 0.7372", "242.995, 222.432, 39.8796, 0.8136", "242.482, 221.467, 40.6227, 0.8136", "242.234, 220.442, 41.6968, 0.788", "242.676, 219.416, 42.2038, 0.8136", "243.219, 218.45, 42.8907, 0.8644", "243.596, 217.374, 43.1203, 0.9152" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995778096766
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "240.684, 238.46, 38.6478, 0.5592", "241.456, 238.625, 40.6739, 0.483" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995778096766
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "232.505, 230.775, 35.28, 0.5338", "231.45, 231.199, 35.28, 0.5592", "230.352, 231.518, 35.28, 0.5592", "229.208, 231.516, 35.28, 0.5084", "228.079, 231.328, 35.28, 0.5084", "226.963, 231.085, 35.28, 0.5338", "225.818, 231.062, 35.28, 0.661", "224.683, 230.931, 35.2803, 0.9152" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995778096766
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "249.177, 261.466, 35.28, 1.0", "255.018, 275.282, 35.28, 1.0", "260.86, 289.098, 35.28, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "259.476, 257.692, 25.3949, 0.6864", "259.244, 257.588, 23.8, 0.4576", "259.346, 258.724, 23.8, 0.5592", "259.366, 259.862, 23.5942, 0.5338", "259.458, 260.999, 23.52, 0.483", "259.752, 261.896, 22.96, 0.5084", "260.556, 262.557, 22.12, 0.5848", "261.251, 263.466, 22.12, 0.6864", "261.937, 264.381, 22.12, 0.6864", "262.556, 265.301, 21.5533, 0.6356", "263.007, 266.189, 20.4375, 0.5338", "263.222, 267.146, 19.1559, 0.5084", "264.002, 267.959, 19.04, 0.483", "264.715, 268.835, 18.7194, 0.4576", "265.342, 269.526, 18.2, 0.4322", "266.051, 270.217, 17.8942, 0.4576", "266.702, 271.011, 17.36, 0.5084", "267.493, 271.826, 17.36, 0.483", "268.128, 272.749, 17.36, 0.4068", "268.155, 273.846, 16.7597, 0.305", "268.155, 274.974, 16.2963, 0.2542", "268.194, 276.004, 15.2967, 0.2288", "269.299, 276.047, 15.12, 0.2288" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "259.476, 257.692, 25.3949, 0.6864", "260.854, 258.043, 26.038, 0.2288", "261.993, 258.093, 26.2035, 0.2288", "263.132, 258.13, 26.297, 0.2542", "264.257, 258.32, 26.341, 0.2796", "265.313, 258.748, 26.4592, 0.356", "266.41, 258.901, 26.8358, 0.4322", "267.497, 258.63, 26.4174, 0.5338", "268.635, 258.658, 26.4706, 0.5338", "269.745, 258.867, 26.6, 0.483", "270.865, 259.094, 26.6, 0.4068", "272.001, 259.155, 26.542, 0.3814", "273.079, 259.509, 26.32, 0.356", "274.187, 259.796, 26.32, 0.3304", "275.177, 260.346, 26.32, 0.3304", "276.231, 260.723, 26.255, 0.356", "277.162, 261.365, 25.8807, 0.4068", "278.264, 261.65, 25.76, 0.4322", "279.401, 261.77, 25.7351, 0.483", "280.467, 262.114, 25.48, 0.4576", "281.53, 262.506, 25.48, 0.4068", "282.552, 262.999, 25.366, 0.305", "283.671, 263.12, 24.9897, 0.2542", "284.795, 263.12, 24.64, 0.2288", "285.937, 263.159, 24.64, 0.2288", "287.067, 263.234, 24.3919, 0.2796", "288.196, 263.288, 24.08, 0.356", "289.29, 263.606, 24.071, 0.4576", "290.23, 264.148, 23.4178, 0.483", "291.147, 264.707, 22.5285, 0.4576", "292.076, 265.228, 21.5891, 0.3814", "293.184, 265.5, 21.56, 0.305", "294.202, 265.855, 20.7606, 0.2542", "295.225, 266.281, 20.5058, 0.2288", "296.315, 266.582, 20.44, 0.2288", "297.275, 267.142, 20.2667, 0.2288", "298.359, 267.467, 20.16, 0.2288", "298.814, 267.813, 18.4341, 0.2288", "299.342, 268.177, 17.0419, 0.2288", "300.415, 268.538, 16.8, 0.2288", "301.494, 268.694, 17.1382, 0.2288", "302.118, 268.75, 19.276, 0.2288", "303.212, 269.061, 19.3351, 0.2288", "304.227, 269.406, 20.0796, 0.2288", "305.351, 269.542, 20.2199, 0.2288", "306.48, 269.641, 20.4386, 0.2288", "307.483, 269.741, 19.6, 0.2796", "308.529, 270.157, 19.7602, 0.3304", "309.65, 270.36, 19.88, 0.3814", "310.779, 270.548, 19.88, 0.356", "311.892, 270.332, 20.1359, 0.3814", "312.974, 269.963, 20.16, 0.483", "314.1, 269.858, 20.16, 0.5848", "315.236, 269.755, 20.16, 0.5848", "316.35, 269.961, 20.16, 0.5084", "317.46, 270.196, 20.16, 0.5084", "318.525, 270.561, 20.16, 0.5592", "319.511, 271.119, 19.934, 0.5338", "320.548, 271.573, 19.88, 0.4576", "321.527, 272.146, 19.88, 0.4068", "322.544, 272.652, 19.88, 0.4322", "323.626, 272.962, 19.88, 0.4576", "324.757, 273.089, 19.88, 0.4322", "325.881, 273.304, 19.88, 0.4068", "326.978, 273.628, 19.88, 0.3304", "328.072, 273.962, 19.88, 0.2796", "329.198, 274.102, 19.88, 0.2288", "330.325, 274.174, 20.1183, 0.2288", "331.403, 274.303, 20.72, 0.2288", "332.529, 274.185, 20.4565, 0.2796", "333.595, 273.989, 19.88, 0.3814", "334.727, 273.874, 19.7537, 0.5338", "335.846, 273.981, 19.2934, 0.5848", "336.923, 274.258, 18.8513, 0.5848", "338.034, 274.528, 18.76, 0.5084", "339.059, 274.981, 18.5517, 0.483", "340.058, 275.506, 18.3386, 0.4068", "341.082, 275.992, 18.2, 0.356", "342.214, 276.011, 18.2, 0.3304", "343.339, 275.824, 18.114, 0.356", "344.462, 275.966, 17.92, 0.3814", "345.55, 276.318, 17.9068, 0.3814", "346.587, 276.757, 17.64, 0.3814", "347.529, 277.399, 17.5619, 0.356", "348.589, 277.763, 17.36, 0.3304", "349.733, 277.763, 17.36, 0.305", "350.821, 277.89, 16.8622, 0.305", "351.898, 278.245, 16.8, 0.305", "353.038, 278.329, 16.8, 0.305", "354.173, 278.335, 16.52, 0.305", "355.307, 278.222, 16.5508, 0.2796", "356.444, 278.221, 16.8, 0.2542", "357.563, 278.068, 17.057, 0.2288", "358.701, 277.992, 17.08, 0.2288", "359.839, 277.945, 17.08, 0.2542", "360.824, 277.56, 16.8179, 0.305", "361.546, 277.306, 18.5954, 0.356", "362.619, 277.42, 19.0509, 0.356", "363.601, 277.35, 19.8408, 0.3304", "364.742, 277.306, 19.88, 0.305", "365.864, 277.306, 20.2392, 0.305", "366.984, 277.306, 20.72, 0.2796", "368.128, 277.306, 20.72, 0.2542", "369.272, 277.309, 20.72, 0.2542", "370.403, 277.436, 20.72, 0.3304", "371.513, 277.691, 20.72, 0.4068", "372.498, 278.173, 20.72, 0.4322", "373.481, 278.63, 20.72, 0.356", "374.527, 278.955, 20.72, 0.2796", "375.495, 279.456, 20.72, 0.2796", "376.623, 279.54, 20.72, 0.3304", "377.691, 279.915, 20.72, 0.3814", "378.453, 280.623, 20.72, 0.3304", "379.44, 281.113, 20.5556, 0.2796", "380.554, 281.195, 20.6713, 0.2288", "381.697, 281.202, 20.7138, 0.2288", "382.621, 281.51, 19.4432, 0.2542", "383.662, 281.807, 19.32, 0.2796", "384.67, 282.26, 19.32, 0.3304", "385.664, 282.757, 19.32, 0.356", "386.799, 282.809, 19.1024, 0.3814", "387.541, 283.52, 18.7415, 0.356", "388.429, 283.823, 17.6638, 0.3304", "389.5, 283.576, 17.9186, 0.305", "390.578, 283.369, 18.3478, 0.3304", "391.703, 283.369, 18.76, 0.4068", "392.411, 283.38, 17.1839, 0.5338", "393.528, 283.483, 17.0579, 0.6102", "394.627, 283.693, 16.8, 0.5592", "395.77, 283.712, 16.8, 0.4322", "396.905, 283.617, 16.7838, 0.3304", "398.039, 283.712, 16.6628, 0.305", "399.16, 283.598, 17.0492, 0.2796", "400.266, 283.436, 17.08, 0.2542", "401.38, 283.236, 17.08, 0.2542", "402.52, 283.138, 17.08, 0.2796", "403.644, 283.026, 17.3687, 0.3304", "404.748, 283.14, 17.92, 0.3304" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "243.596, 217.374, 43.1203, 0.9152", "243.29, 216.265, 43.6612, 0.356", "242.555, 215.448, 44.3646, 0.5084", "241.605, 214.873, 45.0136, 0.6102", "240.768, 214.121, 45.5104, 0.6864", "240.202, 213.176, 46.2297, 0.6864", "239.68, 212.238, 47.1904, 0.6864", "238.924, 211.443, 47.976, 0.7372", "238.191, 210.587, 48.447, 0.7626", "237.698, 209.596, 47.7705, 0.839", "237.743, 208.487, 47.9394, 0.839", "238.183, 207.486, 48.7449, 0.8136", "238.682, 206.524, 49.6034, 0.6864", "238.952, 205.514, 50.1231, 0.5848", "238.428, 204.554, 50.7265, 0.5848", "237.596, 203.873, 51.52, 0.6102" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "243.596, 217.374, 43.1203, 0.9152", "244.505, 215.992, 43.1284, 0.5084", "245.398, 215.292, 43.1791, 0.5848", "246.43, 214.805, 43.3756, 0.6102", "247.107, 214.174, 44.24, 0.483", "247.894, 213.456, 44.24, 0.356", "248.693, 212.658, 44.24, 0.2542", "249.527, 211.98, 44.24, 0.2288", "250.607, 211.648, 44.24, 0.2288", "251.398, 210.847, 43.9852, 0.2288", "252.346, 210.239, 43.68, 0.305", "253.283, 209.581, 43.68, 0.483" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "241.456, 238.625, 40.6739, 0.483", "241.997, 239.796, 42.4637, 0.4576", "242.044, 240.938, 42.4147, 0.5592", "241.913, 242.069, 42.4371, 0.6356", "241.557, 243.154, 42.3444, 0.7118", "241.264, 244.245, 41.9922, 0.6864", "241.156, 245.382, 41.946, 0.6864", "241.156, 246.517, 41.6836, 0.661", "241.156, 247.629, 41.0589, 0.7372", "241.15, 248.771, 40.88, 0.8136", "241.118, 249.914, 40.88, 0.8644", "241.002, 251.051, 40.88, 0.839", "240.836, 252.181, 40.8814, 0.788", "240.854, 253.316, 40.8915, 0.7626", "241.132, 254.426, 40.9223, 0.7118" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "241.456, 238.625, 40.6739, 0.483", "242.374, 238.498, 43.2348, 0.4322", "242.715, 238.993, 45.3995, 0.4068", "242.529, 239.897, 46.7916, 0.5338", "242.219, 240.619, 48.3557, 0.6102", "242.464, 241.718, 48.8544, 0.6356" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "224.683, 230.931, 35.2803, 0.9152", "224.12, 231.195, 36.0307, 0.4068", "223.271, 231.806, 37.0908, 0.4322", "222.411, 232.518, 37.329, 0.4576", "221.581, 233.265, 36.7937, 0.4576", "220.765, 234.044, 36.5649, 0.483", "219.896, 234.753, 37.0205, 0.5592", "219.074, 235.497, 37.6709, 0.661", "218.419, 236.388, 38.3275, 0.6864", "217.872, 237.379, 38.61, 0.661", "217.307, 238.373, 38.64, 0.5848", "216.657, 239.313, 38.6403, 0.5592", "216.083, 240.298, 38.6408, 0.5338", "215.545, 241.309, 38.645, 0.5592", "214.898, 242.249, 38.6641, 0.6356", "214.232, 243.178, 38.7545, 0.7118", "213.683, 244.152, 39.2815, 0.7372", "213.079, 245.089, 39.902, 0.661", "212.59, 246.074, 40.6006, 0.5848", "211.993, 247.038, 40.6193, 0.5592", "211.285, 247.878, 39.8541, 0.6102", "210.583, 248.706, 39.0071, 0.661", "209.79, 249.499, 39.5382, 0.6864", "209.019, 250.279, 40.3292, 0.6864", "208.282, 251.126, 40.8374, 0.6864", "207.473, 251.935, 40.8736, 0.6864", "206.629, 252.705, 40.8514, 0.6356", "205.704, 253.374, 40.7123, 0.5592", "204.864, 254.096, 40.0336, 0.4576", "204.076, 254.807, 39.1622, 0.4576", "203.234, 255.536, 39.6494, 0.4576", "202.682, 256.537, 39.7046, 0.4576", "202.193, 257.564, 39.4624, 0.4068", "201.576, 258.463, 39.2529, 0.4576", "200.644, 259.101, 39.6486, 0.5592", "199.741, 259.79, 39.7603, 0.6102", "199.025, 260.675, 39.7614, 0.5338", "198.436, 261.655, 39.767, 0.4576", "197.769, 262.58, 39.7911, 0.4322", "197.046, 263.457, 39.9608, 0.4322", "196.342, 264.342, 40.3609, 0.4322", "195.506, 265.078, 40.3273, 0.5084", "194.629, 265.768, 39.8247, 0.6356", "193.857, 266.61, 39.76, 0.7118", "193.139, 267.5, 39.76, 0.661", "192.314, 268.281, 39.76, 0.5592", "191.333, 268.859, 39.7603, 0.5084", "190.42, 269.526, 39.7608, 0.483", "189.645, 270.365, 39.7636, 0.5084", "188.756, 271.016, 40.1682, 0.4322", "187.706, 271.451, 40.32, 0.3814", "186.603, 271.725, 40.32, 0.2796", "185.596, 272.262, 40.3365, 0.2796", "184.693, 272.953, 40.6, 0.2796", "183.857, 273.719, 40.6, 0.3304", "183.225, 274.587, 41.1188, 0.3304", "182.975, 275.671, 41.44, 0.3304", "182.318, 276.58, 41.44, 0.2796", "181.221, 276.814, 41.5184, 0.2542", "180.742, 277.707, 41.72, 0.2542", "180.228, 278.698, 42.2223, 0.305", "179.54, 279.59, 42.5401, 0.356", "178.579, 280.166, 42.84, 0.3814", "177.482, 280.418, 43.1147, 0.356", "176.635, 281.077, 43.12, 0.3304", "175.867, 281.921, 43.12, 0.3304", "175.012, 282.655, 43.2135, 0.356", "174.17, 283.371, 43.68, 0.3814", "173.051, 283.591, 43.68, 0.3304", "172.076, 284.143, 43.68, 0.2796", "171.243, 284.914, 43.68, 0.2288", "170.594, 285.696, 43.96, 0.2288", "169.857, 286.567, 43.96, 0.2288", "168.938, 287.214, 43.9863, 0.2288", "167.971, 287.757, 44.52, 0.2288", "167.202, 288.596, 44.52, 0.2288", "166.493, 289.469, 44.52, 0.2288", "165.497, 290.014, 44.52, 0.2288", "164.721, 290.822, 44.8935, 0.2288", "164.062, 291.507, 45.92, 0.2288", "163.685, 292.559, 45.92, 0.2288", "162.781, 293.245, 45.92, 0.2288", "161.926, 294.0, 45.92, 0.2288", "160.954, 294.589, 45.92, 0.2288", "160.062, 295.285, 45.92, 0.2288", "159.488, 296.27, 45.92, 0.2288", "158.982, 297.295, 45.92, 0.2288", "158.383, 298.268, 45.92, 0.2288", "157.592, 299.018, 45.92, 0.2288", "156.814, 299.849, 45.9413, 0.2288", "156.148, 300.74, 46.48, 0.2542", "155.449, 301.626, 46.76, 0.305", "154.596, 302.385, 46.76, 0.356", "153.65, 303.009, 47.0246, 0.356", "152.727, 303.684, 47.04, 0.305", "151.717, 304.197, 46.8524, 0.2542", "150.76, 304.802, 46.76, 0.2288", "149.857, 305.489, 46.6203, 0.2288", "148.895, 306.097, 46.48, 0.2288", "148.068, 306.845, 46.48, 0.2288", "147.12, 307.474, 46.48, 0.2288", "146.361, 308.315, 46.48, 0.2542", "145.657, 309.183, 46.6612, 0.2796", "144.659, 309.452, 47.6, 0.305", "143.682, 309.97, 47.6, 0.2796", "142.805, 310.659, 47.836, 0.2542", "142.189, 311.377, 48.72, 0.2288", "141.24, 311.811, 48.72, 0.2288", "140.168, 312.163, 48.72, 0.2288", "139.109, 312.59, 48.72, 0.2288", "138.038, 312.982, 48.6329, 0.2288", "137.044, 313.477, 48.44, 0.2288", "135.995, 313.918, 48.44, 0.2288", "135.077, 314.586, 48.6951, 0.2288", "134.061, 315.109, 48.72, 0.2288", "133.062, 315.665, 48.72, 0.2288", "132.116, 316.289, 48.4448, 0.2796", "131.267, 317.03, 48.6114, 0.3304", "130.21, 317.449, 48.72, 0.3814", "129.176, 317.811, 49.275, 0.3304", "128.286, 318.499, 49.28, 0.2796", "127.673, 319.452, 49.0244, 0.2288", "126.788, 320.15, 49.0, 0.2288", "125.784, 320.549, 49.0, 0.2288", "124.674, 320.757, 49.0596, 0.2288", "123.694, 321.335, 49.28, 0.2288", "122.777, 321.988, 49.6667, 0.2288", "121.777, 322.5, 49.84, 0.2288", "121.098, 323.299, 49.84, 0.2288", "120.571, 324.306, 49.9288, 0.2288", "119.835, 325.151, 50.4, 0.2288", "119.062, 325.953, 50.9158, 0.2288", "118.347, 326.827, 51.24, 0.2288", "117.518, 327.61, 51.24, 0.2542", "116.748, 328.421, 51.7913, 0.2796", "115.926, 329.146, 52.2684, 0.305", "115.165, 329.785, 53.5248, 0.2796", "114.373, 330.518, 53.2927, 0.2542", "113.724, 331.457, 53.2, 0.2288", "112.771, 332.061, 53.2, 0.2288", "111.719, 332.494, 53.2, 0.2288", "110.75, 333.063, 53.2, 0.2288", "109.968, 333.891, 53.2, 0.2288", "109.13, 334.667, 53.2, 0.2796", "108.517, 335.501, 53.683, 0.3814", "107.785, 336.374, 53.76, 0.483", "107.207, 337.302, 53.76, 0.483", "106.273, 337.958, 53.8331, 0.3814", "105.557, 338.836, 54.04, 0.2796", "104.909, 339.777, 54.04, 0.2288", "104.153, 340.634, 54.04, 0.2288", "103.109, 341.086, 54.04, 0.2288", "102.059, 341.534, 54.0862, 0.2288", "101.812, 342.549, 54.32, 0.2288", "101.604, 343.387, 54.8733, 0.2288", "101.152, 343.193, 57.4014, 0.2288", "100.427, 343.276, 58.8, 0.2288", "99.328, 343.41, 58.8, 0.2288", "98.8081, 344.228, 59.2567, 0.2288", "97.6958, 344.409, 59.36, 0.2288", "96.7002, 344.97, 59.36, 0.2288", "95.6863, 345.485, 59.6268, 0.2288", "94.7809, 345.97, 60.5268, 0.2288", "94.104, 346.817, 61.0176, 0.2288", "93.3812, 347.679, 61.04, 0.2288", "92.7657, 348.617, 61.2567, 0.2288", "92.1132, 349.531, 61.6, 0.2288", "91.2526, 350.24, 61.6, 0.2288", "90.4197, 351.004, 61.6, 0.2288", "89.5739, 351.765, 61.6, 0.2288", "88.7972, 352.582, 61.6, 0.2288", "87.9925, 353.367, 61.6123, 0.2288", "87.0866, 353.965, 62.16, 0.2288", "86.2491, 354.583, 62.7312, 0.2288", "85.4465, 355.031, 63.84, 0.2288", "84.7203, 355.885, 63.84, 0.2288", "84.2337, 356.907, 63.973, 0.2288", "83.7413, 357.843, 64.68, 0.2796" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "224.683, 230.931, 35.2803, 0.9152", "223.277, 230.103, 35.2825, 0.8136", "222.428, 229.338, 35.2898, 0.7626", "221.523, 228.636, 35.3265, 0.6102" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "237.596, 203.873, 51.52, 0.6102", "237.65, 203.746, 53.2, 0.356", "238.773, 203.669, 53.4531, 0.3814", "239.764, 203.605, 54.32, 0.3304", "240.424, 202.853, 54.32, 0.2796", "241.262, 202.113, 54.5784, 0.2288", "242.053, 201.291, 54.6, 0.2288", "242.519, 200.328, 54.6, 0.2288", "243.242, 199.757, 55.3714, 0.2288", "243.829, 198.975, 56.7398, 0.2288", "244.48, 198.285, 58.0633, 0.2288", "245.342, 197.593, 58.329, 0.2288", "245.866, 196.664, 58.5239, 0.2796", "246.594, 196.219, 60.0678, 0.3304", "247.521, 195.853, 60.7866, 0.3814", "248.437, 195.853, 62.3742, 0.3304", "249.432, 195.738, 63.1907, 0.2796", "250.512, 195.738, 63.84, 0.2542", "251.532, 195.738, 64.7592, 0.305", "252.669, 195.738, 64.9883, 0.356", "253.531, 195.244, 66.103, 0.356", "254.493, 194.752, 66.36, 0.356", "255.055, 194.366, 67.6404, 0.356", "255.618, 194.301, 70.0711, 0.4068", "256.182, 194.236, 72.5021, 0.3814", "256.89, 194.034, 74.5766, 0.356", "257.713, 193.717, 76.356, 0.2796", "258.537, 193.399, 78.1351, 0.2542", "259.362, 193.081, 79.9145, 0.2288", "260.184, 192.739, 81.6693, 0.2288", "261.003, 192.352, 83.3806, 0.2288", "261.823, 191.965, 85.0917, 0.2288", "262.643, 191.57, 86.767, 0.2288", "263.533, 190.894, 87.3712, 0.2288", "264.422, 190.217, 87.9754, 0.2288", "265.31, 189.541, 88.5797, 0.2288", "266.201, 188.865, 89.1839, 0.2288", "267.089, 188.189, 89.7882, 0.2288", "267.977, 187.513, 90.3921, 0.2288", "268.851, 186.892, 91.2559, 0.2288", "269.729, 186.32, 92.3835, 0.2288", "270.606, 185.748, 93.5113, 0.2288", "271.417, 185.221, 94.9892, 0.2288", "272.21, 184.706, 96.565, 0.2288", "273.003, 184.19, 98.1406, 0.2288", "273.797, 183.675, 99.7164, 0.2288", "274.685, 183.206, 100.767, 0.2288", "275.671, 183.042, 101.636, 0.2796", "276.557, 183.1, 103.396, 0.356" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "237.596, 203.873, 51.52, 0.6102", "236.717, 202.799, 51.52, 0.4322", "236.247, 201.765, 51.52, 0.4068", "235.811, 200.74, 51.7409, 0.3304", "235.779, 199.6, 51.8, 0.2542", "235.512, 198.572, 51.8392, 0.2796", "235.346, 197.488, 52.36, 0.3304", "234.971, 196.424, 52.542, 0.3814", "234.452, 195.465, 53.2, 0.3814", "233.969, 194.441, 53.2, 0.3814", "233.594, 193.416, 53.2, 0.3814", "233.12, 192.389, 53.2, 0.3304", "232.605, 191.372, 53.2, 0.2796", "232.443, 190.248, 53.2, 0.2288", "231.878, 189.578, 54.3158, 0.2796", "231.344, 188.567, 54.32, 0.356", "230.538, 187.789, 54.32, 0.4322", "229.859, 186.912, 54.6, 0.4322", "229.292, 185.941, 54.8836, 0.3814", "229.019, 185.137, 56.0, 0.356", "228.68, 184.046, 56.0, 0.3304", "228.446, 182.95, 56.1243, 0.3304", "228.193, 181.918, 56.9265, 0.305", "227.833, 180.845, 57.12, 0.3304", "227.221, 180.111, 58.212, 0.4068", "226.719, 179.141, 58.5298, 0.483", "226.055, 178.49, 59.852, 0.5084", "225.471, 177.703, 61.2545, 0.4576", "224.95, 176.75, 61.917, 0.4068", "224.497, 175.746, 62.44, 0.3814", "223.642, 175.038, 62.44, 0.356", "223.294, 174.395, 63.2789, 0.305", "222.808, 173.905, 64.4, 0.2542", "222.168, 172.976, 64.4, 0.2288", "221.622, 171.972, 64.4, 0.2288", "220.833, 171.166, 64.4, 0.2288", "220.566, 170.084, 64.4, 0.2288", "220.129, 169.077, 64.4, 0.2288", "219.747, 168.192, 64.8844, 0.2288", "219.077, 167.682, 66.4132, 0.2288", "218.734, 166.988, 68.04, 0.2288", "218.562, 165.865, 68.04, 0.2288", "218.296, 164.758, 68.04, 0.2288", "218.161, 163.624, 68.04, 0.2288", "218.053, 162.489, 68.04, 0.2288", "217.855, 161.37, 68.2312, 0.2542", "217.818, 160.355, 69.3342, 0.2796", "217.818, 159.324, 70.3875, 0.305", "217.818, 158.187, 70.56, 0.2796", "217.895, 157.054, 70.56, 0.2542", "218.14, 155.969, 70.761, 0.2288", "218.42, 154.949, 71.4, 0.2288", "218.734, 153.871, 71.6783, 0.2288", "219.051, 152.789, 71.96, 0.2288", "219.316, 151.714, 72.5049, 0.2288", "219.596, 150.626, 72.8, 0.2288", "219.932, 149.544, 72.8, 0.2288", "219.992, 148.404, 72.8, 0.2288", "220.107, 147.267, 72.8, 0.2288", "220.253, 146.311, 73.6221, 0.2288", "220.857, 145.599, 73.9007, 0.2288", "220.982, 144.529, 74.8434, 0.2288", "221.105, 143.46, 75.7859, 0.2288", "221.23, 142.389, 76.7284, 0.2288", "221.354, 141.32, 77.6709, 0.2288", "221.562, 140.24, 78.416, 0.2288", "221.811, 139.155, 79.0622, 0.2288", "222.062, 138.069, 79.7084, 0.2288", "222.311, 136.985, 80.3547, 0.2288", "222.562, 135.9, 81.0009, 0.2288", "222.811, 134.816, 81.6472, 0.2288", "222.948, 133.71, 82.2273, 0.2288", "222.999, 132.587, 82.7568, 0.2288", "223.049, 131.465, 83.2863, 0.2288", "223.1, 130.343, 83.8158, 0.2288", "223.15, 129.221, 84.3452, 0.2288", "223.201, 128.098, 84.8747, 0.2288", "223.012, 126.99, 85.26, 0.2288", "222.755, 125.883, 85.6027, 0.2288", "222.497, 124.778, 85.9454, 0.2288", "222.24, 123.672, 86.2884, 0.2288", "221.982, 122.566, 86.6312, 0.2288", "221.724, 121.461, 86.9739, 0.2288", "221.467, 120.354, 87.3169, 0.2288", "221.208, 119.249, 87.6596, 0.2288", "220.951, 118.143, 88.0023, 0.2288", "221.224, 117.061, 88.0617, 0.2288", "221.609, 115.984, 88.0617, 0.2288", "221.993, 114.907, 88.0617, 0.2288", "222.38, 113.829, 88.0617, 0.2288", "222.764, 112.752, 88.0617, 0.2542", "223.15, 111.675, 88.0617, 0.2796", "223.42, 110.571, 88.2725, 0.305", "223.639, 109.455, 88.5749, 0.2796", "223.859, 108.339, 88.8773, 0.2542", "224.079, 107.223, 89.18, 0.2288", "224.298, 106.107, 89.4824, 0.2288", "224.518, 104.991, 89.7848, 0.2288", "224.736, 103.875, 90.0875, 0.2288", "224.956, 102.76, 90.3899, 0.2288", "225.176, 101.644, 90.6903, 0.2288", "225.439, 100.53, 90.6903, 0.2288", "225.7, 99.416, 90.6903, 0.2288", "226.262, 98.491, 91.4805, 0.2288", "226.868, 97.5917, 92.3782, 0.2288", "227.471, 96.6925, 93.2758, 0.2288", "228.077, 95.7932, 94.1738, 0.2288", "228.68, 94.8939, 95.0715, 0.2796" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "253.283, 209.581, 43.68, 0.483", "253.478, 209.699, 44.2061, 0.5848", "254.508, 209.81, 44.8, 0.4576", "255.642, 209.924, 44.8, 0.356", "256.784, 209.924, 44.8, 0.305", "257.929, 209.924, 44.8, 0.3304", "259.021, 209.952, 45.1455, 0.356", "260.018, 210.328, 45.6238, 0.4068", "261.135, 210.52, 45.92, 0.4068", "262.245, 210.725, 46.216, 0.4068", "263.373, 210.725, 46.6763, 0.4068", "264.453, 210.725, 47.5518, 0.4322", "265.464, 210.725, 48.6612, 0.4576", "266.411, 210.379, 49.28, 0.4322", "267.401, 210.038, 49.8187, 0.4068", "268.375, 209.975, 51.0804, 0.356", "269.182, 209.695, 52.7083, 0.3304", "270.318, 209.695, 52.92, 0.305", "271.432, 209.581, 53.3932, 0.305", "272.541, 209.532, 54.021, 0.2796", "273.599, 209.226, 54.4026, 0.2542", "274.424, 208.543, 55.0984, 0.2288", "275.253, 207.825, 55.9, 0.2288", "276.081, 207.107, 56.7017, 0.2288", "276.937, 206.57, 57.9446, 0.2542", "277.805, 206.117, 59.3914, 0.2796", "278.698, 205.716, 60.8247, 0.305", "279.656, 205.465, 62.2205, 0.2796", "280.615, 205.213, 63.6163, 0.2542", "281.575, 204.96, 65.0118, 0.2288", "282.552, 204.576, 66.0999, 0.2288", "283.534, 204.159, 67.1149, 0.2288", "284.516, 203.744, 68.1296, 0.2288", "285.497, 203.328, 69.1446, 0.2542", "286.359, 202.676, 70.0437, 0.2796", "287.211, 202.004, 70.933, 0.3304", "288.232, 201.526, 71.3658, 0.3304", "289.263, 201.058, 71.776, 0.3304", "290.292, 200.59, 72.186, 0.305", "291.323, 200.122, 72.5962, 0.305", "292.401, 199.832, 73.1254, 0.305", "293.5, 199.625, 73.71, 0.2796", "294.599, 199.417, 74.2949, 0.2542", "295.7, 199.21, 74.8796, 0.2288", "296.799, 199.003, 75.4645, 0.2288", "297.87, 198.71, 76.0754, 0.2288", "298.909, 198.308, 76.7203, 0.2288", "299.948, 197.905, 77.3648, 0.2288", "300.984, 197.502, 78.0097, 0.2288", "302.023, 197.099, 78.6545, 0.2288", "303.06, 196.696, 79.2994, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "253.283, 209.581, 43.68, 0.483", "253.495, 209.434, 43.68, 0.2288", "254.262, 208.725, 43.12, 0.2288", "255.214, 208.208, 43.12, 0.2542", "256.054, 207.742, 42.5779, 0.2796", "256.609, 206.768, 42.4074, 0.305", "257.143, 205.78, 42.28, 0.2796", "257.835, 204.891, 42.0, 0.2542", "258.461, 203.936, 42.0, 0.2796", "259.219, 203.084, 42.0, 0.3814", "260.002, 202.259, 42.0, 0.483", "260.943, 201.752, 41.8981, 0.5084", "261.492, 201.401, 39.9728, 0.4322", "262.479, 200.896, 39.76, 0.3814", "263.326, 200.143, 39.76, 0.3304", "264.195, 199.516, 39.76, 0.356", "264.622, 198.824, 38.9211, 0.3814", "264.76, 197.835, 37.5533, 0.4576", "265.248, 196.98, 36.8018, 0.483", "266.201, 196.602, 35.7311, 0.4576", "266.898, 196.022, 34.3294, 0.4068", "267.315, 195.149, 32.8378, 0.3814", "268.088, 194.483, 31.5717, 0.3814", "268.76, 193.802, 30.0639, 0.356", "269.372, 193.103, 28.4362, 0.356", "269.872, 192.179, 27.326, 0.3304", "270.373, 191.256, 26.2161, 0.356", "270.875, 190.304, 25.4108, 0.3304", "271.375, 189.276, 25.4108, 0.3304", "271.807, 188.312, 24.6176, 0.3304", "272.19, 187.396, 23.2201, 0.3814" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "241.132, 254.426, 40.9223, 0.7118", "241.027, 254.962, 40.3556, 0.839", "240.749, 255.996, 39.4316, 0.7118", "240.198, 256.947, 38.8573, 0.5848", "239.342, 257.693, 38.6224, 0.5338", "238.493, 258.456, 38.5112, 0.5338", "237.641, 259.206, 38.2323, 0.483", "236.777, 259.92, 38.523, 0.4068", "235.771, 260.41, 38.729, 0.356", "234.853, 261.0, 38.1262, 0.3814", "234.061, 261.792, 37.6088, 0.483", "233.163, 262.487, 37.4693, 0.5338", "232.232, 263.139, 37.1731, 0.5592", "231.258, 263.677, 36.5442, 0.483", "230.293, 264.272, 36.3698, 0.4576", "229.308, 264.85, 36.2247, 0.4322", "228.413, 265.49, 35.5292, 0.4576", "227.564, 266.238, 35.2262, 0.4322", "226.793, 267.077, 34.9933, 0.4068", "226.221, 267.997, 34.1695, 0.3814", "225.684, 268.943, 33.3029, 0.3814", "225.096, 269.912, 33.0593, 0.3814", "224.562, 270.923, 33.0366, 0.4068", "224.049, 271.946, 33.0215, 0.4576", "223.566, 272.982, 32.9342, 0.5084", "223.325, 274.072, 32.4075, 0.5338", "223.23, 275.205, 32.4461, 0.5338", "222.98, 276.315, 32.69, 0.5084", "223.114, 277.403, 32.0418, 0.483", "222.922, 278.517, 31.8049, 0.4068", "222.308, 279.452, 31.2903, 0.4068", "221.568, 280.303, 30.8081, 0.4322", "220.632, 280.952, 30.6561, 0.5084", "219.799, 281.682, 29.967, 0.5084", "218.88, 282.353, 29.6834, 0.483", "217.866, 282.879, 29.6657, 0.5084", "216.868, 283.442, 29.5963, 0.5848", "216.008, 284.174, 29.1654, 0.661", "215.303, 285.0, 28.2937, 0.6864", "214.853, 285.973, 27.3112, 0.7118", "214.135, 286.691, 26.0282, 0.7626", "213.321, 287.296, 24.7307, 0.7626", "212.601, 287.925, 23.2058, 0.661", "211.939, 288.742, 22.1634, 0.483", "211.26, 289.656, 22.3306, 0.356", "210.57, 290.545, 21.8576, 0.356", "209.855, 291.346, 20.9138, 0.3814", "209.033, 291.886, 19.5966, 0.4068", "208.074, 292.0, 18.1381, 0.356", "207.622, 292.856, 17.92, 0.3304", "207.122, 293.806, 17.92, 0.305", "206.18, 294.435, 17.712, 0.2796", "205.338, 295.111, 16.8314, 0.2796", "204.599, 295.944, 16.6172, 0.3304", "203.943, 296.68, 17.64, 0.4322", "203.258, 297.442, 18.1815, 0.483", "202.678, 298.356, 17.6616, 0.4576", "202.385, 299.384, 16.8328, 0.3814", "201.991, 300.434, 16.52, 0.356", "201.512, 301.461, 16.2582, 0.356", "201.23, 302.565, 16.2014, 0.3814", "200.717, 303.398, 15.4339, 0.3814", "199.977, 304.224, 14.8506, 0.3814", "199.4, 305.105, 14.28, 0.3814" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "241.132, 254.426, 40.9223, 0.7118", "241.407, 254.855, 41.0052, 0.6864", "241.926, 255.837, 41.4901, 0.6864", "242.354, 256.805, 42.5244, 0.6356", "242.919, 257.765, 43.0377, 0.5592", "243.497, 258.744, 42.8288, 0.5592", "243.935, 259.767, 42.3074, 0.6102", "244.208, 260.866, 42.049, 0.661", "244.601, 261.932, 42.2979, 0.7118", "245.053, 262.96, 42.8252, 0.7372", "245.525, 263.991, 43.1113, 0.7372", "245.956, 265.05, 43.066, 0.6864", "246.422, 266.085, 42.8109, 0.6356", "246.991, 267.053, 42.2999, 0.6356", "247.632, 267.988, 42.0118, 0.661", "248.299, 268.914, 42.0109, 0.6864", "248.997, 269.818, 42.058, 0.661", "249.646, 270.749, 42.3279, 0.6102", "250.15, 271.717, 42.4556, 0.5338", "250.204, 272.827, 42.0574, 0.5084", "250.051, 273.959, 42.0, 0.483", "250.132, 275.079, 41.9994, 0.5084", "250.437, 276.181, 41.9969, 0.483", "250.665, 277.301, 41.9787, 0.5338", "250.766, 278.436, 41.8659, 0.5084", "250.767, 279.558, 41.405, 0.483", "250.773, 280.677, 40.9312, 0.3814", "250.812, 281.819, 40.88, 0.3814", "251.025, 282.933, 40.88, 0.4322", "251.454, 283.992, 40.88, 0.5084", "251.898, 285.045, 40.88, 0.483", "252.172, 286.148, 40.88, 0.4068", "252.41, 287.259, 40.88, 0.3304", "252.76, 288.349, 40.8811, 0.3304", "252.99, 289.464, 40.8873, 0.4068", "253.038, 290.605, 40.9391, 0.483", "253.047, 291.746, 40.9116, 0.5338", "253.055, 292.89, 40.9035, 0.5084", "253.062, 294.032, 41.0455, 0.5084", "253.107, 295.143, 41.6777, 0.5338", "253.426, 296.219, 41.4974, 0.5592", "253.883, 297.243, 40.9441, 0.5338", "254.382, 298.269, 40.88, 0.4576", "254.881, 299.299, 40.88, 0.4322", "255.368, 300.333, 40.88, 0.4576", "255.769, 301.405, 40.88, 0.483", "256.036, 302.516, 40.88, 0.483", "256.24, 303.642, 40.88, 0.4068", "256.257, 304.784, 40.88, 0.3814", "256.255, 305.928, 40.88, 0.3814", "256.247, 307.073, 40.8794, 0.483", "256.185, 308.214, 40.8766, 0.6102", "255.872, 309.312, 40.8587, 0.7118", "255.532, 310.404, 40.7509, 0.788", "255.441, 311.519, 40.2097, 0.8136", "255.495, 312.631, 39.9403, 0.8136", "255.752, 313.727, 40.3894, 0.788", "255.997, 314.821, 40.8551, 0.7372", "256.188, 315.937, 40.9156, 0.7372", "255.979, 317.038, 41.2118, 0.661", "255.575, 318.088, 41.7043, 0.5848", "255.083, 319.106, 42.0538, 0.4322", "254.902, 320.219, 42.4514, 0.4068", "254.883, 321.345, 42.9346, 0.4576", "254.883, 322.458, 42.3979, 0.5848", "254.879, 323.598, 42.28, 0.6356", "254.833, 324.696, 42.9554, 0.6102", "254.635, 325.796, 43.4034, 0.5592", "254.185, 326.827, 43.8948, 0.5338", "253.769, 327.873, 43.8463, 0.483", "253.685, 328.953, 43.2625, 0.4576", "254.089, 330.009, 43.0408, 0.4068", "254.704, 330.955, 42.7059, 0.4322", "255.219, 331.903, 42.0913, 0.4322", "255.329, 333.038, 41.9972, 0.5084", "255.247, 334.176, 41.9821, 0.5848", "254.962, 335.277, 41.8956, 0.661", "254.579, 336.333, 41.5209, 0.7118", "254.445, 337.431, 40.9612, 0.7118", "254.551, 338.565, 40.9083, 0.7118", "254.786, 339.681, 41.0337, 0.6864", "254.887, 340.78, 41.6478, 0.7118", "254.911, 341.89, 42.2962, 0.7372", "255.132, 342.956, 43.1029, 0.7372", "255.314, 344.071, 43.2737, 0.661", "255.344, 345.212, 43.1642, 0.5592", "255.361, 346.355, 43.2387, 0.483", "255.471, 347.46, 43.8556, 0.483", "255.73, 348.528, 44.6281, 0.5084", "255.801, 349.629, 45.3202, 0.5338", "255.84, 350.761, 45.6966, 0.5848", "256.075, 351.868, 45.4474, 0.661", "256.547, 352.906, 45.4188, 0.7372", "257.013, 353.943, 45.7064, 0.7372", "257.346, 355.003, 46.3456, 0.6864", "257.591, 356.116, 46.4738, 0.6102", "257.533, 357.251, 46.48, 0.5084", "257.307, 358.371, 46.4803, 0.4576", "257.289, 359.502, 46.4822, 0.4068", "257.617, 360.597, 46.4932, 0.483", "257.96, 361.676, 46.5674, 0.483", "257.93, 362.791, 46.916, 0.5592", "257.557, 363.836, 47.5132, 0.5338", "257.201, 364.901, 47.6694, 0.6356", "257.172, 366.025, 48.0399, 0.6864", "257.169, 367.08, 49.0921, 0.7626", "257.146, 368.108, 50.2642, 0.7118", "257.008, 369.205, 50.5201, 0.6356", "256.628, 370.258, 50.2874, 0.5084", "256.32, 371.315, 50.7184, 0.4576", "256.484, 372.422, 50.9897, 0.4322", "257.026, 373.401, 51.2366, 0.5084", "257.766, 374.246, 51.774, 0.5084", "258.088, 375.334, 52.0772, 0.5338", "258.203, 376.472, 52.0836, 0.5084", "258.703, 377.501, 52.1004, 0.5848", "259.313, 378.464, 52.1906, 0.6102", "259.341, 379.58, 52.7772, 0.6356", "259.034, 380.666, 53.1936, 0.5848", "258.974, 381.809, 53.1558, 0.5338", "258.807, 382.929, 52.8713, 0.483", "258.549, 383.9, 51.6541, 0.4576", "258.576, 385.023, 52.1587, 0.4576", "258.695, 386.102, 52.8917, 0.4576", "258.982, 387.179, 52.6616, 0.4322", "259.102, 388.24, 53.4971, 0.4576", "259.375, 389.316, 53.0928, 0.4576", "259.25, 390.434, 53.076, 0.5084", "258.489, 391.261, 53.2053, 0.4576", "257.771, 392.15, 53.2804, 0.4322", "257.529, 393.244, 53.7457, 0.3814", "257.211, 394.336, 53.5021, 0.3814", "257.153, 395.465, 53.0905, 0.356", "256.922, 396.536, 52.3426, 0.3304", "256.753, 397.362, 52.7078, 0.356", "256.703, 398.5, 52.5518, 0.4068", "256.646, 399.619, 53.0986, 0.4576", "256.445, 400.739, 53.1997, 0.4576", "256.562, 401.869, 53.1983, 0.4576", "256.216, 402.957, 53.1882, 0.4576", "255.706, 403.972, 53.1331, 0.4322", "255.614, 405.09, 52.7808, 0.4322" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "242.464, 241.718, 48.8544, 0.6356", "241.676, 240.663, 49.56, 0.6102", "240.739, 240.009, 49.56, 0.483", "239.73, 239.47, 49.56, 0.4576", "238.745, 238.905, 49.56, 0.5084", "237.922, 238.111, 49.56, 0.5848", "237.088, 237.33, 49.56, 0.5592", "236.071, 236.835, 49.84, 0.5084", "235.144, 236.174, 49.8778, 0.4322", "234.555, 235.554, 51.24, 0.483", "233.658, 234.994, 51.5852, 0.5084", "233.118, 234.014, 51.8, 0.5592", "232.228, 233.303, 51.8686, 0.5084", "231.398, 232.595, 52.3494, 0.483", "231.089, 231.659, 53.2, 0.4576", "230.523, 230.834, 53.2, 0.483", "229.611, 230.158, 53.3341, 0.5338", "228.739, 229.545, 54.1635, 0.5848", "227.775, 228.989, 54.588, 0.5592", "226.747, 228.498, 54.6, 0.5084", "225.689, 228.06, 54.637, 0.483", "224.728, 227.468, 54.9755, 0.5084", "223.725, 226.955, 55.3235, 0.5084", "222.701, 226.496, 55.72, 0.483", "221.602, 226.232, 55.72, 0.4576", "220.473, 226.057, 55.72, 0.4576", "219.42, 225.711, 56.28, 0.4322", "218.479, 225.087, 56.56, 0.4322", "217.514, 224.481, 56.56, 0.483", "216.462, 224.081, 56.7403, 0.6102", "215.644, 223.318, 57.1637, 0.6864", "214.646, 222.793, 57.4, 0.661", "213.538, 222.529, 57.4, 0.5338", "212.89, 222.149, 59.08, 0.4068", "212.143, 221.305, 59.08, 0.305", "211.365, 220.483, 59.08, 0.3304", "210.6, 219.821, 59.08, 0.4322", "209.693, 219.242, 59.1007, 0.5592", "208.997, 218.737, 60.1138, 0.5592", "208.107, 218.392, 61.299, 0.4576", "207.107, 217.978, 61.6, 0.4068", "206.094, 217.447, 61.6, 0.4068", "205.031, 217.081, 61.6, 0.4576", "204.064, 216.472, 61.6, 0.4068", "203.034, 215.987, 61.6, 0.3304", "201.962, 215.712, 61.6, 0.2542", "201.045, 215.039, 61.6, 0.2288", "200.064, 214.455, 61.6, 0.2288", "199.062, 213.945, 61.6, 0.2542", "198.2, 213.24, 61.6, 0.305", "197.303, 212.581, 61.8377, 0.3814", "196.557, 211.776, 61.88, 0.4068", "196.148, 210.744, 61.88, 0.4068", "195.624, 209.861, 61.88, 0.356", "195.583, 208.718, 61.88, 0.3304", "195.368, 207.603, 61.88, 0.2796", "195.282, 206.716, 62.9541, 0.2542", "195.282, 205.611, 63.5513, 0.2288", "195.282, 204.472, 63.7003, 0.2288", "195.292, 203.343, 64.12, 0.2288", "195.548, 202.231, 64.12, 0.2288", "195.693, 201.104, 64.12, 0.2288", "195.974, 199.996, 64.12, 0.2542", "196.258, 198.918, 64.12, 0.2796", "196.585, 197.834, 64.12, 0.305", "196.683, 196.703, 64.3765, 0.2796", "196.769, 195.567, 64.4, 0.2542", "197.099, 194.599, 65.4251, 0.2542", "197.111, 193.517, 66.08, 0.2796", "197.096, 192.376, 66.1046, 0.305", "196.779, 191.337, 66.8682, 0.305", "196.308, 190.527, 67.76, 0.305", "196.094, 189.409, 67.76, 0.305", "195.566, 188.441, 68.32, 0.2796", "194.73, 187.717, 68.4536, 0.2542", "194.446, 186.685, 69.1807, 0.2288", "193.824, 185.75, 69.6508, 0.2542", "193.439, 184.685, 69.72, 0.2796", "193.225, 183.609, 70.2388, 0.305", "193.122, 182.527, 70.56, 0.2796", "192.458, 181.805, 70.9923, 0.2542", "192.154, 180.763, 71.8796, 0.2288", "191.85, 179.721, 72.7672, 0.2288", "191.545, 178.68, 73.6548, 0.2288", "191.241, 177.639, 74.5424, 0.2288", "190.936, 176.597, 75.43, 0.2288", "190.631, 175.556, 76.3174, 0.2288", "190.327, 174.515, 77.205, 0.2288", "189.803, 173.54, 77.5468, 0.2288", "189.141, 172.607, 77.5468, 0.2288", "188.478, 171.674, 77.5468, 0.2288", "187.816, 170.742, 77.5468, 0.2288", "186.92, 170.067, 77.9691, 0.2288", "185.993, 169.426, 78.4476, 0.2288", "185.064, 168.786, 78.9261, 0.2288", "184.133, 168.144, 79.2994, 0.2288", "183.187, 167.501, 79.2994, 0.2288", "182.24, 166.858, 79.2994, 0.2288", "181.294, 166.216, 79.2994, 0.2288", "180.348, 165.573, 79.2994, 0.2288", "179.484, 164.834, 79.4066, 0.2288", "178.706, 164.002, 79.6208, 0.2288", "177.926, 163.169, 79.835, 0.2288", "177.148, 162.336, 80.0492, 0.2288", "176.368, 161.503, 80.2634, 0.2288", "175.589, 160.67, 80.4776, 0.2542", "174.81, 159.836, 80.6921, 0.2796", "174.031, 159.003, 80.9063, 0.305", "173.253, 158.175, 81.1983, 0.2796", "172.477, 157.355, 81.6564, 0.2542", "171.702, 156.536, 82.1145, 0.2288", "170.926, 155.716, 82.5726, 0.2288", "170.148, 154.896, 83.0304, 0.2288", "169.374, 154.076, 83.4884, 0.2288", "168.598, 153.257, 83.9465, 0.2288", "167.822, 152.437, 84.4046, 0.2288", "167.047, 151.618, 84.8627, 0.2288", "166.086, 151.057, 85.2944, 0.2288", "165.049, 150.603, 85.7158, 0.2288", "164.015, 150.148, 86.137, 0.2288", "162.924, 149.847, 86.3092, 0.2288", "161.798, 149.651, 86.3092, 0.2288", "160.672, 149.481, 86.3092, 0.2288", "159.581, 149.825, 86.3092, 0.2288", "158.471, 149.571, 86.3092, 0.2288", "157.624, 148.913, 86.5875, 0.2288", "156.938, 148.015, 87.0402, 0.2288", "156.253, 147.118, 87.4927, 0.2288", "155.568, 146.221, 87.9455, 0.2288", "154.883, 145.324, 88.398, 0.2288", "154.197, 144.427, 88.8507, 0.2288", "153.512, 143.53, 89.3035, 0.2288", "152.827, 142.632, 89.756, 0.2288", "152.143, 141.735, 90.2087, 0.2288", "151.456, 140.838, 90.6615, 0.2288", "150.771, 139.94, 91.114, 0.2542", "150.087, 139.043, 91.5667, 0.2796" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "242.464, 241.718, 48.8544, 0.6356", "243.171, 241.964, 49.3766, 0.661", "244.271, 242.038, 49.9397, 0.7118", "245.391, 241.852, 49.8896, 0.661", "246.506, 241.596, 49.84, 0.6356", "247.605, 241.279, 49.8408, 0.5592", "248.7, 240.947, 49.845, 0.6102", "249.782, 240.699, 50.4, 0.6102", "250.885, 240.862, 50.6097, 0.5848", "251.844, 241.383, 51.249, 0.5592", "252.883, 241.763, 51.52, 0.5592", "253.76, 242.402, 51.8885, 0.6102", "254.361, 242.935, 52.92, 0.5084" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "83.7413, 357.843, 64.68, 0.2796", "83.5037, 357.07, 66.7646, 0.356", "83.0834, 356.077, 67.6987, 0.2796", "82.663, 355.084, 68.6328, 0.2288", "82.2818, 354.062, 69.4529, 0.2288", "81.9679, 352.993, 70.077, 0.2288", "81.6538, 351.922, 70.7011, 0.2288", "81.3398, 350.852, 71.3252, 0.2542", "81.0258, 349.783, 71.9494, 0.2796", "80.5549, 349.0, 73.211, 0.305", "79.8963, 348.564, 75.236, 0.2796", "79.1337, 348.188, 77.0781, 0.2796", "78.2701, 347.872, 78.7427, 0.2796", "77.4065, 347.555, 80.4076, 0.305", "76.543, 347.238, 82.0725, 0.2796", "75.7554, 346.978, 83.9941, 0.2542", "74.984, 346.73, 85.9709, 0.2288", "74.2127, 346.482, 87.9474, 0.2288", "73.4413, 346.234, 89.9242, 0.2288", "72.4424, 345.923, 90.9412, 0.2288", "71.3981, 345.6, 91.7672, 0.2288", "70.3539, 345.276, 92.5932, 0.2288", "69.3097, 344.954, 93.4192, 0.2288", "68.2655, 344.63, 94.2455, 0.2288", "67.2213, 344.307, 95.0715, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "83.7413, 357.843, 64.68, 0.2796", "82.8443, 358.272, 64.68, 0.2288", "81.9631, 358.951, 64.4, 0.2288", "81.2036, 359.785, 64.4, 0.2288", "80.4529, 360.635, 64.4, 0.2288", "79.7638, 361.52, 64.4, 0.2288", "79.0046, 362.213, 64.4, 0.2288", "78.1753, 362.972, 64.5162, 0.2288", "77.7284, 363.99, 64.68, 0.2288", "76.9228, 364.716, 64.68, 0.2288", "75.9206, 365.255, 64.6638, 0.2288", "75.032, 365.906, 64.12, 0.2288", "74.6176, 366.784, 63.2976, 0.2288", "74.0674, 367.704, 62.9244, 0.2288", "73.9029, 368.736, 62.16, 0.2288", "73.9029, 369.88, 62.16, 0.2288", "73.9029, 371.024, 62.16, 0.2288", "73.9029, 372.168, 62.16, 0.2288", "73.9029, 373.312, 62.16, 0.2288", "73.9029, 374.456, 62.16, 0.2288", "73.9029, 375.599, 62.2776, 0.2288", "73.5179, 376.54, 62.7542, 0.2542", "73.1633, 377.584, 63.0, 0.2796", "72.6373, 378.555, 63.0, 0.3304", "71.9368, 379.362, 63.0, 0.3304", "71.2717, 380.172, 62.72, 0.3304", "70.8326, 381.025, 62.72, 0.2796", "69.8138, 381.515, 62.72, 0.2542", "68.8124, 381.849, 62.72, 0.2288", "68.3352, 382.821, 62.3829, 0.2796", "67.8397, 383.812, 61.88, 0.3304" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "221.523, 228.636, 35.3265, 0.6102", "219.991, 228.783, 36.1637, 0.356", "218.958, 228.649, 35.8758, 0.4576", "217.965, 228.64, 34.5369, 0.5338", "216.898, 228.719, 33.6361, 0.5848", "215.82, 228.497, 33.8341, 0.661", "214.74, 228.162, 34.1113, 0.661", "213.667, 227.823, 33.7378, 0.6356", "212.618, 227.514, 33.0005, 0.5592", "211.549, 227.654, 32.3075, 0.5338", "210.467, 227.737, 32.9966, 0.5848", "209.361, 227.467, 33.04, 0.6102", "208.219, 227.423, 33.04, 0.6356", "207.075, 227.406, 33.04, 0.6102", "205.948, 227.238, 33.0397, 0.5848", "204.833, 226.982, 33.0383, 0.5592", "203.702, 226.824, 33.0285, 0.5338", "202.633, 226.418, 32.982, 0.5084", "201.553, 226.044, 32.9017, 0.4576", "200.515, 225.82, 33.9307, 0.4068", "199.46, 225.963, 32.9574, 0.4322", "198.437, 225.741, 31.9197, 0.5592", "197.301, 225.612, 31.9183, 0.7118", "196.161, 225.502, 31.9099, 0.839", "195.066, 225.202, 31.8469, 0.839", "193.993, 224.851, 31.4586, 0.788", "192.89, 224.648, 30.9543, 0.661", "191.788, 224.373, 30.8157, 0.5592", "190.699, 224.025, 30.896, 0.4576", "189.609, 223.723, 31.2715, 0.4322", "188.51, 223.488, 31.4448, 0.4322", "187.398, 223.63, 31.2682, 0.4322", "186.322, 223.766, 32.1437, 0.3814", "185.245, 223.765, 31.1996, 0.3814", "184.15, 223.758, 30.3957, 0.4322", "183.01, 223.707, 30.3064, 0.5084", "181.896, 223.509, 30.2042, 0.5084", "180.863, 223.69, 29.3157, 0.483", "179.93, 224.25, 30.1753, 0.4322", "178.846, 224.25, 29.8222, 0.4068", "177.715, 224.184, 29.4879, 0.3814", "176.624, 223.985, 28.8907, 0.4322", "175.51, 223.806, 28.5891, 0.483", "174.368, 223.761, 28.5614, 0.5338", "173.226, 223.731, 28.5698, 0.483", "172.103, 223.535, 28.6236, 0.4068", "170.98, 223.342, 28.8436, 0.3304", "169.849, 223.254, 28.6614, 0.3304", "168.752, 222.97, 28.5998, 0.356", "167.872, 222.642, 27.5915, 0.3814", "166.93, 222.1, 27.44, 0.356", "165.956, 221.52, 27.3546, 0.3304", "164.93, 221.1, 26.88, 0.3304", "163.946, 220.599, 26.6, 0.3814", "162.926, 220.115, 26.6, 0.4322", "161.855, 219.751, 26.4146, 0.4068", "160.877, 219.169, 26.32, 0.356", "159.777, 218.908, 26.2284, 0.305", "158.742, 218.622, 25.529, 0.3304", "157.642, 218.376, 25.2, 0.3304", "156.514, 218.275, 24.943, 0.3304", "155.378, 218.275, 24.6954, 0.305", "154.245, 218.271, 24.36, 0.305", "153.109, 218.153, 24.36, 0.305", "152.027, 218.013, 23.5824, 0.305", "150.921, 217.818, 23.3666, 0.305", "149.799, 217.818, 22.8351, 0.305", "148.659, 217.818, 22.68, 0.2796", "147.531, 217.966, 22.5543, 0.2542", "146.43, 218.161, 22.12, 0.2288", "145.286, 218.161, 22.12, 0.2288", "144.143, 218.18, 22.12, 0.2288", "143.021, 218.404, 22.12, 0.2288", "141.954, 218.797, 22.12, 0.2288", "140.816, 218.847, 22.12, 0.2542", "139.678, 218.915, 22.12, 0.2796", "138.543, 218.962, 22.0276, 0.305", "137.456, 218.847, 21.2582, 0.2796", "136.327, 218.847, 20.7978, 0.2542", "135.196, 218.733, 20.72, 0.2288", "134.071, 218.62, 20.4736, 0.2288", "132.93, 218.669, 20.44, 0.2288", "131.801, 218.847, 20.44, 0.2288", "130.658, 218.847, 20.44, 0.2542", "129.515, 218.835, 20.44, 0.2796", "128.497, 218.43, 19.88, 0.305", "127.366, 218.39, 19.7089, 0.2796", "126.286, 218.082, 19.6, 0.2542", "125.196, 217.806, 19.5782, 0.2288", "124.111, 217.487, 19.32, 0.2288", "122.988, 217.275, 19.32, 0.2288", "121.892, 217.017, 19.1425, 0.2288", "120.754, 216.937, 19.04, 0.2288", "119.628, 216.788, 19.04, 0.2542", "118.519, 216.902, 19.04, 0.3304" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "221.523, 228.636, 35.3265, 0.6102", "220.864, 227.775, 35.6944, 0.8644", "220.45, 226.75, 35.6216, 0.8644", "220.156, 225.68, 34.9891, 0.8136", "219.824, 224.62, 34.3207, 0.661", "219.658, 223.516, 33.8643, 0.5084", "219.708, 222.404, 33.2562, 0.4576", "219.952, 221.31, 33.0162, 0.5338", "220.501, 220.314, 32.8628, 0.6356", "220.913, 219.265, 32.3744, 0.6864", "220.784, 218.148, 31.9312, 0.7118", "220.262, 217.131, 31.9368, 0.7372", "220.239, 215.99, 32.0306, 0.8136" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "255.614, 405.09, 52.7808, 0.4322", "255.9, 405.801, 53.2, 0.4068", "256.458, 406.77, 53.2, 0.4322", "256.813, 407.858, 53.2, 0.356", "257.037, 408.979, 53.2, 0.2796", "257.268, 410.091, 53.2, 0.2288", "257.286, 411.235, 53.2, 0.2288", "257.401, 412.37, 53.2, 0.2542", "257.323, 413.509, 53.2081, 0.2796", "257.312, 414.646, 53.4486, 0.305", "257.393, 415.786, 53.48, 0.305", "257.273, 416.922, 53.48, 0.356", "257.128, 418.055, 53.48, 0.4322", "256.791, 419.116, 53.8745, 0.483", "256.714, 420.247, 54.04, 0.4322", "256.812, 421.381, 54.1915, 0.3304", "256.828, 422.51, 54.6176, 0.2542", "256.828, 423.651, 54.8279, 0.2288", "256.727, 424.785, 54.88, 0.2288", "256.813, 425.924, 54.88, 0.2542", "256.828, 427.067, 54.88, 0.2796", "256.789, 428.21, 54.88, 0.305", "256.435, 429.277, 54.88, 0.2796", "256.232, 430.402, 54.88, 0.2542", "255.965, 431.512, 54.88, 0.2288", "255.377, 432.491, 54.88, 0.2288", "254.936, 433.526, 54.88, 0.2288", "254.176, 434.349, 54.88, 0.2288", "253.969, 435.457, 54.88, 0.2288", "253.739, 436.556, 54.8772, 0.2288", "253.428, 437.645, 54.6, 0.2796", "253.283, 438.763, 54.332, 0.3304", "253.283, 439.907, 54.32, 0.3814", "253.283, 441.046, 54.474, 0.3304", "253.283, 442.186, 54.6, 0.2796", "253.283, 443.33, 54.6, 0.2288", "253.318, 444.473, 54.6, 0.2288", "253.465, 445.604, 54.49, 0.2288", "253.514, 446.739, 54.2696, 0.2288", "253.626, 447.812, 53.48, 0.2288", "253.626, 448.956, 53.48, 0.2288", "253.626, 450.1, 53.48, 0.2288", "253.626, 451.235, 53.76, 0.2288", "253.626, 452.379, 53.76, 0.2288", "253.626, 453.523, 53.76, 0.2288", "253.626, 454.667, 53.76, 0.2288", "253.626, 455.811, 53.76, 0.2288", "253.626, 456.955, 53.76, 0.2288", "253.626, 458.093, 53.655, 0.2288", "253.738, 459.072, 52.6481, 0.2288", "253.74, 460.215, 52.64, 0.2288", "253.74, 461.359, 52.64, 0.2288", "253.74, 462.503, 52.64, 0.2288", "253.74, 463.647, 52.64, 0.2288", "253.74, 464.791, 52.64, 0.2288", "253.74, 465.935, 52.694, 0.2288", "253.74, 467.075, 52.92, 0.2288", "253.729, 468.217, 52.9298, 0.2288", "253.333, 468.937, 54.32, 0.2288", "253.168, 470.056, 54.1615, 0.2288", "253.168, 471.198, 54.04, 0.2288", "253.484, 472.234, 53.366, 0.2288", "253.728, 473.307, 52.92, 0.2288", "253.74, 474.45, 52.92, 0.2288", "253.74, 475.594, 52.92, 0.2288", "253.74, 476.729, 53.2, 0.2288", "253.764, 477.873, 53.2, 0.2288", "254.055, 478.963, 53.3014, 0.2288", "254.206, 480.065, 53.48, 0.2288", "254.4, 481.19, 53.48, 0.2288", "254.426, 482.294, 54.0212, 0.2288", "254.432, 483.409, 54.5112, 0.2288", "254.837, 484.448, 54.6, 0.2288", "255.195, 485.521, 54.6, 0.2288", "255.227, 486.662, 54.6, 0.2288", "255.227, 487.805, 54.5437, 0.2796", "255.227, 488.943, 54.2685, 0.3814", "255.243, 489.968, 53.1927, 0.5084", "255.7, 490.972, 52.64, 0.5338", "256.125, 492.034, 52.64, 0.4576", "256.125, 493.177, 52.64, 0.356", "256.029, 494.317, 52.64, 0.3304", "255.781, 495.431, 52.64, 0.356", "255.571, 496.529, 52.9197, 0.356", "255.571, 497.653, 53.2, 0.305", "255.696, 498.774, 53.2, 0.2542", "256.257, 499.704, 53.7107, 0.2288", "256.294, 500.577, 52.08, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "255.614, 405.09, 52.7808, 0.4322", "254.909, 405.958, 52.7556, 0.2542", "254.008, 406.348, 53.9748, 0.305", "253.201, 407.139, 54.3497, 0.3814", "252.437, 407.986, 54.4796, 0.4068", "251.743, 408.878, 54.885, 0.3814", "251.076, 409.773, 55.0449, 0.305", "250.454, 410.679, 54.2718, 0.2542", "249.785, 411.478, 54.2175, 0.2288", "249.051, 412.212, 55.2782, 0.2288", "248.534, 413.192, 55.8146, 0.2796", "248.017, 414.176, 55.9532, 0.356", "247.297, 415.059, 55.7525, 0.483", "246.59, 415.955, 55.6077, 0.5338", "245.827, 416.782, 55.9518, 0.5592", "245.043, 417.585, 56.4718, 0.483", "244.28, 418.425, 56.7983, 0.4322", "243.59, 419.313, 57.2698, 0.3814", "242.853, 420.166, 57.4882, 0.3814", "241.976, 420.764, 58.1658, 0.356", "241.127, 421.403, 58.8, 0.305", "240.333, 422.221, 58.8, 0.2542", "239.699, 423.15, 58.8, 0.2288", "239.39, 424.216, 58.8, 0.2288", "238.835, 425.215, 58.819, 0.2288", "238.303, 426.213, 59.08, 0.2288", "237.534, 427.005, 59.08, 0.2288", "236.754, 427.806, 59.08, 0.2288", "236.411, 428.838, 59.619, 0.2288", "235.52, 429.518, 59.64, 0.2288", "234.775, 430.376, 59.64, 0.2288", "234.165, 431.328, 59.64, 0.2288", "233.951, 432.442, 59.7985, 0.2288", "233.583, 433.455, 60.5346, 0.2542", "232.488, 433.705, 60.76, 0.2796", "232.004, 434.571, 61.035, 0.305", "232.004, 435.715, 61.04, 0.2796", "231.747, 436.792, 61.339, 0.2542", "231.294, 437.8, 61.8579, 0.2288", "230.568, 438.676, 61.88, 0.2288", "229.816, 439.513, 61.88, 0.2288", "228.857, 440.059, 61.9853, 0.2288", "228.049, 440.677, 62.44, 0.2288", "227.394, 441.566, 62.9698, 0.2288", "226.663, 442.337, 63.5522, 0.2288", "225.766, 443.038, 63.56, 0.2288", "224.851, 443.72, 63.56, 0.2288", "223.984, 444.414, 64.0192, 0.2288", "223.172, 445.206, 64.12, 0.2288", "222.309, 445.955, 64.12, 0.2288", "221.484, 446.726, 64.3986, 0.2542", "220.696, 447.542, 64.4, 0.305", "219.68, 448.016, 64.5372, 0.3814", "219.053, 448.652, 65.8, 0.4068", "218.422, 449.601, 65.8, 0.3814", "217.685, 450.474, 65.8, 0.305", "217.049, 451.372, 66.2245, 0.2542", "216.434, 452.239, 66.64, 0.2288", "215.71, 453.121, 66.64, 0.2288", "215.049, 454.05, 66.7044, 0.2288", "214.462, 454.991, 67.34, 0.2288", "214.043, 455.884, 68.32, 0.2288", "213.7, 456.925, 68.32, 0.2288", "213.314, 457.821, 68.32, 0.2288", "212.385, 458.173, 68.32, 0.2288", "211.89, 459.175, 68.5017, 0.2542", "211.09, 459.938, 68.8246, 0.2796", "210.385, 460.579, 70.2822, 0.305", "209.704, 461.315, 70.56, 0.305", "208.85, 462.004, 70.56, 0.3304", "208.042, 462.813, 70.56, 0.4322", "207.751, 463.778, 70.28, 0.5592" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "254.361, 242.935, 52.92, 0.5084", "254.805, 243.968, 52.92, 0.3304", "255.329, 244.984, 52.92, 0.356", "255.807, 245.982, 53.2, 0.4068", "256.529, 246.81, 53.2, 0.4322", "256.774, 247.917, 53.2165, 0.483", "257.132, 248.954, 53.48, 0.5338", "257.847, 249.815, 53.48, 0.5848", "258.086, 250.92, 53.48, 0.5848", "258.086, 252.064, 53.4951, 0.5084", "258.107, 253.165, 54.1083, 0.4322", "258.21, 254.265, 54.6, 0.356", "258.726, 255.244, 54.8688, 0.3304", "258.971, 256.334, 54.88, 0.2796", "259.469, 257.282, 55.16, 0.305", "259.88, 258.318, 55.3938, 0.356", "260.557, 259.21, 55.5794, 0.4322", "260.951, 260.267, 55.9868, 0.4576", "261.508, 261.254, 56.1061, 0.4322", "261.873, 262.3, 56.546, 0.4068", "262.253, 263.374, 56.56, 0.3304", "262.583, 264.465, 56.56, 0.3304", "262.992, 265.533, 56.56, 0.356", "263.234, 266.597, 57.0668, 0.4576", "263.263, 267.736, 57.1318, 0.4576", "263.576, 268.766, 57.4, 0.4068", "263.774, 269.881, 57.4, 0.305", "263.955, 271.009, 57.4, 0.2542", "264.151, 272.134, 57.4, 0.2288", "264.542, 273.148, 57.4, 0.2542", "265.263, 274.01, 57.7466, 0.305", "266.015, 274.665, 58.8056, 0.356", "266.589, 275.492, 59.4961, 0.356", "266.896, 276.534, 60.039, 0.305", "266.896, 277.629, 60.5783, 0.2542", "266.656, 278.707, 60.7841, 0.2288", "266.119, 279.583, 61.32, 0.2288", "266.008, 280.121, 63.488, 0.2288", "265.951, 280.557, 66.0733, 0.2288", "265.656, 281.035, 68.2111, 0.2288", "264.768, 281.618, 69.2541, 0.2288", "263.882, 282.203, 70.2968, 0.2288", "263.479, 283.139, 71.2821, 0.2288", "263.222, 284.181, 72.2501, 0.2288", "262.966, 285.223, 73.218, 0.2288", "262.708, 286.265, 74.1863, 0.2288", "262.656, 287.3, 75.3242, 0.2288", "262.693, 288.33, 76.5363, 0.2288", "262.731, 289.361, 77.7484, 0.2288", "262.768, 290.392, 78.9603, 0.2288", "263.409, 291.21, 79.2994, 0.2288", "264.274, 291.802, 79.4774, 0.2288", "265.054, 291.275, 81.0698, 0.2288", "265.835, 290.748, 82.6619, 0.2288", "266.614, 290.22, 84.2542, 0.2288", "267.393, 289.693, 85.8466, 0.2288", "268.172, 289.165, 87.439, 0.2288", "268.951, 288.638, 89.031, 0.2288", "269.794, 288.175, 90.4616, 0.2288", "270.847, 287.918, 91.359, 0.2288", "271.901, 287.663, 92.2564, 0.2288", "272.953, 287.407, 93.1538, 0.2288", "274.007, 287.152, 94.0512, 0.2288", "275.06, 286.896, 94.9488, 0.2288", "276.112, 286.641, 95.8462, 0.2288", "277.166, 286.384, 96.7436, 0.2288", "278.219, 286.129, 97.641, 0.2288", "279.271, 285.873, 98.5387, 0.2288", "280.231, 286.105, 99.9306, 0.2288", "281.185, 286.359, 101.345, 0.2288", "282.14, 286.612, 102.759, 0.2288", "283.094, 286.866, 104.172, 0.2542", "284.047, 287.119, 105.586, 0.2796" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "254.361, 242.935, 52.92, 0.5084", "255.036, 242.986, 52.92, 0.4322", "256.179, 243.044, 52.92, 0.4576", "257.317, 243.1, 53.0754, 0.5338", "258.435, 243.1, 53.6396, 0.5338", "259.576, 243.1, 53.7608, 0.5848", "260.565, 243.595, 54.04, 0.6102" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "220.239, 215.99, 32.0306, 0.8136", "218.866, 216.035, 29.6892, 0.4576", "217.971, 215.447, 29.1472, 0.5848", "217.39, 214.532, 28.2688, 0.661", "216.775, 213.631, 27.501, 0.661", "216.04, 212.79, 26.9248, 0.6356", "215.327, 211.934, 26.3796, 0.5848", "214.545, 211.125, 26.2102, 0.6102", "213.598, 210.517, 25.7942, 0.6356", "212.698, 209.895, 25.0183, 0.661", "211.874, 209.155, 24.3177, 0.5848", "211.036, 208.405, 23.8599, 0.5084", "210.116, 207.891, 23.098, 0.4576", "209.073, 207.777, 22.1598, 0.4322", "207.948, 207.787, 21.7213, 0.3814", "206.939, 207.577, 20.9392, 0.3304", "206.749, 208.26, 18.9126, 0.3304", "205.743, 208.451, 18.3109, 0.3304" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "220.239, 215.99, 32.0306, 0.8136", "220.799, 214.4, 32.426, 0.4576", "220.721, 213.291, 31.92, 0.5592", "220.531, 212.175, 31.6366, 0.661", "220.333, 211.078, 31.2928, 0.6356", "219.797, 210.09, 31.5381, 0.5848", "219.292, 209.111, 31.6926, 0.5592", "219.051, 208.014, 31.1898, 0.6102", "218.777, 206.921, 30.8129, 0.6356", "218.465, 205.82, 30.77, 0.5848", "218.29, 204.704, 30.5665, 0.5084", "218.283, 203.571, 30.5469, 0.5338", "218.322, 202.434, 30.8241, 0.6102", "218.555, 201.325, 31.1539, 0.6356", "218.611, 200.208, 31.7103, 0.5848", "218.238, 199.159, 31.2561, 0.5848", "217.788, 198.126, 30.7882, 0.6356", "217.269, 197.111, 30.5396, 0.661", "216.861, 196.156, 29.3952, 0.6102", "216.571, 195.059, 29.6587, 0.661", "216.087, 194.022, 29.741, 0.7372" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "256.294, 500.577, 52.08, 0.2288", "256.598, 500.84, 52.08, 0.4068", "256.828, 501.93, 52.0551, 0.4068", "256.828, 503.034, 51.3906, 0.4068", "256.828, 504.172, 51.24, 0.3304", "257.037, 505.198, 50.96, 0.2796", "257.273, 506.291, 50.68, 0.2288", "257.629, 507.306, 50.68, 0.2288", "258.026, 507.927, 49.2192, 0.2542", "258.544, 508.549, 47.6896, 0.305", "258.551, 509.657, 47.1794, 0.356", "258.876, 510.679, 46.48, 0.356", "258.887, 511.823, 46.48, 0.3304", "258.843, 512.809, 45.3306, 0.305", "258.773, 513.814, 44.151, 0.305", "258.671, 514.943, 43.958, 0.2796", "258.561, 516.047, 43.5095, 0.2542", "258.197, 517.032, 42.84, 0.2542", "258.041, 518.164, 42.84, 0.3304", "257.972, 519.303, 42.7512, 0.4068", "257.609, 520.332, 42.009, 0.4322", "257.485, 521.455, 41.72, 0.3814", "257.405, 522.591, 41.6326, 0.4068", "257.723, 523.652, 41.3837, 0.5084", "258.368, 524.521, 40.8456, 0.6102", "258.658, 525.422, 40.0632, 0.5592", "258.686, 526.565, 40.04, 0.4576", "259.193, 527.533, 39.7222, 0.3814", "259.798, 528.459, 39.2613, 0.3814", "260.332, 529.428, 38.92, 0.3304", "260.374, 530.568, 38.8805, 0.2796", "260.387, 531.681, 38.36, 0.2288", "260.776, 532.737, 38.36, 0.2288", "261.287, 533.496, 37.4413, 0.2288", "261.404, 534.462, 36.4, 0.2288", "261.88, 535.488, 36.4, 0.2288", "261.977, 536.609, 36.3927, 0.2542", "261.977, 537.68, 35.7056, 0.305", "262.471, 538.609, 35.28, 0.356", "263.217, 539.446, 34.9297, 0.356", "264.1, 540.085, 34.72, 0.305", "265.035, 540.68, 34.72, 0.2796", "265.565, 541.665, 34.4669, 0.2796", "266.027, 542.668, 33.88, 0.305", "266.73, 543.389, 33.0394, 0.2796", "267.227, 544.159, 31.645, 0.2542", "268.077, 544.792, 31.8298, 0.2288", "268.848, 545.522, 32.2, 0.2288", "268.954, 546.603, 31.92, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "256.294, 500.577, 52.08, 0.2288", "256.243, 500.741, 52.36, 0.2288", "256.384, 500.969, 52.36, 0.2542", "256.599, 502.065, 52.36, 0.2796", "256.599, 503.203, 52.5294, 0.3304", "256.599, 504.344, 52.64, 0.3304", "256.684, 505.475, 52.7649, 0.3304", "257.125, 506.501, 52.92, 0.305", "257.454, 507.595, 52.92, 0.305", "257.986, 508.578, 52.92, 0.305", "258.701, 509.375, 53.0505, 0.3304", "259.277, 510.356, 53.2459, 0.356", "259.802, 511.25, 53.9904, 0.4068", "259.783, 512.328, 54.6, 0.4068", "259.46, 513.271, 55.16, 0.4068", "259.508, 514.411, 55.16, 0.356", "259.789, 515.505, 55.16, 0.305", "259.669, 516.642, 55.16, 0.2542", "259.574, 517.781, 55.16, 0.2288", "259.479, 518.917, 55.16, 0.2288", "259.46, 520.06, 55.16, 0.2288", "259.46, 521.204, 55.16, 0.2288", "259.46, 522.348, 55.16, 0.2288", "259.46, 523.492, 55.16, 0.2288", "259.46, 524.519, 56.1921, 0.2288", "259.46, 525.633, 56.56, 0.2288", "259.304, 526.764, 56.56, 0.2288", "259.116, 527.89, 56.5799, 0.2288", "259.116, 529.007, 57.0494, 0.2288", "259.076, 530.144, 57.12, 0.2288", "258.763, 531.237, 57.12, 0.2288", "258.547, 532.342, 57.12, 0.2288", "258.544, 533.327, 58.2722, 0.2288", "258.504, 534.43, 58.9375, 0.2288", "258.411, 535.559, 59.08, 0.2288", "258.001, 536.593, 59.08, 0.2288", "257.972, 537.735, 59.08, 0.2288", "257.901, 538.827, 59.6008, 0.2288", "257.458, 539.764, 60.7578, 0.2288", "257.128, 540.828, 61.04, 0.2288", "256.716, 541.894, 61.0708, 0.2288", "256.714, 543.0, 61.6, 0.2288", "256.485, 543.887, 62.5806, 0.2288", "256.485, 545.023, 62.72, 0.2288", "256.485, 546.167, 62.72, 0.2288", "256.485, 547.195, 63.6913, 0.2288", "256.485, 548.305, 64.12, 0.2288", "256.485, 549.45, 64.12, 0.2288", "256.512, 550.592, 64.12, 0.2542", "256.714, 551.708, 64.12, 0.305", "257.136, 552.677, 64.4815, 0.356", "257.799, 553.432, 65.52, 0.356", "258.184, 554.493, 65.52, 0.305", "258.57, 555.566, 65.52, 0.2542", "258.758, 556.694, 65.52, 0.2288", "259.3, 557.664, 65.52, 0.2288", "259.46, 558.759, 65.52, 0.2288", "259.46, 559.903, 65.52, 0.2288", "259.75, 560.786, 65.8423, 0.2288", "259.968, 561.813, 66.9578, 0.2288", "260.188, 562.84, 68.0733, 0.2288", "260.405, 563.866, 69.1888, 0.2288", "260.623, 564.892, 70.3044, 0.2288", "260.841, 565.919, 71.4199, 0.2288", "260.802, 567.001, 72.0658, 0.2288", "260.602, 568.117, 72.4156, 0.2288", "260.4, 569.235, 72.7653, 0.2288", "260.197, 570.352, 73.115, 0.2288", "259.996, 571.468, 73.4644, 0.2288", "259.794, 572.586, 73.8142, 0.2288", "259.593, 573.702, 74.1639, 0.2288", "259.392, 574.82, 74.5136, 0.2288", "259.189, 575.937, 74.8633, 0.2288", "258.988, 577.053, 75.213, 0.2288", "258.648, 578.132, 75.511, 0.2288", "258.212, 579.184, 75.7733, 0.2288", "257.776, 580.237, 76.0357, 0.2288", "257.341, 581.289, 76.298, 0.2288", "256.905, 582.342, 76.5604, 0.2288", "256.745, 583.446, 76.6083, 0.2288", "256.783, 584.589, 76.5005, 0.2288", "256.822, 585.731, 76.3924, 0.2288", "256.86, 586.873, 76.2846, 0.2288", "256.899, 588.016, 76.1768, 0.2288", "256.938, 589.159, 76.0687, 0.2288", "256.977, 590.301, 75.9609, 0.2288", "257.014, 591.443, 75.8531, 0.2288", "257.053, 592.586, 75.745, 0.2288", "257.092, 593.728, 75.6372, 0.2288", "257.132, 594.871, 75.5292, 0.2288", "257.171, 596.014, 75.4214, 0.2288", "256.973, 597.099, 75.3561, 0.2542", "256.611, 598.119, 75.3561, 0.305", "256.755, 599.241, 75.4191, 0.356", "256.774, 600.385, 75.521, 0.356", "256.796, 601.528, 75.6227, 0.305", "256.814, 602.671, 75.7243, 0.2542", "256.835, 603.813, 75.826, 0.2288", "256.854, 604.956, 75.9276, 0.2288", "256.874, 606.1, 76.0292, 0.2288", "256.895, 607.243, 76.1309, 0.2542", "256.914, 608.386, 76.2325, 0.3304" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "260.565, 243.595, 54.04, 0.6102", "260.87, 243.138, 55.44, 0.305", "261.501, 242.296, 55.44, 0.305", "262.312, 241.572, 55.6696, 0.305", "263.288, 241.179, 56.3637, 0.305", "264.189, 240.539, 56.84, 0.2796", "264.964, 239.739, 56.847, 0.2542", "265.656, 238.858, 57.2592, 0.2288", "266.47, 238.168, 58.0983, 0.2288", "267.415, 237.602, 58.52, 0.2288", "268.51, 237.278, 58.52, 0.2288", "269.261, 236.488, 58.52, 0.2542", "270.02, 235.773, 58.8512, 0.2796", "270.931, 235.178, 59.5689, 0.3304", "271.634, 234.343, 59.92, 0.3304", "272.197, 233.407, 60.3764, 0.3304", "272.44, 232.465, 61.754, 0.2796", "273.013, 231.589, 62.44, 0.2796", "273.796, 230.785, 62.44, 0.2796", "274.462, 229.993, 62.6772, 0.305", "274.904, 229.206, 64.0926, 0.2796", "275.026, 228.087, 64.3922, 0.2542", "275.641, 227.219, 65.24, 0.2288", "276.35, 226.398, 65.814, 0.2288", "276.878, 225.423, 66.3289, 0.2288", "277.664, 224.606, 66.5552, 0.2288", "278.429, 223.8, 66.64, 0.2288", "279.106, 222.885, 66.64, 0.2288", "279.876, 222.086, 67.1698, 0.2288", "280.715, 221.382, 67.7331, 0.2288", "281.31, 220.594, 68.32, 0.2288", "281.981, 219.857, 68.8576, 0.2288", "282.779, 219.061, 69.16, 0.2288", "283.339, 218.098, 69.44, 0.2288", "284.147, 217.385, 69.44, 0.2288", "284.716, 216.406, 69.44, 0.2288", "285.154, 215.436, 69.6578, 0.2288", "285.485, 214.372, 70.2937, 0.2288", "285.817, 213.308, 70.9296, 0.2288", "286.149, 212.244, 71.5652, 0.2288", "286.479, 211.181, 72.2011, 0.2288", "286.811, 210.117, 72.837, 0.2542", "287.143, 209.053, 73.4726, 0.305", "287.475, 207.99, 74.1084, 0.356", "287.849, 206.934, 74.6382, 0.356", "288.285, 205.887, 75.0184, 0.305", "288.719, 204.84, 75.399, 0.2542", "289.154, 203.793, 75.7795, 0.2288", "289.59, 202.748, 76.16, 0.2288", "290.025, 201.701, 76.5402, 0.2288", "290.461, 200.654, 76.9208, 0.2288", "290.895, 199.607, 77.3013, 0.2288", "291.331, 198.562, 77.6815, 0.2288", "291.841, 197.563, 77.985, 0.2288", "292.651, 196.754, 77.985, 0.2288", "293.253, 195.839, 78.2849, 0.2288", "293.579, 194.78, 78.9852, 0.2288", "293.905, 193.721, 79.6852, 0.2288", "294.231, 192.663, 80.3855, 0.2288", "294.606, 191.598, 80.7699, 0.2288", "295.007, 190.53, 81.0015, 0.2288", "295.405, 189.462, 81.233, 0.2288", "295.804, 188.394, 81.4646, 0.2288", "296.203, 187.327, 81.6962, 0.2288", "296.603, 186.258, 81.928, 0.2288", "296.962, 185.331, 82.7375, 0.2288", "297.384, 184.326, 83.587, 0.2288", "297.805, 183.321, 84.4365, 0.2288", "298.227, 182.316, 85.286, 0.2288", "298.649, 181.311, 86.1356, 0.2288", "299.102, 180.312, 86.9193, 0.2288", "299.632, 179.329, 87.5336, 0.2288", "300.159, 178.346, 88.1476, 0.2288", "300.689, 177.363, 88.762, 0.2542", "301.217, 176.381, 89.376, 0.2796" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "260.565, 243.595, 54.04, 0.6102", "260.663, 243.839, 54.04, 0.305", "261.225, 244.783, 54.04, 0.356", "262.1, 245.48, 54.04, 0.4322", "262.879, 246.301, 54.04, 0.5338", "263.822, 246.906, 54.04, 0.5338", "264.844, 247.413, 54.04, 0.483", "265.777, 248.059, 54.04, 0.4068", "266.815, 248.477, 54.04, 0.356", "267.914, 248.751, 54.1671, 0.356", "269.007, 249.081, 54.32, 0.356", "270.024, 249.581, 54.32, 0.3814", "271.031, 250.045, 54.7688, 0.4068", "272.033, 250.465, 55.4022, 0.4322", "272.949, 251.132, 55.6083, 0.4576", "273.908, 251.645, 56.2598, 0.4068", "274.512, 252.14, 58.0854, 0.3304", "275.141, 252.658, 59.691, 0.2542", "275.883, 253.491, 59.92, 0.2288", "276.447, 254.432, 60.0603, 0.2288", "276.592, 255.464, 60.7684, 0.2288", "276.619, 256.571, 61.2942, 0.2288", "276.734, 257.407, 62.7645, 0.2288", "276.679, 258.533, 63.0, 0.2288", "276.619, 259.672, 63.0, 0.2288", "276.356, 260.575, 64.0808, 0.2288", "276.162, 261.457, 65.6936, 0.2288", "275.803, 262.389, 66.4457, 0.2288", "275.465, 263.411, 67.3935, 0.2288", "275.126, 264.432, 68.3413, 0.2288", "274.809, 265.463, 69.2227, 0.2542", "274.775, 266.606, 69.2227, 0.2796", "274.768, 267.663, 69.7432, 0.305", "274.836, 268.478, 71.6993, 0.2796", "275.49, 269.157, 72.8255, 0.2542", "276.401, 269.776, 73.593, 0.2288", "277.31, 270.394, 74.3607, 0.2288", "278.22, 271.013, 75.1282, 0.2288", "279.129, 271.631, 75.896, 0.2288", "280.09, 272.197, 76.4898, 0.2288", "281.089, 272.722, 76.9479, 0.2288", "282.089, 273.246, 77.406, 0.2288", "283.087, 273.77, 77.8641, 0.2288", "284.087, 274.295, 78.3224, 0.2288", "285.086, 274.819, 78.7805, 0.2288", "286.086, 275.342, 79.2386, 0.2288", "287.086, 275.868, 79.6967, 0.2288", "288.085, 276.392, 80.155, 0.2288", "289.085, 276.915, 80.6131, 0.2288", "289.988, 277.594, 81.0566, 0.2288", "290.892, 278.271, 81.5004, 0.2288", "291.796, 278.948, 81.944, 0.2288", "292.699, 279.627, 82.3878, 0.2288", "293.611, 280.285, 82.8509, 0.2288", "294.654, 280.639, 83.6136, 0.2288", "295.695, 280.993, 84.376, 0.2288", "296.738, 281.347, 85.1388, 0.2288", "297.78, 281.701, 85.9015, 0.2288", "298.761, 282.201, 86.5225, 0.2288", "299.672, 282.867, 86.9812, 0.2288", "300.583, 283.532, 87.4401, 0.2288", "301.494, 284.198, 87.8987, 0.2288", "302.405, 284.864, 88.3574, 0.2288", "303.317, 285.531, 88.816, 0.2288", "304.048, 286.353, 89.4768, 0.2288", "304.715, 287.233, 90.2101, 0.2288", "305.382, 288.113, 90.9434, 0.2288", "306.049, 288.993, 91.677, 0.2288", "306.716, 289.874, 92.4106, 0.2288", "307.41, 290.734, 93.1157, 0.2288", "308.152, 291.562, 93.7706, 0.2288", "308.895, 292.39, 94.4255, 0.2288", "309.638, 293.217, 95.0804, 0.2288", "310.382, 294.046, 95.7354, 0.2288", "311.123, 294.874, 96.3903, 0.2288", "311.867, 295.701, 97.0452, 0.2796", "312.609, 296.529, 97.7001, 0.3304" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "216.087, 194.022, 29.741, 0.7372", "215.95, 194.06, 30.8, 0.356", "215.762, 193.658, 30.8, 0.3814", "215.758, 192.514, 30.8, 0.4322", "215.439, 191.435, 30.8, 0.4576", "215.064, 190.355, 30.8, 0.4322", "214.865, 189.229, 30.8, 0.4068", "214.73, 188.095, 30.8, 0.356", "214.74, 186.951, 30.8, 0.305", "215.036, 185.868, 31.0607, 0.2796", "215.29, 184.83, 32.0354, 0.2796", "215.696, 183.834, 32.737, 0.3304", "215.993, 182.735, 32.76, 0.356", "216.286, 181.634, 32.76, 0.3814", "216.508, 180.559, 32.2216, 0.3814", "216.842, 179.505, 31.92, 0.356", "216.902, 178.363, 31.92, 0.356", "216.902, 177.219, 31.92, 0.356", "216.827, 176.083, 31.9827, 0.4322", "216.607, 174.997, 32.5234, 0.5084", "216.56, 173.889, 32.9048, 0.5848", "216.56, 172.779, 33.488, 0.5592", "216.56, 171.637, 33.6, 0.5084", "216.56, 170.493, 33.6, 0.4322", "216.51, 169.357, 33.7218, 0.4068", "216.446, 168.223, 33.88, 0.3814", "216.446, 167.081, 33.9674, 0.4322", "216.446, 165.956, 34.4448, 0.483", "216.446, 164.874, 35.0708, 0.483", "216.446, 163.799, 35.84, 0.3814", "216.446, 162.655, 35.84, 0.305", "216.446, 161.511, 35.84, 0.2796", "216.454, 160.367, 35.84, 0.3304", "216.6, 159.233, 35.84, 0.356", "216.674, 158.096, 35.8672, 0.3814", "216.674, 156.959, 36.1334, 0.356", "216.81, 155.838, 36.4, 0.3304", "217.001, 154.712, 36.4, 0.305", "217.225, 153.604, 36.7189, 0.305", "217.247, 152.661, 37.7877, 0.2796", "217.351, 151.526, 37.8, 0.2542", "217.919, 150.63, 37.8, 0.2288", "217.974, 149.497, 37.9033, 0.2288", "218.293, 148.457, 38.64, 0.2288", "218.79, 147.441, 38.64, 0.2542", "218.848, 146.302, 38.7374, 0.2796", "219.044, 145.215, 39.3775, 0.305", "219.435, 144.176, 39.6724, 0.2796", "220.044, 143.214, 39.76, 0.2542", "220.855, 142.464, 39.76, 0.2288", "221.508, 141.659, 40.04, 0.2288", "221.818, 140.569, 40.04, 0.2288", "222.226, 139.552, 40.2016, 0.2288", "222.433, 138.46, 40.6, 0.2288", "222.738, 137.416, 40.6, 0.2288", "222.767, 136.274, 40.6428, 0.2288", "222.872, 135.195, 41.4442, 0.2288", "223.074, 134.127, 42.0, 0.2288", "223.238, 133.038, 42.1842, 0.2288", "223.469, 131.941, 42.28, 0.2288", "223.882, 130.932, 42.3525, 0.2288", "224.35, 130.072, 43.12, 0.2288", "224.89, 129.079, 43.2149, 0.2288", "225.505, 128.239, 44.3254, 0.2288", "226.314, 127.63, 44.8, 0.2288", "226.439, 126.51, 44.8, 0.2288", "226.902, 125.646, 44.0115, 0.2288", "227.361, 124.738, 43.4, 0.2288", "227.767, 123.689, 43.4, 0.2288", "227.885, 122.568, 43.12, 0.2288", "228.351, 121.708, 42.5508, 0.2288", "228.492, 120.627, 42.28, 0.2288", "228.794, 119.526, 42.28, 0.2288", "229.445, 118.722, 42.9234, 0.2288", "229.572, 117.624, 43.1978, 0.2288", "229.715, 116.532, 43.68, 0.2288", "229.706, 115.406, 43.2849, 0.2288", "229.491, 114.295, 43.12, 0.2288", "229.486, 113.152, 43.12, 0.2288", "229.486, 112.071, 42.4463, 0.2542", "229.486, 110.931, 42.28, 0.2796", "229.486, 109.795, 42.1574, 0.3304", "229.344, 108.818, 40.8668, 0.3304", "229.2, 107.871, 39.4064, 0.3304", "229.144, 106.739, 39.2, 0.305", "229.141, 105.595, 39.2, 0.305", "229.03, 104.485, 38.787, 0.356", "229.03, 103.366, 38.36, 0.4322", "228.822, 102.248, 38.36, 0.5084", "228.7, 101.136, 38.0685, 0.483", "228.915, 100.214, 36.533, 0.3814", "228.96, 99.2882, 35.0347, 0.2796", "229.682, 98.7205, 33.88, 0.2288", "230.288, 97.835, 33.88, 0.2288", "230.811, 96.8919, 33.88, 0.2288", "231.783, 96.2999, 33.88, 0.2288", "232.643, 95.581, 33.88, 0.2288", "233.096, 94.7028, 33.88, 0.2288", "233.749, 93.8609, 33.88, 0.2288", "234.521, 93.3316, 33.88, 0.2542", "234.756, 92.236, 33.88, 0.2796", "235.545, 91.411, 33.88, 0.305", "236.465, 90.971, 34.384, 0.2796", "236.588, 89.8573, 34.44, 0.2542", "237.402, 89.2013, 33.8918, 0.2288", "238.436, 89.1176, 32.9459, 0.2288", "239.142, 88.8369, 31.351, 0.2288", "239.555, 87.9258, 30.2865, 0.2288", "240.337, 87.2805, 30.0434, 0.2288", "241.068, 86.6914, 29.12, 0.2288", "241.883, 86.0381, 28.84, 0.2288", "243.006, 85.8469, 28.84, 0.2288", "244.064, 85.4372, 28.84, 0.2288", "244.333, 84.347, 28.8691, 0.2288", "244.754, 83.4076, 29.3272, 0.2542", "245.846, 83.1688, 29.4, 0.3304" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "216.087, 194.022, 29.741, 0.7372", "214.991, 193.582, 29.5781, 0.4068", "214.155, 192.835, 29.1992, 0.4322", "213.545, 191.915, 28.5219, 0.3814", "212.809, 191.09, 27.9535, 0.3304", "212.385, 190.224, 26.7529, 0.3814", "212.301, 189.141, 26.1708, 0.483", "211.831, 188.139, 25.5808, 0.5848", "211.605, 187.142, 24.353, 0.5848", "211.853, 186.093, 23.4917, 0.5084", "211.773, 184.979, 24.0668, 0.483", "210.964, 184.245, 23.9061, 0.483", "210.219, 183.557, 23.1552, 0.5592", "209.881, 182.606, 21.8562, 0.5848", "209.648, 181.593, 21.107, 0.5848", "209.437, 180.489, 21.1991, 0.5338", "209.072, 179.459, 20.4764, 0.4322", "208.762, 178.396, 20.16, 0.356", "208.232, 177.549, 20.16, 0.356", "207.376, 177.143, 19.32, 0.4322", "206.976, 176.1, 18.9241, 0.5338", "206.337, 175.177, 18.48, 0.5592", "205.946, 174.111, 18.48, 0.5848", "205.405, 173.116, 18.2104, 0.5338", "204.911, 172.158, 17.3872, 0.5084", "204.767, 171.038, 17.1268, 0.4322", "204.227, 170.081, 16.8725, 0.4576", "203.178, 169.64, 16.8, 0.5084", "202.219, 169.048, 16.5819, 0.6102", "201.374, 168.325, 16.1622, 0.6102", "201.344, 167.209, 15.7676, 0.5338", "200.659, 166.566, 14.84, 0.4322" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_26", "dend_11", "dend_0", "dend_35", "dend_34", "dend_30", "dend_27", "dend_19", "dend_12", "dend_8", "dend_1", "dend_32", "dend_31", "dend_29", "dend_28", "dend_25", "dend_20", "dend_18", "dend_13", "dend_10", "dend_9", "dend_7", "dend_2", "dend_22", "dend_21", "dend_17", "dend_14", "dend_6", "dend_3", "dend_24", "dend_23", "dend_16", "dend_15", "dend_5", "dend_4" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.16"
  }, {
    "group" : "axon",
    "value" : "2.16"
  }, {
    "group" : "dend",
    "value" : "2.16"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "143.65"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "5.116286E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.058520183",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.1192528E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.051060237",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.65076053",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.033385947",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.007750486",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0027340092",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.6705535E-4",
    "erev" : "-95.537094"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "6.6246354E-4",
    "erev" : "-95.537094"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "9.801983E-6",
    "erev" : "-95.537094"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "5.647897E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.003211478",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472912177

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_12
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_33, dend_26, dend_11, dend_0, dend_35, dend_34, dend_30, dend_27, dend_19, dend_12, dend_8, dend_1, dend_32, dend_31, dend_29, dend_28, dend_25, dend_20, dend_18, dend_13, dend_10, dend_9, dend_7, dend_2, dend_22, dend_21, dend_17, dend_14, dend_6, dend_3, dend_24, dend_23, dend_16, dend_15, dend_5, dend_4]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49995778096766)
    connect dend_33(0), soma_0(0.49995778096766)
    connect dend_26(0), soma_0(0.49995778096766)
    connect dend_11(0), soma_0(0.49995778096766)
    connect dend_0(0), soma_0(0.49995778096766)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 231.573, 233.834, 35.28, 11.8424 ) }
    soma_0 { pt3dadd( 237.494, 233.834, 35.28, 11.8424 ) }
    soma_0 { pt3dadd( 243.416, 233.834, 35.28, 11.8424 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 237.495, 233.834, 35.28, 1.0 ) }
    axon_0 { pt3dadd( 243.336, 247.65, 35.28, 1.0 ) }
    axon_0 { pt3dadd( 249.177, 261.466, 35.28, 1.0 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 6/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 240.975, 238.972, 35.8481, 0.3814 ) }
    dend_33 { pt3dadd( 241.84, 239.353, 34.4294, 0.4576 ) }
    dend_33 { pt3dadd( 242.614, 239.678, 32.5332, 0.661 ) }
    dend_33 { pt3dadd( 243.465, 240.397, 31.9152, 0.7626 ) }
    dend_33 { pt3dadd( 244.395, 241.065, 31.8844, 0.7626 ) }
    dend_33 { pt3dadd( 245.262, 241.794, 31.7251, 0.6102 ) }
    dend_33 { pt3dadd( 245.932, 242.706, 31.5266, 0.5592 ) }
    dend_33 { pt3dadd( 246.515, 243.646, 32.0214, 0.5848 ) }
    dend_33 { pt3dadd( 247.234, 244.451, 32.8115, 0.6356 ) }
    dend_33 { pt3dadd( 248.105, 245.182, 32.8485, 0.6356 ) }
    dend_33 { pt3dadd( 248.961, 245.823, 32.0754, 0.5848 ) }
    dend_33 { pt3dadd( 249.765, 246.354, 30.6043, 0.6102 ) }
    dend_33 { pt3dadd( 250.68, 246.868, 29.7587, 0.661 ) }
    dend_33 { pt3dadd( 251.527, 247.618, 29.6792, 0.7626 ) }
    dend_33 { pt3dadd( 252.15, 248.576, 29.675, 0.788 ) }
    dend_33 { pt3dadd( 252.687, 249.583, 29.652, 0.788 ) }
    dend_33 { pt3dadd( 253.13, 250.633, 29.5142, 0.788 ) }
    dend_33 { pt3dadd( 253.665, 251.625, 29.0752, 0.839 ) }
    dend_33 { pt3dadd( 254.262, 252.571, 28.5202, 0.8644 ) }
    dend_33 { pt3dadd( 254.918, 253.483, 28.0885, 0.839 ) }
    dend_33 { pt3dadd( 255.652, 254.312, 27.4582, 0.7626 ) }
    dend_33 { pt3dadd( 256.417, 255.159, 27.2401, 0.661 ) }
    dend_33 { pt3dadd( 256.958, 256.129, 26.747, 0.5592 ) }
    dend_33 { pt3dadd( 257.557, 257.081, 26.8142, 0.483 ) }
    dend_33 { pt3dadd( 258.432, 257.595, 26.4874, 0.5592 ) }
    dend_33 { pt3dadd( 259.476, 257.692, 25.3949, 0.6864 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 241.814, 228.728, 37.5626, 0.7372 ) }
    dend_26 { pt3dadd( 242.398, 227.766, 37.7896, 0.8898 ) }
    dend_26 { pt3dadd( 242.859, 226.74, 38.2886, 0.8644 ) }
    dend_26 { pt3dadd( 243.275, 225.695, 38.6366, 0.7372 ) }
    dend_26 { pt3dadd( 243.428, 224.575, 38.7629, 0.6864 ) }
    dend_26 { pt3dadd( 243.348, 223.461, 39.2529, 0.7372 ) }
    dend_26 { pt3dadd( 242.995, 222.432, 39.8796, 0.8136 ) }
    dend_26 { pt3dadd( 242.482, 221.467, 40.6227, 0.8136 ) }
    dend_26 { pt3dadd( 242.234, 220.442, 41.6968, 0.788 ) }
    dend_26 { pt3dadd( 242.676, 219.416, 42.2038, 0.8136 ) }
    dend_26 { pt3dadd( 243.219, 218.45, 42.8907, 0.8644 ) }
    dend_26 { pt3dadd( 243.596, 217.374, 43.1203, 0.9152 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 44/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 240.684, 238.46, 38.6478, 0.5592 ) }
    dend_11 { pt3dadd( 241.456, 238.625, 40.6739, 0.483 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 46/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 232.505, 230.775, 35.28, 0.5338 ) }
    dend_0 { pt3dadd( 231.45, 231.199, 35.28, 0.5592 ) }
    dend_0 { pt3dadd( 230.352, 231.518, 35.28, 0.5592 ) }
    dend_0 { pt3dadd( 229.208, 231.516, 35.28, 0.5084 ) }
    dend_0 { pt3dadd( 228.079, 231.328, 35.28, 0.5084 ) }
    dend_0 { pt3dadd( 226.963, 231.085, 35.28, 0.5338 ) }
    dend_0 { pt3dadd( 225.818, 231.062, 35.28, 0.661 ) }
    dend_0 { pt3dadd( 224.683, 230.931, 35.2803, 0.9152 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 54/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 249.177, 261.466, 35.28, 1.0 ) }
    axon_1 { pt3dadd( 255.018, 275.282, 35.28, 1.0 ) }
    axon_1 { pt3dadd( 260.86, 289.098, 35.28, 1.0 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 57/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 259.476, 257.692, 25.3949, 0.6864 ) }
    dend_35 { pt3dadd( 259.244, 257.588, 23.8, 0.4576 ) }
    dend_35 { pt3dadd( 259.346, 258.724, 23.8, 0.5592 ) }
    dend_35 { pt3dadd( 259.366, 259.862, 23.5942, 0.5338 ) }
    dend_35 { pt3dadd( 259.458, 260.999, 23.52, 0.483 ) }
    dend_35 { pt3dadd( 259.752, 261.896, 22.96, 0.5084 ) }
    dend_35 { pt3dadd( 260.556, 262.557, 22.12, 0.5848 ) }
    dend_35 { pt3dadd( 261.251, 263.466, 22.12, 0.6864 ) }
    dend_35 { pt3dadd( 261.937, 264.381, 22.12, 0.6864 ) }
    dend_35 { pt3dadd( 262.556, 265.301, 21.5533, 0.6356 ) }
    dend_35 { pt3dadd( 263.007, 266.189, 20.4375, 0.5338 ) }
    dend_35 { pt3dadd( 263.222, 267.146, 19.1559, 0.5084 ) }
    dend_35 { pt3dadd( 264.002, 267.959, 19.04, 0.483 ) }
    dend_35 { pt3dadd( 264.715, 268.835, 18.7194, 0.4576 ) }
    dend_35 { pt3dadd( 265.342, 269.526, 18.2, 0.4322 ) }
    dend_35 { pt3dadd( 266.051, 270.217, 17.8942, 0.4576 ) }
    dend_35 { pt3dadd( 266.702, 271.011, 17.36, 0.5084 ) }
    dend_35 { pt3dadd( 267.493, 271.826, 17.36, 0.483 ) }
    dend_35 { pt3dadd( 268.128, 272.749, 17.36, 0.4068 ) }
    dend_35 { pt3dadd( 268.155, 273.846, 16.7597, 0.305 ) }
    dend_35 { pt3dadd( 268.155, 274.974, 16.2963, 0.2542 ) }
    dend_35 { pt3dadd( 268.194, 276.004, 15.2967, 0.2288 ) }
    dend_35 { pt3dadd( 269.299, 276.047, 15.12, 0.2288 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 80/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 259.476, 257.692, 25.3949, 0.6864 ) }
    dend_34 { pt3dadd( 260.854, 258.043, 26.038, 0.2288 ) }
    dend_34 { pt3dadd( 261.993, 258.093, 26.2035, 0.2288 ) }
    dend_34 { pt3dadd( 263.132, 258.13, 26.297, 0.2542 ) }
    dend_34 { pt3dadd( 264.257, 258.32, 26.341, 0.2796 ) }
    dend_34 { pt3dadd( 265.313, 258.748, 26.4592, 0.356 ) }
    dend_34 { pt3dadd( 266.41, 258.901, 26.8358, 0.4322 ) }
    dend_34 { pt3dadd( 267.497, 258.63, 26.4174, 0.5338 ) }
    dend_34 { pt3dadd( 268.635, 258.658, 26.4706, 0.5338 ) }
    dend_34 { pt3dadd( 269.745, 258.867, 26.6, 0.483 ) }
    dend_34 { pt3dadd( 270.865, 259.094, 26.6, 0.4068 ) }
    dend_34 { pt3dadd( 272.001, 259.155, 26.542, 0.3814 ) }
    dend_34 { pt3dadd( 273.079, 259.509, 26.32, 0.356 ) }
    dend_34 { pt3dadd( 274.187, 259.796, 26.32, 0.3304 ) }
    dend_34 { pt3dadd( 275.177, 260.346, 26.32, 0.3304 ) }
    dend_34 { pt3dadd( 276.231, 260.723, 26.255, 0.356 ) }
    dend_34 { pt3dadd( 277.162, 261.365, 25.8807, 0.4068 ) }
    dend_34 { pt3dadd( 278.264, 261.65, 25.76, 0.4322 ) }
    dend_34 { pt3dadd( 279.401, 261.77, 25.7351, 0.483 ) }
    dend_34 { pt3dadd( 280.467, 262.114, 25.48, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_34 { pt3dadd( 281.53, 262.506, 25.48, 0.4068 ) }
    dend_34 { pt3dadd( 282.552, 262.999, 25.366, 0.305 ) }
    dend_34 { pt3dadd( 283.671, 263.12, 24.9897, 0.2542 ) }
    dend_34 { pt3dadd( 284.795, 263.12, 24.64, 0.2288 ) }
    dend_34 { pt3dadd( 285.937, 263.159, 24.64, 0.2288 ) }
    dend_34 { pt3dadd( 287.067, 263.234, 24.3919, 0.2796 ) }
    dend_34 { pt3dadd( 288.196, 263.288, 24.08, 0.356 ) }
    dend_34 { pt3dadd( 289.29, 263.606, 24.071, 0.4576 ) }
    dend_34 { pt3dadd( 290.23, 264.148, 23.4178, 0.483 ) }
    dend_34 { pt3dadd( 291.147, 264.707, 22.5285, 0.4576 ) }
    dend_34 { pt3dadd( 292.076, 265.228, 21.5891, 0.3814 ) }
    dend_34 { pt3dadd( 293.184, 265.5, 21.56, 0.305 ) }
    dend_34 { pt3dadd( 294.202, 265.855, 20.7606, 0.2542 ) }
    dend_34 { pt3dadd( 295.225, 266.281, 20.5058, 0.2288 ) }
    dend_34 { pt3dadd( 296.315, 266.582, 20.44, 0.2288 ) }
    dend_34 { pt3dadd( 297.275, 267.142, 20.2667, 0.2288 ) }
    dend_34 { pt3dadd( 298.359, 267.467, 20.16, 0.2288 ) }
    dend_34 { pt3dadd( 298.814, 267.813, 18.4341, 0.2288 ) }
    dend_34 { pt3dadd( 299.342, 268.177, 17.0419, 0.2288 ) }
    dend_34 { pt3dadd( 300.415, 268.538, 16.8, 0.2288 ) }
    dend_34 { pt3dadd( 301.494, 268.694, 17.1382, 0.2288 ) }
    dend_34 { pt3dadd( 302.118, 268.75, 19.276, 0.2288 ) }
    dend_34 { pt3dadd( 303.212, 269.061, 19.3351, 0.2288 ) }
    dend_34 { pt3dadd( 304.227, 269.406, 20.0796, 0.2288 ) }
    dend_34 { pt3dadd( 305.351, 269.542, 20.2199, 0.2288 ) }
    dend_34 { pt3dadd( 306.48, 269.641, 20.4386, 0.2288 ) }
    dend_34 { pt3dadd( 307.483, 269.741, 19.6, 0.2796 ) }
    dend_34 { pt3dadd( 308.529, 270.157, 19.7602, 0.3304 ) }
    dend_34 { pt3dadd( 309.65, 270.36, 19.88, 0.3814 ) }
    dend_34 { pt3dadd( 310.779, 270.548, 19.88, 0.356 ) }
    dend_34 { pt3dadd( 311.892, 270.332, 20.1359, 0.3814 ) }
    dend_34 { pt3dadd( 312.974, 269.963, 20.16, 0.483 ) }
    dend_34 { pt3dadd( 314.1, 269.858, 20.16, 0.5848 ) }
    dend_34 { pt3dadd( 315.236, 269.755, 20.16, 0.5848 ) }
    dend_34 { pt3dadd( 316.35, 269.961, 20.16, 0.5084 ) }
    dend_34 { pt3dadd( 317.46, 270.196, 20.16, 0.5084 ) }
    dend_34 { pt3dadd( 318.525, 270.561, 20.16, 0.5592 ) }
    dend_34 { pt3dadd( 319.511, 271.119, 19.934, 0.5338 ) }
    dend_34 { pt3dadd( 320.548, 271.573, 19.88, 0.4576 ) }
    dend_34 { pt3dadd( 321.527, 272.146, 19.88, 0.4068 ) }
    dend_34 { pt3dadd( 322.544, 272.652, 19.88, 0.4322 ) }
    dend_34 { pt3dadd( 323.626, 272.962, 19.88, 0.4576 ) }
    dend_34 { pt3dadd( 324.757, 273.089, 19.88, 0.4322 ) }
    dend_34 { pt3dadd( 325.881, 273.304, 19.88, 0.4068 ) }
    dend_34 { pt3dadd( 326.978, 273.628, 19.88, 0.3304 ) }
    dend_34 { pt3dadd( 328.072, 273.962, 19.88, 0.2796 ) }
    dend_34 { pt3dadd( 329.198, 274.102, 19.88, 0.2288 ) }
    dend_34 { pt3dadd( 330.325, 274.174, 20.1183, 0.2288 ) }
    dend_34 { pt3dadd( 331.403, 274.303, 20.72, 0.2288 ) }
    dend_34 { pt3dadd( 332.529, 274.185, 20.4565, 0.2796 ) }
    dend_34 { pt3dadd( 333.595, 273.989, 19.88, 0.3814 ) }
    dend_34 { pt3dadd( 334.727, 273.874, 19.7537, 0.5338 ) }
    dend_34 { pt3dadd( 335.846, 273.981, 19.2934, 0.5848 ) }
    dend_34 { pt3dadd( 336.923, 274.258, 18.8513, 0.5848 ) }
    dend_34 { pt3dadd( 338.034, 274.528, 18.76, 0.5084 ) }
    dend_34 { pt3dadd( 339.059, 274.981, 18.5517, 0.483 ) }
    dend_34 { pt3dadd( 340.058, 275.506, 18.3386, 0.4068 ) }
    dend_34 { pt3dadd( 341.082, 275.992, 18.2, 0.356 ) }
    dend_34 { pt3dadd( 342.214, 276.011, 18.2, 0.3304 ) }
    dend_34 { pt3dadd( 343.339, 275.824, 18.114, 0.356 ) }
    dend_34 { pt3dadd( 344.462, 275.966, 17.92, 0.3814 ) }
    dend_34 { pt3dadd( 345.55, 276.318, 17.9068, 0.3814 ) }
    dend_34 { pt3dadd( 346.587, 276.757, 17.64, 0.3814 ) }
    dend_34 { pt3dadd( 347.529, 277.399, 17.5619, 0.356 ) }
    dend_34 { pt3dadd( 348.589, 277.763, 17.36, 0.3304 ) }
    dend_34 { pt3dadd( 349.733, 277.763, 17.36, 0.305 ) }
    dend_34 { pt3dadd( 350.821, 277.89, 16.8622, 0.305 ) }
    dend_34 { pt3dadd( 351.898, 278.245, 16.8, 0.305 ) }
    dend_34 { pt3dadd( 353.038, 278.329, 16.8, 0.305 ) }
    dend_34 { pt3dadd( 354.173, 278.335, 16.52, 0.305 ) }
    dend_34 { pt3dadd( 355.307, 278.222, 16.5508, 0.2796 ) }
    dend_34 { pt3dadd( 356.444, 278.221, 16.8, 0.2542 ) }
    dend_34 { pt3dadd( 357.563, 278.068, 17.057, 0.2288 ) }
    dend_34 { pt3dadd( 358.701, 277.992, 17.08, 0.2288 ) }
    dend_34 { pt3dadd( 359.839, 277.945, 17.08, 0.2542 ) }
    dend_34 { pt3dadd( 360.824, 277.56, 16.8179, 0.305 ) }
    dend_34 { pt3dadd( 361.546, 277.306, 18.5954, 0.356 ) }
    dend_34 { pt3dadd( 362.619, 277.42, 19.0509, 0.356 ) }
    dend_34 { pt3dadd( 363.601, 277.35, 19.8408, 0.3304 ) }
    dend_34 { pt3dadd( 364.742, 277.306, 19.88, 0.305 ) }
    dend_34 { pt3dadd( 365.864, 277.306, 20.2392, 0.305 ) }
    dend_34 { pt3dadd( 366.984, 277.306, 20.72, 0.2796 ) }
    dend_34 { pt3dadd( 368.128, 277.306, 20.72, 0.2542 ) }
    dend_34 { pt3dadd( 369.272, 277.309, 20.72, 0.2542 ) }
    dend_34 { pt3dadd( 370.403, 277.436, 20.72, 0.3304 ) }
    dend_34 { pt3dadd( 371.513, 277.691, 20.72, 0.4068 ) }
    dend_34 { pt3dadd( 372.498, 278.173, 20.72, 0.4322 ) }
    dend_34 { pt3dadd( 373.481, 278.63, 20.72, 0.356 ) }
    dend_34 { pt3dadd( 374.527, 278.955, 20.72, 0.2796 ) }
    dend_34 { pt3dadd( 375.495, 279.456, 20.72, 0.2796 ) }
    dend_34 { pt3dadd( 376.623, 279.54, 20.72, 0.3304 ) }
    dend_34 { pt3dadd( 377.691, 279.915, 20.72, 0.3814 ) }
    dend_34 { pt3dadd( 378.453, 280.623, 20.72, 0.3304 ) }
    dend_34 { pt3dadd( 379.44, 281.113, 20.5556, 0.2796 ) }
    dend_34 { pt3dadd( 380.554, 281.195, 20.6713, 0.2288 ) }
    dend_34 { pt3dadd( 381.697, 281.202, 20.7138, 0.2288 ) }
    dend_34 { pt3dadd( 382.621, 281.51, 19.4432, 0.2542 ) }
    dend_34 { pt3dadd( 383.662, 281.807, 19.32, 0.2796 ) }
    dend_34 { pt3dadd( 384.67, 282.26, 19.32, 0.3304 ) }
    dend_34 { pt3dadd( 385.664, 282.757, 19.32, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( 386.799, 282.809, 19.1024, 0.3814 ) }
    dend_34 { pt3dadd( 387.541, 283.52, 18.7415, 0.356 ) }
    dend_34 { pt3dadd( 388.429, 283.823, 17.6638, 0.3304 ) }
    dend_34 { pt3dadd( 389.5, 283.576, 17.9186, 0.305 ) }
    dend_34 { pt3dadd( 390.578, 283.369, 18.3478, 0.3304 ) }
    dend_34 { pt3dadd( 391.703, 283.369, 18.76, 0.4068 ) }
    dend_34 { pt3dadd( 392.411, 283.38, 17.1839, 0.5338 ) }
    dend_34 { pt3dadd( 393.528, 283.483, 17.0579, 0.6102 ) }
    dend_34 { pt3dadd( 394.627, 283.693, 16.8, 0.5592 ) }
    dend_34 { pt3dadd( 395.77, 283.712, 16.8, 0.4322 ) }
    dend_34 { pt3dadd( 396.905, 283.617, 16.7838, 0.3304 ) }
    dend_34 { pt3dadd( 398.039, 283.712, 16.6628, 0.305 ) }
    dend_34 { pt3dadd( 399.16, 283.598, 17.0492, 0.2796 ) }
    dend_34 { pt3dadd( 400.266, 283.436, 17.08, 0.2542 ) }
    dend_34 { pt3dadd( 401.38, 283.236, 17.08, 0.2542 ) }
    dend_34 { pt3dadd( 402.52, 283.138, 17.08, 0.2796 ) }
    dend_34 { pt3dadd( 403.644, 283.026, 17.3687, 0.3304 ) }
    dend_34 { pt3dadd( 404.748, 283.14, 17.92, 0.3304 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 18/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 243.596, 217.374, 43.1203, 0.9152 ) }
    dend_30 { pt3dadd( 243.29, 216.265, 43.6612, 0.356 ) }
    dend_30 { pt3dadd( 242.555, 215.448, 44.3646, 0.5084 ) }
    dend_30 { pt3dadd( 241.605, 214.873, 45.0136, 0.6102 ) }
    dend_30 { pt3dadd( 240.768, 214.121, 45.5104, 0.6864 ) }
    dend_30 { pt3dadd( 240.202, 213.176, 46.2297, 0.6864 ) }
    dend_30 { pt3dadd( 239.68, 212.238, 47.1904, 0.6864 ) }
    dend_30 { pt3dadd( 238.924, 211.443, 47.976, 0.7372 ) }
    dend_30 { pt3dadd( 238.191, 210.587, 48.447, 0.7626 ) }
    dend_30 { pt3dadd( 237.698, 209.596, 47.7705, 0.839 ) }
    dend_30 { pt3dadd( 237.743, 208.487, 47.9394, 0.839 ) }
    dend_30 { pt3dadd( 238.183, 207.486, 48.7449, 0.8136 ) }
    dend_30 { pt3dadd( 238.682, 206.524, 49.6034, 0.6864 ) }
    dend_30 { pt3dadd( 238.952, 205.514, 50.1231, 0.5848 ) }
    dend_30 { pt3dadd( 238.428, 204.554, 50.7265, 0.5848 ) }
    dend_30 { pt3dadd( 237.596, 203.873, 51.52, 0.6102 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 34/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 243.596, 217.374, 43.1203, 0.9152 ) }
    dend_27 { pt3dadd( 244.505, 215.992, 43.1284, 0.5084 ) }
    dend_27 { pt3dadd( 245.398, 215.292, 43.1791, 0.5848 ) }
    dend_27 { pt3dadd( 246.43, 214.805, 43.3756, 0.6102 ) }
    dend_27 { pt3dadd( 247.107, 214.174, 44.24, 0.483 ) }
    dend_27 { pt3dadd( 247.894, 213.456, 44.24, 0.356 ) }
    dend_27 { pt3dadd( 248.693, 212.658, 44.24, 0.2542 ) }
    dend_27 { pt3dadd( 249.527, 211.98, 44.24, 0.2288 ) }
    dend_27 { pt3dadd( 250.607, 211.648, 44.24, 0.2288 ) }
    dend_27 { pt3dadd( 251.398, 210.847, 43.9852, 0.2288 ) }
    dend_27 { pt3dadd( 252.346, 210.239, 43.68, 0.305 ) }
    dend_27 { pt3dadd( 253.283, 209.581, 43.68, 0.483 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 46/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 241.456, 238.625, 40.6739, 0.483 ) }
    dend_19 { pt3dadd( 241.997, 239.796, 42.4637, 0.4576 ) }
    dend_19 { pt3dadd( 242.044, 240.938, 42.4147, 0.5592 ) }
    dend_19 { pt3dadd( 241.913, 242.069, 42.4371, 0.6356 ) }
    dend_19 { pt3dadd( 241.557, 243.154, 42.3444, 0.7118 ) }
    dend_19 { pt3dadd( 241.264, 244.245, 41.9922, 0.6864 ) }
    dend_19 { pt3dadd( 241.156, 245.382, 41.946, 0.6864 ) }
    dend_19 { pt3dadd( 241.156, 246.517, 41.6836, 0.661 ) }
    dend_19 { pt3dadd( 241.156, 247.629, 41.0589, 0.7372 ) }
    dend_19 { pt3dadd( 241.15, 248.771, 40.88, 0.8136 ) }
    dend_19 { pt3dadd( 241.118, 249.914, 40.88, 0.8644 ) }
    dend_19 { pt3dadd( 241.002, 251.051, 40.88, 0.839 ) }
    dend_19 { pt3dadd( 240.836, 252.181, 40.8814, 0.788 ) }
    dend_19 { pt3dadd( 240.854, 253.316, 40.8915, 0.7626 ) }
    dend_19 { pt3dadd( 241.132, 254.426, 40.9223, 0.7118 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 241.456, 238.625, 40.6739, 0.483 ) }
    dend_12 { pt3dadd( 242.374, 238.498, 43.2348, 0.4322 ) }
    dend_12 { pt3dadd( 242.715, 238.993, 45.3995, 0.4068 ) }
    dend_12 { pt3dadd( 242.529, 239.897, 46.7916, 0.5338 ) }
    dend_12 { pt3dadd( 242.219, 240.619, 48.3557, 0.6102 ) }
    dend_12 { pt3dadd( 242.464, 241.718, 48.8544, 0.6356 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 67/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 224.683, 230.931, 35.2803, 0.9152 ) }
    dend_8 { pt3dadd( 224.12, 231.195, 36.0307, 0.4068 ) }
    dend_8 { pt3dadd( 223.271, 231.806, 37.0908, 0.4322 ) }
    dend_8 { pt3dadd( 222.411, 232.518, 37.329, 0.4576 ) }
    dend_8 { pt3dadd( 221.581, 233.265, 36.7937, 0.4576 ) }
    dend_8 { pt3dadd( 220.765, 234.044, 36.5649, 0.483 ) }
    dend_8 { pt3dadd( 219.896, 234.753, 37.0205, 0.5592 ) }
    dend_8 { pt3dadd( 219.074, 235.497, 37.6709, 0.661 ) }
    dend_8 { pt3dadd( 218.419, 236.388, 38.3275, 0.6864 ) }
    dend_8 { pt3dadd( 217.872, 237.379, 38.61, 0.661 ) }
    dend_8 { pt3dadd( 217.307, 238.373, 38.64, 0.5848 ) }
    dend_8 { pt3dadd( 216.657, 239.313, 38.6403, 0.5592 ) }
    dend_8 { pt3dadd( 216.083, 240.298, 38.6408, 0.5338 ) }
    dend_8 { pt3dadd( 215.545, 241.309, 38.645, 0.5592 ) }
    dend_8 { pt3dadd( 214.898, 242.249, 38.6641, 0.6356 ) }
    dend_8 { pt3dadd( 214.232, 243.178, 38.7545, 0.7118 ) }
    dend_8 { pt3dadd( 213.683, 244.152, 39.2815, 0.7372 ) }
    dend_8 { pt3dadd( 213.079, 245.089, 39.902, 0.661 ) }
    dend_8 { pt3dadd( 212.59, 246.074, 40.6006, 0.5848 ) }
    dend_8 { pt3dadd( 211.993, 247.038, 40.6193, 0.5592 ) }
    dend_8 { pt3dadd( 211.285, 247.878, 39.8541, 0.6102 ) }
    dend_8 { pt3dadd( 210.583, 248.706, 39.0071, 0.661 ) }
    dend_8 { pt3dadd( 209.79, 249.499, 39.5382, 0.6864 ) }
    dend_8 { pt3dadd( 209.019, 250.279, 40.3292, 0.6864 ) }
    dend_8 { pt3dadd( 208.282, 251.126, 40.8374, 0.6864 ) }
    dend_8 { pt3dadd( 207.473, 251.935, 40.8736, 0.6864 ) }
    dend_8 { pt3dadd( 206.629, 252.705, 40.8514, 0.6356 ) }
    dend_8 { pt3dadd( 205.704, 253.374, 40.7123, 0.5592 ) }
    dend_8 { pt3dadd( 204.864, 254.096, 40.0336, 0.4576 ) }
    dend_8 { pt3dadd( 204.076, 254.807, 39.1622, 0.4576 ) }
    dend_8 { pt3dadd( 203.234, 255.536, 39.6494, 0.4576 ) }
    dend_8 { pt3dadd( 202.682, 256.537, 39.7046, 0.4576 ) }
    dend_8 { pt3dadd( 202.193, 257.564, 39.4624, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_8 { pt3dadd( 201.576, 258.463, 39.2529, 0.4576 ) }
    dend_8 { pt3dadd( 200.644, 259.101, 39.6486, 0.5592 ) }
    dend_8 { pt3dadd( 199.741, 259.79, 39.7603, 0.6102 ) }
    dend_8 { pt3dadd( 199.025, 260.675, 39.7614, 0.5338 ) }
    dend_8 { pt3dadd( 198.436, 261.655, 39.767, 0.4576 ) }
    dend_8 { pt3dadd( 197.769, 262.58, 39.7911, 0.4322 ) }
    dend_8 { pt3dadd( 197.046, 263.457, 39.9608, 0.4322 ) }
    dend_8 { pt3dadd( 196.342, 264.342, 40.3609, 0.4322 ) }
    dend_8 { pt3dadd( 195.506, 265.078, 40.3273, 0.5084 ) }
    dend_8 { pt3dadd( 194.629, 265.768, 39.8247, 0.6356 ) }
    dend_8 { pt3dadd( 193.857, 266.61, 39.76, 0.7118 ) }
    dend_8 { pt3dadd( 193.139, 267.5, 39.76, 0.661 ) }
    dend_8 { pt3dadd( 192.314, 268.281, 39.76, 0.5592 ) }
    dend_8 { pt3dadd( 191.333, 268.859, 39.7603, 0.5084 ) }
    dend_8 { pt3dadd( 190.42, 269.526, 39.7608, 0.483 ) }
    dend_8 { pt3dadd( 189.645, 270.365, 39.7636, 0.5084 ) }
    dend_8 { pt3dadd( 188.756, 271.016, 40.1682, 0.4322 ) }
    dend_8 { pt3dadd( 187.706, 271.451, 40.32, 0.3814 ) }
    dend_8 { pt3dadd( 186.603, 271.725, 40.32, 0.2796 ) }
    dend_8 { pt3dadd( 185.596, 272.262, 40.3365, 0.2796 ) }
    dend_8 { pt3dadd( 184.693, 272.953, 40.6, 0.2796 ) }
    dend_8 { pt3dadd( 183.857, 273.719, 40.6, 0.3304 ) }
    dend_8 { pt3dadd( 183.225, 274.587, 41.1188, 0.3304 ) }
    dend_8 { pt3dadd( 182.975, 275.671, 41.44, 0.3304 ) }
    dend_8 { pt3dadd( 182.318, 276.58, 41.44, 0.2796 ) }
    dend_8 { pt3dadd( 181.221, 276.814, 41.5184, 0.2542 ) }
    dend_8 { pt3dadd( 180.742, 277.707, 41.72, 0.2542 ) }
    dend_8 { pt3dadd( 180.228, 278.698, 42.2223, 0.305 ) }
    dend_8 { pt3dadd( 179.54, 279.59, 42.5401, 0.356 ) }
    dend_8 { pt3dadd( 178.579, 280.166, 42.84, 0.3814 ) }
    dend_8 { pt3dadd( 177.482, 280.418, 43.1147, 0.356 ) }
    dend_8 { pt3dadd( 176.635, 281.077, 43.12, 0.3304 ) }
    dend_8 { pt3dadd( 175.867, 281.921, 43.12, 0.3304 ) }
    dend_8 { pt3dadd( 175.012, 282.655, 43.2135, 0.356 ) }
    dend_8 { pt3dadd( 174.17, 283.371, 43.68, 0.3814 ) }
    dend_8 { pt3dadd( 173.051, 283.591, 43.68, 0.3304 ) }
    dend_8 { pt3dadd( 172.076, 284.143, 43.68, 0.2796 ) }
    dend_8 { pt3dadd( 171.243, 284.914, 43.68, 0.2288 ) }
    dend_8 { pt3dadd( 170.594, 285.696, 43.96, 0.2288 ) }
    dend_8 { pt3dadd( 169.857, 286.567, 43.96, 0.2288 ) }
    dend_8 { pt3dadd( 168.938, 287.214, 43.9863, 0.2288 ) }
    dend_8 { pt3dadd( 167.971, 287.757, 44.52, 0.2288 ) }
    dend_8 { pt3dadd( 167.202, 288.596, 44.52, 0.2288 ) }
    dend_8 { pt3dadd( 166.493, 289.469, 44.52, 0.2288 ) }
    dend_8 { pt3dadd( 165.497, 290.014, 44.52, 0.2288 ) }
    dend_8 { pt3dadd( 164.721, 290.822, 44.8935, 0.2288 ) }
    dend_8 { pt3dadd( 164.062, 291.507, 45.92, 0.2288 ) }
    dend_8 { pt3dadd( 163.685, 292.559, 45.92, 0.2288 ) }
    dend_8 { pt3dadd( 162.781, 293.245, 45.92, 0.2288 ) }
    dend_8 { pt3dadd( 161.926, 294.0, 45.92, 0.2288 ) }
    dend_8 { pt3dadd( 160.954, 294.589, 45.92, 0.2288 ) }
    dend_8 { pt3dadd( 160.062, 295.285, 45.92, 0.2288 ) }
    dend_8 { pt3dadd( 159.488, 296.27, 45.92, 0.2288 ) }
    dend_8 { pt3dadd( 158.982, 297.295, 45.92, 0.2288 ) }
    dend_8 { pt3dadd( 158.383, 298.268, 45.92, 0.2288 ) }
    dend_8 { pt3dadd( 157.592, 299.018, 45.92, 0.2288 ) }
    dend_8 { pt3dadd( 156.814, 299.849, 45.9413, 0.2288 ) }
    dend_8 { pt3dadd( 156.148, 300.74, 46.48, 0.2542 ) }
    dend_8 { pt3dadd( 155.449, 301.626, 46.76, 0.305 ) }
    dend_8 { pt3dadd( 154.596, 302.385, 46.76, 0.356 ) }
    dend_8 { pt3dadd( 153.65, 303.009, 47.0246, 0.356 ) }
    dend_8 { pt3dadd( 152.727, 303.684, 47.04, 0.305 ) }
    dend_8 { pt3dadd( 151.717, 304.197, 46.8524, 0.2542 ) }
    dend_8 { pt3dadd( 150.76, 304.802, 46.76, 0.2288 ) }
    dend_8 { pt3dadd( 149.857, 305.489, 46.6203, 0.2288 ) }
    dend_8 { pt3dadd( 148.895, 306.097, 46.48, 0.2288 ) }
    dend_8 { pt3dadd( 148.068, 306.845, 46.48, 0.2288 ) }
    dend_8 { pt3dadd( 147.12, 307.474, 46.48, 0.2288 ) }
    dend_8 { pt3dadd( 146.361, 308.315, 46.48, 0.2542 ) }
    dend_8 { pt3dadd( 145.657, 309.183, 46.6612, 0.2796 ) }
    dend_8 { pt3dadd( 144.659, 309.452, 47.6, 0.305 ) }
    dend_8 { pt3dadd( 143.682, 309.97, 47.6, 0.2796 ) }
    dend_8 { pt3dadd( 142.805, 310.659, 47.836, 0.2542 ) }
    dend_8 { pt3dadd( 142.189, 311.377, 48.72, 0.2288 ) }
    dend_8 { pt3dadd( 141.24, 311.811, 48.72, 0.2288 ) }
    dend_8 { pt3dadd( 140.168, 312.163, 48.72, 0.2288 ) }
    dend_8 { pt3dadd( 139.109, 312.59, 48.72, 0.2288 ) }
    dend_8 { pt3dadd( 138.038, 312.982, 48.6329, 0.2288 ) }
    dend_8 { pt3dadd( 137.044, 313.477, 48.44, 0.2288 ) }
    dend_8 { pt3dadd( 135.995, 313.918, 48.44, 0.2288 ) }
    dend_8 { pt3dadd( 135.077, 314.586, 48.6951, 0.2288 ) }
    dend_8 { pt3dadd( 134.061, 315.109, 48.72, 0.2288 ) }
    dend_8 { pt3dadd( 133.062, 315.665, 48.72, 0.2288 ) }
    dend_8 { pt3dadd( 132.116, 316.289, 48.4448, 0.2796 ) }
    dend_8 { pt3dadd( 131.267, 317.03, 48.6114, 0.3304 ) }
    dend_8 { pt3dadd( 130.21, 317.449, 48.72, 0.3814 ) }
    dend_8 { pt3dadd( 129.176, 317.811, 49.275, 0.3304 ) }
    dend_8 { pt3dadd( 128.286, 318.499, 49.28, 0.2796 ) }
    dend_8 { pt3dadd( 127.673, 319.452, 49.0244, 0.2288 ) }
    dend_8 { pt3dadd( 126.788, 320.15, 49.0, 0.2288 ) }
    dend_8 { pt3dadd( 125.784, 320.549, 49.0, 0.2288 ) }
    dend_8 { pt3dadd( 124.674, 320.757, 49.0596, 0.2288 ) }
    dend_8 { pt3dadd( 123.694, 321.335, 49.28, 0.2288 ) }
    dend_8 { pt3dadd( 122.777, 321.988, 49.6667, 0.2288 ) }
    dend_8 { pt3dadd( 121.777, 322.5, 49.84, 0.2288 ) }
    dend_8 { pt3dadd( 121.098, 323.299, 49.84, 0.2288 ) }
    dend_8 { pt3dadd( 120.571, 324.306, 49.9288, 0.2288 ) }
    dend_8 { pt3dadd( 119.835, 325.151, 50.4, 0.2288 ) }
    dend_8 { pt3dadd( 119.062, 325.953, 50.9158, 0.2288 ) }
    dend_8 { pt3dadd( 118.347, 326.827, 51.24, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 117.518, 327.61, 51.24, 0.2542 ) }
    dend_8 { pt3dadd( 116.748, 328.421, 51.7913, 0.2796 ) }
    dend_8 { pt3dadd( 115.926, 329.146, 52.2684, 0.305 ) }
    dend_8 { pt3dadd( 115.165, 329.785, 53.5248, 0.2796 ) }
    dend_8 { pt3dadd( 114.373, 330.518, 53.2927, 0.2542 ) }
    dend_8 { pt3dadd( 113.724, 331.457, 53.2, 0.2288 ) }
    dend_8 { pt3dadd( 112.771, 332.061, 53.2, 0.2288 ) }
    dend_8 { pt3dadd( 111.719, 332.494, 53.2, 0.2288 ) }
    dend_8 { pt3dadd( 110.75, 333.063, 53.2, 0.2288 ) }
    dend_8 { pt3dadd( 109.968, 333.891, 53.2, 0.2288 ) }
    dend_8 { pt3dadd( 109.13, 334.667, 53.2, 0.2796 ) }
    dend_8 { pt3dadd( 108.517, 335.501, 53.683, 0.3814 ) }
    dend_8 { pt3dadd( 107.785, 336.374, 53.76, 0.483 ) }
    dend_8 { pt3dadd( 107.207, 337.302, 53.76, 0.483 ) }
    dend_8 { pt3dadd( 106.273, 337.958, 53.8331, 0.3814 ) }
    dend_8 { pt3dadd( 105.557, 338.836, 54.04, 0.2796 ) }
    dend_8 { pt3dadd( 104.909, 339.777, 54.04, 0.2288 ) }
    dend_8 { pt3dadd( 104.153, 340.634, 54.04, 0.2288 ) }
    dend_8 { pt3dadd( 103.109, 341.086, 54.04, 0.2288 ) }
    dend_8 { pt3dadd( 102.059, 341.534, 54.0862, 0.2288 ) }
    dend_8 { pt3dadd( 101.812, 342.549, 54.32, 0.2288 ) }
    dend_8 { pt3dadd( 101.604, 343.387, 54.8733, 0.2288 ) }
    dend_8 { pt3dadd( 101.152, 343.193, 57.4014, 0.2288 ) }
    dend_8 { pt3dadd( 100.427, 343.276, 58.8, 0.2288 ) }
    dend_8 { pt3dadd( 99.328, 343.41, 58.8, 0.2288 ) }
    dend_8 { pt3dadd( 98.8081, 344.228, 59.2567, 0.2288 ) }
    dend_8 { pt3dadd( 97.6958, 344.409, 59.36, 0.2288 ) }
    dend_8 { pt3dadd( 96.7002, 344.97, 59.36, 0.2288 ) }
    dend_8 { pt3dadd( 95.6863, 345.485, 59.6268, 0.2288 ) }
    dend_8 { pt3dadd( 94.7809, 345.97, 60.5268, 0.2288 ) }
    dend_8 { pt3dadd( 94.104, 346.817, 61.0176, 0.2288 ) }
    dend_8 { pt3dadd( 93.3812, 347.679, 61.04, 0.2288 ) }
    dend_8 { pt3dadd( 92.7657, 348.617, 61.2567, 0.2288 ) }
    dend_8 { pt3dadd( 92.1132, 349.531, 61.6, 0.2288 ) }
    dend_8 { pt3dadd( 91.2526, 350.24, 61.6, 0.2288 ) }
    dend_8 { pt3dadd( 90.4197, 351.004, 61.6, 0.2288 ) }
    dend_8 { pt3dadd( 89.5739, 351.765, 61.6, 0.2288 ) }
    dend_8 { pt3dadd( 88.7972, 352.582, 61.6, 0.2288 ) }
    dend_8 { pt3dadd( 87.9925, 353.367, 61.6123, 0.2288 ) }
    dend_8 { pt3dadd( 87.0866, 353.965, 62.16, 0.2288 ) }
    dend_8 { pt3dadd( 86.2491, 354.583, 62.7312, 0.2288 ) }
    dend_8 { pt3dadd( 85.4465, 355.031, 63.84, 0.2288 ) }
    dend_8 { pt3dadd( 84.7203, 355.885, 63.84, 0.2288 ) }
    dend_8 { pt3dadd( 84.2337, 356.907, 63.973, 0.2288 ) }
    dend_8 { pt3dadd( 83.7413, 357.843, 64.68, 0.2796 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 45/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 224.683, 230.931, 35.2803, 0.9152 ) }
    dend_1 { pt3dadd( 223.277, 230.103, 35.2825, 0.8136 ) }
    dend_1 { pt3dadd( 222.428, 229.338, 35.2898, 0.7626 ) }
    dend_1 { pt3dadd( 221.523, 228.636, 35.3265, 0.6102 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 49/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 237.596, 203.873, 51.52, 0.6102 ) }
    dend_32 { pt3dadd( 237.65, 203.746, 53.2, 0.356 ) }
    dend_32 { pt3dadd( 238.773, 203.669, 53.4531, 0.3814 ) }
    dend_32 { pt3dadd( 239.764, 203.605, 54.32, 0.3304 ) }
    dend_32 { pt3dadd( 240.424, 202.853, 54.32, 0.2796 ) }
    dend_32 { pt3dadd( 241.262, 202.113, 54.5784, 0.2288 ) }
    dend_32 { pt3dadd( 242.053, 201.291, 54.6, 0.2288 ) }
    dend_32 { pt3dadd( 242.519, 200.328, 54.6, 0.2288 ) }
    dend_32 { pt3dadd( 243.242, 199.757, 55.3714, 0.2288 ) }
    dend_32 { pt3dadd( 243.829, 198.975, 56.7398, 0.2288 ) }
    dend_32 { pt3dadd( 244.48, 198.285, 58.0633, 0.2288 ) }
    dend_32 { pt3dadd( 245.342, 197.593, 58.329, 0.2288 ) }
    dend_32 { pt3dadd( 245.866, 196.664, 58.5239, 0.2796 ) }
    dend_32 { pt3dadd( 246.594, 196.219, 60.0678, 0.3304 ) }
    dend_32 { pt3dadd( 247.521, 195.853, 60.7866, 0.3814 ) }
    dend_32 { pt3dadd( 248.437, 195.853, 62.3742, 0.3304 ) }
    dend_32 { pt3dadd( 249.432, 195.738, 63.1907, 0.2796 ) }
    dend_32 { pt3dadd( 250.512, 195.738, 63.84, 0.2542 ) }
    dend_32 { pt3dadd( 251.532, 195.738, 64.7592, 0.305 ) }
    dend_32 { pt3dadd( 252.669, 195.738, 64.9883, 0.356 ) }
    dend_32 { pt3dadd( 253.531, 195.244, 66.103, 0.356 ) }
    dend_32 { pt3dadd( 254.493, 194.752, 66.36, 0.356 ) }
    dend_32 { pt3dadd( 255.055, 194.366, 67.6404, 0.356 ) }
    dend_32 { pt3dadd( 255.618, 194.301, 70.0711, 0.4068 ) }
    dend_32 { pt3dadd( 256.182, 194.236, 72.5021, 0.3814 ) }
    dend_32 { pt3dadd( 256.89, 194.034, 74.5766, 0.356 ) }
    dend_32 { pt3dadd( 257.713, 193.717, 76.356, 0.2796 ) }
    dend_32 { pt3dadd( 258.537, 193.399, 78.1351, 0.2542 ) }
    dend_32 { pt3dadd( 259.362, 193.081, 79.9145, 0.2288 ) }
    dend_32 { pt3dadd( 260.184, 192.739, 81.6693, 0.2288 ) }
    dend_32 { pt3dadd( 261.003, 192.352, 83.3806, 0.2288 ) }
    dend_32 { pt3dadd( 261.823, 191.965, 85.0917, 0.2288 ) }
    dend_32 { pt3dadd( 262.643, 191.57, 86.767, 0.2288 ) }
    dend_32 { pt3dadd( 263.533, 190.894, 87.3712, 0.2288 ) }
    dend_32 { pt3dadd( 264.422, 190.217, 87.9754, 0.2288 ) }
    dend_32 { pt3dadd( 265.31, 189.541, 88.5797, 0.2288 ) }
    dend_32 { pt3dadd( 266.201, 188.865, 89.1839, 0.2288 ) }
    dend_32 { pt3dadd( 267.089, 188.189, 89.7882, 0.2288 ) }
    dend_32 { pt3dadd( 267.977, 187.513, 90.3921, 0.2288 ) }
    dend_32 { pt3dadd( 268.851, 186.892, 91.2559, 0.2288 ) }
    dend_32 { pt3dadd( 269.729, 186.32, 92.3835, 0.2288 ) }
    dend_32 { pt3dadd( 270.606, 185.748, 93.5113, 0.2288 ) }
    dend_32 { pt3dadd( 271.417, 185.221, 94.9892, 0.2288 ) }
    dend_32 { pt3dadd( 272.21, 184.706, 96.565, 0.2288 ) }
    dend_32 { pt3dadd( 273.003, 184.19, 98.1406, 0.2288 ) }
    dend_32 { pt3dadd( 273.797, 183.675, 99.7164, 0.2288 ) }
    dend_32 { pt3dadd( 274.685, 183.206, 100.767, 0.2288 ) }
    dend_32 { pt3dadd( 275.671, 183.042, 101.636, 0.2796 ) }
    dend_32 { pt3dadd( 276.557, 183.1, 103.396, 0.356 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 98/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 237.596, 203.873, 51.52, 0.6102 ) }
    dend_31 { pt3dadd( 236.717, 202.799, 51.52, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_31 { pt3dadd( 236.247, 201.765, 51.52, 0.4068 ) }
    dend_31 { pt3dadd( 235.811, 200.74, 51.7409, 0.3304 ) }
    dend_31 { pt3dadd( 235.779, 199.6, 51.8, 0.2542 ) }
    dend_31 { pt3dadd( 235.512, 198.572, 51.8392, 0.2796 ) }
    dend_31 { pt3dadd( 235.346, 197.488, 52.36, 0.3304 ) }
    dend_31 { pt3dadd( 234.971, 196.424, 52.542, 0.3814 ) }
    dend_31 { pt3dadd( 234.452, 195.465, 53.2, 0.3814 ) }
    dend_31 { pt3dadd( 233.969, 194.441, 53.2, 0.3814 ) }
    dend_31 { pt3dadd( 233.594, 193.416, 53.2, 0.3814 ) }
    dend_31 { pt3dadd( 233.12, 192.389, 53.2, 0.3304 ) }
    dend_31 { pt3dadd( 232.605, 191.372, 53.2, 0.2796 ) }
    dend_31 { pt3dadd( 232.443, 190.248, 53.2, 0.2288 ) }
    dend_31 { pt3dadd( 231.878, 189.578, 54.3158, 0.2796 ) }
    dend_31 { pt3dadd( 231.344, 188.567, 54.32, 0.356 ) }
    dend_31 { pt3dadd( 230.538, 187.789, 54.32, 0.4322 ) }
    dend_31 { pt3dadd( 229.859, 186.912, 54.6, 0.4322 ) }
    dend_31 { pt3dadd( 229.292, 185.941, 54.8836, 0.3814 ) }
    dend_31 { pt3dadd( 229.019, 185.137, 56.0, 0.356 ) }
    dend_31 { pt3dadd( 228.68, 184.046, 56.0, 0.3304 ) }
    dend_31 { pt3dadd( 228.446, 182.95, 56.1243, 0.3304 ) }
    dend_31 { pt3dadd( 228.193, 181.918, 56.9265, 0.305 ) }
    dend_31 { pt3dadd( 227.833, 180.845, 57.12, 0.3304 ) }
    dend_31 { pt3dadd( 227.221, 180.111, 58.212, 0.4068 ) }
    dend_31 { pt3dadd( 226.719, 179.141, 58.5298, 0.483 ) }
    dend_31 { pt3dadd( 226.055, 178.49, 59.852, 0.5084 ) }
    dend_31 { pt3dadd( 225.471, 177.703, 61.2545, 0.4576 ) }
    dend_31 { pt3dadd( 224.95, 176.75, 61.917, 0.4068 ) }
    dend_31 { pt3dadd( 224.497, 175.746, 62.44, 0.3814 ) }
    dend_31 { pt3dadd( 223.642, 175.038, 62.44, 0.356 ) }
    dend_31 { pt3dadd( 223.294, 174.395, 63.2789, 0.305 ) }
    dend_31 { pt3dadd( 222.808, 173.905, 64.4, 0.2542 ) }
    dend_31 { pt3dadd( 222.168, 172.976, 64.4, 0.2288 ) }
    dend_31 { pt3dadd( 221.622, 171.972, 64.4, 0.2288 ) }
    dend_31 { pt3dadd( 220.833, 171.166, 64.4, 0.2288 ) }
    dend_31 { pt3dadd( 220.566, 170.084, 64.4, 0.2288 ) }
    dend_31 { pt3dadd( 220.129, 169.077, 64.4, 0.2288 ) }
    dend_31 { pt3dadd( 219.747, 168.192, 64.8844, 0.2288 ) }
    dend_31 { pt3dadd( 219.077, 167.682, 66.4132, 0.2288 ) }
    dend_31 { pt3dadd( 218.734, 166.988, 68.04, 0.2288 ) }
    dend_31 { pt3dadd( 218.562, 165.865, 68.04, 0.2288 ) }
    dend_31 { pt3dadd( 218.296, 164.758, 68.04, 0.2288 ) }
    dend_31 { pt3dadd( 218.161, 163.624, 68.04, 0.2288 ) }
    dend_31 { pt3dadd( 218.053, 162.489, 68.04, 0.2288 ) }
    dend_31 { pt3dadd( 217.855, 161.37, 68.2312, 0.2542 ) }
    dend_31 { pt3dadd( 217.818, 160.355, 69.3342, 0.2796 ) }
    dend_31 { pt3dadd( 217.818, 159.324, 70.3875, 0.305 ) }
    dend_31 { pt3dadd( 217.818, 158.187, 70.56, 0.2796 ) }
    dend_31 { pt3dadd( 217.895, 157.054, 70.56, 0.2542 ) }
    dend_31 { pt3dadd( 218.14, 155.969, 70.761, 0.2288 ) }
    dend_31 { pt3dadd( 218.42, 154.949, 71.4, 0.2288 ) }
    dend_31 { pt3dadd( 218.734, 153.871, 71.6783, 0.2288 ) }
    dend_31 { pt3dadd( 219.051, 152.789, 71.96, 0.2288 ) }
    dend_31 { pt3dadd( 219.316, 151.714, 72.5049, 0.2288 ) }
    dend_31 { pt3dadd( 219.596, 150.626, 72.8, 0.2288 ) }
    dend_31 { pt3dadd( 219.932, 149.544, 72.8, 0.2288 ) }
    dend_31 { pt3dadd( 219.992, 148.404, 72.8, 0.2288 ) }
    dend_31 { pt3dadd( 220.107, 147.267, 72.8, 0.2288 ) }
    dend_31 { pt3dadd( 220.253, 146.311, 73.6221, 0.2288 ) }
    dend_31 { pt3dadd( 220.857, 145.599, 73.9007, 0.2288 ) }
    dend_31 { pt3dadd( 220.982, 144.529, 74.8434, 0.2288 ) }
    dend_31 { pt3dadd( 221.105, 143.46, 75.7859, 0.2288 ) }
    dend_31 { pt3dadd( 221.23, 142.389, 76.7284, 0.2288 ) }
    dend_31 { pt3dadd( 221.354, 141.32, 77.6709, 0.2288 ) }
    dend_31 { pt3dadd( 221.562, 140.24, 78.416, 0.2288 ) }
    dend_31 { pt3dadd( 221.811, 139.155, 79.0622, 0.2288 ) }
    dend_31 { pt3dadd( 222.062, 138.069, 79.7084, 0.2288 ) }
    dend_31 { pt3dadd( 222.311, 136.985, 80.3547, 0.2288 ) }
    dend_31 { pt3dadd( 222.562, 135.9, 81.0009, 0.2288 ) }
    dend_31 { pt3dadd( 222.811, 134.816, 81.6472, 0.2288 ) }
    dend_31 { pt3dadd( 222.948, 133.71, 82.2273, 0.2288 ) }
    dend_31 { pt3dadd( 222.999, 132.587, 82.7568, 0.2288 ) }
    dend_31 { pt3dadd( 223.049, 131.465, 83.2863, 0.2288 ) }
    dend_31 { pt3dadd( 223.1, 130.343, 83.8158, 0.2288 ) }
    dend_31 { pt3dadd( 223.15, 129.221, 84.3452, 0.2288 ) }
    dend_31 { pt3dadd( 223.201, 128.098, 84.8747, 0.2288 ) }
    dend_31 { pt3dadd( 223.012, 126.99, 85.26, 0.2288 ) }
    dend_31 { pt3dadd( 222.755, 125.883, 85.6027, 0.2288 ) }
    dend_31 { pt3dadd( 222.497, 124.778, 85.9454, 0.2288 ) }
    dend_31 { pt3dadd( 222.24, 123.672, 86.2884, 0.2288 ) }
    dend_31 { pt3dadd( 221.982, 122.566, 86.6312, 0.2288 ) }
    dend_31 { pt3dadd( 221.724, 121.461, 86.9739, 0.2288 ) }
    dend_31 { pt3dadd( 221.467, 120.354, 87.3169, 0.2288 ) }
    dend_31 { pt3dadd( 221.208, 119.249, 87.6596, 0.2288 ) }
    dend_31 { pt3dadd( 220.951, 118.143, 88.0023, 0.2288 ) }
    dend_31 { pt3dadd( 221.224, 117.061, 88.0617, 0.2288 ) }
    dend_31 { pt3dadd( 221.609, 115.984, 88.0617, 0.2288 ) }
    dend_31 { pt3dadd( 221.993, 114.907, 88.0617, 0.2288 ) }
    dend_31 { pt3dadd( 222.38, 113.829, 88.0617, 0.2288 ) }
    dend_31 { pt3dadd( 222.764, 112.752, 88.0617, 0.2542 ) }
    dend_31 { pt3dadd( 223.15, 111.675, 88.0617, 0.2796 ) }
    dend_31 { pt3dadd( 223.42, 110.571, 88.2725, 0.305 ) }
    dend_31 { pt3dadd( 223.639, 109.455, 88.5749, 0.2796 ) }
    dend_31 { pt3dadd( 223.859, 108.339, 88.8773, 0.2542 ) }
    dend_31 { pt3dadd( 224.079, 107.223, 89.18, 0.2288 ) }
    dend_31 { pt3dadd( 224.298, 106.107, 89.4824, 0.2288 ) }
    dend_31 { pt3dadd( 224.518, 104.991, 89.7848, 0.2288 ) }
    dend_31 { pt3dadd( 224.736, 103.875, 90.0875, 0.2288 ) }
    dend_31 { pt3dadd( 224.956, 102.76, 90.3899, 0.2288 ) }
    dend_31 { pt3dadd( 225.176, 101.644, 90.6903, 0.2288 ) }
    dend_31 { pt3dadd( 225.439, 100.53, 90.6903, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_31 { pt3dadd( 225.7, 99.416, 90.6903, 0.2288 ) }
    dend_31 { pt3dadd( 226.262, 98.491, 91.4805, 0.2288 ) }
    dend_31 { pt3dadd( 226.868, 97.5917, 92.3782, 0.2288 ) }
    dend_31 { pt3dadd( 227.471, 96.6925, 93.2758, 0.2288 ) }
    dend_31 { pt3dadd( 228.077, 95.7932, 94.1738, 0.2288 ) }
    dend_31 { pt3dadd( 228.68, 94.8939, 95.0715, 0.2796 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 6/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 253.283, 209.581, 43.68, 0.483 ) }
    dend_29 { pt3dadd( 253.478, 209.699, 44.2061, 0.5848 ) }
    dend_29 { pt3dadd( 254.508, 209.81, 44.8, 0.4576 ) }
    dend_29 { pt3dadd( 255.642, 209.924, 44.8, 0.356 ) }
    dend_29 { pt3dadd( 256.784, 209.924, 44.8, 0.305 ) }
    dend_29 { pt3dadd( 257.929, 209.924, 44.8, 0.3304 ) }
    dend_29 { pt3dadd( 259.021, 209.952, 45.1455, 0.356 ) }
    dend_29 { pt3dadd( 260.018, 210.328, 45.6238, 0.4068 ) }
    dend_29 { pt3dadd( 261.135, 210.52, 45.92, 0.4068 ) }
    dend_29 { pt3dadd( 262.245, 210.725, 46.216, 0.4068 ) }
    dend_29 { pt3dadd( 263.373, 210.725, 46.6763, 0.4068 ) }
    dend_29 { pt3dadd( 264.453, 210.725, 47.5518, 0.4322 ) }
    dend_29 { pt3dadd( 265.464, 210.725, 48.6612, 0.4576 ) }
    dend_29 { pt3dadd( 266.411, 210.379, 49.28, 0.4322 ) }
    dend_29 { pt3dadd( 267.401, 210.038, 49.8187, 0.4068 ) }
    dend_29 { pt3dadd( 268.375, 209.975, 51.0804, 0.356 ) }
    dend_29 { pt3dadd( 269.182, 209.695, 52.7083, 0.3304 ) }
    dend_29 { pt3dadd( 270.318, 209.695, 52.92, 0.305 ) }
    dend_29 { pt3dadd( 271.432, 209.581, 53.3932, 0.305 ) }
    dend_29 { pt3dadd( 272.541, 209.532, 54.021, 0.2796 ) }
    dend_29 { pt3dadd( 273.599, 209.226, 54.4026, 0.2542 ) }
    dend_29 { pt3dadd( 274.424, 208.543, 55.0984, 0.2288 ) }
    dend_29 { pt3dadd( 275.253, 207.825, 55.9, 0.2288 ) }
    dend_29 { pt3dadd( 276.081, 207.107, 56.7017, 0.2288 ) }
    dend_29 { pt3dadd( 276.937, 206.57, 57.9446, 0.2542 ) }
    dend_29 { pt3dadd( 277.805, 206.117, 59.3914, 0.2796 ) }
    dend_29 { pt3dadd( 278.698, 205.716, 60.8247, 0.305 ) }
    dend_29 { pt3dadd( 279.656, 205.465, 62.2205, 0.2796 ) }
    dend_29 { pt3dadd( 280.615, 205.213, 63.6163, 0.2542 ) }
    dend_29 { pt3dadd( 281.575, 204.96, 65.0118, 0.2288 ) }
    dend_29 { pt3dadd( 282.552, 204.576, 66.0999, 0.2288 ) }
    dend_29 { pt3dadd( 283.534, 204.159, 67.1149, 0.2288 ) }
    dend_29 { pt3dadd( 284.516, 203.744, 68.1296, 0.2288 ) }
    dend_29 { pt3dadd( 285.497, 203.328, 69.1446, 0.2542 ) }
    dend_29 { pt3dadd( 286.359, 202.676, 70.0437, 0.2796 ) }
    dend_29 { pt3dadd( 287.211, 202.004, 70.933, 0.3304 ) }
    dend_29 { pt3dadd( 288.232, 201.526, 71.3658, 0.3304 ) }
    dend_29 { pt3dadd( 289.263, 201.058, 71.776, 0.3304 ) }
    dend_29 { pt3dadd( 290.292, 200.59, 72.186, 0.305 ) }
    dend_29 { pt3dadd( 291.323, 200.122, 72.5962, 0.305 ) }
    dend_29 { pt3dadd( 292.401, 199.832, 73.1254, 0.305 ) }
    dend_29 { pt3dadd( 293.5, 199.625, 73.71, 0.2796 ) }
    dend_29 { pt3dadd( 294.599, 199.417, 74.2949, 0.2542 ) }
    dend_29 { pt3dadd( 295.7, 199.21, 74.8796, 0.2288 ) }
    dend_29 { pt3dadd( 296.799, 199.003, 75.4645, 0.2288 ) }
    dend_29 { pt3dadd( 297.87, 198.71, 76.0754, 0.2288 ) }
    dend_29 { pt3dadd( 298.909, 198.308, 76.7203, 0.2288 ) }
    dend_29 { pt3dadd( 299.948, 197.905, 77.3648, 0.2288 ) }
    dend_29 { pt3dadd( 300.984, 197.502, 78.0097, 0.2288 ) }
    dend_29 { pt3dadd( 302.023, 197.099, 78.6545, 0.2288 ) }
    dend_29 { pt3dadd( 303.06, 196.696, 79.2994, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 57/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 253.283, 209.581, 43.68, 0.483 ) }
    dend_28 { pt3dadd( 253.495, 209.434, 43.68, 0.2288 ) }
    dend_28 { pt3dadd( 254.262, 208.725, 43.12, 0.2288 ) }
    dend_28 { pt3dadd( 255.214, 208.208, 43.12, 0.2542 ) }
    dend_28 { pt3dadd( 256.054, 207.742, 42.5779, 0.2796 ) }
    dend_28 { pt3dadd( 256.609, 206.768, 42.4074, 0.305 ) }
    dend_28 { pt3dadd( 257.143, 205.78, 42.28, 0.2796 ) }
    dend_28 { pt3dadd( 257.835, 204.891, 42.0, 0.2542 ) }
    dend_28 { pt3dadd( 258.461, 203.936, 42.0, 0.2796 ) }
    dend_28 { pt3dadd( 259.219, 203.084, 42.0, 0.3814 ) }
    dend_28 { pt3dadd( 260.002, 202.259, 42.0, 0.483 ) }
    dend_28 { pt3dadd( 260.943, 201.752, 41.8981, 0.5084 ) }
    dend_28 { pt3dadd( 261.492, 201.401, 39.9728, 0.4322 ) }
    dend_28 { pt3dadd( 262.479, 200.896, 39.76, 0.3814 ) }
    dend_28 { pt3dadd( 263.326, 200.143, 39.76, 0.3304 ) }
    dend_28 { pt3dadd( 264.195, 199.516, 39.76, 0.356 ) }
    dend_28 { pt3dadd( 264.622, 198.824, 38.9211, 0.3814 ) }
    dend_28 { pt3dadd( 264.76, 197.835, 37.5533, 0.4576 ) }
    dend_28 { pt3dadd( 265.248, 196.98, 36.8018, 0.483 ) }
    dend_28 { pt3dadd( 266.201, 196.602, 35.7311, 0.4576 ) }
    dend_28 { pt3dadd( 266.898, 196.022, 34.3294, 0.4068 ) }
    dend_28 { pt3dadd( 267.315, 195.149, 32.8378, 0.3814 ) }
    dend_28 { pt3dadd( 268.088, 194.483, 31.5717, 0.3814 ) }
    dend_28 { pt3dadd( 268.76, 193.802, 30.0639, 0.356 ) }
    dend_28 { pt3dadd( 269.372, 193.103, 28.4362, 0.356 ) }
    dend_28 { pt3dadd( 269.872, 192.179, 27.326, 0.3304 ) }
    dend_28 { pt3dadd( 270.373, 191.256, 26.2161, 0.356 ) }
    dend_28 { pt3dadd( 270.875, 190.304, 25.4108, 0.3304 ) }
    dend_28 { pt3dadd( 271.375, 189.276, 25.4108, 0.3304 ) }
    dend_28 { pt3dadd( 271.807, 188.312, 24.6176, 0.3304 ) }
    dend_28 { pt3dadd( 272.19, 187.396, 23.2201, 0.3814 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 88/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 241.132, 254.426, 40.9223, 0.7118 ) }
    dend_25 { pt3dadd( 241.027, 254.962, 40.3556, 0.839 ) }
    dend_25 { pt3dadd( 240.749, 255.996, 39.4316, 0.7118 ) }
    dend_25 { pt3dadd( 240.198, 256.947, 38.8573, 0.5848 ) }
    dend_25 { pt3dadd( 239.342, 257.693, 38.6224, 0.5338 ) }
    dend_25 { pt3dadd( 238.493, 258.456, 38.5112, 0.5338 ) }
    dend_25 { pt3dadd( 237.641, 259.206, 38.2323, 0.483 ) }
    dend_25 { pt3dadd( 236.777, 259.92, 38.523, 0.4068 ) }
    dend_25 { pt3dadd( 235.771, 260.41, 38.729, 0.356 ) }
    dend_25 { pt3dadd( 234.853, 261.0, 38.1262, 0.3814 ) }
    dend_25 { pt3dadd( 234.061, 261.792, 37.6088, 0.483 ) }
    dend_25 { pt3dadd( 233.163, 262.487, 37.4693, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_25 { pt3dadd( 232.232, 263.139, 37.1731, 0.5592 ) }
    dend_25 { pt3dadd( 231.258, 263.677, 36.5442, 0.483 ) }
    dend_25 { pt3dadd( 230.293, 264.272, 36.3698, 0.4576 ) }
    dend_25 { pt3dadd( 229.308, 264.85, 36.2247, 0.4322 ) }
    dend_25 { pt3dadd( 228.413, 265.49, 35.5292, 0.4576 ) }
    dend_25 { pt3dadd( 227.564, 266.238, 35.2262, 0.4322 ) }
    dend_25 { pt3dadd( 226.793, 267.077, 34.9933, 0.4068 ) }
    dend_25 { pt3dadd( 226.221, 267.997, 34.1695, 0.3814 ) }
    dend_25 { pt3dadd( 225.684, 268.943, 33.3029, 0.3814 ) }
    dend_25 { pt3dadd( 225.096, 269.912, 33.0593, 0.3814 ) }
    dend_25 { pt3dadd( 224.562, 270.923, 33.0366, 0.4068 ) }
    dend_25 { pt3dadd( 224.049, 271.946, 33.0215, 0.4576 ) }
    dend_25 { pt3dadd( 223.566, 272.982, 32.9342, 0.5084 ) }
    dend_25 { pt3dadd( 223.325, 274.072, 32.4075, 0.5338 ) }
    dend_25 { pt3dadd( 223.23, 275.205, 32.4461, 0.5338 ) }
    dend_25 { pt3dadd( 222.98, 276.315, 32.69, 0.5084 ) }
    dend_25 { pt3dadd( 223.114, 277.403, 32.0418, 0.483 ) }
    dend_25 { pt3dadd( 222.922, 278.517, 31.8049, 0.4068 ) }
    dend_25 { pt3dadd( 222.308, 279.452, 31.2903, 0.4068 ) }
    dend_25 { pt3dadd( 221.568, 280.303, 30.8081, 0.4322 ) }
    dend_25 { pt3dadd( 220.632, 280.952, 30.6561, 0.5084 ) }
    dend_25 { pt3dadd( 219.799, 281.682, 29.967, 0.5084 ) }
    dend_25 { pt3dadd( 218.88, 282.353, 29.6834, 0.483 ) }
    dend_25 { pt3dadd( 217.866, 282.879, 29.6657, 0.5084 ) }
    dend_25 { pt3dadd( 216.868, 283.442, 29.5963, 0.5848 ) }
    dend_25 { pt3dadd( 216.008, 284.174, 29.1654, 0.661 ) }
    dend_25 { pt3dadd( 215.303, 285.0, 28.2937, 0.6864 ) }
    dend_25 { pt3dadd( 214.853, 285.973, 27.3112, 0.7118 ) }
    dend_25 { pt3dadd( 214.135, 286.691, 26.0282, 0.7626 ) }
    dend_25 { pt3dadd( 213.321, 287.296, 24.7307, 0.7626 ) }
    dend_25 { pt3dadd( 212.601, 287.925, 23.2058, 0.661 ) }
    dend_25 { pt3dadd( 211.939, 288.742, 22.1634, 0.483 ) }
    dend_25 { pt3dadd( 211.26, 289.656, 22.3306, 0.356 ) }
    dend_25 { pt3dadd( 210.57, 290.545, 21.8576, 0.356 ) }
    dend_25 { pt3dadd( 209.855, 291.346, 20.9138, 0.3814 ) }
    dend_25 { pt3dadd( 209.033, 291.886, 19.5966, 0.4068 ) }
    dend_25 { pt3dadd( 208.074, 292.0, 18.1381, 0.356 ) }
    dend_25 { pt3dadd( 207.622, 292.856, 17.92, 0.3304 ) }
    dend_25 { pt3dadd( 207.122, 293.806, 17.92, 0.305 ) }
    dend_25 { pt3dadd( 206.18, 294.435, 17.712, 0.2796 ) }
    dend_25 { pt3dadd( 205.338, 295.111, 16.8314, 0.2796 ) }
    dend_25 { pt3dadd( 204.599, 295.944, 16.6172, 0.3304 ) }
    dend_25 { pt3dadd( 203.943, 296.68, 17.64, 0.4322 ) }
    dend_25 { pt3dadd( 203.258, 297.442, 18.1815, 0.483 ) }
    dend_25 { pt3dadd( 202.678, 298.356, 17.6616, 0.4576 ) }
    dend_25 { pt3dadd( 202.385, 299.384, 16.8328, 0.3814 ) }
    dend_25 { pt3dadd( 201.991, 300.434, 16.52, 0.356 ) }
    dend_25 { pt3dadd( 201.512, 301.461, 16.2582, 0.356 ) }
    dend_25 { pt3dadd( 201.23, 302.565, 16.2014, 0.3814 ) }
    dend_25 { pt3dadd( 200.717, 303.398, 15.4339, 0.3814 ) }
    dend_25 { pt3dadd( 199.977, 304.224, 14.8506, 0.3814 ) }
    dend_25 { pt3dadd( 199.4, 305.105, 14.28, 0.3814 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 52/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 241.132, 254.426, 40.9223, 0.7118 ) }
    dend_20 { pt3dadd( 241.407, 254.855, 41.0052, 0.6864 ) }
    dend_20 { pt3dadd( 241.926, 255.837, 41.4901, 0.6864 ) }
    dend_20 { pt3dadd( 242.354, 256.805, 42.5244, 0.6356 ) }
    dend_20 { pt3dadd( 242.919, 257.765, 43.0377, 0.5592 ) }
    dend_20 { pt3dadd( 243.497, 258.744, 42.8288, 0.5592 ) }
    dend_20 { pt3dadd( 243.935, 259.767, 42.3074, 0.6102 ) }
    dend_20 { pt3dadd( 244.208, 260.866, 42.049, 0.661 ) }
    dend_20 { pt3dadd( 244.601, 261.932, 42.2979, 0.7118 ) }
    dend_20 { pt3dadd( 245.053, 262.96, 42.8252, 0.7372 ) }
    dend_20 { pt3dadd( 245.525, 263.991, 43.1113, 0.7372 ) }
    dend_20 { pt3dadd( 245.956, 265.05, 43.066, 0.6864 ) }
    dend_20 { pt3dadd( 246.422, 266.085, 42.8109, 0.6356 ) }
    dend_20 { pt3dadd( 246.991, 267.053, 42.2999, 0.6356 ) }
    dend_20 { pt3dadd( 247.632, 267.988, 42.0118, 0.661 ) }
    dend_20 { pt3dadd( 248.299, 268.914, 42.0109, 0.6864 ) }
    dend_20 { pt3dadd( 248.997, 269.818, 42.058, 0.661 ) }
    dend_20 { pt3dadd( 249.646, 270.749, 42.3279, 0.6102 ) }
    dend_20 { pt3dadd( 250.15, 271.717, 42.4556, 0.5338 ) }
    dend_20 { pt3dadd( 250.204, 272.827, 42.0574, 0.5084 ) }
    dend_20 { pt3dadd( 250.051, 273.959, 42.0, 0.483 ) }
    dend_20 { pt3dadd( 250.132, 275.079, 41.9994, 0.5084 ) }
    dend_20 { pt3dadd( 250.437, 276.181, 41.9969, 0.483 ) }
    dend_20 { pt3dadd( 250.665, 277.301, 41.9787, 0.5338 ) }
    dend_20 { pt3dadd( 250.766, 278.436, 41.8659, 0.5084 ) }
    dend_20 { pt3dadd( 250.767, 279.558, 41.405, 0.483 ) }
    dend_20 { pt3dadd( 250.773, 280.677, 40.9312, 0.3814 ) }
    dend_20 { pt3dadd( 250.812, 281.819, 40.88, 0.3814 ) }
    dend_20 { pt3dadd( 251.025, 282.933, 40.88, 0.4322 ) }
    dend_20 { pt3dadd( 251.454, 283.992, 40.88, 0.5084 ) }
    dend_20 { pt3dadd( 251.898, 285.045, 40.88, 0.483 ) }
    dend_20 { pt3dadd( 252.172, 286.148, 40.88, 0.4068 ) }
    dend_20 { pt3dadd( 252.41, 287.259, 40.88, 0.3304 ) }
    dend_20 { pt3dadd( 252.76, 288.349, 40.8811, 0.3304 ) }
    dend_20 { pt3dadd( 252.99, 289.464, 40.8873, 0.4068 ) }
    dend_20 { pt3dadd( 253.038, 290.605, 40.9391, 0.483 ) }
    dend_20 { pt3dadd( 253.047, 291.746, 40.9116, 0.5338 ) }
    dend_20 { pt3dadd( 253.055, 292.89, 40.9035, 0.5084 ) }
    dend_20 { pt3dadd( 253.062, 294.032, 41.0455, 0.5084 ) }
    dend_20 { pt3dadd( 253.107, 295.143, 41.6777, 0.5338 ) }
    dend_20 { pt3dadd( 253.426, 296.219, 41.4974, 0.5592 ) }
    dend_20 { pt3dadd( 253.883, 297.243, 40.9441, 0.5338 ) }
    dend_20 { pt3dadd( 254.382, 298.269, 40.88, 0.4576 ) }
    dend_20 { pt3dadd( 254.881, 299.299, 40.88, 0.4322 ) }
    dend_20 { pt3dadd( 255.368, 300.333, 40.88, 0.4576 ) }
    dend_20 { pt3dadd( 255.769, 301.405, 40.88, 0.483 ) }
    dend_20 { pt3dadd( 256.036, 302.516, 40.88, 0.483 ) }
    dend_20 { pt3dadd( 256.24, 303.642, 40.88, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_20 { pt3dadd( 256.257, 304.784, 40.88, 0.3814 ) }
    dend_20 { pt3dadd( 256.255, 305.928, 40.88, 0.3814 ) }
    dend_20 { pt3dadd( 256.247, 307.073, 40.8794, 0.483 ) }
    dend_20 { pt3dadd( 256.185, 308.214, 40.8766, 0.6102 ) }
    dend_20 { pt3dadd( 255.872, 309.312, 40.8587, 0.7118 ) }
    dend_20 { pt3dadd( 255.532, 310.404, 40.7509, 0.788 ) }
    dend_20 { pt3dadd( 255.441, 311.519, 40.2097, 0.8136 ) }
    dend_20 { pt3dadd( 255.495, 312.631, 39.9403, 0.8136 ) }
    dend_20 { pt3dadd( 255.752, 313.727, 40.3894, 0.788 ) }
    dend_20 { pt3dadd( 255.997, 314.821, 40.8551, 0.7372 ) }
    dend_20 { pt3dadd( 256.188, 315.937, 40.9156, 0.7372 ) }
    dend_20 { pt3dadd( 255.979, 317.038, 41.2118, 0.661 ) }
    dend_20 { pt3dadd( 255.575, 318.088, 41.7043, 0.5848 ) }
    dend_20 { pt3dadd( 255.083, 319.106, 42.0538, 0.4322 ) }
    dend_20 { pt3dadd( 254.902, 320.219, 42.4514, 0.4068 ) }
    dend_20 { pt3dadd( 254.883, 321.345, 42.9346, 0.4576 ) }
    dend_20 { pt3dadd( 254.883, 322.458, 42.3979, 0.5848 ) }
    dend_20 { pt3dadd( 254.879, 323.598, 42.28, 0.6356 ) }
    dend_20 { pt3dadd( 254.833, 324.696, 42.9554, 0.6102 ) }
    dend_20 { pt3dadd( 254.635, 325.796, 43.4034, 0.5592 ) }
    dend_20 { pt3dadd( 254.185, 326.827, 43.8948, 0.5338 ) }
    dend_20 { pt3dadd( 253.769, 327.873, 43.8463, 0.483 ) }
    dend_20 { pt3dadd( 253.685, 328.953, 43.2625, 0.4576 ) }
    dend_20 { pt3dadd( 254.089, 330.009, 43.0408, 0.4068 ) }
    dend_20 { pt3dadd( 254.704, 330.955, 42.7059, 0.4322 ) }
    dend_20 { pt3dadd( 255.219, 331.903, 42.0913, 0.4322 ) }
    dend_20 { pt3dadd( 255.329, 333.038, 41.9972, 0.5084 ) }
    dend_20 { pt3dadd( 255.247, 334.176, 41.9821, 0.5848 ) }
    dend_20 { pt3dadd( 254.962, 335.277, 41.8956, 0.661 ) }
    dend_20 { pt3dadd( 254.579, 336.333, 41.5209, 0.7118 ) }
    dend_20 { pt3dadd( 254.445, 337.431, 40.9612, 0.7118 ) }
    dend_20 { pt3dadd( 254.551, 338.565, 40.9083, 0.7118 ) }
    dend_20 { pt3dadd( 254.786, 339.681, 41.0337, 0.6864 ) }
    dend_20 { pt3dadd( 254.887, 340.78, 41.6478, 0.7118 ) }
    dend_20 { pt3dadd( 254.911, 341.89, 42.2962, 0.7372 ) }
    dend_20 { pt3dadd( 255.132, 342.956, 43.1029, 0.7372 ) }
    dend_20 { pt3dadd( 255.314, 344.071, 43.2737, 0.661 ) }
    dend_20 { pt3dadd( 255.344, 345.212, 43.1642, 0.5592 ) }
    dend_20 { pt3dadd( 255.361, 346.355, 43.2387, 0.483 ) }
    dend_20 { pt3dadd( 255.471, 347.46, 43.8556, 0.483 ) }
    dend_20 { pt3dadd( 255.73, 348.528, 44.6281, 0.5084 ) }
    dend_20 { pt3dadd( 255.801, 349.629, 45.3202, 0.5338 ) }
    dend_20 { pt3dadd( 255.84, 350.761, 45.6966, 0.5848 ) }
    dend_20 { pt3dadd( 256.075, 351.868, 45.4474, 0.661 ) }
    dend_20 { pt3dadd( 256.547, 352.906, 45.4188, 0.7372 ) }
    dend_20 { pt3dadd( 257.013, 353.943, 45.7064, 0.7372 ) }
    dend_20 { pt3dadd( 257.346, 355.003, 46.3456, 0.6864 ) }
    dend_20 { pt3dadd( 257.591, 356.116, 46.4738, 0.6102 ) }
    dend_20 { pt3dadd( 257.533, 357.251, 46.48, 0.5084 ) }
    dend_20 { pt3dadd( 257.307, 358.371, 46.4803, 0.4576 ) }
    dend_20 { pt3dadd( 257.289, 359.502, 46.4822, 0.4068 ) }
    dend_20 { pt3dadd( 257.617, 360.597, 46.4932, 0.483 ) }
    dend_20 { pt3dadd( 257.96, 361.676, 46.5674, 0.483 ) }
    dend_20 { pt3dadd( 257.93, 362.791, 46.916, 0.5592 ) }
    dend_20 { pt3dadd( 257.557, 363.836, 47.5132, 0.5338 ) }
    dend_20 { pt3dadd( 257.201, 364.901, 47.6694, 0.6356 ) }
    dend_20 { pt3dadd( 257.172, 366.025, 48.0399, 0.6864 ) }
    dend_20 { pt3dadd( 257.169, 367.08, 49.0921, 0.7626 ) }
    dend_20 { pt3dadd( 257.146, 368.108, 50.2642, 0.7118 ) }
    dend_20 { pt3dadd( 257.008, 369.205, 50.5201, 0.6356 ) }
    dend_20 { pt3dadd( 256.628, 370.258, 50.2874, 0.5084 ) }
    dend_20 { pt3dadd( 256.32, 371.315, 50.7184, 0.4576 ) }
    dend_20 { pt3dadd( 256.484, 372.422, 50.9897, 0.4322 ) }
    dend_20 { pt3dadd( 257.026, 373.401, 51.2366, 0.5084 ) }
    dend_20 { pt3dadd( 257.766, 374.246, 51.774, 0.5084 ) }
    dend_20 { pt3dadd( 258.088, 375.334, 52.0772, 0.5338 ) }
    dend_20 { pt3dadd( 258.203, 376.472, 52.0836, 0.5084 ) }
    dend_20 { pt3dadd( 258.703, 377.501, 52.1004, 0.5848 ) }
    dend_20 { pt3dadd( 259.313, 378.464, 52.1906, 0.6102 ) }
    dend_20 { pt3dadd( 259.341, 379.58, 52.7772, 0.6356 ) }
    dend_20 { pt3dadd( 259.034, 380.666, 53.1936, 0.5848 ) }
    dend_20 { pt3dadd( 258.974, 381.809, 53.1558, 0.5338 ) }
    dend_20 { pt3dadd( 258.807, 382.929, 52.8713, 0.483 ) }
    dend_20 { pt3dadd( 258.549, 383.9, 51.6541, 0.4576 ) }
    dend_20 { pt3dadd( 258.576, 385.023, 52.1587, 0.4576 ) }
    dend_20 { pt3dadd( 258.695, 386.102, 52.8917, 0.4576 ) }
    dend_20 { pt3dadd( 258.982, 387.179, 52.6616, 0.4322 ) }
    dend_20 { pt3dadd( 259.102, 388.24, 53.4971, 0.4576 ) }
    dend_20 { pt3dadd( 259.375, 389.316, 53.0928, 0.4576 ) }
    dend_20 { pt3dadd( 259.25, 390.434, 53.076, 0.5084 ) }
    dend_20 { pt3dadd( 258.489, 391.261, 53.2053, 0.4576 ) }
    dend_20 { pt3dadd( 257.771, 392.15, 53.2804, 0.4322 ) }
    dend_20 { pt3dadd( 257.529, 393.244, 53.7457, 0.3814 ) }
    dend_20 { pt3dadd( 257.211, 394.336, 53.5021, 0.3814 ) }
    dend_20 { pt3dadd( 257.153, 395.465, 53.0905, 0.356 ) }
    dend_20 { pt3dadd( 256.922, 396.536, 52.3426, 0.3304 ) }
    dend_20 { pt3dadd( 256.753, 397.362, 52.7078, 0.356 ) }
    dend_20 { pt3dadd( 256.703, 398.5, 52.5518, 0.4068 ) }
    dend_20 { pt3dadd( 256.646, 399.619, 53.0986, 0.4576 ) }
    dend_20 { pt3dadd( 256.445, 400.739, 53.1997, 0.4576 ) }
    dend_20 { pt3dadd( 256.562, 401.869, 53.1983, 0.4576 ) }
    dend_20 { pt3dadd( 256.216, 402.957, 53.1882, 0.4576 ) }
    dend_20 { pt3dadd( 255.706, 403.972, 53.1331, 0.4322 ) }
    dend_20 { pt3dadd( 255.614, 405.09, 52.7808, 0.4322 ) }
    // Section: dend_18, id: dend_18, parent: dend_12 (entry count 94/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 242.464, 241.718, 48.8544, 0.6356 ) }
    dend_18 { pt3dadd( 241.676, 240.663, 49.56, 0.6102 ) }
    dend_18 { pt3dadd( 240.739, 240.009, 49.56, 0.483 ) }
    dend_18 { pt3dadd( 239.73, 239.47, 49.56, 0.4576 ) }
    dend_18 { pt3dadd( 238.745, 238.905, 49.56, 0.5084 ) }
    dend_18 { pt3dadd( 237.922, 238.111, 49.56, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_18 { pt3dadd( 237.088, 237.33, 49.56, 0.5592 ) }
    dend_18 { pt3dadd( 236.071, 236.835, 49.84, 0.5084 ) }
    dend_18 { pt3dadd( 235.144, 236.174, 49.8778, 0.4322 ) }
    dend_18 { pt3dadd( 234.555, 235.554, 51.24, 0.483 ) }
    dend_18 { pt3dadd( 233.658, 234.994, 51.5852, 0.5084 ) }
    dend_18 { pt3dadd( 233.118, 234.014, 51.8, 0.5592 ) }
    dend_18 { pt3dadd( 232.228, 233.303, 51.8686, 0.5084 ) }
    dend_18 { pt3dadd( 231.398, 232.595, 52.3494, 0.483 ) }
    dend_18 { pt3dadd( 231.089, 231.659, 53.2, 0.4576 ) }
    dend_18 { pt3dadd( 230.523, 230.834, 53.2, 0.483 ) }
    dend_18 { pt3dadd( 229.611, 230.158, 53.3341, 0.5338 ) }
    dend_18 { pt3dadd( 228.739, 229.545, 54.1635, 0.5848 ) }
    dend_18 { pt3dadd( 227.775, 228.989, 54.588, 0.5592 ) }
    dend_18 { pt3dadd( 226.747, 228.498, 54.6, 0.5084 ) }
    dend_18 { pt3dadd( 225.689, 228.06, 54.637, 0.483 ) }
    dend_18 { pt3dadd( 224.728, 227.468, 54.9755, 0.5084 ) }
    dend_18 { pt3dadd( 223.725, 226.955, 55.3235, 0.5084 ) }
    dend_18 { pt3dadd( 222.701, 226.496, 55.72, 0.483 ) }
    dend_18 { pt3dadd( 221.602, 226.232, 55.72, 0.4576 ) }
    dend_18 { pt3dadd( 220.473, 226.057, 55.72, 0.4576 ) }
    dend_18 { pt3dadd( 219.42, 225.711, 56.28, 0.4322 ) }
    dend_18 { pt3dadd( 218.479, 225.087, 56.56, 0.4322 ) }
    dend_18 { pt3dadd( 217.514, 224.481, 56.56, 0.483 ) }
    dend_18 { pt3dadd( 216.462, 224.081, 56.7403, 0.6102 ) }
    dend_18 { pt3dadd( 215.644, 223.318, 57.1637, 0.6864 ) }
    dend_18 { pt3dadd( 214.646, 222.793, 57.4, 0.661 ) }
    dend_18 { pt3dadd( 213.538, 222.529, 57.4, 0.5338 ) }
    dend_18 { pt3dadd( 212.89, 222.149, 59.08, 0.4068 ) }
    dend_18 { pt3dadd( 212.143, 221.305, 59.08, 0.305 ) }
    dend_18 { pt3dadd( 211.365, 220.483, 59.08, 0.3304 ) }
    dend_18 { pt3dadd( 210.6, 219.821, 59.08, 0.4322 ) }
    dend_18 { pt3dadd( 209.693, 219.242, 59.1007, 0.5592 ) }
    dend_18 { pt3dadd( 208.997, 218.737, 60.1138, 0.5592 ) }
    dend_18 { pt3dadd( 208.107, 218.392, 61.299, 0.4576 ) }
    dend_18 { pt3dadd( 207.107, 217.978, 61.6, 0.4068 ) }
    dend_18 { pt3dadd( 206.094, 217.447, 61.6, 0.4068 ) }
    dend_18 { pt3dadd( 205.031, 217.081, 61.6, 0.4576 ) }
    dend_18 { pt3dadd( 204.064, 216.472, 61.6, 0.4068 ) }
    dend_18 { pt3dadd( 203.034, 215.987, 61.6, 0.3304 ) }
    dend_18 { pt3dadd( 201.962, 215.712, 61.6, 0.2542 ) }
    dend_18 { pt3dadd( 201.045, 215.039, 61.6, 0.2288 ) }
    dend_18 { pt3dadd( 200.064, 214.455, 61.6, 0.2288 ) }
    dend_18 { pt3dadd( 199.062, 213.945, 61.6, 0.2542 ) }
    dend_18 { pt3dadd( 198.2, 213.24, 61.6, 0.305 ) }
    dend_18 { pt3dadd( 197.303, 212.581, 61.8377, 0.3814 ) }
    dend_18 { pt3dadd( 196.557, 211.776, 61.88, 0.4068 ) }
    dend_18 { pt3dadd( 196.148, 210.744, 61.88, 0.4068 ) }
    dend_18 { pt3dadd( 195.624, 209.861, 61.88, 0.356 ) }
    dend_18 { pt3dadd( 195.583, 208.718, 61.88, 0.3304 ) }
    dend_18 { pt3dadd( 195.368, 207.603, 61.88, 0.2796 ) }
    dend_18 { pt3dadd( 195.282, 206.716, 62.9541, 0.2542 ) }
    dend_18 { pt3dadd( 195.282, 205.611, 63.5513, 0.2288 ) }
    dend_18 { pt3dadd( 195.282, 204.472, 63.7003, 0.2288 ) }
    dend_18 { pt3dadd( 195.292, 203.343, 64.12, 0.2288 ) }
    dend_18 { pt3dadd( 195.548, 202.231, 64.12, 0.2288 ) }
    dend_18 { pt3dadd( 195.693, 201.104, 64.12, 0.2288 ) }
    dend_18 { pt3dadd( 195.974, 199.996, 64.12, 0.2542 ) }
    dend_18 { pt3dadd( 196.258, 198.918, 64.12, 0.2796 ) }
    dend_18 { pt3dadd( 196.585, 197.834, 64.12, 0.305 ) }
    dend_18 { pt3dadd( 196.683, 196.703, 64.3765, 0.2796 ) }
    dend_18 { pt3dadd( 196.769, 195.567, 64.4, 0.2542 ) }
    dend_18 { pt3dadd( 197.099, 194.599, 65.4251, 0.2542 ) }
    dend_18 { pt3dadd( 197.111, 193.517, 66.08, 0.2796 ) }
    dend_18 { pt3dadd( 197.096, 192.376, 66.1046, 0.305 ) }
    dend_18 { pt3dadd( 196.779, 191.337, 66.8682, 0.305 ) }
    dend_18 { pt3dadd( 196.308, 190.527, 67.76, 0.305 ) }
    dend_18 { pt3dadd( 196.094, 189.409, 67.76, 0.305 ) }
    dend_18 { pt3dadd( 195.566, 188.441, 68.32, 0.2796 ) }
    dend_18 { pt3dadd( 194.73, 187.717, 68.4536, 0.2542 ) }
    dend_18 { pt3dadd( 194.446, 186.685, 69.1807, 0.2288 ) }
    dend_18 { pt3dadd( 193.824, 185.75, 69.6508, 0.2542 ) }
    dend_18 { pt3dadd( 193.439, 184.685, 69.72, 0.2796 ) }
    dend_18 { pt3dadd( 193.225, 183.609, 70.2388, 0.305 ) }
    dend_18 { pt3dadd( 193.122, 182.527, 70.56, 0.2796 ) }
    dend_18 { pt3dadd( 192.458, 181.805, 70.9923, 0.2542 ) }
    dend_18 { pt3dadd( 192.154, 180.763, 71.8796, 0.2288 ) }
    dend_18 { pt3dadd( 191.85, 179.721, 72.7672, 0.2288 ) }
    dend_18 { pt3dadd( 191.545, 178.68, 73.6548, 0.2288 ) }
    dend_18 { pt3dadd( 191.241, 177.639, 74.5424, 0.2288 ) }
    dend_18 { pt3dadd( 190.936, 176.597, 75.43, 0.2288 ) }
    dend_18 { pt3dadd( 190.631, 175.556, 76.3174, 0.2288 ) }
    dend_18 { pt3dadd( 190.327, 174.515, 77.205, 0.2288 ) }
    dend_18 { pt3dadd( 189.803, 173.54, 77.5468, 0.2288 ) }
    dend_18 { pt3dadd( 189.141, 172.607, 77.5468, 0.2288 ) }
    dend_18 { pt3dadd( 188.478, 171.674, 77.5468, 0.2288 ) }
    dend_18 { pt3dadd( 187.816, 170.742, 77.5468, 0.2288 ) }
    dend_18 { pt3dadd( 186.92, 170.067, 77.9691, 0.2288 ) }
    dend_18 { pt3dadd( 185.993, 169.426, 78.4476, 0.2288 ) }
    dend_18 { pt3dadd( 185.064, 168.786, 78.9261, 0.2288 ) }
    dend_18 { pt3dadd( 184.133, 168.144, 79.2994, 0.2288 ) }
    dend_18 { pt3dadd( 183.187, 167.501, 79.2994, 0.2288 ) }
    dend_18 { pt3dadd( 182.24, 166.858, 79.2994, 0.2288 ) }
    dend_18 { pt3dadd( 181.294, 166.216, 79.2994, 0.2288 ) }
    dend_18 { pt3dadd( 180.348, 165.573, 79.2994, 0.2288 ) }
    dend_18 { pt3dadd( 179.484, 164.834, 79.4066, 0.2288 ) }
    dend_18 { pt3dadd( 178.706, 164.002, 79.6208, 0.2288 ) }
    dend_18 { pt3dadd( 177.926, 163.169, 79.835, 0.2288 ) }
    dend_18 { pt3dadd( 177.148, 162.336, 80.0492, 0.2288 ) }
    dend_18 { pt3dadd( 176.368, 161.503, 80.2634, 0.2288 ) }
    dend_18 { pt3dadd( 175.589, 160.67, 80.4776, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_18 { pt3dadd( 174.81, 159.836, 80.6921, 0.2796 ) }
    dend_18 { pt3dadd( 174.031, 159.003, 80.9063, 0.305 ) }
    dend_18 { pt3dadd( 173.253, 158.175, 81.1983, 0.2796 ) }
    dend_18 { pt3dadd( 172.477, 157.355, 81.6564, 0.2542 ) }
    dend_18 { pt3dadd( 171.702, 156.536, 82.1145, 0.2288 ) }
    dend_18 { pt3dadd( 170.926, 155.716, 82.5726, 0.2288 ) }
    dend_18 { pt3dadd( 170.148, 154.896, 83.0304, 0.2288 ) }
    dend_18 { pt3dadd( 169.374, 154.076, 83.4884, 0.2288 ) }
    dend_18 { pt3dadd( 168.598, 153.257, 83.9465, 0.2288 ) }
    dend_18 { pt3dadd( 167.822, 152.437, 84.4046, 0.2288 ) }
    dend_18 { pt3dadd( 167.047, 151.618, 84.8627, 0.2288 ) }
    dend_18 { pt3dadd( 166.086, 151.057, 85.2944, 0.2288 ) }
    dend_18 { pt3dadd( 165.049, 150.603, 85.7158, 0.2288 ) }
    dend_18 { pt3dadd( 164.015, 150.148, 86.137, 0.2288 ) }
    dend_18 { pt3dadd( 162.924, 149.847, 86.3092, 0.2288 ) }
    dend_18 { pt3dadd( 161.798, 149.651, 86.3092, 0.2288 ) }
    dend_18 { pt3dadd( 160.672, 149.481, 86.3092, 0.2288 ) }
    dend_18 { pt3dadd( 159.581, 149.825, 86.3092, 0.2288 ) }
    dend_18 { pt3dadd( 158.471, 149.571, 86.3092, 0.2288 ) }
    dend_18 { pt3dadd( 157.624, 148.913, 86.5875, 0.2288 ) }
    dend_18 { pt3dadd( 156.938, 148.015, 87.0402, 0.2288 ) }
    dend_18 { pt3dadd( 156.253, 147.118, 87.4927, 0.2288 ) }
    dend_18 { pt3dadd( 155.568, 146.221, 87.9455, 0.2288 ) }
    dend_18 { pt3dadd( 154.883, 145.324, 88.398, 0.2288 ) }
    dend_18 { pt3dadd( 154.197, 144.427, 88.8507, 0.2288 ) }
    dend_18 { pt3dadd( 153.512, 143.53, 89.3035, 0.2288 ) }
    dend_18 { pt3dadd( 152.827, 142.632, 89.756, 0.2288 ) }
    dend_18 { pt3dadd( 152.143, 141.735, 90.2087, 0.2288 ) }
    dend_18 { pt3dadd( 151.456, 140.838, 90.6615, 0.2288 ) }
    dend_18 { pt3dadd( 150.771, 139.94, 91.114, 0.2542 ) }
    dend_18 { pt3dadd( 150.087, 139.043, 91.5667, 0.2796 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 31/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 242.464, 241.718, 48.8544, 0.6356 ) }
    dend_13 { pt3dadd( 243.171, 241.964, 49.3766, 0.661 ) }
    dend_13 { pt3dadd( 244.271, 242.038, 49.9397, 0.7118 ) }
    dend_13 { pt3dadd( 245.391, 241.852, 49.8896, 0.661 ) }
    dend_13 { pt3dadd( 246.506, 241.596, 49.84, 0.6356 ) }
    dend_13 { pt3dadd( 247.605, 241.279, 49.8408, 0.5592 ) }
    dend_13 { pt3dadd( 248.7, 240.947, 49.845, 0.6102 ) }
    dend_13 { pt3dadd( 249.782, 240.699, 50.4, 0.6102 ) }
    dend_13 { pt3dadd( 250.885, 240.862, 50.6097, 0.5848 ) }
    dend_13 { pt3dadd( 251.844, 241.383, 51.249, 0.5592 ) }
    dend_13 { pt3dadd( 252.883, 241.763, 51.52, 0.5592 ) }
    dend_13 { pt3dadd( 253.76, 242.402, 51.8885, 0.6102 ) }
    dend_13 { pt3dadd( 254.361, 242.935, 52.92, 0.5084 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 44/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 83.7413, 357.843, 64.68, 0.2796 ) }
    dend_10 { pt3dadd( 83.5037, 357.07, 66.7646, 0.356 ) }
    dend_10 { pt3dadd( 83.0834, 356.077, 67.6987, 0.2796 ) }
    dend_10 { pt3dadd( 82.663, 355.084, 68.6328, 0.2288 ) }
    dend_10 { pt3dadd( 82.2818, 354.062, 69.4529, 0.2288 ) }
    dend_10 { pt3dadd( 81.9679, 352.993, 70.077, 0.2288 ) }
    dend_10 { pt3dadd( 81.6538, 351.922, 70.7011, 0.2288 ) }
    dend_10 { pt3dadd( 81.3398, 350.852, 71.3252, 0.2542 ) }
    dend_10 { pt3dadd( 81.0258, 349.783, 71.9494, 0.2796 ) }
    dend_10 { pt3dadd( 80.5549, 349.0, 73.211, 0.305 ) }
    dend_10 { pt3dadd( 79.8963, 348.564, 75.236, 0.2796 ) }
    dend_10 { pt3dadd( 79.1337, 348.188, 77.0781, 0.2796 ) }
    dend_10 { pt3dadd( 78.2701, 347.872, 78.7427, 0.2796 ) }
    dend_10 { pt3dadd( 77.4065, 347.555, 80.4076, 0.305 ) }
    dend_10 { pt3dadd( 76.543, 347.238, 82.0725, 0.2796 ) }
    dend_10 { pt3dadd( 75.7554, 346.978, 83.9941, 0.2542 ) }
    dend_10 { pt3dadd( 74.984, 346.73, 85.9709, 0.2288 ) }
    dend_10 { pt3dadd( 74.2127, 346.482, 87.9474, 0.2288 ) }
    dend_10 { pt3dadd( 73.4413, 346.234, 89.9242, 0.2288 ) }
    dend_10 { pt3dadd( 72.4424, 345.923, 90.9412, 0.2288 ) }
    dend_10 { pt3dadd( 71.3981, 345.6, 91.7672, 0.2288 ) }
    dend_10 { pt3dadd( 70.3539, 345.276, 92.5932, 0.2288 ) }
    dend_10 { pt3dadd( 69.3097, 344.954, 93.4192, 0.2288 ) }
    dend_10 { pt3dadd( 68.2655, 344.63, 94.2455, 0.2288 ) }
    dend_10 { pt3dadd( 67.2213, 344.307, 95.0715, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 69/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 83.7413, 357.843, 64.68, 0.2796 ) }
    dend_9 { pt3dadd( 82.8443, 358.272, 64.68, 0.2288 ) }
    dend_9 { pt3dadd( 81.9631, 358.951, 64.4, 0.2288 ) }
    dend_9 { pt3dadd( 81.2036, 359.785, 64.4, 0.2288 ) }
    dend_9 { pt3dadd( 80.4529, 360.635, 64.4, 0.2288 ) }
    dend_9 { pt3dadd( 79.7638, 361.52, 64.4, 0.2288 ) }
    dend_9 { pt3dadd( 79.0046, 362.213, 64.4, 0.2288 ) }
    dend_9 { pt3dadd( 78.1753, 362.972, 64.5162, 0.2288 ) }
    dend_9 { pt3dadd( 77.7284, 363.99, 64.68, 0.2288 ) }
    dend_9 { pt3dadd( 76.9228, 364.716, 64.68, 0.2288 ) }
    dend_9 { pt3dadd( 75.9206, 365.255, 64.6638, 0.2288 ) }
    dend_9 { pt3dadd( 75.032, 365.906, 64.12, 0.2288 ) }
    dend_9 { pt3dadd( 74.6176, 366.784, 63.2976, 0.2288 ) }
    dend_9 { pt3dadd( 74.0674, 367.704, 62.9244, 0.2288 ) }
    dend_9 { pt3dadd( 73.9029, 368.736, 62.16, 0.2288 ) }
    dend_9 { pt3dadd( 73.9029, 369.88, 62.16, 0.2288 ) }
    dend_9 { pt3dadd( 73.9029, 371.024, 62.16, 0.2288 ) }
    dend_9 { pt3dadd( 73.9029, 372.168, 62.16, 0.2288 ) }
    dend_9 { pt3dadd( 73.9029, 373.312, 62.16, 0.2288 ) }
    dend_9 { pt3dadd( 73.9029, 374.456, 62.16, 0.2288 ) }
    dend_9 { pt3dadd( 73.9029, 375.599, 62.2776, 0.2288 ) }
    dend_9 { pt3dadd( 73.5179, 376.54, 62.7542, 0.2542 ) }
    dend_9 { pt3dadd( 73.1633, 377.584, 63.0, 0.2796 ) }
    dend_9 { pt3dadd( 72.6373, 378.555, 63.0, 0.3304 ) }
    dend_9 { pt3dadd( 71.9368, 379.362, 63.0, 0.3304 ) }
    dend_9 { pt3dadd( 71.2717, 380.172, 62.72, 0.3304 ) }
    dend_9 { pt3dadd( 70.8326, 381.025, 62.72, 0.2796 ) }
    dend_9 { pt3dadd( 69.8138, 381.515, 62.72, 0.2542 ) }
    dend_9 { pt3dadd( 68.8124, 381.849, 62.72, 0.2288 ) }
    dend_9 { pt3dadd( 68.3352, 382.821, 62.3829, 0.2796 ) }
    dend_9 { pt3dadd( 67.8397, 383.812, 61.88, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 0/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 221.523, 228.636, 35.3265, 0.6102 ) }
    dend_7 { pt3dadd( 219.991, 228.783, 36.1637, 0.356 ) }
    dend_7 { pt3dadd( 218.958, 228.649, 35.8758, 0.4576 ) }
    dend_7 { pt3dadd( 217.965, 228.64, 34.5369, 0.5338 ) }
    dend_7 { pt3dadd( 216.898, 228.719, 33.6361, 0.5848 ) }
    dend_7 { pt3dadd( 215.82, 228.497, 33.8341, 0.661 ) }
    dend_7 { pt3dadd( 214.74, 228.162, 34.1113, 0.661 ) }
    dend_7 { pt3dadd( 213.667, 227.823, 33.7378, 0.6356 ) }
    dend_7 { pt3dadd( 212.618, 227.514, 33.0005, 0.5592 ) }
    dend_7 { pt3dadd( 211.549, 227.654, 32.3075, 0.5338 ) }
    dend_7 { pt3dadd( 210.467, 227.737, 32.9966, 0.5848 ) }
    dend_7 { pt3dadd( 209.361, 227.467, 33.04, 0.6102 ) }
    dend_7 { pt3dadd( 208.219, 227.423, 33.04, 0.6356 ) }
    dend_7 { pt3dadd( 207.075, 227.406, 33.04, 0.6102 ) }
    dend_7 { pt3dadd( 205.948, 227.238, 33.0397, 0.5848 ) }
    dend_7 { pt3dadd( 204.833, 226.982, 33.0383, 0.5592 ) }
    dend_7 { pt3dadd( 203.702, 226.824, 33.0285, 0.5338 ) }
    dend_7 { pt3dadd( 202.633, 226.418, 32.982, 0.5084 ) }
    dend_7 { pt3dadd( 201.553, 226.044, 32.9017, 0.4576 ) }
    dend_7 { pt3dadd( 200.515, 225.82, 33.9307, 0.4068 ) }
    dend_7 { pt3dadd( 199.46, 225.963, 32.9574, 0.4322 ) }
    dend_7 { pt3dadd( 198.437, 225.741, 31.9197, 0.5592 ) }
    dend_7 { pt3dadd( 197.301, 225.612, 31.9183, 0.7118 ) }
    dend_7 { pt3dadd( 196.161, 225.502, 31.9099, 0.839 ) }
    dend_7 { pt3dadd( 195.066, 225.202, 31.8469, 0.839 ) }
    dend_7 { pt3dadd( 193.993, 224.851, 31.4586, 0.788 ) }
    dend_7 { pt3dadd( 192.89, 224.648, 30.9543, 0.661 ) }
    dend_7 { pt3dadd( 191.788, 224.373, 30.8157, 0.5592 ) }
    dend_7 { pt3dadd( 190.699, 224.025, 30.896, 0.4576 ) }
    dend_7 { pt3dadd( 189.609, 223.723, 31.2715, 0.4322 ) }
    dend_7 { pt3dadd( 188.51, 223.488, 31.4448, 0.4322 ) }
    dend_7 { pt3dadd( 187.398, 223.63, 31.2682, 0.4322 ) }
    dend_7 { pt3dadd( 186.322, 223.766, 32.1437, 0.3814 ) }
    dend_7 { pt3dadd( 185.245, 223.765, 31.1996, 0.3814 ) }
    dend_7 { pt3dadd( 184.15, 223.758, 30.3957, 0.4322 ) }
    dend_7 { pt3dadd( 183.01, 223.707, 30.3064, 0.5084 ) }
    dend_7 { pt3dadd( 181.896, 223.509, 30.2042, 0.5084 ) }
    dend_7 { pt3dadd( 180.863, 223.69, 29.3157, 0.483 ) }
    dend_7 { pt3dadd( 179.93, 224.25, 30.1753, 0.4322 ) }
    dend_7 { pt3dadd( 178.846, 224.25, 29.8222, 0.4068 ) }
    dend_7 { pt3dadd( 177.715, 224.184, 29.4879, 0.3814 ) }
    dend_7 { pt3dadd( 176.624, 223.985, 28.8907, 0.4322 ) }
    dend_7 { pt3dadd( 175.51, 223.806, 28.5891, 0.483 ) }
    dend_7 { pt3dadd( 174.368, 223.761, 28.5614, 0.5338 ) }
    dend_7 { pt3dadd( 173.226, 223.731, 28.5698, 0.483 ) }
    dend_7 { pt3dadd( 172.103, 223.535, 28.6236, 0.4068 ) }
    dend_7 { pt3dadd( 170.98, 223.342, 28.8436, 0.3304 ) }
    dend_7 { pt3dadd( 169.849, 223.254, 28.6614, 0.3304 ) }
    dend_7 { pt3dadd( 168.752, 222.97, 28.5998, 0.356 ) }
    dend_7 { pt3dadd( 167.872, 222.642, 27.5915, 0.3814 ) }
    dend_7 { pt3dadd( 166.93, 222.1, 27.44, 0.356 ) }
    dend_7 { pt3dadd( 165.956, 221.52, 27.3546, 0.3304 ) }
    dend_7 { pt3dadd( 164.93, 221.1, 26.88, 0.3304 ) }
    dend_7 { pt3dadd( 163.946, 220.599, 26.6, 0.3814 ) }
    dend_7 { pt3dadd( 162.926, 220.115, 26.6, 0.4322 ) }
    dend_7 { pt3dadd( 161.855, 219.751, 26.4146, 0.4068 ) }
    dend_7 { pt3dadd( 160.877, 219.169, 26.32, 0.356 ) }
    dend_7 { pt3dadd( 159.777, 218.908, 26.2284, 0.305 ) }
    dend_7 { pt3dadd( 158.742, 218.622, 25.529, 0.3304 ) }
    dend_7 { pt3dadd( 157.642, 218.376, 25.2, 0.3304 ) }
    dend_7 { pt3dadd( 156.514, 218.275, 24.943, 0.3304 ) }
    dend_7 { pt3dadd( 155.378, 218.275, 24.6954, 0.305 ) }
    dend_7 { pt3dadd( 154.245, 218.271, 24.36, 0.305 ) }
    dend_7 { pt3dadd( 153.109, 218.153, 24.36, 0.305 ) }
    dend_7 { pt3dadd( 152.027, 218.013, 23.5824, 0.305 ) }
    dend_7 { pt3dadd( 150.921, 217.818, 23.3666, 0.305 ) }
    dend_7 { pt3dadd( 149.799, 217.818, 22.8351, 0.305 ) }
    dend_7 { pt3dadd( 148.659, 217.818, 22.68, 0.2796 ) }
    dend_7 { pt3dadd( 147.531, 217.966, 22.5543, 0.2542 ) }
    dend_7 { pt3dadd( 146.43, 218.161, 22.12, 0.2288 ) }
    dend_7 { pt3dadd( 145.286, 218.161, 22.12, 0.2288 ) }
    dend_7 { pt3dadd( 144.143, 218.18, 22.12, 0.2288 ) }
    dend_7 { pt3dadd( 143.021, 218.404, 22.12, 0.2288 ) }
    dend_7 { pt3dadd( 141.954, 218.797, 22.12, 0.2288 ) }
    dend_7 { pt3dadd( 140.816, 218.847, 22.12, 0.2542 ) }
    dend_7 { pt3dadd( 139.678, 218.915, 22.12, 0.2796 ) }
    dend_7 { pt3dadd( 138.543, 218.962, 22.0276, 0.305 ) }
    dend_7 { pt3dadd( 137.456, 218.847, 21.2582, 0.2796 ) }
    dend_7 { pt3dadd( 136.327, 218.847, 20.7978, 0.2542 ) }
    dend_7 { pt3dadd( 135.196, 218.733, 20.72, 0.2288 ) }
    dend_7 { pt3dadd( 134.071, 218.62, 20.4736, 0.2288 ) }
    dend_7 { pt3dadd( 132.93, 218.669, 20.44, 0.2288 ) }
    dend_7 { pt3dadd( 131.801, 218.847, 20.44, 0.2288 ) }
    dend_7 { pt3dadd( 130.658, 218.847, 20.44, 0.2542 ) }
    dend_7 { pt3dadd( 129.515, 218.835, 20.44, 0.2796 ) }
    dend_7 { pt3dadd( 128.497, 218.43, 19.88, 0.305 ) }
    dend_7 { pt3dadd( 127.366, 218.39, 19.7089, 0.2796 ) }
    dend_7 { pt3dadd( 126.286, 218.082, 19.6, 0.2542 ) }
    dend_7 { pt3dadd( 125.196, 217.806, 19.5782, 0.2288 ) }
    dend_7 { pt3dadd( 124.111, 217.487, 19.32, 0.2288 ) }
    dend_7 { pt3dadd( 122.988, 217.275, 19.32, 0.2288 ) }
    dend_7 { pt3dadd( 121.892, 217.017, 19.1425, 0.2288 ) }
    dend_7 { pt3dadd( 120.754, 216.937, 19.04, 0.2288 ) }
    dend_7 { pt3dadd( 119.628, 216.788, 19.04, 0.2542 ) }
    dend_7 { pt3dadd( 118.519, 216.902, 19.04, 0.3304 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 95/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 221.523, 228.636, 35.3265, 0.6102 ) }
    dend_2 { pt3dadd( 220.864, 227.775, 35.6944, 0.8644 ) }
    dend_2 { pt3dadd( 220.45, 226.75, 35.6216, 0.8644 ) }
    dend_2 { pt3dadd( 220.156, 225.68, 34.9891, 0.8136 ) }
    dend_2 { pt3dadd( 219.824, 224.62, 34.3207, 0.661 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 219.658, 223.516, 33.8643, 0.5084 ) }
    dend_2 { pt3dadd( 219.708, 222.404, 33.2562, 0.4576 ) }
    dend_2 { pt3dadd( 219.952, 221.31, 33.0162, 0.5338 ) }
    dend_2 { pt3dadd( 220.501, 220.314, 32.8628, 0.6356 ) }
    dend_2 { pt3dadd( 220.913, 219.265, 32.3744, 0.6864 ) }
    dend_2 { pt3dadd( 220.784, 218.148, 31.9312, 0.7118 ) }
    dend_2 { pt3dadd( 220.262, 217.131, 31.9368, 0.7372 ) }
    dend_2 { pt3dadd( 220.239, 215.99, 32.0306, 0.8136 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 8/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 255.614, 405.09, 52.7808, 0.4322 ) }
    dend_22 { pt3dadd( 255.9, 405.801, 53.2, 0.4068 ) }
    dend_22 { pt3dadd( 256.458, 406.77, 53.2, 0.4322 ) }
    dend_22 { pt3dadd( 256.813, 407.858, 53.2, 0.356 ) }
    dend_22 { pt3dadd( 257.037, 408.979, 53.2, 0.2796 ) }
    dend_22 { pt3dadd( 257.268, 410.091, 53.2, 0.2288 ) }
    dend_22 { pt3dadd( 257.286, 411.235, 53.2, 0.2288 ) }
    dend_22 { pt3dadd( 257.401, 412.37, 53.2, 0.2542 ) }
    dend_22 { pt3dadd( 257.323, 413.509, 53.2081, 0.2796 ) }
    dend_22 { pt3dadd( 257.312, 414.646, 53.4486, 0.305 ) }
    dend_22 { pt3dadd( 257.393, 415.786, 53.48, 0.305 ) }
    dend_22 { pt3dadd( 257.273, 416.922, 53.48, 0.356 ) }
    dend_22 { pt3dadd( 257.128, 418.055, 53.48, 0.4322 ) }
    dend_22 { pt3dadd( 256.791, 419.116, 53.8745, 0.483 ) }
    dend_22 { pt3dadd( 256.714, 420.247, 54.04, 0.4322 ) }
    dend_22 { pt3dadd( 256.812, 421.381, 54.1915, 0.3304 ) }
    dend_22 { pt3dadd( 256.828, 422.51, 54.6176, 0.2542 ) }
    dend_22 { pt3dadd( 256.828, 423.651, 54.8279, 0.2288 ) }
    dend_22 { pt3dadd( 256.727, 424.785, 54.88, 0.2288 ) }
    dend_22 { pt3dadd( 256.813, 425.924, 54.88, 0.2542 ) }
    dend_22 { pt3dadd( 256.828, 427.067, 54.88, 0.2796 ) }
    dend_22 { pt3dadd( 256.789, 428.21, 54.88, 0.305 ) }
    dend_22 { pt3dadd( 256.435, 429.277, 54.88, 0.2796 ) }
    dend_22 { pt3dadd( 256.232, 430.402, 54.88, 0.2542 ) }
    dend_22 { pt3dadd( 255.965, 431.512, 54.88, 0.2288 ) }
    dend_22 { pt3dadd( 255.377, 432.491, 54.88, 0.2288 ) }
    dend_22 { pt3dadd( 254.936, 433.526, 54.88, 0.2288 ) }
    dend_22 { pt3dadd( 254.176, 434.349, 54.88, 0.2288 ) }
    dend_22 { pt3dadd( 253.969, 435.457, 54.88, 0.2288 ) }
    dend_22 { pt3dadd( 253.739, 436.556, 54.8772, 0.2288 ) }
    dend_22 { pt3dadd( 253.428, 437.645, 54.6, 0.2796 ) }
    dend_22 { pt3dadd( 253.283, 438.763, 54.332, 0.3304 ) }
    dend_22 { pt3dadd( 253.283, 439.907, 54.32, 0.3814 ) }
    dend_22 { pt3dadd( 253.283, 441.046, 54.474, 0.3304 ) }
    dend_22 { pt3dadd( 253.283, 442.186, 54.6, 0.2796 ) }
    dend_22 { pt3dadd( 253.283, 443.33, 54.6, 0.2288 ) }
    dend_22 { pt3dadd( 253.318, 444.473, 54.6, 0.2288 ) }
    dend_22 { pt3dadd( 253.465, 445.604, 54.49, 0.2288 ) }
    dend_22 { pt3dadd( 253.514, 446.739, 54.2696, 0.2288 ) }
    dend_22 { pt3dadd( 253.626, 447.812, 53.48, 0.2288 ) }
    dend_22 { pt3dadd( 253.626, 448.956, 53.48, 0.2288 ) }
    dend_22 { pt3dadd( 253.626, 450.1, 53.48, 0.2288 ) }
    dend_22 { pt3dadd( 253.626, 451.235, 53.76, 0.2288 ) }
    dend_22 { pt3dadd( 253.626, 452.379, 53.76, 0.2288 ) }
    dend_22 { pt3dadd( 253.626, 453.523, 53.76, 0.2288 ) }
    dend_22 { pt3dadd( 253.626, 454.667, 53.76, 0.2288 ) }
    dend_22 { pt3dadd( 253.626, 455.811, 53.76, 0.2288 ) }
    dend_22 { pt3dadd( 253.626, 456.955, 53.76, 0.2288 ) }
    dend_22 { pt3dadd( 253.626, 458.093, 53.655, 0.2288 ) }
    dend_22 { pt3dadd( 253.738, 459.072, 52.6481, 0.2288 ) }
    dend_22 { pt3dadd( 253.74, 460.215, 52.64, 0.2288 ) }
    dend_22 { pt3dadd( 253.74, 461.359, 52.64, 0.2288 ) }
    dend_22 { pt3dadd( 253.74, 462.503, 52.64, 0.2288 ) }
    dend_22 { pt3dadd( 253.74, 463.647, 52.64, 0.2288 ) }
    dend_22 { pt3dadd( 253.74, 464.791, 52.64, 0.2288 ) }
    dend_22 { pt3dadd( 253.74, 465.935, 52.694, 0.2288 ) }
    dend_22 { pt3dadd( 253.74, 467.075, 52.92, 0.2288 ) }
    dend_22 { pt3dadd( 253.729, 468.217, 52.9298, 0.2288 ) }
    dend_22 { pt3dadd( 253.333, 468.937, 54.32, 0.2288 ) }
    dend_22 { pt3dadd( 253.168, 470.056, 54.1615, 0.2288 ) }
    dend_22 { pt3dadd( 253.168, 471.198, 54.04, 0.2288 ) }
    dend_22 { pt3dadd( 253.484, 472.234, 53.366, 0.2288 ) }
    dend_22 { pt3dadd( 253.728, 473.307, 52.92, 0.2288 ) }
    dend_22 { pt3dadd( 253.74, 474.45, 52.92, 0.2288 ) }
    dend_22 { pt3dadd( 253.74, 475.594, 52.92, 0.2288 ) }
    dend_22 { pt3dadd( 253.74, 476.729, 53.2, 0.2288 ) }
    dend_22 { pt3dadd( 253.764, 477.873, 53.2, 0.2288 ) }
    dend_22 { pt3dadd( 254.055, 478.963, 53.3014, 0.2288 ) }
    dend_22 { pt3dadd( 254.206, 480.065, 53.48, 0.2288 ) }
    dend_22 { pt3dadd( 254.4, 481.19, 53.48, 0.2288 ) }
    dend_22 { pt3dadd( 254.426, 482.294, 54.0212, 0.2288 ) }
    dend_22 { pt3dadd( 254.432, 483.409, 54.5112, 0.2288 ) }
    dend_22 { pt3dadd( 254.837, 484.448, 54.6, 0.2288 ) }
    dend_22 { pt3dadd( 255.195, 485.521, 54.6, 0.2288 ) }
    dend_22 { pt3dadd( 255.227, 486.662, 54.6, 0.2288 ) }
    dend_22 { pt3dadd( 255.227, 487.805, 54.5437, 0.2796 ) }
    dend_22 { pt3dadd( 255.227, 488.943, 54.2685, 0.3814 ) }
    dend_22 { pt3dadd( 255.243, 489.968, 53.1927, 0.5084 ) }
    dend_22 { pt3dadd( 255.7, 490.972, 52.64, 0.5338 ) }
    dend_22 { pt3dadd( 256.125, 492.034, 52.64, 0.4576 ) }
    dend_22 { pt3dadd( 256.125, 493.177, 52.64, 0.356 ) }
    dend_22 { pt3dadd( 256.029, 494.317, 52.64, 0.3304 ) }
    dend_22 { pt3dadd( 255.781, 495.431, 52.64, 0.356 ) }
    dend_22 { pt3dadd( 255.571, 496.529, 52.9197, 0.356 ) }
    dend_22 { pt3dadd( 255.571, 497.653, 53.2, 0.305 ) }
    dend_22 { pt3dadd( 255.696, 498.774, 53.2, 0.2542 ) }
    dend_22 { pt3dadd( 256.257, 499.704, 53.7107, 0.2288 ) }
    dend_22 { pt3dadd( 256.294, 500.577, 52.08, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 255.614, 405.09, 52.7808, 0.4322 ) }
    dend_21 { pt3dadd( 254.909, 405.958, 52.7556, 0.2542 ) }
    dend_21 { pt3dadd( 254.008, 406.348, 53.9748, 0.305 ) }
    dend_21 { pt3dadd( 253.201, 407.139, 54.3497, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_21 { pt3dadd( 252.437, 407.986, 54.4796, 0.4068 ) }
    dend_21 { pt3dadd( 251.743, 408.878, 54.885, 0.3814 ) }
    dend_21 { pt3dadd( 251.076, 409.773, 55.0449, 0.305 ) }
    dend_21 { pt3dadd( 250.454, 410.679, 54.2718, 0.2542 ) }
    dend_21 { pt3dadd( 249.785, 411.478, 54.2175, 0.2288 ) }
    dend_21 { pt3dadd( 249.051, 412.212, 55.2782, 0.2288 ) }
    dend_21 { pt3dadd( 248.534, 413.192, 55.8146, 0.2796 ) }
    dend_21 { pt3dadd( 248.017, 414.176, 55.9532, 0.356 ) }
    dend_21 { pt3dadd( 247.297, 415.059, 55.7525, 0.483 ) }
    dend_21 { pt3dadd( 246.59, 415.955, 55.6077, 0.5338 ) }
    dend_21 { pt3dadd( 245.827, 416.782, 55.9518, 0.5592 ) }
    dend_21 { pt3dadd( 245.043, 417.585, 56.4718, 0.483 ) }
    dend_21 { pt3dadd( 244.28, 418.425, 56.7983, 0.4322 ) }
    dend_21 { pt3dadd( 243.59, 419.313, 57.2698, 0.3814 ) }
    dend_21 { pt3dadd( 242.853, 420.166, 57.4882, 0.3814 ) }
    dend_21 { pt3dadd( 241.976, 420.764, 58.1658, 0.356 ) }
    dend_21 { pt3dadd( 241.127, 421.403, 58.8, 0.305 ) }
    dend_21 { pt3dadd( 240.333, 422.221, 58.8, 0.2542 ) }
    dend_21 { pt3dadd( 239.699, 423.15, 58.8, 0.2288 ) }
    dend_21 { pt3dadd( 239.39, 424.216, 58.8, 0.2288 ) }
    dend_21 { pt3dadd( 238.835, 425.215, 58.819, 0.2288 ) }
    dend_21 { pt3dadd( 238.303, 426.213, 59.08, 0.2288 ) }
    dend_21 { pt3dadd( 237.534, 427.005, 59.08, 0.2288 ) }
    dend_21 { pt3dadd( 236.754, 427.806, 59.08, 0.2288 ) }
    dend_21 { pt3dadd( 236.411, 428.838, 59.619, 0.2288 ) }
    dend_21 { pt3dadd( 235.52, 429.518, 59.64, 0.2288 ) }
    dend_21 { pt3dadd( 234.775, 430.376, 59.64, 0.2288 ) }
    dend_21 { pt3dadd( 234.165, 431.328, 59.64, 0.2288 ) }
    dend_21 { pt3dadd( 233.951, 432.442, 59.7985, 0.2288 ) }
    dend_21 { pt3dadd( 233.583, 433.455, 60.5346, 0.2542 ) }
    dend_21 { pt3dadd( 232.488, 433.705, 60.76, 0.2796 ) }
    dend_21 { pt3dadd( 232.004, 434.571, 61.035, 0.305 ) }
    dend_21 { pt3dadd( 232.004, 435.715, 61.04, 0.2796 ) }
    dend_21 { pt3dadd( 231.747, 436.792, 61.339, 0.2542 ) }
    dend_21 { pt3dadd( 231.294, 437.8, 61.8579, 0.2288 ) }
    dend_21 { pt3dadd( 230.568, 438.676, 61.88, 0.2288 ) }
    dend_21 { pt3dadd( 229.816, 439.513, 61.88, 0.2288 ) }
    dend_21 { pt3dadd( 228.857, 440.059, 61.9853, 0.2288 ) }
    dend_21 { pt3dadd( 228.049, 440.677, 62.44, 0.2288 ) }
    dend_21 { pt3dadd( 227.394, 441.566, 62.9698, 0.2288 ) }
    dend_21 { pt3dadd( 226.663, 442.337, 63.5522, 0.2288 ) }
    dend_21 { pt3dadd( 225.766, 443.038, 63.56, 0.2288 ) }
    dend_21 { pt3dadd( 224.851, 443.72, 63.56, 0.2288 ) }
    dend_21 { pt3dadd( 223.984, 444.414, 64.0192, 0.2288 ) }
    dend_21 { pt3dadd( 223.172, 445.206, 64.12, 0.2288 ) }
    dend_21 { pt3dadd( 222.309, 445.955, 64.12, 0.2288 ) }
    dend_21 { pt3dadd( 221.484, 446.726, 64.3986, 0.2542 ) }
    dend_21 { pt3dadd( 220.696, 447.542, 64.4, 0.305 ) }
    dend_21 { pt3dadd( 219.68, 448.016, 64.5372, 0.3814 ) }
    dend_21 { pt3dadd( 219.053, 448.652, 65.8, 0.4068 ) }
    dend_21 { pt3dadd( 218.422, 449.601, 65.8, 0.3814 ) }
    dend_21 { pt3dadd( 217.685, 450.474, 65.8, 0.305 ) }
    dend_21 { pt3dadd( 217.049, 451.372, 66.2245, 0.2542 ) }
    dend_21 { pt3dadd( 216.434, 452.239, 66.64, 0.2288 ) }
    dend_21 { pt3dadd( 215.71, 453.121, 66.64, 0.2288 ) }
    dend_21 { pt3dadd( 215.049, 454.05, 66.7044, 0.2288 ) }
    dend_21 { pt3dadd( 214.462, 454.991, 67.34, 0.2288 ) }
    dend_21 { pt3dadd( 214.043, 455.884, 68.32, 0.2288 ) }
    dend_21 { pt3dadd( 213.7, 456.925, 68.32, 0.2288 ) }
    dend_21 { pt3dadd( 213.314, 457.821, 68.32, 0.2288 ) }
    dend_21 { pt3dadd( 212.385, 458.173, 68.32, 0.2288 ) }
    dend_21 { pt3dadd( 211.89, 459.175, 68.5017, 0.2542 ) }
    dend_21 { pt3dadd( 211.09, 459.938, 68.8246, 0.2796 ) }
    dend_21 { pt3dadd( 210.385, 460.579, 70.2822, 0.305 ) }
    dend_21 { pt3dadd( 209.704, 461.315, 70.56, 0.305 ) }
    dend_21 { pt3dadd( 208.85, 462.004, 70.56, 0.3304 ) }
    dend_21 { pt3dadd( 208.042, 462.813, 70.56, 0.4322 ) }
    dend_21 { pt3dadd( 207.751, 463.778, 70.28, 0.5592 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 68/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 254.361, 242.935, 52.92, 0.5084 ) }
    dend_17 { pt3dadd( 254.805, 243.968, 52.92, 0.3304 ) }
    dend_17 { pt3dadd( 255.329, 244.984, 52.92, 0.356 ) }
    dend_17 { pt3dadd( 255.807, 245.982, 53.2, 0.4068 ) }
    dend_17 { pt3dadd( 256.529, 246.81, 53.2, 0.4322 ) }
    dend_17 { pt3dadd( 256.774, 247.917, 53.2165, 0.483 ) }
    dend_17 { pt3dadd( 257.132, 248.954, 53.48, 0.5338 ) }
    dend_17 { pt3dadd( 257.847, 249.815, 53.48, 0.5848 ) }
    dend_17 { pt3dadd( 258.086, 250.92, 53.48, 0.5848 ) }
    dend_17 { pt3dadd( 258.086, 252.064, 53.4951, 0.5084 ) }
    dend_17 { pt3dadd( 258.107, 253.165, 54.1083, 0.4322 ) }
    dend_17 { pt3dadd( 258.21, 254.265, 54.6, 0.356 ) }
    dend_17 { pt3dadd( 258.726, 255.244, 54.8688, 0.3304 ) }
    dend_17 { pt3dadd( 258.971, 256.334, 54.88, 0.2796 ) }
    dend_17 { pt3dadd( 259.469, 257.282, 55.16, 0.305 ) }
    dend_17 { pt3dadd( 259.88, 258.318, 55.3938, 0.356 ) }
    dend_17 { pt3dadd( 260.557, 259.21, 55.5794, 0.4322 ) }
    dend_17 { pt3dadd( 260.951, 260.267, 55.9868, 0.4576 ) }
    dend_17 { pt3dadd( 261.508, 261.254, 56.1061, 0.4322 ) }
    dend_17 { pt3dadd( 261.873, 262.3, 56.546, 0.4068 ) }
    dend_17 { pt3dadd( 262.253, 263.374, 56.56, 0.3304 ) }
    dend_17 { pt3dadd( 262.583, 264.465, 56.56, 0.3304 ) }
    dend_17 { pt3dadd( 262.992, 265.533, 56.56, 0.356 ) }
    dend_17 { pt3dadd( 263.234, 266.597, 57.0668, 0.4576 ) }
    dend_17 { pt3dadd( 263.263, 267.736, 57.1318, 0.4576 ) }
    dend_17 { pt3dadd( 263.576, 268.766, 57.4, 0.4068 ) }
    dend_17 { pt3dadd( 263.774, 269.881, 57.4, 0.305 ) }
    dend_17 { pt3dadd( 263.955, 271.009, 57.4, 0.2542 ) }
    dend_17 { pt3dadd( 264.151, 272.134, 57.4, 0.2288 ) }
    dend_17 { pt3dadd( 264.542, 273.148, 57.4, 0.2542 ) }
    dend_17 { pt3dadd( 265.263, 274.01, 57.7466, 0.305 ) }
    dend_17 { pt3dadd( 266.015, 274.665, 58.8056, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( 266.589, 275.492, 59.4961, 0.356 ) }
    dend_17 { pt3dadd( 266.896, 276.534, 60.039, 0.305 ) }
    dend_17 { pt3dadd( 266.896, 277.629, 60.5783, 0.2542 ) }
    dend_17 { pt3dadd( 266.656, 278.707, 60.7841, 0.2288 ) }
    dend_17 { pt3dadd( 266.119, 279.583, 61.32, 0.2288 ) }
    dend_17 { pt3dadd( 266.008, 280.121, 63.488, 0.2288 ) }
    dend_17 { pt3dadd( 265.951, 280.557, 66.0733, 0.2288 ) }
    dend_17 { pt3dadd( 265.656, 281.035, 68.2111, 0.2288 ) }
    dend_17 { pt3dadd( 264.768, 281.618, 69.2541, 0.2288 ) }
    dend_17 { pt3dadd( 263.882, 282.203, 70.2968, 0.2288 ) }
    dend_17 { pt3dadd( 263.479, 283.139, 71.2821, 0.2288 ) }
    dend_17 { pt3dadd( 263.222, 284.181, 72.2501, 0.2288 ) }
    dend_17 { pt3dadd( 262.966, 285.223, 73.218, 0.2288 ) }
    dend_17 { pt3dadd( 262.708, 286.265, 74.1863, 0.2288 ) }
    dend_17 { pt3dadd( 262.656, 287.3, 75.3242, 0.2288 ) }
    dend_17 { pt3dadd( 262.693, 288.33, 76.5363, 0.2288 ) }
    dend_17 { pt3dadd( 262.731, 289.361, 77.7484, 0.2288 ) }
    dend_17 { pt3dadd( 262.768, 290.392, 78.9603, 0.2288 ) }
    dend_17 { pt3dadd( 263.409, 291.21, 79.2994, 0.2288 ) }
    dend_17 { pt3dadd( 264.274, 291.802, 79.4774, 0.2288 ) }
    dend_17 { pt3dadd( 265.054, 291.275, 81.0698, 0.2288 ) }
    dend_17 { pt3dadd( 265.835, 290.748, 82.6619, 0.2288 ) }
    dend_17 { pt3dadd( 266.614, 290.22, 84.2542, 0.2288 ) }
    dend_17 { pt3dadd( 267.393, 289.693, 85.8466, 0.2288 ) }
    dend_17 { pt3dadd( 268.172, 289.165, 87.439, 0.2288 ) }
    dend_17 { pt3dadd( 268.951, 288.638, 89.031, 0.2288 ) }
    dend_17 { pt3dadd( 269.794, 288.175, 90.4616, 0.2288 ) }
    dend_17 { pt3dadd( 270.847, 287.918, 91.359, 0.2288 ) }
    dend_17 { pt3dadd( 271.901, 287.663, 92.2564, 0.2288 ) }
    dend_17 { pt3dadd( 272.953, 287.407, 93.1538, 0.2288 ) }
    dend_17 { pt3dadd( 274.007, 287.152, 94.0512, 0.2288 ) }
    dend_17 { pt3dadd( 275.06, 286.896, 94.9488, 0.2288 ) }
    dend_17 { pt3dadd( 276.112, 286.641, 95.8462, 0.2288 ) }
    dend_17 { pt3dadd( 277.166, 286.384, 96.7436, 0.2288 ) }
    dend_17 { pt3dadd( 278.219, 286.129, 97.641, 0.2288 ) }
    dend_17 { pt3dadd( 279.271, 285.873, 98.5387, 0.2288 ) }
    dend_17 { pt3dadd( 280.231, 286.105, 99.9306, 0.2288 ) }
    dend_17 { pt3dadd( 281.185, 286.359, 101.345, 0.2288 ) }
    dend_17 { pt3dadd( 282.14, 286.612, 102.759, 0.2288 ) }
    dend_17 { pt3dadd( 283.094, 286.866, 104.172, 0.2542 ) }
    dend_17 { pt3dadd( 284.047, 287.119, 105.586, 0.2796 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 254.361, 242.935, 52.92, 0.5084 ) }
    dend_14 { pt3dadd( 255.036, 242.986, 52.92, 0.4322 ) }
    dend_14 { pt3dadd( 256.179, 243.044, 52.92, 0.4576 ) }
    dend_14 { pt3dadd( 257.317, 243.1, 53.0754, 0.5338 ) }
    dend_14 { pt3dadd( 258.435, 243.1, 53.6396, 0.5338 ) }
    dend_14 { pt3dadd( 259.576, 243.1, 53.7608, 0.5848 ) }
    dend_14 { pt3dadd( 260.565, 243.595, 54.04, 0.6102 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 220.239, 215.99, 32.0306, 0.8136 ) }
    dend_6 { pt3dadd( 218.866, 216.035, 29.6892, 0.4576 ) }
    dend_6 { pt3dadd( 217.971, 215.447, 29.1472, 0.5848 ) }
    dend_6 { pt3dadd( 217.39, 214.532, 28.2688, 0.661 ) }
    dend_6 { pt3dadd( 216.775, 213.631, 27.501, 0.661 ) }
    dend_6 { pt3dadd( 216.04, 212.79, 26.9248, 0.6356 ) }
    dend_6 { pt3dadd( 215.327, 211.934, 26.3796, 0.5848 ) }
    dend_6 { pt3dadd( 214.545, 211.125, 26.2102, 0.6102 ) }
    dend_6 { pt3dadd( 213.598, 210.517, 25.7942, 0.6356 ) }
    dend_6 { pt3dadd( 212.698, 209.895, 25.0183, 0.661 ) }
    dend_6 { pt3dadd( 211.874, 209.155, 24.3177, 0.5848 ) }
    dend_6 { pt3dadd( 211.036, 208.405, 23.8599, 0.5084 ) }
    dend_6 { pt3dadd( 210.116, 207.891, 23.098, 0.4576 ) }
    dend_6 { pt3dadd( 209.073, 207.777, 22.1598, 0.4322 ) }
    dend_6 { pt3dadd( 207.948, 207.787, 21.7213, 0.3814 ) }
    dend_6 { pt3dadd( 206.939, 207.577, 20.9392, 0.3304 ) }
    dend_6 { pt3dadd( 206.749, 208.26, 18.9126, 0.3304 ) }
    dend_6 { pt3dadd( 205.743, 208.451, 18.3109, 0.3304 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 66/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 220.239, 215.99, 32.0306, 0.8136 ) }
    dend_3 { pt3dadd( 220.799, 214.4, 32.426, 0.4576 ) }
    dend_3 { pt3dadd( 220.721, 213.291, 31.92, 0.5592 ) }
    dend_3 { pt3dadd( 220.531, 212.175, 31.6366, 0.661 ) }
    dend_3 { pt3dadd( 220.333, 211.078, 31.2928, 0.6356 ) }
    dend_3 { pt3dadd( 219.797, 210.09, 31.5381, 0.5848 ) }
    dend_3 { pt3dadd( 219.292, 209.111, 31.6926, 0.5592 ) }
    dend_3 { pt3dadd( 219.051, 208.014, 31.1898, 0.6102 ) }
    dend_3 { pt3dadd( 218.777, 206.921, 30.8129, 0.6356 ) }
    dend_3 { pt3dadd( 218.465, 205.82, 30.77, 0.5848 ) }
    dend_3 { pt3dadd( 218.29, 204.704, 30.5665, 0.5084 ) }
    dend_3 { pt3dadd( 218.283, 203.571, 30.5469, 0.5338 ) }
    dend_3 { pt3dadd( 218.322, 202.434, 30.8241, 0.6102 ) }
    dend_3 { pt3dadd( 218.555, 201.325, 31.1539, 0.6356 ) }
    dend_3 { pt3dadd( 218.611, 200.208, 31.7103, 0.5848 ) }
    dend_3 { pt3dadd( 218.238, 199.159, 31.2561, 0.5848 ) }
    dend_3 { pt3dadd( 217.788, 198.126, 30.7882, 0.6356 ) }
    dend_3 { pt3dadd( 217.269, 197.111, 30.5396, 0.661 ) }
    dend_3 { pt3dadd( 216.861, 196.156, 29.3952, 0.6102 ) }
    dend_3 { pt3dadd( 216.571, 195.059, 29.6587, 0.661 ) }
    dend_3 { pt3dadd( 216.087, 194.022, 29.741, 0.7372 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 87/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 256.294, 500.577, 52.08, 0.2288 ) }
    dend_24 { pt3dadd( 256.598, 500.84, 52.08, 0.4068 ) }
    dend_24 { pt3dadd( 256.828, 501.93, 52.0551, 0.4068 ) }
    dend_24 { pt3dadd( 256.828, 503.034, 51.3906, 0.4068 ) }
    dend_24 { pt3dadd( 256.828, 504.172, 51.24, 0.3304 ) }
    dend_24 { pt3dadd( 257.037, 505.198, 50.96, 0.2796 ) }
    dend_24 { pt3dadd( 257.273, 506.291, 50.68, 0.2288 ) }
    dend_24 { pt3dadd( 257.629, 507.306, 50.68, 0.2288 ) }
    dend_24 { pt3dadd( 258.026, 507.927, 49.2192, 0.2542 ) }
    dend_24 { pt3dadd( 258.544, 508.549, 47.6896, 0.305 ) }
    dend_24 { pt3dadd( 258.551, 509.657, 47.1794, 0.356 ) }
    dend_24 { pt3dadd( 258.876, 510.679, 46.48, 0.356 ) }
    dend_24 { pt3dadd( 258.887, 511.823, 46.48, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_24 { pt3dadd( 258.843, 512.809, 45.3306, 0.305 ) }
    dend_24 { pt3dadd( 258.773, 513.814, 44.151, 0.305 ) }
    dend_24 { pt3dadd( 258.671, 514.943, 43.958, 0.2796 ) }
    dend_24 { pt3dadd( 258.561, 516.047, 43.5095, 0.2542 ) }
    dend_24 { pt3dadd( 258.197, 517.032, 42.84, 0.2542 ) }
    dend_24 { pt3dadd( 258.041, 518.164, 42.84, 0.3304 ) }
    dend_24 { pt3dadd( 257.972, 519.303, 42.7512, 0.4068 ) }
    dend_24 { pt3dadd( 257.609, 520.332, 42.009, 0.4322 ) }
    dend_24 { pt3dadd( 257.485, 521.455, 41.72, 0.3814 ) }
    dend_24 { pt3dadd( 257.405, 522.591, 41.6326, 0.4068 ) }
    dend_24 { pt3dadd( 257.723, 523.652, 41.3837, 0.5084 ) }
    dend_24 { pt3dadd( 258.368, 524.521, 40.8456, 0.6102 ) }
    dend_24 { pt3dadd( 258.658, 525.422, 40.0632, 0.5592 ) }
    dend_24 { pt3dadd( 258.686, 526.565, 40.04, 0.4576 ) }
    dend_24 { pt3dadd( 259.193, 527.533, 39.7222, 0.3814 ) }
    dend_24 { pt3dadd( 259.798, 528.459, 39.2613, 0.3814 ) }
    dend_24 { pt3dadd( 260.332, 529.428, 38.92, 0.3304 ) }
    dend_24 { pt3dadd( 260.374, 530.568, 38.8805, 0.2796 ) }
    dend_24 { pt3dadd( 260.387, 531.681, 38.36, 0.2288 ) }
    dend_24 { pt3dadd( 260.776, 532.737, 38.36, 0.2288 ) }
    dend_24 { pt3dadd( 261.287, 533.496, 37.4413, 0.2288 ) }
    dend_24 { pt3dadd( 261.404, 534.462, 36.4, 0.2288 ) }
    dend_24 { pt3dadd( 261.88, 535.488, 36.4, 0.2288 ) }
    dend_24 { pt3dadd( 261.977, 536.609, 36.3927, 0.2542 ) }
    dend_24 { pt3dadd( 261.977, 537.68, 35.7056, 0.305 ) }
    dend_24 { pt3dadd( 262.471, 538.609, 35.28, 0.356 ) }
    dend_24 { pt3dadd( 263.217, 539.446, 34.9297, 0.356 ) }
    dend_24 { pt3dadd( 264.1, 540.085, 34.72, 0.305 ) }
    dend_24 { pt3dadd( 265.035, 540.68, 34.72, 0.2796 ) }
    dend_24 { pt3dadd( 265.565, 541.665, 34.4669, 0.2796 ) }
    dend_24 { pt3dadd( 266.027, 542.668, 33.88, 0.305 ) }
    dend_24 { pt3dadd( 266.73, 543.389, 33.0394, 0.2796 ) }
    dend_24 { pt3dadd( 267.227, 544.159, 31.645, 0.2542 ) }
    dend_24 { pt3dadd( 268.077, 544.792, 31.8298, 0.2288 ) }
    dend_24 { pt3dadd( 268.848, 545.522, 32.2, 0.2288 ) }
    dend_24 { pt3dadd( 268.954, 546.603, 31.92, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 36/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 256.294, 500.577, 52.08, 0.2288 ) }
    dend_23 { pt3dadd( 256.243, 500.741, 52.36, 0.2288 ) }
    dend_23 { pt3dadd( 256.384, 500.969, 52.36, 0.2542 ) }
    dend_23 { pt3dadd( 256.599, 502.065, 52.36, 0.2796 ) }
    dend_23 { pt3dadd( 256.599, 503.203, 52.5294, 0.3304 ) }
    dend_23 { pt3dadd( 256.599, 504.344, 52.64, 0.3304 ) }
    dend_23 { pt3dadd( 256.684, 505.475, 52.7649, 0.3304 ) }
    dend_23 { pt3dadd( 257.125, 506.501, 52.92, 0.305 ) }
    dend_23 { pt3dadd( 257.454, 507.595, 52.92, 0.305 ) }
    dend_23 { pt3dadd( 257.986, 508.578, 52.92, 0.305 ) }
    dend_23 { pt3dadd( 258.701, 509.375, 53.0505, 0.3304 ) }
    dend_23 { pt3dadd( 259.277, 510.356, 53.2459, 0.356 ) }
    dend_23 { pt3dadd( 259.802, 511.25, 53.9904, 0.4068 ) }
    dend_23 { pt3dadd( 259.783, 512.328, 54.6, 0.4068 ) }
    dend_23 { pt3dadd( 259.46, 513.271, 55.16, 0.4068 ) }
    dend_23 { pt3dadd( 259.508, 514.411, 55.16, 0.356 ) }
    dend_23 { pt3dadd( 259.789, 515.505, 55.16, 0.305 ) }
    dend_23 { pt3dadd( 259.669, 516.642, 55.16, 0.2542 ) }
    dend_23 { pt3dadd( 259.574, 517.781, 55.16, 0.2288 ) }
    dend_23 { pt3dadd( 259.479, 518.917, 55.16, 0.2288 ) }
    dend_23 { pt3dadd( 259.46, 520.06, 55.16, 0.2288 ) }
    dend_23 { pt3dadd( 259.46, 521.204, 55.16, 0.2288 ) }
    dend_23 { pt3dadd( 259.46, 522.348, 55.16, 0.2288 ) }
    dend_23 { pt3dadd( 259.46, 523.492, 55.16, 0.2288 ) }
    dend_23 { pt3dadd( 259.46, 524.519, 56.1921, 0.2288 ) }
    dend_23 { pt3dadd( 259.46, 525.633, 56.56, 0.2288 ) }
    dend_23 { pt3dadd( 259.304, 526.764, 56.56, 0.2288 ) }
    dend_23 { pt3dadd( 259.116, 527.89, 56.5799, 0.2288 ) }
    dend_23 { pt3dadd( 259.116, 529.007, 57.0494, 0.2288 ) }
    dend_23 { pt3dadd( 259.076, 530.144, 57.12, 0.2288 ) }
    dend_23 { pt3dadd( 258.763, 531.237, 57.12, 0.2288 ) }
    dend_23 { pt3dadd( 258.547, 532.342, 57.12, 0.2288 ) }
    dend_23 { pt3dadd( 258.544, 533.327, 58.2722, 0.2288 ) }
    dend_23 { pt3dadd( 258.504, 534.43, 58.9375, 0.2288 ) }
    dend_23 { pt3dadd( 258.411, 535.559, 59.08, 0.2288 ) }
    dend_23 { pt3dadd( 258.001, 536.593, 59.08, 0.2288 ) }
    dend_23 { pt3dadd( 257.972, 537.735, 59.08, 0.2288 ) }
    dend_23 { pt3dadd( 257.901, 538.827, 59.6008, 0.2288 ) }
    dend_23 { pt3dadd( 257.458, 539.764, 60.7578, 0.2288 ) }
    dend_23 { pt3dadd( 257.128, 540.828, 61.04, 0.2288 ) }
    dend_23 { pt3dadd( 256.716, 541.894, 61.0708, 0.2288 ) }
    dend_23 { pt3dadd( 256.714, 543.0, 61.6, 0.2288 ) }
    dend_23 { pt3dadd( 256.485, 543.887, 62.5806, 0.2288 ) }
    dend_23 { pt3dadd( 256.485, 545.023, 62.72, 0.2288 ) }
    dend_23 { pt3dadd( 256.485, 546.167, 62.72, 0.2288 ) }
    dend_23 { pt3dadd( 256.485, 547.195, 63.6913, 0.2288 ) }
    dend_23 { pt3dadd( 256.485, 548.305, 64.12, 0.2288 ) }
    dend_23 { pt3dadd( 256.485, 549.45, 64.12, 0.2288 ) }
    dend_23 { pt3dadd( 256.512, 550.592, 64.12, 0.2542 ) }
    dend_23 { pt3dadd( 256.714, 551.708, 64.12, 0.305 ) }
    dend_23 { pt3dadd( 257.136, 552.677, 64.4815, 0.356 ) }
    dend_23 { pt3dadd( 257.799, 553.432, 65.52, 0.356 ) }
    dend_23 { pt3dadd( 258.184, 554.493, 65.52, 0.305 ) }
    dend_23 { pt3dadd( 258.57, 555.566, 65.52, 0.2542 ) }
    dend_23 { pt3dadd( 258.758, 556.694, 65.52, 0.2288 ) }
    dend_23 { pt3dadd( 259.3, 557.664, 65.52, 0.2288 ) }
    dend_23 { pt3dadd( 259.46, 558.759, 65.52, 0.2288 ) }
    dend_23 { pt3dadd( 259.46, 559.903, 65.52, 0.2288 ) }
    dend_23 { pt3dadd( 259.75, 560.786, 65.8423, 0.2288 ) }
    dend_23 { pt3dadd( 259.968, 561.813, 66.9578, 0.2288 ) }
    dend_23 { pt3dadd( 260.188, 562.84, 68.0733, 0.2288 ) }
    dend_23 { pt3dadd( 260.405, 563.866, 69.1888, 0.2288 ) }
    dend_23 { pt3dadd( 260.623, 564.892, 70.3044, 0.2288 ) }
    dend_23 { pt3dadd( 260.841, 565.919, 71.4199, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_23 { pt3dadd( 260.802, 567.001, 72.0658, 0.2288 ) }
    dend_23 { pt3dadd( 260.602, 568.117, 72.4156, 0.2288 ) }
    dend_23 { pt3dadd( 260.4, 569.235, 72.7653, 0.2288 ) }
    dend_23 { pt3dadd( 260.197, 570.352, 73.115, 0.2288 ) }
    dend_23 { pt3dadd( 259.996, 571.468, 73.4644, 0.2288 ) }
    dend_23 { pt3dadd( 259.794, 572.586, 73.8142, 0.2288 ) }
    dend_23 { pt3dadd( 259.593, 573.702, 74.1639, 0.2288 ) }
    dend_23 { pt3dadd( 259.392, 574.82, 74.5136, 0.2288 ) }
    dend_23 { pt3dadd( 259.189, 575.937, 74.8633, 0.2288 ) }
    dend_23 { pt3dadd( 258.988, 577.053, 75.213, 0.2288 ) }
    dend_23 { pt3dadd( 258.648, 578.132, 75.511, 0.2288 ) }
    dend_23 { pt3dadd( 258.212, 579.184, 75.7733, 0.2288 ) }
    dend_23 { pt3dadd( 257.776, 580.237, 76.0357, 0.2288 ) }
    dend_23 { pt3dadd( 257.341, 581.289, 76.298, 0.2288 ) }
    dend_23 { pt3dadd( 256.905, 582.342, 76.5604, 0.2288 ) }
    dend_23 { pt3dadd( 256.745, 583.446, 76.6083, 0.2288 ) }
    dend_23 { pt3dadd( 256.783, 584.589, 76.5005, 0.2288 ) }
    dend_23 { pt3dadd( 256.822, 585.731, 76.3924, 0.2288 ) }
    dend_23 { pt3dadd( 256.86, 586.873, 76.2846, 0.2288 ) }
    dend_23 { pt3dadd( 256.899, 588.016, 76.1768, 0.2288 ) }
    dend_23 { pt3dadd( 256.938, 589.159, 76.0687, 0.2288 ) }
    dend_23 { pt3dadd( 256.977, 590.301, 75.9609, 0.2288 ) }
    dend_23 { pt3dadd( 257.014, 591.443, 75.8531, 0.2288 ) }
    dend_23 { pt3dadd( 257.053, 592.586, 75.745, 0.2288 ) }
    dend_23 { pt3dadd( 257.092, 593.728, 75.6372, 0.2288 ) }
    dend_23 { pt3dadd( 257.132, 594.871, 75.5292, 0.2288 ) }
    dend_23 { pt3dadd( 257.171, 596.014, 75.4214, 0.2288 ) }
    dend_23 { pt3dadd( 256.973, 597.099, 75.3561, 0.2542 ) }
    dend_23 { pt3dadd( 256.611, 598.119, 75.3561, 0.305 ) }
    dend_23 { pt3dadd( 256.755, 599.241, 75.4191, 0.356 ) }
    dend_23 { pt3dadd( 256.774, 600.385, 75.521, 0.356 ) }
    dend_23 { pt3dadd( 256.796, 601.528, 75.6227, 0.305 ) }
    dend_23 { pt3dadd( 256.814, 602.671, 75.7243, 0.2542 ) }
    dend_23 { pt3dadd( 256.835, 603.813, 75.826, 0.2288 ) }
    dend_23 { pt3dadd( 256.854, 604.956, 75.9276, 0.2288 ) }
    dend_23 { pt3dadd( 256.874, 606.1, 76.0292, 0.2288 ) }
    dend_23 { pt3dadd( 256.895, 607.243, 76.1309, 0.2542 ) }
    dend_23 { pt3dadd( 256.914, 608.386, 76.2325, 0.3304 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 260.565, 243.595, 54.04, 0.6102 ) }
    dend_16 { pt3dadd( 260.87, 243.138, 55.44, 0.305 ) }
    dend_16 { pt3dadd( 261.501, 242.296, 55.44, 0.305 ) }
    dend_16 { pt3dadd( 262.312, 241.572, 55.6696, 0.305 ) }
    dend_16 { pt3dadd( 263.288, 241.179, 56.3637, 0.305 ) }
    dend_16 { pt3dadd( 264.189, 240.539, 56.84, 0.2796 ) }
    dend_16 { pt3dadd( 264.964, 239.739, 56.847, 0.2542 ) }
    dend_16 { pt3dadd( 265.656, 238.858, 57.2592, 0.2288 ) }
    dend_16 { pt3dadd( 266.47, 238.168, 58.0983, 0.2288 ) }
    dend_16 { pt3dadd( 267.415, 237.602, 58.52, 0.2288 ) }
    dend_16 { pt3dadd( 268.51, 237.278, 58.52, 0.2288 ) }
    dend_16 { pt3dadd( 269.261, 236.488, 58.52, 0.2542 ) }
    dend_16 { pt3dadd( 270.02, 235.773, 58.8512, 0.2796 ) }
    dend_16 { pt3dadd( 270.931, 235.178, 59.5689, 0.3304 ) }
    dend_16 { pt3dadd( 271.634, 234.343, 59.92, 0.3304 ) }
    dend_16 { pt3dadd( 272.197, 233.407, 60.3764, 0.3304 ) }
    dend_16 { pt3dadd( 272.44, 232.465, 61.754, 0.2796 ) }
    dend_16 { pt3dadd( 273.013, 231.589, 62.44, 0.2796 ) }
    dend_16 { pt3dadd( 273.796, 230.785, 62.44, 0.2796 ) }
    dend_16 { pt3dadd( 274.462, 229.993, 62.6772, 0.305 ) }
    dend_16 { pt3dadd( 274.904, 229.206, 64.0926, 0.2796 ) }
    dend_16 { pt3dadd( 275.026, 228.087, 64.3922, 0.2542 ) }
    dend_16 { pt3dadd( 275.641, 227.219, 65.24, 0.2288 ) }
    dend_16 { pt3dadd( 276.35, 226.398, 65.814, 0.2288 ) }
    dend_16 { pt3dadd( 276.878, 225.423, 66.3289, 0.2288 ) }
    dend_16 { pt3dadd( 277.664, 224.606, 66.5552, 0.2288 ) }
    dend_16 { pt3dadd( 278.429, 223.8, 66.64, 0.2288 ) }
    dend_16 { pt3dadd( 279.106, 222.885, 66.64, 0.2288 ) }
    dend_16 { pt3dadd( 279.876, 222.086, 67.1698, 0.2288 ) }
    dend_16 { pt3dadd( 280.715, 221.382, 67.7331, 0.2288 ) }
    dend_16 { pt3dadd( 281.31, 220.594, 68.32, 0.2288 ) }
    dend_16 { pt3dadd( 281.981, 219.857, 68.8576, 0.2288 ) }
    dend_16 { pt3dadd( 282.779, 219.061, 69.16, 0.2288 ) }
    dend_16 { pt3dadd( 283.339, 218.098, 69.44, 0.2288 ) }
    dend_16 { pt3dadd( 284.147, 217.385, 69.44, 0.2288 ) }
    dend_16 { pt3dadd( 284.716, 216.406, 69.44, 0.2288 ) }
    dend_16 { pt3dadd( 285.154, 215.436, 69.6578, 0.2288 ) }
    dend_16 { pt3dadd( 285.485, 214.372, 70.2937, 0.2288 ) }
    dend_16 { pt3dadd( 285.817, 213.308, 70.9296, 0.2288 ) }
    dend_16 { pt3dadd( 286.149, 212.244, 71.5652, 0.2288 ) }
    dend_16 { pt3dadd( 286.479, 211.181, 72.2011, 0.2288 ) }
    dend_16 { pt3dadd( 286.811, 210.117, 72.837, 0.2542 ) }
    dend_16 { pt3dadd( 287.143, 209.053, 73.4726, 0.305 ) }
    dend_16 { pt3dadd( 287.475, 207.99, 74.1084, 0.356 ) }
    dend_16 { pt3dadd( 287.849, 206.934, 74.6382, 0.356 ) }
    dend_16 { pt3dadd( 288.285, 205.887, 75.0184, 0.305 ) }
    dend_16 { pt3dadd( 288.719, 204.84, 75.399, 0.2542 ) }
    dend_16 { pt3dadd( 289.154, 203.793, 75.7795, 0.2288 ) }
    dend_16 { pt3dadd( 289.59, 202.748, 76.16, 0.2288 ) }
    dend_16 { pt3dadd( 290.025, 201.701, 76.5402, 0.2288 ) }
    dend_16 { pt3dadd( 290.461, 200.654, 76.9208, 0.2288 ) }
    dend_16 { pt3dadd( 290.895, 199.607, 77.3013, 0.2288 ) }
    dend_16 { pt3dadd( 291.331, 198.562, 77.6815, 0.2288 ) }
    dend_16 { pt3dadd( 291.841, 197.563, 77.985, 0.2288 ) }
    dend_16 { pt3dadd( 292.651, 196.754, 77.985, 0.2288 ) }
    dend_16 { pt3dadd( 293.253, 195.839, 78.2849, 0.2288 ) }
    dend_16 { pt3dadd( 293.579, 194.78, 78.9852, 0.2288 ) }
    dend_16 { pt3dadd( 293.905, 193.721, 79.6852, 0.2288 ) }
    dend_16 { pt3dadd( 294.231, 192.663, 80.3855, 0.2288 ) }
    dend_16 { pt3dadd( 294.606, 191.598, 80.7699, 0.2288 ) }
    dend_16 { pt3dadd( 295.007, 190.53, 81.0015, 0.2288 ) }
    dend_16 { pt3dadd( 295.405, 189.462, 81.233, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_16 { pt3dadd( 295.804, 188.394, 81.4646, 0.2288 ) }
    dend_16 { pt3dadd( 296.203, 187.327, 81.6962, 0.2288 ) }
    dend_16 { pt3dadd( 296.603, 186.258, 81.928, 0.2288 ) }
    dend_16 { pt3dadd( 296.962, 185.331, 82.7375, 0.2288 ) }
    dend_16 { pt3dadd( 297.384, 184.326, 83.587, 0.2288 ) }
    dend_16 { pt3dadd( 297.805, 183.321, 84.4365, 0.2288 ) }
    dend_16 { pt3dadd( 298.227, 182.316, 85.286, 0.2288 ) }
    dend_16 { pt3dadd( 298.649, 181.311, 86.1356, 0.2288 ) }
    dend_16 { pt3dadd( 299.102, 180.312, 86.9193, 0.2288 ) }
    dend_16 { pt3dadd( 299.632, 179.329, 87.5336, 0.2288 ) }
    dend_16 { pt3dadd( 300.159, 178.346, 88.1476, 0.2288 ) }
    dend_16 { pt3dadd( 300.689, 177.363, 88.762, 0.2542 ) }
    dend_16 { pt3dadd( 301.217, 176.381, 89.376, 0.2796 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 13/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 260.565, 243.595, 54.04, 0.6102 ) }
    dend_15 { pt3dadd( 260.663, 243.839, 54.04, 0.305 ) }
    dend_15 { pt3dadd( 261.225, 244.783, 54.04, 0.356 ) }
    dend_15 { pt3dadd( 262.1, 245.48, 54.04, 0.4322 ) }
    dend_15 { pt3dadd( 262.879, 246.301, 54.04, 0.5338 ) }
    dend_15 { pt3dadd( 263.822, 246.906, 54.04, 0.5338 ) }
    dend_15 { pt3dadd( 264.844, 247.413, 54.04, 0.483 ) }
    dend_15 { pt3dadd( 265.777, 248.059, 54.04, 0.4068 ) }
    dend_15 { pt3dadd( 266.815, 248.477, 54.04, 0.356 ) }
    dend_15 { pt3dadd( 267.914, 248.751, 54.1671, 0.356 ) }
    dend_15 { pt3dadd( 269.007, 249.081, 54.32, 0.356 ) }
    dend_15 { pt3dadd( 270.024, 249.581, 54.32, 0.3814 ) }
    dend_15 { pt3dadd( 271.031, 250.045, 54.7688, 0.4068 ) }
    dend_15 { pt3dadd( 272.033, 250.465, 55.4022, 0.4322 ) }
    dend_15 { pt3dadd( 272.949, 251.132, 55.6083, 0.4576 ) }
    dend_15 { pt3dadd( 273.908, 251.645, 56.2598, 0.4068 ) }
    dend_15 { pt3dadd( 274.512, 252.14, 58.0854, 0.3304 ) }
    dend_15 { pt3dadd( 275.141, 252.658, 59.691, 0.2542 ) }
    dend_15 { pt3dadd( 275.883, 253.491, 59.92, 0.2288 ) }
    dend_15 { pt3dadd( 276.447, 254.432, 60.0603, 0.2288 ) }
    dend_15 { pt3dadd( 276.592, 255.464, 60.7684, 0.2288 ) }
    dend_15 { pt3dadd( 276.619, 256.571, 61.2942, 0.2288 ) }
    dend_15 { pt3dadd( 276.734, 257.407, 62.7645, 0.2288 ) }
    dend_15 { pt3dadd( 276.679, 258.533, 63.0, 0.2288 ) }
    dend_15 { pt3dadd( 276.619, 259.672, 63.0, 0.2288 ) }
    dend_15 { pt3dadd( 276.356, 260.575, 64.0808, 0.2288 ) }
    dend_15 { pt3dadd( 276.162, 261.457, 65.6936, 0.2288 ) }
    dend_15 { pt3dadd( 275.803, 262.389, 66.4457, 0.2288 ) }
    dend_15 { pt3dadd( 275.465, 263.411, 67.3935, 0.2288 ) }
    dend_15 { pt3dadd( 275.126, 264.432, 68.3413, 0.2288 ) }
    dend_15 { pt3dadd( 274.809, 265.463, 69.2227, 0.2542 ) }
    dend_15 { pt3dadd( 274.775, 266.606, 69.2227, 0.2796 ) }
    dend_15 { pt3dadd( 274.768, 267.663, 69.7432, 0.305 ) }
    dend_15 { pt3dadd( 274.836, 268.478, 71.6993, 0.2796 ) }
    dend_15 { pt3dadd( 275.49, 269.157, 72.8255, 0.2542 ) }
    dend_15 { pt3dadd( 276.401, 269.776, 73.593, 0.2288 ) }
    dend_15 { pt3dadd( 277.31, 270.394, 74.3607, 0.2288 ) }
    dend_15 { pt3dadd( 278.22, 271.013, 75.1282, 0.2288 ) }
    dend_15 { pt3dadd( 279.129, 271.631, 75.896, 0.2288 ) }
    dend_15 { pt3dadd( 280.09, 272.197, 76.4898, 0.2288 ) }
    dend_15 { pt3dadd( 281.089, 272.722, 76.9479, 0.2288 ) }
    dend_15 { pt3dadd( 282.089, 273.246, 77.406, 0.2288 ) }
    dend_15 { pt3dadd( 283.087, 273.77, 77.8641, 0.2288 ) }
    dend_15 { pt3dadd( 284.087, 274.295, 78.3224, 0.2288 ) }
    dend_15 { pt3dadd( 285.086, 274.819, 78.7805, 0.2288 ) }
    dend_15 { pt3dadd( 286.086, 275.342, 79.2386, 0.2288 ) }
    dend_15 { pt3dadd( 287.086, 275.868, 79.6967, 0.2288 ) }
    dend_15 { pt3dadd( 288.085, 276.392, 80.155, 0.2288 ) }
    dend_15 { pt3dadd( 289.085, 276.915, 80.6131, 0.2288 ) }
    dend_15 { pt3dadd( 289.988, 277.594, 81.0566, 0.2288 ) }
    dend_15 { pt3dadd( 290.892, 278.271, 81.5004, 0.2288 ) }
    dend_15 { pt3dadd( 291.796, 278.948, 81.944, 0.2288 ) }
    dend_15 { pt3dadd( 292.699, 279.627, 82.3878, 0.2288 ) }
    dend_15 { pt3dadd( 293.611, 280.285, 82.8509, 0.2288 ) }
    dend_15 { pt3dadd( 294.654, 280.639, 83.6136, 0.2288 ) }
    dend_15 { pt3dadd( 295.695, 280.993, 84.376, 0.2288 ) }
    dend_15 { pt3dadd( 296.738, 281.347, 85.1388, 0.2288 ) }
    dend_15 { pt3dadd( 297.78, 281.701, 85.9015, 0.2288 ) }
    dend_15 { pt3dadd( 298.761, 282.201, 86.5225, 0.2288 ) }
    dend_15 { pt3dadd( 299.672, 282.867, 86.9812, 0.2288 ) }
    dend_15 { pt3dadd( 300.583, 283.532, 87.4401, 0.2288 ) }
    dend_15 { pt3dadd( 301.494, 284.198, 87.8987, 0.2288 ) }
    dend_15 { pt3dadd( 302.405, 284.864, 88.3574, 0.2288 ) }
    dend_15 { pt3dadd( 303.317, 285.531, 88.816, 0.2288 ) }
    dend_15 { pt3dadd( 304.048, 286.353, 89.4768, 0.2288 ) }
    dend_15 { pt3dadd( 304.715, 287.233, 90.2101, 0.2288 ) }
    dend_15 { pt3dadd( 305.382, 288.113, 90.9434, 0.2288 ) }
    dend_15 { pt3dadd( 306.049, 288.993, 91.677, 0.2288 ) }
    dend_15 { pt3dadd( 306.716, 289.874, 92.4106, 0.2288 ) }
    dend_15 { pt3dadd( 307.41, 290.734, 93.1157, 0.2288 ) }
    dend_15 { pt3dadd( 308.152, 291.562, 93.7706, 0.2288 ) }
    dend_15 { pt3dadd( 308.895, 292.39, 94.4255, 0.2288 ) }
    dend_15 { pt3dadd( 309.638, 293.217, 95.0804, 0.2288 ) }
    dend_15 { pt3dadd( 310.382, 294.046, 95.7354, 0.2288 ) }
    dend_15 { pt3dadd( 311.123, 294.874, 96.3903, 0.2288 ) }
    dend_15 { pt3dadd( 311.867, 295.701, 97.0452, 0.2796 ) }
    dend_15 { pt3dadd( 312.609, 296.529, 97.7001, 0.3304 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 90/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 216.087, 194.022, 29.741, 0.7372 ) }
    dend_5 { pt3dadd( 215.95, 194.06, 30.8, 0.356 ) }
    dend_5 { pt3dadd( 215.762, 193.658, 30.8, 0.3814 ) }
    dend_5 { pt3dadd( 215.758, 192.514, 30.8, 0.4322 ) }
    dend_5 { pt3dadd( 215.439, 191.435, 30.8, 0.4576 ) }
    dend_5 { pt3dadd( 215.064, 190.355, 30.8, 0.4322 ) }
    dend_5 { pt3dadd( 214.865, 189.229, 30.8, 0.4068 ) }
    dend_5 { pt3dadd( 214.73, 188.095, 30.8, 0.356 ) }
    dend_5 { pt3dadd( 214.74, 186.951, 30.8, 0.305 ) }
    dend_5 { pt3dadd( 215.036, 185.868, 31.0607, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_5 { pt3dadd( 215.29, 184.83, 32.0354, 0.2796 ) }
    dend_5 { pt3dadd( 215.696, 183.834, 32.737, 0.3304 ) }
    dend_5 { pt3dadd( 215.993, 182.735, 32.76, 0.356 ) }
    dend_5 { pt3dadd( 216.286, 181.634, 32.76, 0.3814 ) }
    dend_5 { pt3dadd( 216.508, 180.559, 32.2216, 0.3814 ) }
    dend_5 { pt3dadd( 216.842, 179.505, 31.92, 0.356 ) }
    dend_5 { pt3dadd( 216.902, 178.363, 31.92, 0.356 ) }
    dend_5 { pt3dadd( 216.902, 177.219, 31.92, 0.356 ) }
    dend_5 { pt3dadd( 216.827, 176.083, 31.9827, 0.4322 ) }
    dend_5 { pt3dadd( 216.607, 174.997, 32.5234, 0.5084 ) }
    dend_5 { pt3dadd( 216.56, 173.889, 32.9048, 0.5848 ) }
    dend_5 { pt3dadd( 216.56, 172.779, 33.488, 0.5592 ) }
    dend_5 { pt3dadd( 216.56, 171.637, 33.6, 0.5084 ) }
    dend_5 { pt3dadd( 216.56, 170.493, 33.6, 0.4322 ) }
    dend_5 { pt3dadd( 216.51, 169.357, 33.7218, 0.4068 ) }
    dend_5 { pt3dadd( 216.446, 168.223, 33.88, 0.3814 ) }
    dend_5 { pt3dadd( 216.446, 167.081, 33.9674, 0.4322 ) }
    dend_5 { pt3dadd( 216.446, 165.956, 34.4448, 0.483 ) }
    dend_5 { pt3dadd( 216.446, 164.874, 35.0708, 0.483 ) }
    dend_5 { pt3dadd( 216.446, 163.799, 35.84, 0.3814 ) }
    dend_5 { pt3dadd( 216.446, 162.655, 35.84, 0.305 ) }
    dend_5 { pt3dadd( 216.446, 161.511, 35.84, 0.2796 ) }
    dend_5 { pt3dadd( 216.454, 160.367, 35.84, 0.3304 ) }
    dend_5 { pt3dadd( 216.6, 159.233, 35.84, 0.356 ) }
    dend_5 { pt3dadd( 216.674, 158.096, 35.8672, 0.3814 ) }
    dend_5 { pt3dadd( 216.674, 156.959, 36.1334, 0.356 ) }
    dend_5 { pt3dadd( 216.81, 155.838, 36.4, 0.3304 ) }
    dend_5 { pt3dadd( 217.001, 154.712, 36.4, 0.305 ) }
    dend_5 { pt3dadd( 217.225, 153.604, 36.7189, 0.305 ) }
    dend_5 { pt3dadd( 217.247, 152.661, 37.7877, 0.2796 ) }
    dend_5 { pt3dadd( 217.351, 151.526, 37.8, 0.2542 ) }
    dend_5 { pt3dadd( 217.919, 150.63, 37.8, 0.2288 ) }
    dend_5 { pt3dadd( 217.974, 149.497, 37.9033, 0.2288 ) }
    dend_5 { pt3dadd( 218.293, 148.457, 38.64, 0.2288 ) }
    dend_5 { pt3dadd( 218.79, 147.441, 38.64, 0.2542 ) }
    dend_5 { pt3dadd( 218.848, 146.302, 38.7374, 0.2796 ) }
    dend_5 { pt3dadd( 219.044, 145.215, 39.3775, 0.305 ) }
    dend_5 { pt3dadd( 219.435, 144.176, 39.6724, 0.2796 ) }
    dend_5 { pt3dadd( 220.044, 143.214, 39.76, 0.2542 ) }
    dend_5 { pt3dadd( 220.855, 142.464, 39.76, 0.2288 ) }
    dend_5 { pt3dadd( 221.508, 141.659, 40.04, 0.2288 ) }
    dend_5 { pt3dadd( 221.818, 140.569, 40.04, 0.2288 ) }
    dend_5 { pt3dadd( 222.226, 139.552, 40.2016, 0.2288 ) }
    dend_5 { pt3dadd( 222.433, 138.46, 40.6, 0.2288 ) }
    dend_5 { pt3dadd( 222.738, 137.416, 40.6, 0.2288 ) }
    dend_5 { pt3dadd( 222.767, 136.274, 40.6428, 0.2288 ) }
    dend_5 { pt3dadd( 222.872, 135.195, 41.4442, 0.2288 ) }
    dend_5 { pt3dadd( 223.074, 134.127, 42.0, 0.2288 ) }
    dend_5 { pt3dadd( 223.238, 133.038, 42.1842, 0.2288 ) }
    dend_5 { pt3dadd( 223.469, 131.941, 42.28, 0.2288 ) }
    dend_5 { pt3dadd( 223.882, 130.932, 42.3525, 0.2288 ) }
    dend_5 { pt3dadd( 224.35, 130.072, 43.12, 0.2288 ) }
    dend_5 { pt3dadd( 224.89, 129.079, 43.2149, 0.2288 ) }
    dend_5 { pt3dadd( 225.505, 128.239, 44.3254, 0.2288 ) }
    dend_5 { pt3dadd( 226.314, 127.63, 44.8, 0.2288 ) }
    dend_5 { pt3dadd( 226.439, 126.51, 44.8, 0.2288 ) }
    dend_5 { pt3dadd( 226.902, 125.646, 44.0115, 0.2288 ) }
    dend_5 { pt3dadd( 227.361, 124.738, 43.4, 0.2288 ) }
    dend_5 { pt3dadd( 227.767, 123.689, 43.4, 0.2288 ) }
    dend_5 { pt3dadd( 227.885, 122.568, 43.12, 0.2288 ) }
    dend_5 { pt3dadd( 228.351, 121.708, 42.5508, 0.2288 ) }
    dend_5 { pt3dadd( 228.492, 120.627, 42.28, 0.2288 ) }
    dend_5 { pt3dadd( 228.794, 119.526, 42.28, 0.2288 ) }
    dend_5 { pt3dadd( 229.445, 118.722, 42.9234, 0.2288 ) }
    dend_5 { pt3dadd( 229.572, 117.624, 43.1978, 0.2288 ) }
    dend_5 { pt3dadd( 229.715, 116.532, 43.68, 0.2288 ) }
    dend_5 { pt3dadd( 229.706, 115.406, 43.2849, 0.2288 ) }
    dend_5 { pt3dadd( 229.491, 114.295, 43.12, 0.2288 ) }
    dend_5 { pt3dadd( 229.486, 113.152, 43.12, 0.2288 ) }
    dend_5 { pt3dadd( 229.486, 112.071, 42.4463, 0.2542 ) }
    dend_5 { pt3dadd( 229.486, 110.931, 42.28, 0.2796 ) }
    dend_5 { pt3dadd( 229.486, 109.795, 42.1574, 0.3304 ) }
    dend_5 { pt3dadd( 229.344, 108.818, 40.8668, 0.3304 ) }
    dend_5 { pt3dadd( 229.2, 107.871, 39.4064, 0.3304 ) }
    dend_5 { pt3dadd( 229.144, 106.739, 39.2, 0.305 ) }
    dend_5 { pt3dadd( 229.141, 105.595, 39.2, 0.305 ) }
    dend_5 { pt3dadd( 229.03, 104.485, 38.787, 0.356 ) }
    dend_5 { pt3dadd( 229.03, 103.366, 38.36, 0.4322 ) }
    dend_5 { pt3dadd( 228.822, 102.248, 38.36, 0.5084 ) }
    dend_5 { pt3dadd( 228.7, 101.136, 38.0685, 0.483 ) }
    dend_5 { pt3dadd( 228.915, 100.214, 36.533, 0.3814 ) }
    dend_5 { pt3dadd( 228.96, 99.2882, 35.0347, 0.2796 ) }
    dend_5 { pt3dadd( 229.682, 98.7205, 33.88, 0.2288 ) }
    dend_5 { pt3dadd( 230.288, 97.835, 33.88, 0.2288 ) }
    dend_5 { pt3dadd( 230.811, 96.8919, 33.88, 0.2288 ) }
    dend_5 { pt3dadd( 231.783, 96.2999, 33.88, 0.2288 ) }
    dend_5 { pt3dadd( 232.643, 95.581, 33.88, 0.2288 ) }
    dend_5 { pt3dadd( 233.096, 94.7028, 33.88, 0.2288 ) }
    dend_5 { pt3dadd( 233.749, 93.8609, 33.88, 0.2288 ) }
    dend_5 { pt3dadd( 234.521, 93.3316, 33.88, 0.2542 ) }
    dend_5 { pt3dadd( 234.756, 92.236, 33.88, 0.2796 ) }
    dend_5 { pt3dadd( 235.545, 91.411, 33.88, 0.305 ) }
    dend_5 { pt3dadd( 236.465, 90.971, 34.384, 0.2796 ) }
    dend_5 { pt3dadd( 236.588, 89.8573, 34.44, 0.2542 ) }
    dend_5 { pt3dadd( 237.402, 89.2013, 33.8918, 0.2288 ) }
    dend_5 { pt3dadd( 238.436, 89.1176, 32.9459, 0.2288 ) }
    dend_5 { pt3dadd( 239.142, 88.8369, 31.351, 0.2288 ) }
    dend_5 { pt3dadd( 239.555, 87.9258, 30.2865, 0.2288 ) }
    dend_5 { pt3dadd( 240.337, 87.2805, 30.0434, 0.2288 ) }
    dend_5 { pt3dadd( 241.068, 86.6914, 29.12, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_5 { pt3dadd( 241.883, 86.0381, 28.84, 0.2288 ) }
    dend_5 { pt3dadd( 243.006, 85.8469, 28.84, 0.2288 ) }
    dend_5 { pt3dadd( 244.064, 85.4372, 28.84, 0.2288 ) }
    dend_5 { pt3dadd( 244.333, 84.347, 28.8691, 0.2288 ) }
    dend_5 { pt3dadd( 244.754, 83.4076, 29.3272, 0.2542 ) }
    dend_5 { pt3dadd( 245.846, 83.1688, 29.4, 0.3304 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 216.087, 194.022, 29.741, 0.7372 ) }
    dend_4 { pt3dadd( 214.991, 193.582, 29.5781, 0.4068 ) }
    dend_4 { pt3dadd( 214.155, 192.835, 29.1992, 0.4322 ) }
    dend_4 { pt3dadd( 213.545, 191.915, 28.5219, 0.3814 ) }
    dend_4 { pt3dadd( 212.809, 191.09, 27.9535, 0.3304 ) }
    dend_4 { pt3dadd( 212.385, 190.224, 26.7529, 0.3814 ) }
    dend_4 { pt3dadd( 212.301, 189.141, 26.1708, 0.483 ) }
    dend_4 { pt3dadd( 211.831, 188.139, 25.5808, 0.5848 ) }
    dend_4 { pt3dadd( 211.605, 187.142, 24.353, 0.5848 ) }
    dend_4 { pt3dadd( 211.853, 186.093, 23.4917, 0.5084 ) }
    dend_4 { pt3dadd( 211.773, 184.979, 24.0668, 0.483 ) }
    dend_4 { pt3dadd( 210.964, 184.245, 23.9061, 0.483 ) }
    dend_4 { pt3dadd( 210.219, 183.557, 23.1552, 0.5592 ) }
    dend_4 { pt3dadd( 209.881, 182.606, 21.8562, 0.5848 ) }
    dend_4 { pt3dadd( 209.648, 181.593, 21.107, 0.5848 ) }
    dend_4 { pt3dadd( 209.437, 180.489, 21.1991, 0.5338 ) }
    dend_4 { pt3dadd( 209.072, 179.459, 20.4764, 0.4322 ) }
    dend_4 { pt3dadd( 208.762, 178.396, 20.16, 0.356 ) }
    dend_4 { pt3dadd( 208.232, 177.549, 20.16, 0.356 ) }
    dend_4 { pt3dadd( 207.376, 177.143, 19.32, 0.4322 ) }
    dend_4 { pt3dadd( 206.976, 176.1, 18.9241, 0.5338 ) }
    dend_4 { pt3dadd( 206.337, 175.177, 18.48, 0.5592 ) }
    dend_4 { pt3dadd( 205.946, 174.111, 18.48, 0.5848 ) }
    dend_4 { pt3dadd( 205.405, 173.116, 18.2104, 0.5338 ) }
    dend_4 { pt3dadd( 204.911, 172.158, 17.3872, 0.5084 ) }
    dend_4 { pt3dadd( 204.767, 171.038, 17.1268, 0.4322 ) }
    dend_4 { pt3dadd( 204.227, 170.081, 16.8725, 0.4576 ) }
    dend_4 { pt3dadd( 203.178, 169.64, 16.8, 0.5084 ) }
    dend_4 { pt3dadd( 202.219, 169.048, 16.5819, 0.6102 ) }
    dend_4 { pt3dadd( 201.374, 168.325, 16.1622, 0.6102 ) }
    dend_4 { pt3dadd( 201.344, 167.209, 15.7676, 0.5338 ) }
    dend_4 { pt3dadd( 200.659, 166.566, 14.84, 0.4322 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_33, dend_26, dend_11, dend_0, dend_35, dend_34, dend_30, dend_27, dend_19, dend_12, dend_8, dend_1, dend_32, dend_31, dend_29, dend_28, dend_25, dend_20, dend_18, dend_13, dend_10, dend_9, dend_7, dend_2, dend_22, dend_21, dend_17, dend_14, dend_6, dend_3, dend_24, dend_23, dend_16, dend_15, dend_5, dend_4]}
    dend = new SectionList()
    dend_33 dend.append()
    dend_26 dend.append()
    dend_11 dend.append()
    dend_0 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_30 dend.append()
    dend_27 dend.append()
    dend_19 dend.append()
    dend_12 dend.append()
    dend_8 dend.append()
    dend_1 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_25 dend.append()
    dend_20 dend.append()
    dend_18 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()
    dend_7 dend.append()
    dend_2 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_17 dend.append()
    dend_14 dend.append()
    dend_6 dend.append()
    dend_3 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.16  // units: uF/cm2
    forsec axon cm = 2.16  // units: uF/cm2
    forsec dend cm = 2.16  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 143.65  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 5.116286E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.058520183  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 3.1192528E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.051060237  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.65076053  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.033385947  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.007750486  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0027340092  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.6705535E-4  // units: S cm-2
        e_pas_nml2 = -95.537094  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 6.6246354E-4  // units: S cm-2
        e_pas_nml2 = -95.537094  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 9.801983E-6  // units: S cm-2
        e_pas_nml2 = -95.537094  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 5.647897E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.003211478  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_34 nseg = 9
    dend_8 nseg = 11
    dend_32 nseg = 3
    dend_31 nseg = 7
    dend_29 nseg = 3
    dend_25 nseg = 3
    dend_20 nseg = 9
    dend_18 nseg = 9
    dend_7 nseg = 5
    dend_22 nseg = 5
    dend_21 nseg = 5
    dend_17 nseg = 5
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_16 nseg = 5
    dend_15 nseg = 5
    dend_5 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472912177


