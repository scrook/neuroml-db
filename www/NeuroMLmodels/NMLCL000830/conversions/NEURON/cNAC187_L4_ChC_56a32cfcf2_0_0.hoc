// Cell: cNAC187_L4_ChC_56a32cfcf2_0_0
/*
{
  "id" : "cNAC187_L4_ChC_56a32cfcf2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -7.61094, -8.0337, 1.77", "-3.66144, -7.61094, -8.0337, 1.77", "-3.2093, -9.18514, -8.24509, 1.77", "-2.86495, -10.357, -8.41349, 1.77", "-2.33865, -12.1938, -8.662, 1.55", "-2.02953, -13.4118, -8.85937, 1.69", "-1.81792, -14.3581, -9.03135, 1.77", "-1.63254, -15.2788, -9.23937, 1.77", "-1.39719, -16.5131, -9.58903, 1.25", "-1.01569, -18.4065, -10.0604, 0.74", "-1.74903, -17.5815, -10.868, 0.74", "-2.3209, -17.2898, -11.7274, 0.74", "-3.32365, -16.8934, -13.2723, 1.18", "-3.86269, -16.7939, -14.1531, 1.18", "-4.67124, -16.5937, -15.3707, 0.52", "-5.62803, -16.2293, -16.6787, 0.52", "-6.71563, -16.2822, -18.3319, 0.74", "-7.17395, -16.5473, -19.4565, 0.74", "-7.39261, -16.9562, -20.4379, 0.74", "-7.7455, -17.4829, -21.9189, 1.11", "-8.06051, -17.758, -22.867, 1.69", "-8.57607, -17.9473, -23.8242, 1.77", "-9.75058, -18.3114, -25.9396, 1.33", "-10.3757, -18.6374, -27.2291, 1.4", "-10.744, -19.0715, -28.1976, 1.55", "-10.9534, -19.7937, -29.2117, 1.33", "-10.9762, -21.0387, -30.4991, 0.74", "-10.7802, -22.0581, -31.2471, 1.03", "-10.494, -22.914, -31.72, 1.47", "-10.1903, -23.4765, -32.0597, 1.62", "-9.70927, -24.1483, -32.5281, 1.62", "-9.1641, -24.6882, -32.9593, 0.52", "-8.51608, -25.196, -33.4349, 0.52", "-8.35486, -25.4614, -33.8437, 0.52", "-8.38763, -26.0047, -34.9026, 0.66", "-8.59725, -26.5381, -36.0214, 0.74", "-8.93911, -26.7557, -36.8106, 0.44", "-9.52817, -26.7531, -37.6456, 0.44", "-10.3964, -26.6411, -38.7073, 0.44", "-11.0137, -26.707, -39.652, 0.44", "-11.3569, -26.8369, -40.3219, 0.44", "-11.9949, -27.2708, -41.6237, 0.66", "-12.3065, -27.9444, -42.9389, 1.11", "-12.4677, -28.1913, -43.3958, 0.96", "-12.8891, -28.7119, -44.443, 1.18", "-13.053, -28.9347, -44.8524, 1.69", "-13.3195, -29.2776, -45.4457, 1.69", "-14.3349, -30.4915, -47.4312, 0.88", "-14.9552, -31.0691, -48.468, 2.14", "-16.362, -31.8496, -50.3838, 2.28", "-16.5596, -31.906, -50.603, 2.28", "-17.7008, -32.0168, -51.6677, 0.44", "-18.3524, -31.9618, -52.1465, 0.44", "-19.122, -31.797, -52.5879, 0.81", "-19.9115, -31.5861, -53.0594, 0.81", "-20.2714, -31.5341, -53.3174, 0.96", "-20.9865, -31.6017, -53.946, 0.66", "-21.7056, -31.8584, -54.6843, 1.99", "-22.2441, -32.1656, -55.3072, 2.21", "-22.7699, -32.5706, -55.9577, 2.5", "-24.2167, -33.961, -57.8863, 0.66", "-24.9668, -34.868, -59.0252, 0.66", "-25.4301, -35.5731, -59.8077, 0.66", "-25.9072, -36.4118, -60.6451, 1.55", "-26.1287, -36.8244, -61.0158, 2.21", "-26.3425, -37.2553, -61.3697, 2.21", "-26.9321, -38.6253, -62.4339, 0.29", "-27.2475, -39.509, -63.1736, 0.29", "-27.4538, -40.1191, -63.6743, 1.55", "-27.7108, -40.8554, -64.2653, 1.99", "-27.9473, -41.5144, -64.8067, 2.36", "-28.6121, -43.3068, -66.3245, 0.59", "-28.9426, -44.2256, -67.1551, 1.84", "-29.0726, -44.6521, -67.5877, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.76245, 2.1563, 1.92", "-6.50143, -1.76245, 2.1563, 1.92", "-6.93977, -2.57717, 2.12143, 1.92", "-7.68539, -4.19268, 2.04561, 1.92", "-8.45428, -5.66654, 1.96912, 2.14", "-9.04698, -6.66328, 1.90443, 2.36", "-9.88685, -7.86939, 1.81525, 2.28", "-10.8096, -8.98296, 1.71324, 2.36", "-11.8419, -10.0134, 1.5808, 2.36", "-13.4443, -11.1686, 1.39177, 1.77", "-14.3256, -11.5488, 1.32553, 1.77", "-15.7075, -11.8586, 1.2887, 1.99", "-16.939, -11.9858, 1.36688, 1.99", "-17.5483, -12.009, 1.44211, 1.99", "-18.4566, -12.0552, 1.60415, 1.77", "-19.8624, -12.3125, 1.96785, 1.47", "-20.877, -12.6931, 2.25494, 1.47", "-22.156, -13.4684, 2.5781, 1.33", "-22.7373, -13.9427, 2.68636, 1.99", "-23.7255, -14.9123, 2.79483, 1.99", "-24.8637, -16.1723, 2.80936, 1.77", "-26.1227, -17.7118, 2.69857, 1.92", "-27.2869, -19.1749, 2.46104, 1.69", "-28.0027, -20.0244, 2.23082, 1.69", "-28.8997, -20.9811, 1.89169, 1.84", "-29.7179, -21.7812, 1.57922, 1.84", "-30.777, -22.7806, 1.19123, 1.69", "-31.941, -23.8939, 0.828099, 1.55", "-33.1164, -25.0987, 0.553782, 1.4", "-34.0794, -26.0906, 0.358291, 1.25", "-35.0871, -27.1753, 0.176768, 1.33", "-36.0414, -28.3031, 0.0711771, 1.47", "-36.9348, -29.4995, 0.114, 1.62", "-37.5665, -30.6187, 0.336499, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -9.13344, -4.9037, 3.61", "0.448551, -9.13344, -4.9037, 3.61", "0.665788, -10.7462, -4.83209, 2.95", "0.977142, -13.2491, -4.72434, 2.8", "1.15667, -14.9264, -4.62168, 2.8", "1.31304, -16.8019, -4.49231, 3.02", "1.38786, -18.0467, -4.4057, 3.02", "1.41916, -19.2677, -4.3162, 3.02", "1.38898, -21.1076, -4.17894, 3.02", "1.26662, -23.0539, -4.02799, 2.36", "0.938226, -26.4585, -3.86301, 2.36", "0.701158, -28.3657, -3.84692, 2.43", "0.428435, -30.2117, -3.88803, 2.43", "0.071965, -32.3755, -4.0047, 2.43", "-0.482283, -35.363, -4.24281, 2.28", "-1.07952, -38.4282, -4.5543, 2.14", "-1.91333, -42.4889, -5.04166, 2.06", "-2.49202, -45.3072, -5.42232, 2.43", "-2.85755, -47.102, -5.69861, 2.58", "-3.24949, -48.9932, -6.02912, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 8.00255, -7.5337, 1.62", "-0.469153, 8.8341, -7.59391, 1.62", "-0.607912, 10.0575, -7.62892, 1.92", "-0.817172, 11.6917, -7.68946, 1.33", "-1.08109, 13.4507, -7.77864, 1.69", "-1.29755, 14.7522, -7.82402, 2.21", "-1.48309, 15.8402, -7.81621, 2.21", "-1.70649, 17.065, -7.762, 1.99", "-1.91614, 18.1065, -7.67971, 1.77", "-2.1651, 19.2651, -7.55871, 1.99", "-2.4351, 20.4914, -7.42576, 1.99", "-2.89661, 22.6457, -7.23191, 1.11", "-3.1815, 23.9925, -7.14875, 1.11", "-3.48678, 25.3475, -7.11574, 1.25", "-3.77784, 26.4853, -7.11006, 1.4", "-4.15883, 27.7289, -7.17588, 0.81", "-4.60753, 28.9068, -7.34411, 0.74", "-4.9641, 29.677, -7.5232, 0.74", "-5.40363, 30.5125, -7.76545, 0.74", "-5.91442, 31.4225, -8.07349, 0.96", "-6.39599, 32.279, -8.38459, 0.96", "-6.89842, 33.1391, -8.70457, 1.55", "-7.46593, 34.1033, -9.0763, 2.06", "-7.94607, 34.9812, -9.42298, 2.43", "-8.49673, 36.1635, -9.89361, 2.36", "-9.12019, 37.774, -10.5182, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 8.75855, 0.346303, 2.5", "-2.38053, 8.89549, 0.346975, 2.5", "-3.31733, 10.8139, 0.310774, 1.77", "-3.97121, 12.1103, 0.317465, 1.55", "-4.73812, 13.5858, 0.379919, 1.55", "-5.32247, 14.7118, 0.467042, 1.33", "-6.21407, 16.4581, 0.652429, 1.33", "-6.77162, 17.5251, 0.795071, 1.55", "-7.61285, 19.1056, 1.03749, 1.55", "-8.48651, 20.8244, 1.30638, 1.62", "-9.18404, 22.3563, 1.53222, 1.4", "-9.83437, 24.0423, 1.75278, 1.4", "-10.2043, 25.078, 1.88977, 1.4", "-10.7796, 26.7437, 2.098, 1.4", "-11.3257, 28.4075, 2.24335, 1.4", "-11.9398, 30.4642, 2.3419, 1.77", "-12.4568, 32.3093, 2.36033, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 4.41155, 1.3463, 2.58", "6.88055, 4.46482, 1.35102, 2.58", "7.53595, 5.15329, 1.41946, 2.58", "8.27958, 5.94256, 1.52012, 1.84", "8.83008, 6.5152, 1.60942, 2.06", "9.54085, 7.25251, 1.74296, 2.06", "10.0105, 7.72841, 1.86158, 2.58", "10.5318, 8.25306, 2.02334, 2.58", "10.8764, 8.60561, 2.15404, 2.58", "11.488, 9.20315, 2.41533, 2.58", "11.9183, 9.59368, 2.60935, 2.43", "12.8196, 10.3644, 3.05093, 2.21", "13.4771, 10.894, 3.38638, 1.99", "14.0047, 11.2942, 3.63931, 1.99", "14.689, 11.737, 3.93487, 1.69", "15.261, 11.9903, 4.15183, 1.69", "16.274, 12.1361, 4.48478, 2.06", "16.9097, 12.0193, 4.6579, 2.06", "18.4119, 11.332, 5.05981, 1.69", "19.4451, 10.737, 5.32093, 1.92", "21.0604, 9.58413, 5.7003, 1.92", "22.5985, 8.25737, 6.02823, 2.06", "23.3871, 7.43065, 6.1766, 2.28", "23.9785, 6.67744, 6.29585, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.834326", "4.36343, 23.5449, 1.13455, 0.834326", "6.95552, 38.3192, 1.13455, 0.834326" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-29.0726, -44.6521, -67.5877, 0.96", "-27.6759, -47.3563, -73.5461, 0.96", "-27.4149, -47.9779, -74.6672, 0.96", "-27.0881, -48.8336, -75.9992, 0.96", "-26.6404, -50.045, -77.7164, 1.55", "-26.2909, -51.0765, -79.0285, 0.22", "-25.9205, -52.2888, -80.3339, 0.22", "-25.7386, -53.0963, -80.8692, 1.11", "-25.5819, -53.861, -81.3061, 1.4", "-25.3268, -54.8994, -81.813, 1.4", "-24.6949, -57.1381, -82.7671, 0.22", "-23.9163, -59.4224, -83.6855, 0.22", "-23.6222, -60.1693, -83.9772, 0.74", "-23.4534, -60.5687, -84.1211, 0.74", "-22.5224, -62.6987, -84.8251, 0.15", "-22.3701, -63.0291, -84.9205, 0.37", "-21.4337, -64.8211, -85.3874, 0.22", "-20.8633, -65.811, -85.6781, 0.22", "-20.4095, -66.601, -85.9067, 0.74", "-19.9879, -67.4106, -86.1173, 0.88", "-19.8828, -67.6903, -86.177, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-29.0726, -44.6521, -67.5877, 2.87", "-29.8843, -44.9224, -67.7034, 2.87", "-32.4478, -46.0014, -68.1807, 0.22", "-34.7684, -47.2993, -68.6763, 0.22", "-35.8898, -47.9956, -68.9224, 1.69", "-36.2424, -48.23, -69.0004, 2.21", "-36.8156, -48.6287, -69.1275, 2.21", "-38.9217, -50.31, -69.5829, 0.22", "-40.7728, -52.1055, -70.0367, 0.22", "-41.3465, -52.7124, -70.1897, 1.25", "-41.8149, -53.2137, -70.3159, 1.25", "-42.4368, -53.8713, -70.4921, 1.25", "-43.7055, -55.1244, -70.849, 0.15", "-44.4253, -55.8049, -71.044, 0.15", "-44.9927, -56.2833, -71.2038, 0.96", "-45.6375, -56.7727, -71.406, 1.18", "-45.9335, -56.9678, -71.5026, 1.18", "-47.8457, -58.0431, -72.2326, 0.22", "-48.3547, -58.25, -72.4493, 0.52", "-48.8177, -58.4094, -72.6509, 0.52", "-50.0091, -58.7785, -73.1614, 0.22", "-50.7487, -58.9991, -73.4865, 1.25", "-51.835, -59.3662, -73.9494, 1.4", "-53.9302, -60.2825, -74.9051, 0.22", "-55.3601, -61.1043, -75.5709, 0.22", "-55.9014, -61.5053, -75.8312, 0.74", "-56.5937, -62.1679, -76.1719, 0.88", "-57.5522, -63.518, -76.8223, 0.22", "-58.3066, -65.2752, -77.4914, 0.22", "-58.5998, -66.4301, -77.8704, 1.99", "-58.7129, -67.1399, -78.0673, 2.36", "-58.7973, -67.8373, -78.2587, 2.36", "-59.1087, -71.7549, -79.3199, 0.15", "-59.197, -74.1895, -80.0209, 0.15", "-59.2038, -74.8236, -80.1803, 0.44", "-59.1819, -76.0457, -80.4591, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-37.5665, -30.6187, 0.336499, 0.96", "-38.5212, -31.0018, -0.0216069, 0.96", "-39.4303, -31.4004, -0.36867, 1.25", "-40.7403, -31.9741, -0.862989, 1.25", "-43.0232, -32.8944, -1.66085, 1.18", "-44.5774, -33.4477, -2.15263, 1.11", "-45.7747, -33.8436, -2.51908, 0.88", "-47.3514, -34.3753, -3.02608, 0.96", "-48.2539, -34.6796, -3.32433, 0.96", "-49.5787, -35.1369, -3.77038, 0.96", "-50.8847, -35.5928, -4.13611, 0.96", "-51.9955, -35.968, -4.38242, 1.18", "-53.3617, -36.4072, -4.62549, 1.03", "-54.0382, -36.6017, -4.6766, 1.03", "-55.4537, -36.9524, -4.62678, 1.18", "-56.3139, -37.123, -4.46873, 1.18", "-58.2521, -37.3767, -3.73136, 0.96", "-58.9634, -37.423, -3.39053, 1.11", "-60.3485, -37.4815, -2.65406, 1.11", "-61.4585, -37.5588, -2.05004, 1.11", "-62.7643, -37.7043, -1.33928, 1.11", "-64.5074, -38.056, -0.409299, 1.55", "-65.7546, -38.4593, 0.206091, 1.03", "-67.2462, -39.1418, 0.920691, 0.88", "-68.5177, -39.9221, 1.48782, 0.74", "-69.2453, -40.5027, 1.78923, 0.74", "-70.1834, -41.4517, 2.10349, 0.74", "-71.1131, -42.6027, 2.32384, 0.66", "-71.9437, -43.794, 2.47789, 0.88", "-72.4851, -44.6641, 2.54124, 1.03", "-73.0486, -45.689, 2.58403, 1.03", "-73.7685, -47.0097, 2.61884, 0.88", "-74.6673, -48.5617, 2.6403, 0.88", "-75.1774, -49.3395, 2.63912, 0.88", "-75.9369, -50.2946, 2.63858, 0.88", "-77.4216, -51.8236, 2.64522, 0.88", "-78.2928, -52.5158, 2.65059, 0.88", "-79.5448, -53.2415, 2.66078, 0.88", "-80.39, -53.5743, 2.66321, 0.96", "-81.3867, -53.8639, 2.63701, 0.96", "-82.2934, -54.0516, 2.61599, 0.96", "-83.3091, -54.2276, 2.6017, 0.52", "-84.0016, -54.4738, 2.60697, 0.52", "-84.5207, -54.9162, 2.66109, 0.52", "-85.0216, -55.7458, 2.84217, 0.81", "-85.4035, -56.6239, 3.08242, 0.96", "-85.6764, -57.6388, 3.3755, 0.96", "-85.9691, -59.4576, 3.90962, 0.81", "-86.0602, -60.3478, 4.18014, 0.81", "-86.1306, -61.475, 4.56904, 1.11", "-86.2091, -62.1128, 4.83689, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-37.5665, -30.6187, 0.336499, 1.33", "-38.3559, -30.8479, 1.01755, 1.33", "-39.1221, -31.0968, 1.58799, 1.18", "-40.5623, -31.5299, 2.6097, 0.88", "-41.2596, -31.7051, 3.06234, 0.74", "-42.2853, -31.9071, 3.6525, 0.74", "-43.3283, -32.0453, 4.24762, 0.74", "-44.1163, -32.127, 4.66634, 0.59", "-45.0432, -32.1692, 5.15096, 0.59", "-45.7728, -32.1523, 5.53596, 0.52", "-46.5073, -32.0454, 5.98348, 0.52", "-47.8883, -31.656, 6.94297, 0.74", "-48.7621, -31.3249, 7.61759, 0.59", "-49.567, -31.0084, 8.26368, 0.44", "-50.4346, -30.7206, 8.98445, 0.37", "-51.1293, -30.5714, 9.56945, 0.66", "-51.7532, -30.5458, 10.0095, 0.66", "-52.1628, -30.5975, 10.2073, 0.66", "-52.7054, -30.7013, 10.4375, 0.44", "-53.3356, -30.8675, 10.674, 0.44", "-54.4604, -31.1701, 11.0672, 0.44", "-56.013, -31.6266, 11.6148, 0.74", "-56.9334, -31.9327, 11.9354, 0.74", "-58.2051, -32.3422, 12.3617, 0.52", "-59.3946, -32.7076, 12.7468, 0.59", "-60.416, -33.0136, 13.0597, 0.44", "-61.8356, -33.5005, 13.4935, 0.37", "-62.8567, -33.9486, 13.8097, 0.37", "-63.9683, -34.6025, 14.1247, 0.29", "-64.496, -35.0299, 14.2589, 0.29", "-65.1161, -35.6804, 14.4635, 0.29", "-65.6439, -36.3011, 14.6801, 0.37", "-66.2395, -37.0291, 14.9819, 0.37", "-66.8425, -37.7335, 15.341, 0.37", "-67.4893, -38.5629, 15.782, 0.66", "-68.1339, -39.3691, 16.243, 0.81", "-68.6317, -39.9253, 16.6029, 0.81", "-69.3628, -40.5874, 17.0988, 0.22", "-70.2639, -41.2633, 17.6893, 0.22", "-79.1353, -42.7362, 22.086, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.24949, -48.9932, -6.02912, 1.55", "-2.84366, -50.3128, -5.96473, 1.55", "-2.44046, -51.6567, -5.89755, 1.55", "-2.09937, -52.8378, -5.8435, 1.55", "-1.72603, -54.1778, -5.77679, 1.69", "-1.45999, -55.2061, -5.72137, 1.69", "-1.28445, -55.9753, -5.68051, 1.69", "-1.04977, -57.2522, -5.61378, 1.55", "-0.802728, -58.9238, -5.53266, 1.47", "-0.6692, -60.317, -5.45715, 1.33", "-0.626271, -61.6532, -5.37845, 1.33", "-0.687194, -63.4283, -5.27278, 1.33", "-0.829299, -64.7307, -5.18419, 1.11", "-0.988008, -65.5514, -5.12061, 1.11", "-1.46051, -67.3401, -4.96785, 1.25", "-1.84137, -68.5281, -4.86248, 1.25", "-2.22616, -69.5975, -4.76668, 1.25", "-2.7963, -71.0827, -4.64584, 1.4", "-3.37832, -72.5479, -4.54349, 1.4", "-3.83619, -73.737, -4.48577, 1.55", "-4.12657, -74.6136, -4.47729, 1.55", "-4.4746, -75.9125, -4.50138, 1.33", "-4.81036, -77.5373, -4.5877, 0.96", "-4.90539, -78.1821, -4.64755, 0.81", "-4.97979, -78.9082, -4.71968, 0.81", "-5.09202, -80.5867, -4.87628, 0.96", "-5.13244, -81.7495, -4.96678, 1.33", "-5.15861, -83.0329, -5.0441, 1.69", "-5.18342, -83.8104, -5.07377, 1.84", "-5.23063, -84.6918, -5.08417, 1.99", "-5.33529, -85.734, -5.06561, 2.06", "-5.44084, -86.625, -5.02898, 2.06", "-5.55001, -87.5314, -4.95788, 1.84", "-5.65698, -88.4986, -4.84026, 1.62", "-5.76614, -89.6607, -4.66093, 1.18", "-5.83157, -90.5915, -4.5047, 0.88", "-5.90822, -91.8636, -4.27087, 0.88", "-5.95559, -92.7389, -4.0803, 1.03", "-6.00779, -93.6391, -3.85866, 1.11", "-6.06014, -94.2799, -3.69343, 1.11", "-6.26642, -95.8779, -3.28279, 1.03", "-6.44891, -96.9203, -3.01841, 1.18", "-6.61706, -97.7711, -2.81688, 1.25", "-6.88828, -99.0657, -2.54237, 1.18", "-7.15256, -100.24, -2.32829, 1.03", "-7.44415, -101.411, -2.14979, 0.96", "-7.79014, -102.68, -2.00219, 0.88", "-8.04674, -103.527, -1.94551, 0.88", "-8.49047, -104.803, -1.96704, 1.25", "-8.98139, -106.075, -2.0737, 1.55", "-9.36288, -107.048, -2.19678, 1.62", "-9.64798, -107.827, -2.3107, 1.62", "-9.98207, -108.848, -2.4636, 1.4", "-10.3988, -110.294, -2.65891, 1.11", "-10.7458, -111.786, -2.82684, 1.11", "-11.0436, -113.435, -2.94835, 1.11", "-11.3045, -115.193, -3.0355, 1.11", "-11.4747, -116.48, -3.0736, 1.4", "-11.6343, -117.814, -3.09308, 1.4", "-11.8692, -119.893, -3.09308, 1.25", "-12.1096, -122.023, -3.09914, 1.25", "-12.2791, -123.423, -3.10641, 1.62", "-12.4443, -124.65, -3.12577, 1.77", "-12.6655, -126.292, -3.17652, 1.33", "-12.8585, -127.779, -3.23132, 0.88", "-13.0395, -129.437, -3.30785, 1.25", "-13.114, -130.259, -3.35586, 1.84", "-13.1726, -131.18, -3.42183, 2.28", "-13.2085, -132.133, -3.50796, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-3.24949, -48.9932, -6.02912, 2.14", "-3.10796, -49.6956, -6.21897, 2.14", "-2.85048, -50.8076, -6.47028, 2.14", "-2.4102, -52.709, -6.9, 1.69", "-2.04129, -54.3022, -7.26008, 1.84", "-1.68289, -55.8499, -7.60988, 1.99", "-1.39296, -57.102, -7.89286, 2.36", "-1.16123, -58.021, -8.06444, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-9.12019, 37.774, -10.5182, 1.25", "-8.74535, 38.9744, -10.7679, 1.25", "-8.42946, 39.7806, -10.9197, 1.03", "-8.00909, 40.7392, -11.0839, 0.81", "-7.53821, 41.8128, -11.2494, 0.81", "-7.12526, 42.8853, -11.3987, 1.11", "-6.86594, 43.6644, -11.4966, 1.11", "-6.58953, 44.577, -11.5672, 0.96", "-6.26524, 45.7998, -11.6276, 0.66", "-6.06967, 46.6465, -11.6646, 0.52", "-5.84329, 47.7586, -11.7024, 0.52", "-5.70225, 48.5856, -11.7273, 0.52", "-5.39711, 50.3545, -11.8072, 1.18", "-5.23512, 51.2598, -11.8572, 1.62", "-5.10918, 51.9091, -11.9001, 1.69", "-4.86703, 52.9841, -12.0009, 1.33", "-4.71293, 53.5156, -12.0708, 0.74", "-4.42844, 54.3301, -12.2083, 0.59", "-3.94235, 55.6177, -12.4954, 0.66", "-3.69065, 56.3141, -12.6681, 0.44", "-3.52934, 56.8349, -12.798, 0.44", "-3.27659, 57.7906, -13.0392, 0.37", "-3.0604, 58.5952, -13.2353, 0.37", "-2.87981, 59.1799, -13.3619, 0.37", "-2.52527, 60.0996, -13.5782, 0.37", "-2.1793, 60.9186, -13.7861, 0.44", "-1.87491, 61.7162, -14.0161, 0.44", "-1.46533, 63.0081, -14.429, 0.81", "-1.20745, 63.9216, -14.7326, 1.03", "-0.964141, 64.7467, -15.0189, 1.03", "-0.741543, 65.4974, -15.3074, 0.81", "-0.438515, 66.5936, -15.775, 0.29", "-0.308712, 67.1391, -16.02, 0.29", "-0.0582459, 68.4589, -16.6063, 1.77", "0.0174198, 68.8986, -16.7968, 2.36", "0.129011, 69.5077, -17.0378, 2.36", "0.365284, 70.6668, -17.4636, 2.28", "0.689306, 72.0575, -17.9252, 0.66", "0.874415, 72.8181, -18.1776, 0.88", "1.06496, 73.6101, -18.4441, 0.88", "1.27941, 74.4989, -18.7233, 0.37", "1.42551, 75.0992, -18.9033, 0.37", "1.71807, 76.3508, -19.253, 0.37", "1.92672, 77.2948, -19.5036, 1.11", "2.0796, 78.0493, -19.6955, 1.47", "2.17425, 78.589, -19.8239, 1.69", "2.30454, 79.5018, -20.0236, 1.33", "2.4156, 80.505, -20.2198, 0.44", "2.4623, 81.5726, -20.4016, 0.29", "2.46864, 82.4109, -20.5395, 0.52", "2.45714, 83.0376, -20.6406, 0.52", "2.41625, 84.0901, -20.8329, 0.29", "2.38985, 85.1735, -21.036, 0.29", "2.38131, 87.0834, -21.4237, 1.18", "2.38834, 87.8014, -21.5696, 1.62", "2.3956, 88.5662, -21.7124, 1.84", "2.4075, 89.5319, -21.8762, 1.33", "2.43578, 92.2871, -22.3211, 0.22", "2.46152, 94.051, -22.5896, 0.22", "2.48409, 95.6453, -22.8089, 0.22", "2.48681, 97.3303, -23.0103, 0.74", "2.47945, 98.2488, -23.1122, 1.03", "2.46871, 98.6818, -23.1552, 1.03", "2.37495, 100.063, -23.3209, 0.15", "2.3287, 100.593, -23.408, 0.15", "2.27081, 101.2, -23.5477, 0.44", "2.2171, 101.777, -23.7061, 0.66", "2.16858, 102.31, -23.8535, 0.66", "2.07282, 103.844, -24.2705, 1.55", "2.03403, 104.973, -24.5631, 2.58", "2.02735, 105.955, -24.8154, 2.58", "2.10714, 108.136, -25.3345, 0.29", "2.24246, 109.593, -25.6176, 0.29", "2.54223, 111.682, -25.924, 0.29", "2.8022, 112.994, -26.0543, 0.96", "2.9638, 113.667, -26.09, 0.96", "3.59066, 115.86, -26.1133, 0.22", "4.33712, 118.195, -26.0442, 0.22", "4.83948, 119.66, -25.9558, 1.77", "5.04754, 120.234, -25.9052, 2.36", "5.30665, 120.934, -25.8375, 2.5", "6.14357, 123.196, -25.6034, 0.15", "6.56053, 124.334, -25.493, 0.29", "6.83447, 125.097, -25.4331, 0.29", "7.17937, 126.071, -25.4032, 0.15", "7.51621, 127.069, -25.4299, 1.18", "7.72576, 127.688, -25.4766, 1.55", "7.95838, 128.376, -25.5532, 1.18", "8.12812, 128.872, -25.6224, 0.74", "8.6109, 130.411, -25.8479, 0.22", "8.9598, 131.612, -26.0279, 0.22", "9.51405, 133.715, -26.3033, 0.22", "9.78906, 134.846, -26.4296, 0.81", "9.89015, 135.3, -26.4716, 0.81", "10.4614, 138.14, -26.654, 0.22", "10.7101, 139.568, -26.6728, 0.22", "10.8927, 140.858, -26.6769, 1.25", "10.9185, 141.2, -26.6771, 1.69", "10.9295, 141.587, -26.6757, 1.69", "10.9262, 142.412, -26.6677, 1.33", "10.8935, 143.133, -26.6694, 0.59", "10.8007, 144.633, -26.7094, 0.22", "10.6897, 146.772, -26.8287, 0.22", "10.6225, 148.089, -26.9168, 1.03", "10.5927, 148.644, -26.9571, 1.03", "10.5784, 149.224, -26.9991, 1.03", "10.5878, 150.085, -27.0537, 0.52", "10.6783, 152.013, -27.139, 0.22", "10.7896, 152.942, -27.1774, 0.59", "10.895, 153.537, -27.198, 0.59", "11.4731, 156.153, -27.2667, 0.22", "11.6937, 156.965, -27.2789, 0.66", "11.8879, 157.545, -27.2857, 0.66", "12.3865, 158.89, -27.311, 0.15", "12.6761, 159.638, -27.3353, 0.81", "12.8744, 160.153, -27.3605, 0.81", "13.1575, 160.912, -27.4159, 0.81", "13.6568, 162.361, -27.5456, 0.22", "14.1414, 163.832, -27.7124, 1.33", "14.3346, 164.45, -27.7935, 1.55", "14.4488, 164.81, -27.8429, 1.55", "14.5702, 165.192, -27.9007, 1.03", "15.1504, 166.932, -28.1897, 0.22", "15.7062, 168.481, -28.4667, 0.22", "16.0257, 169.293, -28.6307, 0.22", "16.4005, 170.255, -28.8274, 1.25", "16.6272, 170.876, -28.9587, 1.77", "16.8146, 171.438, -29.083, 1.77", "16.9623, 171.912, -29.1979, 1.18", "17.1808, 172.664, -29.3889, 0.66", "17.8427, 174.952, -30.0197, 0.22", "18.2918, 176.481, -30.4851, 0.22", "18.6069, 177.523, -30.8008, 1.11", "18.8315, 178.193, -30.9972, 1.4", "19.0551, 178.788, -31.1695, 1.4", "19.3475, 179.478, -31.3879, 0.96", "20.2523, 181.428, -32.0576, 0.22", "21.2715, 183.455, -32.7598, 0.22", "22.0864, 185.008, -33.2873, 1.77", "22.3799, 185.555, -33.465, 2.65", "22.8505, 186.412, -33.7281, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.12019, 37.774, -10.5182, 0.66", "-10.7568, 38.6391, -10.6049, 0.66", "-11.4093, 38.9523, -10.6365, 0.66", "-12.1745, 39.2888, -10.6666, 0.66", "-13.0491, 39.6336, -10.7017, 1.11", "-13.5925, 39.8209, -10.7267, 1.33", "-14.4118, 40.093, -10.7667, 1.33", "-15.3018, 40.3591, -10.8081, 0.96", "-15.914, 40.5472, -10.8165, 0.88", "-16.643, 40.7726, -10.8032, 0.88", "-17.5057, 41.038, -10.7445, 0.37", "-17.9486, 41.1704, -10.6943, 0.37", "-18.7026, 41.3954, -10.5804, 0.81", "-19.3527, 41.5982, -10.4634, 0.88", "-19.9538, 41.7914, -10.3461, 0.81", "-20.5872, 41.9999, -10.2124, 0.29", "-20.9921, 42.127, -10.1321, 0.29", "-21.6996, 42.2991, -10.0234, 0.74", "-22.2291, 42.4102, -9.96499, 0.74", "-22.5319, 42.4875, -9.92821, 0.74", "-22.8795, 42.6062, -9.86084, 0.74", "-23.3033, 42.7725, -9.75274, 0.59", "-23.7137, 42.9289, -9.61982, 0.59", "-24.0712, 43.0532, -9.47194, 0.37", "-25.0382, 43.3303, -9.04887, 0.37", "-25.7205, 43.4782, -8.74273, 0.37", "-26.0859, 43.5347, -8.57788, 0.22", "-26.703, 43.5962, -8.30672, 0.22", "-27.0383, 43.6072, -8.17713, 0.22", "-28.0306, 43.6147, -7.84453, 1.03", "-28.5252, 43.629, -7.70982, 1.4", "-28.8215, 43.6545, -7.63556, 1.4", "-29.5416, 43.764, -7.46829, 0.81", "-30.465, 43.947, -7.28417, 0.22", "-30.9647, 44.0535, -7.19437, 0.22", "-31.975, 44.2833, -7.03714, 1.11", "-32.4922, 44.4075, -6.96974, 1.4", "-32.8602, 44.4971, -6.92903, 1.4", "-33.721, 44.7041, -6.8514, 0.66", "-34.5313, 44.8884, -6.78742, 0.52", "-35.5138, 45.0816, -6.72146, 0.74", "-36.1527, 45.2021, -6.68624, 0.88", "-37.0597, 45.3845, -6.64435, 0.66", "-37.7035, 45.5212, -6.6193, 0.66", "-38.2317, 45.6399, -6.60459, 0.66", "-39.2247, 45.883, -6.57406, 0.29", "-40.0184, 46.0942, -6.52936, 1.03", "-40.6908, 46.2842, -6.46934, 1.25", "-40.9032, 46.355, -6.43366, 1.25", "-41.4451, 46.5734, -6.30385, 0.81", "-42.0909, 46.864, -6.10365, 0.29", "-42.5047, 47.0676, -5.94235, 0.52", "-42.7789, 47.2154, -5.82613, 0.66", "-43.777, 47.7795, -5.40637, 0.22", "-44.343, 48.1059, -5.18457, 0.22", "-44.8092, 48.3739, -5.02445, 0.22", "-45.4397, 48.7387, -4.85763, 0.22", "-46.2926, 49.235, -4.67423, 0.59", "-46.7827, 49.524, -4.59216, 0.81", "-47.2411, 49.8106, -4.55418, 0.81", "-47.9443, 50.2859, -4.52858, 0.52", "-48.8909, 50.9716, -4.53259, 1.03", "-49.458, 51.399, -4.55355, 1.18", "-49.8788, 51.7306, -4.5814, 1.25", "-50.816, 52.5016, -4.66515, 0.29", "-51.6636, 53.2195, -4.7573, 0.74", "-51.982, 53.493, -4.7978, 0.96", "-52.2615, 53.7309, -4.84083, 0.96", "-53.1945, 54.4967, -5.00047, 0.22", "-53.5658, 54.7846, -5.06561, 0.22", "-54.0757, 55.1529, -5.14821, 0.66", "-54.4241, 55.3934, -5.2119, 0.88", "-54.8381, 55.6656, -5.28651, 0.44", "-55.3782, 56.0125, -5.37829, 0.37", "-55.7041, 56.2175, -5.4259, 0.44", "-56.1378, 56.5008, -5.48843, 0.44", "-56.4498, 56.7073, -5.53369, 0.44", "-57.0503, 57.1133, -5.61428, 0.22", "-57.4412, 57.3871, -5.65487, 0.22", "-57.9031, 57.7391, -5.69328, 0.29", "-58.1726, 57.9597, -5.70575, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-12.4568, 32.3093, 2.36033, 1.47", "-11.9957, 33.2761, 2.29932, 1.47", "-11.5783, 34.3307, 2.2433, 0.81", "-11.318, 35.1032, 2.20957, 0.81", "-11.042, 36.1852, 2.17271, 0.81", "-10.758, 37.503, 2.13574, 0.81", "-10.4927, 38.9578, 2.10284, 0.81", "-10.3195, 40.4108, 2.07537, 1.03", "-10.2091, 41.7184, 2.05673, 1.03", "-10.0742, 43.7202, 2.02576, 1.18", "-9.99673, 44.9605, 2.01268, 1.18", "-9.95997, 47.1168, 1.98679, 1.18", "-9.98472, 48.651, 1.96529, 1.4", "-9.99219, 49.7382, 1.94667, 1.4", "-10.0043, 50.512, 1.92991, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.4568, 32.3093, 2.36033, 0.96", "-14.4902, 33.2525, 1.77163, 0.96", "-15.2188, 33.6129, 1.57886, 0.96", "-16.2287, 34.1226, 1.31255, 0.96", "-17.2797, 34.6722, 1.02441, 0.81", "-18.1842, 35.1638, 0.777771, 0.81", "-19.4311, 35.8616, 0.451552, 1.03", "-20.2738, 36.3761, 0.231854, 1.03", "-21.0538, 36.9426, 0.026973, 1.03", "-22.0195, 37.759, -0.2294, 0.81", "-22.7253, 38.3843, -0.415817, 0.81", "-23.4991, 39.0952, -0.609484, 0.81", "-24.408, 39.9867, -0.839405, 0.52", "-25.241, 40.8963, -1.04242, 0.52", "-25.7072, 41.4554, -1.13846, 0.52", "-26.3717, 42.3187, -1.25596, 0.52", "-27.1947, 43.4353, -1.39181, 0.52", "-27.6254, 44.0481, -1.45453, 0.52", "-28.0593, 44.6859, -1.49978, 0.52", "-28.5655, 45.4497, -1.53212, 0.66", "-29.0314, 46.2102, -1.54817, 0.88", "-29.4807, 47.029, -1.55531, 0.88", "-29.9785, 47.9932, -1.56505, 0.59", "-30.4842, 48.9493, -1.58478, 0.88", "-30.8504, 49.6368, -1.60713, 0.88", "-31.1498, 50.251, -1.63439, 0.96", "-31.4146, 50.8128, -1.66982, 0.96", "-31.6559, 51.3029, -1.71031, 0.96", "-32.0935, 52.1005, -1.79302, 0.74", "-32.7958, 53.2693, -1.93808, 1.25", "-33.2871, 54.0451, -2.04491, 1.25", "-33.8476, 54.9098, -2.16724, 0.29", "-34.2197, 55.4858, -2.24243, 0.29", "-34.5943, 56.071, -2.30749, 0.66", "-34.9301, 56.6015, -2.35141, 0.81", "-35.2086, 57.0529, -2.37353, 0.81", "-35.6646, 57.8598, -2.38027, 0.37", "-36.0928, 58.7558, -2.41267, 0.37", "-36.3414, 59.3424, -2.45461, 1.03", "-36.554, 59.8612, -2.50704, 1.25", "-36.8319, 60.4942, -2.5884, 1.25", "-37.0776, 60.9939, -2.66921, 0.81", "-37.6164, 61.9807, -2.85037, 0.59", "-37.942, 62.5418, -2.95917, 0.44", "-38.394, 63.3355, -3.08754, 0.88", "-38.7384, 63.9492, -3.16409, 0.88", "-39.3216, 65.0282, -3.2414, 0.59", "-39.6946, 65.7494, -3.27657, 0.59", "-40.2659, 66.9232, -3.29892, 0.44", "-40.8839, 68.2793, -3.31336, 1.03", "-41.3711, 69.4366, -3.30296, 1.55", "-41.6398, 70.1582, -3.27661, 1.62", "-41.9939, 71.2187, -3.21698, 1.11", "-42.3494, 72.3857, -3.137, 0.59", "-42.5767, 73.1944, -3.06392, 0.59", "-42.9306, 74.5485, -2.91712, 0.59", "-43.2801, 75.8991, -2.75105, 0.52", "-43.5124, 76.7834, -2.62305, 0.52", "-43.8078, 77.8869, -2.42406, 0.52", "-44.1279, 79.0382, -2.20688, 0.52", "-44.5065, 80.2965, -1.97556, 0.37", "-45.0901, 81.9641, -1.68026, 1.55", "-45.3186, 82.5111, -1.58945, 1.92", "-45.5617, 83.0057, -1.51492, 1.92", "-45.7983, 83.4246, -1.46505, 1.92", "-46.32, 84.2112, -1.39632, 0.88", "-47.0335, 85.2022, -1.33805, 0.44", "-47.5772, 85.9335, -1.30789, 0.44", "-48.1631, 86.7247, -1.29163, 0.44", "-48.9771, 87.8521, -1.27457, 0.37", "-49.4104, 88.4661, -1.26697, 0.37", "-50.3007, 89.7854, -1.25171, 0.74", "-50.6537, 90.3291, -1.23987, 0.74", "-51.0886, 91.0293, -1.22303, 0.52", "-51.6657, 91.9972, -1.21757, 1.25", "-52.0687, 92.6753, -1.23915, 1.47", "-52.3393, 93.135, -1.26893, 1.47", "-52.7173, 93.6984, -1.34139, 0.81", "-53.2375, 94.398, -1.46624, 0.59", "-53.7659, 95.0365, -1.62562, 0.88", "-54.2158, 95.5466, -1.77871, 1.18", "-54.4975, 95.8593, -1.88149, 1.18", "-55.1862, 96.6581, -2.11301, 0.96", "-55.9128, 97.574, -2.31792, 0.52", "-56.3244, 98.1537, -2.38347, 0.37", "-56.9026, 99.0662, -2.39303, 0.37", "-57.4407, 100.025, -2.3345, 0.37", "-57.9215, 100.993, -2.22699, 0.37", "-58.2414, 101.749, -2.10697, 0.81", "-58.6858, 102.969, -1.8896, 1.84", "-58.8618, 103.462, -1.80109, 1.92", "-58.9978, 103.817, -1.74554, 1.92", "-59.2458, 104.476, -1.66359, 1.62", "-59.5919, 105.407, -1.60014, 0.88", "-59.9439, 106.407, -1.56625, 0.29", "-60.4861, 107.964, -1.54517, 0.29", "-60.8994, 109.083, -1.53052, 0.29", "-61.1726, 109.735, -1.51335, 0.29", "-61.3196, 110.037, -1.5013, 0.29", "-61.7036, 110.697, -1.46581, 0.66", "-62.1991, 111.418, -1.41765, 0.81", "-62.5617, 111.893, -1.38229, 0.81", "-63.2575, 112.789, -1.31831, 0.37", "-63.8067, 113.476, -1.26901, 0.37", "-64.3264, 114.134, -1.22249, 0.81", "-64.6918, 114.603, -1.18624, 0.81", "-65.2084, 115.279, -1.12715, 0.37", "-65.7215, 115.908, -1.06498, 0.37", "-66.2473, 116.492, -0.99668, 0.88", "-66.8949, 117.176, -0.910277, 1.47", "-67.3826, 117.688, -0.848415, 1.69", "-67.7783, 118.107, -0.80318, 1.69", "-68.8575, 119.225, -0.68857, 0.37", "-69.2277, 119.615, -0.651116, 0.37", "-69.9186, 120.395, -0.591207, 0.37", "-70.7097, 121.363, -0.533982, 0.81", "-71.216, 122.074, -0.505209, 1.33", "-71.5198, 122.548, -0.494899, 1.33", "-71.9251, 123.217, -0.488623, 0.81", "-72.7461, 124.525, -0.490791, 0.52", "-73.4347, 125.534, -0.503482, 0.52", "-74.2134, 126.651, -0.528231, 0.52", "-74.6438, 127.266, -0.5463, 0.52", "-75.1973, 128.063, -0.575383, 0.52", "-75.819, 128.956, -0.617, 0.52", "-76.8797, 130.459, -0.698838, 0.52", "-77.2645, 131.002, -0.729738, 0.52", "-78.2217, 132.329, -0.802443, 1.25", "-78.492, 132.705, -0.820726, 1.47", "-78.8476, 133.194, -0.849608, 1.47", "-79.3716, 133.87, -0.897841, 0.88", "-80.0135, 134.617, -0.958886, 0.29", "-80.2821, 134.893, -0.981541, 0.29", "-80.8405, 135.417, -1.01986, 0.44", "-81.2846, 135.816, -1.04001, 0.44", "-81.7032, 136.182, -1.04818, 0.44", "-81.9487, 136.406, -1.06236, 0.44", "-82.2952, 136.742, -1.06544, 0.29", "-82.7353, 137.301, -1.03793, 0.29", "-82.8848, 137.516, -1.01336, 0.44", "-83.0662, 137.789, -0.970469, 0.44", "-83.5457, 138.492, -0.842844, 0.37", "-84.1962, 139.405, -0.660929, 0.44", "-85.2619, 140.856, -0.446123, 2.28", "-85.6909, 141.431, -0.388669, 2.5", "-86.0209, 141.887, -0.367304, 2.5", "-86.557, 142.637, -0.367739, 1.92", "-87.0929, 143.394, -0.421061, 0.81", "-87.7854, 144.433, -0.61553, 0.52", "-88.0724, 144.91, -0.731239, 0.52", "-88.6751, 146.017, -1.02159, 0.88", "-89.007, 146.702, -1.20194, 0.88", "-89.3692, 147.533, -1.41108, 0.66", "-89.6426, 148.219, -1.57602, 0.44", "-90.0089, 149.219, -1.78495, 0.29", "-90.3995, 150.374, -2.03597, 0.29", "-90.8013, 151.694, -2.34533, 0.29", "-90.9856, 152.349, -2.50905, 0.29", "-91.3151, 153.562, -2.86788, 0.52", "-91.5515, 154.392, -3.15254, 0.88", "-91.7594, 155.07, -3.43161, 0.88", "-92.0199, 155.81, -3.77775, 0.44", "-92.5578, 156.974, -4.38432, 1.11", "-93.1552, 157.974, -4.94509, 2.43", "-93.6682, 158.642, -5.3451, 2.43", "-94.0398, 159.024, -5.58733, 2.43", "-94.5775, 159.471, -5.85982, 1.69", "-95.3646, 160.03, -6.19499, 0.59", "-96.2497, 160.558, -6.48879, 0.74", "-96.5511, 160.718, -6.55754, 0.74", "-97.0583, 160.973, -6.66131, 0.52", "-97.8409, 161.369, -6.79275, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "23.9785, 6.67744, 6.29585, 1.99", "25.6149, 6.85358, 6.29232, 1.99", "26.5725, 7.1999, 6.38641, 1.99", "27.2436, 7.71149, 6.52017, 1.69", "28.1871, 8.43068, 6.70822, 1.69", "28.5845, 8.73359, 6.78742, 1.69", "29.2447, 9.23689, 6.91902, 1.69", "29.6649, 9.75436, 7.00345, 1.92", "30.2803, 10.8236, 7.24461, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "23.9785, 6.67744, 6.29585, 0.74", "24.7581, 8.72837, 6.55676, 0.74", "25.0501, 9.61644, 6.6547, 0.74", "25.4548, 11.009, 6.78685, 0.74", "25.7711, 12.2072, 6.88859, 0.44", "26.014, 13.2226, 6.97658, 0.44", "26.3402, 14.7285, 7.10766, 0.66", "26.4633, 15.4533, 7.15755, 0.88", "26.6214, 16.5077, 7.25391, 0.88", "26.7511, 17.4825, 7.37753, 1.03", "26.9505, 18.8818, 7.59011, 0.96", "27.1066, 19.8744, 7.7567, 0.52", "27.2558, 20.6728, 7.89864, 0.52", "27.4264, 21.7344, 8.09092, 0.88", "27.5659, 22.5999, 8.25117, 0.66", "27.7256, 23.5689, 8.43889, 0.88", "27.8667, 24.4342, 8.61188, 0.88", "28.0614, 25.7126, 8.88041, 0.29", "28.1954, 26.7454, 9.09264, 0.29", "28.2797, 27.4567, 9.22797, 0.29", "28.4218, 28.6692, 9.46527, 0.44", "28.5222, 29.3935, 9.62495, 0.74", "28.6737, 30.2654, 9.82627, 0.88", "28.7846, 30.793, 9.95648, 1.11", "28.8835, 31.2103, 10.058, 1.11", "29.0726, 32.1579, 10.26, 0.29", "29.2764, 33.0912, 10.4195, 0.29", "29.5089, 33.9726, 10.5496, 0.29", "31.6404, 43.5834, 13.9668, 0.29", "35.0057, 53.0, 16.8383, 0.29", "37.358, 63.0024, 18.7672, 0.29", "38.8407, 73.2868, 20.1333, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-86.2091, -62.1128, 4.83689, 0.44", "-88.0712, -62.9814, 5.65075, 0.44", "-89.015, -63.4971, 6.04641, 0.29", "-90.0138, -64.0929, 6.42464, 0.29", "-90.6009, -64.4554, 6.63339, 0.29", "-91.8519, -65.2115, 7.04877, 0.37", "-92.4227, -65.5391, 7.24373, 0.37", "-93.3015, -66.008, 7.46924, 0.29", "-94.1404, -66.5262, 7.69799, 0.29", "-94.7803, -66.9795, 7.87902, 0.29", "-95.2246, -67.3112, 8.0026, 0.29", "-95.9179, -67.8131, 8.19183, 0.29", "-96.6035, -68.2427, 8.36944, 0.44", "-97.5497, -68.7688, 8.61553, 0.44", "-98.0488, -69.0665, 8.76859, 0.44", "-98.773, -69.5629, 9.02983, 0.66", "-99.4907, -70.1659, 9.33944, 0.66", "-99.855, -70.5689, 9.5394, 0.52", "-100.46, -71.548, 10.04, 0.44", "-100.682, -72.2389, 10.3919, 0.66", "-100.787, -72.9625, 10.7595, 0.66", "-100.838, -73.7996, 11.1807, 0.52", "-100.899, -74.9103, 11.7489, 0.52", "-100.922, -75.9245, 12.2551, 0.44", "-100.917, -76.8142, 12.6921, 0.37", "-100.958, -78.1964, 13.3702, 0.37", "-101.041, -79.285, 13.9253, 0.29", "-101.217, -80.3852, 14.5445, 0.29", "-108.085, -87.7642, 16.3991, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-86.2091, -62.1128, 4.83689, 1.11", "-87.2059, -62.5612, 5.03009, 1.11", "-87.9811, -62.9867, 5.16344, 1.11", "-89.5517, -63.9106, 5.44122, 0.88", "-90.7495, -64.5766, 5.65082, 0.88", "-92.5723, -65.5087, 5.96361, 0.88", "-94.4754, -66.3916, 6.27125, 0.88", "-95.5182, -66.8685, 6.43687, 0.88", "-96.4883, -67.2998, 6.56445, 0.81", "-97.5791, -67.7657, 6.67789, 0.81", "-98.368, -68.0678, 6.7536, 0.81", "-99.7705, -68.5506, 6.88954, 0.96", "-100.503, -68.828, 6.95485, 0.96", "-101.25, -69.1964, 7.00346, 0.96", "-101.956, -69.6706, 7.02426, 0.96", "-102.876, -70.415, 7.03784, 0.96", "-103.182, -70.6756, 7.03509, 0.96", "-104.119, -71.4543, 6.99942, 0.88", "-105.296, -72.3119, 6.91994, 0.88", "-106.14, -72.9008, 6.85149, 1.11", "-106.991, -73.4972, 6.77845, 1.11", "-107.975, -74.2139, 6.67462, 0.96", "-108.807, -74.8758, 6.61166, 0.96", "-109.947, -75.8773, 6.56652, 0.88", "-111.254, -77.1391, 6.503, 0.88", "-112.262, -78.1605, 6.40453, 0.96", "-113.068, -78.9908, 6.28683, 0.96", "-114.219, -80.1359, 6.08089, 0.88", "-114.765, -80.6478, 5.95434, 0.74", "-115.995, -81.7199, 5.61816, 0.96", "-117.084, -82.5737, 5.30598, 1.11", "-117.972, -83.2329, 5.06554, 1.25", "-118.743, -83.8068, 4.8795, 1.25", "-119.985, -84.7546, 4.60947, 1.03", "-121.659, -86.1188, 4.3426, 0.88", "-122.871, -87.2051, 4.21332, 0.88", "-124.092, -88.3785, 4.10924, 0.88", "-125.11, -89.3707, 4.0203, 0.88", "-126.095, -90.2889, 3.93478, 1.33", "-126.869, -90.9414, 3.87627, 1.33", "-127.794, -91.665, 3.8001, 1.18", "-128.446, -92.144, 3.73975, 0.96", "-129.619, -92.9432, 3.64154, 0.96", "-130.703, -93.5965, 3.56843, 0.96", "-132.164, -94.3528, 3.51705, 0.88", "-133.431, -94.8657, 3.52936, 0.81", "-134.144, -95.0774, 3.57571, 0.81", "-134.977, -95.2881, 3.65448, 0.74", "-135.593, -95.4669, 3.72447, 0.74", "-136.378, -95.7694, 3.8235, 0.74", "-137.499, -96.3644, 3.97219, 0.74", "-138.121, -96.8403, 4.04812, 1.11", "-139.067, -97.8611, 4.14086, 1.11", "-140.222, -99.3934, 4.22027, 0.88", "-140.969, -100.535, 4.25911, 0.88", "-141.539, -101.495, 4.27978, 0.88", "-142.324, -102.834, 4.29897, 0.81", "-143.409, -104.564, 4.27405, 0.81", "-143.968, -105.375, 4.2405, 1.18", "-144.585, -106.244, 4.16909, 1.33", "-145.257, -107.121, 4.06864, 1.33", "-146.362, -108.439, 3.88258, 0.88", "-147.462, -109.641, 3.66361, 0.81", "-148.617, -110.806, 3.42867, 0.81", "-149.991, -112.125, 3.12829, 0.81", "-151.033, -113.082, 2.86881, 0.81", "-152.016, -113.959, 2.61419, 1.11", "-152.613, -114.484, 2.45156, 1.25", "-153.327, -115.11, 2.25812, 2.14", "-154.015, -115.748, 2.04847, 2.5", "-154.957, -116.61, 1.7609, 1.92", "-156.313, -118.032, 1.28341, 1.11", "-156.892, -118.722, 1.05473, 0.96", "-157.684, -119.757, 0.727901, 1.4", "-158.697, -121.154, 0.253671, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-13.2085, -132.133, -3.50796, 0.37", "-12.5638, -134.743, -2.34702, 0.37", "-12.3687, -135.418, -2.06848, 0.52", "-12.1156, -136.246, -1.75696, 0.66", "-11.8273, -137.19, -1.42337, 0.37", "-11.6081, -137.888, -1.18461, 0.44", "-11.3485, -138.7, -0.917616, 0.44", "-11.01, -139.671, -0.686808, 0.29", "-10.6628, -140.583, -0.460252, 0.29", "-10.3135, -141.35, -0.257382, 0.59", "-9.94897, -142.011, -0.0837594, 0.59", "-9.49279, -142.703, 0.096762, 0.37", "-8.9901, -143.357, 0.261428, 0.66", "-8.49159, -143.91, 0.401115, 0.52", "-7.72025, -144.652, 0.581966, 0.37", "-7.1229, -145.174, 0.698457, 0.37", "-6.21718, -145.946, 0.846321, 0.37", "-5.33033, -146.688, 0.966743, 1.03", "-4.68229, -147.232, 1.03725, 1.18", "-4.0678, -147.754, 1.08371, 0.81", "-3.58108, -148.176, 1.10632, 0.52", "-2.6703, -148.97, 1.14743, 0.52", "-1.80629, -149.753, 1.18331, 0.59", "-1.05056, -150.492, 1.18614, 0.59", "-0.435252, -151.155, 1.16888, 0.81", "0.0643364, -151.733, 1.14523, 0.81", "0.61278, -152.402, 1.10747, 0.66", "1.00787, -152.912, 1.0701, 0.29", "1.9097, -154.153, 0.967303, 0.52", "2.67704, -155.235, 0.873075, 1.03", "2.95202, -155.63, 0.833839, 1.47", "3.45664, -156.322, 0.760271, 1.62", "4.14032, -157.162, 0.664314, 1.03", "4.80575, -157.887, 0.594219, 0.29", "5.45347, -158.519, 0.551566, 0.29", "6.21496, -159.2, 0.503949, 0.37", "7.00849, -159.9, 0.455182, 0.66", "7.41746, -160.257, 0.435346, 0.81", "8.06423, -160.804, 0.421353, 0.96", "8.55229, -161.211, 0.422664, 0.44", "8.93916, -161.528, 0.435916, 0.29", "9.68674, -162.13, 0.490597, 0.29", "10.2473, -162.633, 0.540548, 0.59", "10.7801, -163.174, 0.596213, 0.74", "11.2031, -163.653, 0.645088, 0.74", "11.7653, -164.368, 0.712183, 0.74", "12.2119, -164.992, 0.760302, 0.44", "12.8011, -165.887, 0.817523, 0.29", "13.1475, -166.449, 0.843941, 0.66", "13.5784, -167.164, 0.865731, 0.88", "13.9814, -167.825, 0.880621, 0.96", "14.562, -168.751, 0.91054, 0.66", "15.1605, -169.699, 0.948159, 0.37", "15.8717, -170.77, 1.00115, 0.74", "16.269, -171.348, 1.03302, 0.81", "16.727, -172.026, 1.07435, 0.37", "17.3359, -172.972, 1.13456, 0.37", "17.8563, -173.82, 1.18854, 0.37", "18.2868, -174.548, 1.23151, 0.37", "18.6313, -175.157, 1.26238, 0.52", "19.0433, -175.877, 1.28977, 0.52", "19.4709, -176.61, 1.3056, 0.37", "19.9112, -177.38, 1.3056, 0.37", "20.4285, -178.26, 1.3056, 0.81", "20.7446, -178.743, 1.30745, 0.88", "21.2894, -179.482, 1.31256, 0.59", "21.765, -180.073, 1.32024, 0.37", "22.2544, -180.633, 1.33013, 0.37", "22.8826, -181.309, 1.34955, 0.44", "24.177, -182.602, 1.40155, 0.44", "25.0296, -183.359, 1.44183, 1.18", "25.6742, -183.888, 1.47761, 1.47", "26.3908, -184.442, 1.50839, 1.47", "27.4488, -185.251, 1.53799, 1.18", "28.2712, -185.919, 1.53901, 0.29", "28.7833, -186.371, 1.52244, 0.29", "29.1739, -186.74, 1.48992, 0.29", "29.8756, -187.462, 1.37288, 0.59", "30.5554, -188.245, 1.20485, 0.66", "30.9297, -188.734, 1.07607, 0.74", "31.3123, -189.303, 0.922551, 0.59", "31.7296, -190.004, 0.740005, 0.44", "32.2261, -190.899, 0.505425, 0.29", "32.5129, -191.503, 0.356283, 0.37", "32.9272, -192.515, 0.114832, 0.52", "33.1982, -193.289, -0.0402962, 1.03", "33.4575, -194.098, -0.202198, 1.55", "33.6811, -194.799, -0.332873, 1.55", "34.2351, -196.567, -0.657764, 0.44", "34.6186, -197.721, -0.880529, 0.37", "35.6147, -200.3, -1.43872, 0.29", "35.8729, -200.849, -1.56787, 0.29", "36.7018, -202.266, -1.91787, 1.47", "37.0476, -202.728, -2.0428, 1.92", "37.7661, -203.472, -2.28202, 2.06", "38.8812, -204.394, -2.67838, 0.81", "40.367, -205.375, -3.26524, 0.29", "41.3119, -205.955, -3.66462, 0.29", "42.5501, -206.688, -4.1769, 0.44", "43.1553, -207.054, -4.40236, 0.52", "44.5804, -207.956, -4.85638, 0.29", "45.6168, -208.655, -5.10352, 0.88", "46.2089, -209.084, -5.17305, 0.74", "47.5639, -210.189, -5.10406, 0.29", "48.4888, -211.0, -4.90196, 0.29", "49.3746, -211.812, -4.6053, 0.59", "49.9372, -212.351, -4.36113, 0.66", "50.9938, -213.399, -3.85723, 0.29", "52.0472, -214.499, -3.35876, 0.29", "52.7382, -215.29, -3.07453, 0.29", "53.3709, -216.109, -2.84935, 1.03", "53.8322, -216.751, -2.71954, 1.47", "54.2533, -217.371, -2.64036, 1.18", "55.0317, -218.581, -2.56659, 0.22", "55.7312, -219.698, -2.5347, 0.22", "56.6291, -221.141, -2.53071, 0.22", "57.0141, -221.735, -2.53094, 0.52", "57.6817, -222.728, -2.5344, 0.29", "58.3174, -223.645, -2.54652, 0.29", "58.7251, -224.199, -2.56624, 0.88", "59.2815, -224.943, -2.57011, 0.88", "60.097, -226.068, -2.55408, 0.29", "60.4645, -226.587, -2.5269, 0.29", "61.0977, -227.483, -2.41564, 0.96", "61.5331, -228.073, -2.28225, 1.4", "61.9875, -228.672, -2.09893, 1.77", "62.2697, -229.023, -1.96381, 1.77", "63.3756, -230.323, -1.40949, 0.22", "64.5069, -231.569, -0.803863, 0.22", "65.4032, -232.469, -0.333418, 0.88", "65.8116, -232.859, -0.133223, 1.33", "66.237, -233.245, 0.0471022, 1.33", "67.2169, -234.1, 0.426826, 0.22", "68.445, -235.13, 0.842155, 0.22", "69.7644, -236.242, 1.20829, 0.22", "70.9742, -237.301, 1.47287, 0.22", "71.6819, -237.947, 1.60156, 0.74", "72.0648, -238.318, 1.65716, 0.88", "72.5149, -238.791, 1.69888, 0.52", "73.3082, -239.744, 1.71478, 0.22", "73.7049, -240.287, 1.70697, 0.88", "74.135, -240.929, 1.70278, 1.33", "74.4712, -241.461, 1.70808, 1.33", "75.2429, -242.763, 1.74141, 0.29", "76.1231, -244.357, 1.81919, 0.29", "76.5392, -245.149, 1.88329, 0.44", "76.894, -245.844, 1.96273, 0.59", "77.2121, -246.481, 2.05483, 0.59", "77.7139, -247.5, 2.23098, 0.22", "78.2177, -248.545, 2.42812, 0.22", "78.5312, -249.183, 2.55016, 0.74", "78.7226, -249.563, 2.61693, 0.88", "78.9838, -250.05, 2.68679, 0.88", "79.5094, -251.001, 2.82099, 0.22", "80.4524, -252.616, 3.02948, 0.22", "80.8803, -253.324, 3.10027, 0.52", "81.1616, -253.786, 3.13211, 0.66", "81.6056, -254.505, 3.16773, 0.44", "88.6419, -261.896, 2.19557, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-13.2085, -132.133, -3.50796, 2.28", "-13.8391, -133.453, -3.28776, 2.28", "-14.4346, -134.58, -3.0393, 1.62", "-15.1964, -135.917, -2.73413, 1.33", "-15.959, -137.173, -2.46297, 0.88", "-16.3321, -137.751, -2.34664, 0.88", "-16.9235, -138.599, -2.18614, 1.03", "-18.1015, -140.109, -1.92034, 1.03", "-19.1168, -141.258, -1.73808, 0.96", "-19.9217, -142.086, -1.64131, 0.88", "-20.6091, -142.792, -1.60503, 1.11", "-21.3599, -143.646, -1.63074, 1.33", "-21.9471, -144.463, -1.71562, 1.55", "-22.4144, -145.301, -1.85437, 1.25", "-22.7505, -146.151, -2.02328, 0.96", "-23.0357, -147.326, -2.2684, 0.88", "-23.2429, -148.789, -2.58845, 0.88", "-23.3668, -150.355, -2.92653, 0.88", "-23.4296, -151.735, -3.21414, 1.03", "-23.4565, -153.026, -3.46856, 1.03", "-23.4728, -154.545, -3.73853, 1.03", "-23.477, -155.932, -3.95478, 1.25", "-23.4602, -157.531, -4.15737, 1.55", "-23.4191, -158.755, -4.27396, 1.55", "-23.3113, -160.445, -4.39047, 1.33", "-23.1945, -161.826, -4.46001, 1.33", "-23.0929, -163.059, -4.50733, 1.11", "-22.9783, -164.379, -4.50329, 1.11", "-22.88, -165.83, -4.45437, 0.96", "-22.8429, -166.908, -4.3924, 0.96", "-22.8456, -168.468, -4.25015, 0.88", "-22.9069, -170.524, -4.01573, 0.88", "-23.0019, -172.307, -3.77077, 1.03", "-23.1174, -173.893, -3.52102, 1.25", "-23.2558, -175.4, -3.26345, 1.33", "-23.3826, -176.586, -3.04972, 1.62", "-23.5038, -177.805, -2.81511, 2.5", "-23.5477, -178.468, -2.68916, 2.8", "-23.5848, -179.288, -2.56935, 3.02", "-23.5877, -180.058, -2.45134, 3.02", "-23.5843, -180.574, -2.3746, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.16123, -58.021, -8.06444, 0.81", "-1.50395, -59.6607, -8.03141, 0.81", "-1.82058, -60.7622, -7.97212, 0.66", "-2.25338, -61.9911, -7.8942, 0.66", "-2.75563, -63.277, -7.81306, 0.52", "-2.96368, -63.7906, -7.78201, 0.52", "-3.51461, -65.1435, -7.70478, 0.74", "-4.06972, -66.5193, -7.56892, 0.74", "-4.55953, -67.6564, -7.46905, 0.88", "-5.12866, -68.8881, -7.39144, 0.59", "-5.50152, -69.6907, -7.3718, 1.03", "-5.84204, -70.4792, -7.35858, 1.25", "-6.17663, -71.4079, -7.34168, 1.03", "-6.52786, -72.6094, -7.31955, 0.66", "-6.79047, -73.59, -7.30417, 0.66", "-7.05862, -74.6021, -7.30302, 0.81", "-7.35223, -75.7873, -7.33243, 0.81", "-7.55824, -76.7804, -7.39535, 0.66", "-7.71488, -77.8338, -7.50241, 0.52", "-7.77889, -78.46, -7.60054, 0.52", "-7.84689, -79.2276, -7.74024, 0.52", "-7.94733, -80.3215, -7.9663, 0.66", "-8.0546, -81.3144, -8.18269, 0.66", "-8.18942, -82.3629, -8.42251, 0.59", "-8.36469, -83.5118, -8.67826, 1.18", "-8.51027, -84.5126, -8.89093, 1.55", "-8.67101, -85.4691, -9.07762, 1.99", "-8.94695, -86.6243, -9.28582, 2.73", "-9.21278, -87.4762, -9.42716, 2.87", "-9.50565, -88.2693, -9.56394, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-1.16123, -58.021, -8.06444, 0.52", "-0.371333, -59.4851, -9.21124, 0.52", "-0.200277, -59.83, -9.45078, 0.52", "0.393227, -60.97, -10.239, 0.52", "0.875463, -61.8164, -10.825, 0.66", "1.19194, -62.3349, -11.1641, 0.66", "1.4822, -62.7733, -11.4396, 0.44", "1.83778, -63.3773, -11.8213, 0.88", "2.1522, -63.9444, -12.1441, 1.33", "2.49345, -64.5556, -12.4531, 1.47", "2.89466, -65.2632, -12.8838, 1.03", "3.40721, -66.3593, -13.6913, 0.44", "3.55817, -67.0218, -14.3285, 0.44", "3.56867, -67.774, -15.2938, 0.37", "3.51399, -68.3161, -16.1334, 0.37", "3.47087, -69.0119, -17.3866, 0.37", "3.49231, -69.4686, -18.3271, 0.74", "3.55985, -69.7808, -19.0279, 0.96", "3.73279, -70.2179, -19.976, 0.96", "4.11481, -71.015, -21.6181, 0.44", "4.42002, -71.566, -22.6466, 1.33", "4.86327, -72.3256, -23.9245, 1.55", "5.26346, -73.0253, -25.0337, 1.33", "5.79061, -73.9812, -26.4159, 0.81", "6.01364, -74.3915, -26.9445, 1.25", "6.29618, -74.9012, -27.5108, 0.88", "6.58246, -75.4739, -28.0511, 0.37", "6.80876, -75.9789, -28.4405, 0.81", "7.02802, -76.5199, -28.805, 1.03", "7.16535, -76.846, -28.9953, 1.03", "7.67544, -77.978, -29.6141, 0.29", "7.94558, -78.5536, -29.9029, 0.29", "8.32508, -79.3008, -30.2383, 1.84", "8.69088, -79.9316, -30.5142, 2.14", "9.72056, -81.4926, -31.2238, 0.29", "10.2566, -82.2102, -31.5543, 0.81", "10.8032, -82.8571, -31.8508, 0.81", "11.3779, -83.4618, -32.1441, 0.52", "12.1728, -84.2098, -32.5549, 1.25", "12.6974, -84.6653, -32.8354, 1.4", "14.0489, -85.7936, -33.5564, 0.22", "14.8783, -86.4808, -33.9721, 0.22", "15.8118, -87.2663, -34.4101, 1.4", "16.3908, -87.7877, -34.6647, 2.21", "16.6522, -88.0458, -34.7661, 2.21", "18.3237, -89.8633, -35.3326, 0.22", "18.7684, -90.375, -35.4734, 0.74", "19.1617, -90.849, -35.6047, 1.03", "19.7955, -91.6689, -35.8273, 0.59", "21.2723, -93.691, -36.3637, 0.22", "23.147, -96.3181, -37.0854, 0.22", "23.8053, -97.2518, -37.3714, 0.81", "24.2957, -97.9419, -37.5958, 0.96", "25.8939, -100.191, -38.3703, 0.22", "26.9013, -101.579, -38.8988, 0.22", "27.4636, -102.347, -39.231, 0.88", "28.0245, -103.091, -39.5987, 0.88", "29.6132, -105.171, -40.6797, 0.15", "30.8066, -106.692, -41.4356, 0.15", "31.5056, -107.552, -41.869, 0.15", "32.1391, -108.336, -42.2539, 1.62", "32.5316, -108.841, -42.4861, 1.92", "32.8391, -109.246, -42.6484, 1.92", "34.8142, -111.942, -43.6163, 0.22", "35.2332, -112.519, -43.7987, 0.66", "35.5499, -112.966, -43.9302, 0.88", "35.8753, -113.423, -44.0667, 0.88", "36.9338, -114.914, -44.6233, 0.15", "37.7377, -116.119, -45.2128, 0.15", "38.1773, -116.852, -45.6473, 0.81", "38.448, -117.375, -45.9777, 1.03", "38.656, -117.847, -46.2913, 1.03", "39.2205, -119.434, -47.4075, 0.22", "39.6782, -121.152, -48.7012, 0.22", "39.8451, -121.85, -49.2702, 0.22", "40.0802, -122.861, -50.1451, 1.03", "40.2053, -123.386, -50.6038, 1.62", "40.3369, -123.917, -51.0938, 1.62", "40.5852, -124.811, -51.9716, 1.03", "41.1481, -126.645, -53.8543, 0.22", "41.4249, -127.503, -54.8341, 0.44", "41.5969, -127.974, -55.4, 0.44", "41.9915, -129.014, -56.6557, 0.66", "42.1982, -129.539, -57.2687, 0.96", "42.4483, -130.145, -57.9597, 0.37", "43.2797, -132.088, -60.0786, 0.66", "43.4638, -132.487, -60.4988, 0.66", "44.1666, -133.939, -62.0327, 0.22", "44.5634, -134.707, -62.8011, 0.22", "44.939, -135.391, -63.4652, 0.81", "45.3174, -136.007, -64.0347, 0.96", "45.5794, -136.408, -64.2998, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "22.8505, 186.412, -33.7281, 0.37", "24.8353, 185.409, -31.5357, 0.37", "25.2403, 185.204, -31.0884, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "22.8505, 186.412, -33.7281, 0.22", "23.9791, 188.856, -34.0648, 0.22", "24.5432, 190.188, -34.2921, 0.22", "24.9698, 191.244, -34.4909, 0.74", "25.1194, 191.636, -34.5662, 0.74", "25.8122, 193.452, -34.9148, 0.15", "26.2605, 194.627, -35.1404, 0.15", "26.5632, 195.477, -35.3941, 0.66", "26.7188, 196.004, -35.5244, 0.88", "26.8915, 196.607, -35.6388, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-10.0043, 50.512, 1.92991, 0.66", "-10.3532, 52.4116, 1.7292, 0.66", "-10.4297, 53.1311, 1.6819, 0.96", "-10.5153, 53.9756, 1.64112, 0.96", "-10.6249, 55.1296, 1.59913, 0.59", "-10.7108, 56.1523, 1.56959, 0.59", "-10.7945, 57.3618, 1.54124, 0.59", "-10.8768, 59.1205, 1.55284, 0.59", "-10.8913, 59.9504, 1.56174, 0.52", "-10.8879, 61.1904, 1.58021, 0.88", "-10.8861, 62.089, 1.58733, 1.11", "-10.9045, 63.161, 1.58279, 1.11", "-10.942, 64.3953, 1.57853, 0.74", "-11.0087, 65.6891, 1.57512, 0.74", "-11.11, 67.3449, 1.5757, 0.74", "-11.2012, 68.4867, 1.56968, 0.52", "-11.3231, 69.7075, 1.54629, 0.52", "-11.4217, 70.5866, 1.51844, 0.96", "-11.571, 71.8841, 1.45047, 1.11", "-11.7983, 73.8076, 1.31788, 1.11", "-11.9465, 75.0713, 1.21454, 1.11", "-12.075, 76.3311, 1.12055, 0.81", "-12.1694, 77.4387, 1.04531, 0.74", "-12.2428, 78.5932, 0.977493, 0.74", "-12.2837, 79.6759, 0.930024, 0.44", "-12.3111, 80.5921, 0.908018, 0.44", "-12.3609, 82.1002, 0.912117, 0.74", "-12.3946, 83.1414, 0.935633, 0.74", "-12.4236, 84.2485, 0.969713, 0.37", "-12.4223, 85.398, 1.0116, 0.74", "-12.4079, 86.4013, 1.01185, 0.96", "-12.3819, 87.5515, 0.967963, 0.96", "-12.3464, 88.8165, 0.856919, 0.81", "-12.303, 90.0036, 0.717125, 0.52", "-12.2424, 91.2439, 0.541998, 0.52", "-12.1229, 92.8711, 0.286825, 1.03", "-12.0421, 93.7359, 0.142702, 1.55", "-11.9617, 94.5176, 0.00517372, 1.69", "-11.9083, 95.027, -0.0840845, 1.69", "-11.77, 96.2867, -0.283497, 0.37", "-11.6478, 97.341, -0.412299, 0.44", "-11.5635, 97.8902, -0.446516, 0.44", "-11.4475, 98.5229, -0.468084, 0.44", "-11.2344, 99.5702, -0.480626, 0.29", "-11.1291, 100.016, -0.483573, 0.59", "-10.918, 100.772, -0.486231, 0.44", "-10.5721, 101.96, -0.486199, 0.29", "-10.2685, 103.062, -0.482233, 1.18", "-10.1156, 103.656, -0.477638, 1.18", "-9.89256, 104.546, -0.472662, 0.52", "-9.68021, 105.401, -0.46801, 0.29", "-9.43089, 106.376, -0.436149, 0.29", "-9.22035, 107.26, -0.361342, 0.29", "-9.10056, 107.839, -0.287024, 0.29", "-8.89785, 108.992, -0.101151, 0.81", "-8.73697, 110.003, 0.086562, 0.44", "-8.56631, 110.971, 0.260073, 0.22", "-8.35284, 111.948, 0.423136, 0.44", "-8.26308, 112.323, 0.489003, 0.44", "-8.07617, 113.126, 0.634055, 0.29", "-7.92293, 113.852, 0.769985, 0.29", "-7.71017, 114.843, 0.935102, 0.29", "-7.56965, 115.476, 1.01863, 0.29", "-7.38316, 116.291, 1.11684, 0.66", "-7.23579, 116.953, 1.20293, 0.66", "-7.0549, 117.79, 1.29119, 0.74", "-6.89497, 118.701, 1.39154, 0.37", "-6.79155, 119.415, 1.47322, 0.37", "-6.65252, 120.413, 1.55826, 0.52", "-6.54406, 121.166, 1.59454, 0.59", "-6.37666, 122.311, 1.63438, 0.44", "-6.25528, 123.118, 1.65491, 0.29", "-6.16343, 123.685, 1.67186, 0.29", "-5.96259, 124.936, 1.72392, 1.11", "-5.84965, 125.652, 1.76186, 1.25", "-5.77025, 126.164, 1.79443, 1.25", "-5.58685, 127.238, 1.86339, 0.66", "-5.45569, 127.878, 1.88583, 0.29", "-5.22098, 128.875, 1.90904, 0.29", "-4.98709, 129.764, 1.92171, 0.29", "-4.75331, 130.569, 1.92699, 0.29", "-4.377, 131.77, 1.92424, 0.96", "-4.21222, 132.292, 1.91434, 1.47", "-4.0831, 132.738, 1.89891, 1.47", "-4.01593, 133.001, 1.88586, 1.47", "-3.84842, 133.771, 1.84827, 0.74", "-3.6766, 134.655, 1.81161, 0.29", "-3.52635, 135.561, 1.78076, 0.52", "-3.38665, 136.399, 1.75728, 0.74", "-3.18413, 137.463, 1.73539, 0.44", "-3.00106, 138.31, 1.72281, 0.29", "-2.85607, 138.904, 1.71622, 0.29", "-2.62454, 139.719, 1.7116, 0.66", "-2.44075, 140.301, 1.70762, 0.74", "-2.17128, 141.122, 1.7005, 0.74", "-1.87605, 142.042, 1.69894, 0.29", "-1.62803, 142.865, 1.70226, 0.29", "-1.16517, 144.522, 1.71616, 0.29", "-0.883514, 145.654, 1.7795, 0.52", "-0.732455, 146.338, 1.84243, 1.18", "-0.620047, 146.932, 1.91401, 1.4", "-0.468604, 147.899, 2.05267, 1.4", "-0.373714, 148.66, 2.17356, 0.66", "-0.173323, 150.441, 2.46199, 0.29", "-0.0334935, 151.563, 2.62159, 0.29", "0.0710374, 152.238, 2.68225, 0.37", "0.236331, 153.148, 2.71699, 0.37", "0.433069, 154.086, 2.71522, 0.37", "0.830444, 155.745, 2.64597, 0.37", "1.32163, 157.545, 2.48233, 0.37", "1.8429, 159.289, 2.30437, 1.33", "2.12158, 160.125, 2.20256, 1.99", "2.35744, 160.788, 2.1116, 1.99", "2.45818, 161.069, 2.06998, 1.99", "2.64629, 161.587, 1.99347, 1.99", "3.04287, 162.667, 1.85305, 0.59", "3.51224, 163.922, 1.73331, 0.29", "3.84964, 164.8, 1.69542, 0.59", "4.11519, 165.479, 1.6862, 0.59", "4.67869, 166.902, 1.70552, 0.37", "4.9825, 167.693, 1.73744, 0.37", "5.45039, 168.975, 1.82397, 0.37", "5.97411, 170.52, 1.96586, 0.74", "6.16237, 171.156, 2.02479, 0.74", "6.32403, 171.815, 2.09186, 0.88", "6.50554, 172.772, 2.19449, 0.44", "6.73965, 174.429, 2.33823, 0.29", "6.82007, 175.316, 2.36909, 0.52", "6.90632, 176.964, 2.33147, 1.25", "6.92557, 177.666, 2.29667, 1.62", "6.93289, 178.127, 2.25232, 1.62", "6.94036, 179.075, 2.12075, 0.96", "6.9564, 180.486, 1.86142, 0.29", "6.98605, 181.298, 1.69495, 0.29", "7.05037, 182.284, 1.49871, 0.29", "7.12374, 183.318, 1.32352, 0.74", "7.15205, 183.787, 1.26506, 0.96", "7.1804, 184.332, 1.2225, 0.96", "7.24456, 185.713, 1.14843, 0.52", "7.32924, 187.619, 1.03689, 0.37", "7.38355, 188.927, 0.964203, 0.29", "7.41911, 190.16, 0.889525, 0.66", "7.43612, 190.987, 0.823951, 0.66", "7.45108, 192.539, 0.672639, 0.29", "7.45747, 193.309, 0.591696, 0.29", "7.48242, 195.338, 0.373228, 0.29", "7.53859, 197.546, 0.142923, 1.99", "7.55321, 198.048, 0.097666, 2.28", "7.56823, 198.757, 0.0495281, 1.55", "7.57993, 199.535, 0.0326917, 0.88", "7.585, 200.805, 0.073287, 0.22", "7.5785, 201.4, 0.117825, 0.22", "7.55754, 202.486, 0.236673, 0.66", "7.54392, 203.173, 0.311894, 0.66", "7.52884, 204.336, 0.427811, 0.29", "7.51083, 206.197, 0.57707, 0.22", "7.52332, 207.139, 0.640849, 0.22", "7.55983, 208.137, 0.692789, 0.52", "7.66115, 209.385, 0.732327, 0.44", "7.79524, 210.471, 0.746218, 0.44", "7.99531, 211.725, 0.733359, 0.44", "8.38797, 213.667, 0.688144, 0.22", "8.71555, 215.113, 0.647121, 0.66", "9.01155, 216.282, 0.60869, 1.77", "9.18355, 216.9, 0.586732, 1.77", "9.35312, 217.454, 0.566642, 1.77", "9.63716, 218.265, 0.538366, 0.88", "9.98203, 219.167, 0.540775, 0.29", "10.2247, 219.779, 0.564336, 0.52", "10.839, 221.362, 0.660526, 0.22", "11.1908, 222.265, 0.7109, 0.52", "11.5903, 223.281, 0.755099, 0.52", "12.4543, 225.516, 0.82542, 0.22", "13.108, 227.226, 0.854062, 0.37", "13.5308, 228.351, 0.868691, 0.37", "13.9869, 229.604, 0.875146, 1.92", "14.187, 230.18, 0.869364, 2.21", "14.3773, 230.777, 0.842539, 2.21", "14.5872, 231.48, 0.731219, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-10.0043, 50.512, 1.92991, 0.66", "-9.4722, 52.4357, 2.27627, 0.66", "-9.14535, 53.6072, 2.47814, 0.81", "-8.90949, 54.4785, 2.65038, 0.37", "-8.64497, 55.5279, 2.86212, 0.29", "-8.19346, 57.2874, 3.20612, 0.29", "-7.9045, 58.3173, 3.40879, 0.29", "-7.57122, 59.3077, 3.58253, 0.29", "-7.05028, 60.613, 3.83639, 0.29", "-6.5842, 61.6837, 4.05315, 0.29", "-6.1196, 62.7501, 4.26848, 0.74", "-5.79738, 63.4666, 4.42194, 0.74", "-5.18524, 64.6801, 4.69008, 0.29", "-4.82253, 65.3767, 4.85244, 0.37", "-3.99001, 66.9981, 5.21603, 0.37", "-3.55055, 67.915, 5.42517, 0.37", "-3.10152, 68.9981, 5.6657, 0.37", "-2.92126, 69.4973, 5.77368, 0.37", "-2.63593, 70.4081, 5.9717, 0.22", "-2.38145, 71.2924, 6.16222, 0.22", "-2.15648, 71.9902, 6.30725, 0.66", "-1.90673, 72.8306, 6.44329, 0.96", "0.856985, 82.8809, 7.30592, 0.96", "5.64738, 91.6608, 9.97675, 0.96", "9.33657, 100.576, 13.7584, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "30.2803, 10.8236, 7.24461, 0.66", "31.097, 9.1154, 7.18025, 0.66", "31.3274, 8.57278, 7.12696, 0.66", "31.7068, 7.73781, 7.06926, 0.88", "32.394, 6.39075, 7.0269, 0.88", "32.8891, 5.53248, 7.03442, 0.88", "33.3678, 4.81966, 7.06557, 1.03", "33.9312, 4.0486, 7.10982, 1.03", "34.7526, 3.44766, 7.3024, 0.88", "35.4128, 3.30093, 7.50901, 0.88", "35.9818, 3.24704, 7.70921, 0.88", "36.8825, 3.13064, 8.05293, 0.81", "37.9172, 2.85077, 8.47485, 0.81", "38.5734, 2.53547, 8.72531, 0.81", "39.4049, 1.92248, 8.97345, 0.74", "40.2902, 1.12713, 9.19108, 0.88", "41.0758, 0.328885, 9.33993, 0.88", "41.9172, -0.638849, 9.45407, 0.52", "42.3403, -1.13753, 9.47385, 0.52", "42.8627, -1.66173, 9.43785, 0.52", "43.54, -2.1938, 9.34754, 0.52", "44.3217, -2.64557, 9.21186, 0.74", "45.1198, -3.01383, 9.0538, 0.74", "46.1355, -3.40762, 8.83954, 0.74", "47.4793, -3.87031, 8.56246, 0.74", "48.4121, -4.16319, 8.36412, 0.74", "49.1516, -4.35571, 8.21264, 0.74", "49.9567, -4.47939, 8.05992, 0.74", "50.4286, -4.5138, 7.9908, 0.88", "51.7623, -4.50284, 7.82437, 0.88", "52.8994, -4.4544, 7.70544, 0.88", "54.3067, -4.40726, 7.57417, 0.66", "55.3351, -4.39493, 7.5018, 0.66", "57.9792, -4.3898, 7.38126, 0.59", "58.8956, -4.39657, 7.35576, 0.52", "60.2825, -4.37493, 7.34074, 0.52", "61.1179, -4.31455, 7.34675, 0.52", "62.0271, -4.1597, 7.35931, 0.52", "63.1143, -3.90042, 7.3817, 0.52", "63.841, -3.70927, 7.40634, 0.52", "65.0267, -3.4515, 7.45839, 0.52", "66.3128, -3.17195, 7.524, 0.52", "67.5179, -2.94993, 7.59295, 0.52", "68.6386, -2.83984, 7.66554, 0.52", "69.9139, -2.87672, 7.76296, 0.52", "70.7887, -3.05339, 7.85092, 0.52", "71.6002, -3.32501, 7.9848, 0.52", "72.1446, -3.52704, 8.10815, 0.52", "72.8309, -3.765, 8.29469, 0.52", "74.2208, -4.15716, 8.75442, 0.29", "76.7053, -4.65169, 9.69071, 0.29", "78.9594, -4.9342, 10.6055, 0.29", "80.1096, -4.9824, 11.1099, 0.29", "80.9356, -4.97497, 11.4875, 0.44", "81.8106, -4.89272, 11.9206, 0.59", "82.3598, -4.76261, 12.2506, 0.59", "83.2531, -4.20487, 12.9439, 0.59", "83.727, -3.67615, 13.3463, 0.59", "93.0589, -6.86815, 15.2632, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "30.2803, 10.8236, 7.24461, 1.11", "31.8205, 10.4067, 7.23929, 1.11", "32.7705, 10.0212, 7.22058, 1.11", "33.8643, 9.63044, 7.10194, 1.25", "34.716, 9.41528, 6.98013, 1.47", "35.8802, 9.25694, 6.79801, 1.4", "36.9199, 9.21952, 6.62767, 1.4", "38.0956, 9.23417, 6.38257, 1.18", "39.6965, 9.56554, 5.99859, 1.18", "40.7982, 10.0412, 5.70114, 1.18", "41.7406, 10.5394, 5.42944, 1.18", "42.3006, 10.8412, 5.26737, 0.88", "42.8612, 11.082, 5.11256, 0.88", "43.7432, 11.2584, 4.88818, 0.88", "45.0926, 11.1824, 4.58397, 1.11", "46.1175, 10.9666, 4.35055, 1.11", "47.1549, 10.6657, 4.1086, 1.11", "48.3273, 10.2582, 3.83609, 1.25", "49.5224, 9.77936, 3.56263, 1.33", "50.0746, 9.53246, 3.44168, 1.47", "50.9856, 9.13702, 3.26379, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-158.697, -121.154, 0.253671, 0.59", "-158.657, -123.098, -0.253991, 0.59", "-158.628, -123.924, -0.436708, 0.59", "-158.581, -124.649, -0.576904, 0.52", "-158.516, -125.489, -0.717137, 0.52", "-158.465, -126.4, -0.854412, 0.88", "-158.415, -127.411, -0.996325, 1.03", "-158.389, -128.023, -1.03767, 1.03", "-158.313, -129.103, -1.09636, 1.03", "-158.221, -130.033, -1.13748, 0.29", "-158.16, -130.696, -1.16263, 0.29", "-158.125, -131.244, -1.17954, 0.29", "-158.108, -132.281, -1.21259, 0.59", "-158.134, -133.135, -1.20157, 0.74", "-158.184, -133.746, -1.16973, 0.88", "-158.253, -134.339, -1.12592, 0.88", "-158.329, -134.891, -1.06923, 0.88", "-158.471, -135.628, -0.977163, 0.81", "-158.834, -137.219, -0.767209, 0.37", "-159.029, -138.079, -0.646982, 1.03", "-159.223, -138.937, -0.494241, 1.33", "-159.406, -139.723, -0.333407, 1.33", "-159.661, -140.73, -0.109504, 1.03", "-159.892, -141.575, 0.084176, 0.74", "-160.108, -142.305, 0.231636, 0.37", "-160.401, -143.272, 0.476635, 0.74", "-160.58, -143.83, 0.632177, 0.74", "-160.783, -144.508, 0.778435, 0.59", "-160.915, -145.023, 0.855208, 0.37", "-161.081, -145.765, 0.8985, 0.37", "-161.35, -146.972, 0.83015, 0.66", "-161.558, -147.818, 0.693963, 0.74", "-161.955, -149.238, 0.378148, 0.52", "-162.128, -149.828, 0.220267, 0.52", "-162.375, -150.525, 0.0176992, 1.33", "-162.699, -151.39, -0.255627, 1.55", "-163.13, -152.528, -0.592033, 1.99", "-163.405, -153.214, -0.749842, 2.21", "-163.778, -154.072, -0.893953, 1.99", "-164.253, -155.106, -1.06079, 1.11", "-164.76, -156.291, -1.26262, 0.37", "-165.138, -157.303, -1.43909, 1.11", "-165.311, -157.816, -1.53359, 1.25", "-165.529, -158.478, -1.65566, 1.25", "-166.023, -159.932, -1.95943, 0.29", "-166.343, -160.855, -2.17213, 0.29", "-166.671, -161.7, -2.3694, 0.44", "-167.027, -162.574, -2.57967, 0.59", "-167.455, -163.607, -2.81673, 0.88", "-167.816, -164.467, -2.99987, 0.96", "-168.211, -165.295, -3.15415, 0.66", "-168.748, -166.284, -3.29197, 0.37", "-169.159, -166.99, -3.37594, 0.29", "-169.612, -167.73, -3.42652, 0.29", "-170.003, -168.381, -3.44183, 0.29", "-170.545, -169.26, -3.42581, 0.29", "-171.361, -170.467, -3.39346, 0.74", "-171.996, -171.303, -3.32921, 1.03", "-172.786, -172.277, -3.21367, 2.28", "-173.41, -172.986, -3.10368, 2.8", "-174.01, -173.656, -2.99625, 3.09", "-174.976, -174.773, -2.83137, 1.84", "-176.097, -176.051, -2.64839, 0.29", "-176.644, -176.712, -2.55625, 0.29", "-177.359, -177.655, -2.44914, 0.29", "-178.075, -178.691, -2.3383, 0.29", "-178.557, -179.552, -2.25352, 0.88", "-178.924, -180.327, -2.18766, 1.11", "-179.211, -180.992, -2.15678, 0.81", "-179.441, -181.568, -2.13052, 0.52", "-179.787, -182.537, -2.08706, 0.29", "-180.171, -183.686, -2.02868, 0.29", "-180.476, -184.671, -1.97827, 0.29", "-180.648, -185.202, -1.95145, 0.29", "-180.973, -186.261, -1.89747, 0.81", "-181.246, -187.245, -1.84748, 1.11", "-181.438, -188.018, -1.80922, 0.88", "-181.707, -189.114, -1.75765, 0.29", "-182.028, -190.452, -1.69253, 0.29", "-182.35, -191.643, -1.671, 0.29", "-182.476, -192.077, -1.67299, 0.29", "-182.777, -193.111, -1.70139, 0.74", "-182.995, -193.85, -1.73807, 0.74", "-183.292, -194.891, -1.80581, 0.44", "-183.624, -196.101, -1.90075, 0.29", "-183.796, -196.701, -1.95307, 0.29", "-184.022, -197.539, -1.9971, 0.29", "-184.245, -198.552, -2.00907, 0.29", "-184.35, -199.138, -1.98403, 0.74", "-184.438, -199.683, -1.93146, 0.74", "-184.589, -200.669, -1.77663, 0.44", "-184.777, -201.785, -1.58104, 0.29", "-184.95, -202.751, -1.37813, 0.74", "-185.079, -203.429, -1.22777, 1.11", "-185.206, -204.0, -1.10238, 1.69", "-185.319, -204.479, -1.00257, 1.92", "-185.485, -205.171, -0.874581, 1.92", "-185.723, -206.213, -0.725582, 1.62", "-186.011, -207.474, -0.569625, 0.29", "-186.234, -208.483, -0.464054, 0.22", "-186.436, -209.315, -0.386557, 0.22", "-186.725, -210.439, -0.302133, 0.59", "-186.983, -211.37, -0.249841, 0.74", "-187.184, -212.018, -0.21835, 0.74", "-187.466, -212.851, -0.168171, 0.44", "-187.74, -213.556, -0.120033, 0.29", "-188.067, -214.26, -0.0423369, 0.29", "-188.848, -215.671, 0.185586, 0.44", "-189.31, -216.395, 0.308945, 0.59", "-189.778, -217.066, 0.422174, 0.59", "-190.335, -217.831, 0.526518, 0.52", "-191.193, -218.973, 0.645393, 1.33", "-191.906, -219.893, 0.708517, 2.06", "-192.576, -220.779, 0.732121, 2.21", "-193.064, -221.487, 0.71702, 2.21", "-193.77, -222.641, 0.642381, 0.81", "-194.199, -223.474, 0.54468, 0.29", "-194.524, -224.23, 0.41693, 0.44", "-194.724, -224.805, 0.312121, 0.44", "-194.974, -225.652, 0.165066, 0.29", "-195.161, -226.286, 0.0408418, 0.29", "-195.398, -227.072, -0.112731, 0.29", "-195.576, -227.584, -0.209444, 0.74", "-195.765, -228.05, -0.278136, 0.88", "-196.014, -228.599, -0.334733, 0.88", "-196.42, -229.494, -0.377178, 0.29", "-196.823, -230.394, -0.354768, 0.29", "-197.196, -231.312, -0.256353, 0.29", "-197.6, -232.425, -0.087358, 0.52", "-197.779, -232.949, 0.01068, 0.52", "-198.078, -233.911, 0.228727, 0.29", "-198.246, -234.579, 0.418366, 0.29", "-198.509, -235.94, 0.861831, 0.59", "-198.632, -236.715, 1.14682, 0.29", "-198.717, -237.225, 1.36081, 0.29", "-198.868, -237.929, 1.69515, 0.74", "-199.172, -238.851, 2.19395, 0.88", "-199.501, -239.536, 2.59587, 0.29", "-199.899, -240.157, 2.99258, 0.29", "-200.48, -240.925, 3.47539, 0.96", "-200.968, -241.528, 3.81177, 1.11", "-201.598, -242.282, 4.13785, 1.11", "-202.277, -243.139, 4.41131, 0.29", "-202.717, -243.778, 4.56406, 0.22", "-203.067, -244.414, 4.65917, 0.44", "-203.4, -245.166, 4.71608, 0.44", "-203.851, -246.428, 4.72152, 0.22", "-204.101, -247.214, 4.6801, 0.22", "-204.27, -247.798, 4.61674, 0.22", "-204.463, -248.458, 4.52245, 0.59", "-204.601, -248.932, 4.45086, 0.74", "-205.022, -250.327, 4.20434, 0.29", "-205.25, -251.067, 4.06051, 0.29", "-205.542, -251.987, 3.87309, 0.44", "-205.808, -252.867, 3.69286, 0.44", "-206.14, -254.038, 3.47069, 0.52", "-206.329, -254.707, 3.35593, 0.96", "-206.523, -255.376, 3.26107, 1.4", "-206.741, -256.052, 3.1665, 1.4", "-207.308, -257.62, 3.03719, 0.29", "-207.905, -259.146, 2.99853, 0.22", "-208.217, -259.892, 3.02868, 0.37", "-208.732, -261.078, 3.15253, 0.37", "-209.264, -262.242, 3.33561, 0.29", "-210.002, -263.76, 3.65117, 0.74", "-210.415, -264.534, 3.85215, 1.11", "-210.894, -265.349, 4.08221, 1.25", "-211.404, -266.148, 4.30319, 1.11", "-211.9, -266.878, 4.49047, 0.59", "-212.557, -267.814, 4.68599, 0.29", "-212.954, -268.374, 4.73911, 0.29", "-213.7, -269.442, 4.79164, 0.22", "-214.194, -270.171, 4.80535, 0.22", "-214.469, -270.587, 4.80886, 0.66", "-214.894, -271.24, 4.81348, 0.66", "-215.752, -272.604, 4.84945, 0.29", "-216.273, -273.425, 4.88514, 0.29", "-216.822, -274.244, 4.93212, 0.29", "-217.399, -275.05, 4.98155, 0.66", "-217.865, -275.663, 5.0183, 0.66", "-218.615, -276.604, 5.07064, 0.22", "-219.134, -277.233, 5.09938, 0.22", "-220.006, -278.287, 5.13307, 0.22", "-221.532, -280.151, 5.14129, 0.22", "-221.989, -280.753, 5.11801, 0.22", "-222.463, -281.438, 5.06438, 1.11", "-222.717, -281.864, 5.00832, 1.11", "-222.835, -282.112, 4.96925, 1.11", "-223.068, -282.764, 4.85539, 0.66", "-223.35, -283.847, 4.64464, 0.22", "-223.482, -284.514, 4.51744, 0.52", "-223.685, -286.051, 4.23444, 0.22", "-223.841, -287.301, 4.01406, 0.22", "-223.908, -287.836, 3.92499, 0.59", "-223.993, -288.517, 3.82167, 0.59", "-224.112, -289.502, 3.67048, 0.52", "-224.274, -290.955, 3.44116, 0.22", "-224.353, -291.807, 3.30299, 0.22", "-224.383, -292.315, 3.22, 0.22", "-224.406, -292.893, 3.12417, 0.66", "-224.402, -293.731, 3.03274, 0.81", "-224.324, -294.66, 3.00122, 0.59", "-224.043, -296.007, 3.10528, 1.25", "-223.791, -296.727, 3.22715, 1.69", "-223.607, -297.086, 3.3204, 1.92", "-222.784, -298.249, 3.73431, 1.18", "-221.95, -299.137, 4.16086, 0.22", "-220.941, -299.961, 4.64606, 0.22", "-220.244, -300.422, 4.95984, 0.22", "-219.361, -300.943, 5.3132, 0.22", "-218.72, -301.302, 5.53407, 0.66", "-218.242, -301.567, 5.65885, 0.66", "-216.947, -302.286, 5.93419, 0.22", "-216.454, -302.568, 6.01892, 0.37", "-215.956, -302.912, 6.1004, 0.37", "-215.558, -303.248, 6.17294, 0.22", "-214.957, -303.831, 6.28682, 0.22", "-218.882, -313.485, 6.52288, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-158.697, -121.154, 0.253671, 0.37", "-160.071, -120.803, 0.419097, 0.37", "-160.65, -120.685, 0.464892, 0.37", "-161.891, -120.49, 0.483336, 0.29", "-162.837, -120.381, 0.465925, 0.44", "-163.751, -120.309, 0.429063, 0.66", "-164.278, -120.285, 0.393474, 0.81", "-164.735, -120.286, 0.33765, 0.81", "-166.154, -120.342, 0.103091, 0.22", "-166.6, -120.374, 0.00653812, 0.22", "-167.4, -120.436, -0.168445, 0.74", "-168.056, -120.485, -0.317614, 0.88", "-169.149, -120.576, -0.596977, 0.22", "-169.597, -120.609, -0.751302, 0.22", "-170.013, -120.646, -0.929561, 0.22", "-170.485, -120.7, -1.16075, 0.74", "-170.984, -120.789, -1.44102, 0.88", "-171.529, -120.959, -1.81811, 0.88", "-172.723, -121.532, -2.82263, 0.22", "-173.145, -121.779, -3.2154, 0.22", "-173.49, -122.001, -3.56565, 0.74", "-173.919, -122.321, -4.08017, 0.74", "-174.814, -122.996, -5.07052, 0.29", "-175.096, -123.205, -5.35557, 0.29", "-175.557, -123.543, -5.78092, 0.88", "-176.112, -123.906, -6.25825, 1.03", "-177.793, -124.854, -7.61296, 0.22", "-179.394, -125.671, -8.81085, 0.22", "-180.046, -125.964, -9.24332, 0.22", "-180.433, -126.128, -9.48563, 1.11", "-180.901, -126.325, -9.75804, 1.11", "-181.406, -126.524, -9.99873, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-23.5843, -180.574, -2.3746, 0.81", "-22.2867, -181.317, -2.34265, 0.81", "-21.2337, -181.852, -2.33383, 0.52", "-19.7289, -182.557, -2.34142, 0.52", "-19.0711, -182.874, -2.35047, 0.37", "-17.7568, -183.529, -2.37483, 0.37", "-17.235, -183.798, -2.38549, 0.66", "-16.7681, -184.039, -2.41078, 0.88", "-16.3805, -184.244, -2.42803, 0.88", "-15.3921, -184.875, -2.47198, 0.59", "-14.5181, -185.554, -2.50926, 0.66", "-13.6505, -186.33, -2.54122, 0.74", "-13.1199, -186.802, -2.55928, 0.74", "-12.7074, -187.14, -2.5723, 0.52", "-12.0328, -187.632, -2.59584, 0.29", "-11.3105, -188.052, -2.61038, 0.96", "-10.6534, -188.375, -2.61272, 1.03", "-10.2205, -188.57, -2.60396, 1.03", "-9.23796, -188.991, -2.56004, 0.66", "-8.82514, -189.173, -2.54326, 0.52", "-7.87697, -189.606, -2.50696, 0.59", "-6.93874, -190.094, -2.47271, 0.59", "-6.077, -190.603, -2.44726, 0.52", "-5.36485, -191.079, -2.43354, 0.52", "-4.61946, -191.627, -2.4278, 0.96", "-4.1538, -191.976, -2.43783, 1.18", "-3.38009, -192.542, -2.4781, 0.66", "-2.46538, -193.156, -2.53408, 0.37", "-1.8918, -193.504, -2.57336, 0.37", "-0.701662, -194.151, -2.66161, 0.88", "0.350707, -194.7, -2.71155, 1.03", "1.15012, -195.117, -2.7367, 0.81", "1.886, -195.502, -2.74217, 0.52", "2.74851, -195.957, -2.72661, 0.52", "3.42155, -196.328, -2.69414, 0.52", "4.34606, -196.915, -2.62273, 0.52", "5.12195, -197.469, -2.54218, 1.33", "5.60521, -197.853, -2.48585, 1.69", "6.15762, -198.35, -2.41519, 1.69", "7.07911, -199.238, -2.36737, 1.11", "8.08192, -200.222, -2.38861, 0.44", "8.73519, -200.835, -2.46427, 0.44", "9.26642, -201.311, -2.56069, 0.29", "9.87567, -201.833, -2.72119, 0.29", "11.2644, -202.954, -3.17205, 1.03", "11.6711, -203.262, -3.32794, 1.4", "12.1118, -203.599, -3.52222, 1.4", "13.5184, -204.778, -4.20996, 0.22", "14.2627, -205.437, -4.58032, 0.52", "14.6282, -205.776, -4.75627, 0.52", "15.2524, -206.417, -5.03756, 0.29", "16.1249, -207.344, -5.43755, 0.29", "16.6585, -207.92, -5.67162, 0.29", "17.197, -208.533, -5.91273, 0.66", "17.5916, -208.992, -6.06431, 0.81", "17.8777, -209.328, -6.16509, 0.81", "18.357, -209.851, -6.30365, 0.59", "18.9025, -210.385, -6.44536, 0.29", "19.42, -210.916, -6.55221, 0.29", "19.9952, -211.608, -6.63901, 0.66", "20.423, -212.219, -6.65876, 0.66", "20.9701, -213.159, -6.61128, 0.29", "21.2629, -213.766, -6.53514, 0.29", "21.7292, -214.877, -6.33526, 0.66", "22.0358, -215.665, -6.14875, 0.66", "22.3942, -216.696, -5.85761, 0.44", "22.7112, -217.747, -5.52916, 1.47", "22.9309, -218.594, -5.25132, 1.84", "23.0475, -219.092, -5.08935, 1.84", "23.1172, -219.401, -5.00281, 1.84", "23.3049, -220.19, -4.79486, 1.33", "23.5586, -221.141, -4.56254, 0.52", "23.702, -221.642, -4.44545, 0.52", "23.9006, -222.323, -4.28733, 0.52", "24.2177, -223.41, -4.02567, 0.29", "24.3868, -223.972, -3.88355, 0.29", "24.6439, -224.773, -3.66298, 0.29", "24.8979, -225.51, -3.44496, 0.44", "25.2914, -226.502, -3.14277, 0.44", "25.6734, -227.309, -2.90555, 0.44", "25.9816, -227.873, -2.75691, 1.33", "26.3508, -228.519, -2.62366, 1.84", "26.7218, -229.091, -2.52638, 1.84", "27.3614, -229.978, -2.39424, 0.96", "28.2164, -231.06, -2.25612, 0.22", "28.9546, -231.935, -2.16088, 0.22", "30.0122, -233.113, -2.05542, 0.22", "30.6568, -233.774, -2.00245, 0.22", "31.3966, -234.452, -1.95181, 0.22", "32.0565, -234.997, -1.92333, 0.44", "32.851, -235.593, -1.91485, 0.88", "33.622, -236.143, -1.93842, 1.03", "34.1283, -236.5, -1.96533, 1.03", "34.7181, -236.946, -2.0042, 0.88", "35.3092, -237.367, -2.0502, 0.29", "35.7356, -237.651, -2.07174, 0.29", "36.3883, -238.048, -2.068, 0.29", "37.2094, -238.507, -2.02336, 0.37", "37.8272, -238.823, -1.95568, 0.37", "38.3688, -239.072, -1.87226, 0.29", "39.4077, -239.489, -1.67228, 0.29", "40.2228, -239.79, -1.51237, 0.81", "40.6808, -239.958, -1.42827, 0.81", "41.5593, -240.334, -1.26569, 0.59", "42.1941, -240.686, -1.13308, 0.29", "42.733, -241.045, -1.00615, 0.29", "43.2925, -241.47, -0.858518, 0.66", "43.6999, -241.803, -0.731061, 0.66", "44.8975, -242.822, -0.292858, 0.29", "45.644, -243.463, 0.0346096, 0.29", "46.4004, -244.125, 0.440242, 0.29", "46.9604, -244.634, 0.795506, 0.29", "47.5034, -245.129, 1.19394, 0.88", "47.7471, -245.35, 1.37866, 0.88", "48.3891, -245.941, 1.90229, 0.66", "49.2583, -246.74, 2.66807, 0.29", "49.6986, -247.158, 3.08818, 0.29", "50.2163, -247.67, 3.58959, 0.66", "50.6556, -248.12, 3.98433, 0.44", "57.7751, -255.044, 6.4006, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-23.5843, -180.574, -2.3746, 2.14", "-24.1516, -182.237, -2.73014, 2.14", "-24.6192, -183.754, -3.01316, 1.33", "-25.042, -185.247, -3.25339, 1.03", "-25.3191, -186.381, -3.40107, 1.03", "-25.493, -187.154, -3.49114, 1.25", "-25.6566, -187.91, -3.57238, 1.25", "-25.9002, -189.339, -3.68356, 0.96", "-26.0794, -190.497, -3.73856, 0.96", "-26.4105, -192.525, -3.81946, 0.88", "-26.6148, -193.72, -3.84372, 0.88", "-26.7855, -194.852, -3.84417, 0.96", "-26.9485, -196.144, -3.81896, 0.96", "-27.071, -197.248, -3.7701, 0.74", "-27.1767, -198.311, -3.70148, 0.52", "-27.2581, -199.193, -3.6248, 0.52", "-27.353, -200.277, -3.51142, 0.37", "-27.4255, -201.14, -3.41743, 0.74", "-27.5216, -202.077, -3.31647, 0.74", "-27.6428, -203.132, -3.19252, 1.03", "-27.7314, -203.803, -3.11175, 1.18", "-27.8655, -204.73, -3.00931, 1.33", "-27.9827, -205.429, -2.93256, 1.33", "-28.1038, -206.173, -2.81434, 1.18", "-28.2956, -207.255, -2.53526, 0.96", "-28.456, -208.08, -2.23782, 0.81", "-28.6185, -208.912, -1.87569, 0.81", "-28.7754, -209.824, -1.42843, 0.81", "-28.9013, -210.622, -1.02363, 0.59", "-29.0858, -211.942, -0.378118, 0.66", "-29.1796, -212.506, -0.133666, 0.66", "-29.3953, -213.517, 0.200996, 1.18", "-29.713, -214.559, 0.368933, 1.47", "-30.08, -215.46, 0.359969, 1.55", "-30.4297, -216.114, 0.256405, 1.55", "-31.0151, -216.994, 0.0167357, 1.4", "-31.8469, -218.009, -0.316731, 1.18", "-32.8543, -219.079, -0.703081, 0.66", "-33.7033, -219.915, -1.00541, 0.74", "-34.8191, -220.963, -1.36697, 1.18", "-35.7554, -221.804, -1.62417, 1.25", "-36.7538, -222.666, -1.83691, 1.25", "-37.617, -223.378, -1.95538, 1.25", "-38.5063, -224.038, -2.02911, 1.33", "-39.0263, -224.369, -2.0433, 1.33", "-39.8814, -224.815, -1.99778, 1.03", "-40.6311, -225.128, -1.9025, 0.74", "-41.2351, -225.339, -1.80075, 0.59", "-42.035, -225.617, -1.64312, 0.59", "-42.8369, -225.939, -1.4698, 0.88", "-43.6424, -226.382, -1.26198, 1.18", "-44.403, -226.928, -1.01337, 1.18", "-45.0793, -227.515, -0.751742, 1.18", "-45.7158, -228.17, -0.490668, 1.18", "-46.2054, -228.744, -0.289941, 1.18", "-46.8838, -229.627, -0.0163905, 0.81", "-47.2897, -230.213, 0.140089, 0.59", "-47.6627, -230.827, 0.274756, 0.52", "-48.3743, -232.138, 0.504785, 0.96", "-48.7828, -233.019, 0.618778, 1.18", "-49.121, -233.841, 0.691138, 1.18", "-49.5494, -234.964, 0.742449, 0.88", "-49.9606, -236.096, 0.763022, 0.59", "-50.2984, -237.116, 0.773796, 0.59", "-50.6684, -238.305, 0.786525, 0.59", "-51.0133, -239.414, 0.799961, 0.74", "-51.4154, -240.655, 0.816053, 1.33", "-51.777, -241.732, 0.830347, 1.69", "-52.2402, -243.062, 0.847317, 1.77", "-52.5056, -243.844, 0.856118, 1.77", "-52.83, -244.831, 0.844364, 1.77", "-53.0958, -245.781, 0.811448, 1.47", "-53.342, -246.837, 0.749764, 1.03", "-53.5619, -247.877, 0.666215, 1.03", "-53.8119, -249.093, 0.54114, 1.03", "-54.056, -250.354, 0.410305, 1.11", "-54.2709, -251.542, 0.297873, 1.33", "-54.4313, -252.625, 0.217383, 1.03", "-54.5853, -254.094, 0.143686, 0.81", "-54.6582, -255.123, 0.117285, 1.03", "-54.7104, -256.418, 0.116244, 0.81", "-54.7236, -257.124, 0.132914, 0.81", "-54.7235, -259.035, 0.192624, 0.74", "-54.6898, -260.957, 0.265814, 0.74", "-54.6319, -262.502, 0.330741, 0.74", "-54.5511, -264.759, 0.425953, 0.74", "-54.5286, -266.316, 0.478342, 0.74", "-54.5521, -267.326, 0.507, 1.18", "-54.6517, -268.361, 0.536761, 1.4", "-54.8692, -269.43, 0.572497, 1.4", "-55.2104, -270.439, 0.613516, 1.47", "-55.7882, -271.547, 0.659304, 1.55", "-56.2483, -272.205, 0.680145, 1.55", "-57.1228, -273.225, 0.711034, 1.11", "-58.2853, -274.364, 0.750738, 0.88", "-59.1413, -275.099, 0.803113, 0.88", "-60.1297, -275.849, 0.885654, 1.03", "-60.815, -276.336, 0.947428, 1.03", "-61.3598, -276.732, 1.00365, 1.03", "-62.1639, -277.4, 1.12667, 0.81", "-63.0956, -278.352, 1.30861, 0.59", "-64.1193, -279.669, 1.54501, 0.59", "-64.7665, -280.698, 1.71966, 0.88", "-65.2539, -281.655, 1.87719, 0.88", "-65.8792, -283.162, 2.10202, 0.74", "-66.2255, -284.203, 2.24041, 0.96", "-66.5017, -285.231, 2.33952, 1.11", "-66.6636, -285.971, 2.3999, 1.11", "-66.8188, -286.75, 2.43997, 0.88", "-67.0385, -287.822, 2.43598, 0.66", "-67.206, -288.576, 2.40815, 0.66", "-67.4855, -289.843, 2.36454, 0.96", "-67.6906, -290.811, 2.32861, 0.96", "-67.941, -292.052, 2.2784, 0.66", "-68.169, -293.183, 2.23077, 0.74", "-68.5265, -294.999, 2.17484, 0.96", "-68.7288, -296.047, 2.17202, 0.96", "-68.9345, -297.14, 2.17561, 0.96", "-69.1789, -298.393, 2.15955, 0.66", "-69.5414, -300.242, 2.10268, 0.66", "-69.8419, -302.011, 2.00409, 0.66", "-69.9961, -303.069, 1.91654, 0.81", "-70.2256, -304.921, 1.72912, 0.74", "-70.3732, -306.39, 1.55313, 0.74", "-70.4831, -307.94, 1.34599, 0.96", "-70.5435, -309.243, 1.15938, 0.96", "-70.5822, -310.107, 1.04312, 1.62", "-70.6288, -310.582, 0.996093, 1.62", "-70.7311, -311.203, 0.980583, 1.62", "-70.9231, -312.112, 1.00098, 1.4", "-71.1695, -313.059, 1.04894, 0.88", "-71.5052, -314.271, 1.13433, 0.59", "-71.9547, -315.918, 1.27009, 0.81", "-72.3188, -317.243, 1.39009, 0.96", "-72.5988, -318.314, 1.48144, 0.96", "-72.9111, -319.607, 1.57302, 1.11", "-73.1145, -320.454, 1.62232, 1.11", "-73.2837, -321.108, 1.65001, 1.33", "-73.4599, -321.745, 1.67017, 1.33", "-73.815, -322.778, 1.71348, 1.03", "-74.2482, -323.794, 1.7694, 0.66", "-74.6112, -324.552, 1.81874, 0.37", "-74.8861, -325.104, 1.85681, 0.37", "-75.2221, -325.828, 1.91059, 0.37", "-75.5253, -326.516, 1.96551, 1.03", "-75.8538, -327.282, 2.02712, 1.25", "-76.0688, -327.853, 2.07568, 1.25", "-76.4127, -328.92, 2.16339, 0.96", "-76.7939, -330.265, 2.26509, 0.52", "-77.1194, -331.476, 2.34572, 0.52", "-77.5418, -333.165, 2.44243, 0.52", "-77.8429, -334.541, 2.51458, 0.81", "-78.0546, -335.546, 2.57043, 1.03", "-78.2537, -336.453, 2.6228, 1.03", "-78.4141, -337.153, 2.66258, 0.81", "-78.6245, -337.996, 2.70596, 0.81", "-78.9602, -339.177, 2.75436, 0.59", "-79.389, -340.415, 2.78826, 0.44", "-80.0608, -341.967, 2.83027, 0.88", "-80.408, -342.63, 2.8488, 0.88", "-80.932, -343.485, 2.87265, 0.59", "-81.49, -344.211, 2.896, 0.59", "-82.3821, -345.113, 2.91524, 0.59", "-83.3482, -345.9, 2.91667, 0.81", "-83.9015, -346.272, 2.91394, 0.81", "-84.3488, -346.539, 2.90969, 0.81", "-85.3603, -347.05, 2.89074, 0.59", "-86.4726, -347.501, 2.86217, 0.88", "-87.5787, -347.857, 2.82348, 1.03", "-88.6351, -348.14, 2.77707, 1.03", "-89.5088, -348.325, 2.74095, 0.59", "-90.2972, -348.467, 2.71791, 0.59", "-90.9672, -348.589, 2.70744, 0.59", "-91.5435, -348.691, 2.71641, 0.59", "-92.1572, -348.828, 2.73446, 0.59", "-92.9603, -349.048, 2.77184, 0.44", "-94.1629, -349.465, 2.84605, 0.81", "-95.1663, -349.889, 2.92694, 1.11", "-96.2604, -350.439, 3.03985, 0.81", "-97.355, -351.084, 3.17087, 0.66", "-97.856, -351.422, 3.23571, 0.66", "-98.4583, -351.886, 3.31834, 0.52", "-99.1464, -352.471, 3.42281, 0.52", "-99.842, -353.137, 3.53641, 0.52", "-100.54, -353.856, 3.65689, 0.52", "-100.961, -354.333, 3.73436, 1.11", "-101.893, -355.501, 3.9019, 1.4", "-102.396, -356.204, 3.99019, 1.84", "-102.948, -357.056, 4.07327, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.50565, -88.2693, -9.56394, 0.66", "-9.62538, -89.9981, -9.52564, 0.66", "-9.71471, -91.0631, -9.50998, 0.37", "-9.76348, -91.7753, -9.52172, 0.81", "-9.80686, -92.6962, -9.55069, 1.03", "-9.84384, -93.4968, -9.58178, 1.11", "-9.88565, -94.3512, -9.629, 0.88", "-9.92921, -95.3353, -9.71709, 0.59", "-9.94729, -96.4819, -9.84829, 0.29", "-9.93298, -97.314, -9.96013, 0.29", "-9.90771, -97.6959, -10.016, 0.29", "-9.78646, -98.558, -10.1603, 0.74", "-9.6051, -99.3621, -10.3066, 1.11", "-9.45746, -99.8704, -10.398, 1.11", "-9.21737, -100.619, -10.53, 1.11", "-8.92455, -101.488, -10.6471, 0.81", "-8.45264, -102.921, -10.7788, 0.44", "-8.0379, -104.283, -10.8474, 0.59", "-7.82394, -105.102, -10.8654, 0.88", "-7.64795, -105.962, -10.8591, 0.88", "-7.46669, -107.194, -10.8212, 0.81", "-7.3623, -108.4, -10.747, 0.44", "-7.33684, -109.351, -10.6562, 1.03", "-7.34512, -110.145, -10.5725, 0.74", "-7.37214, -111.141, -10.4779, 0.52", "-7.39923, -111.912, -10.4188, 0.88", "-7.42851, -112.62, -10.4088, 1.18", "-7.45268, -113.233, -10.4117, 1.18", "-7.48638, -113.936, -10.424, 0.88", "-7.5469, -115.157, -10.4598, 0.29", "-7.59688, -116.081, -10.4998, 0.29", "-7.67192, -117.403, -10.5863, 1.03", "-7.714, -118.281, -10.6567, 1.47", "-7.74136, -118.835, -10.7022, 1.47", "-7.76728, -119.444, -10.7522, 1.47", "-7.78623, -120.355, -10.8211, 1.25", "-7.79599, -121.469, -10.8901, 0.44", "-7.78749, -122.389, -10.9285, 0.44", "-7.76936, -123.288, -10.9694, 0.44", "-7.75366, -123.75, -10.9909, 0.59", "-7.7137, -124.835, -11.0421, 0.59", "-7.66839, -125.663, -11.0823, 0.37", "-7.62906, -126.354, -11.1154, 0.81", "-7.59525, -126.987, -11.1378, 1.03", "-7.57436, -127.45, -11.1474, 1.03", "-7.56314, -128.023, -11.1501, 0.59", "-7.54387, -128.958, -11.1391, 0.22", "-7.5135, -129.544, -11.125, 0.22", "-7.46049, -130.236, -11.1031, 0.22", "-7.39078, -130.982, -11.0758, 0.66", "-7.29334, -131.874, -11.0436, 0.88", "-7.1228, -133.176, -10.996, 0.88", "-6.91285, -134.69, -10.9422, 0.96", "-6.74842, -135.83, -10.9185, 1.18", "-6.62643, -136.754, -10.9196, 0.66", "-6.53227, -137.512, -10.9255, 0.52", "-6.3783, -138.958, -10.9548, 0.52", "-6.28026, -140.074, -10.9902, 0.81", "-6.19143, -141.2, -11.0377, 0.52", "-6.12447, -142.042, -11.0706, 0.52", "-6.03567, -143.039, -11.1268, 1.47", "-5.93017, -144.059, -11.2048, 1.77", "-5.83223, -144.847, -11.2925, 1.77", "-5.76051, -145.3, -11.3515, 1.77", "-5.61781, -146.051, -11.4503, 1.25", "-5.43516, -146.921, -11.5637, 0.81", "-5.21756, -147.977, -11.7066, 0.44", "-4.93914, -149.302, -11.8789, 0.37", "-4.76913, -150.117, -11.9793, 0.52", "-4.55184, -151.102, -12.0914, 0.52", "-4.37914, -151.84, -12.1684, 0.66", "-4.13347, -152.811, -12.267, 0.66", "-3.79461, -154.053, -12.4327, 0.88", "-3.48314, -155.097, -12.6014, 1.25", "-3.29253, -155.685, -12.7221, 1.25", "-3.11134, -156.191, -12.8429, 1.25", "-2.72803, -157.185, -13.1106, 1.11", "-2.3718, -158.062, -13.3691, 0.74", "-2.04662, -158.832, -13.6147, 0.29", "-1.85393, -159.288, -13.7697, 0.29", "-1.40105, -160.4, -14.1379, 0.44", "-1.15682, -161.039, -14.3279, 0.88", "-0.964121, -161.617, -14.4708, 1.33", "-0.7663, -162.303, -14.6022, 1.47", "-0.583385, -163.047, -14.7103, 1.47", "-0.437806, -163.708, -14.7811, 1.25", "-0.25597, -164.612, -14.8503, 0.44", "-0.0105893, -165.937, -14.8775, 0.29", "0.157297, -166.987, -14.8438, 0.29", "0.298847, -168.059, -14.7644, 0.29", "0.386158, -168.912, -14.6715, 0.74", "0.42546, -169.516, -14.5898, 0.88", "0.44181, -170.741, -14.3961, 0.96", "0.39133, -171.786, -14.227, 1.03", "0.304572, -172.573, -14.1198, 1.03", "0.178129, -173.355, -14.0215, 0.59", "0.027059, -174.19, -13.9275, 0.22", "-0.0659517, -174.717, -13.8835, 0.22", "-0.258914, -175.93, -13.8425, 0.96", "-0.367416, -176.65, -13.8373, 1.11", "-0.478296, -177.44, -13.8118, 1.11", "-0.566642, -178.197, -13.7585, 0.59", "-0.636308, -178.967, -13.6827, 0.29", "-0.680144, -179.624, -13.5973, 0.29", "-0.71641, -180.172, -13.5105, 0.29", "-0.792712, -181.361, -13.2991, 0.44", "-0.859992, -182.367, -13.0948, 0.66", "-0.930921, -183.431, -12.8689, 0.66", "-0.972931, -184.2, -12.7104, 0.81", "-1.01096, -185.055, -12.5516, 0.81", "-1.04083, -185.872, -12.4135, 0.52", "-1.09577, -186.91, -12.2699, 0.66", "-1.14695, -187.678, -12.1713, 0.66", "-1.25979, -188.972, -12.0727, 0.37", "-1.37588, -190.118, -12.0449, 0.37", "-1.48429, -191.033, -12.0666, 1.03", "-1.60124, -191.952, -12.1541, 1.47", "-1.7307, -192.854, -12.3006, 1.62", "-1.99637, -194.463, -12.6651, 0.88", "-2.21732, -195.508, -12.9954, 0.59", "-2.43093, -196.303, -13.3191, 0.37", "-2.86494, -197.58, -13.9265, 0.29", "-3.0216, -197.956, -14.1098, 0.29", "-3.28833, -198.492, -14.3642, 0.29", "-3.81593, -199.487, -14.7764, 0.29", "-4.34256, -200.426, -15.171, 0.59", "-4.89348, -201.421, -15.5692, 0.59", "-5.24102, -202.037, -15.8111, 0.44", "-5.67237, -202.775, -16.1174, 0.44", "-5.95678, -203.224, -16.3491, 0.29", "-6.36679, -203.864, -16.7373, 1.4", "-6.96593, -204.592, -17.3628, 1.62", "-7.52916, -205.086, -17.9422, 1.4", "-8.08578, -205.436, -18.4903, 1.11", "-9.02742, -205.897, -19.3648, 0.81", "-9.55095, -206.133, -19.8455, 0.59", "-10.1227, -206.419, -20.3979, 0.74", "-10.6672, -206.771, -20.9516, 0.81", "-11.0884, -207.227, -21.4096, 0.52", "-11.3943, -207.693, -21.773, 0.52", "-11.6766, -208.215, -22.0977, 0.74", "-12.0584, -208.958, -22.5694, 0.74", "-12.2565, -209.421, -22.8247, 0.74", "-12.4512, -209.945, -23.1164, 0.52", "-12.7419, -210.771, -23.5296, 0.52", "-12.903, -211.225, -23.7414, 0.52", "-13.2178, -212.115, -24.1008, 1.69", "-13.414, -212.705, -24.2909, 2.14", "-13.7765, -213.953, -24.6057, 1.55", "-14.1167, -215.263, -24.8621, 0.29", "-14.2998, -216.029, -24.9793, 0.29", "-14.5427, -217.084, -25.1088, 0.44", "-14.7749, -218.09, -25.1971, 0.59", "-14.9837, -218.982, -25.2546, 0.59", "-15.2007, -219.89, -25.2796, 0.29", "-15.3183, -220.379, -25.294, 0.29", "-15.4802, -221.061, -25.3139, 0.96", "-15.6125, -221.659, -25.3302, 1.03", "-15.7744, -222.493, -25.3541, 0.52", "-15.9496, -223.579, -25.3862, 0.29", "-16.0313, -224.198, -25.4026, 0.81", "-16.1129, -224.917, -25.4175, 0.96", "-16.1706, -225.47, -25.4292, 0.96", "-16.2698, -226.442, -25.4515, 0.29", "-16.4009, -227.551, -25.4775, 0.29", "-16.5486, -228.711, -25.5372, 1.47", "-16.6517, -229.523, -25.5945, 1.92", "-16.6974, -229.918, -25.6261, 1.92", "-16.809, -230.901, -25.698, 1.33", "-16.9208, -231.995, -25.7811, 0.29", "-17.0265, -233.111, -25.8729, 0.29", "-17.1004, -234.002, -25.9559, 0.29", "-17.2504, -235.938, -26.1505, 0.29", "-17.3423, -237.256, -26.2733, 1.4", "-17.3899, -238.06, -26.3401, 2.14", "-17.4074, -238.41, -26.3656, 2.28", "-17.431, -238.983, -26.3954, 2.28", "-17.4608, -239.574, -26.4097, 1.92", "-17.5253, -240.43, -26.3682, 0.88", "-17.6415, -241.736, -26.2325, 0.29", "-17.7191, -242.533, -26.1106, 0.29", "-17.8081, -243.425, -25.9465, 0.29", "-17.9509, -244.82, -25.6605, 0.29", "-18.0915, -246.25, -25.365, 0.96", "-18.1773, -247.207, -25.1754, 1.62", "-18.2227, -247.75, -25.0713, 1.62", "-18.2636, -248.261, -24.9841, 1.62", "-18.3478, -249.362, -24.8397, 1.11", "-18.4314, -250.715, -24.7812, 0.29", "-18.4958, -251.724, -24.8027, 0.29", "-18.5525, -252.524, -24.8434, 0.59", "-18.5866, -252.92, -24.8731, 0.66", "-18.6355, -253.4, -24.9161, 0.66", "-18.7975, -254.718, -25.0478, 0.29", "-19.0259, -256.244, -25.2385, 0.29", "-19.233, -257.425, -25.4025, 0.96", "-19.431, -258.355, -25.535, 1.4", "-19.5972, -259.051, -25.6283, 1.4", "-19.7796, -259.77, -25.7147, 1.4", "-20.0338, -260.719, -25.8082, 0.88", "-20.3509, -261.881, -25.916, 0.29", "-20.6394, -262.941, -25.9991, 0.29", "-20.9443, -264.013, -26.0775, 0.44", "-21.1534, -264.691, -26.1205, 0.66", "-21.3335, -265.235, -26.1446, 0.66", "-21.6663, -266.203, -26.1511, 0.29", "-21.8645, -266.784, -26.1501, 0.29", "-22.1148, -267.528, -26.1791, 0.29", "-22.4658, -268.547, -26.2858, 0.29", "-22.6702, -269.129, -26.3857, 0.52", "-22.9402, -269.937, -26.5631, 0.66", "-23.1572, -270.744, -26.7163, 0.66", "-23.3921, -272.001, -26.9185, 1.4", "-23.4865, -273.106, -27.0759, 2.28", "-23.4882, -274.209, -27.2189, 2.5", "-23.439, -274.83, -27.2744, 2.5", "-23.0478, -277.006, -27.3556, 0.22", "-22.8077, -277.886, -27.331, 0.22", "-22.3856, -279.002, -27.2197, 0.37", "-22.0671, -279.663, -27.108, 0.44", "-21.4433, -280.643, -26.9827, 0.29", "-20.7252, -281.552, -26.9677, 0.88", "-20.2842, -281.982, -27.0736, 1.4", "-19.9376, -282.292, -27.2188, 1.4", "-19.4658, -282.735, -27.5024, 1.11", "-17.9841, -284.259, -28.6681, 0.29", "-17.5129, -284.808, -29.1226, 0.29", "-16.7986, -285.767, -29.9169, 0.81", "-16.4487, -286.388, -30.3613, 0.81", "-15.8996, -287.702, -31.1585, 0.22", "-15.7332, -288.251, -31.4353, 0.22", "-15.5679, -289.098, -31.7401, 0.44", "-15.5012, -289.575, -31.8806, 0.59", "-15.3057, -291.573, -32.3518, 0.22", "-15.2521, -292.27, -32.508, 0.74", "-15.2156, -292.89, -32.6382, 1.03", "-15.1719, -293.552, -32.7638, 1.03", "-15.1282, -294.201, -32.8764, 0.74", "-15.0841, -294.803, -32.9781, 0.37", "-14.9542, -296.334, -33.2393, 0.22", "-14.838, -297.858, -33.507, 0.22", "-14.7668, -299.003, -33.706, 0.88", "-14.7233, -299.85, -33.8531, 1.62", "-14.7052, -300.315, -33.9349, 1.84", "-14.696, -300.875, -34.0331, 1.84", "-14.7079, -302.03, -34.2294, 0.52", "-14.7578, -303.003, -34.3983, 0.22", "-14.832, -303.783, -34.5415, 0.22", "-14.9229, -304.453, -34.6687, 0.37", "-14.97, -304.713, -34.7129, 0.37", "-15.1186, -305.356, -34.8251, 0.22", "-15.2627, -305.878, -34.9168, 0.74", "-15.4389, -306.471, -35.0266, 0.74", "-15.6093, -307.007, -35.1225, 0.59", "-16.004, -308.167, -35.3225, 0.22", "-16.2048, -308.702, -35.407, 0.22", "-16.5121, -309.416, -35.4874, 0.59", "-16.7619, -309.928, -35.515, 0.59", "-17.0368, -310.455, -35.4949, 0.29", "-17.3419, -310.992, -35.4482, 0.22", "-17.8124, -311.731, -35.4047, 0.37", "-18.436, -312.616, -35.373, 0.44", "-19.002, -313.242, -35.4352, 0.59", "-19.7313, -313.874, -35.6234, 0.37", "-20.1822, -314.147, -35.8027, 0.22", "-21.3166, -314.557, -36.3997, 2.21", "-21.7453, -314.594, -36.6814, 2.5", "-23.4061, -314.241, -37.9493, 0.22", "-23.9146, -314.01, -38.3746, 0.22", "-24.5891, -313.514, -39.0288, 0.66", "-24.9059, -313.198, -39.375, 0.66", "-25.3483, -312.659, -39.9023, 0.37", "-25.9564, -311.869, -40.6898, 1.92", "-26.17, -311.589, -40.9779, 1.92", "-27.2611, -310.4, -42.5073, 0.44", "-27.7469, -309.974, -43.191, 0.59", "-28.047, -309.789, -43.5716, 0.37", "-28.5299, -309.629, -44.0838, 0.37", "-29.0354, -309.538, -44.5882, 0.22", "-30.2706, -309.48, -45.6606, 0.29", "-30.7182, -309.545, -45.9517, 0.22", "-31.4626, -309.695, -46.3724, 0.22", "-32.496, -309.896, -46.9196, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.50565, -88.2693, -9.56394, 0.74", "-11.3893, -89.6648, -9.56394, 0.74", "-12.1358, -90.1622, -9.56394, 0.74", "-13.2142, -90.7834, -9.59482, 0.74", "-13.9692, -91.1452, -9.63543, 0.52", "-14.7547, -91.4011, -9.72041, 0.52", "-15.508, -91.5645, -9.83891, 0.88", "-16.1402, -91.5066, -10.0446, 0.88", "-17.1492, -91.2255, -10.4894, 0.59", "-17.7779, -90.9885, -10.8114, 0.37", "-18.7447, -90.6591, -11.3692, 0.37", "-19.3296, -90.5363, -11.7626, 1.11", "-19.819, -90.5643, -12.136, 1.47", "-20.2925, -90.689, -12.4998, 1.47", "-20.6394, -90.8204, -12.7497, 1.47", "-21.4364, -91.1301, -13.2955, 0.96", "-22.15, -91.3458, -13.75, 0.59", "-22.8095, -91.4594, -14.1112, 0.59", "-23.498, -91.5164, -14.4035, 0.59", "-24.2265, -91.5713, -14.6857, 0.81", "-24.9203, -91.6257, -14.9356, 0.81", "-25.4647, -91.6666, -15.0928, 0.81", "-26.1109, -91.7422, -15.2573, 0.81", "-26.8095, -92.0798, -15.5373, 0.22", "-27.2495, -92.8723, -15.9302, 0.22", "-27.5194, -93.5086, -16.2607, 0.66", "-27.6609, -93.8883, -16.4687, 0.88", "-27.8617, -94.4396, -16.7958, 0.88", "-28.1498, -95.0813, -17.3194, 0.44", "-28.5937, -95.7087, -18.0347, 1.4", "-29.023, -96.0397, -18.6493, 2.14", "-29.2168, -96.1192, -18.9206, 2.58", "-29.6291, -96.1722, -19.4669, 2.36", "-30.7514, -96.1367, -20.9413, 1.69", "-31.3462, -96.0586, -21.6947, 0.37", "-32.0855, -95.9154, -22.5279, 0.37", "-32.6986, -95.7908, -23.1513, 0.37", "-33.9523, -95.5941, -24.3063, 1.92", "-34.475, -95.5495, -24.7513, 2.14", "-35.0033, -95.5641, -25.1637, 2.5", "-36.5567, -95.8051, -26.4158, 0.44", "-37.0387, -95.9359, -26.8153, 0.44", "-37.7715, -96.1586, -27.4666, 0.44", "-38.4322, -96.335, -28.1033, 0.44", "-39.1074, -96.4566, -28.7835, 1.4", "-39.8399, -96.5496, -29.5546, 2.06", "-40.4873, -96.6216, -30.2977, 2.06", "-41.2725, -96.648, -31.2488, 0.66", "-41.8792, -96.6397, -32.0568, 0.81", "-42.5192, -96.6278, -32.9977, 0.52", "-43.0196, -96.6613, -33.8895, 1.77", "-43.3328, -96.7439, -34.6007, 2.28", "-44.1235, -97.2499, -37.0304, 1.33", "-44.3352, -97.5522, -37.9926, 1.77", "-44.4297, -97.7716, -38.611, 1.77", "-44.5721, -98.2162, -39.8049, 0.74", "-44.6707, -98.5796, -40.7546, 0.52", "-44.8339, -99.1618, -42.1297, 0.52", "-45.0087, -99.8613, -43.5173, 0.88", "-45.2502, -100.535, -44.7828, 1.47", "-45.5478, -101.204, -45.9665, 0.22", "-45.7195, -101.553, -46.5339, 0.22", "-45.9535, -102.03, -47.2119, 0.81", "-46.1868, -102.553, -47.8252, 0.96", "-46.4854, -103.252, -48.5378, 1.55", "-46.7649, -103.953, -49.1432, 1.55", "-47.071, -104.717, -49.7726, 0.37", "-47.2921, -105.259, -50.2292, 0.74", "-47.578, -105.928, -50.8357, 0.81", "-47.9339, -106.807, -51.6758, 0.29", "-48.0795, -107.23, -52.0803, 0.96", "-48.2575, -107.85, -52.6653, 1.33", "-48.4436, -108.719, -53.4787, 0.74", "-48.5347, -109.446, -54.136, 0.59", "-48.5632, -110.598, -55.1192, 0.29", "-48.4921, -111.345, -55.6834, 0.29", "-48.3544, -112.036, -56.1715, 0.29", "-48.1926, -112.568, -56.4973, 1.18", "-47.9868, -113.067, -56.7768, 1.69", "-47.6156, -113.793, -57.1449, 1.33", "-47.0255, -114.812, -57.6493, 0.22", "-46.7487, -115.279, -57.8877, 0.22", "-46.4165, -115.883, -58.1988, 0.96", "-46.2121, -116.31, -58.4184, 1.11", "-45.8662, -117.131, -58.8305, 0.52", "-45.3744, -118.455, -59.4748, 0.22", "-45.1641, -119.085, -59.7761, 0.22", "-44.9591, -119.775, -60.1077, 0.88", "-44.8254, -120.278, -60.3718, 1.03", "-44.6117, -121.146, -60.8671, 0.22", "-44.5123, -121.546, -61.108, 0.22", "-44.3541, -122.129, -61.4717, 0.66", "-44.1626, -122.778, -61.8729, 0.74", "-43.6906, -124.285, -62.7679, 0.22", "-43.3594, -125.385, -63.3512, 0.22", "-43.0137, -126.788, -64.0051, 0.96", "-42.9081, -127.321, -64.2248, 1.25", "-42.8247, -128.038, -64.4705, 1.25", "-42.7742, -129.104, -64.7546, 0.66", "-42.8209, -130.422, -65.029, 0.15", "-42.9849, -131.551, -65.2432, 0.37", "-43.1115, -132.077, -65.353, 0.37", "-43.6971, -133.992, -65.8029, 0.22", "-43.807, -134.287, -65.8868, 0.74", "-44.0679, -134.917, -66.0983, 0.88", "-44.9567, -136.909, -66.8386, 0.22", "-45.3003, -137.658, -67.121, 0.74", "-45.6437, -138.384, -67.3906, 0.74", "-46.3959, -139.962, -67.9885, 0.22", "-47.0225, -141.288, -68.4741, 0.22", "-47.7252, -142.815, -68.9587, 0.22", "-48.3597, -144.261, -69.334, 0.22", "-48.6923, -145.051, -69.4928, 0.88", "-48.941, -145.677, -69.585, 1.11", "-49.1627, -146.316, -69.6349, 1.11", "-49.6335, -147.881, -69.6838, 0.15", "-49.9529, -149.151, -69.6946, 0.15", "-50.1086, -149.856, -69.6911, 0.81", "-50.2328, -150.473, -69.6848, 0.96", "-50.6489, -152.775, -69.9048, 0.22", "-50.8265, -153.857, -70.0342, 0.22", "-51.0037, -155.051, -70.2457, 0.22", "-51.069, -155.53, -70.3526, 1.18", "-51.1274, -155.986, -70.4823, 1.18", "-51.5567, -159.34, -71.8873, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "25.2403, 185.204, -31.0884, 0.37", "25.7095, 184.392, -30.6057, 0.37", "26.0931, 183.784, -30.2597, 0.52", "26.6378, 182.961, -29.7933, 0.74", "27.0804, 182.31, -29.4373, 1.11", "27.3395, 181.943, -29.2329, 1.11", "27.7157, 181.411, -28.9326, 0.81", "28.5747, 180.265, -28.1955, 0.22", "28.9867, 179.704, -27.8394, 0.22", "29.2446, 179.326, -27.6288, 0.66", "29.5058, 178.903, -27.4154, 0.66", "29.7571, 178.462, -27.2089, 0.66", "30.2194, 177.577, -26.7975, 0.44", "30.635, 176.698, -26.3941, 0.22", "31.061, 175.72, -25.9711, 0.22", "31.253, 175.243, -25.7762, 0.44", "31.3748, 174.913, -25.6645, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "25.2403, 185.204, -31.0884, 0.22", "26.7035, 185.27, -31.1456, 0.22", "27.0378, 185.308, -31.172, 0.44", "28.5716, 185.575, -31.3056, 0.22", "29.23, 185.712, -31.3824, 0.59", "29.7334, 185.825, -31.4654, 0.59", "31.8925, 186.313, -31.8213, 0.22", "34.3828, 186.917, -32.2922, 0.22", "35.2729, 187.16, -32.48, 0.66", "35.9681, 187.383, -32.6542, 0.81", "37.0173, 187.744, -32.9475, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "14.5872, 231.48, 0.731219, 0.59", "15.9111, 232.747, -0.00143218, 0.59", "16.3445, 233.176, -0.223069, 0.44", "17.2366, 234.115, -0.708085, 0.22", "18.0009, 234.986, -1.12209, 0.81", "18.3996, 235.466, -1.35499, 0.96", "18.5815, 235.693, -1.46854, 0.96", "19.1342, 236.487, -1.8383, 0.22", "19.8734, 237.769, -2.4695, 0.22", "20.4374, 238.968, -3.07688, 1.11", "20.7006, 239.636, -3.40802, 1.47", "20.8006, 239.965, -3.57815, 1.47", "21.1078, 241.406, -4.30811, 0.22", "21.2696, 242.725, -4.96846, 0.22", "21.3104, 243.503, -5.34627, 0.66", "21.3134, 243.889, -5.53839, 0.66", "21.2339, 245.73, -6.4184, 0.22", "21.0915, 247.409, -7.1918, 0.22", "20.966, 248.365, -7.62772, 0.22", "20.7892, 249.475, -8.12415, 1.47", "20.6646, 250.108, -8.39041, 1.47", "20.1649, 252.246, -9.19598, 0.22", "19.9723, 252.941, -9.43134, 0.81", "19.7802, 253.523, -9.60669, 0.81", "19.2454, 254.946, -9.96873, 0.22", "18.7741, 256.072, -10.2207, 0.22", "18.2443, 257.242, -10.4551, 1.47", "18.006, 257.726, -10.561, 1.84", "17.1042, 259.482, -10.9477, 0.22", "16.3831, 260.827, -11.2334, 0.22", "16.1115, 261.292, -11.3333, 0.22", "15.3659, 262.508, -11.6349, 1.55", "14.886, 263.24, -11.8391, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "14.5872, 231.48, 0.731219, 0.22", "15.4875, 234.294, 0.452118, 0.22", "16.0019, 235.822, 0.320013, 0.22", "16.4102, 237.007, 0.228057, 0.96", "16.5891, 237.522, 0.193162, 1.18", "16.7749, 238.055, 0.161926, 1.18", "17.0745, 238.925, 0.118062, 0.22", "17.2977, 239.545, 0.106287, 0.44", "17.4038, 239.862, 0.096918, 0.44", "17.685, 240.776, 0.06642, 0.22", "17.9223, 241.578, 0.0401956, 0.44", "18.1809, 242.468, 0.0118482, 0.44", "18.9281, 245.19, -0.0678303, 0.22", "19.5442, 247.484, -0.153526, 0.22", "19.7767, 248.345, -0.195994, 0.66", "19.9048, 248.818, -0.225376, 0.74", "20.1146, 249.571, -0.293486, 0.22", "20.6471, 251.409, -0.499718, 0.22", "20.9603, 252.489, -0.636755, 1.03", "21.1687, 253.206, -0.736318, 1.25", "21.3256, 253.748, -0.81561, 1.25", "21.8528, 255.57, -1.09412, 0.22", "22.7288, 258.567, -1.56497, 0.22", "23.0292, 259.577, -1.72317, 0.74", "23.1971, 260.159, -1.80035, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.33657, 100.576, 13.7584, 0.37", "12.2621, 109.458, 18.2174, 0.37", "15.9647, 117.8, 23.0307, 0.37", "17.788, 125.736, 29.3205, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "9.33657, 100.576, 13.7584, 0.22", "13.6785, 109.961, 12.6329, 0.37", "18.552, 118.793, 10.2913, 0.37", "23.7953, 127.234, 7.48407, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "93.0589, -6.86815, 15.2632, 0.37", "102.669, -9.51039, 16.4092, 0.37", "112.585, -10.5218, 17.2766, 0.37", "122.448, -10.255, 18.9064, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "93.0589, -6.86815, 15.2632, 0.22", "102.617, -9.63184, 16.5704, 0.37", "112.554, -10.6892, 17.0605, 0.37", "122.38, -12.2124, 18.2211, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "50.9856, 9.13702, 3.26379, 0.52", "52.3855, 9.38222, 3.67473, 0.52", "52.9299, 9.44913, 3.83851, 0.52", "53.4953, 9.49598, 4.04699, 0.52", "54.5793, 9.5663, 4.48039, 0.52", "55.2272, 9.5894, 4.75329, 0.88", "56.2193, 9.60444, 5.16159, 0.88", "56.9545, 9.61289, 5.45333, 0.88", "57.7375, 9.52098, 5.7661, 0.81", "58.2393, 9.34673, 5.93355, 0.81", "58.9906, 8.89317, 6.13936, 0.59", "59.5877, 8.3933, 6.2499, 0.59", "60.2259, 7.75508, 6.29207, 0.59", "60.8567, 7.07726, 6.25936, 0.74", "61.8381, 5.91725, 6.12588, 0.66", "62.2389, 5.39775, 6.05578, 0.66", "62.8427, 4.5438, 5.93467, 0.52", "63.2516, 3.95415, 5.84506, 0.52", "63.7796, 3.22362, 5.72007, 0.81", "64.4361, 2.31663, 5.55351, 0.81", "64.8694, 1.68653, 5.45061, 0.81", "65.3896, 0.855964, 5.31517, 0.81", "66.0076, -0.247095, 5.14645, 0.88", "66.4965, -1.22552, 5.00742, 1.11", "66.7944, -1.86939, 4.91454, 1.11", "67.337, -3.16704, 4.73707, 0.88", "67.6997, -4.20391, 4.63214, 0.96", "67.9262, -5.01533, 4.59356, 0.96", "68.0777, -5.69503, 4.59615, 0.96", "68.1996, -6.31728, 4.61939, 0.66", "68.3938, -7.30709, 4.70749, 0.66", "68.6879, -8.60968, 4.89225, 0.81", "69.0007, -9.64008, 5.07822, 1.11", "69.4436, -10.7979, 5.32884, 0.96", "69.836, -11.6202, 5.49664, 0.81", "70.4421, -12.6573, 5.69184, 0.81", "71.2086, -13.7252, 5.86212, 0.59", "71.8787, -14.5245, 5.9541, 0.37", "72.5061, -15.205, 5.99936, 0.37", "73.4421, -16.1852, 6.01659, 0.59", "73.956, -16.7301, 5.98442, 0.88", "74.2403, -17.0467, 5.94026, 1.11", "74.6027, -17.4876, 5.87898, 1.11", "75.0801, -18.1072, 5.81656, 0.74", "75.4648, -18.5802, 5.76805, 0.74", "75.8446, -19.0634, 5.71062, 0.74", "76.4203, -19.8316, 5.57938, 0.74", "77.0023, -20.6413, 5.39609, 0.74", "77.5309, -21.3751, 5.21137, 0.66", "78.0321, -22.0591, 5.01929, 0.66", "78.6967, -22.9553, 4.74048, 0.96", "79.4773, -24.036, 4.36758, 1.4", "79.871, -24.6272, 4.14066, 1.62", "80.2717, -25.2787, 3.86811, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "50.9856, 9.13702, 3.26379, 0.88", "51.9598, 10.1556, 3.47818, 0.88", "52.8417, 10.9704, 3.70022, 0.88", "53.843, 11.747, 3.96064, 0.88", "54.9372, 12.4603, 4.23603, 0.88", "56.2407, 13.194, 4.5713, 0.74", "57.0679, 13.6289, 4.79408, 0.74", "58.243, 14.1523, 5.14221, 0.88", "59.3028, 14.5477, 5.45901, 0.88", "60.182, 14.8337, 5.70788, 0.88", "61.0368, 15.0995, 5.9388, 0.66", "61.6364, 15.3149, 6.08783, 0.66", "62.4389, 15.7141, 6.24216, 0.88", "62.9177, 16.0293, 6.31113, 0.88", "63.3748, 16.3838, 6.36105, 0.88", "63.8388, 16.7592, 6.40306, 0.88", "64.7036, 17.4417, 6.48169, 0.59", "65.3178, 17.902, 6.57681, 0.59", "65.7866, 18.2686, 6.6859, 0.81", "66.3989, 18.7959, 6.86819, 0.81", "66.8646, 19.252, 7.03229, 0.81", "67.3889, 19.8077, 7.23427, 0.66", "68.1395, 20.6309, 7.53939, 0.59", "68.9305, 21.6581, 7.87285, 0.59", "69.3541, 22.2962, 8.04076, 0.59", "69.8351, 23.1018, 8.2011, 0.44", "70.1373, 23.6154, 8.27157, 0.44", "70.4644, 24.1582, 8.31551, 0.44", "71.2831, 25.4666, 8.37072, 0.44", "71.9341, 26.4494, 8.40448, 0.66", "72.4787, 27.2516, 8.42849, 0.66", "73.1527, 28.2332, 8.45094, 0.74", "73.679, 28.9988, 8.4641, 0.96", "74.0846, 29.5693, 8.47204, 0.96", "74.6868, 30.3273, 8.48139, 0.66", "75.2784, 31.0351, 8.49036, 0.66", "76.2185, 32.1366, 8.50334, 0.59", "77.0871, 33.1834, 8.53841, 0.59", "77.6476, 33.8739, 8.57523, 0.81", "78.0718, 34.4134, 8.61217, 0.81", "78.7981, 35.3, 8.68476, 0.52", "79.3624, 35.9271, 8.74382, 0.52", "80.1137, 36.7061, 8.83335, 0.52", "80.7469, 37.3455, 8.91104, 0.52", "81.3545, 37.945, 8.98175, 0.37", "82.4391, 38.9878, 9.0987, 0.37", "83.1538, 39.6612, 9.16538, 0.59", "83.6111, 40.0629, 9.19703, 0.59", "84.5844, 40.8835, 9.23371, 0.74", "85.0922, 41.3164, 9.25211, 0.74", "85.5233, 41.701, 9.27312, 0.74", "86.1353, 42.3194, 9.32066, 0.74", "86.5463, 42.7594, 9.32001, 0.44", "87.1374, 43.3685, 9.23914, 0.44", "87.6487, 43.8489, 9.11994, 0.81", "88.5109, 44.5952, 8.86582, 0.81", "89.1465, 45.0956, 8.63648, 0.66", "90.2576, 45.9208, 8.20172, 0.52", "91.1055, 46.5563, 7.82019, 0.44", "91.6669, 46.9587, 7.52812, 0.44", "92.1582, 47.3043, 7.24121, 0.44", "92.543, 47.563, 6.98784, 0.44", "93.1867, 47.9646, 6.57889, 0.74", "93.7438, 48.3119, 6.35268, 0.59", "94.1187, 48.5875, 6.22938, 0.59", "100.953, 55.9919, 8.11618, 0.59", "108.021, 63.1804, 9.89644, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-102.948, -357.056, 4.07327, 0.52", "-103.615, -358.79, 3.99093, 0.52", "-103.895, -359.491, 3.96382, 0.29", "-104.284, -360.406, 3.92113, 0.44", "-104.651, -361.256, 3.87596, 0.44", "-104.943, -361.915, 3.83705, 0.29", "-105.388, -362.874, 3.76466, 0.29", "-105.846, -363.785, 3.68039, 0.81", "-106.191, -364.484, 3.5916, 1.18", "-106.371, -364.867, 3.53573, 1.4", "-106.654, -365.503, 3.43976, 1.4", "-106.901, -366.116, 3.34895, 1.11", "-107.391, -367.442, 3.16452, 0.52", "-107.718, -368.484, 3.04135, 0.44", "-107.945, -369.322, 2.9579, 0.74", "-108.204, -370.331, 2.87055, 0.81", "-108.388, -371.092, 2.80924, 0.81", "-108.565, -371.898, 2.74719, 0.74", "-108.782, -372.966, 2.71132, 0.22", "-108.877, -373.459, 2.70205, 0.22", "-109.027, -374.328, 2.68479, 0.22", "-109.131, -375.081, 2.69283, 0.66", "-109.22, -375.866, 2.73374, 0.81", "-109.334, -377.129, 2.84611, 0.66", "-109.403, -378.278, 2.99867, 0.22", "-109.421, -379.303, 3.17584, 0.22", "-109.4, -380.05, 3.3339, 0.22", "-109.371, -380.773, 3.52503, 0.96", "-109.362, -381.144, 3.63104, 1.18", "-109.355, -381.696, 3.78698, 1.18", "-109.354, -382.148, 3.94134, 1.18", "-109.382, -383.01, 4.21915, 0.74", "-109.478, -384.316, 4.59511, 0.22", "-109.524, -384.747, 4.71, 0.22", "-109.589, -385.248, 4.84033, 0.44", "-109.649, -385.682, 4.9424, 0.44", "-109.791, -386.82, 5.18422, 0.22", "-109.868, -387.537, 5.31414, 0.96", "-109.906, -388.086, 5.39418, 1.18", "-109.931, -388.613, 5.46568, 1.25", "-109.974, -389.617, 5.59164, 0.96", "-110.072, -391.058, 5.75214, 0.29", "-110.174, -392.191, 5.86128, 0.22", "-110.324, -393.472, 5.95716, 0.22", "-110.423, -394.13, 5.99661, 0.81", "-110.53, -394.665, 6.01812, 0.96", "-111.005, -396.526, 6.07084, 0.22", "-111.187, -397.106, 6.08028, 0.22", "-111.507, -398.029, 6.09745, 0.59", "-111.757, -398.704, 6.11413, 0.59", "-112.121, -399.717, 6.14533, 0.52", "-112.402, -400.551, 6.18122, 0.52", "-112.756, -401.684, 6.25734, 0.52", "-112.891, -402.129, 6.29406, 0.96", "-113.112, -402.891, 6.3645, 0.96", "-113.351, -403.75, 6.45079, 0.59", "-113.759, -405.199, 6.63889, 0.22", "-114.171, -406.695, 6.84335, 0.22", "-114.362, -407.396, 6.94477, 0.22", "-114.542, -408.016, 7.03819, 0.96", "-114.669, -408.44, 7.10741, 1.18", "-114.935, -409.283, 7.26271, 0.52", "-115.569, -419.762, 7.17313, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-102.948, -357.056, 4.07327, 0.29", "-104.634, -356.48, 4.16389, 0.29", "-105.534, -356.421, 4.19966, 0.37", "-105.943, -356.507, 4.21157, 0.37", "-106.884, -356.857, 4.26871, 0.37", "-107.775, -357.252, 4.23288, 0.52", "-108.546, -357.617, 4.15836, 0.59", "-109.575, -358.237, 3.98627, 0.59", "-110.481, -358.825, 3.79165, 0.37", "-111.312, -359.381, 3.58123, 0.37", "-112.776, -360.387, 3.14698, 0.37", "-113.447, -360.809, 2.92938, 0.37", "-114.067, -361.168, 2.72118, 0.29", "-114.563, -361.431, 2.55862, 0.29", "-115.125, -361.719, 2.38971, 0.81", "-115.58, -361.971, 2.27364, 0.81", "-116.218, -362.391, 2.20221, 0.81", "-117.301, -363.213, 2.12669, 0.29", "-117.819, -363.654, 2.11098, 0.66", "-118.207, -364.012, 2.12166, 0.66", "-118.568, -364.368, 2.14773, 0.66", "-119.875, -365.73, 2.2862, 0.29", "-120.455, -366.363, 2.34624, 0.44", "-120.955, -366.91, 2.39617, 0.29", "-121.552, -367.54, 2.4396, 0.74", "-121.986, -367.967, 2.44097, 0.74", "-122.695, -368.583, 2.39445, 0.52", "-123.936, -369.522, 2.23047, 0.29", "-124.672, -370.028, 2.10539, 0.52", "-125.164, -370.341, 1.99014, 0.52", "-126.184, -370.954, 1.67015, 0.29", "-126.94, -371.366, 1.40782, 0.29", "-127.397, -371.583, 1.23559, 0.59", "-127.934, -371.81, 1.00845, 0.59", "-128.899, -372.203, 0.571819, 0.22", "-129.442, -372.414, 0.336891, 0.29", "-130.267, -372.736, 0.0138926, 0.29", "-130.656, -372.896, -0.134819, 0.29", "-131.654, -373.356, -0.505049, 0.37", "-132.421, -373.795, -0.707648, 0.37", "-133.225, -374.343, -0.820773, 0.52", "-134.16, -375.093, -0.878145, 1.55", "-134.723, -375.615, -0.885051, 1.92", "-135.263, -376.161, -0.864424, 1.92", "-136.524, -377.518, -0.731225, 0.29", "-137.351, -378.476, -0.620299, 0.29", "-138.02, -379.304, -0.504003, 0.29", "-138.553, -379.975, -0.395486, 0.74", "-138.818, -380.31, -0.340049, 0.96", "-139.053, -380.596, -0.297036, 1.11", "-139.733, -381.442, -0.17669, 0.52", "-140.164, -382.009, -0.0636935, 0.29", "-140.801, -382.827, 0.135187, 0.22", "-141.238, -383.358, 0.277265, 0.44", "-141.614, -383.79, 0.400211, 0.44", "-142.659, -384.971, 0.755162, 0.22", "-143.295, -385.672, 0.980323, 0.22", "-143.907, -386.32, 1.19112, 1.25", "-144.471, -386.904, 1.39758, 1.55", "-144.742, -387.17, 1.49175, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "80.2717, -25.2787, 3.86811, 0.74", "81.5919, -26.04, 5.04472, 0.74", "81.9762, -26.28, 5.35948, 0.74", "82.636, -26.7366, 5.84333, 0.59", "83.414, -27.337, 6.33484, 0.59", "84.1387, -27.9503, 6.7315, 0.59", "84.5017, -28.2695, 6.91387, 0.59", "85.2182, -28.9646, 7.20182, 0.59", "85.8303, -29.5848, 7.41186, 0.81", "86.643, -30.4006, 7.68661, 0.81", "87.3153, -31.0461, 7.91076, 0.37", "88.0143, -31.6712, 8.14972, 0.37", "88.8313, -32.3919, 8.43963, 0.37", "89.6616, -33.1304, 8.76694, 0.37", "90.4553, -33.8053, 9.10909, 0.37", "91.6464, -34.7712, 9.66971, 0.22", "92.916, -35.7694, 10.2963, 0.22", "99.62, -43.0498, 12.9381, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "80.2717, -25.2787, 3.86811, 0.37", "80.2804, -26.6937, 3.36203, 0.37", "80.3464, -27.5917, 3.09092, 0.37", "80.4537, -28.4297, 2.86161, 0.37", "80.6149, -29.2981, 2.69672, 0.37", "80.7851, -30.0483, 2.57613, 0.37", "81.0165, -30.9273, 2.45978, 0.29", "81.4323, -32.1626, 2.27791, 0.22", "81.9143, -33.4706, 2.03363, 0.22", "82.5643, -35.0951, 1.66092, 0.22", "82.8114, -35.695, 1.4939, 1.18", "82.9943, -36.1867, 1.30769, 1.4", "83.3688, -37.6919, 0.539183, 1.4", "83.4785, -38.9046, -0.238825, 0.44", "83.4556, -39.3156, -0.521114, 0.44", "83.3486, -39.938, -0.964401, 0.29", "83.0864, -40.9786, -1.64169, 0.29", "82.6863, -42.2961, -2.45149, 0.22", "82.3173, -43.3117, -2.96167, 0.22", "82.0464, -43.9206, -3.25068, 1.03", "81.8997, -44.2303, -3.38315, 1.33", "81.683, -44.6649, -3.54188, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-144.742, -387.17, 1.49175, 0.29", "-145.638, -386.306, 1.47443, 0.29", "-145.836, -386.115, 1.46482, 0.52", "-146.141, -385.815, 1.44083, 0.59", "-147.868, -384.113, 1.19654, 0.22", "-148.351, -383.641, 1.11097, 0.22", "-149.015, -383.005, 0.976433, 0.66", "-149.366, -382.662, 0.878882, 0.66", "-150.849, -381.264, 0.416208, 0.22", "-151.459, -380.714, 0.209127, 0.22", "-152.018, -380.253, 0.0144795, 0.52", "-152.416, -379.949, -0.122827, 0.66", "-153.508, -379.178, -0.492931, 0.22", "-155.676, -377.682, -1.22088, 0.22", "-157.076, -376.764, -1.6814, 0.22", "-158.378, -375.923, -2.07611, 1.18", "-158.743, -375.691, -2.18644, 1.4", "-159.305, -375.346, -2.35176, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-144.742, -387.17, 1.49175, 0.22", "-145.661, -388.66, 1.57305, 0.22", "-146.4, -389.883, 1.70726, 0.22", "-146.715, -390.433, 1.77959, 0.44", "-146.85, -390.675, 1.81351, 0.44", "-148.091, -392.991, 2.1446, 0.22", "-148.672, -394.074, 2.29954, 0.44", "-149.163, -394.985, 2.44074, 0.22", "-149.471, -395.599, 2.54902, 0.59", "-149.73, -396.131, 2.6515, 0.66", "-149.918, -396.54, 2.73869, 0.44", "-153.555, -406.014, 5.05381, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_ChC_56a32cfcf2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -7.61094, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -7.61094, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.2093, -9.18514, -8.24509, 1.77 ) }
    dend_49 { pt3dadd( -2.86495, -10.357, -8.41349, 1.77 ) }
    dend_49 { pt3dadd( -2.33865, -12.1938, -8.662, 1.55 ) }
    dend_49 { pt3dadd( -2.02953, -13.4118, -8.85937, 1.69 ) }
    dend_49 { pt3dadd( -1.81792, -14.3581, -9.03135, 1.77 ) }
    dend_49 { pt3dadd( -1.63254, -15.2788, -9.23937, 1.77 ) }
    dend_49 { pt3dadd( -1.39719, -16.5131, -9.58903, 1.25 ) }
    dend_49 { pt3dadd( -1.01569, -18.4065, -10.0604, 0.74 ) }
    dend_49 { pt3dadd( -1.74903, -17.5815, -10.868, 0.74 ) }
    dend_49 { pt3dadd( -2.3209, -17.2898, -11.7274, 0.74 ) }
    dend_49 { pt3dadd( -3.32365, -16.8934, -13.2723, 1.18 ) }
    dend_49 { pt3dadd( -3.86269, -16.7939, -14.1531, 1.18 ) }
    dend_49 { pt3dadd( -4.67124, -16.5937, -15.3707, 0.52 ) }
    dend_49 { pt3dadd( -5.62803, -16.2293, -16.6787, 0.52 ) }
    dend_49 { pt3dadd( -6.71563, -16.2822, -18.3319, 0.74 ) }
    dend_49 { pt3dadd( -7.17395, -16.5473, -19.4565, 0.74 ) }
    dend_49 { pt3dadd( -7.39261, -16.9562, -20.4379, 0.74 ) }
    dend_49 { pt3dadd( -7.7455, -17.4829, -21.9189, 1.11 ) }
    dend_49 { pt3dadd( -8.06051, -17.758, -22.867, 1.69 ) }
    dend_49 { pt3dadd( -8.57607, -17.9473, -23.8242, 1.77 ) }
    dend_49 { pt3dadd( -9.75058, -18.3114, -25.9396, 1.33 ) }
    dend_49 { pt3dadd( -10.3757, -18.6374, -27.2291, 1.4 ) }
    dend_49 { pt3dadd( -10.744, -19.0715, -28.1976, 1.55 ) }
    dend_49 { pt3dadd( -10.9534, -19.7937, -29.2117, 1.33 ) }
    dend_49 { pt3dadd( -10.9762, -21.0387, -30.4991, 0.74 ) }
    dend_49 { pt3dadd( -10.7802, -22.0581, -31.2471, 1.03 ) }
    dend_49 { pt3dadd( -10.494, -22.914, -31.72, 1.47 ) }
    dend_49 { pt3dadd( -10.1903, -23.4765, -32.0597, 1.62 ) }
    dend_49 { pt3dadd( -9.70927, -24.1483, -32.5281, 1.62 ) }
    dend_49 { pt3dadd( -9.1641, -24.6882, -32.9593, 0.52 ) }
    dend_49 { pt3dadd( -8.51608, -25.196, -33.4349, 0.52 ) }
    dend_49 { pt3dadd( -8.35486, -25.4614, -33.8437, 0.52 ) }
    dend_49 { pt3dadd( -8.38763, -26.0047, -34.9026, 0.66 ) }
    dend_49 { pt3dadd( -8.59725, -26.5381, -36.0214, 0.74 ) }
    dend_49 { pt3dadd( -8.93911, -26.7557, -36.8106, 0.44 ) }
    dend_49 { pt3dadd( -9.52817, -26.7531, -37.6456, 0.44 ) }
    dend_49 { pt3dadd( -10.3964, -26.6411, -38.7073, 0.44 ) }
    dend_49 { pt3dadd( -11.0137, -26.707, -39.652, 0.44 ) }
    dend_49 { pt3dadd( -11.3569, -26.8369, -40.3219, 0.44 ) }
    dend_49 { pt3dadd( -11.9949, -27.2708, -41.6237, 0.66 ) }
    dend_49 { pt3dadd( -12.3065, -27.9444, -42.9389, 1.11 ) }
    dend_49 { pt3dadd( -12.4677, -28.1913, -43.3958, 0.96 ) }
    dend_49 { pt3dadd( -12.8891, -28.7119, -44.443, 1.18 ) }
    dend_49 { pt3dadd( -13.053, -28.9347, -44.8524, 1.69 ) }
    dend_49 { pt3dadd( -13.3195, -29.2776, -45.4457, 1.69 ) }
    dend_49 { pt3dadd( -14.3349, -30.4915, -47.4312, 0.88 ) }
    dend_49 { pt3dadd( -14.9552, -31.0691, -48.468, 2.14 ) }
    dend_49 { pt3dadd( -16.362, -31.8496, -50.3838, 2.28 ) }
    dend_49 { pt3dadd( -16.5596, -31.906, -50.603, 2.28 ) }
    dend_49 { pt3dadd( -17.7008, -32.0168, -51.6677, 0.44 ) }
    dend_49 { pt3dadd( -18.3524, -31.9618, -52.1465, 0.44 ) }
    dend_49 { pt3dadd( -19.122, -31.797, -52.5879, 0.81 ) }
    dend_49 { pt3dadd( -19.9115, -31.5861, -53.0594, 0.81 ) }
    dend_49 { pt3dadd( -20.2714, -31.5341, -53.3174, 0.96 ) }
    dend_49 { pt3dadd( -20.9865, -31.6017, -53.946, 0.66 ) }
    dend_49 { pt3dadd( -21.7056, -31.8584, -54.6843, 1.99 ) }
    dend_49 { pt3dadd( -22.2441, -32.1656, -55.3072, 2.21 ) }
    dend_49 { pt3dadd( -22.7699, -32.5706, -55.9577, 2.5 ) }
    dend_49 { pt3dadd( -24.2167, -33.961, -57.8863, 0.66 ) }
    dend_49 { pt3dadd( -24.9668, -34.868, -59.0252, 0.66 ) }
    dend_49 { pt3dadd( -25.4301, -35.5731, -59.8077, 0.66 ) }
    dend_49 { pt3dadd( -25.9072, -36.4118, -60.6451, 1.55 ) }
    dend_49 { pt3dadd( -26.1287, -36.8244, -61.0158, 2.21 ) }
    dend_49 { pt3dadd( -26.3425, -37.2553, -61.3697, 2.21 ) }
    dend_49 { pt3dadd( -26.9321, -38.6253, -62.4339, 0.29 ) }
    dend_49 { pt3dadd( -27.2475, -39.509, -63.1736, 0.29 ) }
    dend_49 { pt3dadd( -27.4538, -40.1191, -63.6743, 1.55 ) }
    dend_49 { pt3dadd( -27.7108, -40.8554, -64.2653, 1.99 ) }
    dend_49 { pt3dadd( -27.9473, -41.5144, -64.8067, 2.36 ) }
    dend_49 { pt3dadd( -28.6121, -43.3068, -66.3245, 0.59 ) }
    dend_49 { pt3dadd( -28.9426, -44.2256, -67.1551, 1.84 ) }
    dend_49 { pt3dadd( -29.0726, -44.6521, -67.5877, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.76245, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.76245, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.93977, -2.57717, 2.12143, 1.92 ) }
    dend_42 { pt3dadd( -7.68539, -4.19268, 2.04561, 1.92 ) }
    dend_42 { pt3dadd( -8.45428, -5.66654, 1.96912, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -9.04698, -6.66328, 1.90443, 2.36 ) }
    dend_42 { pt3dadd( -9.88685, -7.86939, 1.81525, 2.28 ) }
    dend_42 { pt3dadd( -10.8096, -8.98296, 1.71324, 2.36 ) }
    dend_42 { pt3dadd( -11.8419, -10.0134, 1.5808, 2.36 ) }
    dend_42 { pt3dadd( -13.4443, -11.1686, 1.39177, 1.77 ) }
    dend_42 { pt3dadd( -14.3256, -11.5488, 1.32553, 1.77 ) }
    dend_42 { pt3dadd( -15.7075, -11.8586, 1.2887, 1.99 ) }
    dend_42 { pt3dadd( -16.939, -11.9858, 1.36688, 1.99 ) }
    dend_42 { pt3dadd( -17.5483, -12.009, 1.44211, 1.99 ) }
    dend_42 { pt3dadd( -18.4566, -12.0552, 1.60415, 1.77 ) }
    dend_42 { pt3dadd( -19.8624, -12.3125, 1.96785, 1.47 ) }
    dend_42 { pt3dadd( -20.877, -12.6931, 2.25494, 1.47 ) }
    dend_42 { pt3dadd( -22.156, -13.4684, 2.5781, 1.33 ) }
    dend_42 { pt3dadd( -22.7373, -13.9427, 2.68636, 1.99 ) }
    dend_42 { pt3dadd( -23.7255, -14.9123, 2.79483, 1.99 ) }
    dend_42 { pt3dadd( -24.8637, -16.1723, 2.80936, 1.77 ) }
    dend_42 { pt3dadd( -26.1227, -17.7118, 2.69857, 1.92 ) }
    dend_42 { pt3dadd( -27.2869, -19.1749, 2.46104, 1.69 ) }
    dend_42 { pt3dadd( -28.0027, -20.0244, 2.23082, 1.69 ) }
    dend_42 { pt3dadd( -28.8997, -20.9811, 1.89169, 1.84 ) }
    dend_42 { pt3dadd( -29.7179, -21.7812, 1.57922, 1.84 ) }
    dend_42 { pt3dadd( -30.777, -22.7806, 1.19123, 1.69 ) }
    dend_42 { pt3dadd( -31.941, -23.8939, 0.828099, 1.55 ) }
    dend_42 { pt3dadd( -33.1164, -25.0987, 0.553782, 1.4 ) }
    dend_42 { pt3dadd( -34.0794, -26.0906, 0.358291, 1.25 ) }
    dend_42 { pt3dadd( -35.0871, -27.1753, 0.176768, 1.33 ) }
    dend_42 { pt3dadd( -36.0414, -28.3031, 0.0711771, 1.47 ) }
    dend_42 { pt3dadd( -36.9348, -29.4995, 0.114, 1.62 ) }
    dend_42 { pt3dadd( -37.5665, -30.6187, 0.336499, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -9.13344, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -9.13344, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.665788, -10.7462, -4.83209, 2.95 ) }
    dend_27 { pt3dadd( 0.977142, -13.2491, -4.72434, 2.8 ) }
    dend_27 { pt3dadd( 1.15667, -14.9264, -4.62168, 2.8 ) }
    dend_27 { pt3dadd( 1.31304, -16.8019, -4.49231, 3.02 ) }
    dend_27 { pt3dadd( 1.38786, -18.0467, -4.4057, 3.02 ) }
    dend_27 { pt3dadd( 1.41916, -19.2677, -4.3162, 3.02 ) }
    dend_27 { pt3dadd( 1.38898, -21.1076, -4.17894, 3.02 ) }
    dend_27 { pt3dadd( 1.26662, -23.0539, -4.02799, 2.36 ) }
    dend_27 { pt3dadd( 0.938226, -26.4585, -3.86301, 2.36 ) }
    dend_27 { pt3dadd( 0.701158, -28.3657, -3.84692, 2.43 ) }
    dend_27 { pt3dadd( 0.428435, -30.2117, -3.88803, 2.43 ) }
    dend_27 { pt3dadd( 0.071965, -32.3755, -4.0047, 2.43 ) }
    dend_27 { pt3dadd( -0.482283, -35.363, -4.24281, 2.28 ) }
    dend_27 { pt3dadd( -1.07952, -38.4282, -4.5543, 2.14 ) }
    dend_27 { pt3dadd( -1.91333, -42.4889, -5.04166, 2.06 ) }
    dend_27 { pt3dadd( -2.49202, -45.3072, -5.42232, 2.43 ) }
    dend_27 { pt3dadd( -2.85755, -47.102, -5.69861, 2.58 ) }
    dend_27 { pt3dadd( -3.24949, -48.9932, -6.02912, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 8.00255, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.469153, 8.8341, -7.59391, 1.62 ) }
    dend_20 { pt3dadd( -0.607912, 10.0575, -7.62892, 1.92 ) }
    dend_20 { pt3dadd( -0.817172, 11.6917, -7.68946, 1.33 ) }
    dend_20 { pt3dadd( -1.08109, 13.4507, -7.77864, 1.69 ) }
    dend_20 { pt3dadd( -1.29755, 14.7522, -7.82402, 2.21 ) }
    dend_20 { pt3dadd( -1.48309, 15.8402, -7.81621, 2.21 ) }
    dend_20 { pt3dadd( -1.70649, 17.065, -7.762, 1.99 ) }
    dend_20 { pt3dadd( -1.91614, 18.1065, -7.67971, 1.77 ) }
    dend_20 { pt3dadd( -2.1651, 19.2651, -7.55871, 1.99 ) }
    dend_20 { pt3dadd( -2.4351, 20.4914, -7.42576, 1.99 ) }
    dend_20 { pt3dadd( -2.89661, 22.6457, -7.23191, 1.11 ) }
    dend_20 { pt3dadd( -3.1815, 23.9925, -7.14875, 1.11 ) }
    dend_20 { pt3dadd( -3.48678, 25.3475, -7.11574, 1.25 ) }
    dend_20 { pt3dadd( -3.77784, 26.4853, -7.11006, 1.4 ) }
    dend_20 { pt3dadd( -4.15883, 27.7289, -7.17588, 0.81 ) }
    dend_20 { pt3dadd( -4.60753, 28.9068, -7.34411, 0.74 ) }
    dend_20 { pt3dadd( -4.9641, 29.677, -7.5232, 0.74 ) }
    dend_20 { pt3dadd( -5.40363, 30.5125, -7.76545, 0.74 ) }
    dend_20 { pt3dadd( -5.91442, 31.4225, -8.07349, 0.96 ) }
    dend_20 { pt3dadd( -6.39599, 32.279, -8.38459, 0.96 ) }
    dend_20 { pt3dadd( -6.89842, 33.1391, -8.70457, 1.55 ) }
    dend_20 { pt3dadd( -7.46593, 34.1033, -9.0763, 2.06 ) }
    dend_20 { pt3dadd( -7.94607, 34.9812, -9.42298, 2.43 ) }
    dend_20 { pt3dadd( -8.49673, 36.1635, -9.89361, 2.36 ) }
    dend_20 { pt3dadd( -9.12019, 37.774, -10.5182, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 8.75855, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.38053, 8.89549, 0.346975, 2.5 ) }
    dend_11 { pt3dadd( -3.31733, 10.8139, 0.310774, 1.77 ) }
    dend_11 { pt3dadd( -3.97121, 12.1103, 0.317465, 1.55 ) }
    dend_11 { pt3dadd( -4.73812, 13.5858, 0.379919, 1.55 ) }
    dend_11 { pt3dadd( -5.32247, 14.7118, 0.467042, 1.33 ) }
    dend_11 { pt3dadd( -6.21407, 16.4581, 0.652429, 1.33 ) }
    dend_11 { pt3dadd( -6.77162, 17.5251, 0.795071, 1.55 ) }
    dend_11 { pt3dadd( -7.61285, 19.1056, 1.03749, 1.55 ) }
    dend_11 { pt3dadd( -8.48651, 20.8244, 1.30638, 1.62 ) }
    dend_11 { pt3dadd( -9.18404, 22.3563, 1.53222, 1.4 ) }
    dend_11 { pt3dadd( -9.83437, 24.0423, 1.75278, 1.4 ) }
    dend_11 { pt3dadd( -10.2043, 25.078, 1.88977, 1.4 ) }
    dend_11 { pt3dadd( -10.7796, 26.7437, 2.098, 1.4 ) }
    dend_11 { pt3dadd( -11.3257, 28.4075, 2.24335, 1.4 ) }
    dend_11 { pt3dadd( -11.9398, 30.4642, 2.3419, 1.77 ) }
    dend_11 { pt3dadd( -12.4568, 32.3093, 2.36033, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 4.41155, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.88055, 4.46482, 1.35102, 2.58 ) }
    dend_0 { pt3dadd( 7.53595, 5.15329, 1.41946, 2.58 ) }
    dend_0 { pt3dadd( 8.27958, 5.94256, 1.52012, 1.84 ) }
    dend_0 { pt3dadd( 8.83008, 6.5152, 1.60942, 2.06 ) }
    dend_0 { pt3dadd( 9.54085, 7.25251, 1.74296, 2.06 ) }
    dend_0 { pt3dadd( 10.0105, 7.72841, 1.86158, 2.58 ) }
    dend_0 { pt3dadd( 10.5318, 8.25306, 2.02334, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 10.8764, 8.60561, 2.15404, 2.58 ) }
    dend_0 { pt3dadd( 11.488, 9.20315, 2.41533, 2.58 ) }
    dend_0 { pt3dadd( 11.9183, 9.59368, 2.60935, 2.43 ) }
    dend_0 { pt3dadd( 12.8196, 10.3644, 3.05093, 2.21 ) }
    dend_0 { pt3dadd( 13.4771, 10.894, 3.38638, 1.99 ) }
    dend_0 { pt3dadd( 14.0047, 11.2942, 3.63931, 1.99 ) }
    dend_0 { pt3dadd( 14.689, 11.737, 3.93487, 1.69 ) }
    dend_0 { pt3dadd( 15.261, 11.9903, 4.15183, 1.69 ) }
    dend_0 { pt3dadd( 16.274, 12.1361, 4.48478, 2.06 ) }
    dend_0 { pt3dadd( 16.9097, 12.0193, 4.6579, 2.06 ) }
    dend_0 { pt3dadd( 18.4119, 11.332, 5.05981, 1.69 ) }
    dend_0 { pt3dadd( 19.4451, 10.737, 5.32093, 1.92 ) }
    dend_0 { pt3dadd( 21.0604, 9.58413, 5.7003, 1.92 ) }
    dend_0 { pt3dadd( 22.5985, 8.25737, 6.02823, 2.06 ) }
    dend_0 { pt3dadd( 23.3871, 7.43065, 6.1766, 2.28 ) }
    dend_0 { pt3dadd( 23.9785, 6.67744, 6.29585, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.834326 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.834326 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.834326 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -29.0726, -44.6521, -67.5877, 0.96 ) }
    dend_51 { pt3dadd( -27.6759, -47.3563, -73.5461, 0.96 ) }
    dend_51 { pt3dadd( -27.4149, -47.9779, -74.6672, 0.96 ) }
    dend_51 { pt3dadd( -27.0881, -48.8336, -75.9992, 0.96 ) }
    dend_51 { pt3dadd( -26.6404, -50.045, -77.7164, 1.55 ) }
    dend_51 { pt3dadd( -26.2909, -51.0765, -79.0285, 0.22 ) }
    dend_51 { pt3dadd( -25.9205, -52.2888, -80.3339, 0.22 ) }
    dend_51 { pt3dadd( -25.7386, -53.0963, -80.8692, 1.11 ) }
    dend_51 { pt3dadd( -25.5819, -53.861, -81.3061, 1.4 ) }
    dend_51 { pt3dadd( -25.3268, -54.8994, -81.813, 1.4 ) }
    dend_51 { pt3dadd( -24.6949, -57.1381, -82.7671, 0.22 ) }
    dend_51 { pt3dadd( -23.9163, -59.4224, -83.6855, 0.22 ) }
    dend_51 { pt3dadd( -23.6222, -60.1693, -83.9772, 0.74 ) }
    dend_51 { pt3dadd( -23.4534, -60.5687, -84.1211, 0.74 ) }
    dend_51 { pt3dadd( -22.5224, -62.6987, -84.8251, 0.15 ) }
    dend_51 { pt3dadd( -22.3701, -63.0291, -84.9205, 0.37 ) }
    dend_51 { pt3dadd( -21.4337, -64.8211, -85.3874, 0.22 ) }
    dend_51 { pt3dadd( -20.8633, -65.811, -85.6781, 0.22 ) }
    dend_51 { pt3dadd( -20.4095, -66.601, -85.9067, 0.74 ) }
    dend_51 { pt3dadd( -19.9879, -67.4106, -86.1173, 0.88 ) }
    dend_51 { pt3dadd( -19.8828, -67.6903, -86.177, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -29.0726, -44.6521, -67.5877, 2.87 ) }
    dend_50 { pt3dadd( -29.8843, -44.9224, -67.7034, 2.87 ) }
    dend_50 { pt3dadd( -32.4478, -46.0014, -68.1807, 0.22 ) }
    dend_50 { pt3dadd( -34.7684, -47.2993, -68.6763, 0.22 ) }
    dend_50 { pt3dadd( -35.8898, -47.9956, -68.9224, 1.69 ) }
    dend_50 { pt3dadd( -36.2424, -48.23, -69.0004, 2.21 ) }
    dend_50 { pt3dadd( -36.8156, -48.6287, -69.1275, 2.21 ) }
    dend_50 { pt3dadd( -38.9217, -50.31, -69.5829, 0.22 ) }
    dend_50 { pt3dadd( -40.7728, -52.1055, -70.0367, 0.22 ) }
    dend_50 { pt3dadd( -41.3465, -52.7124, -70.1897, 1.25 ) }
    dend_50 { pt3dadd( -41.8149, -53.2137, -70.3159, 1.25 ) }
    dend_50 { pt3dadd( -42.4368, -53.8713, -70.4921, 1.25 ) }
    dend_50 { pt3dadd( -43.7055, -55.1244, -70.849, 0.15 ) }
    dend_50 { pt3dadd( -44.4253, -55.8049, -71.044, 0.15 ) }
    dend_50 { pt3dadd( -44.9927, -56.2833, -71.2038, 0.96 ) }
    dend_50 { pt3dadd( -45.6375, -56.7727, -71.406, 1.18 ) }
    dend_50 { pt3dadd( -45.9335, -56.9678, -71.5026, 1.18 ) }
    dend_50 { pt3dadd( -47.8457, -58.0431, -72.2326, 0.22 ) }
    dend_50 { pt3dadd( -48.3547, -58.25, -72.4493, 0.52 ) }
    dend_50 { pt3dadd( -48.8177, -58.4094, -72.6509, 0.52 ) }
    dend_50 { pt3dadd( -50.0091, -58.7785, -73.1614, 0.22 ) }
    dend_50 { pt3dadd( -50.7487, -58.9991, -73.4865, 1.25 ) }
    dend_50 { pt3dadd( -51.835, -59.3662, -73.9494, 1.4 ) }
    dend_50 { pt3dadd( -53.9302, -60.2825, -74.9051, 0.22 ) }
    dend_50 { pt3dadd( -55.3601, -61.1043, -75.5709, 0.22 ) }
    dend_50 { pt3dadd( -55.9014, -61.5053, -75.8312, 0.74 ) }
    dend_50 { pt3dadd( -56.5937, -62.1679, -76.1719, 0.88 ) }
    dend_50 { pt3dadd( -57.5522, -63.518, -76.8223, 0.22 ) }
    dend_50 { pt3dadd( -58.3066, -65.2752, -77.4914, 0.22 ) }
    dend_50 { pt3dadd( -58.5998, -66.4301, -77.8704, 1.99 ) }
    dend_50 { pt3dadd( -58.7129, -67.1399, -78.0673, 2.36 ) }
    dend_50 { pt3dadd( -58.7973, -67.8373, -78.2587, 2.36 ) }
    dend_50 { pt3dadd( -59.1087, -71.7549, -79.3199, 0.15 ) }
    dend_50 { pt3dadd( -59.197, -74.1895, -80.0209, 0.15 ) }
    dend_50 { pt3dadd( -59.2038, -74.8236, -80.1803, 0.44 ) }
    dend_50 { pt3dadd( -59.1819, -76.0457, -80.4591, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -37.5665, -30.6187, 0.336499, 0.96 ) }
    dend_44 { pt3dadd( -38.5212, -31.0018, -0.0216069, 0.96 ) }
    dend_44 { pt3dadd( -39.4303, -31.4004, -0.36867, 1.25 ) }
    dend_44 { pt3dadd( -40.7403, -31.9741, -0.862989, 1.25 ) }
    dend_44 { pt3dadd( -43.0232, -32.8944, -1.66085, 1.18 ) }
    dend_44 { pt3dadd( -44.5774, -33.4477, -2.15263, 1.11 ) }
    dend_44 { pt3dadd( -45.7747, -33.8436, -2.51908, 0.88 ) }
    dend_44 { pt3dadd( -47.3514, -34.3753, -3.02608, 0.96 ) }
    dend_44 { pt3dadd( -48.2539, -34.6796, -3.32433, 0.96 ) }
    dend_44 { pt3dadd( -49.5787, -35.1369, -3.77038, 0.96 ) }
    dend_44 { pt3dadd( -50.8847, -35.5928, -4.13611, 0.96 ) }
    dend_44 { pt3dadd( -51.9955, -35.968, -4.38242, 1.18 ) }
    dend_44 { pt3dadd( -53.3617, -36.4072, -4.62549, 1.03 ) }
    dend_44 { pt3dadd( -54.0382, -36.6017, -4.6766, 1.03 ) }
    dend_44 { pt3dadd( -55.4537, -36.9524, -4.62678, 1.18 ) }
    dend_44 { pt3dadd( -56.3139, -37.123, -4.46873, 1.18 ) }
    dend_44 { pt3dadd( -58.2521, -37.3767, -3.73136, 0.96 ) }
    dend_44 { pt3dadd( -58.9634, -37.423, -3.39053, 1.11 ) }
    dend_44 { pt3dadd( -60.3485, -37.4815, -2.65406, 1.11 ) }
    dend_44 { pt3dadd( -61.4585, -37.5588, -2.05004, 1.11 ) }
    dend_44 { pt3dadd( -62.7643, -37.7043, -1.33928, 1.11 ) }
    dend_44 { pt3dadd( -64.5074, -38.056, -0.409299, 1.55 ) }
    dend_44 { pt3dadd( -65.7546, -38.4593, 0.206091, 1.03 ) }
    dend_44 { pt3dadd( -67.2462, -39.1418, 0.920691, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -68.5177, -39.9221, 1.48782, 0.74 ) }
    dend_44 { pt3dadd( -69.2453, -40.5027, 1.78923, 0.74 ) }
    dend_44 { pt3dadd( -70.1834, -41.4517, 2.10349, 0.74 ) }
    dend_44 { pt3dadd( -71.1131, -42.6027, 2.32384, 0.66 ) }
    dend_44 { pt3dadd( -71.9437, -43.794, 2.47789, 0.88 ) }
    dend_44 { pt3dadd( -72.4851, -44.6641, 2.54124, 1.03 ) }
    dend_44 { pt3dadd( -73.0486, -45.689, 2.58403, 1.03 ) }
    dend_44 { pt3dadd( -73.7685, -47.0097, 2.61884, 0.88 ) }
    dend_44 { pt3dadd( -74.6673, -48.5617, 2.6403, 0.88 ) }
    dend_44 { pt3dadd( -75.1774, -49.3395, 2.63912, 0.88 ) }
    dend_44 { pt3dadd( -75.9369, -50.2946, 2.63858, 0.88 ) }
    dend_44 { pt3dadd( -77.4216, -51.8236, 2.64522, 0.88 ) }
    dend_44 { pt3dadd( -78.2928, -52.5158, 2.65059, 0.88 ) }
    dend_44 { pt3dadd( -79.5448, -53.2415, 2.66078, 0.88 ) }
    dend_44 { pt3dadd( -80.39, -53.5743, 2.66321, 0.96 ) }
    dend_44 { pt3dadd( -81.3867, -53.8639, 2.63701, 0.96 ) }
    dend_44 { pt3dadd( -82.2934, -54.0516, 2.61599, 0.96 ) }
    dend_44 { pt3dadd( -83.3091, -54.2276, 2.6017, 0.52 ) }
    dend_44 { pt3dadd( -84.0016, -54.4738, 2.60697, 0.52 ) }
    dend_44 { pt3dadd( -84.5207, -54.9162, 2.66109, 0.52 ) }
    dend_44 { pt3dadd( -85.0216, -55.7458, 2.84217, 0.81 ) }
    dend_44 { pt3dadd( -85.4035, -56.6239, 3.08242, 0.96 ) }
    dend_44 { pt3dadd( -85.6764, -57.6388, 3.3755, 0.96 ) }
    dend_44 { pt3dadd( -85.9691, -59.4576, 3.90962, 0.81 ) }
    dend_44 { pt3dadd( -86.0602, -60.3478, 4.18014, 0.81 ) }
    dend_44 { pt3dadd( -86.1306, -61.475, 4.56904, 1.11 ) }
    dend_44 { pt3dadd( -86.2091, -62.1128, 4.83689, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -37.5665, -30.6187, 0.336499, 1.33 ) }
    dend_43 { pt3dadd( -38.3559, -30.8479, 1.01755, 1.33 ) }
    dend_43 { pt3dadd( -39.1221, -31.0968, 1.58799, 1.18 ) }
    dend_43 { pt3dadd( -40.5623, -31.5299, 2.6097, 0.88 ) }
    dend_43 { pt3dadd( -41.2596, -31.7051, 3.06234, 0.74 ) }
    dend_43 { pt3dadd( -42.2853, -31.9071, 3.6525, 0.74 ) }
    dend_43 { pt3dadd( -43.3283, -32.0453, 4.24762, 0.74 ) }
    dend_43 { pt3dadd( -44.1163, -32.127, 4.66634, 0.59 ) }
    dend_43 { pt3dadd( -45.0432, -32.1692, 5.15096, 0.59 ) }
    dend_43 { pt3dadd( -45.7728, -32.1523, 5.53596, 0.52 ) }
    dend_43 { pt3dadd( -46.5073, -32.0454, 5.98348, 0.52 ) }
    dend_43 { pt3dadd( -47.8883, -31.656, 6.94297, 0.74 ) }
    dend_43 { pt3dadd( -48.7621, -31.3249, 7.61759, 0.59 ) }
    dend_43 { pt3dadd( -49.567, -31.0084, 8.26368, 0.44 ) }
    dend_43 { pt3dadd( -50.4346, -30.7206, 8.98445, 0.37 ) }
    dend_43 { pt3dadd( -51.1293, -30.5714, 9.56945, 0.66 ) }
    dend_43 { pt3dadd( -51.7532, -30.5458, 10.0095, 0.66 ) }
    dend_43 { pt3dadd( -52.1628, -30.5975, 10.2073, 0.66 ) }
    dend_43 { pt3dadd( -52.7054, -30.7013, 10.4375, 0.44 ) }
    dend_43 { pt3dadd( -53.3356, -30.8675, 10.674, 0.44 ) }
    dend_43 { pt3dadd( -54.4604, -31.1701, 11.0672, 0.44 ) }
    dend_43 { pt3dadd( -56.013, -31.6266, 11.6148, 0.74 ) }
    dend_43 { pt3dadd( -56.9334, -31.9327, 11.9354, 0.74 ) }
    dend_43 { pt3dadd( -58.2051, -32.3422, 12.3617, 0.52 ) }
    dend_43 { pt3dadd( -59.3946, -32.7076, 12.7468, 0.59 ) }
    dend_43 { pt3dadd( -60.416, -33.0136, 13.0597, 0.44 ) }
    dend_43 { pt3dadd( -61.8356, -33.5005, 13.4935, 0.37 ) }
    dend_43 { pt3dadd( -62.8567, -33.9486, 13.8097, 0.37 ) }
    dend_43 { pt3dadd( -63.9683, -34.6025, 14.1247, 0.29 ) }
    dend_43 { pt3dadd( -64.496, -35.0299, 14.2589, 0.29 ) }
    dend_43 { pt3dadd( -65.1161, -35.6804, 14.4635, 0.29 ) }
    dend_43 { pt3dadd( -65.6439, -36.3011, 14.6801, 0.37 ) }
    dend_43 { pt3dadd( -66.2395, -37.0291, 14.9819, 0.37 ) }
    dend_43 { pt3dadd( -66.8425, -37.7335, 15.341, 0.37 ) }
    dend_43 { pt3dadd( -67.4893, -38.5629, 15.782, 0.66 ) }
    dend_43 { pt3dadd( -68.1339, -39.3691, 16.243, 0.81 ) }
    dend_43 { pt3dadd( -68.6317, -39.9253, 16.6029, 0.81 ) }
    dend_43 { pt3dadd( -69.3628, -40.5874, 17.0988, 0.22 ) }
    dend_43 { pt3dadd( -70.2639, -41.2633, 17.6893, 0.22 ) }
    dend_43 { pt3dadd( -79.1353, -42.7362, 22.086, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.24949, -48.9932, -6.02912, 1.55 ) }
    dend_33 { pt3dadd( -2.84366, -50.3128, -5.96473, 1.55 ) }
    dend_33 { pt3dadd( -2.44046, -51.6567, -5.89755, 1.55 ) }
    dend_33 { pt3dadd( -2.09937, -52.8378, -5.8435, 1.55 ) }
    dend_33 { pt3dadd( -1.72603, -54.1778, -5.77679, 1.69 ) }
    dend_33 { pt3dadd( -1.45999, -55.2061, -5.72137, 1.69 ) }
    dend_33 { pt3dadd( -1.28445, -55.9753, -5.68051, 1.69 ) }
    dend_33 { pt3dadd( -1.04977, -57.2522, -5.61378, 1.55 ) }
    dend_33 { pt3dadd( -0.802728, -58.9238, -5.53266, 1.47 ) }
    dend_33 { pt3dadd( -0.6692, -60.317, -5.45715, 1.33 ) }
    dend_33 { pt3dadd( -0.626271, -61.6532, -5.37845, 1.33 ) }
    dend_33 { pt3dadd( -0.687194, -63.4283, -5.27278, 1.33 ) }
    dend_33 { pt3dadd( -0.829299, -64.7307, -5.18419, 1.11 ) }
    dend_33 { pt3dadd( -0.988008, -65.5514, -5.12061, 1.11 ) }
    dend_33 { pt3dadd( -1.46051, -67.3401, -4.96785, 1.25 ) }
    dend_33 { pt3dadd( -1.84137, -68.5281, -4.86248, 1.25 ) }
    dend_33 { pt3dadd( -2.22616, -69.5975, -4.76668, 1.25 ) }
    dend_33 { pt3dadd( -2.7963, -71.0827, -4.64584, 1.4 ) }
    dend_33 { pt3dadd( -3.37832, -72.5479, -4.54349, 1.4 ) }
    dend_33 { pt3dadd( -3.83619, -73.737, -4.48577, 1.55 ) }
    dend_33 { pt3dadd( -4.12657, -74.6136, -4.47729, 1.55 ) }
    dend_33 { pt3dadd( -4.4746, -75.9125, -4.50138, 1.33 ) }
    dend_33 { pt3dadd( -4.81036, -77.5373, -4.5877, 0.96 ) }
    dend_33 { pt3dadd( -4.90539, -78.1821, -4.64755, 0.81 ) }
    dend_33 { pt3dadd( -4.97979, -78.9082, -4.71968, 0.81 ) }
    dend_33 { pt3dadd( -5.09202, -80.5867, -4.87628, 0.96 ) }
    dend_33 { pt3dadd( -5.13244, -81.7495, -4.96678, 1.33 ) }
    dend_33 { pt3dadd( -5.15861, -83.0329, -5.0441, 1.69 ) }
    dend_33 { pt3dadd( -5.18342, -83.8104, -5.07377, 1.84 ) }
    dend_33 { pt3dadd( -5.23063, -84.6918, -5.08417, 1.99 ) }
    dend_33 { pt3dadd( -5.33529, -85.734, -5.06561, 2.06 ) }
    dend_33 { pt3dadd( -5.44084, -86.625, -5.02898, 2.06 ) }
    dend_33 { pt3dadd( -5.55001, -87.5314, -4.95788, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -5.65698, -88.4986, -4.84026, 1.62 ) }
    dend_33 { pt3dadd( -5.76614, -89.6607, -4.66093, 1.18 ) }
    dend_33 { pt3dadd( -5.83157, -90.5915, -4.5047, 0.88 ) }
    dend_33 { pt3dadd( -5.90822, -91.8636, -4.27087, 0.88 ) }
    dend_33 { pt3dadd( -5.95559, -92.7389, -4.0803, 1.03 ) }
    dend_33 { pt3dadd( -6.00779, -93.6391, -3.85866, 1.11 ) }
    dend_33 { pt3dadd( -6.06014, -94.2799, -3.69343, 1.11 ) }
    dend_33 { pt3dadd( -6.26642, -95.8779, -3.28279, 1.03 ) }
    dend_33 { pt3dadd( -6.44891, -96.9203, -3.01841, 1.18 ) }
    dend_33 { pt3dadd( -6.61706, -97.7711, -2.81688, 1.25 ) }
    dend_33 { pt3dadd( -6.88828, -99.0657, -2.54237, 1.18 ) }
    dend_33 { pt3dadd( -7.15256, -100.24, -2.32829, 1.03 ) }
    dend_33 { pt3dadd( -7.44415, -101.411, -2.14979, 0.96 ) }
    dend_33 { pt3dadd( -7.79014, -102.68, -2.00219, 0.88 ) }
    dend_33 { pt3dadd( -8.04674, -103.527, -1.94551, 0.88 ) }
    dend_33 { pt3dadd( -8.49047, -104.803, -1.96704, 1.25 ) }
    dend_33 { pt3dadd( -8.98139, -106.075, -2.0737, 1.55 ) }
    dend_33 { pt3dadd( -9.36288, -107.048, -2.19678, 1.62 ) }
    dend_33 { pt3dadd( -9.64798, -107.827, -2.3107, 1.62 ) }
    dend_33 { pt3dadd( -9.98207, -108.848, -2.4636, 1.4 ) }
    dend_33 { pt3dadd( -10.3988, -110.294, -2.65891, 1.11 ) }
    dend_33 { pt3dadd( -10.7458, -111.786, -2.82684, 1.11 ) }
    dend_33 { pt3dadd( -11.0436, -113.435, -2.94835, 1.11 ) }
    dend_33 { pt3dadd( -11.3045, -115.193, -3.0355, 1.11 ) }
    dend_33 { pt3dadd( -11.4747, -116.48, -3.0736, 1.4 ) }
    dend_33 { pt3dadd( -11.6343, -117.814, -3.09308, 1.4 ) }
    dend_33 { pt3dadd( -11.8692, -119.893, -3.09308, 1.25 ) }
    dend_33 { pt3dadd( -12.1096, -122.023, -3.09914, 1.25 ) }
    dend_33 { pt3dadd( -12.2791, -123.423, -3.10641, 1.62 ) }
    dend_33 { pt3dadd( -12.4443, -124.65, -3.12577, 1.77 ) }
    dend_33 { pt3dadd( -12.6655, -126.292, -3.17652, 1.33 ) }
    dend_33 { pt3dadd( -12.8585, -127.779, -3.23132, 0.88 ) }
    dend_33 { pt3dadd( -13.0395, -129.437, -3.30785, 1.25 ) }
    dend_33 { pt3dadd( -13.114, -130.259, -3.35586, 1.84 ) }
    dend_33 { pt3dadd( -13.1726, -131.18, -3.42183, 2.28 ) }
    dend_33 { pt3dadd( -13.2085, -132.133, -3.50796, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -3.24949, -48.9932, -6.02912, 2.14 ) }
    dend_28 { pt3dadd( -3.10796, -49.6956, -6.21897, 2.14 ) }
    dend_28 { pt3dadd( -2.85048, -50.8076, -6.47028, 2.14 ) }
    dend_28 { pt3dadd( -2.4102, -52.709, -6.9, 1.69 ) }
    dend_28 { pt3dadd( -2.04129, -54.3022, -7.26008, 1.84 ) }
    dend_28 { pt3dadd( -1.68289, -55.8499, -7.60988, 1.99 ) }
    dend_28 { pt3dadd( -1.39296, -57.102, -7.89286, 2.36 ) }
    dend_28 { pt3dadd( -1.16123, -58.021, -8.06444, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -9.12019, 37.774, -10.5182, 1.25 ) }
    dend_22 { pt3dadd( -8.74535, 38.9744, -10.7679, 1.25 ) }
    dend_22 { pt3dadd( -8.42946, 39.7806, -10.9197, 1.03 ) }
    dend_22 { pt3dadd( -8.00909, 40.7392, -11.0839, 0.81 ) }
    dend_22 { pt3dadd( -7.53821, 41.8128, -11.2494, 0.81 ) }
    dend_22 { pt3dadd( -7.12526, 42.8853, -11.3987, 1.11 ) }
    dend_22 { pt3dadd( -6.86594, 43.6644, -11.4966, 1.11 ) }
    dend_22 { pt3dadd( -6.58953, 44.577, -11.5672, 0.96 ) }
    dend_22 { pt3dadd( -6.26524, 45.7998, -11.6276, 0.66 ) }
    dend_22 { pt3dadd( -6.06967, 46.6465, -11.6646, 0.52 ) }
    dend_22 { pt3dadd( -5.84329, 47.7586, -11.7024, 0.52 ) }
    dend_22 { pt3dadd( -5.70225, 48.5856, -11.7273, 0.52 ) }
    dend_22 { pt3dadd( -5.39711, 50.3545, -11.8072, 1.18 ) }
    dend_22 { pt3dadd( -5.23512, 51.2598, -11.8572, 1.62 ) }
    dend_22 { pt3dadd( -5.10918, 51.9091, -11.9001, 1.69 ) }
    dend_22 { pt3dadd( -4.86703, 52.9841, -12.0009, 1.33 ) }
    dend_22 { pt3dadd( -4.71293, 53.5156, -12.0708, 0.74 ) }
    dend_22 { pt3dadd( -4.42844, 54.3301, -12.2083, 0.59 ) }
    dend_22 { pt3dadd( -3.94235, 55.6177, -12.4954, 0.66 ) }
    dend_22 { pt3dadd( -3.69065, 56.3141, -12.6681, 0.44 ) }
    dend_22 { pt3dadd( -3.52934, 56.8349, -12.798, 0.44 ) }
    dend_22 { pt3dadd( -3.27659, 57.7906, -13.0392, 0.37 ) }
    dend_22 { pt3dadd( -3.0604, 58.5952, -13.2353, 0.37 ) }
    dend_22 { pt3dadd( -2.87981, 59.1799, -13.3619, 0.37 ) }
    dend_22 { pt3dadd( -2.52527, 60.0996, -13.5782, 0.37 ) }
    dend_22 { pt3dadd( -2.1793, 60.9186, -13.7861, 0.44 ) }
    dend_22 { pt3dadd( -1.87491, 61.7162, -14.0161, 0.44 ) }
    dend_22 { pt3dadd( -1.46533, 63.0081, -14.429, 0.81 ) }
    dend_22 { pt3dadd( -1.20745, 63.9216, -14.7326, 1.03 ) }
    dend_22 { pt3dadd( -0.964141, 64.7467, -15.0189, 1.03 ) }
    dend_22 { pt3dadd( -0.741543, 65.4974, -15.3074, 0.81 ) }
    dend_22 { pt3dadd( -0.438515, 66.5936, -15.775, 0.29 ) }
    dend_22 { pt3dadd( -0.308712, 67.1391, -16.02, 0.29 ) }
    dend_22 { pt3dadd( -0.0582459, 68.4589, -16.6063, 1.77 ) }
    dend_22 { pt3dadd( 0.0174198, 68.8986, -16.7968, 2.36 ) }
    dend_22 { pt3dadd( 0.129011, 69.5077, -17.0378, 2.36 ) }
    dend_22 { pt3dadd( 0.365284, 70.6668, -17.4636, 2.28 ) }
    dend_22 { pt3dadd( 0.689306, 72.0575, -17.9252, 0.66 ) }
    dend_22 { pt3dadd( 0.874415, 72.8181, -18.1776, 0.88 ) }
    dend_22 { pt3dadd( 1.06496, 73.6101, -18.4441, 0.88 ) }
    dend_22 { pt3dadd( 1.27941, 74.4989, -18.7233, 0.37 ) }
    dend_22 { pt3dadd( 1.42551, 75.0992, -18.9033, 0.37 ) }
    dend_22 { pt3dadd( 1.71807, 76.3508, -19.253, 0.37 ) }
    dend_22 { pt3dadd( 1.92672, 77.2948, -19.5036, 1.11 ) }
    dend_22 { pt3dadd( 2.0796, 78.0493, -19.6955, 1.47 ) }
    dend_22 { pt3dadd( 2.17425, 78.589, -19.8239, 1.69 ) }
    dend_22 { pt3dadd( 2.30454, 79.5018, -20.0236, 1.33 ) }
    dend_22 { pt3dadd( 2.4156, 80.505, -20.2198, 0.44 ) }
    dend_22 { pt3dadd( 2.4623, 81.5726, -20.4016, 0.29 ) }
    dend_22 { pt3dadd( 2.46864, 82.4109, -20.5395, 0.52 ) }
    dend_22 { pt3dadd( 2.45714, 83.0376, -20.6406, 0.52 ) }
    dend_22 { pt3dadd( 2.41625, 84.0901, -20.8329, 0.29 ) }
    dend_22 { pt3dadd( 2.38985, 85.1735, -21.036, 0.29 ) }
    dend_22 { pt3dadd( 2.38131, 87.0834, -21.4237, 1.18 ) }
    dend_22 { pt3dadd( 2.38834, 87.8014, -21.5696, 1.62 ) }
    dend_22 { pt3dadd( 2.3956, 88.5662, -21.7124, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 2.4075, 89.5319, -21.8762, 1.33 ) }
    dend_22 { pt3dadd( 2.43578, 92.2871, -22.3211, 0.22 ) }
    dend_22 { pt3dadd( 2.46152, 94.051, -22.5896, 0.22 ) }
    dend_22 { pt3dadd( 2.48409, 95.6453, -22.8089, 0.22 ) }
    dend_22 { pt3dadd( 2.48681, 97.3303, -23.0103, 0.74 ) }
    dend_22 { pt3dadd( 2.47945, 98.2488, -23.1122, 1.03 ) }
    dend_22 { pt3dadd( 2.46871, 98.6818, -23.1552, 1.03 ) }
    dend_22 { pt3dadd( 2.37495, 100.063, -23.3209, 0.15 ) }
    dend_22 { pt3dadd( 2.3287, 100.593, -23.408, 0.15 ) }
    dend_22 { pt3dadd( 2.27081, 101.2, -23.5477, 0.44 ) }
    dend_22 { pt3dadd( 2.2171, 101.777, -23.7061, 0.66 ) }
    dend_22 { pt3dadd( 2.16858, 102.31, -23.8535, 0.66 ) }
    dend_22 { pt3dadd( 2.07282, 103.844, -24.2705, 1.55 ) }
    dend_22 { pt3dadd( 2.03403, 104.973, -24.5631, 2.58 ) }
    dend_22 { pt3dadd( 2.02735, 105.955, -24.8154, 2.58 ) }
    dend_22 { pt3dadd( 2.10714, 108.136, -25.3345, 0.29 ) }
    dend_22 { pt3dadd( 2.24246, 109.593, -25.6176, 0.29 ) }
    dend_22 { pt3dadd( 2.54223, 111.682, -25.924, 0.29 ) }
    dend_22 { pt3dadd( 2.8022, 112.994, -26.0543, 0.96 ) }
    dend_22 { pt3dadd( 2.9638, 113.667, -26.09, 0.96 ) }
    dend_22 { pt3dadd( 3.59066, 115.86, -26.1133, 0.22 ) }
    dend_22 { pt3dadd( 4.33712, 118.195, -26.0442, 0.22 ) }
    dend_22 { pt3dadd( 4.83948, 119.66, -25.9558, 1.77 ) }
    dend_22 { pt3dadd( 5.04754, 120.234, -25.9052, 2.36 ) }
    dend_22 { pt3dadd( 5.30665, 120.934, -25.8375, 2.5 ) }
    dend_22 { pt3dadd( 6.14357, 123.196, -25.6034, 0.15 ) }
    dend_22 { pt3dadd( 6.56053, 124.334, -25.493, 0.29 ) }
    dend_22 { pt3dadd( 6.83447, 125.097, -25.4331, 0.29 ) }
    dend_22 { pt3dadd( 7.17937, 126.071, -25.4032, 0.15 ) }
    dend_22 { pt3dadd( 7.51621, 127.069, -25.4299, 1.18 ) }
    dend_22 { pt3dadd( 7.72576, 127.688, -25.4766, 1.55 ) }
    dend_22 { pt3dadd( 7.95838, 128.376, -25.5532, 1.18 ) }
    dend_22 { pt3dadd( 8.12812, 128.872, -25.6224, 0.74 ) }
    dend_22 { pt3dadd( 8.6109, 130.411, -25.8479, 0.22 ) }
    dend_22 { pt3dadd( 8.9598, 131.612, -26.0279, 0.22 ) }
    dend_22 { pt3dadd( 9.51405, 133.715, -26.3033, 0.22 ) }
    dend_22 { pt3dadd( 9.78906, 134.846, -26.4296, 0.81 ) }
    dend_22 { pt3dadd( 9.89015, 135.3, -26.4716, 0.81 ) }
    dend_22 { pt3dadd( 10.4614, 138.14, -26.654, 0.22 ) }
    dend_22 { pt3dadd( 10.7101, 139.568, -26.6728, 0.22 ) }
    dend_22 { pt3dadd( 10.8927, 140.858, -26.6769, 1.25 ) }
    dend_22 { pt3dadd( 10.9185, 141.2, -26.6771, 1.69 ) }
    dend_22 { pt3dadd( 10.9295, 141.587, -26.6757, 1.69 ) }
    dend_22 { pt3dadd( 10.9262, 142.412, -26.6677, 1.33 ) }
    dend_22 { pt3dadd( 10.8935, 143.133, -26.6694, 0.59 ) }
    dend_22 { pt3dadd( 10.8007, 144.633, -26.7094, 0.22 ) }
    dend_22 { pt3dadd( 10.6897, 146.772, -26.8287, 0.22 ) }
    dend_22 { pt3dadd( 10.6225, 148.089, -26.9168, 1.03 ) }
    dend_22 { pt3dadd( 10.5927, 148.644, -26.9571, 1.03 ) }
    dend_22 { pt3dadd( 10.5784, 149.224, -26.9991, 1.03 ) }
    dend_22 { pt3dadd( 10.5878, 150.085, -27.0537, 0.52 ) }
    dend_22 { pt3dadd( 10.6783, 152.013, -27.139, 0.22 ) }
    dend_22 { pt3dadd( 10.7896, 152.942, -27.1774, 0.59 ) }
    dend_22 { pt3dadd( 10.895, 153.537, -27.198, 0.59 ) }
    dend_22 { pt3dadd( 11.4731, 156.153, -27.2667, 0.22 ) }
    dend_22 { pt3dadd( 11.6937, 156.965, -27.2789, 0.66 ) }
    dend_22 { pt3dadd( 11.8879, 157.545, -27.2857, 0.66 ) }
    dend_22 { pt3dadd( 12.3865, 158.89, -27.311, 0.15 ) }
    dend_22 { pt3dadd( 12.6761, 159.638, -27.3353, 0.81 ) }
    dend_22 { pt3dadd( 12.8744, 160.153, -27.3605, 0.81 ) }
    dend_22 { pt3dadd( 13.1575, 160.912, -27.4159, 0.81 ) }
    dend_22 { pt3dadd( 13.6568, 162.361, -27.5456, 0.22 ) }
    dend_22 { pt3dadd( 14.1414, 163.832, -27.7124, 1.33 ) }
    dend_22 { pt3dadd( 14.3346, 164.45, -27.7935, 1.55 ) }
    dend_22 { pt3dadd( 14.4488, 164.81, -27.8429, 1.55 ) }
    dend_22 { pt3dadd( 14.5702, 165.192, -27.9007, 1.03 ) }
    dend_22 { pt3dadd( 15.1504, 166.932, -28.1897, 0.22 ) }
    dend_22 { pt3dadd( 15.7062, 168.481, -28.4667, 0.22 ) }
    dend_22 { pt3dadd( 16.0257, 169.293, -28.6307, 0.22 ) }
    dend_22 { pt3dadd( 16.4005, 170.255, -28.8274, 1.25 ) }
    dend_22 { pt3dadd( 16.6272, 170.876, -28.9587, 1.77 ) }
    dend_22 { pt3dadd( 16.8146, 171.438, -29.083, 1.77 ) }
    dend_22 { pt3dadd( 16.9623, 171.912, -29.1979, 1.18 ) }
    dend_22 { pt3dadd( 17.1808, 172.664, -29.3889, 0.66 ) }
    dend_22 { pt3dadd( 17.8427, 174.952, -30.0197, 0.22 ) }
    dend_22 { pt3dadd( 18.2918, 176.481, -30.4851, 0.22 ) }
    dend_22 { pt3dadd( 18.6069, 177.523, -30.8008, 1.11 ) }
    dend_22 { pt3dadd( 18.8315, 178.193, -30.9972, 1.4 ) }
    dend_22 { pt3dadd( 19.0551, 178.788, -31.1695, 1.4 ) }
    dend_22 { pt3dadd( 19.3475, 179.478, -31.3879, 0.96 ) }
    dend_22 { pt3dadd( 20.2523, 181.428, -32.0576, 0.22 ) }
    dend_22 { pt3dadd( 21.2715, 183.455, -32.7598, 0.22 ) }
    dend_22 { pt3dadd( 22.0864, 185.008, -33.2873, 1.77 ) }
    dend_22 { pt3dadd( 22.3799, 185.555, -33.465, 2.65 ) }
    dend_22 { pt3dadd( 22.8505, 186.412, -33.7281, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.12019, 37.774, -10.5182, 0.66 ) }
    dend_21 { pt3dadd( -10.7568, 38.6391, -10.6049, 0.66 ) }
    dend_21 { pt3dadd( -11.4093, 38.9523, -10.6365, 0.66 ) }
    dend_21 { pt3dadd( -12.1745, 39.2888, -10.6666, 0.66 ) }
    dend_21 { pt3dadd( -13.0491, 39.6336, -10.7017, 1.11 ) }
    dend_21 { pt3dadd( -13.5925, 39.8209, -10.7267, 1.33 ) }
    dend_21 { pt3dadd( -14.4118, 40.093, -10.7667, 1.33 ) }
    dend_21 { pt3dadd( -15.3018, 40.3591, -10.8081, 0.96 ) }
    dend_21 { pt3dadd( -15.914, 40.5472, -10.8165, 0.88 ) }
    dend_21 { pt3dadd( -16.643, 40.7726, -10.8032, 0.88 ) }
    dend_21 { pt3dadd( -17.5057, 41.038, -10.7445, 0.37 ) }
    dend_21 { pt3dadd( -17.9486, 41.1704, -10.6943, 0.37 ) }
    dend_21 { pt3dadd( -18.7026, 41.3954, -10.5804, 0.81 ) }
    dend_21 { pt3dadd( -19.3527, 41.5982, -10.4634, 0.88 ) }
    dend_21 { pt3dadd( -19.9538, 41.7914, -10.3461, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -20.5872, 41.9999, -10.2124, 0.29 ) }
    dend_21 { pt3dadd( -20.9921, 42.127, -10.1321, 0.29 ) }
    dend_21 { pt3dadd( -21.6996, 42.2991, -10.0234, 0.74 ) }
    dend_21 { pt3dadd( -22.2291, 42.4102, -9.96499, 0.74 ) }
    dend_21 { pt3dadd( -22.5319, 42.4875, -9.92821, 0.74 ) }
    dend_21 { pt3dadd( -22.8795, 42.6062, -9.86084, 0.74 ) }
    dend_21 { pt3dadd( -23.3033, 42.7725, -9.75274, 0.59 ) }
    dend_21 { pt3dadd( -23.7137, 42.9289, -9.61982, 0.59 ) }
    dend_21 { pt3dadd( -24.0712, 43.0532, -9.47194, 0.37 ) }
    dend_21 { pt3dadd( -25.0382, 43.3303, -9.04887, 0.37 ) }
    dend_21 { pt3dadd( -25.7205, 43.4782, -8.74273, 0.37 ) }
    dend_21 { pt3dadd( -26.0859, 43.5347, -8.57788, 0.22 ) }
    dend_21 { pt3dadd( -26.703, 43.5962, -8.30672, 0.22 ) }
    dend_21 { pt3dadd( -27.0383, 43.6072, -8.17713, 0.22 ) }
    dend_21 { pt3dadd( -28.0306, 43.6147, -7.84453, 1.03 ) }
    dend_21 { pt3dadd( -28.5252, 43.629, -7.70982, 1.4 ) }
    dend_21 { pt3dadd( -28.8215, 43.6545, -7.63556, 1.4 ) }
    dend_21 { pt3dadd( -29.5416, 43.764, -7.46829, 0.81 ) }
    dend_21 { pt3dadd( -30.465, 43.947, -7.28417, 0.22 ) }
    dend_21 { pt3dadd( -30.9647, 44.0535, -7.19437, 0.22 ) }
    dend_21 { pt3dadd( -31.975, 44.2833, -7.03714, 1.11 ) }
    dend_21 { pt3dadd( -32.4922, 44.4075, -6.96974, 1.4 ) }
    dend_21 { pt3dadd( -32.8602, 44.4971, -6.92903, 1.4 ) }
    dend_21 { pt3dadd( -33.721, 44.7041, -6.8514, 0.66 ) }
    dend_21 { pt3dadd( -34.5313, 44.8884, -6.78742, 0.52 ) }
    dend_21 { pt3dadd( -35.5138, 45.0816, -6.72146, 0.74 ) }
    dend_21 { pt3dadd( -36.1527, 45.2021, -6.68624, 0.88 ) }
    dend_21 { pt3dadd( -37.0597, 45.3845, -6.64435, 0.66 ) }
    dend_21 { pt3dadd( -37.7035, 45.5212, -6.6193, 0.66 ) }
    dend_21 { pt3dadd( -38.2317, 45.6399, -6.60459, 0.66 ) }
    dend_21 { pt3dadd( -39.2247, 45.883, -6.57406, 0.29 ) }
    dend_21 { pt3dadd( -40.0184, 46.0942, -6.52936, 1.03 ) }
    dend_21 { pt3dadd( -40.6908, 46.2842, -6.46934, 1.25 ) }
    dend_21 { pt3dadd( -40.9032, 46.355, -6.43366, 1.25 ) }
    dend_21 { pt3dadd( -41.4451, 46.5734, -6.30385, 0.81 ) }
    dend_21 { pt3dadd( -42.0909, 46.864, -6.10365, 0.29 ) }
    dend_21 { pt3dadd( -42.5047, 47.0676, -5.94235, 0.52 ) }
    dend_21 { pt3dadd( -42.7789, 47.2154, -5.82613, 0.66 ) }
    dend_21 { pt3dadd( -43.777, 47.7795, -5.40637, 0.22 ) }
    dend_21 { pt3dadd( -44.343, 48.1059, -5.18457, 0.22 ) }
    dend_21 { pt3dadd( -44.8092, 48.3739, -5.02445, 0.22 ) }
    dend_21 { pt3dadd( -45.4397, 48.7387, -4.85763, 0.22 ) }
    dend_21 { pt3dadd( -46.2926, 49.235, -4.67423, 0.59 ) }
    dend_21 { pt3dadd( -46.7827, 49.524, -4.59216, 0.81 ) }
    dend_21 { pt3dadd( -47.2411, 49.8106, -4.55418, 0.81 ) }
    dend_21 { pt3dadd( -47.9443, 50.2859, -4.52858, 0.52 ) }
    dend_21 { pt3dadd( -48.8909, 50.9716, -4.53259, 1.03 ) }
    dend_21 { pt3dadd( -49.458, 51.399, -4.55355, 1.18 ) }
    dend_21 { pt3dadd( -49.8788, 51.7306, -4.5814, 1.25 ) }
    dend_21 { pt3dadd( -50.816, 52.5016, -4.66515, 0.29 ) }
    dend_21 { pt3dadd( -51.6636, 53.2195, -4.7573, 0.74 ) }
    dend_21 { pt3dadd( -51.982, 53.493, -4.7978, 0.96 ) }
    dend_21 { pt3dadd( -52.2615, 53.7309, -4.84083, 0.96 ) }
    dend_21 { pt3dadd( -53.1945, 54.4967, -5.00047, 0.22 ) }
    dend_21 { pt3dadd( -53.5658, 54.7846, -5.06561, 0.22 ) }
    dend_21 { pt3dadd( -54.0757, 55.1529, -5.14821, 0.66 ) }
    dend_21 { pt3dadd( -54.4241, 55.3934, -5.2119, 0.88 ) }
    dend_21 { pt3dadd( -54.8381, 55.6656, -5.28651, 0.44 ) }
    dend_21 { pt3dadd( -55.3782, 56.0125, -5.37829, 0.37 ) }
    dend_21 { pt3dadd( -55.7041, 56.2175, -5.4259, 0.44 ) }
    dend_21 { pt3dadd( -56.1378, 56.5008, -5.48843, 0.44 ) }
    dend_21 { pt3dadd( -56.4498, 56.7073, -5.53369, 0.44 ) }
    dend_21 { pt3dadd( -57.0503, 57.1133, -5.61428, 0.22 ) }
    dend_21 { pt3dadd( -57.4412, 57.3871, -5.65487, 0.22 ) }
    dend_21 { pt3dadd( -57.9031, 57.7391, -5.69328, 0.29 ) }
    dend_21 { pt3dadd( -58.1726, 57.9597, -5.70575, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -12.4568, 32.3093, 2.36033, 1.47 ) }
    dend_13 { pt3dadd( -11.9957, 33.2761, 2.29932, 1.47 ) }
    dend_13 { pt3dadd( -11.5783, 34.3307, 2.2433, 0.81 ) }
    dend_13 { pt3dadd( -11.318, 35.1032, 2.20957, 0.81 ) }
    dend_13 { pt3dadd( -11.042, 36.1852, 2.17271, 0.81 ) }
    dend_13 { pt3dadd( -10.758, 37.503, 2.13574, 0.81 ) }
    dend_13 { pt3dadd( -10.4927, 38.9578, 2.10284, 0.81 ) }
    dend_13 { pt3dadd( -10.3195, 40.4108, 2.07537, 1.03 ) }
    dend_13 { pt3dadd( -10.2091, 41.7184, 2.05673, 1.03 ) }
    dend_13 { pt3dadd( -10.0742, 43.7202, 2.02576, 1.18 ) }
    dend_13 { pt3dadd( -9.99673, 44.9605, 2.01268, 1.18 ) }
    dend_13 { pt3dadd( -9.95997, 47.1168, 1.98679, 1.18 ) }
    dend_13 { pt3dadd( -9.98472, 48.651, 1.96529, 1.4 ) }
    dend_13 { pt3dadd( -9.99219, 49.7382, 1.94667, 1.4 ) }
    dend_13 { pt3dadd( -10.0043, 50.512, 1.92991, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.4568, 32.3093, 2.36033, 0.96 ) }
    dend_12 { pt3dadd( -14.4902, 33.2525, 1.77163, 0.96 ) }
    dend_12 { pt3dadd( -15.2188, 33.6129, 1.57886, 0.96 ) }
    dend_12 { pt3dadd( -16.2287, 34.1226, 1.31255, 0.96 ) }
    dend_12 { pt3dadd( -17.2797, 34.6722, 1.02441, 0.81 ) }
    dend_12 { pt3dadd( -18.1842, 35.1638, 0.777771, 0.81 ) }
    dend_12 { pt3dadd( -19.4311, 35.8616, 0.451552, 1.03 ) }
    dend_12 { pt3dadd( -20.2738, 36.3761, 0.231854, 1.03 ) }
    dend_12 { pt3dadd( -21.0538, 36.9426, 0.026973, 1.03 ) }
    dend_12 { pt3dadd( -22.0195, 37.759, -0.2294, 0.81 ) }
    dend_12 { pt3dadd( -22.7253, 38.3843, -0.415817, 0.81 ) }
    dend_12 { pt3dadd( -23.4991, 39.0952, -0.609484, 0.81 ) }
    dend_12 { pt3dadd( -24.408, 39.9867, -0.839405, 0.52 ) }
    dend_12 { pt3dadd( -25.241, 40.8963, -1.04242, 0.52 ) }
    dend_12 { pt3dadd( -25.7072, 41.4554, -1.13846, 0.52 ) }
    dend_12 { pt3dadd( -26.3717, 42.3187, -1.25596, 0.52 ) }
    dend_12 { pt3dadd( -27.1947, 43.4353, -1.39181, 0.52 ) }
    dend_12 { pt3dadd( -27.6254, 44.0481, -1.45453, 0.52 ) }
    dend_12 { pt3dadd( -28.0593, 44.6859, -1.49978, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -28.5655, 45.4497, -1.53212, 0.66 ) }
    dend_12 { pt3dadd( -29.0314, 46.2102, -1.54817, 0.88 ) }
    dend_12 { pt3dadd( -29.4807, 47.029, -1.55531, 0.88 ) }
    dend_12 { pt3dadd( -29.9785, 47.9932, -1.56505, 0.59 ) }
    dend_12 { pt3dadd( -30.4842, 48.9493, -1.58478, 0.88 ) }
    dend_12 { pt3dadd( -30.8504, 49.6368, -1.60713, 0.88 ) }
    dend_12 { pt3dadd( -31.1498, 50.251, -1.63439, 0.96 ) }
    dend_12 { pt3dadd( -31.4146, 50.8128, -1.66982, 0.96 ) }
    dend_12 { pt3dadd( -31.6559, 51.3029, -1.71031, 0.96 ) }
    dend_12 { pt3dadd( -32.0935, 52.1005, -1.79302, 0.74 ) }
    dend_12 { pt3dadd( -32.7958, 53.2693, -1.93808, 1.25 ) }
    dend_12 { pt3dadd( -33.2871, 54.0451, -2.04491, 1.25 ) }
    dend_12 { pt3dadd( -33.8476, 54.9098, -2.16724, 0.29 ) }
    dend_12 { pt3dadd( -34.2197, 55.4858, -2.24243, 0.29 ) }
    dend_12 { pt3dadd( -34.5943, 56.071, -2.30749, 0.66 ) }
    dend_12 { pt3dadd( -34.9301, 56.6015, -2.35141, 0.81 ) }
    dend_12 { pt3dadd( -35.2086, 57.0529, -2.37353, 0.81 ) }
    dend_12 { pt3dadd( -35.6646, 57.8598, -2.38027, 0.37 ) }
    dend_12 { pt3dadd( -36.0928, 58.7558, -2.41267, 0.37 ) }
    dend_12 { pt3dadd( -36.3414, 59.3424, -2.45461, 1.03 ) }
    dend_12 { pt3dadd( -36.554, 59.8612, -2.50704, 1.25 ) }
    dend_12 { pt3dadd( -36.8319, 60.4942, -2.5884, 1.25 ) }
    dend_12 { pt3dadd( -37.0776, 60.9939, -2.66921, 0.81 ) }
    dend_12 { pt3dadd( -37.6164, 61.9807, -2.85037, 0.59 ) }
    dend_12 { pt3dadd( -37.942, 62.5418, -2.95917, 0.44 ) }
    dend_12 { pt3dadd( -38.394, 63.3355, -3.08754, 0.88 ) }
    dend_12 { pt3dadd( -38.7384, 63.9492, -3.16409, 0.88 ) }
    dend_12 { pt3dadd( -39.3216, 65.0282, -3.2414, 0.59 ) }
    dend_12 { pt3dadd( -39.6946, 65.7494, -3.27657, 0.59 ) }
    dend_12 { pt3dadd( -40.2659, 66.9232, -3.29892, 0.44 ) }
    dend_12 { pt3dadd( -40.8839, 68.2793, -3.31336, 1.03 ) }
    dend_12 { pt3dadd( -41.3711, 69.4366, -3.30296, 1.55 ) }
    dend_12 { pt3dadd( -41.6398, 70.1582, -3.27661, 1.62 ) }
    dend_12 { pt3dadd( -41.9939, 71.2187, -3.21698, 1.11 ) }
    dend_12 { pt3dadd( -42.3494, 72.3857, -3.137, 0.59 ) }
    dend_12 { pt3dadd( -42.5767, 73.1944, -3.06392, 0.59 ) }
    dend_12 { pt3dadd( -42.9306, 74.5485, -2.91712, 0.59 ) }
    dend_12 { pt3dadd( -43.2801, 75.8991, -2.75105, 0.52 ) }
    dend_12 { pt3dadd( -43.5124, 76.7834, -2.62305, 0.52 ) }
    dend_12 { pt3dadd( -43.8078, 77.8869, -2.42406, 0.52 ) }
    dend_12 { pt3dadd( -44.1279, 79.0382, -2.20688, 0.52 ) }
    dend_12 { pt3dadd( -44.5065, 80.2965, -1.97556, 0.37 ) }
    dend_12 { pt3dadd( -45.0901, 81.9641, -1.68026, 1.55 ) }
    dend_12 { pt3dadd( -45.3186, 82.5111, -1.58945, 1.92 ) }
    dend_12 { pt3dadd( -45.5617, 83.0057, -1.51492, 1.92 ) }
    dend_12 { pt3dadd( -45.7983, 83.4246, -1.46505, 1.92 ) }
    dend_12 { pt3dadd( -46.32, 84.2112, -1.39632, 0.88 ) }
    dend_12 { pt3dadd( -47.0335, 85.2022, -1.33805, 0.44 ) }
    dend_12 { pt3dadd( -47.5772, 85.9335, -1.30789, 0.44 ) }
    dend_12 { pt3dadd( -48.1631, 86.7247, -1.29163, 0.44 ) }
    dend_12 { pt3dadd( -48.9771, 87.8521, -1.27457, 0.37 ) }
    dend_12 { pt3dadd( -49.4104, 88.4661, -1.26697, 0.37 ) }
    dend_12 { pt3dadd( -50.3007, 89.7854, -1.25171, 0.74 ) }
    dend_12 { pt3dadd( -50.6537, 90.3291, -1.23987, 0.74 ) }
    dend_12 { pt3dadd( -51.0886, 91.0293, -1.22303, 0.52 ) }
    dend_12 { pt3dadd( -51.6657, 91.9972, -1.21757, 1.25 ) }
    dend_12 { pt3dadd( -52.0687, 92.6753, -1.23915, 1.47 ) }
    dend_12 { pt3dadd( -52.3393, 93.135, -1.26893, 1.47 ) }
    dend_12 { pt3dadd( -52.7173, 93.6984, -1.34139, 0.81 ) }
    dend_12 { pt3dadd( -53.2375, 94.398, -1.46624, 0.59 ) }
    dend_12 { pt3dadd( -53.7659, 95.0365, -1.62562, 0.88 ) }
    dend_12 { pt3dadd( -54.2158, 95.5466, -1.77871, 1.18 ) }
    dend_12 { pt3dadd( -54.4975, 95.8593, -1.88149, 1.18 ) }
    dend_12 { pt3dadd( -55.1862, 96.6581, -2.11301, 0.96 ) }
    dend_12 { pt3dadd( -55.9128, 97.574, -2.31792, 0.52 ) }
    dend_12 { pt3dadd( -56.3244, 98.1537, -2.38347, 0.37 ) }
    dend_12 { pt3dadd( -56.9026, 99.0662, -2.39303, 0.37 ) }
    dend_12 { pt3dadd( -57.4407, 100.025, -2.3345, 0.37 ) }
    dend_12 { pt3dadd( -57.9215, 100.993, -2.22699, 0.37 ) }
    dend_12 { pt3dadd( -58.2414, 101.749, -2.10697, 0.81 ) }
    dend_12 { pt3dadd( -58.6858, 102.969, -1.8896, 1.84 ) }
    dend_12 { pt3dadd( -58.8618, 103.462, -1.80109, 1.92 ) }
    dend_12 { pt3dadd( -58.9978, 103.817, -1.74554, 1.92 ) }
    dend_12 { pt3dadd( -59.2458, 104.476, -1.66359, 1.62 ) }
    dend_12 { pt3dadd( -59.5919, 105.407, -1.60014, 0.88 ) }
    dend_12 { pt3dadd( -59.9439, 106.407, -1.56625, 0.29 ) }
    dend_12 { pt3dadd( -60.4861, 107.964, -1.54517, 0.29 ) }
    dend_12 { pt3dadd( -60.8994, 109.083, -1.53052, 0.29 ) }
    dend_12 { pt3dadd( -61.1726, 109.735, -1.51335, 0.29 ) }
    dend_12 { pt3dadd( -61.3196, 110.037, -1.5013, 0.29 ) }
    dend_12 { pt3dadd( -61.7036, 110.697, -1.46581, 0.66 ) }
    dend_12 { pt3dadd( -62.1991, 111.418, -1.41765, 0.81 ) }
    dend_12 { pt3dadd( -62.5617, 111.893, -1.38229, 0.81 ) }
    dend_12 { pt3dadd( -63.2575, 112.789, -1.31831, 0.37 ) }
    dend_12 { pt3dadd( -63.8067, 113.476, -1.26901, 0.37 ) }
    dend_12 { pt3dadd( -64.3264, 114.134, -1.22249, 0.81 ) }
    dend_12 { pt3dadd( -64.6918, 114.603, -1.18624, 0.81 ) }
    dend_12 { pt3dadd( -65.2084, 115.279, -1.12715, 0.37 ) }
    dend_12 { pt3dadd( -65.7215, 115.908, -1.06498, 0.37 ) }
    dend_12 { pt3dadd( -66.2473, 116.492, -0.99668, 0.88 ) }
    dend_12 { pt3dadd( -66.8949, 117.176, -0.910277, 1.47 ) }
    dend_12 { pt3dadd( -67.3826, 117.688, -0.848415, 1.69 ) }
    dend_12 { pt3dadd( -67.7783, 118.107, -0.80318, 1.69 ) }
    dend_12 { pt3dadd( -68.8575, 119.225, -0.68857, 0.37 ) }
    dend_12 { pt3dadd( -69.2277, 119.615, -0.651116, 0.37 ) }
    dend_12 { pt3dadd( -69.9186, 120.395, -0.591207, 0.37 ) }
    dend_12 { pt3dadd( -70.7097, 121.363, -0.533982, 0.81 ) }
    dend_12 { pt3dadd( -71.216, 122.074, -0.505209, 1.33 ) }
    dend_12 { pt3dadd( -71.5198, 122.548, -0.494899, 1.33 ) }
    dend_12 { pt3dadd( -71.9251, 123.217, -0.488623, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -72.7461, 124.525, -0.490791, 0.52 ) }
    dend_12 { pt3dadd( -73.4347, 125.534, -0.503482, 0.52 ) }
    dend_12 { pt3dadd( -74.2134, 126.651, -0.528231, 0.52 ) }
    dend_12 { pt3dadd( -74.6438, 127.266, -0.5463, 0.52 ) }
    dend_12 { pt3dadd( -75.1973, 128.063, -0.575383, 0.52 ) }
    dend_12 { pt3dadd( -75.819, 128.956, -0.617, 0.52 ) }
    dend_12 { pt3dadd( -76.8797, 130.459, -0.698838, 0.52 ) }
    dend_12 { pt3dadd( -77.2645, 131.002, -0.729738, 0.52 ) }
    dend_12 { pt3dadd( -78.2217, 132.329, -0.802443, 1.25 ) }
    dend_12 { pt3dadd( -78.492, 132.705, -0.820726, 1.47 ) }
    dend_12 { pt3dadd( -78.8476, 133.194, -0.849608, 1.47 ) }
    dend_12 { pt3dadd( -79.3716, 133.87, -0.897841, 0.88 ) }
    dend_12 { pt3dadd( -80.0135, 134.617, -0.958886, 0.29 ) }
    dend_12 { pt3dadd( -80.2821, 134.893, -0.981541, 0.29 ) }
    dend_12 { pt3dadd( -80.8405, 135.417, -1.01986, 0.44 ) }
    dend_12 { pt3dadd( -81.2846, 135.816, -1.04001, 0.44 ) }
    dend_12 { pt3dadd( -81.7032, 136.182, -1.04818, 0.44 ) }
    dend_12 { pt3dadd( -81.9487, 136.406, -1.06236, 0.44 ) }
    dend_12 { pt3dadd( -82.2952, 136.742, -1.06544, 0.29 ) }
    dend_12 { pt3dadd( -82.7353, 137.301, -1.03793, 0.29 ) }
    dend_12 { pt3dadd( -82.8848, 137.516, -1.01336, 0.44 ) }
    dend_12 { pt3dadd( -83.0662, 137.789, -0.970469, 0.44 ) }
    dend_12 { pt3dadd( -83.5457, 138.492, -0.842844, 0.37 ) }
    dend_12 { pt3dadd( -84.1962, 139.405, -0.660929, 0.44 ) }
    dend_12 { pt3dadd( -85.2619, 140.856, -0.446123, 2.28 ) }
    dend_12 { pt3dadd( -85.6909, 141.431, -0.388669, 2.5 ) }
    dend_12 { pt3dadd( -86.0209, 141.887, -0.367304, 2.5 ) }
    dend_12 { pt3dadd( -86.557, 142.637, -0.367739, 1.92 ) }
    dend_12 { pt3dadd( -87.0929, 143.394, -0.421061, 0.81 ) }
    dend_12 { pt3dadd( -87.7854, 144.433, -0.61553, 0.52 ) }
    dend_12 { pt3dadd( -88.0724, 144.91, -0.731239, 0.52 ) }
    dend_12 { pt3dadd( -88.6751, 146.017, -1.02159, 0.88 ) }
    dend_12 { pt3dadd( -89.007, 146.702, -1.20194, 0.88 ) }
    dend_12 { pt3dadd( -89.3692, 147.533, -1.41108, 0.66 ) }
    dend_12 { pt3dadd( -89.6426, 148.219, -1.57602, 0.44 ) }
    dend_12 { pt3dadd( -90.0089, 149.219, -1.78495, 0.29 ) }
    dend_12 { pt3dadd( -90.3995, 150.374, -2.03597, 0.29 ) }
    dend_12 { pt3dadd( -90.8013, 151.694, -2.34533, 0.29 ) }
    dend_12 { pt3dadd( -90.9856, 152.349, -2.50905, 0.29 ) }
    dend_12 { pt3dadd( -91.3151, 153.562, -2.86788, 0.52 ) }
    dend_12 { pt3dadd( -91.5515, 154.392, -3.15254, 0.88 ) }
    dend_12 { pt3dadd( -91.7594, 155.07, -3.43161, 0.88 ) }
    dend_12 { pt3dadd( -92.0199, 155.81, -3.77775, 0.44 ) }
    dend_12 { pt3dadd( -92.5578, 156.974, -4.38432, 1.11 ) }
    dend_12 { pt3dadd( -93.1552, 157.974, -4.94509, 2.43 ) }
    dend_12 { pt3dadd( -93.6682, 158.642, -5.3451, 2.43 ) }
    dend_12 { pt3dadd( -94.0398, 159.024, -5.58733, 2.43 ) }
    dend_12 { pt3dadd( -94.5775, 159.471, -5.85982, 1.69 ) }
    dend_12 { pt3dadd( -95.3646, 160.03, -6.19499, 0.59 ) }
    dend_12 { pt3dadd( -96.2497, 160.558, -6.48879, 0.74 ) }
    dend_12 { pt3dadd( -96.5511, 160.718, -6.55754, 0.74 ) }
    dend_12 { pt3dadd( -97.0583, 160.973, -6.66131, 0.52 ) }
    dend_12 { pt3dadd( -97.8409, 161.369, -6.79275, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 23.9785, 6.67744, 6.29585, 1.99 ) }
    dend_2 { pt3dadd( 25.6149, 6.85358, 6.29232, 1.99 ) }
    dend_2 { pt3dadd( 26.5725, 7.1999, 6.38641, 1.99 ) }
    dend_2 { pt3dadd( 27.2436, 7.71149, 6.52017, 1.69 ) }
    dend_2 { pt3dadd( 28.1871, 8.43068, 6.70822, 1.69 ) }
    dend_2 { pt3dadd( 28.5845, 8.73359, 6.78742, 1.69 ) }
    dend_2 { pt3dadd( 29.2447, 9.23689, 6.91902, 1.69 ) }
    dend_2 { pt3dadd( 29.6649, 9.75436, 7.00345, 1.92 ) }
    dend_2 { pt3dadd( 30.2803, 10.8236, 7.24461, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 23.9785, 6.67744, 6.29585, 0.74 ) }
    dend_1 { pt3dadd( 24.7581, 8.72837, 6.55676, 0.74 ) }
    dend_1 { pt3dadd( 25.0501, 9.61644, 6.6547, 0.74 ) }
    dend_1 { pt3dadd( 25.4548, 11.009, 6.78685, 0.74 ) }
    dend_1 { pt3dadd( 25.7711, 12.2072, 6.88859, 0.44 ) }
    dend_1 { pt3dadd( 26.014, 13.2226, 6.97658, 0.44 ) }
    dend_1 { pt3dadd( 26.3402, 14.7285, 7.10766, 0.66 ) }
    dend_1 { pt3dadd( 26.4633, 15.4533, 7.15755, 0.88 ) }
    dend_1 { pt3dadd( 26.6214, 16.5077, 7.25391, 0.88 ) }
    dend_1 { pt3dadd( 26.7511, 17.4825, 7.37753, 1.03 ) }
    dend_1 { pt3dadd( 26.9505, 18.8818, 7.59011, 0.96 ) }
    dend_1 { pt3dadd( 27.1066, 19.8744, 7.7567, 0.52 ) }
    dend_1 { pt3dadd( 27.2558, 20.6728, 7.89864, 0.52 ) }
    dend_1 { pt3dadd( 27.4264, 21.7344, 8.09092, 0.88 ) }
    dend_1 { pt3dadd( 27.5659, 22.5999, 8.25117, 0.66 ) }
    dend_1 { pt3dadd( 27.7256, 23.5689, 8.43889, 0.88 ) }
    dend_1 { pt3dadd( 27.8667, 24.4342, 8.61188, 0.88 ) }
    dend_1 { pt3dadd( 28.0614, 25.7126, 8.88041, 0.29 ) }
    dend_1 { pt3dadd( 28.1954, 26.7454, 9.09264, 0.29 ) }
    dend_1 { pt3dadd( 28.2797, 27.4567, 9.22797, 0.29 ) }
    dend_1 { pt3dadd( 28.4218, 28.6692, 9.46527, 0.44 ) }
    dend_1 { pt3dadd( 28.5222, 29.3935, 9.62495, 0.74 ) }
    dend_1 { pt3dadd( 28.6737, 30.2654, 9.82627, 0.88 ) }
    dend_1 { pt3dadd( 28.7846, 30.793, 9.95648, 1.11 ) }
    dend_1 { pt3dadd( 28.8835, 31.2103, 10.058, 1.11 ) }
    dend_1 { pt3dadd( 29.0726, 32.1579, 10.26, 0.29 ) }
    dend_1 { pt3dadd( 29.2764, 33.0912, 10.4195, 0.29 ) }
    dend_1 { pt3dadd( 29.5089, 33.9726, 10.5496, 0.29 ) }
    dend_1 { pt3dadd( 31.6404, 43.5834, 13.9668, 0.29 ) }
    dend_1 { pt3dadd( 35.0057, 53.0, 16.8383, 0.29 ) }
    dend_1 { pt3dadd( 37.358, 63.0024, 18.7672, 0.29 ) }
    dend_1 { pt3dadd( 38.8407, 73.2868, 20.1333, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -86.2091, -62.1128, 4.83689, 0.44 ) }
    dend_48 { pt3dadd( -88.0712, -62.9814, 5.65075, 0.44 ) }
    dend_48 { pt3dadd( -89.015, -63.4971, 6.04641, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -90.0138, -64.0929, 6.42464, 0.29 ) }
    dend_48 { pt3dadd( -90.6009, -64.4554, 6.63339, 0.29 ) }
    dend_48 { pt3dadd( -91.8519, -65.2115, 7.04877, 0.37 ) }
    dend_48 { pt3dadd( -92.4227, -65.5391, 7.24373, 0.37 ) }
    dend_48 { pt3dadd( -93.3015, -66.008, 7.46924, 0.29 ) }
    dend_48 { pt3dadd( -94.1404, -66.5262, 7.69799, 0.29 ) }
    dend_48 { pt3dadd( -94.7803, -66.9795, 7.87902, 0.29 ) }
    dend_48 { pt3dadd( -95.2246, -67.3112, 8.0026, 0.29 ) }
    dend_48 { pt3dadd( -95.9179, -67.8131, 8.19183, 0.29 ) }
    dend_48 { pt3dadd( -96.6035, -68.2427, 8.36944, 0.44 ) }
    dend_48 { pt3dadd( -97.5497, -68.7688, 8.61553, 0.44 ) }
    dend_48 { pt3dadd( -98.0488, -69.0665, 8.76859, 0.44 ) }
    dend_48 { pt3dadd( -98.773, -69.5629, 9.02983, 0.66 ) }
    dend_48 { pt3dadd( -99.4907, -70.1659, 9.33944, 0.66 ) }
    dend_48 { pt3dadd( -99.855, -70.5689, 9.5394, 0.52 ) }
    dend_48 { pt3dadd( -100.46, -71.548, 10.04, 0.44 ) }
    dend_48 { pt3dadd( -100.682, -72.2389, 10.3919, 0.66 ) }
    dend_48 { pt3dadd( -100.787, -72.9625, 10.7595, 0.66 ) }
    dend_48 { pt3dadd( -100.838, -73.7996, 11.1807, 0.52 ) }
    dend_48 { pt3dadd( -100.899, -74.9103, 11.7489, 0.52 ) }
    dend_48 { pt3dadd( -100.922, -75.9245, 12.2551, 0.44 ) }
    dend_48 { pt3dadd( -100.917, -76.8142, 12.6921, 0.37 ) }
    dend_48 { pt3dadd( -100.958, -78.1964, 13.3702, 0.37 ) }
    dend_48 { pt3dadd( -101.041, -79.285, 13.9253, 0.29 ) }
    dend_48 { pt3dadd( -101.217, -80.3852, 14.5445, 0.29 ) }
    dend_48 { pt3dadd( -108.085, -87.7642, 16.3991, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -86.2091, -62.1128, 4.83689, 1.11 ) }
    dend_45 { pt3dadd( -87.2059, -62.5612, 5.03009, 1.11 ) }
    dend_45 { pt3dadd( -87.9811, -62.9867, 5.16344, 1.11 ) }
    dend_45 { pt3dadd( -89.5517, -63.9106, 5.44122, 0.88 ) }
    dend_45 { pt3dadd( -90.7495, -64.5766, 5.65082, 0.88 ) }
    dend_45 { pt3dadd( -92.5723, -65.5087, 5.96361, 0.88 ) }
    dend_45 { pt3dadd( -94.4754, -66.3916, 6.27125, 0.88 ) }
    dend_45 { pt3dadd( -95.5182, -66.8685, 6.43687, 0.88 ) }
    dend_45 { pt3dadd( -96.4883, -67.2998, 6.56445, 0.81 ) }
    dend_45 { pt3dadd( -97.5791, -67.7657, 6.67789, 0.81 ) }
    dend_45 { pt3dadd( -98.368, -68.0678, 6.7536, 0.81 ) }
    dend_45 { pt3dadd( -99.7705, -68.5506, 6.88954, 0.96 ) }
    dend_45 { pt3dadd( -100.503, -68.828, 6.95485, 0.96 ) }
    dend_45 { pt3dadd( -101.25, -69.1964, 7.00346, 0.96 ) }
    dend_45 { pt3dadd( -101.956, -69.6706, 7.02426, 0.96 ) }
    dend_45 { pt3dadd( -102.876, -70.415, 7.03784, 0.96 ) }
    dend_45 { pt3dadd( -103.182, -70.6756, 7.03509, 0.96 ) }
    dend_45 { pt3dadd( -104.119, -71.4543, 6.99942, 0.88 ) }
    dend_45 { pt3dadd( -105.296, -72.3119, 6.91994, 0.88 ) }
    dend_45 { pt3dadd( -106.14, -72.9008, 6.85149, 1.11 ) }
    dend_45 { pt3dadd( -106.991, -73.4972, 6.77845, 1.11 ) }
    dend_45 { pt3dadd( -107.975, -74.2139, 6.67462, 0.96 ) }
    dend_45 { pt3dadd( -108.807, -74.8758, 6.61166, 0.96 ) }
    dend_45 { pt3dadd( -109.947, -75.8773, 6.56652, 0.88 ) }
    dend_45 { pt3dadd( -111.254, -77.1391, 6.503, 0.88 ) }
    dend_45 { pt3dadd( -112.262, -78.1605, 6.40453, 0.96 ) }
    dend_45 { pt3dadd( -113.068, -78.9908, 6.28683, 0.96 ) }
    dend_45 { pt3dadd( -114.219, -80.1359, 6.08089, 0.88 ) }
    dend_45 { pt3dadd( -114.765, -80.6478, 5.95434, 0.74 ) }
    dend_45 { pt3dadd( -115.995, -81.7199, 5.61816, 0.96 ) }
    dend_45 { pt3dadd( -117.084, -82.5737, 5.30598, 1.11 ) }
    dend_45 { pt3dadd( -117.972, -83.2329, 5.06554, 1.25 ) }
    dend_45 { pt3dadd( -118.743, -83.8068, 4.8795, 1.25 ) }
    dend_45 { pt3dadd( -119.985, -84.7546, 4.60947, 1.03 ) }
    dend_45 { pt3dadd( -121.659, -86.1188, 4.3426, 0.88 ) }
    dend_45 { pt3dadd( -122.871, -87.2051, 4.21332, 0.88 ) }
    dend_45 { pt3dadd( -124.092, -88.3785, 4.10924, 0.88 ) }
    dend_45 { pt3dadd( -125.11, -89.3707, 4.0203, 0.88 ) }
    dend_45 { pt3dadd( -126.095, -90.2889, 3.93478, 1.33 ) }
    dend_45 { pt3dadd( -126.869, -90.9414, 3.87627, 1.33 ) }
    dend_45 { pt3dadd( -127.794, -91.665, 3.8001, 1.18 ) }
    dend_45 { pt3dadd( -128.446, -92.144, 3.73975, 0.96 ) }
    dend_45 { pt3dadd( -129.619, -92.9432, 3.64154, 0.96 ) }
    dend_45 { pt3dadd( -130.703, -93.5965, 3.56843, 0.96 ) }
    dend_45 { pt3dadd( -132.164, -94.3528, 3.51705, 0.88 ) }
    dend_45 { pt3dadd( -133.431, -94.8657, 3.52936, 0.81 ) }
    dend_45 { pt3dadd( -134.144, -95.0774, 3.57571, 0.81 ) }
    dend_45 { pt3dadd( -134.977, -95.2881, 3.65448, 0.74 ) }
    dend_45 { pt3dadd( -135.593, -95.4669, 3.72447, 0.74 ) }
    dend_45 { pt3dadd( -136.378, -95.7694, 3.8235, 0.74 ) }
    dend_45 { pt3dadd( -137.499, -96.3644, 3.97219, 0.74 ) }
    dend_45 { pt3dadd( -138.121, -96.8403, 4.04812, 1.11 ) }
    dend_45 { pt3dadd( -139.067, -97.8611, 4.14086, 1.11 ) }
    dend_45 { pt3dadd( -140.222, -99.3934, 4.22027, 0.88 ) }
    dend_45 { pt3dadd( -140.969, -100.535, 4.25911, 0.88 ) }
    dend_45 { pt3dadd( -141.539, -101.495, 4.27978, 0.88 ) }
    dend_45 { pt3dadd( -142.324, -102.834, 4.29897, 0.81 ) }
    dend_45 { pt3dadd( -143.409, -104.564, 4.27405, 0.81 ) }
    dend_45 { pt3dadd( -143.968, -105.375, 4.2405, 1.18 ) }
    dend_45 { pt3dadd( -144.585, -106.244, 4.16909, 1.33 ) }
    dend_45 { pt3dadd( -145.257, -107.121, 4.06864, 1.33 ) }
    dend_45 { pt3dadd( -146.362, -108.439, 3.88258, 0.88 ) }
    dend_45 { pt3dadd( -147.462, -109.641, 3.66361, 0.81 ) }
    dend_45 { pt3dadd( -148.617, -110.806, 3.42867, 0.81 ) }
    dend_45 { pt3dadd( -149.991, -112.125, 3.12829, 0.81 ) }
    dend_45 { pt3dadd( -151.033, -113.082, 2.86881, 0.81 ) }
    dend_45 { pt3dadd( -152.016, -113.959, 2.61419, 1.11 ) }
    dend_45 { pt3dadd( -152.613, -114.484, 2.45156, 1.25 ) }
    dend_45 { pt3dadd( -153.327, -115.11, 2.25812, 2.14 ) }
    dend_45 { pt3dadd( -154.015, -115.748, 2.04847, 2.5 ) }
    dend_45 { pt3dadd( -154.957, -116.61, 1.7609, 1.92 ) }
    dend_45 { pt3dadd( -156.313, -118.032, 1.28341, 1.11 ) }
    dend_45 { pt3dadd( -156.892, -118.722, 1.05473, 0.96 ) }
    dend_45 { pt3dadd( -157.684, -119.757, 0.727901, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -158.697, -121.154, 0.253671, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -13.2085, -132.133, -3.50796, 0.37 ) }
    dend_41 { pt3dadd( -12.5638, -134.743, -2.34702, 0.37 ) }
    dend_41 { pt3dadd( -12.3687, -135.418, -2.06848, 0.52 ) }
    dend_41 { pt3dadd( -12.1156, -136.246, -1.75696, 0.66 ) }
    dend_41 { pt3dadd( -11.8273, -137.19, -1.42337, 0.37 ) }
    dend_41 { pt3dadd( -11.6081, -137.888, -1.18461, 0.44 ) }
    dend_41 { pt3dadd( -11.3485, -138.7, -0.917616, 0.44 ) }
    dend_41 { pt3dadd( -11.01, -139.671, -0.686808, 0.29 ) }
    dend_41 { pt3dadd( -10.6628, -140.583, -0.460252, 0.29 ) }
    dend_41 { pt3dadd( -10.3135, -141.35, -0.257382, 0.59 ) }
    dend_41 { pt3dadd( -9.94897, -142.011, -0.0837594, 0.59 ) }
    dend_41 { pt3dadd( -9.49279, -142.703, 0.096762, 0.37 ) }
    dend_41 { pt3dadd( -8.9901, -143.357, 0.261428, 0.66 ) }
    dend_41 { pt3dadd( -8.49159, -143.91, 0.401115, 0.52 ) }
    dend_41 { pt3dadd( -7.72025, -144.652, 0.581966, 0.37 ) }
    dend_41 { pt3dadd( -7.1229, -145.174, 0.698457, 0.37 ) }
    dend_41 { pt3dadd( -6.21718, -145.946, 0.846321, 0.37 ) }
    dend_41 { pt3dadd( -5.33033, -146.688, 0.966743, 1.03 ) }
    dend_41 { pt3dadd( -4.68229, -147.232, 1.03725, 1.18 ) }
    dend_41 { pt3dadd( -4.0678, -147.754, 1.08371, 0.81 ) }
    dend_41 { pt3dadd( -3.58108, -148.176, 1.10632, 0.52 ) }
    dend_41 { pt3dadd( -2.6703, -148.97, 1.14743, 0.52 ) }
    dend_41 { pt3dadd( -1.80629, -149.753, 1.18331, 0.59 ) }
    dend_41 { pt3dadd( -1.05056, -150.492, 1.18614, 0.59 ) }
    dend_41 { pt3dadd( -0.435252, -151.155, 1.16888, 0.81 ) }
    dend_41 { pt3dadd( 0.0643364, -151.733, 1.14523, 0.81 ) }
    dend_41 { pt3dadd( 0.61278, -152.402, 1.10747, 0.66 ) }
    dend_41 { pt3dadd( 1.00787, -152.912, 1.0701, 0.29 ) }
    dend_41 { pt3dadd( 1.9097, -154.153, 0.967303, 0.52 ) }
    dend_41 { pt3dadd( 2.67704, -155.235, 0.873075, 1.03 ) }
    dend_41 { pt3dadd( 2.95202, -155.63, 0.833839, 1.47 ) }
    dend_41 { pt3dadd( 3.45664, -156.322, 0.760271, 1.62 ) }
    dend_41 { pt3dadd( 4.14032, -157.162, 0.664314, 1.03 ) }
    dend_41 { pt3dadd( 4.80575, -157.887, 0.594219, 0.29 ) }
    dend_41 { pt3dadd( 5.45347, -158.519, 0.551566, 0.29 ) }
    dend_41 { pt3dadd( 6.21496, -159.2, 0.503949, 0.37 ) }
    dend_41 { pt3dadd( 7.00849, -159.9, 0.455182, 0.66 ) }
    dend_41 { pt3dadd( 7.41746, -160.257, 0.435346, 0.81 ) }
    dend_41 { pt3dadd( 8.06423, -160.804, 0.421353, 0.96 ) }
    dend_41 { pt3dadd( 8.55229, -161.211, 0.422664, 0.44 ) }
    dend_41 { pt3dadd( 8.93916, -161.528, 0.435916, 0.29 ) }
    dend_41 { pt3dadd( 9.68674, -162.13, 0.490597, 0.29 ) }
    dend_41 { pt3dadd( 10.2473, -162.633, 0.540548, 0.59 ) }
    dend_41 { pt3dadd( 10.7801, -163.174, 0.596213, 0.74 ) }
    dend_41 { pt3dadd( 11.2031, -163.653, 0.645088, 0.74 ) }
    dend_41 { pt3dadd( 11.7653, -164.368, 0.712183, 0.74 ) }
    dend_41 { pt3dadd( 12.2119, -164.992, 0.760302, 0.44 ) }
    dend_41 { pt3dadd( 12.8011, -165.887, 0.817523, 0.29 ) }
    dend_41 { pt3dadd( 13.1475, -166.449, 0.843941, 0.66 ) }
    dend_41 { pt3dadd( 13.5784, -167.164, 0.865731, 0.88 ) }
    dend_41 { pt3dadd( 13.9814, -167.825, 0.880621, 0.96 ) }
    dend_41 { pt3dadd( 14.562, -168.751, 0.91054, 0.66 ) }
    dend_41 { pt3dadd( 15.1605, -169.699, 0.948159, 0.37 ) }
    dend_41 { pt3dadd( 15.8717, -170.77, 1.00115, 0.74 ) }
    dend_41 { pt3dadd( 16.269, -171.348, 1.03302, 0.81 ) }
    dend_41 { pt3dadd( 16.727, -172.026, 1.07435, 0.37 ) }
    dend_41 { pt3dadd( 17.3359, -172.972, 1.13456, 0.37 ) }
    dend_41 { pt3dadd( 17.8563, -173.82, 1.18854, 0.37 ) }
    dend_41 { pt3dadd( 18.2868, -174.548, 1.23151, 0.37 ) }
    dend_41 { pt3dadd( 18.6313, -175.157, 1.26238, 0.52 ) }
    dend_41 { pt3dadd( 19.0433, -175.877, 1.28977, 0.52 ) }
    dend_41 { pt3dadd( 19.4709, -176.61, 1.3056, 0.37 ) }
    dend_41 { pt3dadd( 19.9112, -177.38, 1.3056, 0.37 ) }
    dend_41 { pt3dadd( 20.4285, -178.26, 1.3056, 0.81 ) }
    dend_41 { pt3dadd( 20.7446, -178.743, 1.30745, 0.88 ) }
    dend_41 { pt3dadd( 21.2894, -179.482, 1.31256, 0.59 ) }
    dend_41 { pt3dadd( 21.765, -180.073, 1.32024, 0.37 ) }
    dend_41 { pt3dadd( 22.2544, -180.633, 1.33013, 0.37 ) }
    dend_41 { pt3dadd( 22.8826, -181.309, 1.34955, 0.44 ) }
    dend_41 { pt3dadd( 24.177, -182.602, 1.40155, 0.44 ) }
    dend_41 { pt3dadd( 25.0296, -183.359, 1.44183, 1.18 ) }
    dend_41 { pt3dadd( 25.6742, -183.888, 1.47761, 1.47 ) }
    dend_41 { pt3dadd( 26.3908, -184.442, 1.50839, 1.47 ) }
    dend_41 { pt3dadd( 27.4488, -185.251, 1.53799, 1.18 ) }
    dend_41 { pt3dadd( 28.2712, -185.919, 1.53901, 0.29 ) }
    dend_41 { pt3dadd( 28.7833, -186.371, 1.52244, 0.29 ) }
    dend_41 { pt3dadd( 29.1739, -186.74, 1.48992, 0.29 ) }
    dend_41 { pt3dadd( 29.8756, -187.462, 1.37288, 0.59 ) }
    dend_41 { pt3dadd( 30.5554, -188.245, 1.20485, 0.66 ) }
    dend_41 { pt3dadd( 30.9297, -188.734, 1.07607, 0.74 ) }
    dend_41 { pt3dadd( 31.3123, -189.303, 0.922551, 0.59 ) }
    dend_41 { pt3dadd( 31.7296, -190.004, 0.740005, 0.44 ) }
    dend_41 { pt3dadd( 32.2261, -190.899, 0.505425, 0.29 ) }
    dend_41 { pt3dadd( 32.5129, -191.503, 0.356283, 0.37 ) }
    dend_41 { pt3dadd( 32.9272, -192.515, 0.114832, 0.52 ) }
    dend_41 { pt3dadd( 33.1982, -193.289, -0.0402962, 1.03 ) }
    dend_41 { pt3dadd( 33.4575, -194.098, -0.202198, 1.55 ) }
    dend_41 { pt3dadd( 33.6811, -194.799, -0.332873, 1.55 ) }
    dend_41 { pt3dadd( 34.2351, -196.567, -0.657764, 0.44 ) }
    dend_41 { pt3dadd( 34.6186, -197.721, -0.880529, 0.37 ) }
    dend_41 { pt3dadd( 35.6147, -200.3, -1.43872, 0.29 ) }
    dend_41 { pt3dadd( 35.8729, -200.849, -1.56787, 0.29 ) }
    dend_41 { pt3dadd( 36.7018, -202.266, -1.91787, 1.47 ) }
    dend_41 { pt3dadd( 37.0476, -202.728, -2.0428, 1.92 ) }
    dend_41 { pt3dadd( 37.7661, -203.472, -2.28202, 2.06 ) }
    dend_41 { pt3dadd( 38.8812, -204.394, -2.67838, 0.81 ) }
    dend_41 { pt3dadd( 40.367, -205.375, -3.26524, 0.29 ) }
    dend_41 { pt3dadd( 41.3119, -205.955, -3.66462, 0.29 ) }
    dend_41 { pt3dadd( 42.5501, -206.688, -4.1769, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 43.1553, -207.054, -4.40236, 0.52 ) }
    dend_41 { pt3dadd( 44.5804, -207.956, -4.85638, 0.29 ) }
    dend_41 { pt3dadd( 45.6168, -208.655, -5.10352, 0.88 ) }
    dend_41 { pt3dadd( 46.2089, -209.084, -5.17305, 0.74 ) }
    dend_41 { pt3dadd( 47.5639, -210.189, -5.10406, 0.29 ) }
    dend_41 { pt3dadd( 48.4888, -211.0, -4.90196, 0.29 ) }
    dend_41 { pt3dadd( 49.3746, -211.812, -4.6053, 0.59 ) }
    dend_41 { pt3dadd( 49.9372, -212.351, -4.36113, 0.66 ) }
    dend_41 { pt3dadd( 50.9938, -213.399, -3.85723, 0.29 ) }
    dend_41 { pt3dadd( 52.0472, -214.499, -3.35876, 0.29 ) }
    dend_41 { pt3dadd( 52.7382, -215.29, -3.07453, 0.29 ) }
    dend_41 { pt3dadd( 53.3709, -216.109, -2.84935, 1.03 ) }
    dend_41 { pt3dadd( 53.8322, -216.751, -2.71954, 1.47 ) }
    dend_41 { pt3dadd( 54.2533, -217.371, -2.64036, 1.18 ) }
    dend_41 { pt3dadd( 55.0317, -218.581, -2.56659, 0.22 ) }
    dend_41 { pt3dadd( 55.7312, -219.698, -2.5347, 0.22 ) }
    dend_41 { pt3dadd( 56.6291, -221.141, -2.53071, 0.22 ) }
    dend_41 { pt3dadd( 57.0141, -221.735, -2.53094, 0.52 ) }
    dend_41 { pt3dadd( 57.6817, -222.728, -2.5344, 0.29 ) }
    dend_41 { pt3dadd( 58.3174, -223.645, -2.54652, 0.29 ) }
    dend_41 { pt3dadd( 58.7251, -224.199, -2.56624, 0.88 ) }
    dend_41 { pt3dadd( 59.2815, -224.943, -2.57011, 0.88 ) }
    dend_41 { pt3dadd( 60.097, -226.068, -2.55408, 0.29 ) }
    dend_41 { pt3dadd( 60.4645, -226.587, -2.5269, 0.29 ) }
    dend_41 { pt3dadd( 61.0977, -227.483, -2.41564, 0.96 ) }
    dend_41 { pt3dadd( 61.5331, -228.073, -2.28225, 1.4 ) }
    dend_41 { pt3dadd( 61.9875, -228.672, -2.09893, 1.77 ) }
    dend_41 { pt3dadd( 62.2697, -229.023, -1.96381, 1.77 ) }
    dend_41 { pt3dadd( 63.3756, -230.323, -1.40949, 0.22 ) }
    dend_41 { pt3dadd( 64.5069, -231.569, -0.803863, 0.22 ) }
    dend_41 { pt3dadd( 65.4032, -232.469, -0.333418, 0.88 ) }
    dend_41 { pt3dadd( 65.8116, -232.859, -0.133223, 1.33 ) }
    dend_41 { pt3dadd( 66.237, -233.245, 0.0471022, 1.33 ) }
    dend_41 { pt3dadd( 67.2169, -234.1, 0.426826, 0.22 ) }
    dend_41 { pt3dadd( 68.445, -235.13, 0.842155, 0.22 ) }
    dend_41 { pt3dadd( 69.7644, -236.242, 1.20829, 0.22 ) }
    dend_41 { pt3dadd( 70.9742, -237.301, 1.47287, 0.22 ) }
    dend_41 { pt3dadd( 71.6819, -237.947, 1.60156, 0.74 ) }
    dend_41 { pt3dadd( 72.0648, -238.318, 1.65716, 0.88 ) }
    dend_41 { pt3dadd( 72.5149, -238.791, 1.69888, 0.52 ) }
    dend_41 { pt3dadd( 73.3082, -239.744, 1.71478, 0.22 ) }
    dend_41 { pt3dadd( 73.7049, -240.287, 1.70697, 0.88 ) }
    dend_41 { pt3dadd( 74.135, -240.929, 1.70278, 1.33 ) }
    dend_41 { pt3dadd( 74.4712, -241.461, 1.70808, 1.33 ) }
    dend_41 { pt3dadd( 75.2429, -242.763, 1.74141, 0.29 ) }
    dend_41 { pt3dadd( 76.1231, -244.357, 1.81919, 0.29 ) }
    dend_41 { pt3dadd( 76.5392, -245.149, 1.88329, 0.44 ) }
    dend_41 { pt3dadd( 76.894, -245.844, 1.96273, 0.59 ) }
    dend_41 { pt3dadd( 77.2121, -246.481, 2.05483, 0.59 ) }
    dend_41 { pt3dadd( 77.7139, -247.5, 2.23098, 0.22 ) }
    dend_41 { pt3dadd( 78.2177, -248.545, 2.42812, 0.22 ) }
    dend_41 { pt3dadd( 78.5312, -249.183, 2.55016, 0.74 ) }
    dend_41 { pt3dadd( 78.7226, -249.563, 2.61693, 0.88 ) }
    dend_41 { pt3dadd( 78.9838, -250.05, 2.68679, 0.88 ) }
    dend_41 { pt3dadd( 79.5094, -251.001, 2.82099, 0.22 ) }
    dend_41 { pt3dadd( 80.4524, -252.616, 3.02948, 0.22 ) }
    dend_41 { pt3dadd( 80.8803, -253.324, 3.10027, 0.52 ) }
    dend_41 { pt3dadd( 81.1616, -253.786, 3.13211, 0.66 ) }
    dend_41 { pt3dadd( 81.6056, -254.505, 3.16773, 0.44 ) }
    dend_41 { pt3dadd( 88.6419, -261.896, 2.19557, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -13.2085, -132.133, -3.50796, 2.28 ) }
    dend_34 { pt3dadd( -13.8391, -133.453, -3.28776, 2.28 ) }
    dend_34 { pt3dadd( -14.4346, -134.58, -3.0393, 1.62 ) }
    dend_34 { pt3dadd( -15.1964, -135.917, -2.73413, 1.33 ) }
    dend_34 { pt3dadd( -15.959, -137.173, -2.46297, 0.88 ) }
    dend_34 { pt3dadd( -16.3321, -137.751, -2.34664, 0.88 ) }
    dend_34 { pt3dadd( -16.9235, -138.599, -2.18614, 1.03 ) }
    dend_34 { pt3dadd( -18.1015, -140.109, -1.92034, 1.03 ) }
    dend_34 { pt3dadd( -19.1168, -141.258, -1.73808, 0.96 ) }
    dend_34 { pt3dadd( -19.9217, -142.086, -1.64131, 0.88 ) }
    dend_34 { pt3dadd( -20.6091, -142.792, -1.60503, 1.11 ) }
    dend_34 { pt3dadd( -21.3599, -143.646, -1.63074, 1.33 ) }
    dend_34 { pt3dadd( -21.9471, -144.463, -1.71562, 1.55 ) }
    dend_34 { pt3dadd( -22.4144, -145.301, -1.85437, 1.25 ) }
    dend_34 { pt3dadd( -22.7505, -146.151, -2.02328, 0.96 ) }
    dend_34 { pt3dadd( -23.0357, -147.326, -2.2684, 0.88 ) }
    dend_34 { pt3dadd( -23.2429, -148.789, -2.58845, 0.88 ) }
    dend_34 { pt3dadd( -23.3668, -150.355, -2.92653, 0.88 ) }
    dend_34 { pt3dadd( -23.4296, -151.735, -3.21414, 1.03 ) }
    dend_34 { pt3dadd( -23.4565, -153.026, -3.46856, 1.03 ) }
    dend_34 { pt3dadd( -23.4728, -154.545, -3.73853, 1.03 ) }
    dend_34 { pt3dadd( -23.477, -155.932, -3.95478, 1.25 ) }
    dend_34 { pt3dadd( -23.4602, -157.531, -4.15737, 1.55 ) }
    dend_34 { pt3dadd( -23.4191, -158.755, -4.27396, 1.55 ) }
    dend_34 { pt3dadd( -23.3113, -160.445, -4.39047, 1.33 ) }
    dend_34 { pt3dadd( -23.1945, -161.826, -4.46001, 1.33 ) }
    dend_34 { pt3dadd( -23.0929, -163.059, -4.50733, 1.11 ) }
    dend_34 { pt3dadd( -22.9783, -164.379, -4.50329, 1.11 ) }
    dend_34 { pt3dadd( -22.88, -165.83, -4.45437, 0.96 ) }
    dend_34 { pt3dadd( -22.8429, -166.908, -4.3924, 0.96 ) }
    dend_34 { pt3dadd( -22.8456, -168.468, -4.25015, 0.88 ) }
    dend_34 { pt3dadd( -22.9069, -170.524, -4.01573, 0.88 ) }
    dend_34 { pt3dadd( -23.0019, -172.307, -3.77077, 1.03 ) }
    dend_34 { pt3dadd( -23.1174, -173.893, -3.52102, 1.25 ) }
    dend_34 { pt3dadd( -23.2558, -175.4, -3.26345, 1.33 ) }
    dend_34 { pt3dadd( -23.3826, -176.586, -3.04972, 1.62 ) }
    dend_34 { pt3dadd( -23.5038, -177.805, -2.81511, 2.5 ) }
    dend_34 { pt3dadd( -23.5477, -178.468, -2.68916, 2.8 ) }
    dend_34 { pt3dadd( -23.5848, -179.288, -2.56935, 3.02 ) }
    dend_34 { pt3dadd( -23.5877, -180.058, -2.45134, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -23.5843, -180.574, -2.3746, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.16123, -58.021, -8.06444, 0.81 ) }
    dend_30 { pt3dadd( -1.50395, -59.6607, -8.03141, 0.81 ) }
    dend_30 { pt3dadd( -1.82058, -60.7622, -7.97212, 0.66 ) }
    dend_30 { pt3dadd( -2.25338, -61.9911, -7.8942, 0.66 ) }
    dend_30 { pt3dadd( -2.75563, -63.277, -7.81306, 0.52 ) }
    dend_30 { pt3dadd( -2.96368, -63.7906, -7.78201, 0.52 ) }
    dend_30 { pt3dadd( -3.51461, -65.1435, -7.70478, 0.74 ) }
    dend_30 { pt3dadd( -4.06972, -66.5193, -7.56892, 0.74 ) }
    dend_30 { pt3dadd( -4.55953, -67.6564, -7.46905, 0.88 ) }
    dend_30 { pt3dadd( -5.12866, -68.8881, -7.39144, 0.59 ) }
    dend_30 { pt3dadd( -5.50152, -69.6907, -7.3718, 1.03 ) }
    dend_30 { pt3dadd( -5.84204, -70.4792, -7.35858, 1.25 ) }
    dend_30 { pt3dadd( -6.17663, -71.4079, -7.34168, 1.03 ) }
    dend_30 { pt3dadd( -6.52786, -72.6094, -7.31955, 0.66 ) }
    dend_30 { pt3dadd( -6.79047, -73.59, -7.30417, 0.66 ) }
    dend_30 { pt3dadd( -7.05862, -74.6021, -7.30302, 0.81 ) }
    dend_30 { pt3dadd( -7.35223, -75.7873, -7.33243, 0.81 ) }
    dend_30 { pt3dadd( -7.55824, -76.7804, -7.39535, 0.66 ) }
    dend_30 { pt3dadd( -7.71488, -77.8338, -7.50241, 0.52 ) }
    dend_30 { pt3dadd( -7.77889, -78.46, -7.60054, 0.52 ) }
    dend_30 { pt3dadd( -7.84689, -79.2276, -7.74024, 0.52 ) }
    dend_30 { pt3dadd( -7.94733, -80.3215, -7.9663, 0.66 ) }
    dend_30 { pt3dadd( -8.0546, -81.3144, -8.18269, 0.66 ) }
    dend_30 { pt3dadd( -8.18942, -82.3629, -8.42251, 0.59 ) }
    dend_30 { pt3dadd( -8.36469, -83.5118, -8.67826, 1.18 ) }
    dend_30 { pt3dadd( -8.51027, -84.5126, -8.89093, 1.55 ) }
    dend_30 { pt3dadd( -8.67101, -85.4691, -9.07762, 1.99 ) }
    dend_30 { pt3dadd( -8.94695, -86.6243, -9.28582, 2.73 ) }
    dend_30 { pt3dadd( -9.21278, -87.4762, -9.42716, 2.87 ) }
    dend_30 { pt3dadd( -9.50565, -88.2693, -9.56394, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -1.16123, -58.021, -8.06444, 0.52 ) }
    dend_29 { pt3dadd( -0.371333, -59.4851, -9.21124, 0.52 ) }
    dend_29 { pt3dadd( -0.200277, -59.83, -9.45078, 0.52 ) }
    dend_29 { pt3dadd( 0.393227, -60.97, -10.239, 0.52 ) }
    dend_29 { pt3dadd( 0.875463, -61.8164, -10.825, 0.66 ) }
    dend_29 { pt3dadd( 1.19194, -62.3349, -11.1641, 0.66 ) }
    dend_29 { pt3dadd( 1.4822, -62.7733, -11.4396, 0.44 ) }
    dend_29 { pt3dadd( 1.83778, -63.3773, -11.8213, 0.88 ) }
    dend_29 { pt3dadd( 2.1522, -63.9444, -12.1441, 1.33 ) }
    dend_29 { pt3dadd( 2.49345, -64.5556, -12.4531, 1.47 ) }
    dend_29 { pt3dadd( 2.89466, -65.2632, -12.8838, 1.03 ) }
    dend_29 { pt3dadd( 3.40721, -66.3593, -13.6913, 0.44 ) }
    dend_29 { pt3dadd( 3.55817, -67.0218, -14.3285, 0.44 ) }
    dend_29 { pt3dadd( 3.56867, -67.774, -15.2938, 0.37 ) }
    dend_29 { pt3dadd( 3.51399, -68.3161, -16.1334, 0.37 ) }
    dend_29 { pt3dadd( 3.47087, -69.0119, -17.3866, 0.37 ) }
    dend_29 { pt3dadd( 3.49231, -69.4686, -18.3271, 0.74 ) }
    dend_29 { pt3dadd( 3.55985, -69.7808, -19.0279, 0.96 ) }
    dend_29 { pt3dadd( 3.73279, -70.2179, -19.976, 0.96 ) }
    dend_29 { pt3dadd( 4.11481, -71.015, -21.6181, 0.44 ) }
    dend_29 { pt3dadd( 4.42002, -71.566, -22.6466, 1.33 ) }
    dend_29 { pt3dadd( 4.86327, -72.3256, -23.9245, 1.55 ) }
    dend_29 { pt3dadd( 5.26346, -73.0253, -25.0337, 1.33 ) }
    dend_29 { pt3dadd( 5.79061, -73.9812, -26.4159, 0.81 ) }
    dend_29 { pt3dadd( 6.01364, -74.3915, -26.9445, 1.25 ) }
    dend_29 { pt3dadd( 6.29618, -74.9012, -27.5108, 0.88 ) }
    dend_29 { pt3dadd( 6.58246, -75.4739, -28.0511, 0.37 ) }
    dend_29 { pt3dadd( 6.80876, -75.9789, -28.4405, 0.81 ) }
    dend_29 { pt3dadd( 7.02802, -76.5199, -28.805, 1.03 ) }
    dend_29 { pt3dadd( 7.16535, -76.846, -28.9953, 1.03 ) }
    dend_29 { pt3dadd( 7.67544, -77.978, -29.6141, 0.29 ) }
    dend_29 { pt3dadd( 7.94558, -78.5536, -29.9029, 0.29 ) }
    dend_29 { pt3dadd( 8.32508, -79.3008, -30.2383, 1.84 ) }
    dend_29 { pt3dadd( 8.69088, -79.9316, -30.5142, 2.14 ) }
    dend_29 { pt3dadd( 9.72056, -81.4926, -31.2238, 0.29 ) }
    dend_29 { pt3dadd( 10.2566, -82.2102, -31.5543, 0.81 ) }
    dend_29 { pt3dadd( 10.8032, -82.8571, -31.8508, 0.81 ) }
    dend_29 { pt3dadd( 11.3779, -83.4618, -32.1441, 0.52 ) }
    dend_29 { pt3dadd( 12.1728, -84.2098, -32.5549, 1.25 ) }
    dend_29 { pt3dadd( 12.6974, -84.6653, -32.8354, 1.4 ) }
    dend_29 { pt3dadd( 14.0489, -85.7936, -33.5564, 0.22 ) }
    dend_29 { pt3dadd( 14.8783, -86.4808, -33.9721, 0.22 ) }
    dend_29 { pt3dadd( 15.8118, -87.2663, -34.4101, 1.4 ) }
    dend_29 { pt3dadd( 16.3908, -87.7877, -34.6647, 2.21 ) }
    dend_29 { pt3dadd( 16.6522, -88.0458, -34.7661, 2.21 ) }
    dend_29 { pt3dadd( 18.3237, -89.8633, -35.3326, 0.22 ) }
    dend_29 { pt3dadd( 18.7684, -90.375, -35.4734, 0.74 ) }
    dend_29 { pt3dadd( 19.1617, -90.849, -35.6047, 1.03 ) }
    dend_29 { pt3dadd( 19.7955, -91.6689, -35.8273, 0.59 ) }
    dend_29 { pt3dadd( 21.2723, -93.691, -36.3637, 0.22 ) }
    dend_29 { pt3dadd( 23.147, -96.3181, -37.0854, 0.22 ) }
    dend_29 { pt3dadd( 23.8053, -97.2518, -37.3714, 0.81 ) }
    dend_29 { pt3dadd( 24.2957, -97.9419, -37.5958, 0.96 ) }
    dend_29 { pt3dadd( 25.8939, -100.191, -38.3703, 0.22 ) }
    dend_29 { pt3dadd( 26.9013, -101.579, -38.8988, 0.22 ) }
    dend_29 { pt3dadd( 27.4636, -102.347, -39.231, 0.88 ) }
    dend_29 { pt3dadd( 28.0245, -103.091, -39.5987, 0.88 ) }
    dend_29 { pt3dadd( 29.6132, -105.171, -40.6797, 0.15 ) }
    dend_29 { pt3dadd( 30.8066, -106.692, -41.4356, 0.15 ) }
    dend_29 { pt3dadd( 31.5056, -107.552, -41.869, 0.15 ) }
    dend_29 { pt3dadd( 32.1391, -108.336, -42.2539, 1.62 ) }
    dend_29 { pt3dadd( 32.5316, -108.841, -42.4861, 1.92 ) }
    dend_29 { pt3dadd( 32.8391, -109.246, -42.6484, 1.92 ) }
    dend_29 { pt3dadd( 34.8142, -111.942, -43.6163, 0.22 ) }
    dend_29 { pt3dadd( 35.2332, -112.519, -43.7987, 0.66 ) }
    dend_29 { pt3dadd( 35.5499, -112.966, -43.9302, 0.88 ) }
    dend_29 { pt3dadd( 35.8753, -113.423, -44.0667, 0.88 ) }
    dend_29 { pt3dadd( 36.9338, -114.914, -44.6233, 0.15 ) }
    dend_29 { pt3dadd( 37.7377, -116.119, -45.2128, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 38.1773, -116.852, -45.6473, 0.81 ) }
    dend_29 { pt3dadd( 38.448, -117.375, -45.9777, 1.03 ) }
    dend_29 { pt3dadd( 38.656, -117.847, -46.2913, 1.03 ) }
    dend_29 { pt3dadd( 39.2205, -119.434, -47.4075, 0.22 ) }
    dend_29 { pt3dadd( 39.6782, -121.152, -48.7012, 0.22 ) }
    dend_29 { pt3dadd( 39.8451, -121.85, -49.2702, 0.22 ) }
    dend_29 { pt3dadd( 40.0802, -122.861, -50.1451, 1.03 ) }
    dend_29 { pt3dadd( 40.2053, -123.386, -50.6038, 1.62 ) }
    dend_29 { pt3dadd( 40.3369, -123.917, -51.0938, 1.62 ) }
    dend_29 { pt3dadd( 40.5852, -124.811, -51.9716, 1.03 ) }
    dend_29 { pt3dadd( 41.1481, -126.645, -53.8543, 0.22 ) }
    dend_29 { pt3dadd( 41.4249, -127.503, -54.8341, 0.44 ) }
    dend_29 { pt3dadd( 41.5969, -127.974, -55.4, 0.44 ) }
    dend_29 { pt3dadd( 41.9915, -129.014, -56.6557, 0.66 ) }
    dend_29 { pt3dadd( 42.1982, -129.539, -57.2687, 0.96 ) }
    dend_29 { pt3dadd( 42.4483, -130.145, -57.9597, 0.37 ) }
    dend_29 { pt3dadd( 43.2797, -132.088, -60.0786, 0.66 ) }
    dend_29 { pt3dadd( 43.4638, -132.487, -60.4988, 0.66 ) }
    dend_29 { pt3dadd( 44.1666, -133.939, -62.0327, 0.22 ) }
    dend_29 { pt3dadd( 44.5634, -134.707, -62.8011, 0.22 ) }
    dend_29 { pt3dadd( 44.939, -135.391, -63.4652, 0.81 ) }
    dend_29 { pt3dadd( 45.3174, -136.007, -64.0347, 0.96 ) }
    dend_29 { pt3dadd( 45.5794, -136.408, -64.2998, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 22.8505, 186.412, -33.7281, 0.37 ) }
    dend_24 { pt3dadd( 24.8353, 185.409, -31.5357, 0.37 ) }
    dend_24 { pt3dadd( 25.2403, 185.204, -31.0884, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 22.8505, 186.412, -33.7281, 0.22 ) }
    dend_23 { pt3dadd( 23.9791, 188.856, -34.0648, 0.22 ) }
    dend_23 { pt3dadd( 24.5432, 190.188, -34.2921, 0.22 ) }
    dend_23 { pt3dadd( 24.9698, 191.244, -34.4909, 0.74 ) }
    dend_23 { pt3dadd( 25.1194, 191.636, -34.5662, 0.74 ) }
    dend_23 { pt3dadd( 25.8122, 193.452, -34.9148, 0.15 ) }
    dend_23 { pt3dadd( 26.2605, 194.627, -35.1404, 0.15 ) }
    dend_23 { pt3dadd( 26.5632, 195.477, -35.3941, 0.66 ) }
    dend_23 { pt3dadd( 26.7188, 196.004, -35.5244, 0.88 ) }
    dend_23 { pt3dadd( 26.8915, 196.607, -35.6388, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -10.0043, 50.512, 1.92991, 0.66 ) }
    dend_17 { pt3dadd( -10.3532, 52.4116, 1.7292, 0.66 ) }
    dend_17 { pt3dadd( -10.4297, 53.1311, 1.6819, 0.96 ) }
    dend_17 { pt3dadd( -10.5153, 53.9756, 1.64112, 0.96 ) }
    dend_17 { pt3dadd( -10.6249, 55.1296, 1.59913, 0.59 ) }
    dend_17 { pt3dadd( -10.7108, 56.1523, 1.56959, 0.59 ) }
    dend_17 { pt3dadd( -10.7945, 57.3618, 1.54124, 0.59 ) }
    dend_17 { pt3dadd( -10.8768, 59.1205, 1.55284, 0.59 ) }
    dend_17 { pt3dadd( -10.8913, 59.9504, 1.56174, 0.52 ) }
    dend_17 { pt3dadd( -10.8879, 61.1904, 1.58021, 0.88 ) }
    dend_17 { pt3dadd( -10.8861, 62.089, 1.58733, 1.11 ) }
    dend_17 { pt3dadd( -10.9045, 63.161, 1.58279, 1.11 ) }
    dend_17 { pt3dadd( -10.942, 64.3953, 1.57853, 0.74 ) }
    dend_17 { pt3dadd( -11.0087, 65.6891, 1.57512, 0.74 ) }
    dend_17 { pt3dadd( -11.11, 67.3449, 1.5757, 0.74 ) }
    dend_17 { pt3dadd( -11.2012, 68.4867, 1.56968, 0.52 ) }
    dend_17 { pt3dadd( -11.3231, 69.7075, 1.54629, 0.52 ) }
    dend_17 { pt3dadd( -11.4217, 70.5866, 1.51844, 0.96 ) }
    dend_17 { pt3dadd( -11.571, 71.8841, 1.45047, 1.11 ) }
    dend_17 { pt3dadd( -11.7983, 73.8076, 1.31788, 1.11 ) }
    dend_17 { pt3dadd( -11.9465, 75.0713, 1.21454, 1.11 ) }
    dend_17 { pt3dadd( -12.075, 76.3311, 1.12055, 0.81 ) }
    dend_17 { pt3dadd( -12.1694, 77.4387, 1.04531, 0.74 ) }
    dend_17 { pt3dadd( -12.2428, 78.5932, 0.977493, 0.74 ) }
    dend_17 { pt3dadd( -12.2837, 79.6759, 0.930024, 0.44 ) }
    dend_17 { pt3dadd( -12.3111, 80.5921, 0.908018, 0.44 ) }
    dend_17 { pt3dadd( -12.3609, 82.1002, 0.912117, 0.74 ) }
    dend_17 { pt3dadd( -12.3946, 83.1414, 0.935633, 0.74 ) }
    dend_17 { pt3dadd( -12.4236, 84.2485, 0.969713, 0.37 ) }
    dend_17 { pt3dadd( -12.4223, 85.398, 1.0116, 0.74 ) }
    dend_17 { pt3dadd( -12.4079, 86.4013, 1.01185, 0.96 ) }
    dend_17 { pt3dadd( -12.3819, 87.5515, 0.967963, 0.96 ) }
    dend_17 { pt3dadd( -12.3464, 88.8165, 0.856919, 0.81 ) }
    dend_17 { pt3dadd( -12.303, 90.0036, 0.717125, 0.52 ) }
    dend_17 { pt3dadd( -12.2424, 91.2439, 0.541998, 0.52 ) }
    dend_17 { pt3dadd( -12.1229, 92.8711, 0.286825, 1.03 ) }
    dend_17 { pt3dadd( -12.0421, 93.7359, 0.142702, 1.55 ) }
    dend_17 { pt3dadd( -11.9617, 94.5176, 0.00517372, 1.69 ) }
    dend_17 { pt3dadd( -11.9083, 95.027, -0.0840845, 1.69 ) }
    dend_17 { pt3dadd( -11.77, 96.2867, -0.283497, 0.37 ) }
    dend_17 { pt3dadd( -11.6478, 97.341, -0.412299, 0.44 ) }
    dend_17 { pt3dadd( -11.5635, 97.8902, -0.446516, 0.44 ) }
    dend_17 { pt3dadd( -11.4475, 98.5229, -0.468084, 0.44 ) }
    dend_17 { pt3dadd( -11.2344, 99.5702, -0.480626, 0.29 ) }
    dend_17 { pt3dadd( -11.1291, 100.016, -0.483573, 0.59 ) }
    dend_17 { pt3dadd( -10.918, 100.772, -0.486231, 0.44 ) }
    dend_17 { pt3dadd( -10.5721, 101.96, -0.486199, 0.29 ) }
    dend_17 { pt3dadd( -10.2685, 103.062, -0.482233, 1.18 ) }
    dend_17 { pt3dadd( -10.1156, 103.656, -0.477638, 1.18 ) }
    dend_17 { pt3dadd( -9.89256, 104.546, -0.472662, 0.52 ) }
    dend_17 { pt3dadd( -9.68021, 105.401, -0.46801, 0.29 ) }
    dend_17 { pt3dadd( -9.43089, 106.376, -0.436149, 0.29 ) }
    dend_17 { pt3dadd( -9.22035, 107.26, -0.361342, 0.29 ) }
    dend_17 { pt3dadd( -9.10056, 107.839, -0.287024, 0.29 ) }
    dend_17 { pt3dadd( -8.89785, 108.992, -0.101151, 0.81 ) }
    dend_17 { pt3dadd( -8.73697, 110.003, 0.086562, 0.44 ) }
    dend_17 { pt3dadd( -8.56631, 110.971, 0.260073, 0.22 ) }
    dend_17 { pt3dadd( -8.35284, 111.948, 0.423136, 0.44 ) }
    dend_17 { pt3dadd( -8.26308, 112.323, 0.489003, 0.44 ) }
    dend_17 { pt3dadd( -8.07617, 113.126, 0.634055, 0.29 ) }
    dend_17 { pt3dadd( -7.92293, 113.852, 0.769985, 0.29 ) }
    dend_17 { pt3dadd( -7.71017, 114.843, 0.935102, 0.29 ) }
    dend_17 { pt3dadd( -7.56965, 115.476, 1.01863, 0.29 ) }
    dend_17 { pt3dadd( -7.38316, 116.291, 1.11684, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -7.23579, 116.953, 1.20293, 0.66 ) }
    dend_17 { pt3dadd( -7.0549, 117.79, 1.29119, 0.74 ) }
    dend_17 { pt3dadd( -6.89497, 118.701, 1.39154, 0.37 ) }
    dend_17 { pt3dadd( -6.79155, 119.415, 1.47322, 0.37 ) }
    dend_17 { pt3dadd( -6.65252, 120.413, 1.55826, 0.52 ) }
    dend_17 { pt3dadd( -6.54406, 121.166, 1.59454, 0.59 ) }
    dend_17 { pt3dadd( -6.37666, 122.311, 1.63438, 0.44 ) }
    dend_17 { pt3dadd( -6.25528, 123.118, 1.65491, 0.29 ) }
    dend_17 { pt3dadd( -6.16343, 123.685, 1.67186, 0.29 ) }
    dend_17 { pt3dadd( -5.96259, 124.936, 1.72392, 1.11 ) }
    dend_17 { pt3dadd( -5.84965, 125.652, 1.76186, 1.25 ) }
    dend_17 { pt3dadd( -5.77025, 126.164, 1.79443, 1.25 ) }
    dend_17 { pt3dadd( -5.58685, 127.238, 1.86339, 0.66 ) }
    dend_17 { pt3dadd( -5.45569, 127.878, 1.88583, 0.29 ) }
    dend_17 { pt3dadd( -5.22098, 128.875, 1.90904, 0.29 ) }
    dend_17 { pt3dadd( -4.98709, 129.764, 1.92171, 0.29 ) }
    dend_17 { pt3dadd( -4.75331, 130.569, 1.92699, 0.29 ) }
    dend_17 { pt3dadd( -4.377, 131.77, 1.92424, 0.96 ) }
    dend_17 { pt3dadd( -4.21222, 132.292, 1.91434, 1.47 ) }
    dend_17 { pt3dadd( -4.0831, 132.738, 1.89891, 1.47 ) }
    dend_17 { pt3dadd( -4.01593, 133.001, 1.88586, 1.47 ) }
    dend_17 { pt3dadd( -3.84842, 133.771, 1.84827, 0.74 ) }
    dend_17 { pt3dadd( -3.6766, 134.655, 1.81161, 0.29 ) }
    dend_17 { pt3dadd( -3.52635, 135.561, 1.78076, 0.52 ) }
    dend_17 { pt3dadd( -3.38665, 136.399, 1.75728, 0.74 ) }
    dend_17 { pt3dadd( -3.18413, 137.463, 1.73539, 0.44 ) }
    dend_17 { pt3dadd( -3.00106, 138.31, 1.72281, 0.29 ) }
    dend_17 { pt3dadd( -2.85607, 138.904, 1.71622, 0.29 ) }
    dend_17 { pt3dadd( -2.62454, 139.719, 1.7116, 0.66 ) }
    dend_17 { pt3dadd( -2.44075, 140.301, 1.70762, 0.74 ) }
    dend_17 { pt3dadd( -2.17128, 141.122, 1.7005, 0.74 ) }
    dend_17 { pt3dadd( -1.87605, 142.042, 1.69894, 0.29 ) }
    dend_17 { pt3dadd( -1.62803, 142.865, 1.70226, 0.29 ) }
    dend_17 { pt3dadd( -1.16517, 144.522, 1.71616, 0.29 ) }
    dend_17 { pt3dadd( -0.883514, 145.654, 1.7795, 0.52 ) }
    dend_17 { pt3dadd( -0.732455, 146.338, 1.84243, 1.18 ) }
    dend_17 { pt3dadd( -0.620047, 146.932, 1.91401, 1.4 ) }
    dend_17 { pt3dadd( -0.468604, 147.899, 2.05267, 1.4 ) }
    dend_17 { pt3dadd( -0.373714, 148.66, 2.17356, 0.66 ) }
    dend_17 { pt3dadd( -0.173323, 150.441, 2.46199, 0.29 ) }
    dend_17 { pt3dadd( -0.0334935, 151.563, 2.62159, 0.29 ) }
    dend_17 { pt3dadd( 0.0710374, 152.238, 2.68225, 0.37 ) }
    dend_17 { pt3dadd( 0.236331, 153.148, 2.71699, 0.37 ) }
    dend_17 { pt3dadd( 0.433069, 154.086, 2.71522, 0.37 ) }
    dend_17 { pt3dadd( 0.830444, 155.745, 2.64597, 0.37 ) }
    dend_17 { pt3dadd( 1.32163, 157.545, 2.48233, 0.37 ) }
    dend_17 { pt3dadd( 1.8429, 159.289, 2.30437, 1.33 ) }
    dend_17 { pt3dadd( 2.12158, 160.125, 2.20256, 1.99 ) }
    dend_17 { pt3dadd( 2.35744, 160.788, 2.1116, 1.99 ) }
    dend_17 { pt3dadd( 2.45818, 161.069, 2.06998, 1.99 ) }
    dend_17 { pt3dadd( 2.64629, 161.587, 1.99347, 1.99 ) }
    dend_17 { pt3dadd( 3.04287, 162.667, 1.85305, 0.59 ) }
    dend_17 { pt3dadd( 3.51224, 163.922, 1.73331, 0.29 ) }
    dend_17 { pt3dadd( 3.84964, 164.8, 1.69542, 0.59 ) }
    dend_17 { pt3dadd( 4.11519, 165.479, 1.6862, 0.59 ) }
    dend_17 { pt3dadd( 4.67869, 166.902, 1.70552, 0.37 ) }
    dend_17 { pt3dadd( 4.9825, 167.693, 1.73744, 0.37 ) }
    dend_17 { pt3dadd( 5.45039, 168.975, 1.82397, 0.37 ) }
    dend_17 { pt3dadd( 5.97411, 170.52, 1.96586, 0.74 ) }
    dend_17 { pt3dadd( 6.16237, 171.156, 2.02479, 0.74 ) }
    dend_17 { pt3dadd( 6.32403, 171.815, 2.09186, 0.88 ) }
    dend_17 { pt3dadd( 6.50554, 172.772, 2.19449, 0.44 ) }
    dend_17 { pt3dadd( 6.73965, 174.429, 2.33823, 0.29 ) }
    dend_17 { pt3dadd( 6.82007, 175.316, 2.36909, 0.52 ) }
    dend_17 { pt3dadd( 6.90632, 176.964, 2.33147, 1.25 ) }
    dend_17 { pt3dadd( 6.92557, 177.666, 2.29667, 1.62 ) }
    dend_17 { pt3dadd( 6.93289, 178.127, 2.25232, 1.62 ) }
    dend_17 { pt3dadd( 6.94036, 179.075, 2.12075, 0.96 ) }
    dend_17 { pt3dadd( 6.9564, 180.486, 1.86142, 0.29 ) }
    dend_17 { pt3dadd( 6.98605, 181.298, 1.69495, 0.29 ) }
    dend_17 { pt3dadd( 7.05037, 182.284, 1.49871, 0.29 ) }
    dend_17 { pt3dadd( 7.12374, 183.318, 1.32352, 0.74 ) }
    dend_17 { pt3dadd( 7.15205, 183.787, 1.26506, 0.96 ) }
    dend_17 { pt3dadd( 7.1804, 184.332, 1.2225, 0.96 ) }
    dend_17 { pt3dadd( 7.24456, 185.713, 1.14843, 0.52 ) }
    dend_17 { pt3dadd( 7.32924, 187.619, 1.03689, 0.37 ) }
    dend_17 { pt3dadd( 7.38355, 188.927, 0.964203, 0.29 ) }
    dend_17 { pt3dadd( 7.41911, 190.16, 0.889525, 0.66 ) }
    dend_17 { pt3dadd( 7.43612, 190.987, 0.823951, 0.66 ) }
    dend_17 { pt3dadd( 7.45108, 192.539, 0.672639, 0.29 ) }
    dend_17 { pt3dadd( 7.45747, 193.309, 0.591696, 0.29 ) }
    dend_17 { pt3dadd( 7.48242, 195.338, 0.373228, 0.29 ) }
    dend_17 { pt3dadd( 7.53859, 197.546, 0.142923, 1.99 ) }
    dend_17 { pt3dadd( 7.55321, 198.048, 0.097666, 2.28 ) }
    dend_17 { pt3dadd( 7.56823, 198.757, 0.0495281, 1.55 ) }
    dend_17 { pt3dadd( 7.57993, 199.535, 0.0326917, 0.88 ) }
    dend_17 { pt3dadd( 7.585, 200.805, 0.073287, 0.22 ) }
    dend_17 { pt3dadd( 7.5785, 201.4, 0.117825, 0.22 ) }
    dend_17 { pt3dadd( 7.55754, 202.486, 0.236673, 0.66 ) }
    dend_17 { pt3dadd( 7.54392, 203.173, 0.311894, 0.66 ) }
    dend_17 { pt3dadd( 7.52884, 204.336, 0.427811, 0.29 ) }
    dend_17 { pt3dadd( 7.51083, 206.197, 0.57707, 0.22 ) }
    dend_17 { pt3dadd( 7.52332, 207.139, 0.640849, 0.22 ) }
    dend_17 { pt3dadd( 7.55983, 208.137, 0.692789, 0.52 ) }
    dend_17 { pt3dadd( 7.66115, 209.385, 0.732327, 0.44 ) }
    dend_17 { pt3dadd( 7.79524, 210.471, 0.746218, 0.44 ) }
    dend_17 { pt3dadd( 7.99531, 211.725, 0.733359, 0.44 ) }
    dend_17 { pt3dadd( 8.38797, 213.667, 0.688144, 0.22 ) }
    dend_17 { pt3dadd( 8.71555, 215.113, 0.647121, 0.66 ) }
    dend_17 { pt3dadd( 9.01155, 216.282, 0.60869, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 9.18355, 216.9, 0.586732, 1.77 ) }
    dend_17 { pt3dadd( 9.35312, 217.454, 0.566642, 1.77 ) }
    dend_17 { pt3dadd( 9.63716, 218.265, 0.538366, 0.88 ) }
    dend_17 { pt3dadd( 9.98203, 219.167, 0.540775, 0.29 ) }
    dend_17 { pt3dadd( 10.2247, 219.779, 0.564336, 0.52 ) }
    dend_17 { pt3dadd( 10.839, 221.362, 0.660526, 0.22 ) }
    dend_17 { pt3dadd( 11.1908, 222.265, 0.7109, 0.52 ) }
    dend_17 { pt3dadd( 11.5903, 223.281, 0.755099, 0.52 ) }
    dend_17 { pt3dadd( 12.4543, 225.516, 0.82542, 0.22 ) }
    dend_17 { pt3dadd( 13.108, 227.226, 0.854062, 0.37 ) }
    dend_17 { pt3dadd( 13.5308, 228.351, 0.868691, 0.37 ) }
    dend_17 { pt3dadd( 13.9869, 229.604, 0.875146, 1.92 ) }
    dend_17 { pt3dadd( 14.187, 230.18, 0.869364, 2.21 ) }
    dend_17 { pt3dadd( 14.3773, 230.777, 0.842539, 2.21 ) }
    dend_17 { pt3dadd( 14.5872, 231.48, 0.731219, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -10.0043, 50.512, 1.92991, 0.66 ) }
    dend_14 { pt3dadd( -9.4722, 52.4357, 2.27627, 0.66 ) }
    dend_14 { pt3dadd( -9.14535, 53.6072, 2.47814, 0.81 ) }
    dend_14 { pt3dadd( -8.90949, 54.4785, 2.65038, 0.37 ) }
    dend_14 { pt3dadd( -8.64497, 55.5279, 2.86212, 0.29 ) }
    dend_14 { pt3dadd( -8.19346, 57.2874, 3.20612, 0.29 ) }
    dend_14 { pt3dadd( -7.9045, 58.3173, 3.40879, 0.29 ) }
    dend_14 { pt3dadd( -7.57122, 59.3077, 3.58253, 0.29 ) }
    dend_14 { pt3dadd( -7.05028, 60.613, 3.83639, 0.29 ) }
    dend_14 { pt3dadd( -6.5842, 61.6837, 4.05315, 0.29 ) }
    dend_14 { pt3dadd( -6.1196, 62.7501, 4.26848, 0.74 ) }
    dend_14 { pt3dadd( -5.79738, 63.4666, 4.42194, 0.74 ) }
    dend_14 { pt3dadd( -5.18524, 64.6801, 4.69008, 0.29 ) }
    dend_14 { pt3dadd( -4.82253, 65.3767, 4.85244, 0.37 ) }
    dend_14 { pt3dadd( -3.99001, 66.9981, 5.21603, 0.37 ) }
    dend_14 { pt3dadd( -3.55055, 67.915, 5.42517, 0.37 ) }
    dend_14 { pt3dadd( -3.10152, 68.9981, 5.6657, 0.37 ) }
    dend_14 { pt3dadd( -2.92126, 69.4973, 5.77368, 0.37 ) }
    dend_14 { pt3dadd( -2.63593, 70.4081, 5.9717, 0.22 ) }
    dend_14 { pt3dadd( -2.38145, 71.2924, 6.16222, 0.22 ) }
    dend_14 { pt3dadd( -2.15648, 71.9902, 6.30725, 0.66 ) }
    dend_14 { pt3dadd( -1.90673, 72.8306, 6.44329, 0.96 ) }
    dend_14 { pt3dadd( 0.856985, 82.8809, 7.30592, 0.96 ) }
    dend_14 { pt3dadd( 5.64738, 91.6608, 9.97675, 0.96 ) }
    dend_14 { pt3dadd( 9.33657, 100.576, 13.7584, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 30.2803, 10.8236, 7.24461, 0.66 ) }
    dend_8 { pt3dadd( 31.097, 9.1154, 7.18025, 0.66 ) }
    dend_8 { pt3dadd( 31.3274, 8.57278, 7.12696, 0.66 ) }
    dend_8 { pt3dadd( 31.7068, 7.73781, 7.06926, 0.88 ) }
    dend_8 { pt3dadd( 32.394, 6.39075, 7.0269, 0.88 ) }
    dend_8 { pt3dadd( 32.8891, 5.53248, 7.03442, 0.88 ) }
    dend_8 { pt3dadd( 33.3678, 4.81966, 7.06557, 1.03 ) }
    dend_8 { pt3dadd( 33.9312, 4.0486, 7.10982, 1.03 ) }
    dend_8 { pt3dadd( 34.7526, 3.44766, 7.3024, 0.88 ) }
    dend_8 { pt3dadd( 35.4128, 3.30093, 7.50901, 0.88 ) }
    dend_8 { pt3dadd( 35.9818, 3.24704, 7.70921, 0.88 ) }
    dend_8 { pt3dadd( 36.8825, 3.13064, 8.05293, 0.81 ) }
    dend_8 { pt3dadd( 37.9172, 2.85077, 8.47485, 0.81 ) }
    dend_8 { pt3dadd( 38.5734, 2.53547, 8.72531, 0.81 ) }
    dend_8 { pt3dadd( 39.4049, 1.92248, 8.97345, 0.74 ) }
    dend_8 { pt3dadd( 40.2902, 1.12713, 9.19108, 0.88 ) }
    dend_8 { pt3dadd( 41.0758, 0.328885, 9.33993, 0.88 ) }
    dend_8 { pt3dadd( 41.9172, -0.638849, 9.45407, 0.52 ) }
    dend_8 { pt3dadd( 42.3403, -1.13753, 9.47385, 0.52 ) }
    dend_8 { pt3dadd( 42.8627, -1.66173, 9.43785, 0.52 ) }
    dend_8 { pt3dadd( 43.54, -2.1938, 9.34754, 0.52 ) }
    dend_8 { pt3dadd( 44.3217, -2.64557, 9.21186, 0.74 ) }
    dend_8 { pt3dadd( 45.1198, -3.01383, 9.0538, 0.74 ) }
    dend_8 { pt3dadd( 46.1355, -3.40762, 8.83954, 0.74 ) }
    dend_8 { pt3dadd( 47.4793, -3.87031, 8.56246, 0.74 ) }
    dend_8 { pt3dadd( 48.4121, -4.16319, 8.36412, 0.74 ) }
    dend_8 { pt3dadd( 49.1516, -4.35571, 8.21264, 0.74 ) }
    dend_8 { pt3dadd( 49.9567, -4.47939, 8.05992, 0.74 ) }
    dend_8 { pt3dadd( 50.4286, -4.5138, 7.9908, 0.88 ) }
    dend_8 { pt3dadd( 51.7623, -4.50284, 7.82437, 0.88 ) }
    dend_8 { pt3dadd( 52.8994, -4.4544, 7.70544, 0.88 ) }
    dend_8 { pt3dadd( 54.3067, -4.40726, 7.57417, 0.66 ) }
    dend_8 { pt3dadd( 55.3351, -4.39493, 7.5018, 0.66 ) }
    dend_8 { pt3dadd( 57.9792, -4.3898, 7.38126, 0.59 ) }
    dend_8 { pt3dadd( 58.8956, -4.39657, 7.35576, 0.52 ) }
    dend_8 { pt3dadd( 60.2825, -4.37493, 7.34074, 0.52 ) }
    dend_8 { pt3dadd( 61.1179, -4.31455, 7.34675, 0.52 ) }
    dend_8 { pt3dadd( 62.0271, -4.1597, 7.35931, 0.52 ) }
    dend_8 { pt3dadd( 63.1143, -3.90042, 7.3817, 0.52 ) }
    dend_8 { pt3dadd( 63.841, -3.70927, 7.40634, 0.52 ) }
    dend_8 { pt3dadd( 65.0267, -3.4515, 7.45839, 0.52 ) }
    dend_8 { pt3dadd( 66.3128, -3.17195, 7.524, 0.52 ) }
    dend_8 { pt3dadd( 67.5179, -2.94993, 7.59295, 0.52 ) }
    dend_8 { pt3dadd( 68.6386, -2.83984, 7.66554, 0.52 ) }
    dend_8 { pt3dadd( 69.9139, -2.87672, 7.76296, 0.52 ) }
    dend_8 { pt3dadd( 70.7887, -3.05339, 7.85092, 0.52 ) }
    dend_8 { pt3dadd( 71.6002, -3.32501, 7.9848, 0.52 ) }
    dend_8 { pt3dadd( 72.1446, -3.52704, 8.10815, 0.52 ) }
    dend_8 { pt3dadd( 72.8309, -3.765, 8.29469, 0.52 ) }
    dend_8 { pt3dadd( 74.2208, -4.15716, 8.75442, 0.29 ) }
    dend_8 { pt3dadd( 76.7053, -4.65169, 9.69071, 0.29 ) }
    dend_8 { pt3dadd( 78.9594, -4.9342, 10.6055, 0.29 ) }
    dend_8 { pt3dadd( 80.1096, -4.9824, 11.1099, 0.29 ) }
    dend_8 { pt3dadd( 80.9356, -4.97497, 11.4875, 0.44 ) }
    dend_8 { pt3dadd( 81.8106, -4.89272, 11.9206, 0.59 ) }
    dend_8 { pt3dadd( 82.3598, -4.76261, 12.2506, 0.59 ) }
    dend_8 { pt3dadd( 83.2531, -4.20487, 12.9439, 0.59 ) }
    dend_8 { pt3dadd( 83.727, -3.67615, 13.3463, 0.59 ) }
    dend_8 { pt3dadd( 93.0589, -6.86815, 15.2632, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 30.2803, 10.8236, 7.24461, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 31.8205, 10.4067, 7.23929, 1.11 ) }
    dend_3 { pt3dadd( 32.7705, 10.0212, 7.22058, 1.11 ) }
    dend_3 { pt3dadd( 33.8643, 9.63044, 7.10194, 1.25 ) }
    dend_3 { pt3dadd( 34.716, 9.41528, 6.98013, 1.47 ) }
    dend_3 { pt3dadd( 35.8802, 9.25694, 6.79801, 1.4 ) }
    dend_3 { pt3dadd( 36.9199, 9.21952, 6.62767, 1.4 ) }
    dend_3 { pt3dadd( 38.0956, 9.23417, 6.38257, 1.18 ) }
    dend_3 { pt3dadd( 39.6965, 9.56554, 5.99859, 1.18 ) }
    dend_3 { pt3dadd( 40.7982, 10.0412, 5.70114, 1.18 ) }
    dend_3 { pt3dadd( 41.7406, 10.5394, 5.42944, 1.18 ) }
    dend_3 { pt3dadd( 42.3006, 10.8412, 5.26737, 0.88 ) }
    dend_3 { pt3dadd( 42.8612, 11.082, 5.11256, 0.88 ) }
    dend_3 { pt3dadd( 43.7432, 11.2584, 4.88818, 0.88 ) }
    dend_3 { pt3dadd( 45.0926, 11.1824, 4.58397, 1.11 ) }
    dend_3 { pt3dadd( 46.1175, 10.9666, 4.35055, 1.11 ) }
    dend_3 { pt3dadd( 47.1549, 10.6657, 4.1086, 1.11 ) }
    dend_3 { pt3dadd( 48.3273, 10.2582, 3.83609, 1.25 ) }
    dend_3 { pt3dadd( 49.5224, 9.77936, 3.56263, 1.33 ) }
    dend_3 { pt3dadd( 50.0746, 9.53246, 3.44168, 1.47 ) }
    dend_3 { pt3dadd( 50.9856, 9.13702, 3.26379, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -158.697, -121.154, 0.253671, 0.59 ) }
    dend_47 { pt3dadd( -158.657, -123.098, -0.253991, 0.59 ) }
    dend_47 { pt3dadd( -158.628, -123.924, -0.436708, 0.59 ) }
    dend_47 { pt3dadd( -158.581, -124.649, -0.576904, 0.52 ) }
    dend_47 { pt3dadd( -158.516, -125.489, -0.717137, 0.52 ) }
    dend_47 { pt3dadd( -158.465, -126.4, -0.854412, 0.88 ) }
    dend_47 { pt3dadd( -158.415, -127.411, -0.996325, 1.03 ) }
    dend_47 { pt3dadd( -158.389, -128.023, -1.03767, 1.03 ) }
    dend_47 { pt3dadd( -158.313, -129.103, -1.09636, 1.03 ) }
    dend_47 { pt3dadd( -158.221, -130.033, -1.13748, 0.29 ) }
    dend_47 { pt3dadd( -158.16, -130.696, -1.16263, 0.29 ) }
    dend_47 { pt3dadd( -158.125, -131.244, -1.17954, 0.29 ) }
    dend_47 { pt3dadd( -158.108, -132.281, -1.21259, 0.59 ) }
    dend_47 { pt3dadd( -158.134, -133.135, -1.20157, 0.74 ) }
    dend_47 { pt3dadd( -158.184, -133.746, -1.16973, 0.88 ) }
    dend_47 { pt3dadd( -158.253, -134.339, -1.12592, 0.88 ) }
    dend_47 { pt3dadd( -158.329, -134.891, -1.06923, 0.88 ) }
    dend_47 { pt3dadd( -158.471, -135.628, -0.977163, 0.81 ) }
    dend_47 { pt3dadd( -158.834, -137.219, -0.767209, 0.37 ) }
    dend_47 { pt3dadd( -159.029, -138.079, -0.646982, 1.03 ) }
    dend_47 { pt3dadd( -159.223, -138.937, -0.494241, 1.33 ) }
    dend_47 { pt3dadd( -159.406, -139.723, -0.333407, 1.33 ) }
    dend_47 { pt3dadd( -159.661, -140.73, -0.109504, 1.03 ) }
    dend_47 { pt3dadd( -159.892, -141.575, 0.084176, 0.74 ) }
    dend_47 { pt3dadd( -160.108, -142.305, 0.231636, 0.37 ) }
    dend_47 { pt3dadd( -160.401, -143.272, 0.476635, 0.74 ) }
    dend_47 { pt3dadd( -160.58, -143.83, 0.632177, 0.74 ) }
    dend_47 { pt3dadd( -160.783, -144.508, 0.778435, 0.59 ) }
    dend_47 { pt3dadd( -160.915, -145.023, 0.855208, 0.37 ) }
    dend_47 { pt3dadd( -161.081, -145.765, 0.8985, 0.37 ) }
    dend_47 { pt3dadd( -161.35, -146.972, 0.83015, 0.66 ) }
    dend_47 { pt3dadd( -161.558, -147.818, 0.693963, 0.74 ) }
    dend_47 { pt3dadd( -161.955, -149.238, 0.378148, 0.52 ) }
    dend_47 { pt3dadd( -162.128, -149.828, 0.220267, 0.52 ) }
    dend_47 { pt3dadd( -162.375, -150.525, 0.0176992, 1.33 ) }
    dend_47 { pt3dadd( -162.699, -151.39, -0.255627, 1.55 ) }
    dend_47 { pt3dadd( -163.13, -152.528, -0.592033, 1.99 ) }
    dend_47 { pt3dadd( -163.405, -153.214, -0.749842, 2.21 ) }
    dend_47 { pt3dadd( -163.778, -154.072, -0.893953, 1.99 ) }
    dend_47 { pt3dadd( -164.253, -155.106, -1.06079, 1.11 ) }
    dend_47 { pt3dadd( -164.76, -156.291, -1.26262, 0.37 ) }
    dend_47 { pt3dadd( -165.138, -157.303, -1.43909, 1.11 ) }
    dend_47 { pt3dadd( -165.311, -157.816, -1.53359, 1.25 ) }
    dend_47 { pt3dadd( -165.529, -158.478, -1.65566, 1.25 ) }
    dend_47 { pt3dadd( -166.023, -159.932, -1.95943, 0.29 ) }
    dend_47 { pt3dadd( -166.343, -160.855, -2.17213, 0.29 ) }
    dend_47 { pt3dadd( -166.671, -161.7, -2.3694, 0.44 ) }
    dend_47 { pt3dadd( -167.027, -162.574, -2.57967, 0.59 ) }
    dend_47 { pt3dadd( -167.455, -163.607, -2.81673, 0.88 ) }
    dend_47 { pt3dadd( -167.816, -164.467, -2.99987, 0.96 ) }
    dend_47 { pt3dadd( -168.211, -165.295, -3.15415, 0.66 ) }
    dend_47 { pt3dadd( -168.748, -166.284, -3.29197, 0.37 ) }
    dend_47 { pt3dadd( -169.159, -166.99, -3.37594, 0.29 ) }
    dend_47 { pt3dadd( -169.612, -167.73, -3.42652, 0.29 ) }
    dend_47 { pt3dadd( -170.003, -168.381, -3.44183, 0.29 ) }
    dend_47 { pt3dadd( -170.545, -169.26, -3.42581, 0.29 ) }
    dend_47 { pt3dadd( -171.361, -170.467, -3.39346, 0.74 ) }
    dend_47 { pt3dadd( -171.996, -171.303, -3.32921, 1.03 ) }
    dend_47 { pt3dadd( -172.786, -172.277, -3.21367, 2.28 ) }
    dend_47 { pt3dadd( -173.41, -172.986, -3.10368, 2.8 ) }
    dend_47 { pt3dadd( -174.01, -173.656, -2.99625, 3.09 ) }
    dend_47 { pt3dadd( -174.976, -174.773, -2.83137, 1.84 ) }
    dend_47 { pt3dadd( -176.097, -176.051, -2.64839, 0.29 ) }
    dend_47 { pt3dadd( -176.644, -176.712, -2.55625, 0.29 ) }
    dend_47 { pt3dadd( -177.359, -177.655, -2.44914, 0.29 ) }
    dend_47 { pt3dadd( -178.075, -178.691, -2.3383, 0.29 ) }
    dend_47 { pt3dadd( -178.557, -179.552, -2.25352, 0.88 ) }
    dend_47 { pt3dadd( -178.924, -180.327, -2.18766, 1.11 ) }
    dend_47 { pt3dadd( -179.211, -180.992, -2.15678, 0.81 ) }
    dend_47 { pt3dadd( -179.441, -181.568, -2.13052, 0.52 ) }
    dend_47 { pt3dadd( -179.787, -182.537, -2.08706, 0.29 ) }
    dend_47 { pt3dadd( -180.171, -183.686, -2.02868, 0.29 ) }
    dend_47 { pt3dadd( -180.476, -184.671, -1.97827, 0.29 ) }
    dend_47 { pt3dadd( -180.648, -185.202, -1.95145, 0.29 ) }
    dend_47 { pt3dadd( -180.973, -186.261, -1.89747, 0.81 ) }
    dend_47 { pt3dadd( -181.246, -187.245, -1.84748, 1.11 ) }
    dend_47 { pt3dadd( -181.438, -188.018, -1.80922, 0.88 ) }
    dend_47 { pt3dadd( -181.707, -189.114, -1.75765, 0.29 ) }
    dend_47 { pt3dadd( -182.028, -190.452, -1.69253, 0.29 ) }
    dend_47 { pt3dadd( -182.35, -191.643, -1.671, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -182.476, -192.077, -1.67299, 0.29 ) }
    dend_47 { pt3dadd( -182.777, -193.111, -1.70139, 0.74 ) }
    dend_47 { pt3dadd( -182.995, -193.85, -1.73807, 0.74 ) }
    dend_47 { pt3dadd( -183.292, -194.891, -1.80581, 0.44 ) }
    dend_47 { pt3dadd( -183.624, -196.101, -1.90075, 0.29 ) }
    dend_47 { pt3dadd( -183.796, -196.701, -1.95307, 0.29 ) }
    dend_47 { pt3dadd( -184.022, -197.539, -1.9971, 0.29 ) }
    dend_47 { pt3dadd( -184.245, -198.552, -2.00907, 0.29 ) }
    dend_47 { pt3dadd( -184.35, -199.138, -1.98403, 0.74 ) }
    dend_47 { pt3dadd( -184.438, -199.683, -1.93146, 0.74 ) }
    dend_47 { pt3dadd( -184.589, -200.669, -1.77663, 0.44 ) }
    dend_47 { pt3dadd( -184.777, -201.785, -1.58104, 0.29 ) }
    dend_47 { pt3dadd( -184.95, -202.751, -1.37813, 0.74 ) }
    dend_47 { pt3dadd( -185.079, -203.429, -1.22777, 1.11 ) }
    dend_47 { pt3dadd( -185.206, -204.0, -1.10238, 1.69 ) }
    dend_47 { pt3dadd( -185.319, -204.479, -1.00257, 1.92 ) }
    dend_47 { pt3dadd( -185.485, -205.171, -0.874581, 1.92 ) }
    dend_47 { pt3dadd( -185.723, -206.213, -0.725582, 1.62 ) }
    dend_47 { pt3dadd( -186.011, -207.474, -0.569625, 0.29 ) }
    dend_47 { pt3dadd( -186.234, -208.483, -0.464054, 0.22 ) }
    dend_47 { pt3dadd( -186.436, -209.315, -0.386557, 0.22 ) }
    dend_47 { pt3dadd( -186.725, -210.439, -0.302133, 0.59 ) }
    dend_47 { pt3dadd( -186.983, -211.37, -0.249841, 0.74 ) }
    dend_47 { pt3dadd( -187.184, -212.018, -0.21835, 0.74 ) }
    dend_47 { pt3dadd( -187.466, -212.851, -0.168171, 0.44 ) }
    dend_47 { pt3dadd( -187.74, -213.556, -0.120033, 0.29 ) }
    dend_47 { pt3dadd( -188.067, -214.26, -0.0423369, 0.29 ) }
    dend_47 { pt3dadd( -188.848, -215.671, 0.185586, 0.44 ) }
    dend_47 { pt3dadd( -189.31, -216.395, 0.308945, 0.59 ) }
    dend_47 { pt3dadd( -189.778, -217.066, 0.422174, 0.59 ) }
    dend_47 { pt3dadd( -190.335, -217.831, 0.526518, 0.52 ) }
    dend_47 { pt3dadd( -191.193, -218.973, 0.645393, 1.33 ) }
    dend_47 { pt3dadd( -191.906, -219.893, 0.708517, 2.06 ) }
    dend_47 { pt3dadd( -192.576, -220.779, 0.732121, 2.21 ) }
    dend_47 { pt3dadd( -193.064, -221.487, 0.71702, 2.21 ) }
    dend_47 { pt3dadd( -193.77, -222.641, 0.642381, 0.81 ) }
    dend_47 { pt3dadd( -194.199, -223.474, 0.54468, 0.29 ) }
    dend_47 { pt3dadd( -194.524, -224.23, 0.41693, 0.44 ) }
    dend_47 { pt3dadd( -194.724, -224.805, 0.312121, 0.44 ) }
    dend_47 { pt3dadd( -194.974, -225.652, 0.165066, 0.29 ) }
    dend_47 { pt3dadd( -195.161, -226.286, 0.0408418, 0.29 ) }
    dend_47 { pt3dadd( -195.398, -227.072, -0.112731, 0.29 ) }
    dend_47 { pt3dadd( -195.576, -227.584, -0.209444, 0.74 ) }
    dend_47 { pt3dadd( -195.765, -228.05, -0.278136, 0.88 ) }
    dend_47 { pt3dadd( -196.014, -228.599, -0.334733, 0.88 ) }
    dend_47 { pt3dadd( -196.42, -229.494, -0.377178, 0.29 ) }
    dend_47 { pt3dadd( -196.823, -230.394, -0.354768, 0.29 ) }
    dend_47 { pt3dadd( -197.196, -231.312, -0.256353, 0.29 ) }
    dend_47 { pt3dadd( -197.6, -232.425, -0.087358, 0.52 ) }
    dend_47 { pt3dadd( -197.779, -232.949, 0.01068, 0.52 ) }
    dend_47 { pt3dadd( -198.078, -233.911, 0.228727, 0.29 ) }
    dend_47 { pt3dadd( -198.246, -234.579, 0.418366, 0.29 ) }
    dend_47 { pt3dadd( -198.509, -235.94, 0.861831, 0.59 ) }
    dend_47 { pt3dadd( -198.632, -236.715, 1.14682, 0.29 ) }
    dend_47 { pt3dadd( -198.717, -237.225, 1.36081, 0.29 ) }
    dend_47 { pt3dadd( -198.868, -237.929, 1.69515, 0.74 ) }
    dend_47 { pt3dadd( -199.172, -238.851, 2.19395, 0.88 ) }
    dend_47 { pt3dadd( -199.501, -239.536, 2.59587, 0.29 ) }
    dend_47 { pt3dadd( -199.899, -240.157, 2.99258, 0.29 ) }
    dend_47 { pt3dadd( -200.48, -240.925, 3.47539, 0.96 ) }
    dend_47 { pt3dadd( -200.968, -241.528, 3.81177, 1.11 ) }
    dend_47 { pt3dadd( -201.598, -242.282, 4.13785, 1.11 ) }
    dend_47 { pt3dadd( -202.277, -243.139, 4.41131, 0.29 ) }
    dend_47 { pt3dadd( -202.717, -243.778, 4.56406, 0.22 ) }
    dend_47 { pt3dadd( -203.067, -244.414, 4.65917, 0.44 ) }
    dend_47 { pt3dadd( -203.4, -245.166, 4.71608, 0.44 ) }
    dend_47 { pt3dadd( -203.851, -246.428, 4.72152, 0.22 ) }
    dend_47 { pt3dadd( -204.101, -247.214, 4.6801, 0.22 ) }
    dend_47 { pt3dadd( -204.27, -247.798, 4.61674, 0.22 ) }
    dend_47 { pt3dadd( -204.463, -248.458, 4.52245, 0.59 ) }
    dend_47 { pt3dadd( -204.601, -248.932, 4.45086, 0.74 ) }
    dend_47 { pt3dadd( -205.022, -250.327, 4.20434, 0.29 ) }
    dend_47 { pt3dadd( -205.25, -251.067, 4.06051, 0.29 ) }
    dend_47 { pt3dadd( -205.542, -251.987, 3.87309, 0.44 ) }
    dend_47 { pt3dadd( -205.808, -252.867, 3.69286, 0.44 ) }
    dend_47 { pt3dadd( -206.14, -254.038, 3.47069, 0.52 ) }
    dend_47 { pt3dadd( -206.329, -254.707, 3.35593, 0.96 ) }
    dend_47 { pt3dadd( -206.523, -255.376, 3.26107, 1.4 ) }
    dend_47 { pt3dadd( -206.741, -256.052, 3.1665, 1.4 ) }
    dend_47 { pt3dadd( -207.308, -257.62, 3.03719, 0.29 ) }
    dend_47 { pt3dadd( -207.905, -259.146, 2.99853, 0.22 ) }
    dend_47 { pt3dadd( -208.217, -259.892, 3.02868, 0.37 ) }
    dend_47 { pt3dadd( -208.732, -261.078, 3.15253, 0.37 ) }
    dend_47 { pt3dadd( -209.264, -262.242, 3.33561, 0.29 ) }
    dend_47 { pt3dadd( -210.002, -263.76, 3.65117, 0.74 ) }
    dend_47 { pt3dadd( -210.415, -264.534, 3.85215, 1.11 ) }
    dend_47 { pt3dadd( -210.894, -265.349, 4.08221, 1.25 ) }
    dend_47 { pt3dadd( -211.404, -266.148, 4.30319, 1.11 ) }
    dend_47 { pt3dadd( -211.9, -266.878, 4.49047, 0.59 ) }
    dend_47 { pt3dadd( -212.557, -267.814, 4.68599, 0.29 ) }
    dend_47 { pt3dadd( -212.954, -268.374, 4.73911, 0.29 ) }
    dend_47 { pt3dadd( -213.7, -269.442, 4.79164, 0.22 ) }
    dend_47 { pt3dadd( -214.194, -270.171, 4.80535, 0.22 ) }
    dend_47 { pt3dadd( -214.469, -270.587, 4.80886, 0.66 ) }
    dend_47 { pt3dadd( -214.894, -271.24, 4.81348, 0.66 ) }
    dend_47 { pt3dadd( -215.752, -272.604, 4.84945, 0.29 ) }
    dend_47 { pt3dadd( -216.273, -273.425, 4.88514, 0.29 ) }
    dend_47 { pt3dadd( -216.822, -274.244, 4.93212, 0.29 ) }
    dend_47 { pt3dadd( -217.399, -275.05, 4.98155, 0.66 ) }
    dend_47 { pt3dadd( -217.865, -275.663, 5.0183, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -218.615, -276.604, 5.07064, 0.22 ) }
    dend_47 { pt3dadd( -219.134, -277.233, 5.09938, 0.22 ) }
    dend_47 { pt3dadd( -220.006, -278.287, 5.13307, 0.22 ) }
    dend_47 { pt3dadd( -221.532, -280.151, 5.14129, 0.22 ) }
    dend_47 { pt3dadd( -221.989, -280.753, 5.11801, 0.22 ) }
    dend_47 { pt3dadd( -222.463, -281.438, 5.06438, 1.11 ) }
    dend_47 { pt3dadd( -222.717, -281.864, 5.00832, 1.11 ) }
    dend_47 { pt3dadd( -222.835, -282.112, 4.96925, 1.11 ) }
    dend_47 { pt3dadd( -223.068, -282.764, 4.85539, 0.66 ) }
    dend_47 { pt3dadd( -223.35, -283.847, 4.64464, 0.22 ) }
    dend_47 { pt3dadd( -223.482, -284.514, 4.51744, 0.52 ) }
    dend_47 { pt3dadd( -223.685, -286.051, 4.23444, 0.22 ) }
    dend_47 { pt3dadd( -223.841, -287.301, 4.01406, 0.22 ) }
    dend_47 { pt3dadd( -223.908, -287.836, 3.92499, 0.59 ) }
    dend_47 { pt3dadd( -223.993, -288.517, 3.82167, 0.59 ) }
    dend_47 { pt3dadd( -224.112, -289.502, 3.67048, 0.52 ) }
    dend_47 { pt3dadd( -224.274, -290.955, 3.44116, 0.22 ) }
    dend_47 { pt3dadd( -224.353, -291.807, 3.30299, 0.22 ) }
    dend_47 { pt3dadd( -224.383, -292.315, 3.22, 0.22 ) }
    dend_47 { pt3dadd( -224.406, -292.893, 3.12417, 0.66 ) }
    dend_47 { pt3dadd( -224.402, -293.731, 3.03274, 0.81 ) }
    dend_47 { pt3dadd( -224.324, -294.66, 3.00122, 0.59 ) }
    dend_47 { pt3dadd( -224.043, -296.007, 3.10528, 1.25 ) }
    dend_47 { pt3dadd( -223.791, -296.727, 3.22715, 1.69 ) }
    dend_47 { pt3dadd( -223.607, -297.086, 3.3204, 1.92 ) }
    dend_47 { pt3dadd( -222.784, -298.249, 3.73431, 1.18 ) }
    dend_47 { pt3dadd( -221.95, -299.137, 4.16086, 0.22 ) }
    dend_47 { pt3dadd( -220.941, -299.961, 4.64606, 0.22 ) }
    dend_47 { pt3dadd( -220.244, -300.422, 4.95984, 0.22 ) }
    dend_47 { pt3dadd( -219.361, -300.943, 5.3132, 0.22 ) }
    dend_47 { pt3dadd( -218.72, -301.302, 5.53407, 0.66 ) }
    dend_47 { pt3dadd( -218.242, -301.567, 5.65885, 0.66 ) }
    dend_47 { pt3dadd( -216.947, -302.286, 5.93419, 0.22 ) }
    dend_47 { pt3dadd( -216.454, -302.568, 6.01892, 0.37 ) }
    dend_47 { pt3dadd( -215.956, -302.912, 6.1004, 0.37 ) }
    dend_47 { pt3dadd( -215.558, -303.248, 6.17294, 0.22 ) }
    dend_47 { pt3dadd( -214.957, -303.831, 6.28682, 0.22 ) }
    dend_47 { pt3dadd( -218.882, -313.485, 6.52288, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -158.697, -121.154, 0.253671, 0.37 ) }
    dend_46 { pt3dadd( -160.071, -120.803, 0.419097, 0.37 ) }
    dend_46 { pt3dadd( -160.65, -120.685, 0.464892, 0.37 ) }
    dend_46 { pt3dadd( -161.891, -120.49, 0.483336, 0.29 ) }
    dend_46 { pt3dadd( -162.837, -120.381, 0.465925, 0.44 ) }
    dend_46 { pt3dadd( -163.751, -120.309, 0.429063, 0.66 ) }
    dend_46 { pt3dadd( -164.278, -120.285, 0.393474, 0.81 ) }
    dend_46 { pt3dadd( -164.735, -120.286, 0.33765, 0.81 ) }
    dend_46 { pt3dadd( -166.154, -120.342, 0.103091, 0.22 ) }
    dend_46 { pt3dadd( -166.6, -120.374, 0.00653812, 0.22 ) }
    dend_46 { pt3dadd( -167.4, -120.436, -0.168445, 0.74 ) }
    dend_46 { pt3dadd( -168.056, -120.485, -0.317614, 0.88 ) }
    dend_46 { pt3dadd( -169.149, -120.576, -0.596977, 0.22 ) }
    dend_46 { pt3dadd( -169.597, -120.609, -0.751302, 0.22 ) }
    dend_46 { pt3dadd( -170.013, -120.646, -0.929561, 0.22 ) }
    dend_46 { pt3dadd( -170.485, -120.7, -1.16075, 0.74 ) }
    dend_46 { pt3dadd( -170.984, -120.789, -1.44102, 0.88 ) }
    dend_46 { pt3dadd( -171.529, -120.959, -1.81811, 0.88 ) }
    dend_46 { pt3dadd( -172.723, -121.532, -2.82263, 0.22 ) }
    dend_46 { pt3dadd( -173.145, -121.779, -3.2154, 0.22 ) }
    dend_46 { pt3dadd( -173.49, -122.001, -3.56565, 0.74 ) }
    dend_46 { pt3dadd( -173.919, -122.321, -4.08017, 0.74 ) }
    dend_46 { pt3dadd( -174.814, -122.996, -5.07052, 0.29 ) }
    dend_46 { pt3dadd( -175.096, -123.205, -5.35557, 0.29 ) }
    dend_46 { pt3dadd( -175.557, -123.543, -5.78092, 0.88 ) }
    dend_46 { pt3dadd( -176.112, -123.906, -6.25825, 1.03 ) }
    dend_46 { pt3dadd( -177.793, -124.854, -7.61296, 0.22 ) }
    dend_46 { pt3dadd( -179.394, -125.671, -8.81085, 0.22 ) }
    dend_46 { pt3dadd( -180.046, -125.964, -9.24332, 0.22 ) }
    dend_46 { pt3dadd( -180.433, -126.128, -9.48563, 1.11 ) }
    dend_46 { pt3dadd( -180.901, -126.325, -9.75804, 1.11 ) }
    dend_46 { pt3dadd( -181.406, -126.524, -9.99873, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -23.5843, -180.574, -2.3746, 0.81 ) }
    dend_40 { pt3dadd( -22.2867, -181.317, -2.34265, 0.81 ) }
    dend_40 { pt3dadd( -21.2337, -181.852, -2.33383, 0.52 ) }
    dend_40 { pt3dadd( -19.7289, -182.557, -2.34142, 0.52 ) }
    dend_40 { pt3dadd( -19.0711, -182.874, -2.35047, 0.37 ) }
    dend_40 { pt3dadd( -17.7568, -183.529, -2.37483, 0.37 ) }
    dend_40 { pt3dadd( -17.235, -183.798, -2.38549, 0.66 ) }
    dend_40 { pt3dadd( -16.7681, -184.039, -2.41078, 0.88 ) }
    dend_40 { pt3dadd( -16.3805, -184.244, -2.42803, 0.88 ) }
    dend_40 { pt3dadd( -15.3921, -184.875, -2.47198, 0.59 ) }
    dend_40 { pt3dadd( -14.5181, -185.554, -2.50926, 0.66 ) }
    dend_40 { pt3dadd( -13.6505, -186.33, -2.54122, 0.74 ) }
    dend_40 { pt3dadd( -13.1199, -186.802, -2.55928, 0.74 ) }
    dend_40 { pt3dadd( -12.7074, -187.14, -2.5723, 0.52 ) }
    dend_40 { pt3dadd( -12.0328, -187.632, -2.59584, 0.29 ) }
    dend_40 { pt3dadd( -11.3105, -188.052, -2.61038, 0.96 ) }
    dend_40 { pt3dadd( -10.6534, -188.375, -2.61272, 1.03 ) }
    dend_40 { pt3dadd( -10.2205, -188.57, -2.60396, 1.03 ) }
    dend_40 { pt3dadd( -9.23796, -188.991, -2.56004, 0.66 ) }
    dend_40 { pt3dadd( -8.82514, -189.173, -2.54326, 0.52 ) }
    dend_40 { pt3dadd( -7.87697, -189.606, -2.50696, 0.59 ) }
    dend_40 { pt3dadd( -6.93874, -190.094, -2.47271, 0.59 ) }
    dend_40 { pt3dadd( -6.077, -190.603, -2.44726, 0.52 ) }
    dend_40 { pt3dadd( -5.36485, -191.079, -2.43354, 0.52 ) }
    dend_40 { pt3dadd( -4.61946, -191.627, -2.4278, 0.96 ) }
    dend_40 { pt3dadd( -4.1538, -191.976, -2.43783, 1.18 ) }
    dend_40 { pt3dadd( -3.38009, -192.542, -2.4781, 0.66 ) }
    dend_40 { pt3dadd( -2.46538, -193.156, -2.53408, 0.37 ) }
    dend_40 { pt3dadd( -1.8918, -193.504, -2.57336, 0.37 ) }
    dend_40 { pt3dadd( -0.701662, -194.151, -2.66161, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( 0.350707, -194.7, -2.71155, 1.03 ) }
    dend_40 { pt3dadd( 1.15012, -195.117, -2.7367, 0.81 ) }
    dend_40 { pt3dadd( 1.886, -195.502, -2.74217, 0.52 ) }
    dend_40 { pt3dadd( 2.74851, -195.957, -2.72661, 0.52 ) }
    dend_40 { pt3dadd( 3.42155, -196.328, -2.69414, 0.52 ) }
    dend_40 { pt3dadd( 4.34606, -196.915, -2.62273, 0.52 ) }
    dend_40 { pt3dadd( 5.12195, -197.469, -2.54218, 1.33 ) }
    dend_40 { pt3dadd( 5.60521, -197.853, -2.48585, 1.69 ) }
    dend_40 { pt3dadd( 6.15762, -198.35, -2.41519, 1.69 ) }
    dend_40 { pt3dadd( 7.07911, -199.238, -2.36737, 1.11 ) }
    dend_40 { pt3dadd( 8.08192, -200.222, -2.38861, 0.44 ) }
    dend_40 { pt3dadd( 8.73519, -200.835, -2.46427, 0.44 ) }
    dend_40 { pt3dadd( 9.26642, -201.311, -2.56069, 0.29 ) }
    dend_40 { pt3dadd( 9.87567, -201.833, -2.72119, 0.29 ) }
    dend_40 { pt3dadd( 11.2644, -202.954, -3.17205, 1.03 ) }
    dend_40 { pt3dadd( 11.6711, -203.262, -3.32794, 1.4 ) }
    dend_40 { pt3dadd( 12.1118, -203.599, -3.52222, 1.4 ) }
    dend_40 { pt3dadd( 13.5184, -204.778, -4.20996, 0.22 ) }
    dend_40 { pt3dadd( 14.2627, -205.437, -4.58032, 0.52 ) }
    dend_40 { pt3dadd( 14.6282, -205.776, -4.75627, 0.52 ) }
    dend_40 { pt3dadd( 15.2524, -206.417, -5.03756, 0.29 ) }
    dend_40 { pt3dadd( 16.1249, -207.344, -5.43755, 0.29 ) }
    dend_40 { pt3dadd( 16.6585, -207.92, -5.67162, 0.29 ) }
    dend_40 { pt3dadd( 17.197, -208.533, -5.91273, 0.66 ) }
    dend_40 { pt3dadd( 17.5916, -208.992, -6.06431, 0.81 ) }
    dend_40 { pt3dadd( 17.8777, -209.328, -6.16509, 0.81 ) }
    dend_40 { pt3dadd( 18.357, -209.851, -6.30365, 0.59 ) }
    dend_40 { pt3dadd( 18.9025, -210.385, -6.44536, 0.29 ) }
    dend_40 { pt3dadd( 19.42, -210.916, -6.55221, 0.29 ) }
    dend_40 { pt3dadd( 19.9952, -211.608, -6.63901, 0.66 ) }
    dend_40 { pt3dadd( 20.423, -212.219, -6.65876, 0.66 ) }
    dend_40 { pt3dadd( 20.9701, -213.159, -6.61128, 0.29 ) }
    dend_40 { pt3dadd( 21.2629, -213.766, -6.53514, 0.29 ) }
    dend_40 { pt3dadd( 21.7292, -214.877, -6.33526, 0.66 ) }
    dend_40 { pt3dadd( 22.0358, -215.665, -6.14875, 0.66 ) }
    dend_40 { pt3dadd( 22.3942, -216.696, -5.85761, 0.44 ) }
    dend_40 { pt3dadd( 22.7112, -217.747, -5.52916, 1.47 ) }
    dend_40 { pt3dadd( 22.9309, -218.594, -5.25132, 1.84 ) }
    dend_40 { pt3dadd( 23.0475, -219.092, -5.08935, 1.84 ) }
    dend_40 { pt3dadd( 23.1172, -219.401, -5.00281, 1.84 ) }
    dend_40 { pt3dadd( 23.3049, -220.19, -4.79486, 1.33 ) }
    dend_40 { pt3dadd( 23.5586, -221.141, -4.56254, 0.52 ) }
    dend_40 { pt3dadd( 23.702, -221.642, -4.44545, 0.52 ) }
    dend_40 { pt3dadd( 23.9006, -222.323, -4.28733, 0.52 ) }
    dend_40 { pt3dadd( 24.2177, -223.41, -4.02567, 0.29 ) }
    dend_40 { pt3dadd( 24.3868, -223.972, -3.88355, 0.29 ) }
    dend_40 { pt3dadd( 24.6439, -224.773, -3.66298, 0.29 ) }
    dend_40 { pt3dadd( 24.8979, -225.51, -3.44496, 0.44 ) }
    dend_40 { pt3dadd( 25.2914, -226.502, -3.14277, 0.44 ) }
    dend_40 { pt3dadd( 25.6734, -227.309, -2.90555, 0.44 ) }
    dend_40 { pt3dadd( 25.9816, -227.873, -2.75691, 1.33 ) }
    dend_40 { pt3dadd( 26.3508, -228.519, -2.62366, 1.84 ) }
    dend_40 { pt3dadd( 26.7218, -229.091, -2.52638, 1.84 ) }
    dend_40 { pt3dadd( 27.3614, -229.978, -2.39424, 0.96 ) }
    dend_40 { pt3dadd( 28.2164, -231.06, -2.25612, 0.22 ) }
    dend_40 { pt3dadd( 28.9546, -231.935, -2.16088, 0.22 ) }
    dend_40 { pt3dadd( 30.0122, -233.113, -2.05542, 0.22 ) }
    dend_40 { pt3dadd( 30.6568, -233.774, -2.00245, 0.22 ) }
    dend_40 { pt3dadd( 31.3966, -234.452, -1.95181, 0.22 ) }
    dend_40 { pt3dadd( 32.0565, -234.997, -1.92333, 0.44 ) }
    dend_40 { pt3dadd( 32.851, -235.593, -1.91485, 0.88 ) }
    dend_40 { pt3dadd( 33.622, -236.143, -1.93842, 1.03 ) }
    dend_40 { pt3dadd( 34.1283, -236.5, -1.96533, 1.03 ) }
    dend_40 { pt3dadd( 34.7181, -236.946, -2.0042, 0.88 ) }
    dend_40 { pt3dadd( 35.3092, -237.367, -2.0502, 0.29 ) }
    dend_40 { pt3dadd( 35.7356, -237.651, -2.07174, 0.29 ) }
    dend_40 { pt3dadd( 36.3883, -238.048, -2.068, 0.29 ) }
    dend_40 { pt3dadd( 37.2094, -238.507, -2.02336, 0.37 ) }
    dend_40 { pt3dadd( 37.8272, -238.823, -1.95568, 0.37 ) }
    dend_40 { pt3dadd( 38.3688, -239.072, -1.87226, 0.29 ) }
    dend_40 { pt3dadd( 39.4077, -239.489, -1.67228, 0.29 ) }
    dend_40 { pt3dadd( 40.2228, -239.79, -1.51237, 0.81 ) }
    dend_40 { pt3dadd( 40.6808, -239.958, -1.42827, 0.81 ) }
    dend_40 { pt3dadd( 41.5593, -240.334, -1.26569, 0.59 ) }
    dend_40 { pt3dadd( 42.1941, -240.686, -1.13308, 0.29 ) }
    dend_40 { pt3dadd( 42.733, -241.045, -1.00615, 0.29 ) }
    dend_40 { pt3dadd( 43.2925, -241.47, -0.858518, 0.66 ) }
    dend_40 { pt3dadd( 43.6999, -241.803, -0.731061, 0.66 ) }
    dend_40 { pt3dadd( 44.8975, -242.822, -0.292858, 0.29 ) }
    dend_40 { pt3dadd( 45.644, -243.463, 0.0346096, 0.29 ) }
    dend_40 { pt3dadd( 46.4004, -244.125, 0.440242, 0.29 ) }
    dend_40 { pt3dadd( 46.9604, -244.634, 0.795506, 0.29 ) }
    dend_40 { pt3dadd( 47.5034, -245.129, 1.19394, 0.88 ) }
    dend_40 { pt3dadd( 47.7471, -245.35, 1.37866, 0.88 ) }
    dend_40 { pt3dadd( 48.3891, -245.941, 1.90229, 0.66 ) }
    dend_40 { pt3dadd( 49.2583, -246.74, 2.66807, 0.29 ) }
    dend_40 { pt3dadd( 49.6986, -247.158, 3.08818, 0.29 ) }
    dend_40 { pt3dadd( 50.2163, -247.67, 3.58959, 0.66 ) }
    dend_40 { pt3dadd( 50.6556, -248.12, 3.98433, 0.44 ) }
    dend_40 { pt3dadd( 57.7751, -255.044, 6.4006, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -23.5843, -180.574, -2.3746, 2.14 ) }
    dend_35 { pt3dadd( -24.1516, -182.237, -2.73014, 2.14 ) }
    dend_35 { pt3dadd( -24.6192, -183.754, -3.01316, 1.33 ) }
    dend_35 { pt3dadd( -25.042, -185.247, -3.25339, 1.03 ) }
    dend_35 { pt3dadd( -25.3191, -186.381, -3.40107, 1.03 ) }
    dend_35 { pt3dadd( -25.493, -187.154, -3.49114, 1.25 ) }
    dend_35 { pt3dadd( -25.6566, -187.91, -3.57238, 1.25 ) }
    dend_35 { pt3dadd( -25.9002, -189.339, -3.68356, 0.96 ) }
    dend_35 { pt3dadd( -26.0794, -190.497, -3.73856, 0.96 ) }
    dend_35 { pt3dadd( -26.4105, -192.525, -3.81946, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -26.6148, -193.72, -3.84372, 0.88 ) }
    dend_35 { pt3dadd( -26.7855, -194.852, -3.84417, 0.96 ) }
    dend_35 { pt3dadd( -26.9485, -196.144, -3.81896, 0.96 ) }
    dend_35 { pt3dadd( -27.071, -197.248, -3.7701, 0.74 ) }
    dend_35 { pt3dadd( -27.1767, -198.311, -3.70148, 0.52 ) }
    dend_35 { pt3dadd( -27.2581, -199.193, -3.6248, 0.52 ) }
    dend_35 { pt3dadd( -27.353, -200.277, -3.51142, 0.37 ) }
    dend_35 { pt3dadd( -27.4255, -201.14, -3.41743, 0.74 ) }
    dend_35 { pt3dadd( -27.5216, -202.077, -3.31647, 0.74 ) }
    dend_35 { pt3dadd( -27.6428, -203.132, -3.19252, 1.03 ) }
    dend_35 { pt3dadd( -27.7314, -203.803, -3.11175, 1.18 ) }
    dend_35 { pt3dadd( -27.8655, -204.73, -3.00931, 1.33 ) }
    dend_35 { pt3dadd( -27.9827, -205.429, -2.93256, 1.33 ) }
    dend_35 { pt3dadd( -28.1038, -206.173, -2.81434, 1.18 ) }
    dend_35 { pt3dadd( -28.2956, -207.255, -2.53526, 0.96 ) }
    dend_35 { pt3dadd( -28.456, -208.08, -2.23782, 0.81 ) }
    dend_35 { pt3dadd( -28.6185, -208.912, -1.87569, 0.81 ) }
    dend_35 { pt3dadd( -28.7754, -209.824, -1.42843, 0.81 ) }
    dend_35 { pt3dadd( -28.9013, -210.622, -1.02363, 0.59 ) }
    dend_35 { pt3dadd( -29.0858, -211.942, -0.378118, 0.66 ) }
    dend_35 { pt3dadd( -29.1796, -212.506, -0.133666, 0.66 ) }
    dend_35 { pt3dadd( -29.3953, -213.517, 0.200996, 1.18 ) }
    dend_35 { pt3dadd( -29.713, -214.559, 0.368933, 1.47 ) }
    dend_35 { pt3dadd( -30.08, -215.46, 0.359969, 1.55 ) }
    dend_35 { pt3dadd( -30.4297, -216.114, 0.256405, 1.55 ) }
    dend_35 { pt3dadd( -31.0151, -216.994, 0.0167357, 1.4 ) }
    dend_35 { pt3dadd( -31.8469, -218.009, -0.316731, 1.18 ) }
    dend_35 { pt3dadd( -32.8543, -219.079, -0.703081, 0.66 ) }
    dend_35 { pt3dadd( -33.7033, -219.915, -1.00541, 0.74 ) }
    dend_35 { pt3dadd( -34.8191, -220.963, -1.36697, 1.18 ) }
    dend_35 { pt3dadd( -35.7554, -221.804, -1.62417, 1.25 ) }
    dend_35 { pt3dadd( -36.7538, -222.666, -1.83691, 1.25 ) }
    dend_35 { pt3dadd( -37.617, -223.378, -1.95538, 1.25 ) }
    dend_35 { pt3dadd( -38.5063, -224.038, -2.02911, 1.33 ) }
    dend_35 { pt3dadd( -39.0263, -224.369, -2.0433, 1.33 ) }
    dend_35 { pt3dadd( -39.8814, -224.815, -1.99778, 1.03 ) }
    dend_35 { pt3dadd( -40.6311, -225.128, -1.9025, 0.74 ) }
    dend_35 { pt3dadd( -41.2351, -225.339, -1.80075, 0.59 ) }
    dend_35 { pt3dadd( -42.035, -225.617, -1.64312, 0.59 ) }
    dend_35 { pt3dadd( -42.8369, -225.939, -1.4698, 0.88 ) }
    dend_35 { pt3dadd( -43.6424, -226.382, -1.26198, 1.18 ) }
    dend_35 { pt3dadd( -44.403, -226.928, -1.01337, 1.18 ) }
    dend_35 { pt3dadd( -45.0793, -227.515, -0.751742, 1.18 ) }
    dend_35 { pt3dadd( -45.7158, -228.17, -0.490668, 1.18 ) }
    dend_35 { pt3dadd( -46.2054, -228.744, -0.289941, 1.18 ) }
    dend_35 { pt3dadd( -46.8838, -229.627, -0.0163905, 0.81 ) }
    dend_35 { pt3dadd( -47.2897, -230.213, 0.140089, 0.59 ) }
    dend_35 { pt3dadd( -47.6627, -230.827, 0.274756, 0.52 ) }
    dend_35 { pt3dadd( -48.3743, -232.138, 0.504785, 0.96 ) }
    dend_35 { pt3dadd( -48.7828, -233.019, 0.618778, 1.18 ) }
    dend_35 { pt3dadd( -49.121, -233.841, 0.691138, 1.18 ) }
    dend_35 { pt3dadd( -49.5494, -234.964, 0.742449, 0.88 ) }
    dend_35 { pt3dadd( -49.9606, -236.096, 0.763022, 0.59 ) }
    dend_35 { pt3dadd( -50.2984, -237.116, 0.773796, 0.59 ) }
    dend_35 { pt3dadd( -50.6684, -238.305, 0.786525, 0.59 ) }
    dend_35 { pt3dadd( -51.0133, -239.414, 0.799961, 0.74 ) }
    dend_35 { pt3dadd( -51.4154, -240.655, 0.816053, 1.33 ) }
    dend_35 { pt3dadd( -51.777, -241.732, 0.830347, 1.69 ) }
    dend_35 { pt3dadd( -52.2402, -243.062, 0.847317, 1.77 ) }
    dend_35 { pt3dadd( -52.5056, -243.844, 0.856118, 1.77 ) }
    dend_35 { pt3dadd( -52.83, -244.831, 0.844364, 1.77 ) }
    dend_35 { pt3dadd( -53.0958, -245.781, 0.811448, 1.47 ) }
    dend_35 { pt3dadd( -53.342, -246.837, 0.749764, 1.03 ) }
    dend_35 { pt3dadd( -53.5619, -247.877, 0.666215, 1.03 ) }
    dend_35 { pt3dadd( -53.8119, -249.093, 0.54114, 1.03 ) }
    dend_35 { pt3dadd( -54.056, -250.354, 0.410305, 1.11 ) }
    dend_35 { pt3dadd( -54.2709, -251.542, 0.297873, 1.33 ) }
    dend_35 { pt3dadd( -54.4313, -252.625, 0.217383, 1.03 ) }
    dend_35 { pt3dadd( -54.5853, -254.094, 0.143686, 0.81 ) }
    dend_35 { pt3dadd( -54.6582, -255.123, 0.117285, 1.03 ) }
    dend_35 { pt3dadd( -54.7104, -256.418, 0.116244, 0.81 ) }
    dend_35 { pt3dadd( -54.7236, -257.124, 0.132914, 0.81 ) }
    dend_35 { pt3dadd( -54.7235, -259.035, 0.192624, 0.74 ) }
    dend_35 { pt3dadd( -54.6898, -260.957, 0.265814, 0.74 ) }
    dend_35 { pt3dadd( -54.6319, -262.502, 0.330741, 0.74 ) }
    dend_35 { pt3dadd( -54.5511, -264.759, 0.425953, 0.74 ) }
    dend_35 { pt3dadd( -54.5286, -266.316, 0.478342, 0.74 ) }
    dend_35 { pt3dadd( -54.5521, -267.326, 0.507, 1.18 ) }
    dend_35 { pt3dadd( -54.6517, -268.361, 0.536761, 1.4 ) }
    dend_35 { pt3dadd( -54.8692, -269.43, 0.572497, 1.4 ) }
    dend_35 { pt3dadd( -55.2104, -270.439, 0.613516, 1.47 ) }
    dend_35 { pt3dadd( -55.7882, -271.547, 0.659304, 1.55 ) }
    dend_35 { pt3dadd( -56.2483, -272.205, 0.680145, 1.55 ) }
    dend_35 { pt3dadd( -57.1228, -273.225, 0.711034, 1.11 ) }
    dend_35 { pt3dadd( -58.2853, -274.364, 0.750738, 0.88 ) }
    dend_35 { pt3dadd( -59.1413, -275.099, 0.803113, 0.88 ) }
    dend_35 { pt3dadd( -60.1297, -275.849, 0.885654, 1.03 ) }
    dend_35 { pt3dadd( -60.815, -276.336, 0.947428, 1.03 ) }
    dend_35 { pt3dadd( -61.3598, -276.732, 1.00365, 1.03 ) }
    dend_35 { pt3dadd( -62.1639, -277.4, 1.12667, 0.81 ) }
    dend_35 { pt3dadd( -63.0956, -278.352, 1.30861, 0.59 ) }
    dend_35 { pt3dadd( -64.1193, -279.669, 1.54501, 0.59 ) }
    dend_35 { pt3dadd( -64.7665, -280.698, 1.71966, 0.88 ) }
    dend_35 { pt3dadd( -65.2539, -281.655, 1.87719, 0.88 ) }
    dend_35 { pt3dadd( -65.8792, -283.162, 2.10202, 0.74 ) }
    dend_35 { pt3dadd( -66.2255, -284.203, 2.24041, 0.96 ) }
    dend_35 { pt3dadd( -66.5017, -285.231, 2.33952, 1.11 ) }
    dend_35 { pt3dadd( -66.6636, -285.971, 2.3999, 1.11 ) }
    dend_35 { pt3dadd( -66.8188, -286.75, 2.43997, 0.88 ) }
    dend_35 { pt3dadd( -67.0385, -287.822, 2.43598, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -67.206, -288.576, 2.40815, 0.66 ) }
    dend_35 { pt3dadd( -67.4855, -289.843, 2.36454, 0.96 ) }
    dend_35 { pt3dadd( -67.6906, -290.811, 2.32861, 0.96 ) }
    dend_35 { pt3dadd( -67.941, -292.052, 2.2784, 0.66 ) }
    dend_35 { pt3dadd( -68.169, -293.183, 2.23077, 0.74 ) }
    dend_35 { pt3dadd( -68.5265, -294.999, 2.17484, 0.96 ) }
    dend_35 { pt3dadd( -68.7288, -296.047, 2.17202, 0.96 ) }
    dend_35 { pt3dadd( -68.9345, -297.14, 2.17561, 0.96 ) }
    dend_35 { pt3dadd( -69.1789, -298.393, 2.15955, 0.66 ) }
    dend_35 { pt3dadd( -69.5414, -300.242, 2.10268, 0.66 ) }
    dend_35 { pt3dadd( -69.8419, -302.011, 2.00409, 0.66 ) }
    dend_35 { pt3dadd( -69.9961, -303.069, 1.91654, 0.81 ) }
    dend_35 { pt3dadd( -70.2256, -304.921, 1.72912, 0.74 ) }
    dend_35 { pt3dadd( -70.3732, -306.39, 1.55313, 0.74 ) }
    dend_35 { pt3dadd( -70.4831, -307.94, 1.34599, 0.96 ) }
    dend_35 { pt3dadd( -70.5435, -309.243, 1.15938, 0.96 ) }
    dend_35 { pt3dadd( -70.5822, -310.107, 1.04312, 1.62 ) }
    dend_35 { pt3dadd( -70.6288, -310.582, 0.996093, 1.62 ) }
    dend_35 { pt3dadd( -70.7311, -311.203, 0.980583, 1.62 ) }
    dend_35 { pt3dadd( -70.9231, -312.112, 1.00098, 1.4 ) }
    dend_35 { pt3dadd( -71.1695, -313.059, 1.04894, 0.88 ) }
    dend_35 { pt3dadd( -71.5052, -314.271, 1.13433, 0.59 ) }
    dend_35 { pt3dadd( -71.9547, -315.918, 1.27009, 0.81 ) }
    dend_35 { pt3dadd( -72.3188, -317.243, 1.39009, 0.96 ) }
    dend_35 { pt3dadd( -72.5988, -318.314, 1.48144, 0.96 ) }
    dend_35 { pt3dadd( -72.9111, -319.607, 1.57302, 1.11 ) }
    dend_35 { pt3dadd( -73.1145, -320.454, 1.62232, 1.11 ) }
    dend_35 { pt3dadd( -73.2837, -321.108, 1.65001, 1.33 ) }
    dend_35 { pt3dadd( -73.4599, -321.745, 1.67017, 1.33 ) }
    dend_35 { pt3dadd( -73.815, -322.778, 1.71348, 1.03 ) }
    dend_35 { pt3dadd( -74.2482, -323.794, 1.7694, 0.66 ) }
    dend_35 { pt3dadd( -74.6112, -324.552, 1.81874, 0.37 ) }
    dend_35 { pt3dadd( -74.8861, -325.104, 1.85681, 0.37 ) }
    dend_35 { pt3dadd( -75.2221, -325.828, 1.91059, 0.37 ) }
    dend_35 { pt3dadd( -75.5253, -326.516, 1.96551, 1.03 ) }
    dend_35 { pt3dadd( -75.8538, -327.282, 2.02712, 1.25 ) }
    dend_35 { pt3dadd( -76.0688, -327.853, 2.07568, 1.25 ) }
    dend_35 { pt3dadd( -76.4127, -328.92, 2.16339, 0.96 ) }
    dend_35 { pt3dadd( -76.7939, -330.265, 2.26509, 0.52 ) }
    dend_35 { pt3dadd( -77.1194, -331.476, 2.34572, 0.52 ) }
    dend_35 { pt3dadd( -77.5418, -333.165, 2.44243, 0.52 ) }
    dend_35 { pt3dadd( -77.8429, -334.541, 2.51458, 0.81 ) }
    dend_35 { pt3dadd( -78.0546, -335.546, 2.57043, 1.03 ) }
    dend_35 { pt3dadd( -78.2537, -336.453, 2.6228, 1.03 ) }
    dend_35 { pt3dadd( -78.4141, -337.153, 2.66258, 0.81 ) }
    dend_35 { pt3dadd( -78.6245, -337.996, 2.70596, 0.81 ) }
    dend_35 { pt3dadd( -78.9602, -339.177, 2.75436, 0.59 ) }
    dend_35 { pt3dadd( -79.389, -340.415, 2.78826, 0.44 ) }
    dend_35 { pt3dadd( -80.0608, -341.967, 2.83027, 0.88 ) }
    dend_35 { pt3dadd( -80.408, -342.63, 2.8488, 0.88 ) }
    dend_35 { pt3dadd( -80.932, -343.485, 2.87265, 0.59 ) }
    dend_35 { pt3dadd( -81.49, -344.211, 2.896, 0.59 ) }
    dend_35 { pt3dadd( -82.3821, -345.113, 2.91524, 0.59 ) }
    dend_35 { pt3dadd( -83.3482, -345.9, 2.91667, 0.81 ) }
    dend_35 { pt3dadd( -83.9015, -346.272, 2.91394, 0.81 ) }
    dend_35 { pt3dadd( -84.3488, -346.539, 2.90969, 0.81 ) }
    dend_35 { pt3dadd( -85.3603, -347.05, 2.89074, 0.59 ) }
    dend_35 { pt3dadd( -86.4726, -347.501, 2.86217, 0.88 ) }
    dend_35 { pt3dadd( -87.5787, -347.857, 2.82348, 1.03 ) }
    dend_35 { pt3dadd( -88.6351, -348.14, 2.77707, 1.03 ) }
    dend_35 { pt3dadd( -89.5088, -348.325, 2.74095, 0.59 ) }
    dend_35 { pt3dadd( -90.2972, -348.467, 2.71791, 0.59 ) }
    dend_35 { pt3dadd( -90.9672, -348.589, 2.70744, 0.59 ) }
    dend_35 { pt3dadd( -91.5435, -348.691, 2.71641, 0.59 ) }
    dend_35 { pt3dadd( -92.1572, -348.828, 2.73446, 0.59 ) }
    dend_35 { pt3dadd( -92.9603, -349.048, 2.77184, 0.44 ) }
    dend_35 { pt3dadd( -94.1629, -349.465, 2.84605, 0.81 ) }
    dend_35 { pt3dadd( -95.1663, -349.889, 2.92694, 1.11 ) }
    dend_35 { pt3dadd( -96.2604, -350.439, 3.03985, 0.81 ) }
    dend_35 { pt3dadd( -97.355, -351.084, 3.17087, 0.66 ) }
    dend_35 { pt3dadd( -97.856, -351.422, 3.23571, 0.66 ) }
    dend_35 { pt3dadd( -98.4583, -351.886, 3.31834, 0.52 ) }
    dend_35 { pt3dadd( -99.1464, -352.471, 3.42281, 0.52 ) }
    dend_35 { pt3dadd( -99.842, -353.137, 3.53641, 0.52 ) }
    dend_35 { pt3dadd( -100.54, -353.856, 3.65689, 0.52 ) }
    dend_35 { pt3dadd( -100.961, -354.333, 3.73436, 1.11 ) }
    dend_35 { pt3dadd( -101.893, -355.501, 3.9019, 1.4 ) }
    dend_35 { pt3dadd( -102.396, -356.204, 3.99019, 1.84 ) }
    dend_35 { pt3dadd( -102.948, -357.056, 4.07327, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.50565, -88.2693, -9.56394, 0.66 ) }
    dend_32 { pt3dadd( -9.62538, -89.9981, -9.52564, 0.66 ) }
    dend_32 { pt3dadd( -9.71471, -91.0631, -9.50998, 0.37 ) }
    dend_32 { pt3dadd( -9.76348, -91.7753, -9.52172, 0.81 ) }
    dend_32 { pt3dadd( -9.80686, -92.6962, -9.55069, 1.03 ) }
    dend_32 { pt3dadd( -9.84384, -93.4968, -9.58178, 1.11 ) }
    dend_32 { pt3dadd( -9.88565, -94.3512, -9.629, 0.88 ) }
    dend_32 { pt3dadd( -9.92921, -95.3353, -9.71709, 0.59 ) }
    dend_32 { pt3dadd( -9.94729, -96.4819, -9.84829, 0.29 ) }
    dend_32 { pt3dadd( -9.93298, -97.314, -9.96013, 0.29 ) }
    dend_32 { pt3dadd( -9.90771, -97.6959, -10.016, 0.29 ) }
    dend_32 { pt3dadd( -9.78646, -98.558, -10.1603, 0.74 ) }
    dend_32 { pt3dadd( -9.6051, -99.3621, -10.3066, 1.11 ) }
    dend_32 { pt3dadd( -9.45746, -99.8704, -10.398, 1.11 ) }
    dend_32 { pt3dadd( -9.21737, -100.619, -10.53, 1.11 ) }
    dend_32 { pt3dadd( -8.92455, -101.488, -10.6471, 0.81 ) }
    dend_32 { pt3dadd( -8.45264, -102.921, -10.7788, 0.44 ) }
    dend_32 { pt3dadd( -8.0379, -104.283, -10.8474, 0.59 ) }
    dend_32 { pt3dadd( -7.82394, -105.102, -10.8654, 0.88 ) }
    dend_32 { pt3dadd( -7.64795, -105.962, -10.8591, 0.88 ) }
    dend_32 { pt3dadd( -7.46669, -107.194, -10.8212, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -7.3623, -108.4, -10.747, 0.44 ) }
    dend_32 { pt3dadd( -7.33684, -109.351, -10.6562, 1.03 ) }
    dend_32 { pt3dadd( -7.34512, -110.145, -10.5725, 0.74 ) }
    dend_32 { pt3dadd( -7.37214, -111.141, -10.4779, 0.52 ) }
    dend_32 { pt3dadd( -7.39923, -111.912, -10.4188, 0.88 ) }
    dend_32 { pt3dadd( -7.42851, -112.62, -10.4088, 1.18 ) }
    dend_32 { pt3dadd( -7.45268, -113.233, -10.4117, 1.18 ) }
    dend_32 { pt3dadd( -7.48638, -113.936, -10.424, 0.88 ) }
    dend_32 { pt3dadd( -7.5469, -115.157, -10.4598, 0.29 ) }
    dend_32 { pt3dadd( -7.59688, -116.081, -10.4998, 0.29 ) }
    dend_32 { pt3dadd( -7.67192, -117.403, -10.5863, 1.03 ) }
    dend_32 { pt3dadd( -7.714, -118.281, -10.6567, 1.47 ) }
    dend_32 { pt3dadd( -7.74136, -118.835, -10.7022, 1.47 ) }
    dend_32 { pt3dadd( -7.76728, -119.444, -10.7522, 1.47 ) }
    dend_32 { pt3dadd( -7.78623, -120.355, -10.8211, 1.25 ) }
    dend_32 { pt3dadd( -7.79599, -121.469, -10.8901, 0.44 ) }
    dend_32 { pt3dadd( -7.78749, -122.389, -10.9285, 0.44 ) }
    dend_32 { pt3dadd( -7.76936, -123.288, -10.9694, 0.44 ) }
    dend_32 { pt3dadd( -7.75366, -123.75, -10.9909, 0.59 ) }
    dend_32 { pt3dadd( -7.7137, -124.835, -11.0421, 0.59 ) }
    dend_32 { pt3dadd( -7.66839, -125.663, -11.0823, 0.37 ) }
    dend_32 { pt3dadd( -7.62906, -126.354, -11.1154, 0.81 ) }
    dend_32 { pt3dadd( -7.59525, -126.987, -11.1378, 1.03 ) }
    dend_32 { pt3dadd( -7.57436, -127.45, -11.1474, 1.03 ) }
    dend_32 { pt3dadd( -7.56314, -128.023, -11.1501, 0.59 ) }
    dend_32 { pt3dadd( -7.54387, -128.958, -11.1391, 0.22 ) }
    dend_32 { pt3dadd( -7.5135, -129.544, -11.125, 0.22 ) }
    dend_32 { pt3dadd( -7.46049, -130.236, -11.1031, 0.22 ) }
    dend_32 { pt3dadd( -7.39078, -130.982, -11.0758, 0.66 ) }
    dend_32 { pt3dadd( -7.29334, -131.874, -11.0436, 0.88 ) }
    dend_32 { pt3dadd( -7.1228, -133.176, -10.996, 0.88 ) }
    dend_32 { pt3dadd( -6.91285, -134.69, -10.9422, 0.96 ) }
    dend_32 { pt3dadd( -6.74842, -135.83, -10.9185, 1.18 ) }
    dend_32 { pt3dadd( -6.62643, -136.754, -10.9196, 0.66 ) }
    dend_32 { pt3dadd( -6.53227, -137.512, -10.9255, 0.52 ) }
    dend_32 { pt3dadd( -6.3783, -138.958, -10.9548, 0.52 ) }
    dend_32 { pt3dadd( -6.28026, -140.074, -10.9902, 0.81 ) }
    dend_32 { pt3dadd( -6.19143, -141.2, -11.0377, 0.52 ) }
    dend_32 { pt3dadd( -6.12447, -142.042, -11.0706, 0.52 ) }
    dend_32 { pt3dadd( -6.03567, -143.039, -11.1268, 1.47 ) }
    dend_32 { pt3dadd( -5.93017, -144.059, -11.2048, 1.77 ) }
    dend_32 { pt3dadd( -5.83223, -144.847, -11.2925, 1.77 ) }
    dend_32 { pt3dadd( -5.76051, -145.3, -11.3515, 1.77 ) }
    dend_32 { pt3dadd( -5.61781, -146.051, -11.4503, 1.25 ) }
    dend_32 { pt3dadd( -5.43516, -146.921, -11.5637, 0.81 ) }
    dend_32 { pt3dadd( -5.21756, -147.977, -11.7066, 0.44 ) }
    dend_32 { pt3dadd( -4.93914, -149.302, -11.8789, 0.37 ) }
    dend_32 { pt3dadd( -4.76913, -150.117, -11.9793, 0.52 ) }
    dend_32 { pt3dadd( -4.55184, -151.102, -12.0914, 0.52 ) }
    dend_32 { pt3dadd( -4.37914, -151.84, -12.1684, 0.66 ) }
    dend_32 { pt3dadd( -4.13347, -152.811, -12.267, 0.66 ) }
    dend_32 { pt3dadd( -3.79461, -154.053, -12.4327, 0.88 ) }
    dend_32 { pt3dadd( -3.48314, -155.097, -12.6014, 1.25 ) }
    dend_32 { pt3dadd( -3.29253, -155.685, -12.7221, 1.25 ) }
    dend_32 { pt3dadd( -3.11134, -156.191, -12.8429, 1.25 ) }
    dend_32 { pt3dadd( -2.72803, -157.185, -13.1106, 1.11 ) }
    dend_32 { pt3dadd( -2.3718, -158.062, -13.3691, 0.74 ) }
    dend_32 { pt3dadd( -2.04662, -158.832, -13.6147, 0.29 ) }
    dend_32 { pt3dadd( -1.85393, -159.288, -13.7697, 0.29 ) }
    dend_32 { pt3dadd( -1.40105, -160.4, -14.1379, 0.44 ) }
    dend_32 { pt3dadd( -1.15682, -161.039, -14.3279, 0.88 ) }
    dend_32 { pt3dadd( -0.964121, -161.617, -14.4708, 1.33 ) }
    dend_32 { pt3dadd( -0.7663, -162.303, -14.6022, 1.47 ) }
    dend_32 { pt3dadd( -0.583385, -163.047, -14.7103, 1.47 ) }
    dend_32 { pt3dadd( -0.437806, -163.708, -14.7811, 1.25 ) }
    dend_32 { pt3dadd( -0.25597, -164.612, -14.8503, 0.44 ) }
    dend_32 { pt3dadd( -0.0105893, -165.937, -14.8775, 0.29 ) }
    dend_32 { pt3dadd( 0.157297, -166.987, -14.8438, 0.29 ) }
    dend_32 { pt3dadd( 0.298847, -168.059, -14.7644, 0.29 ) }
    dend_32 { pt3dadd( 0.386158, -168.912, -14.6715, 0.74 ) }
    dend_32 { pt3dadd( 0.42546, -169.516, -14.5898, 0.88 ) }
    dend_32 { pt3dadd( 0.44181, -170.741, -14.3961, 0.96 ) }
    dend_32 { pt3dadd( 0.39133, -171.786, -14.227, 1.03 ) }
    dend_32 { pt3dadd( 0.304572, -172.573, -14.1198, 1.03 ) }
    dend_32 { pt3dadd( 0.178129, -173.355, -14.0215, 0.59 ) }
    dend_32 { pt3dadd( 0.027059, -174.19, -13.9275, 0.22 ) }
    dend_32 { pt3dadd( -0.0659517, -174.717, -13.8835, 0.22 ) }
    dend_32 { pt3dadd( -0.258914, -175.93, -13.8425, 0.96 ) }
    dend_32 { pt3dadd( -0.367416, -176.65, -13.8373, 1.11 ) }
    dend_32 { pt3dadd( -0.478296, -177.44, -13.8118, 1.11 ) }
    dend_32 { pt3dadd( -0.566642, -178.197, -13.7585, 0.59 ) }
    dend_32 { pt3dadd( -0.636308, -178.967, -13.6827, 0.29 ) }
    dend_32 { pt3dadd( -0.680144, -179.624, -13.5973, 0.29 ) }
    dend_32 { pt3dadd( -0.71641, -180.172, -13.5105, 0.29 ) }
    dend_32 { pt3dadd( -0.792712, -181.361, -13.2991, 0.44 ) }
    dend_32 { pt3dadd( -0.859992, -182.367, -13.0948, 0.66 ) }
    dend_32 { pt3dadd( -0.930921, -183.431, -12.8689, 0.66 ) }
    dend_32 { pt3dadd( -0.972931, -184.2, -12.7104, 0.81 ) }
    dend_32 { pt3dadd( -1.01096, -185.055, -12.5516, 0.81 ) }
    dend_32 { pt3dadd( -1.04083, -185.872, -12.4135, 0.52 ) }
    dend_32 { pt3dadd( -1.09577, -186.91, -12.2699, 0.66 ) }
    dend_32 { pt3dadd( -1.14695, -187.678, -12.1713, 0.66 ) }
    dend_32 { pt3dadd( -1.25979, -188.972, -12.0727, 0.37 ) }
    dend_32 { pt3dadd( -1.37588, -190.118, -12.0449, 0.37 ) }
    dend_32 { pt3dadd( -1.48429, -191.033, -12.0666, 1.03 ) }
    dend_32 { pt3dadd( -1.60124, -191.952, -12.1541, 1.47 ) }
    dend_32 { pt3dadd( -1.7307, -192.854, -12.3006, 1.62 ) }
    dend_32 { pt3dadd( -1.99637, -194.463, -12.6651, 0.88 ) }
    dend_32 { pt3dadd( -2.21732, -195.508, -12.9954, 0.59 ) }
    dend_32 { pt3dadd( -2.43093, -196.303, -13.3191, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -2.86494, -197.58, -13.9265, 0.29 ) }
    dend_32 { pt3dadd( -3.0216, -197.956, -14.1098, 0.29 ) }
    dend_32 { pt3dadd( -3.28833, -198.492, -14.3642, 0.29 ) }
    dend_32 { pt3dadd( -3.81593, -199.487, -14.7764, 0.29 ) }
    dend_32 { pt3dadd( -4.34256, -200.426, -15.171, 0.59 ) }
    dend_32 { pt3dadd( -4.89348, -201.421, -15.5692, 0.59 ) }
    dend_32 { pt3dadd( -5.24102, -202.037, -15.8111, 0.44 ) }
    dend_32 { pt3dadd( -5.67237, -202.775, -16.1174, 0.44 ) }
    dend_32 { pt3dadd( -5.95678, -203.224, -16.3491, 0.29 ) }
    dend_32 { pt3dadd( -6.36679, -203.864, -16.7373, 1.4 ) }
    dend_32 { pt3dadd( -6.96593, -204.592, -17.3628, 1.62 ) }
    dend_32 { pt3dadd( -7.52916, -205.086, -17.9422, 1.4 ) }
    dend_32 { pt3dadd( -8.08578, -205.436, -18.4903, 1.11 ) }
    dend_32 { pt3dadd( -9.02742, -205.897, -19.3648, 0.81 ) }
    dend_32 { pt3dadd( -9.55095, -206.133, -19.8455, 0.59 ) }
    dend_32 { pt3dadd( -10.1227, -206.419, -20.3979, 0.74 ) }
    dend_32 { pt3dadd( -10.6672, -206.771, -20.9516, 0.81 ) }
    dend_32 { pt3dadd( -11.0884, -207.227, -21.4096, 0.52 ) }
    dend_32 { pt3dadd( -11.3943, -207.693, -21.773, 0.52 ) }
    dend_32 { pt3dadd( -11.6766, -208.215, -22.0977, 0.74 ) }
    dend_32 { pt3dadd( -12.0584, -208.958, -22.5694, 0.74 ) }
    dend_32 { pt3dadd( -12.2565, -209.421, -22.8247, 0.74 ) }
    dend_32 { pt3dadd( -12.4512, -209.945, -23.1164, 0.52 ) }
    dend_32 { pt3dadd( -12.7419, -210.771, -23.5296, 0.52 ) }
    dend_32 { pt3dadd( -12.903, -211.225, -23.7414, 0.52 ) }
    dend_32 { pt3dadd( -13.2178, -212.115, -24.1008, 1.69 ) }
    dend_32 { pt3dadd( -13.414, -212.705, -24.2909, 2.14 ) }
    dend_32 { pt3dadd( -13.7765, -213.953, -24.6057, 1.55 ) }
    dend_32 { pt3dadd( -14.1167, -215.263, -24.8621, 0.29 ) }
    dend_32 { pt3dadd( -14.2998, -216.029, -24.9793, 0.29 ) }
    dend_32 { pt3dadd( -14.5427, -217.084, -25.1088, 0.44 ) }
    dend_32 { pt3dadd( -14.7749, -218.09, -25.1971, 0.59 ) }
    dend_32 { pt3dadd( -14.9837, -218.982, -25.2546, 0.59 ) }
    dend_32 { pt3dadd( -15.2007, -219.89, -25.2796, 0.29 ) }
    dend_32 { pt3dadd( -15.3183, -220.379, -25.294, 0.29 ) }
    dend_32 { pt3dadd( -15.4802, -221.061, -25.3139, 0.96 ) }
    dend_32 { pt3dadd( -15.6125, -221.659, -25.3302, 1.03 ) }
    dend_32 { pt3dadd( -15.7744, -222.493, -25.3541, 0.52 ) }
    dend_32 { pt3dadd( -15.9496, -223.579, -25.3862, 0.29 ) }
    dend_32 { pt3dadd( -16.0313, -224.198, -25.4026, 0.81 ) }
    dend_32 { pt3dadd( -16.1129, -224.917, -25.4175, 0.96 ) }
    dend_32 { pt3dadd( -16.1706, -225.47, -25.4292, 0.96 ) }
    dend_32 { pt3dadd( -16.2698, -226.442, -25.4515, 0.29 ) }
    dend_32 { pt3dadd( -16.4009, -227.551, -25.4775, 0.29 ) }
    dend_32 { pt3dadd( -16.5486, -228.711, -25.5372, 1.47 ) }
    dend_32 { pt3dadd( -16.6517, -229.523, -25.5945, 1.92 ) }
    dend_32 { pt3dadd( -16.6974, -229.918, -25.6261, 1.92 ) }
    dend_32 { pt3dadd( -16.809, -230.901, -25.698, 1.33 ) }
    dend_32 { pt3dadd( -16.9208, -231.995, -25.7811, 0.29 ) }
    dend_32 { pt3dadd( -17.0265, -233.111, -25.8729, 0.29 ) }
    dend_32 { pt3dadd( -17.1004, -234.002, -25.9559, 0.29 ) }
    dend_32 { pt3dadd( -17.2504, -235.938, -26.1505, 0.29 ) }
    dend_32 { pt3dadd( -17.3423, -237.256, -26.2733, 1.4 ) }
    dend_32 { pt3dadd( -17.3899, -238.06, -26.3401, 2.14 ) }
    dend_32 { pt3dadd( -17.4074, -238.41, -26.3656, 2.28 ) }
    dend_32 { pt3dadd( -17.431, -238.983, -26.3954, 2.28 ) }
    dend_32 { pt3dadd( -17.4608, -239.574, -26.4097, 1.92 ) }
    dend_32 { pt3dadd( -17.5253, -240.43, -26.3682, 0.88 ) }
    dend_32 { pt3dadd( -17.6415, -241.736, -26.2325, 0.29 ) }
    dend_32 { pt3dadd( -17.7191, -242.533, -26.1106, 0.29 ) }
    dend_32 { pt3dadd( -17.8081, -243.425, -25.9465, 0.29 ) }
    dend_32 { pt3dadd( -17.9509, -244.82, -25.6605, 0.29 ) }
    dend_32 { pt3dadd( -18.0915, -246.25, -25.365, 0.96 ) }
    dend_32 { pt3dadd( -18.1773, -247.207, -25.1754, 1.62 ) }
    dend_32 { pt3dadd( -18.2227, -247.75, -25.0713, 1.62 ) }
    dend_32 { pt3dadd( -18.2636, -248.261, -24.9841, 1.62 ) }
    dend_32 { pt3dadd( -18.3478, -249.362, -24.8397, 1.11 ) }
    dend_32 { pt3dadd( -18.4314, -250.715, -24.7812, 0.29 ) }
    dend_32 { pt3dadd( -18.4958, -251.724, -24.8027, 0.29 ) }
    dend_32 { pt3dadd( -18.5525, -252.524, -24.8434, 0.59 ) }
    dend_32 { pt3dadd( -18.5866, -252.92, -24.8731, 0.66 ) }
    dend_32 { pt3dadd( -18.6355, -253.4, -24.9161, 0.66 ) }
    dend_32 { pt3dadd( -18.7975, -254.718, -25.0478, 0.29 ) }
    dend_32 { pt3dadd( -19.0259, -256.244, -25.2385, 0.29 ) }
    dend_32 { pt3dadd( -19.233, -257.425, -25.4025, 0.96 ) }
    dend_32 { pt3dadd( -19.431, -258.355, -25.535, 1.4 ) }
    dend_32 { pt3dadd( -19.5972, -259.051, -25.6283, 1.4 ) }
    dend_32 { pt3dadd( -19.7796, -259.77, -25.7147, 1.4 ) }
    dend_32 { pt3dadd( -20.0338, -260.719, -25.8082, 0.88 ) }
    dend_32 { pt3dadd( -20.3509, -261.881, -25.916, 0.29 ) }
    dend_32 { pt3dadd( -20.6394, -262.941, -25.9991, 0.29 ) }
    dend_32 { pt3dadd( -20.9443, -264.013, -26.0775, 0.44 ) }
    dend_32 { pt3dadd( -21.1534, -264.691, -26.1205, 0.66 ) }
    dend_32 { pt3dadd( -21.3335, -265.235, -26.1446, 0.66 ) }
    dend_32 { pt3dadd( -21.6663, -266.203, -26.1511, 0.29 ) }
    dend_32 { pt3dadd( -21.8645, -266.784, -26.1501, 0.29 ) }
    dend_32 { pt3dadd( -22.1148, -267.528, -26.1791, 0.29 ) }
    dend_32 { pt3dadd( -22.4658, -268.547, -26.2858, 0.29 ) }
    dend_32 { pt3dadd( -22.6702, -269.129, -26.3857, 0.52 ) }
    dend_32 { pt3dadd( -22.9402, -269.937, -26.5631, 0.66 ) }
    dend_32 { pt3dadd( -23.1572, -270.744, -26.7163, 0.66 ) }
    dend_32 { pt3dadd( -23.3921, -272.001, -26.9185, 1.4 ) }
    dend_32 { pt3dadd( -23.4865, -273.106, -27.0759, 2.28 ) }
    dend_32 { pt3dadd( -23.4882, -274.209, -27.2189, 2.5 ) }
    dend_32 { pt3dadd( -23.439, -274.83, -27.2744, 2.5 ) }
    dend_32 { pt3dadd( -23.0478, -277.006, -27.3556, 0.22 ) }
    dend_32 { pt3dadd( -22.8077, -277.886, -27.331, 0.22 ) }
    dend_32 { pt3dadd( -22.3856, -279.002, -27.2197, 0.37 ) }
    dend_32 { pt3dadd( -22.0671, -279.663, -27.108, 0.44 ) }
    dend_32 { pt3dadd( -21.4433, -280.643, -26.9827, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -20.7252, -281.552, -26.9677, 0.88 ) }
    dend_32 { pt3dadd( -20.2842, -281.982, -27.0736, 1.4 ) }
    dend_32 { pt3dadd( -19.9376, -282.292, -27.2188, 1.4 ) }
    dend_32 { pt3dadd( -19.4658, -282.735, -27.5024, 1.11 ) }
    dend_32 { pt3dadd( -17.9841, -284.259, -28.6681, 0.29 ) }
    dend_32 { pt3dadd( -17.5129, -284.808, -29.1226, 0.29 ) }
    dend_32 { pt3dadd( -16.7986, -285.767, -29.9169, 0.81 ) }
    dend_32 { pt3dadd( -16.4487, -286.388, -30.3613, 0.81 ) }
    dend_32 { pt3dadd( -15.8996, -287.702, -31.1585, 0.22 ) }
    dend_32 { pt3dadd( -15.7332, -288.251, -31.4353, 0.22 ) }
    dend_32 { pt3dadd( -15.5679, -289.098, -31.7401, 0.44 ) }
    dend_32 { pt3dadd( -15.5012, -289.575, -31.8806, 0.59 ) }
    dend_32 { pt3dadd( -15.3057, -291.573, -32.3518, 0.22 ) }
    dend_32 { pt3dadd( -15.2521, -292.27, -32.508, 0.74 ) }
    dend_32 { pt3dadd( -15.2156, -292.89, -32.6382, 1.03 ) }
    dend_32 { pt3dadd( -15.1719, -293.552, -32.7638, 1.03 ) }
    dend_32 { pt3dadd( -15.1282, -294.201, -32.8764, 0.74 ) }
    dend_32 { pt3dadd( -15.0841, -294.803, -32.9781, 0.37 ) }
    dend_32 { pt3dadd( -14.9542, -296.334, -33.2393, 0.22 ) }
    dend_32 { pt3dadd( -14.838, -297.858, -33.507, 0.22 ) }
    dend_32 { pt3dadd( -14.7668, -299.003, -33.706, 0.88 ) }
    dend_32 { pt3dadd( -14.7233, -299.85, -33.8531, 1.62 ) }
    dend_32 { pt3dadd( -14.7052, -300.315, -33.9349, 1.84 ) }
    dend_32 { pt3dadd( -14.696, -300.875, -34.0331, 1.84 ) }
    dend_32 { pt3dadd( -14.7079, -302.03, -34.2294, 0.52 ) }
    dend_32 { pt3dadd( -14.7578, -303.003, -34.3983, 0.22 ) }
    dend_32 { pt3dadd( -14.832, -303.783, -34.5415, 0.22 ) }
    dend_32 { pt3dadd( -14.9229, -304.453, -34.6687, 0.37 ) }
    dend_32 { pt3dadd( -14.97, -304.713, -34.7129, 0.37 ) }
    dend_32 { pt3dadd( -15.1186, -305.356, -34.8251, 0.22 ) }
    dend_32 { pt3dadd( -15.2627, -305.878, -34.9168, 0.74 ) }
    dend_32 { pt3dadd( -15.4389, -306.471, -35.0266, 0.74 ) }
    dend_32 { pt3dadd( -15.6093, -307.007, -35.1225, 0.59 ) }
    dend_32 { pt3dadd( -16.004, -308.167, -35.3225, 0.22 ) }
    dend_32 { pt3dadd( -16.2048, -308.702, -35.407, 0.22 ) }
    dend_32 { pt3dadd( -16.5121, -309.416, -35.4874, 0.59 ) }
    dend_32 { pt3dadd( -16.7619, -309.928, -35.515, 0.59 ) }
    dend_32 { pt3dadd( -17.0368, -310.455, -35.4949, 0.29 ) }
    dend_32 { pt3dadd( -17.3419, -310.992, -35.4482, 0.22 ) }
    dend_32 { pt3dadd( -17.8124, -311.731, -35.4047, 0.37 ) }
    dend_32 { pt3dadd( -18.436, -312.616, -35.373, 0.44 ) }
    dend_32 { pt3dadd( -19.002, -313.242, -35.4352, 0.59 ) }
    dend_32 { pt3dadd( -19.7313, -313.874, -35.6234, 0.37 ) }
    dend_32 { pt3dadd( -20.1822, -314.147, -35.8027, 0.22 ) }
    dend_32 { pt3dadd( -21.3166, -314.557, -36.3997, 2.21 ) }
    dend_32 { pt3dadd( -21.7453, -314.594, -36.6814, 2.5 ) }
    dend_32 { pt3dadd( -23.4061, -314.241, -37.9493, 0.22 ) }
    dend_32 { pt3dadd( -23.9146, -314.01, -38.3746, 0.22 ) }
    dend_32 { pt3dadd( -24.5891, -313.514, -39.0288, 0.66 ) }
    dend_32 { pt3dadd( -24.9059, -313.198, -39.375, 0.66 ) }
    dend_32 { pt3dadd( -25.3483, -312.659, -39.9023, 0.37 ) }
    dend_32 { pt3dadd( -25.9564, -311.869, -40.6898, 1.92 ) }
    dend_32 { pt3dadd( -26.17, -311.589, -40.9779, 1.92 ) }
    dend_32 { pt3dadd( -27.2611, -310.4, -42.5073, 0.44 ) }
    dend_32 { pt3dadd( -27.7469, -309.974, -43.191, 0.59 ) }
    dend_32 { pt3dadd( -28.047, -309.789, -43.5716, 0.37 ) }
    dend_32 { pt3dadd( -28.5299, -309.629, -44.0838, 0.37 ) }
    dend_32 { pt3dadd( -29.0354, -309.538, -44.5882, 0.22 ) }
    dend_32 { pt3dadd( -30.2706, -309.48, -45.6606, 0.29 ) }
    dend_32 { pt3dadd( -30.7182, -309.545, -45.9517, 0.22 ) }
    dend_32 { pt3dadd( -31.4626, -309.695, -46.3724, 0.22 ) }
    dend_32 { pt3dadd( -32.496, -309.896, -46.9196, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.50565, -88.2693, -9.56394, 0.74 ) }
    dend_31 { pt3dadd( -11.3893, -89.6648, -9.56394, 0.74 ) }
    dend_31 { pt3dadd( -12.1358, -90.1622, -9.56394, 0.74 ) }
    dend_31 { pt3dadd( -13.2142, -90.7834, -9.59482, 0.74 ) }
    dend_31 { pt3dadd( -13.9692, -91.1452, -9.63543, 0.52 ) }
    dend_31 { pt3dadd( -14.7547, -91.4011, -9.72041, 0.52 ) }
    dend_31 { pt3dadd( -15.508, -91.5645, -9.83891, 0.88 ) }
    dend_31 { pt3dadd( -16.1402, -91.5066, -10.0446, 0.88 ) }
    dend_31 { pt3dadd( -17.1492, -91.2255, -10.4894, 0.59 ) }
    dend_31 { pt3dadd( -17.7779, -90.9885, -10.8114, 0.37 ) }
    dend_31 { pt3dadd( -18.7447, -90.6591, -11.3692, 0.37 ) }
    dend_31 { pt3dadd( -19.3296, -90.5363, -11.7626, 1.11 ) }
    dend_31 { pt3dadd( -19.819, -90.5643, -12.136, 1.47 ) }
    dend_31 { pt3dadd( -20.2925, -90.689, -12.4998, 1.47 ) }
    dend_31 { pt3dadd( -20.6394, -90.8204, -12.7497, 1.47 ) }
    dend_31 { pt3dadd( -21.4364, -91.1301, -13.2955, 0.96 ) }
    dend_31 { pt3dadd( -22.15, -91.3458, -13.75, 0.59 ) }
    dend_31 { pt3dadd( -22.8095, -91.4594, -14.1112, 0.59 ) }
    dend_31 { pt3dadd( -23.498, -91.5164, -14.4035, 0.59 ) }
    dend_31 { pt3dadd( -24.2265, -91.5713, -14.6857, 0.81 ) }
    dend_31 { pt3dadd( -24.9203, -91.6257, -14.9356, 0.81 ) }
    dend_31 { pt3dadd( -25.4647, -91.6666, -15.0928, 0.81 ) }
    dend_31 { pt3dadd( -26.1109, -91.7422, -15.2573, 0.81 ) }
    dend_31 { pt3dadd( -26.8095, -92.0798, -15.5373, 0.22 ) }
    dend_31 { pt3dadd( -27.2495, -92.8723, -15.9302, 0.22 ) }
    dend_31 { pt3dadd( -27.5194, -93.5086, -16.2607, 0.66 ) }
    dend_31 { pt3dadd( -27.6609, -93.8883, -16.4687, 0.88 ) }
    dend_31 { pt3dadd( -27.8617, -94.4396, -16.7958, 0.88 ) }
    dend_31 { pt3dadd( -28.1498, -95.0813, -17.3194, 0.44 ) }
    dend_31 { pt3dadd( -28.5937, -95.7087, -18.0347, 1.4 ) }
    dend_31 { pt3dadd( -29.023, -96.0397, -18.6493, 2.14 ) }
    dend_31 { pt3dadd( -29.2168, -96.1192, -18.9206, 2.58 ) }
    dend_31 { pt3dadd( -29.6291, -96.1722, -19.4669, 2.36 ) }
    dend_31 { pt3dadd( -30.7514, -96.1367, -20.9413, 1.69 ) }
    dend_31 { pt3dadd( -31.3462, -96.0586, -21.6947, 0.37 ) }
    dend_31 { pt3dadd( -32.0855, -95.9154, -22.5279, 0.37 ) }
    dend_31 { pt3dadd( -32.6986, -95.7908, -23.1513, 0.37 ) }
    dend_31 { pt3dadd( -33.9523, -95.5941, -24.3063, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -34.475, -95.5495, -24.7513, 2.14 ) }
    dend_31 { pt3dadd( -35.0033, -95.5641, -25.1637, 2.5 ) }
    dend_31 { pt3dadd( -36.5567, -95.8051, -26.4158, 0.44 ) }
    dend_31 { pt3dadd( -37.0387, -95.9359, -26.8153, 0.44 ) }
    dend_31 { pt3dadd( -37.7715, -96.1586, -27.4666, 0.44 ) }
    dend_31 { pt3dadd( -38.4322, -96.335, -28.1033, 0.44 ) }
    dend_31 { pt3dadd( -39.1074, -96.4566, -28.7835, 1.4 ) }
    dend_31 { pt3dadd( -39.8399, -96.5496, -29.5546, 2.06 ) }
    dend_31 { pt3dadd( -40.4873, -96.6216, -30.2977, 2.06 ) }
    dend_31 { pt3dadd( -41.2725, -96.648, -31.2488, 0.66 ) }
    dend_31 { pt3dadd( -41.8792, -96.6397, -32.0568, 0.81 ) }
    dend_31 { pt3dadd( -42.5192, -96.6278, -32.9977, 0.52 ) }
    dend_31 { pt3dadd( -43.0196, -96.6613, -33.8895, 1.77 ) }
    dend_31 { pt3dadd( -43.3328, -96.7439, -34.6007, 2.28 ) }
    dend_31 { pt3dadd( -44.1235, -97.2499, -37.0304, 1.33 ) }
    dend_31 { pt3dadd( -44.3352, -97.5522, -37.9926, 1.77 ) }
    dend_31 { pt3dadd( -44.4297, -97.7716, -38.611, 1.77 ) }
    dend_31 { pt3dadd( -44.5721, -98.2162, -39.8049, 0.74 ) }
    dend_31 { pt3dadd( -44.6707, -98.5796, -40.7546, 0.52 ) }
    dend_31 { pt3dadd( -44.8339, -99.1618, -42.1297, 0.52 ) }
    dend_31 { pt3dadd( -45.0087, -99.8613, -43.5173, 0.88 ) }
    dend_31 { pt3dadd( -45.2502, -100.535, -44.7828, 1.47 ) }
    dend_31 { pt3dadd( -45.5478, -101.204, -45.9665, 0.22 ) }
    dend_31 { pt3dadd( -45.7195, -101.553, -46.5339, 0.22 ) }
    dend_31 { pt3dadd( -45.9535, -102.03, -47.2119, 0.81 ) }
    dend_31 { pt3dadd( -46.1868, -102.553, -47.8252, 0.96 ) }
    dend_31 { pt3dadd( -46.4854, -103.252, -48.5378, 1.55 ) }
    dend_31 { pt3dadd( -46.7649, -103.953, -49.1432, 1.55 ) }
    dend_31 { pt3dadd( -47.071, -104.717, -49.7726, 0.37 ) }
    dend_31 { pt3dadd( -47.2921, -105.259, -50.2292, 0.74 ) }
    dend_31 { pt3dadd( -47.578, -105.928, -50.8357, 0.81 ) }
    dend_31 { pt3dadd( -47.9339, -106.807, -51.6758, 0.29 ) }
    dend_31 { pt3dadd( -48.0795, -107.23, -52.0803, 0.96 ) }
    dend_31 { pt3dadd( -48.2575, -107.85, -52.6653, 1.33 ) }
    dend_31 { pt3dadd( -48.4436, -108.719, -53.4787, 0.74 ) }
    dend_31 { pt3dadd( -48.5347, -109.446, -54.136, 0.59 ) }
    dend_31 { pt3dadd( -48.5632, -110.598, -55.1192, 0.29 ) }
    dend_31 { pt3dadd( -48.4921, -111.345, -55.6834, 0.29 ) }
    dend_31 { pt3dadd( -48.3544, -112.036, -56.1715, 0.29 ) }
    dend_31 { pt3dadd( -48.1926, -112.568, -56.4973, 1.18 ) }
    dend_31 { pt3dadd( -47.9868, -113.067, -56.7768, 1.69 ) }
    dend_31 { pt3dadd( -47.6156, -113.793, -57.1449, 1.33 ) }
    dend_31 { pt3dadd( -47.0255, -114.812, -57.6493, 0.22 ) }
    dend_31 { pt3dadd( -46.7487, -115.279, -57.8877, 0.22 ) }
    dend_31 { pt3dadd( -46.4165, -115.883, -58.1988, 0.96 ) }
    dend_31 { pt3dadd( -46.2121, -116.31, -58.4184, 1.11 ) }
    dend_31 { pt3dadd( -45.8662, -117.131, -58.8305, 0.52 ) }
    dend_31 { pt3dadd( -45.3744, -118.455, -59.4748, 0.22 ) }
    dend_31 { pt3dadd( -45.1641, -119.085, -59.7761, 0.22 ) }
    dend_31 { pt3dadd( -44.9591, -119.775, -60.1077, 0.88 ) }
    dend_31 { pt3dadd( -44.8254, -120.278, -60.3718, 1.03 ) }
    dend_31 { pt3dadd( -44.6117, -121.146, -60.8671, 0.22 ) }
    dend_31 { pt3dadd( -44.5123, -121.546, -61.108, 0.22 ) }
    dend_31 { pt3dadd( -44.3541, -122.129, -61.4717, 0.66 ) }
    dend_31 { pt3dadd( -44.1626, -122.778, -61.8729, 0.74 ) }
    dend_31 { pt3dadd( -43.6906, -124.285, -62.7679, 0.22 ) }
    dend_31 { pt3dadd( -43.3594, -125.385, -63.3512, 0.22 ) }
    dend_31 { pt3dadd( -43.0137, -126.788, -64.0051, 0.96 ) }
    dend_31 { pt3dadd( -42.9081, -127.321, -64.2248, 1.25 ) }
    dend_31 { pt3dadd( -42.8247, -128.038, -64.4705, 1.25 ) }
    dend_31 { pt3dadd( -42.7742, -129.104, -64.7546, 0.66 ) }
    dend_31 { pt3dadd( -42.8209, -130.422, -65.029, 0.15 ) }
    dend_31 { pt3dadd( -42.9849, -131.551, -65.2432, 0.37 ) }
    dend_31 { pt3dadd( -43.1115, -132.077, -65.353, 0.37 ) }
    dend_31 { pt3dadd( -43.6971, -133.992, -65.8029, 0.22 ) }
    dend_31 { pt3dadd( -43.807, -134.287, -65.8868, 0.74 ) }
    dend_31 { pt3dadd( -44.0679, -134.917, -66.0983, 0.88 ) }
    dend_31 { pt3dadd( -44.9567, -136.909, -66.8386, 0.22 ) }
    dend_31 { pt3dadd( -45.3003, -137.658, -67.121, 0.74 ) }
    dend_31 { pt3dadd( -45.6437, -138.384, -67.3906, 0.74 ) }
    dend_31 { pt3dadd( -46.3959, -139.962, -67.9885, 0.22 ) }
    dend_31 { pt3dadd( -47.0225, -141.288, -68.4741, 0.22 ) }
    dend_31 { pt3dadd( -47.7252, -142.815, -68.9587, 0.22 ) }
    dend_31 { pt3dadd( -48.3597, -144.261, -69.334, 0.22 ) }
    dend_31 { pt3dadd( -48.6923, -145.051, -69.4928, 0.88 ) }
    dend_31 { pt3dadd( -48.941, -145.677, -69.585, 1.11 ) }
    dend_31 { pt3dadd( -49.1627, -146.316, -69.6349, 1.11 ) }
    dend_31 { pt3dadd( -49.6335, -147.881, -69.6838, 0.15 ) }
    dend_31 { pt3dadd( -49.9529, -149.151, -69.6946, 0.15 ) }
    dend_31 { pt3dadd( -50.1086, -149.856, -69.6911, 0.81 ) }
    dend_31 { pt3dadd( -50.2328, -150.473, -69.6848, 0.96 ) }
    dend_31 { pt3dadd( -50.6489, -152.775, -69.9048, 0.22 ) }
    dend_31 { pt3dadd( -50.8265, -153.857, -70.0342, 0.22 ) }
    dend_31 { pt3dadd( -51.0037, -155.051, -70.2457, 0.22 ) }
    dend_31 { pt3dadd( -51.069, -155.53, -70.3526, 1.18 ) }
    dend_31 { pt3dadd( -51.1274, -155.986, -70.4823, 1.18 ) }
    dend_31 { pt3dadd( -51.5567, -159.34, -71.8873, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 25.2403, 185.204, -31.0884, 0.37 ) }
    dend_26 { pt3dadd( 25.7095, 184.392, -30.6057, 0.37 ) }
    dend_26 { pt3dadd( 26.0931, 183.784, -30.2597, 0.52 ) }
    dend_26 { pt3dadd( 26.6378, 182.961, -29.7933, 0.74 ) }
    dend_26 { pt3dadd( 27.0804, 182.31, -29.4373, 1.11 ) }
    dend_26 { pt3dadd( 27.3395, 181.943, -29.2329, 1.11 ) }
    dend_26 { pt3dadd( 27.7157, 181.411, -28.9326, 0.81 ) }
    dend_26 { pt3dadd( 28.5747, 180.265, -28.1955, 0.22 ) }
    dend_26 { pt3dadd( 28.9867, 179.704, -27.8394, 0.22 ) }
    dend_26 { pt3dadd( 29.2446, 179.326, -27.6288, 0.66 ) }
    dend_26 { pt3dadd( 29.5058, 178.903, -27.4154, 0.66 ) }
    dend_26 { pt3dadd( 29.7571, 178.462, -27.2089, 0.66 ) }
    dend_26 { pt3dadd( 30.2194, 177.577, -26.7975, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 30.635, 176.698, -26.3941, 0.22 ) }
    dend_26 { pt3dadd( 31.061, 175.72, -25.9711, 0.22 ) }
    dend_26 { pt3dadd( 31.253, 175.243, -25.7762, 0.44 ) }
    dend_26 { pt3dadd( 31.3748, 174.913, -25.6645, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 25.2403, 185.204, -31.0884, 0.22 ) }
    dend_25 { pt3dadd( 26.7035, 185.27, -31.1456, 0.22 ) }
    dend_25 { pt3dadd( 27.0378, 185.308, -31.172, 0.44 ) }
    dend_25 { pt3dadd( 28.5716, 185.575, -31.3056, 0.22 ) }
    dend_25 { pt3dadd( 29.23, 185.712, -31.3824, 0.59 ) }
    dend_25 { pt3dadd( 29.7334, 185.825, -31.4654, 0.59 ) }
    dend_25 { pt3dadd( 31.8925, 186.313, -31.8213, 0.22 ) }
    dend_25 { pt3dadd( 34.3828, 186.917, -32.2922, 0.22 ) }
    dend_25 { pt3dadd( 35.2729, 187.16, -32.48, 0.66 ) }
    dend_25 { pt3dadd( 35.9681, 187.383, -32.6542, 0.81 ) }
    dend_25 { pt3dadd( 37.0173, 187.744, -32.9475, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 14.5872, 231.48, 0.731219, 0.59 ) }
    dend_19 { pt3dadd( 15.9111, 232.747, -0.00143218, 0.59 ) }
    dend_19 { pt3dadd( 16.3445, 233.176, -0.223069, 0.44 ) }
    dend_19 { pt3dadd( 17.2366, 234.115, -0.708085, 0.22 ) }
    dend_19 { pt3dadd( 18.0009, 234.986, -1.12209, 0.81 ) }
    dend_19 { pt3dadd( 18.3996, 235.466, -1.35499, 0.96 ) }
    dend_19 { pt3dadd( 18.5815, 235.693, -1.46854, 0.96 ) }
    dend_19 { pt3dadd( 19.1342, 236.487, -1.8383, 0.22 ) }
    dend_19 { pt3dadd( 19.8734, 237.769, -2.4695, 0.22 ) }
    dend_19 { pt3dadd( 20.4374, 238.968, -3.07688, 1.11 ) }
    dend_19 { pt3dadd( 20.7006, 239.636, -3.40802, 1.47 ) }
    dend_19 { pt3dadd( 20.8006, 239.965, -3.57815, 1.47 ) }
    dend_19 { pt3dadd( 21.1078, 241.406, -4.30811, 0.22 ) }
    dend_19 { pt3dadd( 21.2696, 242.725, -4.96846, 0.22 ) }
    dend_19 { pt3dadd( 21.3104, 243.503, -5.34627, 0.66 ) }
    dend_19 { pt3dadd( 21.3134, 243.889, -5.53839, 0.66 ) }
    dend_19 { pt3dadd( 21.2339, 245.73, -6.4184, 0.22 ) }
    dend_19 { pt3dadd( 21.0915, 247.409, -7.1918, 0.22 ) }
    dend_19 { pt3dadd( 20.966, 248.365, -7.62772, 0.22 ) }
    dend_19 { pt3dadd( 20.7892, 249.475, -8.12415, 1.47 ) }
    dend_19 { pt3dadd( 20.6646, 250.108, -8.39041, 1.47 ) }
    dend_19 { pt3dadd( 20.1649, 252.246, -9.19598, 0.22 ) }
    dend_19 { pt3dadd( 19.9723, 252.941, -9.43134, 0.81 ) }
    dend_19 { pt3dadd( 19.7802, 253.523, -9.60669, 0.81 ) }
    dend_19 { pt3dadd( 19.2454, 254.946, -9.96873, 0.22 ) }
    dend_19 { pt3dadd( 18.7741, 256.072, -10.2207, 0.22 ) }
    dend_19 { pt3dadd( 18.2443, 257.242, -10.4551, 1.47 ) }
    dend_19 { pt3dadd( 18.006, 257.726, -10.561, 1.84 ) }
    dend_19 { pt3dadd( 17.1042, 259.482, -10.9477, 0.22 ) }
    dend_19 { pt3dadd( 16.3831, 260.827, -11.2334, 0.22 ) }
    dend_19 { pt3dadd( 16.1115, 261.292, -11.3333, 0.22 ) }
    dend_19 { pt3dadd( 15.3659, 262.508, -11.6349, 1.55 ) }
    dend_19 { pt3dadd( 14.886, 263.24, -11.8391, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 14.5872, 231.48, 0.731219, 0.22 ) }
    dend_18 { pt3dadd( 15.4875, 234.294, 0.452118, 0.22 ) }
    dend_18 { pt3dadd( 16.0019, 235.822, 0.320013, 0.22 ) }
    dend_18 { pt3dadd( 16.4102, 237.007, 0.228057, 0.96 ) }
    dend_18 { pt3dadd( 16.5891, 237.522, 0.193162, 1.18 ) }
    dend_18 { pt3dadd( 16.7749, 238.055, 0.161926, 1.18 ) }
    dend_18 { pt3dadd( 17.0745, 238.925, 0.118062, 0.22 ) }
    dend_18 { pt3dadd( 17.2977, 239.545, 0.106287, 0.44 ) }
    dend_18 { pt3dadd( 17.4038, 239.862, 0.096918, 0.44 ) }
    dend_18 { pt3dadd( 17.685, 240.776, 0.06642, 0.22 ) }
    dend_18 { pt3dadd( 17.9223, 241.578, 0.0401956, 0.44 ) }
    dend_18 { pt3dadd( 18.1809, 242.468, 0.0118482, 0.44 ) }
    dend_18 { pt3dadd( 18.9281, 245.19, -0.0678303, 0.22 ) }
    dend_18 { pt3dadd( 19.5442, 247.484, -0.153526, 0.22 ) }
    dend_18 { pt3dadd( 19.7767, 248.345, -0.195994, 0.66 ) }
    dend_18 { pt3dadd( 19.9048, 248.818, -0.225376, 0.74 ) }
    dend_18 { pt3dadd( 20.1146, 249.571, -0.293486, 0.22 ) }
    dend_18 { pt3dadd( 20.6471, 251.409, -0.499718, 0.22 ) }
    dend_18 { pt3dadd( 20.9603, 252.489, -0.636755, 1.03 ) }
    dend_18 { pt3dadd( 21.1687, 253.206, -0.736318, 1.25 ) }
    dend_18 { pt3dadd( 21.3256, 253.748, -0.81561, 1.25 ) }
    dend_18 { pt3dadd( 21.8528, 255.57, -1.09412, 0.22 ) }
    dend_18 { pt3dadd( 22.7288, 258.567, -1.56497, 0.22 ) }
    dend_18 { pt3dadd( 23.0292, 259.577, -1.72317, 0.74 ) }
    dend_18 { pt3dadd( 23.1971, 260.159, -1.80035, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.33657, 100.576, 13.7584, 0.37 ) }
    dend_16 { pt3dadd( 12.2621, 109.458, 18.2174, 0.37 ) }
    dend_16 { pt3dadd( 15.9647, 117.8, 23.0307, 0.37 ) }
    dend_16 { pt3dadd( 17.788, 125.736, 29.3205, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 9.33657, 100.576, 13.7584, 0.22 ) }
    dend_15 { pt3dadd( 13.6785, 109.961, 12.6329, 0.37 ) }
    dend_15 { pt3dadd( 18.552, 118.793, 10.2913, 0.37 ) }
    dend_15 { pt3dadd( 23.7953, 127.234, 7.48407, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 93.0589, -6.86815, 15.2632, 0.37 ) }
    dend_10 { pt3dadd( 102.669, -9.51039, 16.4092, 0.37 ) }
    dend_10 { pt3dadd( 112.585, -10.5218, 17.2766, 0.37 ) }
    dend_10 { pt3dadd( 122.448, -10.255, 18.9064, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 93.0589, -6.86815, 15.2632, 0.22 ) }
    dend_9 { pt3dadd( 102.617, -9.63184, 16.5704, 0.37 ) }
    dend_9 { pt3dadd( 112.554, -10.6892, 17.0605, 0.37 ) }
    dend_9 { pt3dadd( 122.38, -12.2124, 18.2211, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 50.9856, 9.13702, 3.26379, 0.52 ) }
    dend_5 { pt3dadd( 52.3855, 9.38222, 3.67473, 0.52 ) }
    dend_5 { pt3dadd( 52.9299, 9.44913, 3.83851, 0.52 ) }
    dend_5 { pt3dadd( 53.4953, 9.49598, 4.04699, 0.52 ) }
    dend_5 { pt3dadd( 54.5793, 9.5663, 4.48039, 0.52 ) }
    dend_5 { pt3dadd( 55.2272, 9.5894, 4.75329, 0.88 ) }
    dend_5 { pt3dadd( 56.2193, 9.60444, 5.16159, 0.88 ) }
    dend_5 { pt3dadd( 56.9545, 9.61289, 5.45333, 0.88 ) }
    dend_5 { pt3dadd( 57.7375, 9.52098, 5.7661, 0.81 ) }
    dend_5 { pt3dadd( 58.2393, 9.34673, 5.93355, 0.81 ) }
    dend_5 { pt3dadd( 58.9906, 8.89317, 6.13936, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 59.5877, 8.3933, 6.2499, 0.59 ) }
    dend_5 { pt3dadd( 60.2259, 7.75508, 6.29207, 0.59 ) }
    dend_5 { pt3dadd( 60.8567, 7.07726, 6.25936, 0.74 ) }
    dend_5 { pt3dadd( 61.8381, 5.91725, 6.12588, 0.66 ) }
    dend_5 { pt3dadd( 62.2389, 5.39775, 6.05578, 0.66 ) }
    dend_5 { pt3dadd( 62.8427, 4.5438, 5.93467, 0.52 ) }
    dend_5 { pt3dadd( 63.2516, 3.95415, 5.84506, 0.52 ) }
    dend_5 { pt3dadd( 63.7796, 3.22362, 5.72007, 0.81 ) }
    dend_5 { pt3dadd( 64.4361, 2.31663, 5.55351, 0.81 ) }
    dend_5 { pt3dadd( 64.8694, 1.68653, 5.45061, 0.81 ) }
    dend_5 { pt3dadd( 65.3896, 0.855964, 5.31517, 0.81 ) }
    dend_5 { pt3dadd( 66.0076, -0.247095, 5.14645, 0.88 ) }
    dend_5 { pt3dadd( 66.4965, -1.22552, 5.00742, 1.11 ) }
    dend_5 { pt3dadd( 66.7944, -1.86939, 4.91454, 1.11 ) }
    dend_5 { pt3dadd( 67.337, -3.16704, 4.73707, 0.88 ) }
    dend_5 { pt3dadd( 67.6997, -4.20391, 4.63214, 0.96 ) }
    dend_5 { pt3dadd( 67.9262, -5.01533, 4.59356, 0.96 ) }
    dend_5 { pt3dadd( 68.0777, -5.69503, 4.59615, 0.96 ) }
    dend_5 { pt3dadd( 68.1996, -6.31728, 4.61939, 0.66 ) }
    dend_5 { pt3dadd( 68.3938, -7.30709, 4.70749, 0.66 ) }
    dend_5 { pt3dadd( 68.6879, -8.60968, 4.89225, 0.81 ) }
    dend_5 { pt3dadd( 69.0007, -9.64008, 5.07822, 1.11 ) }
    dend_5 { pt3dadd( 69.4436, -10.7979, 5.32884, 0.96 ) }
    dend_5 { pt3dadd( 69.836, -11.6202, 5.49664, 0.81 ) }
    dend_5 { pt3dadd( 70.4421, -12.6573, 5.69184, 0.81 ) }
    dend_5 { pt3dadd( 71.2086, -13.7252, 5.86212, 0.59 ) }
    dend_5 { pt3dadd( 71.8787, -14.5245, 5.9541, 0.37 ) }
    dend_5 { pt3dadd( 72.5061, -15.205, 5.99936, 0.37 ) }
    dend_5 { pt3dadd( 73.4421, -16.1852, 6.01659, 0.59 ) }
    dend_5 { pt3dadd( 73.956, -16.7301, 5.98442, 0.88 ) }
    dend_5 { pt3dadd( 74.2403, -17.0467, 5.94026, 1.11 ) }
    dend_5 { pt3dadd( 74.6027, -17.4876, 5.87898, 1.11 ) }
    dend_5 { pt3dadd( 75.0801, -18.1072, 5.81656, 0.74 ) }
    dend_5 { pt3dadd( 75.4648, -18.5802, 5.76805, 0.74 ) }
    dend_5 { pt3dadd( 75.8446, -19.0634, 5.71062, 0.74 ) }
    dend_5 { pt3dadd( 76.4203, -19.8316, 5.57938, 0.74 ) }
    dend_5 { pt3dadd( 77.0023, -20.6413, 5.39609, 0.74 ) }
    dend_5 { pt3dadd( 77.5309, -21.3751, 5.21137, 0.66 ) }
    dend_5 { pt3dadd( 78.0321, -22.0591, 5.01929, 0.66 ) }
    dend_5 { pt3dadd( 78.6967, -22.9553, 4.74048, 0.96 ) }
    dend_5 { pt3dadd( 79.4773, -24.036, 4.36758, 1.4 ) }
    dend_5 { pt3dadd( 79.871, -24.6272, 4.14066, 1.62 ) }
    dend_5 { pt3dadd( 80.2717, -25.2787, 3.86811, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 50.9856, 9.13702, 3.26379, 0.88 ) }
    dend_4 { pt3dadd( 51.9598, 10.1556, 3.47818, 0.88 ) }
    dend_4 { pt3dadd( 52.8417, 10.9704, 3.70022, 0.88 ) }
    dend_4 { pt3dadd( 53.843, 11.747, 3.96064, 0.88 ) }
    dend_4 { pt3dadd( 54.9372, 12.4603, 4.23603, 0.88 ) }
    dend_4 { pt3dadd( 56.2407, 13.194, 4.5713, 0.74 ) }
    dend_4 { pt3dadd( 57.0679, 13.6289, 4.79408, 0.74 ) }
    dend_4 { pt3dadd( 58.243, 14.1523, 5.14221, 0.88 ) }
    dend_4 { pt3dadd( 59.3028, 14.5477, 5.45901, 0.88 ) }
    dend_4 { pt3dadd( 60.182, 14.8337, 5.70788, 0.88 ) }
    dend_4 { pt3dadd( 61.0368, 15.0995, 5.9388, 0.66 ) }
    dend_4 { pt3dadd( 61.6364, 15.3149, 6.08783, 0.66 ) }
    dend_4 { pt3dadd( 62.4389, 15.7141, 6.24216, 0.88 ) }
    dend_4 { pt3dadd( 62.9177, 16.0293, 6.31113, 0.88 ) }
    dend_4 { pt3dadd( 63.3748, 16.3838, 6.36105, 0.88 ) }
    dend_4 { pt3dadd( 63.8388, 16.7592, 6.40306, 0.88 ) }
    dend_4 { pt3dadd( 64.7036, 17.4417, 6.48169, 0.59 ) }
    dend_4 { pt3dadd( 65.3178, 17.902, 6.57681, 0.59 ) }
    dend_4 { pt3dadd( 65.7866, 18.2686, 6.6859, 0.81 ) }
    dend_4 { pt3dadd( 66.3989, 18.7959, 6.86819, 0.81 ) }
    dend_4 { pt3dadd( 66.8646, 19.252, 7.03229, 0.81 ) }
    dend_4 { pt3dadd( 67.3889, 19.8077, 7.23427, 0.66 ) }
    dend_4 { pt3dadd( 68.1395, 20.6309, 7.53939, 0.59 ) }
    dend_4 { pt3dadd( 68.9305, 21.6581, 7.87285, 0.59 ) }
    dend_4 { pt3dadd( 69.3541, 22.2962, 8.04076, 0.59 ) }
    dend_4 { pt3dadd( 69.8351, 23.1018, 8.2011, 0.44 ) }
    dend_4 { pt3dadd( 70.1373, 23.6154, 8.27157, 0.44 ) }
    dend_4 { pt3dadd( 70.4644, 24.1582, 8.31551, 0.44 ) }
    dend_4 { pt3dadd( 71.2831, 25.4666, 8.37072, 0.44 ) }
    dend_4 { pt3dadd( 71.9341, 26.4494, 8.40448, 0.66 ) }
    dend_4 { pt3dadd( 72.4787, 27.2516, 8.42849, 0.66 ) }
    dend_4 { pt3dadd( 73.1527, 28.2332, 8.45094, 0.74 ) }
    dend_4 { pt3dadd( 73.679, 28.9988, 8.4641, 0.96 ) }
    dend_4 { pt3dadd( 74.0846, 29.5693, 8.47204, 0.96 ) }
    dend_4 { pt3dadd( 74.6868, 30.3273, 8.48139, 0.66 ) }
    dend_4 { pt3dadd( 75.2784, 31.0351, 8.49036, 0.66 ) }
    dend_4 { pt3dadd( 76.2185, 32.1366, 8.50334, 0.59 ) }
    dend_4 { pt3dadd( 77.0871, 33.1834, 8.53841, 0.59 ) }
    dend_4 { pt3dadd( 77.6476, 33.8739, 8.57523, 0.81 ) }
    dend_4 { pt3dadd( 78.0718, 34.4134, 8.61217, 0.81 ) }
    dend_4 { pt3dadd( 78.7981, 35.3, 8.68476, 0.52 ) }
    dend_4 { pt3dadd( 79.3624, 35.9271, 8.74382, 0.52 ) }
    dend_4 { pt3dadd( 80.1137, 36.7061, 8.83335, 0.52 ) }
    dend_4 { pt3dadd( 80.7469, 37.3455, 8.91104, 0.52 ) }
    dend_4 { pt3dadd( 81.3545, 37.945, 8.98175, 0.37 ) }
    dend_4 { pt3dadd( 82.4391, 38.9878, 9.0987, 0.37 ) }
    dend_4 { pt3dadd( 83.1538, 39.6612, 9.16538, 0.59 ) }
    dend_4 { pt3dadd( 83.6111, 40.0629, 9.19703, 0.59 ) }
    dend_4 { pt3dadd( 84.5844, 40.8835, 9.23371, 0.74 ) }
    dend_4 { pt3dadd( 85.0922, 41.3164, 9.25211, 0.74 ) }
    dend_4 { pt3dadd( 85.5233, 41.701, 9.27312, 0.74 ) }
    dend_4 { pt3dadd( 86.1353, 42.3194, 9.32066, 0.74 ) }
    dend_4 { pt3dadd( 86.5463, 42.7594, 9.32001, 0.44 ) }
    dend_4 { pt3dadd( 87.1374, 43.3685, 9.23914, 0.44 ) }
    dend_4 { pt3dadd( 87.6487, 43.8489, 9.11994, 0.81 ) }
    dend_4 { pt3dadd( 88.5109, 44.5952, 8.86582, 0.81 ) }
    dend_4 { pt3dadd( 89.1465, 45.0956, 8.63648, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 90.2576, 45.9208, 8.20172, 0.52 ) }
    dend_4 { pt3dadd( 91.1055, 46.5563, 7.82019, 0.44 ) }
    dend_4 { pt3dadd( 91.6669, 46.9587, 7.52812, 0.44 ) }
    dend_4 { pt3dadd( 92.1582, 47.3043, 7.24121, 0.44 ) }
    dend_4 { pt3dadd( 92.543, 47.563, 6.98784, 0.44 ) }
    dend_4 { pt3dadd( 93.1867, 47.9646, 6.57889, 0.74 ) }
    dend_4 { pt3dadd( 93.7438, 48.3119, 6.35268, 0.59 ) }
    dend_4 { pt3dadd( 94.1187, 48.5875, 6.22938, 0.59 ) }
    dend_4 { pt3dadd( 100.953, 55.9919, 8.11618, 0.59 ) }
    dend_4 { pt3dadd( 108.021, 63.1804, 9.89644, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -102.948, -357.056, 4.07327, 0.52 ) }
    dend_39 { pt3dadd( -103.615, -358.79, 3.99093, 0.52 ) }
    dend_39 { pt3dadd( -103.895, -359.491, 3.96382, 0.29 ) }
    dend_39 { pt3dadd( -104.284, -360.406, 3.92113, 0.44 ) }
    dend_39 { pt3dadd( -104.651, -361.256, 3.87596, 0.44 ) }
    dend_39 { pt3dadd( -104.943, -361.915, 3.83705, 0.29 ) }
    dend_39 { pt3dadd( -105.388, -362.874, 3.76466, 0.29 ) }
    dend_39 { pt3dadd( -105.846, -363.785, 3.68039, 0.81 ) }
    dend_39 { pt3dadd( -106.191, -364.484, 3.5916, 1.18 ) }
    dend_39 { pt3dadd( -106.371, -364.867, 3.53573, 1.4 ) }
    dend_39 { pt3dadd( -106.654, -365.503, 3.43976, 1.4 ) }
    dend_39 { pt3dadd( -106.901, -366.116, 3.34895, 1.11 ) }
    dend_39 { pt3dadd( -107.391, -367.442, 3.16452, 0.52 ) }
    dend_39 { pt3dadd( -107.718, -368.484, 3.04135, 0.44 ) }
    dend_39 { pt3dadd( -107.945, -369.322, 2.9579, 0.74 ) }
    dend_39 { pt3dadd( -108.204, -370.331, 2.87055, 0.81 ) }
    dend_39 { pt3dadd( -108.388, -371.092, 2.80924, 0.81 ) }
    dend_39 { pt3dadd( -108.565, -371.898, 2.74719, 0.74 ) }
    dend_39 { pt3dadd( -108.782, -372.966, 2.71132, 0.22 ) }
    dend_39 { pt3dadd( -108.877, -373.459, 2.70205, 0.22 ) }
    dend_39 { pt3dadd( -109.027, -374.328, 2.68479, 0.22 ) }
    dend_39 { pt3dadd( -109.131, -375.081, 2.69283, 0.66 ) }
    dend_39 { pt3dadd( -109.22, -375.866, 2.73374, 0.81 ) }
    dend_39 { pt3dadd( -109.334, -377.129, 2.84611, 0.66 ) }
    dend_39 { pt3dadd( -109.403, -378.278, 2.99867, 0.22 ) }
    dend_39 { pt3dadd( -109.421, -379.303, 3.17584, 0.22 ) }
    dend_39 { pt3dadd( -109.4, -380.05, 3.3339, 0.22 ) }
    dend_39 { pt3dadd( -109.371, -380.773, 3.52503, 0.96 ) }
    dend_39 { pt3dadd( -109.362, -381.144, 3.63104, 1.18 ) }
    dend_39 { pt3dadd( -109.355, -381.696, 3.78698, 1.18 ) }
    dend_39 { pt3dadd( -109.354, -382.148, 3.94134, 1.18 ) }
    dend_39 { pt3dadd( -109.382, -383.01, 4.21915, 0.74 ) }
    dend_39 { pt3dadd( -109.478, -384.316, 4.59511, 0.22 ) }
    dend_39 { pt3dadd( -109.524, -384.747, 4.71, 0.22 ) }
    dend_39 { pt3dadd( -109.589, -385.248, 4.84033, 0.44 ) }
    dend_39 { pt3dadd( -109.649, -385.682, 4.9424, 0.44 ) }
    dend_39 { pt3dadd( -109.791, -386.82, 5.18422, 0.22 ) }
    dend_39 { pt3dadd( -109.868, -387.537, 5.31414, 0.96 ) }
    dend_39 { pt3dadd( -109.906, -388.086, 5.39418, 1.18 ) }
    dend_39 { pt3dadd( -109.931, -388.613, 5.46568, 1.25 ) }
    dend_39 { pt3dadd( -109.974, -389.617, 5.59164, 0.96 ) }
    dend_39 { pt3dadd( -110.072, -391.058, 5.75214, 0.29 ) }
    dend_39 { pt3dadd( -110.174, -392.191, 5.86128, 0.22 ) }
    dend_39 { pt3dadd( -110.324, -393.472, 5.95716, 0.22 ) }
    dend_39 { pt3dadd( -110.423, -394.13, 5.99661, 0.81 ) }
    dend_39 { pt3dadd( -110.53, -394.665, 6.01812, 0.96 ) }
    dend_39 { pt3dadd( -111.005, -396.526, 6.07084, 0.22 ) }
    dend_39 { pt3dadd( -111.187, -397.106, 6.08028, 0.22 ) }
    dend_39 { pt3dadd( -111.507, -398.029, 6.09745, 0.59 ) }
    dend_39 { pt3dadd( -111.757, -398.704, 6.11413, 0.59 ) }
    dend_39 { pt3dadd( -112.121, -399.717, 6.14533, 0.52 ) }
    dend_39 { pt3dadd( -112.402, -400.551, 6.18122, 0.52 ) }
    dend_39 { pt3dadd( -112.756, -401.684, 6.25734, 0.52 ) }
    dend_39 { pt3dadd( -112.891, -402.129, 6.29406, 0.96 ) }
    dend_39 { pt3dadd( -113.112, -402.891, 6.3645, 0.96 ) }
    dend_39 { pt3dadd( -113.351, -403.75, 6.45079, 0.59 ) }
    dend_39 { pt3dadd( -113.759, -405.199, 6.63889, 0.22 ) }
    dend_39 { pt3dadd( -114.171, -406.695, 6.84335, 0.22 ) }
    dend_39 { pt3dadd( -114.362, -407.396, 6.94477, 0.22 ) }
    dend_39 { pt3dadd( -114.542, -408.016, 7.03819, 0.96 ) }
    dend_39 { pt3dadd( -114.669, -408.44, 7.10741, 1.18 ) }
    dend_39 { pt3dadd( -114.935, -409.283, 7.26271, 0.52 ) }
    dend_39 { pt3dadd( -115.569, -419.762, 7.17313, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -102.948, -357.056, 4.07327, 0.29 ) }
    dend_36 { pt3dadd( -104.634, -356.48, 4.16389, 0.29 ) }
    dend_36 { pt3dadd( -105.534, -356.421, 4.19966, 0.37 ) }
    dend_36 { pt3dadd( -105.943, -356.507, 4.21157, 0.37 ) }
    dend_36 { pt3dadd( -106.884, -356.857, 4.26871, 0.37 ) }
    dend_36 { pt3dadd( -107.775, -357.252, 4.23288, 0.52 ) }
    dend_36 { pt3dadd( -108.546, -357.617, 4.15836, 0.59 ) }
    dend_36 { pt3dadd( -109.575, -358.237, 3.98627, 0.59 ) }
    dend_36 { pt3dadd( -110.481, -358.825, 3.79165, 0.37 ) }
    dend_36 { pt3dadd( -111.312, -359.381, 3.58123, 0.37 ) }
    dend_36 { pt3dadd( -112.776, -360.387, 3.14698, 0.37 ) }
    dend_36 { pt3dadd( -113.447, -360.809, 2.92938, 0.37 ) }
    dend_36 { pt3dadd( -114.067, -361.168, 2.72118, 0.29 ) }
    dend_36 { pt3dadd( -114.563, -361.431, 2.55862, 0.29 ) }
    dend_36 { pt3dadd( -115.125, -361.719, 2.38971, 0.81 ) }
    dend_36 { pt3dadd( -115.58, -361.971, 2.27364, 0.81 ) }
    dend_36 { pt3dadd( -116.218, -362.391, 2.20221, 0.81 ) }
    dend_36 { pt3dadd( -117.301, -363.213, 2.12669, 0.29 ) }
    dend_36 { pt3dadd( -117.819, -363.654, 2.11098, 0.66 ) }
    dend_36 { pt3dadd( -118.207, -364.012, 2.12166, 0.66 ) }
    dend_36 { pt3dadd( -118.568, -364.368, 2.14773, 0.66 ) }
    dend_36 { pt3dadd( -119.875, -365.73, 2.2862, 0.29 ) }
    dend_36 { pt3dadd( -120.455, -366.363, 2.34624, 0.44 ) }
    dend_36 { pt3dadd( -120.955, -366.91, 2.39617, 0.29 ) }
    dend_36 { pt3dadd( -121.552, -367.54, 2.4396, 0.74 ) }
    dend_36 { pt3dadd( -121.986, -367.967, 2.44097, 0.74 ) }
    dend_36 { pt3dadd( -122.695, -368.583, 2.39445, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -123.936, -369.522, 2.23047, 0.29 ) }
    dend_36 { pt3dadd( -124.672, -370.028, 2.10539, 0.52 ) }
    dend_36 { pt3dadd( -125.164, -370.341, 1.99014, 0.52 ) }
    dend_36 { pt3dadd( -126.184, -370.954, 1.67015, 0.29 ) }
    dend_36 { pt3dadd( -126.94, -371.366, 1.40782, 0.29 ) }
    dend_36 { pt3dadd( -127.397, -371.583, 1.23559, 0.59 ) }
    dend_36 { pt3dadd( -127.934, -371.81, 1.00845, 0.59 ) }
    dend_36 { pt3dadd( -128.899, -372.203, 0.571819, 0.22 ) }
    dend_36 { pt3dadd( -129.442, -372.414, 0.336891, 0.29 ) }
    dend_36 { pt3dadd( -130.267, -372.736, 0.0138926, 0.29 ) }
    dend_36 { pt3dadd( -130.656, -372.896, -0.134819, 0.29 ) }
    dend_36 { pt3dadd( -131.654, -373.356, -0.505049, 0.37 ) }
    dend_36 { pt3dadd( -132.421, -373.795, -0.707648, 0.37 ) }
    dend_36 { pt3dadd( -133.225, -374.343, -0.820773, 0.52 ) }
    dend_36 { pt3dadd( -134.16, -375.093, -0.878145, 1.55 ) }
    dend_36 { pt3dadd( -134.723, -375.615, -0.885051, 1.92 ) }
    dend_36 { pt3dadd( -135.263, -376.161, -0.864424, 1.92 ) }
    dend_36 { pt3dadd( -136.524, -377.518, -0.731225, 0.29 ) }
    dend_36 { pt3dadd( -137.351, -378.476, -0.620299, 0.29 ) }
    dend_36 { pt3dadd( -138.02, -379.304, -0.504003, 0.29 ) }
    dend_36 { pt3dadd( -138.553, -379.975, -0.395486, 0.74 ) }
    dend_36 { pt3dadd( -138.818, -380.31, -0.340049, 0.96 ) }
    dend_36 { pt3dadd( -139.053, -380.596, -0.297036, 1.11 ) }
    dend_36 { pt3dadd( -139.733, -381.442, -0.17669, 0.52 ) }
    dend_36 { pt3dadd( -140.164, -382.009, -0.0636935, 0.29 ) }
    dend_36 { pt3dadd( -140.801, -382.827, 0.135187, 0.22 ) }
    dend_36 { pt3dadd( -141.238, -383.358, 0.277265, 0.44 ) }
    dend_36 { pt3dadd( -141.614, -383.79, 0.400211, 0.44 ) }
    dend_36 { pt3dadd( -142.659, -384.971, 0.755162, 0.22 ) }
    dend_36 { pt3dadd( -143.295, -385.672, 0.980323, 0.22 ) }
    dend_36 { pt3dadd( -143.907, -386.32, 1.19112, 1.25 ) }
    dend_36 { pt3dadd( -144.471, -386.904, 1.39758, 1.55 ) }
    dend_36 { pt3dadd( -144.742, -387.17, 1.49175, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 80.2717, -25.2787, 3.86811, 0.74 ) }
    dend_7 { pt3dadd( 81.5919, -26.04, 5.04472, 0.74 ) }
    dend_7 { pt3dadd( 81.9762, -26.28, 5.35948, 0.74 ) }
    dend_7 { pt3dadd( 82.636, -26.7366, 5.84333, 0.59 ) }
    dend_7 { pt3dadd( 83.414, -27.337, 6.33484, 0.59 ) }
    dend_7 { pt3dadd( 84.1387, -27.9503, 6.7315, 0.59 ) }
    dend_7 { pt3dadd( 84.5017, -28.2695, 6.91387, 0.59 ) }
    dend_7 { pt3dadd( 85.2182, -28.9646, 7.20182, 0.59 ) }
    dend_7 { pt3dadd( 85.8303, -29.5848, 7.41186, 0.81 ) }
    dend_7 { pt3dadd( 86.643, -30.4006, 7.68661, 0.81 ) }
    dend_7 { pt3dadd( 87.3153, -31.0461, 7.91076, 0.37 ) }
    dend_7 { pt3dadd( 88.0143, -31.6712, 8.14972, 0.37 ) }
    dend_7 { pt3dadd( 88.8313, -32.3919, 8.43963, 0.37 ) }
    dend_7 { pt3dadd( 89.6616, -33.1304, 8.76694, 0.37 ) }
    dend_7 { pt3dadd( 90.4553, -33.8053, 9.10909, 0.37 ) }
    dend_7 { pt3dadd( 91.6464, -34.7712, 9.66971, 0.22 ) }
    dend_7 { pt3dadd( 92.916, -35.7694, 10.2963, 0.22 ) }
    dend_7 { pt3dadd( 99.62, -43.0498, 12.9381, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 80.2717, -25.2787, 3.86811, 0.37 ) }
    dend_6 { pt3dadd( 80.2804, -26.6937, 3.36203, 0.37 ) }
    dend_6 { pt3dadd( 80.3464, -27.5917, 3.09092, 0.37 ) }
    dend_6 { pt3dadd( 80.4537, -28.4297, 2.86161, 0.37 ) }
    dend_6 { pt3dadd( 80.6149, -29.2981, 2.69672, 0.37 ) }
    dend_6 { pt3dadd( 80.7851, -30.0483, 2.57613, 0.37 ) }
    dend_6 { pt3dadd( 81.0165, -30.9273, 2.45978, 0.29 ) }
    dend_6 { pt3dadd( 81.4323, -32.1626, 2.27791, 0.22 ) }
    dend_6 { pt3dadd( 81.9143, -33.4706, 2.03363, 0.22 ) }
    dend_6 { pt3dadd( 82.5643, -35.0951, 1.66092, 0.22 ) }
    dend_6 { pt3dadd( 82.8114, -35.695, 1.4939, 1.18 ) }
    dend_6 { pt3dadd( 82.9943, -36.1867, 1.30769, 1.4 ) }
    dend_6 { pt3dadd( 83.3688, -37.6919, 0.539183, 1.4 ) }
    dend_6 { pt3dadd( 83.4785, -38.9046, -0.238825, 0.44 ) }
    dend_6 { pt3dadd( 83.4556, -39.3156, -0.521114, 0.44 ) }
    dend_6 { pt3dadd( 83.3486, -39.938, -0.964401, 0.29 ) }
    dend_6 { pt3dadd( 83.0864, -40.9786, -1.64169, 0.29 ) }
    dend_6 { pt3dadd( 82.6863, -42.2961, -2.45149, 0.22 ) }
    dend_6 { pt3dadd( 82.3173, -43.3117, -2.96167, 0.22 ) }
    dend_6 { pt3dadd( 82.0464, -43.9206, -3.25068, 1.03 ) }
    dend_6 { pt3dadd( 81.8997, -44.2303, -3.38315, 1.33 ) }
    dend_6 { pt3dadd( 81.683, -44.6649, -3.54188, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -144.742, -387.17, 1.49175, 0.29 ) }
    dend_38 { pt3dadd( -145.638, -386.306, 1.47443, 0.29 ) }
    dend_38 { pt3dadd( -145.836, -386.115, 1.46482, 0.52 ) }
    dend_38 { pt3dadd( -146.141, -385.815, 1.44083, 0.59 ) }
    dend_38 { pt3dadd( -147.868, -384.113, 1.19654, 0.22 ) }
    dend_38 { pt3dadd( -148.351, -383.641, 1.11097, 0.22 ) }
    dend_38 { pt3dadd( -149.015, -383.005, 0.976433, 0.66 ) }
    dend_38 { pt3dadd( -149.366, -382.662, 0.878882, 0.66 ) }
    dend_38 { pt3dadd( -150.849, -381.264, 0.416208, 0.22 ) }
    dend_38 { pt3dadd( -151.459, -380.714, 0.209127, 0.22 ) }
    dend_38 { pt3dadd( -152.018, -380.253, 0.0144795, 0.52 ) }
    dend_38 { pt3dadd( -152.416, -379.949, -0.122827, 0.66 ) }
    dend_38 { pt3dadd( -153.508, -379.178, -0.492931, 0.22 ) }
    dend_38 { pt3dadd( -155.676, -377.682, -1.22088, 0.22 ) }
    dend_38 { pt3dadd( -157.076, -376.764, -1.6814, 0.22 ) }
    dend_38 { pt3dadd( -158.378, -375.923, -2.07611, 1.18 ) }
    dend_38 { pt3dadd( -158.743, -375.691, -2.18644, 1.4 ) }
    dend_38 { pt3dadd( -159.305, -375.346, -2.35176, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -144.742, -387.17, 1.49175, 0.22 ) }
    dend_37 { pt3dadd( -145.661, -388.66, 1.57305, 0.22 ) }
    dend_37 { pt3dadd( -146.4, -389.883, 1.70726, 0.22 ) }
    dend_37 { pt3dadd( -146.715, -390.433, 1.77959, 0.44 ) }
    dend_37 { pt3dadd( -146.85, -390.675, 1.81351, 0.44 ) }
    dend_37 { pt3dadd( -148.091, -392.991, 2.1446, 0.22 ) }
    dend_37 { pt3dadd( -148.672, -394.074, 2.29954, 0.44 ) }
    dend_37 { pt3dadd( -149.163, -394.985, 2.44074, 0.22 ) }
    dend_37 { pt3dadd( -149.471, -395.599, 2.54902, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -149.73, -396.131, 2.6515, 0.66 ) }
    dend_37 { pt3dadd( -149.918, -396.54, 2.73869, 0.44 ) }
    dend_37 { pt3dadd( -153.555, -406.014, 5.05381, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 5
    dend_42 nseg = 3
    dend_27 nseg = 3
    dend_50 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_33 nseg = 5
    dend_22 nseg = 7
    dend_21 nseg = 3
    dend_12 nseg = 9
    dend_1 nseg = 3
    dend_45 nseg = 5
    dend_41 nseg = 9
    dend_34 nseg = 3
    dend_29 nseg = 5
    dend_17 nseg = 9
    dend_14 nseg = 3
    dend_8 nseg = 3
    dend_47 nseg = 11
    dend_40 nseg = 5
    dend_35 nseg = 11
    dend_32 nseg = 13
    dend_31 nseg = 7
    dend_5 nseg = 3
    dend_4 nseg = 5
    dend_39 nseg = 3
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_ChC_56a32cfcf2_0_0


