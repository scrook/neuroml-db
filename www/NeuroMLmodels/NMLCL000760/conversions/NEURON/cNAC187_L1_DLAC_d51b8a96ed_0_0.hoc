// Cell: cNAC187_L1_DLAC_d51b8a96ed_0_0
/*
{
  "id" : "cNAC187_L1_DLAC_d51b8a96ed_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.08558, -8.00436, 0.0, 3.28822", "-2.82762, -7.18029, 0.0, 6.03015", "-2.56966, -6.35622, 0.0, 7.19925", "-2.31171, -5.53216, 0.0, 8.80492", "-2.05375, -4.70809, 0.0, 10.2238", "-1.79579, -3.88402, 0.0, 11.4926", "-1.53783, -3.05995, 0.0, 12.2121", "-1.27988, -2.23588, 0.0, 12.7524", "-1.02192, -1.41181, 0.0, 13.2872", "-0.763961, -0.587744, 0.0, 13.6432", "-0.506004, 0.236325, 0.0, 13.5995", "-0.248046, 1.06039, 0.0, 13.5377", "0.0099114, 1.88446, 0.0, 13.4148", "0.267869, 2.70853, 0.0, 13.3035", "0.525827, 3.5326, 0.0, 12.9617", "0.783784, 4.35667, 0.0, 12.4959", "1.04174, 5.18074, 0.0, 11.7267", "1.2997, 6.00481, 0.0, 10.4697", "1.55766, 6.82887, 0.0, 9.07088", "1.81561, 7.65294, 0.0, 7.0465", "2.07357, 8.47701, 0.0, 3.98438" ]
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-3.66423, -0.138438, -15.72, 1.59", "-3.66423, -0.138438, -15.72, 1.59", "-4.90113, -0.0912572, -16.1477, 1.59", "-5.43656, -0.0708331, -16.3328, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999983174933
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-2.75423, -2.53243, -15.23, 0.91", "-3.44404, -2.96541, -15.9286, 0.91", "-4.31841, -3.38025, -16.8797, 0.91", "-5.06766, -3.68714, -17.8902, 0.68", "-5.99573, -4.00213, -19.5722, 0.68", "-6.50319, -4.13106, -20.9092, 0.68", "-6.77175, -4.09254, -22.05, 0.68", "-6.78457, -3.8383, -22.9491, 0.68", "-6.62036, -3.18452, -24.34, 0.68", "-6.38547, -2.52015, -25.4404, 0.68", "-6.15735, -1.8921, -26.3584, 0.68", "-5.83719, -0.934424, -27.7615, 0.68", "-5.59256, 0.146057, -29.4176, 0.68", "-5.5426, 0.963316, -30.868, 0.68", "-5.63708, 1.68032, -32.4507, 0.68", "-5.73393, 1.96373, -33.4376, 0.68", "-5.84833, 2.10979, -34.6932, 0.68", "-5.92731, 2.12388, -36.0771, 0.68", "-5.88032, 2.0821, -37.6184, 0.68", "-5.59411, 2.09067, -39.2628, 0.68", "-5.13602, 2.21512, -40.8385, 0.68", "-4.5646, 2.46763, -42.529, 0.68", "-4.08055, 2.81368, -44.0368, 0.68", "-3.67177, 3.3126, -45.7795, 0.46", "-3.50031, 3.81386, -47.4649, 0.91", "-3.52619, 4.34435, -49.1378, 0.91", "-3.64553, 4.75505, -50.4563, 0.91", "-4.02245, 5.31229, -52.5371, 0.91", "-4.68659, 5.76772, -54.8982, 0.91", "-5.47734, 6.0408, -56.8576, 0.91", "-6.26255, 6.18704, -58.4289, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999983174933,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "5.54577, 2.51207, -14.55, 0.91", "5.9965, 3.22774, -15.9573, 0.91", "6.61286, 4.32991, -17.8197, 0.91", "7.47298, 5.90004, -20.2916, 0.91", "8.14421, 7.0158, -22.0238, 0.91", "8.81327, 8.02405, -23.5113, 0.91", "9.51104, 8.91189, -24.8618, 0.91", "10.4289, 9.85164, -26.4499, 1.14", "10.7903, 10.117, -26.9753, 1.14", "12.0064, 10.815, -28.4732, 1.14", "13.0823, 11.24, -29.6426, 0.91", "14.8378, 11.6307, -31.38, 0.91", "16.6714, 11.733, -33.1333, 0.91", "18.1668, 11.5906, -34.5593, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999983174933
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "4.34577, 2.99657, 6.22, 1.59", "4.34577, 2.99657, 6.22, 1.59", "6.72479, 4.3111, 6.43351, 1.59", "9.19778, 5.59149, 6.74932, 1.59", "11.9126, 6.99708, 7.096, 1.37", "13.4665, 7.8016, 7.29444, 1.14", "15.4902, 8.8494, 7.55288, 1.14", "17.9976, 10.1023, 7.90836, 1.37", "19.5417, 10.8022, 8.18343, 2.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999983174933
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.66423, 7.06257, -1.8, 3.87", "-2.66423, 7.06257, -1.8, 3.87", "-3.24555, 8.43523, -1.89089, 2.73", "-4.1593, 10.5928, -2.03375, 2.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999983174933
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.65423, -5.73393, 4.85, 2.96", "-4.65423, -5.73393, 4.85, 2.96", "-5.37384, -6.55471, 5.13613, 2.28", "-6.50847, -7.84884, 5.58729, 2.05", "-7.61958, -9.11614, 6.02909, 2.05", "-8.93162, -10.6127, 6.55079, 2.05", "-9.55886, -11.3281, 6.80019, 2.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999983174933
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.07357, 8.47701, 0.0, 0.91386", "6.5546, 22.792, 0.0, 0.91386", "11.0356, 37.1071, 0.0, 0.91386" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-5.43656, -0.0708331, -16.3328, 0.91", "-6.43316, 0.16755, -16.7084, 0.91", "-8.34015, 0.429606, -17.6305, 0.91", "-10.1594, 0.52807, -18.7354, 0.68", "-11.6624, 0.533721, -19.8046, 0.68", "-13.5243, 0.540721, -21.1291, 0.91", "-15.8144, 0.54933, -22.7582, 0.91", "-17.147, 0.50841, -23.8681, 0.91", "-18.6009, 0.314235, -25.3754, 0.91", "-19.4538, 0.0439171, -26.4441, 0.91" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-5.43656, -0.0708331, -16.3328, 0.91", "-6.25586, 0.875037, -17.2062, 0.91", "-7.85211, 2.32299, -18.5093, 0.91", "-9.14141, 3.32836, -19.4448, 0.91", "-11.1045, 4.6737, -20.8127, 0.91", "-12.9732, 5.85116, -22.2016, 0.91", "-15.3723, 7.30823, -24.1376, 0.91", "-16.9965, 8.15216, -25.462, 0.91", "-17.8329, 8.52264, -26.0952, 0.91", "-19.2571, 9.07367, -27.1153, 0.68", "-21.4125, 9.78649, -28.6986, 0.68", "-22.6635, 10.1438, -29.9106, 1.37", "-22.8867, 10.2164, -30.2238, 1.37" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-6.26255, 6.18704, -58.4289, 0.68", "-6.29358, 5.5132, -62.6935, 0.68", "-6.23008, 4.86249, -66.2467, 0.68", "-6.10637, 4.20696, -69.4253, 0.68", "-6.02439, 3.56634, -72.0848, 0.68", "-5.91178, 2.79223, -74.9275, 0.68", "-5.67347, 1.65032, -78.8378, 0.68", "-5.48538, 1.14892, -80.3699, 0.68", "-4.88175, -0.184696, -84.1435, 0.68", "-4.52991, -0.963317, -86.1475, 0.68", "-4.18486, -1.81473, -88.1111, 0.68", "-3.74358, -2.84602, -90.2042, 0.68", "-3.26758, -3.73239, -91.8541, 0.68", "-2.13939, -5.41703, -94.8049, 0.68", "-1.11462, -6.70883, -96.7718, 0.68", "0.145192, -8.10452, -98.6709, 0.68", "1.62672, -9.57578, -100.468, 0.46", "3.15666, -10.9998, -102.012, 0.46", "4.04284, -11.7829, -102.89, 0.68", "5.08938, -12.6382, -103.954, 0.91", "6.95899, -14.1456, -106.048, 0.46", "8.64358, -15.5388, -108.378, 0.68", "9.74361, -16.5111, -110.335, 0.46", "11.3681, -18.0147, -113.63, 0.68", "12.1988, -18.8323, -115.449, 0.68", "13.0207, -19.7542, -117.498, 0.68", "13.9147, -21.0174, -120.044, 0.68", "14.7528, -22.5901, -122.778, 0.68", "15.1277, -23.4228, -124.111, 0.68", "15.679, -24.7045, -125.968, 0.91", "16.464, -26.6944, -128.676, 0.68", "17.1753, -28.7983, -131.415, 0.68", "17.7745, -30.7804, -133.701, 0.46", "18.1974, -32.3466, -135.432, 0.46" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-6.26255, 6.18704, -58.4289, 0.68", "-6.89759, 6.58587, -59.3435, 0.68", "-7.68763, 7.05839, -60.5381, 0.46", "-8.11244, 7.28806, -61.2125, 0.46", "-9.08158, 7.81576, -62.7998, 0.46", "-10.1386, 8.36241, -64.505, 0.46", "-10.7298, 8.64976, -65.4699, 0.46", "-11.5956, 9.02237, -66.9933, 0.46", "-12.3561, 9.31375, -68.4609, 0.46", "-12.6719, 9.41962, -69.1146, 0.46", "-13.086, 9.5461, -70.0091, 0.68", "-13.8736, 9.76665, -71.7395, 0.68", "-14.5167, 9.92453, -73.1885, 0.46", "-15.2251, 10.0981, -74.9369, 0.46", "-15.9299, 10.2724, -76.7791, 0.46", "-16.2527, 10.3397, -77.6854, 0.46" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "18.1668, 11.5906, -34.5593, 0.68", "18.8831, 11.7878, -35.3979, 0.68", "20.0882, 12.3097, -36.8632, 0.68", "21.1581, 13.0015, -37.9527, 0.68", "21.7549, 13.4515, -38.4786, 0.68", "22.7482, 14.2132, -39.3529, 0.91", "23.6268, 14.887, -40.1262, 0.91", "24.5899, 15.7645, -40.9892, 0.91", "26.1514, 17.4293, -42.2898, 0.91", "27.4251, 18.8494, -43.2462, 0.68", "28.7756, 20.2824, -44.1544, 0.91" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "18.1668, 11.5906, -34.5593, 0.68", "18.6572, 12.0353, -36.1632, 0.68", "19.0863, 12.4956, -37.8283, 0.68", "19.5154, 13.0599, -40.132, 0.68", "19.8636, 13.5862, -42.3585, 0.68", "20.1733, 14.1147, -44.4654, 0.68", "20.3505, 14.4295, -45.7271, 0.68", "20.5492, 14.9898, -47.7739, 0.68", "20.6442, 15.4642, -49.8957, 0.68", "20.6508, 15.5972, -51.2247, 0.68", "20.63, 15.5391, -52.4492, 0.91", "20.5275, 15.1371, -54.9749, 0.91", "20.436, 14.8322, -56.3463, 0.68", "20.1503, 14.1549, -58.935, 0.68", "19.6548, 13.2398, -62.1286, 0.68", "19.0411, 12.2805, -65.1079, 0.68", "18.631, 11.6271, -66.9074, 0.68", "18.0293, 10.6611, -69.528, 0.68", "17.6148, 10.0072, -71.573, 0.68", "17.4521, 9.81783, -72.4694, 0.68", "17.2379, 9.64675, -73.9966, 0.68", "16.959, 9.46699, -76.4013, 0.68", "16.8224, 9.30077, -78.1025, 0.68", "16.7273, 9.01667, -80.207, 0.68", "16.7333, 8.62478, -82.606, 0.68", "16.7926, 8.02252, -85.7694, 0.68", "16.8344, 7.49337, -88.0628, 0.68", "16.8891, 6.85147, -90.3519, 0.68", "17.0521, 5.86787, -93.1526, 0.68", "17.3631, 4.93245, -95.386, 0.68", "17.6881, 4.24779, -96.7467, 0.68", "18.5423, 2.77294, -99.1722, 0.68", "19.0632, 1.91736, -100.358, 0.68", "19.6894, 0.869254, -101.575, 0.68", "20.5888, -0.570843, -103.046, 0.68", "21.4289, -1.83854, -104.217, 0.68", "22.5879, -3.32326, -105.524, 0.68", "23.6438, -4.50282, -106.522, 0.68", "24.5777, -5.45329, -107.287, 0.91", "25.9003, -6.66611, -108.264, 0.91", "27.0163, -7.55954, -109.053, 0.68", "28.6762, -8.6072, -110.123, 0.91", "29.6704, -9.11337, -110.69, 0.91", "31.1605, -9.78502, -111.492, 0.68", "32.7123, -10.5388, -112.399, 0.68", "34.1116, -11.4093, -113.381, 0.68", "35.0201, -12.1681, -114.246, 0.68", "35.7693, -13.0374, -115.258, 0.91", "36.6375, -14.3202, -116.763, 0.91", "37.4344, -15.6974, -118.405, 0.68", "38.124, -17.1197, -120.08, 0.68", "38.8975, -19.0824, -122.359, 0.68", "39.5467, -21.162, -124.823, 0.68", "40.0447, -23.0959, -127.21, 0.68" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "19.5417, 10.8022, 8.18343, 0.91", "19.8301, 8.98913, 9.1982, 0.91", "20.1242, 7.47602, 9.90502, 0.91", "20.6173, 5.24063, 10.8, 0.91", "21.1564, 3.01883, 11.6554, 0.68", "21.6771, 1.0385, 12.3495, 0.91", "22.2336, -1.0704, 13.0586, 0.91", "22.7575, -3.28826, 13.7246, 0.68", "23.0922, -4.96674, 14.1354, 0.68", "23.3419, -6.47935, 14.4539, 0.91", "23.7182, -9.31131, 14.9657, 0.91", "23.9038, -12.0076, 15.3637, 0.46", "23.9073, -13.5488, 15.5504, 0.46", "23.786, -15.6905, 15.7545, 0.46", "23.6701, -17.108, 15.8632, 0.46", "23.5233, -18.5051, 15.9693, 0.46", "23.2783, -20.5767, 16.0997, 0.91", "23.1708, -21.651, 16.1661, 0.46", "23.0585, -23.3458, 16.3954, 0.91", "22.9926, -25.6582, 16.898, 0.68", "22.9734, -27.294, 17.4536, 0.91", "22.9827, -29.2072, 18.3065, 0.68", "23.0201, -30.6849, 19.0544, 0.91", "23.0589, -32.6671, 20.1448, 0.68", "23.12, -34.2821, 21.0681, 0.91", "23.2554, -36.7522, 22.492, 0.68", "23.4062, -38.6032, 23.5638, 0.91", "23.5846, -40.304, 24.6075, 1.14", "23.7822, -41.8858, 25.5216, 0.68", "23.9308, -42.9795, 26.0881, 0.68", "24.1044, -44.0127, 26.5979, 0.68", "24.4053, -45.5364, 27.3262, 0.91", "24.7475, -47.08, 28.0693, 0.46", "25.1715, -48.6853, 28.7992, 0.46", "25.4829, -49.7048, 29.2417, 0.68", "26.2016, -51.9247, 30.1701, 0.46", "26.846, -53.7933, 30.9133, 0.46", "27.2304, -54.8056, 31.3253, 0.91", "28.1275, -57.0289, 32.1842, 0.46", "28.7516, -58.4658, 32.7364, 0.68", "29.331, -59.7717, 33.2368, 0.68" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "19.5417, 10.8022, 8.18343, 1.59", "21.0994, 11.4792, 7.49981, 1.59", "22.8455, 12.2379, 6.7335, 1.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-4.1593, 10.5928, -2.03375, 0.91", "-2.84743, 10.9449, -3.45263, 0.91", "-1.18215, 11.277, -5.11999, 0.91", "0.221538, 11.5225, -6.43378, 0.91", "1.68959, 11.7595, -7.73844, 0.91", "3.1609, 11.9971, -9.04599, 0.91", "4.40703, 12.1983, -10.1534, 0.91", "5.66785, 12.301, -11.2094, 0.91", "6.66373, 12.32, -11.9628, 0.91", "7.03789, 12.3182, -12.2167, 0.91" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.1593, 10.5928, -2.03375, 1.82", "-4.94745, 11.1124, -1.03384, 1.82", "-6.04356, 11.8349, 0.356775, 1.82" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.55886, -11.3281, 6.80019, 1.59", "-10.2299, -12.0864, 7.60695, 1.59", "-10.9005, -12.8442, 8.41323, 1.37", "-11.498, -13.5193, 9.13153, 1.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.55886, -11.3281, 6.80019, 0.91", "-11.1526, -11.362, 6.01514, 0.91", "-13.3348, -11.5227, 4.82284, 0.68", "-15.0229, -11.8034, 3.73014, 0.68", "-16.2229, -12.0869, 2.7578, 0.68", "-17.2492, -12.4093, 1.74822, 0.91", "-18.1417, -12.6896, 0.87028, 0.91", "-18.8737, -13.0336, -0.0109569, 0.91", "-19.7474, -13.7147, -1.59564, 0.68", "-20.277, -14.4194, -3.11782, 0.91", "-20.5055, -14.942, -4.21212, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "11.0356, 37.1071, 0.0, 1.14", "15.5167, 51.4221, 0.0, 1.14", "19.9977, 65.7372, 0.0, 1.14" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-19.4538, 0.0439171, -26.4441, 0.91", "-20.4793, 0.430512, -27.0584, 0.91", "-22.841, 0.93394, -28.3625, 0.68", "-24.3137, 1.10493, -29.1013, 0.68", "-25.3233, 1.17025, -29.5703, 0.68", "-27.3551, 1.22958, -30.4209, 0.68", "-28.5485, 1.25544, -30.8696, 0.68", "-30.7708, 1.14397, -31.5817, 0.68", "-31.8263, 0.999887, -31.8471, 0.68", "-32.4452, 0.90171, -31.9681, 0.46", "-33.8857, 0.655933, -32.2178, 0.91", "-35.2218, 0.352298, -32.4699, 0.91" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-19.4538, 0.0439171, -26.4441, 0.68", "-19.7281, -0.6706, -27.4086, 0.68", "-20.0872, -1.52083, -28.6491, 0.68", "-20.3447, -2.10515, -29.5256, 0.68", "-21.0, -3.29051, -31.2784, 0.68", "-21.69, -4.41628, -32.8834, 0.68", "-22.6655, -5.98903, -34.9105, 0.68", "-23.5104, -7.16059, -36.3357, 0.68", "-24.5671, -8.36028, -37.6141, 0.68", "-25.5344, -9.30828, -38.4772, 0.68", "-26.8361, -10.4326, -39.3206, 0.68", "-27.9386, -11.307, -39.9045, 0.68", "-28.9439, -12.0878, -40.4385, 0.68", "-30.3438, -13.1147, -41.0774, 0.91", "-31.1855, -13.7366, -41.5039, 0.91", "-31.8899, -14.3001, -41.9362, 0.68", "-33.0816, -15.3174, -42.7216, 0.46", "-34.0168, -16.1928, -43.4325, 0.46", "-35.3047, -17.5725, -44.4953, 0.46", "-36.6553, -19.1125, -45.6483, 0.46", "-38.0064, -20.779, -46.8018, 0.46", "-38.7726, -21.7663, -47.4686, 0.46", "-39.8847, -23.3021, -48.4039, 0.46", "-40.7854, -24.5654, -49.0683, 0.68", "-41.4665, -25.5071, -49.469, 0.23", "-42.3553, -26.6731, -49.8506, 0.23" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-22.8867, 10.2164, -30.2238, 1.37", "-23.182, 10.2338, -30.3384, 1.37", "-24.7579, 10.4769, -30.8536, 0.68", "-26.3154, 10.8243, -31.329, 0.68", "-27.7236, 11.1895, -31.712, 0.68", "-28.5586, 11.4452, -31.9031, 0.46", "-30.1698, 12.0005, -32.227, 0.68", "-31.5127, 12.5664, -32.4263, 0.46", "-32.7954, 13.2871, -32.5938, 0.91", "-33.8657, 14.0785, -32.787, 0.68", "-35.0527, 15.1393, -33.09, 0.68", "-35.8709, 15.9159, -33.3757, 0.68", "-37.15, 17.1841, -33.9333, 0.68", "-38.5296, 18.7405, -34.7304, 0.68", "-39.7391, 20.2724, -35.6257, 0.68", "-40.8516, 21.8311, -36.6392, 0.68", "-41.7893, 23.3351, -37.7481, 0.68", "-42.2869, 24.2312, -38.4546, 0.68", "-43.0278, 25.8126, -39.8147, 0.68", "-43.4838, 27.041, -40.9348, 0.68", "-43.7848, 28.1796, -42.0744, 0.68", "-44.1958, 30.2475, -44.2015, 0.68", "-44.3735, 31.5186, -45.5186, 0.68", "-44.5845, 33.3479, -47.4997, 0.68", "-44.736, 34.9237, -49.2784, 0.68", "-44.8259, 36.9724, -51.6701, 0.68" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-22.8867, 10.2164, -30.2238, 0.68", "-23.5136, 10.1744, -31.3601, 0.68", "-24.3375, 10.2002, -32.6684, 0.68", "-24.8601, 10.2167, -33.4983, 0.68", "-25.5005, 10.2368, -34.5152, 0.68", "-26.3582, 10.2637, -35.8773, 0.68", "-26.878, 10.28, -36.7026, 0.68", "-27.4027, 10.3262, -37.4738, 0.68" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "28.7756, 20.2824, -44.1544, 0.68", "29.8784, 20.7354, -44.2456, 0.68", "31.4164, 21.4331, -44.4799, 0.68", "32.8962, 22.0877, -44.8441, 0.91", "34.2196, 22.7045, -45.2241, 0.68", "36.1424, 23.6439, -45.9291, 0.68", "37.3264, 24.2369, -46.4661, 0.68", "38.3124, 24.7646, -47.0605, 0.46", "40.1621, 25.7837, -48.2444, 0.46", "41.0471, 26.2794, -48.8803, 0.46", "42.4786, 27.0427, -49.9924, 0.91", "43.857, 27.7021, -51.0942, 0.68", "45.3893, 28.3915, -52.3734, 0.68", "47.1202, 29.22, -53.8016, 0.68" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "28.7756, 20.2824, -44.1544, 0.68", "28.7432, 20.3551, -45.7389, 0.68", "28.71, 20.4296, -47.3654, 0.68", "28.6731, 20.5122, -49.1659, 0.68", "28.6535, 20.5561, -50.1231, 0.68" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "29.331, -59.7717, 33.2368, 0.46", "28.8502, -61.657, 32.889, 0.46", "28.4987, -63.2012, 32.8613, 0.46", "27.8962, -66.0656, 33.3264, 0.23", "27.643, -67.2012, 33.6506, 0.46", "27.4121, -68.2855, 34.0554, 0.68", "27.1988, -69.3049, 34.5359, 0.23", "26.7039, -71.6215, 35.9429, 0.23", "26.3508, -73.4741, 37.3282, 0.23", "26.1302, -74.7869, 38.5344, 0.46", "25.9516, -75.8256, 39.5868, 0.23", "25.7075, -77.0754, 40.95, 0.23" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "29.331, -59.7717, 33.2368, 0.68", "28.2156, -59.9661, 33.2201, 0.68", "26.8306, -60.2074, 33.1993, 0.46", "24.9267, -60.5392, 33.1708, 0.23" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "22.8455, 12.2379, 6.7335, 0.91", "23.4131, 12.0038, 7.61624, 0.91", "24.807, 11.4288, 9.78417, 0.91", "26.1136, 10.8898, 11.8162, 0.91", "27.1966, 10.443, 13.5007, 0.91" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "22.8455, 12.2379, 6.7335, 0.91", "25.2972, 11.7316, 5.3731, 0.91", "27.8809, 11.1524, 4.17815, 0.91", "29.1681, 10.9252, 3.68452, 0.91", "30.5486, 10.7404, 3.22462, 0.91", "32.6734, 10.5949, 2.60178, 0.91", "34.806, 10.5784, 1.9663, 0.91", "35.8597, 10.6658, 1.70192, 0.68", "37.8507, 10.9976, 1.21624, 0.68", "38.8842, 11.2669, 0.984979, 0.68", "40.5957, 11.8515, 0.657081, 0.91", "42.596, 12.6305, 0.406701, 0.91", "44.6627, 13.3534, 0.229731, 1.14", "45.4716, 13.5343, 0.219857, 1.14", "47.8338, 13.6163, 0.367818, 0.68", "49.9689, 13.4047, 0.628599, 0.68", "51.4207, 13.1191, 0.90883, 0.68", "53.6459, 12.5812, 1.42348, 0.91", "55.6393, 12.0631, 1.82983, 0.91", "57.3348, 11.6384, 2.07014, 0.91", "59.8643, 10.9897, 2.20932, 0.91", "62.1271, 10.4521, 2.13116, 0.91", "63.4137, 10.2153, 2.03593, 0.91", "65.3929, 9.93746, 1.86548, 0.91", "67.4359, 9.67378, 1.60153, 0.68", "70.1522, 9.29529, 1.04507, 0.68", "72.0838, 9.05241, 0.436826, 0.68", "74.1888, 8.88739, -0.417658, 0.68", "75.7332, 8.82263, -1.10917, 0.46", "77.8497, 8.77612, -2.07923, 0.68", "79.9096, 8.77783, -3.03287, 0.68", "82.7341, 8.7937, -4.22171, 0.68", "84.3614, 8.76795, -4.8608, 0.46", "86.7655, 8.63352, -5.7286, 0.91", "88.6304, 8.47696, -6.28325, 0.46", "90.4769, 8.28415, -6.62283, 0.91", "93.5972, 7.85977, -6.92673, 0.46", "95.4467, 7.54611, -7.00594, 0.46", "97.0334, 7.32102, -7.03135, 0.46", "99.2867, 7.1088, -7.02158, 0.46", "101.801, 6.97692, -6.9927, 0.46", "103.978, 6.92107, -6.88209, 0.68", "106.656, 6.90226, -6.67125, 0.46", "108.9, 6.89888, -6.45272, 0.46", "110.443, 6.8746, -6.31216, 0.46", "112.557, 6.82485, -6.14964, 0.46", "113.921, 6.775, -6.10004, 0.23", "114.91, 6.72194, -6.04713, 0.23", "116.766, 6.58312, -5.91932, 0.46", "118.994, 6.39574, -5.83292, 0.46", "120.716, 6.32274, -5.87678, 0.91", "122.054, 6.29777, -6.02693, 0.46", "123.942, 6.2811, -6.24137, 0.46", "125.29, 6.28558, -6.35599, 0.46", "128.117, 6.313, -6.63635, 0.68", "130.538, 6.40418, -6.93312, 0.46", "132.264, 6.4446, -7.19185, 0.46", "135.118, 6.50241, -7.72497, 0.46", "136.656, 6.572, -8.1096, 0.68" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "7.03789, 12.3182, -12.2167, 0.91", "9.01162, 12.2748, -13.8553, 0.91", "10.3301, 12.3023, -15.1478, 0.91", "11.1536, 12.3856, -16.1024, 0.91", "12.8095, 12.6919, -18.2134, 0.91", "14.0718, 13.0575, -19.8864, 0.91", "15.5769, 13.6339, -21.8123, 0.91", "16.6992, 14.2149, -23.4178, 0.91", "17.8927, 14.9942, -25.3001, 0.91", "18.4716, 15.4632, -26.3296, 0.91", "19.1504, 16.2076, -27.6664, 0.91", "19.9856, 17.3694, -29.2359, 1.37" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "7.03789, 12.3182, -12.2167, 0.46", "6.94573, 14.2764, -14.0643, 0.46", "6.88632, 15.5389, -15.2555, 0.46", "6.83684, 16.5902, -16.2475, 0.46", "6.81542, 17.0455, -16.677, 0.46" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-6.04356, 11.8349, 0.356775, 1.14", "-7.29579, 12.0489, -0.0248591, 1.14", "-10.0499, 12.5194, -0.864197, 1.14", "-13.3376, 13.081, -1.86618, 0.91", "-16.3429, 13.5945, -2.78208, 0.91", "-18.2867, 13.9265, -3.37448, 0.91", "-19.7929, 14.1838, -3.83349, 0.91" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-6.04356, 11.8349, 0.356775, 1.37", "-5.59848, 13.1415, -0.149861, 1.37", "-5.12226, 14.3118, -0.817142, 1.37", "-4.67766, 15.2634, -1.45964, 1.37", "-3.94201, 16.6798, -2.49177, 1.14", "-3.06379, 18.2355, -3.64225, 1.37", "-2.52774, 19.094, -4.24734, 1.59", "-1.67997, 20.2449, -5.07265, 0.91", "-0.684075, 21.5172, -6.06053, 0.91", "0.238072, 22.589, -6.90002, 0.91", "1.36645, 23.7961, -7.7528, 0.91", "2.51099, 24.9497, -8.37479, 0.91", "3.85687, 26.2335, -8.91399, 0.91" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-11.498, -13.5193, 9.13153, 1.59", "-11.9054, -14.2865, 11.0907, 1.59" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-11.498, -13.5193, 9.13153, 1.14", "-12.3271, -13.9643, 8.81897, 1.14", "-13.8653, -14.7898, 8.2391, 0.91", "-15.7427, -15.7973, 7.53139, 0.91", "-17.0488, -16.4982, 7.03901, 1.14", "-18.0914, -17.0577, 6.64598, 1.14" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-20.5055, -14.942, -4.21212, 0.68", "-20.1298, -14.8242, -6.51161, 0.68", "-19.7352, -14.8403, -8.71155, 0.68", "-19.5311, -14.915, -10.0313, 0.68", "-19.4017, -15.0804, -11.6739, 0.68", "-19.3464, -15.3748, -13.3007, 0.46", "-19.3445, -15.8628, -15.0342, 0.46", "-19.4134, -16.3794, -16.0121, 0.68", "-19.6774, -17.6051, -17.5026, 0.68", "-20.0513, -19.0355, -18.7885, 0.68", "-20.4624, -20.4053, -19.8191, 0.68", "-20.9873, -21.7925, -20.876, 0.91", "-21.6046, -23.0445, -21.9783, 0.91", "-22.4851, -24.4278, -23.3786, 0.91", "-23.243, -25.3922, -24.459, 0.68", "-23.8648, -26.0332, -25.3327, 0.91", "-25.2925, -27.2472, -27.3804, 0.91", "-26.9794, -28.441, -29.9125, 0.68", "-27.8296, -28.9198, -31.2526, 0.91", "-29.088, -29.4885, -33.3262, 0.68", "-30.1522, -29.9389, -35.2174, 0.91", "-30.6565, -30.1655, -36.0902, 0.91", "-31.1725, -30.4253, -36.9247, 0.91", "-31.7881, -30.721, -37.7946, 0.91", "-32.6291, -31.1176, -38.8303, 0.68", "-34.3284, -31.9536, -40.5538, 0.68", "-35.6244, -32.5637, -41.7173, 0.68", "-36.9926, -33.2126, -42.8963, 0.46", "-38.4903, -33.9746, -44.1375, 0.91", "-39.9586, -34.7423, -45.3566, 0.46", "-41.6644, -35.6364, -46.809, 0.68", "-43.9198, -36.9168, -48.7624, 0.46", "-44.8439, -37.5086, -49.6928, 0.68", "-46.0314, -38.3889, -51.0454, 0.46", "-46.7639, -39.0747, -52.0091, 0.46", "-47.5893, -40.0281, -53.2774, 0.46", "-48.519, -41.4084, -54.9722, 0.68", "-49.5636, -43.3732, -57.197, 0.68", "-50.0637, -44.5351, -58.4597, 0.23", "-50.4504, -45.7293, -59.7358, 0.46", "-50.7034, -46.7022, -60.6989, 0.46", "-51.0275, -48.1936, -62.0984, 0.46", "-51.2395, -49.3013, -63.0927, 0.46", "-51.4522, -50.5312, -64.1251, 0.68", "-51.6857, -51.772, -65.2513, 0.23", "-51.9394, -52.8774, -66.2937, 0.46", "-52.2335, -54.0069, -67.3355, 0.23", "-52.4401, -54.6681, -67.9339, 0.68", "-53.078, -56.2386, -69.3668, 0.46", "-53.7807, -57.696, -70.7648, 0.46", "-54.2681, -58.604, -71.6554, 0.46", "-54.7161, -59.3961, -72.4951, 0.46", "-55.206, -60.2023, -73.3711, 0.46", "-56.0212, -61.5123, -74.7587, 0.91" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-20.5055, -14.942, -4.21212, 0.46", "-21.7563, -15.5532, -4.79003, 0.46", "-22.8053, -16.0444, -5.32124, 0.46", "-23.6596, -16.448, -5.78853, 0.46", "-24.7079, -16.991, -6.37837, 0.23", "-25.9146, -17.6648, -7.05561, 0.23", "-26.9698, -18.3099, -7.66112, 0.23", "-27.7415, -18.8142, -8.11007, 0.46", "-28.4805, -19.3201, -8.55154, 0.46", "-29.4734, -20.0289, -9.20201, 0.23", "-30.0155, -20.4364, -9.58721, 0.46", "-30.8509, -21.2018, -10.2092, 0.46" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-35.2218, 0.352298, -32.4699, 0.46", "-37.5708, 0.126026, -33.0601, 0.46", "-39.4342, -0.144215, -33.589, 0.46", "-41.2205, -0.368094, -34.0822, 0.68", "-44.2888, -0.620147, -34.8852, 0.91", "-46.7861, -0.743496, -35.5814, 0.46", "-49.2162, -0.828058, -36.2882, 0.46", "-52.5698, -1.00782, -37.3522, 0.68", "-54.3544, -1.14244, -37.9225, 0.46", "-57.0291, -1.31989, -38.7398, 0.68", "-59.8962, -1.51904, -39.5002, 0.68", "-62.1005, -1.63579, -39.9449, 0.68", "-64.9392, -1.77337, -40.3549, 0.46", "-66.7916, -1.87264, -40.5634, 0.68", "-68.7324, -1.9876, -40.7211, 0.68", "-71.0747, -2.09721, -40.7979, 0.46", "-73.7887, -2.13444, -40.7327, 0.46", "-76.0716, -2.06019, -40.578, 0.68", "-77.3096, -1.95373, -40.5031, 0.68", "-78.9962, -1.75152, -40.4837, 0.46", "-80.54, -1.48825, -40.5796, 0.46", "-81.1256, -1.33417, -40.691, 0.46", "-83.2662, -0.636663, -41.4021, 0.46", "-84.9121, -0.0156263, -42.0711, 0.68", "-87.3128, 0.986655, -43.1451, 0.46", "-89.0346, 1.75322, -44.0448, 0.91", "-91.4069, 2.8404, -45.3836, 0.46", "-92.6978, 3.45075, -46.1921, 0.46", "-93.8021, 3.98017, -46.9842, 0.68", "-95.5777, 4.77555, -48.2443, 0.23", "-97.7909, 5.71474, -49.8673, 0.23", "-99.5133, 6.33497, -51.1186, 0.68", "-101.491, 6.95882, -52.4598, 0.46", "-103.621, 7.53233, -53.7787, 0.46", "-105.208, 7.88812, -54.6995, 0.46", "-106.38, 8.08061, -55.3288, 0.46", "-109.045, 8.47392, -56.5756, 0.46", "-111.029, 8.70374, -57.3958, 0.46", "-112.816, 8.82157, -57.953, 0.68", "-113.759, 8.84227, -58.1766, 0.23", "-115.619, 8.78981, -58.6162, 0.68" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-35.2218, 0.352298, -32.4699, 0.46", "-37.0241, 1.39901, -32.6741, 0.46", "-39.0462, 2.64055, -33.1718, 0.46", "-40.8755, 3.88512, -33.9229, 0.46", "-42.0331, 4.65966, -34.4792, 0.68", "-43.555, 5.6403, -35.3035, 0.23", "-44.7489, 6.42017, -36.0772, 0.68", "-46.1661, 7.38683, -37.2532, 0.46", "-47.4156, 8.20635, -38.6042, 0.46", "-48.4619, 8.88353, -40.1741, 0.68", "-49.682, 9.55312, -42.3768, 0.46", "-50.8077, 9.9888, -44.6747, 0.46", "-51.3065, 10.1113, -45.7266, 0.91", "-52.8465, 10.4121, -49.1095, 0.91", "-54.5776, 10.7334, -52.8388, 0.91", "-55.2555, 10.8394, -54.4522, 0.91", "-56.602, 10.9505, -57.8022, 0.91", "-57.7643, 10.9672, -60.5584, 0.91", "-58.7419, 10.9667, -62.8007, 0.91", "-59.9094, 11.118, -65.1121, 0.91" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-27.4027, 10.3262, -37.4738, 0.46", "-29.3286, 11.82, -38.5954, 0.46", "-30.526, 13.1632, -40.0983, 0.91", "-31.9648, 14.85, -41.6835, 0.46", "-32.9731, 16.0322, -42.7944, 0.46", "-34.308, 17.5972, -44.2651, 0.46", "-35.6954, 19.2238, -45.7936, 0.46", "-37.447, 21.583, -48.7183, 0.46", "-38.8086, 24.3086, -52.5643, 0.46" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-27.4027, 10.3262, -37.4738, 0.46", "-29.015, 7.82109, -36.1594, 0.46", "-29.8477, 6.52741, -35.4806, 0.46", "-31.455, 4.03001, -34.1703, 0.46", "-33.5559, 0.765684, -32.4575, 0.46" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "47.1202, 29.22, -53.8016, 0.46", "48.2897, 29.9215, -54.1653, 0.46", "48.9376, 30.3077, -54.3605, 0.46", "50.1015, 30.9881, -54.7648, 0.68", "51.7752, 31.8969, -55.3768, 0.46", "53.5941, 32.8253, -56.0845, 0.68", "55.4938, 33.7855, -56.8299, 0.46", "56.5026, 34.2639, -57.2554, 0.68", "58.0708, 34.9828, -57.9299, 0.46", "59.7321, 35.7098, -58.6144, 0.68", "61.5162, 36.4367, -59.259, 0.46", "62.5849, 36.835, -59.6062, 0.46", "64.6388, 37.5634, -60.1971, 0.46", "65.5252, 37.8786, -60.407, 0.46", "66.64, 38.2516, -60.5972, 0.68", "68.2598, 38.7506, -60.8527, 0.46", "69.8503, 39.1597, -61.0724, 0.91", "71.1844, 39.4685, -61.2531, 0.46", "72.6391, 39.786, -61.4343, 0.46", "74.0478, 40.0673, -61.6385, 0.23", "75.7864, 40.3645, -61.9221, 0.23", "77.4237, 40.5755, -62.192, 0.68" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "47.1202, 29.22, -53.8016, 0.68", "48.4689, 29.0479, -53.6089, 0.68", "49.212, 28.9643, -53.4927, 0.68", "50.3716, 28.8366, -53.2956, 0.68", "52.2787, 28.68, -52.9532, 0.46", "52.7689, 28.6396, -52.8768, 0.46", "53.9404, 28.5645, -52.71, 0.68", "55.1184, 28.5247, -52.5659, 0.46", "56.1627, 28.4881, -52.5038, 0.91", "58.0079, 28.3784, -52.562, 0.23", "59.5611, 28.2549, -52.7506, 0.23", "60.4915, 28.1778, -52.945, 0.23", "61.5318, 28.0931, -53.2578, 0.68", "63.018, 27.9613, -53.7824, 0.46", "64.2682, 27.8357, -54.2366, 0.46", "65.0918, 27.7293, -54.5248, 0.68", "67.1844, 27.4145, -55.1455, 0.23", "68.6056, 27.1909, -55.384, 0.68", "69.9546, 26.9643, -55.3902, 0.46", "71.2581, 26.7685, -55.1641, 0.46", "72.3118, 26.618, -54.8196, 0.23", "73.3464, 26.4558, -54.4101, 0.46", "75.8013, 26.0134, -53.3278, 0.46", "77.4405, 25.7067, -52.5954, 0.23", "79.0458, 25.4246, -51.9779, 0.23", "80.2916, 25.2224, -51.6198, 0.91", "82.3498, 24.9296, -51.2233, 0.46", "83.8774, 24.7576, -51.0536, 0.23", "84.3162, 24.7109, -51.0378, 0.68", "86.9247, 24.4864, -50.9927, 0.23", "88.8696, 24.3097, -51.0231, 0.46", "91.1223, 24.1106, -51.1226, 0.23", "93.3117, 23.916, -51.2422, 0.23", "94.9618, 23.7089, -51.3767, 0.23", "95.829, 23.5551, -51.4779, 0.46", "97.4846, 23.0908, -51.7791, 0.23", "99.196, 22.5031, -52.1619, 0.46", "100.378, 21.9848, -52.5199, 0.23", "102.126, 21.0154, -53.2025, 0.23", "102.606, 20.7109, -53.4223, 0.46", "104.025, 19.6702, -54.1203, 0.46" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "27.1966, 10.443, 13.5007, 0.46", "26.4004, 11.2101, 14.2213, 0.46", "25.1302, 12.4306, 15.484, 0.46", "24.5174, 12.9248, 16.1946, 0.46", "23.5546, 13.4553, 17.4022, 0.46", "22.8447, 13.4885, 18.3495, 0.46", "22.3301, 13.2112, 19.1186, 0.46", "21.9981, 12.7982, 19.7408, 0.46", "21.4649, 11.786, 20.8568, 0.46", "21.0453, 10.8873, 21.6643, 0.46", "20.4365, 9.45482, 22.8759, 0.46", "19.8227, 7.92205, 24.1101, 0.46", "19.3091, 6.70184, 25.0423, 0.46", "18.5032, 4.89071, 26.4188, 0.46", "17.9894, 3.64146, 27.3076, 0.46" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "27.1966, 10.443, 13.5007, 0.68", "27.2411, 11.1657, 13.8889, 0.68", "27.2849, 12.357, 14.1279, 0.68", "27.3762, 13.8515, 14.499, 0.68", "27.5505, 14.8129, 14.9878, 0.68", "27.928, 15.9265, 15.9832, 0.91", "28.5652, 17.2596, 17.3864, 0.68", "29.1606, 18.5028, 18.778, 0.68", "29.8273, 19.6859, 20.3289, 0.68", "31.1346, 21.367, 23.026, 0.68", "32.1004, 22.1686, 24.9196, 0.68", "33.0314, 22.637, 26.6843, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "136.656, 6.572, -8.1096, 0.46", "136.679, 5.67678, -6.86858, 0.46", "136.698, 4.5127, -5.26664, 0.46", "136.776, 3.68193, -4.15111, 0.23", "136.883, 2.54693, -2.62708, 0.23", "136.962, 1.71254, -1.50669, 0.23", "137.017, 1.12774, -0.721438, 0.23", "137.144, 0.317664, 0.349762, 0.23", "137.323, -0.935482, 1.97836, 0.46" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "136.656, 6.572, -8.1096, 0.46", "139.064, 7.45553, -8.7399, 0.46", "139.765, 7.71258, -8.92328, 0.46", "141.358, 8.29712, -9.3403, 0.68", "142.953, 8.88237, -9.75782, 0.46", "145.214, 9.71185, -10.3496, 0.46" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "19.9856, 17.3694, -29.2359, 0.46", "21.3517, 17.7599, -30.2872, 0.46", "22.9291, 18.3276, -31.531, 0.68", "24.6356, 19.0555, -33.0699, 0.68", "25.7461, 19.5823, -34.1947, 0.68", "27.441, 20.4947, -36.1296, 0.91", "28.6637, 21.2747, -37.7409, 0.68", "29.7295, 22.1825, -39.5322, 0.46", "30.5791, 23.2351, -41.4351, 0.68", "31.2321, 24.4597, -43.5443, 1.14", "31.6156, 25.6621, -45.5465, 0.91", "31.8069, 26.9317, -47.6085, 0.68", "31.8634, 27.7804, -48.9528, 0.68", "31.9211, 28.881, -50.6344, 0.91", "32.0435, 30.0513, -52.3865, 0.91", "32.1659, 30.9386, -53.6973, 0.68", "32.3681, 31.9831, -55.3298, 0.68", "32.639, 32.9058, -57.0242, 0.68", "32.8434, 33.367, -58.1249, 0.68", "33.2429, 34.0783, -60.3196, 0.68", "33.4536, 34.4482, -61.6433, 0.68", "33.6873, 34.7974, -63.1827, 0.68", "33.9389, 35.1924, -65.3074, 0.68", "34.1256, 35.6833, -68.0474, 0.68", "34.1672, 36.0909, -70.0818, 0.68", "34.1591, 36.7985, -73.3493, 0.68", "34.168, 37.3502, -75.813, 0.68", "34.2059, 37.988, -78.6929, 0.68", "34.2592, 38.5899, -81.6786, 0.68", "34.3299, 39.0032, -84.4379, 0.68", "34.4716, 39.2075, -87.1431, 0.68", "34.6693, 39.366, -90.55, 0.68", "34.9497, 39.4739, -94.2154, 0.68", "35.4071, 39.4659, -97.9968, 0.68", "36.0359, 39.2316, -101.571, 0.68", "36.5328, 38.8911, -103.878, 0.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "19.9856, 17.3694, -29.2359, 0.68", "20.9308, 16.4817, -32.2604, 0.68", "21.8688, 15.9116, -34.8639, 0.68", "22.7967, 15.5314, -37.0085, 0.68", "23.8486, 15.1909, -39.1793, 0.68", "25.042, 14.9782, -41.3246, 0.46", "26.007, 14.8959, -42.8873, 0.46", "27.4834, 14.9286, -44.8343, 0.46", "28.3263, 15.025, -45.8809, 0.68", "28.8911, 15.1716, -46.6367, 0.68", "30.2949, 15.731, -48.7878, 0.46", "31.3373, 16.2023, -50.5415, 0.68", "32.7893, 16.8169, -53.3552, 0.68", "33.4894, 17.1164, -55.1806, 0.68", "34.0797, 17.4555, -57.5326, 0.68", "34.3501, 17.7044, -59.2691, 0.68", "34.5357, 18.0174, -61.6668, 0.68", "34.6711, 18.3851, -64.9286, 0.68", "34.7855, 18.6431, -68.43, 0.68", "34.9304, 18.6693, -71.0086, 0.68", "35.0425, 18.6286, -72.0536, 0.68", "35.2692, 18.512, -73.5231, 0.68", "35.836, 18.2345, -76.6126, 0.68", "36.8775, 17.7937, -80.7188, 0.68", "38.0928, 17.2464, -84.6117, 0.68", "39.2161, 16.6525, -87.9754, 0.68", "40.3823, 15.9491, -91.5088, 0.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-19.7929, 14.1838, -3.83349, 0.68", "-20.5037, 13.5286, -4.47942, 0.68", "-21.5382, 12.8371, -5.18751, 0.68", "-23.087, 12.0104, -6.04364, 0.68", "-24.1901, 11.4215, -6.65347, 0.68", "-25.6395, 10.6478, -7.45465, 0.68", "-26.6229, 10.1229, -7.99825, 0.68", "-27.9273, 9.41584, -8.76582, 0.91", "-28.5158, 9.15829, -9.0585, 0.91" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-19.7929, 14.1838, -3.83349, 0.91", "-19.5805, 15.1077, -5.08034, 0.91", "-19.3492, 16.7683, -7.09811, 0.68", "-19.2497, 18.2607, -8.69456, 0.68", "-19.1967, 19.9395, -10.4057, 0.68", "-19.1796, 21.0376, -11.5089, 0.68", "-19.2143, 21.9256, -12.3975, 0.68", "-19.3814, 23.6529, -14.1343, 0.91", "-19.7144, 25.469, -15.8533, 0.91", "-19.9504, 26.3779, -16.6612, 0.91", "-20.6573, 28.4944, -18.4801, 0.91", "-21.5156, 30.827, -20.5338, 0.68", "-22.051, 32.2367, -21.8469, 0.68", "-22.4831, 33.4269, -23.0285, 0.91", "-22.8812, 34.6754, -24.3339, 0.68", "-23.1956, 36.0327, -25.861, 0.91", "-23.3578, 37.5141, -27.8097, 0.91", "-23.3505, 38.5843, -29.4489, 0.91", "-23.2779, 40.0237, -31.9154, 0.68", "-23.1866, 41.298, -34.3361, 0.68", "-23.1645, 42.451, -36.7212, 0.91", "-23.285, 43.914, -40.1973, 0.91", "-23.5781, 45.1005, -43.3552, 0.91", "-23.7936, 45.6573, -44.8972, 0.68", "-24.2842, 46.5569, -47.465, 0.68", "-24.828, 47.317, -49.8353, 0.68", "-25.566, 48.1926, -52.6974, 0.68", "-26.4352, 49.0587, -55.7543, 0.68", "-26.8929, 49.4391, -57.2989, 0.91", "-28.3079, 50.3418, -61.2481, 0.91", "-29.8641, 51.0708, -64.8263, 0.91", "-31.7204, 51.6792, -68.4893, 0.91", "-33.237, 51.9176, -71.0606, 0.91", "-34.7544, 51.8922, -73.2389, 0.91", "-37.1924, 51.4475, -76.3768, 0.68", "-39.0773, 50.8113, -78.4347, 0.68", "-41.0817, 49.8581, -80.3212, 0.68", "-43.2335, 48.5637, -82.157, 0.68", "-45.1617, 47.2306, -83.7966, 0.68", "-47.2278, 45.6159, -85.561, 0.68", "-49.8991, 43.1735, -87.9882, 0.68", "-51.7854, 41.3701, -89.5495, 0.23", "-53.4668, 39.7988, -90.7766, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "3.85687, 26.2335, -8.91399, 0.68", "3.98623, 25.6324, -7.01551, 0.68", "4.20777, 25.1529, -5.47625, 0.68", "4.67551, 24.4781, -3.00345, 0.68", "4.97674, 24.0863, -1.39792, 0.68", "5.28391, 23.69, 0.307331, 0.68", "5.42692, 23.5185, 1.04671, 0.68", "5.68876, 23.1724, 2.24518, 0.68", "6.02443, 22.8152, 3.43413, 0.68", "6.37876, 22.549, 4.409, 0.68", "6.93929, 22.1889, 6.04013, 0.68", "7.45197, 21.8197, 7.90836, 0.68", "7.96719, 21.3796, 10.04, 0.68", "8.22233, 21.1113, 11.1892, 0.68", "8.49327, 20.8398, 12.2457, 0.68", "8.98752, 20.4549, 13.8918, 0.68", "9.53927, 20.1544, 15.8553, 0.68" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "3.85687, 26.2335, -8.91399, 0.68", "5.48581, 26.4019, -9.36061, 0.68", "6.50082, 26.5068, -9.6389, 0.68", "7.86225, 26.6476, -10.0122, 0.68", "8.62384, 26.7263, -10.221, 0.68" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-11.9054, -14.2865, 11.0907, 0.68", "-12.4529, -13.4237, 11.9222, 0.68", "-13.6787, -11.257, 13.7698, 0.68", "-14.4137, -9.80724, 14.9991, 0.68", "-14.9385, -8.5766, 16.0345, 0.68", "-15.3965, -7.35736, 17.0614, 0.68", "-16.0423, -5.82013, 18.3787, 0.68", "-16.4319, -5.05706, 19.0164, 0.46", "-16.87, -4.20047, 19.7129, 0.46", "-17.2936, -3.27847, 20.5374, 0.46", "-17.6589, -2.53249, 21.364, 0.46", "-18.3798, -1.20445, 22.9386, 0.46", "-18.8703, -0.249049, 24.1733, 0.46", "-19.3379, 1.0149, 25.7178, 0.46", "-19.274, 2.81434, 27.1545, 0.46", "-17.9212, 4.70623, 27.7748, 0.46", "-14.6996, 7.98944, 28.2341, 0.46", "-13.5944, 9.07712, 28.3674, 0.46", "-12.4076, 10.2939, 28.5148, 0.46", "-10.8164, 12.1397, 28.748, 0.46", "-9.12609, 14.4418, 29.0914, 0.46", "-7.70357, 16.6623, 29.5314, 0.46", "-6.88353, 18.0886, 29.9156, 0.46", "-5.93282, 19.7366, 30.3197, 0.68", "-4.85206, 21.5196, 30.5558, 0.68", "-3.69821, 23.5129, 30.7846, 0.68", "-2.75966, 25.2479, 30.9116, 0.68", "-1.78276, 26.9549, 30.9321, 0.68", "-0.0667953, 29.4953, 30.6734, 0.23", "2.49037, 32.6896, 29.9321, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-11.9054, -14.2865, 11.0907, 1.14", "-9.76619, -15.596, 11.9926, 1.14", "-8.15863, -16.58, 12.6704, 0.91", "-6.41643, -17.6465, 13.4049, 1.14", "-4.69276, -18.7016, 14.1316, 0.68", "-2.7207, -19.9088, 14.963, 0.68", "-1.11189, -20.8936, 15.6413, 1.14" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-18.0914, -17.0577, 6.64598, 0.68", "-19.2058, -19.1107, 7.64699, 0.68", "-20.6991, -21.2279, 8.79306, 0.68", "-21.9835, -22.706, 9.74204, 0.68", "-23.1743, -23.8788, 10.6087, 0.91", "-24.6024, -25.2516, 11.6585, 0.68", "-26.0887, -26.7307, 12.8277, 0.68", "-27.7657, -28.3424, 14.0483, 0.68", "-28.9836, -29.5784, 14.9048, 0.91", "-29.9215, -30.6143, 15.5611, 0.68", "-30.9335, -31.7924, 16.2365, 0.68", "-32.0486, -33.2706, 16.9008, 0.68", "-33.6698, -35.8171, 17.7538, 0.68", "-34.9795, -38.3026, 18.3616, 0.68", "-35.8856, -40.2118, 18.7985, 0.68", "-37.122, -42.8942, 19.4796, 0.68", "-38.3669, -45.6556, 20.263, 0.68", "-39.3612, -47.9978, 20.9686, 0.68", "-40.1087, -49.9353, 21.5667, 0.68", "-40.8617, -52.0961, 22.1323, 0.68", "-41.4804, -54.0574, 22.5438, 0.91", "-41.948, -55.6243, 22.7892, 0.91", "-42.5783, -57.4432, 22.9996, 0.91", "-43.48, -59.5066, 23.1093, 0.91", "-44.6187, -61.7889, 23.119, 0.91", "-45.6885, -63.9171, 22.9723, 0.68", "-46.8455, -66.167, 22.7237, 0.68", "-47.5364, -67.3972, 22.6015, 0.68", "-48.4769, -69.0173, 22.53, 0.91", "-49.4389, -70.6396, 22.6883, 0.68" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-18.0914, -17.0577, 6.64598, 0.91", "-19.2819, -16.9165, 6.37051, 0.91", "-20.5208, -16.6811, 6.24893, 0.91", "-21.9754, -16.3052, 6.1576, 0.68", "-23.5022, -15.823, 6.02249, 0.91", "-25.4135, -15.1812, 5.7668, 0.68", "-27.3834, -14.501, 5.4135, 0.91", "-28.8243, -13.946, 5.1425, 1.14", "-30.2385, -13.3928, 4.81827, 0.91", "-31.5468, -12.9206, 4.4254, 1.14", "-33.2382, -12.3659, 3.79657, 0.91", "-34.343, -12.0424, 3.34374, 0.91", "-35.8948, -11.6422, 2.68663, 0.91", "-37.5329, -11.2554, 2.05823, 0.68", "-39.0931, -10.8927, 1.52186, 0.91", "-41.6322, -10.2631, 0.747298, 0.91", "-43.1423, -9.83407, 0.362971, 0.91", "-44.5882, -9.38804, 0.0583256, 0.68", "-46.375, -8.77999, -0.240268, 0.68", "-48.3786, -8.03735, -0.459987, 0.68", "-49.456, -7.61044, -0.56091, 0.68", "-50.7778, -7.042, -0.735481, 0.91", "-51.9741, -6.44904, -0.977649, 0.68", "-53.4612, -5.57173, -1.33306, 0.91", "-54.2703, -5.02087, -1.54774, 0.68", "-55.4188, -4.20144, -1.90531, 1.14", "-56.7758, -3.18947, -2.49944, 0.91", "-57.4388, -2.69175, -2.90942, 0.46", "-58.2597, -2.10092, -3.57136, 0.91", "-59.2767, -1.43041, -4.59836, 0.91", "-60.0419, -0.980414, -5.48957, 0.91", "-60.8816, -0.572422, -6.5548, 1.14", "-61.884, -0.179862, -7.82517, 0.91", "-62.8934, 0.174488, -9.06047, 0.91", "-63.9797, 0.555537, -10.305, 0.91", "-65.1659, 1.02687, -11.5597, 0.91", "-66.4738, 1.66374, -12.8035, 0.91", "-67.8426, 2.48404, -14.0238, 0.91", "-68.6172, 3.04125, -14.7152, 0.91", "-69.7114, 3.90426, -15.7319, 1.14", "-71.033, 5.03567, -17.1283, 0.91", "-71.8676, 5.88085, -18.2236, 0.91", "-72.5557, 6.81176, -19.5383, 0.68", "-73.118, 7.87052, -21.2539, 0.91", "-73.447, 8.65198, -22.6923, 1.14", "-73.734, 9.51923, -24.4992, 0.68", "-73.9504, 10.2856, -26.2339, 0.68", "-74.2073, 11.0975, -28.2059, 0.46", "-74.4274, 11.616, -29.5693, 0.23", "-74.6691, 12.0208, -30.6669, 0.23", "-74.8663, 12.2657, -31.2986, 0.23", "-75.2706, 12.6066, -32.2732, 0.91", "-75.8473, 12.9968, -33.4827, 0.46", "-76.6686, 13.4928, -34.8998, 0.46", "-77.661, 14.1106, -36.5695, 0.46", "-78.4022, 14.6044, -37.7929, 0.91", "-79.4193, 15.3261, -39.4727, 0.91", "-80.4517, 16.0557, -41.1368, 0.91", "-81.602, 16.9117, -42.9384, 0.68", "-82.2506, 17.4072, -43.9826, 0.68", "-82.799, 17.8107, -44.9596, 0.91", "-83.7863, 18.4525, -46.8934, 0.91", "-84.5502, 18.8684, -48.4487, 0.46", "-85.3985, 19.2389, -50.3226, 0.91", "-86.5199, 19.6364, -53.0799, 0.68", "-87.5775, 19.8934, -55.6992, 0.68", "-88.2077, 19.964, -57.189, 0.68", "-88.9418, 19.9834, -58.7901, 0.68", "-89.7716, 19.9588, -60.4668, 0.68", "-90.6525, 19.8691, -62.1311, 0.68", "-91.6868, 19.7374, -63.7913, 0.68", "-92.8676, 19.6114, -65.3523, 0.46", "-93.5468, 19.5708, -66.1469, 0.46", "-94.1339, 19.5325, -66.7186, 0.46" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-56.0212, -61.5123, -74.7587, 0.46", "-56.8133, -63.1891, -76.5578, 0.46", "-57.758, -64.9196, -78.5057, 0.68", "-57.9829, -65.2729, -78.927, 0.68", "-59.3826, -67.2404, -81.3527, 0.46", "-60.4813, -68.5673, -83.0014, 0.46", "-61.0597, -69.1813, -83.7618, 0.91", "-62.3242, -70.3083, -85.1317, 0.46", "-63.5342, -71.2451, -86.3946, 0.91", "-65.622, -72.6895, -88.6459, 0.23", "-67.079, -73.6342, -90.3233, 0.46", "-67.9549, -74.2176, -91.4022, 0.46", "-68.3575, -74.5138, -91.9461, 0.68", "-70.1486, -76.0478, -94.5399, 0.68", "-71.1037, -76.9439, -96.0285, 0.68", "-72.2471, -78.1473, -98.0328, 0.23", "-72.8185, -78.8742, -99.1852, 0.46", "-73.9574, -80.5772, -101.684, 0.23", "-74.5261, -81.5273, -103.006, 0.68", "-75.1256, -82.7256, -104.539, 0.23", "-75.8734, -84.4332, -106.67, 0.23", "-76.2573, -85.451, -107.937, 0.23", "-76.4896, -86.2417, -108.882, 0.91", "-76.9424, -88.1565, -111.155, 0.23", "-77.5968, -90.599, -113.949, 0.23", "-77.8023, -91.359, -114.756, 0.91", "-78.3582, -93.3184, -116.707, 0.23", "-78.7734, -94.684, -117.998, 0.68", "-79.5006, -96.9619, -120.012, 0.23", "-80.3469, -99.5237, -122.133, 0.23", "-80.7736, -100.741, -123.192, 0.46", "-81.3209, -102.213, -124.567, 0.23", "-81.6065, -102.972, -125.291, 0.68", "-82.413, -105.026, -127.266, 0.23", "-82.8025, -105.995, -128.204, 0.46", "-83.8708, -108.37, -130.679, 0.23", "-84.079, -108.736, -131.071, 0.23", "-84.5282, -109.428, -131.786, 0.46", "-85.451, -110.713, -133.081, 0.23", "-86.3282, -111.793, -134.097, 0.23", "-86.7758, -112.302, -134.55, 0.46", "-88.8379, -114.481, -136.377, 0.23", "-90.6597, -116.234, -137.924, 0.23", "-92.11, -117.58, -139.157, 0.23", "-93.6125, -118.941, -140.442, 0.23", "-95.5476, -120.634, -142.016, 0.23", "-96.6831, -121.561, -142.889, 0.68", "-98.623, -122.958, -144.241, 0.23" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-56.0212, -61.5123, -74.7587, 0.23", "-58.2345, -62.7511, -74.7835, 0.23", "-59.246, -63.3172, -74.7948, 0.23", "-59.8464, -63.6532, -74.8015, 0.46" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-115.619, 8.78981, -58.6162, 0.23", "-116.156, 7.4586, -58.9144, 0.23", "-116.622, 6.30499, -59.1729, 0.46", "-117.526, 4.0668, -59.6743, 0.23", "-118.492, 1.67417, -60.2103, 0.23", "-118.808, 0.8932, -60.3853, 0.68" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-115.619, 8.78981, -58.6162, 0.46", "-116.895, 8.52194, -58.6468, 0.46", "-117.71, 8.39663, -58.6476, 0.46", "-119.179, 8.25024, -58.6308, 0.68", "-120.889, 8.12528, -58.6042, 0.46", "-122.465, 8.02618, -58.5497, 0.23", "-123.601, 7.95352, -58.5004, 0.46", "-124.847, 7.87144, -58.4053, 0.46", "-126.304, 7.75221, -58.2985, 0.23", "-127.519, 7.59666, -58.2096, 0.46", "-128.239, 7.45566, -58.1646, 0.23", "-129.267, 7.14193, -58.136, 0.68", "-130.261, 6.77326, -58.1119, 0.68", "-132.149, 5.9381, -58.0764, 0.23", "-133.546, 5.20782, -58.0658, 0.23", "-134.036, 4.92535, -58.0711, 0.46", "-135.087, 4.28127, -58.1197, 0.46" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-59.9094, 11.118, -65.1121, 0.68", "-59.6841, 11.87, -66.0709, 0.68", "-59.4779, 12.4161, -66.8133, 0.91", "-58.7659, 14.3022, -69.3775, 0.68", "-58.4129, 15.2373, -70.6489, 0.68", "-57.9304, 16.5152, -72.3861, 0.68", "-57.3231, 18.1239, -74.5733, 0.46", "-56.7448, 19.4545, -76.5017, 0.68" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-59.9094, 11.118, -65.1121, 0.23", "-61.5353, 10.9776, -65.4131, 0.23", "-64.035, 10.9187, -65.75, 0.46", "-66.0337, 10.9664, -65.967, 0.23", "-67.9072, 11.0712, -66.135, 0.46", "-70.8255, 11.2954, -66.4904, 0.23", "-72.1689, 11.4195, -66.7541, 0.68", "-74.316, 11.7268, -67.3912, 0.23", "-75.2516, 11.9257, -67.8349, 0.68", "-76.2582, 12.2351, -68.7003, 0.68", "-77.7383, 12.7983, -70.8033, 0.23", "-78.8896, 13.3151, -73.0287, 0.68", "-79.8513, 13.7984, -75.1961, 0.68", "-80.7847, 14.3221, -77.5347, 0.68", "-82.2087, 15.2438, -81.3481, 0.68", "-83.2868, 16.0635, -84.2641, 0.68", "-84.1807, 16.7947, -86.511, 0.68", "-85.1681, 17.5772, -88.5961, 0.68", "-85.711, 17.9926, -89.6256, 0.46", "-86.5013, 18.6443, -90.9463, 0.46", "-87.8727, 19.8501, -92.8238, 0.23", "-88.7278, 20.6085, -93.7612, 0.23", "-89.3421, 21.1251, -94.3341, 0.46" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-38.8086, 24.3086, -52.5643, 0.46", "-40.3732, 24.4337, -51.9131, 0.46", "-41.5128, 24.5248, -51.4387, 0.91", "-43.3018, 24.6678, -50.6941, 0.46", "-45.8721, 24.8733, -49.6242, 0.23" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-38.8086, 24.3086, -52.5643, 0.68", "-37.9438, 25.5321, -55.5756, 0.68", "-37.0792, 26.7772, -58.4237, 0.68", "-36.0107, 28.003, -61.2426, 0.68", "-35.5727, 28.4418, -62.2451, 0.68", "-34.6113, 29.3364, -64.2236, 0.68", "-33.4139, 30.3711, -66.5015, 0.68", "-32.6482, 30.9963, -67.8688, 0.68", "-31.1676, 32.0301, -70.4421, 0.68", "-30.7008, 32.3124, -71.2757, 0.68", "-29.5401, 32.963, -73.5679, 0.68", "-28.4154, 33.5246, -76.0863, 0.68", "-27.0782, 34.1643, -79.5747, 0.68", "-25.6144, 34.8409, -83.6029, 0.68", "-24.5796, 35.3092, -86.5355, 0.68", "-23.9621, 35.5568, -88.0982, 0.68", "-22.9974, 35.8712, -90.2804, 0.68", "-21.363, 36.3231, -93.5657, 0.68", "-20.1299, 36.5903, -95.6977, 0.68", "-19.3325, 36.6879, -96.9682, 0.68", "-17.4922, 36.8784, -99.6651, 0.68", "-16.1641, 37.0214, -101.503, 0.68", "-14.2988, 37.2143, -104.074, 0.68", "-12.4448, 37.2737, -106.856, 0.68", "-10.48, 37.2036, -110.35, 0.68" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "77.4237, 40.5755, -62.192, 0.46", "78.7724, 41.5262, -63.0568, 0.46", "80.4441, 42.9048, -64.3176, 0.46", "81.6574, 43.9685, -65.3342, 0.46", "83.3655, 45.5027, -66.8265, 0.68", "84.9504, 47.0226, -68.2847, 0.46", "86.6167, 48.8248, -69.888, 0.68", "88.0721, 50.6653, -71.3599, 0.46", "89.0862, 52.1401, -72.473, 0.46", "90.1723, 53.8098, -73.7035, 0.46", "91.4076, 55.8696, -75.1131, 0.46", "92.6776, 58.1177, -76.4819, 0.46", "93.3671, 59.239, -77.113, 0.46", "94.2115, 60.4609, -77.8148, 0.46", "95.5029, 62.1377, -78.7524, 0.46", "96.7792, 63.5345, -79.6116, 0.46", "97.7851, 64.4413, -80.2992, 0.46", "99.7313, 65.9379, -81.7253, 0.46", "100.595, 66.546, -82.3937, 0.46", "102.714, 67.9606, -84.0391, 0.68", "103.962, 68.7896, -84.9914, 0.68", "106.209, 70.204, -86.7252, 0.46", "108.341, 71.5003, -88.4826, 0.68", "109.996, 72.5376, -89.964, 0.46", "111.179, 73.2861, -91.1371, 0.68", "112.568, 74.1183, -92.5813, 0.68", "114.51, 75.3023, -94.3971, 0.68", "116.358, 76.3332, -95.909, 0.46", "117.337, 76.8175, -96.6085, 0.68", "119.477, 77.8459, -97.8478, 0.68", "121.698, 78.838, -98.7958, 0.68", "124.074, 79.9606, -99.5114, 0.68", "126.748, 81.5208, -100.023, 0.46", "129.445, 83.4072, -100.347, 0.46", "131.863, 85.4028, -100.521, 0.46", "134.213, 87.4844, -100.614, 0.46", "136.945, 90.1664, -100.754, 0.46", "139.601, 93.1015, -100.88, 0.23", "141.103, 95.2047, -100.817, 0.23", "142.228, 97.3434, -100.715, 0.46" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "77.4237, 40.5755, -62.192, 0.46", "79.2328, 40.5487, -61.9024, 0.46", "82.0828, 40.5065, -61.4461, 0.46", "83.4799, 40.4858, -61.2225, 0.46", "85.2223, 40.46, -60.9436, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "104.025, 19.6702, -54.1203, 0.23", "104.763, 20.0518, -54.9448, 0.23", "105.916, 20.6908, -56.0759, 0.23", "106.915, 21.1825, -56.9171, 0.23", "107.828, 21.632, -57.686, 0.46", "108.459, 21.9423, -58.2167, 0.68", "110.152, 22.7758, -59.6426, 0.23", "111.255, 23.3132, -60.5999, 0.23", "112.533, 23.9814, -61.6039, 0.68" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "104.025, 19.6702, -54.1203, 0.46", "104.874, 18.5295, -54.6744, 0.46", "105.71, 17.4066, -55.2199, 0.46", "106.785, 15.9625, -55.9214, 0.46", "107.962, 14.3817, -56.6894, 0.46", "109.179, 12.7466, -57.4837, 0.46", "109.587, 12.1995, -57.7495, 1.37" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-28.5158, 9.15829, -9.0585, 0.91", "-29.1846, 9.28764, -9.17723, 0.91", "-30.4526, 9.38916, -9.32547, 0.46", "-31.0355, 9.40894, -9.40385, 0.68", "-31.8072, 9.40798, -9.50939, 0.68", "-32.7443, 9.37028, -9.68299, 0.68", "-33.458, 9.31473, -9.85272, 1.14", "-34.1046, 9.20367, -10.0082, 0.68", "-34.8223, 8.96927, -10.2211, 0.91", "-35.1077, 8.82859, -10.3294, 0.91", "-35.7469, 8.38734, -10.659, 0.91", "-36.1092, 8.03906, -10.906, 0.91", "-36.37, 7.75919, -11.1064, 0.91", "-36.9216, 7.07758, -11.5658, 0.46", "-37.329, 6.49127, -11.9057, 0.68", "-37.7256, 5.86433, -12.2419, 0.68", "-38.2472, 4.93825, -12.6443, 0.68" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-28.5158, 9.15829, -9.0585, 0.46", "-29.7365, 8.66233, -8.09719, 0.46", "-30.7935, 8.11753, -7.31747, 0.46", "-32.0895, 7.30437, -6.33512, 0.68", "-33.1126, 6.54296, -5.47324, 0.68", "-33.8582, 5.89946, -4.718, 0.68", "-34.7619, 5.0279, -3.75176, 0.68", "-35.6253, 4.1357, -2.84766, 0.68", "-36.4814, 3.25263, -1.94803, 0.68", "-37.435, 2.34905, -0.916694, 0.68", "-38.541, 1.43013, 0.336516, 0.68", "-39.198, 0.914722, 1.1579, 0.68", "-40.8283, -0.30004, 3.21406, 0.68", "-41.9131, -0.990444, 4.40231, 0.68", "-43.1268, -1.68439, 5.5736, 0.68", "-43.7357, -2.03539, 6.10766, 0.68", "-45.0412, -2.79633, 7.11198, 0.68", "-46.0595, -3.40488, 7.84352, 0.68", "-47.024, -4.05816, 8.50039, 0.68", "-48.2123, -4.92592, 9.24282, 0.68", "-49.5296, -5.90182, 10.0272, 0.68", "-51.3385, -7.17244, 11.0639, 0.91", "-52.4697, -7.96174, 11.7076, 0.46", "-53.6696, -8.82173, 12.4721, 0.46", "-54.7329, -9.62519, 13.2624, 0.68", "-56.3357, -10.8817, 14.6237, 0.46", "-56.7519, -11.2474, 15.0525, 0.46", "-57.3043, -11.8602, 15.8153, 0.91", "-58.029, -12.9357, 17.2401, 0.46", "-58.5184, -13.9629, 18.6554, 0.46", "-58.8022, -14.9012, 20.04, 0.46", "-58.9519, -15.8475, 21.4133, 0.46", "-58.9884, -16.5715, 22.3484, 0.68", "-58.8971, -17.8752, 23.9142, 0.68", "-58.6601, -19.1659, 25.2387, 0.68", "-58.4498, -19.9906, 25.9535, 0.68", "-58.1667, -20.8479, 26.6468, 0.46", "-57.5977, -22.4397, 28.0199, 0.46", "-57.2001, -23.6709, 29.1167, 0.46", "-56.8403, -25.1071, 30.479, 0.46", "-56.6261, -26.1273, 31.5151, 0.68", "-56.3581, -27.6582, 33.1301, 0.68", "-56.1323, -29.0853, 34.6001, 0.68", "-55.9232, -30.4014, 35.8458, 0.46", "-55.8039, -31.6513, 36.9577, 0.46", "-55.7675, -32.2704, 37.5059, 0.46", "-55.7553, -33.4143, 38.4276, 0.68", "-55.5659, -35.7724, 39.5447, 0.68", "-54.9882, -37.4706, 39.8519, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "8.62384, 26.7263, -10.221, 0.68", "10.2154, 27.9308, -11.5352, 0.68", "12.4477, 29.6631, -13.4888, 0.46", "14.0238, 30.9924, -15.0123, 0.46", "15.1219, 31.9742, -16.1833, 0.68", "16.7853, 33.5487, -18.1659, 0.68", "18.5077, 35.2926, -20.5057, 0.46", "19.6556, 36.58, -22.35, 0.46", "20.7621, 37.911, -24.4051, 0.68", "21.4933, 38.8329, -25.7928, 0.91", "22.5665, 40.1489, -27.5969, 0.68", "23.8337, 41.57, -29.3211, 0.91", "24.5251, 42.2148, -30.043, 0.91", "26.7564, 44.0869, -32.075, 0.68", "28.2585, 45.2243, -33.2122, 0.68", "31.5107, 47.5138, -35.239, 0.46", "34.044, 49.1493, -36.4912, 0.46", "36.7514, 50.7516, -37.5745, 0.68" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "8.62384, 26.7263, -10.221, 0.68", "9.28336, 26.9275, -9.42743, 0.68", "10.443, 27.3391, -8.20994, 0.68", "11.524, 27.7854, -7.20437, 0.68", "12.5258, 28.2696, -6.43059, 0.46", "13.5389, 28.8348, -5.80939, 0.68", "14.4097, 29.4228, -5.42354, 0.68", "15.1185, 30.0175, -5.32154, 0.46", "15.7837, 30.6377, -5.34274, 0.46", "16.7717, 31.6339, -5.46686, 0.68", "17.4398, 32.3468, -5.56409, 0.68", "18.4228, 33.3768, -5.67297, 0.68", "19.4284, 34.2812, -5.65027, 0.46", "20.5147, 35.036, -5.48755, 0.46", "21.1027, 35.3166, -5.32112, 0.23", "22.2532, 35.7063, -4.99924, 0.23", "23.1157, 35.929, -4.88944, 0.68", "24.662, 36.2476, -5.00129, 0.23", "25.6525, 36.4293, -5.1715, 0.23", "26.8928, 36.67, -5.51223, 0.23", "29.0218, 37.1274, -6.26374, 0.23", "31.0836, 37.5994, -7.21302, 0.23", "32.3661, 37.9943, -7.95768, 0.46" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "2.49037, 32.6896, 29.9321, 0.23", "6.7255, 33.6312, 31.102, 0.23", "7.91606, 33.8958, 31.4309, 0.23", "10.6995, 34.5147, 32.1998, 0.46" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "2.49037, 32.6896, 29.9321, 0.46", "2.82851, 34.2048, 28.7945, 0.46", "3.21715, 35.9464, 27.487, 0.46", "3.53582, 37.3743, 26.4149, 0.68", "3.88114, 38.9217, 25.2531, 0.46", "4.21713, 40.4273, 24.1227, 0.46", "4.47308, 41.5742, 23.2616, 0.46" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.11189, -20.8936, 15.6413, 0.91", "-1.18137, -22.2228, 16.0017, 0.91", "-1.32506, -24.9716, 16.7471, 0.91", "-1.43301, -27.0367, 17.307, 0.91", "-1.50095, -28.3366, 17.6595, 1.14" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.11189, -20.8936, 15.6413, 0.46", "0.538689, -20.9502, 15.0305, 0.46", "2.12027, -21.0582, 14.2862, 0.46", "4.38714, -21.2397, 13.0069, 0.68", "6.98182, -21.4, 11.3531, 0.68", "8.40256, -21.4754, 10.4327, 0.68", "10.108, -21.5294, 9.35483, 0.68", "12.787, -21.5717, 7.58986, 0.68", "14.8094, -21.6317, 6.18419, 0.68", "16.867, -21.6643, 4.68557, 0.68", "18.4961, -21.6322, 3.4802, 0.46", "19.9944, -21.5522, 2.41686, 0.68", "22.4634, -21.4142, 0.88508, 0.23" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-49.4389, -70.6396, 22.6883, 0.46", "-49.966, -71.3876, 22.881, 0.46", "-50.2169, -71.7676, 22.9819, 0.68", "-51.232, -73.2016, 23.4051, 0.46", "-52.0278, -74.2985, 23.7245, 0.46", "-52.8097, -75.3872, 24.0198, 0.46", "-53.7968, -76.726, 24.3964, 0.68", "-54.7516, -77.9735, 24.7708, 0.68", "-55.9368, -79.4112, 25.2202, 0.68", "-57.0661, -80.6671, 25.6128, 0.68", "-58.3856, -81.9977, 26.0408, 0.46", "-59.3614, -82.926, 26.3457, 0.68", "-60.0544, -83.5454, 26.5071, 0.68", "-60.8464, -84.191, 26.6801, 0.46", "-61.798, -84.9532, 26.9662, 0.46", "-62.5798, -85.555, 27.2788, 0.68", "-63.5507, -86.2598, 27.7476, 0.46", "-65.3279, -87.6005, 28.6487, 0.68", "-67.1636, -89.0414, 29.669, 0.23", "-68.6022, -90.1886, 30.6142, 0.23", "-69.5645, -90.9559, 31.3567, 0.23", "-70.3143, -91.5769, 32.0399, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-49.4389, -70.6396, 22.6883, 0.23", "-49.0925, -71.8289, 23.8356, 0.23", "-48.7677, -72.9437, 24.911, 0.46", "-48.4471, -74.044, 25.9725, 0.46", "-48.1383, -75.1042, 26.9952, 0.46", "-48.0681, -75.3449, 27.2274, 0.46" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-94.1339, 19.5325, -66.7186, 0.46", "-95.1512, 19.1591, -67.4865, 0.46", "-96.0723, 18.7959, -68.0755, 0.46", "-97.5532, 18.1778, -68.9294, 0.46", "-98.4076, 17.8163, -69.3871, 0.46", "-99.407, 17.4216, -69.8677, 0.68", "-100.707, 16.9636, -70.4419, 0.46", "-102.228, 16.5053, -71.0796, 0.46", "-102.939, 16.307, -71.3516, 0.46", "-103.629, 16.1537, -71.6012, 0.46", "-105.082, 15.9416, -72.1799, 0.68", "-105.793, 15.8809, -72.5527, 0.68", "-107.041, 15.8288, -73.3282, 0.46", "-107.684, 15.7947, -73.7907, 0.68", "-109.23, 15.6914, -75.0391, 0.68", "-109.848, 15.6274, -75.5987, 0.91", "-111.299, 15.407, -77.0528, 0.46", "-112.965, 15.0817, -78.7647, 0.68", "-114.243, 14.8147, -80.0567, 0.68", "-115.569, 14.4871, -81.3816, 0.68", "-116.521, 14.2165, -82.2956, 0.68", "-117.44, 13.9204, -83.1223, 0.68", "-118.153, 13.6668, -83.6698, 0.68", "-118.98, 13.2726, -84.1848, 0.68", "-119.827, 12.8333, -84.556, 0.68", "-120.57, 12.441, -84.7719, 0.68", "-121.715, 11.8327, -85.0383, 0.68", "-123.09, 11.0833, -85.3127, 0.68", "-124.882, 10.0754, -85.6644, 0.68", "-126.365, 9.22408, -85.9499, 0.46", "-129.727, 7.40955, -86.5739, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-94.1339, 19.5325, -66.7186, 0.46", "-95.2247, 20.448, -65.6654, 0.46", "-96.0087, 21.1695, -64.713, 0.46", "-97.4636, 22.8011, -62.4633, 0.46", "-98.4753, 23.9356, -60.899, 0.46", "-99.3628, 24.9308, -59.5267, 0.46", "-99.9838, 25.6273, -58.5665, 0.46", "-100.804, 26.4192, -57.0896, 0.46", "-101.267, 27.1271, -55.5477, 0.46" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-89.3421, 21.1251, -94.3341, 0.23", "-90.6633, 22.302, -95.2655, 0.23", "-92.6127, 24.0386, -96.6398, 0.23", "-93.8296, 25.1226, -97.4978, 0.23", "-94.9787, 26.1463, -98.3079, 0.23", "-96.5591, 27.5541, -99.422, 0.23" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-89.3421, 21.1251, -94.3341, 0.23", "-91.7538, 23.0502, -92.4472, 0.23", "-94.7725, 25.4599, -90.0853, 0.46", "-96.7895, 27.0699, -88.5073, 0.23", "-100.067, 29.6863, -85.9428, 0.23", "-101.657, 30.9555, -84.6989, 0.23", "-102.985, 32.0157, -83.6597, 0.46" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-38.2472, 4.93825, -12.6443, 0.68", "-39.6043, 4.7851, -13.9625, 0.68", "-41.0651, 4.62023, -15.3816, 0.46", "-42.751, 4.42997, -17.0193, 0.46", "-44.5876, 4.2227, -18.8034, 0.46" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-38.2472, 4.93825, -12.6443, 0.46", "-39.2659, 4.36894, -10.8829, 0.46", "-40.1021, 3.92953, -9.6947, 0.68", "-41.3033, 3.39056, -8.28974, 0.91", "-42.8004, 2.76561, -6.9215, 0.91", "-45.4093, 1.60212, -5.19913, 0.68", "-46.6679, 1.00144, -4.57857, 0.68", "-47.7119, 0.49975, -4.32861, 0.91", "-49.1432, -0.27856, -4.2835, 0.46", "-51.2117, -1.59879, -4.53589, 0.46", "-53.4855, -3.32031, -4.98804, 0.46", "-54.4306, -4.17455, -5.18741, 0.68", "-55.3106, -5.09643, -5.30168, 0.68", "-56.9129, -7.10279, -5.43267, 0.46", "-57.9255, -8.50459, -5.43144, 1.14", "-59.1529, -10.1966, -5.31223, 0.46", "-60.3155, -11.7329, -5.16649, 0.91", "-61.4425, -13.2175, -5.04965, 0.46", "-63.15, -15.3798, -4.85657, 0.46", "-64.3325, -16.7521, -4.73358, 0.68", "-66.007, -18.5428, -4.61763, 0.46", "-67.5016, -20.0258, -4.55637, 0.91", "-70.0209, -22.3513, -4.43995, 0.23", "-71.07, -23.2421, -4.35676, 0.68", "-73.323, -24.9189, -4.05006, 0.23", "-74.6522, -25.8319, -3.85627, 0.23", "-75.445, -26.2694, -3.77344, 0.68", "-76.5412, -26.7195, -3.70702, 0.23", "-77.9911, -27.1537, -3.73918, 0.23", "-79.6354, -27.622, -3.91994, 0.68", "-81.4219, -28.0973, -4.31195, 0.23", "-84.5044, -28.8859, -5.36946, 0.23", "-85.1208, -29.0429, -5.65536, 0.68", "-86.6349, -29.4587, -6.548, 0.46", "-87.9035, -29.8278, -7.42088, 0.91", "-90.0449, -30.4846, -9.01128, 0.46", "-91.7926, -30.9928, -10.2892, 0.91", "-94.2032, -31.6579, -12.0018, 0.23", "-96.0841, -32.1518, -13.3302, 0.68", "-97.5512, -32.4897, -14.3238, 0.68", "-98.4465, -32.6649, -14.9216, 0.23", "-100.002, -32.9536, -15.895, 0.68", "-102.193, -33.3994, -17.1372, 0.23" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.50095, -28.3366, 17.6595, 0.46", "-0.470864, -30.154, 17.7776, 0.46", "0.408555, -31.7429, 17.937, 0.46", "1.14766, -33.2182, 18.1164, 0.46", "1.9024, -34.7419, 18.2702, 0.68", "2.63953, -36.2002, 18.3785, 0.68", "3.64978, -38.2342, 18.5095, 0.68", "4.37384, -39.7015, 18.582, 0.68", "5.3515, -41.7317, 18.6163, 0.46", "6.27514, -43.5261, 18.5946, 0.46", "7.02543, -44.8985, 18.5603, 0.91", "7.93088, -46.5791, 18.4878, 0.91", "8.96847, -48.5895, 18.3778, 0.68", "10.3445, -51.6148, 18.159, 0.91", "10.896, -53.0895, 18.0537, 0.68", "11.2904, -54.6208, 17.9873, 0.46", "11.6158, -56.3151, 17.9382, 0.46", "11.8297, -57.6862, 17.8844, 0.46", "12.0428, -59.2807, 17.8324, 0.46", "12.2687, -60.8682, 17.728, 1.14", "12.6489, -63.0584, 17.486, 0.46", "13.2237, -65.576, 17.1365, 0.46", "13.5472, -66.6405, 16.9892, 0.68", "14.2595, -68.5561, 16.7564, 1.14", "14.8182, -69.9702, 16.6151, 0.68", "15.5226, -71.8199, 16.4453, 0.68", "16.0427, -73.3798, 16.3121, 0.91", "16.4702, -74.9093, 16.1948, 0.68", "17.1703, -77.7439, 16.0099, 0.68", "17.913, -81.2547, 15.8036, 0.91", "18.3638, -83.5327, 15.6888, 0.46", "18.7868, -85.8365, 15.5608, 0.91", "19.1917, -88.2568, 15.335, 0.23", "19.3439, -89.3194, 15.2064, 0.23", "19.5629, -91.1386, 14.9124, 0.68", "19.7615, -92.8085, 14.6001, 0.91", "19.9161, -93.9697, 14.348, 0.91", "20.2827, -96.2036, 13.8286, 0.46", "20.8141, -98.3045, 13.3136, 0.46", "21.5379, -100.418, 12.7519, 0.46", "22.0435, -101.55, 12.4693, 0.91", "23.0149, -103.411, 12.0201, 0.46", "24.0016, -105.101, 11.7157, 0.46", "25.514, -107.689, 11.4612, 0.46", "26.519, -109.432, 11.3852, 0.68", "28.0079, -112.069, 11.4399, 0.46", "28.5054, -112.993, 11.4985, 0.46", "29.9716, -115.863, 11.8113, 0.68", "31.116, -118.313, 12.1347, 0.68", "31.7289, -119.773, 12.3797, 0.68", "32.1984, -120.951, 12.6301, 1.14", "32.6362, -122.13, 12.8978, 1.14", "33.2261, -123.563, 13.2093, 0.23", "33.6496, -124.407, 13.3345, 0.23", "34.2627, -125.445, 13.4265, 0.46", "34.971, -126.622, 13.4912, 0.23", "35.6164, -127.728, 13.48, 0.68", "36.7299, -129.723, 13.3217, 0.23", "37.1878, -130.627, 13.2236, 0.46", "37.8304, -132.016, 13.0532, 0.23", "38.4423, -133.474, 12.8496, 0.68", "39.0793, -135.034, 12.5492, 0.23", "39.7247, -136.668, 12.219, 0.23", "40.1798, -137.945, 11.9486, 0.91", "40.7709, -139.692, 11.5503, 0.46", "41.3847, -141.589, 11.1353, 0.46", "41.9154, -143.427, 10.7506, 0.46", "42.346, -145.103, 10.518, 0.46", "42.8214, -147.115, 10.3489, 0.23", "43.1717, -148.804, 10.2965, 0.46", "43.4665, -150.726, 10.4013, 0.91", "43.6604, -152.717, 10.7581, 0.46", "43.7636, -154.622, 11.3506, 0.23", "43.7971, -155.499, 11.6953, 0.46", "43.9365, -157.358, 12.4721, 0.23", "44.0708, -158.544, 12.9545, 0.46", "44.3659, -160.396, 13.5995, 0.23", "44.7503, -162.333, 14.1704, 0.68", "45.3326, -164.723, 14.6493, 0.23", "46.1258, -167.34, 15.0528, 0.23", "46.4613, -168.22, 15.1256, 0.68", "47.0861, -169.68, 15.1496, 0.23", "47.4641, -170.568, 15.1329, 0.68", "48.1832, -172.405, 15.062, 0.46", "48.8309, -174.332, 15.0112, 0.68", "49.4977, -176.758, 15.0303, 0.23", "49.8689, -178.299, 15.0868, 0.46", "50.3093, -180.558, 15.1913, 0.23", "50.5187, -182.002, 15.253, 0.68", "50.5868, -183.062, 15.2999, 0.46", "50.5954, -184.038, 15.3278, 0.46", "50.5852, -185.633, 15.3883, 0.23", "50.6098, -187.302, 15.4362, 0.23", "50.6753, -188.658, 15.496, 0.68", "50.8662, -191.725, 15.717, 0.23", "50.9537, -192.991, 15.8417, 0.68", "51.101, -194.871, 16.0802, 0.23", "51.1515, -195.485, 16.1761, 0.46", "51.3909, -197.684, 16.6063, 0.23", "51.5099, -198.633, 16.7976, 0.46", "51.8535, -200.814, 17.2642, 0.68", "52.1016, -202.327, 17.5824, 0.23", "52.2118, -202.973, 17.7152, 0.46", "52.761, -206.036, 18.3206, 0.23", "53.0602, -207.631, 18.6224, 0.23", "53.3652, -209.2, 18.926, 0.68", "53.7434, -211.083, 19.2998, 0.23", "54.1684, -213.203, 19.7201, 0.23", "54.2995, -213.814, 19.8445, 0.68" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-1.50095, -28.3366, 17.6595, 0.68", "-0.489061, -29.0143, 19.7094, 0.68", "0.571279, -29.706, 21.6041, 0.68", "0.904178, -29.9404, 22.1614, 0.68", "2.18842, -30.9039, 24.2749, 0.68", "3.69619, -32.2297, 26.8395, 0.68", "5.20242, -33.8269, 29.553, 0.68", "6.35449, -35.178, 31.643, 0.68", "7.22008, -36.3309, 33.2406, 0.46", "7.66771, -36.9742, 34.1072, 0.91", "8.78632, -38.7093, 36.3516, 0.91", "9.8885, -40.4699, 38.5481, 0.46", "10.4615, -41.3514, 39.6922, 0.23", "11.4908, -42.6601, 41.5721, 0.23", "12.5418, -43.593, 43.1368, 0.46", "13.4862, -44.1883, 44.2443, 0.46", "14.8536, -44.8562, 45.5746, 0.23", "15.6616, -45.2056, 46.276, 0.23", "17.7985, -46.1287, 48.0244, 0.46", "20.0579, -47.1526, 49.8593, 0.46", "22.2883, -48.3322, 51.6728, 0.68", "23.5636, -49.0694, 52.7331, 0.23", "24.2056, -49.4844, 53.2579, 0.23", "25.2859, -50.2238, 54.1095, 0.68", "27.3533, -51.7089, 55.6718, 0.23", "28.5718, -52.6564, 56.6066, 0.23", "30.2397, -53.9505, 57.8289, 0.46", "31.4476, -54.8388, 58.6368, 0.46", "32.7695, -55.7892, 59.4718, 0.46", "34.8769, -57.2121, 60.7244, 0.46", "37.4937, -58.8738, 62.1962, 0.46", "38.2909, -59.3576, 62.6359, 1.14", "40.1106, -60.4326, 63.6308, 0.91", "41.6492, -61.3162, 64.533, 0.46", "43.8561, -62.5941, 65.8858, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "54.2995, -213.814, 19.8445, 0.46", "54.8414, -213.299, 21.268, 0.46", "55.6961, -212.486, 23.5134, 0.23", "56.1504, -212.054, 24.7067, 0.23", "56.9048, -211.337, 26.6887, 0.23", "57.7729, -210.511, 28.969, 0.23", "58.4869, -209.833, 30.8447, 0.46" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "54.2995, -213.814, 19.8445, 0.23", "54.1133, -215.535, 20.1492, 0.23", "54.0097, -216.728, 20.3354, 0.46", "53.883, -218.145, 20.5226, 0.23", "53.8008, -219.335, 20.5983, 0.23", "53.7652, -220.171, 20.6087, 0.46", "53.7541, -222.003, 20.6105, 0.23", "53.8016, -223.206, 20.5709, 0.23", "53.8808, -224.278, 20.5235, 0.46", "54.0815, -226.448, 20.4715, 0.23", "54.2357, -228.007, 20.4577, 0.23", "54.4163, -229.7, 20.4319, 0.68", "54.6952, -231.756, 20.368, 0.23", "54.8875, -232.959, 20.2954, 0.68", "55.1105, -234.273, 20.1911, 0.23", "55.2718, -235.395, 20.0291, 0.46", "55.5726, -237.377, 19.4769, 0.23", "55.8452, -238.746, 18.9168, 0.46", "56.2667, -240.34, 18.1385, 0.23", "56.4505, -240.969, 17.815, 0.68", "57.122, -243.303, 16.7645, 0.23", "57.8156, -245.851, 15.8283, 0.23", "58.3442, -247.878, 15.2536, 0.23", "58.8887, -249.99, 14.7182, 0.23", "59.1916, -251.145, 14.4685, 0.23", "60.5286, -256.158, 13.6092, 0.23", "61.0314, -258.114, 13.4484, 0.23", "61.2409, -259.213, 13.4516, 0.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_69", "dend_66", "dend_55", "dend_44", "dend_25", "dend_0", "dend_77", "dend_70", "dend_68", "dend_67", "dend_57", "dend_56", "dend_52", "dend_45", "dend_39", "dend_26", "dend_6", "dend_1", "dend_79", "dend_78", "dend_76", "dend_71", "dend_59", "dend_58", "dend_54", "dend_53", "dend_49", "dend_46", "dend_41", "dend_40", "dend_32", "dend_27", "dend_14", "dend_7", "dend_3", "dend_2", "dend_85", "dend_80", "dend_73", "dend_72", "dend_63", "dend_60", "dend_51", "dend_50", "dend_48", "dend_47", "dend_43", "dend_42", "dend_34", "dend_33", "dend_31", "dend_28", "dend_22", "dend_15", "dend_11", "dend_8", "dend_5", "dend_4", "dend_87", "dend_86", "dend_84", "dend_81", "dend_75", "dend_74", "dend_65", "dend_64", "dend_62", "dend_61", "dend_36", "dend_35", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_16", "dend_13", "dend_12", "dend_10", "dend_9", "dend_83", "dend_82", "dend_38", "dend_37", "dend_19", "dend_18", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_69", "dend_66", "dend_55", "dend_44", "dend_25", "dend_0", "dend_77", "dend_70", "dend_68", "dend_67", "dend_57", "dend_56", "dend_52", "dend_45", "dend_39", "dend_26", "dend_6", "dend_1", "dend_79", "dend_78", "dend_76", "dend_71", "dend_59", "dend_58", "dend_54", "dend_53", "dend_49", "dend_46", "dend_41", "dend_40", "dend_32", "dend_27", "dend_14", "dend_7", "dend_3", "dend_2", "dend_85", "dend_80", "dend_73", "dend_72", "dend_63", "dend_60", "dend_51", "dend_50", "dend_48", "dend_47", "dend_43", "dend_42", "dend_34", "dend_33", "dend_31", "dend_28", "dend_22", "dend_15", "dend_11", "dend_8", "dend_5", "dend_4", "dend_87", "dend_86", "dend_84", "dend_81", "dend_75", "dend_74", "dend_65", "dend_64", "dend_62", "dend_61", "dend_36", "dend_35", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_16", "dend_13", "dend_12", "dend_10", "dend_9", "dend_83", "dend_82", "dend_38", "dend_37", "dend_19", "dend_18", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_69", "dend_69", "dend_69", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_26", "dend_26", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_14", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_DLAC_d51b8a96ed_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_66, id: dend_66, parent: soma_0
create dend_66
public dend_66
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_77, id: dend_77, parent: dend_69
create dend_77
public dend_77
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_25
create dend_39
public dend_39
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_70
create dend_76
public dend_76
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_14, id: dend_14, parent: dend_6
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_63, id: dend_63, parent: dend_59
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_14
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_84, id: dend_84, parent: dend_80
create dend_84
public dend_84
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_66, dend_55, dend_44, dend_25, dend_0, dend_77, dend_70, dend_68, dend_67, dend_57, dend_56, dend_52, dend_45, dend_39, dend_26, dend_6, dend_1, dend_79, dend_78, dend_76, dend_71, dend_59, dend_58, dend_54, dend_53, dend_49, dend_46, dend_41, dend_40, dend_32, dend_27, dend_14, dend_7, dend_3, dend_2, dend_85, dend_80, dend_73, dend_72, dend_63, dend_60, dend_51, dend_50, dend_48, dend_47, dend_43, dend_42, dend_34, dend_33, dend_31, dend_28, dend_22, dend_15, dend_11, dend_8, dend_5, dend_4, dend_87, dend_86, dend_84, dend_81, dend_75, dend_74, dend_65, dend_64, dend_62, dend_61, dend_36, dend_35, dend_30, dend_29, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_10, dend_9, dend_83, dend_82, dend_38, dend_37, dend_19, dend_18, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_66, dend_55, dend_44, dend_25, dend_0, dend_77, dend_70, dend_68, dend_67, dend_57, dend_56, dend_52, dend_45, dend_39, dend_26, dend_6, dend_1, dend_79, dend_78, dend_76, dend_71, dend_59, dend_58, dend_54, dend_53, dend_49, dend_46, dend_41, dend_40, dend_32, dend_27, dend_14, dend_7, dend_3, dend_2, dend_85, dend_80, dend_73, dend_72, dend_63, dend_60, dend_51, dend_50, dend_48, dend_47, dend_43, dend_42, dend_34, dend_33, dend_31, dend_28, dend_22, dend_15, dend_11, dend_8, dend_5, dend_4, dend_87, dend_86, dend_84, dend_81, dend_75, dend_74, dend_65, dend_64, dend_62, dend_61, dend_36, dend_35, dend_30, dend_29, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_10, dend_9, dend_83, dend_82, dend_38, dend_37, dend_19, dend_18, dend_21, dend_20]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_90
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_26, dend_26, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_69(0), soma_0(0.4499999983174933)
    connect dend_66(0), soma_0(0.4499999983174933)
    connect dend_55(0), soma_0(0.4499999983174933)
    connect dend_44(0), soma_0(0.4499999983174933)
    connect dend_25(0), soma_0(0.4499999983174933)
    connect dend_0(0), soma_0(0.4499999983174933)
    connect axon_0(0), soma_0(1.0)
    connect dend_77(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_14(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_63(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_84(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.08558, -8.00436, 0.0, 3.28822 ) }
    soma_0 { pt3dadd( -2.82762, -7.18029, 0.0, 6.03015 ) }
    soma_0 { pt3dadd( -2.56966, -6.35622, 0.0, 7.19925 ) }
    soma_0 { pt3dadd( -2.31171, -5.53216, 0.0, 8.80492 ) }
    soma_0 { pt3dadd( -2.05375, -4.70809, 0.0, 10.2238 ) }
    soma_0 { pt3dadd( -1.79579, -3.88402, 0.0, 11.4926 ) }
    soma_0 { pt3dadd( -1.53783, -3.05995, 0.0, 12.2121 ) }
    soma_0 { pt3dadd( -1.27988, -2.23588, 0.0, 12.7524 ) }
    soma_0 { pt3dadd( -1.02192, -1.41181, 0.0, 13.2872 ) }
    soma_0 { pt3dadd( -0.763961, -0.587744, 0.0, 13.6432 ) }
    soma_0 { pt3dadd( -0.506004, 0.236325, 0.0, 13.5995 ) }
    soma_0 { pt3dadd( -0.248046, 1.06039, 0.0, 13.5377 ) }
    soma_0 { pt3dadd( 0.0099114, 1.88446, 0.0, 13.4148 ) }
    soma_0 { pt3dadd( 0.267869, 2.70853, 0.0, 13.3035 ) }
    soma_0 { pt3dadd( 0.525827, 3.5326, 0.0, 12.9617 ) }
    soma_0 { pt3dadd( 0.783784, 4.35667, 0.0, 12.4959 ) }
    soma_0 { pt3dadd( 1.04174, 5.18074, 0.0, 11.7267 ) }
    soma_0 { pt3dadd( 1.2997, 6.00481, 0.0, 10.4697 ) }
    soma_0 { pt3dadd( 1.55766, 6.82887, 0.0, 9.07088 ) }
    soma_0 { pt3dadd( 1.81561, 7.65294, 0.0, 7.0465 ) }
    soma_0 { pt3dadd( 2.07357, 8.47701, 0.0, 3.98438 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 21/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -3.66423, -0.138438, -15.72, 1.59 ) }
    dend_69 { pt3dadd( -3.66423, -0.138438, -15.72, 1.59 ) }
    dend_69 { pt3dadd( -4.90113, -0.0912572, -16.1477, 1.59 ) }
    dend_69 { pt3dadd( -5.43656, -0.0708331, -16.3328, 1.59 ) }
    // Section: dend_66, id: dend_66, parent: soma_0 (entry count 25/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -2.75423, -2.53243, -15.23, 0.91 ) }
    dend_66 { pt3dadd( -3.44404, -2.96541, -15.9286, 0.91 ) }
    dend_66 { pt3dadd( -4.31841, -3.38025, -16.8797, 0.91 ) }
    dend_66 { pt3dadd( -5.06766, -3.68714, -17.8902, 0.68 ) }
    dend_66 { pt3dadd( -5.99573, -4.00213, -19.5722, 0.68 ) }
    dend_66 { pt3dadd( -6.50319, -4.13106, -20.9092, 0.68 ) }
    dend_66 { pt3dadd( -6.77175, -4.09254, -22.05, 0.68 ) }
    dend_66 { pt3dadd( -6.78457, -3.8383, -22.9491, 0.68 ) }
    dend_66 { pt3dadd( -6.62036, -3.18452, -24.34, 0.68 ) }
    dend_66 { pt3dadd( -6.38547, -2.52015, -25.4404, 0.68 ) }
    dend_66 { pt3dadd( -6.15735, -1.8921, -26.3584, 0.68 ) }
    dend_66 { pt3dadd( -5.83719, -0.934424, -27.7615, 0.68 ) }
    dend_66 { pt3dadd( -5.59256, 0.146057, -29.4176, 0.68 ) }
    dend_66 { pt3dadd( -5.5426, 0.963316, -30.868, 0.68 ) }
    dend_66 { pt3dadd( -5.63708, 1.68032, -32.4507, 0.68 ) }
    dend_66 { pt3dadd( -5.73393, 1.96373, -33.4376, 0.68 ) }
    dend_66 { pt3dadd( -5.84833, 2.10979, -34.6932, 0.68 ) }
    dend_66 { pt3dadd( -5.92731, 2.12388, -36.0771, 0.68 ) }
    dend_66 { pt3dadd( -5.88032, 2.0821, -37.6184, 0.68 ) }
    dend_66 { pt3dadd( -5.59411, 2.09067, -39.2628, 0.68 ) }
    dend_66 { pt3dadd( -5.13602, 2.21512, -40.8385, 0.68 ) }
    dend_66 { pt3dadd( -4.5646, 2.46763, -42.529, 0.68 ) }
    dend_66 { pt3dadd( -4.08055, 2.81368, -44.0368, 0.68 ) }
    dend_66 { pt3dadd( -3.67177, 3.3126, -45.7795, 0.46 ) }
    dend_66 { pt3dadd( -3.50031, 3.81386, -47.4649, 0.91 ) }
    dend_66 { pt3dadd( -3.52619, 4.34435, -49.1378, 0.91 ) }
    dend_66 { pt3dadd( -3.64553, 4.75505, -50.4563, 0.91 ) }
    dend_66 { pt3dadd( -4.02245, 5.31229, -52.5371, 0.91 ) }
    dend_66 { pt3dadd( -4.68659, 5.76772, -54.8982, 0.91 ) }
    dend_66 { pt3dadd( -5.47734, 6.0408, -56.8576, 0.91 ) }
    dend_66 { pt3dadd( -6.26255, 6.18704, -58.4289, 0.91 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 56/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 5.54577, 2.51207, -14.55, 0.91 ) }
    dend_55 { pt3dadd( 5.9965, 3.22774, -15.9573, 0.91 ) }
    dend_55 { pt3dadd( 6.61286, 4.32991, -17.8197, 0.91 ) }
    dend_55 { pt3dadd( 7.47298, 5.90004, -20.2916, 0.91 ) }
    dend_55 { pt3dadd( 8.14421, 7.0158, -22.0238, 0.91 ) }
    dend_55 { pt3dadd( 8.81327, 8.02405, -23.5113, 0.91 ) }
    dend_55 { pt3dadd( 9.51104, 8.91189, -24.8618, 0.91 ) }
    dend_55 { pt3dadd( 10.4289, 9.85164, -26.4499, 1.14 ) }
    dend_55 { pt3dadd( 10.7903, 10.117, -26.9753, 1.14 ) }
    dend_55 { pt3dadd( 12.0064, 10.815, -28.4732, 1.14 ) }
    dend_55 { pt3dadd( 13.0823, 11.24, -29.6426, 0.91 ) }
    dend_55 { pt3dadd( 14.8378, 11.6307, -31.38, 0.91 ) }
    dend_55 { pt3dadd( 16.6714, 11.733, -33.1333, 0.91 ) }
    dend_55 { pt3dadd( 18.1668, 11.5906, -34.5593, 0.68 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 70/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 4.34577, 2.99657, 6.22, 1.59 ) }
    dend_44 { pt3dadd( 4.34577, 2.99657, 6.22, 1.59 ) }
    dend_44 { pt3dadd( 6.72479, 4.3111, 6.43351, 1.59 ) }
    dend_44 { pt3dadd( 9.19778, 5.59149, 6.74932, 1.59 ) }
    dend_44 { pt3dadd( 11.9126, 6.99708, 7.096, 1.37 ) }
    dend_44 { pt3dadd( 13.4665, 7.8016, 7.29444, 1.14 ) }
    dend_44 { pt3dadd( 15.4902, 8.8494, 7.55288, 1.14 ) }
    dend_44 { pt3dadd( 17.9976, 10.1023, 7.90836, 1.37 ) }
    dend_44 { pt3dadd( 19.5417, 10.8022, 8.18343, 2.05 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 79/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.66423, 7.06257, -1.8, 3.87 ) }
    dend_25 { pt3dadd( -2.66423, 7.06257, -1.8, 3.87 ) }
    dend_25 { pt3dadd( -3.24555, 8.43523, -1.89089, 2.73 ) }
    dend_25 { pt3dadd( -4.1593, 10.5928, -2.03375, 2.05 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 83/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.65423, -5.73393, 4.85, 2.96 ) }
    dend_0 { pt3dadd( -4.65423, -5.73393, 4.85, 2.96 ) }
    dend_0 { pt3dadd( -5.37384, -6.55471, 5.13613, 2.28 ) }
    dend_0 { pt3dadd( -6.50847, -7.84884, 5.58729, 2.05 ) }
    dend_0 { pt3dadd( -7.61958, -9.11614, 6.02909, 2.05 ) }
    dend_0 { pt3dadd( -8.93162, -10.6127, 6.55079, 2.05 ) }
    dend_0 { pt3dadd( -9.55886, -11.3281, 6.80019, 2.05 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 90/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.07357, 8.47701, 0.0, 0.91386 ) }
    axon_0 { pt3dadd( 6.5546, 22.792, 0.0, 0.91386 ) }
    axon_0 { pt3dadd( 11.0356, 37.1071, 0.0, 0.91386 ) }
    // Section: dend_77, id: dend_77, parent: dend_69 (entry count 93/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -5.43656, -0.0708331, -16.3328, 0.91 ) }
    dend_77 { pt3dadd( -6.43316, 0.16755, -16.7084, 0.91 ) }
    dend_77 { pt3dadd( -8.34015, 0.429606, -17.6305, 0.91 ) }
    dend_77 { pt3dadd( -10.1594, 0.52807, -18.7354, 0.68 ) }
    dend_77 { pt3dadd( -11.6624, 0.533721, -19.8046, 0.68 ) }
    dend_77 { pt3dadd( -13.5243, 0.540721, -21.1291, 0.91 ) }
    dend_77 { pt3dadd( -15.8144, 0.54933, -22.7582, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_77 { pt3dadd( -17.147, 0.50841, -23.8681, 0.91 ) }
    dend_77 { pt3dadd( -18.6009, 0.314235, -25.3754, 0.91 ) }
    dend_77 { pt3dadd( -19.4538, 0.0439171, -26.4441, 0.91 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 3/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -5.43656, -0.0708331, -16.3328, 0.91 ) }
    dend_70 { pt3dadd( -6.25586, 0.875037, -17.2062, 0.91 ) }
    dend_70 { pt3dadd( -7.85211, 2.32299, -18.5093, 0.91 ) }
    dend_70 { pt3dadd( -9.14141, 3.32836, -19.4448, 0.91 ) }
    dend_70 { pt3dadd( -11.1045, 4.6737, -20.8127, 0.91 ) }
    dend_70 { pt3dadd( -12.9732, 5.85116, -22.2016, 0.91 ) }
    dend_70 { pt3dadd( -15.3723, 7.30823, -24.1376, 0.91 ) }
    dend_70 { pt3dadd( -16.9965, 8.15216, -25.462, 0.91 ) }
    dend_70 { pt3dadd( -17.8329, 8.52264, -26.0952, 0.91 ) }
    dend_70 { pt3dadd( -19.2571, 9.07367, -27.1153, 0.68 ) }
    dend_70 { pt3dadd( -21.4125, 9.78649, -28.6986, 0.68 ) }
    dend_70 { pt3dadd( -22.6635, 10.1438, -29.9106, 1.37 ) }
    dend_70 { pt3dadd( -22.8867, 10.2164, -30.2238, 1.37 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 16/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -6.26255, 6.18704, -58.4289, 0.68 ) }
    dend_68 { pt3dadd( -6.29358, 5.5132, -62.6935, 0.68 ) }
    dend_68 { pt3dadd( -6.23008, 4.86249, -66.2467, 0.68 ) }
    dend_68 { pt3dadd( -6.10637, 4.20696, -69.4253, 0.68 ) }
    dend_68 { pt3dadd( -6.02439, 3.56634, -72.0848, 0.68 ) }
    dend_68 { pt3dadd( -5.91178, 2.79223, -74.9275, 0.68 ) }
    dend_68 { pt3dadd( -5.67347, 1.65032, -78.8378, 0.68 ) }
    dend_68 { pt3dadd( -5.48538, 1.14892, -80.3699, 0.68 ) }
    dend_68 { pt3dadd( -4.88175, -0.184696, -84.1435, 0.68 ) }
    dend_68 { pt3dadd( -4.52991, -0.963317, -86.1475, 0.68 ) }
    dend_68 { pt3dadd( -4.18486, -1.81473, -88.1111, 0.68 ) }
    dend_68 { pt3dadd( -3.74358, -2.84602, -90.2042, 0.68 ) }
    dend_68 { pt3dadd( -3.26758, -3.73239, -91.8541, 0.68 ) }
    dend_68 { pt3dadd( -2.13939, -5.41703, -94.8049, 0.68 ) }
    dend_68 { pt3dadd( -1.11462, -6.70883, -96.7718, 0.68 ) }
    dend_68 { pt3dadd( 0.145192, -8.10452, -98.6709, 0.68 ) }
    dend_68 { pt3dadd( 1.62672, -9.57578, -100.468, 0.46 ) }
    dend_68 { pt3dadd( 3.15666, -10.9998, -102.012, 0.46 ) }
    dend_68 { pt3dadd( 4.04284, -11.7829, -102.89, 0.68 ) }
    dend_68 { pt3dadd( 5.08938, -12.6382, -103.954, 0.91 ) }
    dend_68 { pt3dadd( 6.95899, -14.1456, -106.048, 0.46 ) }
    dend_68 { pt3dadd( 8.64358, -15.5388, -108.378, 0.68 ) }
    dend_68 { pt3dadd( 9.74361, -16.5111, -110.335, 0.46 ) }
    dend_68 { pt3dadd( 11.3681, -18.0147, -113.63, 0.68 ) }
    dend_68 { pt3dadd( 12.1988, -18.8323, -115.449, 0.68 ) }
    dend_68 { pt3dadd( 13.0207, -19.7542, -117.498, 0.68 ) }
    dend_68 { pt3dadd( 13.9147, -21.0174, -120.044, 0.68 ) }
    dend_68 { pt3dadd( 14.7528, -22.5901, -122.778, 0.68 ) }
    dend_68 { pt3dadd( 15.1277, -23.4228, -124.111, 0.68 ) }
    dend_68 { pt3dadd( 15.679, -24.7045, -125.968, 0.91 ) }
    dend_68 { pt3dadd( 16.464, -26.6944, -128.676, 0.68 ) }
    dend_68 { pt3dadd( 17.1753, -28.7983, -131.415, 0.68 ) }
    dend_68 { pt3dadd( 17.7745, -30.7804, -133.701, 0.46 ) }
    dend_68 { pt3dadd( 18.1974, -32.3466, -135.432, 0.46 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 50/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -6.26255, 6.18704, -58.4289, 0.68 ) }
    dend_67 { pt3dadd( -6.89759, 6.58587, -59.3435, 0.68 ) }
    dend_67 { pt3dadd( -7.68763, 7.05839, -60.5381, 0.46 ) }
    dend_67 { pt3dadd( -8.11244, 7.28806, -61.2125, 0.46 ) }
    dend_67 { pt3dadd( -9.08158, 7.81576, -62.7998, 0.46 ) }
    dend_67 { pt3dadd( -10.1386, 8.36241, -64.505, 0.46 ) }
    dend_67 { pt3dadd( -10.7298, 8.64976, -65.4699, 0.46 ) }
    dend_67 { pt3dadd( -11.5956, 9.02237, -66.9933, 0.46 ) }
    dend_67 { pt3dadd( -12.3561, 9.31375, -68.4609, 0.46 ) }
    dend_67 { pt3dadd( -12.6719, 9.41962, -69.1146, 0.46 ) }
    dend_67 { pt3dadd( -13.086, 9.5461, -70.0091, 0.68 ) }
    dend_67 { pt3dadd( -13.8736, 9.76665, -71.7395, 0.68 ) }
    dend_67 { pt3dadd( -14.5167, 9.92453, -73.1885, 0.46 ) }
    dend_67 { pt3dadd( -15.2251, 10.0981, -74.9369, 0.46 ) }
    dend_67 { pt3dadd( -15.9299, 10.2724, -76.7791, 0.46 ) }
    dend_67 { pt3dadd( -16.2527, 10.3397, -77.6854, 0.46 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 66/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 18.1668, 11.5906, -34.5593, 0.68 ) }
    dend_57 { pt3dadd( 18.8831, 11.7878, -35.3979, 0.68 ) }
    dend_57 { pt3dadd( 20.0882, 12.3097, -36.8632, 0.68 ) }
    dend_57 { pt3dadd( 21.1581, 13.0015, -37.9527, 0.68 ) }
    dend_57 { pt3dadd( 21.7549, 13.4515, -38.4786, 0.68 ) }
    dend_57 { pt3dadd( 22.7482, 14.2132, -39.3529, 0.91 ) }
    dend_57 { pt3dadd( 23.6268, 14.887, -40.1262, 0.91 ) }
    dend_57 { pt3dadd( 24.5899, 15.7645, -40.9892, 0.91 ) }
    dend_57 { pt3dadd( 26.1514, 17.4293, -42.2898, 0.91 ) }
    dend_57 { pt3dadd( 27.4251, 18.8494, -43.2462, 0.68 ) }
    dend_57 { pt3dadd( 28.7756, 20.2824, -44.1544, 0.91 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 77/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 18.1668, 11.5906, -34.5593, 0.68 ) }
    dend_56 { pt3dadd( 18.6572, 12.0353, -36.1632, 0.68 ) }
    dend_56 { pt3dadd( 19.0863, 12.4956, -37.8283, 0.68 ) }
    dend_56 { pt3dadd( 19.5154, 13.0599, -40.132, 0.68 ) }
    dend_56 { pt3dadd( 19.8636, 13.5862, -42.3585, 0.68 ) }
    dend_56 { pt3dadd( 20.1733, 14.1147, -44.4654, 0.68 ) }
    dend_56 { pt3dadd( 20.3505, 14.4295, -45.7271, 0.68 ) }
    dend_56 { pt3dadd( 20.5492, 14.9898, -47.7739, 0.68 ) }
    dend_56 { pt3dadd( 20.6442, 15.4642, -49.8957, 0.68 ) }
    dend_56 { pt3dadd( 20.6508, 15.5972, -51.2247, 0.68 ) }
    dend_56 { pt3dadd( 20.63, 15.5391, -52.4492, 0.91 ) }
    dend_56 { pt3dadd( 20.5275, 15.1371, -54.9749, 0.91 ) }
    dend_56 { pt3dadd( 20.436, 14.8322, -56.3463, 0.68 ) }
    dend_56 { pt3dadd( 20.1503, 14.1549, -58.935, 0.68 ) }
    dend_56 { pt3dadd( 19.6548, 13.2398, -62.1286, 0.68 ) }
    dend_56 { pt3dadd( 19.0411, 12.2805, -65.1079, 0.68 ) }
    dend_56 { pt3dadd( 18.631, 11.6271, -66.9074, 0.68 ) }
    dend_56 { pt3dadd( 18.0293, 10.6611, -69.528, 0.68 ) }
    dend_56 { pt3dadd( 17.6148, 10.0072, -71.573, 0.68 ) }
    dend_56 { pt3dadd( 17.4521, 9.81783, -72.4694, 0.68 ) }
    dend_56 { pt3dadd( 17.2379, 9.64675, -73.9966, 0.68 ) }
    dend_56 { pt3dadd( 16.959, 9.46699, -76.4013, 0.68 ) }
    dend_56 { pt3dadd( 16.8224, 9.30077, -78.1025, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_56 { pt3dadd( 16.7273, 9.01667, -80.207, 0.68 ) }
    dend_56 { pt3dadd( 16.7333, 8.62478, -82.606, 0.68 ) }
    dend_56 { pt3dadd( 16.7926, 8.02252, -85.7694, 0.68 ) }
    dend_56 { pt3dadd( 16.8344, 7.49337, -88.0628, 0.68 ) }
    dend_56 { pt3dadd( 16.8891, 6.85147, -90.3519, 0.68 ) }
    dend_56 { pt3dadd( 17.0521, 5.86787, -93.1526, 0.68 ) }
    dend_56 { pt3dadd( 17.3631, 4.93245, -95.386, 0.68 ) }
    dend_56 { pt3dadd( 17.6881, 4.24779, -96.7467, 0.68 ) }
    dend_56 { pt3dadd( 18.5423, 2.77294, -99.1722, 0.68 ) }
    dend_56 { pt3dadd( 19.0632, 1.91736, -100.358, 0.68 ) }
    dend_56 { pt3dadd( 19.6894, 0.869254, -101.575, 0.68 ) }
    dend_56 { pt3dadd( 20.5888, -0.570843, -103.046, 0.68 ) }
    dend_56 { pt3dadd( 21.4289, -1.83854, -104.217, 0.68 ) }
    dend_56 { pt3dadd( 22.5879, -3.32326, -105.524, 0.68 ) }
    dend_56 { pt3dadd( 23.6438, -4.50282, -106.522, 0.68 ) }
    dend_56 { pt3dadd( 24.5777, -5.45329, -107.287, 0.91 ) }
    dend_56 { pt3dadd( 25.9003, -6.66611, -108.264, 0.91 ) }
    dend_56 { pt3dadd( 27.0163, -7.55954, -109.053, 0.68 ) }
    dend_56 { pt3dadd( 28.6762, -8.6072, -110.123, 0.91 ) }
    dend_56 { pt3dadd( 29.6704, -9.11337, -110.69, 0.91 ) }
    dend_56 { pt3dadd( 31.1605, -9.78502, -111.492, 0.68 ) }
    dend_56 { pt3dadd( 32.7123, -10.5388, -112.399, 0.68 ) }
    dend_56 { pt3dadd( 34.1116, -11.4093, -113.381, 0.68 ) }
    dend_56 { pt3dadd( 35.0201, -12.1681, -114.246, 0.68 ) }
    dend_56 { pt3dadd( 35.7693, -13.0374, -115.258, 0.91 ) }
    dend_56 { pt3dadd( 36.6375, -14.3202, -116.763, 0.91 ) }
    dend_56 { pt3dadd( 37.4344, -15.6974, -118.405, 0.68 ) }
    dend_56 { pt3dadd( 38.124, -17.1197, -120.08, 0.68 ) }
    dend_56 { pt3dadd( 38.8975, -19.0824, -122.359, 0.68 ) }
    dend_56 { pt3dadd( 39.5467, -21.162, -124.823, 0.68 ) }
    dend_56 { pt3dadd( 40.0447, -23.0959, -127.21, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 31/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 19.5417, 10.8022, 8.18343, 0.91 ) }
    dend_52 { pt3dadd( 19.8301, 8.98913, 9.1982, 0.91 ) }
    dend_52 { pt3dadd( 20.1242, 7.47602, 9.90502, 0.91 ) }
    dend_52 { pt3dadd( 20.6173, 5.24063, 10.8, 0.91 ) }
    dend_52 { pt3dadd( 21.1564, 3.01883, 11.6554, 0.68 ) }
    dend_52 { pt3dadd( 21.6771, 1.0385, 12.3495, 0.91 ) }
    dend_52 { pt3dadd( 22.2336, -1.0704, 13.0586, 0.91 ) }
    dend_52 { pt3dadd( 22.7575, -3.28826, 13.7246, 0.68 ) }
    dend_52 { pt3dadd( 23.0922, -4.96674, 14.1354, 0.68 ) }
    dend_52 { pt3dadd( 23.3419, -6.47935, 14.4539, 0.91 ) }
    dend_52 { pt3dadd( 23.7182, -9.31131, 14.9657, 0.91 ) }
    dend_52 { pt3dadd( 23.9038, -12.0076, 15.3637, 0.46 ) }
    dend_52 { pt3dadd( 23.9073, -13.5488, 15.5504, 0.46 ) }
    dend_52 { pt3dadd( 23.786, -15.6905, 15.7545, 0.46 ) }
    dend_52 { pt3dadd( 23.6701, -17.108, 15.8632, 0.46 ) }
    dend_52 { pt3dadd( 23.5233, -18.5051, 15.9693, 0.46 ) }
    dend_52 { pt3dadd( 23.2783, -20.5767, 16.0997, 0.91 ) }
    dend_52 { pt3dadd( 23.1708, -21.651, 16.1661, 0.46 ) }
    dend_52 { pt3dadd( 23.0585, -23.3458, 16.3954, 0.91 ) }
    dend_52 { pt3dadd( 22.9926, -25.6582, 16.898, 0.68 ) }
    dend_52 { pt3dadd( 22.9734, -27.294, 17.4536, 0.91 ) }
    dend_52 { pt3dadd( 22.9827, -29.2072, 18.3065, 0.68 ) }
    dend_52 { pt3dadd( 23.0201, -30.6849, 19.0544, 0.91 ) }
    dend_52 { pt3dadd( 23.0589, -32.6671, 20.1448, 0.68 ) }
    dend_52 { pt3dadd( 23.12, -34.2821, 21.0681, 0.91 ) }
    dend_52 { pt3dadd( 23.2554, -36.7522, 22.492, 0.68 ) }
    dend_52 { pt3dadd( 23.4062, -38.6032, 23.5638, 0.91 ) }
    dend_52 { pt3dadd( 23.5846, -40.304, 24.6075, 1.14 ) }
    dend_52 { pt3dadd( 23.7822, -41.8858, 25.5216, 0.68 ) }
    dend_52 { pt3dadd( 23.9308, -42.9795, 26.0881, 0.68 ) }
    dend_52 { pt3dadd( 24.1044, -44.0127, 26.5979, 0.68 ) }
    dend_52 { pt3dadd( 24.4053, -45.5364, 27.3262, 0.91 ) }
    dend_52 { pt3dadd( 24.7475, -47.08, 28.0693, 0.46 ) }
    dend_52 { pt3dadd( 25.1715, -48.6853, 28.7992, 0.46 ) }
    dend_52 { pt3dadd( 25.4829, -49.7048, 29.2417, 0.68 ) }
    dend_52 { pt3dadd( 26.2016, -51.9247, 30.1701, 0.46 ) }
    dend_52 { pt3dadd( 26.846, -53.7933, 30.9133, 0.46 ) }
    dend_52 { pt3dadd( 27.2304, -54.8056, 31.3253, 0.91 ) }
    dend_52 { pt3dadd( 28.1275, -57.0289, 32.1842, 0.46 ) }
    dend_52 { pt3dadd( 28.7516, -58.4658, 32.7364, 0.68 ) }
    dend_52 { pt3dadd( 29.331, -59.7717, 33.2368, 0.68 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 72/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 19.5417, 10.8022, 8.18343, 1.59 ) }
    dend_45 { pt3dadd( 21.0994, 11.4792, 7.49981, 1.59 ) }
    dend_45 { pt3dadd( 22.8455, 12.2379, 6.7335, 1.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_25 (entry count 75/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -4.1593, 10.5928, -2.03375, 0.91 ) }
    dend_39 { pt3dadd( -2.84743, 10.9449, -3.45263, 0.91 ) }
    dend_39 { pt3dadd( -1.18215, 11.277, -5.11999, 0.91 ) }
    dend_39 { pt3dadd( 0.221538, 11.5225, -6.43378, 0.91 ) }
    dend_39 { pt3dadd( 1.68959, 11.7595, -7.73844, 0.91 ) }
    dend_39 { pt3dadd( 3.1609, 11.9971, -9.04599, 0.91 ) }
    dend_39 { pt3dadd( 4.40703, 12.1983, -10.1534, 0.91 ) }
    dend_39 { pt3dadd( 5.66785, 12.301, -11.2094, 0.91 ) }
    dend_39 { pt3dadd( 6.66373, 12.32, -11.9628, 0.91 ) }
    dend_39 { pt3dadd( 7.03789, 12.3182, -12.2167, 0.91 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.1593, 10.5928, -2.03375, 1.82 ) }
    dend_26 { pt3dadd( -4.94745, 11.1124, -1.03384, 1.82 ) }
    dend_26 { pt3dadd( -6.04356, 11.8349, 0.356775, 1.82 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 88/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.55886, -11.3281, 6.80019, 1.59 ) }
    dend_6 { pt3dadd( -10.2299, -12.0864, 7.60695, 1.59 ) }
    dend_6 { pt3dadd( -10.9005, -12.8442, 8.41323, 1.37 ) }
    dend_6 { pt3dadd( -11.498, -13.5193, 9.13153, 1.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 92/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.55886, -11.3281, 6.80019, 0.91 ) }
    dend_1 { pt3dadd( -11.1526, -11.362, 6.01514, 0.91 ) }
    dend_1 { pt3dadd( -13.3348, -11.5227, 4.82284, 0.68 ) }
    dend_1 { pt3dadd( -15.0229, -11.8034, 3.73014, 0.68 ) }
    dend_1 { pt3dadd( -16.2229, -12.0869, 2.7578, 0.68 ) }
    dend_1 { pt3dadd( -17.2492, -12.4093, 1.74822, 0.91 ) }
    dend_1 { pt3dadd( -18.1417, -12.6896, 0.87028, 0.91 ) }
    dend_1 { pt3dadd( -18.8737, -13.0336, -0.0109569, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -19.7474, -13.7147, -1.59564, 0.68 ) }
    dend_1 { pt3dadd( -20.277, -14.4194, -3.11782, 0.91 ) }
    dend_1 { pt3dadd( -20.5055, -14.942, -4.21212, 0.91 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 3/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 11.0356, 37.1071, 0.0, 1.14 ) }
    axon_1 { pt3dadd( 15.5167, 51.4221, 0.0, 1.14 ) }
    axon_1 { pt3dadd( 19.9977, 65.7372, 0.0, 1.14 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 6/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -19.4538, 0.0439171, -26.4441, 0.91 ) }
    dend_79 { pt3dadd( -20.4793, 0.430512, -27.0584, 0.91 ) }
    dend_79 { pt3dadd( -22.841, 0.93394, -28.3625, 0.68 ) }
    dend_79 { pt3dadd( -24.3137, 1.10493, -29.1013, 0.68 ) }
    dend_79 { pt3dadd( -25.3233, 1.17025, -29.5703, 0.68 ) }
    dend_79 { pt3dadd( -27.3551, 1.22958, -30.4209, 0.68 ) }
    dend_79 { pt3dadd( -28.5485, 1.25544, -30.8696, 0.68 ) }
    dend_79 { pt3dadd( -30.7708, 1.14397, -31.5817, 0.68 ) }
    dend_79 { pt3dadd( -31.8263, 0.999887, -31.8471, 0.68 ) }
    dend_79 { pt3dadd( -32.4452, 0.90171, -31.9681, 0.46 ) }
    dend_79 { pt3dadd( -33.8857, 0.655933, -32.2178, 0.91 ) }
    dend_79 { pt3dadd( -35.2218, 0.352298, -32.4699, 0.91 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 18/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -19.4538, 0.0439171, -26.4441, 0.68 ) }
    dend_78 { pt3dadd( -19.7281, -0.6706, -27.4086, 0.68 ) }
    dend_78 { pt3dadd( -20.0872, -1.52083, -28.6491, 0.68 ) }
    dend_78 { pt3dadd( -20.3447, -2.10515, -29.5256, 0.68 ) }
    dend_78 { pt3dadd( -21.0, -3.29051, -31.2784, 0.68 ) }
    dend_78 { pt3dadd( -21.69, -4.41628, -32.8834, 0.68 ) }
    dend_78 { pt3dadd( -22.6655, -5.98903, -34.9105, 0.68 ) }
    dend_78 { pt3dadd( -23.5104, -7.16059, -36.3357, 0.68 ) }
    dend_78 { pt3dadd( -24.5671, -8.36028, -37.6141, 0.68 ) }
    dend_78 { pt3dadd( -25.5344, -9.30828, -38.4772, 0.68 ) }
    dend_78 { pt3dadd( -26.8361, -10.4326, -39.3206, 0.68 ) }
    dend_78 { pt3dadd( -27.9386, -11.307, -39.9045, 0.68 ) }
    dend_78 { pt3dadd( -28.9439, -12.0878, -40.4385, 0.68 ) }
    dend_78 { pt3dadd( -30.3438, -13.1147, -41.0774, 0.91 ) }
    dend_78 { pt3dadd( -31.1855, -13.7366, -41.5039, 0.91 ) }
    dend_78 { pt3dadd( -31.8899, -14.3001, -41.9362, 0.68 ) }
    dend_78 { pt3dadd( -33.0816, -15.3174, -42.7216, 0.46 ) }
    dend_78 { pt3dadd( -34.0168, -16.1928, -43.4325, 0.46 ) }
    dend_78 { pt3dadd( -35.3047, -17.5725, -44.4953, 0.46 ) }
    dend_78 { pt3dadd( -36.6553, -19.1125, -45.6483, 0.46 ) }
    dend_78 { pt3dadd( -38.0064, -20.779, -46.8018, 0.46 ) }
    dend_78 { pt3dadd( -38.7726, -21.7663, -47.4686, 0.46 ) }
    dend_78 { pt3dadd( -39.8847, -23.3021, -48.4039, 0.46 ) }
    dend_78 { pt3dadd( -40.7854, -24.5654, -49.0683, 0.68 ) }
    dend_78 { pt3dadd( -41.4665, -25.5071, -49.469, 0.23 ) }
    dend_78 { pt3dadd( -42.3553, -26.6731, -49.8506, 0.23 ) }
    // Section: dend_76, id: dend_76, parent: dend_70 (entry count 44/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -22.8867, 10.2164, -30.2238, 1.37 ) }
    dend_76 { pt3dadd( -23.182, 10.2338, -30.3384, 1.37 ) }
    dend_76 { pt3dadd( -24.7579, 10.4769, -30.8536, 0.68 ) }
    dend_76 { pt3dadd( -26.3154, 10.8243, -31.329, 0.68 ) }
    dend_76 { pt3dadd( -27.7236, 11.1895, -31.712, 0.68 ) }
    dend_76 { pt3dadd( -28.5586, 11.4452, -31.9031, 0.46 ) }
    dend_76 { pt3dadd( -30.1698, 12.0005, -32.227, 0.68 ) }
    dend_76 { pt3dadd( -31.5127, 12.5664, -32.4263, 0.46 ) }
    dend_76 { pt3dadd( -32.7954, 13.2871, -32.5938, 0.91 ) }
    dend_76 { pt3dadd( -33.8657, 14.0785, -32.787, 0.68 ) }
    dend_76 { pt3dadd( -35.0527, 15.1393, -33.09, 0.68 ) }
    dend_76 { pt3dadd( -35.8709, 15.9159, -33.3757, 0.68 ) }
    dend_76 { pt3dadd( -37.15, 17.1841, -33.9333, 0.68 ) }
    dend_76 { pt3dadd( -38.5296, 18.7405, -34.7304, 0.68 ) }
    dend_76 { pt3dadd( -39.7391, 20.2724, -35.6257, 0.68 ) }
    dend_76 { pt3dadd( -40.8516, 21.8311, -36.6392, 0.68 ) }
    dend_76 { pt3dadd( -41.7893, 23.3351, -37.7481, 0.68 ) }
    dend_76 { pt3dadd( -42.2869, 24.2312, -38.4546, 0.68 ) }
    dend_76 { pt3dadd( -43.0278, 25.8126, -39.8147, 0.68 ) }
    dend_76 { pt3dadd( -43.4838, 27.041, -40.9348, 0.68 ) }
    dend_76 { pt3dadd( -43.7848, 28.1796, -42.0744, 0.68 ) }
    dend_76 { pt3dadd( -44.1958, 30.2475, -44.2015, 0.68 ) }
    dend_76 { pt3dadd( -44.3735, 31.5186, -45.5186, 0.68 ) }
    dend_76 { pt3dadd( -44.5845, 33.3479, -47.4997, 0.68 ) }
    dend_76 { pt3dadd( -44.736, 34.9237, -49.2784, 0.68 ) }
    dend_76 { pt3dadd( -44.8259, 36.9724, -51.6701, 0.68 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 70/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -22.8867, 10.2164, -30.2238, 0.68 ) }
    dend_71 { pt3dadd( -23.5136, 10.1744, -31.3601, 0.68 ) }
    dend_71 { pt3dadd( -24.3375, 10.2002, -32.6684, 0.68 ) }
    dend_71 { pt3dadd( -24.8601, 10.2167, -33.4983, 0.68 ) }
    dend_71 { pt3dadd( -25.5005, 10.2368, -34.5152, 0.68 ) }
    dend_71 { pt3dadd( -26.3582, 10.2637, -35.8773, 0.68 ) }
    dend_71 { pt3dadd( -26.878, 10.28, -36.7026, 0.68 ) }
    dend_71 { pt3dadd( -27.4027, 10.3262, -37.4738, 0.68 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 78/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 28.7756, 20.2824, -44.1544, 0.68 ) }
    dend_59 { pt3dadd( 29.8784, 20.7354, -44.2456, 0.68 ) }
    dend_59 { pt3dadd( 31.4164, 21.4331, -44.4799, 0.68 ) }
    dend_59 { pt3dadd( 32.8962, 22.0877, -44.8441, 0.91 ) }
    dend_59 { pt3dadd( 34.2196, 22.7045, -45.2241, 0.68 ) }
    dend_59 { pt3dadd( 36.1424, 23.6439, -45.9291, 0.68 ) }
    dend_59 { pt3dadd( 37.3264, 24.2369, -46.4661, 0.68 ) }
    dend_59 { pt3dadd( 38.3124, 24.7646, -47.0605, 0.46 ) }
    dend_59 { pt3dadd( 40.1621, 25.7837, -48.2444, 0.46 ) }
    dend_59 { pt3dadd( 41.0471, 26.2794, -48.8803, 0.46 ) }
    dend_59 { pt3dadd( 42.4786, 27.0427, -49.9924, 0.91 ) }
    dend_59 { pt3dadd( 43.857, 27.7021, -51.0942, 0.68 ) }
    dend_59 { pt3dadd( 45.3893, 28.3915, -52.3734, 0.68 ) }
    dend_59 { pt3dadd( 47.1202, 29.22, -53.8016, 0.68 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 92/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 28.7756, 20.2824, -44.1544, 0.68 ) }
    dend_58 { pt3dadd( 28.7432, 20.3551, -45.7389, 0.68 ) }
    dend_58 { pt3dadd( 28.71, 20.4296, -47.3654, 0.68 ) }
    dend_58 { pt3dadd( 28.6731, 20.5122, -49.1659, 0.68 ) }
    dend_58 { pt3dadd( 28.6535, 20.5561, -50.1231, 0.68 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 97/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 29.331, -59.7717, 33.2368, 0.46 ) }
    dend_54 { pt3dadd( 28.8502, -61.657, 32.889, 0.46 ) }
    dend_54 { pt3dadd( 28.4987, -63.2012, 32.8613, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_54 { pt3dadd( 27.8962, -66.0656, 33.3264, 0.23 ) }
    dend_54 { pt3dadd( 27.643, -67.2012, 33.6506, 0.46 ) }
    dend_54 { pt3dadd( 27.4121, -68.2855, 34.0554, 0.68 ) }
    dend_54 { pt3dadd( 27.1988, -69.3049, 34.5359, 0.23 ) }
    dend_54 { pt3dadd( 26.7039, -71.6215, 35.9429, 0.23 ) }
    dend_54 { pt3dadd( 26.3508, -73.4741, 37.3282, 0.23 ) }
    dend_54 { pt3dadd( 26.1302, -74.7869, 38.5344, 0.46 ) }
    dend_54 { pt3dadd( 25.9516, -75.8256, 39.5868, 0.23 ) }
    dend_54 { pt3dadd( 25.7075, -77.0754, 40.95, 0.23 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 9/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 29.331, -59.7717, 33.2368, 0.68 ) }
    dend_53 { pt3dadd( 28.2156, -59.9661, 33.2201, 0.68 ) }
    dend_53 { pt3dadd( 26.8306, -60.2074, 33.1993, 0.46 ) }
    dend_53 { pt3dadd( 24.9267, -60.5392, 33.1708, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 13/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 22.8455, 12.2379, 6.7335, 0.91 ) }
    dend_49 { pt3dadd( 23.4131, 12.0038, 7.61624, 0.91 ) }
    dend_49 { pt3dadd( 24.807, 11.4288, 9.78417, 0.91 ) }
    dend_49 { pt3dadd( 26.1136, 10.8898, 11.8162, 0.91 ) }
    dend_49 { pt3dadd( 27.1966, 10.443, 13.5007, 0.91 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 18/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 22.8455, 12.2379, 6.7335, 0.91 ) }
    dend_46 { pt3dadd( 25.2972, 11.7316, 5.3731, 0.91 ) }
    dend_46 { pt3dadd( 27.8809, 11.1524, 4.17815, 0.91 ) }
    dend_46 { pt3dadd( 29.1681, 10.9252, 3.68452, 0.91 ) }
    dend_46 { pt3dadd( 30.5486, 10.7404, 3.22462, 0.91 ) }
    dend_46 { pt3dadd( 32.6734, 10.5949, 2.60178, 0.91 ) }
    dend_46 { pt3dadd( 34.806, 10.5784, 1.9663, 0.91 ) }
    dend_46 { pt3dadd( 35.8597, 10.6658, 1.70192, 0.68 ) }
    dend_46 { pt3dadd( 37.8507, 10.9976, 1.21624, 0.68 ) }
    dend_46 { pt3dadd( 38.8842, 11.2669, 0.984979, 0.68 ) }
    dend_46 { pt3dadd( 40.5957, 11.8515, 0.657081, 0.91 ) }
    dend_46 { pt3dadd( 42.596, 12.6305, 0.406701, 0.91 ) }
    dend_46 { pt3dadd( 44.6627, 13.3534, 0.229731, 1.14 ) }
    dend_46 { pt3dadd( 45.4716, 13.5343, 0.219857, 1.14 ) }
    dend_46 { pt3dadd( 47.8338, 13.6163, 0.367818, 0.68 ) }
    dend_46 { pt3dadd( 49.9689, 13.4047, 0.628599, 0.68 ) }
    dend_46 { pt3dadd( 51.4207, 13.1191, 0.90883, 0.68 ) }
    dend_46 { pt3dadd( 53.6459, 12.5812, 1.42348, 0.91 ) }
    dend_46 { pt3dadd( 55.6393, 12.0631, 1.82983, 0.91 ) }
    dend_46 { pt3dadd( 57.3348, 11.6384, 2.07014, 0.91 ) }
    dend_46 { pt3dadd( 59.8643, 10.9897, 2.20932, 0.91 ) }
    dend_46 { pt3dadd( 62.1271, 10.4521, 2.13116, 0.91 ) }
    dend_46 { pt3dadd( 63.4137, 10.2153, 2.03593, 0.91 ) }
    dend_46 { pt3dadd( 65.3929, 9.93746, 1.86548, 0.91 ) }
    dend_46 { pt3dadd( 67.4359, 9.67378, 1.60153, 0.68 ) }
    dend_46 { pt3dadd( 70.1522, 9.29529, 1.04507, 0.68 ) }
    dend_46 { pt3dadd( 72.0838, 9.05241, 0.436826, 0.68 ) }
    dend_46 { pt3dadd( 74.1888, 8.88739, -0.417658, 0.68 ) }
    dend_46 { pt3dadd( 75.7332, 8.82263, -1.10917, 0.46 ) }
    dend_46 { pt3dadd( 77.8497, 8.77612, -2.07923, 0.68 ) }
    dend_46 { pt3dadd( 79.9096, 8.77783, -3.03287, 0.68 ) }
    dend_46 { pt3dadd( 82.7341, 8.7937, -4.22171, 0.68 ) }
    dend_46 { pt3dadd( 84.3614, 8.76795, -4.8608, 0.46 ) }
    dend_46 { pt3dadd( 86.7655, 8.63352, -5.7286, 0.91 ) }
    dend_46 { pt3dadd( 88.6304, 8.47696, -6.28325, 0.46 ) }
    dend_46 { pt3dadd( 90.4769, 8.28415, -6.62283, 0.91 ) }
    dend_46 { pt3dadd( 93.5972, 7.85977, -6.92673, 0.46 ) }
    dend_46 { pt3dadd( 95.4467, 7.54611, -7.00594, 0.46 ) }
    dend_46 { pt3dadd( 97.0334, 7.32102, -7.03135, 0.46 ) }
    dend_46 { pt3dadd( 99.2867, 7.1088, -7.02158, 0.46 ) }
    dend_46 { pt3dadd( 101.801, 6.97692, -6.9927, 0.46 ) }
    dend_46 { pt3dadd( 103.978, 6.92107, -6.88209, 0.68 ) }
    dend_46 { pt3dadd( 106.656, 6.90226, -6.67125, 0.46 ) }
    dend_46 { pt3dadd( 108.9, 6.89888, -6.45272, 0.46 ) }
    dend_46 { pt3dadd( 110.443, 6.8746, -6.31216, 0.46 ) }
    dend_46 { pt3dadd( 112.557, 6.82485, -6.14964, 0.46 ) }
    dend_46 { pt3dadd( 113.921, 6.775, -6.10004, 0.23 ) }
    dend_46 { pt3dadd( 114.91, 6.72194, -6.04713, 0.23 ) }
    dend_46 { pt3dadd( 116.766, 6.58312, -5.91932, 0.46 ) }
    dend_46 { pt3dadd( 118.994, 6.39574, -5.83292, 0.46 ) }
    dend_46 { pt3dadd( 120.716, 6.32274, -5.87678, 0.91 ) }
    dend_46 { pt3dadd( 122.054, 6.29777, -6.02693, 0.46 ) }
    dend_46 { pt3dadd( 123.942, 6.2811, -6.24137, 0.46 ) }
    dend_46 { pt3dadd( 125.29, 6.28558, -6.35599, 0.46 ) }
    dend_46 { pt3dadd( 128.117, 6.313, -6.63635, 0.68 ) }
    dend_46 { pt3dadd( 130.538, 6.40418, -6.93312, 0.46 ) }
    dend_46 { pt3dadd( 132.264, 6.4446, -7.19185, 0.46 ) }
    dend_46 { pt3dadd( 135.118, 6.50241, -7.72497, 0.46 ) }
    dend_46 { pt3dadd( 136.656, 6.572, -8.1096, 0.68 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 77/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 7.03789, 12.3182, -12.2167, 0.91 ) }
    dend_41 { pt3dadd( 9.01162, 12.2748, -13.8553, 0.91 ) }
    dend_41 { pt3dadd( 10.3301, 12.3023, -15.1478, 0.91 ) }
    dend_41 { pt3dadd( 11.1536, 12.3856, -16.1024, 0.91 ) }
    dend_41 { pt3dadd( 12.8095, 12.6919, -18.2134, 0.91 ) }
    dend_41 { pt3dadd( 14.0718, 13.0575, -19.8864, 0.91 ) }
    dend_41 { pt3dadd( 15.5769, 13.6339, -21.8123, 0.91 ) }
    dend_41 { pt3dadd( 16.6992, 14.2149, -23.4178, 0.91 ) }
    dend_41 { pt3dadd( 17.8927, 14.9942, -25.3001, 0.91 ) }
    dend_41 { pt3dadd( 18.4716, 15.4632, -26.3296, 0.91 ) }
    dend_41 { pt3dadd( 19.1504, 16.2076, -27.6664, 0.91 ) }
    dend_41 { pt3dadd( 19.9856, 17.3694, -29.2359, 1.37 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 89/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 7.03789, 12.3182, -12.2167, 0.46 ) }
    dend_40 { pt3dadd( 6.94573, 14.2764, -14.0643, 0.46 ) }
    dend_40 { pt3dadd( 6.88632, 15.5389, -15.2555, 0.46 ) }
    dend_40 { pt3dadd( 6.83684, 16.5902, -16.2475, 0.46 ) }
    dend_40 { pt3dadd( 6.81542, 17.0455, -16.677, 0.46 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 94/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -6.04356, 11.8349, 0.356775, 1.14 ) }
    dend_32 { pt3dadd( -7.29579, 12.0489, -0.0248591, 1.14 ) }
    dend_32 { pt3dadd( -10.0499, 12.5194, -0.864197, 1.14 ) }
    dend_32 { pt3dadd( -13.3376, 13.081, -1.86618, 0.91 ) }
    dend_32 { pt3dadd( -16.3429, 13.5945, -2.78208, 0.91 ) }
    dend_32 { pt3dadd( -18.2867, 13.9265, -3.37448, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_32 { pt3dadd( -19.7929, 14.1838, -3.83349, 0.91 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 1/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -6.04356, 11.8349, 0.356775, 1.37 ) }
    dend_27 { pt3dadd( -5.59848, 13.1415, -0.149861, 1.37 ) }
    dend_27 { pt3dadd( -5.12226, 14.3118, -0.817142, 1.37 ) }
    dend_27 { pt3dadd( -4.67766, 15.2634, -1.45964, 1.37 ) }
    dend_27 { pt3dadd( -3.94201, 16.6798, -2.49177, 1.14 ) }
    dend_27 { pt3dadd( -3.06379, 18.2355, -3.64225, 1.37 ) }
    dend_27 { pt3dadd( -2.52774, 19.094, -4.24734, 1.59 ) }
    dend_27 { pt3dadd( -1.67997, 20.2449, -5.07265, 0.91 ) }
    dend_27 { pt3dadd( -0.684075, 21.5172, -6.06053, 0.91 ) }
    dend_27 { pt3dadd( 0.238072, 22.589, -6.90002, 0.91 ) }
    dend_27 { pt3dadd( 1.36645, 23.7961, -7.7528, 0.91 ) }
    dend_27 { pt3dadd( 2.51099, 24.9497, -8.37479, 0.91 ) }
    dend_27 { pt3dadd( 3.85687, 26.2335, -8.91399, 0.91 ) }
    // Section: dend_14, id: dend_14, parent: dend_6 (entry count 14/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -11.498, -13.5193, 9.13153, 1.59 ) }
    dend_14 { pt3dadd( -11.9054, -14.2865, 11.0907, 1.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 16/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -11.498, -13.5193, 9.13153, 1.14 ) }
    dend_7 { pt3dadd( -12.3271, -13.9643, 8.81897, 1.14 ) }
    dend_7 { pt3dadd( -13.8653, -14.7898, 8.2391, 0.91 ) }
    dend_7 { pt3dadd( -15.7427, -15.7973, 7.53139, 0.91 ) }
    dend_7 { pt3dadd( -17.0488, -16.4982, 7.03901, 1.14 ) }
    dend_7 { pt3dadd( -18.0914, -17.0577, 6.64598, 1.14 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -20.5055, -14.942, -4.21212, 0.68 ) }
    dend_3 { pt3dadd( -20.1298, -14.8242, -6.51161, 0.68 ) }
    dend_3 { pt3dadd( -19.7352, -14.8403, -8.71155, 0.68 ) }
    dend_3 { pt3dadd( -19.5311, -14.915, -10.0313, 0.68 ) }
    dend_3 { pt3dadd( -19.4017, -15.0804, -11.6739, 0.68 ) }
    dend_3 { pt3dadd( -19.3464, -15.3748, -13.3007, 0.46 ) }
    dend_3 { pt3dadd( -19.3445, -15.8628, -15.0342, 0.46 ) }
    dend_3 { pt3dadd( -19.4134, -16.3794, -16.0121, 0.68 ) }
    dend_3 { pt3dadd( -19.6774, -17.6051, -17.5026, 0.68 ) }
    dend_3 { pt3dadd( -20.0513, -19.0355, -18.7885, 0.68 ) }
    dend_3 { pt3dadd( -20.4624, -20.4053, -19.8191, 0.68 ) }
    dend_3 { pt3dadd( -20.9873, -21.7925, -20.876, 0.91 ) }
    dend_3 { pt3dadd( -21.6046, -23.0445, -21.9783, 0.91 ) }
    dend_3 { pt3dadd( -22.4851, -24.4278, -23.3786, 0.91 ) }
    dend_3 { pt3dadd( -23.243, -25.3922, -24.459, 0.68 ) }
    dend_3 { pt3dadd( -23.8648, -26.0332, -25.3327, 0.91 ) }
    dend_3 { pt3dadd( -25.2925, -27.2472, -27.3804, 0.91 ) }
    dend_3 { pt3dadd( -26.9794, -28.441, -29.9125, 0.68 ) }
    dend_3 { pt3dadd( -27.8296, -28.9198, -31.2526, 0.91 ) }
    dend_3 { pt3dadd( -29.088, -29.4885, -33.3262, 0.68 ) }
    dend_3 { pt3dadd( -30.1522, -29.9389, -35.2174, 0.91 ) }
    dend_3 { pt3dadd( -30.6565, -30.1655, -36.0902, 0.91 ) }
    dend_3 { pt3dadd( -31.1725, -30.4253, -36.9247, 0.91 ) }
    dend_3 { pt3dadd( -31.7881, -30.721, -37.7946, 0.91 ) }
    dend_3 { pt3dadd( -32.6291, -31.1176, -38.8303, 0.68 ) }
    dend_3 { pt3dadd( -34.3284, -31.9536, -40.5538, 0.68 ) }
    dend_3 { pt3dadd( -35.6244, -32.5637, -41.7173, 0.68 ) }
    dend_3 { pt3dadd( -36.9926, -33.2126, -42.8963, 0.46 ) }
    dend_3 { pt3dadd( -38.4903, -33.9746, -44.1375, 0.91 ) }
    dend_3 { pt3dadd( -39.9586, -34.7423, -45.3566, 0.46 ) }
    dend_3 { pt3dadd( -41.6644, -35.6364, -46.809, 0.68 ) }
    dend_3 { pt3dadd( -43.9198, -36.9168, -48.7624, 0.46 ) }
    dend_3 { pt3dadd( -44.8439, -37.5086, -49.6928, 0.68 ) }
    dend_3 { pt3dadd( -46.0314, -38.3889, -51.0454, 0.46 ) }
    dend_3 { pt3dadd( -46.7639, -39.0747, -52.0091, 0.46 ) }
    dend_3 { pt3dadd( -47.5893, -40.0281, -53.2774, 0.46 ) }
    dend_3 { pt3dadd( -48.519, -41.4084, -54.9722, 0.68 ) }
    dend_3 { pt3dadd( -49.5636, -43.3732, -57.197, 0.68 ) }
    dend_3 { pt3dadd( -50.0637, -44.5351, -58.4597, 0.23 ) }
    dend_3 { pt3dadd( -50.4504, -45.7293, -59.7358, 0.46 ) }
    dend_3 { pt3dadd( -50.7034, -46.7022, -60.6989, 0.46 ) }
    dend_3 { pt3dadd( -51.0275, -48.1936, -62.0984, 0.46 ) }
    dend_3 { pt3dadd( -51.2395, -49.3013, -63.0927, 0.46 ) }
    dend_3 { pt3dadd( -51.4522, -50.5312, -64.1251, 0.68 ) }
    dend_3 { pt3dadd( -51.6857, -51.772, -65.2513, 0.23 ) }
    dend_3 { pt3dadd( -51.9394, -52.8774, -66.2937, 0.46 ) }
    dend_3 { pt3dadd( -52.2335, -54.0069, -67.3355, 0.23 ) }
    dend_3 { pt3dadd( -52.4401, -54.6681, -67.9339, 0.68 ) }
    dend_3 { pt3dadd( -53.078, -56.2386, -69.3668, 0.46 ) }
    dend_3 { pt3dadd( -53.7807, -57.696, -70.7648, 0.46 ) }
    dend_3 { pt3dadd( -54.2681, -58.604, -71.6554, 0.46 ) }
    dend_3 { pt3dadd( -54.7161, -59.3961, -72.4951, 0.46 ) }
    dend_3 { pt3dadd( -55.206, -60.2023, -73.3711, 0.46 ) }
    dend_3 { pt3dadd( -56.0212, -61.5123, -74.7587, 0.91 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 76/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -20.5055, -14.942, -4.21212, 0.46 ) }
    dend_2 { pt3dadd( -21.7563, -15.5532, -4.79003, 0.46 ) }
    dend_2 { pt3dadd( -22.8053, -16.0444, -5.32124, 0.46 ) }
    dend_2 { pt3dadd( -23.6596, -16.448, -5.78853, 0.46 ) }
    dend_2 { pt3dadd( -24.7079, -16.991, -6.37837, 0.23 ) }
    dend_2 { pt3dadd( -25.9146, -17.6648, -7.05561, 0.23 ) }
    dend_2 { pt3dadd( -26.9698, -18.3099, -7.66112, 0.23 ) }
    dend_2 { pt3dadd( -27.7415, -18.8142, -8.11007, 0.46 ) }
    dend_2 { pt3dadd( -28.4805, -19.3201, -8.55154, 0.46 ) }
    dend_2 { pt3dadd( -29.4734, -20.0289, -9.20201, 0.23 ) }
    dend_2 { pt3dadd( -30.0155, -20.4364, -9.58721, 0.46 ) }
    dend_2 { pt3dadd( -30.8509, -21.2018, -10.2092, 0.46 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 88/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -35.2218, 0.352298, -32.4699, 0.46 ) }
    dend_85 { pt3dadd( -37.5708, 0.126026, -33.0601, 0.46 ) }
    dend_85 { pt3dadd( -39.4342, -0.144215, -33.589, 0.46 ) }
    dend_85 { pt3dadd( -41.2205, -0.368094, -34.0822, 0.68 ) }
    dend_85 { pt3dadd( -44.2888, -0.620147, -34.8852, 0.91 ) }
    dend_85 { pt3dadd( -46.7861, -0.743496, -35.5814, 0.46 ) }
    dend_85 { pt3dadd( -49.2162, -0.828058, -36.2882, 0.46 ) }
    dend_85 { pt3dadd( -52.5698, -1.00782, -37.3522, 0.68 ) }
    dend_85 { pt3dadd( -54.3544, -1.14244, -37.9225, 0.46 ) }
    dend_85 { pt3dadd( -57.0291, -1.31989, -38.7398, 0.68 ) }
    dend_85 { pt3dadd( -59.8962, -1.51904, -39.5002, 0.68 ) }
    dend_85 { pt3dadd( -62.1005, -1.63579, -39.9449, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_85 { pt3dadd( -64.9392, -1.77337, -40.3549, 0.46 ) }
    dend_85 { pt3dadd( -66.7916, -1.87264, -40.5634, 0.68 ) }
    dend_85 { pt3dadd( -68.7324, -1.9876, -40.7211, 0.68 ) }
    dend_85 { pt3dadd( -71.0747, -2.09721, -40.7979, 0.46 ) }
    dend_85 { pt3dadd( -73.7887, -2.13444, -40.7327, 0.46 ) }
    dend_85 { pt3dadd( -76.0716, -2.06019, -40.578, 0.68 ) }
    dend_85 { pt3dadd( -77.3096, -1.95373, -40.5031, 0.68 ) }
    dend_85 { pt3dadd( -78.9962, -1.75152, -40.4837, 0.46 ) }
    dend_85 { pt3dadd( -80.54, -1.48825, -40.5796, 0.46 ) }
    dend_85 { pt3dadd( -81.1256, -1.33417, -40.691, 0.46 ) }
    dend_85 { pt3dadd( -83.2662, -0.636663, -41.4021, 0.46 ) }
    dend_85 { pt3dadd( -84.9121, -0.0156263, -42.0711, 0.68 ) }
    dend_85 { pt3dadd( -87.3128, 0.986655, -43.1451, 0.46 ) }
    dend_85 { pt3dadd( -89.0346, 1.75322, -44.0448, 0.91 ) }
    dend_85 { pt3dadd( -91.4069, 2.8404, -45.3836, 0.46 ) }
    dend_85 { pt3dadd( -92.6978, 3.45075, -46.1921, 0.46 ) }
    dend_85 { pt3dadd( -93.8021, 3.98017, -46.9842, 0.68 ) }
    dend_85 { pt3dadd( -95.5777, 4.77555, -48.2443, 0.23 ) }
    dend_85 { pt3dadd( -97.7909, 5.71474, -49.8673, 0.23 ) }
    dend_85 { pt3dadd( -99.5133, 6.33497, -51.1186, 0.68 ) }
    dend_85 { pt3dadd( -101.491, 6.95882, -52.4598, 0.46 ) }
    dend_85 { pt3dadd( -103.621, 7.53233, -53.7787, 0.46 ) }
    dend_85 { pt3dadd( -105.208, 7.88812, -54.6995, 0.46 ) }
    dend_85 { pt3dadd( -106.38, 8.08061, -55.3288, 0.46 ) }
    dend_85 { pt3dadd( -109.045, 8.47392, -56.5756, 0.46 ) }
    dend_85 { pt3dadd( -111.029, 8.70374, -57.3958, 0.46 ) }
    dend_85 { pt3dadd( -112.816, 8.82157, -57.953, 0.68 ) }
    dend_85 { pt3dadd( -113.759, 8.84227, -58.1766, 0.23 ) }
    dend_85 { pt3dadd( -115.619, 8.78981, -58.6162, 0.68 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -35.2218, 0.352298, -32.4699, 0.46 ) }
    dend_80 { pt3dadd( -37.0241, 1.39901, -32.6741, 0.46 ) }
    dend_80 { pt3dadd( -39.0462, 2.64055, -33.1718, 0.46 ) }
    dend_80 { pt3dadd( -40.8755, 3.88512, -33.9229, 0.46 ) }
    dend_80 { pt3dadd( -42.0331, 4.65966, -34.4792, 0.68 ) }
    dend_80 { pt3dadd( -43.555, 5.6403, -35.3035, 0.23 ) }
    dend_80 { pt3dadd( -44.7489, 6.42017, -36.0772, 0.68 ) }
    dend_80 { pt3dadd( -46.1661, 7.38683, -37.2532, 0.46 ) }
    dend_80 { pt3dadd( -47.4156, 8.20635, -38.6042, 0.46 ) }
    dend_80 { pt3dadd( -48.4619, 8.88353, -40.1741, 0.68 ) }
    dend_80 { pt3dadd( -49.682, 9.55312, -42.3768, 0.46 ) }
    dend_80 { pt3dadd( -50.8077, 9.9888, -44.6747, 0.46 ) }
    dend_80 { pt3dadd( -51.3065, 10.1113, -45.7266, 0.91 ) }
    dend_80 { pt3dadd( -52.8465, 10.4121, -49.1095, 0.91 ) }
    dend_80 { pt3dadd( -54.5776, 10.7334, -52.8388, 0.91 ) }
    dend_80 { pt3dadd( -55.2555, 10.8394, -54.4522, 0.91 ) }
    dend_80 { pt3dadd( -56.602, 10.9505, -57.8022, 0.91 ) }
    dend_80 { pt3dadd( -57.7643, 10.9672, -60.5584, 0.91 ) }
    dend_80 { pt3dadd( -58.7419, 10.9667, -62.8007, 0.91 ) }
    dend_80 { pt3dadd( -59.9094, 11.118, -65.1121, 0.91 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 49/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -27.4027, 10.3262, -37.4738, 0.46 ) }
    dend_73 { pt3dadd( -29.3286, 11.82, -38.5954, 0.46 ) }
    dend_73 { pt3dadd( -30.526, 13.1632, -40.0983, 0.91 ) }
    dend_73 { pt3dadd( -31.9648, 14.85, -41.6835, 0.46 ) }
    dend_73 { pt3dadd( -32.9731, 16.0322, -42.7944, 0.46 ) }
    dend_73 { pt3dadd( -34.308, 17.5972, -44.2651, 0.46 ) }
    dend_73 { pt3dadd( -35.6954, 19.2238, -45.7936, 0.46 ) }
    dend_73 { pt3dadd( -37.447, 21.583, -48.7183, 0.46 ) }
    dend_73 { pt3dadd( -38.8086, 24.3086, -52.5643, 0.46 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 58/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -27.4027, 10.3262, -37.4738, 0.46 ) }
    dend_72 { pt3dadd( -29.015, 7.82109, -36.1594, 0.46 ) }
    dend_72 { pt3dadd( -29.8477, 6.52741, -35.4806, 0.46 ) }
    dend_72 { pt3dadd( -31.455, 4.03001, -34.1703, 0.46 ) }
    dend_72 { pt3dadd( -33.5559, 0.765684, -32.4575, 0.46 ) }
    // Section: dend_63, id: dend_63, parent: dend_59 (entry count 63/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 47.1202, 29.22, -53.8016, 0.46 ) }
    dend_63 { pt3dadd( 48.2897, 29.9215, -54.1653, 0.46 ) }
    dend_63 { pt3dadd( 48.9376, 30.3077, -54.3605, 0.46 ) }
    dend_63 { pt3dadd( 50.1015, 30.9881, -54.7648, 0.68 ) }
    dend_63 { pt3dadd( 51.7752, 31.8969, -55.3768, 0.46 ) }
    dend_63 { pt3dadd( 53.5941, 32.8253, -56.0845, 0.68 ) }
    dend_63 { pt3dadd( 55.4938, 33.7855, -56.8299, 0.46 ) }
    dend_63 { pt3dadd( 56.5026, 34.2639, -57.2554, 0.68 ) }
    dend_63 { pt3dadd( 58.0708, 34.9828, -57.9299, 0.46 ) }
    dend_63 { pt3dadd( 59.7321, 35.7098, -58.6144, 0.68 ) }
    dend_63 { pt3dadd( 61.5162, 36.4367, -59.259, 0.46 ) }
    dend_63 { pt3dadd( 62.5849, 36.835, -59.6062, 0.46 ) }
    dend_63 { pt3dadd( 64.6388, 37.5634, -60.1971, 0.46 ) }
    dend_63 { pt3dadd( 65.5252, 37.8786, -60.407, 0.46 ) }
    dend_63 { pt3dadd( 66.64, 38.2516, -60.5972, 0.68 ) }
    dend_63 { pt3dadd( 68.2598, 38.7506, -60.8527, 0.46 ) }
    dend_63 { pt3dadd( 69.8503, 39.1597, -61.0724, 0.91 ) }
    dend_63 { pt3dadd( 71.1844, 39.4685, -61.2531, 0.46 ) }
    dend_63 { pt3dadd( 72.6391, 39.786, -61.4343, 0.46 ) }
    dend_63 { pt3dadd( 74.0478, 40.0673, -61.6385, 0.23 ) }
    dend_63 { pt3dadd( 75.7864, 40.3645, -61.9221, 0.23 ) }
    dend_63 { pt3dadd( 77.4237, 40.5755, -62.192, 0.68 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 85/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 47.1202, 29.22, -53.8016, 0.68 ) }
    dend_60 { pt3dadd( 48.4689, 29.0479, -53.6089, 0.68 ) }
    dend_60 { pt3dadd( 49.212, 28.9643, -53.4927, 0.68 ) }
    dend_60 { pt3dadd( 50.3716, 28.8366, -53.2956, 0.68 ) }
    dend_60 { pt3dadd( 52.2787, 28.68, -52.9532, 0.46 ) }
    dend_60 { pt3dadd( 52.7689, 28.6396, -52.8768, 0.46 ) }
    dend_60 { pt3dadd( 53.9404, 28.5645, -52.71, 0.68 ) }
    dend_60 { pt3dadd( 55.1184, 28.5247, -52.5659, 0.46 ) }
    dend_60 { pt3dadd( 56.1627, 28.4881, -52.5038, 0.91 ) }
    dend_60 { pt3dadd( 58.0079, 28.3784, -52.562, 0.23 ) }
    dend_60 { pt3dadd( 59.5611, 28.2549, -52.7506, 0.23 ) }
    dend_60 { pt3dadd( 60.4915, 28.1778, -52.945, 0.23 ) }
    dend_60 { pt3dadd( 61.5318, 28.0931, -53.2578, 0.68 ) }
    dend_60 { pt3dadd( 63.018, 27.9613, -53.7824, 0.46 ) }
    dend_60 { pt3dadd( 64.2682, 27.8357, -54.2366, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_60 { pt3dadd( 65.0918, 27.7293, -54.5248, 0.68 ) }
    dend_60 { pt3dadd( 67.1844, 27.4145, -55.1455, 0.23 ) }
    dend_60 { pt3dadd( 68.6056, 27.1909, -55.384, 0.68 ) }
    dend_60 { pt3dadd( 69.9546, 26.9643, -55.3902, 0.46 ) }
    dend_60 { pt3dadd( 71.2581, 26.7685, -55.1641, 0.46 ) }
    dend_60 { pt3dadd( 72.3118, 26.618, -54.8196, 0.23 ) }
    dend_60 { pt3dadd( 73.3464, 26.4558, -54.4101, 0.46 ) }
    dend_60 { pt3dadd( 75.8013, 26.0134, -53.3278, 0.46 ) }
    dend_60 { pt3dadd( 77.4405, 25.7067, -52.5954, 0.23 ) }
    dend_60 { pt3dadd( 79.0458, 25.4246, -51.9779, 0.23 ) }
    dend_60 { pt3dadd( 80.2916, 25.2224, -51.6198, 0.91 ) }
    dend_60 { pt3dadd( 82.3498, 24.9296, -51.2233, 0.46 ) }
    dend_60 { pt3dadd( 83.8774, 24.7576, -51.0536, 0.23 ) }
    dend_60 { pt3dadd( 84.3162, 24.7109, -51.0378, 0.68 ) }
    dend_60 { pt3dadd( 86.9247, 24.4864, -50.9927, 0.23 ) }
    dend_60 { pt3dadd( 88.8696, 24.3097, -51.0231, 0.46 ) }
    dend_60 { pt3dadd( 91.1223, 24.1106, -51.1226, 0.23 ) }
    dend_60 { pt3dadd( 93.3117, 23.916, -51.2422, 0.23 ) }
    dend_60 { pt3dadd( 94.9618, 23.7089, -51.3767, 0.23 ) }
    dend_60 { pt3dadd( 95.829, 23.5551, -51.4779, 0.46 ) }
    dend_60 { pt3dadd( 97.4846, 23.0908, -51.7791, 0.23 ) }
    dend_60 { pt3dadd( 99.196, 22.5031, -52.1619, 0.46 ) }
    dend_60 { pt3dadd( 100.378, 21.9848, -52.5199, 0.23 ) }
    dend_60 { pt3dadd( 102.126, 21.0154, -53.2025, 0.23 ) }
    dend_60 { pt3dadd( 102.606, 20.7109, -53.4223, 0.46 ) }
    dend_60 { pt3dadd( 104.025, 19.6702, -54.1203, 0.46 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 27.1966, 10.443, 13.5007, 0.46 ) }
    dend_51 { pt3dadd( 26.4004, 11.2101, 14.2213, 0.46 ) }
    dend_51 { pt3dadd( 25.1302, 12.4306, 15.484, 0.46 ) }
    dend_51 { pt3dadd( 24.5174, 12.9248, 16.1946, 0.46 ) }
    dend_51 { pt3dadd( 23.5546, 13.4553, 17.4022, 0.46 ) }
    dend_51 { pt3dadd( 22.8447, 13.4885, 18.3495, 0.46 ) }
    dend_51 { pt3dadd( 22.3301, 13.2112, 19.1186, 0.46 ) }
    dend_51 { pt3dadd( 21.9981, 12.7982, 19.7408, 0.46 ) }
    dend_51 { pt3dadd( 21.4649, 11.786, 20.8568, 0.46 ) }
    dend_51 { pt3dadd( 21.0453, 10.8873, 21.6643, 0.46 ) }
    dend_51 { pt3dadd( 20.4365, 9.45482, 22.8759, 0.46 ) }
    dend_51 { pt3dadd( 19.8227, 7.92205, 24.1101, 0.46 ) }
    dend_51 { pt3dadd( 19.3091, 6.70184, 25.0423, 0.46 ) }
    dend_51 { pt3dadd( 18.5032, 4.89071, 26.4188, 0.46 ) }
    dend_51 { pt3dadd( 17.9894, 3.64146, 27.3076, 0.46 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 41/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 27.1966, 10.443, 13.5007, 0.68 ) }
    dend_50 { pt3dadd( 27.2411, 11.1657, 13.8889, 0.68 ) }
    dend_50 { pt3dadd( 27.2849, 12.357, 14.1279, 0.68 ) }
    dend_50 { pt3dadd( 27.3762, 13.8515, 14.499, 0.68 ) }
    dend_50 { pt3dadd( 27.5505, 14.8129, 14.9878, 0.68 ) }
    dend_50 { pt3dadd( 27.928, 15.9265, 15.9832, 0.91 ) }
    dend_50 { pt3dadd( 28.5652, 17.2596, 17.3864, 0.68 ) }
    dend_50 { pt3dadd( 29.1606, 18.5028, 18.778, 0.68 ) }
    dend_50 { pt3dadd( 29.8273, 19.6859, 20.3289, 0.68 ) }
    dend_50 { pt3dadd( 31.1346, 21.367, 23.026, 0.68 ) }
    dend_50 { pt3dadd( 32.1004, 22.1686, 24.9196, 0.68 ) }
    dend_50 { pt3dadd( 33.0314, 22.637, 26.6843, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 136.656, 6.572, -8.1096, 0.46 ) }
    dend_48 { pt3dadd( 136.679, 5.67678, -6.86858, 0.46 ) }
    dend_48 { pt3dadd( 136.698, 4.5127, -5.26664, 0.46 ) }
    dend_48 { pt3dadd( 136.776, 3.68193, -4.15111, 0.23 ) }
    dend_48 { pt3dadd( 136.883, 2.54693, -2.62708, 0.23 ) }
    dend_48 { pt3dadd( 136.962, 1.71254, -1.50669, 0.23 ) }
    dend_48 { pt3dadd( 137.017, 1.12774, -0.721438, 0.23 ) }
    dend_48 { pt3dadd( 137.144, 0.317664, 0.349762, 0.23 ) }
    dend_48 { pt3dadd( 137.323, -0.935482, 1.97836, 0.46 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 62/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 136.656, 6.572, -8.1096, 0.46 ) }
    dend_47 { pt3dadd( 139.064, 7.45553, -8.7399, 0.46 ) }
    dend_47 { pt3dadd( 139.765, 7.71258, -8.92328, 0.46 ) }
    dend_47 { pt3dadd( 141.358, 8.29712, -9.3403, 0.68 ) }
    dend_47 { pt3dadd( 142.953, 8.88237, -9.75782, 0.46 ) }
    dend_47 { pt3dadd( 145.214, 9.71185, -10.3496, 0.46 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 68/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 19.9856, 17.3694, -29.2359, 0.46 ) }
    dend_43 { pt3dadd( 21.3517, 17.7599, -30.2872, 0.46 ) }
    dend_43 { pt3dadd( 22.9291, 18.3276, -31.531, 0.68 ) }
    dend_43 { pt3dadd( 24.6356, 19.0555, -33.0699, 0.68 ) }
    dend_43 { pt3dadd( 25.7461, 19.5823, -34.1947, 0.68 ) }
    dend_43 { pt3dadd( 27.441, 20.4947, -36.1296, 0.91 ) }
    dend_43 { pt3dadd( 28.6637, 21.2747, -37.7409, 0.68 ) }
    dend_43 { pt3dadd( 29.7295, 22.1825, -39.5322, 0.46 ) }
    dend_43 { pt3dadd( 30.5791, 23.2351, -41.4351, 0.68 ) }
    dend_43 { pt3dadd( 31.2321, 24.4597, -43.5443, 1.14 ) }
    dend_43 { pt3dadd( 31.6156, 25.6621, -45.5465, 0.91 ) }
    dend_43 { pt3dadd( 31.8069, 26.9317, -47.6085, 0.68 ) }
    dend_43 { pt3dadd( 31.8634, 27.7804, -48.9528, 0.68 ) }
    dend_43 { pt3dadd( 31.9211, 28.881, -50.6344, 0.91 ) }
    dend_43 { pt3dadd( 32.0435, 30.0513, -52.3865, 0.91 ) }
    dend_43 { pt3dadd( 32.1659, 30.9386, -53.6973, 0.68 ) }
    dend_43 { pt3dadd( 32.3681, 31.9831, -55.3298, 0.68 ) }
    dend_43 { pt3dadd( 32.639, 32.9058, -57.0242, 0.68 ) }
    dend_43 { pt3dadd( 32.8434, 33.367, -58.1249, 0.68 ) }
    dend_43 { pt3dadd( 33.2429, 34.0783, -60.3196, 0.68 ) }
    dend_43 { pt3dadd( 33.4536, 34.4482, -61.6433, 0.68 ) }
    dend_43 { pt3dadd( 33.6873, 34.7974, -63.1827, 0.68 ) }
    dend_43 { pt3dadd( 33.9389, 35.1924, -65.3074, 0.68 ) }
    dend_43 { pt3dadd( 34.1256, 35.6833, -68.0474, 0.68 ) }
    dend_43 { pt3dadd( 34.1672, 36.0909, -70.0818, 0.68 ) }
    dend_43 { pt3dadd( 34.1591, 36.7985, -73.3493, 0.68 ) }
    dend_43 { pt3dadd( 34.168, 37.3502, -75.813, 0.68 ) }
    dend_43 { pt3dadd( 34.2059, 37.988, -78.6929, 0.68 ) }
    dend_43 { pt3dadd( 34.2592, 38.5899, -81.6786, 0.68 ) }
    dend_43 { pt3dadd( 34.3299, 39.0032, -84.4379, 0.68 ) }
    dend_43 { pt3dadd( 34.4716, 39.2075, -87.1431, 0.68 ) }
    dend_43 { pt3dadd( 34.6693, 39.366, -90.55, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_43 { pt3dadd( 34.9497, 39.4739, -94.2154, 0.68 ) }
    dend_43 { pt3dadd( 35.4071, 39.4659, -97.9968, 0.68 ) }
    dend_43 { pt3dadd( 36.0359, 39.2316, -101.571, 0.68 ) }
    dend_43 { pt3dadd( 36.5328, 38.8911, -103.878, 0.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 4/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 19.9856, 17.3694, -29.2359, 0.68 ) }
    dend_42 { pt3dadd( 20.9308, 16.4817, -32.2604, 0.68 ) }
    dend_42 { pt3dadd( 21.8688, 15.9116, -34.8639, 0.68 ) }
    dend_42 { pt3dadd( 22.7967, 15.5314, -37.0085, 0.68 ) }
    dend_42 { pt3dadd( 23.8486, 15.1909, -39.1793, 0.68 ) }
    dend_42 { pt3dadd( 25.042, 14.9782, -41.3246, 0.46 ) }
    dend_42 { pt3dadd( 26.007, 14.8959, -42.8873, 0.46 ) }
    dend_42 { pt3dadd( 27.4834, 14.9286, -44.8343, 0.46 ) }
    dend_42 { pt3dadd( 28.3263, 15.025, -45.8809, 0.68 ) }
    dend_42 { pt3dadd( 28.8911, 15.1716, -46.6367, 0.68 ) }
    dend_42 { pt3dadd( 30.2949, 15.731, -48.7878, 0.46 ) }
    dend_42 { pt3dadd( 31.3373, 16.2023, -50.5415, 0.68 ) }
    dend_42 { pt3dadd( 32.7893, 16.8169, -53.3552, 0.68 ) }
    dend_42 { pt3dadd( 33.4894, 17.1164, -55.1806, 0.68 ) }
    dend_42 { pt3dadd( 34.0797, 17.4555, -57.5326, 0.68 ) }
    dend_42 { pt3dadd( 34.3501, 17.7044, -59.2691, 0.68 ) }
    dend_42 { pt3dadd( 34.5357, 18.0174, -61.6668, 0.68 ) }
    dend_42 { pt3dadd( 34.6711, 18.3851, -64.9286, 0.68 ) }
    dend_42 { pt3dadd( 34.7855, 18.6431, -68.43, 0.68 ) }
    dend_42 { pt3dadd( 34.9304, 18.6693, -71.0086, 0.68 ) }
    dend_42 { pt3dadd( 35.0425, 18.6286, -72.0536, 0.68 ) }
    dend_42 { pt3dadd( 35.2692, 18.512, -73.5231, 0.68 ) }
    dend_42 { pt3dadd( 35.836, 18.2345, -76.6126, 0.68 ) }
    dend_42 { pt3dadd( 36.8775, 17.7937, -80.7188, 0.68 ) }
    dend_42 { pt3dadd( 38.0928, 17.2464, -84.6117, 0.68 ) }
    dend_42 { pt3dadd( 39.2161, 16.6525, -87.9754, 0.68 ) }
    dend_42 { pt3dadd( 40.3823, 15.9491, -91.5088, 0.68 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 31/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -19.7929, 14.1838, -3.83349, 0.68 ) }
    dend_34 { pt3dadd( -20.5037, 13.5286, -4.47942, 0.68 ) }
    dend_34 { pt3dadd( -21.5382, 12.8371, -5.18751, 0.68 ) }
    dend_34 { pt3dadd( -23.087, 12.0104, -6.04364, 0.68 ) }
    dend_34 { pt3dadd( -24.1901, 11.4215, -6.65347, 0.68 ) }
    dend_34 { pt3dadd( -25.6395, 10.6478, -7.45465, 0.68 ) }
    dend_34 { pt3dadd( -26.6229, 10.1229, -7.99825, 0.68 ) }
    dend_34 { pt3dadd( -27.9273, 9.41584, -8.76582, 0.91 ) }
    dend_34 { pt3dadd( -28.5158, 9.15829, -9.0585, 0.91 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 40/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -19.7929, 14.1838, -3.83349, 0.91 ) }
    dend_33 { pt3dadd( -19.5805, 15.1077, -5.08034, 0.91 ) }
    dend_33 { pt3dadd( -19.3492, 16.7683, -7.09811, 0.68 ) }
    dend_33 { pt3dadd( -19.2497, 18.2607, -8.69456, 0.68 ) }
    dend_33 { pt3dadd( -19.1967, 19.9395, -10.4057, 0.68 ) }
    dend_33 { pt3dadd( -19.1796, 21.0376, -11.5089, 0.68 ) }
    dend_33 { pt3dadd( -19.2143, 21.9256, -12.3975, 0.68 ) }
    dend_33 { pt3dadd( -19.3814, 23.6529, -14.1343, 0.91 ) }
    dend_33 { pt3dadd( -19.7144, 25.469, -15.8533, 0.91 ) }
    dend_33 { pt3dadd( -19.9504, 26.3779, -16.6612, 0.91 ) }
    dend_33 { pt3dadd( -20.6573, 28.4944, -18.4801, 0.91 ) }
    dend_33 { pt3dadd( -21.5156, 30.827, -20.5338, 0.68 ) }
    dend_33 { pt3dadd( -22.051, 32.2367, -21.8469, 0.68 ) }
    dend_33 { pt3dadd( -22.4831, 33.4269, -23.0285, 0.91 ) }
    dend_33 { pt3dadd( -22.8812, 34.6754, -24.3339, 0.68 ) }
    dend_33 { pt3dadd( -23.1956, 36.0327, -25.861, 0.91 ) }
    dend_33 { pt3dadd( -23.3578, 37.5141, -27.8097, 0.91 ) }
    dend_33 { pt3dadd( -23.3505, 38.5843, -29.4489, 0.91 ) }
    dend_33 { pt3dadd( -23.2779, 40.0237, -31.9154, 0.68 ) }
    dend_33 { pt3dadd( -23.1866, 41.298, -34.3361, 0.68 ) }
    dend_33 { pt3dadd( -23.1645, 42.451, -36.7212, 0.91 ) }
    dend_33 { pt3dadd( -23.285, 43.914, -40.1973, 0.91 ) }
    dend_33 { pt3dadd( -23.5781, 45.1005, -43.3552, 0.91 ) }
    dend_33 { pt3dadd( -23.7936, 45.6573, -44.8972, 0.68 ) }
    dend_33 { pt3dadd( -24.2842, 46.5569, -47.465, 0.68 ) }
    dend_33 { pt3dadd( -24.828, 47.317, -49.8353, 0.68 ) }
    dend_33 { pt3dadd( -25.566, 48.1926, -52.6974, 0.68 ) }
    dend_33 { pt3dadd( -26.4352, 49.0587, -55.7543, 0.68 ) }
    dend_33 { pt3dadd( -26.8929, 49.4391, -57.2989, 0.91 ) }
    dend_33 { pt3dadd( -28.3079, 50.3418, -61.2481, 0.91 ) }
    dend_33 { pt3dadd( -29.8641, 51.0708, -64.8263, 0.91 ) }
    dend_33 { pt3dadd( -31.7204, 51.6792, -68.4893, 0.91 ) }
    dend_33 { pt3dadd( -33.237, 51.9176, -71.0606, 0.91 ) }
    dend_33 { pt3dadd( -34.7544, 51.8922, -73.2389, 0.91 ) }
    dend_33 { pt3dadd( -37.1924, 51.4475, -76.3768, 0.68 ) }
    dend_33 { pt3dadd( -39.0773, 50.8113, -78.4347, 0.68 ) }
    dend_33 { pt3dadd( -41.0817, 49.8581, -80.3212, 0.68 ) }
    dend_33 { pt3dadd( -43.2335, 48.5637, -82.157, 0.68 ) }
    dend_33 { pt3dadd( -45.1617, 47.2306, -83.7966, 0.68 ) }
    dend_33 { pt3dadd( -47.2278, 45.6159, -85.561, 0.68 ) }
    dend_33 { pt3dadd( -49.8991, 43.1735, -87.9882, 0.68 ) }
    dend_33 { pt3dadd( -51.7854, 41.3701, -89.5495, 0.23 ) }
    dend_33 { pt3dadd( -53.4668, 39.7988, -90.7766, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 3.85687, 26.2335, -8.91399, 0.68 ) }
    dend_31 { pt3dadd( 3.98623, 25.6324, -7.01551, 0.68 ) }
    dend_31 { pt3dadd( 4.20777, 25.1529, -5.47625, 0.68 ) }
    dend_31 { pt3dadd( 4.67551, 24.4781, -3.00345, 0.68 ) }
    dend_31 { pt3dadd( 4.97674, 24.0863, -1.39792, 0.68 ) }
    dend_31 { pt3dadd( 5.28391, 23.69, 0.307331, 0.68 ) }
    dend_31 { pt3dadd( 5.42692, 23.5185, 1.04671, 0.68 ) }
    dend_31 { pt3dadd( 5.68876, 23.1724, 2.24518, 0.68 ) }
    dend_31 { pt3dadd( 6.02443, 22.8152, 3.43413, 0.68 ) }
    dend_31 { pt3dadd( 6.37876, 22.549, 4.409, 0.68 ) }
    dend_31 { pt3dadd( 6.93929, 22.1889, 6.04013, 0.68 ) }
    dend_31 { pt3dadd( 7.45197, 21.8197, 7.90836, 0.68 ) }
    dend_31 { pt3dadd( 7.96719, 21.3796, 10.04, 0.68 ) }
    dend_31 { pt3dadd( 8.22233, 21.1113, 11.1892, 0.68 ) }
    dend_31 { pt3dadd( 8.49327, 20.8398, 12.2457, 0.68 ) }
    dend_31 { pt3dadd( 8.98752, 20.4549, 13.8918, 0.68 ) }
    dend_31 { pt3dadd( 9.53927, 20.1544, 15.8553, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 0/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 3.85687, 26.2335, -8.91399, 0.68 ) }
    dend_28 { pt3dadd( 5.48581, 26.4019, -9.36061, 0.68 ) }
    dend_28 { pt3dadd( 6.50082, 26.5068, -9.6389, 0.68 ) }
    dend_28 { pt3dadd( 7.86225, 26.6476, -10.0122, 0.68 ) }
    dend_28 { pt3dadd( 8.62384, 26.7263, -10.221, 0.68 ) }
    // Section: dend_22, id: dend_22, parent: dend_14 (entry count 5/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -11.9054, -14.2865, 11.0907, 0.68 ) }
    dend_22 { pt3dadd( -12.4529, -13.4237, 11.9222, 0.68 ) }
    dend_22 { pt3dadd( -13.6787, -11.257, 13.7698, 0.68 ) }
    dend_22 { pt3dadd( -14.4137, -9.80724, 14.9991, 0.68 ) }
    dend_22 { pt3dadd( -14.9385, -8.5766, 16.0345, 0.68 ) }
    dend_22 { pt3dadd( -15.3965, -7.35736, 17.0614, 0.68 ) }
    dend_22 { pt3dadd( -16.0423, -5.82013, 18.3787, 0.68 ) }
    dend_22 { pt3dadd( -16.4319, -5.05706, 19.0164, 0.46 ) }
    dend_22 { pt3dadd( -16.87, -4.20047, 19.7129, 0.46 ) }
    dend_22 { pt3dadd( -17.2936, -3.27847, 20.5374, 0.46 ) }
    dend_22 { pt3dadd( -17.6589, -2.53249, 21.364, 0.46 ) }
    dend_22 { pt3dadd( -18.3798, -1.20445, 22.9386, 0.46 ) }
    dend_22 { pt3dadd( -18.8703, -0.249049, 24.1733, 0.46 ) }
    dend_22 { pt3dadd( -19.3379, 1.0149, 25.7178, 0.46 ) }
    dend_22 { pt3dadd( -19.274, 2.81434, 27.1545, 0.46 ) }
    dend_22 { pt3dadd( -17.9212, 4.70623, 27.7748, 0.46 ) }
    dend_22 { pt3dadd( -14.6996, 7.98944, 28.2341, 0.46 ) }
    dend_22 { pt3dadd( -13.5944, 9.07712, 28.3674, 0.46 ) }
    dend_22 { pt3dadd( -12.4076, 10.2939, 28.5148, 0.46 ) }
    dend_22 { pt3dadd( -10.8164, 12.1397, 28.748, 0.46 ) }
    dend_22 { pt3dadd( -9.12609, 14.4418, 29.0914, 0.46 ) }
    dend_22 { pt3dadd( -7.70357, 16.6623, 29.5314, 0.46 ) }
    dend_22 { pt3dadd( -6.88353, 18.0886, 29.9156, 0.46 ) }
    dend_22 { pt3dadd( -5.93282, 19.7366, 30.3197, 0.68 ) }
    dend_22 { pt3dadd( -4.85206, 21.5196, 30.5558, 0.68 ) }
    dend_22 { pt3dadd( -3.69821, 23.5129, 30.7846, 0.68 ) }
    dend_22 { pt3dadd( -2.75966, 25.2479, 30.9116, 0.68 ) }
    dend_22 { pt3dadd( -1.78276, 26.9549, 30.9321, 0.68 ) }
    dend_22 { pt3dadd( -0.0667953, 29.4953, 30.6734, 0.23 ) }
    dend_22 { pt3dadd( 2.49037, 32.6896, 29.9321, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 35/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -11.9054, -14.2865, 11.0907, 1.14 ) }
    dend_15 { pt3dadd( -9.76619, -15.596, 11.9926, 1.14 ) }
    dend_15 { pt3dadd( -8.15863, -16.58, 12.6704, 0.91 ) }
    dend_15 { pt3dadd( -6.41643, -17.6465, 13.4049, 1.14 ) }
    dend_15 { pt3dadd( -4.69276, -18.7016, 14.1316, 0.68 ) }
    dend_15 { pt3dadd( -2.7207, -19.9088, 14.963, 0.68 ) }
    dend_15 { pt3dadd( -1.11189, -20.8936, 15.6413, 1.14 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 42/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -18.0914, -17.0577, 6.64598, 0.68 ) }
    dend_11 { pt3dadd( -19.2058, -19.1107, 7.64699, 0.68 ) }
    dend_11 { pt3dadd( -20.6991, -21.2279, 8.79306, 0.68 ) }
    dend_11 { pt3dadd( -21.9835, -22.706, 9.74204, 0.68 ) }
    dend_11 { pt3dadd( -23.1743, -23.8788, 10.6087, 0.91 ) }
    dend_11 { pt3dadd( -24.6024, -25.2516, 11.6585, 0.68 ) }
    dend_11 { pt3dadd( -26.0887, -26.7307, 12.8277, 0.68 ) }
    dend_11 { pt3dadd( -27.7657, -28.3424, 14.0483, 0.68 ) }
    dend_11 { pt3dadd( -28.9836, -29.5784, 14.9048, 0.91 ) }
    dend_11 { pt3dadd( -29.9215, -30.6143, 15.5611, 0.68 ) }
    dend_11 { pt3dadd( -30.9335, -31.7924, 16.2365, 0.68 ) }
    dend_11 { pt3dadd( -32.0486, -33.2706, 16.9008, 0.68 ) }
    dend_11 { pt3dadd( -33.6698, -35.8171, 17.7538, 0.68 ) }
    dend_11 { pt3dadd( -34.9795, -38.3026, 18.3616, 0.68 ) }
    dend_11 { pt3dadd( -35.8856, -40.2118, 18.7985, 0.68 ) }
    dend_11 { pt3dadd( -37.122, -42.8942, 19.4796, 0.68 ) }
    dend_11 { pt3dadd( -38.3669, -45.6556, 20.263, 0.68 ) }
    dend_11 { pt3dadd( -39.3612, -47.9978, 20.9686, 0.68 ) }
    dend_11 { pt3dadd( -40.1087, -49.9353, 21.5667, 0.68 ) }
    dend_11 { pt3dadd( -40.8617, -52.0961, 22.1323, 0.68 ) }
    dend_11 { pt3dadd( -41.4804, -54.0574, 22.5438, 0.91 ) }
    dend_11 { pt3dadd( -41.948, -55.6243, 22.7892, 0.91 ) }
    dend_11 { pt3dadd( -42.5783, -57.4432, 22.9996, 0.91 ) }
    dend_11 { pt3dadd( -43.48, -59.5066, 23.1093, 0.91 ) }
    dend_11 { pt3dadd( -44.6187, -61.7889, 23.119, 0.91 ) }
    dend_11 { pt3dadd( -45.6885, -63.9171, 22.9723, 0.68 ) }
    dend_11 { pt3dadd( -46.8455, -66.167, 22.7237, 0.68 ) }
    dend_11 { pt3dadd( -47.5364, -67.3972, 22.6015, 0.68 ) }
    dend_11 { pt3dadd( -48.4769, -69.0173, 22.53, 0.91 ) }
    dend_11 { pt3dadd( -49.4389, -70.6396, 22.6883, 0.68 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 72/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -18.0914, -17.0577, 6.64598, 0.91 ) }
    dend_8 { pt3dadd( -19.2819, -16.9165, 6.37051, 0.91 ) }
    dend_8 { pt3dadd( -20.5208, -16.6811, 6.24893, 0.91 ) }
    dend_8 { pt3dadd( -21.9754, -16.3052, 6.1576, 0.68 ) }
    dend_8 { pt3dadd( -23.5022, -15.823, 6.02249, 0.91 ) }
    dend_8 { pt3dadd( -25.4135, -15.1812, 5.7668, 0.68 ) }
    dend_8 { pt3dadd( -27.3834, -14.501, 5.4135, 0.91 ) }
    dend_8 { pt3dadd( -28.8243, -13.946, 5.1425, 1.14 ) }
    dend_8 { pt3dadd( -30.2385, -13.3928, 4.81827, 0.91 ) }
    dend_8 { pt3dadd( -31.5468, -12.9206, 4.4254, 1.14 ) }
    dend_8 { pt3dadd( -33.2382, -12.3659, 3.79657, 0.91 ) }
    dend_8 { pt3dadd( -34.343, -12.0424, 3.34374, 0.91 ) }
    dend_8 { pt3dadd( -35.8948, -11.6422, 2.68663, 0.91 ) }
    dend_8 { pt3dadd( -37.5329, -11.2554, 2.05823, 0.68 ) }
    dend_8 { pt3dadd( -39.0931, -10.8927, 1.52186, 0.91 ) }
    dend_8 { pt3dadd( -41.6322, -10.2631, 0.747298, 0.91 ) }
    dend_8 { pt3dadd( -43.1423, -9.83407, 0.362971, 0.91 ) }
    dend_8 { pt3dadd( -44.5882, -9.38804, 0.0583256, 0.68 ) }
    dend_8 { pt3dadd( -46.375, -8.77999, -0.240268, 0.68 ) }
    dend_8 { pt3dadd( -48.3786, -8.03735, -0.459987, 0.68 ) }
    dend_8 { pt3dadd( -49.456, -7.61044, -0.56091, 0.68 ) }
    dend_8 { pt3dadd( -50.7778, -7.042, -0.735481, 0.91 ) }
    dend_8 { pt3dadd( -51.9741, -6.44904, -0.977649, 0.68 ) }
    dend_8 { pt3dadd( -53.4612, -5.57173, -1.33306, 0.91 ) }
    dend_8 { pt3dadd( -54.2703, -5.02087, -1.54774, 0.68 ) }
    dend_8 { pt3dadd( -55.4188, -4.20144, -1.90531, 1.14 ) }
    dend_8 { pt3dadd( -56.7758, -3.18947, -2.49944, 0.91 ) }
    dend_8 { pt3dadd( -57.4388, -2.69175, -2.90942, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_8 { pt3dadd( -58.2597, -2.10092, -3.57136, 0.91 ) }
    dend_8 { pt3dadd( -59.2767, -1.43041, -4.59836, 0.91 ) }
    dend_8 { pt3dadd( -60.0419, -0.980414, -5.48957, 0.91 ) }
    dend_8 { pt3dadd( -60.8816, -0.572422, -6.5548, 1.14 ) }
    dend_8 { pt3dadd( -61.884, -0.179862, -7.82517, 0.91 ) }
    dend_8 { pt3dadd( -62.8934, 0.174488, -9.06047, 0.91 ) }
    dend_8 { pt3dadd( -63.9797, 0.555537, -10.305, 0.91 ) }
    dend_8 { pt3dadd( -65.1659, 1.02687, -11.5597, 0.91 ) }
    dend_8 { pt3dadd( -66.4738, 1.66374, -12.8035, 0.91 ) }
    dend_8 { pt3dadd( -67.8426, 2.48404, -14.0238, 0.91 ) }
    dend_8 { pt3dadd( -68.6172, 3.04125, -14.7152, 0.91 ) }
    dend_8 { pt3dadd( -69.7114, 3.90426, -15.7319, 1.14 ) }
    dend_8 { pt3dadd( -71.033, 5.03567, -17.1283, 0.91 ) }
    dend_8 { pt3dadd( -71.8676, 5.88085, -18.2236, 0.91 ) }
    dend_8 { pt3dadd( -72.5557, 6.81176, -19.5383, 0.68 ) }
    dend_8 { pt3dadd( -73.118, 7.87052, -21.2539, 0.91 ) }
    dend_8 { pt3dadd( -73.447, 8.65198, -22.6923, 1.14 ) }
    dend_8 { pt3dadd( -73.734, 9.51923, -24.4992, 0.68 ) }
    dend_8 { pt3dadd( -73.9504, 10.2856, -26.2339, 0.68 ) }
    dend_8 { pt3dadd( -74.2073, 11.0975, -28.2059, 0.46 ) }
    dend_8 { pt3dadd( -74.4274, 11.616, -29.5693, 0.23 ) }
    dend_8 { pt3dadd( -74.6691, 12.0208, -30.6669, 0.23 ) }
    dend_8 { pt3dadd( -74.8663, 12.2657, -31.2986, 0.23 ) }
    dend_8 { pt3dadd( -75.2706, 12.6066, -32.2732, 0.91 ) }
    dend_8 { pt3dadd( -75.8473, 12.9968, -33.4827, 0.46 ) }
    dend_8 { pt3dadd( -76.6686, 13.4928, -34.8998, 0.46 ) }
    dend_8 { pt3dadd( -77.661, 14.1106, -36.5695, 0.46 ) }
    dend_8 { pt3dadd( -78.4022, 14.6044, -37.7929, 0.91 ) }
    dend_8 { pt3dadd( -79.4193, 15.3261, -39.4727, 0.91 ) }
    dend_8 { pt3dadd( -80.4517, 16.0557, -41.1368, 0.91 ) }
    dend_8 { pt3dadd( -81.602, 16.9117, -42.9384, 0.68 ) }
    dend_8 { pt3dadd( -82.2506, 17.4072, -43.9826, 0.68 ) }
    dend_8 { pt3dadd( -82.799, 17.8107, -44.9596, 0.91 ) }
    dend_8 { pt3dadd( -83.7863, 18.4525, -46.8934, 0.91 ) }
    dend_8 { pt3dadd( -84.5502, 18.8684, -48.4487, 0.46 ) }
    dend_8 { pt3dadd( -85.3985, 19.2389, -50.3226, 0.91 ) }
    dend_8 { pt3dadd( -86.5199, 19.6364, -53.0799, 0.68 ) }
    dend_8 { pt3dadd( -87.5775, 19.8934, -55.6992, 0.68 ) }
    dend_8 { pt3dadd( -88.2077, 19.964, -57.189, 0.68 ) }
    dend_8 { pt3dadd( -88.9418, 19.9834, -58.7901, 0.68 ) }
    dend_8 { pt3dadd( -89.7716, 19.9588, -60.4668, 0.68 ) }
    dend_8 { pt3dadd( -90.6525, 19.8691, -62.1311, 0.68 ) }
    dend_8 { pt3dadd( -91.6868, 19.7374, -63.7913, 0.68 ) }
    dend_8 { pt3dadd( -92.8676, 19.6114, -65.3523, 0.46 ) }
    dend_8 { pt3dadd( -93.5468, 19.5708, -66.1469, 0.46 ) }
    dend_8 { pt3dadd( -94.1339, 19.5325, -66.7186, 0.46 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 46/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -56.0212, -61.5123, -74.7587, 0.46 ) }
    dend_5 { pt3dadd( -56.8133, -63.1891, -76.5578, 0.46 ) }
    dend_5 { pt3dadd( -57.758, -64.9196, -78.5057, 0.68 ) }
    dend_5 { pt3dadd( -57.9829, -65.2729, -78.927, 0.68 ) }
    dend_5 { pt3dadd( -59.3826, -67.2404, -81.3527, 0.46 ) }
    dend_5 { pt3dadd( -60.4813, -68.5673, -83.0014, 0.46 ) }
    dend_5 { pt3dadd( -61.0597, -69.1813, -83.7618, 0.91 ) }
    dend_5 { pt3dadd( -62.3242, -70.3083, -85.1317, 0.46 ) }
    dend_5 { pt3dadd( -63.5342, -71.2451, -86.3946, 0.91 ) }
    dend_5 { pt3dadd( -65.622, -72.6895, -88.6459, 0.23 ) }
    dend_5 { pt3dadd( -67.079, -73.6342, -90.3233, 0.46 ) }
    dend_5 { pt3dadd( -67.9549, -74.2176, -91.4022, 0.46 ) }
    dend_5 { pt3dadd( -68.3575, -74.5138, -91.9461, 0.68 ) }
    dend_5 { pt3dadd( -70.1486, -76.0478, -94.5399, 0.68 ) }
    dend_5 { pt3dadd( -71.1037, -76.9439, -96.0285, 0.68 ) }
    dend_5 { pt3dadd( -72.2471, -78.1473, -98.0328, 0.23 ) }
    dend_5 { pt3dadd( -72.8185, -78.8742, -99.1852, 0.46 ) }
    dend_5 { pt3dadd( -73.9574, -80.5772, -101.684, 0.23 ) }
    dend_5 { pt3dadd( -74.5261, -81.5273, -103.006, 0.68 ) }
    dend_5 { pt3dadd( -75.1256, -82.7256, -104.539, 0.23 ) }
    dend_5 { pt3dadd( -75.8734, -84.4332, -106.67, 0.23 ) }
    dend_5 { pt3dadd( -76.2573, -85.451, -107.937, 0.23 ) }
    dend_5 { pt3dadd( -76.4896, -86.2417, -108.882, 0.91 ) }
    dend_5 { pt3dadd( -76.9424, -88.1565, -111.155, 0.23 ) }
    dend_5 { pt3dadd( -77.5968, -90.599, -113.949, 0.23 ) }
    dend_5 { pt3dadd( -77.8023, -91.359, -114.756, 0.91 ) }
    dend_5 { pt3dadd( -78.3582, -93.3184, -116.707, 0.23 ) }
    dend_5 { pt3dadd( -78.7734, -94.684, -117.998, 0.68 ) }
    dend_5 { pt3dadd( -79.5006, -96.9619, -120.012, 0.23 ) }
    dend_5 { pt3dadd( -80.3469, -99.5237, -122.133, 0.23 ) }
    dend_5 { pt3dadd( -80.7736, -100.741, -123.192, 0.46 ) }
    dend_5 { pt3dadd( -81.3209, -102.213, -124.567, 0.23 ) }
    dend_5 { pt3dadd( -81.6065, -102.972, -125.291, 0.68 ) }
    dend_5 { pt3dadd( -82.413, -105.026, -127.266, 0.23 ) }
    dend_5 { pt3dadd( -82.8025, -105.995, -128.204, 0.46 ) }
    dend_5 { pt3dadd( -83.8708, -108.37, -130.679, 0.23 ) }
    dend_5 { pt3dadd( -84.079, -108.736, -131.071, 0.23 ) }
    dend_5 { pt3dadd( -84.5282, -109.428, -131.786, 0.46 ) }
    dend_5 { pt3dadd( -85.451, -110.713, -133.081, 0.23 ) }
    dend_5 { pt3dadd( -86.3282, -111.793, -134.097, 0.23 ) }
    dend_5 { pt3dadd( -86.7758, -112.302, -134.55, 0.46 ) }
    dend_5 { pt3dadd( -88.8379, -114.481, -136.377, 0.23 ) }
    dend_5 { pt3dadd( -90.6597, -116.234, -137.924, 0.23 ) }
    dend_5 { pt3dadd( -92.11, -117.58, -139.157, 0.23 ) }
    dend_5 { pt3dadd( -93.6125, -118.941, -140.442, 0.23 ) }
    dend_5 { pt3dadd( -95.5476, -120.634, -142.016, 0.23 ) }
    dend_5 { pt3dadd( -96.6831, -121.561, -142.889, 0.68 ) }
    dend_5 { pt3dadd( -98.623, -122.958, -144.241, 0.23 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 94/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -56.0212, -61.5123, -74.7587, 0.23 ) }
    dend_4 { pt3dadd( -58.2345, -62.7511, -74.7835, 0.23 ) }
    dend_4 { pt3dadd( -59.246, -63.3172, -74.7948, 0.23 ) }
    dend_4 { pt3dadd( -59.8464, -63.6532, -74.8015, 0.46 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 98/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -115.619, 8.78981, -58.6162, 0.23 ) }
    dend_87 { pt3dadd( -116.156, 7.4586, -58.9144, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_87 { pt3dadd( -116.622, 6.30499, -59.1729, 0.46 ) }
    dend_87 { pt3dadd( -117.526, 4.0668, -59.6743, 0.23 ) }
    dend_87 { pt3dadd( -118.492, 1.67417, -60.2103, 0.23 ) }
    dend_87 { pt3dadd( -118.808, 0.8932, -60.3853, 0.68 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 4/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -115.619, 8.78981, -58.6162, 0.46 ) }
    dend_86 { pt3dadd( -116.895, 8.52194, -58.6468, 0.46 ) }
    dend_86 { pt3dadd( -117.71, 8.39663, -58.6476, 0.46 ) }
    dend_86 { pt3dadd( -119.179, 8.25024, -58.6308, 0.68 ) }
    dend_86 { pt3dadd( -120.889, 8.12528, -58.6042, 0.46 ) }
    dend_86 { pt3dadd( -122.465, 8.02618, -58.5497, 0.23 ) }
    dend_86 { pt3dadd( -123.601, 7.95352, -58.5004, 0.46 ) }
    dend_86 { pt3dadd( -124.847, 7.87144, -58.4053, 0.46 ) }
    dend_86 { pt3dadd( -126.304, 7.75221, -58.2985, 0.23 ) }
    dend_86 { pt3dadd( -127.519, 7.59666, -58.2096, 0.46 ) }
    dend_86 { pt3dadd( -128.239, 7.45566, -58.1646, 0.23 ) }
    dend_86 { pt3dadd( -129.267, 7.14193, -58.136, 0.68 ) }
    dend_86 { pt3dadd( -130.261, 6.77326, -58.1119, 0.68 ) }
    dend_86 { pt3dadd( -132.149, 5.9381, -58.0764, 0.23 ) }
    dend_86 { pt3dadd( -133.546, 5.20782, -58.0658, 0.23 ) }
    dend_86 { pt3dadd( -134.036, 4.92535, -58.0711, 0.46 ) }
    dend_86 { pt3dadd( -135.087, 4.28127, -58.1197, 0.46 ) }
    // Section: dend_84, id: dend_84, parent: dend_80 (entry count 21/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -59.9094, 11.118, -65.1121, 0.68 ) }
    dend_84 { pt3dadd( -59.6841, 11.87, -66.0709, 0.68 ) }
    dend_84 { pt3dadd( -59.4779, 12.4161, -66.8133, 0.91 ) }
    dend_84 { pt3dadd( -58.7659, 14.3022, -69.3775, 0.68 ) }
    dend_84 { pt3dadd( -58.4129, 15.2373, -70.6489, 0.68 ) }
    dend_84 { pt3dadd( -57.9304, 16.5152, -72.3861, 0.68 ) }
    dend_84 { pt3dadd( -57.3231, 18.1239, -74.5733, 0.46 ) }
    dend_84 { pt3dadd( -56.7448, 19.4545, -76.5017, 0.68 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 29/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -59.9094, 11.118, -65.1121, 0.23 ) }
    dend_81 { pt3dadd( -61.5353, 10.9776, -65.4131, 0.23 ) }
    dend_81 { pt3dadd( -64.035, 10.9187, -65.75, 0.46 ) }
    dend_81 { pt3dadd( -66.0337, 10.9664, -65.967, 0.23 ) }
    dend_81 { pt3dadd( -67.9072, 11.0712, -66.135, 0.46 ) }
    dend_81 { pt3dadd( -70.8255, 11.2954, -66.4904, 0.23 ) }
    dend_81 { pt3dadd( -72.1689, 11.4195, -66.7541, 0.68 ) }
    dend_81 { pt3dadd( -74.316, 11.7268, -67.3912, 0.23 ) }
    dend_81 { pt3dadd( -75.2516, 11.9257, -67.8349, 0.68 ) }
    dend_81 { pt3dadd( -76.2582, 12.2351, -68.7003, 0.68 ) }
    dend_81 { pt3dadd( -77.7383, 12.7983, -70.8033, 0.23 ) }
    dend_81 { pt3dadd( -78.8896, 13.3151, -73.0287, 0.68 ) }
    dend_81 { pt3dadd( -79.8513, 13.7984, -75.1961, 0.68 ) }
    dend_81 { pt3dadd( -80.7847, 14.3221, -77.5347, 0.68 ) }
    dend_81 { pt3dadd( -82.2087, 15.2438, -81.3481, 0.68 ) }
    dend_81 { pt3dadd( -83.2868, 16.0635, -84.2641, 0.68 ) }
    dend_81 { pt3dadd( -84.1807, 16.7947, -86.511, 0.68 ) }
    dend_81 { pt3dadd( -85.1681, 17.5772, -88.5961, 0.68 ) }
    dend_81 { pt3dadd( -85.711, 17.9926, -89.6256, 0.46 ) }
    dend_81 { pt3dadd( -86.5013, 18.6443, -90.9463, 0.46 ) }
    dend_81 { pt3dadd( -87.8727, 19.8501, -92.8238, 0.23 ) }
    dend_81 { pt3dadd( -88.7278, 20.6085, -93.7612, 0.23 ) }
    dend_81 { pt3dadd( -89.3421, 21.1251, -94.3341, 0.46 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 52/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -38.8086, 24.3086, -52.5643, 0.46 ) }
    dend_75 { pt3dadd( -40.3732, 24.4337, -51.9131, 0.46 ) }
    dend_75 { pt3dadd( -41.5128, 24.5248, -51.4387, 0.91 ) }
    dend_75 { pt3dadd( -43.3018, 24.6678, -50.6941, 0.46 ) }
    dend_75 { pt3dadd( -45.8721, 24.8733, -49.6242, 0.23 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 57/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -38.8086, 24.3086, -52.5643, 0.68 ) }
    dend_74 { pt3dadd( -37.9438, 25.5321, -55.5756, 0.68 ) }
    dend_74 { pt3dadd( -37.0792, 26.7772, -58.4237, 0.68 ) }
    dend_74 { pt3dadd( -36.0107, 28.003, -61.2426, 0.68 ) }
    dend_74 { pt3dadd( -35.5727, 28.4418, -62.2451, 0.68 ) }
    dend_74 { pt3dadd( -34.6113, 29.3364, -64.2236, 0.68 ) }
    dend_74 { pt3dadd( -33.4139, 30.3711, -66.5015, 0.68 ) }
    dend_74 { pt3dadd( -32.6482, 30.9963, -67.8688, 0.68 ) }
    dend_74 { pt3dadd( -31.1676, 32.0301, -70.4421, 0.68 ) }
    dend_74 { pt3dadd( -30.7008, 32.3124, -71.2757, 0.68 ) }
    dend_74 { pt3dadd( -29.5401, 32.963, -73.5679, 0.68 ) }
    dend_74 { pt3dadd( -28.4154, 33.5246, -76.0863, 0.68 ) }
    dend_74 { pt3dadd( -27.0782, 34.1643, -79.5747, 0.68 ) }
    dend_74 { pt3dadd( -25.6144, 34.8409, -83.6029, 0.68 ) }
    dend_74 { pt3dadd( -24.5796, 35.3092, -86.5355, 0.68 ) }
    dend_74 { pt3dadd( -23.9621, 35.5568, -88.0982, 0.68 ) }
    dend_74 { pt3dadd( -22.9974, 35.8712, -90.2804, 0.68 ) }
    dend_74 { pt3dadd( -21.363, 36.3231, -93.5657, 0.68 ) }
    dend_74 { pt3dadd( -20.1299, 36.5903, -95.6977, 0.68 ) }
    dend_74 { pt3dadd( -19.3325, 36.6879, -96.9682, 0.68 ) }
    dend_74 { pt3dadd( -17.4922, 36.8784, -99.6651, 0.68 ) }
    dend_74 { pt3dadd( -16.1641, 37.0214, -101.503, 0.68 ) }
    dend_74 { pt3dadd( -14.2988, 37.2143, -104.074, 0.68 ) }
    dend_74 { pt3dadd( -12.4448, 37.2737, -106.856, 0.68 ) }
    dend_74 { pt3dadd( -10.48, 37.2036, -110.35, 0.68 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 82/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 77.4237, 40.5755, -62.192, 0.46 ) }
    dend_65 { pt3dadd( 78.7724, 41.5262, -63.0568, 0.46 ) }
    dend_65 { pt3dadd( 80.4441, 42.9048, -64.3176, 0.46 ) }
    dend_65 { pt3dadd( 81.6574, 43.9685, -65.3342, 0.46 ) }
    dend_65 { pt3dadd( 83.3655, 45.5027, -66.8265, 0.68 ) }
    dend_65 { pt3dadd( 84.9504, 47.0226, -68.2847, 0.46 ) }
    dend_65 { pt3dadd( 86.6167, 48.8248, -69.888, 0.68 ) }
    dend_65 { pt3dadd( 88.0721, 50.6653, -71.3599, 0.46 ) }
    dend_65 { pt3dadd( 89.0862, 52.1401, -72.473, 0.46 ) }
    dend_65 { pt3dadd( 90.1723, 53.8098, -73.7035, 0.46 ) }
    dend_65 { pt3dadd( 91.4076, 55.8696, -75.1131, 0.46 ) }
    dend_65 { pt3dadd( 92.6776, 58.1177, -76.4819, 0.46 ) }
    dend_65 { pt3dadd( 93.3671, 59.239, -77.113, 0.46 ) }
    dend_65 { pt3dadd( 94.2115, 60.4609, -77.8148, 0.46 ) }
    dend_65 { pt3dadd( 95.5029, 62.1377, -78.7524, 0.46 ) }
    dend_65 { pt3dadd( 96.7792, 63.5345, -79.6116, 0.46 ) }
    dend_65 { pt3dadd( 97.7851, 64.4413, -80.2992, 0.46 ) }
    dend_65 { pt3dadd( 99.7313, 65.9379, -81.7253, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_65 { pt3dadd( 100.595, 66.546, -82.3937, 0.46 ) }
    dend_65 { pt3dadd( 102.714, 67.9606, -84.0391, 0.68 ) }
    dend_65 { pt3dadd( 103.962, 68.7896, -84.9914, 0.68 ) }
    dend_65 { pt3dadd( 106.209, 70.204, -86.7252, 0.46 ) }
    dend_65 { pt3dadd( 108.341, 71.5003, -88.4826, 0.68 ) }
    dend_65 { pt3dadd( 109.996, 72.5376, -89.964, 0.46 ) }
    dend_65 { pt3dadd( 111.179, 73.2861, -91.1371, 0.68 ) }
    dend_65 { pt3dadd( 112.568, 74.1183, -92.5813, 0.68 ) }
    dend_65 { pt3dadd( 114.51, 75.3023, -94.3971, 0.68 ) }
    dend_65 { pt3dadd( 116.358, 76.3332, -95.909, 0.46 ) }
    dend_65 { pt3dadd( 117.337, 76.8175, -96.6085, 0.68 ) }
    dend_65 { pt3dadd( 119.477, 77.8459, -97.8478, 0.68 ) }
    dend_65 { pt3dadd( 121.698, 78.838, -98.7958, 0.68 ) }
    dend_65 { pt3dadd( 124.074, 79.9606, -99.5114, 0.68 ) }
    dend_65 { pt3dadd( 126.748, 81.5208, -100.023, 0.46 ) }
    dend_65 { pt3dadd( 129.445, 83.4072, -100.347, 0.46 ) }
    dend_65 { pt3dadd( 131.863, 85.4028, -100.521, 0.46 ) }
    dend_65 { pt3dadd( 134.213, 87.4844, -100.614, 0.46 ) }
    dend_65 { pt3dadd( 136.945, 90.1664, -100.754, 0.46 ) }
    dend_65 { pt3dadd( 139.601, 93.1015, -100.88, 0.23 ) }
    dend_65 { pt3dadd( 141.103, 95.2047, -100.817, 0.23 ) }
    dend_65 { pt3dadd( 142.228, 97.3434, -100.715, 0.46 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 22/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 77.4237, 40.5755, -62.192, 0.46 ) }
    dend_64 { pt3dadd( 79.2328, 40.5487, -61.9024, 0.46 ) }
    dend_64 { pt3dadd( 82.0828, 40.5065, -61.4461, 0.46 ) }
    dend_64 { pt3dadd( 83.4799, 40.4858, -61.2225, 0.46 ) }
    dend_64 { pt3dadd( 85.2223, 40.46, -60.9436, 0.23 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 27/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 104.025, 19.6702, -54.1203, 0.23 ) }
    dend_62 { pt3dadd( 104.763, 20.0518, -54.9448, 0.23 ) }
    dend_62 { pt3dadd( 105.916, 20.6908, -56.0759, 0.23 ) }
    dend_62 { pt3dadd( 106.915, 21.1825, -56.9171, 0.23 ) }
    dend_62 { pt3dadd( 107.828, 21.632, -57.686, 0.46 ) }
    dend_62 { pt3dadd( 108.459, 21.9423, -58.2167, 0.68 ) }
    dend_62 { pt3dadd( 110.152, 22.7758, -59.6426, 0.23 ) }
    dend_62 { pt3dadd( 111.255, 23.3132, -60.5999, 0.23 ) }
    dend_62 { pt3dadd( 112.533, 23.9814, -61.6039, 0.68 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 36/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 104.025, 19.6702, -54.1203, 0.46 ) }
    dend_61 { pt3dadd( 104.874, 18.5295, -54.6744, 0.46 ) }
    dend_61 { pt3dadd( 105.71, 17.4066, -55.2199, 0.46 ) }
    dend_61 { pt3dadd( 106.785, 15.9625, -55.9214, 0.46 ) }
    dend_61 { pt3dadd( 107.962, 14.3817, -56.6894, 0.46 ) }
    dend_61 { pt3dadd( 109.179, 12.7466, -57.4837, 0.46 ) }
    dend_61 { pt3dadd( 109.587, 12.1995, -57.7495, 1.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 43/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -28.5158, 9.15829, -9.0585, 0.91 ) }
    dend_36 { pt3dadd( -29.1846, 9.28764, -9.17723, 0.91 ) }
    dend_36 { pt3dadd( -30.4526, 9.38916, -9.32547, 0.46 ) }
    dend_36 { pt3dadd( -31.0355, 9.40894, -9.40385, 0.68 ) }
    dend_36 { pt3dadd( -31.8072, 9.40798, -9.50939, 0.68 ) }
    dend_36 { pt3dadd( -32.7443, 9.37028, -9.68299, 0.68 ) }
    dend_36 { pt3dadd( -33.458, 9.31473, -9.85272, 1.14 ) }
    dend_36 { pt3dadd( -34.1046, 9.20367, -10.0082, 0.68 ) }
    dend_36 { pt3dadd( -34.8223, 8.96927, -10.2211, 0.91 ) }
    dend_36 { pt3dadd( -35.1077, 8.82859, -10.3294, 0.91 ) }
    dend_36 { pt3dadd( -35.7469, 8.38734, -10.659, 0.91 ) }
    dend_36 { pt3dadd( -36.1092, 8.03906, -10.906, 0.91 ) }
    dend_36 { pt3dadd( -36.37, 7.75919, -11.1064, 0.91 ) }
    dend_36 { pt3dadd( -36.9216, 7.07758, -11.5658, 0.46 ) }
    dend_36 { pt3dadd( -37.329, 6.49127, -11.9057, 0.68 ) }
    dend_36 { pt3dadd( -37.7256, 5.86433, -12.2419, 0.68 ) }
    dend_36 { pt3dadd( -38.2472, 4.93825, -12.6443, 0.68 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 60/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -28.5158, 9.15829, -9.0585, 0.46 ) }
    dend_35 { pt3dadd( -29.7365, 8.66233, -8.09719, 0.46 ) }
    dend_35 { pt3dadd( -30.7935, 8.11753, -7.31747, 0.46 ) }
    dend_35 { pt3dadd( -32.0895, 7.30437, -6.33512, 0.68 ) }
    dend_35 { pt3dadd( -33.1126, 6.54296, -5.47324, 0.68 ) }
    dend_35 { pt3dadd( -33.8582, 5.89946, -4.718, 0.68 ) }
    dend_35 { pt3dadd( -34.7619, 5.0279, -3.75176, 0.68 ) }
    dend_35 { pt3dadd( -35.6253, 4.1357, -2.84766, 0.68 ) }
    dend_35 { pt3dadd( -36.4814, 3.25263, -1.94803, 0.68 ) }
    dend_35 { pt3dadd( -37.435, 2.34905, -0.916694, 0.68 ) }
    dend_35 { pt3dadd( -38.541, 1.43013, 0.336516, 0.68 ) }
    dend_35 { pt3dadd( -39.198, 0.914722, 1.1579, 0.68 ) }
    dend_35 { pt3dadd( -40.8283, -0.30004, 3.21406, 0.68 ) }
    dend_35 { pt3dadd( -41.9131, -0.990444, 4.40231, 0.68 ) }
    dend_35 { pt3dadd( -43.1268, -1.68439, 5.5736, 0.68 ) }
    dend_35 { pt3dadd( -43.7357, -2.03539, 6.10766, 0.68 ) }
    dend_35 { pt3dadd( -45.0412, -2.79633, 7.11198, 0.68 ) }
    dend_35 { pt3dadd( -46.0595, -3.40488, 7.84352, 0.68 ) }
    dend_35 { pt3dadd( -47.024, -4.05816, 8.50039, 0.68 ) }
    dend_35 { pt3dadd( -48.2123, -4.92592, 9.24282, 0.68 ) }
    dend_35 { pt3dadd( -49.5296, -5.90182, 10.0272, 0.68 ) }
    dend_35 { pt3dadd( -51.3385, -7.17244, 11.0639, 0.91 ) }
    dend_35 { pt3dadd( -52.4697, -7.96174, 11.7076, 0.46 ) }
    dend_35 { pt3dadd( -53.6696, -8.82173, 12.4721, 0.46 ) }
    dend_35 { pt3dadd( -54.7329, -9.62519, 13.2624, 0.68 ) }
    dend_35 { pt3dadd( -56.3357, -10.8817, 14.6237, 0.46 ) }
    dend_35 { pt3dadd( -56.7519, -11.2474, 15.0525, 0.46 ) }
    dend_35 { pt3dadd( -57.3043, -11.8602, 15.8153, 0.91 ) }
    dend_35 { pt3dadd( -58.029, -12.9357, 17.2401, 0.46 ) }
    dend_35 { pt3dadd( -58.5184, -13.9629, 18.6554, 0.46 ) }
    dend_35 { pt3dadd( -58.8022, -14.9012, 20.04, 0.46 ) }
    dend_35 { pt3dadd( -58.9519, -15.8475, 21.4133, 0.46 ) }
    dend_35 { pt3dadd( -58.9884, -16.5715, 22.3484, 0.68 ) }
    dend_35 { pt3dadd( -58.8971, -17.8752, 23.9142, 0.68 ) }
    dend_35 { pt3dadd( -58.6601, -19.1659, 25.2387, 0.68 ) }
    dend_35 { pt3dadd( -58.4498, -19.9906, 25.9535, 0.68 ) }
    dend_35 { pt3dadd( -58.1667, -20.8479, 26.6468, 0.46 ) }
    dend_35 { pt3dadd( -57.5977, -22.4397, 28.0199, 0.46 ) }
    dend_35 { pt3dadd( -57.2001, -23.6709, 29.1167, 0.46 ) }
    dend_35 { pt3dadd( -56.8403, -25.1071, 30.479, 0.46 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_35 { pt3dadd( -56.6261, -26.1273, 31.5151, 0.68 ) }
    dend_35 { pt3dadd( -56.3581, -27.6582, 33.1301, 0.68 ) }
    dend_35 { pt3dadd( -56.1323, -29.0853, 34.6001, 0.68 ) }
    dend_35 { pt3dadd( -55.9232, -30.4014, 35.8458, 0.46 ) }
    dend_35 { pt3dadd( -55.8039, -31.6513, 36.9577, 0.46 ) }
    dend_35 { pt3dadd( -55.7675, -32.2704, 37.5059, 0.46 ) }
    dend_35 { pt3dadd( -55.7553, -33.4143, 38.4276, 0.68 ) }
    dend_35 { pt3dadd( -55.5659, -35.7724, 39.5447, 0.68 ) }
    dend_35 { pt3dadd( -54.9882, -37.4706, 39.8519, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 9/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 8.62384, 26.7263, -10.221, 0.68 ) }
    dend_30 { pt3dadd( 10.2154, 27.9308, -11.5352, 0.68 ) }
    dend_30 { pt3dadd( 12.4477, 29.6631, -13.4888, 0.46 ) }
    dend_30 { pt3dadd( 14.0238, 30.9924, -15.0123, 0.46 ) }
    dend_30 { pt3dadd( 15.1219, 31.9742, -16.1833, 0.68 ) }
    dend_30 { pt3dadd( 16.7853, 33.5487, -18.1659, 0.68 ) }
    dend_30 { pt3dadd( 18.5077, 35.2926, -20.5057, 0.46 ) }
    dend_30 { pt3dadd( 19.6556, 36.58, -22.35, 0.46 ) }
    dend_30 { pt3dadd( 20.7621, 37.911, -24.4051, 0.68 ) }
    dend_30 { pt3dadd( 21.4933, 38.8329, -25.7928, 0.91 ) }
    dend_30 { pt3dadd( 22.5665, 40.1489, -27.5969, 0.68 ) }
    dend_30 { pt3dadd( 23.8337, 41.57, -29.3211, 0.91 ) }
    dend_30 { pt3dadd( 24.5251, 42.2148, -30.043, 0.91 ) }
    dend_30 { pt3dadd( 26.7564, 44.0869, -32.075, 0.68 ) }
    dend_30 { pt3dadd( 28.2585, 45.2243, -33.2122, 0.68 ) }
    dend_30 { pt3dadd( 31.5107, 47.5138, -35.239, 0.46 ) }
    dend_30 { pt3dadd( 34.044, 49.1493, -36.4912, 0.46 ) }
    dend_30 { pt3dadd( 36.7514, 50.7516, -37.5745, 0.68 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 27/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 8.62384, 26.7263, -10.221, 0.68 ) }
    dend_29 { pt3dadd( 9.28336, 26.9275, -9.42743, 0.68 ) }
    dend_29 { pt3dadd( 10.443, 27.3391, -8.20994, 0.68 ) }
    dend_29 { pt3dadd( 11.524, 27.7854, -7.20437, 0.68 ) }
    dend_29 { pt3dadd( 12.5258, 28.2696, -6.43059, 0.46 ) }
    dend_29 { pt3dadd( 13.5389, 28.8348, -5.80939, 0.68 ) }
    dend_29 { pt3dadd( 14.4097, 29.4228, -5.42354, 0.68 ) }
    dend_29 { pt3dadd( 15.1185, 30.0175, -5.32154, 0.46 ) }
    dend_29 { pt3dadd( 15.7837, 30.6377, -5.34274, 0.46 ) }
    dend_29 { pt3dadd( 16.7717, 31.6339, -5.46686, 0.68 ) }
    dend_29 { pt3dadd( 17.4398, 32.3468, -5.56409, 0.68 ) }
    dend_29 { pt3dadd( 18.4228, 33.3768, -5.67297, 0.68 ) }
    dend_29 { pt3dadd( 19.4284, 34.2812, -5.65027, 0.46 ) }
    dend_29 { pt3dadd( 20.5147, 35.036, -5.48755, 0.46 ) }
    dend_29 { pt3dadd( 21.1027, 35.3166, -5.32112, 0.23 ) }
    dend_29 { pt3dadd( 22.2532, 35.7063, -4.99924, 0.23 ) }
    dend_29 { pt3dadd( 23.1157, 35.929, -4.88944, 0.68 ) }
    dend_29 { pt3dadd( 24.662, 36.2476, -5.00129, 0.23 ) }
    dend_29 { pt3dadd( 25.6525, 36.4293, -5.1715, 0.23 ) }
    dend_29 { pt3dadd( 26.8928, 36.67, -5.51223, 0.23 ) }
    dend_29 { pt3dadd( 29.0218, 37.1274, -6.26374, 0.23 ) }
    dend_29 { pt3dadd( 31.0836, 37.5994, -7.21302, 0.23 ) }
    dend_29 { pt3dadd( 32.3661, 37.9943, -7.95768, 0.46 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 50/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 2.49037, 32.6896, 29.9321, 0.23 ) }
    dend_24 { pt3dadd( 6.7255, 33.6312, 31.102, 0.23 ) }
    dend_24 { pt3dadd( 7.91606, 33.8958, 31.4309, 0.23 ) }
    dend_24 { pt3dadd( 10.6995, 34.5147, 32.1998, 0.46 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 54/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 2.49037, 32.6896, 29.9321, 0.46 ) }
    dend_23 { pt3dadd( 2.82851, 34.2048, 28.7945, 0.46 ) }
    dend_23 { pt3dadd( 3.21715, 35.9464, 27.487, 0.46 ) }
    dend_23 { pt3dadd( 3.53582, 37.3743, 26.4149, 0.68 ) }
    dend_23 { pt3dadd( 3.88114, 38.9217, 25.2531, 0.46 ) }
    dend_23 { pt3dadd( 4.21713, 40.4273, 24.1227, 0.46 ) }
    dend_23 { pt3dadd( 4.47308, 41.5742, 23.2616, 0.46 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 61/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.11189, -20.8936, 15.6413, 0.91 ) }
    dend_17 { pt3dadd( -1.18137, -22.2228, 16.0017, 0.91 ) }
    dend_17 { pt3dadd( -1.32506, -24.9716, 16.7471, 0.91 ) }
    dend_17 { pt3dadd( -1.43301, -27.0367, 17.307, 0.91 ) }
    dend_17 { pt3dadd( -1.50095, -28.3366, 17.6595, 1.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.11189, -20.8936, 15.6413, 0.46 ) }
    dend_16 { pt3dadd( 0.538689, -20.9502, 15.0305, 0.46 ) }
    dend_16 { pt3dadd( 2.12027, -21.0582, 14.2862, 0.46 ) }
    dend_16 { pt3dadd( 4.38714, -21.2397, 13.0069, 0.68 ) }
    dend_16 { pt3dadd( 6.98182, -21.4, 11.3531, 0.68 ) }
    dend_16 { pt3dadd( 8.40256, -21.4754, 10.4327, 0.68 ) }
    dend_16 { pt3dadd( 10.108, -21.5294, 9.35483, 0.68 ) }
    dend_16 { pt3dadd( 12.787, -21.5717, 7.58986, 0.68 ) }
    dend_16 { pt3dadd( 14.8094, -21.6317, 6.18419, 0.68 ) }
    dend_16 { pt3dadd( 16.867, -21.6643, 4.68557, 0.68 ) }
    dend_16 { pt3dadd( 18.4961, -21.6322, 3.4802, 0.46 ) }
    dend_16 { pt3dadd( 19.9944, -21.5522, 2.41686, 0.68 ) }
    dend_16 { pt3dadd( 22.4634, -21.4142, 0.88508, 0.23 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 79/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -49.4389, -70.6396, 22.6883, 0.46 ) }
    dend_13 { pt3dadd( -49.966, -71.3876, 22.881, 0.46 ) }
    dend_13 { pt3dadd( -50.2169, -71.7676, 22.9819, 0.68 ) }
    dend_13 { pt3dadd( -51.232, -73.2016, 23.4051, 0.46 ) }
    dend_13 { pt3dadd( -52.0278, -74.2985, 23.7245, 0.46 ) }
    dend_13 { pt3dadd( -52.8097, -75.3872, 24.0198, 0.46 ) }
    dend_13 { pt3dadd( -53.7968, -76.726, 24.3964, 0.68 ) }
    dend_13 { pt3dadd( -54.7516, -77.9735, 24.7708, 0.68 ) }
    dend_13 { pt3dadd( -55.9368, -79.4112, 25.2202, 0.68 ) }
    dend_13 { pt3dadd( -57.0661, -80.6671, 25.6128, 0.68 ) }
    dend_13 { pt3dadd( -58.3856, -81.9977, 26.0408, 0.46 ) }
    dend_13 { pt3dadd( -59.3614, -82.926, 26.3457, 0.68 ) }
    dend_13 { pt3dadd( -60.0544, -83.5454, 26.5071, 0.68 ) }
    dend_13 { pt3dadd( -60.8464, -84.191, 26.6801, 0.46 ) }
    dend_13 { pt3dadd( -61.798, -84.9532, 26.9662, 0.46 ) }
    dend_13 { pt3dadd( -62.5798, -85.555, 27.2788, 0.68 ) }
    dend_13 { pt3dadd( -63.5507, -86.2598, 27.7476, 0.46 ) }
    dend_13 { pt3dadd( -65.3279, -87.6005, 28.6487, 0.68 ) }
    dend_13 { pt3dadd( -67.1636, -89.0414, 29.669, 0.23 ) }
    dend_13 { pt3dadd( -68.6022, -90.1886, 30.6142, 0.23 ) }
    dend_13 { pt3dadd( -69.5645, -90.9559, 31.3567, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_13 { pt3dadd( -70.3143, -91.5769, 32.0399, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 1/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -49.4389, -70.6396, 22.6883, 0.23 ) }
    dend_12 { pt3dadd( -49.0925, -71.8289, 23.8356, 0.23 ) }
    dend_12 { pt3dadd( -48.7677, -72.9437, 24.911, 0.46 ) }
    dend_12 { pt3dadd( -48.4471, -74.044, 25.9725, 0.46 ) }
    dend_12 { pt3dadd( -48.1383, -75.1042, 26.9952, 0.46 ) }
    dend_12 { pt3dadd( -48.0681, -75.3449, 27.2274, 0.46 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 7/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -94.1339, 19.5325, -66.7186, 0.46 ) }
    dend_10 { pt3dadd( -95.1512, 19.1591, -67.4865, 0.46 ) }
    dend_10 { pt3dadd( -96.0723, 18.7959, -68.0755, 0.46 ) }
    dend_10 { pt3dadd( -97.5532, 18.1778, -68.9294, 0.46 ) }
    dend_10 { pt3dadd( -98.4076, 17.8163, -69.3871, 0.46 ) }
    dend_10 { pt3dadd( -99.407, 17.4216, -69.8677, 0.68 ) }
    dend_10 { pt3dadd( -100.707, 16.9636, -70.4419, 0.46 ) }
    dend_10 { pt3dadd( -102.228, 16.5053, -71.0796, 0.46 ) }
    dend_10 { pt3dadd( -102.939, 16.307, -71.3516, 0.46 ) }
    dend_10 { pt3dadd( -103.629, 16.1537, -71.6012, 0.46 ) }
    dend_10 { pt3dadd( -105.082, 15.9416, -72.1799, 0.68 ) }
    dend_10 { pt3dadd( -105.793, 15.8809, -72.5527, 0.68 ) }
    dend_10 { pt3dadd( -107.041, 15.8288, -73.3282, 0.46 ) }
    dend_10 { pt3dadd( -107.684, 15.7947, -73.7907, 0.68 ) }
    dend_10 { pt3dadd( -109.23, 15.6914, -75.0391, 0.68 ) }
    dend_10 { pt3dadd( -109.848, 15.6274, -75.5987, 0.91 ) }
    dend_10 { pt3dadd( -111.299, 15.407, -77.0528, 0.46 ) }
    dend_10 { pt3dadd( -112.965, 15.0817, -78.7647, 0.68 ) }
    dend_10 { pt3dadd( -114.243, 14.8147, -80.0567, 0.68 ) }
    dend_10 { pt3dadd( -115.569, 14.4871, -81.3816, 0.68 ) }
    dend_10 { pt3dadd( -116.521, 14.2165, -82.2956, 0.68 ) }
    dend_10 { pt3dadd( -117.44, 13.9204, -83.1223, 0.68 ) }
    dend_10 { pt3dadd( -118.153, 13.6668, -83.6698, 0.68 ) }
    dend_10 { pt3dadd( -118.98, 13.2726, -84.1848, 0.68 ) }
    dend_10 { pt3dadd( -119.827, 12.8333, -84.556, 0.68 ) }
    dend_10 { pt3dadd( -120.57, 12.441, -84.7719, 0.68 ) }
    dend_10 { pt3dadd( -121.715, 11.8327, -85.0383, 0.68 ) }
    dend_10 { pt3dadd( -123.09, 11.0833, -85.3127, 0.68 ) }
    dend_10 { pt3dadd( -124.882, 10.0754, -85.6644, 0.68 ) }
    dend_10 { pt3dadd( -126.365, 9.22408, -85.9499, 0.46 ) }
    dend_10 { pt3dadd( -129.727, 7.40955, -86.5739, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 38/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -94.1339, 19.5325, -66.7186, 0.46 ) }
    dend_9 { pt3dadd( -95.2247, 20.448, -65.6654, 0.46 ) }
    dend_9 { pt3dadd( -96.0087, 21.1695, -64.713, 0.46 ) }
    dend_9 { pt3dadd( -97.4636, 22.8011, -62.4633, 0.46 ) }
    dend_9 { pt3dadd( -98.4753, 23.9356, -60.899, 0.46 ) }
    dend_9 { pt3dadd( -99.3628, 24.9308, -59.5267, 0.46 ) }
    dend_9 { pt3dadd( -99.9838, 25.6273, -58.5665, 0.46 ) }
    dend_9 { pt3dadd( -100.804, 26.4192, -57.0896, 0.46 ) }
    dend_9 { pt3dadd( -101.267, 27.1271, -55.5477, 0.46 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 47/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -89.3421, 21.1251, -94.3341, 0.23 ) }
    dend_83 { pt3dadd( -90.6633, 22.302, -95.2655, 0.23 ) }
    dend_83 { pt3dadd( -92.6127, 24.0386, -96.6398, 0.23 ) }
    dend_83 { pt3dadd( -93.8296, 25.1226, -97.4978, 0.23 ) }
    dend_83 { pt3dadd( -94.9787, 26.1463, -98.3079, 0.23 ) }
    dend_83 { pt3dadd( -96.5591, 27.5541, -99.422, 0.23 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 53/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -89.3421, 21.1251, -94.3341, 0.23 ) }
    dend_82 { pt3dadd( -91.7538, 23.0502, -92.4472, 0.23 ) }
    dend_82 { pt3dadd( -94.7725, 25.4599, -90.0853, 0.46 ) }
    dend_82 { pt3dadd( -96.7895, 27.0699, -88.5073, 0.23 ) }
    dend_82 { pt3dadd( -100.067, 29.6863, -85.9428, 0.23 ) }
    dend_82 { pt3dadd( -101.657, 30.9555, -84.6989, 0.23 ) }
    dend_82 { pt3dadd( -102.985, 32.0157, -83.6597, 0.46 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 60/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -38.2472, 4.93825, -12.6443, 0.68 ) }
    dend_38 { pt3dadd( -39.6043, 4.7851, -13.9625, 0.68 ) }
    dend_38 { pt3dadd( -41.0651, 4.62023, -15.3816, 0.46 ) }
    dend_38 { pt3dadd( -42.751, 4.42997, -17.0193, 0.46 ) }
    dend_38 { pt3dadd( -44.5876, 4.2227, -18.8034, 0.46 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -38.2472, 4.93825, -12.6443, 0.46 ) }
    dend_37 { pt3dadd( -39.2659, 4.36894, -10.8829, 0.46 ) }
    dend_37 { pt3dadd( -40.1021, 3.92953, -9.6947, 0.68 ) }
    dend_37 { pt3dadd( -41.3033, 3.39056, -8.28974, 0.91 ) }
    dend_37 { pt3dadd( -42.8004, 2.76561, -6.9215, 0.91 ) }
    dend_37 { pt3dadd( -45.4093, 1.60212, -5.19913, 0.68 ) }
    dend_37 { pt3dadd( -46.6679, 1.00144, -4.57857, 0.68 ) }
    dend_37 { pt3dadd( -47.7119, 0.49975, -4.32861, 0.91 ) }
    dend_37 { pt3dadd( -49.1432, -0.27856, -4.2835, 0.46 ) }
    dend_37 { pt3dadd( -51.2117, -1.59879, -4.53589, 0.46 ) }
    dend_37 { pt3dadd( -53.4855, -3.32031, -4.98804, 0.46 ) }
    dend_37 { pt3dadd( -54.4306, -4.17455, -5.18741, 0.68 ) }
    dend_37 { pt3dadd( -55.3106, -5.09643, -5.30168, 0.68 ) }
    dend_37 { pt3dadd( -56.9129, -7.10279, -5.43267, 0.46 ) }
    dend_37 { pt3dadd( -57.9255, -8.50459, -5.43144, 1.14 ) }
    dend_37 { pt3dadd( -59.1529, -10.1966, -5.31223, 0.46 ) }
    dend_37 { pt3dadd( -60.3155, -11.7329, -5.16649, 0.91 ) }
    dend_37 { pt3dadd( -61.4425, -13.2175, -5.04965, 0.46 ) }
    dend_37 { pt3dadd( -63.15, -15.3798, -4.85657, 0.46 ) }
    dend_37 { pt3dadd( -64.3325, -16.7521, -4.73358, 0.68 ) }
    dend_37 { pt3dadd( -66.007, -18.5428, -4.61763, 0.46 ) }
    dend_37 { pt3dadd( -67.5016, -20.0258, -4.55637, 0.91 ) }
    dend_37 { pt3dadd( -70.0209, -22.3513, -4.43995, 0.23 ) }
    dend_37 { pt3dadd( -71.07, -23.2421, -4.35676, 0.68 ) }
    dend_37 { pt3dadd( -73.323, -24.9189, -4.05006, 0.23 ) }
    dend_37 { pt3dadd( -74.6522, -25.8319, -3.85627, 0.23 ) }
    dend_37 { pt3dadd( -75.445, -26.2694, -3.77344, 0.68 ) }
    dend_37 { pt3dadd( -76.5412, -26.7195, -3.70702, 0.23 ) }
    dend_37 { pt3dadd( -77.9911, -27.1537, -3.73918, 0.23 ) }
    dend_37 { pt3dadd( -79.6354, -27.622, -3.91994, 0.68 ) }
    dend_37 { pt3dadd( -81.4219, -28.0973, -4.31195, 0.23 ) }
    dend_37 { pt3dadd( -84.5044, -28.8859, -5.36946, 0.23 ) }
    dend_37 { pt3dadd( -85.1208, -29.0429, -5.65536, 0.68 ) }
    dend_37 { pt3dadd( -86.6349, -29.4587, -6.548, 0.46 ) }
    dend_37 { pt3dadd( -87.9035, -29.8278, -7.42088, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_37 { pt3dadd( -90.0449, -30.4846, -9.01128, 0.46 ) }
    dend_37 { pt3dadd( -91.7926, -30.9928, -10.2892, 0.91 ) }
    dend_37 { pt3dadd( -94.2032, -31.6579, -12.0018, 0.23 ) }
    dend_37 { pt3dadd( -96.0841, -32.1518, -13.3302, 0.68 ) }
    dend_37 { pt3dadd( -97.5512, -32.4897, -14.3238, 0.68 ) }
    dend_37 { pt3dadd( -98.4465, -32.6649, -14.9216, 0.23 ) }
    dend_37 { pt3dadd( -100.002, -32.9536, -15.895, 0.68 ) }
    dend_37 { pt3dadd( -102.193, -33.3994, -17.1372, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 8/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.50095, -28.3366, 17.6595, 0.46 ) }
    dend_19 { pt3dadd( -0.470864, -30.154, 17.7776, 0.46 ) }
    dend_19 { pt3dadd( 0.408555, -31.7429, 17.937, 0.46 ) }
    dend_19 { pt3dadd( 1.14766, -33.2182, 18.1164, 0.46 ) }
    dend_19 { pt3dadd( 1.9024, -34.7419, 18.2702, 0.68 ) }
    dend_19 { pt3dadd( 2.63953, -36.2002, 18.3785, 0.68 ) }
    dend_19 { pt3dadd( 3.64978, -38.2342, 18.5095, 0.68 ) }
    dend_19 { pt3dadd( 4.37384, -39.7015, 18.582, 0.68 ) }
    dend_19 { pt3dadd( 5.3515, -41.7317, 18.6163, 0.46 ) }
    dend_19 { pt3dadd( 6.27514, -43.5261, 18.5946, 0.46 ) }
    dend_19 { pt3dadd( 7.02543, -44.8985, 18.5603, 0.91 ) }
    dend_19 { pt3dadd( 7.93088, -46.5791, 18.4878, 0.91 ) }
    dend_19 { pt3dadd( 8.96847, -48.5895, 18.3778, 0.68 ) }
    dend_19 { pt3dadd( 10.3445, -51.6148, 18.159, 0.91 ) }
    dend_19 { pt3dadd( 10.896, -53.0895, 18.0537, 0.68 ) }
    dend_19 { pt3dadd( 11.2904, -54.6208, 17.9873, 0.46 ) }
    dend_19 { pt3dadd( 11.6158, -56.3151, 17.9382, 0.46 ) }
    dend_19 { pt3dadd( 11.8297, -57.6862, 17.8844, 0.46 ) }
    dend_19 { pt3dadd( 12.0428, -59.2807, 17.8324, 0.46 ) }
    dend_19 { pt3dadd( 12.2687, -60.8682, 17.728, 1.14 ) }
    dend_19 { pt3dadd( 12.6489, -63.0584, 17.486, 0.46 ) }
    dend_19 { pt3dadd( 13.2237, -65.576, 17.1365, 0.46 ) }
    dend_19 { pt3dadd( 13.5472, -66.6405, 16.9892, 0.68 ) }
    dend_19 { pt3dadd( 14.2595, -68.5561, 16.7564, 1.14 ) }
    dend_19 { pt3dadd( 14.8182, -69.9702, 16.6151, 0.68 ) }
    dend_19 { pt3dadd( 15.5226, -71.8199, 16.4453, 0.68 ) }
    dend_19 { pt3dadd( 16.0427, -73.3798, 16.3121, 0.91 ) }
    dend_19 { pt3dadd( 16.4702, -74.9093, 16.1948, 0.68 ) }
    dend_19 { pt3dadd( 17.1703, -77.7439, 16.0099, 0.68 ) }
    dend_19 { pt3dadd( 17.913, -81.2547, 15.8036, 0.91 ) }
    dend_19 { pt3dadd( 18.3638, -83.5327, 15.6888, 0.46 ) }
    dend_19 { pt3dadd( 18.7868, -85.8365, 15.5608, 0.91 ) }
    dend_19 { pt3dadd( 19.1917, -88.2568, 15.335, 0.23 ) }
    dend_19 { pt3dadd( 19.3439, -89.3194, 15.2064, 0.23 ) }
    dend_19 { pt3dadd( 19.5629, -91.1386, 14.9124, 0.68 ) }
    dend_19 { pt3dadd( 19.7615, -92.8085, 14.6001, 0.91 ) }
    dend_19 { pt3dadd( 19.9161, -93.9697, 14.348, 0.91 ) }
    dend_19 { pt3dadd( 20.2827, -96.2036, 13.8286, 0.46 ) }
    dend_19 { pt3dadd( 20.8141, -98.3045, 13.3136, 0.46 ) }
    dend_19 { pt3dadd( 21.5379, -100.418, 12.7519, 0.46 ) }
    dend_19 { pt3dadd( 22.0435, -101.55, 12.4693, 0.91 ) }
    dend_19 { pt3dadd( 23.0149, -103.411, 12.0201, 0.46 ) }
    dend_19 { pt3dadd( 24.0016, -105.101, 11.7157, 0.46 ) }
    dend_19 { pt3dadd( 25.514, -107.689, 11.4612, 0.46 ) }
    dend_19 { pt3dadd( 26.519, -109.432, 11.3852, 0.68 ) }
    dend_19 { pt3dadd( 28.0079, -112.069, 11.4399, 0.46 ) }
    dend_19 { pt3dadd( 28.5054, -112.993, 11.4985, 0.46 ) }
    dend_19 { pt3dadd( 29.9716, -115.863, 11.8113, 0.68 ) }
    dend_19 { pt3dadd( 31.116, -118.313, 12.1347, 0.68 ) }
    dend_19 { pt3dadd( 31.7289, -119.773, 12.3797, 0.68 ) }
    dend_19 { pt3dadd( 32.1984, -120.951, 12.6301, 1.14 ) }
    dend_19 { pt3dadd( 32.6362, -122.13, 12.8978, 1.14 ) }
    dend_19 { pt3dadd( 33.2261, -123.563, 13.2093, 0.23 ) }
    dend_19 { pt3dadd( 33.6496, -124.407, 13.3345, 0.23 ) }
    dend_19 { pt3dadd( 34.2627, -125.445, 13.4265, 0.46 ) }
    dend_19 { pt3dadd( 34.971, -126.622, 13.4912, 0.23 ) }
    dend_19 { pt3dadd( 35.6164, -127.728, 13.48, 0.68 ) }
    dend_19 { pt3dadd( 36.7299, -129.723, 13.3217, 0.23 ) }
    dend_19 { pt3dadd( 37.1878, -130.627, 13.2236, 0.46 ) }
    dend_19 { pt3dadd( 37.8304, -132.016, 13.0532, 0.23 ) }
    dend_19 { pt3dadd( 38.4423, -133.474, 12.8496, 0.68 ) }
    dend_19 { pt3dadd( 39.0793, -135.034, 12.5492, 0.23 ) }
    dend_19 { pt3dadd( 39.7247, -136.668, 12.219, 0.23 ) }
    dend_19 { pt3dadd( 40.1798, -137.945, 11.9486, 0.91 ) }
    dend_19 { pt3dadd( 40.7709, -139.692, 11.5503, 0.46 ) }
    dend_19 { pt3dadd( 41.3847, -141.589, 11.1353, 0.46 ) }
    dend_19 { pt3dadd( 41.9154, -143.427, 10.7506, 0.46 ) }
    dend_19 { pt3dadd( 42.346, -145.103, 10.518, 0.46 ) }
    dend_19 { pt3dadd( 42.8214, -147.115, 10.3489, 0.23 ) }
    dend_19 { pt3dadd( 43.1717, -148.804, 10.2965, 0.46 ) }
    dend_19 { pt3dadd( 43.4665, -150.726, 10.4013, 0.91 ) }
    dend_19 { pt3dadd( 43.6604, -152.717, 10.7581, 0.46 ) }
    dend_19 { pt3dadd( 43.7636, -154.622, 11.3506, 0.23 ) }
    dend_19 { pt3dadd( 43.7971, -155.499, 11.6953, 0.46 ) }
    dend_19 { pt3dadd( 43.9365, -157.358, 12.4721, 0.23 ) }
    dend_19 { pt3dadd( 44.0708, -158.544, 12.9545, 0.46 ) }
    dend_19 { pt3dadd( 44.3659, -160.396, 13.5995, 0.23 ) }
    dend_19 { pt3dadd( 44.7503, -162.333, 14.1704, 0.68 ) }
    dend_19 { pt3dadd( 45.3326, -164.723, 14.6493, 0.23 ) }
    dend_19 { pt3dadd( 46.1258, -167.34, 15.0528, 0.23 ) }
    dend_19 { pt3dadd( 46.4613, -168.22, 15.1256, 0.68 ) }
    dend_19 { pt3dadd( 47.0861, -169.68, 15.1496, 0.23 ) }
    dend_19 { pt3dadd( 47.4641, -170.568, 15.1329, 0.68 ) }
    dend_19 { pt3dadd( 48.1832, -172.405, 15.062, 0.46 ) }
    dend_19 { pt3dadd( 48.8309, -174.332, 15.0112, 0.68 ) }
    dend_19 { pt3dadd( 49.4977, -176.758, 15.0303, 0.23 ) }
    dend_19 { pt3dadd( 49.8689, -178.299, 15.0868, 0.46 ) }
    dend_19 { pt3dadd( 50.3093, -180.558, 15.1913, 0.23 ) }
    dend_19 { pt3dadd( 50.5187, -182.002, 15.253, 0.68 ) }
    dend_19 { pt3dadd( 50.5868, -183.062, 15.2999, 0.46 ) }
    dend_19 { pt3dadd( 50.5954, -184.038, 15.3278, 0.46 ) }
    dend_19 { pt3dadd( 50.5852, -185.633, 15.3883, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_19 { pt3dadd( 50.6098, -187.302, 15.4362, 0.23 ) }
    dend_19 { pt3dadd( 50.6753, -188.658, 15.496, 0.68 ) }
    dend_19 { pt3dadd( 50.8662, -191.725, 15.717, 0.23 ) }
    dend_19 { pt3dadd( 50.9537, -192.991, 15.8417, 0.68 ) }
    dend_19 { pt3dadd( 51.101, -194.871, 16.0802, 0.23 ) }
    dend_19 { pt3dadd( 51.1515, -195.485, 16.1761, 0.46 ) }
    dend_19 { pt3dadd( 51.3909, -197.684, 16.6063, 0.23 ) }
    dend_19 { pt3dadd( 51.5099, -198.633, 16.7976, 0.46 ) }
    dend_19 { pt3dadd( 51.8535, -200.814, 17.2642, 0.68 ) }
    dend_19 { pt3dadd( 52.1016, -202.327, 17.5824, 0.23 ) }
    dend_19 { pt3dadd( 52.2118, -202.973, 17.7152, 0.46 ) }
    dend_19 { pt3dadd( 52.761, -206.036, 18.3206, 0.23 ) }
    dend_19 { pt3dadd( 53.0602, -207.631, 18.6224, 0.23 ) }
    dend_19 { pt3dadd( 53.3652, -209.2, 18.926, 0.68 ) }
    dend_19 { pt3dadd( 53.7434, -211.083, 19.2998, 0.23 ) }
    dend_19 { pt3dadd( 54.1684, -213.203, 19.7201, 0.23 ) }
    dend_19 { pt3dadd( 54.2995, -213.814, 19.8445, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 17/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -1.50095, -28.3366, 17.6595, 0.68 ) }
    dend_18 { pt3dadd( -0.489061, -29.0143, 19.7094, 0.68 ) }
    dend_18 { pt3dadd( 0.571279, -29.706, 21.6041, 0.68 ) }
    dend_18 { pt3dadd( 0.904178, -29.9404, 22.1614, 0.68 ) }
    dend_18 { pt3dadd( 2.18842, -30.9039, 24.2749, 0.68 ) }
    dend_18 { pt3dadd( 3.69619, -32.2297, 26.8395, 0.68 ) }
    dend_18 { pt3dadd( 5.20242, -33.8269, 29.553, 0.68 ) }
    dend_18 { pt3dadd( 6.35449, -35.178, 31.643, 0.68 ) }
    dend_18 { pt3dadd( 7.22008, -36.3309, 33.2406, 0.46 ) }
    dend_18 { pt3dadd( 7.66771, -36.9742, 34.1072, 0.91 ) }
    dend_18 { pt3dadd( 8.78632, -38.7093, 36.3516, 0.91 ) }
    dend_18 { pt3dadd( 9.8885, -40.4699, 38.5481, 0.46 ) }
    dend_18 { pt3dadd( 10.4615, -41.3514, 39.6922, 0.23 ) }
    dend_18 { pt3dadd( 11.4908, -42.6601, 41.5721, 0.23 ) }
    dend_18 { pt3dadd( 12.5418, -43.593, 43.1368, 0.46 ) }
    dend_18 { pt3dadd( 13.4862, -44.1883, 44.2443, 0.46 ) }
    dend_18 { pt3dadd( 14.8536, -44.8562, 45.5746, 0.23 ) }
    dend_18 { pt3dadd( 15.6616, -45.2056, 46.276, 0.23 ) }
    dend_18 { pt3dadd( 17.7985, -46.1287, 48.0244, 0.46 ) }
    dend_18 { pt3dadd( 20.0579, -47.1526, 49.8593, 0.46 ) }
    dend_18 { pt3dadd( 22.2883, -48.3322, 51.6728, 0.68 ) }
    dend_18 { pt3dadd( 23.5636, -49.0694, 52.7331, 0.23 ) }
    dend_18 { pt3dadd( 24.2056, -49.4844, 53.2579, 0.23 ) }
    dend_18 { pt3dadd( 25.2859, -50.2238, 54.1095, 0.68 ) }
    dend_18 { pt3dadd( 27.3533, -51.7089, 55.6718, 0.23 ) }
    dend_18 { pt3dadd( 28.5718, -52.6564, 56.6066, 0.23 ) }
    dend_18 { pt3dadd( 30.2397, -53.9505, 57.8289, 0.46 ) }
    dend_18 { pt3dadd( 31.4476, -54.8388, 58.6368, 0.46 ) }
    dend_18 { pt3dadd( 32.7695, -55.7892, 59.4718, 0.46 ) }
    dend_18 { pt3dadd( 34.8769, -57.2121, 60.7244, 0.46 ) }
    dend_18 { pt3dadd( 37.4937, -58.8738, 62.1962, 0.46 ) }
    dend_18 { pt3dadd( 38.2909, -59.3576, 62.6359, 1.14 ) }
    dend_18 { pt3dadd( 40.1106, -60.4326, 63.6308, 0.91 ) }
    dend_18 { pt3dadd( 41.6492, -61.3162, 64.533, 0.46 ) }
    dend_18 { pt3dadd( 43.8561, -62.5941, 65.8858, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 52/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 54.2995, -213.814, 19.8445, 0.46 ) }
    dend_21 { pt3dadd( 54.8414, -213.299, 21.268, 0.46 ) }
    dend_21 { pt3dadd( 55.6961, -212.486, 23.5134, 0.23 ) }
    dend_21 { pt3dadd( 56.1504, -212.054, 24.7067, 0.23 ) }
    dend_21 { pt3dadd( 56.9048, -211.337, 26.6887, 0.23 ) }
    dend_21 { pt3dadd( 57.7729, -210.511, 28.969, 0.23 ) }
    dend_21 { pt3dadd( 58.4869, -209.833, 30.8447, 0.46 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 59/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 54.2995, -213.814, 19.8445, 0.23 ) }
    dend_20 { pt3dadd( 54.1133, -215.535, 20.1492, 0.23 ) }
    dend_20 { pt3dadd( 54.0097, -216.728, 20.3354, 0.46 ) }
    dend_20 { pt3dadd( 53.883, -218.145, 20.5226, 0.23 ) }
    dend_20 { pt3dadd( 53.8008, -219.335, 20.5983, 0.23 ) }
    dend_20 { pt3dadd( 53.7652, -220.171, 20.6087, 0.46 ) }
    dend_20 { pt3dadd( 53.7541, -222.003, 20.6105, 0.23 ) }
    dend_20 { pt3dadd( 53.8016, -223.206, 20.5709, 0.23 ) }
    dend_20 { pt3dadd( 53.8808, -224.278, 20.5235, 0.46 ) }
    dend_20 { pt3dadd( 54.0815, -226.448, 20.4715, 0.23 ) }
    dend_20 { pt3dadd( 54.2357, -228.007, 20.4577, 0.23 ) }
    dend_20 { pt3dadd( 54.4163, -229.7, 20.4319, 0.68 ) }
    dend_20 { pt3dadd( 54.6952, -231.756, 20.368, 0.23 ) }
    dend_20 { pt3dadd( 54.8875, -232.959, 20.2954, 0.68 ) }
    dend_20 { pt3dadd( 55.1105, -234.273, 20.1911, 0.23 ) }
    dend_20 { pt3dadd( 55.2718, -235.395, 20.0291, 0.46 ) }
    dend_20 { pt3dadd( 55.5726, -237.377, 19.4769, 0.23 ) }
    dend_20 { pt3dadd( 55.8452, -238.746, 18.9168, 0.46 ) }
    dend_20 { pt3dadd( 56.2667, -240.34, 18.1385, 0.23 ) }
    dend_20 { pt3dadd( 56.4505, -240.969, 17.815, 0.68 ) }
    dend_20 { pt3dadd( 57.122, -243.303, 16.7645, 0.23 ) }
    dend_20 { pt3dadd( 57.8156, -245.851, 15.8283, 0.23 ) }
    dend_20 { pt3dadd( 58.3442, -247.878, 15.2536, 0.23 ) }
    dend_20 { pt3dadd( 58.8887, -249.99, 14.7182, 0.23 ) }
    dend_20 { pt3dadd( 59.1916, -251.145, 14.4685, 0.23 ) }
    dend_20 { pt3dadd( 60.5286, -256.158, 13.6092, 0.23 ) }
    dend_20 { pt3dadd( 61.0314, -258.114, 13.4484, 0.23 ) }
    dend_20 { pt3dadd( 61.2409, -259.213, 13.4516, 0.68 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_69, dend_66, dend_55, dend_44, dend_25, dend_0, dend_77, dend_70, dend_68, dend_67, dend_57, dend_56, dend_52, dend_45, dend_39, dend_26, dend_6, dend_1, dend_79, dend_78, dend_76, dend_71, dend_59, dend_58, dend_54, dend_53, dend_49, dend_46, dend_41, dend_40, dend_32, dend_27, dend_14, dend_7, dend_3, dend_2, dend_85, dend_80, dend_73, dend_72, dend_63, dend_60, dend_51, dend_50, dend_48, dend_47, dend_43, dend_42, dend_34, dend_33, dend_31, dend_28, dend_22, dend_15, dend_11, dend_8, dend_5, dend_4, dend_87, dend_86, dend_84, dend_81, dend_75, dend_74, dend_65, dend_64, dend_62, dend_61, dend_36, dend_35, dend_30, dend_29, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_10, dend_9, dend_83, dend_82, dend_38, dend_37, dend_19, dend_18, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    dend_69 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_69, dend_66, dend_55, dend_44, dend_25, dend_0, dend_77, dend_70, dend_68, dend_67, dend_57, dend_56, dend_52, dend_45, dend_39, dend_26, dend_6, dend_1, dend_79, dend_78, dend_76, dend_71, dend_59, dend_58, dend_54, dend_53, dend_49, dend_46, dend_41, dend_40, dend_32, dend_27, dend_14, dend_7, dend_3, dend_2, dend_85, dend_80, dend_73, dend_72, dend_63, dend_60, dend_51, dend_50, dend_48, dend_47, dend_43, dend_42, dend_34, dend_33, dend_31, dend_28, dend_22, dend_15, dend_11, dend_8, dend_5, dend_4, dend_87, dend_86, dend_84, dend_81, dend_75, dend_74, dend_65, dend_64, dend_62, dend_61, dend_36, dend_35, dend_30, dend_29, dend_24, dend_23, dend_17, dend_16, dend_13, dend_12, dend_10, dend_9, dend_83, dend_82, dend_38, dend_37, dend_19, dend_18, dend_21, dend_20]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_77 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_66 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_68 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_56 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_78 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_76 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_85 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_80 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_60 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_43 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_42 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_33 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_11 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_8 OneSecGrp_SectionRef_59.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_5 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_81 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_74 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_65 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_35 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_30 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_10 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_37 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_19 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_18 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_20 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_69 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_25 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_26 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_6 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_44 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_39 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_7 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_77 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_45 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_32 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_40 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_55 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_70 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_15 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_27 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_49 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_34 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_17 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_71 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_79 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_2 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_57 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_36 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_72 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_50 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_58 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_51 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_31 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_38 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_16 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_73 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_29 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_59 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_75 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_67 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_24 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_23 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_12 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_84 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_53 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_63 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_64 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_54 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_13 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_4 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_87 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_61 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_62 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_83 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_86 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_82 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_48 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_9 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_21 OneSecGrp_SectionRef_90.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_69, dend_69, dend_69, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_26, dend_26, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_66 nseg = 3
    dend_68 nseg = 5
    dend_56 nseg = 5
    dend_52 nseg = 3
    dend_78 nseg = 3
    dend_76 nseg = 3
    dend_46 nseg = 5
    dend_3 nseg = 5
    dend_85 nseg = 5
    dend_80 nseg = 3
    dend_60 nseg = 3
    dend_43 nseg = 5
    dend_42 nseg = 3
    dend_33 nseg = 5
    dend_22 nseg = 3
    dend_11 nseg = 3
    dend_8 nseg = 7
    dend_5 nseg = 5
    dend_81 nseg = 3
    dend_74 nseg = 3
    dend_65 nseg = 5
    dend_35 nseg = 5
    dend_30 nseg = 3
    dend_10 nseg = 3
    dend_37 nseg = 5
    dend_19 nseg = 9
    dend_18 nseg = 3
    dend_20 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_DLAC_d51b8a96ed_0_0


